staticProblems = [
  {'history': 'Let s be some string consisting of symbols " 0" or " 1" . Let\' '
             's call a string t a substring of string s, if there exists such '
             "number 1≤l≤| s| −| t| + 1 that t= slsl+ 1. . . sl+ | t| −1. Let' "
             's call a substring t of string s unique, if there exist only one '
             'such l. For example, let s= " 1010111" . A string t= " 010" is '
             'an unique substring of s, because l= 2 is the only one suitable '
             'number. But, for example t= " 10" isn\' t a unique substring of '
             's, because l= 1 and l= 3 are suitable. And for example t= " 00" '
             "at all isn' t a substring of s, because there is no suitable l. "
             'Today Vasya solved the following problem at the informatics '
             'lesson: given a string consisting of symbols " 0" and " 1" , the '
             'task is to find the length of its minimal unique substring. He '
             'has written a solution to this problem and wants to test it. He '
             'is asking you to help him. You are given 2 positive integers n '
             'and k, such that ( nmod, where ( x 2) is operation of taking '
             'remainder of x by dividing on 2. Find any string s consisting of '
             'n symbols " 0" or " 1" , such that the length of its minimal '
             'unique substring is equal to k.',
  'input': 'The first line contains two integers n and k, separated by spaces '
           '( 1 ≤k ≤n ≤100 000, ( k 2) = ( n 2) ) .',
  'note': "In the first test, it' s easy to see, that the only unique "
          'substring of string s = " 1111" is all string s, which has length '
          '4. In the second test a string s = " 01010" has minimal unique '
          'substring t = " 101" , which has length 3. In the third test a '
          'string s = " 1011011" has minimal unique substring t = " 110" , '
          'which has length 3.',
  'output': 'Print a string s of length n, consisting of symbols " 0" and " 1" '
            '. Minimal length of the unique substring of s should be equal to '
            'k. You can find any suitable string. It is guaranteed, that there '
            'exists at least one such string.',
  'title': 'The minimal unique substring',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1158/B'},
 {'history': 'During a normal walk in the forest, Katie has stumbled upon a '
             'mysterious code! However, the mysterious code had some '
             'characters unreadable. She has written down this code as a '
             'string c consisting of lowercase English characters and '
             'asterisks ( " * " ) , where each of the asterisks denotes an '
             'unreadable character. Excited with her discovery, Katie has '
             'decided to recover the unreadable characters by replacing each '
             'asterisk with arbitrary lowercase English letter ( different '
             'asterisks might be replaced with different letters) . Katie has '
             'a favorite string s and a not- so- favorite string t and she '
             'would love to recover the mysterious code so that it has as many '
             'occurrences of s as possible and as little occurrences of t as '
             "possible. Formally, let' s denote f( x, y) as the number of "
             'occurrences of y in x ( for example, f( aababa, ab) = 2) . Katie '
             'wants to recover the code c′ conforming to the original c, such '
             'that f( c′, s) −f( c′, t) is largest possible. However, Katie is '
             'not very good at recovering codes in general, so she would like '
             'you to help her out.',
  'input': 'The first line contains string c ( 1≤| c| ≤1000) — the mysterious '
           'code . It is guaranteed that c consists of lowercase English '
           'characters and asterisks " * " only. The second and third line '
           'contain strings s and t respectively ( 1≤| s| , | t| ≤50, s= ̸t) . '
           'It is guaranteed that s and t consist of lowercase English '
           'characters only.',
  'note': 'In the first example, for c′ equal to " katie" f( c′, s) = 1 and f( '
          'c′, t) = 0, which makes f( c′, s) −f( c′, t) = 1 which is the '
          'largest possible. In the second example, the only c′ conforming to '
          'the given c is " caat" . The corresponding f( c′, s) −f( c′, t) = '
          '1−2= −1. In the third example, there are multiple ways to recover '
          'the code such that f( c′, s) −f( c′, t) is largest possible, for '
          'example " aaa" , " aac" , or even " zaz" . The value of f( c′, s) '
          '−f( c′, t) = 0 for all of these recovered codes. In the fourth '
          'example, the optimal recovered code c′ would be " ccc" . The '
          'corresponding f( c′, s) −f( c′, t) = 2.',
  'output': 'Print a single integer — the largest possible value of f( c′, s) '
            '−f( c′, t) of the recovered code.',
  'title': 'Mysterious Code',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1163/D'},
 {'history': 'A telephone number is a sequence of exactly 11 digits, where the '
             'first digit is 8. For example, the sequence 80011223388 is a '
             'telephone number, but the sequences 70011223388 and '
             '80000011223388 are not. You are given a string s of length n, '
             'consisting of digits. In one operation you can delete any '
             'character from string s. For example, it is possible to obtain '
             'strings 112, 111 or 121 from string 1121. You need to determine '
             'whether there is such a sequence of operations ( possibly empty) '
             ', after which the string s becomes a telephone number.',
  'input': 'The first line contains one integer t ( 1≤t≤100) — the number of '
           'test cases. The first line of each test case contains one integer '
           'n ( 1≤n≤100) — the length of string s. The second line of each '
           'test case contains the string s ( | s| = n) consisting of digits.',
  'note': 'In the first test case you need to delete the first and the third '
          'digits. Then the string 7818005553535 becomes 88005553535.',
  'output': 'For each test print one line. If there is a sequence of '
            'operations, after which s becomes a telephone number, print YES. '
            'Otherwise, print NO.',
  'title': 'Telephone Number',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1167/A'},
 {'history': 'Everyone knows that two consecutive ( adjacent) " minus" signs '
             'can be replaced with a single " plus" sign. You are given the '
             'string s, consisting of " plus" and " minus" signs only. Zero or '
             'more operations can be performed with it. In each operation you '
             'can choose any two adjacent " minus" signs, and replace them '
             'with a single " plus" sign. Thus, in one operation, the length '
             'of the string is reduced by exactly 1. You are given two strings '
             's and t. Determine if you can use 0 or more operations to get '
             'the string t from the string s.',
  'input': 'The first line of the input contains an integer k ( 1≤k≤105) , '
           'denoting the number of test cases in the input. The following '
           'lines contain descriptions of the test sets, each set consists of '
           'two lines. First comes the line containing s ( the length of the '
           'line s does not exceed 2⋅105) , then comes the line containing t ( '
           'the length of the line t does not exceed 2⋅105) . The lines s and '
           't are non- empty, and they contain only " plus" and " minus" '
           'signs. The sum of the lengths of lines s over all test cases in '
           'the input does not exceed 2⋅105. Similarly, the sum of the lengths '
           'of lines t over all test cases in the input does not exceed 2⋅105.',
  'note': ' ',
  'output': 'Print k lines: the i- th line must contain YES if the answer to '
            'the i- th test case is positive, otherwise NO. Print YES and NO '
            'using uppercase letters only.',
  'title': 'Minus and Minus Give Plus',
  'topics': ['implementation', 'strings'],
  'url': 'https://codeforces.com/problemset/problem/1170/C'},
 {'history': 'Recall that string a is a subsequence of a string b if a can be '
             'obtained from b by deletion of several ( possibly zero or all) '
             'characters. For example, for the string a= " wowwo" , the '
             'following strings are subsequences: " wowwo" , " wowo" , " oo" , '
             '" wow" , " " , and others, but the following are not '
             'subsequences: " owoo" , " owwwo" , " ooo" . The wow factor of a '
             'string is the number of its subsequences equal to the word " '
             'wow" . Bob wants to write a string that has a large wow factor. '
             'However, the " w" key on his keyboard is broken, so he types two '
             '" v" s instead. Little did he realise that he may have '
             'introduced more " w" s than he thought. Consider for instance '
             'the string " ww" . Bob would type it as " vvvv" , but this '
             'string actually contains three occurrences of " w" : " vvvv" " '
             'vvvv" " vvvv" For example, the wow factor of the word " vvvovvv" '
             'equals to four because there are four wows: " vvvovvv" " '
             'vvvovvv" " vvvovvv" " vvvovvv" Note that the subsequence " '
             'vvvovvv" does not count towards the wow factor, as the " v" s '
             'have to be consecutive. For a given string s, compute and output '
             'its wow factor. Note that it is not guaranteed that it is '
             'possible to get s from another string replacing " w" with " vv" '
             '. For example, s can be equal to " vov" .',
  'input': 'The input contains a single non- empty string s, consisting only '
           'of characters " v" and " o" . The length of s is at most 106.',
  'note': 'The first example is explained in the legend.',
  'output': 'Output a single integer, the wow factor of s.',
  'title': 'WOW Factor',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1178/B'},
 {'history': 'Alice bought a Congo Prime Video subscription and was watching a '
             "documentary on the archaeological findings from Factor' s Island "
             'on Loch Katrine in Scotland. The archaeologists found a book '
             'whose age and origin are unknown. Perhaps Alice can make some '
             'sense of it? The book contains a single string of characters " '
             'a" , " b" and " c" . It has been pointed out that no two '
             'consecutive characters are the same. It has also been '
             'conjectured that the string contains an unusually long '
             'subsequence that reads the same from both sides. Help Alice '
             'verify this by finding such subsequence that contains at least '
             'half of the characters of the original string, rounded down. '
             "Note that you don' t have to maximise the length of it. A string "
             'a is a subsequence of a string b if a can be obtained from b by '
             'deletion of several ( possibly, zero or all) characters.',
  'input': 'The input consists of a single string s ( 2≤| s| ≤106) . The '
           'string s consists only of characters " a" , " b" , " c" . It is '
           'guaranteed that no two consecutive characters are equal.',
  'note': 'In the first example, other valid answers include " cacac" , " '
          'caac" , " aca" and " ccc" .',
  'output': 'Output a palindrome t that is a subsequence of s and | t| ≥⌊| s| '
            '2⌋. If there are multiple solutions, you may print any of them. '
            "You don' t have to maximise the length of t. If there are no "
            'solutions, output a string " IMPOSSIBLE" ( quotes for clarity) .',
  'title': 'Archaeology',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1178/E'},
 {'history': 'Dima worked all day and wrote down on a long paper strip his '
             'favorite number n consisting of l digits. Unfortunately, the '
             "strip turned out to be so long that it didn' t fit in the Dima' "
             's bookshelf. To solve the issue, Dima decided to split the strip '
             'into two non- empty parts so that each of them contains a '
             'positive integer without leading zeros. After that he will '
             'compute the sum of the two integers and write it down on a new '
             'strip. Dima wants the resulting integer to be as small as '
             'possible, because it increases the chances that the sum will fit '
             'it in the bookshelf. Help Dima decide what is the minimum sum he '
             'can obtain.',
  'input': 'The first line contains a single integer l ( 2≤l≤100000) — the '
           "length of the Dima' s favorite number. The second line contains "
           "the positive integer n initially written on the strip: the Dima' s "
           'favorite number. The integer n consists of exactly l digits and it '
           'does not contain leading zeros. Dima guarantees, that there is at '
           'least one valid way to split the strip.',
  'note': 'In the first example Dima can split the number 1234567 into '
          'integers 1234 and 567. Their sum is 1801. In the second example '
          'Dima can split the number 101 into integers 10 and 1. Their sum is '
          '11. Note that it is impossible to split the strip into " 1" and " '
          '01" since the numbers can\' t start with zeros.',
  'output': 'Print a single integer — the smallest number Dima can obtain.',
  'title': 'Split a Number',
  'topics': ['implementation', 'strings'],
  'url': 'https://codeforces.com/problemset/problem/1181/B'},
 {'history': 'You have a given picture with size w×h. Determine if the given '
             'picture has a single " + " shape or not. A " + " shape is '
             'described below: A " + " shape has one center nonempty cell. '
             'There should be some ( at least one) consecutive non- empty '
             'cells in each direction ( left, right, up, down) from the '
             'center. In other words, there should be a ray in each direction. '
             'All other cells are empty. Find out if the given picture has '
             'single " + " shape.',
  'input': 'The first line contains two integers h and w ( 1≤h, w≤500) — the '
           'height and width of the picture. The i- th of the next h lines '
           'contains string si of length w consisting " . " and " * " where " '
           '. " denotes the empty space and " * " denotes the non- empty '
           'space.',
  'note': 'In the first example, the given picture contains one " + " . In the '
          'second example, two vertical branches are located in a different '
          'column. In the third example, there is a dot outside of the shape. '
          'In the fourth example, the width of the two vertical branches is 2. '
          'In the fifth example, there are two shapes. In the sixth example, '
          'there is an empty space inside of the shape.',
  'output': 'If the given picture satisfies all conditions, print " YES" . '
            'Otherwise, print " NO" . You can output each letter in any case ( '
            'upper or lower) .',
  'title': 'Plus from Picture',
  'topics': ['implementation', 'strings'],
  'url': 'https://codeforces.com/problemset/problem/1182/B'},
 {'history': 'You are given n words, each of which consists of lowercase '
             'alphabet letters. Each word contains at least one vowel. You are '
             'going to choose some of the given words and make as many '
             'beautiful lyrics as possible. Each lyric consists of two lines. '
             'Each line consists of two words separated by whitespace. A lyric '
             'is beautiful if and only if it satisfies all conditions below. '
             'The number of vowels in the first word of the first line is the '
             'same as the number of vowels in the first word of the second '
             'line. The number of vowels in the second word of the first line '
             'is the same as the number of vowels in the second word of the '
             'second line. The last vowel of the first line is the same as the '
             'last vowel of the second line. Note that there may be consonants '
             'after the vowel. Also, letters " a" , " e" , " o" , " i" , and " '
             'u" are vowels. Note that " y" is never vowel. For example of a '
             'beautiful lyric, " hello hellooowww" " whatsup yowowowow" is a '
             'beautiful lyric because there are two vowels each in " hello" '
             'and " whatsup" , four vowels each in " hellooowww" and " '
             'yowowowow" ( keep in mind that " y" is not a vowel) , and the '
             'last vowel of each line is " o" . For example of a not beautiful '
             'lyric, " hey man" " iam mcdic" is not a beautiful lyric because '
             '" hey" and " iam" don\' t have same number of vowels and the '
             'last vowels of two lines are different ( " a" in the first and " '
             'i" in the second) . How many beautiful lyrics can you write from '
             'given words? Note that you cannot use a word more times than it '
             'is given to you. For example, if a word is given three times, '
             'you can use it at most three times.',
  'input': 'The first line contains single integer n ( 1≤n≤105) — the number '
           'of words. The i- th of the next n lines contains string si '
           'consisting lowercase alphabet letters — the i- th word. It is '
           'guaranteed that the sum of the total word length is equal or less '
           'than 106. Each word contains at least one vowel.',
  'note': 'In the first example, those beautiful lyrics are one of the '
          "possible answers. Let' s look at the first lyric on the sample "
          'output of the first example. " about proud hooray round" forms a '
          'beautiful lyric because " about" and " hooray" have same number of '
          'vowels, " proud" and " round" have same number of vowels, and both '
          'lines have same last vowel. On the other hand, you cannot form any '
          'beautiful lyric with the word " codeforces" . In the second '
          'example, you cannot form any beautiful lyric from given words. In '
          'the third example, you can use the word " same" up to three times.',
  'output': 'In the first line, print m — the number of maximum possible '
            'beautiful lyrics. In next 2m lines, print m beautiful lyrics ( '
            'two lines per lyric) . If there are multiple answers, print any.',
  'title': 'Beautiful Lyrics',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1182/C'},
 {'history': 'The only difference between the easy and the hard versions is '
             'constraints. A subsequence is a string that can be derived from '
             'another string by deleting some or no symbols without changing '
             'the order of the remaining symbols. Characters to be deleted are '
             'not required to go successively, there can be any gaps between '
             'them. For example, for the string " abaca" the following strings '
             'are subsequences: " abaca" , " aba" , " aaa" , " a" and " " ( '
             'empty string) . But the following strings are not subsequences: '
             '" aabaca" , " cb" and " bcaa" . You are given a string s '
             'consisting of n lowercase Latin letters. In one move you can '
             'take any subsequence t of the given string and add it to the set '
             "S. The set S can' t contain duplicates. This move costs n−| t| , "
             'where | t| is the length of the added subsequence ( i. e. the '
             'price equals to the number of the deleted characters) . Your '
             'task is to find out the minimum possible total cost to obtain a '
             'set S of size k or report that it is impossible to do so.',
  'input': 'The first line of the input contains two integers n and k ( '
           '1≤n≤100, 1≤k≤1012) — the length of the string and the size of the '
           'set, correspondingly. The second line of the input contains a '
           'string s consisting of n lowercase Latin letters.',
  'note': 'In the first example we can generate S = " asdf" , " asd" , " adf" '
          ', " asf" , " sdf" . The cost of the first element in S is 0 and the '
          'cost of the others is 1. So the total cost of S is 4.',
  'output': 'Print one integer — if it is impossible to obtain the set S of '
            'size k, print - 1. Otherwise, print the minimum possible total '
            'cost to do it.',
  'title': 'Subsequences (hard version)',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1183/H'},
 {'history': 'Methodius received an email from his friend Polycarp. However, '
             "Polycarp' s keyboard is broken, so pressing a key on it once may "
             'cause the corresponding symbol to appear more than once ( if you '
             'press a key on a regular keyboard, it prints exactly one symbol) '
             '. For example, as a result of typing the word " hello" , the '
             'following words could be printed: " hello" , " hhhhello" , " '
             'hheeeellllooo" , but the following could not be printed: " hell" '
             ', " helo" , " hhllllooo" . Note, that when you press a key, the '
             'corresponding symbol must appear ( possibly, more than once) . '
             'The keyboard is broken in a random manner, it means that '
             'pressing the same key you can get the different number of '
             'letters in the result. For each word in the letter, Methodius '
             'has guessed what word Polycarp actually wanted to write, but he '
             'is not sure about it, so he asks you to help him. You are given '
             'a list of pairs of words. For each pair, determine if the second '
             "word could be printed by typing the first one on Polycarp' s "
             'keyboard.',
  'input': 'The first line of the input contains one integer n ( 1≤n≤105) — '
           'the number of pairs to check. Further input contains n '
           'descriptions of pairs. The first line of each description contains '
           'a single non- empty word s consisting of lowercase Latin letters. '
           'The second line of the description contains a single non- empty '
           'word t consisting of lowercase Latin letters. The lengths of both '
           'strings are not greater than 106. It is guaranteed that the total '
           'length of all words s in the input is not greater than 106. Also, '
           'it is guaranteed that the total length of all words t in the input '
           'is not greater than 106.',
  'note': ' ',
  'output': 'Output n lines. In the i- th line for the i- th pair of words s '
            'and t print YES if the word t could be printed by typing the word '
            's. Otherwise, print NO.',
  'title': 'Email from Polycarp',
  'topics': ['implementation', 'strings'],
  'url': 'https://codeforces.com/problemset/problem/1185/B'},
 {'history': 'The letters shop showcase is a string s, consisting of n '
             'lowercase Latin letters. As the name tells, letters are sold in '
             'the shop. Letters are sold one by one from the leftmost to the '
             'rightmost. Any customer can only buy some prefix of letters from '
             'the string s. There are m friends, the i- th of them is named '
             'ti. Each of them is planning to estimate the following value: '
             'how many letters ( the length of the shortest prefix) would s/ '
             'he need to buy if s/ he wanted to construct her/ his name of '
             'bought letters. The name can be constructed if each letter is '
             'presented in the equal or greater amount. For example, for s= " '
             'arrayhead" and ti= " arya" 5 letters have to be bought ( " '
             'arrayhead" ) . For example, for s= " arrayhead" and ti= " harry" '
             '6 letters have to be bought ( " arrayhead" ) . For example, for '
             's= " arrayhead" and ti= " ray" 5 letters have to be bought ( " '
             'arrayhead" ) . For example, for s= " arrayhead" and ti= " r" 2 '
             'letters have to be bought ( " arrayhead" ) . For example, for s= '
             '" arrayhead" and ti= " areahydra" all 9 letters have to be '
             'bought ( " arrayhead" ) . It is guaranteed that every friend can '
             'construct her/ his name using the letters from the string s. '
             'Note that the values for friends are independent, friends are '
             'only estimating them but not actually buying the letters.',
  'input': 'The first line contains one integer n ( 1≤n≤2⋅105) — the length of '
           'showcase string s. The second line contains string s, consisting '
           'of exactly n lowercase Latin letters. The third line contains one '
           'integer m ( 1≤m≤5⋅104) — the number of friends. The i- th of the '
           'next m lines contains ti ( 1≤| ti| ≤2⋅105) — the name of the i- th '
           'friend. It is guaranteed that m∑i= 1| ti| ≤2⋅105.',
  'note': ' ',
  'output': 'For each friend print the length of the shortest prefix of '
            'letters from s s/ he would need to buy to be able to construct '
            'her/ his name of them. The name can be constructed if each letter '
            'is presented in the equal or greater amount. It is guaranteed '
            'that every friend can construct her/ his name using the letters '
            'from the string s.',
  'title': 'Letters Shop',
  'topics': ['implementation', 'strings'],
  'url': 'https://codeforces.com/problemset/problem/1187/B'},
 {'history': 'After playing Neo in the legendary " Matrix" trilogy, Keanu '
             'Reeves started doubting himself: maybe we really live in virtual '
             'reality? To find if this is true, he needs to solve the '
             "following problem. Let' s call a string consisting of only "
             'zeroes and ones good if it contains different numbers of zeroes '
             'and ones. For example, 1, 101, 0000 are good, while 01, 1001, '
             'and 111000 are not good. We are given a string s of length n '
             'consisting of only zeroes and ones. We need to cut s into '
             'minimal possible number of substrings s1, s2, . . . , sk such '
             'that all of them are good. More formally, we have to find '
             'minimal by number of strings sequence of good strings s1, s2, . '
             '. . , sk such that their concatenation ( joining) equals s, i. '
             'e. s1+ s2+ ⋯+ sk= s. For example, cuttings 110010 into 110 and '
             '010 or into 11 and 0010 are valid, as 110, 010, 11, 0010 are all '
             "good, and we can' t cut 110010 to the smaller number of "
             "substrings as 110010 isn' t good itself. At the same time, "
             "cutting of 110010 into 1100 and 10 isn' t valid as both strings "
             "aren' t good. Also, cutting of 110010 into 1, 1, 0010 isn' t "
             "valid, as it isn' t minimal, even though all 3 strings are good. "
             'Can you help Keanu? We can show that the solution always exists. '
             'If there are multiple optimal answers, print any.',
  'input': 'The first line of the input contains a single integer n ( 1≤n≤100) '
           '— the length of the string s. The second line contains the string '
           's of length n consisting only from zeros and ones.',
  'note': "In the first example, the string 1 wasn' t cut at all. As it is "
          'good, the condition is satisfied. In the second example, 1 and 0 '
          "both are good. As 10 isn' t good, the answer is indeed minimal. In "
          "the third example, 100 and 011 both are good. As 100011 isn' t "
          'good, the answer is indeed minimal.',
  'output': 'In the first line, output a single integer k ( 1≤k) — a minimal '
            'number of strings you have cut s into. In the second line, output '
            'k strings s1, s2, . . . , sk separated with spaces. The length of '
            'each string has to be positive. Their concatenation has to be '
            'equal to s and all of them have to be good. If there are multiple '
            'answers, print any.',
  'title': 'Keanu Reeves',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1189/A'},
 {'history': 'You are given three strings s, t and p consisting of lowercase '
             'Latin letters. You may perform any number ( possibly, zero) '
             'operations on these strings. During each operation you choose '
             'any character from p, erase it from p and insert it into string '
             's ( you may insert this character anywhere you want: in the '
             'beginning of s, in the end or between any two consecutive '
             'characters) . For example, if p is aba, and s is de, then the '
             'following outcomes are possible ( the character we erase from p '
             'and insert into s is highlighted) : aba → ba, de → ade; aba → '
             'ba, de → dae; aba → ba, de → dea; aba → aa, de → bde; aba → aa, '
             'de → dbe; aba → aa, de → deb; aba → ab, de → ade; aba → ab, de → '
             'dae; aba → ab, de → dea; Your goal is to perform several ( maybe '
             'zero) operations so that s becomes equal to t. Please determine '
             'whether it is possible. Note that you have to answer q '
             'independent queries.',
  'input': 'The first line contains one integer q ( 1≤q≤100) — the number of '
           'queries. Each query is represented by three consecutive lines. The '
           'first line of each query contains the string s ( 1≤| s| ≤100) '
           'consisting of lowercase Latin letters. The second line of each '
           'query contains the string t ( 1≤| t| ≤100) consisting of lowercase '
           'Latin letters. The third line of each query contains the string p '
           '( 1≤| p| ≤100) consisting of lowercase Latin letters.',
  'note': 'In the first test case there is the following sequence of '
          'operation: s= ab, t= acxb, p= cax; s= acb, t= acxb, p= ax; s= acxb, '
          't= acxb, p= a. In the second test case there is the following '
          'sequence of operation: s= a, t= aaaa, p= aaabbcc; s= aa, t= aaaa, '
          'p= aabbcc; s= aaa, t= aaaa, p= abbcc; s= aaaa, t= aaaa, p= bbcc.',
  'output': 'For each query print YES if it is possible to make s equal to t, '
            'and NO otherwise. You may print every letter in any case you want '
            '( so, for example, the strings yEs, yes, Yes and YES will all be '
            'recognized as positive answer) .',
  'title': 'From S To T',
  'topics': ['implementation', 'strings'],
  'url': 'https://codeforces.com/problemset/problem/1194/C'},
 {'history': 'Amugae has a sentence consisting of n words. He want to compress '
             "this sentence into one word. Amugae doesn' t like repetitions, "
             'so when he merges two words into one word, he removes the '
             'longest prefix of the second word that coincides with a suffix '
             'of the first word. For example, he merges " sample" and " '
             'please" into " samplease" . Amugae will merge his sentence left '
             'to right ( i. e. first merge the first two words, then merge the '
             'result with the third word and so on) . Write a program that '
             'prints the compressed word after the merging process ends.',
  'input': 'The first line contains an integer n ( 1≤n≤105) , the number of '
           "the words in Amugae' s sentence. The second line contains n words "
           'separated by single space. Each words is non- empty and consists '
           "of uppercase and lowercase English letters and digits ( ' A' , ' "
           "B' , . . . , ' Z' , ' a' , ' b' , . . . , ' z' , ' 0' , ' 1' , . . "
           ". , ' 9' ) . The total length of the words does not exceed 106.",
  'note': ' ',
  'output': 'In the only line output the compressed word after the merging '
            'process ends as described in the problem.',
  'title': 'Compress Words',
  'topics': ['implementation', 'strings'],
  'url': 'https://codeforces.com/problemset/problem/1200/E'},
 {'history': 'A class of students wrote a multiple- choice test. There are n '
             'students in the class. The test had m questions, each of them '
             'had 5 possible answers ( A, B, C, D or E) . There is exactly one '
             'correct answer for each question. The correct answer for '
             'question i worth ai points. Incorrect answers are graded with '
             'zero points. The students remember what answers they gave on the '
             "exam, but they don' t know what are the correct answers. They "
             'are very optimistic, so they want to know what is the maximum '
             'possible total score of all students in the class.',
  'input': 'The first line contains integers n and m ( 1≤n, m≤1000) — the '
           'number of students in the class and the number of questions in the '
           'test. Each of the next n lines contains string si ( | si| = m) , '
           'describing an answer of the i- th student. The j- th character '
           'represents the student answer ( A, B, C, D or E) on the j- th '
           'question. The last line contains m integers a1, a2, . . . , am ( '
           '1≤ai≤1000) — the number of points for the correct answer for every '
           'question.',
  'note': 'In the first example, one of the most optimal test answers is " '
          'ABCD" , this way the total number of points will be 16. In the '
          'second example, one of the most optimal test answers is " CCC" , '
          'this way each question will be answered by exactly one student and '
          'the total number of points is 5+ 4+ 12= 21.',
  'output': 'Print a single integer — the maximum possible total score of the '
            'class.',
  'title': 'Important Exam',
  'topics': ['implementation', 'strings'],
  'url': 'https://codeforces.com/problemset/problem/1201/A'},
 {'history': 'You have a string ss — a sequence of commands for your toy '
             'robot. The robot is placed in some cell of a rectangular grid. '
             "He can perform four commands: ' W' — move one cell up; ' S' — "
             "move one cell down; ' A' — move one cell left; ' D' — move one "
             'cell right. Let Grid( s) Grid( s) be the grid of minimum '
             'possible area such that there is a position in the grid where '
             'you can place the robot in such a way that it will not fall from '
             'the grid while running the sequence of commands ss. For example, '
             'if s= DSAWWAWs= DSAWWAW then Grid( s) Grid( s) is the 4×34×3 '
             'grid: you can place the robot in the cell ( 3, 2) ( 3, 2) ; the '
             "robot performs the command ' D' and moves to ( 3, 3) ( 3, 3) ; "
             "the robot performs the command ' S' and moves to ( 4, 3) ( 4, 3) "
             "; the robot performs the command ' A' and moves to ( 4, 2) ( 4, "
             "2) ; the robot performs the command ' W' and moves to ( 3, 2) ( "
             "3, 2) ; the robot performs the command ' W' and moves to ( 2, 2) "
             "( 2, 2) ; the robot performs the command ' A' and moves to ( 2, "
             "1) ( 2, 1) ; the robot performs the command ' W' and moves to ( "
             "1, 1) ( 1, 1) . You have 44 extra letters: one ' W' , one ' A' , "
             "one ' S' , one ' D' . You' d like to insert at most one of these "
             'letters in any position of sequence ss to minimize the area of '
             'Grid( s) Grid( s) . What is the minimum area of Grid( s) Grid( '
             's) you can achieve?',
  'input': 'The first line contains one integer TT ( 1≤T≤10001≤T≤1000) — the '
           'number of queries. Next TT lines contain queries: one per line. '
           'This line contains single string ss ( 1≤| s| ≤2⋅1051≤| s| ≤2⋅105, '
           "si∈W, A, S, Dsi∈W, A, S, D) — the sequence of commands. It' s "
           "guaranteed that the total length of ss over all queries doesn' t "
           'exceed 2⋅1052⋅105.',
  'note': 'In the first query you have to get string DSAWWD_ AWDSAWWD⎯⎯⎯AW. In '
          'second and third queries you can not decrease the area of Grid( s) '
          'Grid( s) .',
  'output': 'Print TT integers: one per query. For each query print the '
            'minimum area of Grid( s) Grid( s) you can achieve.',
  'title': 'You Are Given a WASD-string...',
  'topics': ['implementation', 'strings'],
  'url': 'https://codeforces.com/problemset/problem/1202/C'},
 {'history': 'The subsequence is a sequence that can be derived from another '
             'sequence by deleting some elements without changing the order of '
             'the remaining elements. You are given an integer n. You have to '
             'find a sequence s consisting of digits 1, 3, 7 such that it has '
             'exactly n subsequences equal to 1337. For example, sequence '
             '337133377 has 6 subsequences equal to 1337: 3371_ 33_ 3_ 77_ ( '
             'you can remove the second and fifth characters) ; 3371_ 3_ 33_ '
             '77_ ( you can remove the third and fifth characters) ; 3371_ 3_ '
             '3_ 377_ ( you can remove the fourth and fifth characters) ; '
             '3371_ 33_ 3_ 7_ 7 ( you can remove the second and sixth '
             'characters) ; 3371_ 3_ 33_ 7_ 7 ( you can remove the third and '
             'sixth characters) ; 3371_ 3_ 3_ 37_ 7 ( you can remove the '
             'fourth and sixth characters) . Note that the length of the '
             'sequence s must not exceed 105. You have to answer t independent '
             'queries.',
  'input': 'The first line contains one integer t ( 1≤t≤10) — the number of '
           'queries. Next t lines contains a description of queries: the i- th '
           'line contains one integer ni ( 1≤ni≤109) .',
  'note': ' ',
  'output': 'For the i- th query print one string si ( 1≤| si| ≤105) '
            'consisting of digits 1, 3, 7. String si must have exactly ni '
            'subsequences 1337. If there are multiple such strings, print any '
            'of them.',
  'title': 'Print a 1337-string...',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1202/D'},
 {'history': 'You are given a string t and n strings s1, s2, . . . , sn. All '
             'strings consist of lowercase Latin letters. Let f( t, s) be the '
             'number of occurences of string s in string t. For example, f( '
             '′aaabacaa′, ′aa′) = 3, and f( ′ababa′, ′aba′) = 2. Calculate the '
             'value of n∑i= 1n∑j= 1f( t, si+ sj) , where s+ t is the '
             'concatenation of strings s and t. Note that if there are two '
             'pairs i1, j1 and i2, j2 such that si1+ sj1= si2+ sj2, you should '
             'include both f( t, si1+ sj1) and f( t, si2+ sj2) in answer.',
  'input': 'The first line contains string t ( 1≤| t| ≤2⋅105) . The second '
           'line contains integer n ( 1≤n≤2⋅105) . Each of next n lines '
           'contains string si ( 1≤| si| ≤2⋅105) . It is guaranteed that n∑i= '
           '1| si| ≤2⋅105. All strings consist of lowercase English letters.',
  'note': ' ',
  'output': 'Print one integer — the value of n∑i= 1n∑j= 1f( t, si+ sj) .',
  'title': 'You Are Given Some Strings...',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1202/E'},
 {'history': 'The only difference between easy and hard versions is the length '
             'of the string. You can hack this problem only if you solve both '
             'problems. Kirk has a binary string s ( a string which consists '
             'of zeroes and ones) of length n and he is asking you to find a '
             'binary string t of the same length which satisfies the following '
             'conditions: For any l and r ( 1≤l≤r≤n) the length of the longest '
             'non- decreasing subsequence of the substring slsl+ 1. . . sr is '
             'equal to the length of the longest non- decreasing subsequence '
             'of the substring tltl+ 1. . . tr; The number of zeroes in t is '
             'the maximum possible. A non- decreasing subsequence of a string '
             'p is a sequence of indices i1, i2, . . . , ik such that i1< i2< '
             '. . . < ik and pi1≤pi2≤. . . ≤pik. The length of the subsequence '
             'is k. If there are multiple substrings which satisfy the '
             'conditions, output any.',
  'input': 'The first line contains a binary string of length not more than '
           '2000.',
  'note': 'In the first example: For the substrings of the length 1 the length '
          'of the longest non- decreasing subsequnce is 1; For l= 1, r= 2 the '
          'longest non- decreasing subsequnce of the substring s1s2 is 11 and '
          'the longest non- decreasing subsequnce of the substring t1t2 is 01; '
          'For l= 1, r= 3 the longest non- decreasing subsequnce of the '
          'substring s1s3 is 11 and the longest non- decreasing subsequnce of '
          'the substring t1t3 is 00; For l= 2, r= 3 the longest non- '
          'decreasing subsequnce of the substring s2s3 is 1 and the longest '
          'non- decreasing subsequnce of the substring t2t3 is 1; The second '
          'example is similar to the first one.',
  'output': 'Output a binary string which satisfied the above conditions. If '
            'there are many such strings, output any of them.',
  'title': 'Kirk and a Binary String (easy version)',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1204/D1'},
 {'history': 'The only difference between easy and hard versions is the length '
             'of the string. You can hack this problem if you solve it. But '
             'you can hack the previous problem only if you solve both '
             'problems. Kirk has a binary string s ( a string which consists '
             'of zeroes and ones) of length n and he is asking you to find a '
             'binary string t of the same length which satisfies the following '
             'conditions: For any l and r ( 1≤l≤r≤n) the length of the longest '
             'non- decreasing subsequence of the substring slsl+ 1. . . sr is '
             'equal to the length of the longest non- decreasing subsequence '
             'of the substring tltl+ 1. . . tr; The number of zeroes in t is '
             'the maximum possible. A non- decreasing subsequence of a string '
             'p is a sequence of indices i1, i2, . . . , ik such that i1< i2< '
             '. . . < ik and pi1≤pi2≤. . . ≤pik. The length of the subsequence '
             'is k. If there are multiple substrings which satisfy the '
             'conditions, output any.',
  'input': 'The first line contains a binary string of length not more than '
           '105.',
  'note': 'In the first example: For the substrings of the length 1 the length '
          'of the longest non- decreasing subsequnce is 1; For l= 1, r= 2 the '
          'longest non- decreasing subsequnce of the substring s1s2 is 11 and '
          'the longest non- decreasing subsequnce of the substring t1t2 is 01; '
          'For l= 1, r= 3 the longest non- decreasing subsequnce of the '
          'substring s1s3 is 11 and the longest non- decreasing subsequnce of '
          'the substring t1t3 is 00; For l= 2, r= 3 the longest non- '
          'decreasing subsequnce of the substring s2s3 is 1 and the longest '
          'non- decreasing subsequnce of the substring t2t3 is 1; The second '
          'example is similar to the first one.',
  'output': 'Output a binary string which satisfied the above conditions. If '
            'there are many such strings, output any of them.',
  'title': 'Kirk and a Binary String (hard version)',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1204/D2'},
 {'history': "You are given integers n, k. Let' s consider the alphabet "
             'consisting of k different elements. Let beauty f( s) of the '
             'string s be the number of indexes i, 1≤i< | s| , for which '
             'prefix of s of length i equals to suffix of s of length i. For '
             'example, beauty of the string abacaba equals 2, as for i= 1, 3 '
             'prefix and suffix of length i are equal. Consider all words of '
             'length n in the given alphabet. Find the expected value of f( s) '
             '2 of a uniformly chosen at random word. We can show that it can '
             "be expressed as PQ, where P and Q are coprime and Q isn' t "
             'divided by 109+ 7. Output P⋅Q−1mod109+ 7.',
  'input': 'The first and the only line contains two integers n, k ( 1≤n≤105, '
           '1≤k≤109) — the length of a string and the size of alphabet '
           'respectively.',
  'note': 'In the first example, there are 9 words of length 2 in alphabet of '
          'size 3 — aa, ab, ac, ba, bb, bc, ca, cb, cc. 3 of them have beauty '
          '1 and 6 of them have beauty 0, so the average value is 13. In the '
          'third example, there is only one such word, and it has beauty 99, '
          'so the average value is 992.',
  'output': 'Output a single integer — P×Q−1mod109+ 7.',
  'title': 'Expected Value Again',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1205/E'},
 {'history': "Mishka' s favourite experimental indie band has recently dropped "
             'a new album! Songs of that album share one gimmick. Each name si '
             'is one of the following types: 1 c — a single lowercase Latin '
             'letter; 2 j c — name sj ( 1≤j< i) with a single lowercase Latin '
             "letter appended to its end. Songs are numbered from 1 to n. It' "
             's guaranteed that the first song is always of type 1. Vova is '
             "rather interested in the new album but he really doesn' t have "
             'the time to listen to it entirely. Thus he asks Mishka some '
             'questions about it to determine if some song is worth listening '
             'to. Questions have the following format: i t — count the number '
             'of occurrences of string t in si ( the name of the i- th song of '
             'the album) as a continuous substring, t consists only of '
             "lowercase Latin letters. Mishka doesn' t question the purpose of "
             'that information, yet he struggles to provide it. Can you please '
             "help Mishka answer all Vova' s questions?",
  'input': 'The first line contains a single integer n ( 1≤n≤4⋅105) — the '
           'number of songs in the album. Each of the next n lines contains '
           'the desciption of the i- th song of the album in the following '
           'format: 1 c — si is a single lowercase Latin letter; 2 j c — si is '
           'the name sj ( 1≤j< i) with a single lowercase Latin letter '
           'appended to its end. The next line contains a single integer m ( '
           "1≤m≤4⋅105) — the number of Vova' s questions. Each of the next m "
           "lines contains the desciption of the j- th Vova' s question in the "
           'following format: i t ( 1≤i≤n, 1≤| t| ≤4⋅105) — count the number '
           'of occurrences of string t in si ( the name of the i- th song of '
           'the album) as a continuous substring, t consists only of lowercase '
           "Latin letters. It' s guaranteed that the total length of question "
           "strings t doesn' t exceed 4⋅105.",
  'note': 'Song names of the first example: d da dad dada dadad dadada dadadad '
          'dadadada d do dok doki dokid dokido dokidok dokidoki do dok doki '
          'dokidoki Thus the occurrences for each question string are: string '
          '" da" starts in positions [ 1, 3, 5, 7] in the name " dadadada" ; '
          'string " dada" starts in positions [ 1, 3, 5] in the name " '
          'dadadada" ; string " ada" starts in positions [ 2, 4, 6] in the '
          'name " dadadada" ; string " dada" starts in positions [ 1, 3] in '
          'the name " dadada" ; no occurrences of string " dada" in the name " '
          'dad" ; string " doki" starts in position [ 1] in the name " doki" ; '
          'string " ok" starts in position [ 2] in the name " doki" ; string " '
          'doki" starts in positions [ 1, 5] in the name " dokidoki" ; string '
          '" doki" starts in position [ 1] in the name " dokidok" ; string " '
          'd" starts in position [ 1] in the name " d" ; no occurrences of '
          'string " a" in the name " d" ; string " doki" starts in positions [ '
          '1, 5] in the name " dokidoki" .',
  'output': 'For each question print a single integer — the number of '
            'occurrences of the question string t in the name of the i- th '
            'song of the album as a continuous substring.',
  'title': 'Indie Album',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1207/G'},
 {'history': 'Koala Land consists of m bidirectional roads connecting n '
             'cities. The roads are numbered from 1 to m by order in input. It '
             'is guaranteed, that one can reach any city from every other '
             'city. Koala starts traveling from city 1. Whenever he travels on '
             "a road, he writes its number down in his notebook. He doesn' t "
             'put spaces between the numbers, so they all get concatenated '
             'into a single number. Before embarking on his trip, Koala is '
             'curious about the resulting number for all possible '
             'destinations. For each possible destination, what is the '
             'smallest number he could have written for it? Since these '
             'numbers may be quite large, print their remainders modulo 109+ '
             '7. Please note, that you need to compute the remainder of the '
             'minimum possible number, not the minimum possible remainder.',
  'input': 'The first line contains two integers n and m ( 2≤n≤105, n−1≤m≤105) '
           ', the number of cities and the number of roads, respectively. The '
           'i- th of the following m lines contains integers xi and yi ( 1≤xi, '
           'yi≤n, xi= ̸yi) , representing a bidirectional road between cities '
           'xi and yi. It is guaranteed, that for any pair of cities there is '
           'at most one road connecting them, and that one can reach any city '
           'from every other city.',
  'note': ' ',
  'output': 'Print n−1 integers, the answer for every city except for the '
            'first city. The i- th integer should be equal to the smallest '
            'number he could have written for destination i+ 1. Since this '
            'number may be large, output its remainder modulo 109+ 7.',
  'title': 'Koala and Notebook',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1209/F'},
 {'history': 'Polycarp really likes writing the word " kotlin" . He wrote this '
             'word several times in a row without spaces. For example, he '
             'could write the string like " kotlinkotlinkotlinkotlin" . '
             'Polycarp sliced ( cut) the written string into n pieces and '
             'mixed them. As a result, he has n strings s1, s2, . . . , sn and '
             'he can arrange them in the right order, concatenate ( join) all '
             'of them and get a string like " kotlinkotlin. . . kotlin" . Help '
             'Polycarp to find the right order of strings s1, s2, . . . , sn, '
             'so that if he writes the strings in this order, he will get the '
             'word " kotlin" or the sequence of this word. Pay attention that '
             'you must use all given strings and you must use each string only '
             'once.',
  'input': 'The first line of the input contains one integer n ( 1≤n≤105) — '
           "the number of Polycarp' s strings. Next lines of the input contain "
           "n Polycarp' s strings. Total sum of their lengths doesn' t exceed "
           "3⋅105. It' s guaranteed that there is the right order of "
           'arrangement the strings that if you concatenate them into one '
           'string, you will get some non- empty sequence of the word " '
           'kotlin" .',
  'note': ' ',
  'output': 'Print n different integers p1, p2, . . . , pn ( 1≤pi≤n) , where '
            'pi is an index of the string that should be the i- th in a '
            'required concatenation. In other words, the result of '
            'concatenation sp1+ sp2+ ⋯+ spn must be in the form " '
            'kotlinkotlin. . . kotlin" . If there are many solutions, print '
            'any of them.',
  'title': 'kotlinkotlinkotlinkotlin...',
  'topics': ['implementation', 'strings'],
  'url': 'https://codeforces.com/problemset/problem/1211/F'},
 {'history': 'Authors have come up with the string s consisting of n lowercase '
             'Latin letters. You are given two permutations of its indices ( '
             'not necessary equal) p and q ( both of length n) . Recall that '
             'the permutation is the array of length n which contains each '
             'integer from 1 to n exactly once. For all i from 1 to n−1 the '
             'following properties hold: s[ pi] ≤s[ pi+ 1] and s[ qi] ≤s[ qi+ '
             '1] . It means that if you will write down all characters of s in '
             'order of permutation indices, the resulting string will be '
             'sorted in the non- decreasing order. Your task is to restore any '
             'such string s of length n consisting of at least k distinct '
             'lowercase Latin letters which suits the given permutations. If '
             'there are multiple answers, you can print any of them.',
  'input': 'The first line of the input contains two integers n and k ( '
           '1≤n≤2⋅105, 1≤k≤26) — the length of the string and the number of '
           'distinct characters required. The second line of the input '
           'contains n integers p1, p2, . . . , pn ( 1≤pi≤n, all pi are '
           'distinct integers from 1 to n) — the permutation p. The third line '
           'of the input contains n integers q1, q2, . . . , qn ( 1≤qi≤n, all '
           'qi are distinct integers from 1 to n) — the permutation q.',
  'note': ' ',
  'output': 'If it is impossible to find the suitable string, print " NO" on '
            'the first line. Otherwise print " YES" on the first line and '
            'string s on the second line. It should consist of n lowercase '
            'Latin letters, contain at least k distinct characters and suit '
            'the given permutations. If there are multiple answers, you can '
            'print any of them.',
  'title': 'Unstable String Sort',
  'topics': ['implementation', 'strings'],
  'url': 'https://codeforces.com/problemset/problem/1213/F'},
 {'history': 'Nikolay got a string s of even length n, which consists only of '
             "lowercase Latin letters ' a' and ' b' . Its positions are "
             'numbered from 1 to n. He wants to modify his string so that '
             "every its prefix of even length has an equal amount of letters ' "
             "a' and ' b' . To achieve that, Nikolay can perform the following "
             'operation arbitrary number of times ( possibly, zero) : choose '
             'some position in his string and replace the letter on this '
             "position with the other letter ( i. e. replace ' a' with ' b' or "
             "replace ' b' with ' a' ) . Nikolay can use no letters except ' "
             "a' and ' b' . The prefix of string s of length l ( 1≤l≤n) is a "
             'string s[ 1. . l] . For example, for the string s= " abba" there '
             'are two prefixes of the even length. The first is s[ 1. . . 2] = '
             '" ab" and the second s[ 1. . . 4] = " abba" . Both of them have '
             "the same number of ' a' and ' b' . Your task is to calculate the "
             'minimum number of operations Nikolay has to perform with the '
             'string s to modify it so that every its prefix of even length '
             "has an equal amount of letters ' a' and ' b' .",
  'input': 'The first line of the input contains one even integer n ( '
           '2≤n≤2⋅105) — the length of string s. The second line of the input '
           'contains the string s of length n, which consists only of '
           "lowercase Latin letters ' a' and ' b' .",
  'note': 'In the first example Nikolay has to perform two operations. For '
          "example, he can replace the first ' b' with ' a' and the last ' b' "
          "with ' a' . In the second example Nikolay doesn' t need to do "
          'anything because each prefix of an even length of the initial '
          "string already contains an equal amount of letters ' a' and ' b' .",
  'output': 'In the first line print the minimum number of operations Nikolay '
            'has to perform with the string s to modify it so that every its '
            "prefix of even length has an equal amount of letters ' a' and ' "
            "b' . In the second line print the string Nikolay obtains after "
            'applying all the operations. If there are multiple answers, you '
            'can print any of them.',
  'title': 'Prefixes',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1216/A'},
 {'history': 'Alice became interested in periods of integer numbers. We say '
             'positive X integer number is periodic with length L if there '
             'exists positive integer number P with L digits such that X can '
             'be written as PPPP. . . P. For example: X= 123123123 is periodic '
             'number with length L= 3 and L= 9X= 42424242 is periodic number '
             'with length L= 2, L= 4 and L= 8X= 12345 is periodic number with '
             'length L= 5For given positive period length L and positive '
             'integer number A, Alice wants to find smallest integer number X '
             'strictly greater than A that is periodic with length L.',
  'input': 'First line contains one positive integer number L ( 1≤L≤105) '
           'representing length of the period. Second line contains one '
           'positive integer number A ( 1≤A≤10100000) .',
  'note': 'In first example 124124 is the smallest number greater than 123456 '
          'that can be written with period L = 3 ( P = 124) . In the second '
          'example 100100 is the smallest number greater than 12345 with '
          'period L = 3 ( P= 100)',
  'output': 'One positive integer number representing smallest positive number '
            'that is periodic with length L and is greater than A.',
  'title': 'Periodic integer number',
  'topics': ['implementation', 'strings'],
  'url': 'https://codeforces.com/problemset/problem/1219/C'},
 {'history': 'When Serezha was three years old, he was given a set of cards '
             'with letters for his birthday. They were arranged into words in '
             "the way which formed the boy' s mother favorite number in binary "
             'notation. Serezha started playing with them immediately and '
             "shuffled them because he wasn' t yet able to read. His father "
             'decided to rearrange them. Help him restore the original number, '
             'on condition that it was the maximum possible one.',
  'input': 'The first line contains a single integer n ( 1⩽) — the length of '
           'the string. The second line contains a string consisting of '
           "English lowercase letters: ' z' , ' e' , ' r' , ' o' and ' n' . It "
           'is guaranteed that it is possible to rearrange the letters in such '
           'a way that they form a sequence of words, each being either " '
           'zero" which corresponds to the digit 0 or " one" which corresponds '
           'to the digit 1.',
  'note': 'In the first example, the correct initial ordering is " zero" . In '
          'the second example, the correct initial ordering is " oneonezero" .',
  'output': 'Print the maximum possible number in binary notation. Print '
            'binary digits separated by a space. The leading zeroes are '
            'allowed.',
  'title': 'Cards',
  'topics': ['implementation', 'sortings', 'strings'],
  'url': 'https://codeforces.com/problemset/problem/1220/A'},
 {'history': 'Mike and Ann are sitting in the classroom. The lesson is boring, '
             'so they decided to play an interesting game. Fortunately, all '
             'they need to play this game is a string s and a number k ( 0≤k< '
             '| s| ) . At the beginning of the game, players are given a '
             'substring of s with left border l and right border r, both equal '
             'to k ( i. e. initially l= r= k) . Then players start to make '
             'moves one by one, according to the following rules: A player '
             'chooses l′ and r′ so that l′≤l, r′≥r and s[ l′, r′] is '
             'lexicographically less than s[ l, r] . Then the player changes l '
             'and r in this way: l: = l′, r: = r′. Ann moves first. The '
             "player, that can' t make a move loses. Recall that a substring "
             's[ l, r] ( l≤r) of a string s is a continuous segment of letters '
             'from s that starts at position l and ends at position r. For '
             'example, " ehn" is a substring ( s[ 3, 5] ) of " aaaehnsvz" and '
             '" ahz" is not. Mike and Ann were playing so enthusiastically '
             'that they did not notice the teacher approached them. '
             "Surprisingly, the teacher didn' t scold them, instead of that he "
             'said, that he can figure out the winner of the game before it '
             'starts, even if he knows only s and k. Unfortunately, Mike and '
             'Ann are not so keen in the game theory, so they ask you to write '
             'a program, that takes s and determines the winner for all '
             'possible k.',
  'input': 'The first line of the input contains a single string s ( 1≤| s| '
           '≤5⋅105) consisting of lowercase English letters.',
  'note': ' ',
  'output': 'Print | s| lines. In the line i write the name of the winner ( '
            'print Mike or Ann) in the game with string s and k= i, if both '
            'play optimally',
  'title': 'Substring Game in the Lesson',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1220/C'},
 {'history': 'You are given two strings of equal length s and t consisting of '
             'lowercase Latin letters. You may perform any number ( possibly, '
             'zero) operations on these strings. During each operation you '
             'choose two adjacent characters in any string and assign the '
             'value of the first character to the value of the second or vice '
             'versa. For example, if s is " acbc" you can get the following '
             'strings in one operation: " aabc" ( if you perform s2= s1) ; " '
             'ccbc" ( if you perform s1= s2) ; " accc" ( if you perform s3= s2 '
             'or s3= s4) ; " abbc" ( if you perform s2= s3) ; " acbb" ( if you '
             'perform s4= s3) ; Note that you can also apply this operation to '
             'the string t. Please determine whether it is possible to '
             'transform s into t, applying the operation above any number of '
             'times. Note that you have to answer q independent queries.',
  'input': 'The first line contains one integer q ( 1≤q≤100) — the number of '
           'queries. Each query is represented by two consecutive lines. The '
           'first line of each query contains the string s ( 1≤| s| ≤100) '
           'consisting of lowercase Latin letters. The second line of each '
           'query contains the string t ( 1≤| t| ≤100, | t| = | s| ) '
           'consisting of lowercase Latin letters.',
  'note': 'In the first query, you can perform two operations s1= s2 ( after '
          'it s turns into " aabb" ) and t4= t3 ( after it t turns into " '
          'aabb" ) . In the second query, the strings are equal initially, so '
          'the answer is " YES" . In the third query, you can not make strings '
          's and t equal. Therefore, the answer is " NO" .',
  'output': 'For each query, print " YES" if it is possible to make s equal to '
            't, and " NO" otherwise. You may print every letter in any case '
            'you want ( so, for example, the strings " yEs" , " yes" , " Yes" '
            ', and " YES" will all be recognized as positive answer) .',
  'title': 'Strings Equalization',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1223/B'},
 {'history': 'The problem was inspired by Pied Piper story. After a challenge '
             "from Hooli' s compression competitor Nucleus, Richard pulled an "
             'all- nighter to invent a new approach to compression: middle- '
             'out. You are given two strings ss and tt of the same length nn. '
             'Their characters are numbered from 11 to nn from left to right ( '
             'i. e. from the beginning to the end) . In a single move you can '
             'do the following sequence of actions: choose any valid index ii '
             '( 1≤i≤n1≤i≤n) , move the ii- th character of ss from its '
             'position to the beginning of the string or move the ii- th '
             'character of ss from its position to the end of the string. '
             "Note, that the moves don' t change the length of the string ss. "
             'You can apply a move only to the string ss. For example, if s= '
             's= " test" in one move you can obtain: if i= 1i= 1 and you move '
             'to the beginning, then the result is " test" ( the string '
             "doesn' t change) , if i= 2i= 2 and you move to the beginning, "
             'then the result is " etst" , if i= 3i= 3 and you move to the '
             'beginning, then the result is " stet" , if i= 4i= 4 and you move '
             'to the beginning, then the result is " ttes" , if i= 1i= 1 and '
             'you move to the end, then the result is " estt" , if i= 2i= 2 '
             'and you move to the end, then the result is " tste" , if i= 3i= '
             '3 and you move to the end, then the result is " tets" , if i= '
             '4i= 4 and you move to the end, then the result is " test" ( the '
             "string doesn' t change) . You want to make the string ss equal "
             'to the string tt. What is the minimum number of moves you need? '
             'If it is impossible to transform ss to tt, print - 1.',
  'input': 'The first line contains integer qq ( 1≤q≤1001≤q≤100) — the number '
           'of independent test cases in the input. Each test case is given in '
           'three lines. The first line of a test case contains nn ( '
           '1≤n≤1001≤n≤100) — the length of the strings ss and tt. The second '
           'line contains ss, the third line contains tt. Both strings ss and '
           'tt have length nn and contain only lowercase Latin letters. There '
           'are no constraints on the sum of nn in the test ( i. e. the input '
           'with q= 100q= 100 and all n= 100n= 100 is allowed) .',
  'note': 'In the first example, the moves in one of the optimal answers are: '
          'for the first test case s= s= " iredppipe" , t= t= " piedpiper" : " '
          'iredppipe" →→ " iedppiper" →→ " piedpiper" ; for the second test '
          'case s= s= " estt" , t= t= " test" : " estt" →→ " test" ; for the '
          'third test case s= s= " tste" , t= t= " test" : " tste" →→ " etst" '
          '→→ " test" .',
  'output': 'For every test print minimum possible number of moves, which are '
            'needed to transform ss into tt, or - 1, if it is impossible to '
            'do.',
  'title': 'Middle-Out',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1231/E'},
 {'history': 'The string t1t2. . . tk is good if each letter of this string '
             'belongs to at least one palindrome of length greater than 1. A '
             'palindrome is a string that reads the same backward as forward. '
             'For example, the strings A, BAB, ABBA, BAABBBAAB are '
             'palindromes, but the strings AB, ABBBAA, BBBA are not. Here are '
             'some examples of good strings: t = AABBB ( letters t1, t2 belong '
             'to palindrome t1. . . t2 and letters t3, t4, t5 belong to '
             'palindrome t3. . . t5) ; t = ABAA ( letters t1, t2, t3 belong to '
             'palindrome t1. . . t3 and letter t4 belongs to palindrome t3. . '
             '. t4) ; t = AAAAA ( all letters belong to palindrome t1. . . t5) '
             '; You are given a string s of length n, consisting of only '
             'letters A and B. You have to calculate the number of good '
             'substrings of string s.',
  'input': 'The first line contains one integer n ( 1≤n≤3⋅105) — the length of '
           'the string s. The second line contains the string s, consisting of '
           'letters A and B.',
  'note': 'In the first test case there are six good substrings: s1. . . s2, '
          's1. . . s4, s1. . . s5, s3. . . s4, s3. . . s5 and s4. . . s5. In '
          'the second test case there are three good substrings: s1. . . s2, '
          's1. . . s3 and s2. . . s3.',
  'output': 'Print one integer — the number of good substrings of string s.',
  'title': 'AB-string',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1238/D'},
 {'history': 'This problem is different from the hard version. In this version '
             'Ujan makes exactly one exchange. You can hack this problem only '
             'if you solve both problems. After struggling and failing many '
             'times, Ujan decided to try to clean up his house again. He '
             'decided to get his strings in order first. Ujan has two distinct '
             'strings s and t of length n consisting of only of lowercase '
             'English characters. He wants to make them equal. Since Ujan is '
             'lazy, he will perform the following operation exactly once: he '
             'takes two positions i and j ( 1≤i, j≤n, the values i and j can '
             'be equal or different) , and swaps the characters si and tj. Can '
             'he succeed? Note that he has to perform this operation exactly '
             'once. He has to perform this operation.',
  'input': 'The first line contains a single integer k ( 1≤k≤10) , the number '
           'of test cases. For each of the test cases, the first line contains '
           'a single integer n ( 2≤n≤104) , the length of the strings s and t. '
           'Each of the next two lines contains the strings s and t, each '
           'having length exactly n. The strings consist only of lowercase '
           'English letters. It is guaranteed that strings are different.',
  'note': 'In the first test case, Ujan can swap characters s1 and t4, '
          'obtaining the word " house" . In the second test case, it is not '
          'possible to make the strings equal using exactly one swap of si and '
          'tj.',
  'output': 'For each test case, output " Yes" if Ujan can make the two '
            'strings equal and " No" otherwise. You can print each letter in '
            'any case ( upper or lower) .',
  'title': 'Character Swap (Easy Version)',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1243/B1'},
 {'history': 'This problem is different from the easy version. In this version '
             'Ujan makes at most 2n swaps. In addition, k≤1000, n≤50 and it is '
             'necessary to print swaps themselves. You can hack this problem '
             'if you solve it. But you can hack the previous problem only if '
             'you solve both problems. After struggling and failing many '
             'times, Ujan decided to try to clean up his house again. He '
             'decided to get his strings in order first. Ujan has two distinct '
             'strings s and t of length n consisting of only of lowercase '
             'English characters. He wants to make them equal. Since Ujan is '
             'lazy, he will perform the following operation at most 2n times: '
             'he takes two positions i and j ( 1≤i, j≤n, the values i and j '
             'can be equal or different) , and swaps the characters si and tj. '
             "Ujan' s goal is to make the strings s and t equal. He does not "
             'need to minimize the number of performed operations: any '
             'sequence of operations of length 2n or shorter is suitable.',
  'input': 'The first line contains a single integer k ( 1≤k≤1000) , the '
           'number of test cases. For each of the test cases, the first line '
           'contains a single integer n ( 2≤n≤50) , the length of the strings '
           's and t. Each of the next two lines contains the strings s and t, '
           'each having length exactly n. The strings consist only of '
           'lowercase English letters. It is guaranteed that strings are '
           'different.',
  'note': ' ',
  'output': 'For each test case, output " Yes" if Ujan can make the two '
            'strings equal with at most 2n operations and " No" otherwise. You '
            'can print each letter in any case ( upper or lower) . In the case '
            'of " Yes" print m ( 1≤m≤2n) on the next line, where m is the '
            'number of swap operations to make the strings equal. Then print m '
            'lines, each line should contain two integers i, j ( 1≤i, j≤n) '
            'meaning that Ujan swaps si and tj during the corresponding '
            'operation. You do not need to minimize the number of operations. '
            'Any sequence of length not more than 2n is suitable.',
  'title': 'Character Swap (Hard Version)',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1243/B2'},
 {'history': 'Recently Polycarp noticed that some of the buttons of his '
             'keyboard are malfunctioning. For simplicity, we assume that '
             "Polycarp' s keyboard contains 26 buttons ( one for each letter "
             'of the Latin alphabet) . Each button is either working fine or '
             'malfunctioning. To check which buttons need replacement, '
             'Polycarp pressed some buttons in sequence, and a string s '
             'appeared on the screen. When Polycarp presses a button with '
             'character c, one of the following events happened: if the button '
             'was working correctly, a character c appeared at the end of the '
             'string Polycarp was typing; if the button was malfunctioning, '
             'two characters c appeared at the end of the string. For example, '
             'suppose the buttons corresponding to characters a and c are '
             'working correctly, and the button corresponding to b is '
             'malfunctioning. If Polycarp presses the buttons in the order a, '
             'b, a, c, a, b, a, then the string he is typing changes as '
             'follows: a → abb → abba → abbac → abbaca → abbacabb → abbacabba. '
             'You are given a string s which appeared on the screen after '
             'Polycarp pressed some buttons. Help Polycarp to determine which '
             'buttons are working correctly for sure ( that is, this string '
             'could not appear on the screen if any of these buttons was '
             "malfunctioning) . You may assume that the buttons don' t start "
             'malfunctioning when Polycarp types the string: each button '
             'either works correctly throughout the whole process, or '
             'malfunctions throughout the whole process.',
  'input': 'The first line contains one integer t ( 1≤t≤100) — the number of '
           'test cases in the input. Then the test cases follow. Each test '
           'case is represented by one line containing a string s consisting '
           'of no less than 1 and no more than 500 lowercase Latin letters.',
  'note': ' ',
  'output': 'For each test case, print one line containing a string res. The '
            'string res should contain all characters which correspond to '
            'buttons that work correctly in alphabetical order, without any '
            'separators or repetitions. If all buttons may malfunction, res '
            'should be empty.',
  'title': 'Broken Keyboard',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1251/A'},
 {'history': 'A palindrome is a string t which reads the same backward as '
             'forward ( formally, t[ i] = t[ | t| + 1−i] for all i∈[ 1, | t| ] '
             ') . Here | t| denotes the length of a string t. For example, the '
             'strings 010, 1001 and 0 are palindromes. You have n binary '
             'strings s1, s2, . . . , sn ( each si consists of zeroes and/ or '
             'ones) . You can swap any pair of characters any number of times '
             '( possibly, zero) . Characters can be either from the same '
             'string or from different strings — there are no restrictions. '
             'Formally, in one move you: choose four integer numbers x, a, y, '
             'b such that 1≤x, y≤n and 1≤a≤| sx| and 1≤b≤| sy| ( where x and y '
             'are string indices and a and b are positions in strings sx and '
             'sy respectively) , swap ( exchange) the characters sx[ a] and '
             'sy[ b] . What is the maximum number of strings you can make '
             'palindromic simultaneously?',
  'input': 'The first line contains single integer Q ( 1≤Q≤50) — the number of '
           'test cases. The first line on each test case contains single '
           'integer n ( 1≤n≤50) — the number of binary strings you have. Next '
           'n lines contains binary strings s1, s2, . . . , sn — one per line. '
           "It' s guaranteed that 1≤| si| ≤50 and all strings constist of "
           'zeroes and/ or ones.',
  'note': 'In the first test case, s1 is palindrome, so the answer is 1. In '
          "the second test case you can' t make all three strings palindromic "
          'at the same time, but you can make any pair of strings palindromic. '
          "For example, let' s make s1= 0110, s2= 111111 and s3= 010000. In "
          'the third test case we can make both strings palindromic. For '
          'example, s1= 11011 and s2= 100001. In the last test case s2 is '
          'palindrome and you can make s1 palindrome, for example, by swapping '
          's1[ 2] and s1[ 3] .',
  'output': 'Print Q integers — one per test case. The i- th integer should be '
            'the maximum number of palindromic strings you can achieve '
            'simultaneously performing zero or more swaps on strings from the '
            'i- th test case.',
  'title': 'Binary Palindromes',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1251/B'},
 {'history': 'You have a grid G containing R rows ( numbered from 1 to R, top '
             'to bottom) and C columns ( numbered from 1 to C, left to right) '
             'of uppercase characters. The character in the rth row and the '
             'cth column is denoted by Gr, c. You also have Q strings '
             'containing uppercase characters. For each of the string, you '
             'want to find the number of occurrences of the string in the '
             'grid. An occurrence of string S in the grid is counted if S can '
             'be constructed by starting at one of the cells in the grid, '
             'going right 0 or more times, and then going down 0 or more '
             'times. Two occurrences are different if the set of cells used to '
             'construct the string is different. Formally, for each string S, '
             'you would like to count the number of tuples ⟨r, c, Δr, Δc⟩ such '
             'that: 1≤r≤R and r≤r+ Δr≤R 1≤c≤C and c≤c+ Δc≤C S= Gr, cGr, c+ 1. '
             '. . Gr, c+ ΔcGr+ 1, c+ Δc. . . Gr+ Δr, c+ Δc',
  'input': 'Input begins with a line containing three integers: R C Q ( 1≤R, '
           'C≤500; 1≤Q≤200000) representing the size of the grid and the '
           'number of strings, respectively. The next R lines each contains C '
           'uppercase characters representing the grid. The cth character on '
           'the rth line is Gr, c. The next Q lines each contains a string S '
           'containing uppercase characters. The length of this string is a '
           'positive integer not more than 200000. The sum of the length of '
           'all Q strings combined is not more than 200000.',
  'note': 'Explanation for the sample input/ output # 1 There are 2 '
          'occurrences of " ABC" , represented by the tuples ⟨1, 1, 1, 1⟩ and '
          '⟨1, 1, 0, 2⟩. There are 3 occurrences of " BC" , represented by the '
          'tuples ⟨1, 2, 0, 1⟩, ⟨1, 2, 1, 0⟩, and ⟨2, 1, 0, 1⟩. There is 1 '
          'occurrence of " BD" , represented by the tuple ⟨2, 1, 1, 0⟩. There '
          'is no occurrence of " AC" . There are 2 occurrences of " A" , '
          'represented by the tuples ⟨1, 1, 0, 0⟩ and ⟨3, 2, 0, 0⟩.',
  'output': 'For each query in the same order as input, output in a line an '
            'integer representing the number of occurrences of the string in '
            'the grid.',
  'title': 'Find String in a Grid',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1252/D'},
 {'history': 'You are given two strings s and t both of length n and both '
             'consisting of lowercase Latin letters. In one move, you can '
             'choose any length len from 1 to n and perform the following '
             'operation: Choose any contiguous substring of the string s of '
             'length len and reverse it; at the same time choose any '
             'contiguous substring of the string t of length len and reverse '
             'it as well. Note that during one move you reverse exactly one '
             'substring of the string s and exactly one substring of the '
             'string t. Also note that borders of substrings you reverse in s '
             'and in t can be different, the only restriction is that you '
             'reverse the substrings of equal length. For example, if len= 3 '
             'and n= 5, you can reverse s[ 1. . . 3] and t[ 3. . . 5] , s[ 2. '
             '. . 4] and t[ 2. . . 4] , but not s[ 1. . . 3] and t[ 1. . . 2] '
             '. Your task is to say if it is possible to make strings s and t '
             'equal after some ( possibly, empty) sequence of moves. You have '
             'to answer q independent test cases.',
  'input': 'The first line of the input contains one integer q ( 1≤q≤104) — '
           'the number of test cases. Then q test cases follow. The first line '
           'of the test case contains one integer n ( 1≤n≤2⋅105) — the length '
           'of s and t. The second line of the test case contains one string s '
           'consisting of n lowercase Latin letters. The third line of the '
           'test case contains one string t consisting of n lowercase Latin '
           'letters. It is guaranteed that the sum of n over all test cases '
           'does not exceed 2⋅105 ( ∑n≤2⋅105) .',
  'note': ' ',
  'output': 'For each test case, print the answer on it — " YES" ( without '
            'quotes) if it is possible to make strings s and t equal after '
            'some ( possibly, empty) sequence of moves and " NO" otherwise.',
  'title': 'Equalizing Two Strings',
  'topics': ['sortings', 'strings'],
  'url': 'https://codeforces.com/problemset/problem/1256/F'},
 {'history': "Let' s call an array t dominated by value v in the next "
             'situation. At first, array t should have at least 2 elements. '
             "Now, let' s calculate number of occurrences of each number num "
             'in t and define it as occ( num) . Then t is dominated ( by v) if '
             '( and only if) occ( v) > occ( v′) for any other number v′. For '
             'example, arrays [ 1, 2, 3, 4, 5, 2] , [ 11, 11] and [ 3, 2, 3, '
             '2, 3] are dominated ( by 2, 11 and 3 respectevitely) but arrays '
             '[ 3] , [ 1, 2] and [ 3, 3, 2, 2, 1] are not. Small remark: since '
             'any array can be dominated only by one number, we can not '
             'specify this number and just say that array is either dominated '
             'or not. You are given array a1, a2, . . . , an. Calculate its '
             'shortest dominated subarray or say that there are no such '
             'subarrays. The subarray of a is a contiguous part of the array '
             'a, i. e. the array ai, ai+ 1, . . . , aj for some 1≤i≤j≤n.',
  'input': 'The first line contains single integer T ( 1≤T≤1000) — the number '
           'of test cases. Each test case consists of two lines. The first '
           'line contains single integer n ( 1≤n≤2⋅105) — the length of the '
           'array a. The second line contains n integers a1, a2, . . . , an ( '
           "1≤ai≤n) — the corresponding values of the array a. It' s "
           "guaranteed that the total length of all arrays in one test doesn' "
           't exceed 2⋅105.',
  'note': 'In the first test case, there are no subarrays of length at least '
          '2, so the answer is −1. In the second test case, the whole array is '
          "dominated ( by 1) and it' s the only dominated subarray. In the "
          'third test case, the subarray a4, a5, a6 is the shortest dominated '
          'subarray. In the fourth test case, all subarrays of length more '
          'than one are dominated.',
  'output': 'Print T integers — one per test case. For each test case print '
            'the only integer — the length of the shortest dominated subarray, '
            'or −1 if there are no such subarrays.',
  'title': 'Dominated Subarray',
  'topics': ['implementation', 'sortings', 'strings'],
  'url': 'https://codeforces.com/problemset/problem/1257/C'},
 {'history': 'Lucy likes letters. She studied the definition of the '
             'lexicographical order at school and plays with it. At first, she '
             'tried to construct the lexicographically smallest word out of '
             'given letters. It was so easy! Then she tried to build multiple '
             'words and minimize one of them. This was much harder! Formally, '
             'Lucy wants to make n words of length l each out of the given n⋅l '
             'letters, so that the k- th of them in the lexicographic order is '
             'lexicographically as small as possible.',
  'input': 'The first line contains three integers n, l, and k ( 1≤k≤n≤1000; '
           '1≤l≤1000) — the total number of words, the length of each word, '
           'and the index of the word Lucy wants to minimize. The next line '
           'contains a string of n⋅l lowercase letters of the English '
           'alphabet.',
  'note': ' ',
  'output': 'Output n words of l letters each, one per line, using the letters '
            'from the input. Words must be sorted in the lexicographic order, '
            'and the k- th of them must be lexicographically as small as '
            'possible. If there are multiple answers with the smallest k- th '
            'word, output any of them.',
  'title': 'Lexicography',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1267/L'},
 {'history': 'You are given an integer x of n digits a1, a2, . . . , an, which '
             'make up its decimal notation in order from left to right. Also, '
             "you are given a positive integer k< n. Let' s call integer b1, "
             'b2, . . . , bm beautiful if bi= bi+ k for each i, such that '
             '1≤i≤m−k. You need to find the smallest beautiful integer y, such '
             'that y≥x.',
  'input': 'The first line of input contains two integers n, k ( 2≤n≤200000, '
           '1≤k< n) : the number of digits in x and k. The next line of input '
           'contains n digits a1, a2, . . . , an ( a1= ̸0, 0≤ai≤9) : digits of '
           'x.',
  'note': ' ',
  'output': 'In the first line print one integer m: the number of digits in y. '
            'In the next line print m digits b1, b2, . . . , bm ( b1= ̸0, '
            '0≤bi≤9) : digits of y.',
  'title': 'Long Beautiful Integer',
  'topics': ['implementation', 'strings'],
  'url': 'https://codeforces.com/problemset/problem/1268/A'},
 {'history': "Let' s call a binary string s awesome, if it has at least 1 "
             'symbol 1 and length of the string is divisible by the number of '
             '1 in it. In particular, 1, 1010, 111 are awesome, but 0, 110, '
             "01010 aren' t. You are given a binary string s. Count the number "
             'of its awesome substrings. A string a is a substring of a string '
             'b if a can be obtained from b by deletion of several ( possibly, '
             'zero or all) characters from the beginning and several ( '
             'possibly, zero or all) characters from the end.',
  'input': 'The first line contains the string s ( 1≤| s| ≤200000) consisting '
           'only of zeros and ones.',
  'note': 'In the first sample, all substrings of s are awesome. In the second '
          'sample, we have the following awesome substrings of s: 1 ( 2 times) '
          ', 01 ( 2 times) , 10 ( 2 times) , 010 ( 2 times) , 1010, 0101In the '
          'third sample, no substring is awesome.',
  'output': 'Output a single number — the number of awesome substrings of s.',
  'title': 'Awesome Substrings',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1270/F'},
 {'history': 'You are given two bracket sequences ( not necessarily regular) s '
             "and t consisting only of characters ' ( ' and ' ) ' . You want "
             'to construct the shortest regular bracket sequence that contains '
             'both given bracket sequences as subsequences ( not necessarily '
             'contiguous) . Recall what is the regular bracket sequence: ( ) '
             'is the regular bracket sequence; if S is the regular bracket '
             'sequence, then ( S) is a regular bracket sequence; if S and T '
             'regular bracket sequences, then ST ( concatenation of S and T) '
             'is a regular bracket sequence. Recall that the subsequence of '
             'the string s is such string t that can be obtained from s by '
             'removing some ( possibly, zero) amount of characters. For '
             'example, " coder" , " force" , " cf" and " cores" are '
             'subsequences of " codeforces" , but " fed" and " z" are not.',
  'input': 'The first line of the input contains one bracket sequence s '
           "consisting of no more than 200 characters ' ( ' and ' ) ' . The "
           'second line of the input contains one bracket sequence t '
           "consisting of no more than 200 characters ' ( ' and ' ) ' .",
  'note': ' ',
  'output': 'Print one line — the shortest regular bracket sequence that '
            'contains both given bracket sequences as subsequences ( not '
            'necessarily contiguous) . If there are several answers, you can '
            'print any.',
  'title': 'Two Bracket Sequences',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1272/F'},
 {'history': 'Polycarp has built his own web service. Being a modern web '
             'service it includes login feature. And that always implies '
             'password security problems. Polycarp decided to store the hash '
             'of the password, generated by the following algorithm: take the '
             'password p, consisting of lowercase Latin letters, and shuffle '
             'the letters randomly in it to obtain p′ ( p′ can still be equal '
             'to p) ; generate two random strings, consisting of lowercase '
             'Latin letters, s1 and s2 ( any of these strings can be empty) ; '
             'the resulting hash h= s1+ p′+ s2, where addition is string '
             'concatenation. For example, let the password p= " abacaba" . '
             'Then p′ can be equal to " aabcaab" . Random strings s1= " zyx" '
             'and s2= " kjh" . Then h= " zyxaabcaabkjh" . Note that no letters '
             'could be deleted or added to p to obtain p′, only the order '
             'could be changed. Now Polycarp asks you to help him to implement '
             'the password check module. Given the password p and the hash h, '
             'check that h can be the hash for the password p. Your program '
             'should answer t independent test cases.',
  'input': 'The first line contains one integer t ( 1≤t≤100) — the number of '
           'test cases. The first line of each test case contains a non- empty '
           'string p, consisting of lowercase Latin letters. The length of p '
           'does not exceed 100. The second line of each test case contains a '
           'non- empty string h, consisting of lowercase Latin letters. The '
           'length of h does not exceed 100.',
  'note': 'The first test case is explained in the statement. In the second '
          'test case both s1 and s2 are empty and p′= " threetwoone" is p '
          'shuffled. In the third test case the hash could not be obtained '
          'from the password. In the fourth test case s1= " n" , s2 is empty '
          'and p′= " one" is p shuffled ( even thought it stayed the same) . '
          'In the fifth test case the hash could not be obtained from the '
          'password.',
  'output': 'For each test case print the answer to it — " YES" if the given '
            'hash h could be obtained from the given password p or " NO" '
            'otherwise.',
  'title': 'Shuffle Hashing',
  'topics': ['implementation', 'strings'],
  'url': 'https://codeforces.com/problemset/problem/1278/A'},
 {'history': 'This is an interactive problem. After completing the last level '
             'of the enchanted temple, you received a powerful artifact of the '
             '255th level. Do not rush to celebrate, because this artifact has '
             'a powerful rune that can be destroyed with a single spell s, '
             'which you are going to find. We define the spell as some non- '
             'empty string consisting only of the letters a and b. At any '
             'time, you can cast an arbitrary non- empty spell t, and the rune '
             'on the artifact will begin to resist. Resistance of the rune is '
             'the edit distance between the strings that specify the casted '
             'spell t and the rune- destroying spell s. Edit distance of two '
             'strings s and t is a value equal to the minimum number of one- '
             'character operations of replacing, inserting and deleting '
             'characters in s to get t. For example, the distance between '
             'ababa and aaa is 2, the distance between aaa and aba is 1, the '
             'distance between bbaba and abb is 3. The edit distance is 0 if '
             'and only if the strings are equal. It is also worth considering '
             'that the artifact has a resistance limit — if you cast more than '
             'n+ 2 spells, where n is the length of spell s, the rune will be '
             'blocked. Thus, it takes n+ 2 or fewer spells to destroy the rune '
             'that is on your artifact. Keep in mind that the required '
             'destructive spell s must also be counted among these n+ 2 '
             'spells. Note that the length n of the rune- destroying spell s '
             'is not known to you in advance. It is only known that its length '
             'n does not exceed 300. InteractionInteraction is happening '
             'through queries. Each request consists of a single non- empty '
             'string t — the spell you want to cast. The length of string t '
             'should not exceed 300. Each string should consist only of the '
             'letters a and b. In response to the query, you will get '
             'resistance runes — the edit distance between the strings that '
             'specify the casted spell t and the secret rune- destroying spell '
             's. Remember that s contains only the letters a and b. After '
             'breaking the rune, your program should end immediately. A rune '
             'is destroyed when you get a response with resistance 0. After '
             'receiving the value 0, your program should terminate normally. '
             'In this problem interactor is not adaptive. This means that '
             'during any test the rune- destroying spell s does not change. If '
             'your query is invalid, - 1 will be returned. After receiving '
             'this your program should immediately terminate normally ( for '
             'example, by calling exit( 0) ) , otherwise, the testing system '
             'may issue an arbitrary verdict. If the number of spells exceeds '
             'limit ( n+ 2, where n is the length of the spell s, which is '
             'unknown to you) , you will get the Wrong Answer verdict. Your '
             'solution may receive the verdict Idleness Limit Exceeded if you '
             "don' t output anything or forget to flush the output buffer. To "
             'flush the output buffer, you need to do the following '
             'immediately after printing the query and the line end: fflush( '
             'stdout) or cout. flush( ) in C+ + ; System. out. flush( ) in '
             'Java; flush( output) in Pascal; stdout. flush( ) in Python; for '
             'other languages see documentation. HacksFor hacks, use the '
             'following format: In a single line print the string s ( 1≤| s| '
             '≤300) of letters a and b, which defines the rune- destroying '
             'spell. The hacked solution will not have direct access to the '
             'unknown spell.',
  'input': ' ',
  'note': ' ',
  'output': ' ',
  'title': 'Enchanted Artifact',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1282/D'},
 {'history': 'Happy new year! The year 2020 is also known as Year Gyeongja ( '
             '경자년, gyeongja- nyeon) in Korea. Where did the name come '
             "from? Let' s briefly look at the Gapja system, which is "
             'traditionally used in Korea to name the years. There are two '
             'sequences of nn strings s1, s2, s3, . . . , sns1, s2, s3, . . . '
             ', sn and mm strings t1, t2, t3, . . . , tmt1, t2, t3, . . . , '
             'tm. These strings contain only lowercase letters. There might be '
             "duplicates among these strings. Let' s call a concatenation of "
             'strings xx and yy as the string that is obtained by writing down '
             'strings xx and yy one right after another without changing the '
             'order. For example, the concatenation of the strings " code" and '
             '" forces" is the string " codeforces" . The year 1 has a name '
             'which is the concatenation of the two strings s1s1 and t1t1. '
             'When the year increases by one, we concatenate the next two '
             'strings in order from each of the respective sequences. If the '
             'string that is currently being used is at the end of its '
             'sequence, we go back to the first string in that sequence. For '
             'example, if n= 3, m= 4, s= n= 3, m= 4, s= " a" , " b" , " c" , '
             't= t= " d" , " e" , " f" , " g" , the following table denotes '
             'the resulting year names. Note that the names of the years may '
             'repeat. You are given two sequences of strings of size nn and mm '
             'and also qq queries. For each query, you will be given the '
             'current year. Could you find the name corresponding to the given '
             'year, according to the Gapja system?',
  'input': 'The first line contains two integers n, mn, m ( 1≤n, m≤201≤n, '
           'm≤20) . The next line contains nn strings s1, s2, . . . , sns1, '
           's2, . . . , sn. Each string contains only lowercase letters, and '
           'they are separated by spaces. The length of each string is at '
           'least 11 and at most 1010. The next line contains mm strings t1, '
           't2, . . . , tmt1, t2, . . . , tm. Each string contains only '
           'lowercase letters, and they are separated by spaces. The length of '
           'each string is at least 11 and at most 1010. Among the given n+ '
           'mn+ m strings may be duplicates ( that is, they are not '
           'necessarily all different) . The next line contains a single '
           'integer qq ( 1≤q≤20201≤q≤2020) . In the next qq lines, an integer '
           'yy ( 1≤y≤1091≤y≤109) is given, denoting the year we want to know '
           'the name for.',
  'note': 'The first example denotes the actual names used in the Gapja '
          'system. These strings usually are either a number or the name of '
          'some animal.',
  'output': 'Print qq lines. For each line, print the name of the year as per '
            'the rule described above.',
  'title': 'New Year and Naming',
  'topics': ['implementation', 'strings'],
  'url': 'https://codeforces.com/problemset/problem/1284/A'},
 {'history': 'Today, as a friendship gift, Bakry gave Badawy n integers a1, '
             'a2, . . . , an and challenged him to choose an integer X such '
             'that the value max is minimum possible, where ⊕denotes the '
             'bitwise XOR operation. As always, Badawy is too lazy, so you '
             'decided to help him and find the minimum possible value of 1 ≤i '
             '≤nmax ( a_ i ⊕X) .',
  'input': 'The first line contains integer n ( 1≤n ≤10^ 5) . The second line '
           'contains n integers a_ 1, a_ 2, . . . , a_ n ( 0 ≤a_ i ≤2^ 30- 1) '
           '.',
  'note': 'In the first sample, we can choose X = 3. In the second sample, we '
          'can choose X = 5.',
  'output': 'Print one integer — the minimum possible value of 1 ≤i ≤nmax ( a_ '
            'i ⊕X) .',
  'title': 'Dr. Evil Underscores',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1285/D'},
 {'history': 'Fedya has a string S, initially empty, and an array W, also '
             'initially empty. There are n queries to process, one at a time. '
             'Query i consists of a lowercase English letter ci and a '
             'nonnegative integer wi. First, ci must be appended to S, and wi '
             'must be appended to W. The answer to the query is the sum of '
             'suspiciousnesses for all subsegments of W [ L, R] , ( 1≤L≤R≤i) . '
             'We define the suspiciousness of a subsegment as follows: if the '
             'substring of S corresponding to this subsegment ( that is, a '
             'string of consecutive characters from L- th to R- th, inclusive) '
             'matches the prefix of S of the same length ( that is, a '
             'substring corresponding to the subsegment [ 1, R−L+ 1] ) , then '
             'its suspiciousness is equal to the minimum in the array W on the '
             '[ L, R] subsegment. Otherwise, in case the substring does not '
             'match the corresponding prefix, the suspiciousness is 0. Help '
             'Fedya answer all the queries before the orderlies come for him!',
  'input': 'The first line contains an integer n ( 1≤n≤600000) — the number of '
           'queries. The i- th of the following n lines contains the query i: '
           'a lowercase letter of the Latin alphabet ci and an integer wi ( '
           '0≤wi≤230−1) . All queries are given in an encrypted form. Let ans '
           'be the answer to the previous query ( for the first query we set '
           'this value equal to 0) . Then, in order to get the real query, you '
           'need to do the following: perform a cyclic shift of ci in the '
           'alphabet forward by ans, and set wi equal to wi⊕( ans MASK) , '
           'where ⊕ is the bitwise exclusive " or" , is the bitwise " and" , '
           'and MASK= 230−1.',
  'note': 'For convenience, we will call " suspicious" those subsegments for '
          'which the corresponding lines are prefixes of S, that is, those '
          'whose suspiciousness may not be zero. As a result of decryption in '
          'the first example, after all requests, the string S is equal to " '
          'abacaba" , and all wi= 1, that is, the suspiciousness of all '
          "suspicious sub- segments is simply equal to 1. Let' s see how the "
          'answer is obtained after each request: 1. S = " a" , the array W '
          'has a single subsegment — [ 1, 1] , and the corresponding substring '
          'is " a" , that is, the entire string S, thus it is a prefix of S, '
          'and the suspiciousness of the subsegment is 1. 2. S = " ab" , '
          'suspicious subsegments: [ 1, 1] and [ 1, 2] , total 2. 3. S = " '
          'aba" , suspicious subsegments: [ 1, 1] , [ 1, 2] , [ 1, 3] and [ 3, '
          '3] , total 4. 4. S = " abac" , suspicious subsegments: [ 1, 1] , [ '
          '1, 2] , [ 1, 3] , [ 1, 4] and [ 3, 3] , total 5. 5. S = " abaca" , '
          'suspicious subsegments: [ 1, 1] , [ 1, 2] , [ 1, 3] , [ 1, 4] , [ '
          '1, 5] , [ 3, 3] and [ 5, 5] , total 7. 6. S = " abacab" , '
          'suspicious subsegments: [ 1, 1] , [ 1, 2] , [ 1, 3] , [ 1, 4] , [ '
          '1, 5] , [ 1, 6] , [ 3, 3] , [ 5, 5] and [ 5, 6] , total 9. 7. S = " '
          'abacaba" , suspicious subsegments: [ 1, 1] , [ 1, 2] , [ 1, 3] , [ '
          '1, 4] , [ 1, 5] , [ 1, 6] , [ 1, 7] , [ 3, 3] , [ 5, 5] , [ 5, 6] , '
          '[ 5, 7] and [ 7, 7] , total 12. In the second example, after all '
          'requests S = " aaba" , W= [ 2, 0, 2, 0] . 1. S = " a" , suspicious '
          'subsegments: [ 1, 1] ( suspiciousness 2) , totaling 2. 2. S = " aa" '
          ', suspicious subsegments: [ 1, 1] ( 2) , [ 1, 2] ( 0) , [ 2, 2] ( '
          '0) , totaling 2. 3. S = " aab" , suspicious subsegments: [ 1, 1] ( '
          '2) , [ 1, 2] ( 0) , [ 1, 3] ( 0) , [ 2, 2] ( 0) , totaling 2. 4. S '
          '= " aaba" , suspicious subsegments: [ 1, 1] ( 2) , [ 1, 2] ( 0) , [ '
          '1, 3] ( 0) , [ 1, 4] ( 0) , [ 2, 2] ( 0) , [ 4, 4] ( 0) , totaling '
          '2. In the third example, from the condition after all requests S = '
          '" abcde" , W= [ 7, 2, 10, 1, 7] . 1. S = " a" , suspicious '
          'subsegments: [ 1, 1] ( 7) , totaling 7. 2. S = " ab" , suspicious '
          'subsegments: [ 1, 1] ( 7) , [ 1, 2] ( 2) , totaling 9. 3. S = " '
          'abc" , suspicious subsegments: [ 1, 1] ( 7) , [ 1, 2] ( 2) , [ 1, '
          '3] ( 2) , totaling 11. 4. S = " abcd" , suspicious subsegments: [ '
          '1, 1] ( 7) , [ 1, 2] ( 2) , [ 1, 3] ( 2) , [ 1, 4] ( 1) , totaling '
          '12. 5. S = " abcde" , suspicious subsegments: [ 1, 1] ( 7) , [ 1, '
          '2] ( 2) , [ 1, 3] ( 2) , [ 1, 4] ( 1) , [ 1, 5] ( 1) , totaling 13.',
  'output': 'Print n lines, i- th line should contain a single integer — the '
            'answer to the i- th query.',
  'title': 'Fedya the Potter Strikes Back',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1286/E'},
 {'history': "Let' s call two strings ss and t anagrams of each other if it is "
             'possible to rearrange symbols in the string s to get a string, '
             "equal to t. Let' s consider two strings s and t which are "
             'anagrams of each other. We say that t is a reducible anagram of '
             's if there exists an integer k≥2 and 2k non- empty strings s1, '
             't1, s2, t2, . . . , sk, tk that satisfy the following '
             'conditions: If we write the strings s1, s2, . . . , sk in order, '
             'the resulting string will be equal to s; If we write the strings '
             't1, t2, . . . , tk in order, the resulting string will be equal '
             'to t; For all integers i between 1 and k inclusive, si and ti '
             "are anagrams of each other. If such strings don' t exist, then t "
             'is said to be an irreducible anagram of s. Note that these '
             'notions are only defined when s and t are anagrams of each '
             'other. For example, consider the string s= " gamegame" . Then '
             'the string t= " megamage" is a reducible anagram of s, we may '
             'choose for example s1= " game" , s2= " gam" , s3= " e" and t1= " '
             'mega" , t2= " mag" , t3= " e" : On the other hand, we can prove '
             'that t= " memegaga" is an irreducible anagram of s. You will be '
             'given a string s and q queries, represented by two integers '
             '1≤l≤r≤| s| ( where | s| is equal to the length of the string s) '
             '. For each query, you should find if the substring of s formed '
             'by characters from the l- th to the r- th has at least one '
             'irreducible anagram.',
  'input': 'The first line contains a string s, consisting of lowercase '
           'English characters ( 1≤| s| ≤2⋅105) . The second line contains a '
           'single integer q ( 1≤q≤105) — the number of queries. Each of the '
           'following q lines contain two integers l and r ( 1≤l≤r≤| s| ) , '
           'representing a query for the substring of s formed by characters '
           'from the l- th to the r- th.',
  'note': 'In the first sample, in the first and third queries, the substring '
          'is " a" , which has itself as an irreducible anagram since two or '
          'more non- empty strings cannot be put together to obtain " a" . On '
          'the other hand, in the second query, the substring is " aaa" , '
          'which has no irreducible anagrams: its only anagram is itself, and '
          'we may choose s1= " a" , s2= " aa" , t1= " a" , t2= " aa" to show '
          'that it is a reducible anagram. In the second query of the second '
          'sample, the substring is " abb" , which has, for example, " bba" as '
          'an irreducible anagram.',
  'output': 'For each query, print a single line containing " Yes" ( without '
            'quotes) if the corresponding substring has at least one '
            'irreducible anagram, and a single line containing " No" ( without '
            'quotes) otherwise.',
  'title': 'Irreducible Anagrams',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1290/B'},
 {'history': "Let' s define a number ebne ( even but not even) if and only if "
             'its sum of digits is divisible by 2 but the number itself is not '
             'divisible by 2. For example, 13, 1227, 185217 are ebne numbers, '
             "while 12, 2, 177013, 265918 are not. If you' re still unsure "
             'what ebne numbers are, you can look at the sample notes for more '
             'clarification. You are given a non- negative integer s, '
             'consisting of n digits. You can delete some digits ( they are '
             'not necessary consecutive/ successive) to make the given number '
             'ebne. You cannot change the order of the digits, that is, after '
             'deleting the digits the remaining digits collapse. The resulting '
             "number shouldn' t contain leading zeros. You can delete any "
             'number of digits between 0 ( do not delete any digits at all) '
             'and n−1. For example, if you are given s= '
             '222373204424185217171912 then one of possible ways to make it '
             'ebne is: 222373204424185217171912 → 2237344218521717191. The sum '
             'of digits of 2237344218521717191 is equal to 70 and is divisible '
             'by 2, but number itself is not divisible by 2: it means that the '
             'resulting number is ebne. Find any resulting number that is '
             "ebne. If it' s impossible to create an ebne number from the "
             'given number report about it.',
  'input': 'The input consists of multiple test cases. The first line contains '
           'a single integer t ( 1≤t≤1000) — the number of test cases. The '
           'description of the test cases follows. The first line of each test '
           'case contains a single integer n ( 1≤n≤3000) — the number of '
           'digits in the original number. The second line of each test case '
           'contains a non- negative integer number s, consisting of n digits. '
           'It is guaranteed that s does not contain leading zeros and the sum '
           'of n over all test cases does not exceed 3000.',
  'note': 'In the first test case of the example, 1227 is already an ebne '
          'number ( as 1+ 2+ 2+ 7= 12, 12 is divisible by 2, while in the same '
          "time, 1227 is not divisible by 2) so we don' t need to delete any "
          'digits. Answers such as 127 and 17 will also be accepted. In the '
          'second test case of the example, it is clearly impossible to create '
          'an ebne number from the given number. In the third test case of the '
          'example, there are many ebne numbers we can obtain by deleting, for '
          'example, 1 digit such as 17703, 77013 or 17013. Answers such as '
          '1701 or 770 will not be accepted as they are not ebne numbers. '
          'Answer 013 will not be accepted as it contains leading zeroes. '
          'Explanation: 1+ 7+ 7+ 0+ 3= 18. As 18 is divisible by 2 while 17703 '
          'is not divisible by 2, we can see that 17703 is an ebne number. '
          'Same with 77013 and 17013; 1+ 7+ 0+ 1= 9. Because 9 is not '
          'divisible by 2, 1701 is not an ebne number; 7+ 7+ 0= 14. This time, '
          '14 is divisible by 2 but 770 is also divisible by 2, therefore, 770 '
          'is not an ebne number. In the last test case of the example, one of '
          'many other possible answers is given. Another possible answer is: '
          '222373204424185217171912 → 22237320442418521717191 ( delete the '
          'last digit) .',
  'output': 'For each test case given in the input print the answer in the '
            'following format: If it is impossible to create an ebne number, '
            'print " - 1" ( without quotes) ; Otherwise, print the resulting '
            'number after deleting some, possibly zero, but not all digits. '
            'This number should be ebne. If there are multiple answers, you '
            'can print any of them. Note that answers with leading zeros or '
            "empty strings are not accepted. It' s not necessary to minimize "
            'or maximize the number of deleted digits.',
  'title': 'Even But Not Even',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1291/A'},
 {'history': 'You are given string s of length n consisting of 0- s and 1- s. '
             'You build an infinite string t as a concatenation of an infinite '
             'number of strings s, or t= ssss. . . For example, if s= 10010, '
             'then t= 100101001010010. . . Calculate the number of prefixes of '
             't with balance equal to x. The balance of some string q is equal '
             'to cnt0, q−cnt1, q, where cnt0, q is the number of occurrences '
             'of 0 in q, and cnt1, q is the number of occurrences of 1 in q. '
             'The number of such prefixes can be infinite; if it is so, you '
             'must say that. A prefix is a string consisting of several first '
             'letters of a given string, without any reorders. An empty prefix '
             'is also a valid prefix. For example, the string " abcd" has 5 '
             'prefixes: empty string, " a" , " ab" , " abc" and " abcd" .',
  'input': 'The first line contains the single integer T ( 1≤T≤100) — the '
           'number of test cases. Next 2T lines contain descriptions of test '
           'cases — two lines per test case. The first line contains two '
           'integers n and x ( 1≤n≤105, −109≤x≤109) — the length of string s '
           'and the desired balance, respectively. The second line contains '
           "the binary string s ( | s| = n, si∈0, 1) . It' s guaranteed that "
           "the total sum of n doesn' t exceed 105.",
  'note': 'In the first test case, there are 3 good prefixes of t: with length '
          '28, 30 and 32.',
  'output': 'Print T integers — one per test case. For each test case print '
            'the number of prefixes or −1 if there is an infinite number of '
            'such prefixes.',
  'title': 'Infinite Prefixes',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1295/B'},
 {'history': 'You are given two strings s and t consisting of lowercase Latin '
             'letters. Also you have a string z which is initially empty. You '
             'want string z to be equal to string t. You can perform the '
             'following operation to achieve this: append any subsequence of s '
             'at the end of string z. A subsequence is a sequence that can be '
             'derived from the given sequence by deleting zero or more '
             'elements without changing the order of the remaining elements. '
             'For example, if z= ac, s= abcde, you may turn z into following '
             'strings in one operation: z= acace ( if we choose subsequence '
             'ace) ; z= acbcd ( if we choose subsequence bcd) ; z= acbce ( if '
             'we choose subsequence bce) . Note that after this operation '
             "string s doesn' t change. Calculate the minimum number of such "
             'operations to turn string z into string t.',
  'input': 'The first line contains the integer T ( 1≤T≤100) — the number of '
           'test cases. The first line of each testcase contains one string s '
           '( 1≤| s| ≤105) consisting of lowercase Latin letters. The second '
           'line of each testcase contains one string t ( 1≤| t| ≤105) '
           'consisting of lowercase Latin letters. It is guaranteed that the '
           'total length of all strings s and t in the input does not exceed '
           '2⋅105.',
  'note': ' ',
  'output': 'For each testcase, print one integer — the minimum number of '
            "operations to turn string z into string t. If it' s impossible "
            'print −1.',
  'title': 'Obtain The String',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1295/C'},
 {'history': 'You are given a string s of lowercase Latin letters. It is '
             'required to paint each letter of the string in one of two colors '
             '( red or blue) so that if you write all the red letters from '
             'left to right and write all the blue letters from left to right, '
             'then the lexicographically maximum of the two written strings is '
             'lexicographically minimal. For each index, in the string s you '
             'can choose either of two colors. Formally, we write out: the '
             'string r ( can be empty) — all red letters in the order from '
             'left to right ( red subsequence) , the string b ( can be empty) '
             '— all blue letters in the order from left to right ( blue '
             'subsequence) . Your task is to paint the string such that max is '
             'minimal. Small reminder: the empty string is the '
             'lexicographically smallest string.',
  'input': 'The first line contains an integer t ( 1 ≤t ≤100) — the number of '
           'test cases in the test. Next, the test cases are given, one per '
           'line. Each test case is a non- empty string s of length between 2 '
           'to 100 characters, inclusive, which consists of lowercase Latin '
           'letters.',
  'note': ' ',
  'output': 'Print t lines, the i- th of them should contain the answer to the '
            'i- th test case of the input. Print a string of length n, where n '
            'is the length of the given string s: the j- th character of the '
            "string should be either ' R' or ' B' depending on the color of "
            'the j- th character in the answer ( painted in red or blue) . If '
            'there are several possible answers, print any of them.',
  'title': 'Paint the String',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1297/H'},
 {'history': 'You are given three strings a, b and c of the same length n. The '
             'strings consist of lowercase English letters only. The i- th '
             'letter of a is ai, the i- th letter of b is bi, the i- th letter '
             'of c is ci. For every i ( 1≤i≤n) you must swap ( i. e. exchange) '
             "ci with either ai or bi. So in total you' ll perform exactly n "
             'swap operations, each of them either ci↔ai or ci↔bi ( i iterates '
             'over all integers between 1 and n, inclusive) . For example, if '
             'a is " code" , b is " true" , and c is " help" , you can make c '
             'equal to " crue" taking the 1- st and the 4- th letters from a '
             'and the others from b. In this way a becomes " hodp" and b '
             'becomes " tele" . Is it possible that after these swaps the '
             'string a becomes exactly the same as the string b?',
  'input': 'The input consists of multiple test cases. The first line contains '
           'a single integer t ( 1≤t≤100) — the number of test cases. The '
           'description of the test cases follows. The first line of each test '
           'case contains a string of lowercase English letters a. The second '
           'line of each test case contains a string of lowercase English '
           'letters b. The third line of each test case contains a string of '
           'lowercase English letters c. It is guaranteed that in each test '
           'case these three strings are non- empty and have the same length, '
           'which is not exceeding 100.',
  'note': 'In the first test case, it is impossible to do the swaps so that '
          'string a becomes exactly the same as string b. In the second test '
          'case, you should swap ci with ai for all possible i. After the '
          'swaps a becomes " bca" , b becomes " bca" and c becomes " abc" . '
          'Here the strings a and b are equal. In the third test case, you '
          'should swap c1 with a1, c2 with b2, c3 with b3 and c4 with a4. Then '
          'string a becomes " baba" , string b becomes " baba" and string c '
          'becomes " abab" . Here the strings a and b are equal. In the fourth '
          'test case, it is impossible to do the swaps so that string a '
          'becomes exactly the same as string b.',
  'output': 'Print t lines with answers for all test cases. For each test '
            'case: If it is possible to make string a equal to string b print '
            '" YES" ( without quotes) , otherwise print " NO" ( without '
            'quotes) . You can print either lowercase or uppercase letters in '
            'the answers.',
  'title': 'Three Strings',
  'topics': ['implementation', 'strings'],
  'url': 'https://codeforces.com/problemset/problem/1301/A'},
 {'history': 'Ayoub thinks that he is a very smart person, so he created a '
             'function f( s) , where s is a binary string ( a string which '
             'contains only symbols " 0" and " 1" ) . The function f( s) is '
             'equal to the number of substrings in the string s that contains '
             'at least one symbol, that is equal to " 1" . More formally, f( '
             's) is equal to the number of pairs of integers ( l, r) , such '
             'that 1≤l≤r≤| s| ( where | s| is equal to the length of string s) '
             ', such that at least one of the symbols sl, sl+ 1, . . . , sr is '
             'equal to " 1" . For example, if s= " 01010" then f( s) = 12, '
             'because there are 12 such pairs ( l, r) : ( 1, 2) , ( 1, 3) , ( '
             '1, 4) , ( 1, 5) , ( 2, 2) , ( 2, 3) , ( 2, 4) , ( 2, 5) , ( 3, '
             '4) , ( 3, 5) , ( 4, 4) , ( 4, 5) . Ayoub also thinks that he is '
             'smarter than Mahmoud so he gave him two integers n and m and '
             'asked him this problem. For all binary strings s of length n '
             'which contains exactly m symbols equal to " 1" , find the '
             "maximum value of f( s) . Mahmoud couldn' t solve the problem so "
             'he asked you for help. Can you help him?',
  'input': 'The input consists of multiple test cases. The first line contains '
           'a single integer t ( 1≤t≤105) — the number of test cases. The '
           'description of the test cases follows. The only line for each test '
           'case contains two integers n, m ( 1≤n≤109, 0≤m≤n) — the length of '
           'the string and the number of symbols equal to " 1" in it.',
  'note': 'In the first test case, there exists only 3 strings of length 3, '
          'which has exactly 1 symbol, equal to " 1" . These strings are: s1= '
          '" 100" , s2= " 010" , s3= " 001" . The values of f for them are: f( '
          's1) = 3, f( s2) = 4, f( s3) = 3, so the maximum value is 4 and the '
          'answer is 4. In the second test case, the string s with the maximum '
          'value is " 101" . In the third test case, the string s with the '
          'maximum value is " 111" . In the fourth test case, the only string '
          's of length 4, which has exactly 0 symbols, equal to " 1" is " '
          '0000" and the value of f for that string is 0, so the answer is 0. '
          'In the fifth test case, the string s with the maximum value is " '
          '01010" and it is described as an example in the problem statement.',
  'output': 'For every test case print one integer number — the maximum value '
            'of f( s) over all strings s of length n, which has exactly m '
            'symbols, equal to " 1" .',
  'title': "Ayoub's function",
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1301/C'},
 {'history': 'You are given a string s. Each character is either 0 or 1. You '
             "want all 1' s in the string to form a contiguous subsegment. For "
             "example, if the string is 0, 1, 00111 or 01111100, then all 1' s "
             'form a contiguous subsegment, and if the string is 0101, 100001 '
             'or 11111111111101, then this condition is not met. You may erase '
             "some ( possibly none) 0' s from the string. What is the minimum "
             "number of 0' s that you have to erase?",
  'input': 'The first line contains one integer t ( 1≤t≤100) — the number of '
           'test cases. Then t lines follow, each representing a test case. '
           'Each line contains one string s ( 1≤| s| ≤100) ; each character of '
           's is either 0 or 1.',
  'note': 'In the first test case you have to delete the third and forth '
          'symbols from string 010011 ( it turns into 0111) .',
  'output': 'Print t integers, where the i- th integer is the answer to the i- '
            "th testcase ( the minimum number of 0' s that you have to erase "
            'from s) .',
  'title': 'Erasing Zeroes',
  'topics': ['implementation', 'strings'],
  'url': 'https://codeforces.com/problemset/problem/1303/A'},
 {'history': 'You are given a string s. You can build new string p from s '
             'using the following operation no more than two times: choose any '
             'subsequence si1, si2, . . . , sik where 1≤i1< i2< ⋯< ik≤| s| ; '
             'erase the chosen subsequence from s ( s can become empty) ; '
             'concatenate chosen subsequence to the right of the string p ( in '
             'other words, p= p+ si1si2. . . sik) . Of course, initially the '
             "string p is empty. For example, let s= ababcd. At first, let' s "
             'choose subsequence s1s4s5= abc — we will get s= bad and p= abc. '
             "At second, let' s choose s1s2= ba — we will get s= d and p= "
             'abcba. So we can build abcba from ababcd. Can you build a given '
             'string t using the algorithm above?',
  'input': 'The first line contains the single integer T ( 1≤T≤100) — the '
           'number of test cases. Next 2T lines contain test cases — two per '
           'test case. The first line contains string s consisting of '
           'lowercase Latin letters ( 1≤| s| ≤400) — the initial string. The '
           'second line contains string t consisting of lowercase Latin '
           "letters ( 1≤| t| ≤| s| ) — the string you' d like to build. It' s "
           "guaranteed that the total length of strings s doesn' t exceed 400.",
  'note': ' ',
  'output': 'Print T answers — one per test case. Print YES ( case '
            "insensitive) if it' s possible to build t and NO ( case "
            'insensitive) otherwise.',
  'title': 'Erase Subsequences',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1303/E'},
 {'history': 'Returning back to problem solving, Gildong is now studying about '
             'palindromes. He learned that a palindrome is a string that is '
             'the same as its reverse. For example, strings " pop" , " noon" , '
             '" x" , and " kkkkkk" are palindromes, while strings " moon" , " '
             'tv" , and " abab" are not. An empty string is also a palindrome. '
             'Gildong loves this concept so much, so he wants to play with it. '
             'He has n distinct strings of equal length m. He wants to discard '
             'some of the strings ( possibly none or all) and reorder the '
             'remaining strings so that the concatenation becomes a '
             'palindrome. He also wants the palindrome to be as long as '
             'possible. Please help him find one.',
  'input': 'The first line contains two integers n and m ( 1≤n≤100, 1≤m≤50) — '
           'the number of strings and the length of each string. Next n lines '
           'contain a string of length m each, consisting of lowercase Latin '
           'letters only. All strings are distinct.',
  'note': 'In the first example, " battab" is also a valid answer. In the '
          'second example, there can be 4 different valid answers including '
          'the sample output. We are not going to provide any hints for what '
          'the others are. In the third example, the empty string is the only '
          'valid palindrome string.',
  'output': 'In the first line, print the length of the longest palindrome '
            'string you made. In the second line, print that palindrome. If '
            'there are multiple answers, print any one of them. If the '
            "palindrome is empty, print an empty line or don' t print this "
            'line at all.',
  'title': 'Longest Palindrome',
  'topics': ['implementation', 'strings'],
  'url': 'https://codeforces.com/problemset/problem/1304/B'},
 {'history': 'Now that Kuroni has reached 10 years old, he is a big boy and '
             "doesn' t like arrays of integers as presents anymore. This year "
             'he wants a Bracket sequence as a Birthday present. More '
             'specifically, he wants a bracket sequence so complex that no '
             'matter how hard he tries, he will not be able to remove a simple '
             "subsequence! We say that a string formed by n characters ' ( ' "
             "or ' ) ' is simple if its length n is even and positive, its "
             "first n2 characters are ' ( ' , and its last n2 characters are ' "
             ") ' . For example, the strings ( ) and ( ( ) ) are simple, while "
             'the strings ) ( and ( ) ( ) are not simple. Kuroni will be given '
             "a string formed by characters ' ( ' and ' ) ' ( the given string "
             'is not necessarily simple) . An operation consists of choosing a '
             'subsequence of the characters of the string that forms a simple '
             'string and removing all the characters of this subsequence from '
             "the string. Note that this subsequence doesn' t have to be "
             'continuous. For example, he can apply the operation to the '
             "string ' ) ( ) ( ( ) ) ) ' , to choose a subsequence of bold "
             "characters, as it forms a simple string ' ( ( ) ) ' , delete "
             "these bold characters from the string and to get ' ) ) ( ) ' . "
             'Kuroni has to perform the minimum possible number of operations '
             'on the string, in such a way that no more operations can be '
             'performed on the remaining string. The resulting string does not '
             'have to be empty. Since the given string is too large, Kuroni is '
             'unable to figure out how to minimize the number of operations. '
             'Can you help him do it instead? A sequence of characters a is a '
             'subsequence of a string b if a can be obtained from b by '
             'deletion of several ( possibly, zero or all) characters.',
  'input': 'The only line of input contains a string s ( 1≤| s| ≤1000) formed '
           "by characters ' ( ' and ' ) ' , where | s| is the length of s.",
  'note': "In the first sample, the string is ' ( ( ) ( ( ' . The operation "
          'described corresponds to deleting the bolded subsequence. The '
          "resulting string is ' ( ( ( ' , and no more operations can be "
          'performed on it. Another valid answer is choosing indices 2 and 3, '
          'which results in the same final string. In the second sample, it is '
          'already impossible to perform any operations.',
  'output': 'In the first line, print an integer k — the minimum number of '
            'operations you have to apply. Then, print 2k lines describing the '
            'operations in the following format: For each operation, print a '
            'line containing an integer m — the number of characters in the '
            'subsequence you will remove. Then, print a line containing m '
            'integers 1≤a1< a2< ⋯< am — the indices of the characters you will '
            'remove. All integers must be less than or equal to the length of '
            'the current string, and the corresponding subsequence must form a '
            'simple string. If there are multiple valid sequences of '
            'operations with the smallest k, you may print any of them.',
  'title': 'Kuroni and Simple Strings',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1305/B'},
 {'history': 'Bessie the cow has just intercepted a text that Farmer John sent '
             'to Burger Queen! However, Bessie is sure that there is a secret '
             'message hidden inside. The text is a string s of lowercase Latin '
             'letters. She considers a string t as hidden in string s if t '
             'exists as a subsequence of s whose indices form an arithmetic '
             'progression. For example, the string aab is hidden in string '
             'aaabb because it occurs at indices 1, 3, and 5, which form an '
             'arithmetic progression with a common difference of 2. Bessie '
             'thinks that any hidden string that occurs the most times is the '
             'secret message. Two occurrences of a subsequence of S are '
             'distinct if the sets of indices are different. Help her find the '
             'number of occurrences of the secret message! For example, in the '
             'string aaabb, a is hidden 3 times, b is hidden 2 times, ab is '
             'hidden 6 times, aa is hidden 3 times, bb is hidden 1 time, aab '
             'is hidden 2 times, aaa is hidden 1 time, abb is hidden 1 time, '
             'aaab is hidden 1 time, aabb is hidden 1 time, and aaabb is '
             'hidden 1 time. The number of occurrences of the secret message '
             'is 6.',
  'input': 'The first line contains a string s of lowercase Latin letters ( '
           '1≤| s| ≤105) — the text that Bessie intercepted.',
  'note': 'In the first example, these are all the hidden strings and their '
          'indice sets: a occurs at ( 1) , ( 2) , ( 3) b occurs at ( 4) , ( 5) '
          'ab occurs at ( 1, 4) , ( 1, 5) , ( 2, 4) , ( 2, 5) , ( 3, 4) , ( 3, '
          '5) aa occurs at ( 1, 2) , ( 1, 3) , ( 2, 3) bb occurs at ( 4, 5) '
          'aab occurs at ( 1, 3, 5) , ( 2, 3, 4) aaa occurs at ( 1, 2, 3) abb '
          'occurs at ( 3, 4, 5) aaab occurs at ( 1, 2, 3, 4) aabb occurs at ( '
          '2, 3, 4, 5) aaabb occurs at ( 1, 2, 3, 4, 5) Note that all the sets '
          'of indices are arithmetic progressions. In the second example, no '
          'hidden string occurs more than once. In the third example, the '
          'hidden string is the letter l.',
  'output': 'Output a single integer — the number of occurrences of the secret '
            'message.',
  'title': 'Cow and Message',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1307/C'},
 {'history': 'VK just opened its second HQ in St. Petersburg! Side of its '
             'office building has a huge string ss written on its side. This '
             'part of the office is supposed to be split into mm meeting rooms '
             'in such way that meeting room walls are strictly between letters '
             'on the building. Obviously, meeting rooms should not be of size '
             '0, but can be as small as one letter wide. Each meeting room '
             'will be named after the substring of ss written on its side. For '
             'each possible arrangement of mm meeting rooms we ordered a test '
             'meeting room label for the meeting room with lexicographically '
             'minimal name. When delivered, those labels got sorted backward '
             'lexicographically. What is printed on kkth label of the '
             'delivery?',
  'input': 'In the first line, you are given three integer numbers n, m, kn, '
           'm, k — length of string ss, number of planned meeting rooms to '
           'split ss into and number of the interesting label ( 2≤n≤1000; '
           '1≤m≤1000; 1≤k≤10182≤n≤1000; 1≤m≤1000; 1≤k≤1018) . Second input '
           'line has string ss, consisting of nn lowercase english letters. '
           'For given n, m, kn, m, k there are at least kk ways to split ss '
           'into mm substrings.',
  'note': 'In the first example, delivery consists of the labels " aba" , " '
          'ab" , " a" . In the second example, delivery consists of 30603060 '
          'labels. The first label is " aupontrougevkof" and the last one is " '
          'a" .',
  'output': 'Output single string – name of meeting room printed on kk- th '
            'label of the delivery.',
  'title': 'Au Pont Rouge',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1310/C'},
 {'history': 'Vasya had three strings a, b and s, which consist of lowercase '
             'English letters. The lengths of strings a and b are equal to n, '
             'the length of the string s is equal to m. Vasya decided to '
             'choose a substring of the string a, then choose a substring of '
             'the string b and concatenate them. Formally, he chooses a '
             'segment [ l1, r1] ( 1≤l1≤r1≤n) and a segment [ l2, r2] ( '
             '1≤l2≤r2≤n) , and after concatenation he obtains a string a[ l1, '
             'r1] + b[ l2, r2] = al1al1+ 1. . . ar1bl2bl2+ 1. . . br2. Now, '
             'Vasya is interested in counting number of ways to choose those '
             'segments adhering to the following conditions: segments [ l1, '
             'r1] and [ l2, r2] have non- empty intersection, i. e. there '
             'exists at least one integer x, such that l1≤x≤r1 and l2≤x≤r2; '
             'the string a[ l1, r1] + b[ l2, r2] is equal to the string s.',
  'input': 'The first line contains integers n and m ( 1≤n≤500000, 2≤m≤2⋅n) — '
           'the length of strings a and b and the length of the string s. The '
           'next three lines contain strings a, b and s, respectively. The '
           'length of the strings a and b is n, while the length of the string '
           's is m. All strings consist of lowercase English letters.',
  'note': "Let' s list all the pairs of segments that Vasya could choose in "
          'the first example: [ 2, 2] and [ 2, 5] ; [ 1, 2] and [ 2, 4] ; [ 5, '
          '5] and [ 2, 5] ; [ 5, 6] and [ 3, 5] ;',
  'output': 'Print one integer — the number of ways to choose a pair of '
            "segments, which satisfy Vasya' s conditions.",
  'title': 'Concatenation with intersection',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1313/E'},
 {'history': 'After a long party Petya decided to return home, but he turned '
             'out to be at the opposite end of the town from his home. There '
             'are nn crossroads in the line in the town, and there is either '
             'the bus or the tram station at each crossroad. The crossroads '
             'are represented as a string ss of length nn, where si= Asi= A, '
             'if there is a bus station at ii- th crossroad, and si= Bsi= B, '
             'if there is a tram station at ii- th crossroad. Currently Petya '
             'is at the first crossroad ( which corresponds to s1s1) and his '
             'goal is to get to the last crossroad ( which corresponds to '
             'snsn) . If for two crossroads ii and jj for all crossroads i, i+ '
             '1, . . . , j−1i, i+ 1, . . . , j−1 there is a bus station, one '
             'can pay aa roubles for the bus ticket, and go from ii- th '
             'crossroad to the jj- th crossroad by the bus ( it is not '
             'necessary to have a bus station at the jj- th crossroad) . '
             'Formally, paying aa roubles Petya can go from ii to jj if st= '
             'Ast= A for all i≤t< ji≤t< j. If for two crossroads ii and jj for '
             'all crossroads i, i+ 1, . . . , j−1i, i+ 1, . . . , j−1 there is '
             'a tram station, one can pay bb roubles for the tram ticket, and '
             'go from ii- th crossroad to the jj- th crossroad by the tram ( '
             'it is not necessary to have a tram station at the jj- th '
             'crossroad) . Formally, paying bb roubles Petya can go from ii to '
             'jj if st= Bst= B for all i≤t< ji≤t< j. For example, if ss= " '
             'AABBBAB" , a= 4a= 4 and b= 3b= 3 then Petya needs: buy one bus '
             'ticket to get from 11 to 33, buy one tram ticket to get from 33 '
             'to 66, buy one bus ticket to get from 66 to 77. Thus, in total '
             'he needs to spend 4+ 3+ 4= 114+ 3+ 4= 11 roubles. Please note '
             'that the type of the stop at the last crossroad ( i. e. the '
             'character snsn) does not affect the final expense. Now Petya is '
             'at the first crossroad, and he wants to get to the nn- th '
             "crossroad. After the party he has left with pp roubles. He' s "
             'decided to go to some station on foot, and then go to home using '
             'only public transport. Help him to choose the closest crossroad '
             'ii to go on foot the first, so he has enough money to get from '
             'the ii- th crossroad to the nn- th, using only tram and bus '
             'tickets.',
  'input': 'Each test contains one or more test cases. The first line contains '
           'the number of test cases tt ( 1≤t≤1041≤t≤104) . The first line of '
           'each test case consists of three integers a, b, pa, b, p ( 1≤a, b, '
           'p≤1051≤a, b, p≤105) — the cost of bus ticket, the cost of tram '
           'ticket and the amount of money Petya has. The second line of each '
           'test case consists of one string ss, where si= Asi= A, if there is '
           'a bus station at ii- th crossroad, and si= Bsi= B, if there is a '
           'tram station at ii- th crossroad ( 2≤| s| ≤1052≤| s| ≤105) . It is '
           'guaranteed, that the sum of the length of strings ss by all test '
           "cases in one test doesn' t exceed 105105.",
  'note': ' ',
  'output': 'For each test case print one number — the minimal index i of a '
            'crossroad Petya should go on foot. The rest of the path ( i. e. '
            'from i to n he should use public transport) .',
  'title': 'Homecoming',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1315/B'},
 {'history': 'Vasya has a string s of length n. He decides to make the '
             'following modification to the string: Pick an integer k, ( '
             '1≤k≤n) . For i from 1 to n−k+ 1, reverse the substring s[ i: i+ '
             'k−1] of s. For example, if string s is qwer and k= 2, below is '
             'the series of transformations the string goes through: qwer ( '
             'original string) wqer ( after reversing the first substring of '
             'length 2) weqr ( after reversing the second substring of length '
             '2) werq ( after reversing the last substring of length 2) Hence, '
             'the resulting string after modifying s with k= 2 is werq. Vasya '
             'wants to choose a k such that the string obtained after the '
             'above- mentioned modification is lexicographically smallest '
             'possible among all choices of k. Among all such k, he wants to '
             'choose the smallest one. Since he is busy attending Felicity '
             '2020, he asks for your help. A string a is lexicographically '
             'smaller than a string b if and only if one of the following '
             'holds: a is a prefix of b, but a= ̸b; in the first position '
             'where a and b differ, the string a has a letter that appears '
             'earlier in the alphabet than the corresponding letter in b.',
  'input': 'Each test contains multiple test cases. The first line contains '
           'the number of test cases t ( 1≤t≤5000) . The description of the '
           'test cases follows. The first line of each test case contains a '
           'single integer n ( 1≤n≤5000) — the length of the string s. The '
           'second line of each test case contains the string s of n lowercase '
           'latin letters. It is guaranteed that the sum of n over all test '
           'cases does not exceed 5000.',
  'note': 'In the first testcase of the first sample, the string modification '
          'results for the sample abab are as follows : for k= 1 : abab for k= '
          '2 : baba for k= 3 : abab for k= 4 : babaThe lexicographically '
          'smallest string achievable through modification is abab for k= 1 '
          'and 3. Smallest value of k needed to achieve is hence 1.',
  'output': 'For each testcase output two lines: In the first line output the '
            'lexicographically smallest string s′ achievable after the above- '
            'mentioned modification. In the second line output the appropriate '
            'value of k ( 1≤k≤n) that you chose for performing the '
            'modification. If there are multiple values of k that give the '
            'lexicographically smallest string, output the smallest value of k '
            'among them.',
  'title': 'String Modification',
  'topics': ['implementation', 'sortings', 'strings'],
  'url': 'https://codeforces.com/problemset/problem/1316/B'},
 {'history': 'In this problem, we will deal with binary strings. Each '
             'character of a binary string is either a 0 or a 1. We will also '
             'deal with substrings; recall that a substring is a contiguous '
             'subsequence of a string. We denote the substring of string s '
             'starting from the l- th character and ending with the r- th '
             'character as s[ l. . . r] . The characters of each string are '
             'numbered from 1. We can perform several operations on the '
             'strings we consider. Each operation is to choose a substring of '
             'our string and replace it with another string. There are two '
             'possible types of operations: replace 011 with 110, or replace '
             '110 with 011. For example, if we apply exactly one operation to '
             'the string 110011110, it can be transformed into 011011110, '
             '110110110, or 110011011. Binary string a is considered reachable '
             'from binary string b if there exists a sequence s1, s2, . . . , '
             'sk such that s1= a, sk= b, and for every i∈[ 1, k−1] , si can be '
             'transformed into si+ 1 using exactly one operation. Note that k '
             'can be equal to 1, i. e. , every string is reachable from '
             'itself. You are given a string t and q queries to it. Each query '
             'consists of three integers l1, l2 and len. To answer each query, '
             'you have to determine whether t[ l1. . . l1+ len−1] is reachable '
             'from t[ l2. . . l2+ len−1] .',
  'input': 'The first line contains one integer n ( 1≤n≤2⋅105) — the length of '
           'string t. The second line contains one string t ( | t| = n) . Each '
           'character of t is either 0 or 1. The third line contains one '
           'integer q ( 1≤q≤2⋅105) — the number of queries. Then q lines '
           'follow, each line represents a query. The i- th line contains '
           'three integers l1, l2 and len ( 1≤l1, l2≤| t| , 1≤len≤| t| −max( '
           'l1, l2) + 1) for the i- th query.',
  'note': ' ',
  'output': 'For each query, print either YES if t[ l1. . . l1+ len−1] is '
            'reachable from t[ l2. . . l2+ len−1] , or NO otherwise. You may '
            'print each letter in any register.',
  'title': 'Reachable Strings',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1320/D'},
 {'history': 'You are given a string s consisting of lowercase Latin letters. '
             'Let the length of s be | s| . You may perform several operations '
             'on this string. In one operation, you can choose some index i '
             'and remove the i- th character of s ( si) if at least one of its '
             'adjacent characters is the previous letter in the Latin alphabet '
             'for si. For example, the previous letter for b is a, the '
             'previous letter for s is r, the letter a has no previous '
             'letters. Note that after each removal the length of the string '
             'decreases by one. So, the index i should satisfy the condition '
             '1≤i≤| s| during each operation. For the character si adjacent '
             'characters are si−1 and si+ 1. The first and the last characters '
             'of s both have only one adjacent character ( unless | s| = 1) . '
             'Consider the following example. Let s= bacabcab. During the '
             'first move, you can remove the first character s1= b because s2= '
             'a. Then the string becomes s= acabcab. During the second move, '
             'you can remove the fifth character s5= c because s4= b. Then the '
             'string becomes s= acabab. During the third move, you can remove '
             "the sixth character s6= ' b' because s5= a. Then the string "
             'becomes s= acaba. During the fourth move, the only character you '
             'can remove is s4= b, because s3= a ( or s5= a) . The string '
             'becomes s= acaa and you cannot do anything with it. Your task is '
             'to find the maximum possible number of characters you can remove '
             'if you choose the sequence of operations optimally.',
  'input': 'The first line of the input contains one integer | s| ( 1≤| s| '
           '≤100) — the length of s. The second line of the input contains one '
           'string s consisting of | s| lowercase Latin letters.',
  'note': 'The first example is described in the problem statement. Note that '
          'the sequence of moves provided in the statement is not the only, '
          'but it can be shown that the maximum possible answer to this test '
          'is 4. In the second example, you can remove all but one character '
          'of s. The only possible answer follows. During the first move, '
          'remove the third character s3= d, s becomes bca. During the second '
          'move, remove the second character s2= c, s becomes ba. And during '
          'the third move, remove the first character s1= b, s becomes a.',
  'output': 'Print one integer — the maximum possible number of characters you '
            'can remove if you choose the sequence of moves optimally.',
  'title': 'Remove Adjacent',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1321/C'},
 {'history': 'You are given an array a consisting of n integers. Your task is '
             'to determine if a has some subsequence of length at least 3 that '
             'is a palindrome. Recall that an array b is called a subsequence '
             'of the array a if b can be obtained by removing some ( possibly, '
             'zero) elements from a ( not necessarily consecutive) without '
             'changing the order of remaining elements. For example, [ 2] , [ '
             '1, 2, 1, 3] and [ 2, 3] are subsequences of [ 1, 2, 1, 3] , but '
             '[ 1, 1, 2] and [ 4] are not. Also, recall that a palindrome is '
             'an array that reads the same backward as forward. In other '
             'words, the array a of length n is the palindrome if ai= an−i−1 '
             'for all i from 1 to n. For example, arrays [ 1234] , [ 1, 2, 1] '
             ', [ 1, 3, 2, 2, 3, 1] and [ 10, 100, 10] are palindromes, but '
             'arrays [ 1, 2] and [ 1, 2, 3, 1] are not. You have to answer t '
             'independent test cases.',
  'input': 'The first line of the input contains one integer t ( 1≤t≤100) — '
           'the number of test cases. Next 2t lines describe test cases. The '
           'first line of the test case contains one integer n ( 3≤n≤5000) — '
           'the length of a. The second line of the test case contains n '
           'integers a1, a2, . . . , an ( 1≤ai≤n) , where ai is the i- th '
           'element of a. It is guaranteed that the sum of n over all test '
           'cases does not exceed 5000 ( ∑n≤5000) .',
  'note': 'In the first test case of the example, the array a has a '
          'subsequence [ 1, 2, 1] which is a palindrome. In the second test '
          'case of the example, the array a has two subsequences of length 3 '
          'which are palindromes: [ 2, 3, 2] and [ 2, 2, 2] . In the third '
          'test case of the example, the array a has no subsequences of length '
          'at least 3 which are palindromes. In the fourth test case of the '
          'example, the array a has one subsequence of length 4 which is a '
          'palindrome: [ 1, 2, 2, 1] ( and has two subsequences of length 3 '
          'which are palindromes: both are [ 1, 2, 1] ) . In the fifth test '
          'case of the example, the array a has no subsequences of length at '
          'least 3 which are palindromes.',
  'output': 'For each test case, print the answer — " YES" ( without quotes) '
            'if a has some subsequence of length at least 3 that is a '
            'palindrome and " NO" otherwise.',
  'title': 'Yet Another Palindrome Problem',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1324/B'},
 {'history': 'This is the easy version of the problem. The difference is the '
             'constraint on the sum of lengths of strings and the number of '
             'test cases. You can make hacks only if you solve all versions of '
             'this task. You are given a string s, consisting of lowercase '
             'English letters. Find the longest string, t, which satisfies the '
             'following conditions: The length of t does not exceed the length '
             'of s. t is a palindrome. There exists two strings a and b ( '
             'possibly empty) , such that t= a+ b ( " + " represents '
             'concatenation) , and a is prefix of s while b is suffix of s.',
  'input': 'The input consists of multiple test cases. The first line contains '
           'a single integer t ( 1≤t≤1000) , the number of test cases. The '
           'next t lines each describe a test case. Each test case is a non- '
           'empty string s, consisting of lowercase English letters. It is '
           'guaranteed that the sum of lengths of strings over all test cases '
           'does not exceed 5000.',
  'note': 'In the first test, the string s= " a" satisfies all conditions. In '
          'the second test, the string " abcdfdcba" satisfies all conditions, '
          'because: Its length is 9, which does not exceed the length of the '
          'string s, which equals 11. It is a palindrome. " abcdfdcba" = " '
          'abcdfdc" + " ba" , and " abcdfdc" is a prefix of s while " ba" is a '
          'suffix of s. It can be proven that there does not exist a longer '
          'string which satisfies the conditions. In the fourth test, the '
          'string " c" is correct, because " c" = " c" + " " and a or b can be '
          'empty. The other possible solution for this test is " s" .',
  'output': 'For each test case, print the longest string which satisfies the '
            'conditions described above. If there exists multiple possible '
            'solutions, print any of them.',
  'title': 'Prefix-Suffix Palindrome (Easy version)',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1326/D1'},
 {'history': 'This is the hard version of the problem. The difference is the '
             'constraint on the sum of lengths of strings and the number of '
             'test cases. You can make hacks only if you solve all versions of '
             'this task. You are given a string s, consisting of lowercase '
             'English letters. Find the longest string, t, which satisfies the '
             'following conditions: The length of t does not exceed the length '
             'of s. t is a palindrome. There exists two strings a and b ( '
             'possibly empty) , such that t= a+ b ( " + " represents '
             'concatenation) , and a is prefix of s while b is suffix of s.',
  'input': 'The input consists of multiple test cases. The first line contains '
           'a single integer t ( 1≤t≤105) , the number of test cases. The next '
           't lines each describe a test case. Each test case is a non- empty '
           'string s, consisting of lowercase English letters. It is '
           'guaranteed that the sum of lengths of strings over all test cases '
           'does not exceed 106.',
  'note': 'In the first test, the string s= " a" satisfies all conditions. In '
          'the second test, the string " abcdfdcba" satisfies all conditions, '
          'because: Its length is 9, which does not exceed the length of the '
          'string s, which equals 11. It is a palindrome. " abcdfdcba" = " '
          'abcdfdc" + " ba" , and " abcdfdc" is a prefix of s while " ba" is a '
          'suffix of s. It can be proven that there does not exist a longer '
          'string which satisfies the conditions. In the fourth test, the '
          'string " c" is correct, because " c" = " c" + " " and a or b can be '
          'empty. The other possible solution for this test is " s" .',
  'output': 'For each test case, print the longest string which satisfies the '
            'conditions described above. If there exists multiple possible '
            'solutions, print any of them.',
  'title': 'Prefix-Suffix Palindrome (Hard version)',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1326/D2'},
 {'history': '',
  'input': 'The input consists of a single string of uppercase letters A- Z. '
           'The length of the string is between 1 and 10 characters, '
           'inclusive.',
  'note': ' ',
  'output': 'Output " YES" or " NO" .',
  'title': 'Elementary!',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1331/F'},
 {'history': 'Word s of length n is called k- complete if s is a palindrome, '
             'i. e. si= sn+ 1−i for all 1≤i≤n; s has a period of k, i. e. si= '
             'sk+ i for all 1≤i≤n−k. For example, " abaaba" is a 3- complete '
             'word, while " abccba" is not. Bob is given a word s of length n '
             'consisting of only lowercase Latin letters and an integer k, '
             'such that n is divisible by k. He wants to convert s to any k- '
             'complete word. To do this Bob can choose some i ( 1≤i≤n) and '
             'replace the letter at position i with some other lowercase Latin '
             'letter. So now Bob wants to know the minimum number of letters '
             'he has to replace to convert s to any k- complete word. Note '
             'that Bob can do zero changes if the word s is already k- '
             'complete. You are required to answer t test cases independently.',
  'input': 'The first line contains a single integer t ( 1≤t≤105) — the number '
           'of test cases. The first line of each test case contains two '
           'integers n and k ( 1≤k< n≤2⋅105, n is divisible by k) . The second '
           'line of each test case contains a word s of length n. It is '
           'guaranteed that word s only contains lowercase Latin letters. And '
           'it is guaranteed that the sum of n over all test cases will not '
           'exceed 2⋅105.',
  'note': 'In the first test case, one optimal solution is aaaaaa. In the '
          'second test case, the given word itself is k- complete.',
  'output': 'For each test case, output one integer, representing the minimum '
            'number of characters he has to replace to convert s to any k- '
            'complete word.',
  'title': 'K-Complete Word',
  'topics': ['implementation', 'strings'],
  'url': 'https://codeforces.com/problemset/problem/1332/C'},
 {'history': "Kaavi, the mysterious fortune teller, deeply believes that one' "
             's fate is inevitable and unavoidable. Of course, she makes her '
             "living by predicting others' future. While doing divination, "
             'Kaavi believes that magic spells can provide great power for her '
             'to see the future. Kaavi has a string TT of length mm and all '
             'the strings with the prefix TT are magic spells. Kaavi also has '
             'a string SS of length nn and an empty string AA. During the '
             'divination, Kaavi needs to perform a sequence of operations. '
             'There are two different operations: Delete the first character '
             'of SS and add it at the front of AA. Delete the first character '
             'of SS and add it at the back of AA. Kaavi can perform no more '
             'than nn operations. To finish the divination, she wants to know '
             'the number of different operation sequences to make AA a magic '
             'spell ( i. e. with the prefix TT) . As her assistant, can you '
             'help her? The answer might be huge, so Kaavi only needs to know '
             'the answer modulo 998244353998244353. Two operation sequences '
             'are considered different if they are different in length or '
             'there exists an ii that their ii- th operation is different. A '
             'substring is a contiguous sequence of characters within a '
             'string. A prefix of a string SS is a substring of SS that occurs '
             'at the beginning of SS.',
  'input': 'The first line contains a string SS of length nn ( '
           '1≤n≤30001≤n≤3000) . The second line contains a string TT of length '
           'mm ( 1≤m≤n1≤m≤n) . Both strings contain only lowercase Latin '
           'letters.',
  'note': 'The first test: The red ones are the magic spells. In the first '
          'operation, Kaavi can either add the first character " a" at the '
          'front or the back of AA, although the results are the same, they '
          'are considered as different operations. So the answer is 6×2= '
          '126×2= 12.',
  'output': 'The output contains only one integer — the answer modulo '
            '998244353998244353.',
  'title': 'Kaavi and Magic Spell',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1336/C'},
 {'history': "Let' s say string s has period k if si= si+ k for all i from 1 "
             'to | s| −k ( | s| means length of string s) and k is the minimum '
             'positive integer with this property. Some examples of a period: '
             'for s= " 0101" the period is k= 2, for s= " 0000" the period is '
             'k= 1, for s= " 010" the period is k= 2, for s= " 0011" the '
             "period is k= 4. You are given string t consisting only of 0' s "
             "and 1' s and you need to find such string s that: String s "
             "consists only of 0' s and 1' s; The length of s doesn' t exceed "
             '2⋅| t| ; String t is a subsequence of string s; String s has '
             'smallest possible period among all strings that meet conditions '
             '1—3. Let us recall that t is a subsequence of s if t can be '
             'derived from s by deleting zero or more elements ( any) without '
             'changing the order of the remaining elements. For example, t= " '
             '011" is a subsequence of s= " 10101" .',
  'input': 'The first line contains single integer T ( 1≤T≤100) — the number '
           'of test cases. Next T lines contain test cases — one per line. '
           "Each line contains string t ( 1≤| t| ≤100) consisting only of 0' s "
           "and 1' s.",
  'note': "In the first and second test cases, s= t since it' s already one of "
          'the optimal solutions. Answers have periods equal to 1 and 2, '
          'respectively. In the third test case, there are shorter optimal '
          "solutions, but it' s okay since we don' t need to minimize the "
          'string s. String s has period equal to 1.',
  'output': 'Print one string for each test case — string s you needed to '
            'find. If there are multiple solutions print any one of them.',
  'title': 'Binary Period',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1342/B'},
 {'history': 'Phoenix has a string s consisting of lowercase Latin letters. He '
             'wants to distribute all the letters of his string into k non- '
             'empty strings a1, a2, . . . , ak such that every letter of s '
             'goes to exactly one of the strings ai. The strings ai do not '
             'need to be substrings of s. Phoenix can distribute letters of s '
             'and rearrange the letters within each string ai however he '
             'wants. For example, if s= baba and k= 2, Phoenix may distribute '
             'the letters of his string in many ways, such as: ba and ba a and '
             'abb ab and ab aa and bb But these ways are invalid: baa and ba b '
             'and ba baba and empty string ( ai should be non- empty) Phoenix '
             'wants to distribute the letters of his string s into k strings '
             'a1, a2, . . . , ak to minimize the lexicographically maximum '
             'string among them, i. e. minimize max( a1, a2, . . . , ak) . '
             'Help him find the optimal distribution and print the minimal '
             'possible value of max( a1, a2, . . . , ak) . String x is '
             'lexicographically less than string y if either x is a prefix of '
             'y and x= ̸y, or there exists an index i ( 1≤i≤min( | x| , | y| ) '
             ') such that xi < yi and for every j ( 1≤j< i) xj= yj. Here | x| '
             'denotes the length of the string x.',
  'input': 'The input consists of multiple test cases. The first line contains '
           'an integer t ( 1≤t≤1000) — the number of test cases. Each test '
           'case consists of two lines. The first line of each test case '
           'consists of two integers n and k ( 1≤k≤n≤105) — the length of '
           'string s and the number of non- empty strings, into which Phoenix '
           'wants to distribute letters of s, respectively. The second line of '
           'each test case contains a string s of length n consisting only of '
           'lowercase Latin letters. It is guaranteed that the sum of n over '
           'all test cases is ≤105.',
  'note': 'In the first test case, one optimal solution is to distribute baba '
          'into ab and ab. In the second test case, one optimal solution is to '
          'distribute baacb into abbc and a. In the third test case, one '
          'optimal solution is to distribute baacb into ac, ab, and b. In the '
          'fourth test case, one optimal solution is to distribute aaaaa into '
          'aa, aa, and a. In the fifth test case, one optimal solution is to '
          'distribute aaxxzz into az, az, x, and x. In the sixth test case, '
          'one optimal solution is to distribute phoenix into ehinopx.',
  'output': 'Print t answers — one per test case. The i- th answer should be '
            'the minimal possible value of max( a1, a2, . . . , ak) in the i- '
            'th test case.',
  'title': 'Phoenix and Distribution',
  'topics': ['sortings', 'strings'],
  'url': 'https://codeforces.com/problemset/problem/1348/C'},
 {'history': 'You are given n strings a1, a2, . . . , an: all of them have the '
             'same length m. The strings consist of lowercase English letters. '
             'Find any string s of length m such that each of the given n '
             'strings differs from s in at most one position. Formally, for '
             'each given string ai, there is no more than one position j such '
             'that ai[ j] = ̸s[ j] . Note that the desired string s may be '
             'equal to one of the given strings ai, or it may differ from all '
             'the given strings. For example, if you have the strings abac and '
             'zbab, then the answer to the problem might be the string abab, '
             'which differs from the first only by the last character, and '
             'from the second only by the first.',
  'input': 'The first line contains an integer t ( 1≤t≤100) — the number of '
           'test cases. Then t test cases follow. Each test case starts with a '
           'line containing two positive integers n ( 1≤n≤10) and m ( 1≤m≤10) '
           '— the number of strings and their length. Then follow n strings '
           'ai, one per line. Each of them has length m and consists of '
           'lowercase English letters.',
  'note': 'The first test case was explained in the statement. In the second '
          'test case, the answer does not exist.',
  'output': 'Print t answers to the test cases. Each answer ( if it exists) is '
            'a string of length m consisting of lowercase English letters. If '
            'there are several answers, print any of them. If the answer does '
            'not exist, print " - 1" ( " minus one" , without quotes) .',
  'title': 'Spy-string',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1360/F'},
 {'history': 'Shubham has a binary string s. A binary string is a string '
             'containing only characters " 0" and " 1" . He can perform the '
             'following operation on the string any amount of times: Select an '
             'index of the string, and flip the character at that index. This '
             'means, if the character was " 0" , it becomes " 1" , and vice '
             'versa. A string is called good if it does not contain " 010" or '
             '" 101" as a subsequence — for instance, " 1001" contains " 101" '
             'as a subsequence, hence it is not a good string, while " 1000" '
             'doesn\' t contain neither " 010" nor " 101" as subsequences, so '
             'it is a good string. What is the minimum number of operations he '
             'will have to perform, so that the string becomes good? It can be '
             'shown that with these operations we can make any string good. A '
             'string a is a subsequence of a string b if a can be obtained '
             'from b by deletion of several ( possibly, zero or all) '
             'characters.',
  'input': 'The first line of the input contains a single integer t ( 1≤t≤100) '
           '— the number of test cases. Each of the next t lines contains a '
           'binary string s ( 1≤| s| ≤1000) .',
  'note': 'In test cases 1, 2, 5, 6 no operations are required since they are '
          'already good strings. For the 3rd test case: " 001" can be achieved '
          'by flipping the first character — and is one of the possible ways '
          'to get a good string. For the 4th test case: " 000" can be achieved '
          'by flipping the second character — and is one of the possible ways '
          'to get a good string. For the 7th test case: " 000000" can be '
          'achieved by flipping the third and fourth characters — and is one '
          'of the possible ways to get a good string.',
  'output': 'For every string, output the minimum number of operations '
            'required to make it good.',
  'title': 'Subsequence Hate',
  'topics': ['implementation', 'strings'],
  'url': 'https://codeforces.com/problemset/problem/1363/B'},
 {'history': 'You are given two strings s and t, each of length n and '
             'consisting of lowercase Latin alphabets. You want to make s '
             'equal to t. You can perform the following operation on s any '
             'number of times to achieve it — Choose any substring of s and '
             'rotate it clockwise once, that is, if the selected substring is '
             's[ l, l+ 1. . . r] , then it becomes s[ r, l, l+ 1. . . r−1] . '
             'All the remaining characters of s stay in their position. For '
             'example, on rotating the substring [ 2, 4] , string " abcde" '
             'becomes " adbce" . A string a is a substring of a string b if a '
             'can be obtained from b by deletion of several ( possibly, zero '
             'or all) characters from the beginning and several ( possibly, '
             'zero or all) characters from the end. Find the minimum number of '
             "operations required to convert s to t, or determine that it' s "
             'impossible.',
  'input': 'The first line of the input contains a single integer t ( '
           '1≤t≤2000) — the number of test cases. The description of the test '
           'cases follows. The first line of each test case contains a single '
           'integer n ( 1≤n≤2000) — the length of the strings. The second and '
           'the third lines contain strings s and t respectively. The sum of n '
           'over all the test cases does not exceed 2000.',
  'note': "For the 1- st test case, since s and t are equal, you don' t need "
          'to apply any operation. For the 2- nd test case, you only need to '
          'apply one operation on the entire string ab to convert it to ba. '
          'For the 3- rd test case, you only need to apply one operation on '
          'the entire string abc to convert it to cab. For the 4- th test '
          'case, you need to apply the operation twice: first on the entire '
          'string abc to convert it to cab and then on the substring of length '
          '2 beginning at the second character to convert it to cba. For the '
          '5- th test case, you only need to apply one operation on the entire '
          'string abab to convert it to baba. For the 6- th test case, it is '
          'not possible to convert string s to t.',
  'output': 'For each test case, output the minimum number of operations to '
            'convert s to t. If it is not possible to convert s to t, output '
            '−1 instead.',
  'title': 'Rotating Substrings',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1363/F'},
 {'history': "Let' s denote the function f( s) that takes a string s "
             'consisting of lowercase Latin letters and dots, and returns a '
             'string consisting of lowercase Latin letters as follows: let r '
             'be an empty string; process the characters of s from left to '
             'right. For each character c, do the following: if c is a '
             'lowercase Latin letter, append c at the end of the string r; '
             'otherwise, delete the last character from r ( if r is empty '
             'before deleting the last character — the function crashes) ; '
             'return r as the result of the function. You are given two '
             'strings s and t. You have to delete the minimum possible number '
             'of characters from s so that f( s) = t ( and the function does '
             "not crash) . Note that you aren' t allowed to insert new "
             'characters into s or reorder the existing ones.',
  'input': 'The input consists of two lines: the first one contains s — a '
           'string consisting of lowercase Latin letters and dots, the second '
           'one contains t — a string consisting of lowercase Latin letters ( '
           '1≤| t| ≤| s| ≤10000) . Additional constraint on the input: it is '
           'possible to remove some number of characters from s so that f( s) '
           '= t.',
  'note': ' ',
  'output': 'Print one integer — the minimum possible number of characters you '
            'have to delete from s so f( s) does not crash and returns t as '
            'the result of the function.',
  'title': 'Construct the String',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1366/G'},
 {'history': 'Alice guesses the strings that Bob made for her. At first, Bob '
             'came up with the secret string a consisting of lowercase English '
             'letters. The string a has a length of 2 or more characters. '
             'Then, from string a he builds a new string b and offers Alice '
             'the string b so that she can guess the string a. Bob builds b '
             'from a as follows: he writes all the substrings of length 2 of '
             'the string a in the order from left to right, and then joins '
             'them in the same order into the string b. For example, if Bob '
             'came up with the string a= " abac" , then all the substrings of '
             'length 2 of the string a are: " ab" , " ba" , " ac" . Therefore, '
             'the string b= " abbaac" . You are given the string b. Help Alice '
             'to guess the string a that Bob came up with. It is guaranteed '
             'that b was built according to the algorithm given above. It can '
             'be proved that the answer to the problem is unique.',
  'input': 'The first line contains a single positive integer t ( 1≤t≤1000) — '
           'the number of test cases in the test. Then t test cases follow. '
           'Each test case consists of one line in which the string b is '
           'written, consisting of lowercase English letters ( 2≤| b| ≤100) — '
           'the string Bob came up with, where | b| is the length of the '
           'string b. It is guaranteed that b was built according to the '
           'algorithm given above.',
  'note': 'The first test case is explained in the statement. In the second '
          'test case, Bob came up with the string a= " ac" , the string a has '
          'a length 2, so the string b is equal to the string a. In the third '
          'test case, Bob came up with the string a= " bcdaf" , substrings of '
          'length 2 of string a are: " bc" , " cd" , " da" , " af" , so the '
          'string b= " bccddaaf" .',
  'output': 'Output t answers to test cases. Each answer is the secret string '
            'a, consisting of lowercase English letters, that Bob came up '
            'with.',
  'title': 'Short Substrings',
  'topics': ['implementation', 'strings'],
  'url': 'https://codeforces.com/problemset/problem/1367/A'},
 {'history': 'Karl likes Codeforces and subsequences. He wants to find a '
             'string of lowercase English letters that contains at least k '
             'subsequences codeforces. Out of all possible strings, Karl wants '
             'to find a shortest one. Formally, a codeforces subsequence of a '
             'string s is a subset of ten characters of s that read codeforces '
             'from left to right. For example, codeforces contains codeforces '
             'a single time, while codeforcesisawesome contains codeforces '
             'four times: codeforcesisawesome, codeforcesisawesome, '
             'codeforcesisawesome, codeforcesisawesome. Help Karl find any '
             'shortest string that contains at least k codeforces '
             'subsequences.',
  'input': 'The only line contains a single integer k ( 1≤k≤1016) .',
  'note': ' ',
  'output': 'Print a shortest string of lowercase English letters that '
            'contains at least k codeforces subsequences. If there are several '
            'such strings, print any of them.',
  'title': 'Codeforces Subsequences',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1368/B'},
 {'history': 'Lee was cleaning his house for the party when he found a messy '
             "string under the carpets. Now he' d like to make it clean "
             'accurately and in a stylish way. . . The string s he found is a '
             'binary string of length n ( i. e. string consists only of 0- s '
             'and 1- s) . In one move he can choose two consecutive characters '
             'si and si+ 1, and if si is 1 and si+ 1 is 0, he can erase '
             'exactly one of them ( he can choose which one to erase but he '
             "can' t erase both characters simultaneously) . The string "
             'shrinks after erasing. Lee can make an arbitrary number of moves '
             "( possibly zero) and he' d like to make the string s as clean as "
             'possible. He thinks for two different strings x and y, the '
             'shorter string is cleaner, and if they are the same length, then '
             'the lexicographically smaller string is cleaner. Now you should '
             'answer t test cases: for the i- th test case, print the cleanest '
             'possible string that Lee can get by doing some number of moves. '
             'Small reminder: if we have two strings x and y of the same '
             'length then x is lexicographically smaller than y if there is a '
             'position i such that x1= y1, x2= y2, . . . , xi−1= yi−1 and xi< '
             'yi.',
  'input': 'The first line contains the integer t ( 1≤t≤104) — the number of '
           'test cases. Next 2t lines contain test cases — one per two lines. '
           'The first line of each test case contains the integer n ( 1≤n≤105) '
           '— the length of the string s. The second line contains the binary '
           'string s. The string s is a string of length n which consists only '
           "of zeroes and ones. It' s guaranteed that sum of n over test cases "
           "doesn' t exceed 105.",
  'note': "In the first test case, Lee can' t perform any moves. In the second "
          'test case, Lee should erase s2. In the third test case, Lee can '
          'make moves, for example, in the following order: 11001101 → 1100101 '
          '→ 110101 → 10101 → 1101 → 101 → 01.',
  'output': 'Print t answers — one per test case. The answer to the i- th test '
            'case is the cleanest string Lee can get after doing some number '
            'of moves ( possibly zero) .',
  'title': 'AccurateLee',
  'topics': ['implementation', 'strings'],
  'url': 'https://codeforces.com/problemset/problem/1369/B'},
 {'history': 'You are given a bracket sequence s of length n, where n is even '
             '( divisible by two) . The string s consists of n2 opening '
             "brackets ' ( ' and n2 closing brackets ' ) ' . In one move, you "
             'can choose exactly one bracket and move it to the beginning of '
             'the string or to the end of the string ( i. e. you choose some '
             'index i, remove the i- th character of s and insert it before or '
             'after all remaining characters of s) . Your task is to find the '
             'minimum number of moves required to obtain regular bracket '
             'sequence from s. It can be proved that the answer always exists '
             'under the given constraints. Recall what the regular bracket '
             'sequence is: " ( ) " is regular bracket sequence; if s is '
             'regular bracket sequence then " ( " + s + " ) " is regular '
             'bracket sequence; if s and t are regular bracket sequences then '
             's + t is regular bracket sequence. For example, " ( ) ( ) " , " '
             '( ( ) ) ( ) " , " ( ( ) ) " and " ( ) " are regular bracket '
             'sequences, but " ) ( " , " ( ) ( " and " ) ) ) " are not. You '
             'have to answer t independent test cases.',
  'input': 'The first line of the input contains one integer t ( 1≤t≤2000) — '
           'the number of test cases. Then t test cases follow. The first line '
           'of the test case contains one integer n ( 2≤n≤50) — the length of '
           's. It is guaranteed that n is even. The second line of the test '
           'case containg the string s consisting of n2 opening and n2 closing '
           'brackets.',
  'note': 'In the first test case of the example, it is sufficient to move the '
          'first bracket to the end of the string. In the third test case of '
          'the example, it is sufficient to move the last bracket to the '
          'beginning of the string. In the fourth test case of the example, we '
          'can choose last three openning brackets, move them to the beginning '
          'of the string and obtain " ( ( ( ) ) ) ( ( ) ) " .',
  'output': 'For each test case, print the answer — the minimum number of '
            'moves required to obtain regular bracket sequence from s. It can '
            'be proved that the answer always exists under the given '
            'constraints.',
  'title': 'Move Brackets',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1374/C'},
 {'history': 'Acacius is studying strings theory. Today he came with the '
             'following problem. You are given a string s of length n '
             'consisting of lowercase English letters and question marks. It '
             'is possible to replace question marks with lowercase English '
             'letters in such a way that a string " abacaba" occurs as a '
             'substring in a resulting string exactly once? Each question mark '
             'should be replaced with exactly one lowercase English letter. '
             'For example, string " a? b? c" can be transformed into strings " '
             'aabbc" and " azbzc" , but can\' t be transformed into strings " '
             'aabc" , " a? bbc" and " babbc" . Occurrence of a string t of '
             'length m in the string s of length n as a substring is a index i '
             '( 1≤i≤n−m+ 1) such that string s[ i. . i+ m−1] consisting of m '
             'consecutive symbols of s starting from i- th equals to string t. '
             'For example string " ababa" has two occurrences of a string " '
             'aba" as a substring with i= 1 and i= 3, but there are no '
             'occurrences of a string " aba" in the string " acba" as a '
             'substring. Please help Acacius to check if it is possible to '
             'replace all question marks with lowercase English letters in '
             'such a way that a string " abacaba" occurs as a substring in a '
             'resulting string exactly once.',
  'input': 'First line of input contains an integer T ( 1≤T≤5000) , number of '
           'test cases. T pairs of lines with test case descriptions follow. '
           'The first line of a test case description contains a single '
           'integer n ( 7≤n≤50) , length of a string s. The second line of a '
           'test case description contains string s of length n consisting of '
           'lowercase English letters and question marks.',
  'note': 'In first example there is exactly one occurrence of a string " '
          'abacaba" in the string " abacaba" as a substring. In second example '
          'seven question marks can be replaced with any seven lowercase '
          'English letters and with " abacaba" in particular. In sixth example '
          'there are two occurrences of a string " abacaba" as a substring.',
  'output': 'For each test case output an answer for it. In case if there is '
            'no way to replace question marks in string s with a lowercase '
            'English letters in such a way that there is exactly one '
            'occurrence of a string " abacaba" in the resulting string as a '
            'substring output " No" . Otherwise output " Yes" and in the next '
            'line output a resulting string consisting of n lowercase English '
            'letters. If there are multiple possible strings, output any. You '
            'may print every letter in " Yes" and " No" in any case you want ( '
            'so, for example, the strings yEs, yes, Yes, and YES will all be '
            'recognized as positive answer) .',
  'title': 'Acacius and String',
  'topics': ['implementation', 'strings'],
  'url': 'https://codeforces.com/problemset/problem/1379/A'},
 {'history': 'This is the easy version of the problem. The difference between '
             'the versions is the constraint on n and the required number of '
             'operations. You can make hacks only if all versions of the '
             'problem are solved. There are two binary strings a and b of '
             'length n ( a binary string is a string consisting of symbols 0 '
             'and 1) . In an operation, you select a prefix of a, and '
             'simultaneously invert the bits in the prefix ( 0 changes to 1 '
             'and 1 changes to 0) and reverse the order of the bits in the '
             'prefix. For example, if a= 001011 and you select the prefix of '
             'length 3, it becomes 011011. Then if you select the entire '
             'string, it becomes 001001. Your task is to transform the string '
             'a into b in at most 3n operations. It can be proved that it is '
             'always possible.',
  'input': 'The first line contains a single integer t ( 1≤t≤1000) — the '
           'number of test cases. Next 3t lines contain descriptions of test '
           'cases. The first line of each test case contains a single integer '
           'n ( 1≤n≤1000) — the length of the binary strings. The next two '
           'lines contain two binary strings a and b of length n. It is '
           'guaranteed that the sum of n across all test cases does not exceed '
           '1000.',
  'note': 'In the first test case, we have 01→11→00→10. In the second test '
          'case, we have 01011→00101→11101→01000→10100→00100→11100. In the '
          'third test case, the strings are already the same. Another solution '
          'is to flip the prefix of length 2, which will leave a unchanged.',
  'output': 'For each test case, output an integer k ( 0≤k≤3n) , followed by k '
            'integers p1, . . . , pk ( 1≤pi≤n) . Here k is the number of '
            'operations you use and pi is the length of the prefix you flip in '
            'the i- th operation.',
  'title': 'Prefix Flip (Easy Version)',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1381/A1'},
 {'history': 'This is the hard version of the problem. The difference between '
             'the versions is the constraint on n and the required number of '
             'operations. You can make hacks only if all versions of the '
             'problem are solved. There are two binary strings a and b of '
             'length n ( a binary string is a string consisting of symbols 0 '
             'and 1) . In an operation, you select a prefix of a, and '
             'simultaneously invert the bits in the prefix ( 0 changes to 1 '
             'and 1 changes to 0) and reverse the order of the bits in the '
             'prefix. For example, if a= 001011 and you select the prefix of '
             'length 3, it becomes 011011. Then if you select the entire '
             'string, it becomes 001001. Your task is to transform the string '
             'a into b in at most 2n operations. It can be proved that it is '
             'always possible.',
  'input': 'The first line contains a single integer t ( 1≤t≤1000) — the '
           'number of test cases. Next 3t lines contain descriptions of test '
           'cases. The first line of each test case contains a single integer '
           'n ( 1≤n≤105) — the length of the binary strings. The next two '
           'lines contain two binary strings a and b of length n. It is '
           'guaranteed that the sum of n across all test cases does not exceed '
           '105.',
  'note': 'In the first test case, we have 01→11→00→10. In the second test '
          'case, we have 01011→00101→11101→01000→10100→00100→11100. In the '
          'third test case, the strings are already the same. Another solution '
          'is to flip the prefix of length 2, which will leave a unchanged.',
  'output': 'For each test case, output an integer k ( 0≤k≤2n) , followed by k '
            'integers p1, . . . , pk ( 1≤pi≤n) . Here k is the number of '
            'operations you use and pi is the length of the prefix you flip in '
            'the i- th operation.',
  'title': 'Prefix Flip (Hard Version)',
  'topics': ['implementation', 'strings'],
  'url': 'https://codeforces.com/problemset/problem/1381/A2'},
 {'history': 'Note that the only difference between String Transformation 1 '
             'and String Transformation 2 is in the move Koa does. In this '
             'version the letter y Koa selects must be strictly greater '
             'alphabetically than x ( read statement for better understanding) '
             '. You can make hacks in these problems independently. Koa the '
             'Koala has two strings A and B of the same length n ( | A| = | B| '
             '= n) consisting of the first 20 lowercase English alphabet '
             'letters ( ie. from a to t) . In one move Koa: selects some '
             'subset of positions p1, p2, . . . , pk ( k≥1; 1≤pi≤n; pi= ̸pj if '
             'i= ̸j) of A such that Ap1= Ap2= . . . = Apk= x ( ie. all letters '
             'on this positions are equal to some letter x) . selects a letter '
             'y ( from the first 20 lowercase letters in English alphabet) '
             'such that y> x ( ie. letter y is strictly greater alphabetically '
             'than x) . sets each letter in positions p1, p2, . . . , pk to '
             'letter y. More formally: for each i ( 1≤i≤k) Koa sets Api= y. '
             'Note that you can only modify letters in string A. Koa wants to '
             'know the smallest number of moves she has to do to make strings '
             'equal to each other ( A= B) or to determine that there is no way '
             'to make them equal. Help her!',
  'input': 'Each test contains multiple test cases. The first line contains t '
           '( 1≤t≤10) — the number of test cases. Description of the test '
           'cases follows. The first line of each test case contains one '
           'integer n ( 1≤n≤105) — the length of strings A and B. The second '
           'line of each test case contains string A ( | A| = n) . The third '
           'line of each test case contains string B ( | B| = n) . Both '
           'strings consists of the first 20 lowercase English alphabet '
           'letters ( ie. from a to t) . It is guaranteed that the sum of n '
           'over all test cases does not exceed 105.',
  'note': 'In the 1- st test case Koa: selects positions 1 and 2 and sets A1= '
          'A2= b ( aab→bbb) . selects positions 2 and 3 and sets A2= A3= c ( '
          'bbb→bcc) . In the 2- nd test case Koa has no way to make string A '
          'equal B. In the 3- rd test case Koa: selects position 1 and sets '
          'A1= t ( abc→tbc) . selects position 2 and sets A2= s ( tbc→tsc) . '
          'selects position 3 and sets A3= r ( tsc→tsr) .',
  'output': 'For each test case: Print on a single line the smallest number of '
            'moves she has to do to make strings equal to each other ( A= B) '
            'or −1 if there is no way to make them equal.',
  'title': 'String Transformation 1',
  'topics': ['sortings', 'strings'],
  'url': 'https://codeforces.com/problemset/problem/1383/A'},
 {'history': 'The length of the longest common prefix of two strings s= s1s2. '
             '. . sn and t= t1t2. . . tm is defined as the maximum integer k ( '
             '0≤k≤min( n, m) ) such that s1s2. . . sk equals t1t2. . . tk. Koa '
             'the Koala initially has n+ 1 strings s1, s2, . . . , sn+ 1. For '
             'each i ( 1≤i≤n) she calculated ai — the length of the longest '
             'common prefix of si and si+ 1. Several days later Koa found '
             "these numbers, but she couldn' t remember the strings. So Koa "
             'would like to find some strings s1, s2, . . . , sn+ 1 which '
             'would have generated numbers a1, a2, . . . , an. Can you help '
             'her? If there are many answers print any. We can show that '
             'answer always exists for the given constraints.',
  'input': 'Each test contains multiple test cases. The first line contains t '
           '( 1≤t≤100) — the number of test cases. Description of the test '
           'cases follows. The first line of each test case contains a single '
           'integer n ( 1≤n≤100) — the number of elements in the list a. The '
           'second line of each test case contains n integers a1, a2, . . . , '
           'an ( 0≤ai≤50) — the elements of a. It is guaranteed that the sum '
           'of n over all test cases does not exceed 100.',
  'note': 'In the 1- st test case one of the possible answers is s= [ aeren, '
          'ari, arousal, around, ari] . Lengths of longest common prefixes '
          'are: Between aeren and ari →1 Between ari and arousal →2 Between '
          'arousal and around →4 Between around and ari →2',
  'output': 'For each test case: Output n+ 1 lines. In the i- th line print '
            'string si ( 1≤| si| ≤200) , consisting of lowercase Latin '
            'letters. Length of the longest common prefix of strings si and '
            'si+ 1 has to be equal to ai. If there are many answers print any. '
            'We can show that answer always exists for the given constraints.',
  'title': 'Common Prefixes',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1384/A'},
 {'history': 'This is an easier version of the problem E with smaller '
             'constraints. Twilight Sparkle has received a new task from '
             'Princess Celestia. This time she asked to decipher the ancient '
             'scroll containing important knowledge of pony origin. To hide '
             'the crucial information from evil eyes, pony elders cast a spell '
             'on the scroll. That spell adds exactly one letter in any place '
             'to each word it is cast on. To make the path to the knowledge '
             'more tangled elders chose some of words in the scroll and cast a '
             'spell on them. Twilight Sparkle knows that the elders admired '
             'the order in all things so the scroll original scroll contained '
             'words in lexicographically non- decreasing order. She is asked '
             'to delete one letter from some of the words of the scroll ( to '
             'undo the spell) to get some version of the original scroll. '
             'Unfortunately, there may be more than one way to recover the '
             'ancient scroll. To not let the important knowledge slip by '
             'Twilight has to look through all variants of the original scroll '
             'and find the required one. To estimate the maximum time Twilight '
             'may spend on the work she needs to know the number of variants '
             'she has to look through. She asks you to find that number! Since '
             'that number can be very big, Twilight asks you to find it modulo '
             '109+ 7. It may occur that princess Celestia has sent a wrong '
             'scroll so the answer may not exist. A string a is '
             'lexicographically smaller than a string b if and only if one of '
             'the following holds: a is a prefix of b, but a= ̸b; in the first '
             'position where a and b differ, the string a has a letter that '
             'appears earlier in the alphabet than the corresponding letter in '
             'b.',
  'input': 'The first line contains a single integer n ( 1≤n≤1000) : the '
           'number of words in the scroll. The i- th of the next n lines '
           'contains a string consisting of lowercase English letters: the i- '
           'th word in the scroll. The length of each word is more or equal '
           'than 1. The sum of lengths of words does not exceed 20000.',
  'note': 'Notice that the elders could have written an empty word ( but they '
          'surely cast a spell on it so it holds a length 1 now) .',
  'output': 'Print one integer: the number of ways to get a version of the '
            'original from the scroll modulo 109+ 7.',
  'title': 'Twilight and Ancient Scroll (easier version)',
  'topics': ['implementation', 'strings'],
  'url': 'https://codeforces.com/problemset/problem/1393/E1'},
 {'history': 'This is a harder version of the problem E with larger '
             'constraints. Twilight Sparkle has received a new task from '
             'Princess Celestia. This time she asked to decipher the ancient '
             'scroll containing important knowledge of pony origin. To hide '
             'the crucial information from evil eyes, pony elders cast a spell '
             'on the scroll. That spell adds exactly one letter in any place '
             'to each word it is cast on. To make the path to the knowledge '
             'more tangled elders chose some of words in the scroll and cast a '
             'spell on them. Twilight Sparkle knows that the elders admired '
             'the order in all things so the scroll original scroll contained '
             'words in lexicographically non- decreasing order. She is asked '
             'to delete one letter from some of the words of the scroll ( to '
             'undo the spell) to get some version of the original scroll. '
             'Unfortunately, there may be more than one way to recover the '
             'ancient scroll. To not let the important knowledge slip by '
             'Twilight has to look through all variants of the original scroll '
             'and find the required one. To estimate the maximum time Twilight '
             'may spend on the work she needs to know the number of variants '
             'she has to look through. She asks you to find that number! Since '
             'that number can be very big, Twilight asks you to find it modulo '
             '109+ 7. It may occur that princess Celestia has sent a wrong '
             'scroll so the answer may not exist. A string a is '
             'lexicographically smaller than a string b if and only if one of '
             'the following holds: a is a prefix of b, but a= ̸b; in the first '
             'position where a and b differ, the string a has a letter that '
             'appears earlier in the alphabet than the corresponding letter in '
             'b.',
  'input': 'The first line contains a single integer n ( 1≤n≤105) : the number '
           'of words in the scroll. The i- th of the next n lines contains a '
           'string consisting of lowercase English letters: the i- th word in '
           'the scroll. The length of each word is at least one. The sum of '
           'lengths of words does not exceed 106.',
  'note': 'Notice that the elders could have written an empty word ( but they '
          'surely cast a spell on it so it holds a length 1 now) .',
  'output': 'Print one integer: the number of ways to get a version of the '
            'original from the scroll modulo 109+ 7.',
  'title': 'Twilight and Ancient Scroll (harder version)',
  'topics': ['implementation', 'strings'],
  'url': 'https://codeforces.com/problemset/problem/1393/E2'},
 {'history': "No matter what trouble you' re in, don' t be afraid, but face it "
             "with a smile. I' ve made another billion dollars! — "
             'BoboniuBoboniu has issued his currencies, named Bobo Yuan. Bobo '
             'Yuan ( BBY) is a series of currencies. Boboniu gives each of '
             'them a positive integer identifier, such as BBY- 1, BBY- 2, etc. '
             'Boboniu has a BBY collection. His collection looks like a '
             'sequence. For example: We can use sequence a= [ 1, 2, 3, 3, 2, '
             '1, 4, 4, 1] a= [ 1, 2, 3, 3, 2, 1, 4, 4, 1] of length n= 9n= 9 '
             'to denote it. Now Boboniu wants to fold his collection. You can '
             'imagine that Boboniu stick his collection to a long piece of '
             'paper and fold it between currencies: Boboniu will only fold the '
             'same identifier of currencies together. In other words, if aiai '
             'is folded over ajaj ( 1≤i, j≤n1≤i, j≤n) , then ai= ajai= aj must '
             "hold. Boboniu doesn' t care if you follow this rule in the "
             'process of folding. But once it is finished, the rule should be '
             'obeyed. A formal definition of fold is described in notes. '
             'According to the picture above, you can fold aa two times. In '
             'fact, you can fold a= [ 1, 2, 3, 3, 2, 1, 4, 4, 1] a= [ 1, 2, 3, '
             '3, 2, 1, 4, 4, 1] at most two times. So the maximum number of '
             "folds of it is 22. As an international fan of Boboniu, you' re "
             "asked to calculate the maximum number of folds. You' re given a "
             'sequence aa of length nn, for each ii ( 1≤i≤n1≤i≤n) , you need '
             'to calculate the maximum number of folds of [ a1, a2, . . . , '
             'ai] [ a1, a2, . . . , ai] .',
  'input': 'The first line contains an integer nn ( 1≤n≤1051≤n≤105) . The '
           'second line contains nn integers a1, a2, . . . , ana1, a2, . . . , '
           'an ( 1≤ai≤n1≤ai≤n) .',
  'note': "Formally, for a sequence aa of length nn, let' s define the folding "
          'sequence as a sequence bb of length nn such that: bibi ( '
          '1≤i≤n1≤i≤n) is either 11 or −1−1. Let p( i) = [ bi= 1] + ∑i−1j= '
          '1bjp( i) = [ bi= 1] + ∑j= 1i−1bj. For all 1≤i< j≤n1≤i< j≤n, if p( '
          'i) = p( j) p( i) = p( j) , then aiai should be equal to ajaj. ( [ '
          'A] [ A] is the value of boolean expression AA. i. e. [ A] = 1[ A] = '
          '1 if AA is true, else [ A] = 0[ A] = 0) . Now we define the number '
          'of folds of bb as f( b) = ∑n−1i= 1[ bi= ̸bi+ 1] f( b) = ∑i= 1n−1[ '
          'bi= ̸bi+ 1] . The maximum number of folds of aa is F( a) = maxf( b) '
          '∣b is a folding sequence of aF( a) = maxf( b) ∣b is a folding '
          'sequence of a.',
  'output': 'Print nn integers. The ii- th of them should be equal to the '
            'maximum number of folds of [ a1, a2, . . . , ai] [ a1, a2, . . . '
            ', ai] .',
  'title': 'Boboniu and Banknote Collection',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1394/E'},
 {'history': 'You are given n strings s1, s2, . . . , sn consisting of '
             'lowercase Latin letters. In one operation you can remove a '
             'character from a string si and insert it to an arbitrary '
             'position in a string sj ( j may be equal to i) . You may perform '
             'this operation any number of times. Is it possible to make all n '
             'strings equal?',
  'input': 'The first line contains t ( 1≤t≤10) : the number of test cases. '
           'The first line of each test case contains a single integer n ( '
           '1≤n≤1000) : the number of strings. n lines follow, the i- th line '
           'contains si ( 1≤| si| ≤1000) . The sum of lengths of all strings '
           'in all test cases does not exceed 1000.',
  'note': 'In the first test case, you can do the following: Remove the third '
          'character of the first string and insert it after the second '
          'character of the second string, making the two strings " ca" and " '
          'cbab" respectively. Remove the second character of the second '
          'string and insert it after the second character of the first '
          'string, making both strings equal to " cab" . In the second test '
          'case, it is impossible to make all n strings equal.',
  'output': 'If it is possible to make the strings equal, print " YES" ( '
            'without quotes) . Otherwise, print " NO" ( without quotes) . You '
            'can output each character in either lowercase or uppercase.',
  'title': 'Juggling Letters',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1397/A'},
 {'history': 'A binary string is a string where each character is either 0 or '
             '1. Two binary strings a and b of equal length are similar, if '
             'they have the same character in some position ( there exists an '
             'integer i such that ai= bi) . For example: 10010 and 01111 are '
             'similar ( they have the same character in position 4) ; 10010 '
             'and 11111 are similar; 111 and 111 are similar; 0110 and 1001 '
             'are not similar. You are given an integer n and a binary string '
             "s consisting of 2n−1 characters. Let' s denote s[ l. . r] as the "
             'contiguous substring of s starting with l- th character and '
             'ending with r- th character ( in other words, s[ l. . r] = slsl+ '
             '1sl+ 2. . . sr) . You have to construct a binary string w of '
             'length n which is similar to all of the following strings: s[ 1. '
             '. n] , s[ 2. . n+ 1] , s[ 3. . n+ 2] , . . . , s[ n. . 2n−1] .',
  'input': 'The first line contains a single integer t ( 1≤t≤1000) — the '
           'number of test cases. The first line of each test case contains a '
           'single integer n ( 1≤n≤50) . The second line of each test case '
           'contains the binary string s of length 2n−1. Each character si is '
           'either 0 or 1.',
  'note': 'The explanation of the sample case ( equal characters in equal '
          'positions are bold) : The first test case: 1 is similar to s[ 1. . '
          '1] = 1. The second test case: 000 is similar to s[ 1. . 3] = 000; '
          '000 is similar to s[ 2. . 4] = 000; 000 is similar to s[ 3. . 5] = '
          '000. The third test case: 1010 is similar to s[ 1. . 4] = 1110; '
          '1010 is similar to s[ 2. . 5] = 1100; 1010 is similar to s[ 3. . 6] '
          '= 1000; 1010 is similar to s[ 4. . 7] = 0000. The fourth test case: '
          '00 is similar to s[ 1. . 2] = 10; 00 is similar to s[ 2. . 3] = 01.',
  'output': 'For each test case, print the corresponding binary string w of '
            'length n. If there are multiple such strings — print any of them. '
            'It can be shown that at least one string w meeting the '
            'constraints always exists.',
  'title': 'String Similarity',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1400/A'},
 {'history': 'You are given an integer value x and a string s consisting of '
             'digits from 1 to 9 inclusive. A substring of a string is a '
             'contiguous subsequence of that string. Let f( l, r) be the sum '
             "of digits of a substring s[ l. . r] . Let' s call substring s[ "
             'l1. . r1] x- prime if f( l1, r1) = x; there are no values l2, r2 '
             'such that l1≤l2≤r2≤r1; f( l2, r2) = ̸x; x is divisible by f( l2, '
             'r2) . You are allowed to erase some characters from the string. '
             'If you erase a character, the two resulting parts of the string '
             'are concatenated without changing their order. What is the '
             'minimum number of characters you should erase from the string so '
             'that there are no x- prime substrings in it? If there are no x- '
             'prime substrings in the given string s, then print 0.',
  'input': 'The first line contains a string s ( 1≤| s| ≤1000) . s contains '
           'only digits from 1 to 9 inclusive. The second line contains an '
           'integer x ( 1≤x≤20) .',
  'note': 'In the first example there are two 8- prime substrings " 8" and " '
          '53" . You can erase these characters to get rid of both: " '
          '116285317" . The resulting string " 1162317" contains no 8- prime '
          'substrings. Removing these characters is also a valid answer: " '
          '116285317" . In the second example you just have to erase both '
          'ones. In the third example there are no 13- prime substrings. There '
          'are no substrings with the sum of digits equal to 13 at all. In the '
          'fourth example you can have neither " 34" , nor " 43" in a string. '
          'Thus, you have to erase either all threes or all fours. There are 5 '
          "of each of them, so it doesn' t matter which.",
  'output': 'Print a single integer — the minimum number of characters you '
            'should erase from the string so that there are no x- prime '
            'substrings in it. If there are no x- prime substrings in the '
            'given string s, then print 0.',
  'title': 'x-prime Substrings',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1400/F'},
 {'history': 'Everybody knows that Balázs has the fanciest fence in the whole '
             "town. It' s built up from NN fancy sections. The sections are "
             'rectangles standing closely next to each other on the ground. '
             'The iith section has integer height hihi and integer width wiwi. '
             'We are looking for fancy rectangles on this fancy fence. A '
             'rectangle is fancy if: its sides are either horizontal or '
             'vertical and have integer lengths the distance between the '
             'rectangle and the ground is integer the distance between the '
             "rectangle and the left side of the first section is integer it' "
             's lying completely on sections What is the number of fancy '
             'rectangles? This number can be very big, so we are interested in '
             'it modulo 109+ 7109+ 7. Scoring '
             'Subtask1234567Points0121315151827ConstraintssampleN≤50andhi≤50andwi= '
             '1for allihi= 1orhi= 2for alliallhiare equalhi≤hi+ 1for '
             'alli≤N−1N≤1000no additional '
             'constraintsSubtaskPointsConstraints10sample212N≤50andhi≤50andwi= '
             '1for alli313hi= 1orhi= 2for alli415allhiare equal515hi≤hi+ 1for '
             'alli≤N−1618N≤1000727no additional constraints',
  'input': 'The first line contains NN ( 1≤N≤1051≤N≤105) – the number of '
           'sections. The second line contains NN space- separated integers, '
           'the iith number is hihi ( 1≤hi≤1091≤hi≤109) . The third line '
           'contains NN space- separated integers, the iith number is wiwi ( '
           '1≤wi≤1091≤wi≤109) .',
  'note': 'The fence looks like this: There are 5 fancy rectangles of shape: '
          'There are 3 fancy rectangles of shape: There is 1 fancy rectangle '
          'of shape: There are 2 fancy rectangles of shape: There is 1 fancy '
          'rectangle of shape:',
  'output': 'You should print a single integer, the number of fancy rectangles '
            'modulo 109+ 7109+ 7. So the output range is 0, 1, 2, . . . , 109+ '
            '60, 1, 2, . . . , 109+ 6.',
  'title': 'Fancy Fence',
  'topics': ['implementation', 'sortings'],
  'url': 'https://codeforces.com/problemset/problem/1402/A'},
 {'history': 'The government of Treeland wants to build a new road network. '
             'There are 2N2N cities in Treeland. The unfinished plan of the '
             'road network already contains N road segments, each of which '
             'connects two cities with a straight line. No two road segments '
             'have a common point ( including their endpoints) . Your task is '
             'to determine N−1 additional road segments satisfying the '
             'following conditions: Every new road segment must connect two '
             'cities with a straight line. If two segments ( new or old) have '
             'a common point, then this point must be an endpoint of both '
             'segments. The road network connects all cities: for each pair of '
             'cities there is a path consisting of segments that connects the '
             'two cities. Scoring SubtaskPointsConstraints10samples215all '
             'input segments are vertical. 315each pair of input segments are '
             'parallel. 415each input segment is either horizontal or '
             'vertical. 515N≤10000640no additional constraints',
  'input': 'The first line of the standard input contains N ( 2≤N≤105) – the '
           'number of existing road segments. Each of the following N lines '
           'contains four integers: x1, y1, x2, y2, where ( x1, y1) and ( x2, '
           'y2) are the coordinates of the endpoints of the segment ( −107≤xi, '
           'yi≤107) .',
  'note': '',
  'output': 'The standard output must contain N−1 lines, each of them '
            'containing four integers, x1, y1, x2, y2, where ( x1, y1) and ( '
            'x2, y2) are the coordinates of the cities that are the endpoints '
            'of a new road segment. If there are multiple solutions, your '
            'program may output any of them.',
  'title': 'Roads',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1402/B'},
 {'history': 'Once upon a time, in the Land of the Shamans, everyone lived on '
             'the Sky- High Beanstalk. Each shaman had a unique identifying '
             'number ii between 00 and N−1N−1, and an altitude value HiHi, '
             'representing how high he lived above ground level. The distance '
             'between two altitudes is the absolute value of their difference. '
             'All shamans lived together in peace, until one of them stole the '
             'formula of the world- famous Potion of Great Power. To cover '
             'his/ her tracks, the Thief has put a Curse on the land: most '
             'inhabitants could no longer trust each other. . . Despite the '
             'very difficult circumstances, the Order of Good Investigators '
             'have gained the following information about the Curse: When the '
             'Curse first takes effect, everyone stops trusting each other. '
             'The Curse is unstable: at the end of each day ( exactly at '
             'midnight) , one pair of shamans will start or stop trusting each '
             'other. Unfortunately, each shaman will only ever trust at most '
             'DD others at any given time. They have also reconstructed a log '
             'of who trusted whom: for each night they know which pair of '
             'shamans started/ stopped trusting each other. They believe the '
             'Thief has whispered the formula to an Evil Shaman. To avoid '
             'detection, both of them visited the home of one of their ( '
             'respective) trusted friends. During the visit, the Thief '
             'whispered the formula to the Evil Shaman through the window. ( '
             'Note: this trusted friend did not have to be home at the time. '
             "In fact, it' s even possible that they visited each other' s "
             'houses – shamans are weird. ) Fortunately, whispers only travel '
             'short distances, so the Order knows the two trusted friends '
             'visited ( by the Thief and the Evil Shaman) must live very close '
             'to each other. They ask you to help with their investigation. '
             'They would like to test their suspicions: what if the Thief was '
             'xx, the Evil Shaman was yy, and the formula was whispered on day '
             'vv? What is the smallest distance the whispered formula had to '
             'travel? That is, what is the minimum distance between the '
             'apartments of some shamans x′x′ and y′y′ ( i. e. min( '
             '∣∣Hx′−Hy′∣∣) min( | Hx′−Hy′| ) ) , such that x′x′ was a trusted '
             'friend of xx and y′y′ was a trusted friend of yy on day vv? They '
             'will share all their information with you, then ask you a number '
             'of questions. You need to answer each question immediately, '
             'before receiving the next one. InteractionThe interaction will '
             'begin with a line containing NN, DD, UU and QQ ( 2≤N≤100000( '
             '2≤N≤100000, 1≤D≤5001≤D≤500, 0≤U≤2000000≤U≤200000, 1≤Q≤50000) '
             '1≤Q≤50000) – the number of shamans, the maximum number of '
             'trusted friends a shaman can have at any given point, the number '
             'of days, and the number of questions. On the next line NN space '
             'separated integers will follow, the iith ( 1≤i≤N) ( 1≤i≤N) of '
             'which being Hi−1Hi−1 ( 0≤Hi−1≤109) ( 0≤Hi−1≤109) , the altitude '
             'of shaman i−1i−1. On the next UU lines there will be two '
             'integers each, on the iith ( 1≤i≤U1≤i≤U) AiAi and BiBi ( 0≤Ai, '
             'Bi< N( 0≤Ai, Bi< N and Ai= ̸Bi) Ai= ̸Bi) , which represents a '
             'pair of shamans who started or stopped trusting each other at '
             'the end of day i−1i−1. That is, if AiAi and BiBi trusted each '
             'other on day i−1i−1, they did not trust each other on day ii, or '
             'vice versa. Read all of these integers. The interactor now will '
             'ask you QQ question, so the following interaction should happen '
             'QQ times: Read 33 integers describing the current query: x, yx, '
             'y and vv ( x= ̸yx= ̸y, 0≤x, y< N0≤x, y< N and 0≤v≤U0≤v≤U) , '
             'where xx is the suspected Thief, yy is the suspected Evil '
             'Shaman, and vv is the suspected day. . Then print the answer to '
             'this query on a single line, i. e. you should print the minimum '
             'distance the whispered formula had to travel from some trusted '
             'friend x′x′ of xx to a trusted friend y′y′ of yy. In case '
             'someone trusted both xx and yy ( i. e. x′= y′x′= y′) , you '
             'should print 00. If xx or yy had no trusted friends, print '
             '109109. After printing each line do not forget to output end of '
             'line and flush the output. Otherwise, you will get Idleness '
             'limit exceeded. To do this, use: fflush( stdout) or cout. flush( '
             ') in C+ + ; System. out. flush( ) in Java; flush( output) in '
             'Pascal; stdout. flush( ) in Python; see documentation for other '
             'languages. Scoring '
             'Subtask123456Points01714182130ConstraintssamplesQ, U≤1000v= Ufor '
             'all questionsHi∈0, 1for all shamansiU, N≤10000no additional '
             'constraintsSubtaskPointsConstraints10samples217Q, U≤1000314v= '
             'Ufor all questions418Hi∈0, 1for all shamansi521U, N≤10000630no '
             'additional constraints',
  'input': ' ',
  'note': 'Example queries: Evolution of friendships:',
  'output': ' ',
  'title': 'The Potion of Great Power',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1403/A'},
 {'history': 'A bitstring is a string consisting only of the characters 0 and '
             '1. A bitstring is called k- balanced if every substring of size '
             'k of this bitstring has an equal amount of 0 and 1 characters ( '
             'k2 of each) . You are given an integer k and a string s which is '
             'composed only of characters 0, 1, and ? . You need to determine '
             'whether you can make a k- balanced bitstring by replacing every '
             '? characters in s with either 0 or 1. A string a is a substring '
             'of a string b if a can be obtained from b by deletion of several '
             '( possibly, zero or all) characters from the beginning and '
             'several ( possibly, zero or all) characters from the end.',
  'input': 'Each test contains multiple test cases. The first line contains '
           'the number of test cases t ( 1≤t≤104) . Description of the test '
           'cases follows. The first line of each test case contains two '
           'integers n and k ( 2≤k≤n≤3⋅105, k is even) — the length of the '
           'string and the parameter for a balanced bitstring. The next line '
           'contains the string s ( | s| = n) . It is given that s consists of '
           'only 0, 1, and ? . It is guaranteed that the sum of n over all '
           'test cases does not exceed 3⋅105.',
  'note': 'For the first test case, the string is already a 4- balanced '
          'bitstring. For the second test case, the string can be transformed '
          'into 101. For the fourth test case, the string can be transformed '
          'into 0110. For the fifth test case, the string can be transformed '
          'into 1100110.',
  'output': 'For each test case, print YES if we can replace every ? in s with '
            '0 or 1 such that the resulting bitstring is k- balanced, or NO if '
            'it is not possible.',
  'title': 'Balanced Bitstring',
  'topics': ['implementation', 'strings'],
  'url': 'https://codeforces.com/problemset/problem/1404/A'},
 {'history': 'You are given an array of integers a1, a2, . . . , an. Find the '
             'maximum possible value of aiajakalat among all five indices ( i, '
             'j, k, l, t) ( i< j< k< l< t) .',
  'input': 'The input consists of multiple test cases. The first line contains '
           'an integer t ( 1≤t≤2⋅104) — the number of test cases. The '
           'description of the test cases follows. The first line of each test '
           'case contains a single integer n ( 5≤n≤105) — the size of the '
           'array. The second line of each test case contains n integers a1, '
           "a2, . . . , an ( −3×103≤ai≤3×103) — given array. It' s guaranteed "
           'that the sum of n over all test cases does not exceed 2⋅105.',
  'note': 'In the first test case, choosing a1, a2, a3, a4, a5 is a best '
          'choice: ( −1) ⋅( −2) ⋅( −3) ⋅( −4) ⋅( −5) = −120. In the second '
          'test case, choosing a1, a2, a3, a5, a6 is a best choice: ( −1) ⋅( '
          '−2) ⋅( −3) ⋅2⋅( −1) = 12. In the third test case, choosing a1, a2, '
          'a3, a4, a5 is a best choice: ( −1) ⋅0⋅0⋅0⋅( −1) = 0. In the fourth '
          'test case, choosing a1, a2, a3, a4, a6 is a best choice: ( −9) ⋅( '
          '−7) ⋅( −5) ⋅( −3) ⋅1= 945.',
  'output': 'For each test case, print one integer — the answer to the '
            'problem.',
  'title': 'Maximum Product',
  'topics': ['implementation', 'sortings'],
  'url': 'https://codeforces.com/problemset/problem/1406/B'},
 {'history': 'There are n robbers at coordinates ( a1, b1) , ( a2, b2) , . . . '
             ', ( an, bn) and m searchlight at coordinates ( c1, d1) , ( c2, '
             'd2) , . . . , ( cm, dm) . In one move you can move each robber '
             'to the right ( increase ai of each robber by one) or move each '
             'robber up ( increase bi of each robber by one) . Note that you '
             "should either increase all ai or all bi, you can' t increase ai "
             'for some points and bi for some other points. Searchlight j can '
             'see a robber i if ai≤cj and bi≤dj. A configuration of robbers is '
             'safe if no searchlight can see a robber ( i. e. if there is no '
             'pair i, j such that searchlight j can see a robber i) . What is '
             'the minimum number of moves you need to perform to reach a safe '
             'configuration?',
  'input': 'The first line of input contains two integers n and m ( 1≤n, '
           'm≤2000) : the number of robbers and the number of searchlight. '
           'Each of the next n lines contains two integers ai, bi ( 0≤ai, '
           'bi≤106) , coordinates of robbers. Each of the next m lines '
           'contains two integers ci, di ( 0≤ci, di≤106) , coordinates of '
           'searchlights.',
  'note': 'In the first test, you can move each robber to the right three '
          'times. After that there will be one robber in the coordinates ( 3, '
          '0) . The configuration of the robbers is safe, because the only '
          "searchlight can' t see the robber, because it is in the coordinates "
          '( 2, 3) and 3> 2. In the second test, you can move each robber to '
          'the right two times and two times up. After that robbers will be in '
          "the coordinates ( 3, 8) , ( 8, 3) . It' s easy the see that the "
          'configuration of the robbers is safe. It can be proved that you '
          "can' t reach a safe configuration using no more than 3 moves.",
  'output': 'Print one integer: the minimum number of moves you need to '
            'perform to reach a safe configuration.',
  'title': 'Searchlights',
  'topics': ['implementation', 'sortings'],
  'url': 'https://codeforces.com/problemset/problem/1408/D'},
 {'history': 'You are given mm sets of integers A1, A2, . . . , AmA1, A2, . . '
             '. , Am; elements of these sets are integers between 11 and nn, '
             'inclusive. There are two arrays of positive integers a1, a2, . . '
             '. , ama1, a2, . . . , am and b1, b2, . . . , bnb1, b2, . . . , '
             'bn. In one operation you can delete an element jj from the set '
             'AiAi and pay ai+ bjai+ bj coins for that. You can make several ( '
             'maybe none) operations ( some sets can become empty) . After '
             'that, you will make an edge- colored undirected graph consisting '
             'of nn vertices. For each set AiAi you will add an edge ( x, y) ( '
             'x, y) with color ii for all x, y∈Aix, y∈Ai and x< yx< y. Some '
             'pairs of vertices can be connected with more than one edge, but '
             'such edges have different colors. You call a cycle i1→e1→i2→e2→. '
             '. . →ik→ek→i1i1→e1→i2→e2→. . . →ik→ek→i1 ( ejej is some edge '
             'connecting vertices ijij and ij+ 1ij+ 1 in this graph) rainbow '
             'if all edges on it have different colors. Find the minimum '
             'number of coins you should pay to get a graph without rainbow '
             'cycles.',
  'input': 'The first line contains two integers mm and nn ( 1≤m, n≤1051≤m, '
           'n≤105) , the number of sets and the number of vertices in the '
           'graph. The second line contains mm integers a1, a2, . . . , ama1, '
           'a2, . . . , am ( 1≤ai≤1091≤ai≤109) . The third line contains nn '
           'integers b1, b2, . . . , bnb1, b2, . . . , bn ( 1≤bi≤1091≤bi≤109) '
           '. In the each of the next of mm lines there are descriptions of '
           'sets. In the ii- th line the first integer sisi ( 1≤si≤n1≤si≤n) is '
           'equal to the size of AiAi. Then sisi integers follow: the elements '
           'of the set AiAi. These integers are from 11 to nn and distinct. It '
           'is guaranteed that the sum of sisi for all 1≤i≤m1≤i≤m does not '
           'exceed 2⋅1052⋅105.',
  'note': 'In the first test, you can make such operations: Delete element 11 '
          'from set 11. You should pay a1+ b1= 5a1+ b1= 5 coins for that. '
          'Delete element 11 from set 22. You should pay a2+ b1= 6a2+ b1= 6 '
          'coins for that. You pay 1111 coins in total. After these '
          'operations, the first and the second sets will be equal to 22 and '
          'the third set will be equal to 1, 21, 2. So, the graph will consist '
          'of one edge ( 1, 2) ( 1, 2) of color 33. In the second test, you '
          'can make such operations: Delete element 11 from set 11. You should '
          'pay a1+ b1= 11a1+ b1= 11 coins for that. Delete element 44 from set '
          '22. You should pay a2+ b4= 13a2+ b4= 13 coins for that. Delete '
          'element 77 from set 33. You should pay a3+ b7= 13a3+ b7= 13 coins '
          'for that. Delete element 44 from set 44. You should pay a4+ b4= '
          '16a4+ b4= 16 coins for that. Delete element 77 from set 66. You '
          'should pay a6+ b7= 13a6+ b7= 13 coins for that. You pay 6666 coins '
          'in total. After these operations, the sets will be: 2, 32, 3; 11; '
          '1, 31, 3; 33; 3, 4, 5, 6, 73, 4, 5, 6, 7; 55; 88. We will get the '
          'graph: There are no rainbow cycles in it.',
  'output': 'Print one integer: the minimum number of coins you should pay for '
            'operations to avoid rainbow cycles in the obtained graph.',
  'title': 'Avoid Rainbow Cycles',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1408/E'},
 {'history': 'There are nn points on a plane. The ii- th point has coordinates '
             '( xi, yi) ( xi, yi) . You have two horizontal platforms, both of '
             'length kk. Each platform can be placed anywhere on a plane but '
             'it should be placed horizontally ( on the same yy- coordinate) '
             'and have integer borders. If the left border of the platform is '
             '( x, y) ( x, y) then the right border is ( x+ k, y) ( x+ k, y) '
             'and all points between borders ( including borders) belong to '
             'the platform. Note that platforms can share common points ( '
             'overlap) and it is not necessary to place both platforms on the '
             'same yy- coordinate. When you place both platforms on a plane, '
             'all points start falling down decreasing their yy- coordinate. '
             'If a point collides with some platform at some moment, the point '
             'stops and is saved. Points which never collide with any platform '
             'are lost. Your task is to find the maximum number of points you '
             'can save if you place both platforms optimally. You have to '
             'answer tt independent test cases. For better understanding, '
             'please read the Note section below to see a picture for the '
             'first test case.',
  'input': 'The first line of the input contains one integer tt ( '
           '1≤t≤2⋅1041≤t≤2⋅104) — the number of test cases. Then tt test cases '
           'follow. The first line of the test case contains two integers nn '
           'and kk ( 1≤n≤2⋅1051≤n≤2⋅105; 1≤k≤1091≤k≤109) — the number of '
           'points and the length of each platform, respectively. The second '
           'line of the test case contains nn integers x1, x2, . . . , xnx1, '
           'x2, . . . , xn ( 1≤xi≤1091≤xi≤109) , where xixi is xx- coordinate '
           'of the ii- th point. The third line of the input contains nn '
           'integers y1, y2, . . . , yny1, y2, . . . , yn ( 1≤yi≤1091≤yi≤109) '
           ', where yiyi is yy- coordinate of the ii- th point. All points are '
           'distinct ( there is no pair 1≤i< j≤n1≤i< j≤n such that xi= xjxi= '
           'xj and yi= yjyi= yj) . It is guaranteed that the sum of nn does '
           'not exceed 2⋅1052⋅105 ( ∑n≤2⋅105∑n≤2⋅105) .',
  'note': 'The picture corresponding to the first test case of the example: '
          'Blue dots represent the points, red segments represent the '
          'platforms. One of the possible ways is to place the first platform '
          'between points ( 1, −1) ( 1, −1) and ( 2, −1) ( 2, −1) and the '
          'second one between points ( 4, 3) ( 4, 3) and ( 5, 3) ( 5, 3) . '
          'Vectors represent how the points will fall down. As you can see, '
          "the only point we can' t save is the point ( 3, 7) ( 3, 7) so it "
          'falls down infinitely and will be lost. It can be proven that we '
          "can' t achieve better answer here. Also note that the point ( 5, 3) "
          "( 5, 3) doesn' t fall at all because it is already on the platform.",
  'output': 'For each test case, print the answer: the maximum number of '
            'points you can save if you place both platforms optimally.',
  'title': 'Two Platforms',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1409/E'},
 {'history': 'You are given two strings s and t consisting of lowercase Latin '
             'letters. The length of t is 2 ( i. e. this string consists only '
             'of two characters) . In one move, you can choose any character '
             'of s and replace it with any lowercase Latin letter. More '
             'formally, you choose some i and replace si ( the character at '
             "the position i) with some character from ' a' to ' z' . You want "
             'to do no more than k replacements in such a way that maximizes '
             'the number of occurrences of t in s as a subsequence. Recall '
             'that a subsequence is a sequence that can be derived from the '
             'given sequence by deleting zero or more elements without '
             'changing the order of the remaining elements.',
  'input': 'The first line of the input contains two integers n and k ( '
           '2≤n≤200; 0≤k≤n) — the length of s and the maximum number of moves '
           'you can make. The second line of the input contains the string s '
           'consisting of n lowercase Latin letters. The third line of the '
           'input contains the string t consisting of two lowercase Latin '
           'letters.',
  'note': 'In the first example, you can obtain the string " abab" replacing '
          "s1 with ' a' and s4 with ' b' . Then the answer is 3. In the second "
          'example, you can obtain the string " ssddsdd" and get the answer '
          '10. In the fourth example, you can obtain the string " aaacaaa" and '
          'get the answer 15.',
  'output': 'Print one integer — the maximum possible number of occurrences of '
            't in s as a subsequence if you replace no more than k characters '
            'in s optimally.',
  'title': 'Subsequences of Length Two',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1409/F'},
 {'history': "Currently, XXOC' s rap is a string consisting of zeroes, ones, "
             'and question marks. Unfortunately, haters gonna hate. They will '
             'write x angry comments for every occurrence of subsequence 01 '
             'and y angry comments for every occurrence of subsequence 10. You '
             'should replace all the question marks with 0 or 1 in such a way '
             'that the number of angry comments would be as small as possible. '
             'String b is a subsequence of string a, if it can be obtained by '
             'removing some characters from a. Two occurrences of a '
             'subsequence are considered distinct if sets of positions of '
             'remaining characters are distinct.',
  'input': "The first line contains string s — XXOC' s rap ( 1≤| s| ≤105) . "
           'The second line contains two integers x and y — the number of '
           'angry comments XXOC will recieve for every occurrence of 01 and 10 '
           'accordingly ( 0≤x, y≤106) .',
  'note': 'In the first example one of the optimum ways to replace is 001. '
          'Then there will be 2 subsequences 01 and 0 subsequences 10. Total '
          'number of angry comments will be equal to 2⋅2+ 0⋅3= 4. In the '
          'second example one of the optimum ways to replace is 11111. Then '
          'there will be 0 subsequences 01 and 0 subsequences 10. Total number '
          'of angry comments will be equal to 0⋅13+ 0⋅37= 0. In the third '
          'example one of the optimum ways to replace is 1100. Then there will '
          'be 0 subsequences 01 and 4 subsequences 10. Total number of angry '
          'comments will be equal to 0⋅239+ 4⋅7= 28. In the fourth example one '
          'of the optimum ways to replace is 01101001. Then there will be 8 '
          'subsequences 01 and 8 subsequences 10. Total number of angry '
          'comments will be equal to 8⋅5+ 8⋅7= 96.',
  'output': 'Output a single integer — the minimum number of angry comments.',
  'title': 'Grime Zoo',
  'topics': ['implementation', 'strings'],
  'url': 'https://codeforces.com/problemset/problem/1411/D'},
 {'history': "You' ve got a string S consisting of n lowercase English letters "
             'from your friend. It turned out that this is a number written in '
             'poman numerals. The poman numeral system is long forgotten. All '
             "that' s left is the algorithm to transform number from poman "
             'numerals to the numeral system familiar to us. Characters of S '
             "are numbered from 1 to n from left to right. Let' s denote the "
             'value of S as f( S) , it is defined as follows: If | S| > 1, an '
             'arbitrary integer m ( 1≤m< | S| ) is chosen, and it is defined '
             'that f( S) = −f( S[ 1, m] ) + f( S[ m+ 1, | S| ] ) , where S[ l, '
             'r] denotes the substring of S from the l- th to the r- th '
             'position, inclusively. Otherwise S= c, where c is some English '
             'letter. Then f( S) = 2pos( c) , where pos( c) is the position of '
             'letter c in the alphabet ( pos( a) = 0, pos( z) = 25) . Note '
             'that m is chosen independently on each step. Your friend thinks '
             'it is possible to get f( S) = T by choosing the right m on every '
             'step. Is he right?',
  'input': 'The first line contains two integers n and T ( 2≤n≤105, '
           '−1015≤T≤1015) . The second line contains a string S consisting of '
           'n lowercase English letters.',
  'note': 'In the second example, you cannot get −7. But you can get 1, for '
          'example, as follows: First choose m= 1, then f( abc) = −f( a) + f( '
          'bc) f( a) = 20= 1 f( bc) = −f( b) + f( c) = −21+ 22= 2 In the end '
          'f( abc) = −1+ 2= 1',
  'output': 'Print " Yes" if it is possible to get the desired value. '
            'Otherwise, print " No" . You can print each letter in any case ( '
            'upper or lower) .',
  'title': 'Poman Numbers',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1411/E'},
 {'history': 'After battling Shikamaru, Tayuya decided that her flute is too '
             'predictable, and replaced it with a guitar. The guitar has 66 '
             'strings and an infinite number of frets numbered from 11. '
             'Fretting the fret number jj on the ii- th string produces the '
             'note ai+ jai+ j. Tayuya wants to play a melody of nn notes. Each '
             'note can be played on different string- fret combination. The '
             'easiness of performance depends on the difference between the '
             'maximal and the minimal indices of used frets. The less this '
             'difference is, the easier it is to perform the technique. Please '
             'determine the minimal possible difference. For example, if a= [ '
             '1, 1, 2, 2, 3, 3] a= [ 1, 1, 2, 2, 3, 3] , and the sequence of '
             'notes is 4, 11, 11, 12, 12, 13, 134, 11, 11, 12, 12, 13, 13 ( '
             'corresponding to the second example) , we can play the first '
             'note on the first string, and all the other notes on the sixth '
             'string. Then the maximal fret will be 1010, the minimal one will '
             'be 33, and the answer is 10−3= 710−3= 7, as shown on the '
             'picture.',
  'input': 'The first line contains 66 space- separated numbers a1a1, a2a2, . '
           ". . , a6a6 ( 1≤ai≤1091≤ai≤109) which describe the Tayuya' s "
           'strings. The second line contains the only integer nn ( '
           '1≤n≤1000001≤n≤100000) standing for the number of notes in the '
           'melody. The third line consists of nn integers b1b1, b2b2, . . . , '
           'bnbn ( 1≤bi≤1091≤bi≤109) , separated by space. They describe the '
           "notes to be played. It' s guaranteed that bi> ajbi> aj for all "
           '1≤i≤n1≤i≤n and 1≤j≤61≤j≤6, in other words, you can play each note '
           'on any string.',
  'note': 'In the first sample test it is optimal to play the first note on '
          'the first string, the second note on the second string, the third '
          'note on the sixth string, the fourth note on the fourth string, the '
          'fifth note on the fifth string, and the sixth note on the third '
          'string. In this case the 100100- th fret is used each time, so the '
          "difference is 100−100= 0100−100= 0. In the second test it' s "
          'optimal, for example, to play the second note on the first string, '
          'and all the other notes on the sixth string. Then the maximal fret '
          'will be 1010, the minimal one will be 33, and the answer is 10−3= '
          '710−3= 7.',
  'output': 'Print the minimal possible difference of the maximal and the '
            'minimal indices of used frets.',
  'title': 'Perform Easily',
  'topics': ['implementation', 'sortings'],
  'url': 'https://codeforces.com/problemset/problem/1413/C'},
 {'history': 'You are given an array a consisting of n non- negative integers. '
             'You have to choose a non- negative integer x and form a new '
             'array b of size n according to the following rule: for all i '
             'from 1 to n, bi= ai⊕x ( ⊕ denotes the operation bitwise XOR) . '
             'An inversion in the b array is a pair of integers i and j such '
             'that 1≤i< j≤n and bi> bj. You should choose x in such a way that '
             'the number of inversions in b is minimized. If there are several '
             'options for x — output the smallest one.',
  'input': 'First line contains a single integer n ( 1≤n≤3⋅105) — the number '
           'of elements in a. Second line contains n space- separated integers '
           'a1, a2, . . . , an ( 0≤ai≤109) , where ai is the i- th element of '
           'a.',
  'note': 'In the first sample it is optimal to leave the array as it is by '
          'choosing x= 0. In the second sample the selection of x= 14 results '
          'in b: [ 4, 9, 7, 4, 9, 11, 11, 13, 11] . It has 4 inversions: i= 2, '
          'j= 3; i= 2, j= 4; i= 3, j= 4; i= 8, j= 9. In the third sample the '
          'selection of x= 8 results in b: [ 0, 2, 11] . It has no inversions.',
  'output': 'Output two integers: the minimum possible number of inversions in '
            'b, and the minimum possible value of x, which achieves those '
            'number of inversions.',
  'title': 'XOR Inverse',
  'topics': ['sortings', 'strings'],
  'url': 'https://codeforces.com/problemset/problem/1416/C'},
 {'history': 'RedDreamer has an array a consisting of n non- negative '
             "integers, and an unlucky integer T. Let' s denote the misfortune "
             'of array b having length m as f( b) — the number of pairs of '
             'integers ( i, j) such that 1≤i< j≤m and bi+ bj= T. RedDreamer '
             'has to paint each element of a into one of two colors, white and '
             'black ( for each element, the color is chosen independently) , '
             'and then create two arrays c and d so that all white elements '
             'belong to c, and all black elements belong to d ( it is possible '
             'that one of these two arrays becomes empty) . RedDreamer wants '
             'to paint the elements in such a way that f( c) + f( d) is '
             'minimum possible. For example: if n= 6, T= 7 and a= [ 1, 2, 3, '
             '4, 5, 6] , it is possible to paint the 1- st, the 4- th and the '
             '5- th elements white, and all other elements black. So c= [ 1, '
             '4, 5] , d= [ 2, 3, 6] , and f( c) + f( d) = 0+ 0= 0; if n= 3, T= '
             '6 and a= [ 3, 3, 3] , it is possible to paint the 1- st element '
             'white, and all other elements black. So c= [ 3] , d= [ 3, 3] , '
             'and f( c) + f( d) = 0+ 1= 1. Help RedDreamer to paint the array '
             'optimally!',
  'input': 'The first line contains one integer t ( 1≤t≤1000) — the number of '
           'test cases. Then t test cases follow. The first line of each test '
           'case contains two integers n and T ( 1≤n≤105, 0≤T≤109) — the '
           'number of elements in the array and the unlucky integer, '
           'respectively. The second line contains n integers a1, a2, . . . , '
           'an ( 0≤ai≤109) — the elements of the array. The sum of n over all '
           'test cases does not exceed 105.',
  'note': ' ',
  'output': 'For each test case print n integers: p1, p2, . . . , pn ( each pi '
            'is either 0 or 1) denoting the colors. If pi is 0, then ai is '
            'white and belongs to the array c, otherwise it is black and '
            'belongs to the array d. If there are multiple answers that '
            'minimize the value of f( c) + f( d) , print any of them.',
  'title': 'Two Arrays',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1417/B'},
 {'history': 'You are given an array a, consisting of n integers. Each '
             'position i ( 1≤i≤n) of the array is either locked or unlocked. '
             'You can take the values on the unlocked positions, rearrange '
             'them in any order and place them back into the unlocked '
             'positions. You are not allowed to remove any values, add the new '
             'ones or rearrange the values on the locked positions. You are '
             'allowed to leave the values in the same order as they were. For '
             'example, let a= [ −1, 1, 3_ , 2, −2_ , 1, −4, 0_ ] , the '
             'underlined positions are locked. You can obtain the following '
             'arrays: [ −1, 1, 3_ , 2, −2_ , 1, −4, 0_ ] ; [ −4, −1, 3_ , 2, '
             '−2_ , 1, 1, 0_ ] ; [ 1, −1, 3_ , 2, −2_ , 1, −4, 0_ ] ; [ 1, 2, '
             '3_ , −1, −2_ , −4, 1, 0_ ] ; and some others. Let p be a '
             'sequence of prefix sums of the array a after the rearrangement. '
             'So p1= a1, p2= a1+ a2, p3= a1+ a2+ a3, . . . , pn= a1+ a2+ ⋯+ '
             'an. Let k be the maximum j ( 1≤j≤n) such that pj< 0. If there '
             'are no j such that pj< 0, then k= 0. Your goal is to rearrange '
             'the values in such a way that k is minimum possible. Output the '
             'array a after the rearrangement such that the value k for it is '
             'minimum possible. If there are multiple answers then print any '
             'of them.',
  'input': 'The first line contains a single integer t ( 1≤t≤1000) — the '
           'number of testcases. Then t testcases follow. The first line of '
           'each testcase contains a single integer n ( 1≤n≤100) — the number '
           'of elements in the array a. The second line of each testcase '
           'contains n integers a1, a2, . . . , an ( −105≤ai≤105) — the '
           'initial array a. The third line of each testcase contains n '
           'integers l1, l2, . . . , ln ( 0≤li≤1) , where li= 0 means that the '
           'position i is unlocked and li= 1 means that the position i is '
           'locked.',
  'note': 'In the first testcase you can rearrange all values however you want '
          'but any arrangement will result in k= 0. For example, for an '
          'arrangement [ 1, 2, 3] , p= [ 1, 3, 6] , so there are no j such '
          'that pj< 0. Thus, k= 0. In the second testcase you are not allowed '
          'to rearrange any elements. Thus, the printed array should be '
          'exactly the same as the initial one. In the third testcase the '
          'prefix sums for the printed array are p= [ −8, −14, −13, −9, −5, 2, '
          '0] . The maximum j is 5, thus k= 5. There are no arrangements such '
          'that k< 5. In the fourth testcase p= [ −4, −4, −3, 3, 6] . In the '
          'fifth testcase p= [ −1, 3, 10, 2, 12, 11] .',
  'output': 'Print n integers — the array a after the rearrangement. Value k ( '
            'the maximum j such that pj< 0 ( or 0 if there are no such j) ) '
            'should be minimum possible. For each locked position the printed '
            'value should be equal to the initial one. The values on the '
            'unlocked positions should be an arrangement of the initial ones. '
            'If there are multiple answers then print any of them.',
  'title': 'Negative Prefixes',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1418/B'},
 {'history': 'This is the easy version of the problem. The difference between '
             'the versions is that in the easy version all prices ai are '
             'different. You can make hacks if and only if you solved both '
             "versions of the problem. Today is Sage' s birthday, and she will "
             'go shopping to buy ice spheres. All n ice spheres are placed in '
             'a row and they are numbered from 1 to n from left to right. Each '
             'ice sphere has a positive integer price. In this version all '
             'prices are different. An ice sphere is cheap if it costs '
             'strictly less than two neighboring ice spheres: the nearest to '
             'the left and the nearest to the right. The leftmost and the '
             'rightmost ice spheres are not cheap. Sage will choose all cheap '
             'ice spheres and then buy only them. You can visit the shop '
             'before Sage and reorder the ice spheres as you wish. Find out '
             'the maximum number of ice spheres that Sage can buy, and show '
             'how the ice spheres should be reordered.',
  'input': 'The first line contains a single integer n ( 1≤n≤105) — the number '
           'of ice spheres in the shop. The second line contains n different '
           'integers a1, a2, . . . , an ( 1≤ai≤109) — the prices of ice '
           'spheres.',
  'note': "In the example it' s not possible to place ice spheres in any order "
          'so that Sage would buy 3 of them. If the ice spheres are placed '
          'like this ( 3, 1, 4, 2, 5) , then Sage will buy two spheres: one '
          'for 1 and one for 2, because they are cheap.',
  'output': 'In the first line print the maximum number of ice spheres that '
            'Sage can buy. In the second line print the prices of ice spheres '
            'in the optimal order. If there are several correct answers, you '
            'can print any of them.',
  'title': "Sage's Birthday (easy version)",
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1419/D1'},
 {'history': 'This is the hard version of the problem. The difference between '
             'the versions is that in the easy version all prices ai are '
             'different. You can make hacks if and only if you solved both '
             "versions of the problem. Today is Sage' s birthday, and she will "
             'go shopping to buy ice spheres. All n ice spheres are placed in '
             'a row and they are numbered from 1 to n from left to right. Each '
             'ice sphere has a positive integer price. In this version, some '
             'prices can be equal. An ice sphere is cheap if it costs strictly '
             'less than two neighboring ice spheres: the nearest to the left '
             'and the nearest to the right. The leftmost and the rightmost ice '
             'spheres are not cheap. Sage will choose all cheap ice spheres '
             'and then buy only them. You can visit the shop before Sage and '
             'reorder the ice spheres as you wish. Find out the maximum number '
             'of ice spheres that Sage can buy, and show how the ice spheres '
             'should be reordered.',
  'input': 'The first line contains a single integer n ( 1≤n≤105) — the number '
           'of ice spheres in the shop. The second line contains n integers '
           'a1, a2, . . . , an ( 1≤ai≤109) — the prices of ice spheres.',
  'note': "In the sample it' s not possible to place the ice spheres in any "
          'order so that Sage would buy 4 of them. If the spheres are placed '
          'in the order ( 3, 1, 4, 2, 4, 2, 5) , then Sage will buy one sphere '
          'for 1 and two spheres for 2 each.',
  'output': 'In the first line print the maximum number of ice spheres that '
            'Sage can buy. In the second line print the prices of ice spheres '
            'in the optimal order. If there are several correct answers, you '
            'can print any of them.',
  'title': "Sage's Birthday (hard version)",
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1419/D2'},
 {'history': "For god' s sake, you' re boxes with legs! It is literally your "
             'only purpose! Walking onto buttons! How can you not do the one '
             "thing you were designed for? Oh, that' s funny, is it? Oh it' s "
             "funny? Because we' ve been at this for twelve hours and you "
             "haven' t solved it either, so I don' t know why you' re "
             "laughing. You' ve got one hour! Solve it! Wheatley decided to "
             'try to make a test chamber. He made a nice test chamber, but '
             'there was only one detail absent — cubes. For completing the '
             'chamber Wheatley needs n cubes. i- th cube has a volume ai. '
             'Wheatley has to place cubes in such a way that they would be '
             'sorted in a non- decreasing order by their volume. Formally, for '
             'each i> 1, ai−1≤ai must hold. To achieve his goal, Wheatley can '
             'exchange two neighbouring cubes. It means that for any i> 1 you '
             'can exchange cubes on positions i−1 and i. But there is a '
             'problem: Wheatley is very impatient. If Wheatley needs more than '
             "n⋅( n−1) 2−1 exchange operations, he won' t do this boring work. "
             'Wheatly wants to know: can cubes be sorted under this '
             'conditions?',
  'input': 'Each test contains multiple test cases. The first line contains '
           'one positive integer t ( 1≤t≤1000) , denoting the number of test '
           'cases. Description of the test cases follows. The first line of '
           'each test case contains one positive integer n ( 2≤n≤5⋅104) — '
           'number of cubes. The second line contains n positive integers ai ( '
           '1≤ai≤109) — volumes of cubes. It is guaranteed that the sum of n '
           'over all test cases does not exceed 105.',
  'note': 'In the first test case it is possible to sort all the cubes in 7 '
          'exchanges. In the second test case the cubes are already sorted. In '
          'the third test case we can make 0 exchanges, but the cubes are not '
          'sorted yet, so the answer is " NO" .',
  'output': 'For each test case, print a word in a single line: " YES" ( '
            'without quotation marks) if the cubes can be sorted and " NO" ( '
            'without quotation marks) otherwise.',
  'title': 'Cubes Sorting',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1420/A'},
 {'history': 'Ori and Sein have overcome many difficult challenges. They '
             'finally lit the Shrouded Lantern and found Gumon Seal, the key '
             'to the Forlorn Ruins. When they tried to open the door to the '
             'ruins. . . nothing happened. Ori was very surprised, but Sein '
             'gave the explanation quickly: clever Gumon decided to make an '
             'additional defence for the door. There are n lamps with Spirit '
             "Tree' s light. Sein knows the time of turning on and off for the "
             'i- th lamp — li and ri respectively. To open the door you have '
             'to choose k lamps in such a way that there will be a moment of '
             'time when they all will be turned on. While Sein decides which '
             'of the k lamps to pick, Ori is interested: how many ways there '
             'are to pick such k lamps that the door will open? It may happen '
             'that Sein may be wrong and there are no such k lamps. The answer '
             'might be large, so print it modulo 998244353.',
  'input': 'First line contains two integers n and k ( 1≤n≤3⋅105, 1≤k≤n) — '
           'total number of lamps and the number of lamps that must be turned '
           'on simultaneously. Next n lines contain two integers li ans ri ( '
           '1≤li≤ri≤109) — period of time when i- th lamp is turned on.',
  'note': 'In first test case there are nine sets of k lamps: ( 1, 2, 3) , ( '
          '1, 2, 4) , ( 1, 2, 5) , ( 1, 2, 6) , ( 1, 3, 6) , ( 1, 4, 6) , ( 2, '
          '3, 6) , ( 2, 4, 6) , ( 2, 6, 7) . In second test case k= 1, so the '
          'answer is 3. In third test case there are no such pairs of lamps. '
          'In forth test case all lamps are turned on in a time 3, so the '
          'answer is 1. In fifth test case there are seven sets of k lamps: ( '
          '1, 2) , ( 1, 3) , ( 2, 3) , ( 2, 4) , ( 3, 4) , ( 3, 5) , ( 4, 5) .',
  'output': 'Print one integer — the answer to the task modulo 998244353.',
  'title': 'Rescue Nibel!',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1420/D'},
 {'history': 'Ringo found a string s of length n in his yellow submarine. The '
             'string contains only lowercase letters from the English '
             'alphabet. As Ringo and his friends love palindromes, he would '
             'like to turn the string s into a palindrome by applying two '
             'types of operations to the string. The first operation allows '
             'him to choose i ( 2≤i≤n−1) and to append the substring s2s3. . . '
             'si ( i−1 characters) reversed to the front of s. The second '
             'operation allows him to choose i ( 2≤i≤n−1) and to append the '
             'substring sisi+ 1. . . sn−1 ( n−i characters) reversed to the '
             'end of s. Note that characters in the string in this problem are '
             'indexed from 1. For example suppose s= abcdef. If he performs '
             'the first operation with i= 3 then he appends cb to the front of '
             's and the result will be cbabcdef. Performing the second '
             'operation on the resulted string with i= 5 will yield '
             'cbabcdefedc. Your task is to help Ringo make the entire string a '
             'palindrome by applying any of the two operations ( in total) at '
             'most 30 times. The length of the resulting palindrome must not '
             'exceed 106It is guaranteed that under these constraints there '
             'always is a solution. Also note you do not have to minimize '
             'neither the number of operations applied, nor the length of the '
             'resulting string, but they have to fit into the constraints.',
  'input': 'The only line contains the string S ( 3≤| s| ≤105) of lowercase '
           'letters from the English alphabet.',
  'note': 'For the first example the following operations are performed: abac '
          '→ abacab → abacabaThe second sample performs the following '
          'operations: acccc → cccacccc → ccccaccccThe third example is '
          'already a palindrome so no operations are required.',
  'output': 'The first line should contain k ( 0≤k≤30) — the number of '
            'operations performed. Each of the following k lines should '
            'describe an operation in form L i or R i. L represents the first '
            'operation, R represents the second operation, i represents the '
            'index chosen. The length of the resulting palindrome must not '
            'exceed 106.',
  'title': 'Palindromifier',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1421/C'},
 {'history': 'Yura has been walking for some time already and is planning to '
             'return home. He needs to get home as fast as possible. To do '
             'this, Yura can use the instant- movement locations around the '
             "city. Let' s represent the city as an area of n×n square blocks. "
             'Yura needs to move from the block with coordinates ( sx, sy) to '
             'the block with coordinates ( fx, fy) . In one minute Yura can '
             'move to any neighboring by side block; in other words, he can '
             'move in four directions. Also, there are m instant- movement '
             'locations in the city. Their coordinates are known to you and '
             'Yura. Yura can move to an instant- movement location in no time '
             'if he is located in a block with the same coordinate x or with '
             'the same coordinate y as the location. Help Yura to find the '
             'smallest time needed to get home.',
  'input': 'The first line contains two integers n and m — the size of the '
           'city and the number of instant- movement locations ( 1≤n≤109, '
           '0≤m≤105) . The next line contains four integers sx sy fx fy — the '
           "coordinates of Yura' s initial position and the coordinates of his "
           'home ( 1≤sx, sy, fx, fy≤n) . Each of the next m lines contains two '
           'integers xi yi — coordinates of the i- th instant- movement '
           'location ( 1≤xi, yi≤n) .',
  'note': 'In the first example Yura needs to reach ( 5, 5) from ( 1, 1) . He '
          'can do that in 5 minutes by first using the second instant- '
          "movement location ( because its y coordinate is equal to Yura' s y "
          'coordinate) , and then walking ( 4, 1) →( 4, 2) →( 4, 3) →( 5, 3) '
          '→( 5, 4) →( 5, 5) .',
  'output': 'In the only line print the minimum time required to get home.',
  'title': 'Returning Home',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1422/D'},
 {'history': 'Some time ago Lesha found an entertaining string s consisting of '
             'lowercase English letters. Lesha immediately developed an unique '
             'algorithm for this string and shared it with you. The algorithm '
             'is as follows. Lesha chooses an arbitrary ( possibly zero) '
             'number of pairs on positions ( i, i+ 1) in such a way that the '
             'following conditions are satisfied: for each pair ( i, i+ 1) the '
             'inequality 0≤i< | s| −1 holds; for each pair ( i, i+ 1) the '
             'equality si= si+ 1 holds; there is no index that is contained in '
             'more than one pair. After that Lesha removes all characters on '
             'indexes contained in these pairs and the algorithm is over. '
             'Lesha is interested in the lexicographically smallest strings he '
             'can obtain by applying the algorithm to the suffixes of the '
             'given string.',
  'input': 'The only line contains the string s ( 1≤| s| ≤105) — the initial '
           'string consisting of lowercase English letters only.',
  'note': 'Consider the first example. The longest suffix is the whole string '
          '" abcdd" . Choosing one pair ( 4, 5) , Lesha obtains " abc" . The '
          'next longest suffix is " bcdd" . Choosing one pair ( 3, 4) , we '
          'obtain " bc" . The next longest suffix is " cdd" . Choosing one '
          'pair ( 2, 3) , we obtain " c" . The next longest suffix is " dd" . '
          'Choosing one pair ( 1, 2) , we obtain " " ( an empty string) . The '
          'last suffix is the string " d" . No pair can be chosen, so the '
          'answer is " d" . In the second example, for the longest suffix " '
          'abbcdddeaaffdfouurtytwoo" choose three pairs ( 11, 12) , ( 16, 17) '
          ', ( 23, 24) and we obtain " abbcdddeaadfortytw"',
  'output': 'In | s| lines print the lengths of the answers and the answers '
            'themselves, starting with the answer for the longest suffix. The '
            'output can be large, so, when some answer is longer than 10 '
            'characters, instead print the first 5 characters, then " . . . " '
            ', then the last 2 characters of the answer.',
  'title': 'Minlexes',
  'topics': ['implementation', 'strings'],
  'url': 'https://codeforces.com/problemset/problem/1422/E'},
 {'history': 'During one of the space missions, humans have found an evidence '
             'of previous life at one of the planets. They were lucky enough '
             'to find a book with birth and death years of each individual '
             "that had been living at this planet. What' s interesting is that "
             'these years are in the range ( 1, 109) ! Therefore, the planet '
             "was named Longlifer. In order to learn more about Longlifer' s "
             'previous population, scientists need to determine the year with '
             'maximum number of individuals that were alive, as well as the '
             'number of alive individuals in that year. Your task is to help '
             'scientists solve this problem!',
  'input': 'The first line contains an integer n ( 1≤n≤105) — the number of '
           'people. Each of the following n lines contain two integers b and d '
           '( 1≤b< d≤109) representing birth and death year ( respectively) of '
           'each individual.',
  'note': 'You can assume that an individual living from b to d has been born '
          'at the beginning of b and died at the beginning of d, and therefore '
          'living for d - b years.',
  'output': 'Print two integer numbers separated by blank character, y — the '
            'year with a maximum number of people alive and k — the number of '
            'people alive in year y. In the case of multiple possible '
            'solutions, print the solution with minimum year.',
  'title': 'Years',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1424/G'},
 {'history': 'While exploring the old caves, researchers found a book, or more '
             'precisely, a stash of mixed pages from a book. Luckily, all of '
             'the original pages are present and each page contains its '
             'number. Therefore, the researchers can reconstruct the book. '
             'After taking a deeper look into the contents of these pages, '
             "linguists think that this may be some kind of dictionary. What' "
             's interesting is that this ancient civilization used an alphabet '
             'which is a subset of the English alphabet, however, the order of '
             'these letters in the alphabet is not like the one in the English '
             'language. Given the contents of pages that researchers have '
             'found, your task is to reconstruct the alphabet of this ancient '
             'civilization using the provided pages from the dictionary.',
  'input': 'First- line contains two integers: n and k ( 1≤n, k≤103) — the '
           'number of pages that scientists have found and the number of words '
           'present at each page. Following n groups contain a line with a '
           'single integer pi ( 0≤n< 103) — the number of i- th page, as well '
           'as k lines, each line containing one of the strings ( up to 100 '
           'characters) written on the page numbered pi.',
  'note': ' ',
  'output': 'Output a string representing the reconstructed alphabet of this '
            'ancient civilization. If the book found is not a dictionary, '
            'output " IMPOSSIBLE" without quotes. In case there are multiple '
            'solutions, output any of them.',
  'title': 'Ancient Language',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1424/M'},
 {'history': 'Kolya got an integer array a1, a2, . . . , an. The array can '
             "contain both positive and negative integers, but Kolya doesn' t "
             "like 0, so the array doesn' t contain any zeros. Kolya doesn' t "
             'like that the sum of some subsegments of his array can be 0. The '
             'subsegment is some consecutive segment of elements of the array. '
             'You have to help Kolya and change his array in such a way that '
             "it doesn' t contain any subsegments with the sum 0. To reach "
             'this goal, you can insert any integers between any pair of '
             'adjacent elements of the array ( integers can be really any: '
             'positive, negative, 0, any by absolute value, even such a huge '
             "that they can' t be represented in most standard programming "
             'languages) . Your task is to find the minimum number of integers '
             "you have to insert into Kolya' s array in such a way that the "
             "resulting array doesn' t contain any subsegments with the sum 0.",
  'input': 'The first line of the input contains one integer n ( 2≤n≤200000) — '
           "the number of elements in Kolya' s array. The second line of the "
           'input contains n integers a1, a2, . . . , an ( −109≤ai≤109, ai= '
           "̸0) — the description of Kolya' s array.",
  'note': 'Consider the first example. There is only one subsegment with the '
          'sum 0. It starts in the second element and ends in the fourth '
          "element. It' s enough to insert one element so the array doesn' t "
          'contain any subsegments with the sum equal to zero. For example, it '
          'is possible to insert the integer 1 between second and third '
          'elements of the array. There are no subsegments having sum 0 in the '
          "second example so you don' t need to do anything.",
  'output': 'Print the minimum number of integers you have to insert into '
            "Kolya' s array in such a way that the resulting array doesn' t "
            'contain any subsegments with the sum 0.',
  'title': 'Non-zero Segments',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1426/D'},
 {'history': 'You are given a string s consisting of lowercase Latin letters " '
             'a" , " b" and " c" and question marks " ? " . Let the number of '
             "question marks in the string s be k. Let' s replace each "
             'question mark with one of the letters " a" , " b" and " c" . '
             'Here we can obtain all 3k possible strings consisting only of '
             'letters " a" , " b" and " c" . For example, if s= " ac? b? c" '
             'then we can obtain the following strings: [ " acabac" , " '
             'acabbc" , " acabcc" , " acbbac" , " acbbbc" , " acbbcc" , " '
             'accbac" , " accbbc" , " accbcc" ] . Your task is to count the '
             'total number of subsequences " abc" in all resulting strings. '
             'Since the answer can be very large, print it modulo 109+ 7. A '
             'subsequence of the string t is such a sequence that can be '
             'derived from the string t after removing some ( possibly, zero) '
             'number of letters without changing the order of remaining '
             'letters. For example, the string " baacbc" contains two '
             'subsequences " abc" — a subsequence consisting of letters at '
             'positions ( 2, 5, 6) and a subsequence consisting of letters at '
             'positions ( 3, 5, 6) .',
  'input': 'The first line of the input contains one integer n ( 3≤n≤200000) — '
           'the length of s. The second line of the input contains the string '
           's of length n consisting of lowercase Latin letters " a" , " b" '
           'and " c" and question marks" ? " .',
  'note': 'In the first example, we can obtain 9 strings: " acabac" — there '
          'are 2 subsequences " abc" , " acabbc" — there are 4 subsequences " '
          'abc" , " acabcc" — there are 4 subsequences " abc" , " acbbac" — '
          'there are 2 subsequences " abc" , " acbbbc" — there are 3 '
          'subsequences " abc" , " acbbcc" — there are 4 subsequences " abc" , '
          '" accbac" — there is 1 subsequence " abc" , " accbbc" — there are 2 '
          'subsequences " abc" , " accbcc" — there are 2 subsequences " abc" . '
          'So, there are 2+ 4+ 4+ 2+ 3+ 4+ 1+ 2+ 2= 24 subsequences " abc" in '
          'total.',
  'output': 'Print the total number of subsequences " abc" in all strings you '
            'can obtain if you replace all question marks with letters " a" , '
            '" b" and " c" , modulo 109+ 7.',
  'title': 'Number of Subsequences',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1426/F'},
 {'history': 'You are given an array of n integers a1, a2, . . . , an. You '
             'have to create an array of n integers b1, b2, . . . , bn such '
             'that: The array b is a rearrangement of the array a, that is, it '
             'contains the same values and each value appears the same number '
             'of times in the two arrays. In other words, the multisets a1, '
             'a2, . . . , an and b1, b2, . . . , bn are equal. For example, if '
             'a= [ 1, −1, 0, 1] , then b= [ −1, 1, 1, 0] and b= [ 0, 1, −1, 1] '
             'are rearrangements of a, but b= [ 1, −1, −1, 0] and b= [ 1, 0, '
             '2, −3] are not rearrangements of a. For all k= 1, 2, . . . , n '
             'the sum of the first k elements of b is nonzero. Formally, for '
             'all k= 1, 2, . . . , n, it must hold b1+ b2+ ⋯+ bk= ̸0. If an '
             'array b1, b2, . . . , bn with the required properties does not '
             'exist, you have to print NO.',
  'input': 'Each test contains multiple test cases. The first line contains an '
           'integer t ( 1≤t≤1000) — the number of test cases. The description '
           'of the test cases follows. The first line of each testcase '
           'contains one integer n ( 1≤n≤50) — the length of the array a. The '
           'second line of each testcase contains n integers a1, a2, . . . , '
           'an ( −50≤ai≤50) — the elements of a.',
  'note': 'Explanation of the first testcase: An array with the desired '
          'properties is b= [ 1, −2, 3, −4] . For this array, it holds: The '
          'first element of b is 1. The sum of the first two elements of b is '
          '−1. The sum of the first three elements of b is 2. The sum of the '
          'first four elements of b is −2. Explanation of the second testcase: '
          'Since all values in a are 0, any rearrangement b of a will have all '
          'elements equal to 0 and therefore it clearly cannot satisfy the '
          'second property described in the statement ( for example because '
          'b1= 0) . Hence in this case the answer is NO. Explanation of the '
          'third testcase: An array with the desired properties is b= [ 1, 1, '
          '−1, 1, −1] . For this array, it holds: The first element of b is 1. '
          'The sum of the first two elements of b is 2. The sum of the first '
          'three elements of b is 1. The sum of the first four elements of b '
          'is 2. The sum of the first five elements of b is 1. Explanation of '
          'the fourth testcase: An array with the desired properties is b= [ '
          '−40, 13, 40, 0, −9, −31] . For this array, it holds: The first '
          'element of b is −40. The sum of the first two elements of b is −27. '
          'The sum of the first three elements of b is 13. The sum of the '
          'first four elements of b is 13. The sum of the first five elements '
          'of b is 4. The sum of the first six elements of b is −27.',
  'output': 'For each testcase, if there is not an array b1, b2, . . . , bn '
            'with the required properties, print a single line with the word '
            'NO. Otherwise print a line with the word YES, followed by a line '
            'with the n integers b1, b2, . . . , bn. If there is more than one '
            'array b1, b2, . . . , bn satisfying the required properties, you '
            'can print any of them.',
  'title': 'Avoiding Zero',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1427/A'},
 {'history': 'You like playing chess tournaments online. In your last '
             'tournament you played n games. For the sake of this problem, '
             'each chess game is either won or lost ( no draws) . When you '
             'lose a game you get 0 points. When you win you get 1 or 2 '
             'points: if you have won also the previous game you get 2 points, '
             'otherwise you get 1 point. If you win the very first game of the '
             'tournament you get 1 point ( since there is not a " previous '
             'game" ) . The outcomes of the n games are represented by a '
             'string s of length n: the i- th character of s is W if you have '
             'won the i- th game, while it is L if you have lost the i- th '
             'game. After the tournament, you notice a bug on the website that '
             'allows you to change the outcome of at most k of your games ( '
             'meaning that at most k times you can change some symbol L to W, '
             'or W to L) . Since your only goal is to improve your chess '
             'rating, you decide to cheat and use the bug. Compute the maximum '
             'score you can get by cheating in the optimal way.',
  'input': 'Each test contains multiple test cases. The first line contains an '
           'integer t ( 1≤t≤20, 000) — the number of test cases. The '
           'description of the test cases follows. The first line of each '
           'testcase contains two integers n, k ( 1≤n≤100, 000, 0≤k≤n) – the '
           'number of games played and the number of outcomes that you can '
           'change. The second line contains a string s of length n containing '
           'only the characters W and L. If you have won the i- th game then '
           'si= W, if you have lost the i- th game then si= L. It is '
           'guaranteed that the sum of n over all testcases does not exceed '
           '200, 000.',
  'note': 'Explanation of the first testcase. Before changing any outcome, the '
          'score is 2. Indeed, you won the first game, so you got 1 point, and '
          'you won also the third, so you got another 1 point ( and not 2 '
          'because you lost the second game) . An optimal way to cheat is to '
          'change the outcomes of the second and fourth game. Doing so, you '
          'end up winning the first four games ( the string of the outcomes '
          'becomes WWWWL) . Hence, the new score is 7= 1+ 2+ 2+ 2: 1 point for '
          'the first game and 2 points for the second, third and fourth game. '
          'Explanation of the second testcase. Before changing any outcome, '
          'the score is 3. Indeed, you won the fourth game, so you got 1 '
          'point, and you won also the fifth game, so you got 2 more points ( '
          'since you won also the previous game) . An optimal way to cheat is '
          'to change the outcomes of the first, second, third and sixth game. '
          'Doing so, you end up winning all games ( the string of the outcomes '
          'becomes WWWWWW) . Hence, the new score is 11= 1+ 2+ 2+ 2+ 2+ 2: 1 '
          'point for the first game and 2 points for all the other games.',
  'output': 'For each testcase, print a single integer – the maximum score you '
            'can get by cheating in the optimal way.',
  'title': 'Chess Cheater',
  'topics': ['implementation', 'sortings'],
  'url': 'https://codeforces.com/problemset/problem/1427/B'},
 {'history': 'Zookeeper is playing a game. In this game, Zookeeper must use '
             "bombs to bomb a string that consists of letters ' A' and ' B' . "
             'He can use bombs to bomb a substring which is either " AB" or " '
             'BB" . When he bombs such a substring, the substring gets deleted '
             'from the string and the remaining parts of the string get '
             'concatenated. For example, Zookeeper can use two such '
             'operations: AABABBA → AABBA → AAA. Zookeeper wonders what the '
             'shortest string he can make is. Can you help him find the length '
             'of the shortest string?',
  'input': 'Each test contains multiple test cases. The first line contains a '
           'single integer t ( 1≤t≤20000) — the number of test cases. The '
           'description of the test cases follows. Each of the next t lines '
           'contains a single test case each, consisting of a non- empty '
           'string s: the string that Zookeeper needs to bomb. It is '
           "guaranteed that all symbols of s are either ' A' or ' B' . It is "
           'guaranteed that the sum of | s| ( length of s) among all test '
           'cases does not exceed 2⋅105.',
  'note': "For the first test case, you can' t make any moves, so the answer "
          'is 3. For the second test case, one optimal sequence of moves is '
          'BABA → BA. So, the answer is 2. For the third test case, one '
          'optimal sequence of moves is AABBBABBBB → AABBBABB → AABBBB → ABBB '
          '→ AB → ( empty string) . So, the answer is 0.',
  'output': 'For each test case, print a single integer: the length of the '
            'shortest string that Zookeeper can make.',
  'title': 'ABBB',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1428/C'},
 {'history': 'There are some rabbits in Singapore Zoo. To feed them, Zookeeper '
             'bought nn carrots with lengths a1, a2, a3, . . . , ana1, a2, a3, '
             '. . . , an. However, rabbits are very fertile and multiply very '
             'quickly. Zookeeper now has kk rabbits and does not have enough '
             'carrots to feed all of them. To solve this problem, Zookeeper '
             'decided to cut the carrots into kk pieces. For some reason, all '
             'resulting carrot lengths must be positive integers. Big carrots '
             'are very difficult for rabbits to handle and eat, so the time '
             'needed to eat a carrot of size xx is x2x2. Help Zookeeper split '
             'his carrots while minimizing the sum of time taken for rabbits '
             'to eat the carrots.',
  'input': 'The first line contains two integers nn and kk ( 1≤n≤k≤105) ( '
           '1≤n≤k≤105) : the initial number of carrots and the number of '
           'rabbits. The next line contains nn integers a1, a2, . . . , ana1, '
           'a2, . . . , an ( 1≤ai≤106) ( 1≤ai≤106) : lengths of carrots. It is '
           'guaranteed that the sum of aiai is at least kk.',
  'note': 'For the first test, the optimal sizes of carrots are 1, 1, 1, 2, 2, '
          '21, 1, 1, 2, 2, 2. The time taken is 12+ 12+ 12+ 22+ 22+ 22= 1512+ '
          '12+ 12+ 22+ 22+ 22= 15For the second test, the optimal sizes of '
          'carrots are 4, 5, 5, 54, 5, 5, 5. The time taken is 42+ 52+ 52+ 52= '
          '9142+ 52+ 52+ 52= 91.',
  'output': 'Output one integer: the minimum sum of time taken for rabbits to '
            'eat carrots.',
  'title': 'Carrots for Rabbits',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1428/E'},
 {'history': 'You have n barrels lined up in a row, numbered from left to '
             'right from one. Initially, the i- th barrel contains ai liters '
             'of water. You can pour water from one barrel to another. In one '
             'act of pouring, you can choose two different barrels x and y ( '
             "the x- th barrel shouldn' t be empty) and pour any possible "
             'amount of water from barrel x to barrel y ( possibly, all water) '
             '. You may assume that barrels have infinite capacity, so you can '
             'pour any amount of water in each of them. Calculate the maximum '
             'possible difference between the maximum and the minimum amount '
             'of water in the barrels, if you can pour water at most k times. '
             'Some examples: if you have four barrels, each containing 5 '
             'liters of water, and k= 1, you may pour 5 liters from the second '
             'barrel into the fourth, so the amounts of water in the barrels '
             'are [ 5, 0, 5, 10] , and the difference between the maximum and '
             "the minimum is 10; if all barrels are empty, you can' t make any "
             'operation, so the difference between the maximum and the minimum '
             'amount is still 0.',
  'input': 'The first line contains one integer t ( 1≤t≤1000) — the number of '
           'test cases. The first line of each test case contains two integers '
           'n and k ( 1≤k< n≤2⋅105) — the number of barrels and the number of '
           'pourings you can make. The second line contains n integers a1, a2, '
           '. . . , an ( 0≤ai≤109) , where ai is the initial amount of water '
           "the i- th barrel has. It' s guaranteed that the total sum of n "
           "over test cases doesn' t exceed 2⋅105.",
  'note': ' ',
  'output': 'For each test case, print the maximum possible difference between '
            'the maximum and the minimum amount of water in the barrels, if '
            'you can pour water at most k times.',
  'title': 'Barrels',
  'topics': ['implementation', 'sortings'],
  'url': 'https://codeforces.com/problemset/problem/1430/B'},
 {'history': 'You are given a string s. You have to reverse it — that is, the '
             'first letter should become equal to the last letter before the '
             'reversal, the second letter should become equal to the second- '
             'to- last letter before the reversal — and so on. For example, if '
             'your goal is to reverse the string " abddea" , you should get '
             'the string " aeddba" . To accomplish your goal, you can swap the '
             'neighboring elements of the string. Your task is to calculate '
             'the minimum number of swaps you have to perform to reverse the '
             'given string.',
  'input': 'The first line contains one integer n ( 2≤n≤200000) — the length '
           'of s. The second line contains s — a string consisting of n '
           'lowercase Latin letters.',
  'note': 'In the first example, you have to swap the third and the fourth '
          'elements, so the string becomes " aazaa" . Then you have to swap '
          'the second and the third elements, so the string becomes " azaaa" . '
          'So, it is possible to reverse the string in two swaps. Since the '
          "string in the second example is a palindrome, you don' t have to do "
          'anything to reverse it.',
  'output': 'Print one integer — the minimum number of swaps of neighboring '
            'elements you have to perform to reverse the string.',
  'title': 'String Reversal',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1430/E'},
 {'history': 'You are given a matrix consisting of n rows and m columns. The '
             'matrix contains lowercase letters of the Latin alphabet. You can '
             'perform the following operation any number of times you want to: '
             'choose two integers i ( 1≤i≤m) and k ( 0< k< n) , and shift '
             'every column j such that i≤j≤m cyclically by k. The shift is '
             'performed upwards. For example, if you have a matrix ( '
             'abcdefghi) and perform an operation with i= 2, k= 1, then it '
             'becomes: ( aefdhigbc) You have to process q queries. Each of the '
             'queries is a string of length m consisting of lowercase letters '
             'of the Latin alphabet. For each query, you have to calculate the '
             'minimum number of operations described above you have to perform '
             'so that at least one row of the matrix is equal to the string '
             'from the query. Note that all queries are independent, that is, '
             "the operations you perform in a query don' t affect the initial "
             'matrix in other queries.',
  'input': 'The first line contains three integers n, m, q ( 2≤n, m, q≤2. '
           '5⋅105; n⋅m≤5⋅105; q⋅m≤5⋅105) — the number of rows and columns in '
           'the matrix and the number of queries, respectively. The next n '
           'lines contains m lowercase Latin letters each — elements of the '
           'matrix. The following q lines contains a description of queries — '
           'strings of length m consisting of lowercase letters of the Latin '
           'alphabet.',
  'note': ' ',
  'output': 'Print q integers. The i- th integer should be equal to the '
            'minimum number of operations you have to perform so that the '
            'matrix contains a string from the i- th query or −1 if the '
            'specified string cannot be obtained.',
  'title': 'Cyclic Shifts',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1431/I'},
 {'history': 'Chef Monocarp has just put n dishes into an oven. He knows that '
             'the i- th dish has its optimal cooking time equal to ti minutes. '
             'At any positive integer minute T Monocarp can put no more than '
             'one dish out of the oven. If the i- th dish is put out at some '
             'minute T, then its unpleasant value is | T−ti| — the absolute '
             'difference between T and ti. Once the dish is out of the oven, '
             "it can' t go back in. Monocarp should put all the dishes out of "
             'the oven. What is the minimum total unpleasant value Monocarp '
             'can obtain?',
  'input': 'The first line contains a single integer q ( 1≤q≤200) — the number '
           'of testcases. Then q testcases follow. The first line of the '
           'testcase contains a single integer n ( 1≤n≤200) — the number of '
           'dishes in the oven. The second line of the testcase contains n '
           'integers t1, t2, . . . , tn ( 1≤ti≤n) — the optimal cooking time '
           "for each dish. The sum of n over all q testcases doesn' t exceed "
           '200.',
  'note': 'In the first example Monocarp can put out the dishes at minutes 3, '
          '1, 5, 4, 6, 2. That way the total unpleasant value will be | 4−3| + '
          '| 2−1| + | 4−5| + | 4−4| + | 6−5| + | 2−2| = 4. In the second '
          'example Monocarp can put out the dishes at minutes 4, 5, 6, 7, 8, '
          '9, 10. In the third example Monocarp can put out the dish at minute '
          '1. In the fourth example Monocarp can put out the dishes at minutes '
          '5, 1, 2, 4, 3. In the fifth example Monocarp can put out the dishes '
          'at minutes 1, 3, 4, 5.',
  'output': 'Print a single integer for each testcase — the minimum total '
            'unpleasant value Monocarp can obtain when he puts out all the '
            'dishes out of the oven. Remember that Monocarp can only put the '
            'dishes out at positive integer minutes and no more than one dish '
            'at any minute.',
  'title': 'Chef Monocarp',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1437/C'},
 {'history': 'For the simplicity, let\' s say that the " Death Note" is a '
             'notebook that kills a person when their name is written in it. '
             "It' s easy to kill with it, but it' s pretty hard to keep track "
             "of people you haven' t killed and still plan to. You decided to "
             'make a " Death Database Management System" — a computer program '
             'that provides the easy access to the database of possible '
             "victims. Let me describe its specifications to you. Let' s "
             'define a victim entity: a victim has a name ( not necessarily '
             'unique) that consists only of lowercase Latin letters and an '
             'integer suspicion value. At the start of the program the user '
             'enters a list of n victim names into a database, each suspicion '
             'value is set to 0. Then the user makes queries of two types: 1 i '
             'x — set the suspicion value of the i- th victim to x; 2 q — '
             'given a string q find the maximum suspicion value of a victim '
             'whose name is a contiguous substring of q. Just to remind you, '
             "this program doesn' t kill people, it only helps to search for "
             'the names to write down in an actual notebook. Thus, the list of '
             "the victims in the database doesn' t change throughout the "
             'queries. What are you waiting for? Write that program now!',
  'input': 'The first line contains two integers n and m ( 1≤n, m≤3⋅105) — the '
           'number of victims and the number of queries, respectively. Each of '
           'the next n lines contains a single string si — the name of the i- '
           'th victim. Each name consists only of lowercase Latin letters. '
           'Each of the next m lines contains a query of one of two types: 1 i '
           'x ( 1≤i≤n, 0≤x≤109) — change the suspicion value of the i- th '
           'victim to x; 2 q — given a string q consisting only of lowercase '
           'Latin letters find the maximum suspicion value of a victim whose '
           'name is a contiguous substring of q. There is at least one query '
           "of the second type. The total length of the strings si doesn' t "
           "exceed 3⋅105. The total length of the strings q doesn' t exceed "
           '3⋅105.',
  'note': ' ',
  'output': 'For each query of the second type print an integer value. If '
            'there is no victim name that is a contiguous substring of q, then '
            'print −1. Otherwise, print the maximum suspicion value of a '
            'victim whose name is a contiguous substring of q.',
  'title': 'Death DBMS',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1437/G'},
 {'history': "You' re given an array b of length n. Let' s define another "
             'array a, also of length n, for which ai= 2bi ( 1≤i≤n) . Valerii '
             'says that every two non- intersecting subarrays of a have '
             'different sums of elements. You want to determine if he is '
             'wrong. More formally, you need to determine if there exist four '
             'integers l1, r1, l2, r2 that satisfy the following conditions: '
             '1≤l1≤r1< l2≤r2≤n; al1+ al1+ 1+ . . . + ar1−1+ ar1= al2+ al2+ 1+ '
             '. . . + ar2−1+ ar2. If such four integers exist, you will prove '
             'Valerii wrong. Do they exist? An array c is a subarray of an '
             'array d if c can be obtained from d by deletion of several ( '
             'possibly, zero or all) elements from the beginning and several ( '
             'possibly, zero or all) elements from the end.',
  'input': 'Each test contains multiple test cases. The first line contains '
           'the number of test cases t ( 1≤t≤100) . Description of the test '
           'cases follows. The first line of every test case contains a single '
           'integer n ( 2≤n≤1000) . The second line of every test case '
           'contains n integers b1, b2, . . . , bn ( 0≤bi≤109) .',
  'note': 'In the first case, a= [ 16, 8, 1, 2, 4, 1] . Choosing l1= 1, r1= 1, '
          'l2= 2 and r2= 6 works because 16= ( 8+ 1+ 2+ 4+ 1) . In the second '
          'case, you can verify that there is no way to select to such '
          'subarrays.',
  'output': 'For every test case, if there exist two non- intersecting '
            'subarrays in a that have the same sum, output YES on a separate '
            'line. Otherwise, output NO on a separate line. Also, note that '
            'each letter can be in any case.',
  'title': 'Valerii Against Everyone',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1438/B'},
 {'history': "Bertown is a city with n buildings in a straight line. The city' "
             's security service discovered that some buildings were mined. A '
             'map was compiled, which is a string of length n, where the i- th '
             'character is " 1" if there is a mine under the building number i '
             'and " 0" otherwise. Bertown\' s best sapper knows how to '
             'activate mines so that the buildings above them are not damaged. '
             'When a mine under the building numbered x is activated, it '
             'explodes and activates two adjacent mines under the buildings '
             'numbered x−1 and x+ 1 ( if there were no mines under the '
             'building, then nothing happens) . Thus, it is enough to activate '
             'any one mine on a continuous segment of mines to activate all '
             'the mines of this segment. For manual activation of one mine, '
             'the sapper takes a coins. He can repeat this operation as many '
             'times as you want. Also, a sapper can place a mine under a '
             "building if it wasn' t there. For such an operation, he takes b "
             'coins. He can also repeat this operation as many times as you '
             'want. The sapper can carry out operations in any order. You want '
             'to blow up all the mines in the city to make it safe. Find the '
             'minimum number of coins that the sapper will have to pay so that '
             'after his actions there are no mines left in the city.',
  'input': 'The first line contains one positive integer t ( 1≤t≤105) — the '
           'number of test cases. Then t test cases follow. Each test case '
           'begins with a line containing two integers a and b ( 1≤a, b≤1000) '
           '— the cost of activating and placing one mine, respectively. The '
           'next line contains a map of mines in the city — a string '
           'consisting of zeros and ones. The sum of the string lengths for '
           'all test cases does not exceed 105.',
  'note': 'In the second test case, if we place a mine under the fourth '
          'building and then activate it, then all mines on the field are '
          'activated. The cost of such operations is six, b= 1 coin for '
          'placing a mine and a= 5 coins for activating.',
  'output': 'For each test case, output one integer — the minimum number of '
            'coins that the sapper will have to pay.',
  'title': 'Saving the City',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1443/B'},
 {'history': 'Petya is preparing for his birthday. He decided that there would '
             'be n different dishes on the dinner table, numbered from 1 to n. '
             "Since Petya doesn' t like to cook, he wants to order these "
             'dishes in restaurants. Unfortunately, all dishes are prepared in '
             'different restaurants and therefore Petya needs to pick up his '
             'orders from n different places. To speed up this process, he '
             'wants to order courier delivery at some restaurants. Thus, for '
             'each dish, there are two options for Petya how he can get it: '
             'the dish will be delivered by a courier from the restaurant i, '
             'in this case the courier will arrive in ai minutes, Petya goes '
             'to the restaurant i on his own and picks up the dish, he will '
             'spend bi minutes on this. Each restaurant has its own couriers '
             'and they start delivering the order at the moment Petya leaves '
             'the house. In other words, all couriers work in parallel. Petya '
             'must visit all restaurants in which he has not chosen delivery, '
             'he does this consistently. For example, if Petya wants to order '
             'n= 4 dishes and a= [ 3, 7, 4, 5] , and b= [ 2, 1, 2, 4] , then '
             'he can order delivery from the first and the fourth restaurant, '
             'and go to the second and third on your own. Then the courier of '
             'the first restaurant will bring the order in 3 minutes, the '
             'courier of the fourth restaurant will bring the order in 5 '
             'minutes, and Petya will pick up the remaining dishes in 1+ 2= 3 '
             "minutes. Thus, in 5 minutes all the dishes will be at Petya' s "
             'house. Find the minimum time after which all the dishes can be '
             "at Petya' s home.",
  'input': 'The first line contains one positive integer t ( 1≤t≤2⋅105) — the '
           'number of test cases. Then t test cases follow. Each test case '
           'begins with a line containing one integer n ( 1≤n≤2⋅105) — the '
           'number of dishes that Petya wants to order. The second line of '
           'each test case contains n integers a1. . . an ( 1≤ai≤109) — the '
           'time of courier delivery of the dish with the number i. The third '
           'line of each test case contains n integers b1. . . bn ( 1≤bi≤109) '
           '— the time during which Petya will pick up the dish with the '
           'number i. The sum of n over all test cases does not exceed 2⋅105.',
  'note': ' ',
  'output': 'For each test case output one integer — the minimum time after '
            "which all dishes can be at Petya' s home.",
  'title': 'The Delivery Dilemma',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1443/C'},
 {'history': 'You are given an array a of length 2n. Consider a partition of '
             'array a into two subsequences p and q of length n each ( each '
             'element of array a should be in exactly one subsequence: either '
             "in p or in q) . Let' s sort p in non- decreasing order, and q in "
             'non- increasing order, we can denote the sorted versions by x '
             'and y, respectively. Then the cost of a partition is defined as '
             'f( p, q) = ∑ni= 1| xi−yi| . Find the sum of f( p, q) over all '
             'correct partitions of array a. Since the answer might be too '
             'big, print its remainder modulo 998244353.',
  'input': 'The first line contains a single integer n ( 1≤n≤150000) . The '
           'second line contains 2n integers a1, a2, . . . , a2n ( 1≤ai≤109) — '
           'elements of array a.',
  'note': 'Two partitions of an array are considered different if the sets of '
          'indices of elements included in the subsequence p are different. In '
          'the first example, there are two correct partitions of the array a: '
          'p= [ 1] , q= [ 4] , then x= [ 1] , y= [ 4] , f( p, q) = | 1−4| = 3; '
          'p= [ 4] , q= [ 1] , then x= [ 4] , y= [ 1] , f( p, q) = | 4−1| = 3. '
          'In the second example, there are six valid partitions of the array '
          'a: p= [ 2, 1] , q= [ 2, 1] ( elements with indices 1 and 2 in the '
          'original array are selected in the subsequence p) ; p= [ 2, 2] , q= '
          '[ 1, 1] ; p= [ 2, 1] , q= [ 1, 2] ( elements with indices 1 and 4 '
          'are selected in the subsequence p) ; p= [ 1, 2] , q= [ 2, 1] ; p= [ '
          '1, 1] , q= [ 2, 2] ; p= [ 2, 1] , q= [ 2, 1] ( elements with '
          'indices 3 and 4 are selected in the subsequence p) .',
  'output': 'Print one integer — the answer to the problem, modulo 998244353.',
  'title': 'Divide and Sum',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1444/B'},
 {'history': 'You are given two arrays a and b, each consisting of n positive '
             'integers, and an integer x. Please determine if one can '
             'rearrange the elements of b so that ai+ bi≤x holds for each i ( '
             '1≤i≤n) .',
  'input': 'The first line of input contains one integer t ( 1≤t≤100) — the '
           'number of test cases. t blocks follow, each describing an '
           'individual test case. The first line of each test case contains '
           'two integers n and x ( 1≤n≤50; 1≤x≤1000) — the length of arrays a '
           'and b, and the parameter x, described in the problem statement. '
           'The second line of each test case contains n integers a1, a2, . . '
           '. , an ( 1≤a1≤a2≤⋯≤an≤x) — the elements of array a in non- '
           'descending order. The third line of each test case contains n '
           'integers b1, b2, . . . , bn ( 1≤b1≤b2≤⋯≤bn≤x) — the elements of '
           'array b in non- descending order. Test cases are separated by a '
           'blank line.',
  'note': "In the first test case, one can rearrange b so it' ll look like [ "
          '1, 2, 1] . In this case, 1+ 1≤4; 2+ 2≤4; 3+ 1≤4. In the second test '
          'case, one can set b to [ 5, 2] , then 1+ 5≤6; 4+ 2≤6. In the third '
          'test case, no matter how one shuffles array b, a4+ b4= 4+ b4> 4. In '
          'the fourth test case, there is only one rearrangement of array b '
          "and it doesn' t satisfy the condition since 5+ 5> 5.",
  'output': 'For each test case print Yes if one can rearrange the '
            'corresponding array b so that ai+ bi≤x holds for each i ( 1≤i≤n) '
            'or No otherwise. Each character can be printed in any case.',
  'title': 'Array Rearrangment',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1445/A'},
 {'history': 'You have a knapsack with the capacity of W. There are also n '
             'items, the i- th one has weight wi. You want to put some of '
             'these items into the knapsack in such a way that their total '
             'weight C is at least half of its size, but ( obviously) does not '
             'exceed it. Formally, C should satisfy: ⌈W2⌉≤C≤W. Output the list '
             'of items you will put into the knapsack or determine that '
             'fulfilling the conditions is impossible. If there are several '
             'possible lists of items satisfying the conditions, you can '
             "output any. Note that you don' t have to maximize the sum of "
             'weights of items in the knapsack.',
  'input': 'Each test contains multiple test cases. The first line contains '
           'the number of test cases t ( 1≤t≤104) . Description of the test '
           'cases follows. The first line of each test case contains integers '
           'n and W ( 1≤n≤200000, 1≤W≤1018) . The second line of each test '
           'case contains n integers w1, w2, . . . , wn ( 1≤wi≤109) — weights '
           'of the items. The sum of n over all test cases does not exceed '
           '200000.',
  'note': 'In the first test case, you can take the item of weight 3 and fill '
          'the knapsack just right. In the second test case, all the items are '
          "larger than the knapsack' s capacity. Therefore, the answer is −1. "
          'In the third test case, you fill the knapsack exactly in half.',
  'output': 'For each test case, if there is no solution, print a single '
            'integer −1. If there exists a solution consisting of m items, '
            'print m in the first line of the output and m integers j1, j2, . '
            '. . , jm ( 1≤ji≤n, all ji are distinct) in the second line of the '
            'output — indices of the items you would like to pack into the '
            'knapsack. If there are several possible lists of items satisfying '
            "the conditions, you can output any. Note that you don' t have to "
            'maximize the sum of weights items in the knapsack.',
  'title': 'Knapsack',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1446/A'},
 {'history': 'You are given two strings A and B representing essays of two '
             'students who are suspected cheaters. For any two strings C, D we '
             'define their similarity score S( C, D) as 4⋅LCS( C, D) −| C| −| '
             'D| , where LCS( C, D) denotes the length of the Longest Common '
             'Subsequence of strings C and D. You believe that only some part '
             "of the essays could have been copied, therefore you' re "
             'interested in their substrings. Calculate the maximal similarity '
             'score over all pairs of substrings. More formally, output '
             'maximal S( C, D) over all pairs ( C, D) , where C is some '
             'substring of A, and D is some substring of B. If X is a string, '
             '| X| denotes its length. A string a is a substring of a string b '
             'if a can be obtained from b by deletion of several ( possibly, '
             'zero or all) characters from the beginning and several ( '
             'possibly, zero or all) characters from the end. A string a is a '
             'subsequence of a string b if a can be obtained from b by '
             'deletion of several ( possibly, zero or all) characters. Pay '
             'attention to the difference between the substring and '
             'subsequence, as they both appear in the problem statement. You '
             'may wish to read the Wikipedia page about the Longest Common '
             'Subsequence problem.',
  'input': 'The first line contains two positive integers n and m ( 1≤n, '
           'm≤5000) — lengths of the two strings A and B. The second line '
           'contains a string consisting of n lowercase Latin letters — string '
           'A. The third line contains a string consisting of m lowercase '
           'Latin letters — string B.',
  'note': 'For the first case: abb from the first string and abab from the '
          'second string have LCS equal to abb. The result is S( abb, abab) = '
          '( 4⋅| abb| ) - | abb| - | abab| = 4⋅3−3−4= 5.',
  'output': 'Output maximal S( C, D) over all pairs ( C, D) , where C is some '
            'substring of A, and D is some substring of B.',
  'title': 'Catching Cheaters',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1446/B'},
 {'history': 'A string b is a subsequence of a string a if b can be obtained '
             'from a by deletion of several ( possibly, zero or all) '
             'characters. For example, " xy" is a subsequence of " xzyw" and " '
             'xy" , but not " yx" . You are given a string a. Your task is to '
             'reorder the characters of a so that " trygub" is not a '
             'subsequence of the resulting string. In other words, you should '
             'find a string b which is a permutation of symbols of the string '
             'a and " trygub" is not a subsequence of b. We have a truly '
             'marvelous proof that any string can be arranged not to contain " '
             'trygub" as a subsequence, but this problem statement is too '
             'short to contain it.',
  'input': 'The first line contains a single integer t ( 1≤t≤100) — the number '
           'of test cases. The first line of each test case contains a single '
           'integer n ( 1≤n≤200) — the length of a. The next line contains the '
           'string a of length n, consisting of lowercase English letters.',
  'note': 'In the first test case, " bugyrtnotna" does not contain " trygub" '
          'as a subsequence. It does contain the letters of " trygub" , but '
          'not in the correct order, so it is not a subsequence. In the second '
          'test case, we did not change the order of characters because it is '
          'not needed. In the third test case, " bruhtrywatchinggura" does '
          'contain " trygu" as a subsequence, but not " trygub" .',
  'output': 'For each test case, output a string b of length n which is a '
            'permutation of characters of the string a, and such that " '
            'trygub" is not a subsequence of it. If there exist multiple '
            'possible strings b, you can print any.',
  'title': 'Avoid Trygub',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1450/A'},
 {'history': 'Hr0d1y has q queries on a binary string s of length n. A binary '
             "string is a string containing only characters ' 0' and ' 1' . A "
             'query is described by a pair of integers li, ri ( 1≤li< ri≤n) . '
             'For each query, he has to determine whether there exists a good '
             'subsequence in s that is equal to the substring s[ li. . . ri] . '
             'A substring s[ i. . . j] of a string s is the string formed by '
             'characters sisi+ 1. . . sj. String a is said to be a subsequence '
             'of string b if a can be obtained from b by deleting some '
             'characters without changing the order of the remaining '
             'characters. A subsequence is said to be good if it is not '
             'contiguous and has length ≥2. For example, if s is " 1100110" , '
             'then the subsequences s1s2s4 ( " 1100110" ) and s1s5s7 ( " '
             '1100110" ) are good, while s1s2s3 ( " 1100110" ) is not good. '
             'Can you help Hr0d1y answer each query?',
  'input': 'The first line of the input contains a single integer t ( 1≤t≤100) '
           '— the number of test cases. The description of each test case is '
           'as follows. The first line contains two integers n ( 2≤n≤100) and '
           'q ( 1≤q≤100) — the length of the string and the number of queries. '
           'The second line contains the string s. The i- th of the next q '
           'lines contains two integers li and ri ( 1≤li< ri≤n) .',
  'note': 'In the first test case, s[ 2. . . 4] = " 010" . In this case s1s3s5 '
          '( " 001000" ) and s2s3s6 ( " 001000" ) are good suitable '
          'subsequences, while s2s3s4 ( " 001000" ) is not good. s[ 1. . . 3] '
          '= " 001" . No suitable good subsequence exists. s[ 3. . . 5] = " '
          '100" . Here s3s5s6 ( " 001000" ) is a suitable good subsequence.',
  'output': 'For each test case, output q lines. The i- th line of the output '
            'of each test case should contain " YES" if there exists a good '
            'subsequence equal to the substring s[ li. . . ri] , and " NO" '
            'otherwise. You may print each letter in any case ( upper or '
            'lower) .',
  'title': 'Non-Substring Subsequence',
  'topics': ['implementation', 'strings'],
  'url': 'https://codeforces.com/problemset/problem/1451/B'},
 {'history': 'Ashish has two strings a and b, each of length n, and an integer '
             'k. The strings only contain lowercase English letters. He wants '
             'to convert string a into string b by performing some ( possibly '
             'zero) operations on a. In one move, he can either choose an '
             'index i ( 1≤i≤n−1) and swap ai and ai+ 1, or choose an index i ( '
             '1≤i≤n−k+ 1) and if ai, ai+ 1, . . . , ai+ k−1 are all equal to '
             "some character c ( c= ̸ ' z' ) , replace each one with the next "
             "character ( c+ 1) , that is, ' a' is replaced by ' b' , ' b' is "
             "replaced by ' c' and so on. Note that he can perform any number "
             'of operations, and the operations can only be performed on '
             'string a. Help Ashish determine if it is possible to convert '
             'string a into b after performing some ( possibly zero) '
             'operations on it.',
  'input': 'The first line contains a single integer t ( 1≤t≤105) — the number '
           'of test cases. The description of each test case is as follows. '
           'The first line of each test case contains two integers n ( '
           '2≤n≤106) and k ( 1≤k≤n) . The second line of each test case '
           'contains the string a of length n consisting of lowercase English '
           'letters. The third line of each test case contains the string b of '
           'length n consisting of lowercase English letters. It is guaranteed '
           'that the sum of values n among all test cases does not exceed 106.',
  'note': 'In the first test case it can be shown that it is impossible to '
          'convert a into b. In the second test case, " abba" inc→ " acca" '
          'inc→ . . . inc→ " azza" . Here " swap" denotes an operation of the '
          'first type, and " inc" denotes an operation of the second type. In '
          'the fourth test case, " aaabba" swap→ " aaabab" swap→ " aaaabb" '
          'inc→ . . . inc→ " ddaabb" inc→ . . . inc→ " ddddbb" inc→ . . . inc→ '
          '" ddddcc" .',
  'output': 'For each test case, print " Yes" if Ashish can convert a into b '
            'after some moves, else print " No" . You may print the letters of '
            'the answer in any case ( upper or lower) .',
  'title': 'String Equality',
  'topics': ['implementation', 'strings'],
  'url': 'https://codeforces.com/problemset/problem/1451/C'},
 {'history': 'You are asked to watch your nephew who likes to play with toy '
             'blocks in a strange way. He has n boxes and the i- th box has ai '
             'blocks. His game consists of two steps: he chooses an arbitrary '
             'box i; he tries to move all blocks from the i- th box to other '
             'boxes. If he can make the same number of blocks in each of n−1 '
             'other boxes then he will be happy, otherwise, will be sad. Note '
             'that your nephew can only move the blocks from the chosen box to '
             'the other boxes; he cannot move blocks from the other boxes. You '
             "don' t want to make your nephew sad, so you decided to put "
             'several extra blocks into some boxes in such a way that no '
             "matter which box i he chooses he won' t be sad. What is the "
             'minimum number of extra blocks you need to put?',
  'input': 'The first line contains a single integer t ( 1≤t≤1000) — the '
           'number of test cases. The first line of each test case contains '
           'the integer n ( 2≤n≤105) — the number of boxes. The second line of '
           'each test case contains n integers a1, a2, . . . , an ( 0≤ai≤109) '
           "— the number of blocks in each box. It' s guaranteed that the sum "
           "of n over test cases doesn' t exceed 105.",
  'note': 'In the first test case, you can, for example, put one extra block '
          'into the first box and make a= [ 4, 2, 2] . If your nephew chooses '
          'the box with 4 blocks, then we will move two blocks to the second '
          'box and two blocks to the third box. If he chooses the box with 2 '
          'blocks then he will move these two blocks to the other box with 2 '
          "blocks. In the second test case, you don' t need to put any extra "
          'blocks, since no matter which box your nephew chooses, he can '
          'always make other boxes equal. In the third test case, you should '
          'put 3 extra blocks. For example, you can put 2 blocks in the first '
          "box and 1 block in the third box. You' ll get array a= [ 2, 3, 1] .",
  'output': 'For each test case, print a single integer — the minimum number '
            'of blocks you need to put. It can be proved that the answer '
            'always exists, i. e. the number of blocks is finite.',
  'title': 'Toy Blocks',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1452/B'},
 {'history': 'Berland regional ICPC contest has just ended. There were m '
             'participants numbered from 1 to m, who competed on a problemset '
             'of n problems numbered from 1 to n. Now the editorial is about '
             'to take place. There are two problem authors, each of them is '
             'going to tell the tutorial to exactly k consecutive tasks of the '
             'problemset. The authors choose the segment of k consecutive '
             'tasks for themselves independently of each other. The segments '
             'can coincide, intersect or not intersect at all. The i- th '
             'participant is interested in listening to the tutorial of all '
             'consecutive tasks from li to ri. Each participant always chooses '
             'to listen to only the problem author that tells the tutorials to '
             'the maximum number of tasks he is interested in. Let this '
             'maximum number be ai. No participant can listen to both of the '
             "authors, even if their segments don' t intersect. The authors "
             'want to choose the segments of k consecutive tasks for '
             'themselves in such a way that the sum of ai over all '
             'participants is maximized.',
  'input': 'The first line contains three integers n, m and k ( 1≤n, m≤2000, '
           '1≤k≤n) — the number of problems, the number of participants and '
           'the length of the segment of tasks each of the problem authors '
           'plans to tell the tutorial to. The i- th of the next m lines '
           'contains two integers li and ri ( 1≤li≤ri≤n) — the segment of '
           'tasks the i- th participant is interested in listening to the '
           'tutorial to.',
  'note': 'In the first example the first author can tell the tutorial to '
          'problems from 1 to 3 and the second one — from 6 to 8. That way the '
          'sequence of ai will be [ 3, 2, 3, 3, 3] . Notice that the last '
          "participant can' t listen to both author, he only chooses the one "
          "that tells the maximum number of problems he' s interested in. In "
          'the second example the first one can tell problems 2 to 4, the '
          'second one — 4 to 6. In the third example the first one can tell '
          'problems 1 to 1, the second one — 2 to 2. Or 4 to 4 and 3 to 3. '
          'Every pair of different problems will get the same sum of 2. In the '
          'fourth example the first one can tell problems 1 to 5, the second '
          'one — 1 to 5 as well.',
  'output': 'Print a single integer — the maximum sum of ai over all '
            'participants.',
  'title': 'Two Editorials',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1452/E'},
 {'history': 'You are given a sequence a consisting of n integers a1, a2, . . '
             '. , an, and an integer x. Your task is to make the sequence a '
             'sorted ( it is considered sorted if the condition a1≤a2≤a3≤⋯≤an '
             'holds) . To make the sequence sorted, you may perform the '
             'following operation any number of times you want ( possibly '
             'zero) : choose an integer i such that 1≤i≤n and ai> x, and swap '
             'the values of ai and x. For example, if a= [ 0, 2, 3, 5, 4] , x= '
             '1, the following sequence of operations is possible: choose i= 2 '
             '( it is possible since a2> x) , then a= [ 0, 1, 3, 5, 4] , x= 2; '
             'choose i= 3 ( it is possible since a3> x) , then a= [ 0, 1, 2, '
             '5, 4] , x= 3; choose i= 4 ( it is possible since a4> x) , then '
             'a= [ 0, 1, 2, 3, 4] , x= 5. Calculate the minimum number of '
             'operations you have to perform so that a becomes sorted, or '
             'report that it is impossible.',
  'input': 'The first line contains one integer t ( 1≤t≤500) — the number of '
           'test cases. Each test case consists of two lines. The first line '
           'contains two integers n and x ( 1≤n≤500, 0≤x≤500) — the number of '
           'elements in the sequence and the initial value of x. The second '
           'line contains n integers a1, a2, . . . , an ( 0≤ai≤500) . The sum '
           'of values of n over all test cases in the input does not exceed '
           '500.',
  'note': ' ',
  'output': 'For each test case, print one integer — the minimum number of '
            'operations you have to perform to make a sorted, or −1, if it is '
            'impossible.',
  'title': 'Sequence and Swaps',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1455/D'},
 {'history': 'Mike received an array aa of length nn as a birthday present and '
             'decided to test how pretty it is. An array would pass the ii- th '
             'prettiness test if there is a way to get an array with a sum of '
             'elements totaling sisi, using some number ( possibly zero) of '
             'slicing operations. An array slicing operation is conducted in '
             'the following way: assume mid= ⌊max( array) + min( array) 2⌋mid= '
             '⌊max( array) + min( array) 2⌋, where maxmax and minmin — are '
             'functions that find the maximum and the minimum array elements. '
             'In other words, midmid is the sum of the maximum and the minimum '
             'element of arrayarray divided by 22 rounded down. Then the array '
             'is split into two parts leftleft and rightright. The leftleft '
             'array contains all elements which are less than or equal midmid, '
             'and the rightright array contains all elements which are greater '
             'than midmid. Elements in leftleft and rightright keep their '
             'relative order from arrayarray. During the third step we choose '
             'which of the leftleft and rightright arrays we want to keep. The '
             'chosen array replaces the current one and the other is '
             'permanently discarded. You need to help Mike find out the '
             'results of qq prettiness tests. Note that you test the '
             'prettiness of the array aa, so you start each prettiness test '
             'with the primordial ( initial) array aa. Thus, the first slice ( '
             'if required) is always performed on the array aa.',
  'input': 'Each test contains one or more test cases. The first line contains '
           'the number of test cases tt ( 1≤t≤1001≤t≤100) . The first line of '
           'each test case contains two integers nn and qq ( 1≤n, q≤105) ( '
           '1≤n, q≤105) — the length of the array aa and the total number of '
           'prettiness tests. The second line of each test case contains nn '
           'integers a1, a2, . . . , ana1, a2, . . . , an ( 1≤ai≤106) ( '
           '1≤ai≤106) — the contents of the array aa. Next qq lines of each '
           'test case contain a single integer sisi ( 1≤si≤109) ( 1≤si≤109) — '
           'the sum of elements which Mike wants to get in the ii- th test. It '
           'is guaranteed that the sum of nn and the sum of qq does not exceed '
           '105105 ( ∑n, ∑q≤105∑n, ∑q≤105) .',
  'note': 'Explanation of the first test case: We can get an array with the '
          'sum s1= 1s1= 1 in the following way: 1. 1 a= [ 1, 2, 3, 4, 5] a= [ '
          '1, 2, 3, 4, 5] , mid= 1+ 52= 3mid= 1+ 52= 3, left= [ 1, 2, 3] left= '
          '[ 1, 2, 3] , right= [ 4, 5] right= [ 4, 5] . We choose to keep the '
          'leftleft array. 1. 2 a= [ 1, 2, 3] a= [ 1, 2, 3] , mid= 1+ 32= '
          '2mid= 1+ 32= 2, left= [ 1, 2] left= [ 1, 2] , right= [ 3] right= [ '
          '3] . We choose to keep the leftleft array. 1. 3 a= [ 1, 2] a= [ 1, '
          '2] , mid= 1+ 22= 1mid= 1+ 22= 1, left= [ 1] left= [ 1] , right= [ '
          '2] right= [ 2] . We choose to keep the leftleft array with the sum '
          'equalling 11. It can be demonstrated that an array with the sum s2= '
          '8s2= 8 is impossible to generate. An array with the sum s3= 9s3= 9 '
          'can be generated in the following way: 3. 1 a= [ 1, 2, 3, 4, 5] a= '
          '[ 1, 2, 3, 4, 5] , mid= 1+ 52= 3mid= 1+ 52= 3, left= [ 1, 2, 3] '
          'left= [ 1, 2, 3] , right= [ 4, 5] right= [ 4, 5] . We choose to '
          'keep the rightright array with the sum equalling 99. It can be '
          'demonstrated that an array with the sum s4= 12s4= 12 is impossible '
          'to generate. We can get an array with the sum s5= 6s5= 6 in the '
          'following way: 5. 1 a= [ 1, 2, 3, 4, 5] a= [ 1, 2, 3, 4, 5] , mid= '
          '1+ 52= 3mid= 1+ 52= 3, left= [ 1, 2, 3] left= [ 1, 2, 3] , right= [ '
          '4, 5] right= [ 4, 5] . We choose to keep the leftleft with the sum '
          'equalling 66. Explanation of the second test case: It can be '
          'demonstrated that an array with the sum s1= 1s1= 1 is imposssible '
          'to generate. We can get an array with the sum s2= 2s2= 2 in the '
          'following way: 2. 1 a= [ 3, 1, 3, 1, 3] a= [ 3, 1, 3, 1, 3] , mid= '
          '1+ 32= 2mid= 1+ 32= 2, left= [ 1, 1] left= [ 1, 1] , right= [ 3, 3, '
          '3] right= [ 3, 3, 3] . We choose to keep the leftleft array with '
          'the sum equalling 22. It can be demonstrated that an array with the '
          'sum s3= 3s3= 3 is imposssible to generate. We can get an array with '
          'the sum s4= 9s4= 9 in the following way: 4. 1 a= [ 3, 1, 3, 1, 3] '
          'a= [ 3, 1, 3, 1, 3] , mid= 1+ 32= 2mid= 1+ 32= 2, left= [ 1, 1] '
          'left= [ 1, 1] , right= [ 3, 3, 3] right= [ 3, 3, 3] . We choose to '
          'keep the rightright array with the sum equalling 99. We can get an '
          'array with the sum s5= 11s5= 11 with zero slicing operations, '
          'because array sum is equal to 1111.',
  'output': 'Print qq lines, each containing either a " Yes" if the '
            'corresponding prettiness test is passed and " No" in the opposite '
            'case.',
  'title': 'Divide and Summarize',
  'topics': ['implementation', 'sortings'],
  'url': 'https://codeforces.com/problemset/problem/1461/D'},
 {'history': 'Polycarp has a string s[ 1. . . n] of length n consisting of '
             'decimal digits. Polycarp performs the following operation with '
             'the string s no more than once ( i. e. he can perform operation '
             '0 or 1 time) : Polycarp selects two numbers i and j ( 1≤i≤j≤n) '
             'and removes characters from the s string at the positions i, i+ '
             '1, i+ 2, . . . , j ( i. e. removes substring s[ i. . . j] ) . '
             'More formally, Polycarp turns the string s into the string s1s2. '
             '. . si−1sj+ 1sj+ 2. . . sn. For example, the string s= " '
             '20192020" Polycarp can turn into strings: " 2020" ( in this case '
             '( i, j) = ( 3, 6) or ( i, j) = ( 1, 4) ) ; " 2019220" ( in this '
             'case ( i, j) = ( 6, 6) ) ; " 020" ( in this case ( i, j) = ( 1, '
             '5) ) ; other operations are also possible, only a few of them '
             'are listed above. Polycarp likes the string " 2020" very much, '
             'so he is wondering if it is possible to turn the string s into a '
             'string " 2020" in no more than one operation? Note that you can '
             'perform zero operations.',
  'input': 'The first line contains a positive integer t ( 1≤t≤1000) — number '
           'of test cases in the test. Then t test cases follow. The first '
           'line of each test case contains an integer n ( 4≤n≤200) — length '
           'of the string s. The next line contains a string s of length n '
           'consisting of decimal digits. It is allowed that the string s '
           'starts with digit 0.',
  'note': 'In the first test case, Polycarp could choose i= 3 and j= 6. In the '
          'second test case, Polycarp could choose i= 2 and j= 5. In the third '
          'test case, Polycarp did not perform any operations with the string.',
  'output': 'For each test case, output on a separate line: " YES" if Polycarp '
            'can turn the string s into a string " 2020" in no more than one '
            'operation ( i. e. he can perform 0 or 1 operation) ; " NO" '
            'otherwise. You may print every letter of " YES" and " NO" in any '
            'case you want ( so, for example, the strings yEs, yes, Yes and '
            'YES will all be recognized as positive answer) .',
  'title': "Last Year's Substring",
  'topics': ['implementation', 'strings'],
  'url': 'https://codeforces.com/problemset/problem/1462/B'},
 {'history': 'This is the easy version of this problem. The only difference '
             'between easy and hard versions is the constraints on k and m ( '
             'in this version k= 2 and m= 3) . Also, in this version of the '
             "problem, you DON' T NEED to output the answer by modulo. You are "
             'given a sequence a of length n consisting of integers from 1 to '
             'n. The sequence may contain duplicates ( i. e. some elements can '
             'be equal) . Find the number of tuples of m= 3 elements such that '
             'the maximum number in the tuple differs from the minimum by no '
             'more than k= 2. Formally, you need to find the number of triples '
             'of indices i< j< z such thatmax( ai, aj, az) −min( ai, aj, az) '
             '≤2. For example, if n= 4 and a= [ 1, 2, 4, 3] , then there are '
             'two such triples ( i= 1, j= 2, z= 4 and i= 2, j= 3, z= 4) . If '
             'n= 4 and a= [ 1, 1, 1, 1] , then all four possible triples are '
             'suitable.',
  'input': 'The first line contains a single integer t ( 1≤t≤2⋅105) — the '
           'number of test cases. Then t test cases follow. The first line of '
           'each test case contains an integer n ( 1≤n≤2⋅105) — the length of '
           'the sequence a. The next line contains n integers a1, a2, . . . , '
           'an ( 1≤ai≤n) — the sequence a. It is guaranteed that the sum of n '
           'for all test cases does not exceed 2⋅105.',
  'note': ' ',
  'output': 'Output t answers to the given test cases. Each answer is the '
            'required number of triples of elements, such that the maximum '
            'value in the triple differs from the minimum by no more than 2. '
            'Note that in difference to the hard version of the problem, you '
            "don' t need to output the answer by modulo. You must output the "
            'exact value of the answer.',
  'title': 'Close Tuples (easy version)',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1462/E1'},
 {'history': 'This is the hard version of this problem. The only difference '
             'between the easy and hard versions is the constraints on k and '
             'm. In this version of the problem, you need to output the answer '
             'by modulo 109+ 7. You are given a sequence a of length n '
             'consisting of integers from 1 to n. The sequence may contain '
             'duplicates ( i. e. some elements can be equal) . Find the number '
             'of tuples of m elements such that the maximum number in the '
             'tuple differs from the minimum by no more than k. Formally, you '
             'need to find the number of tuples of m indices i1< i2< . . . < '
             'im, such thatmax( ai1, ai2, . . . , aim) −min( ai1, ai2, . . . , '
             'aim) ≤k. For example, if n= 4, m= 3, k= 2, a= [ 1, 2, 4, 3] , '
             'then there are two such triples ( i= 1, j= 2, z= 4 and i= 2, j= '
             '3, z= 4) . If n= 4, m= 2, k= 1, a= [ 1, 1, 1, 1] , then all six '
             'possible pairs are suitable. As the result can be very large, '
             'you should print the value modulo 109+ 7 ( the remainder when '
             'divided by 109+ 7) .',
  'input': 'The first line contains a single integer t ( 1≤t≤2⋅105) — the '
           'number of test cases. Then t test cases follow. The first line of '
           'each test case contains three integers n, m, k ( 1≤n≤2⋅105, '
           '1≤m≤100, 1≤k≤n) — the length of the sequence a, number of elements '
           'in the tuples and the maximum difference of elements in the tuple. '
           'The next line contains n integers a1, a2, . . . , an ( 1≤ai≤n) — '
           'the sequence a. It is guaranteed that the sum of n for all test '
           'cases does not exceed 2⋅105.',
  'note': ' ',
  'output': 'Output t answers to the given test cases. Each answer is the '
            'required number of tuples of m elements modulo 109+ 7, such that '
            'the maximum value in the tuple differs from the minimum by no '
            'more than k.',
  'title': 'Close Tuples (hard version)',
  'topics': ['implementation', 'sortings'],
  'url': 'https://codeforces.com/problemset/problem/1462/E2'},
 {'history': 'Ivan is a programming teacher. During the academic year, he '
             'plans to give n lectures on n different topics. Each topic '
             'should be used in exactly one lecture. Ivan wants to choose '
             'which topic will he explain during the 1- st, 2- nd, . . . , n- '
             'th lecture — formally, he wants to choose some permutation of '
             "integers from 1 to n ( let' s call this permutation q) . qi is "
             'the index of the topic Ivan will explain during the i- th '
             'lecture. For each topic ( except exactly one) , there exists a '
             'prerequisite topic ( for the topic i, the prerequisite topic is '
             'pi) . Ivan cannot give a lecture on a topic before giving a '
             'lecture on its prerequisite topic. There exists at least one '
             'valid ordering of topics according to these prerequisite '
             'constraints. Ordering the topics correctly can help students '
             'understand the lectures better. Ivan has k special pairs of '
             'topics ( xi, yi) such that he knows that the students will '
             'understand the yi- th topic better if the lecture on it is '
             'conducted right after the lecture on the xi- th topic. Ivan '
             'wants to satisfy the constraints on every such pair, that is, '
             'for every i∈[ 1, k] , there should exist some j∈[ 1, n−1] such '
             'that qj= xi and qj+ 1= yi. Now Ivan wants to know if there '
             'exists an ordering of topics that satisfies all these '
             'constraints, and if at least one exists, find any of them.',
  'input': 'The first line contains two integers n and k ( 2≤n≤3⋅105, 1≤k≤n−1) '
           '— the number of topics and the number of special pairs of topics, '
           'respectively. The second line contains n integers p1, p2, . . . , '
           'pn ( 0≤pi≤n) , where pi is the prerequisite topic for the topic i '
           '( or pi= 0 if the i- th topic has no prerequisite topics) . '
           'Exactly one of these integers is 0. At least one ordering of '
           'topics such that for every i the pi- th topic is placed before the '
           'i- th topic exists. Then k lines follow, the i- th line contains '
           'two integers xi and yi ( 1≤xi, yi≤n; xi= ̸yi) — the topics from '
           'the i- th special pair. All values of xi are pairwise distinct; '
           'similarly, all valus of yi are pairwise distinct.',
  'note': ' ',
  'output': 'If there is no ordering of topics meeting all the constraints, '
            'print 0. Otherwise, print n pairwise distinct integers q1, q2, . '
            '. . , qn ( 1≤qi≤n) — the ordering of topics meeting all of the '
            'constraints. If there are multiple answers, print any of them.',
  'title': 'Plan of Lectures',
  'topics': ['implementation', 'sortings'],
  'url': 'https://codeforces.com/problemset/problem/1463/E'},
 {'history': "After his wife' s tragic death, Eurydice, Orpheus descended to "
             'the realm of death to see her. Reaching its gates was uneasy, '
             'but passing through them proved to be even more challenging. '
             'Mostly because of Cerberus, the three- headed hound of Hades. '
             'Orpheus, a famous poet, and musician plans to calm Cerberus with '
             'his poetry and safely walk past him. He created a very peculiar '
             'poem for Cerberus. It consists only of lowercase English '
             "letters. We call a poem' s substring a palindrome if and only if "
             'it reads the same backwards and forwards. A string a is a '
             'substring of a string b if a can be obtained from b by deleting '
             'several ( possibly zero or all) characters from the beginning '
             'and several ( possibly zero or all) characters from the end. '
             'Unfortunately, Cerberus dislikes palindromes of length greater '
             "than 1. For example in the poem abaa the hound of Hades wouldn' "
             't like substrings aba and aa. Orpheus can only calm Cerberus if '
             "the hound likes his poetry. That' s why he wants to change his "
             'poem so that it does not contain any palindrome substrings of '
             'length greater than 1. Orpheus can modify the poem by replacing '
             'a letter at any position with any lowercase English letter. He '
             'can use this operation arbitrarily many times ( possibly zero) . '
             'Since there can be many palindromes in his poem, he may have to '
             'make some corrections. But how many, exactly? Given the poem, '
             'determine the minimal number of letters that have to be changed '
             'so that the poem does not contain any palindromes of length '
             'greater than 1.',
  'input': 'The first line of the input contains a single integer t ( 1≤t≤105) '
           'denoting the number of test cases, then t test cases follow. The '
           'first and only line of each test case contains a non- empty string '
           "of lowercase English letters, Orpheus' poem. The sum of the length "
           "of Orpheus' poems in all test cases will not exceed 105.",
  'note': 'In the first test case, we can replace the third character with c '
          'and obtain a palindrome- less poem bacba. In the second test case, '
          'we can replace the third character with d and obtain a palindrome- '
          'less poem abdac. In the third test case, the initial poem already '
          "doesn' t contain any palindromes, so Orpheus doesn' t need to "
          'change anything there.',
  'output': 'You should output t lines, i- th line should contain a single '
            'integer, answer to the i- th test case.',
  'title': 'Canine poetry',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1466/C'},
 {'history': "You' ve probably heard about the twelve labors of Heracles, but "
             'do you have any idea about the thirteenth? It is commonly '
             'assumed it took him a dozen years to complete the twelve feats, '
             'so on average, a year to accomplish every one of them. As time '
             'flows faster these days, you have minutes rather than months to '
             'solve this task. But will you manage? In this problem, you are '
             'given a tree with nn weighted vertices. A tree is a connected '
             'graph with n−1n−1 edges. Let us define its kk- coloring as an '
             'assignment of kk colors to the edges so that each edge has '
             "exactly one color assigned to it. Note that you don' t have to "
             'use all kk colors. A subgraph of color xx consists of these '
             'edges from the original tree, which are assigned color xx, and '
             'only those vertices that are adjacent to at least one such edge. '
             'So there are no vertices of degree 00 in such a subgraph. The '
             'value of a connected component is the sum of weights of its '
             'vertices. Let us define the value of a subgraph as a maximum of '
             'values of its connected components. We will assume that the '
             'value of an empty subgraph equals 00. There is also a value of a '
             'kk- coloring, which equals the sum of values of subgraphs of all '
             'kk colors. Given a tree, for each kk from 11 to n−1n−1 calculate '
             'the maximal value of a kk- coloring.',
  'input': 'In the first line of input, there is a single integer tt ( '
           '1≤t≤1051≤t≤105) denoting the number of test cases. Then tt test '
           'cases follow. First line of each test case contains a single '
           'integer nn ( 2≤n≤1052≤n≤105) . The second line consists of nn '
           'integers w1, w2, . . . , wnw1, w2, . . . , wn ( 0≤wi≤1090≤wi≤109) '
           ', wiwi equals the weight of ii- th vertex. In each of the '
           'following n−1n−1 lines, there are two integers uu, vv ( 1≤u, '
           'v≤n1≤u, v≤n) describing an edge between vertices uu and vv. It is '
           'guaranteed that these edges form a tree. The sum of nn in all test '
           'cases will not exceed 2⋅1052⋅105.',
  'note': 'The optimal kk- colorings from the first test case are the '
          'following: In the 11- coloring all edges are given the same color. '
          'The subgraph of color 11 contains all the edges and vertices from '
          'the original graph. Hence, its value equals 3+ 5+ 4+ 6= 183+ 5+ 4+ '
          '6= 18. In an optimal 22- coloring edges ( 2, 1) ( 2, 1) and ( 3, 1) '
          '( 3, 1) are assigned color 11. Edge ( 4, 3) ( 4, 3) is of color 22. '
          'Hence the subgraph of color 11 consists of a single connected '
          'component ( vertices 1, 2, 31, 2, 3) and its value equals 3+ 5+ 4= '
          '123+ 5+ 4= 12. The subgraph of color 22 contains two vertices and '
          'one edge. Its value equals 4+ 6= 104+ 6= 10. In an optimal 33- '
          'coloring all edges are assigned distinct colors. Hence subgraphs of '
          'each color consist of a single edge. They values are as follows: 3+ '
          '4= 73+ 4= 7, 4+ 6= 104+ 6= 10, 3+ 5= 83+ 5= 8.',
  'output': 'For every test case, your program should print one line '
            'containing n−1n−1 integers separated with a single space. The ii- '
            'th number in a line should be the maximal value of a ii- coloring '
            'of the tree.',
  'title': '13th Labour of Heracles',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1466/D'},
 {'history': 'You may know that Euclid was a mathematician. Well, as it turns '
             'out, Morpheus knew it too. So when he wanted to play a mean '
             'trick on Euclid, he sent him an appropriate nightmare. In his '
             'bad dream Euclid has a set S of n m- dimensional vectors over '
             'the Z2 field and can perform vector addition on them. In other '
             'words he has vectors with m coordinates, each one equal either 0 '
             'or 1. Vector addition is defined as follows: let u+ v= w, then '
             'wi= ( ui+ vi) mod2. Euclid can sum any subset of S and archive '
             'another m- dimensional vector over Z2. In particular, he can sum '
             'together an empty subset; in such a case, the resulting vector '
             'has all coordinates equal 0. Let T be the set of all the vectors '
             'that can be written as a sum of some vectors from S. Now Euclid '
             'wonders the size of T and whether he can use only a subset S′ of '
             'S to obtain all the vectors from T. As it is usually the case in '
             'such scenarios, he will not wake up until he figures this out. '
             'So far, things are looking rather grim for the philosopher. But '
             'there is hope, as he noticed that all vectors in S have at most '
             '2 coordinates equal 1. Help Euclid and calculate | T| , the '
             'number of m- dimensional vectors over Z2 that can be written as '
             'a sum of some vectors from S. As it can be quite large, '
             'calculate it modulo 109+ 7. You should also find S′, the '
             'smallest such subset of S, that all vectors in T can be written '
             'as a sum of vectors from S′. In case there are multiple such '
             'sets with a minimal number of elements, output the '
             'lexicographically smallest one with respect to the order in '
             'which their elements are given in the input. Consider sets A and '
             'B such that | A| = | B| . Let a1, a2, . . . a| A| and b1, b2, . '
             '. . b| B| be increasing arrays of indices elements of A and B '
             'correspondingly. A is lexicographically smaller than B iff there '
             'exists such i that aj= bj for all j< i and ai< bi.',
  'input': 'In the first line of input, there are two integers n, m ( 1≤n, '
           'm≤5⋅105) denoting the number of vectors in S and the number of '
           'dimensions. Next n lines contain the description of the vectors in '
           'S. In each of them there is an integer k ( 1≤k≤2) and then follow '
           'k distinct integers x1, . . . xk ( 1≤xi≤m) . This encodes an m- '
           'dimensional vector having 1s on coordinates x1, . . . xk and 0s on '
           'the rest of them. Among the n vectors, no two are the same.',
  'note': 'In the first example we are given three vectors: 10 01 11 It turns '
          'out that we can represent all vectors from our 2- dimensional space '
          'using these vectors: 00 is a sum of the empty subset of above '
          'vectors; 01= 11+ 10, is a sum of the first and third vector; 10= '
          '10, is just the first vector; 11= 10+ 01, is a sum of the first and '
          'the second vector. Hence, T= 00, 01, 10, 11. We can choose any two '
          'of the three vectors from S and still be able to obtain all the '
          'vectors in T. In such a case, we choose the two vectors which '
          'appear first in the input. Since we cannot obtain all vectors in T '
          'using only a single vector from S, | S′| = 2 and S′= 10, 01 ( '
          'indices 1 and 2) , as set 1, 2 is lexicographically the smallest. '
          'We can represent all vectors from T, using only vectors from S′, as '
          'shown below: 00 is a sum of the empty subset; 01= 01 is just the '
          'second vector; 10= 10 is just the first vector; 11= 10+ 01 is a sum '
          'of the first and the second vector.',
  'output': 'In the first line, output two integers: remainder modulo 109+ 7 '
            'of | T| and | S′| . In the second line, output | S′| numbers, '
            'indices of the elements of S′ in ascending order. The elements of '
            'S are numbered from 1 in the order they are given in the input.',
  'title': "Euclid's nightmare",
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1466/F'},
 {'history': "Whoso in ignorance draws near to them and hears the Sirens' "
             'voice, he nevermore returns. Homer, OdysseyIn the times of Jason '
             'and the Argonauts, it was well known that sirens use the sound '
             'of their songs to lure sailors into their demise. Yet only a few '
             'knew that every time sirens call a sailor by his name, his will '
             'weakens, making him more vulnerable. For the purpose of this '
             'problem, both siren songs and names of the sailors will be '
             'represented as strings of lowercase English letters. The more '
             "times the sailor' s name occurs as a contiguous substring of the "
             'song, the greater danger he is in. Jason found out that sirens '
             'can sing one of the n+ 1 songs, which have the following '
             'structure: let si ( 0≤i≤n) be the i- th song and t be a string '
             'of length n, then for every i< n: si+ 1= sitisi. In other words '
             'i+ 1- st song is the concatenation of i- th song, i- th letter ( '
             '0- indexed) of t and the i- th song. Fortunately, he also knows '
             "s0 and t. Jason wonders how many times a sailor' s name is "
             'mentioned in a particular song. Answer q queries: given the '
             "sailor' s name ( w) and the index of a song ( i) output the "
             'number of occurrences of w in si as a substring. As this number '
             'can be quite large, output its remainder modulo 109+ 7.',
  'input': 'In the first line of input there are two integers n, q ( 1≤n, '
           'q≤105) meaning that there are n+ 1 songs and q queries. In the '
           'next two lines strings s0 and t follow ( 1≤| s0| ≤100, | t| = n) . '
           'Next q lines describe the queries; each one contains an integer k '
           '( 0≤k≤n) , the index of the song sung by the sirens, and a non- '
           'empty string w, which is the name of a sailor. All strings in this '
           'problem consist only of lowercase English letters, and the sum of '
           "lengths of sailors' names does not exceed 106.",
  'note': 'In the first example songs of the sirens are as follows: Song 0: aa '
          'Song 1: aabaa Song 2: aabaacaabaa Song 3: aabaacaabaadaabaacaabaa',
  'output': 'Output q lines, i- th of them should contain the remainder modulo '
            '109+ 7 of the number of occurrences of w in sk.',
  'title': 'Song of the Sirens',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1466/G'},
 {'history': 'Consider a long corridor which can be divided into n square '
             'cells of size 1×1. These cells are numbered from 1 to n from '
             'left to right. There are two people in this corridor, a hooligan '
             'and a security guard. Initially, the hooligan is in the a- th '
             'cell, the guard is in the b- th cell ( a= ̸b) . One of the '
             'possible situations. The corridor consists of 7 cells, the '
             'hooligan is in the 3- rd cell, the guard is in the 6- th ( n= 7, '
             "a= 3, b= 6) . There are m firecrackers in the hooligan' s "
             'pocket, the i- th firecracker explodes in si seconds after being '
             'lit. The following events happen each second ( sequentially, '
             'exactly in the following order) : firstly, the hooligan either '
             'moves into an adjacent cell ( from the cell i, he can move to '
             'the cell ( i+ 1) or to the cell ( i−1) , and he cannot leave the '
             'corridor) or stays in the cell he is currently. If the hooligan '
             "doesn' t move, he can light one of his firecrackers and drop it. "
             "The hooligan can' t move into the cell where the guard is; "
             'secondly, some firecrackers that were already dropped may '
             'explode. Formally, if the firecracker j is dropped on the T- th '
             'second, then it will explode on the ( T+ sj) - th second ( for '
             'example, if a firecracker with sj= 2 is dropped on the 4- th '
             'second, it explodes on the 6- th second) ; finally, the guard '
             'moves one cell closer to the hooligan. If the guard moves to the '
             'cell where the hooligan is, the hooligan is caught. Obviously, '
             'the hooligan will be caught sooner or later, since the corridor '
             'is finite. His goal is to see the maximum number of firecrackers '
             'explode before he is caught; that is, he will act in order to '
             'maximize the number of firecrackers that explodes before he is '
             'caught. Your task is to calculate the number of such '
             'firecrackers, if the hooligan acts optimally.',
  'input': 'The first line contains one integer t ( 1≤t≤1000) — the number of '
           'test cases. Each test case consists of two lines. The first line '
           'contains four integers n, m, a and b ( 2≤n≤109; 1≤m≤2⋅105; 1≤a, '
           'b≤n; a= ̸b) — the size of the corridor, the number of '
           'firecrackers, the initial location of the hooligan and the initial '
           'location of the guard, respectively. The second line contains m '
           'integers s1, s2, . . . , sm ( 1≤si≤109) , where si is the time it '
           'takes the i- th firecracker to explode after it is lit. It is '
           'guaranteed that the sum of m over all test cases does not exceed '
           '2⋅105.',
  'note': 'In the first test case, the hooligan should act, for example, as '
          'follows: second 1: drop the second firecracker, so it will explode '
          'on the 5- th second. The guard moves to the cell 5; second 2: move '
          'to the cell 2. The guard moves to the cell 4; second 3: drop the '
          'first firecracker, so it will explode on the 4- th second. The '
          'guard moves to the cell 3; second 4: move to the cell 1. The first '
          'firecracker explodes. The guard moves to the cell 2; second 5: stay '
          'in the cell 1. The second firecracker explodes. The guard moves to '
          'the cell 1 and catches the hooligan.',
  'output': 'For each test case, print one integer — the maximum number of '
            'firecrackers that the hooligan can explode before he is caught.',
  'title': 'Firecrackers',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1468/D'},
 {'history': "Let' s call two strings a and b ( both of length k) a bit "
             'similar if they have the same character in some position, i. e. '
             'there exists at least one i∈[ 1, k] such that ai= bi. You are '
             'given a binary string s of length n ( a string of n characters 0 '
             "and/ or 1) and an integer k. Let' s denote the string s[ i. . j] "
             'as the substring of s starting from the i- th character and '
             'ending with the j- th character ( that is, s[ i. . j] = sisi+ '
             "1si+ 2. . . sj−1sj) . Let' s call a binary string t of length k "
             'beautiful if it is a bit similar to all substrings of s having '
             'length exactly k; that is, it is a bit similar to s[ 1. . k] , '
             's[ 2. . k+ 1] , . . . , s[ n−k+ 1. . n] . Your goal is to find '
             'the lexicographically smallest string t that is beautiful, or '
             'report that no such string exists. String x is lexicographically '
             'less than string y if either x is a prefix of y ( and x= ̸y) , '
             'or there exists such i ( 1≤i≤min( | x| , | y| ) ) , that xi< yi, '
             'and for any j ( 1≤j< i) xj= yj.',
  'input': 'The first line contains one integer q ( 1≤q≤10000) — the number of '
           'test cases. Each test case consists of two lines. The first line '
           'of each test case contains two integers n and k ( 1≤k≤n≤106) . The '
           'second line contains the string s, consisting of n characters ( '
           'each character is either 0 or 1) . It is guaranteed that the sum '
           'of n over all test cases does not exceed 106.',
  'note': ' ',
  'output': 'For each test case, print the answer as follows: if it is '
            'impossible to construct a beautiful string, print one line '
            "containing the string NO ( note: exactly in upper case, you can' "
            't print No, for example) ; otherwise, print two lines. The first '
            'line should contain the string YES ( exactly in upper case as '
            'well) ; the second line — the lexicographically smallest '
            'beautiful string, consisting of k characters 0 and/ or 1.',
  'title': 'A Bit Similar',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1469/E'},
 {'history': 'Petya organized a strange birthday party. He invited n friends '
             'and assigned an integer ki to the i- th of them. Now Petya would '
             'like to give a present to each of them. In the nearby shop there '
             'are m unique presents available, the j- th present costs cj '
             "dollars ( 1≤c1≤c2≤. . . ≤cm) . It' s not allowed to buy a single "
             'present more than once. For the i- th friend Petya can either '
             'buy them a present j≤ki, which costs cj dollars, or just give '
             'them cki dollars directly. Help Petya determine the minimum '
             'total cost of hosting his party.',
  'input': 'The first input line contains a single integer t ( 1≤t≤103) — the '
           'number of test cases. The first line of each test case contains '
           'two integers n and m ( 1≤n, m≤3⋅105) — the number of friends, and '
           'the number of unique presents available. The following line '
           'contains n integers k1, k2, . . . , kn ( 1≤ki≤m) , assigned by '
           'Petya to his friends. The next line contains m integers c1, c2, . '
           '. . , cm ( 1≤c1≤c2≤. . . ≤cm≤109) — the prices of the presents. It '
           'is guaranteed that sum of values n over all test cases does not '
           'exceed 3⋅105, and the sum of values m over all test cases does not '
           'exceed 3⋅105.',
  'note': 'In the first example, there are two test cases. In the first one, '
          'Petya has 5 friends and 4 available presents. Petya can spend only '
          '30 dollars if he gives 5 dollars to the first friend. A present '
          'that costs 12 dollars to the second friend. A present that costs 5 '
          'dollars to the third friend. A present that costs 3 dollars to the '
          'fourth friend. 5 dollars to the fifth friend. In the second one, '
          'Petya has 5 and 5 available presents. Petya can spend only 190 '
          'dollars if he gives A present that costs 10 dollars to the first '
          'friend. A present that costs 40 dollars to the second friend. 90 '
          'dollars to the third friend. 40 dollars to the fourth friend. 10 '
          'dollars to the fifth friend.',
  'output': 'For each test case output a single integer — the minimum cost of '
            'the party.',
  'title': 'Strange Birthday Party',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1470/A'},
 {'history': 'During their New Year holidays, Alice and Bob play the following '
             'game using an array a of n integers: Players take turns, Alice '
             'moves first. Each turn a player chooses any element and removes '
             'it from the array. If Alice chooses even value, then she adds it '
             "to her score. If the chosen value is odd, Alice' s score does "
             'not change. Similarly, if Bob chooses odd value, then he adds it '
             "to his score. If the chosen value is even, then Bob' s score "
             'does not change. If there are no numbers left in the array, then '
             'the game ends. The player with the highest score wins. If the '
             'scores of the players are equal, then a draw is declared. For '
             'example, if n= 4 and a= [ 5, 2, 7, 3] , then the game could go '
             'as follows ( there are other options) : On the first move, Alice '
             'chooses 2 and get two points. Her score is now 2. The array a is '
             'now [ 5, 7, 3] . On the second move, Bob chooses 5 and get five '
             'points. His score is now 5. The array a is now [ 7, 3] . On the '
             'third move, Alice chooses 7 and get no points. Her score is now '
             '2. The array a is now [ 3] . On the last move, Bob chooses 3 and '
             'get three points. His score is now 8. The array a is empty now. '
             'Since Bob has more points at the end of the game, he is the '
             'winner. You want to find out who will win if both players play '
             'optimally. Note that there may be duplicate numbers in the '
             'array.',
  'input': 'The first line contains an integer t ( 1≤t≤104) — the number of '
           'test cases. Then t test cases follow. The first line of each test '
           'case contains an integer n ( 1≤n≤2⋅105) — the number of elements '
           'in the array a. The next line contains n integers a1, a2, . . . , '
           'an ( 1≤ai≤109) — the array a used to play the game. It is '
           'guaranteed that the sum of n over all test cases does not exceed '
           '2⋅105.',
  'note': ' ',
  'output': 'For each test case, output on a separate line: " Alice" if Alice '
            'wins with the optimal play; " Bob" if Bob wins with the optimal '
            'play; " Tie" , if a tie is declared during the optimal play.',
  'title': 'Even-Odd Game',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1472/D'},
 {'history': 'Polycarp has invited n friends to celebrate the New Year. During '
             'the celebration, he decided to take a group photo of all his '
             'friends. Each friend can stand or lie on the side. Each friend '
             'is characterized by two values hi ( their height) and wi ( their '
             'width) . On the photo the i- th friend will occupy a rectangle '
             'hi×wi ( if they are standing) or wi×hi ( if they are lying on '
             'the side) . The j- th friend can be placed in front of the i- th '
             'friend on the photo if his rectangle is lower and narrower than '
             'the rectangle of the i- th friend. Formally, at least one of the '
             'following conditions must be fulfilled: hj< hi and wj< wi ( both '
             'friends are standing or both are lying) ; wj< hi and hj< wi ( '
             'one of the friends is standing and the other is lying) . For '
             'example, if n= 3, h= [ 3, 5, 3] and w= [ 4, 4, 3] , then: the '
             'first friend can be placed in front of the second: w1< h2 and '
             'h1< w2 ( one of the them is standing and the other one is lying) '
             '; the third friend can be placed in front of the second: h3< h2 '
             'and w3< w2 ( both friends are standing or both are lying) . In '
             'other cases, the person in the foreground will overlap the '
             'person in the background. Help Polycarp for each i find any j, '
             'such that the j- th friend can be located in front of the i- th '
             'friend ( i. e. at least one of the conditions above is '
             'fulfilled) . Please note that you do not need to find the '
             'arrangement of all people for a group photo. You just need to '
             'find for each friend i any other friend j who can be located in '
             'front of him. Think about it as you need to solve n separate '
             'independent subproblems.',
  'input': 'The first line contains one integer t ( 1≤t≤104) — the number of '
           'test cases. Then t test cases follow. The first line of each test '
           'case contains one integer n ( 1≤n≤2⋅105) — the number of friends. '
           'This is followed by n lines, each of which contains a description '
           'of the corresponding friend. Each friend is described by two '
           'integers hi and wi ( 1≤hi, wi≤109) — height and width of the i- th '
           'friend, respectively. It is guaranteed that the sum of n over all '
           'test cases does not exceed 2⋅105.',
  'note': 'The first test case is described in the statement. In the third '
          'test case, the following answers are also correct: [ −1, −1, 1, 2] '
          '; [ −1, −1, 1, 1] ; [ −1, −1, 2, 1] .',
  'output': 'For each test case output n integers on a separate line, where '
            'the i- th number is the index of a friend that can be placed in '
            'front of the i- th. If there is no such friend, then output - 1. '
            'If there are several answers, output any.',
  'title': 'Correct Placement',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1472/E'},
 {'history': 'Every year Santa Claus gives gifts to all children. However, '
             'each country has its own traditions, and this process takes '
             'place in different ways. For example, in Berland you need to '
             "solve the New Year' s puzzle. Polycarp got the following "
             'problem: given a grid strip of size 2×n2×n, some cells of it are '
             'blocked. You need to check if it is possible to tile all free '
             'cells using the 2×12×1 and 1×21×2 tiles ( dominoes) . For '
             'example, if n= 5n= 5 and the strip looks like this ( black cells '
             'are blocked) : Then it can be tiled, for example, using two '
             'vertical and two horizontal tiles, as in the picture below ( '
             'different tiles are marked by different colors) . And if n= 3n= '
             '3 and the strip looks like this: It is impossible to tile free '
             'cells. Polycarp easily solved this task and received his New '
             "Year' s gift. Can you solve it?",
  'input': 'The first line contains an integer tt ( 1≤t≤1041≤t≤104) — the '
           'number of test cases. Then tt test cases follow. Each test case is '
           'preceded by an empty line. The first line of each test case '
           'contains two integers nn and mm ( 1≤n≤1091≤n≤109, '
           '1≤m≤2⋅1051≤m≤2⋅105) — the length of the strip and the number of '
           'blocked cells on it. Each of the next mm lines contains two '
           'integers ri, ciri, ci ( 1≤ri≤2, 1≤ci≤n1≤ri≤2, 1≤ci≤n) — numbers of '
           'rows and columns of blocked cells. It is guaranteed that all '
           'blocked cells are different, i. e. ( ri, ci) = ̸( rj, cj) , i= ̸j( '
           'ri, ci) = ̸( rj, cj) , i= ̸j. It is guaranteed that the sum of mm '
           'over all test cases does not exceed 2⋅1052⋅105.',
  'note': 'The first two test cases are explained in the statement. In the '
          'third test case the strip looks like this: It is easy to check that '
          'the unblocked squares on it can not be tiled.',
  'output': 'For each test case, print on a separate line: " YES" , if it is '
            'possible to tile all unblocked squares with the 2×12×1 and 1×21×2 '
            'tiles; " NO" otherwise. You can output " YES" and " NO" in any '
            'case ( for example, the strings yEs, yes, Yes and YES will be '
            'recognized as positive) .',
  'title': "New Year's Puzzle",
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1472/F'},
 {'history': 'You have an array a1, a2, . . . , an. All ai are positive '
             'integers. In one step you can choose three distinct indices i, '
             'j, and k ( i= ̸j; i= ̸k; j= ̸k) and assign the sum of aj and ak '
             'to ai, i. e. make ai= aj+ ak. Can you make all ai lower or equal '
             'to d using the operation above any number of times ( possibly, '
             'zero) ?',
  'input': 'The first line contains a single integer t ( 1≤t≤2000) — the '
           'number of test cases. The first line of each test case contains '
           'two integers n and d ( 3≤n≤100; 1≤d≤100) — the number of elements '
           'in the array a and the value d. The second line contains n '
           'integers a1, a2, . . . , an ( 1≤ai≤100) — the array a.',
  'note': "In the first test case, we can prove that we can' t make all ai≤3. "
          'In the second test case, all ai are already less or equal than d= '
          '4. In the third test case, we can, for example, choose i= 5, j= 1, '
          'k= 2 and make a5= a1+ a2= 2+ 1= 3. Array a will become [ 2, 1, 5, '
          '3, 3] . After that we can make a3= a5+ a2= 3+ 1= 4. Array will '
          'become [ 2, 1, 4, 3, 3] and all elements are less or equal than d= '
          '4.',
  'output': "For each test case, print YES, if it' s possible to make all "
            'elements ai less or equal than d using the operation above. '
            'Otherwise, print NO. You may print each letter in any case ( for '
            'example, YES, Yes, yes, yEs will all be recognized as positive '
            'answer) .',
  'title': 'Replacing Elements',
  'topics': ['implementation', 'sortings'],
  'url': 'https://codeforces.com/problemset/problem/1473/A'},
 {'history': "Let' s define a multiplication operation between a string a and "
             'a positive integer x: a⋅x is the string that is a result of '
             'writing x copies of a one after another. For example, " abc" ⋅ 2 '
             '= " abcabc" , " a" ⋅ 5 = " aaaaa" . A string a is divisible by '
             'another string b if there exists an integer x such that b⋅x= a. '
             'For example, " abababab" is divisible by " ab" , but is not '
             'divisible by " ababab" or " aa" . LCM of two strings s and t ( '
             'defined as LCM( s, t) ) is the shortest non- empty string that '
             'is divisible by both s and t. You are given two strings s and t. '
             'Find LCM( s, t) or report that it does not exist. It can be '
             'shown that if LCM( s, t) exists, it is unique.',
  'input': 'The first line contains one integer q ( 1≤q≤2000) — the number of '
           'test cases. Each test case consists of two lines, containing '
           'strings s and t ( 1≤| s| , | t| ≤20) . Each character in each of '
           "these strings is either ' a' or ' b' .",
  'note': 'In the first test case, " baba" = " baba" ⋅ 1 = " ba" ⋅ 2. In the '
          'second test case, " aaaaaa" = " aa" ⋅ 3 = " aaa" ⋅ 2.',
  'output': 'For each test case, print LCM( s, t) if it exists; otherwise, '
            'print - 1. It can be shown that if LCM( s, t) exists, it is '
            'unique.',
  'title': 'String LCM',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1473/B'},
 {'history': 'You are given a program that consists of n instructions. '
             'Initially a single variable x is assigned to 0. Afterwards, the '
             'instructions are of two types: increase x by 1; decrease x by 1. '
             'You are given m queries of the following format: query l r — how '
             'many distinct values is x assigned to if all the instructions '
             'between the l- th one and the r- th one inclusive are ignored '
             'and the rest are executed without changing the order?',
  'input': 'The first line contains a single integer t ( 1≤t≤1000) — the '
           'number of testcases. Then the description of t testcases follows. '
           'The first line of each testcase contains two integers n and m ( '
           '1≤n, m≤2⋅105) — the number of instructions in the program and the '
           'number of queries. The second line of each testcase contains a '
           "program — a string of n characters: each character is either ' + ' "
           "or ' - ' — increment and decrement instruction, respectively. Each "
           'of the next m lines contains two integers l and r ( 1≤l≤r≤n) — the '
           "description of the query. The sum of n over all testcases doesn' t "
           "exceed 2⋅105. The sum of m over all testcases doesn' t exceed "
           '2⋅105.',
  'note': 'The instructions that remain for each query of the first testcase '
          'are: empty program — x was only equal to 0; " - " — x had values 0 '
          'and −1; " —+ " — x had values 0, −1, −2, −3, −2 — there are 4 '
          'distinct values among them; " + –+ –+ " — the distinct values are '
          '1, 0, −1, −2.',
  'output': 'For each testcase print m integers — for each query l, r print '
            'the number of distinct values variable x is assigned to if all '
            'the instructions between the l- th one and the r- th one '
            'inclusive are ignored and the rest are executed without changing '
            'the order.',
  'title': 'Program',
  'topics': ['implementation', 'strings'],
  'url': 'https://codeforces.com/problemset/problem/1473/D'},
 {'history': 'You found a useless array a of 2n positive integers. You have '
             "realized that you actually don' t need this array, so you "
             'decided to throw out all elements of a. It could have been an '
             'easy task, but it turned out that you should follow some rules: '
             'In the beginning, you select any positive integer x. Then you do '
             'the following operation n times: select two elements of array '
             'with sum equals x; remove them from a and replace x with maximum '
             'of that two numbers. For example, if initially a= [ 3, 5, 1, 2] '
             ', you can select x= 6. Then you can select the second and the '
             'third elements of a with sum 5+ 1= 6 and throw them out. After '
             'this operation, x equals 5 and there are two elements in array: '
             '3 and 2. You can throw them out on the next operation. Note, '
             "that you choose x before the start and can' t change it as you "
             'want between the operations. Determine how should you behave to '
             'throw out all elements of a.',
  'input': 'The first line contains a single integer t ( 1≤t≤1000) — the '
           'number of test cases. The first line of each test case contains '
           'the single integer n ( 1≤n≤1000) . The second line of each test '
           'case contains 2n integers a1, a2, . . . , a2n ( 1≤ai≤106) — the '
           'initial array a. It is guaranteed that the total sum of n over all '
           "test cases doesn' t exceed 1000.",
  'note': 'The first test case was described in the statement. In the second '
          'and third test cases, we can show that it is impossible to throw '
          'out all elements of array a.',
  'output': 'For each test case in the first line print YES if it is possible '
            'to throw out all elements of the array and NO otherwise. If it is '
            'possible to throw out all elements, print the initial value of x '
            "you' ve chosen. Print description of n operations next. For each "
            'operation, print the pair of integers you remove.',
  'title': 'Array Destruction',
  'topics': ['implementation', 'sortings'],
  'url': 'https://codeforces.com/problemset/problem/1474/C'},
 {'history': 'Polycarp often uses his smartphone. He has already installed n '
             'applications on it. Application with number i takes up ai units '
             'of memory. Polycarp wants to free at least m units of memory ( '
             'by removing some applications) . Of course, some applications '
             'are more important to Polycarp than others. He came up with the '
             'following scoring system — he assigned an integer bi to each '
             'application: bi= 1 — regular application; bi= 2 — important '
             'application. According to this rating system, his phone has b1+ '
             'b2+ . . . + bn convenience points. Polycarp believes that if he '
             'removes applications with numbers i1, i2, . . . , ik, then he '
             'will free ai1+ ai2+ . . . + aik units of memory and lose bi1+ '
             'bi2+ . . . + bik convenience points. For example, if n= 5, m= 7, '
             'a= [ 5, 3, 2, 1, 4] , b= [ 2, 1, 1, 2, 1] , then Polycarp can '
             'uninstall the following application sets ( not all options are '
             'listed below) : applications with numbers 1, 4 and 5. In this '
             'case, it will free a1+ a4+ a5= 10 units of memory and lose b1+ '
             'b4+ b5= 5 convenience points; applications with numbers 1 and 3. '
             'In this case, it will free a1+ a3= 7 units of memory and lose '
             'b1+ b3= 3 convenience points. applications with numbers 2 and 5. '
             'In this case, it will free a2+ a5= 7 memory units and lose b2+ '
             'b5= 2 convenience points. Help Polycarp, choose a set of '
             'applications, such that if removing them will free at least m '
             'units of memory and lose the minimum number of convenience '
             'points, or indicate that such a set does not exist.',
  'input': 'The first line contains one integer t ( 1≤t≤104) — the number of '
           'test cases. Then t test cases follow. The first line of each test '
           'case contains two integers n and m ( 1≤n≤2⋅105, 1≤m≤109) — the '
           "number of applications on Polycarp' s phone and the number of "
           'memory units to be freed. The second line of each test case '
           'contains n integers a1, a2, . . . , an ( 1≤ai≤109) — the number of '
           'memory units used by applications. The third line of each test '
           'case contains n integers b1, b2, . . . , bn ( 1≤bi≤2) — the '
           'convenience points of each application. It is guaranteed that the '
           'sum of n over all test cases does not exceed 2⋅105.',
  'note': 'In the first test case, it is optimal to remove applications with '
          'numbers 2 and 5, freeing 7 units of memory. b2+ b5= 2. In the '
          'second test case, by removing the only application, Polycarp will '
          'be able to clear only 2 of memory units out of the 3 needed. In the '
          'third test case, it is optimal to remove applications with numbers '
          '1, 2, 3 and 4, freeing 10 units of memory. b1+ b2+ b3+ b4= 6. In '
          'the fourth test case, it is optimal to remove applications with '
          'numbers 1, 3 and 4, freeing 12 units of memory. b1+ b3+ b4= 4. In '
          'the fifth test case, it is optimal to remove applications with '
          'numbers 1 and 2, freeing 5 units of memory. b1+ b2= 3.',
  'output': 'For each test case, output on a separate line: - 1, if there is '
            'no set of applications, removing which will free at least m units '
            'of memory; the minimum number of convenience points that Polycarp '
            'will lose if such a set exists.',
  'title': 'Cleaning the Phone',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1475/D'},
 {'history': 'Masha works in an advertising agency. In order to promote the '
             'new brand, she wants to conclude contracts with some bloggers. '
             'In total, Masha has connections of n different bloggers. Blogger '
             'numbered i has ai followers. Since Masha has a limited budget, '
             'she can only sign a contract with k different bloggers. Of '
             'course, Masha wants her ad to be seen by as many people as '
             'possible. Therefore, she must hire bloggers with the maximum '
             'total number of followers. Help her, find the number of ways to '
             'select k bloggers so that the total number of their followers is '
             'maximum possible. Two ways are considered different if there is '
             'at least one blogger in the first way, which is not in the '
             'second way. Masha believes that all bloggers have different '
             'followers ( that is, there is no follower who would follow two '
             'different bloggers) . For example, if n= 4, k= 3, a= [ 1, 3, 1, '
             '2] , then Masha has two ways to select 3 bloggers with the '
             'maximum total number of followers: conclude contracts with '
             'bloggers with numbers 1, 2 and 4. In this case, the number of '
             'followers will be equal to a1+ a2+ a4= 6. conclude contracts '
             'with bloggers with numbers 2, 3 and 4. In this case, the number '
             'of followers will be equal to a2+ a3+ a4= 6. Since the answer '
             'can be quite large, output it modulo 109+ 7.',
  'input': 'The first line contains one integer t ( 1≤t≤1000) — the number of '
           'test cases. Then t test cases follow. The first line of each test '
           'case contains two integers n and k ( 1≤k≤n≤1000) — the number of '
           'bloggers and how many of them you can sign a contract with. The '
           'second line of each test case contains n integers a1, a2, . . . an '
           '( 1≤ai≤n) — the number of followers of each blogger. It is '
           'guaranteed that the sum of n over all test cases does not exceed '
           '1000.',
  'note': 'The test case is explained in the statements. In the second test '
          'case, the following ways are valid: conclude contracts with '
          'bloggers with numbers 1 and 2. In this case, the number of '
          'followers will be equal to a1+ a2= 2; conclude contracts with '
          'bloggers with numbers 1 and 3. In this case, the number of '
          'followers will be equal to a1+ a3= 2; conclude contracts with '
          'bloggers with numbers 1 and 4. In this case, the number of '
          'followers will be equal to a1+ a4= 2; conclude contracts with '
          'bloggers with numbers 2 and 3. In this case, the number of '
          'followers will be equal to a2+ a3= 2; conclude contracts with '
          'bloggers with numbers 2 and 4. In this case, the number of '
          'followers will be equal to a2+ a4= 2; conclude contracts with '
          'bloggers with numbers 3 and 4. In this case, the number of '
          'followers will be equal to a3+ a4= 2. In the third test case, the '
          'following ways are valid: concludes a contract with a blogger with '
          'the number 2. In this case, the number of followers will be equal '
          'to a2= 2.',
  'output': 'For each test case, on a separate line output one integer — the '
            'number of ways to select k bloggers so that the total number of '
            'their followers is maximum possible.',
  'title': 'Advertising Agency',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1475/E'},
 {'history': 'Polycarp found on the street an array a of n elements. Polycarp '
             'invented his criterion for the beauty of an array. He calls an '
             'array a beautiful if at least one of the following conditions '
             'must be met for each different pair of indices i= ̸j: ai is '
             'divisible by aj; or aj is divisible by ai. For example, if: n= 5 '
             'and a= [ 7, 9, 3, 14, 63] , then the a array is not beautiful ( '
             'for i= 4 and j= 2, none of the conditions above is met) ; n= 3 '
             'and a= [ 2, 14, 42] , then the a array is beautiful; n= 4 and a= '
             '[ 45, 9, 3, 18] , then the a array is not beautiful ( for i= 1 '
             'and j= 4 none of the conditions above is met) ; Ugly arrays '
             'upset Polycarp, so he wants to remove some elements from the '
             'array a so that it becomes beautiful. Help Polycarp determine '
             'the smallest number of elements to remove to make the array a '
             'beautiful.',
  'input': 'The first line contains one integer t ( 1≤t≤10) — the number of '
           'test cases. Then t test cases follow. The first line of each test '
           'case contains one integer n ( 1≤n≤2⋅105) — the length of the array '
           'a. The second line of each test case contains n numbers a1, a2, . '
           '. . , an ( 1≤ai≤2⋅105) — elements of the array a.',
  'note': 'In the first test case, removing 7 and 14 will make array a '
          'beautiful. In the second test case, the array a is already '
          'beautiful. In the third test case, removing one of the elements 45 '
          'or 18 will make the array a beautiful. In the fourth test case, the '
          'array a is beautiful.',
  'output': 'For each test case output one integer — the minimum number of '
            'elements that must be removed to make the array a beautiful.',
  'title': 'Strange Beauty',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1475/G'},
 {'history': 'You are given n patterns p1, p2, . . . , pn and m strings s1, '
             's2, . . . , sm. Each pattern pi consists of k characters that '
             'are either lowercase Latin letters or wildcard characters ( '
             'denoted by underscores) . All patterns are pairwise distinct. '
             'Each string sj consists of k lowercase Latin letters. A string a '
             'matches a pattern b if for each i from 1 to k either bi is a '
             'wildcard character or bi= ai. You are asked to rearrange the '
             'patterns in such a way that the first pattern the j- th string '
             'matches is p[ mtj] . You are allowed to leave the order of the '
             'patterns unchanged. Can you perform such a rearrangement? If you '
             'can, then print any valid order.',
  'input': 'The first line contains three integers n, m and k ( 1≤n, m≤105, '
           '1≤k≤4) — the number of patterns, the number of strings and the '
           'length of each pattern and string. Each of the next n lines '
           'contains a pattern — k characters that are either lowercase Latin '
           'letters or underscores. All patterns are pairwise distinct. Each '
           'of the next m lines contains a string — k lowercase Latin letters, '
           'and an integer mt ( 1≤mt≤n) — the index of the first pattern the '
           'corresponding string should match.',
  'note': 'The order of patterns after the rearrangement in the first example '
          'is the following: aaaa _ _ b_ ab_ _ _ bcd _ b_ d Thus, the first '
          'string matches patterns ab_ _ , _ bcd, _ b_ d in that order, the '
          'first of them is ab_ _ , that is indeed p[ 4] . The second string '
          'matches _ _ b_ and ab_ _ , the first of them is _ _ b_ , that is p[ '
          '2] . The last string matches _ bcd and _ b_ d, the first of them is '
          '_ bcd, that is p[ 5] . The answer to that test is not unique, other '
          "valid orders also exist. In the second example cba doesn' t match _ "
          '_ c, thus, no valid order exists. In the third example the order ( '
          'a_ , _ b) makes both strings match pattern 1 first and the order ( '
          '_ b, a_ ) makes both strings match pattern 2 first. Thus, there is '
          'no order that produces the result 1 and 2.',
  'output': 'Print " NO" if there is no way to rearrange the patterns in such '
            'a way that the first pattern that the j- th string matches is p[ '
            'mtj] . Otherwise, print " YES" in the first line. The second line '
            'should contain n distinct integers from 1 to n — the order of the '
            'patterns. If there are multiple answers, print any of them.',
  'title': 'Pattern Matching',
  'topics': ['sortings', 'strings'],
  'url': 'https://codeforces.com/problemset/problem/1476/E'},
 {'history': 'You are given an integer array a of size n. You have to perform '
             'm queries. Each query has one of two types: " 1 l r k" — '
             'calculate the minimum value dif such that there are exist k '
             'distinct integers x1, x2, . . . , xk such that cnti> 0 ( for '
             'every i∈[ 1, k] ) and | cnti−cntj| ≤dif ( for every i∈[ 1, k] , '
             'j∈[ 1, k] ) , where cnti is the number of occurrences of xi in '
             'the subarray a[ l. . r] . If it is impossible to choose k '
             'integers, report it; " 2 p x" — assign ap: = x.',
  'input': 'The first line contains two integers n and m ( 1≤n, m≤105) — the '
           'size of the array a and the number of queries. The second line '
           'contains n integers a1, a2, . . . , an ( 1≤ai≤105) . Next m lines '
           'contain queries ( one per line) . Each query has one of two types: '
           '" 1 l r k" ( 1≤l≤r≤n; 1≤k≤105) " 2 p x" ( 1≤p≤n; 1≤x≤105) . It\' s '
           'guaranteed that there is at least one query of the first type.',
  'note': ' ',
  'output': 'For each query of the first type, print the minimum value of dif '
            'that satisfies all required conditions, or −1 if it is impossible '
            'to choose k distinct integers.',
  'title': 'Minimum Difference',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1476/G'},
 {'history': 'Nezzar loves the game osu! . osu! is played on beatmaps, which '
             'can be seen as an array consisting of distinct points on a '
             'plane. A beatmap is called nice if for any three consecutive '
             'points A, B, CA, B, C listed in order, the angle between these '
             'three points, centered at BB, is strictly less than 9090 '
             'degrees. Points A, B, CA, B, C on the left have angle less than '
             '9090 degrees, so they can be three consecutive points of a nice '
             'beatmap; Points A′, B′, C′A′, B′, C′ on the right have angle '
             'greater or equal to 9090 degrees, so they cannot be three '
             'consecutive points of a nice beatmap. Now Nezzar has a beatmap '
             'of nn distinct points A1, A2, . . . , AnA1, A2, . . . , An. '
             'Nezzar would like to reorder these nn points so that the '
             'resulting beatmap is nice. Formally, you are required to find a '
             'permutation p1, p2, . . . , pnp1, p2, . . . , pn of integers '
             'from 11 to nn, such that beatmap Ap1, Ap2, . . . , ApnAp1, Ap2, '
             '. . . , Apn is nice. If it is impossible, you should determine '
             'it.',
  'input': 'The first line contains a single integer nn ( 3≤n≤50003≤n≤5000) . '
           'Then nn lines follow, ii- th of them contains two integers xixi, '
           'yiyi ( −109≤xi, yi≤109−109≤xi, yi≤109) — coordinates of point '
           'AiAi. It is guaranteed that all points are distinct.',
  'note': 'Here is the illustration for the first test: Please note that the '
          'angle between A1A1, A2A2 and A5A5, centered at A2A2, is treated as '
          '00 degrees. However, angle between A1A1, A5A5 and A2A2, centered at '
          'A5A5, is treated as 180180 degrees.',
  'output': 'If there is no solution, print −1−1. Otherwise, print nn '
            'integers, representing a valid permutation pp. If there are '
            'multiple possible answers, you can print any.',
  'title': 'Nezzar and Nice Beatmap',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1477/C'},
 {'history': 'Long time ago there was a symmetric array a1, a2, . . . , a2n '
             'consisting of 2n distinct integers. Array a1, a2, . . . , a2n is '
             'called symmetric if for each integer 1≤i≤2n, there exists an '
             'integer 1≤j≤2n such that ai= −aj. For each integer 1≤i≤2n, '
             'Nezzar wrote down an integer di equal to the sum of absolute '
             'differences from ai to all integers in a, i. e. di= ∑2nj= 1| '
             'ai−aj| . Now a million years has passed and Nezzar can barely '
             'remember the array d and totally forget a. Nezzar wonders if '
             'there exists any symmetric array a consisting of 2n distinct '
             'integers that generates the array d.',
  'input': 'The first line contains a single integer t ( 1≤t≤105) — the number '
           'of test cases. The first line of each test case contains a single '
           'integer n ( 1≤n≤105) . The second line of each test case contains '
           '2n integers d1, d2, . . . , d2n ( 0≤di≤1012) . It is guaranteed '
           'that the sum of n over all test cases does not exceed 105.',
  'note': 'In the first test case, a= [ 1, −3, −1, 3] is one possible '
          'symmetric array that generates the array d= [ 8, 12, 8, 12] . In '
          'the second test case, it can be shown that there is no symmetric '
          'array consisting of distinct integers that can generate array d.',
  'output': 'For each test case, print " YES" in a single line if there exists '
            'a possible array a. Otherwise, print " NO" . You can print '
            'letters in any case ( upper or lower) .',
  'title': 'Nezzar and Symmetric Array',
  'topics': ['implementation', 'sortings'],
  'url': 'https://codeforces.com/problemset/problem/1478/C'},
 {'history': 'Homer has two friends Alice and Bob. Both of them are string '
             'fans. One day, Alice and Bob decide to play a game on a string '
             's= s1s2. . . sn of length n consisting of lowercase English '
             'letters. They move in turns alternatively and Alice makes the '
             'first move. In a move, a player must choose an index i ( 1≤i≤n) '
             'that has not been chosen before, and change si to any other '
             'lowercase English letter c that c= ̸si. When all indices have '
             'been chosen, the game ends. The goal of Alice is to make the '
             'final string lexicographically as small as possible, while the '
             'goal of Bob is to make the final string lexicographically as '
             'large as possible. Both of them are game experts, so they always '
             'play games optimally. Homer is not a game expert, so he wonders '
             'what the final string will be. A string a is lexicographically '
             'smaller than a string b if and only if one of the following '
             'holds: a is a prefix of b, but a= ̸b; in the first position '
             'where a and b differ, the string a has a letter that appears '
             'earlier in the alphabet than the corresponding letter in b.',
  'input': 'Each test contains multiple test cases. The first line contains t '
           '( 1≤t≤1000) — the number of test cases. Description of the test '
           'cases follows. The only line of each test case contains a single '
           'string s ( 1≤| s| ≤50) consisting of lowercase English letters.',
  'note': 'In the first test case: Alice makes the first move and must change '
          "the only letter to a different one, so she changes it to ' b' . In "
          "the second test case: Alice changes the first letter to ' a' , then "
          "Bob changes the second letter to ' z' , Alice changes the third "
          "letter to ' a' and then Bob changes the fourth letter to ' z' . In "
          "the third test case: Alice changes the first letter to ' b' , and "
          "then Bob changes the second letter to ' y' .",
  'output': 'For each test case, print the final string in a single line.',
  'title': 'Yet Another String Game',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1480/A'},
 {'history': 'The great hero guards the country where Homer lives. The hero '
             'has attack power A and initial health value B. There are n '
             'monsters in front of the hero. The i- th monster has attack '
             'power ai and initial health value bi. The hero or a monster is '
             'said to be living, if his or its health value is positive ( '
             'greater than or equal to 1) ; and he or it is said to be dead, '
             'if his or its health value is non- positive ( less than or equal '
             'to 0) . In order to protect people in the country, the hero will '
             'fight with monsters until either the hero is dead or all the '
             'monsters are dead. In each fight, the hero can select an '
             'arbitrary living monster and fight with it. Suppose the i- th '
             'monster is selected, and the health values of the hero and the '
             'i- th monster are x and y before the fight, respectively. After '
             'the fight, the health values of the hero and the i- th monster '
             'become x−ai and y−A, respectively. Note that the hero can fight '
             'the same monster more than once. For the safety of the people in '
             'the country, please tell them whether the great hero can kill '
             'all the monsters ( even if the great hero himself is dead after '
             'killing the last monster) .',
  'input': 'Each test contains multiple test cases. The first line contains t '
           '( 1≤t≤105) — the number of test cases. Description of the test '
           'cases follows. The first line of each test case contains three '
           'integers A ( 1≤A≤106) , B ( 1≤B≤106) and n ( 1≤n≤105) — the attack '
           'power of the great hero, the initial health value of the great '
           'hero, and the number of monsters. The second line of each test '
           'case contains n integers a1, a2, . . . , an ( 1≤ai≤106) , where ai '
           'denotes the attack power of the i- th monster. The third line of '
           'each test case contains n integers b1, b2, . . . , bn ( 1≤bi≤106) '
           ', where bi denotes the initial health value of the i- th monster. '
           'It is guaranteed that the sum of n over all test cases does not '
           'exceed 105.',
  'note': 'In the first example: There will be 6 fights between the hero and '
          'the only monster. After that, the monster is dead and the health '
          'value of the hero becomes 17−6×2= 5> 0. So the answer is " YES" , '
          'and moreover, the hero is still living. In the second example: '
          'After all monsters are dead, the health value of the hero will '
          'become 709, regardless of the order of all fights. So the answer is '
          '" YES" . In the third example: A possible order is to fight with '
          'the 1- st, 2- nd, 3- rd and 4- th monsters. After all fights, the '
          'health value of the hero becomes −400. Unfortunately, the hero is '
          'dead, but all monsters are also dead. So the answer is " YES" . In '
          'the fourth example: The hero becomes dead but the monster is still '
          'living with health value 1000−999= 1. So the answer is " NO" .',
  'output': 'For each test case print the answer: " YES" ( without quotes) if '
            'the great hero can kill all the monsters. Otherwise, print " NO" '
            '( without quotes) .',
  'title': 'The Great Hero',
  'topics': ['implementation', 'sortings'],
  'url': 'https://codeforces.com/problemset/problem/1480/B'},
 {'history': 'You were dreaming that you are traveling to a planet named '
             'Planetforces on your personal spaceship. Unfortunately, its '
             'piloting system was corrupted and now you need to fix it in '
             'order to reach Planetforces. Space can be represented as the '
             'XYXY plane. You are starting at point ( 0, 0) ( 0, 0) , and '
             'Planetforces is located in point ( px, py) ( px, py) . The '
             'piloting system of your spaceship follows its list of orders '
             'which can be represented as a string ss. The system reads ss '
             'from left to right. Suppose you are at point ( x, y) ( x, y) and '
             'current order is sisi: if si= Usi= U, you move to ( x, y+ 1) ( '
             'x, y+ 1) ; if si= Dsi= D, you move to ( x, y−1) ( x, y−1) ; if '
             'si= Rsi= R, you move to ( x+ 1, y) ( x+ 1, y) ; if si= Lsi= L, '
             'you move to ( x−1, y) ( x−1, y) . Since string ss could be '
             "corrupted, there is a possibility that you won' t reach "
             'Planetforces in the end. Fortunately, you can delete some orders '
             "from ss but you can' t change their positions. Can you delete "
             'several orders ( possibly, zero) from ss in such a way, that '
             "you' ll reach Planetforces after the system processes all "
             'orders?',
  'input': 'The first line contains a single integer tt ( 1≤t≤10001≤t≤1000) — '
           'the number of test cases. Each test case consists of two lines. '
           'The first line in each test case contains two integers pxpx and '
           'pypy ( −105≤px, py≤105−105≤px, py≤105; ( px, py) = ̸( 0, 0) ( px, '
           'py) = ̸( 0, 0) ) — the coordinates of Planetforces ( px, py) ( px, '
           'py) . The second line contains the string ss ( 1≤| s| ≤1051≤| s| '
           '≤105: | s| | s| is the length of string ss) — the list of orders. '
           'It is guaranteed that the sum of | s| | s| over all test cases '
           'does not exceed 105105.',
  'note': "In the first case, you don' t need to modify ss, since the given ss "
          'will bring you to Planetforces. In the second case, you can delete '
          'orders s2s2, s3s3, s4s4, s6s6, s7s7 and s8s8, so ss becomes equal '
          'to " UR" . In the third test case, you have to delete order s9s9, '
          "otherwise, you won' t finish in the position of Planetforces.",
  'output': 'For each test case, print " YES" if you can delete several orders '
            "( possibly, zero) from ss in such a way, that you' ll reach "
            'Planetforces. Otherwise, print " NO" . You can print each letter '
            'in any case ( upper or lower) .',
  'title': 'Space Navigation ',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1481/A'},
 {'history': 'You are given an array of integers b1, b2, . . . , bn. An array '
             'a1, a2, . . . , an of integers is hybrid if for each i ( 1≤i≤n) '
             'at least one of these conditions is true: bi= ai, or bi= ∑ij= '
             '1aj. Find the number of hybrid arrays a1, a2, . . . , an. As the '
             'result can be very large, you should print the answer modulo '
             '109+ 7.',
  'input': 'The first line contains a single integer t ( 1≤t≤104) — the number '
           'of test cases. The first line of each test case contains a single '
           'integer n ( 1≤n≤2⋅105) . The second line of each test case '
           'contains n integers b1, b2, . . . , bn ( −109≤bi≤109) . It is '
           'guaranteed that the sum of n for all test cases does not exceed '
           '2⋅105.',
  'note': 'In the first test case, the hybrid arrays are [ 1, −2, 1] , [ 1, '
          '−2, 2] , [ 1, −1, 1] . In the second test case, the hybrid arrays '
          'are [ 1, 1, 1, 1] , [ 1, 1, 1, 4] , [ 1, 1, 3, −1] , [ 1, 1, 3, 4] '
          ', [ 1, 2, 0, 1] , [ 1, 2, 0, 4] , [ 1, 2, 3, −2] , [ 1, 2, 3, 4] . '
          'In the fourth test case, the only hybrid array is [ 0, 0, 0, 1] .',
  'output': 'For each test case, print a single integer: the number of hybrid '
            'arrays a1, a2, . . . , an modulo 109+ 7.',
  'title': 'Copy or Prefix Sum',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1485/F'},
 {'history': 'You and your friends live in nn houses. Each house is located on '
             'a 2D plane, in a point with integer coordinates. There might be '
             'different houses located in the same point. The mayor of the '
             'city is asking you for places for the building of the Eastern '
             'exhibition. You have to find the number of places ( points with '
             'integer coordinates) , so that the summary distance from all the '
             'houses to the exhibition is minimal. The exhibition can be built '
             'in the same point as some house. The distance between two points '
             '( x1, y1) ( x1, y1) and ( x2, y2) ( x2, y2) is | x1−x2| + | '
             'y1−y2| | x1−x2| + | y1−y2| , where | x| | x| is the absolute '
             'value of xx.',
  'input': 'First line contains a single integer tt ( 1≤t≤1000) ( 1≤t≤1000) — '
           'the number of test cases. The first line of each test case '
           'contains a single integer nn ( 1≤n≤1000) ( 1≤n≤1000) . Next nn '
           'lines describe the positions of the houses ( xi, yi) ( xi, yi) ( '
           "0≤xi, yi≤109) ( 0≤xi, yi≤109) . It' s guaranteed that the sum of "
           'all nn does not exceed 10001000.',
  'note': 'Here are the images for the example test cases. Blue dots stand for '
          'the houses, green — possible positions for the exhibition. First '
          'test case. Second test case. Third test case. Fourth test case. '
          'Fifth test case. Sixth test case. Here both houses are located at ( '
          '0, 0) ( 0, 0) .',
  'output': 'For each test case output a single integer - the number of '
            'different positions for the exhibition. The exhibition can be '
            'built in the same point as some house.',
  'title': 'Eastern Exhibition',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1486/B'},
 {'history': 'n heroes fight against each other in the Arena. Initially, the '
             'i- th hero has level ai. Each minute, a fight between two '
             'different heroes occurs. These heroes can be chosen arbitrarily '
             "( it' s even possible that it is the same two heroes that were "
             'fighting during the last minute) . When two heroes of equal '
             'levels fight, nobody wins the fight. When two heroes of '
             'different levels fight, the one with the higher level wins, and '
             'his level increases by 1. The winner of the tournament is the '
             "first hero that wins in at least 100500 fights ( note that it' s "
             'possible that the tournament lasts forever if no hero wins this '
             'number of fights, then there is no winner) . A possible winner '
             'is a hero such that there exists a sequence of fights that this '
             'hero becomes the winner of the tournament. Calculate the number '
             'of possible winners among n heroes.',
  'input': 'The first line contains one integer t ( 1≤t≤500) — the number of '
           'test cases. Each test case consists of two lines. The first line '
           'contains one integer n ( 2≤n≤100) — the number of heroes. The '
           'second line contains n integers a1, a2, . . . , an ( 1≤ai≤100) , '
           'where ai is the initial level of the i- th hero.',
  'note': 'In the first test case of the example, the only possible winner is '
          'the first hero. In the second test case of the example, each fight '
          'between the heroes results in nobody winning it, so the tournament '
          'lasts forever and there is no winner.',
  'output': 'For each test case, print one integer — the number of possible '
            'winners among the given n heroes.',
  'title': 'Arena',
  'topics': ['implementation', 'sortings'],
  'url': 'https://codeforces.com/problemset/problem/1487/A'},
 {'history': 'Ivan wants to have a good dinner. A good dinner should consist '
             'of a first course, a second course, a drink, and a dessert. '
             'There are n1 different types of first courses Ivan can buy ( the '
             'i- th of them costs ai coins) , n2 different types of second '
             'courses ( the i- th of them costs bi coins) , n3 different types '
             'of drinks ( the i- th of them costs ci coins) and n4 different '
             'types of desserts ( the i- th of them costs di coins) . Some '
             "dishes don' t go well with each other. There are m1 pairs of "
             "first courses and second courses that don' t go well with each "
             'other, m2 pairs of second courses and drinks, and m3 pairs of '
             "drinks and desserts that don' t go well with each other. Ivan "
             'wants to buy exactly one first course, one second course, one '
             'drink, and one dessert so that they go well with each other, and '
             'the total cost of the dinner is the minimum possible. Help him '
             'to find the cheapest dinner option!',
  'input': 'The first line contains four integers n1, n2, n3 and n4 ( '
           '1≤ni≤150000) — the number of types of first courses, second '
           'courses, drinks and desserts, respectively. Then four lines '
           'follow. The first line contains n1 integers a1, a2, . . . , an1 ( '
           '1≤ai≤108) , where ai is the cost of the i- th type of first '
           'course. Three next lines denote the costs of second courses, '
           'drinks, and desserts in the same way ( 1≤bi, ci, di≤108) . The '
           'next line contains one integer m1 ( 0≤m1≤200000) — the number of '
           "pairs of first and second courses that don' t go well with each "
           'other. Each of the next m1 lines contains two integers xi and yi ( '
           "1≤xi≤n1; 1≤yi≤n2) denoting that the first course number xi doesn' "
           't go well with the second course number yi. All these pairs are '
           'different. The block of pairs of second dishes and drinks that '
           "don' t go well with each other is given in the same format. The "
           "same for pairs of drinks and desserts that don' t go well with "
           'each other ( 0≤m2, m3≤200000) .',
  'note': 'The best option in the first example is to take the first course 2, '
          'the second course 1, the drink 2 and the dessert 1. In the second '
          'example, the only pair of the first course and the second course is '
          "bad, so it' s impossible to have dinner.",
  'output': "If it' s impossible to choose a first course, a second course, a "
            'drink, and a dessert so that they go well with each other, print '
            '−1. Otherwise, print one integer — the minimum total cost of the '
            'dinner.',
  'title': 'Cheap Dinner',
  'topics': ['implementation', 'sortings'],
  'url': 'https://codeforces.com/problemset/problem/1487/E'},
 {'history': 'Polycarp was gifted an array a of length n. Polycarp considers '
             'an array beautiful if there exists a number C, such that each '
             'number in the array occurs either zero or C times. Polycarp '
             'wants to remove some elements from the array a to make it '
             'beautiful. For example, if n= 6 and a= [ 1, 3, 2, 1, 4, 2] , '
             'then the following options are possible to make the array a '
             'array beautiful: Polycarp removes elements at positions 2 and 5, '
             'array a becomes equal to [ 1, 2, 1, 2] ; Polycarp removes '
             'elements at positions 1 and 6, array a becomes equal to [ 3, 2, '
             '1, 4] ; Polycarp removes elements at positions 1, 2 and 6, array '
             'a becomes equal to [ 2, 1, 4] ; Help Polycarp determine the '
             'minimum number of elements to remove from the array a to make it '
             'beautiful.',
  'input': 'The first line contains one integer t ( 1≤t≤104) — the number of '
           'test cases. Then t test cases follow. The first line of each test '
           'case consists of one integer n ( 1≤n≤2⋅105) — the length of the '
           'array a. The second line of each test case contains n integers a1, '
           'a2, . . . , an ( 1≤ai≤109) — array a. It is guaranteed that the '
           'sum of n over all test cases does not exceed 2⋅105.',
  'note': ' ',
  'output': 'For each test case, output one integer — the minimum number of '
            'elements that Polycarp has to remove from the array a to make it '
            'beautiful.',
  'title': 'Equalize the Array',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1490/F'},
 {'history': 'You are given a string s consisting of lowercase English letters '
             "and a number k. Let' s call a string consisting of lowercase "
             'English letters beautiful if the number of occurrences of each '
             'letter in that string is divisible by k. You are asked to find '
             'the lexicographically smallest beautiful string of length n, '
             'which is lexicographically greater or equal to string s. If such '
             'a string does not exist, output −1. A string a is '
             'lexicographically smaller than a string b if and only if one of '
             'the following holds: a is a prefix of b, but a= ̸b; in the first '
             'position where a and b differ, the string a has a letter that '
             'appears earlier in the alphabet than the corresponding letter in '
             'b.',
  'input': 'The first line contains a single integer T ( 1≤T≤10000) — the '
           'number of test cases. The next 2⋅T lines contain the description '
           'of test cases. The description of each test case consists of two '
           'lines. The first line of the description contains two integers n '
           'and k ( 1≤k≤n≤105) — the length of string s and number k '
           'respectively. The second line contains string s consisting of '
           'lowercase English letters. It is guaranteed that the sum of n over '
           'all test cases does not exceed 105.',
  'note': 'In the first test case " acac" is greater than or equal to s, and '
          'each letter appears 2 or 0 times in it, so it is beautiful. In the '
          'second test case each letter appears 0 or 1 times in s, so s itself '
          'is the answer. We can show that there is no suitable string in the '
          'third test case. In the fourth test case each letter appears 0, 3, '
          'or 6 times in " abaabaaab" . All these integers are divisible by 3.',
  'output': 'For each test case output in a separate line lexicographically '
            'smallest beautiful string of length n, which is greater or equal '
            'to string s, or −1 if such a string does not exist.',
  'title': 'K-beautiful Strings',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1493/C'},
 {'history': 'You are given an array a of length n. You are asked to process q '
             'queries of the following format: given integers i and x, '
             'multiply ai by x. After processing each query you need to output '
             'the greatest common divisor ( GCD) of all elements of the array '
             'a. Since the answer can be too large, you are asked to output it '
             'modulo 109+ 7.',
  'input': 'The first line contains two integers — n and q ( 1≤n, q≤2⋅105) . '
           'The second line contains n integers a1, a2, . . . , an ( '
           '1≤ai≤2⋅105) — the elements of the array a before the changes. The '
           'next q lines contain queries in the following format: each line '
           'contains two integers i and x ( 1≤i≤n, 1≤x≤2⋅105) .',
  'note': 'After the first query the array is [ 12, 6, 8, 12] , gcd( 12, 6, 8, '
          '12) = 2. After the second query — [ 12, 18, 8, 12] , gcd( 12, 18, '
          '8, 12) = 2. After the third query — [ 12, 18, 24, 12] , gcd( 12, '
          '18, 24, 12) = 6. Here the gcd function denotes the greatest common '
          'divisor.',
  'output': 'Print q lines: after processing each query output the GCD of all '
            'elements modulo 109+ 7 on a separate line.',
  'title': 'GCD of an Array',
  'topics': ['implementation', 'sortings'],
  'url': 'https://codeforces.com/problemset/problem/1493/D'},
 {'history': 'You are given two integers l and r in binary representation. Let '
             'g( x, y) be equal to the bitwise XOR of all integers from x to y '
             "inclusive ( that is x⊕( x+ 1) ⊕⋯⊕( y−1) ⊕y) . Let' s define f( "
             'l, r) as the maximum of all values of g( x, y) satisfying '
             'l≤x≤y≤r. Output f( l, r) .',
  'input': 'The first line contains a single integer n ( 1≤n≤106) — the length '
           'of the binary representation of r. The second line contains the '
           'binary representation of l — a string of length n consisting of '
           'digits 0 and 1 ( 0≤l< 2n) . The third line contains the binary '
           'representation of r — a string of length n consisting of digits 0 '
           'and 1 ( 0≤r< 2n) . It is guaranteed that l≤r. The binary '
           'representation of r does not contain any extra leading zeros ( if '
           'r= 0, the binary representation of it consists of a single zero) . '
           'The binary representation of l is preceded with leading zeros so '
           'that its length is equal to n.',
  'note': 'In sample test case l= 19, r= 122. f( x, y) is maximal and is equal '
          'to 127, with x= 27, y= 100, for example.',
  'output': 'In a single line output the value of f( l, r) for the given pair '
            'of l and r in binary representation without extra leading zeros.',
  'title': 'Enormous XOR',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1493/E'},
 {'history': 'The Dogeforces company has kk employees. Each employee, except '
             'for lower- level employees, has at least 22 subordinates. Lower- '
             'level employees have no subordinates. Each employee, except for '
             'the head of the company, has exactly one direct supervisor. The '
             'head of the company is a direct or indirect supervisor of all '
             'employees. It is known that in Dogeforces, each supervisor '
             'receives a salary strictly more than all his subordinates. The '
             'full structure of the company is a secret, but you know the '
             'number of lower- level employees and for each pair of lower- '
             'level employees, the salary of their common supervisor is known '
             '( if there are several such supervisors, then the supervisor '
             'with the minimum salary) . You have to restore the structure of '
             'the company.',
  'input': 'The first line contains a single integer nn ( 2≤n≤5002≤n≤500) — '
           'the number of lower- level employees. This is followed by nn '
           'lines, where ii- th line contains nn integers ai, 1, ai, 2, . . . '
           ', ai, nai, 1, ai, 2, . . . , ai, n ( 1≤ai, j≤50001≤ai, j≤5000) — '
           'salary of the common supervisor of employees with numbers ii and '
           'jj. It is guaranteed that ai, j= aj, iai, j= aj, i. Note that ai, '
           'iai, i is equal to the salary of the ii- th employee.',
  'note': 'One of the possible structures in the first example:',
  'output': 'In the first line, print a single integer kk — the number of '
            'employees in the company. In the second line, print kk integers '
            'c1, c2, . . . , ckc1, c2, . . . , ck, where cici is the salary of '
            'the employee with the number ii. In the third line, print a '
            'single integer rr — the number of the employee who is the head of '
            'the company. In the following k−1k−1 lines, print two integers vv '
            'and uu ( 1≤v, u≤k1≤v, u≤k) — the number of the employee and his '
            'direct supervisor. Note that the lower- level employees have '
            'numbers from 11 to nn, and for the rest of the employees, you '
            'have to assign numbers from n+ 1n+ 1 to kk. If there are several '
            'correct company structures, you can print any of them.',
  'title': 'Dogeforces',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1494/D'},
 {'history': 'Diamond Miner is a game that is similar to Gold Miner, but there '
             'are n miners instead of 1 in this game. The mining area can be '
             'described as a plane. The n miners can be regarded as n points '
             'on the y- axis. There are n diamond mines in the mining area. We '
             'can regard them as n points on the x- axis. For some reason, no '
             'miners or diamond mines can be at the origin ( point ( 0, 0) ) . '
             'Every miner should mine exactly one diamond mine. Every miner '
             'has a hook, which can be used to mine a diamond mine. If a miner '
             'at the point ( a, b) uses his hook to mine a diamond mine at the '
             'point ( c, d) , he will spend √( a−c) 2+ ( b−d) 2 energy to mine '
             "it ( the distance between these points) . The miners can' t move "
             'or help each other. The object of this game is to minimize the '
             'sum of the energy that miners spend. Can you find this minimum?',
  'input': 'The input consists of multiple test cases. The first line contains '
           'a single integer t ( 1≤t≤10) — the number of test cases. The '
           'description of the test cases follows. The first line of each test '
           'case contains a single integer n ( 1≤n≤105) — the number of miners '
           'and mines. Each of the next 2n lines contains two space- separated '
           'integers x ( −108≤x≤108) and y ( −108≤y≤108) , which represent the '
           "point ( x, y) to describe a miner' s or a diamond mine' s "
           'position. Either x= 0, meaning there is a miner at the point ( 0, '
           'y) , or y= 0, meaning there is a diamond mine at the point ( x, 0) '
           '. There can be multiple miners or diamond mines at the same point. '
           'It is guaranteed that no point is at the origin. It is guaranteed '
           'that the number of points on the x- axis is equal to n and the '
           "number of points on the y- axis is equal to n. It' s guaranteed "
           'that the sum of n for all test cases does not exceed 105.',
  'note': 'In the first test case, the miners are at ( 0, 1) and ( 0, −1) , '
          'while the diamond mines are at ( 1, 0) and ( −2, 0) . If you '
          'arrange the miners to get the diamond mines in the way, shown in '
          'the picture, you can get the sum of the energy √2+ √5.',
  'output': 'For each test case, print a single real number — the minimal sum '
            'of energy that should be spent. Your answer is considered correct '
            'if its absolute or relative error does not exceed 10−9. Formally, '
            "let your answer be a, and the jury' s answer be b. Your answer is "
            'accepted if and only if | a−b| max( 1, | b| ) ≤10−9.',
  'title': 'Diamond Miner',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1495/A'},
 {'history': 'Kawashiro Nitori is a girl who loves competitive programming. '
             'One day she found a string and an integer. As an advanced '
             'problem setter, she quickly thought of a problem. Given a string '
             's and a parameter k, you need to check if there exist k+ 1 non- '
             'empty strings a1, a2. . . , ak+ 1, such that s= a1+ a2+ . . . + '
             'ak+ ak+ 1+ R( ak) + R( ak−1) + . . . + R( a1) . Here + '
             'represents concatenation. We define R( x) as a reversed string '
             'x. For example R( abcd) = dcba. Note that in the formula above '
             'the part R( ak+ 1) is intentionally skipped.',
  'input': 'The input consists of multiple test cases. The first line contains '
           'a single integer t ( 1≤t≤100) — the number of test cases. The '
           'description of the test cases follows. The first line of each test '
           'case description contains two integers n, k ( 1≤n≤100, 0≤k≤⌊n2⌋) — '
           'the length of the string s and the parameter k. The second line of '
           'each test case description contains a single string s of length n, '
           'consisting of lowercase English letters.',
  'note': 'In the first test case, one possible solution is a1= qw and a2= q. '
          'In the third test case, one possible solution is a1= i and a2= o. '
          'In the fifth test case, one possible solution is a1= '
          'dokidokiliteratureclub.',
  'output': 'For each test case, print " YES" ( without quotes) , if it is '
            'possible to find a1, a2, . . . , ak+ 1, and " NO" ( without '
            'quotes) otherwise. You can print letters in any case ( upper or '
            'lower) .',
  'title': 'Split it!',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1496/A'},
 {'history': 'You are given an integer n and an array a1, a2, . . . , an. You '
             'should reorder the elements of the array a in such way that the '
             'sum of MEX on prefixes ( i- th prefix is a1, a2, . . . , ai) is '
             'maximized. Formally, you should find an array b1, b2, . . . , '
             'bn, such that the sets of elements of arrays a and b are equal ( '
             'it is equivalent to array b can be found as an array a with some '
             'reordering of its elements) and n∑i= 1MEX( b1, b2, . . . , bi) '
             'is maximized. MEX of a set of nonnegative integers is the '
             'minimal nonnegative integer such that it is not in the set. For '
             'example, MEX( 1, 2, 3) = 0, MEX( 0, 1, 2, 4, 5) = 3.',
  'input': 'The first line contains a single integer t ( 1≤t≤100) — the number '
           'of test cases. The first line of each test case contains a single '
           'integer n ( 1≤n≤100) . The second line of each test case contains '
           'n integers a1, a2, . . . , an ( 0≤ai≤100) .',
  'note': 'In the first test case in the answer MEX for prefixes will be: MEX( '
          '0) = 1 MEX( 0, 1) = 2 MEX( 0, 1, 2) = 3 MEX( 0, 1, 2, 3) = 4 MEX( '
          '0, 1, 2, 3, 4) = 5 MEX( 0, 1, 2, 3, 4, 7) = 5 MEX( 0, 1, 2, 3, 4, '
          '7, 3) = 5 The sum of MEX= 1+ 2+ 3+ 4+ 5+ 5+ 5= 25. It can be '
          'proven, that it is a maximum possible sum of MEX on prefixes.',
  'output': 'For each test case print an array b1, b2, . . . , bn — the '
            'optimal reordering of a1, a2, . . . , an, so the sum of MEX on '
            'its prefixes is maximized. If there exist multiple optimal '
            'answers you can find any.',
  'title': 'Meximization',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1497/A'},
 {'history': 'This is an interactive problem. Remember to flush your output '
             'while communicating with the testing program. You may use '
             'fflush( stdout) in C+ + , system. out. flush( ) in Java, stdout. '
             'flush( ) in Python or flush( output) in Pascal to flush the '
             'output. If you use some other programming language, consult its '
             'documentation. You may also refer to the guide on interactive '
             'problems: https: / / codeforces. com/ blog/ entry/ 45307. There '
             'is a city in which Dixit lives. In the city, there are n houses. '
             'There is exactly one directed road between every pair of houses. '
             'For example, consider two houses A and B, then there is a '
             'directed road either from A to B or from B to A but not both. '
             'The number of roads leading to the i- th house is ki. Two houses '
             'A and B are bi- reachable if A is reachable from B and B is '
             'reachable from A. We say that house B is reachable from house A '
             'when there is a path from house A to house B. Dixit wants to buy '
             'two houses in the city, that is, one for living and one for '
             'studying. Of course, he would like to travel from one house to '
             'another. So, he wants to find a pair of bi- reachable houses A '
             'and B. Among all such pairs, he wants to choose one with the '
             'maximum value of | kA−kB| , where ki is the number of roads '
             'leading to the house i. If more than one optimal pair exists, '
             'any of them is suitable. Since Dixit is busy preparing '
             'CodeCraft, can you help him find the desired pair of houses, or '
             'tell him that no such houses exist? In the problem input, you '
             'are not given the direction of each road. You are given — for '
             'each house — only the number of incoming roads to that house ( '
             'ki) . You are allowed to ask only one type of query from the '
             'judge: give two houses A and B, and the judge answers whether B '
             'is reachable from A. There is no upper limit on the number of '
             'queries. But, you cannot ask more queries after the judge '
             'answers " Yes" to any of your queries. Also, you cannot ask the '
             'same query twice. Once you have exhausted all your queries ( or '
             'the judge responds " Yes" to any of your queries) , your program '
             'must output its guess for the two houses and quit. See the '
             'Interaction section below for more details. InteractionTo ask a '
             'query, print " ? A B" ( 1≤A, B≤N, A= ̸B) . The judge will '
             'respond " Yes" if house B is reachable from house A, or " No" '
             'otherwise. To output the final answer, print " ! A B" , where A '
             'and B are bi- reachable with the maximum possible value of | '
             'kA−kB| . If there does not exist such pair of houses A and B, '
             'output " ! 0 0" . After outputting the final answer, your '
             'program must terminate immediately, otherwise you will receive '
             'Wrong Answer verdict. You cannot ask the same query twice. There '
             'is no upper limit to the number of queries you ask, but, you '
             'cannot ask more queries after the judge answers " Yes" to any of '
             'your queries. Your program must now output the final answer ( " '
             '! A B" or " ! 0 0" ) and terminate. If you ask a query in '
             'incorrect format or repeat a previous query, you will get Wrong '
             'Answer verdict. After printing a query do not forget to output '
             'the end of the line and flush the output. Otherwise, you will '
             'get the Idleness limit exceeded error. To do this, use: fflush( '
             'stdout) or cout. flush( ) in C+ + ; System. out. flush( ) in '
             'Java; flush( output) in Pascal; stdout. flush( ) in Python; see '
             'documentation for other languages.',
  'input': 'The first line contains a single integer n ( 3≤n≤500) denoting the '
           'number of houses in the city. The next line contains n space- '
           'separated integers k1, k2, . . . , kn ( 0≤ki≤n−1) , the i- th of '
           'them represents the number of incoming roads to the i- th house.',
  'note': 'In the first sample input, we are given a city of three houses with '
          'one incoming road each. The user program asks one query: " ? 1 2" : '
          'asking whether we can reach from house 1 to house 2. The judge '
          'responds with " Yes" . The user program now concludes that this is '
          'sufficient information to determine the correct answer. So, it '
          'outputs " ! 1 2" and quits. In the second sample input, the user '
          'program queries for six different pairs of houses, and finally '
          'answers " ! 0 0" as it is convinced that no two houses as desired '
          'in the question exist in this city.',
  'output': ' ',
  'title': 'Two Houses',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1498/E'},
 {'history': 'You are given two strings x and y, both consist only of '
             'lowercase Latin letters. Let | s| be the length of string s. '
             "Let' s call a sequence a a merging sequence if it consists of "
             'exactly | x| zeros and exactly | y| ones in some order. A merge '
             'z is produced from a sequence a by the following rules: if ai= '
             '0, then remove a letter from the beginning of x and append it to '
             'the end of z; if ai= 1, then remove a letter from the beginning '
             'of y and append it to the end of z. Two merging sequences a and '
             'b are different if there is some position i such that ai= ̸bi. '
             "Let' s call a string z chaotic if for all i from 2 to | z| zi−1= "
             '̸zi. Let s[ l, r] for some 1≤l≤r≤| s| be a substring of '
             'consecutive letters of s, starting from position l and ending at '
             'position r inclusive. Let f( l1, r1, l2, r2) be the number of '
             'different merging sequences of x[ l1, r1] and y[ l2, r2] that '
             'produce chaotic merges. Note that only non- empty substrings of '
             'x and y are considered. Calculate ∑1≤l1≤r1≤| x| 1≤l2≤r2≤| y| f( '
             'l1, r1, l2, r2) . Output the answer modulo 998244353.',
  'input': 'The first line contains a string x ( 1≤| x| ≤1000) . The second '
           'line contains a string y ( 1≤| y| ≤1000) . Both strings consist '
           'only of lowercase Latin letters.',
  'note': 'In the first example there are: 6 pairs of substrings " a" and " b" '
          ', each with valid merging sequences " 01" and " 10" ; 3 pairs of '
          'substrings " a" and " bb" , each with a valid merging sequence " '
          '101" ; 4 pairs of substrings " aa" and " b" , each with a valid '
          'merging sequence " 010" ; 2 pairs of substrings " aa" and " bb" , '
          'each with valid merging sequences " 0101" and " 1010" ; 2 pairs of '
          'substrings " aaa" and " b" , each with no valid merging sequences; '
          '1 pair of substrings " aaa" and " bb" with a valid merging sequence '
          '" 01010" ; Thus, the answer is 6⋅2+ 3⋅1+ 4⋅1+ 2⋅2+ 2⋅0+ 1⋅1= 24.',
  'output': 'Print a single integer — the sum of f( l1, r1, l2, r2) over '
            '1≤l1≤r1≤| x| and 1≤l2≤r2≤| y| modulo 998244353.',
  'title': 'Chaotic Merge',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1499/E'},
 {'history': 'Kostya is extremely busy: he is renovating his house! He needs '
             'to hand wallpaper, assemble furniture throw away trash. Kostya '
             'is buying tiles for bathroom today. He is standing in front of a '
             'large square stand with tiles in a shop. The stand is a square '
             'of n×n cells, each cell of which contains a small tile with '
             'color ci, j. The shop sells tiles in packs: more specifically, '
             'you can only buy a subsquare of the initial square. A subsquare '
             'is any square part of the stand, i. e. any set S( i0, j0, k) = '
             'ci, j | i0≤i< i0+ k, j0≤j< j0+ k with 1≤i0, j0≤n−k+ 1. Kostya '
             'still does not know how many tiles he needs, so he considers the '
             "subsquares of all possible sizes. He doesn' t want his bathroom "
             'to be too colorful. Help Kostya to count for each k≤n the number '
             'of subsquares of size k×k that have at most q different colors '
             'of tiles. Two subsquares are considered different if their '
             'location on the stand is different.',
  'input': 'The first line contains two integers n and q ( 1≤n≤1500, 1≤q≤10) — '
           'the size of the stand and the limit on the number of distinct '
           'colors in a subsquare. Each of the next n lines contains n '
           'integers ci, j ( 1≤ci, j≤n2) : the j- th integer in the i- th line '
           'is the color of the tile in the cell ( i, j) .',
  'note': "In the first example all colors are distinct. Kostya doesn' t want "
          'the subsquare have more than 4 colors, so he can buy any subsquare '
          "of size 1×1 or 2×2, but he can' t buy a subsquare of size 3×3. In "
          'the second example there are colors that appear multiple times. '
          'Because q= 8, Kostya can buy any subsquare of size 1×1 and 2×2, and '
          'any subsquare 3×3, because of such subsquare has 7 different '
          "colors. He can' t buy the whole stand 4×4, because there are 9 "
          'colors.',
  'output': 'For each k from 1 to n print a single integer — the number of '
            'subsquares of size k×k with no more than q different colors.',
  'title': 'Tiles for Bathroom',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1500/D'},
 {'history': 'This week Arkady wanted to cook some pancakes ( to follow '
             'ancient traditions) and make a problem about that. But then he '
             "remembered that one can' t make a problem about stacking "
             'pancakes without working at a specific IT company, so he decided '
             'to bake the Napoleon cake instead. To bake a Napoleon cake, one '
             'has to bake n dry layers first, and then put them on each other '
             'in one stack, adding some cream. Arkady started with an empty '
             'plate, and performed the following steps n times: place a new '
             'cake layer on the top of the stack; after the i- th layer is '
             'placed, pour ai units of cream on top of the stack. When x units '
             'of cream are poured on the top of the stack, top x layers of the '
             'cake get drenched in the cream. If there are less than x layers, '
             'all layers get drenched and the rest of the cream is wasted. If '
             'x= 0, no layer gets drenched. The picture represents the first '
             'test case of the example. Help Arkady determine which layers of '
             'the cake eventually get drenched when the process is over, and '
             "which don' t.",
  'input': 'Each test contains multiple test cases. The first line contains '
           'the number of test cases t ( 1≤t≤20000) . Description of the test '
           'cases follows. The first line of each test case contains a single '
           'integer n ( 1≤n≤2⋅105) — the number of layers in the cake. The '
           'second line of each test case contains n integers a1, a2, . . . , '
           'an ( 0≤ai≤n) — the amount of cream poured on the cake after adding '
           'each layer. It is guaranteed that the sum of n over all test cases '
           'does not exceed 2⋅105.',
  'note': ' ',
  'output': 'For each test case, print a single line with n integers. The i- '
            'th of the integers should be equal to 1 if the i- th layer from '
            'the bottom gets drenched, and 0 otherwise.',
  'title': 'Napoleon Cake',
  'topics': ['implementation', 'sortings'],
  'url': 'https://codeforces.com/problemset/problem/1501/B'},
 {'history': 'There are n cities numbered from 1 to n, and city i has beauty '
             'ai. A salesman wants to start at city 1, visit every city '
             'exactly once, and return to city 1. For all i= ̸j, a flight from '
             'city i to city j costs max( ci, aj−ai) dollars, where ci is the '
             'price floor enforced by city i. Note that there is no absolute '
             'value. Find the minimum total cost for the salesman to complete '
             'his trip.',
  'input': 'The first line contains a single integer n ( 2≤n≤105) — the number '
           'of cities. The i- th of the next n lines contains two integers ai, '
           'ci ( 0≤ai, ci≤109) — the beauty and price floor of the i- th city.',
  'note': 'In the first test case, we can travel in order 1→3→2→1. The flight '
          '1→3 costs max( c1, a3−a1) = max( 9, 4−1) = 9. The flight 3→2 costs '
          'max( c3, a2−a3) = max( 1, 2−4) = 1. The flight 2→1 costs max( c2, '
          'a1−a2) = max( 1, 1−2) = 1. The total cost is 11, and we cannot do '
          'better.',
  'output': 'Output a single integer — the minimum total cost.',
  'title': 'Travelling Salesman Problem',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1503/C'},
 {'history': 'There is a deck of n cards. The i- th card has a number ai on '
             'the front and a number bi on the back. Every integer between 1 '
             'and 2n appears exactly once on the cards. A deck is called '
             'sorted if the front values are in increasing order and the back '
             'values are in decreasing order. That is, if ai< ai+ 1 and bi> '
             'bi+ 1 for all 1≤i< n. To flip a card i means swapping the values '
             'of ai and bi. You must flip some subset of cards ( possibly, '
             'none) , then put all the cards in any order you like. What is '
             'the minimum number of cards you must flip in order to sort the '
             'deck?',
  'input': 'The first line contains a single integer n ( 1≤n≤2⋅105) — the '
           'number of cards. The next n lines describe the cards. The i- th of '
           'these lines contains two integers ai, bi ( 1≤ai, bi≤2n) . Every '
           'integer between 1 and 2n appears exactly once.',
  'note': 'In the first test case, we flip the cards ( 1, 9) and ( 2, 7) . The '
          'deck is then ordered ( 3, 10) , ( 5, 8) , ( 6, 4) , ( 7, 2) , ( 9, '
          '1) . It is sorted because 3< 5< 6< 7< 9 and 10> 8> 4> 2> 1. In the '
          'second test case, it is impossible to sort the deck.',
  'output': 'If it is impossible to sort the deck, output " - 1" . Otherwise, '
            'output the minimum number of flips required to sort the deck.',
  'title': 'Flip the Cards',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1503/D'},
 {'history': 'A palindrome is a string that reads the same backward as '
             'forward. For example, the strings " z" , " aaa" , " aba" , and " '
             'abccba" are palindromes, but " codeforces" and " ab" are not. '
             'You hate palindromes because they give you déjà vu. There is a '
             "string s. You must insert exactly one character ' a' somewhere "
             'in s. If it is possible to create a string that is not a '
             'palindrome, you should find one example. Otherwise, you should '
             'report that it is impossible. For example, suppose s= " cbabc" . '
             'By inserting an \' a\' , you can create " acbabc" , " cababc" , '
             '" cbaabc" , " cbabac" , or " cbabca" . However " cbaabc" is a '
             'palindrome, so you must output one of the other options.',
  'input': 'The first line contains a single integer t ( 1≤t≤104) — the number '
           'of test cases. The only line of each test case contains a string s '
           'consisting of lowercase English letters. The total length of all '
           'strings does not exceed 3⋅105.',
  'note': 'The first test case is described in the statement. In the second '
          'test case, we can make either " aab" or " aba" . But " aba" is a '
          'palindrome, so " aab" is the only correct answer. In the third test '
          'case, " zaza" and " zzaa" are correct answers, but not " azza" . In '
          'the fourth test case, " baa" is the only correct answer. In the '
          'fifth test case, we can only make " aa" , which is a palindrome. So '
          'the answer is " NO" . In the sixth test case, " anutforajaroftuna" '
          "is a palindrome, but inserting ' a' elsewhere is valid.",
  'output': 'For each test case, if there is no solution, output " NO" . '
            'Otherwise, output " YES" followed by your constructed string of '
            'length | s| + 1 on the next line. If there are multiple '
            'solutions, you may print any. You can print each letter of " YES" '
            'and " NO" in any case ( upper or lower) .',
  'title': ' Déjà Vu',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1504/A'},
 {'history': 'You are given the strings a and b, consisting of lowercase Latin '
             'letters. You can do any number of the following operations in '
             'any order: if | a| > 0 ( the length of the string a is greater '
             'than zero) , delete the first character of the string a, that '
             'is, replace a with a2a3. . . an; if | a| > 0, delete the last '
             'character of the string a, that is, replace a with a1a2. . . '
             'an−1; if | b| > 0 ( the length of the string b is greater than '
             'zero) , delete the first character of the string b, that is, '
             'replace b with b2b3. . . bn; if | b| > 0, delete the last '
             'character of the string b, that is, replace b with b1b2. . . '
             'bn−1. Note that after each of the operations, the string a or b '
             'may become empty. For example, if a= " hello" and b= " icpc" , '
             'then you can apply the following sequence of operations: delete '
             'the first character of the string a ⇒ a= " ello" and b= " icpc" '
             '; delete the first character of the string b ⇒ a= " ello" and b= '
             '" cpc" ; delete the first character of the string b ⇒ a= " ello" '
             'and b= " pc" ; delete the last character of the string a ⇒ a= " '
             'ell" and b= " pc" ; delete the last character of the string b ⇒ '
             'a= " ell" and b= " p" . For the given strings a and b, find the '
             'minimum number of operations for which you can make the strings '
             'a and b equal. Note that empty strings are also equal.',
  'input': 'The first line contains a single integer t ( 1≤t≤100) . Then t '
           'test cases follow. The first line of each test case contains the '
           'string a ( 1≤| a| ≤20) , consisting of lowercase Latin letters. '
           'The second line of each test case contains the string b ( 1≤| b| '
           '≤20) , consisting of lowercase Latin letters.',
  'note': ' ',
  'output': 'For each test case, output the minimum number of operations that '
            'can make the strings a and b equal.',
  'title': 'Double-ended Strings',
  'topics': ['implementation', 'strings'],
  'url': 'https://codeforces.com/problemset/problem/1506/C'},
 {'history': "Consider an infinite triangle made up of layers. Let' s number "
             'the layers, starting from one, from the top of the triangle ( '
             'from top to bottom) . The kk- th layer of the triangle contains '
             'k points, numbered from left to right. Each point of an infinite '
             'triangle is described by a pair of numbers ( r, c) ( 1≤c≤r) , '
             'where r is the number of the layer, and c is the number of the '
             'point in the layer. From each point ( r, c) there are two '
             'directed edges to the points ( r+ 1, c) and ( r+ 1, c+ 1) , but '
             'only one of the edges is activated. If r+ c is even, then the '
             'edge to the point ( r+ 1, c) is activated, otherwise the edge to '
             'the point ( r+ 1, c+ 1) is activated. Look at the picture for a '
             'better understanding. Activated edges are colored in black. Non- '
             'activated edges are colored in gray. From the point ( r1, c1) it '
             'is possible to reach the point ( r2, c2) , if there is a path '
             'between them only from activated edges. For example, in the '
             'picture above, there is a path from ( 1, 1) to ( 3, 2) , but '
             'there is no path from ( 2, 1) to ( 1, 1) . Initially, you are at '
             'the point ( 1, 1) . For each turn, you can: Replace activated '
             'edge for point ( r, c) . That is if the edge to the point ( r+ '
             '1, c) is activated, then instead of it, the edge to the point ( '
             'r+ 1, c+ 1) becomes activated, otherwise if the edge to the '
             'point ( r+ 1, c+ 1) , then instead if it, the edge to the point '
             '( r+ 1, c) becomes activated. This action increases the cost of '
             'the path by 1; Move from the current point to another by '
             'following the activated edge. This action does not increase the '
             'cost of the path. You are given a sequence of n points of an '
             'infinite triangle ( r1, c1) , ( r2, c2) , . . . , ( rn, cn) . '
             'Find the minimum cost path from ( 1, 1) , passing through all n '
             'points in arbitrary order.',
  'input': 'The first line contains one integer t ( 1≤t≤104) is the number of '
           'test cases. Then t test cases follow. Each test case begins with a '
           'line containing one integer n ( 1≤n≤2⋅105) is the number of points '
           'to visit. The second line contains n numbers r1, r2, . . . , rn ( '
           '1≤ri≤109) , where ri is the number of the layer in which i- th '
           'point is located. The third line contains n numbers c1, c2, . . . '
           ', cn ( 1≤ci≤ri) , where ci is the number of the i- th point in the '
           'ri layer. It is guaranteed that all n points are distinct. It is '
           'guaranteed that there is always at least one way to traverse all n '
           'points. It is guaranteed that the sum of n over all test cases '
           'does not exceed 2⋅105.',
  'note': ' ',
  'output': 'For each test case, output the minimum cost of a path passing '
            'through all points in the corresponding test case.',
  'title': 'Triangular Paths',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1506/F'},
 {'history': 'You are given a string s, consisting of lowercase Latin letters. '
             'While there is at least one character in the string s that is '
             'repeated at least twice, you perform the following operation: '
             'you choose the index i ( 1≤i≤| s| ) such that the character at '
             'position i occurs at least two times in the string s, and delete '
             'the character at position i, that is, replace s with s1s2. . . '
             'si−1si+ 1si+ 2. . . sn. For example, if s= " codeforces" , then '
             'you can apply the following sequence of operations: i= 6⇒s= " '
             'codefrces" ; i= 1⇒s= " odefrces" ; i= 7⇒s= " odefrcs" ; Given a '
             'given string s, find the lexicographically maximum string that '
             'can be obtained after applying a certain sequence of operations '
             'after which all characters in the string become unique. A string '
             'a of length n is lexicographically less than a string b of '
             'length m, if: there is an index i ( 1≤i≤min( n, m) ) such that '
             'the first i−1 characters of the strings a and b are the same, '
             'and the i- th character of the string a is less than i- th '
             'character of string b; or the first min( n, m) characters in the '
             'strings a and b are the same and n< m. For example, the string '
             'a= " aezakmi" is lexicographically less than the string b= " '
             'aezus" .',
  'input': 'The first line contains one integer t ( 1≤t≤104) . Then t test '
           'cases follow. Each test case is characterized by a string s, '
           'consisting of lowercase Latin letters ( 1≤| s| ≤2⋅105) . It is '
           'guaranteed that the sum of the lengths of the strings in all test '
           'cases does not exceed 2⋅105.',
  'note': ' ',
  'output': 'For each test case, output the lexicographically maximum string '
            'that can be obtained after applying a certain sequence of '
            'operations after which all characters in the string become '
            'unique.',
  'title': 'Maximize the Remaining String',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1506/G'},
 {'history': 'A bitstring is a string that contains only the characters 0 and '
             '1. Koyomi Kanou is working hard towards her dream of becoming a '
             'writer. To practice, she decided to participate in the Binary '
             'Novel Writing Contest. The writing prompt for the contest '
             'consists of three bitstrings of length 2n. A valid novel for the '
             'contest is a bitstring of length at most 3n that contains at '
             'least two of the three given strings as subsequences. Koyomi has '
             'just received the three prompt strings from the contest '
             'organizers. Help her write a valid novel for the contest. A '
             'string a is a subsequence of a string b if a can be obtained '
             'from b by deletion of several ( possibly, zero) characters.',
  'input': 'The first line contains a single integer t ( 1≤t≤104) — the number '
           'of test cases. The first line of each test case contains a single '
           'integer n ( 1≤n≤105) . Each of the following three lines contains '
           'a bitstring of length 2n. It is guaranteed that these three '
           'strings are pairwise distinct. It is guaranteed that the sum of n '
           'across all test cases does not exceed 105.',
  'note': 'In the first test case, the bitstrings 00 and 01 are subsequences '
          'of the output string: 010 and 010. Note that 11 is not a '
          'subsequence of the output string, but this is not required. In the '
          'second test case all three input strings are subsequences of the '
          'output string: 011001010, 011001010 and 011001010.',
  'output': 'For each test case, print a single line containing a bitstring of '
            'length at most 3n that has at least two of the given bitstrings '
            'as subsequences. It can be proven that under the constraints of '
            'the problem, such a bitstring always exists. If there are '
            'multiple possible answers, you may output any of them.',
  'title': 'Binary Literature',
  'topics': ['implementation', 'strings'],
  'url': 'https://codeforces.com/problemset/problem/1508/A'},
 {'history': 'Based on a peculiar incident at basketball practice, Akari came '
             'up with the following competitive programming problem! You are '
             'given nn points on the plane, no three of which are collinear. '
             'The ii- th point initially has a label aiai, in such a way that '
             'the labels a1, a2, . . . , ana1, a2, . . . , an form a '
             'permutation of 1, 2, . . . , n1, 2, . . . , n. You are allowed '
             'to modify the labels through the following operation: Choose two '
             'distinct integers ii and jj between 11 and nn. Swap the labels '
             'of points ii and jj, and finally Draw the segment between points '
             'ii and jj. A sequence of operations is valid if after applying '
             'all of the operations in the sequence in order, the kk- th point '
             'ends up having the label kk for all kk between 11 and nn '
             "inclusive, and the drawn segments don' t intersect each other "
             'internally. Formally, if two of the segments intersect, then '
             'they must do so at a common endpoint of both segments. In '
             'particular, all drawn segments must be distinct. Find any valid '
             'sequence of operations, or say that none exist.',
  'input': 'The first line contains an integer nn ( 3≤n≤20003≤n≤2000) — the '
           'number of points. The ii- th of the following nn lines contains '
           'three integers xixi, yiyi, aiai ( −106≤xi, yi≤106−106≤xi, yi≤106, '
           '1≤ai≤n1≤ai≤n) , representing that the ii- th point has coordinates '
           '( xi, yi) ( xi, yi) and initially has label aiai. It is guaranteed '
           'that all points are distinct, no three points are collinear, and '
           'the labels a1, a2, . . . , ana1, a2, . . . , an form a permutation '
           'of 1, 2, . . . , n1, 2, . . . , n.',
  'note': 'The following animation showcases the first sample test case. The '
          'black numbers represent the indices of the points, while the boxed '
          'orange numbers represent their labels. In the second test case, all '
          'labels are already in their correct positions, so no operations are '
          'necessary.',
  'output': 'If it is impossible to perform a valid sequence of operations, '
            'print −1−1. Otherwise, print an integer kk ( 0≤k≤n( n−1) 20≤k≤n( '
            'n−1) 2) — the number of operations to perform, followed by kk '
            'lines, each containing two integers ii and jj ( 1≤i, j≤n1≤i, j≤n, '
            'i= ̸ji= ̸j) — the indices of the points chosen for the operation. '
            'Note that you are not required to minimize or maximize the value '
            'of kk. If there are multiple possible answers, you may print any '
            'of them.',
  'title': 'Swap Pass',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1508/D'},
 {'history': 'Yuu Koito and Touko Nanami are newlyweds! On the wedding day, '
             'Yuu gifted Touko a directed tree with nn nodes and rooted at 11, '
             'and a labeling aa which is some DFS order of the tree. Every '
             'edge in this tree is directed away from the root. After calling '
             'dfs( 1) the following algorithm returns aa as a DFS order of a '
             'tree rooted at 11 : order : = 0a : = array of length n function '
             'dfs( u) : order : = order + 1 a[ u] : = order for all v such '
             'that there is a directed edge ( u - > v) : dfs( v) Note that '
             'there may be different DFS orders for a given tree. Touko likes '
             'the present so much she decided to play with it! On each day '
             'following the wedding day, Touko performs this procedure once: '
             'Among all directed edges u→vu→v such that au< avau< av, select '
             'the edge u′→v′u′→v′ with the lexicographically smallest pair ( '
             'au′, av′) ( au′, av′) . Swap au′au′ and av′av′. Days have passed '
             'since their wedding, and Touko has somehow forgotten which date '
             'the wedding was and what was the original labeling aa! Fearing '
             'that Yuu might get angry, Touko decided to ask you to derive '
             'these two pieces of information using the current labeling. '
             'Being her good friend, you need to find the number of days that '
             'have passed since the wedding, and the original labeling of the '
             'tree. However, there is a chance that Touko might have messed up '
             'her procedures, which result in the current labeling being '
             'impossible to obtain from some original labeling; in that case, '
             'please inform Touko as well.',
  'input': 'The first line of the input contains an integer nn ( '
           '2≤n≤3⋅1052≤n≤3⋅105) — the number of nodes on the tree. The second '
           'line contains nn integers a1a1, a2a2, . . . , anan ( 1≤ai≤n1≤ai≤n, '
           'all aiai are distinct) — the current labeling of the tree. Each of '
           'the next n−1n−1 lines contains two integers uiui and vivi ( 1≤u, '
           'v≤n1≤u, v≤n, u= ̸vu= ̸v) , describing an directed edge from uiui '
           'to vivi. The edges form a directed tree rooted at 11.',
  'note': 'The following animation showcases the first sample test case. The '
          'white label inside the node represents the index of the node ii, '
          'while the boxed orange label represents the value aiai.',
  'output': 'If the current labeling is impossible to arrive at from any DFS '
            'order, print NO. Else, on the first line, print YES. On the '
            'second line, print a single integer denoting the number of days '
            'since the wedding. On the third line, print nn numbers space- '
            'separated denoting the original labeling of the tree. If there '
            'are multiple correct outputs, print any. This means: you are '
            'allowed to output any pair ( DFS order, number of days) , such '
            'that we get the current configuration from the DFS order you '
            'provided in exactly the number of days you provided.',
  'title': 'Tree Calendar',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1508/E'},
 {'history': "Let' s define the cost of a string s as the number of index "
             'pairs i and j ( 1≤i< j< | s| ) such that si= sj and si+ 1= sj+ '
             '1. You are given two positive integers n and k. Among all '
             'strings with length n that contain only the first k characters '
             'of the Latin alphabet, find a string with minimum possible cost. '
             'If there are multiple such strings with minimum cost — find any '
             'of them.',
  'input': 'The only line contains two integers n and k ( 1≤n≤2⋅105; 1≤k≤26) .',
  'note': ' ',
  'output': 'Print the string s such that it consists of n characters, each '
            'its character is one of the k first Latin letters, and it has the '
            'minimum possible cost among all these strings. If there are '
            'multiple such strings — print any of them.',
  'title': 'Min Cost String',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1511/D'},
 {'history': 'A chainword is a special type of crossword. As most of the '
             'crosswords do, it has cells that you put the letters in and some '
             'sort of hints to what these letters should be. The letter cells '
             'in a chainword are put in a single row. We will consider '
             'chainwords of length mm in this task. A hint to a chainword is a '
             "sequence of segments such that the segments don' t intersect "
             'with each other and cover all mm letter cells. Each segment '
             'contains a description of the word in the corresponding cells. '
             'The twist is that there are actually two hints: one sequence is '
             'the row above the letter cells and the other sequence is the row '
             'below the letter cells. When the sequences are different, they '
             'provide a way to resolve the ambiguity in the answers. You are '
             'provided with a dictionary of nn words, each word consists of '
             'lowercase Latin letters. All words are pairwise distinct. An '
             'instance of a chainword is the following triple: a string of mm '
             'lowercase Latin letters; the first hint: a sequence of segments '
             'such that the letters that correspond to each segment spell a '
             'word from the dictionary; the second hint: another sequence of '
             'segments such that the letters that correspond to each segment '
             'spell a word from the dictionary. Note that the sequences of '
             "segments don' t necessarily have to be distinct. Two instances "
             'of chainwords are considered different if they have different '
             'strings, different first hints or different second hints. Count '
             'the number of different instances of chainwords. Since the '
             'number might be pretty large, output it modulo '
             '998244353998244353.',
  'input': 'The first line contains two integers nn and mm ( 1≤n≤81≤n≤8, '
           '1≤m≤1091≤m≤109) — the number of words in the dictionary and the '
           'number of letter cells. Each of the next nn lines contains a word '
           '— a non- empty string of no more than 55 lowercase Latin letters. '
           'All words are pairwise distinct.',
  'note': 'Here are all the instances of the valid chainwords for the first '
          'example: The red lines above the letters denote the segments of the '
          'first hint, the blue lines below the letters denote the segments of '
          'the second hint. In the second example the possible strings are: " '
          'abab" , " abcd" , " cdab" and " cdcd" . All the hints are segments '
          'that cover the first two letters and the last two letters.',
  'output': 'Print a single integer — the number of different instances of '
            'chainwords of length mm for the given dictionary modulo '
            '998244353998244353.',
  'title': 'Chainword',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1511/F'},
 {'history': "You are given a string s consisting of the characters ' 0' , ' "
             "1' , and ' ? ' . You need to replace all the characters with ' ? "
             "' in the string s by ' 0' or ' 1' so that the string becomes a "
             "palindrome and has exactly a characters ' 0' and exactly b "
             "characters ' 1' . Note that each of the characters ' ? ' is "
             'replaced independently from the others. A string t of length n '
             'is called a palindrome if the equality t[ i] = t[ n−i+ 1] is '
             'true for all i ( 1≤i≤n) . For example, if s= " 01? ? ? ? ? 0" , '
             "a= 4 and b= 4, then you can replace the characters ' ? ' in the "
             'following ways: " 01011010" ; " 01100110" . For the given string '
             "s and the numbers a and b, replace all the characters with ' ? ' "
             "in the string s by ' 0' or ' 1' so that the string becomes a "
             "palindrome and has exactly a characters ' 0' and exactly b "
             "characters ' 1' .",
  'input': 'The first line contains a single integer t ( 1≤t≤104) . Then t '
           'test cases follow. The first line of each test case contains two '
           'integers a and b ( 0≤a, b≤2⋅105, a+ b≥1) . The second line of each '
           'test case contains the string s of length a+ b, consisting of the '
           "characters ' 0' , ' 1' , and ' ? ' . It is guaranteed that the sum "
           'of the string lengths of s over all test cases does not exceed '
           '2⋅105.',
  'note': ' ',
  'output': 'For each test case, output: " - 1" , if you can\' t replace all '
            "the characters ' ? ' in the string s by ' 0' or ' 1' so that the "
            'string becomes a palindrome and that it contains exactly a '
            "characters ' 0' and exactly b characters ' 1' ; the string that "
            'is obtained as a result of the replacement, otherwise. If there '
            'are several suitable ways to replace characters, you can output '
            'any.',
  'title': 'A-B Palindrome',
  'topics': ['implementation', 'strings'],
  'url': 'https://codeforces.com/problemset/problem/1512/C'},
 {'history': 'You are given an array aa of nn ( n≥2n≥2) positive integers and '
             'an integer pp. Consider an undirected weighted graph of nn '
             'vertices numbered from 11 to nn for which the edges between the '
             'vertices ii and jj ( i< ji< j) are added in the following '
             'manner: If gcd( ai, ai+ 1, ai+ 2, . . . , aj) = min( ai, ai+ 1, '
             'ai+ 2, . . . , aj) gcd( ai, ai+ 1, ai+ 2, . . . , aj) = min( ai, '
             'ai+ 1, ai+ 2, . . . , aj) , then there is an edge of weight min( '
             'ai, ai+ 1, ai+ 2, . . . , aj) min( ai, ai+ 1, ai+ 2, . . . , aj) '
             'between ii and jj. If i+ 1= ji+ 1= j, then there is an edge of '
             'weight pp between ii and jj. Here gcd( x, y, . . . ) gcd( x, y, '
             '. . . ) denotes the greatest common divisor ( GCD) of integers '
             'xx, yy, . . . . Note that there could be multiple edges between '
             'ii and jj if both of the above conditions are true, and if both '
             'the conditions fail for ii and jj, then there is no edge between '
             'these vertices. The goal is to find the weight of the minimum '
             'spanning tree of this graph.',
  'input': 'The first line contains a single integer tt ( 1≤t≤1041≤t≤104) — '
           'the number of test cases. The first line of each test case '
           'contains two integers nn ( 2≤n≤2⋅1052≤n≤2⋅105) and pp ( '
           '1≤p≤1091≤p≤109) — the number of nodes and the parameter pp. The '
           'second line contains nn integers a1, a2, a3, . . . , ana1, a2, a3, '
           '. . . , an ( 1≤ai≤1091≤ai≤109) . It is guaranteed that the sum of '
           'nn over all test cases does not exceed 2⋅1052⋅105.',
  'note': 'Here are the graphs for the four test cases of the example ( the '
          'edges of a possible MST of the graphs are marked pink) : For test '
          'case 1 For test case 2 For test case 3 For test case 4',
  'output': 'Output tt lines. For each test case print the weight of the '
            'corresponding graph.',
  'title': 'GCD and MST',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1513/D'},
 {'history': 'An array is called beautiful if all the elements in the array '
             'are equal. You can transform an array using the following steps '
             'any number of times: Choose two indices i and j ( 1≤i, j≤n) , '
             'and an integer x ( 1≤x≤ai) . Let i be the source index and j be '
             'the sink index. Decrease the i- th element by x, and increase '
             'the j- th element by x. The resulting values at i- th and j- th '
             'index are ai−x and aj+ x respectively. The cost of this '
             'operation is x⋅| j−i| . Now the i- th index can no longer be the '
             'sink and the j- th index can no longer be the source. The total '
             'cost of a transformation is the sum of all the costs in step 3. '
             'For example, array [ 0, 2, 3, 3] can be transformed into a '
             'beautiful array [ 2, 2, 2, 2] with total cost 1⋅| 1−3| + 1⋅| '
             '1−4| = 5. An array is called balanced, if it can be transformed '
             'into a beautiful array, and the cost of such transformation is '
             'uniquely defined. In other words, the minimum cost of '
             'transformation into a beautiful array equals the maximum cost. '
             'You are given an array a1, a2, . . . , an of length n, '
             'consisting of non- negative integers. Your task is to find the '
             'number of balanced arrays which are permutations of the given '
             'array. Two arrays are considered different, if elements at some '
             'position differ. Since the answer can be large, output it modulo '
             '109+ 7.',
  'input': 'The first line contains a single integer n ( 1≤n≤105) — the size '
           'of the array. The second line contains n integers a1, a2, . . . , '
           'an ( 0≤ai≤109) .',
  'note': 'In the first example, [ 1, 2, 3] is a valid permutation as we can '
          'consider the index with value 3 as the source and index with value '
          '1 as the sink. Thus, after conversion we get a beautiful array [ 2, '
          '2, 2] , and the total cost would be 2. We can show that this is the '
          'only transformation of this array that leads to a beautiful array. '
          'Similarly, we can check for other permutations too. In the second '
          'example, [ 0, 0, 4, 4] and [ 4, 4, 0, 0] are balanced permutations. '
          'In the third example, all permutations are balanced.',
  'output': 'Output a single integer — the number of balanced permutations '
            'modulo 109+ 7.',
  'title': 'Cost Equilibrium',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1513/E'},
 {'history': 'You are given 2 arrays a and b, both of size n. You can swap two '
             'elements in b at most once ( or leave it as it is) , and you are '
             'required to minimize the value ∑i| ai−bi| . Find the minimum '
             'possible value of this sum.',
  'input': 'The first line contains a single integer n ( 1≤n≤2⋅105) . The '
           'second line contains n integers a1, a2, . . . , an ( 1≤ai≤109) . '
           'The third line contains n integers b1, b2, . . . , bn ( 1≤bi≤109) '
           '.',
  'note': 'In the first example, we can swap the first and fifth element in '
          'array b, so that it becomes [ 5, 2, 3, 4, 1] . Therefore, the '
          'minimum possible value of this sum would be | 5−5| + | 4−2| + | '
          '3−3| + | 2−4| + | 1−1| = 4. In the second example, we can swap the '
          'first and second elements. So, our answer would be 2.',
  'output': 'Output the minimum value of ∑i| ai−bi| .',
  'title': 'Swapping Problem',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1513/F'},
 {'history': 'Baby Ehab has a piece of Cut and Stick with an array a of length '
             'n written on it. He plans to grab a pair of scissors and do the '
             'following to it: pick a range ( l, r) and cut out every element '
             'al, al+ 1, . . . , ar in this range; stick some of the elements '
             'together in the same order they were in the array; end up with '
             'multiple pieces, where every piece contains some of the elements '
             'and every element belongs to some piece. More formally, he '
             'partitions the sequence al, al+ 1, . . . , ar into subsequences. '
             'He thinks a partitioning is beautiful if for every piece ( '
             'subsequence) it holds that, if it has length x, then no value '
             "occurs strictly more than ⌈x2⌉ times in it. He didn' t pick a "
             "range yet, so he' s wondering: for q ranges ( l, r) , what is "
             'the minimum number of pieces he needs to partition the elements '
             'al, al+ 1, . . . , ar into so that the partitioning is '
             'beautiful. A sequence b is a subsequence of an array a if b can '
             'be obtained from a by deleting some ( possibly zero) elements. '
             'Note that it does not have to be contiguous.',
  'input': 'The first line contains two integers n and q ( 1≤n, q≤3⋅105) — the '
           'length of the array a and the number of queries. The second line '
           'contains n integers a1, a2, . . . , an ( 1≤ai≤n) — the elements of '
           'the array a. Each of the next q lines contains two integers l and '
           'r ( 1≤l≤r≤n) — the range of this query.',
  'note': 'In the first query, you can just put the whole array in one '
          'subsequence, since its length is 6, and no value occurs more than 3 '
          'times in it. In the second query, the elements of the query range '
          "are [ 3, 2, 3, 3] . You can' t put them all in one subsequence, "
          'since its length is 4, and 3 occurs more than 2 times. However, you '
          'can partition it into two subsequences: [ 3] and [ 2, 3, 3] .',
  'output': 'For each query, print the minimum number of subsequences you need '
            'to partition this range into so that the partitioning is '
            'beautiful. We can prove such partitioning always exists.',
  'title': 'Cut and Stick',
  'topics': ['implementation', 'sortings'],
  'url': 'https://codeforces.com/problemset/problem/1514/D'},
 {'history': 'This is an interactive problem. Baby Ehab loves crawling around '
             'his apartment. It has n rooms numbered from 0 to n−1. For every '
             "pair of rooms, a and b, there' s either a direct passage from "
             'room a to room b, or from room b to room a, but never both. Baby '
             'Ehab wants to go play with Baby Badawy. He wants to know if he '
             "could get to him. However, he doesn' t know anything about his "
             'apartment except the number of rooms. He can ask the baby sitter '
             'two types of questions: is the passage between room a and room b '
             'directed from a to b or the other way around? does room x have a '
             'passage towards any of the rooms s1, s2, . . . , sk? He can ask '
             'at most 9n queries of the first type and at most 2n queries of '
             'the second type. After asking some questions, he wants to know '
             "for every pair of rooms a and b whether there' s a path from a "
             'to b or not. A path from a to b is a sequence of passages that '
             'starts from room a and ends at room b. InteractionTo ask a '
             'question of the first type, use the format: 1 a b ( 0≤a, b≤n−1, '
             'a= ̸b) . we will answer with 1 if the passage is from a to b, '
             'and 0 if it is from b to a. you can ask at most 9n questions of '
             'this type in each test case. To ask a question of the second '
             'type, use the format: 2 x k s1 s2 . . . sk ( 0≤x, si≤n−1, 0≤k< '
             'n, x= ̸si, elements of s are pairwise distinct) . we will answer '
             "with 1 if there' s a passage from x to any of the rooms in s, "
             'and 0 otherwise. you can ask at most 2n questions of this type '
             'in each test case. If we answer with −1 instead of a valid '
             'answer, that means you exceeded the number of queries or made an '
             'invalid query. Exit immediately after receiving −1 and you will '
             'see Wrong answer verdict. Otherwise, you can get an arbitrary '
             'verdict because your solution will continue to read from a '
             'closed stream. After printing a query, do not forget to output '
             'end of line and flush the output. Otherwise, you will get '
             'Idleness limit exceeded. To do this, use: fflush( stdout) or '
             'cout. flush( ) in C+ + ; System. out. flush( ) in Java; flush( '
             'output) in Pascal; stdout. flush( ) in Python; see the '
             'documentation for other languages. Hacks: The first line should '
             'contain an integer t — the number of test cases. The first line '
             'of each test case should contain an integer n ( 4≤n≤100) — the '
             'number of rooms. Each of the next n lines should contain a '
             'binary string of length n. The j- th character of the i- th '
             "string should be 1 if there' s a passage from room i to room j, "
             '0 otherwise. The i- th character of the i- th string should be '
             '0.',
  'input': 'The first line contains an integer t ( 1≤t≤30) — the number of '
           'test cases you need to solve. Then each test case starts with an '
           'integer n ( 4≤n≤100) — the number of rooms. The sum of n across '
           "the test cases doesn' t exceed 500.",
  'note': "In the given example: The first query asks whether there' s a "
          'passage from room 3 to any of the other rooms. The second query '
          'asks about the direction of the passage between rooms 0 and 1. '
          'After a couple other queries, we concluded that you can go from any '
          "room to any other room except if you start at room 3, and you can' "
          't get out of this room, so we printed the matrix: '
          '1111111111110001The interactor answered with 1, telling us the '
          'answer is correct.',
  'output': 'To print the answer for a test case, print a line containing " 3" '
            ', followed by n lines, each containing a binary string of length '
            "n. The j- th character of the i- th string should be 1 if there' "
            "s a path from room i to room j, and 0 if there isn' t. The i- th "
            'character of the i- th string should be 1 for each valid i. After '
            'printing the answer, we will respond with a single integer. If '
            "it' s 1, you printed a correct answer and should keep solving the "
            "test cases ( or exit if it is the last one) . If it' s −1, you "
            'printed a wrong answer and should terminate to get Wrong answer '
            'verdict. Otherwise, you can get an arbitrary verdict because your '
            'solution will continue to read from a closed stream.',
  'title': "Baby Ehab's Hyper Apartment",
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1514/E'},
 {'history': 'To satisfy his love of matching socks, Phoenix has brought his n '
             'socks ( n is even) to the sock store. Each of his socks has a '
             'color ci and is either a left sock or right sock. Phoenix can '
             'pay one dollar to the sock store to either: recolor a sock to '
             'any color c′ ( 1≤c′≤n) turn a left sock into a right sock turn a '
             'right sock into a left sock The sock store may perform each of '
             'these changes any number of times. Note that the color of a left '
             "sock doesn' t change when it turns into a right sock, and vice "
             'versa. A matching pair of socks is a left and right sock with '
             'the same color. What is the minimum cost for Phoenix to make n/ '
             '2 matching pairs? Each sock must be included in exactly one '
             'matching pair.',
  'input': 'The input consists of multiple test cases. The first line contains '
           'an integer t ( 1≤t≤1000) — the number of test cases. The first '
           'line of each test case contains three integers n, l, and r ( '
           '2≤n≤2⋅105; n is even; 0≤l, r≤n; l+ r= n) — the total number of '
           'socks, and the number of left and right socks, respectively. The '
           'next line contains n integers ci ( 1≤ci≤n) — the colors of the '
           'socks. The first l socks are left socks, while the next r socks '
           'are right socks. It is guaranteed that the sum of n across all the '
           'test cases will not exceed 2⋅105.',
  'note': 'In the first test case, Phoenix can pay 2 dollars to: recolor sock '
          '1 to color 2 recolor sock 3 to color 2 There are now 3 matching '
          'pairs. For example, pairs ( 1, 4) , ( 2, 5) , and ( 3, 6) are '
          'matching. In the second test case, Phoenix can pay 3 dollars to: '
          'turn sock 6 from a right sock to a left sock recolor sock 3 to '
          'color 1 recolor sock 4 to color 1 There are now 3 matching pairs. '
          'For example, pairs ( 1, 3) , ( 2, 4) , and ( 5, 6) are matching.',
  'output': 'For each test case, print one integer — the minimum cost for '
            'Phoenix to make n/ 2 matching pairs. Each sock must be included '
            'in exactly one matching pair.',
  'title': 'Phoenix and Socks',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1515/D'},
 {'history': 'Phoenix loves playing with bits — specifically, by using the '
             'bitwise operations AND, OR, and XOR. He has n integers a1, a2, . '
             '. . , an, and will perform q of the following queries: replace '
             'all numbers ai where l≤ai≤r with ai AND x; replace all numbers '
             'ai where l≤ai≤r with ai OR x; replace all numbers ai where '
             'l≤ai≤r with ai XOR x; output how many distinct integers ai where '
             'l≤ai≤r. For each query, Phoenix is given l, r, and x. Note that '
             'he is considering the values of the numbers, not their indices.',
  'input': 'The first line contains two integers n and q ( 1≤n≤2⋅105; 1≤q≤105) '
           '— the number of integers and the number of queries, respectively. '
           'The second line contains n integers a1, a2, . . . , an ( 0≤ai< '
           '220) — the integers that Phoenix starts with. The next q lines '
           'contain the queries. For each query, the first integer of each '
           'line is t ( 1≤t≤4) — the type of query. If t∈1, 2, 3, then three '
           'integers li, ri, and xi will follow ( 0≤li, ri, xi< 220; li≤ri) . '
           'Otherwise, if t= 4, two integers li and ri will follow ( 0≤li≤ri< '
           '220) . It is guaranteed that there is at least one query where t= '
           '4.',
  'note': 'In the first example: For the first query, 2 is replaced by 2 AND '
          '2= 2 and 3 is replaced with 3 AND 2= 2. The set of numbers is 1, 2, '
          '4, 5. For the second query, there are 3 distinct numbers between 2 '
          'and 5: 2, 4, and 5. For the third query, 2 is replaced by 2 XOR 3= '
          '1, 4 is replaced by 4 XOR 3= 7, and 5 is replaced by 5 XOR 3= 6. '
          'The set of numbers is 1, 6, 7. For the fourth query, there are 2 '
          'distinct numbers between 1 and 6: 1 and 6. For the fifth query, 1 '
          'is replaced by 1 OR 8= 9. The set of numbers is 6, 7, 9. For the '
          'sixth query, there is one distinct number between 8 and 10: 9.',
  'output': 'Print the answer for each query where t= 4.',
  'title': 'Phoenix and Bits',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1515/H'},
 {'history': 'Phoenix wonders what it is like to rob diamonds from a jewelry '
             'store! There are n types of diamonds. The i- th type has weight '
             'wi and value vi. The store initially has ai diamonds of the i- '
             'th type. Each day, for q days, one of the following will happen: '
             'A new shipment of ki diamonds of type di arrive. The store sells '
             'ki diamonds of type di. Phoenix wonders what will happen if he '
             'robs the store using a bag that can fit diamonds with total '
             'weight not exceeding ci. If he greedily takes diamonds of the '
             'largest value that fit, how much value would be taken? If there '
             'are multiple diamonds with the largest value, he will take the '
             'one with minimum weight. If, of the diamonds with the largest '
             'value, there are multiple with the same minimum weight, he will '
             'take any of them. Of course, since Phoenix is a law- abiding '
             'citizen, this is all a thought experiment and he never actually '
             'robs any diamonds from the store. This means that queries of '
             'type 3 do not affect the diamonds in the store.',
  'input': 'The first line contains two integers n and q ( 1≤n≤2⋅105; 1≤q≤105) '
           '— the number of types of diamonds and number of days, '
           'respectively. The next n lines describe each type of diamond. The '
           'i- th line will contain three integers ai, wi, and vi ( 0≤ai≤105; '
           '1≤wi, vi≤105) — the initial number of diamonds of the i- th type, '
           'the weight of diamonds of the i- th type, and the value of '
           'diamonds of the i- th type, respectively. The next q lines contain '
           'the queries. For each query, the first integer of each line is t ( '
           '1≤t≤3) — the type of query. If t= 1, then two integers ki, di '
           'follow ( 1≤ki≤105; 1≤di≤n) . This means that a new shipment of ki '
           'diamonds arrived, each of type di. If t= 2, then two integers ki, '
           'di follow ( 1≤ki≤105; 1≤di≤n) . This means that the store has sold '
           'ki diamonds, each of type di. It is guaranteed that the store had '
           'the diamonds before they sold them. If t= 3, an integer ci will '
           "follow ( 1≤ci≤1018) — the weight capacity of Phoenix' s bag. It is "
           'guaranteed that there is at least one query where t= 3.',
  'note': 'For the first query where t= 3, Phoenix can fit 2 diamonds of type '
          '1, with total weight 6 and value 8. For the second query where t= '
          '3, Phoenix will first fit in 3 diamonds of type 3, then one diamond '
          'of type 1 for a total weight of 9 and a value of 16. Note that '
          'diamonds of type 3 are prioritized over type 1 because type 3 has '
          'equal value but less weight. For the final query where t= 3, '
          'Phoenix can fit every diamond for a total value of 13.',
  'output': 'Print the answer for each query of the third type ( t= 3) .',
  'title': 'Phoenix and Diamonds',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1515/I'},
 {'history': 'The 2050 volunteers are organizing the " Run! Chase the Rising '
             'Sun" activity. Starting on Apr 25 at 7: 30 am, runners will '
             'complete the 6km trail around the Yunqi town. There are n+ 1 '
             'checkpoints on the trail. They are numbered by 0, 1, . . . , n. '
             'A runner must start at checkpoint 0 and finish at checkpoint n. '
             'No checkpoint is skippable — he must run from checkpoint 0 to '
             'checkpoint 1, then from checkpoint 1 to checkpoint 2 and so on. '
             'Look at the picture in notes section for clarification. Between '
             'any two adjacent checkpoints, there are m different paths to '
             'choose. For any 1≤i≤n, to run from checkpoint i−1 to checkpoint '
             'i, a runner can choose exactly one from the m possible paths. '
             'The length of the j- th path between checkpoint i−1 and i is bi, '
             'j for any 1≤j≤m and 1≤i≤n. To test the trail, we have m runners. '
             'Each runner must run from the checkpoint 0 to the checkpoint n '
             'once, visiting all the checkpoints. Every path between every '
             'pair of adjacent checkpoints needs to be ran by exactly one '
             'runner. If a runner chooses the path of length li between '
             'checkpoint i−1 and i ( 1≤i≤n) , his tiredness is nmini= 1li, i. '
             'e. the minimum length of the paths he takes. Please arrange the '
             'paths of the m runners to minimize the sum of tiredness of them.',
  'input': 'Each test contains multiple test cases. The first line contains '
           'the number of test cases t ( 1≤t≤10000) . Description of the test '
           'cases follows. The first line of each test case contains two '
           'integers n and m ( 1≤n, m≤100) . The i- th of the next n lines '
           'contains m integers bi, 1, bi, 2, . . . , bi, m ( 1≤bi, j≤109) . '
           'It is guaranteed that the sum of n⋅m over all test cases does not '
           'exceed 104.',
  'note': 'In the first case, the sum of tiredness is min( 2, 5) + min( 3, 3) '
          '+ min( 4, 1) = 6. In the second case, the sum of tiredness is min( '
          '2, 4, 3) + min( 3, 1, 5) = 3.',
  'output': 'For each test case, output n lines. The j- th number in the i- th '
            'line should contain the length of the path that runner j chooses '
            'to run from checkpoint i−1 to checkpoint i. There should be '
            'exactly m integers in the i- th line and these integers should '
            'form a permuatation of bi, 1, . . . , bi, m for all 1≤i≤n. If '
            'there are multiple answers, print any.',
  'title': 'Morning Jogging',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1517/B'},
 {'history': 'Polycarp is an organizer of a Berland ICPC regional event. There '
             'are n universities in Berland numbered from 1 to n. Polycarp '
             'knows all competitive programmers in the region. There are n '
             'students: the i- th student is enrolled at a university ui and '
             'has a programming skill si. Polycarp has to decide on the rules '
             'now. In particular, the number of members in the team. Polycarp '
             'knows that if he chooses the size of the team to be some integer '
             'k, each university will send their k strongest ( with the '
             'highest programming skill s) students in the first team, the '
             'next k strongest students in the second team and so on. If there '
             "are fewer than k students left, then the team can' t be formed. "
             'Note that there might be universities that send zero teams. The '
             'strength of the region is the total skill of the members of all '
             'present teams. If there are no teams present, then the strength '
             'is 0. Help Polycarp to find the strength of the region for each '
             'choice of k from 1 to n.',
  'input': 'The first line contains a single integer t ( 1≤t≤1000) — the '
           'number of testcases. The first line of each testcase contains a '
           'single integer n ( 1≤n≤2⋅105) — the number of universities and the '
           'number of students. The second line of each testcase contains n '
           'integers u1, u2, . . . , un ( 1≤ui≤n) — the university the i- th '
           'student is enrolled at. The third line of each testcase contains n '
           'integers s1, s2, . . . , sn ( 1≤si≤109) — the programming skill of '
           "the i- th student. The sum of n over all testcases doesn' t exceed "
           '2⋅105.',
  'note': 'In the first testcase the teams from each university for each k '
          'are: k= 1: university 1: [ 6] , [ 5] , [ 5] , [ 3] ; university 2: '
          '[ 8] , [ 1] , [ 1] ; k= 2: university 1: [ 6, 5] , [ 5, 3] ; '
          'university 2: [ 8, 1] ; k= 3: university 1: [ 6, 5, 5] ; university '
          '2: [ 8, 1, 1] ; k= 4: university 1: [ 6, 5, 5, 3] ;',
  'output': 'For each testcase print n integers: the strength of the region — '
            'the total skill of the members of the present teams — for each '
            'choice of team size k.',
  'title': 'Berland Regional',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1519/C'},
 {'history': 'There are nn points on an infinite plane. The ii- th point has '
             'coordinates ( xi, yi) ( xi, yi) such that xi> 0xi> 0 and yi> '
             '0yi> 0. The coordinates are not necessarily integer. In one move '
             'you perform the following operations: choose two points aa and '
             'bb ( a= ̸ba= ̸b) ; move point aa from ( xa, ya) ( xa, ya) to '
             'either ( xa+ 1, ya) ( xa+ 1, ya) or ( xa, ya+ 1) ( xa, ya+ 1) ; '
             'move point bb from ( xb, yb) ( xb, yb) to either ( xb+ 1, yb) ( '
             'xb+ 1, yb) or ( xb, yb+ 1) ( xb, yb+ 1) ; remove points aa and '
             'bb. However, the move can only be performed if there exists a '
             'line that passes through the new coordinates of aa, new '
             "coordinates of bb and ( 0, 0) ( 0, 0) . Otherwise, the move can' "
             't be performed and the points stay at their original coordinates '
             '( xa, ya) ( xa, ya) and ( xb, yb) ( xb, yb) , respectively. The '
             'numeration of points does not change after some points are '
             "removed. Once the points are removed, they can' t be chosen in "
             'any later moves. Note that you have to move both points during '
             "the move, you can' t leave them at their original coordinates. "
             'What is the maximum number of moves you can perform? What are '
             'these moves? If there are multiple answers, you can print any of '
             'them.',
  'input': 'The first line contains a single integer nn ( 1≤n≤2⋅1051≤n≤2⋅105) '
           '— the number of points. The ii- th of the next nn lines contains '
           'four integers ai, bi, ci, diai, bi, ci, di ( 1≤ai, bi, ci, '
           'di≤1091≤ai, bi, ci, di≤109) . The coordinates of the ii- th point '
           'are xi= aibixi= aibi and yi= cidiyi= cidi.',
  'note': 'Here are the points and the moves for the ones that get chosen for '
          'the moves from the first example:',
  'output': 'In the first line print a single integer cc — the maximum number '
            'of moves you can perform. Each of the next cc lines should '
            'contain a description of a move: two integers aa and bb ( 1≤a, '
            'b≤n1≤a, b≤n, a= ̸ba= ̸b) — the points that are removed during the '
            'current move. There should be a way to move points aa and bb '
            "according to the statement so that there' s a line that passes "
            'through the new coordinates of aa, the new coordinates of bb and '
            '( 0, 0) ( 0, 0) . No removed point can be chosen in a later move. '
            'If there are multiple answers, you can print any of them. You can '
            'print the moves and the points in the move in the arbitrary '
            'order.',
  'title': 'Off by One',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1519/E'},
 {'history': 'There are nn robots driving along an OX axis. There are also two '
             'walls: one is at coordinate 00 and one is at coordinate mm. The '
             'ii- th robot starts at an integer coordinate xi ( 0< xi< m) xi ( '
             '0< xi< m) and moves either left ( towards the 00) or right with '
             'the speed of 11 unit per second. No two robots start at the same '
             'coordinate. Whenever a robot reaches a wall, it turns around '
             'instantly and continues his ride in the opposite direction with '
             'the same speed. Whenever several robots meet at the same integer '
             'coordinate, they collide and explode into dust. Once a robot has '
             "exploded, it doesn' t collide with any other robot. Note that if "
             'several robots meet at a non- integer coordinate, nothing '
             'happens. For each robot find out if it ever explodes and print '
             'the time of explosion if it happens and −1−1 otherwise.',
  'input': 'The first line contains a single integer tt ( 1≤t≤10001≤t≤1000) — '
           'the number of testcases. Then the descriptions of tt testcases '
           'follow. The first line of each testcase contains two integers nn '
           'and mm ( 1≤n≤3⋅1051≤n≤3⋅105; 2≤m≤1082≤m≤108) — the number of '
           'robots and the coordinate of the right wall. The second line of '
           'each testcase contains nn integers x1, x2, . . . , xnx1, x2, . . . '
           ', xn ( 0< xi< m0< xi< m) — the starting coordinates of the robots. '
           'The third line of each testcase contains nn space- separated '
           "characters ' L' or ' R' — the starting directions of the robots ( "
           "' L' stands for left and ' R' stands for right) . All coordinates "
           'xixi in the testcase are distinct. The sum of nn over all '
           "testcases doesn' t exceed 3⋅1053⋅105.",
  'note': 'Here is the picture for the seconds 0, 1, 20, 1, 2 and 33 of the '
          "first testcase: Notice that robots 22 and 33 don' t collide because "
          'they meet at the same point 2. 52. 5, which is not integer. After '
          "second 33 robot 66 just drive infinitely because there' s no robot "
          'to collide with.',
  'output': 'For each testcase print nn integers — for the ii- th robot output '
            'the time it explodes at if it does and −1−1 otherwise.',
  'title': 'Robot Collisions',
  'topics': ['implementation', 'sortings'],
  'url': 'https://codeforces.com/problemset/problem/1525/C'},
 {'history': 'You are given an array a of 2n distinct integers. You want to '
             'arrange the elements of the array in a circle such that no '
             'element is equal to the the arithmetic mean of its 2 neighbours. '
             'More formally, find an array b, such that: b is a permutation of '
             'a. For every i from 1 to 2n, bi= ̸bi−1+ bi+ 12, where b0= b2n '
             'and b2n+ 1= b1. It can be proved that under the constraints of '
             'this problem, such array b always exists.',
  'input': 'The first line of input contains a single integer t ( 1≤t≤1000) — '
           'the number of testcases. The description of testcases follows. The '
           'first line of each testcase contains a single integer n ( 1≤n≤25) '
           '. The second line of each testcase contains 2n integers a1, a2, . '
           '. . , a2n ( 1≤ai≤109) — elements of the array. Note that there is '
           'no limit to the sum of n over all testcases.',
  'note': "In the first testcase, array [ 3, 1, 4, 2, 5, 6] works, as it' s a "
          'permutation of [ 1, 2, 3, 4, 5, 6] , and 3+ 42= ̸1, 1+ 22= ̸4, 4+ '
          '52= ̸2, 2+ 62= ̸5, 5+ 32= ̸6, 6+ 12= ̸3.',
  'output': 'For each testcase, you should output 2n integers, b1, b2, . . . '
            'b2n, for which the conditions from the statement are satisfied.',
  'title': 'Mean Inequality',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1526/A'},
 {'history': 'After rejecting 10100 data structure problems, Errorgorn is very '
             "angry at Anton and decided to kill him. Anton' s DNA can be "
             'represented as a string a which only contains the characters " '
             'ANTON" ( there are only 4 distinct characters) . Errorgorn can '
             "change Anton' s DNA into string b which must be a permutation of "
             "a. However, Anton' s body can defend against this attack. In 1 "
             'second, his body can swap 2 adjacent characters of his DNA to '
             "transform it back to a. Anton' s body is smart and will use the "
             'minimum number of moves. To maximize the chance of Anton dying, '
             "Errorgorn wants to change Anton' s DNA the string that maximizes "
             "the time for Anton' s body to revert his DNA. But since "
             'Errorgorn is busy making more data structure problems, he needs '
             'your help to find the best string B. Can you help him?',
  'input': 'The first line of input contains a single integer t ( 1≤t≤100000) '
           '— the number of testcases. The first and only line of each '
           'testcase contains 1 string a ( 1≤| a| ≤100000) . a consists of '
           'only the characters " A" , " N" , " O" and " T" . It is guaranteed '
           'that the sum of | a| over all testcases does not exceed 100000.',
  'note': "For the first testcase, it takes 7 seconds for Anton' s body to "
          'transform NNOTA to ANTON: NNOTA → NNOAT → NNAOT → NANOT → NANTO → '
          'ANNTO → ANTNO → ANTON. Note that you cannot output strings such as '
          'AANTON, ANTONTRYGUB, AAAAA and anton as it is not a permutation of '
          "ANTON. For the second testcase, it takes 2 seconds for Anton' s "
          'body to transform AANN to NAAN. Note that other strings such as '
          'NNAA and ANNA will also be accepted.',
  'output': 'For each testcase, print a single string, b. If there are '
            'multiple answers, you can output any one of them. b must be a '
            'permutation of the string a.',
  'title': 'Kill Anton',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1526/D'},
 {'history': 'A sequence ( b1, b2, . . . , bk) is called strange, if the '
             'absolute difference between any pair of its elements is greater '
             'than or equal to the maximum element in the sequence. Formally '
             "speaking, it' s strange if for every pair ( i, j) with 1≤i< j≤k, "
             'we have | ai−aj| ≥MAX, where MAX is the largest element of the '
             'sequence. In particular, any sequence of length at most 1 is '
             'strange. For example, the sequences ( −2021, −1, −1, −1) and ( '
             '−1, 0, 1) are strange, but ( 3, 0, 1) is not, because | 0−1| < '
             '3. Sifid has an array a of n integers. Sifid likes everything '
             'big, so among all the strange subsequences of a, he wants to '
             'find the length of the longest one. Can you help him? A sequence '
             'c is a subsequence of an array d if c can be obtained from d by '
             'deletion of several ( possibly, zero or all) elements.',
  'input': 'The first line contains an integer t ( 1≤t≤104) — the number of '
           'test cases. The description of the test cases follows. The first '
           'line of each test case contains an integer n ( 1≤n≤105) — the '
           'length of the array a. The second line of each test case contains '
           'n integers a1, a2, . . . , an ( −109≤ai≤109) — the elements of the '
           'array a. It is guaranteed that the sum of n over all test cases '
           "doesn' t exceed 105.",
  'note': 'In the first test case, one of the longest strange subsequences is '
          '( a1, a2, a3, a4) In the second test case, one of the longest '
          'strange subsequences is ( a1, a3, a4, a5, a7) . In the third test '
          'case, one of the longest strange subsequences is ( a1, a3, a4, a5) '
          '. In the fourth test case, one of the longest strange subsequences '
          'is ( a2) . In the fifth test case, one of the longest strange '
          'subsequences is ( a1, a2, a4) .',
  'output': 'For each test case output a single integer — the length of the '
            'longest strange subsequence of a.',
  'title': 'Sifid and Strange Subsequences',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1529/B'},
 {'history': 'You and your friend Ilya are participating in an individual '
             'programming contest consisting of multiple stages. A contestant '
             'can get between 0 and 100 points, inclusive, for each stage, '
             'independently of other contestants. Points received by '
             'contestants in different stages are used for forming overall '
             'contest results. Suppose that k stages of the contest are '
             'completed. For each contestant, k−⌊k4⌋ stages with the highest '
             'scores are selected, and these scores are added up. This sum is '
             'the overall result of the contestant. ( Here ⌊t⌋ denotes '
             'rounding t down. ) For example, suppose 9 stages are completed, '
             'and your scores are 50, 30, 50, 50, 100, 10, 30, 100, 50. First, '
             '7 stages with the highest scores are chosen — for example, all '
             'stages except for the 2- nd and the 6- th can be chosen. Then '
             'your overall result is equal to 50+ 50+ 50+ 100+ 30+ 100+ 50= '
             '430. As of now, n stages are completed, and you know the points '
             'you and Ilya got for these stages. However, it is unknown how '
             'many more stages will be held. You wonder what the smallest '
             'number of additional stages is, after which your result might '
             "become greater than or equal to Ilya' s result, at least in "
             'theory. Find this number!',
  'input': 'Each test contains multiple test cases. The first line contains '
           'the number of test cases t ( 1≤t≤1000) . Description of the test '
           'cases follows. The first line of each test case contains a single '
           'integer n ( 1≤n≤105) — the number of completed stages. The second '
           'line contains n integers a1, a2, . . . , an ( 0≤ai≤100) — your '
           'points for the completed stages. The third line contains n '
           "integers b1, b2, . . . , bn ( 0≤bi≤100) — Ilya' s points for the "
           'completed stages. It is guaranteed that the sum of n over all test '
           'cases does not exceed 105.',
  'note': 'In the first test case, you have scored 100 points for the first '
          'stage, while Ilya has scored 0. Thus, your overall result ( 100) is '
          "already not less than Ilya' s result ( 0) . In the second test "
          'case, you have scored 0 points for the first stage, while Ilya has '
          'scored 100. A single stage with an opposite result is enough for '
          "both your and Ilya' s overall scores to become equal to 100. In the "
          'third test case, your overall result is 30+ 40+ 50= 120, while '
          "Ilya' s result is 100+ 100+ 100= 300. After three additional stages "
          "your result might become equal to 420, while Ilya' s result might "
          'become equal to 400. In the fourth test case, your overall result '
          "after four additional stages might become equal to 470, while Ilya' "
          's result might become equal to 400. Three stages are not enough.',
  'output': 'For each test case print a single integer — the smallest number '
            'of additional stages required for your result to be able to '
            "become greater than or equal to Ilya' s result. If your result is "
            "already not less than Ilya' s result, print 0.",
  'title': 'Pursuit',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1530/C'},
 {'history': 'Prefix function of string t= t1t2. . . tn and position i in it '
             'is defined as the length k of the longest proper ( not equal to '
             'the whole substring) prefix of substring t1t2. . . ti which is '
             'also a suffix of the same substring. For example, for string t= '
             'abacaba the values of the prefix function in positions 1, 2, . . '
             '. , 7 are equal to [ 0, 0, 1, 0, 1, 2, 3] . Let f( t) be equal '
             'to the maximum value of the prefix function of string t over all '
             'its positions. For example, f( abacaba) = 3. You are given a '
             'string s. Reorder its characters arbitrarily to get a string t ( '
             'the number of occurrences of any character in strings s and t '
             'must be equal) . The value of f( t) must be minimized. Out of '
             'all options to minimize f( t) , choose the one where string t is '
             'the lexicographically smallest.',
  'input': 'Each test contains multiple test cases. The first line contains '
           'the number of test cases t ( 1≤t≤105) . Description of the test '
           'cases follows. The only line of each test case contains string s ( '
           '1≤| s| ≤105) consisting of lowercase English letters. It is '
           'guaranteed that the sum of lengths of s over all test cases does '
           'not exceed 105.',
  'note': 'A string a is lexicographically smaller than a string b if and only '
          'if one of the following holds: a is a prefix of b, but a= ̸b; in '
          'the first position where a and b differ, the string a has a letter '
          'that appears earlier in the alphabet than the corresponding letter '
          'in b. In the first test case, f( t) = 0 and the values of prefix '
          'function are [ 0, 0, 0, 0, 0] for any permutation of letters. '
          'String ckpuv is the lexicographically smallest permutation of '
          'letters of string vkcup. In the second test case, f( t) = 1 and the '
          'values of prefix function are [ 0, 1, 0, 1, 0, 1, 0] . In the third '
          'test case, f( t) = 5 and the values of prefix function are [ 0, 1, '
          '2, 3, 4, 5] .',
  'output': 'For each test case print a single string t. The multisets of '
            'letters in strings s and t must be equal. The value of f( t) , '
            'the maximum of prefix functions in string t, must be as small as '
            'possible. String t must be the lexicographically smallest string '
            'out of all strings satisfying the previous conditions.',
  'title': 'Minimax',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1530/E'},
 {'history': 'There are n students in a university. The number of students is '
             'even. The i- th student has programming skill equal to ai. The '
             'coach wants to form n2 teams. Each team should consist of '
             'exactly two students, and each student should belong to exactly '
             'one team. Two students can form a team only if their skills are '
             'equal ( otherwise they cannot understand each other and cannot '
             'form a team) . Students can solve problems to increase their '
             'skill. One solved problem increases the skill by one. The coach '
             'wants to know the minimum total number of problems students '
             'should solve to form exactly n2 teams ( i. e. each pair of '
             'students should form a team) . Your task is to find this number.',
  'input': 'The first line of the input contains one integer n ( 2≤n≤100) — '
           'the number of students. It is guaranteed that n is even. The '
           'second line of the input contains n integers a1, a2, . . . , an ( '
           '1≤ai≤100) , where ai is the skill of the i- th student.',
  'note': 'In the first example the optimal teams will be: ( 3, 4) , ( 1, 6) '
          'and ( 2, 5) , where numbers in brackets are indices of students. '
          'Then, to form the first team the third student should solve 1 '
          'problem, to form the second team nobody needs to solve problems and '
          'to form the third team the second student should solve 4 problems '
          'so the answer is 1+ 4= 5. In the second example the first student '
          'should solve 99 problems to form a team with the second one.',
  'output': 'Print one number — the minimum total number of problems students '
            'should solve to form exactly n2 teams.',
  'title': 'Teams Forming',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1532/D'},
 {'history': 'Ivan wants to play a game with you. He picked some string s of '
             "length n consisting only of lowercase Latin letters. You don' t "
             'know this string. Ivan has informed you about all its improper '
             'prefixes and suffixes ( i. e. prefixes and suffixes of lengths '
             "from 1 to n−1) , but he didn' t tell you which strings are "
             'prefixes and which are suffixes. Ivan wants you to guess which '
             'of the given 2n−2 strings are prefixes of the given string and '
             'which are suffixes. It may be impossible to guess the string '
             'Ivan picked ( since multiple strings may give the same set of '
             'suffixes and prefixes) , but Ivan will accept your answer if '
             'there is at least one string that is consistent with it. Let the '
             'game begin!',
  'input': 'The first line of the input contains one integer number n ( '
           '2≤n≤100) — the length of the guessed string s. The next 2n−2 lines '
           'are contain prefixes and suffixes, one per line. Each of them is '
           'the string of length from 1 to n−1 consisting only of lowercase '
           'Latin letters. They can be given in arbitrary order. It is '
           'guaranteed that there are exactly 2 strings of each length from 1 '
           'to n−1. It is also guaranteed that these strings are prefixes and '
           'suffixes of some existing string of length n.',
  'note': 'The only string which Ivan can guess in the first example is " '
          'ababa" . The only string which Ivan can guess in the second example '
          'is " aaa" . Answers " SPSP" , " SSPP" and " PSPS" are also '
          'acceptable. In the third example Ivan can guess the string " ac" or '
          'the string " ca" . The answer " SP" is also acceptable.',
  'output': 'Print one string of length 2n−2 — the string consisting only of '
            "characters ' P' and ' S' . The number of characters ' P' should "
            "be equal to the number of characters ' S' . The i- th character "
            "of this string should be ' P' if the i- th of the input strings "
            "is the prefix and ' S' otherwise. If there are several possible "
            'answers, you can print any.',
  'title': 'Prefixes and Suffixes',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1532/F'},
 {'history': 'Annie has gotten bored of winning every coding contest and '
             'farming unlimited rating. Today, she is going to farm potatoes '
             "instead. Annie' s garden is an infinite 2D plane. She has nn "
             'potatoes to plant, and the ii- th potato must be planted at ( '
             'xi, yi) ( xi, yi) . Starting at the point ( 0, 0) ( 0, 0) , '
             'Annie begins walking, in one step she can travel one unit right '
             'or up ( increasing her xx or yy coordinate by 11 respectively) . '
             'At any point ( X, Y) ( X, Y) during her walk she can plant some '
             'potatoes at arbitrary points using her potato gun, consuming '
             'max( | X−x| , | Y−y| ) max( | X−x| , | Y−y| ) units of energy in '
             'order to plant a potato at ( x, y) ( x, y) . Find the minimum '
             'total energy required to plant every potato. Note that Annie may '
             'plant any number of potatoes from any point.',
  'input': 'The first line contains the integer nn ( 1≤n≤8000001≤n≤800000) . '
           'The next nn lines contain two integers xixi and yiyi ( 0≤xi, '
           'yi≤1090≤xi, yi≤109) , representing the location of the ii- th '
           'potato. It is possible that some potatoes should be planted in the '
           'same location.',
  'note': 'In example 11, Annie can travel to each spot directly and plant a '
          'potato with no energy required. In example 22, moving to ( 1, 0) ( '
          '1, 0) , Annie plants the second potato using 11 energy. Next, she '
          'travels to ( 1, 1) ( 1, 1) and plants the first potato with 00 '
          'energy.',
  'output': 'Print the minimum total energy to plant all potatoes.',
  'title': 'A New Beginning',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1534/G'},
 {'history': 'This is an interactive problem. As he qualified for IOI this '
             'year, Little Ericyi was given a gift from all his friends: a '
             'tree of nn nodes! On the flight to IOI Little Ericyi was very '
             'bored, so he decided to play a game with Little Yvonne with his '
             'new tree. First, Little Yvonne selects two ( not necessarily '
             'different) nodes aa and bb on the tree ( without telling Ericyi) '
             ', and then gives him a hint ff ( which is some node on the path '
             'from aa to bb) . Then, Little Ericyi is able to ask the '
             'following question repeatedly: If I rooted the tree at node rr ( '
             'Ericyi gets to choose rr) , what would be the Lowest Common '
             "Ancestor of aa and bb? Little Ericyi' s goal is to find the "
             'nodes aa and bb, and report them to Little Yvonne. However, '
             'Little Yvonne thought this game was too easy, so before he gives '
             'the hint ff to Little Ericyi, he also wants him to first find '
             'the maximum number of queries required to determine aa and bb '
             'over all possibilities of aa, bb, and ff assuming Little Ericyi '
             'plays optimally. Little Ericyi defines an optimal strategy as '
             'one that makes the minimum number of queries. Of course, once '
             'Little Ericyi replies with the maximum number of queries, Little '
             'Yvonne will only let him use that many queries in the game. The '
             'tree, aa, bb, and ff are all fixed before the start of the game '
             'and do not change as queries are made. InteractionFirst read a '
             'line containing the integer nn ( 1≤n≤1051≤n≤105) , the number of '
             "nodes in the tree. The next n−1n−1 lines describe Little Ericyi' "
             's tree. These lines contain two integers uu and vv ( 1≤u, '
             'v≤n1≤u, v≤n) denoting an edge between uu and vv ( u= ̸vu= ̸v) . '
             'It is guaranteed that these edges form a tree. After that you '
             'should output kk, the maximum number of queries needed to '
             'determine aa and bb over all possibilities of aa, bb, and ff '
             'assuming Little Ericyi plays optimally. You should output end of '
             'line and flush the output after printing kk. After that read a '
             'line containing the integer ff ( 1≤f≤n1≤f≤n) — the hint: a node '
             'on the path from aa to bb, inclusive. After that, you can start '
             'making queries. You will be limited to making at most kk '
             'queries, where kk is the number you printed. Each query is made '
             'in the format " ? r" , where rr is an integer 1≤r≤n1≤r≤n '
             'denoting the root node you want for the query. You will then '
             'receive an integer xx ( 1≤x≤n1≤x≤n) , the Lowest Common Ancestor '
             'of aa and bb if the tree was rooted at rr. When your program has '
             'found the nodes aa, bb, report the answer in the following '
             'format: " ! a b" , where aa and bb are the two hidden nodes and '
             'terminate your program normally immediately after flushing the '
             'output stream. You may output aa and bb in any order. After '
             'printing a query do not forget to output end of line and flush '
             'the output. Otherwise, you will get Idleness limit exceeded. To '
             'do this, use: fflush( stdout) or cout. flush( ) in C+ + ; '
             'System. out. flush( ) in Java; flush( output) in Pascal; stdout. '
             'flush( ) in Python; see documentation for other languages. If at '
             'any point you make an invalid output or make more than kk '
             'queries, the interaction will terminate and you will receive a '
             'Wrong Answer verdict. An invalid output is defined as either an '
             'invalid query or a value of kk less than 00 or greater than nn. '
             'HacksTo hack a solution, use the following format: The first '
             'line contains the integer nn ( 1≤n≤1051≤n≤105) . The next n−1n−1 '
             'lines contain two integers uu and vv ( 1≤u, v≤n1≤u, v≤n) '
             'denoting an edge between uu and vv ( u= ̸vu= ̸v) . These n−1n−1 '
             'edges must form a tree. The next line of input contains the '
             'nodes aa and bb ( 1≤a, b≤n1≤a, b≤n) , separated by a space. The '
             'final line of input contains the integer ff ( 1≤f≤n1≤f≤n) . Node '
             'ff should be on the simple path from aa to bb ( inclusive) .',
  'input': ' ',
  'note': 'Here is the the tree from the first sample interaction. Nodes aa '
          'and bb are highlighted. Notice that aa and bb can be output in any '
          'order. Additionally, here are the answers to querying every single '
          'node 1, 2, . . . , n1, 2, . . . , n for your convenience: 11: 11 '
          '22: 22 33: 22 44: 44_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ '
          '_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ Here is the the tree from the '
          'second sample interaction. Again, nodes aa and bb are highlighted. '
          'Lastly, here are the answers to querying every single node 1, 2, . '
          '. . , n1, 2, . . . , n ( in example 22) for your convenience: 11: '
          '11 22: 44 33: 11 44: 44 55: 44',
  'output': ' ',
  'title': 'Lost Nodes',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1534/H'},
 {'history': "You are given an array a consisting of n integers. Let' s call a "
             'pair of indices i, j good if 1≤i< j≤n and gcd( ai, 2aj) > 1 ( '
             'where gcd( x, y) is the greatest common divisor of x and y) . '
             'Find the maximum number of good index pairs if you can reorder '
             'the array a in an arbitrary way.',
  'input': 'The first line contains a single integer t ( 1≤t≤1000) — the '
           'number of test cases. The first line of the test case contains a '
           'single integer n ( 2≤n≤2000) — the number of elements in the '
           'array. The second line of the test case contains n integers a1, '
           'a2, . . . , an ( 1≤ai≤105) . It is guaranteed that the sum of n '
           'over all test cases does not exceed 2000.',
  'note': 'In the first example, the array elements can be rearranged as '
          'follows: [ 6, 3, 5, 3] . In the third example, the array elements '
          'can be rearranged as follows: [ 4, 4, 2, 1, 1] .',
  'output': 'For each test case, output a single integer — the maximum number '
            'of good index pairs if you can reorder the array a in an '
            'arbitrary way.',
  'title': 'Array Reodering',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1535/B'},
 {'history': 'You are given a string s consisting of the characters 0, 1, and '
             "? . Let' s call a string unstable if it consists of the "
             'characters 0 and 1 and any two adjacent characters are different '
             "( i. e. it has the form 010101. . . or 101010. . . ) . Let' s "
             'call a string beautiful if it consists of the characters 0, 1, '
             'and ? , and you can replace the characters ? to 0 or 1 ( for '
             'each character, the choice is independent) , so that the string '
             'becomes unstable. For example, the strings 0? ? 10, 0, and ? ? ? '
             'are beautiful, and the strings 00 and ? 1? ? 1 are not. '
             'Calculate the number of beautiful contiguous substrings of the '
             'string s.',
  'input': 'The first line contains a single integer t ( 1≤t≤104) — number of '
           'test cases. The first and only line of each test case contains the '
           'string s ( 1≤| s| ≤2⋅105) consisting of characters 0, 1, and ? . '
           'It is guaranteed that the sum of the string lengths over all test '
           'cases does not exceed 2⋅105.',
  'note': ' ',
  'output': 'For each test case, output a single integer — the number of '
            'beautiful substrings of the string s.',
  'title': 'Unstable String',
  'topics': ['implementation', 'strings'],
  'url': 'https://codeforces.com/problemset/problem/1535/C'},
 {'history': '2k2k teams participate in a playoff tournament. The tournament '
             'consists of 2k−12k−1 games. They are held as follows: first of '
             'all, the teams are split into pairs: team 11 plays against team '
             '22, team 33 plays against team 44 ( exactly in this order) , and '
             'so on ( so, 2k−12k−1 games are played in that phase) . When a '
             'team loses a game, it is eliminated, and each game results in '
             'elimination of one team ( there are no ties) . After that, only '
             '2k−12k−1 teams remain. If only one team remains, it is declared '
             'the champion; otherwise, 2k−22k−2 games are played: in the first '
             'one of them, the winner of the game " 11 vs 22" plays against '
             'the winner of the game " 33 vs 44" , then the winner of the game '
             '" 55 vs 66" plays against the winner of the game " 77 vs 88" , '
             'and so on. This process repeats until only one team remains. For '
             'example, this picture describes the chronological order of games '
             'with k= 3k= 3: Let the string ss consisting of 2k−12k−1 '
             'characters describe the results of the games in chronological '
             'order as follows: if sisi is 0, then the team with lower index '
             'wins the ii- th game; if sisi is 1, then the team with greater '
             'index wins the ii- th game; if sisi is ? , then the result of '
             'the ii- th game is unknown ( any team could win this game) . Let '
             'f( s) f( s) be the number of possible winners of the tournament '
             'described by the string ss. A team ii is a possible winner of '
             'the tournament if it is possible to replace every ? with either '
             '1 or 0 in such a way that team ii is the champion. You are given '
             'the initial state of the string ss. You have to process qq '
             'queries of the following form: pp cc — replace spsp with '
             'character cc, and print f( s) f( s) as the result of the query.',
  'input': 'The first line contains one integer kk ( 1≤k≤181≤k≤18) . The '
           'second line contains a string consisting of 2k−12k−1 characters — '
           'the initial state of the string ss. Each character is either ? , '
           '0, or 1. The third line contains one integer qq ( '
           '1≤q≤2⋅1051≤q≤2⋅105) — the number of queries. Then qq lines follow, '
           'the ii- th line contains an integer pp and a character cc ( '
           '1≤p≤2k−11≤p≤2k−1; cc is either ? , 0, or 1) , describing the ii- '
           'th query.',
  'note': ' ',
  'output': 'For each query, print one integer — f( s) f( s) .',
  'title': 'Playoff Tournament',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1535/D'},
 {'history': 'Suppose you are given two strings a and b. You can apply the '
             'following operation any number of times: choose any contiguous '
             'substring of a or b, and sort the characters in it in non- '
             'descending order. Let f( a, b) the minimum number of operations '
             'you have to apply in order to make them equal ( or f( a, b) = '
             '1337 if it is impossible to make a and b equal using these '
             'operations) . For example: f( ab, ab) = 0; f( ba, ab) = 1 ( in '
             'one operation, we can sort the whole first string) ; f( ebcda, '
             'ecdba) = 1 ( in one operation, we can sort the substring of the '
             'second string starting from the 2- nd character and ending with '
             'the 4- th character) ; f( a, b) = 1337. You are given n strings '
             's1, s2, . . . , sk having equal length. Calculate n∑i= 1n∑j= i+ '
             '1f( si, sj) .',
  'input': 'The first line contains one integer n ( 1≤n≤2⋅105) — the number of '
           'strings. Then n lines follow, each line contains one of the '
           'strings si, consisting of lowercase Latin letters. | s1| = | s2| = '
           '. . . = | sn| , and n⋅| s1| ≤2⋅105. All these strings are pairwise '
           'distinct.',
  'note': ' ',
  'output': 'Print one integer: n∑i= 1n∑j= i+ 1f( si, sj) .',
  'title': 'String Distance',
  'topics': ['implementation', 'strings'],
  'url': 'https://codeforces.com/problemset/problem/1535/F'},
 {'history': 'I, Fischl, Prinzessin der Verurteilung, descend upon this land '
             'by the call of fate an — Oh, you are also a traveler from '
             'another world? Very well, I grant you permission to travel with '
             'me. It is no surprise Fischl speaks with a strange choice of '
             'words. However, this time, not even Oz, her raven friend, can '
             'interpret her expressions! Maybe you can help us understand what '
             'this young princess is saying? You are given a string of n '
             'lowercase Latin letters, the word that Fischl just spoke. You '
             'think that the MEX of this string may help you find the meaning '
             'behind this message. The MEX of the string is defined as the '
             "shortest string that doesn' t appear as a contiguous substring "
             'in the input. If multiple strings exist, the lexicographically '
             'smallest one is considered the MEX. Note that the empty '
             'substring does NOT count as a valid MEX. A string a is '
             'lexicographically smaller than a string b if and only if one of '
             'the following holds: a is a prefix of b, but a= ̸b; in the first '
             'position where a and b differ, the string a has a letter that '
             'appears earlier in the alphabet than the corresponding letter in '
             'b. A string a is a substring of a string b if a can be obtained '
             'from b by deletion of several ( possibly, zero or all) '
             'characters from the beginning and several ( possibly, zero or '
             'all) characters from the end. Find out what the MEX of the '
             'string is!',
  'input': 'Each test contains multiple test cases. The first line contains '
           'the number of test cases t ( 1≤t≤1000) . Description of the test '
           'cases follows. The first line of each test case contains an '
           'integer n ( 1≤n≤1000) — the length of the word. The second line '
           'for each test case contains a single string of n lowercase Latin '
           'letters. The sum of n over all test cases will not exceed 1000.',
  'note': ' ',
  'output': 'For each test case, output the MEX of the string on a new line.',
  'title': 'Prinzessin der Verurteilung',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1536/B'},
 {'history': 'Uh oh! Ray lost his array yet again! However, Omkar might be '
             "able to help because he thinks he has found the OmkArray of Ray' "
             's array. The OmkArray of an array a with elements a1, a2, . . . '
             ', a2k−1, is the array b with elements b1, b2, . . . , bk such '
             'that bi is equal to the median of a1, a2, . . . , a2i−1 for all '
             'i. Omkar has found an array b of size n ( 1≤n≤2⋅105, '
             "−109≤bi≤109) . Given this array b, Ray wants to test Omkar' s "
             'claim and see if b actually is an OmkArray of some array a. Can '
             'you help Ray? The median of a set of numbers a1, a2, . . . , '
             'a2i−1 is the number ci where c1, c2, . . . , c2i−1 represents '
             'a1, a2, . . . , a2i−1 sorted in nondecreasing order.',
  'input': 'Each test contains multiple test cases. The first line contains a '
           'single integer t ( 1≤t≤104) — the number of test cases. '
           'Description of the test cases follows. The first line of each test '
           'case contains an integer n ( 1≤n≤2⋅105) — the length of the array '
           'b. The second line contains n integers b1, b2, . . . , bn ( '
           '−109≤bi≤109) — the elements of b. It is guaranteed the sum of n '
           'across all test cases does not exceed 2⋅105.',
  'note': 'In the second case of the first sample, the array [ 4] will '
          'generate an OmkArray of [ 4] , as the median of the first element '
          'is 4. In the fourth case of the first sample, the array [ 3, 2, 5] '
          'will generate an OmkArray of [ 3, 3] , as the median of 3 is 3 and '
          'the median of 2, 3, 5 is 3. In the fifth case of the first sample, '
          'the array [ 2, 1, 0, 3, 4, 4, 3] will generate an OmkArray of [ 2, '
          '1, 2, 3] as the median of 2 is 2 the median of 0, 1, 2 is 1 the '
          'median of 0, 1, 2, 3, 4 is 2 and the median of 0, 1, 2, 3, 3, 4, 4 '
          'is 3. In the second case of the second sample, the array [ 1, 0, 4, '
          '3, 5, −2, −2, −2, −4, −3, −4, −1, 5] will generate an OmkArray of [ '
          '1, 1, 3, 1, 0, −2, −1] , as the median of 1 is 1 the median of 0, '
          '1, 4 is 1 the median of 0, 1, 3, 4, 5 is 3 the median of −2, −2, 0, '
          '1, 3, 4, 5 is 1 the median of −4, −2, −2, −2, 0, 1, 3, 4, 5 is 0 '
          'the median of −4, −4, −3, −2, −2, −2, 0, 1, 3, 4, 5 is −2 and the '
          'median of −4, −4, −3, −2, −2, −2, −1, 0, 1, 3, 4, 5, 5 is −1 For '
          'all cases where the answer is NO, it can be proven that it is '
          'impossible to find an array a such that b is the OmkArray of a.',
  'output': 'For each test case, output one line containing YES if there '
            'exists an array a such that bi is the median of a1, a2, . . . , '
            'a2i−1 for all i, and NO otherwise. The case of letters in YES and '
            'NO do not matter ( so yEs and No will also be accepted) .',
  'title': 'Omkar and Medians',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1536/D'},
 {'history': 'You are a game designer and want to make an obstacle course. The '
             'player will walk from left to right. You have n heights of '
             'mountains already selected and want to arrange them so that the '
             'absolute difference of the heights of the first and last '
             'mountains is as small as possible. In addition, you want to make '
             'the game difficult, and since walking uphill or flat is harder '
             'than walking downhill, the difficulty of the level will be the '
             'number of mountains i ( 1≤i< n) such that hi≤hi+ 1 where hi is '
             "the height of the i- th mountain. You don' t want to waste any "
             'of the mountains you modelled, so you have to use all of them. '
             'From all the arrangements that minimize | h1−hn| , find one that '
             'is the most difficult. If there are multiple orders that satisfy '
             'these requirements, you may find any.',
  'input': 'The first line will contain a single integer t ( 1≤t≤100) — the '
           'number of test cases. Then t test cases follow. The first line of '
           'each test case contains a single integer n ( 2≤n≤2⋅105) — the '
           'number of mountains. The second line of each test case contains n '
           'integers h1, . . . , hn ( 1≤hi≤109) , where hi is the height of '
           'the i- th mountain. It is guaranteed that the sum of n over all '
           'test cases does not exceed 2⋅105.',
  'note': 'In the first test case: The player begins at height 2, next going '
          'up to height 4 increasing the difficulty by 1. After that he will '
          "go down to height 1 and the difficulty doesn' t change because he "
          'is going downhill. Finally the player will go up to height 2 and '
          'the difficulty will increase by 1. The absolute difference between '
          "the starting height and the end height is equal to 0 and it' s "
          'minimal. The difficulty is maximal. In the second test case: The '
          'player begins at height 1, next going up to height 3 increasing the '
          'difficulty by 1. The absolute difference between the starting '
          "height and the end height is equal to 2 and it' s minimal as they "
          'are the only heights. The difficulty is maximal.',
  'output': 'For each test case, output n integers — the given heights in an '
            'order that maximizes the difficulty score among all orders that '
            'minimize | h1−hn| . If there are multiple orders that satisfy '
            'these requirements, you may output any.',
  'title': 'Challenging Cliffs',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1537/C'},
 {'history': 'This is the easy version of the problem. The only difference is '
             'the constraints on n and k. You can make hacks only if all '
             'versions of the problem are solved. You have a string s, and you '
             'can do two types of operations on it: Delete the last character '
             'of the string. Duplicate the string: s: = s+ s, where + denotes '
             'concatenation. You can use each operation any number of times ( '
             'possibly none) . Your task is to find the lexicographically '
             'smallest string of length exactly k that can be obtained by '
             'doing these operations on string s. A string a is '
             'lexicographically smaller than a string b if and only if one of '
             'the following holds: a is a prefix of b, but a= ̸b; In the first '
             'position where a and b differ, the string a has a letter that '
             'appears earlier in the alphabet than the corresponding letter in '
             'b.',
  'input': 'The first line contains two integers n, k ( 1≤n, k≤5000) — the '
           'length of the original string s and the length of the desired '
           'string. The second line contains the string s, consisting of n '
           'lowercase English letters.',
  'note': 'In the first test, it is optimal to make one duplication: " '
          'dbcadabc" → " dbcadabcdbcadabc" . In the second test it is optimal '
          'to delete the last 3 characters, then duplicate the string 3 times, '
          'then delete the last 3 characters to make the string have length k. '
          '" abcd" → " abc" → " ab" → " a" → " aa" → " aaaa" → " aaaaaaaa" → " '
          'aaaaaaa" → " aaaaaa" → " aaaaa" .',
  'output': 'Print the lexicographically smallest string of length k that can '
            'be obtained by doing the operations on string s.',
  'title': 'Erase and Extend (Easy Version)',
  'topics': ['implementation', 'strings'],
  'url': 'https://codeforces.com/problemset/problem/1537/E1'},
 {'history': 'This is the hard version of the problem. The only difference is '
             'the constraints on n and k. You can make hacks only if all '
             'versions of the problem are solved. You have a string s, and you '
             'can do two types of operations on it: Delete the last character '
             'of the string. Duplicate the string: s: = s+ s, where + denotes '
             'concatenation. You can use each operation any number of times ( '
             'possibly none) . Your task is to find the lexicographically '
             'smallest string of length exactly k that can be obtained by '
             'doing these operations on string s. A string a is '
             'lexicographically smaller than a string b if and only if one of '
             'the following holds: a is a prefix of b, but a= ̸b; In the first '
             'position where a and b differ, the string a has a letter that '
             'appears earlier in the alphabet than the corresponding letter in '
             'b.',
  'input': 'The first line contains two integers n, k ( 1≤n, k≤5⋅105) — the '
           'length of the original string s and the length of the desired '
           'string. The second line contains the string s, consisting of n '
           'lowercase English letters.',
  'note': 'In the first test, it is optimal to make one duplication: " '
          'dbcadabc" → " dbcadabcdbcadabc" . In the second test it is optimal '
          'to delete the last 3 characters, then duplicate the string 3 times, '
          'then delete the last 3 characters to make the string have length k. '
          '" abcd" → " abc" → " ab" → " a" → " aa" → " aaaa" → " aaaaaaaa" → " '
          'aaaaaaa" → " aaaaaa" → " aaaaa" .',
  'output': 'Print the lexicographically smallest string of length k that can '
            'be obtained by doing the operations on string s.',
  'title': 'Erase and Extend (Hard Version)',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1537/E2'},
 {'history': 'Polycarp came up with a new programming language. There are only '
             'two types of statements in it: " x : = s" : assign the variable '
             'named x the value s ( where s is a string) . For example, the '
             'statement var : = hello assigns the variable named var the value '
             'hello. Note that s is the value of a string, not the name of a '
             'variable. Between the variable name, the : = operator and the '
             'string contains exactly one space each. " x = a + b" : assign '
             'the variable named x the concatenation of values of two '
             'variables a and b. For example, if the program consists of three '
             'statements a : = hello, b : = world, c = a + b, then the '
             'variable c will contain the string helloworld. It is guaranteed '
             'that the program is correct and the variables a and b were '
             'previously defined. There is exactly one space between the '
             'variable names and the = and + operators. All variable names and '
             'strings only consist of lowercase letters of the English '
             'alphabet and do not exceed 5 characters. The result of the '
             'program is the number of occurrences of string haha in the '
             'string that was written to the variable in the last statement. '
             'Polycarp was very tired while inventing that language. He asks '
             'you to implement it. Your task is — for given program statements '
             'calculate the number of occurrences of string haha in the last '
             'assigned variable.',
  'input': 'The first line contains an integer t ( 1≤t≤103) . Then t test '
           'cases follow. The first line of each test case contains a single '
           'integer n ( 1≤n≤50) — the number of statements in the program. All '
           'variable names and strings are guaranteed to consist only of '
           'lowercase letters of the English alphabet and do not exceed 5 '
           'characters. This is followed by n lines describing the statements '
           'in the format described above. It is guaranteed that the program '
           'is correct.',
  'note': 'In the first test case the resulting value of d is hhahahaha.',
  'output': 'For each set of input data, output the number of occurrences of '
            'the haha substring in the string that was written to the variable '
            'in the last statement.',
  'title': 'Funny Substrings',
  'topics': ['implementation', 'strings'],
  'url': 'https://codeforces.com/problemset/problem/1538/E'},
 {'history': 'Petya once wrote a sad love song and shared it to Vasya. The '
             'song is a string consisting of lowercase English letters. Vasya '
             'made up q questions about this song. Each question is about a '
             'subsegment of the song starting from the l- th letter to the r- '
             'th letter. Vasya considers a substring made up from characters '
             'on this segment and repeats each letter in the subsegment k '
             'times, where k is the index of the corresponding letter in the '
             'alphabet. For example, if the question is about the substring " '
             'abbcb" , then Vasya repeats letter \' a\' once, each of the '
             'letters \' b\' twice, letter \' c" three times, so that the '
             'resulting string is " abbbbcccbb" , its length is 10. Vasya is '
             'interested about the length of the resulting string. Help Petya '
             'find the length of each string obtained by Vasya.',
  'input': 'The first line contains two integers n and q ( 1≤n≤100000, '
           '1≤q≤100000) — the length of the song and the number of questions. '
           'The second line contains one string s — the song, consisting of n '
           "lowercase letters of English letters. Vasya' s questions are "
           'contained in the next q lines. Each line contains two integers l '
           'and r ( 1≤l≤r≤n) — the bounds of the question.',
  'note': 'In the first example Vasya is interested in three questions. In the '
          'first question Vasya considers the substring " aba" , that '
          'transforms to " abba" , so the answer is equal to 4. In the second '
          'question Vasya considers " baca" , that transforms to " bbaccca" , '
          'so the answer is 7. In the third question Vasya considers the '
          'string " abacaba" , that transforms to " abbacccabba" of length 11.',
  'output': 'Print q lines: for each question print the length of the string '
            'obtained by Vasya.',
  'title': 'Love Song',
  'topics': ['implementation', 'strings'],
  'url': 'https://codeforces.com/problemset/problem/1539/B'},
 {'history': 'There are n students numerated from 1 to n. The level of the i- '
             'th student is ai. You need to split the students into stable '
             'groups. A group of students is called stable, if in the sorted '
             'array of their levels no two neighboring elements differ by more '
             'than x. For example, if x= 4, then the group with levels [ 1, '
             '10, 8, 4, 4] is stable ( because 4−1≤x, 4−4≤x, 8−4≤x, 10−8≤x) , '
             'while the group with levels [ 2, 10, 10, 7] is not stable ( 7−2= '
             '5> x) . Apart from the n given students, teachers can invite at '
             "most k additional students with arbitrary levels ( at teachers' "
             'choice) . Find the minimum number of stable groups teachers can '
             'form from all students ( including the newly invited) . For '
             'example, if there are two students with levels 1 and 5; x= 2; '
             'and k≥1, then you can invite a new student with level 3 and put '
             'all the students in one stable group.',
  'input': 'The first line contains three integers n, k, x ( 1≤n≤200000, '
           '0≤k≤1018, 1≤x≤1018) — the initial number of students, the number '
           'of students you can additionally invite, and the maximum allowed '
           'level difference. The second line contains n integers a1, a2, . . '
           '. , an ( 1≤ai≤1018) — the students levels.',
  'note': 'In the first example you can invite two students with levels 2 and '
          '11. Then you can split the students into two stable groups: [ 1, 1, '
          '2, 5, 8, 11, 12, 13] , [ 20, 22] . In the second example you are '
          'not allowed to invite new students, so you need 3 groups: [ 1, 1, '
          '5, 5, 20, 20] [ 60, 70, 70, 70, 80, 90] [ 420]',
  'output': 'In the only line print a single integer: the minimum number of '
            'stable groups you can split the students into.',
  'title': 'Stable Groups',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1539/C'},
 {'history': 'Lena is the most economical girl in Moscow. So, when her dad '
             'asks her to buy some food for a trip to the country, she goes to '
             'the best store — " PriceFixed" . Here are some rules of that '
             'store: The store has an infinite number of items of every '
             'product. All products have the same price: 2 rubles per item. '
             'For every product i there is a discount for experienced buyers: '
             'if you buy bi items of products ( of any type, not necessarily '
             'type i) , then for all future purchases of the i- th product '
             'there is a 50',
  'input': 'The first line contains a single integer n ( 1≤n≤100000) — the '
           'number of products. Each of next n lines contains a product '
           'description. Each description consists of two integers ai and bi ( '
           '1≤ai≤1014, 1≤bi≤1014) — the required number of the i- th product '
           'and how many products you need to buy to get the discount on the '
           'i- th product. The sum of all ai does not exceed 1014.',
  'note': 'In the first example, Lena can purchase the products in the '
          'following way: one item of product 3 for 2 rubles, one item of '
          'product 1 for 2 rubles, one item of product 1 for 2 rubles, one '
          'item of product 2 for 1 ruble ( she can use the discount because 3 '
          'items are already purchased) , one item of product 1 for 1 ruble ( '
          'she can use the discount because 4 items are already purchased) . '
          'In total, she spends 8 rubles. It can be proved that it is '
          'impossible to spend less. In the second example Lena can purchase '
          'the products in the following way: one item of product 1 for 2 '
          'rubles, two items of product 2 for 2 rubles for each, one item of '
          'product 5 for 2 rubles, one item of product 3 for 1 ruble, two '
          'items of product 4 for 1 ruble for each, one item of product 1 for '
          '1 ruble. In total, she spends 12 rubles.',
  'output': 'Output the minimum sum that Lena needs to make all purchases.',
  'title': 'PriceFixed',
  'topics': ['implementation', 'sortings'],
  'url': 'https://codeforces.com/problemset/problem/1539/D'},
 {'history': "The Alice' s computer is broken, so she can' t play her favorite "
             'card game now. To help Alice, Bob wants to answer n her '
             'questions. Initially, Bob holds one card with number 0 in the '
             'left hand and one in the right hand. In the i- th question, '
             'Alice asks Bob to replace a card in the left or right hand with '
             'a card with number ki ( Bob chooses which of two cards he '
             'changes, Bob must replace exactly one card) . After this action, '
             'Alice wants the numbers on the left and right cards to belong to '
             'given segments ( segments for left and right cards can be '
             'different) . Formally, let the number on the left card be x, and '
             'on the right card be y. Then after the i- th swap the following '
             'conditions must be satisfied: al, i≤x≤bl, i, and ar, i≤y≤br, i. '
             'Please determine if Bob can answer all requests. If it is '
             'possible, find a way to do it.',
  'input': 'The first line contains two integers n and m ( 2≤n≤100000, '
           '2≤m≤109) — the number of questions and the maximum possible value '
           'on the card. Then n queries are described. Every description '
           'contains 3 lines. The first line of the description of the i- th '
           'query contains a single integer ki ( 0≤ki≤m) — the number on a new '
           'card. The second line of the description of the i- th query '
           'contains two integers al, i and bl, i ( 0≤al, i≤bl, i≤m) — the '
           'minimum and maximum values of the card at the left hand after the '
           'replacement. The third line of the description of the i- th query '
           'contains two integers ar, i and br, i ( 0≤ar, i≤br, i≤m) — the '
           'minimum and maximum values of the card at the right hand after the '
           'replacement.',
  'note': ' ',
  'output': 'At the first line, print " Yes" , if Bob can answer all queries, '
            'and " No" otherwise. If Bob can answer all n queries, then at the '
            'second line print n numbers: a way to satisfy all requirements. '
            'If in i- th query Bob needs to replace the card in the left hand, '
            'print 0, otherwise print 1. If there are multiple answers, print '
            'any.',
  'title': 'Game with Cards',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1539/E'},
 {'history': 'Vasya has an array of n integers a1, a2, . . . , an. Vasya '
             'thinks that all numbers in his array are strange for some '
             'reason. To calculate how strange the i- th number is, Vasya '
             'created the following algorithm. He chooses a subsegment al, al+ '
             '1, . . . , ar, such that 1≤l≤i≤r≤n, sort its elements in '
             'increasing order in his head ( he can arrange equal elements '
             'arbitrary) . After that he finds the center of the segment. The '
             'center of a segment is the element at position ( l+ r) / 2, if '
             'the length of the segment is odd, and at position ( l+ r+ 1) / 2 '
             'otherwise. Now Vasya finds the element that was at position i '
             'before the sorting, and calculates the distance between its '
             'current position and the center of the subsegment ( the distance '
             'between the elements with indices j and k is | j−k| ) . The '
             'strangeness of the number at position i is the maximum distance '
             'among all suitable choices of l and r. Vasya wants to calculate '
             'the strangeness of each number in his array. Help him to do it.',
  'input': 'The first line contains a single integer n ( 1≤n≤200000) — the '
           'size of the array. The second line contains n integers a1, a2, . . '
           ". , an ( 1≤ai≤n) — Vasya' s array.",
  'note': 'In the first example: For the first position we choose the segment '
          'from 1 to 5. After sorting, it looks like [ 1, 2, 3, 4, 5] , the '
          'center is 3. The distance from the center to 5 is 2. For the second '
          'position we choose the segment from 2 to 4. For the third position '
          'we choose the segment from 3 to 5. For the fourth position we '
          'choose the segment from 1 to 4. After sorting, it looks like [ 2, '
          '3, 4, 5] , the center is 4. The distance from the center to 2 is 2. '
          'For the fifth position we choose the segment from 1 to 5.',
  'output': 'Print a single line with n numbers. The i- th of them must be '
            'equal to the strangeness of the i- th element of the array.',
  'title': 'Strange Array',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1539/F'},
 {'history': 'Farmer John has a farm that consists of n pastures connected by '
             'one- directional roads. Each road has a weight, representing the '
             'time it takes to go from the start to the end of the road. The '
             'roads could have negative weight, where the cows go so fast that '
             'they go back in time! However, Farmer John guarantees that it is '
             'impossible for the cows to get stuck in a time loop, where they '
             'can infinitely go back in time by traveling across a sequence of '
             'roads. Also, each pair of pastures is connected by at most one '
             'road in each direction. Unfortunately, Farmer John lost the map '
             'of the farm. All he remembers is an array d, where di is the '
             'smallest amount of time it took the cows to reach the i- th '
             'pasture from pasture 1 using a sequence of roads. The cost of '
             'his farm is the sum of the weights of each of the roads, and '
             'Farmer John needs to know the minimal cost of a farm that is '
             'consistent with his memory.',
  'input': 'The first line contains one integer t ( 1≤t≤104) — the number of '
           'test cases. Then t cases follow. The first line of each test case '
           'contains a single integer n ( 1≤n≤105) — the number of pastures. '
           'The second line of each test case contains n space separated '
           'integers d1, d2, . . . , dn ( 0≤di≤109) — the array d. It is '
           'guaranteed that d1= 0. It is guaranteed that the sum of n over all '
           'test cases does not exceed 105.',
  'note': 'In the first test case, you can add roads from pasture 1 to pasture '
          '2 with a time of 2, from pasture 2 to pasture 3 with a time of 1, '
          'from pasture 3 to pasture 1 with a time of −3, from pasture 3 to '
          'pasture 2 with a time of −1, from pasture 2 to pasture 1 with a '
          'time of −2. The total cost is 2+ 1+ −3+ −1+ −2= −3. In the second '
          'test case, you can add a road from pasture 1 to pasture 2 with cost '
          '1000000000 and a road from pasture 2 to pasture 1 with cost '
          '−1000000000. The total cost is 1000000000+ −1000000000= 0. In the '
          "third test case, you can' t add any roads. The total cost is 0.",
  'output': 'For each test case, output the minimum possible cost of a farm '
            "that is consistent with Farmer John' s memory.",
  'title': 'Great Graphs',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1540/A'},
 {'history': 'There are n cats in a line, labeled from 1 to n, with the i- th '
             'cat at position i. They are bored of gyrating in the same spot '
             'all day, so they want to reorder themselves such that no cat is '
             'in the same place as before. They are also lazy, so they want to '
             'minimize the total distance they move. Help them decide what cat '
             'should be at each location after the reordering. For example, if '
             'there are 3 cats, this is a valid reordering: [ 3, 1, 2] . No '
             'cat is in its original position. The total distance the cats '
             'move is 1+ 1+ 2= 4 as cat 1 moves one place to the right, cat 2 '
             'moves one place to the right, and cat 3 moves two places to the '
             'left.',
  'input': 'The first line contains a single integer t ( 1≤t≤100) — the number '
           'of test cases. Then t test cases follow. The first and only line '
           'of each test case contains one integer n ( 2≤n≤100) — the number '
           'of cats. It can be proven that under the constraints of the '
           'problem, an answer always exist.',
  'note': 'For the first test case, there is only one possible permutation '
          'that satisfies the conditions: [ 2, 1] . The second test case was '
          'described in the statement. Another possible answer is [ 2, 3, 1] .',
  'output': 'Output t answers, one for each test case. Each answer consists of '
            'n integers — a permutation with the minimum total distance. If '
            'there are multiple answers, print any.',
  'title': 'Pretty Permutations',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1541/A'},
 {'history': 'You are given an array a1, a2, . . . , an consisting of n '
             'distinct integers. Count the number of pairs of indices ( i, j) '
             'such that i< j and ai⋅aj= i+ j.',
  'input': 'The first line contains one integer t ( 1≤t≤104) — the number of '
           'test cases. Then t cases follow. The first line of each test case '
           'contains one integer n ( 2≤n≤105) — the length of array a. The '
           'second line of each test case contains n space separated integers '
           'a1, a2, . . . , an ( 1≤ai≤2⋅n) — the array a. It is guaranteed '
           'that all elements are distinct. It is guaranteed that the sum of n '
           'over all test cases does not exceed 2⋅105.',
  'note': 'For the first test case, the only pair that satisfies the '
          'constraints is ( 1, 2) , as a1⋅a2= 1+ 2= 3For the second test case, '
          'the only pair that satisfies the constraints is ( 2, 3) . For the '
          'third test case, the pairs that satisfy the constraints are ( 1, 2) '
          ', ( 1, 5) , and ( 2, 3) .',
  'output': 'For each test case, output the number of pairs of indices ( i, j) '
            'such that i< j and ai⋅aj= i+ j.',
  'title': 'Pleasant Pairs',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1541/B'},
 {'history': 'You are given a sequence A, where its elements are either in the '
             'form + x or - , where x is an integer. For such a sequence S '
             'where its elements are either in the form + x or - , define f( '
             "S) as follows: iterate through S' s elements from the first one "
             'to the last one, and maintain a multiset T as you iterate '
             "through it. for each element, if it' s in the form + x, add x to "
             'T; otherwise, erase the smallest element from T ( if T is empty, '
             "do nothing) . after iterating through all S' s elements, compute "
             'the sum of all elements in T. f( S) is defined as the sum. The '
             'sequence b is a subsequence of the sequence a if b can be '
             'derived from a by removing zero or more elements without '
             "changing the order of the remaining elements. For all A' s "
             'subsequences B, compute the sum of f( B) , modulo 998244353.',
  'input': 'The first line contains an integer n ( 1≤n≤500) — the length of A. '
           'Each of the next n lines begins with an operator + or - . If the '
           "operator is + , then it' s followed by an integer x ( 1≤x< "
           '998244353) . The i- th line of those n lines describes the i- th '
           'element in A.',
  'note': 'In the first example, the following are all possible pairs of B and '
          'f( B) : B= , f( B) = 0. B= - , f( B) = 0. B= + 1, - , f( B) = 0. B= '
          '- , + 1, - , f( B) = 0. B= + 2, - , f( B) = 0. B= - , + 2, - , f( '
          'B) = 0. B= - , f( B) = 0. B= - , - , f( B) = 0. B= + 1, + 2, f( B) '
          '= 3. B= + 1, + 2, - , f( B) = 2. B= - , + 1, + 2, f( B) = 3. B= - , '
          '+ 1, + 2, - , f( B) = 2. B= - , + 1, f( B) = 1. B= + 1, f( B) = 1. '
          'B= - , + 2, f( B) = 2. B= + 2, f( B) = 2. The sum of these values '
          'is 16.',
  'output': 'Print one integer, which is the answer to the problem, modulo '
            '998244353.',
  'title': 'Priority Queue',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1542/D'},
 {'history': 'After defeating a Blacklist Rival, you get a chance to draw 1 '
             'reward slip out of x hidden valid slips. Initially, x= 3 and '
             'these hidden valid slips are Cash Slip, Impound Strike Release '
             "Marker and Pink Slip of Rival' s Car. Initially, the probability "
             'of drawing these in a random guess are c, m, and p, '
             'respectively. There is also a volatility factor v. You can play '
             "any number of Rival Races as long as you don' t draw a Pink "
             'Slip. Assume that you win each race and get a chance to draw a '
             'reward slip. In each draw, you draw one of the x valid items '
             'with their respective probabilities. Suppose you draw a '
             'particular item and its probability of drawing before the draw '
             'was a. Then, If the item was a Pink Slip, the quest is over, and '
             'you will not play any more races. Otherwise, If a≤v, the '
             'probability of the item drawn becomes 0 and the item is no '
             'longer a valid item for all the further draws, reducing x by 1. '
             'Moreover, the reduced probability a is distributed equally among '
             'the other remaining valid items. If a> v, the probability of the '
             'item drawn reduces by v and the reduced probability is '
             'distributed equally among the other valid items. For example, If '
             '( c, m, p) = ( 0. 2, 0. 1, 0. 7) and v= 0. 1, after drawing '
             'Cash, the new probabilities will be ( 0. 1, 0. 15, 0. 75) . If ( '
             'c, m, p) = ( 0. 1, 0. 2, 0. 7) and v= 0. 2, after drawing Cash, '
             'the new probabilities will be ( Invalid, 0. 25, 0. 75) . If ( c, '
             'm, p) = ( 0. 2, Invalid, 0. 8) and v= 0. 1, after drawing Cash, '
             'the new probabilities will be ( 0. 1, Invalid, 0. 9) . If ( c, '
             'm, p) = ( 0. 1, Invalid, 0. 9) and v= 0. 2, after drawing Cash, '
             'the new probabilities will be ( Invalid, Invalid, 1. 0) . You '
             'need the cars of Rivals. So, you need to find the expected '
             'number of races that you must play in order to draw a pink slip.',
  'input': 'The first line of input contains a single integer t ( 1≤t≤10) — '
           'the number of test cases. The first and the only line of each test '
           'case contains four real numbers c, m, p and v ( 0< c, m, p< 1, c+ '
           'm+ p= 1, 0. 1≤v≤0. 9) . Additionally, it is guaranteed that each '
           'of c, m, p and v have at most 4 decimal places.',
  'note': 'For the first test case, the possible drawing sequences are: P with '
          'a probability of 0. 6; CP with a probability of 0. 2⋅0. 7= 0. 14; '
          'CMP with a probability of 0. 2⋅0. 3⋅0. 9= 0. 054; CMMP with a '
          'probability of 0. 2⋅0. 3⋅0. 1⋅1= 0. 006; MP with a probability of '
          '0. 2⋅0. 7= 0. 14; MCP with a probability of 0. 2⋅0. 3⋅0. 9= 0. 054; '
          'MCCP with a probability of 0. 2⋅0. 3⋅0. 1⋅1= 0. 006. So, the '
          'expected number of races is equal to 1⋅0. 6+ 2⋅0. 14+ 3⋅0. 054+ '
          '4⋅0. 006+ 2⋅0. 14+ 3⋅0. 054+ 4⋅0. 006= 1. 532. For the second test '
          'case, the possible drawing sequences are: P with a probability of '
          '0. 4; CP with a probability of 0. 4⋅0. 6= 0. 24; CMP with a '
          'probability of 0. 4⋅0. 4⋅1= 0. 16; MP with a probability of 0. 2⋅0. '
          '5= 0. 1; MCP with a probability of 0. 2⋅0. 5⋅1= 0. 1. So, the '
          'expected number of races is equal to 1⋅0. 4+ 2⋅0. 24+ 3⋅0. 16+ 2⋅0. '
          '1+ 3⋅0. 1= 1. 86.',
  'output': 'For each test case, output a single line containing a single real '
            'number — the expected number of races that you must play in order '
            'to draw a Pink Slip. Your answer is considered correct if its '
            'absolute or relative error does not exceed 10−6. Formally, let '
            "your answer be a, and the jury' s answer be b. Your answer is "
            'accepted if and only if | a−b| max( 1, | b| ) ≤10−6.',
  'title': 'Need for Pink Slips',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1543/C'},
 {'history': 'AquaMoon has n friends. They stand in a row from left to right, '
             'and the i- th friend from the left wears a T- shirt with a '
             'number ai written on it. Each friend has a direction ( left or '
             'right) . In the beginning, the direction of each friend is '
             'right. AquaMoon can make some operations on friends. On each '
             'operation, AquaMoon can choose two adjacent friends and swap '
             'their positions. After each operation, the direction of both '
             'chosen friends will also be flipped: left to right and vice '
             'versa. AquaMoon hopes that after some operations, the numbers '
             'written on the T- shirt of n friends in the row, read from left '
             'to right, become non- decreasing. Also she wants, that all '
             'friends will have a direction of right at the end. Please find '
             'if it is possible.',
  'input': 'The input consists of multiple test cases. The first line contains '
           'a single integer t ( 1≤t≤50) — the number of test cases. The first '
           'line of each test case contains a single integer n ( 1≤n≤105) — '
           "the number of Aquamoon' s friends. The second line contains n "
           'integers a1, a2, . . . , an ( 1≤ai≤105) — the numbers, written on '
           'the T- shirts. It is guaranteed that the sum of n for all test '
           'cases does not exceed 105.',
  'note': 'The possible list of operations in the first test case: Swap a1 and '
          'a2. The resulting sequence is 3, 4, 2, 5. The directions are: left, '
          'left, right, right. Swap a2 and a3. The resulting sequence is 3, 2, '
          '4, 5. The directions are: left, left, right, right. Swap a1 and a2. '
          'The resulting sequence is 2, 3, 4, 5. The directions are: right, '
          'right, right, right.',
  'output': 'For each test case, if there exists a possible sequence of '
            'operations, print " YES" ( without quotes) ; otherwise, print " '
            'NO" ( without quotes) . You can print each letter in any case ( '
            'upper or lower) .',
  'title': 'AquaMoon and Strange Sort',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1545/A'},
 {'history': 'There are three cells on an infinite 2- dimensional grid, '
             'labeled A, B, and F. Find the length of the shortest path from A '
             'to B if: in one move you can go to any of the four adjacent '
             'cells sharing a side; visiting the cell F is forbidden ( it is '
             'an obstacle) .',
  'input': 'The first line contains an integer t ( 1≤t≤104) — the number of '
           'test cases in the input. Then t test cases follow. Before each '
           'test case, there is an empty line. Each test case contains three '
           'lines. The first one contains two integers xA, yA ( 1≤xA, yA≤1000) '
           '— coordinates of the start cell A. The second one contains two '
           'integers xB, yB ( 1≤xB, yB≤1000) — coordinates of the finish cell '
           'B. The third one contains two integers xF, yF ( 1≤xF, yF≤1000) — '
           'coordinates of the forbidden cell F. All cells are distinct. '
           'Coordinate x corresponds to the column number and coordinate y '
           'corresponds to the row number ( see the pictures below) .',
  'note': 'An example of a possible shortest path for the first test case. An '
          'example of a possible shortest path for the second test case.',
  'output': 'Output t lines. The i- th line should contain the answer for the '
            'i- th test case: the length of the shortest path from the cell A '
            'to the cell B if the cell F is not allowed to be visited.',
  'title': 'Shortest Path with Obstacle',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1547/A'},
 {'history': 'A string s of length n ( 1≤n≤26) is called alphabetical if it '
             'can be obtained using the following algorithm: first, write an '
             'empty string to s ( i. e. perform the assignment s : = " " ) ; '
             'then perform the next step n times; at the i- th step take i- th '
             'lowercase letter of the Latin alphabet and write it either to '
             'the left of the string s or to the right of the string s ( i. e. '
             'perform the assignment s : = c+ s or s : = s+ c, where c is the '
             'i- th letter of the Latin alphabet) . In other words, iterate '
             "over the n first letters of the Latin alphabet starting from ' "
             "a' and etc. Each time we prepend a letter to the left of the "
             'string s or append a letter to the right of the string s. '
             'Strings that can be obtained in that way are alphabetical. For '
             'example, the following strings are alphabetical: " a" , " ba" , '
             '" ab" , " bac" and " ihfcbadeg" . The following strings are not '
             'alphabetical: " z" , " aa" , " ca" , " acb" , " xyz" and " '
             'ddcba" . From the given string, determine if it is alphabetical.',
  'input': 'The first line contains one integer t ( 1≤t≤104) — the number of '
           'test cases. Then t test cases follow. Each test case is written on '
           'a separate line that contains one string s. String s consists of '
           'lowercase letters of the Latin alphabet and has a length between 1 '
           'and 26, inclusive.',
  'note': 'The example contains test cases from the main part of the '
          'condition.',
  'output': 'Output t lines, each of them must contain the answer to the '
            'corresponding test case. Output YES if the given string s is '
            'alphabetical and NO otherwise. You can output YES and NO in any '
            'case ( for example, strings yEs, yes, Yes and YES will be '
            'recognized as a positive answer) .',
  'title': 'Alphabetical Strings',
  'topics': ['implementation', 'strings'],
  'url': 'https://codeforces.com/problemset/problem/1547/B'},
 {'history': 'On a strip of land of length n there are k air conditioners: the '
             'i- th air conditioner is placed in cell ai ( 1≤ai≤n) . Two or '
             'more air conditioners cannot be placed in the same cell ( i. e. '
             'all ai are distinct) . Each air conditioner is characterized by '
             'one parameter: temperature. The i- th air conditioner is set to '
             'the temperature ti. Example of strip of length n= 6, where k= 2, '
             "a= [ 2, 5] and t= [ 14, 16] . For each cell i ( 1≤i≤n) find it' "
             's temperature, that can be calculated by the formula min1≤j≤k( '
             'tj+ | aj−i| ) , where | aj−i| denotes absolute value of the '
             'difference aj−i. In other words, the temperature in cell i is '
             'equal to the minimum among the temperatures of air conditioners, '
             "increased by the distance from it to the cell i. Let' s look at "
             'an example. Consider that n= 6, k= 2, the first air conditioner '
             'is placed in cell a1= 2 and is set to the temperature t1= 14 and '
             'the second air conditioner is placed in cell a2= 5 and is set to '
             'the temperature t2= 16. In that case temperatures in cells are: '
             'temperature in cell 1 is: min( 14+ | 2−1| , 16+ | 5−1| ) = min( '
             '14+ 1, 16+ 4) = min( 15, 20) = 15; temperature in cell 2 is: '
             'min( 14+ | 2−2| , 16+ | 5−2| ) = min( 14+ 0, 16+ 3) = min( 14, '
             '19) = 14; temperature in cell 3 is: min( 14+ | 2−3| , 16+ | 5−3| '
             ') = min( 14+ 1, 16+ 2) = min( 15, 18) = 15; temperature in cell '
             '4 is: min( 14+ | 2−4| , 16+ | 5−4| ) = min( 14+ 2, 16+ 1) = min( '
             '16, 17) = 16; temperature in cell 5 is: min( 14+ | 2−5| , 16+ | '
             '5−5| ) = min( 14+ 3, 16+ 0) = min( 17, 16) = 16; temperature in '
             'cell 6 is: min( 14+ | 2−6| , 16+ | 5−6| ) = min( 14+ 4, 16+ 1) = '
             'min( 18, 17) = 17. For each cell from 1 to n find the '
             'temperature in it.',
  'input': 'The first line contains one integer q ( 1≤q≤104) — the number of '
           'test cases in the input. Then test cases follow. Before each test '
           'case, there is an empty line. Each test case contains three lines. '
           'The first line contains two integers n ( 1≤n≤3⋅105) and k ( 1≤k≤n) '
           '— the length of the strip of land and the number of air '
           'conditioners respectively. The second line contains k integers a1, '
           'a2, . . . , ak ( 1≤ai≤n) — positions of air conditioners on the '
           'strip of land. The third line contains k integers t1, t2, . . . , '
           'tk ( 1≤ti≤109) — temperatures of air conditioners. It is '
           'guaranteed that the sum of n over all test cases does not exceed '
           '3⋅105.',
  'note': ' ',
  'output': 'For each test case output n integers separated by space: '
            'temperatures of air in cells.',
  'title': 'Air Conditioners',
  'topics': ['implementation', 'sortings'],
  'url': 'https://codeforces.com/problemset/problem/1547/E'},
 {'history': 'There is a chessboard of size n by n. The square in the i- th '
             'row from top and j- th column from the left is labelled ( i, j) '
             '. Currently, Gregor has some pawns in the n- th row. There are '
             'also enemy pawns in the 1- st row. On one turn, Gregor moves one '
             'of his pawns. A pawn can move one square up ( from ( i, j) to ( '
             'i−1, j) ) if there is no pawn in the destination square. '
             'Additionally, a pawn can move one square diagonally up ( from ( '
             'i, j) to either ( i−1, j−1) or ( i−1, j+ 1) ) if and only if '
             'there is an enemy pawn in that square. The enemy pawn is also '
             'removed. Gregor wants to know what is the maximum number of his '
             'pawns that can reach row 1? Note that only Gregor takes turns in '
             "this game, and the enemy pawns never move. Also, when Gregor' s "
             'pawn reaches row 1, it is stuck and cannot make any further '
             'moves.',
  'input': 'The first line of the input contains one integer t ( 1≤t≤2⋅104) — '
           'the number of test cases. Then t test cases follow. Each test case '
           'consists of three lines. The first line contains a single integer '
           'n ( 2≤n≤2⋅105) — the size of the chessboard. The second line '
           'consists of a string of binary digits of length n, where a 1 in '
           'the i- th position corresponds to an enemy pawn in the i- th cell '
           'from the left, and 0 corresponds to an empty cell. The third line '
           'consists of a string of binary digits of length n, where a 1 in '
           "the i- th position corresponds to a Gregor' s pawn in the i- th "
           'cell from the left, and 0 corresponds to an empty cell. It is '
           'guaranteed that the sum of n across all test cases is less than '
           '2⋅105.',
  'note': 'In the first example, Gregor can simply advance all 3 of his pawns '
          'forward. Thus, the answer is 3. In the second example, Gregor can '
          'guarantee that all 4 of his pawns reach the enemy row, by following '
          'the colored paths as demonstrated in the diagram below. Remember, '
          'only Gregor takes turns in this " game" ! In the third example, '
          "Gregor' s only pawn is stuck behind the enemy pawn, and cannot "
          'reach the end. In the fourth example, Gregor has no pawns, so the '
          'answer is clearly 0.',
  'output': 'For each test case, print one integer: the maximum number of '
            "Gregor' s pawns which can reach the 1- st row.",
  'title': 'Gregor and the Pawn Game',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1549/B'},
 {'history': "Suppose you have two points p= ( xp, yp) and q= ( xq, yq) . Let' "
             's denote the Manhattan distance between them as d( p, q) = | '
             "xp−xq| + | yp−yq| . Let' s say that three points p, q, r form a "
             "bad triple if d( p, r) = d( p, q) + d( q, r) . Let' s say that "
             'an array b1, b2, . . . , bm is good if it is impossible to '
             'choose three distinct indices i, j, k such that the points ( bi, '
             'i) , ( bj, j) and ( bk, k) form a bad triple. You are given an '
             'array a1, a2, . . . , an. Calculate the number of good subarrays '
             'of a. A subarray of the array a is the array al, al+ 1, . . . , '
             'ar for some 1≤l≤r≤n. Note that, according to the definition, '
             'subarrays of length 1 and 2 are good.',
  'input': 'The first line contains one integer t ( 1≤t≤5000) — the number of '
           'test cases. The first line of each test case contains one integer '
           'n ( 1≤n≤2⋅105) — the length of array a. The second line of each '
           "test case contains n integers a1, a2, . . . , an ( 1≤ai≤109) . It' "
           "s guaranteed that the sum of n doesn' t exceed 2⋅105.",
  'note': 'In the first test case, it can be proven that any subarray of a is '
          'good. For example, subarray [ a2, a3, a4] is good since it contains '
          'only three elements and: d( ( a2, 2) , ( a4, 4) ) = | 4−3| + | 2−4| '
          '= 3 < d( ( a2, 2) , ( a3, 3) ) + d( ( a3, 3) , ( a4, 4) ) = 3+ 1+ '
          '2+ 1= 7; d( ( a2, 2) , ( a3, 3) ) < d( ( a2, 2) , ( a4, 4) ) + d( ( '
          'a4, 4) , ( a3, 3) ) ; d( ( a3, 3) , ( a4, 4) ) < d( ( a3, 3) , ( '
          'a2, 2) ) + d( ( a2, 2) , ( a4, 4) ) ; In the second test case, for '
          'example, subarray [ a1, a2, a3, a4] is not good, since it contains '
          'a bad triple ( a1, 1) , ( a2, 2) , ( a4, 4) : d( ( a1, 1) , ( a4, '
          '4) ) = | 6−9| + | 1−4| = 6; d( ( a1, 1) , ( a2, 2) ) = | 6−9| + | '
          '1−2| = 4; d( ( a2, 2) , ( a4, 4) ) = | 9−9| + | 2−4| = 2; So, d( ( '
          'a1, 1) , ( a4, 4) ) = d( ( a1, 1) , ( a2, 2) ) + d( ( a2, 2) , ( '
          'a4, 4) ) .',
  'output': 'For each test case, print the number of good subarrays of array '
            'a.',
  'title': 'Manhattan Subarrays',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1550/C'},
 {'history': "Let' s call an integer array a1, a2, . . . , an good if ai= ̸i "
             'for each i. Let F( a) be the number of pairs ( i, j) ( 1≤i< j≤n) '
             "such that ai+ aj= i+ j. Let' s say that an array a1, a2, . . . , "
             'an is excellent if: a is good; l≤ai≤r for each i; F( a) is the '
             'maximum possible among all good arrays of size n. Given n, l and '
             'r, calculate the number of excellent arrays modulo 109+ 7.',
  'input': 'The first line contains a single integer t ( 1≤t≤1000) — the '
           'number of test cases. The first and only line of each test case '
           'contains three integers n, l, and r ( 2≤n≤2⋅105; −109≤l≤1; '
           "n≤r≤109) . It' s guaranteed that the sum of n doesn' t exceed "
           '2⋅105.',
  'note': 'In the first test case, it can be proven that the maximum F( a) '
          'among all good arrays a is equal to 2. The excellent arrays are: [ '
          '2, 1, 2] ; [ 0, 3, 2] ; [ 2, 3, 2] ; [ 3, 0, 1] .',
  'output': 'For each test case, print the number of excellent arrays modulo '
            '109+ 7.',
  'title': 'Excellent Arrays',
  'topics': ['implementation', 'sortings'],
  'url': 'https://codeforces.com/problemset/problem/1550/D'},
 {'history': 'You are given a string s of length n. Each character is either '
             'one of the first k lowercase Latin letters or a question mark. '
             'You are asked to replace every question mark with one of the '
             'first k lowercase Latin letters in such a way that the following '
             'value is maximized. Let fi be the maximum length substring of '
             'string s, which consists entirely of the i- th Latin letter. A '
             'substring of a string is a contiguous subsequence of that '
             "string. If the i- th letter doesn' t appear in a string, then fi "
             'is equal to 0. The value of a string s is the minimum value '
             'among fi for all i from 1 to k. What is the maximum value the '
             'string can have?',
  'input': 'The first line contains two integers n and k ( 1≤n≤2⋅105; 1≤k≤17) '
           '— the length of the string and the number of first Latin letters '
           'used. The second line contains a string s, consisting of n '
           'characters. Each character is either one of the first k lowercase '
           'Latin letters or a question mark.',
  'note': 'In the first example the question marks can be replaced in the '
          'following way: " aaaababbbb" . f1= 4, f2= 4, thus the answer is 4. '
          'Replacing it like this is also possible: " aaaabbbbbb" . That way '
          'f1= 4, f2= 6, however, the minimum of them is still 4. In the '
          'second example one of the possible strings is " aabbccdda" . In the '
          "third example at least one letter won' t appear in the string, "
          'thus, the minimum of values fi is always 0.',
  'output': 'Print a single integer — the maximum value of the string after '
            'every question mark is replaced with one of the first k lowercase '
            'Latin letters.',
  'title': 'Stringforces',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1550/E'},
 {'history': 'This is a simplified version of the problem B2. Perhaps you '
             'should read the problem B2 before you start solving B1. Paul and '
             'Mary have a favorite string ss which consists of lowercase '
             'letters of the Latin alphabet. They want to paint it using '
             "pieces of chalk of two colors: red and green. Let' s call a "
             'coloring of a string wonderful if the following conditions are '
             'met: each letter of the string is either painted in exactly one '
             "color ( red or green) or isn' t painted; each two letters which "
             'are painted in the same color are different; the number of '
             'letters painted in red is equal to the number of letters painted '
             'in green; the number of painted letters of this coloring is '
             'maximum among all colorings of the string which meet the first '
             'three conditions. E. g. consider a string s equal to " kzaaa" . '
             'One of the wonderful colorings of the string is shown in the '
             'figure. The example of a wonderful coloring of the string " '
             'kzaaa" . Paul and Mary want to learn by themselves how to find a '
             'wonderful coloring of the string. But they are very young, so '
             'they need a hint. Help them find k — the number of red ( or '
             'green, these numbers are equal) letters in a wonderful coloring.',
  'input': 'The first line contains one integer t ( 1≤t≤1000) — the number of '
           'test cases. Then t test cases follow. Each test case consists of '
           'one non- empty string s which consists of lowercase letters of the '
           "Latin alphabet. The number of characters in the string doesn' t "
           'exceed 50.',
  'note': 'The first test case contains the string from the statement. One of '
          "the wonderful colorings is shown in the figure. There' s no "
          'wonderful coloring containing 3 or more red letters because the '
          "total number of painted symbols will exceed the string' s length. "
          'The string from the second test case can be painted as follows. '
          'Let\' s paint the first occurrence of each of the letters " c" , " '
          'o" , " e" in red and the second ones in green. Let\' s paint the '
          'letters " d" , " f" in red and " r" , " s" in green. So every '
          'letter will be painted in red or green, hence the answer better '
          "than 5 doesn' t exist. The third test case contains the string of "
          'distinct letters, so you can paint any set of characters in red, as '
          "long as the size of this set doesn' t exceed half of the size of "
          'the string and is the maximum possible. The fourth test case '
          'contains a single letter which cannot be painted in red because '
          'there will be no letter able to be painted in green. The fifth test '
          "case contains a string of identical letters, so there' s no way to "
          'paint more than one letter in red.',
  'output': 'For each test case, output a separate line containing one non- '
            'negative integer k — the number of letters which will be painted '
            'in red in a wonderful coloring.',
  'title': 'Wonderful Coloring - 1',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1551/B1'},
 {'history': 'Stephen Queen wants to write a story. He is a very unusual '
             "writer, he uses only letters ' a' , ' b' , ' c' , ' d' and ' e' "
             '! To compose a story, Stephen wrote out n words consisting of '
             'the first 5 lowercase letters of the Latin alphabet. He wants to '
             'select the maximum number of words to make an interesting story. '
             'Let a story be a sequence of words that are not necessarily '
             'different. A story is called interesting if there exists a '
             'letter which occurs among all words of the story more times than '
             'all other letters together. For example, the story consisting of '
             'three words " bac" , " aaada" , " e" is interesting ( the letter '
             "' a' occurs 5 times, all other letters occur 4 times in total) . "
             'But the story consisting of two words " aba" , " abcde" is not ( '
             'no such letter that it occurs more than all other letters in '
             'total) . You are given a sequence of n words consisting of '
             "letters ' a' , ' b' , ' c' , ' d' and ' e' . Your task is to "
             'choose the maximum number of them to make an interesting story. '
             "If there' s no way to make a non- empty story, output 0.",
  'input': 'The first line contains one integer t ( 1≤t≤5000) — the number of '
           'test cases. Then t test cases follow. The first line of each test '
           'case contains one integer n ( 1≤n≤2⋅105) — the number of the words '
           'in the sequence. Then n lines follow, each of them contains a word '
           '— a non- empty string consisting of lowercase letters of the Latin '
           'alphabet. The words in the sequence may be non- distinct ( i. e. '
           "duplicates are allowed) . Only the letters ' a' , ' b' , ' c' , ' "
           "d' and ' e' may occur in the words. It is guaranteed that the sum "
           "of n over all test cases doesn' t exceed 2⋅105; the sum of the "
           "lengths of all words over all test cases doesn' t exceed 4⋅105.",
  'note': 'In the first test case of the example, all 3 words can be used to '
          'make an interesting story. The interesting story is " bac aaada e" '
          '. In the second test case of the example, the 1- st and the 3- rd '
          'words can be used to make an interesting story. The interesting '
          'story is " aba aba" . Stephen can\' t use all three words at the '
          "same time. In the third test case of the example, Stephen can' t "
          'make a non- empty interesting story. So the answer is 0. In the '
          'fourth test case of the example, Stephen can use the 3- rd and the '
          '4- th words to make an interesting story. The interesting story is '
          '" c bc" .',
  'output': 'For each test case, output the maximum number of words that '
            "compose an interesting story. Print 0 if there' s no way to make "
            'a non- empty interesting story.',
  'title': 'Interesting Story',
  'topics': ['sortings', 'strings'],
  'url': 'https://codeforces.com/problemset/problem/1551/C'},
 {'history': "The only difference between this problem and D1 is that you don' "
             't have to provide the way to construct the answer in D1, but you '
             "have to do it in this problem. There' s a table of n×m cells ( n "
             'rows and m columns) . The value of n⋅m is even. A domino is a '
             'figure that consists of two cells having a common side. It may '
             'be horizontal ( one of the cells is to the right of the other) '
             'or vertical ( one of the cells is above the other) . You need to '
             'place nm2 dominoes on the table so that exactly k of them are '
             'horizontal and all the other dominoes are vertical. The dominoes '
             'cannot overlap and must fill the whole table.',
  'input': 'The first line contains one integer t ( 1≤t≤10) — the number of '
           'test cases. Then t test cases follow. Each test case consists of a '
           'single line. The line contains three integers n, m, k ( 1≤n, '
           'm≤100, 0≤k≤nm2, n⋅m is even) — the count of rows, columns and '
           'horizontal dominoes, respectively.',
  'note': ' ',
  'output': 'For each test case: print " NO" if it\' s not possible to place '
            'the dominoes on the table in the described way; otherwise, print '
            '" YES" on a separate line, then print n lines so that each of '
            'them contains m lowercase letters of the Latin alphabet — the '
            'layout of the dominoes on the table. Each cell of the table must '
            'be marked by the letter so that for every two cells having a '
            'common side, they are marked by the same letters if and only if '
            'they are occupied by the same domino. I. e. both cells of the '
            'same domino must be marked with the same letter, but two dominoes '
            'that share a side must be marked with different letters. If there '
            'are multiple solutions, print any of them.',
  'title': 'Domino (hard version)',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1551/D2'},
 {'history': 'A string s of length n, consisting of lowercase letters of the '
             'English alphabet, is given. You must choose some number k '
             'between 0 and n. Then, you select k characters of s and permute '
             'them however you want. In this process, the positions of the '
             'other n−k characters remain unchanged. You have to perform this '
             'operation exactly once. For example, if s= " andrea" , you can '
             'choose the k= 4 characters " a_ d_ ea" and permute them into " '
             'd_ e_ aa" so that after the operation the string becomes " '
             'dneraa" . Determine the minimum k so that it is possible to sort '
             's alphabetically ( that is, after the operation its characters '
             'appear in alphabetical order) .',
  'input': 'The first line contains a single integer t ( 1≤t≤1000) — the '
           'number of test cases. Then t test cases follow. The first line of '
           'each test case contains one integer n ( 1≤n≤40) — the length of '
           'the string. The second line of each test case contains the string '
           's. It is guaranteed that s contains only lowercase letters of the '
           'English alphabet.',
  'note': 'In the first test case, we can choose the k= 2 characters " _ ol" '
          'and rearrange them as " _ lo" ( so the resulting string is " llo" ) '
          '. It is not possible to sort the string choosing strictly less than '
          '2 characters. In the second test case, one possible way to sort s '
          'is to consider the k= 6 characters " _ o_ _ force_ " and rearrange '
          'them as " _ c_ _ efoor_ " ( so the resulting string is " '
          'ccdeefoors" ) . One can show that it is not possible to sort the '
          'string choosing strictly less than 6 characters. In the third test '
          'case, string s is already sorted ( so we can choose k= 0 '
          'characters) . In the fourth test case, we can choose all k= 4 '
          'characters " dcba" and reverse the whole string ( so the resulting '
          'string is " abcd" ) .',
  'output': 'For each test case, output the minimum k that allows you to '
            'obtain a string sorted alphabetically, through the operation '
            'described above.',
  'title': 'Subsequence Permutation',
  'topics': ['sortings', 'strings'],
  'url': 'https://codeforces.com/problemset/problem/1552/A'},
 {'history': 'The Olympic Games have just started and Federico is eager to '
             'watch the marathon race. There will be n athletes, numbered from '
             '1 to n, competing in the marathon, and all of them have taken '
             'part in 5 important marathons, numbered from 1 to 5, in the '
             'past. For each 1≤i≤n and 1≤j≤5, Federico remembers that athlete '
             'i ranked ri, j- th in marathon j ( e. g. , r2, 4= 3 means that '
             'athlete 2 was third in marathon 4) . Federico considers athlete '
             'x superior to athlete y if athlete x ranked better than athlete '
             'y in at least 3 past marathons, i. e. , rx, j< ry, j for at '
             'least 3 distinct values of j. Federico believes that an athlete '
             'is likely to get the gold medal at the Olympics if he is '
             'superior to all other athletes. Find any athlete who is likely '
             'to get the gold medal ( that is, an athlete who is superior to '
             'all other athletes) , or determine that there is no such '
             'athlete.',
  'input': 'The first line contains a single integer t ( 1≤t≤1000) — the '
           'number of test cases. Then t test cases follow. The first line of '
           'each test case contains a single integer n ( 1≤n≤50000) — the '
           'number of athletes. Then n lines follow, each describing the '
           'ranking positions of one athlete. The i- th of these lines '
           'contains the 5 integers ri, 1, ri, 2, ri, 3, ri, 4, ri, 5 ( 1≤ri, '
           'j≤50000) — the ranking positions of athlete i in the past 5 '
           'marathons. It is guaranteed that, in each of the 5 past marathons, '
           'the n athletes have distinct ranking positions, i. e. , for each '
           '1≤j≤5, the n values r1, j, r2, j, . . . , rn, j are distinct. It '
           'is guaranteed that the sum of n over all test cases does not '
           'exceed 50000.',
  'note': 'Explanation of the first test case: There is only one athlete, '
          'therefore he is superior to everyone else ( since there is no one '
          'else) , and thus he is likely to get the gold medal. Explanation of '
          'the second test case: There are n= 3 athletes. Athlete 1 is '
          'superior to athlete 2. Indeed athlete 1 ranks better than athlete 2 '
          'in the marathons 1, 2 and 3. Athlete 2 is superior to athlete 3. '
          'Indeed athlete 2 ranks better than athlete 3 in the marathons 1, 2, '
          '4 and 5. Athlete 3 is superior to athlete 1. Indeed athlete 3 ranks '
          'better than athlete 1 in the marathons 3, 4 and 5. Explanation of '
          'the third test case: There are n= 3 athletes. Athlete 1 is superior '
          'to athletes 2 and 3. Since he is superior to all other athletes, he '
          'is likely to get the gold medal. Athlete 2 is superior to athlete '
          '3. Athlete 3 is not superior to any other athlete. Explanation of '
          'the fourth test case: There are n= 6 athletes. Athlete 1 is '
          'superior to athletes 3, 4, 6. Athlete 2 is superior to athletes 1, '
          '4, 6. Athlete 3 is superior to athletes 2, 4, 6. Athlete 4 is not '
          'superior to any other athlete. Athlete 5 is superior to athletes 1, '
          '2, 3, 4, 6. Since he is superior to all other athletes, he is '
          'likely to get the gold medal. Athlete 6 is only superior to athlete '
          '4.',
  'output': 'For each test case, print a single integer — the number of an '
            'athlete who is likely to get the gold medal ( that is, an athlete '
            'who is superior to all other athletes) . If there are no such '
            'athletes, print −1. If there is more than such one athlete, print '
            'any of them.',
  'title': 'Running for Gold',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1552/B'},
 {'history': 'On a circle lie 2n2n distinct points, with the following '
             'property: however you choose 33 chords that connect 33 disjoint '
             'pairs of points, no point strictly inside the circle belongs to '
             'all 33 chords. The points are numbered 1, 2, . . . , 2n1, 2, . . '
             '. , 2n in clockwise order. Initially, kk chords connect kk pairs '
             'of points, in such a way that all the 2k2k endpoints of these '
             'chords are distinct. You want to draw n−kn−k additional chords '
             'that connect the remaining 2( n−k) 2( n−k) points ( each point '
             'must be an endpoint of exactly one chord) . In the end, let xx '
             'be the total number of intersections among all nn chords. '
             'Compute the maximum value that xx can attain if you choose the '
             'n−kn−k chords optimally. Note that the exact position of the '
             '2n2n points is not relevant, as long as the property stated in '
             'the first paragraph holds.',
  'input': 'The first line contains a single integer tt ( 1≤t≤1001≤t≤100) — '
           'the number of test cases. Then tt test cases follow. The first '
           'line of each test case contains two integers nn and kk ( '
           '1≤n≤1001≤n≤100, 0≤k≤n0≤k≤n) — half the number of points and the '
           'number of chords initially drawn. Then kk lines follow. The ii- th '
           'of them contains two integers xixi and yiyi ( 1≤xi, yi≤2n1≤xi, '
           'yi≤2n, xi= ̸yixi= ̸yi) — the endpoints of the ii- th chord. It is '
           'guaranteed that the 2k2k numbers x1, y1, x2, y2, . . . , xk, ykx1, '
           'y1, x2, y2, . . . , xk, yk are all distinct.',
  'note': 'In the first test case, there are three ways to draw the 22 '
          'additional chords, shown below ( black chords are the ones '
          'initially drawn, while red chords are the new ones) : We see that '
          'the third way gives the maximum number of intersections, namely 44. '
          'In the second test case, there are no more chords to draw. Of '
          'course, with only one chord present there are no intersections. In '
          'the third test case, we can make at most one intersection by '
          'drawing chords 1−31−3 and 2−42−4, as shown below:',
  'output': 'For each test case, output the maximum number of intersections '
            'that can be obtained by drawing n−kn−k additional chords.',
  'title': 'Maximize the Intersections',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1552/C'},
 {'history': 'The numbers 1, 2, . . . , n⋅k1, 2, . . . , n⋅k are colored with '
             'nn colors. These colors are indexed by 1, 2, . . . , n1, 2, . . '
             '. , n. For each 1≤i≤n1≤i≤n, there are exactly kk numbers colored '
             'with color ii. Let [ a, b] [ a, b] denote the interval of '
             'integers between aa and bb inclusive, that is, the set a, a+ 1, '
             '. . . , ba, a+ 1, . . . , b. You must choose nn intervals [ a1, '
             'b1] , [ a2, b2] , . . . , [ an, bn] [ a1, b1] , [ a2, b2] , . . '
             '. , [ an, bn] such that: for each 1≤i≤n1≤i≤n, it holds 1≤ai< '
             'bi≤n⋅k1≤ai< bi≤n⋅k; for each 1≤i≤n1≤i≤n, the numbers aiai and '
             'bibi are colored with color ii; each number 1≤x≤n⋅k1≤x≤n⋅k '
             'belongs to at most ⌈nk−1⌉⌈nk−1⌉ intervals. One can show that '
             'such a family of intervals always exists under the given '
             'constraints.',
  'input': 'The first line contains two integers nn and kk ( 1≤n≤1001≤n≤100, '
           '2≤k≤1002≤k≤100) — the number of colors and the number of '
           'occurrences of each color. The second line contains n⋅kn⋅k '
           'integers c1, c2, . . . , cnkc1, c2, . . . , cnk ( 1≤cj≤n1≤cj≤n) , '
           'where cjcj is the color of number jj. It is guaranteed that, for '
           'each 1≤i≤n1≤i≤n, it holds cj= icj= i for exactly kk distinct '
           'indices jj.',
  'note': 'In the first sample, each number can be contained in at most '
          '⌈43−1⌉= 2⌈43−1⌉= 2 intervals. The output is described by the '
          'following picture: In the second sample, the only interval to be '
          'chosen is forced to be [ 1, 2] [ 1, 2] , and each number is indeed '
          'contained in at most ⌈12−1⌉= 1⌈12−1⌉= 1 interval. In the third '
          'sample, each number can be contained in at most ⌈33−1⌉= 2⌈33−1⌉= 2 '
          'intervals. The output is described by the following picture:',
  'output': 'Output nn lines. The ii- th line should contain the two integers '
            'aiai and bibi. If there are multiple valid choices of the '
            'intervals, output any.',
  'title': 'Colors and Intervals',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1552/E'},
 {'history': 'An ant moves on the real line with constant speed of 1 unit per '
             'second. It starts at 0 and always moves to the right ( so its '
             'position increases by 1 each second) . There are n portals, the '
             'i- th of which is located at position xi and teleports to '
             'position yi< xi. Each portal can be either active or inactive. '
             'The initial state of the i- th portal is determined by si: if '
             'si= 0 then the i- th portal is initially inactive, if si= 1 then '
             'the i- th portal is initially active. When the ant travels '
             'through a portal ( i. e. , when its position coincides with the '
             'position of a portal) : if the portal is inactive, it becomes '
             'active ( in this case the path of the ant is not affected) ; if '
             'the portal is active, it becomes inactive and the ant is '
             'instantly teleported to the position yi, where it keeps on '
             'moving as normal. How long ( from the instant it starts moving) '
             'does it take for the ant to reach the position xn+ 1? It can be '
             'shown that this happens in a finite amount of time. Since the '
             'answer may be very large, compute it modulo 998244353.',
  'input': 'The first line contains the integer n ( 1≤n≤2⋅105) — the number of '
           'portals. The i- th of the next n lines contains three integers xi, '
           'yi and si ( 1≤yi< xi≤109, si∈0, 1) — the position of the i- th '
           'portal, the position where the ant is teleported when it travels '
           'through the i- th portal ( if it is active) , and the initial '
           'state of the i- th portal. The positions of the portals are '
           'strictly increasing, that is x1< x2< ⋯< xn. It is guaranteed that '
           'the 2n integers x1, x2, . . . , xn, y1, y2, . . . , yn are all '
           'distinct.',
  'note': 'Explanation of the first sample: The ant moves as follows ( a curvy '
          'arrow denotes a teleporting, a straight arrow denotes normal '
          'movement with speed 1 and the time spent during the movement is '
          'written above the arrow) . 06⟶6⇝53⟶8⇝12⟶3⇝24⟶6⇝52⟶7⇝42⟶6⇝54⟶9 '
          'Notice that the total time is 6+ 3+ 2+ 4+ 2+ 2+ 4= 23. Explanation '
          'of the second sample: The ant moves as follows ( a curvy arrow '
          'denotes a teleporting, a straight arrow denotes normal movement '
          'with speed 1 and the time spent during the movement is written '
          'above the arrow) . 0454971987⟶454971987⇝40687490248097086⟶454971988 '
          'Notice that the total time is 454971987+ 48097086= 503069073. '
          'Explanation of the third sample: Since all portals are initially '
          'off, the ant will not be teleported and will go straight from 0 to '
          'xn+ 1= 899754846+ 1= 899754847.',
  'output': 'Output the amount of time elapsed, in seconds, from the instant '
            'the ant starts moving to the instant it reaches the position xn+ '
            '1. Since the answer may be very large, output it modulo '
            '998244353.',
  'title': 'Telepanting',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1552/F'},
 {'history': 'Andrea has come up with what he believes to be a novel sorting '
             'algorithm for arrays of length n. The algorithm works as '
             'follows. Initially there is an array of n integers a1, a2, . . . '
             ', an. Then, k steps are executed. For each 1≤i≤k, during the i- '
             'th step the subsequence of the array a with indexes ji, 1< ji, '
             '2< ⋯< ji, qi is sorted, without changing the values with the '
             'remaining indexes. So, the subsequence aji, 1, aji, 2, . . . , '
             'aji, qi is sorted and all other elements of a are left '
             'untouched. Andrea, being eager to share his discovery with the '
             'academic community, sent a short paper describing his algorithm '
             'to the journal " Annals of Sorting Algorithms" and you are the '
             'referee of the paper ( that is, the person who must judge the '
             "correctness of the paper) . You must decide whether Andrea' s "
             'algorithm is correct, that is, if it sorts any array a of n '
             'integers.',
  'input': 'The first line contains two integers n and k ( 1≤n≤40, 0≤k≤10) — '
           "the length of the arrays handled by Andrea' s algorithm and the "
           "number of steps of Andrea' s algorithm. Then k lines follow, each "
           "describing the subsequence considered in a step of Andrea' s "
           'algorithm. The i- th of these lines contains the integer qi ( '
           '1≤qi≤n) followed by qi integers ji, 1, ji, 2, . . . , ji, qi ( '
           '1≤ji, 1< ji, 2< ⋯< ji, qi≤n) — the length of the subsequence '
           'considered in the i- th step and the indexes of the subsequence.',
  'note': 'Explanation of the first sample: The algorithm consists of 3 steps. '
          'The first one sorts the subsequence [ a1, a2, a3] , the second one '
          'sorts the subsequence [ a2, a3, a4] , the third one sorts the '
          'subsequence [ a1, a2] . For example, if initially a= [ 6, 5, 6, 3] '
          ', the algorithm transforms the array as follows ( the subsequence '
          'that gets sorted is highlighted in red) [ 6, 5, 6, 3] →[ 5, 6, 6, '
          '3] →[ 5, 3, 6, 6] →[ 3, 5, 6, 6] . One can prove that, for any '
          'initial array a, at the end of the algorithm the array a will be '
          'sorted. Explanation of the second sample: The algorithm consists of '
          '3 steps. The first one sorts the subsequence [ a1, a2, a3] , the '
          'second one sorts the subsequence [ a2, a3, a4] , the third one '
          'sorts the subsequence [ a1, a3, a4] . For example, if initially a= '
          '[ 6, 5, 6, 3] , the algorithm transforms the array as follows ( the '
          'subsequence that gets sorted is highlighted in red) [ 6, 5, 6, 3] '
          '→[ 5, 6, 6, 3] →[ 5, 3, 6, 6] →[ 5, 3, 6, 6] . Notice that a= [ 6, '
          '5, 6, 3] is an example of an array that is not sorted by the '
          'algorithm. Explanation of the third sample: The algorithm consists '
          'of 4 steps. The first 3 steps do nothing because they sort '
          'subsequences of length 1, whereas the fourth step sorts the '
          'subsequence [ a1, a3] . For example, if initially a= [ 5, 6, 4] , '
          'the algorithm transforms the array as follows ( the subsequence '
          'that gets sorted is highlighted in red) [ 5, 6, 4] →[ 5, 6, 4] →[ '
          '5, 6, 4] →[ 5, 6, 4] →[ 4, 6, 5] . Notice that a= [ 5, 6, 4] is an '
          'example of an array that is not sorted by the algorithm. '
          'Explanation of the fourth sample: The algorithm consists of 2 '
          'steps. The first step sorts the subsequences [ a2, a3, a4] , the '
          'second step sorts the whole array [ a1, a2, a3, a4, a5] . For '
          'example, if initially a= [ 9, 8, 1, 1, 1] , the algorithm '
          'transforms the array as follows ( the subsequence that gets sorted '
          'is highlighted in red) [ 9, 8, 1, 1, 1] →[ 9, 1, 1, 8, 1] →[ 1, 1, '
          '1, 8, 9] . Since in the last step the whole array is sorted, it is '
          'clear that, for any initial array a, at the end of the algorithm '
          'the array a will be sorted.',
  'output': "If Andrea' s algorithm is correct print ACCEPTED, otherwise print "
            'REJECTED.',
  'title': 'A Serious Referee',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1552/G'},
 {'history': 'You have a string s and a chip, which you can place onto any '
             'character of this string. After placing the chip, you move it to '
             'the right several ( maybe zero) times, i. e. you perform the '
             'following operation several times: if the current position of '
             'the chip is i, you move it to the position i+ 1. Of course, '
             'moving the chip to the right is impossible if it is already in '
             'the last position. After moving the chip to the right, you move '
             'it to the left several ( maybe zero) times, i. e. you perform '
             'the following operation several times: if the current position '
             'of the chip is i, you move it to the position i−1. Of course, '
             'moving the chip to the left is impossible if it is already in '
             'the first position. When you place a chip or move it, you write '
             'down the character where the chip ends up after your action. For '
             'example, if s is abcdef, you place the chip onto the 3- rd '
             'character, move it to the right 2 times and then move it to the '
             'left 3 times, you write down the string cdedcb. You are given '
             "two strings s and t. Your task is to determine whether it' s "
             'possible to perform the described operations with s so that you '
             'write down the string t as a result.',
  'input': 'The first line contains one integer q ( 1≤q≤500) — the number of '
           'test cases. Each test case consists of two lines. The first line '
           'contains the string s ( 1≤| s| ≤500) , the second line contains '
           'the string t ( 1≤| t| ≤2⋅| s| −1) . Both strings consist of '
           'lowercase English characters. It is guaranteed that the sum of | '
           's| over all test cases does not exceed 500.',
  'note': 'Consider the examples. The first test case is described in the '
          'statement. In the second test case, you can place the chip on the '
          '1- st position, move it twice to the right, and then move it twice '
          'to the left. In the fourth test case, you can place the chip on the '
          "2- nd position, and then don' t move it at all. In the fifth test "
          'case, you can place the chip on the 1- st position, move it 5 times '
          'to the right, and then finish the process.',
  'output': 'For each test case, print " YES" if you can obtain the string t '
            'by performing the process mentioned in the statement with the '
            'string s, or " NO" if you cannot. You may print each letter in '
            'any case ( YES, yes, Yes will all be recognized as positive '
            'answer, NO, no and nO will all be recognized as negative answer) '
            '.',
  'title': 'Reverse String',
  'topics': ['implementation', 'strings'],
  'url': 'https://codeforces.com/problemset/problem/1553/B'},
 {'history': 'You are given two strings s and t, both consisting of lowercase '
             'English letters. You are going to type the string s character by '
             'character, from the first character to the last one. When typing '
             'a character, instead of pressing the button corresponding to it, '
             'you can press the " Backspace" button. It deletes the last '
             "character you have typed among those that aren' t deleted yet ( "
             'or does nothing if there are no characters in the current '
             'string) . For example, if s is " abcbd" and you press Backspace '
             'instead of typing the first and the fourth characters, you will '
             'get the string " bd" ( the first press of Backspace deletes no '
             "character, and the second press deletes the character ' c' ) . "
             'Another example, if s is " abcaa" and you press Backspace '
             'instead of the last two letters, then the resulting text is " a" '
             '. Your task is to determine whether you can obtain the string t, '
             'if you type the string s and press " Backspace" instead of '
             'typing several ( maybe zero) characters of s.',
  'input': 'The first line contains a single integer q ( 1≤q≤105) — the number '
           'of test cases. The first line of each test case contains the '
           'string s ( 1≤| s| ≤105) . Each character of s is a lowercase '
           'English letter. The second line of each test case contains the '
           'string t ( 1≤| t| ≤105) . Each character of t is a lowercase '
           'English letter. It is guaranteed that the total number of '
           'characters in the strings over all test cases does not exceed '
           '2⋅105.',
  'note': 'Consider the example test from the statement. In order to obtain " '
          'ba" from " ababa" , you may press Backspace instead of typing the '
          'first and the fourth characters. There\' s no way to obtain " bb" '
          'while typing " ababa" . There\' s no way to obtain " aaaa" while '
          'typing " aaa" . In order to obtain " ababa" while typing " aababa" '
          ', you have to press Backspace instead of typing the first '
          'character, then type all the remaining characters.',
  'output': 'For each test case, print " YES" if you can obtain the string t '
            'by typing the string s and replacing some characters with presses '
            'of " Backspace" button, or " NO" if you cannot. You may print '
            'each letter in any case ( YES, yes, Yes will all be recognized as '
            'positive answer, NO, no and nO will all be recognized as negative '
            'answer) .',
  'title': 'Backspace',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1553/D'},
 {'history': 'You are given two integers n and m. Find the MEX of the sequence '
             'n⊕0, n⊕1, . . . , n⊕m. Here, ⊕ is the bitwise XOR operator. MEX '
             'of the sequence of non- negative integers is the smallest non- '
             "negative integer that doesn' t appear in this sequence. For "
             'example, MEX( 0, 1, 2, 4) = 3, and MEX( 1, 2021) = 0.',
  'input': 'The first line contains a single integer t ( 1≤t≤30000) — the '
           'number of test cases. The first and only line of each test case '
           'contains two integers n and m ( 0≤n, m≤109) .',
  'note': 'In the first test case, the sequence is 3⊕0, 3⊕1, 3⊕2, 3⊕3, 3⊕4, '
          '3⊕5, or 3, 2, 1, 0, 7, 6. The smallest non- negative integer which '
          "isn' t present in the sequence i. e. the MEX of the sequence is 4. "
          'In the second test case, the sequence is 4⊕0, 4⊕1, 4⊕2, 4⊕3, 4⊕4, '
          '4⊕5, 4⊕6, or 4, 5, 6, 7, 0, 1, 2. The smallest non- negative '
          "integer which isn' t present in the sequence i. e. the MEX of the "
          'sequence is 3. In the third test case, the sequence is 3⊕0, 3⊕1, '
          "3⊕2, or 3, 2, 1. The smallest non- negative integer which isn' t "
          'present in the sequence i. e. the MEX of the sequence is 0.',
  'output': 'For each test case, print a single integer — the answer to the '
            'problem.',
  'title': 'Mikasa',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1554/C'},
 {'history': 'You are given an integer n. Find any string s of length n '
             'consisting only of English lowercase letters such that each non- '
             'empty substring of s occurs in s an odd number of times. If '
             'there are multiple such strings, output any. It can be shown '
             'that such string always exists under the given constraints. A '
             'string a is a substring of a string b if a can be obtained from '
             'b by deletion of several ( possibly, zero or all) characters '
             'from the beginning and several ( possibly, zero or all) '
             'characters from the end.',
  'input': 'The first line contains a single integer t ( 1≤t≤500) — the number '
           'of test cases. The first line of each test case contains a single '
           'integer n ( 1≤n≤105) . It is guaranteed that the sum of n over all '
           "test cases doesn' t exceed 3⋅105.",
  'note': 'In the first test case, each substring of " abc" occurs exactly '
          'once. In the third test case, each substring of " bbcaabbba" occurs '
          'an odd number of times. In particular, " b" occurs 5 times, " a" '
          'and " bb" occur 3 times each, and each of the remaining substrings '
          'occurs exactly once.',
  'output': 'For each test case, print a single line containing the string s. '
            'If there are multiple such strings, output any. It can be shown '
            'that such string always exists under the given constraints.',
  'title': 'Diane',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1554/D'},
 {'history': 'Alice and Bob are playing a game on a matrix, consisting of 22 '
             'rows and mm columns. The cell in the ii- th row in the jj- th '
             'column contains ai, jai, j coins in it. Initially, both Alice '
             'and Bob are standing in a cell ( 1, 1) ( 1, 1) . They are going '
             'to perform a sequence of moves to reach a cell ( 2, m) ( 2, m) . '
             'The possible moves are: Move right — from some cell ( x, y) ( x, '
             'y) to ( x, y+ 1) ( x, y+ 1) ; Move down — from some cell ( x, y) '
             '( x, y) to ( x+ 1, y) ( x+ 1, y) . First, Alice makes all her '
             'moves until she reaches ( 2, m) ( 2, m) . She collects the coins '
             'in all cells she visit ( including the starting cell) . When '
             'Alice finishes, Bob starts his journey. He also performs the '
             'moves to reach ( 2, m) ( 2, m) and collects the coins in all '
             "cells that he visited, but Alice didn' t. The score of the game "
             'is the total number of coins Bob collects. Alice wants to '
             'minimize the score. Bob wants to maximize the score. What will '
             'the score of the game be if both players play optimally?',
  'input': 'The first line contains a single integer tt ( 1≤t≤1041≤t≤104) — '
           'the number of testcases. Then the descriptions of tt testcases '
           'follow. The first line of the testcase contains a single integer '
           'mm ( 1≤m≤1051≤m≤105) — the number of columns of the matrix. The '
           'ii- th of the next 22 lines contain mm integers ai, 1, ai, 2, . . '
           '. , ai, mai, 1, ai, 2, . . . , ai, m ( 1≤ai, j≤1041≤ai, j≤104) — '
           'the number of coins in the cell in the ii- th row in the jj- th '
           "column of the matrix. The sum of mm over all testcases doesn' t "
           'exceed 105105.',
  'note': 'The paths for the testcases are shown on the following pictures. '
          "Alice' s path is depicted in red and Bob' s path is depicted in "
          'blue.',
  'output': 'For each testcase print a single integer — the score of the game '
            'if both players play optimally.',
  'title': 'Coin Rows',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1555/C'},
 {'history': "Let' s call the string beautiful if it does not contain a "
             'substring of length at least 2, which is a palindrome. Recall '
             'that a palindrome is a string that reads the same way from the '
             'first character to the last and from the last character to the '
             'first. For example, the strings a, bab, acca, bcabcbacb are '
             "palindromes, but the strings ab, abbbaa, cccb are not. Let' s "
             'define cost of a string as the minimum number of operations so '
             'that the string becomes beautiful, if in one operation it is '
             'allowed to change any character of the string to one of the '
             'first 3 letters of the Latin alphabet ( in lowercase) . You are '
             'given a string s of length n, each character of the string is '
             'one of the first 3 letters of the Latin alphabet ( in lowercase) '
             '. You have to answer m queries — calculate the cost of the '
             'substring of the string s from li- th to ri- th position, '
             'inclusive.',
  'input': 'The first line contains two integers n and m ( 1≤n, m≤2⋅105) — the '
           'length of the string s and the number of queries. The second line '
           'contains the string s, it consists of n characters, each character '
           'one of the first 3 Latin letters. The following m lines contain '
           'two integers li and ri ( 1≤li≤ri≤n) — parameters of the i- th '
           'query.',
  'note': 'Consider the queries of the example test. in the first query, the '
          'substring is baa, which can be changed to bac in one operation; in '
          'the second query, the substring is baacb, which can be changed to '
          'cbacb in two operations; in the third query, the substring is cb, '
          'which can be left unchanged; in the fourth query, the substring is '
          'aa, which can be changed to ba in one operation.',
  'output': 'For each query, print a single integer — the cost of the '
            'substring of the string s from li- th to ri- th position, '
            'inclusive.',
  'title': 'Say No to Palindromes',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1555/D'},
 {'history': 'You are given n segments on a number line, numbered from 1 to n. '
             'The i- th segments covers all integer points from li to ri and '
             'has a value wi. You are asked to select a subset of these '
             'segments ( possibly, all of them) . Once the subset is selected, '
             "it' s possible to travel between two integer points if there "
             'exists a selected segment that covers both of them. A subset is '
             "good if it' s possible to reach point m starting from point 1 in "
             'arbitrary number of moves. The cost of the subset is the '
             'difference between the maximum and the minimum values of '
             'segments in it. Find the minimum cost of a good subset. In every '
             'test there exists at least one good subset.',
  'input': 'The first line contains two integers n and m ( 1≤n≤3⋅105; 2≤m≤106) '
           '— the number of segments and the number of integer points. Each of '
           'the next n lines contains three integers li, ri and wi ( 1≤li< '
           'ri≤m; 1≤wi≤106) — the description of the i- th segment. In every '
           'test there exists at least one good subset.',
  'note': ' ',
  'output': 'Print a single integer — the minimum cost of a good subset.',
  'title': 'Boring Segments',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1555/E'},
 {'history': 'William has an array of nn integers a1, a2, . . . , ana1, a2, . '
             '. . , an. In one move he can swap two neighboring items. Two '
             'items aiai and ajaj are considered neighboring if the condition '
             '| i−j| = 1| i−j| = 1 is satisfied. William wants you to '
             'calculate the minimal number of swaps he would need to perform '
             'to make it so that the array does not contain two neighboring '
             'items with the same parity.',
  'input': 'Each test contains multiple test cases. The first line contains '
           'the number of test cases tt ( 1≤t≤1041≤t≤104) . Description of the '
           'test cases follows. The first line of each test case contains an '
           'integer nn ( 1≤n≤105) ( 1≤n≤105) which is the total number of '
           "items in William' s array. The second line contains nn integers "
           'a1, a2, . . . , ana1, a2, . . . , an ( 1≤ai≤109) ( 1≤ai≤109) which '
           "are William' s array. It is guaranteed that the sum of nn over all "
           'test cases does not exceed 105105.',
  'note': 'In the first test case the following sequence of operations would '
          'satisfy the requirements: swap( 2, 3) . Array after performing the '
          'operation: [ 6, 1, 6] [ 6, 1, 6] In the second test case the array '
          'initially does not contain two neighboring items of the same '
          'parity. In the third test case the following sequence of operations '
          'would satisfy the requirements: swap( 3, 4) . Array after '
          'performing the operation: [ 1, 1, 2, 1, 2, 2] [ 1, 1, 2, 1, 2, 2] '
          'swap( 2, 3) . Array after performing the operation: [ 1, 2, 1, 1, '
          '2, 2] [ 1, 2, 1, 1, 2, 2] swap( 4, 5) . Array after performing the '
          'operation: [ 1, 2, 1, 2, 1, 2] [ 1, 2, 1, 2, 1, 2] In the fourth '
          'test case it is impossible to satisfy the requirements. In the '
          'fifth test case the following sequence of operations would satisfy '
          'the requirements: swap( 2, 3) . Array after performing the '
          'operation: [ 6, 3, 2, 4, 5, 1] [ 6, 3, 2, 4, 5, 1] swap( 4, 5) . '
          'Array after performing the operation: [ 6, 3, 2, 5, 4, 1] [ 6, 3, '
          '2, 5, 4, 1]',
  'output': 'For each test case output the minimal number of operations needed '
            'or −1−1 if it is impossible to get the array to a state when no '
            'neighboring numbers have the same parity.',
  'title': 'Take Your Places!',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1556/B'},
 {'history': 'William has a favorite bracket sequence. Since his favorite '
             'sequence is quite big he provided it to you as a sequence of '
             'positive integers c1, c2, . . . , cnc1, c2, . . . , cn where '
             'cici is the number of consecutive brackets " ( " if ii is an odd '
             'number or the number of consecutive brackets " ) " if ii is an '
             'even number. For example for a bracket sequence " ( ( ( ) ) ( ) '
             ') ) " a corresponding sequence of numbers is [ 3, 2, 1, 3] [ 3, '
             '2, 1, 3] . You need to find the total number of continuous '
             'subsequences ( subsegments) [ l, r] [ l, r] ( l≤rl≤r) of the '
             'original bracket sequence, which are regular bracket sequences. '
             'A bracket sequence is called regular if it is possible to obtain '
             'correct arithmetic expression by inserting characters " + " and '
             '" 1" into this sequence. For example, sequences " ( ( ) ) ( ) " '
             ', " ( ) " and " ( ( ) ( ( ) ) ) " are regular, while " ) ( " , " '
             '( ( ) " and " ( ( ) ) ) ( " are not.',
  'input': 'The first line contains a single integer nn ( 1≤n≤1000) ( '
           '1≤n≤1000) , the size of the compressed sequence. The second line '
           'contains a sequence of integers c1, c2, . . . , cnc1, c2, . . . , '
           'cn ( 1≤ci≤109) ( 1≤ci≤109) , the compressed sequence.',
  'note': 'In the first example a sequence ( ( ( ( ) ( ( ) ) ) ( is described. '
          'This bracket sequence contains 55 subsegments which form regular '
          'bracket sequences: Subsequence from the 33rd to 1010th character: ( '
          '( ) ( ( ) ) ) Subsequence from the 44th to 55th character: ( ) '
          'Subsequence from the 44th to 99th character: ( ) ( ( ) ) '
          'Subsequence from the 66th to 99th character: ( ( ) ) Subsequence '
          'from the 77th to 88th character: ( ) In the second example a '
          'sequence ( ) ) ) ( ( ) ( ( ) ) ) ) is described. In the third '
          'example a sequence ( ) ( ) ( ( ) ) is described.',
  'output': 'Output a single integer — the total number of subsegments of the '
            'original bracket sequence, which are regular bracket sequences. '
            'It can be proved that the answer fits in the signed 64- bit '
            'integer data type.',
  'title': 'Compressed Bracket Sequence',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1556/C'},
 {'history': 'Ezzat has an array of n integers ( maybe negative) . He wants to '
             'split it into two non- empty subsequences a and b, such that '
             'every element from the array belongs to exactly one subsequence, '
             'and the value of f( a) + f( b) is the maximum possible value, '
             'where f( x) is the average of the subsequence x. A sequence x is '
             'a subsequence of a sequence y if x can be obtained from y by '
             'deletion of several ( possibly, zero or all) elements. The '
             'average of a subsequence is the sum of the numbers of this '
             'subsequence divided by the size of the subsequence. For example, '
             'the average of [ 1, 5, 6] is ( 1+ 5+ 6) / 3= 12/ 3= 4, so f( [ '
             '1, 5, 6] ) = 4.',
  'input': 'The first line contains a single integer t ( 1≤t≤103) — the number '
           'of test cases. Each test case consists of two lines. The first '
           'line contains a single integer n ( 2≤n≤105) . The second line '
           'contains n integers a1, a2, . . . , an ( −109≤ai≤109) . It is '
           'guaranteed that the sum of n over all test cases does not exceed '
           '3⋅105.',
  'note': 'In the first test case, the array is [ 3, 1, 2] . These are all the '
          'possible ways to split this array: a= [ 3] , b= [ 1, 2] , so the '
          'value of f( a) + f( b) = 3+ 1. 5= 4. 5. a= [ 3, 1] , b= [ 2] , so '
          'the value of f( a) + f( b) = 2+ 2= 4. a= [ 3, 2] , b= [ 1] , so the '
          'value of f( a) + f( b) = 2. 5+ 1= 3. 5. Therefore, the maximum '
          'possible value 4. 5. In the second test case, the array is [ −7, '
          '−6, −6] . These are all the possible ways to split this array: a= [ '
          '−7] , b= [ −6, −6] , so the value of f( a) + f( b) = ( −7) + ( −6) '
          '= −13. a= [ −7, −6] , b= [ −6] , so the value of f( a) + f( b) = ( '
          '−6. 5) + ( −6) = −12. 5. Therefore, the maximum possible value −12. '
          '5.',
  'output': 'For each test case, print a single value — the maximum value that '
            'Ezzat can achieve. Your answer is considered correct if its '
            'absolute or relative error does not exceed 10−6. Formally, let '
            "your answer be a, and the jury' s answer be b. Your answer is "
            'accepted if and only if | a−b| max( 1, | b| ) ≤10−6.',
  'title': 'Ezzat and Two Subsequences',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1557/A'},
 {'history': 'Moamen has an array of n distinct integers. He wants to sort '
             'that array in non- decreasing order by doing the following '
             'operations in order exactly once: Split the array into exactly k '
             'non- empty subarrays such that each element belongs to exactly '
             'one subarray. Reorder these subarrays arbitrary. Merge the '
             'subarrays in their new order. A sequence a is a subarray of a '
             'sequence b if a can be obtained from b by deletion of several ( '
             'possibly, zero or all) elements from the beginning and several ( '
             'possibly, zero or all) elements from the end. Can you tell '
             'Moamen if there is a way to sort the array in non- decreasing '
             'order using the operations written above?',
  'input': 'The first line contains a single integer t ( 1≤t≤103) — the number '
           'of test cases. The description of the test cases follows. The '
           'first line of each test case contains two integers n and k ( '
           '1≤k≤n≤105) . The second line contains n integers a1, a2, . . . , '
           'an ( 0≤| ai| ≤109) . It is guaranteed that all numbers are '
           'distinct. It is guaranteed that the sum of n over all test cases '
           'does not exceed 3⋅105.',
  'note': 'In the first test case, a= [ 6, 3, 4, 2, 1] , and k= 4, so we can '
          'do the operations as follows: Split a into [ 6] , [ 3, 4] , [ 2] , '
          '[ 1] . Reorder them: [ 1] , [ 2] , [ 3, 4] , [ 6] . Merge them: [ '
          '1, 2, 3, 4, 6] , so now the array is sorted. In the second test '
          'case, there is no way to sort the array by splitting it into only 2 '
          'subarrays. As an example, if we split it into [ 1, −4] , [ 0, −2] , '
          'we can reorder them into [ 1, −4] , [ 0, −2] or [ 0, −2] , [ 1, −4] '
          '. However, after merging the subarrays, it is impossible to get a '
          'sorted array.',
  'output': 'For each test case, you should output a single string. If Moamen '
            'can sort the array in non- decreasing order, output " YES" ( '
            'without quotes) . Otherwise, output " NO" ( without quotes) . You '
            'can print each letter of " YES" and " NO" in any case ( upper or '
            'lower) .',
  'title': 'Moamen and k-subarrays',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1557/B'},
 {'history': 'You have a permutation: an array a= [ a1, a2, . . . , an] of '
             'distinct integers from 1 to n. The length of the permutation n '
             'is odd. Consider the following algorithm of sorting the '
             'permutation in increasing order. A helper procedure of the '
             'algorithm, f( i) , takes a single argument i ( 1≤i≤n−1) and does '
             'the following. If ai> ai+ 1, the values of ai and ai+ 1 are '
             "exchanged. Otherwise, the permutation doesn' t change. The "
             'algorithm consists of iterations, numbered with consecutive '
             'integers starting with 1. On the i- th iteration, the algorithm '
             'does the following: if i is odd, call f( 1) , f( 3) , . . . , f( '
             'n−2) ; if i is even, call f( 2) , f( 4) , . . . , f( n−1) . It '
             'can be proven that after a finite number of iterations the '
             'permutation will be sorted in increasing order. After how many '
             'iterations will this happen for the first time?',
  'input': 'Each test contains multiple test cases. The first line contains '
           'the number of test cases t ( 1≤t≤104) . Description of the test '
           'cases follows. The first line of each test case contains a single '
           'integer n ( 3≤n≤2⋅105−1; n is odd) — the length of the '
           'permutation. The second line contains n distinct integers a1, a2, '
           '. . . , an ( 1≤ai≤n) — the permutation itself. It is guaranteed '
           'that the sum of n over all test cases does not exceed 2⋅105−1.',
  'note': 'In the first test case, the permutation will be changing as '
          'follows: after the 1- st iteration: [ 2, 3, 1] ; after the 2- nd '
          'iteration: [ 2, 1, 3] ; after the 3- rd iteration: [ 1, 2, 3] . In '
          'the second test case, the permutation will be changing as follows: '
          'after the 1- st iteration: [ 4, 5, 1, 7, 2, 3, 6] ; after the 2- nd '
          'iteration: [ 4, 1, 5, 2, 7, 3, 6] ; after the 3- rd iteration: [ 1, '
          '4, 2, 5, 3, 7, 6] ; after the 4- th iteration: [ 1, 2, 4, 3, 5, 6, '
          '7] ; after the 5- th iteration: [ 1, 2, 3, 4, 5, 6, 7] . In the '
          'third test case, the permutation is already sorted and the answer '
          'is 0.',
  'output': 'For each test case print the number of iterations after which the '
            'permutation will become sorted in increasing order for the first '
            'time. If the given permutation is already sorted, print 0.',
  'title': 'Strange Sort',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1558/F'},
 {'history': "Polycarp doesn' t like integers that are divisible by 3 or end "
             'with the digit 3 in their decimal representation. Integers that '
             'meet both conditions are disliked by Polycarp, too. Polycarp '
             'starts to write out the positive ( greater than 0) integers '
             'which he likes: 1, 2, 4, 5, 7, 8, 10, 11, 14, 16, . . . . Output '
             'the k- th element of this sequence ( the elements are numbered '
             'from 1) .',
  'input': 'The first line contains one integer t ( 1≤t≤100) — the number of '
           'test cases. Then t test cases follow. Each test case consists of '
           'one line containing one integer k ( 1≤k≤1000) .',
  'note': ' ',
  'output': 'For each test case, output in a separate line one integer x — the '
            'k- th element of the sequence that was written out by Polycarp.',
  'title': 'Dislike of Threes',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1560/A'},
 {'history': 'Polycarp has found a table having an infinite number of rows and '
             'columns. The rows are numbered from 11, starting from the '
             'topmost one. The columns are numbered from 11, starting from the '
             "leftmost one. Initially, the table hasn' t been filled and "
             'Polycarp wants to fix it. He writes integers from 11 and so on '
             'to the table as follows. The figure shows the placement of the '
             'numbers from 11 to 1010. The following actions are denoted by '
             'the arrows. The leftmost topmost cell of the table is filled '
             'with the number 11. Then he writes in the table all positive '
             'integers beginning from 22 sequentially using the following '
             'algorithm. First, Polycarp selects the leftmost non- filled cell '
             'in the first row and fills it. Then, while the left neighbor of '
             'the last filled cell is filled, he goes down and fills the next '
             'cell. So he goes down until the last filled cell has a non- '
             'filled neighbor to the left ( look at the vertical arrow going '
             'down in the figure above) . After that, he fills the cells from '
             'the right to the left until he stops at the first column ( look '
             'at the horizontal row in the figure above) . Then Polycarp '
             'selects the leftmost non- filled cell in the first row, goes '
             'down, and so on. A friend of Polycarp has a favorite number kk. '
             'He wants to know which cell will contain the number. Help him to '
             'find the indices of the row and the column, such that the '
             'intersection of the row and the column is the cell containing '
             'the number kk.',
  'input': 'The first line contains one integer tt ( 1≤t≤1001≤t≤100) — the '
           'number of test cases. Then tt test cases follow. Each test case '
           'consists of one line containing one integer kk ( 1≤k≤1091≤k≤109) '
           'which location must be found.',
  'note': ' ',
  'output': 'For each test case, output in a separate line two integers rr and '
            'cc ( r, c≥1r, c≥1) separated by spaces — the indices of the row '
            'and the column containing the cell filled by the number kk, '
            'respectively.',
  'title': 'Infinity Table',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1560/C'},
 {'history': 'You are given an integer n. In 1 move, you can do one of the '
             "following actions: erase any digit of the number ( it' s "
             'acceptable that the number before the operation has exactly one '
             'digit and after the operation, it is " empty" ) ; add one digit '
             'to the right. The actions may be performed in any order any '
             'number of times. Note that if, after deleting some digit from a '
             'number, it will contain leading zeroes, they will not be '
             'deleted. E. g. if you delete from the number 301 the digit 3, '
             'the result is the number 01 ( not 1) . You need to perform the '
             'minimum number of actions to make the number any power of 2 ( i. '
             "e. there' s an integer k ( k≥0) such that the resulting number "
             'is equal to 2k) . The resulting number must not have leading '
             'zeroes. E. g. consider n= 1052. The answer is equal to 2. First, '
             "let' s add to the right one digit 4 ( the result will be 10524) "
             ". Then let' s erase the digit 5, so the result will be 1024 "
             'which is a power of 2. E. g. consider n= 8888. The answer is '
             "equal to 3. Let' s erase any of the digits 8 three times. The "
             'result will be 8 which is a power of 2.',
  'input': 'The first line contains one integer t ( 1≤t≤104) — the number of '
           'test cases. Then t test cases follow. Each test case consists of '
           'one line containing one integer n ( 1≤n≤109) .',
  'note': 'The answer for the first test case was considered above. The answer '
          'for the second test case was considered above. In the third test '
          "case, it' s enough to add to the right the digit 4 — the number 6 "
          "will turn into 64. In the fourth test case, let' s add to the right "
          'the digit 8 and then erase 7 and 5 — the taken number will turn '
          'into 8. The numbers of the fifth and the sixth test cases are '
          "already powers of two so there' s no need to make any move. In the "
          'seventh test case, you can delete first of all the digit 3 ( the '
          'result is 01) and then the digit 0 ( the result is 1) .',
  'output': 'For each test case, output in a separate line one integer m — the '
            'minimum number of moves to transform the number into any power of '
            '2.',
  'title': 'Make a Power of Two',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1560/D'},
 {'history': 'Polycarp has a string s. Polycarp performs the following actions '
             'until the string s is empty ( t is initially an empty string) : '
             'he adds to the right to the string t the string s, i. e. he does '
             't= t+ s, where t+ s is a concatenation of the strings t and s; '
             'he selects an arbitrary letter of s and removes from s all its '
             'occurrences ( the selected letter must occur in the string s at '
             'the moment of performing this action) . Polycarp performs this '
             'sequence of actions strictly in this order. Note that after '
             'Polycarp finishes the actions, the string s will be empty and '
             'the string t will be equal to some value ( that is undefined and '
             'depends on the order of removing) . E. g. consider s= " abacaba" '
             'so the actions may be performed as follows: t= " abacaba" , the '
             'letter \' b\' is selected, then s= " aacaa" ; t= " abacabaaacaa" '
             ', the letter \' a\' is selected, then s= " c" ; t= " '
             'abacabaaacaac" , the letter \' c\' is selected, then s= " " ( '
             'the empty string) . You need to restore the initial value of the '
             'string s using only the final value of t and find the order of '
             'removing letters from s.',
  'input': 'The first line contains one integer T ( 1≤T≤104) — the number of '
           'test cases. Then T test cases follow. Each test case contains one '
           'string t consisting of lowercase letters of the Latin alphabet. '
           "The length of t doesn' t exceed 5⋅105. The sum of lengths of all "
           "strings t in the test cases doesn' t exceed 5⋅105.",
  'note': 'The first test case is considered in the statement.',
  'output': 'For each test case output in a separate line: −1, if the answer '
            "doesn' t exist; two strings separated by spaces. The first one "
            'must contain a possible initial value of s. The second one must '
            "contain a sequence of letters — it' s in what order one needs to "
            'remove letters from s to make the string t. E. g. if the string " '
            'bac" is outputted, then, first, all occurrences of the letter \' '
            "b' were deleted, then all occurrences of ' a' , and then, "
            "finally, all occurrences of ' c' . If there are multiple "
            'solutions, print any one.',
  'title': 'Polycarp and String Transformation',
  'topics': ['implementation', 'sortings', 'strings'],
  'url': 'https://codeforces.com/problemset/problem/1560/E'},
 {'history': 'You have a permutation: an array a= [ a1, a2, . . . , an] of '
             'distinct integers from 1 to n. The length of the permutation n '
             'is odd. Consider the following algorithm of sorting the '
             'permutation in increasing order. A helper procedure of the '
             'algorithm, f( i) , takes a single argument i ( 1≤i≤n−1) and does '
             'the following. If ai> ai+ 1, the values of ai and ai+ 1 are '
             "exchanged. Otherwise, the permutation doesn' t change. The "
             'algorithm consists of iterations, numbered with consecutive '
             'integers starting with 1. On the i- th iteration, the algorithm '
             'does the following: if i is odd, call f( 1) , f( 3) , . . . , f( '
             'n−2) ; if i is even, call f( 2) , f( 4) , . . . , f( n−1) . It '
             'can be proven that after a finite number of iterations the '
             'permutation will be sorted in increasing order. After how many '
             'iterations will this happen for the first time?',
  'input': 'Each test contains multiple test cases. The first line contains '
           'the number of test cases t ( 1≤t≤100) . Description of the test '
           'cases follows. The first line of each test case contains a single '
           'integer n ( 3≤n≤999; n is odd) — the length of the permutation. '
           'The second line contains n distinct integers a1, a2, . . . , an ( '
           '1≤ai≤n) — the permutation itself. It is guaranteed that the sum of '
           'n over all test cases does not exceed 999.',
  'note': 'In the first test case, the permutation will be changing as '
          'follows: after the 1- st iteration: [ 2, 3, 1] ; after the 2- nd '
          'iteration: [ 2, 1, 3] ; after the 3- rd iteration: [ 1, 2, 3] . In '
          'the second test case, the permutation will be changing as follows: '
          'after the 1- st iteration: [ 4, 5, 1, 7, 2, 3, 6] ; after the 2- nd '
          'iteration: [ 4, 1, 5, 2, 7, 3, 6] ; after the 3- rd iteration: [ 1, '
          '4, 2, 5, 3, 7, 6] ; after the 4- th iteration: [ 1, 2, 4, 3, 5, 6, '
          '7] ; after the 5- th iteration: [ 1, 2, 3, 4, 5, 6, 7] . In the '
          'third test case, the permutation is already sorted and the answer '
          'is 0.',
  'output': 'For each test case print the number of iterations after which the '
            'permutation will become sorted in increasing order for the first '
            'time. If the given permutation is already sorted, print 0.',
  'title': 'Simply Strange Sort',
  'topics': ['implementation', 'sortings'],
  'url': 'https://codeforces.com/problemset/problem/1561/A'},
 {'history': 'In a certain video game, the player controls a hero '
             'characterized by a single integer value: power. The hero will '
             'have to beat monsters that are also characterized by a single '
             'integer value: armor. On the current level, the hero is facing n '
             'caves. To pass the level, the hero must enter all the caves in '
             'some order, each cave exactly once, and exit every cave safe and '
             'sound. When the hero enters cave i, he will have to fight ki '
             'monsters in a row: first a monster with armor ai, 1, then a '
             'monster with armor ai, 2 and so on, finally, a monster with '
             'armor ai, ki. The hero can beat a monster if and only if the '
             "hero' s power is strictly greater than the monster' s armor. If "
             "the hero can' t beat the monster he' s fighting, the game ends "
             'and the player loses. Note that once the hero enters a cave, he '
             "can' t exit it before he fights all the monsters in it, strictly "
             'in the given order. Each time the hero beats a monster, the '
             "hero' s power increases by 1. Find the smallest possible power "
             'the hero must start the level with to be able to enter all the '
             'caves in some order and beat all the monsters.',
  'input': 'Each test contains multiple test cases. The first line contains '
           'the number of test cases t ( 1≤t≤105) . Description of the test '
           'cases follows. The first line of each test case contains a single '
           'integer n ( 1≤n≤105) — the number of caves. The i- th of the next '
           'n lines contains an integer ki ( 1≤ki≤105) — the number of '
           'monsters in the i- th cave, followed by ki integers ai, 1, ai, 2, '
           '. . . , ai, ki ( 1≤ai, j≤109) — armor levels of the monsters in '
           'cave i in order the hero has to fight them. It is guaranteed that '
           'the sum of ki over all test cases does not exceed 105.',
  'note': 'In the first test case, the hero has to beat a single monster with '
          "armor 42, it' s enough to have power 43 to achieve that. In the "
          'second test case, the hero can pass the level with initial power 13 '
          'as follows: enter cave 2: beat a monster with armor 12, power '
          'increases to 14; beat a monster with armor 11, power increases to '
          '15; enter cave 1: beat a monster with armor 10, power increases to '
          '16; beat a monster with armor 15, power increases to 17; beat a '
          'monster with armor 8, power increases to 18.',
  'output': 'For each test case print a single integer — the smallest possible '
            'power the hero must start the level with to be able to enter all '
            'the caves in some order and beat all the monsters.',
  'title': 'Deep Down Below',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1561/C'},
 {'history': 'During the hypnosis session, Nicholas suddenly remembered a '
             "positive integer n, which doesn' t contain zeros in decimal "
             'notation. Soon, when he returned home, he got curious: what is '
             'the maximum number of digits that can be removed from the number '
             'so that the number becomes not prime, that is, either composite '
             'or equal to one? For some numbers doing so is impossible: for '
             "example, for number 53 it' s impossible to delete some of its "
             'digits to obtain a not prime integer. However, for all n in the '
             "test cases of this problem, it' s guaranteed that it' s possible "
             'to delete some of their digits to obtain a not prime number. '
             'Note that you cannot remove all the digits from the number. A '
             'prime number is a number that has no divisors except one and '
             'itself. A composite is a number that has more than two divisors. '
             '1 is neither a prime nor a composite number.',
  'input': 'Each test contains multiple test cases. The first line contains '
           'one positive integer t ( 1≤t≤103) , denoting the number of test '
           'cases. Description of the test cases follows. The first line of '
           'each test case contains one positive integer k ( 1≤k≤50) — the '
           'number of digits in the number. The second line of each test case '
           "contains a positive integer n, which doesn' t contain zeros in "
           'decimal notation ( 10k−1≤n< 10k) . It is guaranteed that it is '
           'always possible to remove less than k digits to make the number '
           'not prime. It is guaranteed that the sum of k over all test cases '
           'does not exceed 104.',
  'note': "In the first test case, you can' t delete 2 digits from the number "
          '237, as all the numbers 2, 3, and 7 are prime. However, you can '
          'delete 1 digit, obtaining a number 27= 33. In the second test case, '
          'you can delete all digits except one, as 4= 22 is a composite '
          'number.',
  'output': 'For every test case, print two numbers in two lines. In the first '
            'line print the number of digits, that you have left in the '
            'number. In the second line print the digits left after all '
            'delitions. If there are multiple solutions, print any.',
  'title': 'Scenes From a Memory',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1562/B'},
 {'history': 'Morning desert sun horizonRise above the sands of time. . . '
             'Fates Warning, " Exodus" After crossing the Windswept Wastes, '
             'Ori has finally reached the Windtorn Ruins to find the Heart of '
             'the Forest! However, the ancient repository containing this '
             'priceless Willow light did not want to open! Ori was taken '
             'aback, but the Voice of the Forest explained to him that the '
             'cunning Gorleks had decided to add protection to the repository. '
             'The Gorleks were very fond of the " string expansion" operation. '
             'They were also very fond of increasing subsequences. Suppose a '
             'string s1s2s3. . . sn is given. Then its " expansion" is defined '
             'as the sequence of strings s1, s1s2, . . . , s1s2. . . sn, s2, '
             's2s3, . . . , s2s3. . . sn, s3, s3s4, . . . , sn−1sn, sn. For '
             'example, the " expansion" the string \' abcd\' will be the '
             "following sequence of strings: ' a' , ' ab' , ' abc' , ' abcd' , "
             "' b' , ' bc' , ' bcd' , ' c' , ' cd' , ' d' . To open the "
             'ancient repository, Ori must find the size of the largest '
             'increasing subsequence of the " expansion" of the string s. '
             'Here, strings are compared lexicographically. Help Ori with this '
             'task! A string a is lexicographically smaller than a string b if '
             'and only if one of the following holds: a is a prefix of b, but '
             'a= ̸b; in the first position where a and b differ, the string a '
             'has a letter that appears earlier in the alphabet than the '
             'corresponding letter in b.',
  'input': 'Each test contains multiple test cases. The first line contains '
           'one positive integer t ( 1≤t≤103) , denoting the number of test '
           'cases. Description of the test cases follows. The first line of '
           'each test case contains one positive integer n ( 1≤n≤5000) — '
           'length of the string. The second line of each test case contains a '
           'non- empty string of length n, which consists of lowercase latin '
           'letters. It is guaranteed that the sum of n over all test cases '
           'does not exceed 104.',
  'note': 'In first test case the " expansion" of the string is: \' a\' , \' '
          "ac' , ' acb' , ' acba' , ' acbac' , ' c' , ' cb' , ' cba' , ' cbac' "
          ", ' b' , ' ba' , ' bac' , ' a' , ' ac' , ' c' . The answer can be, "
          "for example, ' a' , ' ac' , ' acb' , ' acba' , ' acbac' , ' b' , ' "
          "ba' , ' bac' , ' c' .",
  'output': 'For every test case print one non- negative integer — the answer '
            'to the problem.',
  'title': 'Rescue Niwen!',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1562/E'},
 {'history': 'It is the easy version of the problem. The only difference is '
             'that in this version n= 1. In the cinema seats can be '
             'represented as the table with n rows and m columns. The rows are '
             'numbered with integers from 1 to n. The seats in each row are '
             'numbered with consecutive integers from left to right: in the k- '
             'th row from m( k−1) + 1 to mk for all rows 1≤k≤n. 12⋯m−1mm+ 1m+ '
             '2⋯2m−12m2m+ 12m+ 2⋯3m−13m⋮⋮⋱⋮⋮m( n−1) + 1m( n−1) + 2⋯nm−1nm The '
             'table with seats indices There are nm people who want to go to '
             'the cinema to watch a new film. They are numbered with integers '
             'from 1 to nm. You should give exactly one seat to each person. '
             'It is known, that in this cinema as lower seat index you have as '
             'better you can see everything happening on the screen. i- th '
             "person has the level of sight ai. Let' s define si as the seat "
             'index, that will be given to i- th person. You want to give '
             'better places for people with lower sight levels, so for any two '
             'people i, j such that ai< aj it should be satisfied that si< sj. '
             'After you will give seats to all people they will start coming '
             'to their seats. In the order from 1 to nm, each person will '
             'enter the hall and sit in their seat. To get to their place, the '
             "person will go to their seat' s row and start moving from the "
             'first seat in this row to theirs from left to right. While '
             'moving some places will be free, some will be occupied with '
             'people already seated. The inconvenience of the person is equal '
             "to the number of occupied seats he or she will go through. Let' "
             's consider an example: m= 5, the person has the seat 4 in the '
             'first row, the seats 1, 3, 5 in the first row are already '
             'occupied, the seats 2 and 4 are free. The inconvenience of this '
             'person will be 2, because he will go through occupied seats 1 '
             'and 3. Find the minimal total inconvenience ( the sum of '
             'inconveniences of all people) , that is possible to have by '
             'giving places for all people ( all conditions should be '
             'satisfied) .',
  'input': 'The input consists of multiple test cases. The first line contains '
           'a single integer t ( 1≤t≤100) — the number of test cases. '
           'Description of the test cases follows. The first line of each test '
           'case contains two integers n and m ( n= 1, 1≤m≤300) — the number '
           'of rows and places in each row respectively. The second line of '
           'each test case contains n⋅m integers a1, a2, . . . , an⋅m ( '
           "1≤ai≤109) , where ai is the sight level of i- th person. It' s "
           'guaranteed that the sum of n⋅m over all test cases does not exceed '
           '105.',
  'note': 'In the first test case, there is a single way to arrange people, '
          'because all sight levels are distinct. The first person will sit on '
          'the first seat, the second person will sit on the second place, the '
          'third person will sit on the third place. So inconvenience of the '
          'first person will be 0, inconvenience of the second person will be '
          '1 and inconvenience of the third person will be 2. The total '
          'inconvenience is 0+ 1+ 2= 3. In the second test case, people should '
          'sit as follows: s1= 2, s2= 1, s3= 5, s4= 4, s5= 3. The total '
          'inconvenience will be 6.',
  'output': 'For each test case print a single integer — the minimal total '
            'inconvenience that can be achieved.',
  'title': 'Seating Arrangements (easy version) ',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1566/D1'},
 {'history': 'It is the hard version of the problem. The only difference is '
             'that in this version 1≤n≤300. In the cinema seats can be '
             'represented as the table with n rows and m columns. The rows are '
             'numbered with integers from 1 to n. The seats in each row are '
             'numbered with consecutive integers from left to right: in the k- '
             'th row from m( k−1) + 1 to mk for all rows 1≤k≤n. 12⋯m−1mm+ 1m+ '
             '2⋯2m−12m2m+ 12m+ 2⋯3m−13m⋮⋮⋱⋮⋮m( n−1) + 1m( n−1) + 2⋯nm−1nm The '
             'table with seats indices There are nm people who want to go to '
             'the cinema to watch a new film. They are numbered with integers '
             'from 1 to nm. You should give exactly one seat to each person. '
             'It is known, that in this cinema as lower seat index you have as '
             'better you can see everything happening on the screen. i- th '
             "person has the level of sight ai. Let' s define si as the seat "
             'index, that will be given to i- th person. You want to give '
             'better places for people with lower sight levels, so for any two '
             'people i, j such that ai< aj it should be satisfied that si< sj. '
             'After you will give seats to all people they will start coming '
             'to their seats. In the order from 1 to nm, each person will '
             'enter the hall and sit in their seat. To get to their place, the '
             "person will go to their seat' s row and start moving from the "
             'first seat in this row to theirs from left to right. While '
             'moving some places will be free, some will be occupied with '
             'people already seated. The inconvenience of the person is equal '
             "to the number of occupied seats he or she will go through. Let' "
             's consider an example: m= 5, the person has the seat 4 in the '
             'first row, the seats 1, 3, 5 in the first row are already '
             'occupied, the seats 2 and 4 are free. The inconvenience of this '
             'person will be 2, because he will go through occupied seats 1 '
             'and 3. Find the minimal total inconvenience ( the sum of '
             'inconveniences of all people) , that is possible to have by '
             'giving places for all people ( all conditions should be '
             'satisfied) .',
  'input': 'The input consists of multiple test cases. The first line contains '
           'a single integer t ( 1≤t≤100) — the number of test cases. '
           'Description of the test cases follows. The first line of each test '
           'case contains two integers n and m ( 1≤n, m≤300) — the number of '
           'rows and places in each row respectively. The second line of each '
           'test case contains n⋅m integers a1, a2, . . . , an⋅m ( 1≤ai≤109) , '
           "where ai is the sight level of i- th person. It' s guaranteed that "
           'the sum of n⋅m over all test cases does not exceed 105.',
  'note': 'In the first test case, there is a single way to give seats: the '
          'first person sits in the first place and the second person — in the '
          'second. The total inconvenience is 1. In the second test case the '
          'optimal seating looks like this: In the third test case the optimal '
          "seating looks like this: The number in a cell is the person' s "
          'index that sits on this place.',
  'output': 'For each test case print a single integer — the minimal total '
            'inconvenience that can be achieved.',
  'title': 'Seating Arrangements (hard version) ',
  'topics': ['implementation', 'sortings'],
  'url': 'https://codeforces.com/problemset/problem/1566/D2'},
 {'history': 'There are n points and m segments on the coordinate line. The '
             'initial coordinate of the i- th point is ai. The endpoints of '
             'the j- th segment are lj and rj — left and right endpoints, '
             'respectively. You can move the points. In one move you can move '
             'any point from its current coordinate x to the coordinate x−1 or '
             'the coordinate x+ 1. The cost of this move is 1. You should move '
             'the points in such a way that each segment is visited by at '
             'least one point. A point visits the segment [ l, r] if there is '
             'a moment when its coordinate was on the segment [ l, r] ( '
             'including endpoints) . You should find the minimal possible '
             'total cost of all moves such that all segments are visited.',
  'input': 'The input consists of multiple test cases. The first line contains '
           'a single integer t ( 1≤t≤104) — the number of test cases. '
           'Description of the test cases follows. The first line of each test '
           'case contains two integers n and m ( 1≤n, m≤2⋅105) — the number of '
           'points and segments respectively. The next line contains n '
           'distinct integers a1, a2, . . . , an ( −109≤ai≤109) — the initial '
           'coordinates of the points. Each of the next m lines contains two '
           'integers lj, rj ( −109≤lj≤rj≤109) — the left and the right '
           "endpoints of the j- th segment. It' s guaranteed that the sum of n "
           'and the sum of m over all test cases does not exceed 2⋅105.',
  'note': 'In the first test case the points can be moved as follows: Move the '
          'second point from the coordinate 6 to the coordinate 5. Move the '
          'third point from the coordinate 14 to the coordinate 13. Move the '
          'fourth point from the coordinate 18 to the coordinate 17. Move the '
          'third point from the coordinate 13 to the coordinate 12. Move the '
          'fourth point from the coordinate 17 to the coordinate 16. The total '
          'cost of moves is 5. It is easy to see, that all segments are '
          'visited by these movements. For example, the tenth segment ( [ 7, '
          '13] ) is visited after the second move by the third point. Here is '
          'the image that describes the first test case:',
  'output': 'For each test case print a single integer — the minimal total '
            'cost of all moves such that all segments are visited.',
  'title': 'Points Movement',
  'topics': ['implementation', 'sortings'],
  'url': 'https://codeforces.com/problemset/problem/1566/F'},
 {'history': 'You are given an undirected weighted graph, consisting of n '
             'vertices and m edges. Some queries happen with this graph: '
             'Delete an existing edge from the graph. Add a non- existing edge '
             'to the graph. At the beginning and after each query, you should '
             'find four different vertices a, b, c, d such that there exists a '
             'path between a and b, there exists a path between c and d, and '
             'the sum of lengths of two shortest paths from a to b and from c '
             'to d is minimal. The answer to the query is the sum of the '
             'lengths of these two shortest paths. The length of the path is '
             'equal to the sum of weights of edges in this path.',
  'input': 'The first line contains two integers n and m ( 4≤n, m≤105) — the '
           'number of vertices and edges in the graph respectively. Each of '
           'the next m lines contain three integers v, u, w ( 1≤v, u≤n, v= ̸u, '
           '1≤w≤109) — this triple means that there is an edge between '
           'vertices v and u with weight w. The next line contains a single '
           'integer q ( 0≤q≤105) — the number of queries. The next q lines '
           'contain the queries of two types: 0 v u — this query means '
           'deleting an edge between v and u ( 1≤v, u≤n, v= ̸u) . It is '
           'guaranteed that such edge exists in the graph. 1 v u w — this '
           'query means adding an edge between vertices v and u with weight w '
           '( 1≤v, u≤n, v= ̸u, 1≤w≤109) . It is guaranteed that there was no '
           'such edge in the graph. It is guaranteed that the initial graph '
           'does not contain multiple edges. At the beginning and after each '
           "query, the graph doesn' t need to be connected. It is guaranteed "
           'that at each moment the number of edges will be at least 4. It can '
           'be proven, that at each moment there exist some four vertices a, '
           'b, c, d such that there exists a path between vertices a and b, '
           'and there exists a path between vertices c and d.',
  'note': 'Before the queries you can choose vertices ( a, b) = ( 3, 2) and ( '
          'c, d) = ( 1, 4) . The sum of lengths of two shortest paths is 3+ 1= '
          '4. After the first query you can choose vertices ( a, b) = ( 2, 5) '
          'and ( c, d) = ( 1, 4) . The sum of lengths of two shortest paths is '
          '2+ 1= 3. After the second query you can choose vertices ( a, b) = ( '
          '3, 4) and ( c, d) = ( 2, 5) . The sum of lengths of two shortest '
          'paths is 1+ 2= 3. After the third query, you can choose vertices ( '
          'a, b) = ( 2, 6) and ( c, d) = ( 4, 5) . The sum of lengths of two '
          'shortest paths is 4+ 3= 7. After the last query you can choose '
          'vertices ( a, b) = ( 1, 6) and ( c, d) = ( 2, 5) . The sum of '
          'lengths of two shortest paths is 3+ 2= 5.',
  'output': 'Print q+ 1 integers — the minimal sum of lengths of shortest '
            'paths between chosen pairs of vertices before the queries and '
            'after each of them.',
  'title': 'Four Vertices',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1566/G'},
 {'history': 'Alice has a grid with 2 rows and n columns. She fully covers the '
             'grid using n dominoes of size 1×2 — Alice may place them '
             'vertically or horizontally, and each cell should be covered by '
             'exactly one domino. Now, she decided to show one row of the grid '
             'to Bob. Help Bob and figure out what the other row of the grid '
             'looks like!',
  'input': 'The input consists of multiple test cases. The first line contains '
           'an integer t ( 1≤t≤5000) — the number of test cases. The '
           'description of the test cases follows. The first line of each test '
           'case contains an integer n ( 1≤n≤100) — the width of the grid. The '
           'second line of each test case contains a string s consisting of n '
           'characters, each of which is either L, R, U, or D, representing '
           'the left, right, top, or bottom half of a domino, respectively ( '
           'see notes for better understanding) . This string represents one '
           'of the rows of the grid. Additional constraint on the input: each '
           'input corresponds to at least one valid tiling.',
  'note': 'In the first test case, Alice shows Bob the top row, the whole grid '
          'may look like: In the second test case, Alice shows Bob the bottom '
          'row, the whole grid may look like: In the third test case, Alice '
          'shows Bob the bottom row, the whole grid may look like: In the '
          'fourth test case, Alice shows Bob the top row, the whole grid may '
          'look like:',
  'output': 'For each test case, output one string — the other row of the '
            'grid, using the same format as the input string. If there are '
            'multiple answers, print any.',
  'title': 'Domino Disaster',
  'topics': ['implementation', 'strings'],
  'url': 'https://codeforces.com/problemset/problem/1567/A'},
 {'history': 'On the board, Bob wrote n positive integers in base 10 with sum '
             's ( i. e. in decimal numeral system) . Alice sees the board, but '
             'accidentally interprets the numbers on the board as base- 11 '
             'integers and adds them up ( in base 11) . What numbers should '
             "Bob write on the board, so Alice' s sum is as large as possible?",
  'input': 'The input consists of multiple test cases. The first line contains '
           'an integer t ( 1≤t≤100) — the number of test cases. The '
           'description of the test cases follows. The only line of each test '
           'case contains two integers s and n ( 1≤s≤109; 1≤n≤min( 100, s) ) — '
           'the sum and amount of numbers on the board, respectively. Numbers '
           's and n are given in decimal notation ( base 10) .',
  'note': "In the first test case, 7010+ 2710= 9710, and Alice' s sum is 7011+ "
          '2711= 9711= 9⋅11+ 7= 10610. ( Here xb represents the number x in '
          'base b. ) It can be shown that it is impossible for Alice to get a '
          'larger sum than 10610. In the second test case, Bob can only write '
          'a single number on the board, so he must write 17. In the third '
          "test case, 310+ 410+ 10010+ 410= 11110, and Alice' s sum is 311+ "
          '411+ 10011+ 411= 11011= 1⋅112+ 1⋅11= 13210. It can be shown that it '
          'is impossible for Alice to get a larger sum than 13210.',
  'output': 'For each test case, output n positive integers — the numbers Bob '
            "should write on the board, so Alice' s sum is as large as "
            'possible. If there are multiple answers, print any of them.',
  'title': 'Expression Evaluation Error',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1567/D'},
 {'history': 'Alice has an empty grid with n rows and m columns. Some of the '
             'cells are marked, and no marked cells are adjacent to the edge '
             'of the grid. ( Two squares are adjacent if they share a side. ) '
             'Alice wants to fill each cell with a number such that the '
             'following statements are true: every unmarked cell contains '
             'either the number 1 or 4; every marked cell contains the sum of '
             'the numbers in all unmarked cells adjacent to it ( if a marked '
             'cell is not adjacent to any unmarked cell, this sum is 0) ; '
             "every marked cell contains a multiple of 5. Alice couldn' t "
             'figure it out, so she asks Bob to help her. Help Bob find any '
             'such grid, or state that no such grid exists.',
  'input': 'The first line of input contains two integers n and m ( 1≤n, '
           'm≤500) — the number of rows and the number of columns in the grid, '
           'respectively. Then n lines follow, each containing m characters. '
           "Each of these characters is either ' . ' or ' X' — an unmarked and "
           'a marked cell, respectively. No marked cells are adjacent to the '
           'edge of the grid.',
  'note': 'It can be shown that no such grid exists for the second test.',
  'output': 'Output " \' NO" if no suitable grid exists. Otherwise, output " '
            '\' YES" \' . Then output n lines of m space- separated integers — '
            'the integers in the grid.',
  'title': 'One-Four Overload',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1567/F'},
 {'history': 'You are given a string s, consisting of n letters, each letter '
             "is either ' a' or ' b' . The letters in the string are numbered "
             'from 1 to n. s[ l; r] is a continuous substring of letters from '
             'index l to r of the string inclusive. A string is called '
             "balanced if the number of letters ' a' in it is equal to the "
             'number of letters \' b\' . For example, strings " baba" and " '
             'aabbab" are balanced and strings " aaab" and " b" are not. Find '
             'any non- empty balanced substring s[ l; r] of string s. Print '
             'its l and r ( 1≤l≤r≤n) . If there is no such substring, then '
             'print −1 −1.',
  'input': 'The first line contains a single integer t ( 1≤t≤1000) — the '
           'number of testcases. Then the descriptions of t testcases follow. '
           'The first line of the testcase contains a single integer n ( '
           '1≤n≤50) — the length of the string. The second line of the '
           'testcase contains a string s, consisting of n letters, each letter '
           "is either ' a' or ' b' .",
  'note': 'In the first testcase there are no non- empty balanced subtrings. '
          'In the second and third testcases there are multiple balanced '
          'substrings, including the entire string " abbaba" and substring " '
          'baba" .',
  'output': 'For each testcase print two integers. If there exists a non- '
            'empty balanced substring s[ l; r] , then print l r ( 1≤l≤r≤n) . '
            'Otherwise, print −1 −1.',
  'title': 'Balanced Substring',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1569/A'},
 {'history': 'There is a city that can be represented as a square grid with '
             'corner points in ( 0, 0) and ( 106, 106) . The city has n '
             'vertical and m horizontal streets that goes across the whole '
             'city, i. e. the i- th vertical streets goes from ( xi, 0) to ( '
             'xi, 106) and the j- th horizontal street goes from ( 0, yj) to ( '
             '106, yj) . All streets are bidirectional. Borders of the city '
             'are streets as well. There are k persons staying on the streets: '
             'the p- th person at point ( xp, yp) ( so either xp equal to some '
             "xi or yp equal to some yj, or both) . Let' s say that a pair of "
             'persons form an inconvenient pair if the shortest path from one '
             'person to another going only by streets is strictly greater than '
             'the Manhattan distance between them. Calculate the number of '
             'inconvenient pairs of persons ( pairs ( x, y) and ( y, x) are '
             "the same pair) . Let' s recall that Manhattan distance between "
             'points ( x1, y1) and ( x2, y2) is | x1−x2| + | y1−y2| .',
  'input': 'The first line contains a single integer t ( 1≤t≤1000) — the '
           'number of test cases. The first line of each test case contains '
           'three integers n, m and k ( 2≤n, m≤2⋅105; 2≤k≤3⋅105) — the number '
           'of vertical and horizontal streets and the number of persons. The '
           'second line of each test case contains n integers x1, x2, . . . , '
           'xn ( 0= x1< x2< ⋯< xn−1< xn= 106) — the x- coordinates of vertical '
           'streets. The third line contains m integers y1, y2, . . . , ym ( '
           '0= y1< y2< ⋯< ym−1< ym= 106) — the y- coordinates of horizontal '
           'streets. Next k lines contains description of people. The p- th '
           'line contains two integers xp and yp ( 0≤xp, yp≤106; xp∈x1, . . . '
           ', xn or yp∈y1, . . . , ym) — the coordinates of the p- th person. '
           "All points are distinct. It guaranteed that sum of n doesn' t "
           "exceed 2⋅105, sum of m doesn' t exceed 2⋅105 and sum of k doesn' t "
           'exceed 3⋅105.',
  'note': 'The second test case is pictured below: For example, points 3 and 4 '
          'form an inconvenient pair, since the shortest path between them ( '
          'shown red and equal to 7) is greater than its Manhattan distance ( '
          'equal to 5) . Points 3 and 5 also form an inconvenient pair: the '
          'shortest path equal to 1000001 ( shown green) is greater than the '
          "Manhattan distance equal to 999999. But points 5 and 9 don' t form "
          'an inconvenient pair, since the shortest path ( shown purple) is '
          'equal to its Manhattan distance.',
  'output': 'For each test case, print the number of inconvenient pairs.',
  'title': 'Inconvenient Pairs',
  'topics': ['implementation', 'sortings'],
  'url': 'https://codeforces.com/problemset/problem/1569/D'},
 {'history': '2k2k teams participate in a playoff tournament. The tournament '
             'consists of 2k−12k−1 games. They are held as follows: first of '
             'all, the teams are split into pairs: team 11 plays against team '
             '22, team 33 plays against team 44 ( exactly in this order) , and '
             'so on ( so, 2k−12k−1 games are played in that phase) . When a '
             'team loses a game, it is eliminated, and each game results in '
             'elimination of one team ( there are no ties) . After that, only '
             '2k−12k−1 teams remain. If only one team remains, it is declared '
             'the champion; otherwise, 2k−22k−2 games are played: in the first '
             'one of them, the winner of the game " 11 vs 22" plays against '
             'the winner of the game " 33 vs 44" , then the winner of the game '
             '" 55 vs 66" plays against the winner of the game " 77 vs 88" , '
             'and so on. This process repeats until only one team remains. '
             'After the tournament ends, the teams are assigned places '
             'according to the tournament phase when they were eliminated. In '
             'particular: the winner of the tournament gets place 11; the team '
             'eliminated in the finals gets place 22; both teams eliminated in '
             'the semifinals get place 33; all teams eliminated in the '
             'quarterfinals get place 55; all teams eliminated in the 1/ 8 '
             'finals get place 99, and so on. For example, this picture '
             'describes one of the possible ways the tournament can go with k= '
             '3k= 3, and the resulting places of the teams: After a tournament '
             'which was conducted by the aforementioned rules ended, its '
             'results were encoded in the following way. Let pipi be the place '
             'of the ii- th team in the tournament. The hash value of the '
             'tournament hh is calculated as h= ( ∑i= 12ki⋅Api) mod998244353h= '
             '( ∑i= 12ki⋅Api) mod998244353, where AA is some given integer. '
             'Unfortunately, due to a system crash, almost all tournament- '
             'related data was lost. The only pieces of data that remain are '
             'the values of kk, AA and hh. You are asked to restore the '
             'resulting placing of the teams in the tournament, if it is '
             'possible at all.',
  'input': 'The only line contains three integers kk, AA and hh ( 1≤k≤51≤k≤5; '
           '100≤A≤108100≤A≤108; 0≤h≤9982443520≤h≤998244352) .',
  'note': 'The tournament for the first example is described in the statement. '
          'For the third example, the placing [ 1, 2, 3, 3] [ 1, 2, 3, 3] ( '
          'team 11 gets place 11, team 22 gets place 22, teams 33 and 44 get '
          'place 33) could result in a hash value of 70201007020100 with A= '
          '100A= 100, but no tournament can result in such placing since teams '
          '11 and 22 play against each other in the semifinals, so they cannot '
          'get two first places.',
  'output': 'If it is impossible to find any placing of the teams that is '
            'consistent with the data you have, print one integer −1−1. '
            'Otherwise, print 2k2k integers, where ii- th integer should be '
            'equal to pipi ( the place of the ii- th team) . Note that your '
            'answer should be consistent with one of the possible ways the '
            'tournament could go, and note that the initial structure of the '
            'tournament is fixed ( for example, teams 11 and 22 always play in '
            'the first phase of the tournament against each other) . If there '
            'are multiple ways to restore the places of the teams which are '
            'consistent with the data you have, print any of them.',
  'title': 'Playoff Restoration',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1569/E'},
 {'history': "Let' s say that two strings s and t rhyme if both strings have "
             'length at least k, and their last k characters are equal. For '
             'example, if k= 3, the strings abcd and cebcd rhyme, the strings '
             "ab and ab don' t rhyme, the strings aaaa and aaaaa rhyme, the "
             "strings abcd and abce don' t rhyme. You have n pairs of strings "
             '( si, ti) , and for each pair of strings you know, should they '
             'rhyme or should not. Find all possible non- negative integer '
             'values for k such that pairs that have to rhyme, rhyme and pairs '
             "that must not rhyme, don' t rhyme.",
  'input': 'Each test contains multiple test cases. The first line contains '
           'the number of test cases t ( 1≤t≤1000) . Description of the test '
           'cases follows. The first line of each test case contains a single '
           'integer n ( 1≤n≤105) — the number of string pairs. Next n lines '
           'contains descriptions of pairs — one per line. The i- th line '
           'contains space- separated strings si and ti and marker ri. Strings '
           'are non- empty, consist of lowercase Latin letters and each have '
           'length at most 2⋅105. The marker ri equals to 1 if strings have to '
           "rhyme, or 0 if they must not rhyme. It' s guaranteed that for each "
           'test case there is at least one pair with ri equal to 1 and that '
           "the total length of all strings over all test cases doesn' t "
           'exceed 4⋅105.',
  'note': 'In the first test case, if k is at least 1 then kotlin and heroes '
          "don' t rhyme. In the second test case, for k= 2 join and kotlin "
          "rhyme, and episode and eight don' t rhyme.",
  'output': 'For each test case, firstly print integer m — the number of '
            'possible non- negative integer values of k such that pairs that '
            "have to rhyme, rhyme and pairs that must not rhyme, don' t rhyme. "
            'Next, print all these values of k ( without repetitions) . You '
            'can print them in any order.',
  'title': 'Rhyme',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1571/C'},
 {'history': 'Kotlin Heroes competition is nearing completion. This time nn '
             'programmers took part in the competition. Now organizers are '
             'thinking how to entertain spectators as well. One of the '
             'possibilities is holding sweepstakes. So for now they decided to '
             'conduct a survey among spectators. In total, organizers asked mm '
             'viewers two questions: Who will take the first place? Who will '
             'take the last place? After receiving answers, organizers ranked '
             'all spectators based on the number of programmers they guessed '
             'right. Suppose, there are c2c2 viewers who guessed right both '
             'first and last place, c1c1 viewers who guessed either first or '
             "last place right and c0c0 viewers who didn' t guess at all. All "
             'c2c2 viewers will get rank 11, all viewers with one right answer '
             'will get rank c2+ 1c2+ 1 and all remaining viewers — rank c2+ '
             'c1+ 1c2+ c1+ 1. You were one of the interviewed spectators. '
             'Also, as one of the organizers, you have access to survey '
             'results, but not to competition results. Calculate, what is the '
             "worst rank you can possibly get according to organizers' ranking "
             'system?',
  'input': 'The first line contains two integers nn and mm ( 2≤n≤10002≤n≤1000; '
           '1≤m≤2⋅1051≤m≤2⋅105) — the number of programmers participating in '
           'the competition and the number of surveyed spectators. Next mm '
           'lines contain answers of spectators. The ii- th line contains two '
           'integers fifi and lili ( 1≤fi, li≤n1≤fi, li≤n; fi= ̸lifi= ̸li) — '
           'the indices of programmers who will take the first and last places '
           'in opinion of the ii- th viewer. For simplicity, you are the first '
           'among spectators, so your answers are f1f1 and l1l1.',
  'note': 'In the first example, if the second programmer takes first place, '
          "while the first programmer takes last place, you' ll have 00 right "
          "answers while the other two spectators — 22 right answers. That' s "
          'why your rank ( in the worst case) will be c2+ c1+ 1c2+ c1+ 1 = = '
          '2+ 0+ 1= 32+ 0+ 1= 3. In the second example, for example, if the '
          'third programmer takes the first place and the second programmer '
          "takes the last place, then you' ll have 11 right answer. The "
          'spectators 22, 44 and 55 will have 22 right answers, spectator 66 — '
          '11 right answer and spectator 33 — 00 right answers. As a result, '
          'your rank will be equal to c2+ 1c2+ 1 = = 3+ 1= 43+ 1= 4. ( Note '
          'that spectator 66 will have the same rank 44) .',
  'output': 'Print the single integer — the worst rank among spectators you '
            "can possibly get according to organizers' ranking system ( bigger "
            'rank — worse, of course) .',
  'title': 'Sweepstake',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1571/D'},
 {'history': 'You are given a book with n chapters. Each chapter has a '
             'specified list of other chapters that need to be understood in '
             'order to understand this chapter. To understand a chapter, you '
             'must read it after you understand every chapter on its required '
             "list. Currently you don' t understand any of the chapters. You "
             'are going to read the book from the beginning till the end '
             'repeatedly until you understand the whole book. Note that if you '
             "read a chapter at a moment when you don' t understand some of "
             "the required chapters, you don' t understand this chapter. "
             'Determine how many times you will read the book to understand '
             'every chapter, or determine that you will never understand every '
             'chapter no matter how many times you read the book.',
  'input': 'Each test contains multiple test cases. The first line contains '
           'the number of test cases t ( 1≤t≤2⋅104) . The first line of each '
           'test case contains a single integer n ( 1≤n≤2⋅105) — number of '
           'chapters. Then n lines follow. The i- th line begins with an '
           'integer ki ( 0≤ki≤n−1) — number of chapters required to understand '
           'the i- th chapter. Then ki integers ai, 1, ai, 2, . . . , ai, ki ( '
           '1≤ai, j≤n, ai, j= ̸i, ai, j= ̸ai, l for j= ̸l) follow — the '
           'chapters required to understand the i- th chapter. It is '
           'guaranteed that the sum of n and sum of ki over all testcases do '
           'not exceed 2⋅105.',
  'note': 'In the first example, we will understand chapters 2, 4 in the first '
          'reading and chapters 1, 3 in the second reading of the book. In the '
          'second example, every chapter requires the understanding of some '
          'other chapter, so it is impossible to understand the book. In the '
          'third example, every chapter requires only chapters that appear '
          'earlier in the book, so we can understand everything in one go. In '
          'the fourth example, we will understand chapters 2, 3, 4 in the '
          'first reading and chapter 1 in the second reading of the book. In '
          'the fifth example, we will understand one chapter in every reading '
          'from 5 to 1.',
  'output': 'For each test case, if the entire book can be understood, print '
            'how many times you will read it, otherwise print −1.',
  'title': 'Book',
  'topics': ['implementation', 'sortings'],
  'url': 'https://codeforces.com/problemset/problem/1572/A'},
 {'history': 'You are given two arrays a and b of length n. Array a contains '
             'each odd integer from 1 to 2n in an arbitrary order, and array b '
             'contains each even integer from 1 to 2n in an arbitrary order. '
             'You can perform the following operation on those arrays: choose '
             'one of the two arrays pick an index i from 1 to n−1 swap the i- '
             'th and the ( i+ 1) - th elements of the chosen array Compute the '
             'minimum number of operations needed to make array a '
             'lexicographically smaller than array b. For two different arrays '
             'x and y of the same length n, we say that x is lexicographically '
             'smaller than y if in the first position where x and y differ, '
             'the array x has a smaller element than the corresponding element '
             'in y.',
  'input': 'Each test contains multiple test cases. The first line contains '
           'the number of test cases t ( 1≤t≤104) . The first line of each '
           'test case contains a single integer n ( 1≤n≤105) — the length of '
           'the arrays. The second line of each test case contains n integers '
           'a1, a2, . . . , an ( 1≤ai≤2n, all ai are odd and pairwise '
           'distinct) — array a. The third line of each test case contains n '
           'integers b1, b2, . . . , bn ( 1≤bi≤2n, all bi are even and '
           'pairwise distinct) — array b. It is guaranteed that the sum of n '
           'over all test cases does not exceed 105.',
  'note': 'In the first example, the array a is already lexicographically '
          'smaller than array b, so no operations are required. In the second '
          'example, we can swap 5 and 3 and then swap 2 and 4, which results '
          'in [ 3, 5, 1] and [ 4, 2, 6] . Another correct way is to swap 3 and '
          '1 and then swap 5 and 1, which results in [ 1, 5, 3] and [ 2, 4, 6] '
          '. Yet another correct way is to swap 4 and 6 and then swap 2 and 6, '
          'which results in [ 5, 3, 1] and [ 6, 2, 4] .',
  'output': 'For each test case, print one integer: the minimum number of '
            'operations needed to make array a lexicographically smaller than '
            'array b. We can show that an answer always exists.',
  'title': 'Swaps',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1573/B'},
 {'history': 'Recently, Petya learned about a new game " Slay the Dragon" . As '
             'the name suggests, the player will have to fight with dragons. '
             'To defeat a dragon, you have to kill it and defend your castle. '
             'To do this, the player has a squad of n heroes, the strength of '
             'the i- th hero is equal to ai. According to the rules of the '
             'game, exactly one hero should go kill the dragon, all the others '
             "will defend the castle. If the dragon' s defense is equal to x, "
             'then you have to send a hero with a strength of at least x to '
             "kill it. If the dragon' s attack power is y, then the total "
             'strength of the heroes defending the castle should be at least '
             'y. The player can increase the strength of any hero by 1 for one '
             'gold coin. This operation can be done any number of times. There '
             'are m dragons in the game, the i- th of them has defense equal '
             'to xi and attack power equal to yi. Petya was wondering what is '
             'the minimum number of coins he needs to spend to defeat the i- '
             'th dragon. Note that the task is solved independently for each '
             'dragon ( improvements are not saved) .',
  'input': 'The first line contains a single integer n ( 2≤n≤2⋅105) — number '
           'of heroes. The second line contains n integers a1, a2, . . . , an '
           '( 1≤ai≤1012) , where ai is the strength of the i- th hero. The '
           'third line contains a single integer m ( 1≤m≤2⋅105) — the number '
           'of dragons. The next m lines contain two integers each, xi and yi '
           '( 1≤xi≤1012; 1≤yi≤1018) — defense and attack power of the i- th '
           'dragon.',
  'note': 'To defeat the first dragon, you can increase the strength of the '
          'third hero by 1, then the strength of the heroes will be equal to [ '
          '3, 6, 3, 3] . To kill the dragon, you can choose the first hero. To '
          'defeat the second dragon, you can increase the forces of the second '
          'and third heroes by 1, then the strength of the heroes will be '
          'equal to [ 3, 7, 3, 3] . To kill the dragon, you can choose a '
          'second hero. To defeat the third dragon, you can increase the '
          'strength of all the heroes by 1, then the strength of the heroes '
          'will be equal to [ 4, 7, 3, 4] . To kill the dragon, you can choose '
          "a fourth hero. To defeat the fourth dragon, you don' t need to "
          'improve the heroes and choose a third hero to kill the dragon. To '
          'defeat the fifth dragon, you can increase the strength of the '
          'second hero by 2, then the strength of the heroes will be equal to '
          '[ 3, 8, 2, 3] . To kill the dragon, you can choose a second hero.',
  'output': 'Print m lines, i- th of which contains a single integer — the '
            'minimum number of coins that should be spent to defeat the i- th '
            'dragon.',
  'title': 'Slay the Dragon',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1574/C'},
 {'history': 'Ivan is playing yet another roguelike computer game. He controls '
             'a single hero in the game. The hero has n equipment slots. There '
             'is a list of ci items for the i- th slot, the j- th of them '
             'increases the hero strength by ai, j. The items for each slot '
             'are pairwise distinct and are listed in the increasing order of '
             'their strength increase. So, ai, 1< ai, 2< ⋯< ai, ci. For each '
             'slot Ivan chooses exactly one item. Let the chosen item for the '
             'i- th slot be the bi- th item in the corresponding list. The '
             'sequence of choices [ b1, b2, . . . , bn] is called a build. The '
             'strength of a build is the sum of the strength increases of the '
             'items in it. Some builds are banned from the game. There is a '
             "list of m pairwise distinct banned builds. It' s guaranteed that "
             "there' s at least one build that' s not banned. What is the "
             'build with the maximum strength that is not banned from the '
             'game? If there are multiple builds with maximum strength, print '
             'any of them.',
  'input': 'The first line contains a single integer n ( 1≤n≤10) — the number '
           'of equipment slots. The i- th of the next n lines contains the '
           'description of the items for the i- th slot. First, one integer ci '
           '( 1≤ci≤2⋅105) — the number of items for the i- th slot. Then ci '
           'integers ai, 1, ai, 2, . . . , ai, ci ( 1≤ai, 1< ai, 2< ⋯< ai, '
           "ci≤108) . The sum of ci doesn' t exceed 2⋅105. The next line "
           'contains a single integer m ( 0≤m≤105) — the number of banned '
           'builds. Each of the next m lines contains a description of a '
           'banned build — a sequence of n integers b1, b2, . . . , bn ( '
           "1≤bi≤ci) . The builds are pairwise distinct, and there' s at least "
           "one build that' s not banned.",
  'note': ' ',
  'output': 'Print the build with the maximum strength that is not banned from '
            'the game. If there are multiple builds with maximum strength, '
            'print any of them.',
  'title': 'The Strongest Build',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1574/D'},
 {'history': 'A matrix of size n×m, such that each cell of it contains either '
             '0 or 1, is considered beautiful if the sum in every contiguous '
             'submatrix of size 2×2 is exactly 2, i. e. every " square" of '
             "size 2×2 contains exactly two 1' s and exactly two 0' s. You are "
             'given a matrix of size n×m. Initially each cell of this matrix '
             "is empty. Let' s denote the cell on the intersection of the x- "
             'th row and the y- th column as ( x, y) . You have to process the '
             'queries of three types: x y −1 — clear the cell ( x, y) , if '
             'there was a number in it; x y 0 — write the number 0 in the cell '
             '( x, y) , overwriting the number that was there previously ( if '
             'any) ; x y 1 — write the number 1 in the cell ( x, y) , '
             'overwriting the number that was there previously ( if any) . '
             'After each query, print the number of ways to fill the empty '
             'cells of the matrix so that the resulting matrix is beautiful. '
             'Since the answers can be large, print them modulo 998244353.',
  'input': 'The first line contains three integers n, m and k ( 2≤n, m≤106; '
           '1≤k≤3⋅105) — the number of rows in the matrix, the number of '
           'columns, and the number of queries, respectively. Then k lines '
           'follow, the i- th of them contains three integers xi, yi, ti ( '
           '1≤xi≤n; 1≤yi≤m; −1≤ti≤1) — the parameters for the i- th query.',
  'note': ' ',
  'output': 'For each query, print one integer — the number of ways to fill '
            'the empty cells of the matrix after the respective query, taken '
            'modulo 998244353.',
  'title': 'Coloring',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1574/E'},
 {'history': 'Andi and Budi were given an assignment to tidy up their '
             'bookshelf of n books. Each book is represented by the book title '
             '— a string si numbered from 1 to n, each with length m. Andi '
             'really wants to sort the book lexicographically ascending, while '
             'Budi wants to sort it lexicographically descending. Settling '
             'their fight, they decided to combine their idea and sort it asc- '
             'desc- endingly, where the odd- indexed characters will be '
             'compared ascendingly, and the even- indexed characters will be '
             'compared descendingly. A string a occurs before a string b in '
             'asc- desc- ending order if and only if in the first position '
             'where a and b differ, the following holds: if it is an odd '
             'position, the string a has a letter that appears earlier in the '
             'alphabet than the corresponding letter in b; if it is an even '
             'position, the string a has a letter that appears later in the '
             'alphabet than the corresponding letter in b.',
  'input': 'The first line contains two integers n and m ( 1≤n⋅m≤106) . The i- '
           'th of the next n lines contains a string si consisting of m '
           'uppercase Latin letters — the book title. The strings are pairwise '
           'distinct.',
  'note': 'The following illustrates the first example.',
  'output': 'Output n integers — the indices of the strings after they are '
            'sorted asc- desc- endingly.',
  'title': 'Another Sorting Problem',
  'topics': ['sortings', 'strings'],
  'url': 'https://codeforces.com/problemset/problem/1575/A'},
 {'history': 'The Winter holiday will be here soon. Mr. Chanek wants to '
             "decorate his house' s wall with ornaments. The wall can be "
             'represented as a binary string a of length n. His favorite '
             'nephew has another binary string b of length m ( m≤n) . Mr. '
             "Chanek' s nephew loves the non- negative integer k. His nephew "
             'wants exactly k occurrences of b as substrings in a. However, '
             'Mr. Chanek does not know the value of k. So, for each k ( '
             '0≤k≤n−m+ 1) , find the minimum number of elements in a that have '
             'to be changed such that there are exactly k occurrences of b in '
             'a. A string s occurs exactly k times in t if there are exactly k '
             'different pairs ( p, q) such that we can obtain s by deleting p '
             'characters from the beginning and q characters from the end of '
             't.',
  'input': 'The first line contains two integers n and m ( 1≤m≤n≤500) — size '
           'of the binary string a and b respectively. The second line '
           'contains a binary string a of length n. The third line contains a '
           'binary string b of length m.',
  'note': 'For k= 0, to make the string a have no occurrence of 101, you can '
          'do one character change as follows. 100101011 → 100100011For k= 1, '
          'you can also change a single character. 100101011 → 100001011For k= '
          '2, no changes are needed.',
  'output': 'Output n−m+ 2 integers — the ( k+ 1) - th integer denotes the '
            'minimal number of elements in a that have to be changed so there '
            'are exactly k occurrences of b as a substring in a.',
  'title': 'Holiday Wall Ornaments',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1575/H'},
 {'history': 'Mr. Chanek has a new game called Dropping Balls. Initially, Mr. '
             'Chanek has a grid a of size n×mEach cell ( x, y) contains an '
             'integer ax, y denoting the direction of how the ball will move. '
             'ax, y= 1 — the ball will move to the right ( the next cell is ( '
             'x, y+ 1) ) ; ax, y= 2 — the ball will move to the bottom ( the '
             'next cell is ( x+ 1, y) ) ; ax, y= 3 — the ball will move to the '
             'left ( the next cell is ( x, y−1) ) . Every time a ball leaves a '
             'cell ( x, y) , the integer ax, y will change to 2. Mr. Chanek '
             'will drop k balls sequentially, each starting from the first '
             'row, and on the c1, c2, . . . , ck- th ( 1≤ci≤m) columns. '
             'Determine in which column each ball will end up in ( position of '
             'the ball after leaving the grid) .',
  'input': 'The first line contains three integers n, m, and k ( 1≤n, m≤1000, '
           '1≤k≤105) — the size of the grid and the number of balls dropped by '
           'Mr. Chanek. The i- th of the next n lines contains m integers ai, '
           '1, ai, 2, . . . , ai, m ( 1≤ai, j≤3) . It will satisfy ai, 1= ̸3 '
           'and ai, m= ̸1. The next line contains k integers c1, c2, . . . , '
           "ck ( 1≤ci≤m) — the balls' column positions dropped by Mr. Chanek "
           'sequentially.',
  'note': 'In the first example, the first ball will drop as follows. Note '
          'that the cell ( 1, 1) will change direction to the bottom '
          'direction. The second and third balls will drop as follows. All '
          'balls will be dropped from the first row and on the c1, c2, . . . , '
          'ck- th columns respectively. A ball will stop dropping once it '
          'leaves the grid.',
  'output': 'Output k integers — the i- th integer denoting the column where '
            'the i- th ball will end.',
  'title': 'Jeopardy of Dropped Balls',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1575/J'},
 {'history': 'Mr. Chanek wants to knit a batik, a traditional cloth from '
             'Indonesia. The cloth forms a grid aa with size n×mn×m. There are '
             'kk colors, and each cell in the grid can be one of the kk '
             'colors. Define a sub- rectangle as an ordered pair of two cells '
             '( ( x1, y1) , ( x2, y2) ) ( ( x1, y1) , ( x2, y2) ) , denoting '
             'the top- left cell and bottom- right cell ( inclusively) of a '
             'sub- rectangle in aa. Two sub- rectangles ( ( x1, y1) , ( x2, '
             'y2) ) ( ( x1, y1) , ( x2, y2) ) and ( ( x3, y3) , ( x4, y4) ) ( '
             '( x3, y3) , ( x4, y4) ) have the same pattern if and only if the '
             'following holds: they have the same width ( x2−x1= x4−x3x2−x1= '
             'x4−x3) ; they have the same height ( y2−y1= y4−y3y2−y1= y4−y3) ; '
             'for every pair ( i, j) ( i, j) where 0≤i≤x2−x10≤i≤x2−x1 and '
             '0≤j≤y2−y10≤j≤y2−y1, the color of cells ( x1+ i, y1+ j) ( x1+ i, '
             'y1+ j) and ( x3+ i, y3+ j) ( x3+ i, y3+ j) are equal. Count the '
             'number of possible batik color combinations, such that the '
             'subrectangles ( ( ax, ay) , ( ax+ r−1, ay+ c−1) ) ( ( ax, ay) , '
             '( ax+ r−1, ay+ c−1) ) and ( ( bx, by) , ( bx+ r−1, by+ c−1) ) ( '
             '( bx, by) , ( bx+ r−1, by+ c−1) ) have the same pattern. Output '
             'the answer modulo 109+ 7109+ 7.',
  'input': 'The first line contains five integers nn, mm, kk, rr, and cc ( '
           '1≤n, m≤1091≤n, m≤109, 1≤k≤1091≤k≤109, 1≤r≤min( 106, n) 1≤r≤min( '
           '106, n) , 1≤c≤min( 106, m) 1≤c≤min( 106, m) ) — the size of the '
           'batik, the number of colors, and size of the sub- rectangle. The '
           'second line contains four integers axax, ayay, bxbx, and byby ( '
           '1≤ax, bx≤n1≤ax, bx≤n, 1≤ay, by≤m1≤ay, by≤m) — the top- left '
           'corners of the first and second sub- rectangle. Both of the sub- '
           'rectangles given are inside the grid ( 1≤ax+ r−11≤ax+ r−1, bx+ '
           'r−1≤nbx+ r−1≤n, 1≤ay+ c−11≤ay+ c−1, by+ c−1≤mby+ c−1≤m) .',
  'note': 'The following are all 3232 possible color combinations in the first '
          'example.',
  'output': 'Output an integer denoting the number of possible batik color '
            'combinations modulo 109+ 7109+ 7.',
  'title': 'Knitting Batik',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1575/K'},
 {'history': 'Mr. Chanek gives you a sequence a indexed from 1 to n. Define f( '
             'a) as the number of indices where ai= i. You can pick an element '
             'from the current sequence and remove it, then concatenate the '
             'remaining elements together. For example, if you remove the 3- '
             'rd element from the sequence [ 4, 2, 3, 1] , the resulting '
             'sequence will be [ 4, 2, 1] . You want to remove some elements '
             'from a in order to maximize f( a) , using zero or more '
             'operations. Find the largest possible f( a) .',
  'input': 'The first line contains one integer n ( 1≤n≤2⋅105) — the initial '
           'length of the sequence. The second line contains n integers a1, '
           'a2, . . . , an ( 1≤ai≤2⋅105) — the initial sequence a.',
  'note': 'In the first example, f( A) = 3 by doing the following operations. '
          '[ 2, 1, 4, 2, 5, 3, 7] →[ 2, 1, 2, 5, 3, 7] →[ 1, 2, 5, 3, 7] →[ 1, '
          '2, 5, 3] →[ 1, 2, 3] In the second example, f( A) = 2 and no '
          'additional operation is needed.',
  'output': 'Output an integer denoting the largest f( a) that can be obtained '
            'by doing zero or more operations.',
  'title': 'Longest Array Deconstruction',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1575/L'},
 {'history': 'Eonathan Eostar decided to learn the magic of multiprocessor '
             'systems. He has a full binary tree of tasks with height hh. In '
             'the beginning, there is only one ready task in the tree — the '
             'task in the root. At each moment of time, pp processes choose at '
             'most pp ready tasks and perform them. After that, tasks whose '
             'parents were performed become ready for the next moment of time. '
             'Once the task becomes ready, it stays ready until it is '
             'performed. You shall calculate the smallest number of time '
             'moments the system needs to perform all the tasks.',
  'input': 'The first line of the input contains the number of tests tt ( '
           '1≤t≤5⋅1051≤t≤5⋅105) . Each of the next tt lines contains the '
           'description of a test. A test is described by two integers hh ( '
           '1≤h≤501≤h≤50) and pp ( 1≤p≤1041≤p≤104) — the height of the full '
           'binary tree and the number of processes. It is guaranteed that all '
           'the tests are different.',
  'note': 'Let us consider the second test from the sample input. There is a '
          'full binary tree of height 33 and there are two processes. At the '
          'first moment of time, there is only one ready task, 11, and p1p1 '
          'performs it. At the second moment of time, there are two ready '
          'tasks, 22 and 33, and the processes perform them. At the third '
          'moment of time, there are four ready tasks, 44, 55, 66, and 77, and '
          'p1p1 performs 66 and p2p2 performs 55. At the fourth moment of '
          'time, there are two ready tasks, 44 and 77, and the processes '
          'perform them. Thus, the system spends 44 moments of time to perform '
          'all the tasks.',
  'output': 'For each test output one integer on a separate line — the '
            'smallest number of time moments the system needs to perform all '
            'the tasks.',
  'title': 'Easy Scheduling',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1578/E'},
 {'history': 'Helen studies functional programming and she is fascinated with '
             'a concept of higher order functions — functions that are taking '
             'other functions as parameters. She decides to generalize the '
             'concept of the function order and to test it on some examples. '
             'For her study, she defines a simple grammar of types. In her '
             'grammar, a type non- terminal T is defined as one of the '
             'following grammar productions, together with order( T) , '
             'defining an order of the corresponding type: " ( ) " is a unit '
             'type, order( " ( ) " ) = 0. " ( " T " ) " is a parenthesized '
             'type, order( " ( " T" ) " ) = order( T) . T1 " - > " T2 is a '
             'functional type, order( T1" - > " T2) = max( order( T1) + 1, '
             'order( T2) ) . The function constructor T1 " - > " T2 is right- '
             'to- left associative, so the type " ( ) - > ( ) - > ( ) " is the '
             'same as the type " ( ) - > ( ( ) - > ( ) ) " of a function '
             'returning a function, and it has an order of 1. While " ( ( ) - '
             '> ( ) ) - > ( ) " is a function that has an order- 1 type " ( ( '
             ') - > ( ) ) " as a parameter, and it has an order of 2. Helen '
             'asks for your help in writing a program that computes an order '
             'of the given type.',
  'input': 'The single line of the input contains a string consisting of '
           "characters ' ( ' , ' ) ' , ' - ' , and ' > ' that describes a type "
           'that is valid according to the grammar from the problem statement. '
           'The length of the line is at most 104 characters.',
  'note': ' ',
  'output': 'Print a single integer — the order of the given type.',
  'title': 'Higher Order Functions',
  'topics': ['implementation', 'strings'],
  'url': 'https://codeforces.com/problemset/problem/1578/H'},
 {'history': 'The Kingdom of Islands consists of pp islands. As the king, you '
             'rule over the whole kingdom, while each island is ruled over by '
             'one or several jarls under your rule. In total, there are nn '
             'jarls under your jurisdiction. Each island of the kingdom has '
             'its own strong traditions, so jarls that rule over the same '
             'island support each other and never have conflicts. The '
             'downsides of such strength are cultural conflicts between people '
             'inhabiting different islands. Thus, two jarls that rule over '
             'different islands are in conflict. However, recent years brought '
             'a few changes to traditional relations between the jarls. To '
             'your knowledge, there are exactly kk pairs of jarls such that '
             'relationships between two jarls in the pair are different from '
             'the traditional. That is, if two jarls of the pair you know rule '
             'over the same island, these jarls are in conflict. If they rule '
             'over different islands, then they overcome cultural disagreement '
             'and there is no conflict between them anymore. As a true '
             'responsible king, you are worried about whether the kingdom is '
             'close to a major conflict. In order to estimate the current '
             'situation, you would like to find the largest possible group of '
             'jarls such that every two jarls in the group are in conflict.',
  'input': 'The first line of the input consists of two integers pp and nn ( '
           '1≤p≤n≤1051≤p≤n≤105; 1≤p≤1041≤p≤104) . The second line consists of '
           'nn integers s1, s2, . . . , sns1, s2, . . . , sn ( 1≤si≤p1≤si≤p) . '
           'The integer sisi denotes that the ii- th jarl rules over the '
           'island number sisi. It is guaranteed that each island is ruled by '
           'at least one jarl. The third line consists of a single integer kk '
           '( 0≤k≤200≤k≤20) . Then kk lines follow. The jj- th of these lines '
           'consists of two distinct integers ajaj and bjbj ( 1≤aj< bj≤n1≤aj< '
           'bj≤n) , denoting that the relation between the ajaj- th jarl and '
           'the bjbj- th jarl differs from traditional. It is guaranteed that '
           'no pair of jarls appears twice in this list.',
  'note': 'The conflict graph for the last sample testcase is given below. '
          'Each circle represents an island.',
  'output': 'In the first line print a single integer qq between 11 and nn — '
            'the largest possible number of jarls in a pairwise conflicting '
            'group. In the second line print qq distinct integers between 11 '
            'and nn — the numbers of jarls in the group. The numbers of jarls '
            'can be printed in any order.',
  'title': 'Kingdom of Islands',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1578/K'},
 {'history': "Casimir has a string s which consists of capital Latin letters ' "
             "A' , ' B' , and ' C' only. Each turn he can choose to do one of "
             'the two following actions: he can either erase exactly one '
             "letter ' A' and exactly one letter ' B' from arbitrary places of "
             "the string ( these letters don' t have to be adjacent) ; or he "
             "can erase exactly one letter ' B' and exactly one letter ' C' "
             "from arbitrary places in the string ( these letters don' t have "
             'to be adjacent) . Therefore, each turn the length of the string '
             'is decreased exactly by 2. All turns are independent so for each '
             'turn, Casimir can choose any of two possible actions. For '
             'example, with s = " ABCABC" he can obtain a string s = " ACBC" '
             "in one turn ( by erasing the first occurrence of ' B' and the "
             "second occurrence of ' A' ) . There are also many other options "
             'for a turn aside from this particular example. For a given '
             'string s determine whether there is a sequence of actions '
             "leading to an empty string. In other words, Casimir' s goal is "
             'to erase all letters from the string. Is there a way to do this?',
  'input': 'The first line contains an integer t ( 1≤t≤1000) — the number of '
           'test cases. Each test case is described by one string s, for which '
           'you need to determine if it can be fully erased by some sequence '
           "of turns. The string s consists of capital letters ' A' , ' B' , ' "
           "C' and has a length from 1 to 50 letters, inclusive.",
  'note': ' ',
  'output': 'Print t lines, each line containing the answer to the '
            'corresponding test case. The answer to a test case should be YES '
            'if there is a way to fully erase the corresponding string and NO '
            'otherwise. You may print every letter in any case you want ( so, '
            'for example, the strings yEs, yes, Yes, and YES will all be '
            'recognized as positive answers) .',
  'title': "Casimir's String Solitaire",
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1579/A'},
 {'history': 'The new generation external memory contains an array of integers '
             'a[ 1. . . n] = [ a1, a2, . . . , an] . This type of memory does '
             'not support changing the value of an arbitrary element. Instead, '
             'it allows you to cut out any segment of the given array, '
             'cyclically shift ( rotate) it by any offset and insert it back '
             'into the same place. Technically, each cyclic shift consists of '
             'two consecutive actions: You may select arbitrary indices l and '
             'r ( 1≤l< r≤n) as the boundaries of the segment. Then you replace '
             "the segment a[ l. . . r] with it' s cyclic shift to the left by "
             'an arbitrary offset d. The concept of a cyclic shift can be also '
             'explained by following relations: the sequence [ 1, 4, 1, 3] is '
             'a cyclic shift of the sequence [ 3, 1, 4, 1] to the left by the '
             'offset 1 and the sequence [ 4, 1, 3, 1] is a cyclic shift of the '
             'sequence [ 3, 1, 4, 1] to the left by the offset 2. For example, '
             'if a= [ 1, 3, 2, 8, 5] , then choosing l= 2, r= 4 and d= 2 '
             'yields a segment a[ 2. . . 4] = [ 3, 2, 8] . This segment is '
             'then shifted by the offset d= 2 to the left, and you get a '
             'segment [ 8, 3, 2] which then takes the place of of the original '
             'elements of the segment. In the end you get a= [ 1, 8, 3, 2, 5] '
             '. Sort the given array a using no more than n cyclic shifts of '
             "any of its segments. Note that you don' t need to minimize the "
             'number of cyclic shifts. Any method that requires n or less '
             'cyclic shifts will be accepted.',
  'input': 'The first line contains an integer t ( 1≤t≤1000) — the number of '
           'test cases. The next 2t lines contain the descriptions of the test '
           'cases. The first line of each test case description contains an '
           'integer n ( 2≤n≤50) — the length of the array. The second line '
           'consists of space- separated elements of the array ai ( '
           "−109≤ai≤109) . Elements of array a may repeat and don' t have to "
           'be unique.',
  'note': 'Explanation of the fourth data set in the example: The segment a[ '
          '2. . . 4] is selected and is shifted to the left by 2: [ 2, 5, 1, '
          '4, 3] ⟶[ 2, 4, 5, 1, 3] The segment a[ 1. . . 5] is then selected '
          'and is shifted to the left by 3: [ 2, 4, 5, 1, 3] ⟶[ 1, 3, 2, 4, 5] '
          'After that the segment a[ 1. . . 2] is selected and is shifted to '
          'the left by 1: [ 1, 3, 2, 4, 5] ⟶[ 3, 1, 2, 4, 5] And in the end '
          'the segment a[ 1. . . 3] is selected and is shifted to the left by '
          '1: [ 3, 1, 2, 4, 5] ⟶[ 1, 2, 3, 4, 5]',
  'output': 'Print t answers to all input test cases. The first line of the '
            'answer of each test case should contain an integer k ( 0≤k≤n) — '
            'the number of actions to sort the array. The next k lines should '
            'contain descriptions of the actions formatted as " l r d" ( '
            'without quotes) where l and r ( 1≤l< r≤n) are the boundaries of '
            'the segment being shifted, while d ( 1≤d≤r−l) is the offset '
            'value. Please remember that only the cyclic shifts to the left '
            'are considered so the chosen segment will be shifted by the '
            'offset d to the to the left. Note that you are not required to '
            'find the minimum number of cyclic shifts needed for sorting. Any '
            'sorting method where the number of shifts does not exceed n will '
            'be accepted. If the given array a is already sorted, one of the '
            'possible answers is k= 0 and an empty sequence of cyclic shifts. '
            'If there are several possible answers, you may print any of them.',
  'title': 'Shifting Sort',
  'topics': ['implementation', 'sortings'],
  'url': 'https://codeforces.com/problemset/problem/1579/B'},
 {'history': 'Casimir has a rectangular piece of paper with a checkered field '
             'of size n×mn×m. Initially, all cells of the field are white. Let '
             'us denote the cell with coordinates ii vertically and jj '
             'horizontally by ( i, j) ( i, j) . The upper left cell will be '
             'referred to as ( 1, 1) ( 1, 1) and the lower right cell as ( n, '
             'm) ( n, m) . Casimir draws ticks of different sizes on the '
             'field. A tick of size dd ( d> 0d> 0) with its center in cell ( '
             'i, j) ( i, j) is drawn as follows: First, the center cell ( i, '
             'j) ( i, j) is painted black. Then exactly dd cells on the top- '
             'left diagonally to the center and exactly dd cells on the top- '
             'right diagonally to the center are also painted black. That is '
             'all the cells with coordinates ( i−h, j±h) ( i−h, j±h) for all h '
             'between 0 and d are painted. In particular, a tick consists of '
             '2d+ 1 black cells. An already painted cell will remain black if '
             'painted again. Below you can find an example of the 4×9 box, '
             'with two ticks of sizes 2 and 3. You are given a description of '
             'a checkered field of size n×m. Casimir claims that this field '
             'came about after he drew some ( possibly 0) ticks on it. The '
             'ticks could be of different sizes, but the size of each tick is '
             'at least k ( that is, d≥k for all the ticks) . Determine whether '
             'this field can indeed be obtained by drawing some ( possibly '
             'none) ticks of sizes d≥k or not.',
  'input': 'The first line contains an integer t ( 1≤t≤100) — the number test '
           'cases. The following lines contain the descriptions of the test '
           'cases. The first line of the test case description contains the '
           'integers n, m, and k ( 1≤k≤n≤10; 1≤m≤19) — the field size and the '
           'minimum size of the ticks that Casimir drew. The following n lines '
           'describe the field: each line consists of m characters either '
           "being ' . ' if the corresponding cell is not yet painted or ' * ' "
           'otherwise.',
  'note': 'The first sample test case consists of two asterisks neither of '
          "which can be independent ticks since ticks of size 0 don' t exist. "
          'The second sample test case is already described in the statement ( '
          'check the picture in the statement) . This field can be obtained by '
          'drawing ticks of sizes 2 and 3, as shown in the figure. The field '
          'in the third sample test case corresponds to three ticks of size 1. '
          'Their center cells are marked with blue, red and green colors: * . '
          '* . * * * * . * * . . . . . The field in the fourth sample test '
          'case could have been obtained by drawing two ticks of sizes 1 and '
          '2. Their vertices are marked below with blue and red colors '
          'respectively: . . . . . * . . . * . * . * . . . * . * . . . * . The '
          'field in the fifth sample test case can not be obtained because k= '
          '2, and the last asterisk in the fourth row from the top with '
          'coordinates ( 4, 5) can only be a part of a tick of size 1. The '
          'field in the sixth sample test case can not be obtained because the '
          "top left asterisk ( 1, 1) can' t be an independent tick, since the "
          'sizes of the ticks must be positive, and cannot be part of a tick '
          'with the center cell in the last row, since it is separated from it '
          "by a gap ( a point, ' . ' ) in ( 2, 2) . In the seventh sample test "
          'case, similarly, the field can not be obtained by the described '
          'process because the asterisks with coordinates ( 1, 2) ( second '
          'cell in the first row) , ( 3, 1) and ( 3, 3) ( leftmost and '
          'rightmost cells in the bottom) can not be parts of any ticks.',
  'output': 'Print t lines, each line containing the answer to the '
            'corresponding test case. The answer to a test case should be YES '
            'if the given field can be obtained by drawing ticks of at least '
            'the given size and NO otherwise. You may print every letter in '
            'any case you want ( so, for example, the strings yEs, yes, Yes, '
            'and YES will all be recognized as positive answers) .',
  'title': 'Ticks',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1579/C'},
 {'history': 'CQXYM found a rectangle A of size n×m. There are n rows and m '
             'columns of blocks. Each block of the rectangle is an obsidian '
             'block or empty. CQXYM can change an obsidian block to an empty '
             'block or an empty block to an obsidian block in one operation. A '
             'rectangle M size of a×b is called a portal if and only if it '
             'satisfies the following conditions: a≥5, b≥4. For all 1< x< a, '
             'blocks Mx, 1 and Mx, b are obsidian blocks. For all 1< x< b, '
             'blocks M1, x and Ma, x are obsidian blocks. For all 1< x< a, 1< '
             'y< b, block Mx, y is an empty block. M1, 1, M1, b, Ma, 1, Ma, b '
             'can be any type. Note that the there must be a rows and b '
             'columns, not b rows and a columns. Note that corners can be any '
             'typeCQXYM wants to know the minimum number of operations he '
             'needs to make at least one sub- rectangle a portal.',
  'input': 'The first line contains an integer t ( t≥1) , which is the number '
           'of test cases. For each test case, the first line contains two '
           'integers n and m ( 5≤n≤400, 4≤m≤400) . Then n lines follow, each '
           'line contains m characters 0 or 1. If the j- th character of i- th '
           'line is 0, block Ai, j is an empty block. Otherwise, block Ai, j '
           'is an obsidian block. It is guaranteed that the sum of n over all '
           'test cases does not exceed 400. It is guaranteed that the sum of m '
           'over all test cases does not exceed 400.',
  'note': 'In the first test case, the final portal is like this: '
          '11101001100110010111',
  'output': 'Output t answers, and each answer in a line.',
  'title': 'Portal',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1580/A'},
 {'history': 'Kawasiro Nitori is excellent in engineering. Thus she has been '
             'appointed to help maintain trains. There are n models of trains, '
             "and Nitori' s department will only have at most one train of "
             'each model at any moment. In the beginning, there are no trains, '
             'at each of the following m days, one train will be added, or one '
             'train will be removed. When a train of model i is added at day '
             't, it works for xi days ( day t inclusive) , then it is in '
             'maintenance for yi days, then in work for xi days again, and so '
             'on until it is removed. In order to make management easier, '
             'Nitori wants you to help her calculate how many trains are in '
             'maintenance in each day. On a day a train is removed, it is not '
             'counted as in maintenance.',
  'input': 'The first line contains two integers n, m ( 1≤n, m≤2⋅105) . The i- '
           'th of the next n lines contains two integers xi, yi ( 1≤xi, '
           'yi≤109) . Each of the next m lines contains two integers op, k ( '
           "1≤k≤n, op= 1 or op= 2) . If op= 1, it means this day' s a train of "
           'model k is added, otherwise the train of model k is removed. It is '
           'guaranteed that when a train of model x is added, there is no '
           'train of the same model in the department, and when a train of '
           'model x is removed, there is such a train in the department.',
  'note': 'Consider the first example: The first day: Nitori adds a train of '
          'model 3. Only a train of model 3 is running and no train is in '
          'maintenance. The second day: Nitori adds a train of model 1. A '
          'train of model 1 is running and a train of model 3 is in '
          'maintenance. The third day: Nitori removes a train of model 1. The '
          'situation is the same as the first day. The fourth day: Nitori '
          'removes a train of model 3. There are no trains at all.',
  'output': 'Print m lines, The i- th of these lines contains one integers, '
            'denoting the number of trains in maintenance in the i- th day.',
  'title': 'Train Maintenance',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1580/C'},
 {'history': 'Grandma Capa has decided to knit a scarf and asked Grandpa Sher '
             'to make a pattern for it, a pattern is a string consisting of '
             'lowercase English letters. Grandpa Sher wrote a string s of '
             'length n. Grandma Capa wants to knit a beautiful scarf, and in '
             'her opinion, a beautiful scarf can only be knit from a string '
             'that is a palindrome. She wants to change the pattern written by '
             'Grandpa Sher, but to avoid offending him, she will choose one '
             'lowercase English letter and erase some ( at her choice, '
             'possibly none or all) occurrences of that letter in string s. '
             'She also wants to minimize the number of erased symbols from the '
             'pattern. Please help her and find the minimum number of symbols '
             'she can erase to make string s a palindrome, or tell her that '
             "it' s impossible. Notice that she can only erase symbols equal "
             'to the one letter she chose. A string is a palindrome if it is '
             'the same from the left to the right and from the right to the '
             "left. For example, the strings ' kek' , ' abacaba' , ' r' and ' "
             "papicipap' are palindromes, while the strings ' abb' and ' iq' "
             'are not.',
  'input': 'The first line contains a single integer t ( 1≤t≤100) — the number '
           'of test cases. The next 2⋅t lines contain the description of test '
           'cases. The description of each test case consists of two lines. '
           'The first line of each test case contains a single integer n ( '
           '1≤n≤105) — the length of the string. The second line of each test '
           'case contains the string s consisting of n lowercase English '
           'letters. It is guaranteed that the sum of n over all test cases '
           'does not exceed 2⋅105.',
  'note': "In the first test case, you can choose a letter ' a' and erase its "
          "first and last occurrences, you will get a string ' bcaacb' , which "
          "is a palindrome. You can also choose a letter ' b' and erase all "
          "its occurrences, you will get a string ' acaaca' , which is a "
          'palindrome as well. In the second test case, it can be shown that '
          'it is impossible to choose a letter and erase some of its '
          "occurrences to get a palindrome. In the third test case, you don' t "
          'have to erase any symbols because the string is already a '
          'palindrome.',
  'output': 'For each test case print the minimum number of erased symbols '
            'required to make the string a palindrome, if it is possible, and '
            '−1, if it is impossible.',
  'title': 'Grandma Capa Knits a Scarf',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1582/C'},
 {'history': 'Omkar is hosting tours of his country, Omkarland! There are nn '
             'cities in Omkarland, and, rather curiously, there are exactly '
             'n−1n−1 bidirectional roads connecting the cities to each other. '
             'It is guaranteed that you can reach any city from any other city '
             'through the road network. Every city has an enjoyment value ee. '
             'Each road has a capacity cc, denoting the maximum number of '
             'vehicles that can be on it, and an associated toll tt. However, '
             'the toll system in Omkarland has an interesting quirk: if a '
             'vehicle travels on multiple roads on a single journey, they pay '
             'only the highest toll of any single road on which they traveled. '
             '( In other words, they pay maxtmaxt over all the roads on which '
             'they traveled. ) If a vehicle traverses no roads, they pay 00 '
             'toll. Omkar has decided to host qq tour groups. Each tour group '
             'consists of vv vehicles starting at city xx. ( Keep in mind that '
             'a tour group with vv vehicles can travel only on roads with '
             'capacity ≥v≥v. ) Being the tour organizer, Omkar wants his '
             'groups to have as much fun as they possibly can, but also must '
             'reimburse his groups for the tolls that they have to pay. Thus, '
             'for each tour group, Omkar wants to know two things: first, what '
             'is the enjoyment value of the city yy with maximum enjoyment '
             'value that the tour group can reach from their starting city, '
             'and second, how much per vehicle will Omkar have to pay to '
             'reimburse the entire group for their trip from xx to yy? ( This '
             'trip from xx to yy will always be on the shortest path from xx '
             'to yy. ) In the case that there are multiple reachable cities '
             'with the maximum enjoyment value, Omkar will let his tour group '
             'choose which one they want to go to. Therefore, to prepare for '
             'all possible scenarios, he wants to know the amount of money per '
             'vehicle that he needs to guarantee that he can reimburse the '
             'group regardless of which city they choose.',
  'input': 'The first line contains two integers nn and qq ( '
           '2≤n≤2⋅1052≤n≤2⋅105, 1≤q≤2⋅1051≤q≤2⋅105) , representing the number '
           'of cities and the number of groups, respectively. The next line '
           'contains nn integers e1, e2, . . . , ene1, e2, . . . , en ( '
           '1≤ei≤1091≤ei≤109) , where eiei represents the enjoyment value for '
           'city ii. The next n−1n−1 lines each contain four integers aa, bb, '
           'cc, and tt ( 1≤a, b≤n1≤a, b≤n, 1≤c≤1091≤c≤109, 1≤t≤1091≤t≤109) , '
           'representing an road between city aa and city bb with capacity cc '
           'and toll tt. The next qq lines each contain two integers vv and xx '
           '( 1≤v≤1091≤v≤109, 1≤x≤n1≤x≤n) , representing the number of '
           'vehicles in the tour group and the starting city, respectively.',
  'note': 'A map of the first sample is shown below. For the nodes, unbolded '
          'numbers represent indices and bolded numbers represent enjoyment '
          'values. For the edges, unbolded numbers represent capacities and '
          'bolded numbers represent tolls. For the first query, a tour group '
          'of size 11 starting at city 33 can reach cities 11, 22, 33, 44, and '
          '55. Thus, the largest enjoyment value that they can reach is 33. If '
          'the tour group chooses to go to city 44, Omkar will have to pay 88 '
          'per vehicle, which is the maximum. For the second query, a tour '
          'group of size 99 starting at city 55 can reach only city 55. Thus, '
          'the largest reachable enjoyment value is still 33, and Omkar will '
          'pay 00 per vehicle. For the third query, a tour group of size 66 '
          'starting at city 22 can reach cities 22 and 44. The largest '
          'reachable enjoyment value is again 33. If the tour group chooses to '
          'go to city 44, Omkar will have to pay 22 per vehicle, which is the '
          'maximum. A map of the second sample is shown below: For the first '
          'query, a tour group of size 55 starting at city 11 can only reach '
          'city 11. Thus, their maximum enjoyment value is 11 and the cost '
          'Omkar will have to pay is 00 per vehicle. For the second query, a '
          'tour group of size 44 starting at city 11 can reach cities 11 and '
          '22. Thus, their maximum enjoyment value is 22 and Omkar will pay 11 '
          'per vehicle. For the third query, a tour group of size 33 starting '
          'at city 11 can reach cities 11, 22, and 33. Thus, their maximum '
          'enjoyment value is 33 and Omkar will pay 11 per vehicle. For the '
          'fourth query, a tour group of size 22 starting at city 11 can reach '
          'cities 11, 22, 33 and 44. Thus, their maximum enjoyment value is 44 '
          'and Omkar will pay 11 per vehicle. For the fifth query, a tour '
          'group of size 11 starting at city 11 can reach cities 11, 22, 33, '
          '44, and 55. Thus, their maximum enjoyment value is 55 and Omkar '
          'will pay 11 per vehicle.',
  'output': 'Output qq lines. The ii- th line should contain two integers: the '
            'highest possible enjoyment value of a city reachable by the ii- '
            'th tour group, and the amount of money per vehicle Omkar needs to '
            'guarantee that he can reimburse the ii- th tour group.',
  'title': 'Omkar and Tours',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1583/H'},
 {'history': 'You are given two arrays of integers a1, a2, . . . , an and b1, '
             "b2, . . . , bn. Let' s define a transformation of the array a: "
             'Choose any non- negative integer k such that 0≤k≤n. Choose k '
             'distinct array indices 1≤i1< i2< . . . < ik≤n. Add 1 to each of '
             'ai1, ai2, . . . , aik, all other elements of array a remain '
             'unchanged. Permute the elements of array a in any order. Is it '
             'possible to perform some transformation of the array a exactly '
             'once, so that the resulting array is equal to b?',
  'input': 'The first line contains a single integer t ( 1≤t≤100) — the number '
           'of test cases. Descriptions of test cases follow. The first line '
           'of each test case contains a single integer n ( 1≤n≤100) — the '
           'size of arrays a and b. The second line of each test case contains '
           'n integers a1, a2, . . . , an ( −100≤ai≤100) . The third line of '
           'each test case contains n integers b1, b2, . . . , bn ( '
           '−100≤bi≤100) .',
  'note': 'In the first test case, we can make the following transformation: '
          'Choose k= 2. Choose i1= 1, i2= 2. Add 1 to a1 and a2. The resulting '
          'array is [ 0, 2, 0] . Swap the elements on the second and third '
          'positions. In the second test case there is no suitable '
          'transformation. In the third test case we choose k= 0 and do not '
          'change the order of elements.',
  'output': 'For each test case, print " YES" ( without quotes) if it is '
            'possible to perform a transformation of the array a, so that the '
            'resulting array is equal to b. Print " NO" ( without quotes) '
            'otherwise. You can print each letter in any case ( upper or '
            'lower) .',
  'title': 'Two Arrays',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1584/C'},
 {'history': 'You are given n strings s1, s2, . . . , sn, each consisting of '
             "lowercase and uppercase English letters. In addition, it' s "
             'guaranteed that each character occurs in each string at most '
             'twice. Find the longest common subsequence of these strings. A '
             'string t is a subsequence of a string s if t can be obtained '
             'from s by deletion of several ( possibly, zero or all) symbols.',
  'input': 'Each test consists of multiple test cases. The first line contains '
           'a single integer t ( 1≤t≤5) — the number of test cases. '
           'Description of the test cases follows. The first line of each test '
           'case contains a single integer n ( 2≤n≤10) — the number of '
           'strings. Each of the next n lines contains the corresponding '
           'string si. Each si is non- empty, consists only of uppercase and '
           'lowercase English letters, and no character appears more than '
           'twice in each string.',
  'note': 'In the first test case, the longest common subsequence is " A" . '
          'There are no common subsequences of length 2. In the second test '
          "case, sets of characters of strings don' t intersect, so any non- "
          "empty string can' t be a common subsequence.",
  'output': 'For each test case print the answer in two lines: In the first '
            'line print the length of the longest common subsequence. In the '
            'second line print the longest common subsequence. If there are '
            'multiple such subsequences, print any of them.',
  'title': 'Strange LCS',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1584/F'},
 {'history': 'Petya has got an interesting flower. Petya is a busy person, so '
             'he sometimes forgets to water it. You are given n days from '
             "Petya' s live and you have to determine what happened with his "
             'flower in the end. The flower grows as follows: If the flower '
             "isn' t watered for two days in a row, it dies. If the flower is "
             'watered in the i- th day, it grows by 1 centimeter. If the '
             'flower is watered in the i- th and in the ( i−1) - th day ( i> '
             '1) , then it grows by 5 centimeters instead of 1. If the flower '
             'is not watered in the i- th day, it does not grow. At the '
             'beginning of the 1- st day the flower is 1 centimeter tall. What '
             'is its height after n days?',
  'input': 'Each test contains multiple test cases. The first line contains '
           'the number of test cases t ( 1≤t≤100) . Description of the test '
           'cases follows. The first line of each test case contains the only '
           'integer n ( 1≤n≤100) . The second line of each test case contains '
           'n integers a1, a2, . . . , an ( ai= 0 or ai= 1) . If ai= 1, the '
           'flower is watered in the i- th day, otherwise it is not watered.',
  'note': ' ',
  'output': "For each test case print a single integer k — the flower' s "
            'height after n days, or −1, if the flower dies.',
  'title': 'Life of a Flower',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1585/A'},
 {'history': 'One day, Ahmed_ Hossam went to Hemose and said " Let\' s solve a '
             'gym contest! " . Hemose didn\' t want to do that, as he was '
             'playing Valorant, so he came up with a problem and told it to '
             "Ahmed to distract him. Sadly, Ahmed can' t solve it. . . Could "
             'you help him? There is an Agent in Valorant, and he has n '
             'weapons. The i- th weapon has a damage value ai, and the Agent '
             'will face an enemy whose health value is H. The Agent will '
             'perform one or more moves until the enemy dies. In one move, he '
             "will choose a weapon and decrease the enemy' s health by its "
             'damage value. The enemy will die when his health will become '
             'less than or equal to 0. However, not everything is so easy: the '
             "Agent can' t choose the same weapon for 2 times in a row. What "
             'is the minimum number of times that the Agent will need to use '
             'the weapons to kill the enemy?',
  'input': 'Each test contains multiple test cases. The first line contains '
           'the number of test cases t ( 1≤t≤105) . Description of the test '
           'cases follows. The first line of each test case contains two '
           'integers n and H ( 2≤n≤103, 1≤H≤109) — the number of available '
           'weapons and the initial health value of the enemy. The second line '
           'of each test case contains n integers a1, a2, . . . , an ( '
           "1≤ai≤109) — the damage values of the weapons. It' s guaranteed "
           "that the sum of n over all test cases doesn' t exceed 2⋅105.",
  'note': 'In the first test case, the Agent can use the second weapon, making '
          'health value of the enemy equal to 4−7= −3. −3≤0, so the enemy is '
          'dead, and using weapon 1 time was enough. In the second test case, '
          'the Agent can use the first weapon first, and then the second one. '
          'After this, the health of enemy will drop to 6−4−2= 0, meaning he '
          'would be killed after using weapons 2 times. In the third test '
          'case, the Agent can use the weapons in order ( third, first, third) '
          ', decreasing the health value of enemy to 11−7−2−7= −5 after using '
          "the weapons 3 times. Note that we can' t kill the enemy by using "
          "the third weapon twice, as even though 11−7−7< 0, it' s not allowed "
          'to use the same weapon twice in a row.',
  'output': 'For each test case, print a single integer — the minimum number '
            'of times that the Agent will have to use the weapons to kill the '
            'enemy.',
  'title': 'Gamer Hemose',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1592/A'},
 {'history': 'Hemose was shopping with his friends Samez, AhmedZ, AshrafEzz, '
             'TheSawan and O_ E in Germany. As you know, Hemose and his '
             'friends are problem solvers, so they are very clever. Therefore, '
             'they will go to all discount markets in Germany. Hemose has an '
             'array of n integers. He wants Samez to sort the array in the '
             'non- decreasing order. Since it would be a too easy problem for '
             'Samez, Hemose allows Samez to use only the following operation: '
             'Choose indices i and j such that 1≤i, j≤n, and | i−j| ≥x. Then, '
             "swap elements ai and aj. Can you tell Samez if there' s a way to "
             'sort the array in the non- decreasing order by using the '
             'operation written above some finite number of times ( possibly '
             '0) ?',
  'input': 'Each test contains multiple test cases. The first line contains '
           'the number of test cases t ( 1≤t≤105) . Description of the test '
           'cases follows. The first line of each test case contains two '
           'integers n and x ( 1≤x≤n≤105) . The second line of each test case '
           'contains n integers a1, a2, . . . , an ( 1≤ai≤109) . It is '
           "guaranteed that the sum of n over all test cases doesn' t exceed "
           '2⋅105.',
  'note': "In the first test case, you can' t do any operations. In the second "
          'test case, the array is already sorted. In the third test case, you '
          'can do the operations as follows: [ 5, 1, 2, 3, 4] , swap( a1, a3) '
          '[ 2, 1, 5, 3, 4] , swap( a2, a5) [ 2, 4, 5, 3, 1] , swap( a2, a4) [ '
          '2, 3, 5, 4, 1] , swap( a1, a5) [ 1, 3, 5, 4, 2] , swap( a2, a5) [ '
          '1, 2, 5, 4, 3] , swap( a3, a5) [ 1, 2, 3, 4, 5] ( Here swap( ai, '
          'aj) refers to swapping elements at positions i, j) .',
  'output': 'For each test case, you should output a single string. If Samez '
            'can sort the array in non- decreasing order using the operation '
            'written above, output " YES" ( without quotes) . Otherwise, '
            'output " NO" ( without quotes) . You can print each letter of " '
            'YES" and " NO" in any case ( upper or lower) .',
  'title': 'Hemose Shopping',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1592/B'},
 {'history': 'This is an interactive problem! In the last regional contest '
             'Hemose, ZeyadKhattab and YahiaSherif — members of the team Carpe '
             'Diem — did not qualify to ICPC because of some unknown reasons. '
             'Hemose was very sad and had a bad day after the contest, but '
             'ZeyadKhattab is very wise and knows Hemose very well, and does '
             'not want to see him sad. Zeyad knows that Hemose loves tree '
             'problems, so he gave him a tree problem with a very special '
             'device. Hemose has a weighted tree with nn nodes and n−1n−1 '
             "edges. Unfortunately, Hemose doesn' t remember the weights of "
             "edges. Let' s define Dist( u, v) Dist( u, v) for u= ̸vu= ̸v as "
             'the greatest common divisor of the weights of all edges on the '
             'path from node uu to node vv. Hemose has a special device. '
             'Hemose can give the device a set of nodes, and the device will '
             'return the largest DistDist between any two nodes from the set. '
             'More formally, if Hemose gives the device a set SS of nodes, the '
             'device will return the largest value of Dist( u, v) Dist( u, v) '
             'over all pairs ( u, v) ( u, v) with uu, vv ∈∈ SS and u= ̸vu= ̸v. '
             'Hemose can use this Device at most 1212 times, and wants to find '
             'any two distinct nodes aa, bb, such that Dist( a, b) Dist( a, b) '
             'is maximum possible. Can you help him? InteractionBegin the '
             'interaction from reading a single integer nn ( 2≤n≤1032≤n≤103) — '
             'the number of nodes in the tree. Next, read n−1n−1 lines. The '
             'ii- th of the next n−1n−1 lines contains two integers uiui and '
             'vivi ( 1≤ui, vi≤n1≤ui, vi≤n, ui= ̸viui= ̸vi) , which means that '
             "there' s an edge between nodes uiui and vivi. It' s guaranteed "
             'that weights of edges were ≤109≤109. It is guaranteed that the '
             'given graph is a tree. Now you may begin asking queries. To ask '
             'a query about a set of kk nodes v1, v2, . . . , vkv1, v2, . . . '
             ', vk ( 2≤k≤n2≤k≤n, 1≤vi≤n1≤vi≤n, all vivi are distinct) , '
             'output: ? kk v1v1 v2v2 . . . . . . vkvkYou will then receive an '
             'integer xx, the largest Dist( vi, vj) Dist( vi, vj) over 1≤i, '
             'j≤k1≤i, j≤k with i= ̸ji= ̸j. When you have found aa and bb ( '
             '1≤a, b≤n) 1≤a, b≤n) , a= ̸ba= ̸b) such that Dist( a, b) Dist( a, '
             'b) is the maximum possible, print the answer in the following '
             "format: ! aa bb Outputting answer doesn' t count towards the "
             'limit of 1212 queries. If there are several pairs ( a, b) ( a, '
             'b) with the same largest Dist( a, b) Dist( a, b) , you can '
             'output any. After printing a query do not forget to output the '
             'end of line and flush the output. Otherwise, you will get '
             'Idleness limit exceeded. To do this, use: fflush( stdout) or '
             'cout. flush( ) in C+ + ; System. out. flush( ) in Java; flush( '
             'output) in Pascal; stdout. flush( ) in Python; see the '
             'documentation for other languages. HacksTo hack a solution, use '
             'the following format. The first line should contain a single '
             'integer nn ( 2≤n≤103) ( 2≤n≤103) — the number of nodes. The ii- '
             'th of the next n−1n−1 lines should contain three integers uiui, '
             'vivi, wiwi ( 1≤ui, vi≤n1≤ui, vi≤n, ui= ̸viui= ̸vi, '
             "1≤w≤1091≤w≤109) , which means that there' s an edge between "
             'nodes uiui and vivi with weight wiwi. These n−1n−1 edges must '
             'form a tree.',
  'input': ' ',
  'note': 'The tree in the first sample:',
  'output': ' ',
  'title': 'Hemose in ICPC ?',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1592/D'},
 {'history': 'A tree is an undirected connected graph in which there are no '
             'cycles. This problem is about non- rooted trees. A leaf of a '
             'tree is a vertex that is connected to at most one vertex. The '
             'gardener Vitaly grew a tree from n vertices. He decided to trim '
             'the tree. To do this, he performs a number of operations. In one '
             'operation, he removes all leaves of the tree. Example of a tree. '
             'For example, consider the tree shown in the figure above. The '
             'figure below shows the result of applying exactly one operation '
             'to the tree. The result of applying the operation " remove all '
             'leaves" to the tree. Note the special cases of the operation: '
             'applying an operation to an empty tree ( of 0 vertices) does not '
             'change it; applying an operation to a tree of one vertex removes '
             'this vertex ( this vertex is treated as a leaf) ; applying an '
             'operation to a tree of two vertices removes both vertices ( both '
             'vertices are treated as leaves) . Vitaly applied k operations '
             'sequentially to the tree. How many vertices remain?',
  'input': 'The first line contains one integer t ( 1≤t≤104) — the number of '
           'test cases. Then t test cases follow. Each test case is preceded '
           'by an empty line. Each test case consists of several lines. The '
           'first line of the test case contains two integers n and k ( '
           '1≤n≤4⋅105, 1≤k≤2⋅105) — the number of vertices in the tree and the '
           'number of operations, respectively. Then n−1 lines follow, each of '
           'them contains two integers u and v ( 1≤u, v≤n, u= ̸v) which '
           'describe a pair of vertices connected by an edge. It is guaranteed '
           'that the given graph is a tree and has no loops or multiple edges. '
           'It is guaranteed that the sum of n from all test cases does not '
           'exceed 4⋅105.',
  'note': 'The first test case is considered in the statement. The second test '
          'case contains a tree of two vertices. 200000 operations are applied '
          'to it. The first one removes all two vertices, the other operations '
          'do not change the tree. In the third test case, a tree of three '
          'vertices is given. As a result of the first operation, only 1 '
          'vertex remains in it ( with the index 2) , the second operation '
          'makes the tree empty.',
  'output': 'For each test case output on a separate line a single integer — '
            'the number of vertices that remain in the tree after applying k '
            'operations.',
  'title': 'Gardener and Tree',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1593/E'},
 {'history': 'It is given a non- negative integer xx, the decimal '
             'representation of which contains nn digits. You need to color '
             'each its digit in red or black, so that the number formed by the '
             'red digits is divisible by AA, and the number formed by the '
             'black digits is divisible by BB. At least one digit must be '
             'colored in each of two colors. Consider, the count of digits '
             'colored in red is rr and the count of digits colored in black is '
             'bb. Among all possible colorings of the given number xx, you '
             'need to output any such that the value of | r−b| | r−b| is the '
             'minimum possible. Note that the number xx and the numbers formed '
             'by digits of each color, may contain leading zeros. Example of '
             'painting a number for A= 3A= 3 and B= 13B= 13 The figure above '
             'shows an example of painting the number x= 02165x= 02165 of n= '
             '5n= 5 digits for A= 3A= 3 and B= 13B= 13. The red digits form '
             'the number 015015, which is divisible by 33, and the black ones '
             '— 2626, which is divisible by 1313. Note that the absolute value '
             'of the difference between the counts of red and black digits is '
             '11, it is impossible to achieve a smaller value.',
  'input': 'The first line contains one integer tt ( 1≤t≤101≤t≤10) — the '
           'number of test cases. Then tt test cases follow. Each test case '
           'consists of two lines. The first line contains three integers nn, '
           'AA, BB ( 2≤n≤402≤n≤40, 1≤A, B≤401≤A, B≤40) . The second line '
           'contains a non- negative integer xx containing exactly nn digits '
           'and probably containing leading zeroes.',
  'note': 'The first test case is considered in the statement. In the second '
          'test case, there are no even digits, so it is impossible to form a '
          'number from its digits that is divisible by 22. In the third test '
          'case, each coloring containing at least one red and one black digit '
          'is possible, so you can color 44 digits in red and 44 in black ( | '
          '4−4| = 0| 4−4| = 0, it is impossible to improve the result) . In '
          'the fourth test case, there is a single desired coloring.',
  'output': 'For each test case, output in a separate line: - 1 if the desired '
            'coloring does not exist; a string ss of nn characters, each of '
            "them is a letter ' R' or ' B' . If the ii- th digit of the number "
            'xx is colored in red, then the ii- th character of the string ss '
            "must be the letter ' R' , otherwise the letter ' B' . The number "
            'formed by digits colored red should divisible by AA. The number '
            'formed by digits colored black should divisible by BB. The value '
            '| r−b| | r−b| should be minimal, where rr is the count of red '
            'digits, bb is the count of black digits. If there are many '
            'possible answers, print any of them.',
  'title': 'Red-Black Number',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1593/F'},
 {'history': 'Theofanis has a string s1s2. . . sn and a character c. He wants '
             'to make all characters of the string equal to c using the '
             'minimum number of operations. In one operation he can choose a '
             'number x ( 1≤x≤n) and for every position i, where i is not '
             'divisible by x, replace si with c. Find the minimum number of '
             'operations required to make all the characters equal to c and '
             'the x- s that he should use in his operations.',
  'input': 'The first line contains a single integer t ( 1≤t≤104) — the number '
           'of test cases. The first line of each test case contains the '
           'integer n ( 3≤n≤3⋅105) and a lowercase Latin letter c — the length '
           'of the string s and the character the resulting string should '
           'consist of. The second line of each test case contains a string s '
           'of lowercase Latin letters — the initial string. It is guaranteed '
           'that the sum of n over all test cases does not exceed 3⋅105.',
  'note': "Let' s describe what happens in the third test case: x1= 2: we "
          'choose all positions that are not divisible by 2 and replace them, '
          'i. e. bzyx → bzbx; x2= 3: we choose all positions that are not '
          'divisible by 3 and replace them, i. e. bzbx → bbbb.',
  'output': 'For each test case, firstly print one integer m — the minimum '
            'number of operations required to make all the characters equal to '
            'c. Next, print m integers x1, x2, . . . , xm ( 1≤xj≤n) — the x- s '
            'that should be used in the order they are given. It can be proved '
            'that under given constraints, an answer always exists. If there '
            'are multiple answers, print any.',
  'title': 'Make Them Equal',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1594/C'},
 {'history': 'It is the hard version of the problem. The difference is that in '
             'this version, there are nodes with already chosen colors. '
             'Theofanis is starving, and he wants to eat his favorite food, '
             'sheftalia. However, he should first finish his homework. Can you '
             'help him with this problem? You have a perfect binary tree of '
             '2k−12k−1 nodes — a binary tree where all vertices ii from 11 to '
             '2k−1−12k−1−1 have exactly two children: vertices 2i2i and 2i+ '
             "12i+ 1. Vertices from 2k−12k−1 to 2k−12k−1 don' t have any "
             "children. You want to color its vertices with the 66 Rubik' s "
             "cube colors ( White, Green, Red, Blue, Orange and Yellow) . Let' "
             's call a coloring good when all edges connect nodes with colors '
             "that are neighboring sides in the Rubik' s cube. A picture of "
             "Rubik' s cube and its 2D map. More formally: a white node can "
             'not be neighboring with white and yellow nodes; a yellow node '
             'can not be neighboring with white and yellow nodes; a green node '
             'can not be neighboring with green and blue nodes; a blue node '
             'can not be neighboring with green and blue nodes; a red node can '
             'not be neighboring with red and orange nodes; an orange node can '
             'not be neighboring with red and orange nodes; However, there are '
             'nn special nodes in the tree, colors of which are already '
             'chosen. You want to calculate the number of the good colorings '
             'of the binary tree. Two colorings are considered different if at '
             'least one node is colored with a different color. The answer may '
             'be too large, so output the answer modulo 109+ 7109+ 7.',
  'input': 'The first line contains the integers kk ( 1≤k≤601≤k≤60) — the '
           'number of levels in the perfect binary tree you need to color. The '
           'second line contains the integer nn ( 1≤n≤min( 2k−1, 2000) '
           '1≤n≤min( 2k−1, 2000) ) — the number of nodes, colors of which are '
           'already chosen. The next nn lines contains integer vv ( '
           '1≤v≤2k−11≤v≤2k−1) and string ss — the index of the node and the '
           'color of the node ( ss is one of the white, yellow, green, blue, '
           'red and orange) . It is guaranteed that each node vv appears in '
           'the input at most once.',
  'note': 'In the picture below, you can see one of the correct colorings of '
          'the first test example.',
  'output': 'Print one integer — the number of the different colorings modulo '
            '109+ 7109+ 7.',
  'title': "Rubik's Cube Coloring (hard version)",
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1594/E2'},
 {'history': 'Monocarp is playing a computer game. Now he wants to complete '
             'the first level of this game. A level is a rectangular grid of 2 '
             'rows and n columns. Monocarp controls a character, which starts '
             'in cell ( 1, 1) — at the intersection of the 1- st row and the '
             "1- st column. Monocarp' s character can move from one cell to "
             'another in one step if the cells are adjacent by side and/ or '
             'corner. Formally, it is possible to move from cell ( x1, y1) to '
             'cell ( x2, y2) in one step if | x1−x2| ≤1 and | y1−y2| ≤1. '
             'Obviously, it is prohibited to go outside the grid. There are '
             "traps in some cells. If Monocarp' s character finds himself in "
             'such a cell, he dies, and the game ends. To complete a level, '
             "Monocarp' s character should reach cell ( 2, n) — at the "
             'intersection of row 2 and column n. Help Monocarp determine if '
             'it is possible to complete the level.',
  'input': 'The first line contains a single integer t ( 1≤t≤100) — the number '
           'of test cases. Then the test cases follow. Each test case consists '
           'of three lines. The first line contains a single integer n ( '
           '3≤n≤100) — the number of columns. The next two lines describe the '
           'level. The i- th of these lines describes the i- th line of the '
           "level — the line consists of the characters ' 0' and ' 1' . The "
           "character ' 0' corresponds to a safe cell, the character ' 1' "
           'corresponds to a trap cell. Additional constraint on the input: '
           'cells ( 1, 1) and ( 2, n) are safe.',
  'note': 'Consider the example from the statement. In the first test case, '
          'one of the possible paths is ( 1, 1) →( 2, 2) →( 2, 3) . In the '
          'second test case, one of the possible paths is ( 1, 1) →( 1, 2) →( '
          '2, 3) →( 2, 4) . In the fourth test case, one of the possible paths '
          'is ( 1, 1) →( 2, 2) →( 1, 3) →( 2, 4) →( 1, 5) →( 2, 6) .',
  'output': 'For each test case, output YES if it is possible to complete the '
            'level, and NO otherwise.',
  'title': 'Computer Game',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1598/A'},
 {'history': 'n students attended the first meeting of the Berland SU '
             'programming course ( n is even) . All students will be divided '
             'into two groups. Each group will be attending exactly one lesson '
             'each week during one of the five working days ( Monday, Tuesday, '
             'Wednesday, Thursday and Friday) , and the days chosen for the '
             'groups must be different. Furthermore, both groups should '
             'contain the same number of students. Each student has filled a '
             'survey in which they told which days of the week are convenient '
             'for them to attend a lesson, and which are not. Your task is to '
             'determine if it is possible to choose two different week days to '
             'schedule the lessons for the group ( the first group will attend '
             'the lesson on the first chosen day, the second group will attend '
             'the lesson on the second chosen day) , and divide the students '
             'into two groups, so the groups have equal sizes, and for each '
             'student, the chosen lesson day for their group is convenient.',
  'input': 'The first line contains a single integer t ( 1≤t≤104) — the number '
           'of testcases. Then the descriptions of t testcases follow. The '
           'first line of each testcase contains one integer n ( 2≤n≤1000) — '
           'the number of students. The i- th of the next n lines contains 5 '
           'integers, each of them is 0 or 1. If the j- th integer is 1, then '
           'the i- th student can attend the lessons on the j- th day of the '
           'week. If the j- th integer is 0, then the i- th student cannot '
           'attend the lessons on the j- th day of the week. Additional '
           'constraints on the input: for each student, at least one of the '
           'days of the week is convenient, the total number of students over '
           "all testcases doesn' t exceed 105.",
  'note': 'In the first testcase, there is a way to meet all the constraints. '
          'For example, the first group can consist of the first and the third '
          'students, they will attend the lessons on Thursday ( the fourth '
          'day) ; the second group can consist of the second and the fourth '
          'students, and they will attend the lessons on Tuesday ( the second '
          'day) . In the second testcase, it is impossible to divide the '
          'students into groups so they attend the lessons on different days.',
  'output': "For each testcase print an answer. If it' s possible to divide "
            'the students into two groups of equal sizes and choose different '
            'days for the groups so each student can attend the lesson in the '
            'chosen day of their group, print " YES" ( without quotes) . '
            'Otherwise, print " NO" ( without quotes) .',
  'title': 'Groups',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1598/B'},
 {'history': "Monocarp has got an array a consisting of n integers. Let' s "
             'denote k as the mathematic mean of these elements ( note that '
             "it' s possible that k is not an integer) . The mathematic mean "
             'of an array of n elements is the sum of elements divided by the '
             'number of these elements ( i. e. sum divided by n ) . Monocarp '
             'wants to delete exactly two elements from a so that the '
             'mathematic mean of the remaining ( n - 2) elements is still '
             'equal to k . Your task is to calculate the number of pairs of '
             'positions [ i, j] ( i < j ) such that if the elements on these '
             'positions are deleted, the mathematic mean of ( n - 2) remaining '
             'elements is equal to k ( that is, it is equal to the mathematic '
             'mean of n elements of the original array a ) .',
  'input': 'The first line contains a single integer t ( 1 ≤ t ≤ 10^ 4 ) — the '
           'number of testcases. The first line of each testcase contains one '
           'integer n ( 3 ≤ n ≤ 2 · 10^ 5 ) — the number of elements in the '
           'array. The second line contains a sequence of integers a_ 1, a_ 2, '
           '. . . , a_ n ( 0 ≤ a_ i ≤ 10^ 9 ) , where a_ i is the i - th '
           "element of the array. The sum of n over all testcases doesn' t "
           'exceed 2 · 10^ 5 .',
  'note': 'In the first example, any pair of elements can be removed since all '
          'of them are equal. In the second example, there is no way to delete '
          "two elements so the mathematic mean doesn' t change. In the third "
          'example, it is possible to delete the elements on positions 1 and 3 '
          ', or the elements on positions 4 and 5 .',
  'output': 'Print one integer — the number of pairs of positions [ i, j] ( i '
            '< j ) such that if the elements on these positions are deleted, '
            'the mathematic mean of ( n - 2) remaining elements is equal to k '
            '( that is, it is equal to the mathematic mean of n elements of '
            'the original array a ) .',
  'title': 'Delete Two Elements',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1598/C'},
 {'history': 'Monocarp is the coach of the Berland State University '
             'programming teams. He decided to compose a problemset for a '
             'training session for his teams. Monocarp has n problems that '
             'none of his students have seen yet. The i - th problem has a '
             'topic a_ i ( an integer from 1 to n ) and a difficulty b_ i ( an '
             'integer from 1 to n ) . All problems are different, that is, '
             'there are no two tasks that have the same topic and difficulty '
             'at the same time. Monocarp decided to select exactly 3 problems '
             'from n problems for the problemset. The problems should satisfy '
             'at least one of two conditions ( possibly, both) : the topics of '
             'all three selected problems are different; the difficulties of '
             'all three selected problems are different. Your task is to '
             'determine the number of ways to select three problems for the '
             'problemset.',
  'input': 'The first line contains a single integer t ( 1 ≤ t ≤ 50000 ) — the '
           'number of testcases. The first line of each testcase contains an '
           'integer n ( 3 ≤ n ≤ 2 · 10^ 5 ) — the number of problems that '
           'Monocarp have. In the i - th of the following n lines, there are '
           'two integers a_ i and b_ i ( 1 ≤ a_ i, b_ i ≤ n ) — the topic and '
           'the difficulty of the i - th problem. It is guaranteed that there '
           'are no two problems that have the same topic and difficulty at the '
           "same time. The sum of n over all testcases doesn' t exceed 2 · 10^ "
           '5 .',
  'note': 'In the first example, you can take the following sets of three '
          'problems: problems 1 , 2 , 4 ; problems 1 , 3 , 4 ; problems 2 , 3 '
          ', 4 . Thus, the number of ways is equal to three.',
  'output': 'Print the number of ways to select three training problems that '
            'meet either of the requirements described in the statement.',
  'title': 'Training Session',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1598/D'},
 {'history': 'You are given a matrix, consisting of nn rows and mm columns. '
             'The rows are numbered top to bottom, the columns are numbered '
             'left to right. Each cell of the matrix can be either free or '
             "locked. Let' s call a path in the matrix a staircase if it: "
             'starts and ends in the free cell; visits only free cells; has '
             'one of the two following structures: the second cell is 11 to '
             'the right from the first one, the third cell is 11 to the bottom '
             'from the second one, the fourth cell is 11 to the right from the '
             'third one, and so on; the second cell is 11 to the bottom from '
             'the first one, the third cell is 11 to the right from the second '
             'one, the fourth cell is 11 to the bottom from the third one, and '
             'so on. In particular, a path, consisting of a single cell, is '
             'considered to be a staircase. Here are some examples of '
             'staircases: Initially all the cells of the matrix are free. You '
             'have to process qq queries, each of them flips the state of a '
             'single cell. So, if a cell is currently free, it makes it '
             'locked, and if a cell is currently locked, it makes it free. '
             'Print the number of different staircases after each query. Two '
             'staircases are considered different if there exists such a cell '
             "that appears in one path and doesn' t appear in the other path.",
  'input': 'The first line contains three integers nn, mm and qq ( 1≤n, '
           'm≤10001≤n, m≤1000; 1≤q≤1041≤q≤104) — the sizes of the matrix and '
           'the number of queries. Each of the next qq lines contains two '
           'integers xx and yy ( 1≤x≤n1≤x≤n; 1≤y≤m1≤y≤m) — the description of '
           'each query.',
  'note': ' ',
  'output': 'Print qq integers — the ii- th value should be equal to the '
            'number of different staircases after ii queries. Two staircases '
            'are considered different if there exists such a cell that appears '
            "in one path and doesn' t appear in the other path.",
  'title': 'Staircases',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1598/E'},
 {'history': "Let' s call a positive integer good if there is no digit 0 in "
             'its decimal representation. For an array of a good numbers a, '
             'one found out that the sum of some two neighboring elements is '
             'equal to x ( i. e. x= ai+ ai+ 1 for some i) . x had turned out '
             'to be a good number as well. Then the elements of the array a '
             'were written out one after another without separators into one '
             'string s. For example, if a= [ 12, 5, 6, 133] , then s= 1256133. '
             'You are given a string s and a number x. Your task is to '
             'determine the positions in the string that correspond to the '
             'adjacent elements of the array that have sum x. If there are '
             'several possible answers, you can print any of them.',
  'input': 'The first line contains the string s ( 2≤| s| ≤5⋅105) . The second '
           'line contains an integer x ( 2≤x< 10200000) . An additional '
           'constraint on the input: the answer always exists, i. e you can '
           'always select two adjacent substrings of the string s so that if '
           'you convert these substrings to integers, their sum is equal to x.',
  'note': 'In the first example s[ 1; 2] = 12 and s[ 3; 3] = 5, 12+ 5= 17. In '
          'the second example s[ 2; 3] = 54 and s[ 4; 6] = 471, 54+ 471= 525. '
          'In the third example s[ 1; 1] = 2 and s[ 2; 2] = 3, 2+ 3= 5. In the '
          'fourth example s[ 2; 7] = 218633 and s[ 8; 13] = 757639, 218633+ '
          '757639= 976272.',
  'output': 'In the first line, print two integers l1, r1, meaning that the '
            'first term of the sum ( ai) is in the string s from position l1 '
            'to position r1. In the second line, print two integers l2, r2, '
            'meaning that the second term of the sum ( ai+ 1) is in the string '
            's from position l2 to position r2.',
  'title': 'The Sum of Good Numbers',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1598/G'},
 {'history': 'You are given two arrays of integers a1, a2, . . . , an and b1, '
             'b2, . . . , bm. You need to insert all elements of b into a in '
             'an arbitrary way. As a result you will get an array c1, c2, . . '
             '. , cn+ m of size n+ m. Note that you are not allowed to change '
             'the order of elements in a, while you can insert elements of b '
             'at arbitrary positions. They can be inserted at the beginning, '
             'between any elements of a, or at the end. Moreover, elements of '
             'b can appear in the resulting array in any order. What is the '
             'minimum possible number of inversions in the resulting array c? '
             'Recall that an inversion is a pair of indices ( i, j) such that '
             'i< j and ci> cj.',
  'input': 'Each test contains multiple test cases. The first line contains '
           'the number of test cases t ( 1≤t≤104) . Description of the test '
           'cases follows. The first line of each test case contains two '
           'integers n and m ( 1≤n, m≤106) . The second line of each test case '
           'contains n integers a1, a2, . . . , an ( 1≤ai≤109) . The third '
           'line of each test case contains m integers b1, b2, . . . , bm ( '
           '1≤bi≤109) . It is guaranteed that the sum of n for all tests cases '
           "in one input doesn' t exceed 106. The sum of m for all tests cases "
           "doesn' t exceed 106 as well.",
  'note': 'Below is given the solution to get the optimal answer for each of '
          'the example test cases ( elements of a are underscored) . In the '
          'first test case, c= [ 1_ , 1, 2_ , 2, 3_ , 3, 4] . In the second '
          'test case, c= [ 1, 2, 3_ , 2_ , 1_ , 3] . In the third test case, '
          'c= [ 1_ , 1, 3, 3_ , 5_ , 3_ , 1_ , 4, 6] .',
  'output': 'For each test case, print one integer — the minimum possible '
            'number of inversions in the resulting array c.',
  'title': 'Optimal Insertion',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1601/C'},
 {'history': 'A group of n alpinists has just reached the foot of the '
             'mountain. The initial difficulty of climbing this mountain can '
             'be described as an integer d. Each alpinist can be described by '
             'two integers s and a, where s is his skill of climbing mountains '
             'and a is his neatness. An alpinist of skill level s is able to '
             'climb a mountain of difficulty p only if p≤s. As an alpinist '
             'climbs a mountain, they affect the path and thus may change '
             'mountain difficulty. Specifically, if an alpinist of neatness a '
             'climbs a mountain of difficulty p the difficulty of this '
             'mountain becomes max( p, a) . Alpinists will climb the mountain '
             'one by one. And before the start, they wonder, what is the '
             'maximum number of alpinists who will be able to climb the '
             'mountain if they choose the right order. As you are the only '
             'person in the group who does programming, you are to answer the '
             'question. Note that after the order is chosen, each alpinist who '
             'can climb the mountain, must climb the mountain at that time.',
  'input': 'The first line contains two integers n and d ( 1≤n≤500000; '
           '0≤d≤109) — the number of alpinists and the initial difficulty of '
           'the mountain. Each of the next n lines contains two integers si '
           'and ai ( 0≤si, ai≤109) that define the skill of climbing and the '
           'neatness of the i- th alpinist.',
  'note': 'In the first example, alpinists 2 and 3 can climb the mountain if '
          'they go in this order. There is no other way to achieve the answer '
          'of 2. In the second example, alpinist 1 is not able to climb '
          'because of the initial difficulty of the mountain, while alpinists '
          '2 and 3 can go up in any order. In the third example, the mountain '
          'can be climbed by alpinists 5, 3 and 4 in this particular order. '
          'There is no other way to achieve optimal answer.',
  'output': 'Print one integer equal to the maximum number of alpinists who '
            'can climb the mountain if they choose the right order to do so.',
  'title': 'Difficult Mountain',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1601/D'},
 {'history': 'You are given a string s . You need to find two non- empty '
             'strings a and b such that the following conditions are '
             'satisfied: Strings a and b are both subsequences of s . For each '
             'index i , character s_ i of string s must belong to exactly one '
             'of strings a or b . String a is lexicographically minimum '
             'possible; string b may be any possible string. Given string s , '
             'print any valid a and b . Reminder: A string a ( b ) is a '
             'subsequence of a string s if a ( b ) can be obtained from s by '
             'deletion of several ( possibly, zero) elements. For example, " '
             'dores" , " cf" , and " for" are subsequences of " codeforces" , '
             'while " decor" and " fork" are not. A string x is '
             'lexicographically smaller than a string y if and only if one of '
             'the following holds: x is a prefix of y , but x y ; in the first '
             'position where x and y differ, the string x has a letter that '
             'appears earlier in the alphabet than the corresponding letter in '
             'y .',
  'input': 'Each test contains multiple test cases. The first line contains '
           'the number of test cases t ( 1 ≤ t ≤ 1000 ) . Description of the '
           'test cases follows. The first and only line of each test case '
           'contains one string s ( 2 ≤ | s| ≤ 100 where | s| means the length '
           'of s ) . String s consists of lowercase Latin letters.',
  'note': 'In the first test case, there are only two choices: either a = f '
          'and b = c or a = c and b = f. And a = c is lexicographically '
          'smaller than a = f. In the second test case, a is the only '
          'character in the string. In the third test case, it can be proven '
          'that b is the lexicographically smallest subsequence of s . The '
          'second string can be of two variants; one of them is given here.',
  'output': 'For each test case, print the strings a and b that satisfy the '
            'given conditions. If there are multiple answers, print any.',
  'title': 'Two Subsequences',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1602/A'},
 {'history': 'Black is gifted with a Divine array a consisting of n ( '
             '1≤n≤2000) integers. Each position in a has an initial value. '
             'After shouting a curse over the array, it becomes angry and '
             'starts an unstoppable transformation. The transformation '
             'consists of infinite steps. Array a changes at the i- th step in '
             'the following way: for every position j, aj becomes equal to the '
             'number of occurrences of aj in a before starting this step. Here '
             'is an example to help you understand the process better: Initial '
             'array: 2 1 1 4 3 1 2After the 1- st step: 2 3 3 1 1 3 2After the '
             '2- nd step: 2 3 3 2 2 3 2After the 3- rd step: 4 3 3 4 4 3 4. . '
             '. . . . In the initial array, we had two 2- s, three 1- s, only '
             'one 4 and only one 3, so after the first step, each element '
             'became equal to the number of its occurrences in the initial '
             'array: all twos changed to 2, all ones changed to 3, four '
             'changed to 1 and three changed to 1. The transformation steps '
             'continue forever. You have to process q queries: in each query, '
             'Black is curious to know the value of ax after the k- th step of '
             'transformation.',
  'input': 'Each test contains multiple test cases. The first line contains '
           'the number of test cases t ( 1≤t≤1000) . Description of the test '
           'cases follows. The first line of each test case contains an '
           'integer n ( 1≤n≤2000) — the size of the array a. The second line '
           'of each test case contains n integers a1, a2, . . . , an ( 1≤ai≤n) '
           '— the initial values of array a. The third line of each test case '
           'contains a single integer q ( 1≤q≤100000) — the number of queries. '
           'Next q lines contain the information about queries — one query per '
           'line. The i- th line contains two integers xi and ki ( 1≤xi≤n; '
           '0≤ki≤109) , meaning that Black is asking for the value of axi '
           'after the ki- th step of transformation. ki= 0 means that Black is '
           'interested in values of the initial array. It is guaranteed that '
           "the sum of n over all test cases doesn' t exceed 2000 and the sum "
           "of q over all test cases doesn' t exceed 100000.",
  'note': 'The first test case was described ih the statement. It can be seen '
          'that: k1= 0 ( initial array) : a3= 1; k2= 1 ( after the 1- st step) '
          ': a1= 2; k3= 2 ( after the 2- nd step) : a2= 3; k4= 1 ( after the '
          '1- st step) : a6= 3. For the second test case, Initial array: 1 '
          '1After the 1- st step: 2 2After the 2- nd step: 2 2. . . . . . It '
          'can be seen that: k1= 0 ( initial array) : a1= 1; k2= 1000000000: '
          'a2= 2;',
  'output': 'For each test case, print q answers. The i- th of them should be '
            'the value of axi after the ki- th step of transformation. It can '
            'be shown that the answer to each query is unique.',
  'title': 'Divine Array',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1602/B'},
 {'history': 'It was October 18, 2017. Shohag, a melancholic soul, made a '
             'strong determination that he will pursue Competitive Programming '
             'seriously, by heart, because he found it fascinating. Fast '
             'forward to 4 years, he is happy that he took this road. He is '
             'now creating a contest on Codeforces. He found an astounding '
             'problem but has no idea how to solve this. Help him to solve the '
             'final problem of the round. You are given three integers n, k '
             'and x. Find the number, modulo 998244353, of integer sequences '
             'a1, a2, . . . , an such that the following conditions are '
             'satisfied: 0≤ai< 2k for each integer i from 1 to n. There is no '
             'non- empty subsequence in a such that the bitwise XOR of the '
             'elements of the subsequence is x. A sequence b is a subsequence '
             'of a sequence c if b can be obtained from c by deletion of '
             'several ( possibly, zero or all) elements.',
  'input': 'The first line contains a single integer t ( 1≤t≤105) — the number '
           'of test cases. The first and only line of each test case contains '
           'three space- separated integers n, k, and x ( 1≤n≤109, 0≤k≤107, '
           '0≤x< 2min( 20, k) ) . It is guaranteed that the sum of k over all '
           'test cases does not exceed 5⋅107.',
  'note': 'In the first test case, the valid sequences are [ 1, 2] , [ 1, 3] , '
          '[ 2, 1] , [ 2, 3] , [ 3, 1] and [ 3, 2] . In the second test case, '
          'the only valid sequence is [ 0, 0] .',
  'output': 'For each test case, print a single integer — the answer to the '
            'problem.',
  'title': 'October 18, 2017',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1603/F'},
 {'history': 'Ashish has a binary string s of length n that he wants to sort '
             'in non- decreasing order. He can perform the following '
             'operation: Choose a subsequence of any length such that its '
             'elements are in non- increasing order. Formally, choose any k '
             'such that 1≤k≤n and any sequence of k indices 1≤i1< i2< . . . < '
             'ik≤n such that si1≥si2≥. . . ≥sik. Reverse this subsequence in- '
             'place. Formally, swap si1 with sik, swap si2 with sik−1, . . . '
             'and swap si⌊k/ 2⌋ with si⌈k/ 2⌉+ 1 ( Here ⌊x⌋ denotes the '
             'largest integer not exceeding x, and ⌈x⌉ denotes the smallest '
             'integer not less than x) Find the minimum number of operations '
             'required to sort the string in non- decreasing order. It can be '
             'proven that it is always possible to sort the given binary '
             'string in at most n operations.',
  'input': 'The first line contains a single integer t ( 1≤t≤1000) — the '
           'number of test cases. The description of the test cases follows. '
           'The first line of each test case contains an integer n ( 1≤n≤1000) '
           '— the length of the binary string s. The second line of each test '
           'case contains a binary string s of length n containing only 0s and '
           '1s. It is guaranteed that the sum of n over all test cases does '
           'not exceed 1000.',
  'note': 'In the first test case, the binary string is already sorted in non- '
          'decreasing order. In the second test case, we can perform the '
          'following operation: k= 4: choose the indices 1, 3, 4, 51_ 0 1_ 0_ '
          '0_ → 0_ 0 0_ 1_ 1_ In the third test case, we can perform the '
          'following operation: k= 3: choose the indices 3, 5, 60 0 1_ 0 0_ 0_ '
          '→ 0 0 0_ 0 0_ 1_',
  'output': 'For each test case output the following: The minimum number of '
            'operations m in the first line ( 0≤m≤n) . Each of the following m '
            'lines should be of the form: k i1 i2 . . . ik, where k is the '
            'length and i1< i2< . . . < ik are the indices of the chosen '
            'subsequence. For them the conditions from the statement must '
            'hold.',
  'title': 'Reverse Sort',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1605/B'},
 {'history': "Ashish has a string s of length n containing only characters ' "
             "a' , ' b' and ' c' . He wants to find the length of the smallest "
             'substring, which satisfies the following conditions: Length of '
             "the substring is at least 2 ' a' occurs strictly more times in "
             "this substring than ' b' ' a' occurs strictly more times in this "
             "substring than ' c' Ashish is busy planning his next Codeforces "
             'round. Help him solve the problem. A string a is a substring of '
             'a string b if a can be obtained from b by deletion of several ( '
             'possibly, zero or all) characters from the beginning and several '
             '( possibly, zero or all) characters from the end.',
  'input': 'The first line contains a single integer t ( 1≤t≤105) — the number '
           'of test cases. The description of test cases follows. The first '
           'line of each test case contains a single integer n ( 2≤n≤106) — '
           'the length of the string s. The second line of each test case '
           "contains a string s consisting only of characters ' a' , ' b' and "
           "' c' . It is guaranteed that the sum of n over all test cases does "
           'not exceed 106.',
  'note': 'Consider the first test case. In the substring " aa" , \' a\' '
          "occurs twice, while ' b' and ' c' occur zero times. Since ' a' "
          'occurs strictly more times than \' b\' and \' c\' , the substring " '
          'aa" satisfies the condition and the answer is 2. The substring " a" '
          'also satisfies this condition, however its length is not at least '
          '2. In the second test case, it can be shown that in none of the '
          'substrings of " cbabb" does \' a\' occur strictly more times than '
          '\' b\' and \' c\' each. In the third test case, " cacabccc" , the '
          'length of the smallest substring that satisfies the conditions is '
          '3.',
  'output': 'For each test case, output the length of the smallest substring '
            'which satisfies the given conditions or print −1 if there is no '
            'such substring.',
  'title': 'Dominant Character',
  'topics': ['implementation', 'strings'],
  'url': 'https://codeforces.com/problemset/problem/1605/C'},
 {'history': 'Eikooc and Sushi play a game. The game is played on a tree '
             'having nn nodes numbered 11 to nn. Recall that a tree having nn '
             'nodes is an undirected, connected graph with n−1n−1 edges. They '
             'take turns alternately moving a token on the tree. Eikooc makes '
             'the first move, placing the token on any node of her choice. '
             'Sushi makes the next move, followed by Eikooc, followed by '
             'Sushi, and so on. In each turn after the first, a player must '
             'move the token to a node uu such that uu is adjacent to the node '
             'vv the token is currently on uu has not been visited before '
             'u⊕v≤min( u, v) u⊕v≤min( u, v) Here x⊕yx⊕y denotes the bitwise '
             'XOR operation on integers xx and yy. Both the players play '
             'optimally. The player who is unable to make a move loses. The '
             'following are examples which demonstrate the rules of the game. '
             'Suppose Eikooc starts the game by placing the token at node 44. '
             'Sushi then moves the token to node 66, which is unvisited and '
             'adjacent to 44. It also holds that 6⊕4= 2≤min( 6, 4) 6⊕4= 2≤min( '
             '6, 4) . In the next turn, Eikooc moves the token to node 55, '
             'which is unvisited and adjacent to 66. It holds that 5⊕6= 3≤min( '
             '5, 6) 5⊕6= 3≤min( 5, 6) . Sushi has no more moves to play, so '
             'she loses. Suppose Eikooc starts the game by placing the token '
             'at node 33. Sushi moves the token to node 22, which is unvisited '
             'and adjacent to 33. It also holds that 3⊕2= 1≤min( 3, 2) 3⊕2= '
             '1≤min( 3, 2) . Eikooc cannot move the token to node 66 since '
             '6⊕2= 4≰min( 6, 2) 6⊕2= 4≰min( 6, 2) . Since Eikooc has no '
             'moves to play, she loses. Before the game begins, Eikooc decides '
             'to sneakily relabel the nodes of the tree in her favour. '
             'Formally, a relabeling is a permutation pp of length nn ( '
             'sequence of nn integers wherein each integer from 11 to nn '
             'occurs exactly once) where pipi denotes the new numbering of '
             'node ii. She wants to maximize the number of nodes she can '
             'choose in the first turn which will guarantee her a win. Help '
             'Eikooc find any relabeling which will help her do so.',
  'input': 'The first line contains a single integer t ( 1≤t≤105) t ( 1≤t≤105) '
           '— the number of test cases. The description of each test case is '
           'as follows. The first line of each test case contains an integer n '
           '( 1≤n≤2⋅105) n ( 1≤n≤2⋅105) — the number of nodes in the tree. The '
           'next n−1n−1 lines contain two integers uu and vv ( 1≤u, v≤n; u= '
           '̸v) ( 1≤u, v≤n; u= ̸v) — denoting an edge between nodes uu and vv. '
           'It is guaranteed that the sum of nn over all test cases does not '
           'exceed 2⋅1052⋅105.',
  'note': 'In the first test case, Eikooc has only one choice. Sushi will have '
          'no moves to play after Eikooc chooses this node and Eikooc will '
          'win. In the second test case, 1⊕2= 3≰min( 1, 2) 1⊕2= 3≰min( 1, 2) '
          '. Hence, after Eikooc picks either of the nodes, Sushi will have no '
          'moves to play and Eikooc will win. Both 1, 21, 2 and 2, 12, 1 are '
          'optimal relabelings.',
  'output': 'For each test case print any suitable relabeling — a permutation '
            'of length nn which maximizes the number of nodes that can be '
            'chosen in the first turn that guarantee a win for Eikooc. If '
            'there are multiple such relabelings, you may print any of them.',
  'title': 'Treelabeling',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1605/D'},
 {'history': 'Jeevan has two arrays a and b of size n. He is fond of '
             'performing weird operations on arrays. This time, he comes up '
             'with two types of operations: Choose any i ( 1≤i≤n) and '
             'increment aj by 1 for every j which is a multiple of i and '
             '1≤j≤n. Choose any i ( 1≤i≤n) and decrement aj by 1 for every j '
             'which is a multiple of i and 1≤j≤n. He wants to convert array a '
             'into an array b using the minimum total number of operations. '
             'However, Jeevan seems to have forgotten the value of b1. So he '
             'makes some guesses. He will ask you q questions corresponding to '
             'his q guesses, the i- th of which is of the form: If b1= xi, '
             'what is the minimum number of operations required to convert a '
             'to b? Help him by answering each question.',
  'input': 'The first line contains a single integer n ( 1≤n≤2⋅105) — the size '
           'of arrays a and b. The second line contains n integers a1, a2, . . '
           '. , an ( 1≤ai≤106) . The third line contains n integers b1, b2, . '
           '. . , bn ( 1≤bi≤106 for i= ̸1; b1= −1, representing that the value '
           'of b1 is unknown) . The fourth line contains a single integer q ( '
           '1≤q≤2⋅105) — the number of questions. Each of the following q '
           'lines contains a single integer xi ( 1≤xi≤106) — representing the '
           'i- th question.',
  'note': 'Consider the first test case. b1= 1: We need to convert [ 3, 7] →[ '
          '1, 5] . We can perform the following operations: [ 3, 7] i = '
          '1→decrease [ 2, 6] i = 1→decrease [ 1, 5] Hence the answer is 2. '
          'b1= 4: We need to convert [ 3, 7] →[ 4, 5] . We can perform the '
          'following operations: [ 3, 7] i = 2→decrease [ 3, 6] i = 2→decrease '
          '[ 3, 5] i = 1→increase [ 4, 6] i = 2→decrease [ 4, 5] Hence the '
          'answer is 4. b1= 3: We need to convert [ 3, 7] →[ 3, 5] . We can '
          'perform the following operations: [ 3, 7] i = 2→decrease [ 3, 6] i '
          '= 2→decrease [ 3, 5] Hence the answer is 2.',
  'output': 'Output q integers — the answers to each of his q questions.',
  'title': 'Array Equalizer',
  'topics': ['implementation', 'sortings'],
  'url': 'https://codeforces.com/problemset/problem/1605/E'},
 {'history': 'You are given a string s of length n consisting of characters a '
             'and/ or b. Let AB( s) be the number of occurrences of string ab '
             'in s as a substring. Analogically, BA( s) is the number of '
             'occurrences of ba in s as a substring. In one step, you can '
             'choose any index i and replace si with character a or b. What is '
             'the minimum number of steps you need to make to achieve AB( s) = '
             'BA( s) ? Reminder: The number of occurrences of string d in s as '
             'substring is the number of indices i ( 1≤i≤| s| −| d| + 1) such '
             'that substring sisi+ 1. . . si+ | d| −1 is equal to d. For '
             'example, AB( aabbbabaa) = 2 since there are two indices i: i= 2 '
             'where aabbbabaa and i= 6 where aabbbabaa.',
  'input': 'Each test contains multiple test cases. The first line contains '
           'the number of test cases t ( 1≤t≤1000) . Description of the test '
           'cases follows. The first and only line of each test case contains '
           'a single string s ( 1≤| s| ≤100, where | s| is the length of the '
           'string s) , consisting only of characters a and/ or b.',
  'note': 'In the first test case, both AB( s) = 0 and BA( s) = 0 ( there are '
          'no occurrences of ab ( ba) in b) , so can leave s untouched. In the '
          'second test case, AB( s) = 2 and BA( s) = 2, so you can leave s '
          'untouched. In the third test case, AB( s) = 1 and BA( s) = 0. For '
          'example, we can change s1 to b and make both values zero. In the '
          'fourth test case, AB( s) = 2 and BA( s) = 1. For example, we can '
          'change s6 to a and make both values equal to 1.',
  'output': 'For each test case, print the resulting string s with AB( s) = '
            "BA( s) you' ll get making the minimum number of steps. If there "
            'are multiple answers, print any of them.',
  'title': 'AB Balance',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1606/A'},
 {'history': 'Berland State University has received a new update for the '
             'operating system. Initially it is installed only on the 1- st '
             'computer. Update files should be copied to all n computers. The '
             'computers are not connected to the internet, so the only way to '
             'transfer update files from one computer to another is to copy '
             'them using a patch cable ( a cable connecting two computers '
             'directly) . Only one patch cable can be connected to a computer '
             'at a time. Thus, from any computer where the update files are '
             'installed, they can be copied to some other computer in exactly '
             'one hour. Your task is to find the minimum number of hours '
             'required to copy the update files to all n computers if there '
             'are only k patch cables in Berland State University.',
  'input': 'The first line contains a single integer t ( 1≤t≤105) — the number '
           'of test cases. Each test case consists of a single line that '
           'contains two integers n and k ( 1≤k≤n≤1018) — the number of '
           'computers and the number of patch cables.',
  'note': "Let' s consider the test cases of the example: n= 8, k= 3: during "
          'the first hour, we copy the update files from the computer 1 to the '
          'computer 2; during the second hour, we copy the update files from '
          'the computer 1 to the computer 3, and from the computer 2 to the '
          'computer 4; during the third hour, we copy the update files from '
          'the computer 1 to the computer 5, from the computer 2 to the '
          'computer 6, and from the computer 3 to the computer 7; during the '
          'fourth hour, we copy the update files from the computer 2 to the '
          'computer 8. n= 6, k= 6: during the first hour, we copy the update '
          'files from the computer 1 to the computer 2; during the second '
          'hour, we copy the update files from the computer 1 to the computer '
          '3, and from the computer 2 to the computer 4; during the third '
          'hour, we copy the update files from the computer 1 to the computer '
          '5, and from the computer 2 to the computer 6. n= 7, k= 1: during '
          'the first hour, we copy the update files from the computer 1 to the '
          'computer 2; during the second hour, we copy the update files from '
          'the computer 1 to the computer 3; during the third hour, we copy '
          'the update files from the computer 1 to the computer 4; during the '
          'fourth hour, we copy the update files from the computer 4 to the '
          'computer 5; during the fifth hour, we copy the update files from '
          'the computer 4 to the computer 6; during the sixth hour, we copy '
          'the update files from the computer 3 to the computer 7.',
  'output': 'For each test case print one integer — the minimum number of '
            'hours required to copy the update files to all n computers.',
  'title': 'Update Files',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1606/B'},
 {'history': 'You are given a matrix, consisting of n rows and m columns. The '
             'j- th cell of the i- th row contains an integer aij. First, you '
             'have to color each row of the matrix either red or blue in such '
             'a way that at least one row is colored red and at least one row '
             'is colored blue. Then, you have to choose an integer k ( 1≤k< m) '
             'and cut the colored matrix in such a way that the first k '
             'columns become a separate matrix ( the left matrix) and the last '
             'm−k columns become a separate matrix ( the right matrix) . The '
             'coloring and the cut are called perfect if two properties hold: '
             'every red cell in the left matrix contains an integer greater '
             'than every blue cell in the left matrix; every blue cell in the '
             'right matrix contains an integer greater than every red cell in '
             'the right matrix. Find any perfect coloring and cut, or report '
             'that there are none.',
  'input': 'The first line contains a single integer t ( 1≤t≤1000) — the '
           'number of testcases. Then the descriptions of t testcases follow. '
           'The first line of each testcase contains two integers n and m ( '
           '2≤n, m≤5⋅105; n⋅m≤106) — the number of rows and the number of '
           'columns in the matrix, respectively. The i- th of the next n lines '
           'contains m integers ai1, ai2, . . . , aim ( 1≤aij≤106) . The sum '
           "of n⋅m over all testcases doesn' t exceed 106.",
  'note': 'The coloring and the cut for the first testcase:',
  'output': 'For each testcase print an answer. If there are no perfect '
            'colorings and cuts in the matrix, then print " NO" . Otherwise, '
            'first, print " YES" . Then a string, consisting of n characters: '
            "the i- th character should be ' R' if the i- th row is colored "
            "red and ' B' if it' s colored blue. The string should contain at "
            "least one ' R' and at least one ' B' . Finally, print an integer "
            'k ( 1≤k< m) — the number of columns from the left that are cut.',
  'title': 'Red-Blue Matrix',
  'topics': ['implementation', 'sortings'],
  'url': 'https://codeforces.com/problemset/problem/1606/D'},
 {'history': 'You are given a keyboard that consists of 26 keys. The keys are '
             'arranged sequentially in one row in a certain order. Each key '
             'corresponds to a unique lowercase Latin letter. You have to type '
             'the word s on this keyboard. It also consists only of lowercase '
             'Latin letters. To type a word, you need to type all its letters '
             'consecutively one by one. To type each letter you must position '
             'your hand exactly over the corresponding key and press it. '
             'Moving the hand between the keys takes time which is equal to '
             'the absolute value of the difference between positions of these '
             'keys ( the keys are numbered from left to right) . No time is '
             'spent on pressing the keys and on placing your hand over the '
             'first letter of the word. For example, consider a keyboard where '
             "the letters from ' a' to ' z' are arranged in consecutive "
             "alphabetical order. The letters ' h' , ' e' , ' l' and ' o' then "
             'are on the positions 8, 5, 12 and 15, respectively. Therefore, '
             'it will take | 5−8| + | 12−5| + | 12−12| + | 15−12| = 13 units '
             'of time to type the word " hello" . Determine how long it will '
             'take to print the word s.',
  'input': 'The first line contains an integer t ( 1≤t≤1000) — the number of '
           'test cases. The next 2t lines contain descriptions of the test '
           'cases. The first line of a description contains a keyboard — a '
           'string of length 26, which consists only of lowercase Latin '
           "letters. Each of the letters from ' a' to ' z' appears exactly "
           'once on the keyboard. The second line of the description contains '
           'the word s. The word has a length from 1 to 50 letters inclusive '
           'and consists of lowercase Latin letters.',
  'note': ' ',
  'output': 'Print t lines, each line containing the answer to the '
            'corresponding test case. The answer to the test case is the '
            'minimal time it takes to type the word s on the given keyboard.',
  'title': 'Linear Keyboard',
  'topics': ['implementation', 'strings'],
  'url': 'https://codeforces.com/problemset/problem/1607/A'},
 {'history': 'Yelisey has an array a of n integers. If a has length strictly '
             'greater than 1, then Yelisei can apply an operation called '
             'minimum extraction to it: First, Yelisei finds the minimal '
             'number m in the array. If there are several identical minima, '
             'Yelisey can choose any of them. Then the selected minimal '
             'element is removed from the array. After that, m is subtracted '
             'from each remaining element. Thus, after each operation, the '
             'length of the array is reduced by 1. For example, if a= [ 1, 6, '
             '−4, −2, −4] , then the minimum element in it is a3= −4, which '
             'means that after this operation the array will be equal to a= [ '
             '1−( −4) , 6−( −4) , −2−( −4) , −4−( −4) ] = [ 5, 10, 2, 0] . '
             'Since Yelisey likes big numbers, he wants the numbers in the '
             'array a to be as big as possible. Formally speaking, he wants to '
             'make the minimum of the numbers in array a to be maximal '
             'possible ( i. e. he want to maximize a minimum) . To do this, '
             'Yelisey can apply the minimum extraction operation to the array '
             'as many times as he wants ( possibly, zero) . Note that the '
             'operation cannot be applied to an array of length 1. Help him '
             'find what maximal value can the minimal element of the array '
             'have after applying several ( possibly, zero) minimum extraction '
             'operations to the array.',
  'input': 'The first line contains an integer t ( 1≤t≤104) — the number of '
           'test cases. The next 2t lines contain descriptions of the test '
           'cases. In the description of each test case, the first line '
           'contains an integer n ( 1≤n≤2⋅105) — the original length of the '
           'array a. The second line of the description lists n space- '
           'separated integers ai ( −109≤ai≤109) — elements of the array a. It '
           'is guaranteed that the sum of n over all test cases does not '
           'exceed 2⋅105.',
  'note': 'In the first example test case, the original length of the array n= '
          '1. Therefore minimum extraction cannot be applied to it. Thus, the '
          'array remains unchanged and the answer is a1= 10. In the second set '
          'of input data, the array will always consist only of zeros. In the '
          'third set, the array will be changing as follows: [ −1, 2, 0] →[ 3, '
          '1] →[ 2] . The minimum elements are highlighted with blue. The '
          'maximal one is 2. In the fourth set, the array will be modified as '
          '[ 2, 10, 1, 7] →[ 1, 9, 6] →[ 8, 5] →[ 3] . Similarly, the maximum '
          'of the minimum elements is 5.',
  'output': 'Print t lines, each of them containing the answer to the '
            'corresponding test case. The answer to the test case is a single '
            'integer — the maximal possible minimum in a, which can be '
            'obtained by several applications of the described operation to '
            'it.',
  'title': 'Minimum Extraction',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1607/C'},
 {'history': 'You are given an array of integers a of length n. The elements '
             'of the array can be either different or the same. Each element '
             'of the array is colored either blue or red. There are no '
             'unpainted elements in the array. One of the two operations '
             'described below can be applied to an array in a single step: '
             'either you can select any blue element and decrease its value by '
             '1; or you can select any red element and increase its value by '
             '1. Situations in which there are no elements of some color at '
             'all are also possible. For example, if the whole array is '
             'colored blue or red, one of the operations becomes unavailable. '
             'Determine whether it is possible to make 0 or more steps such '
             'that the resulting array is a permutation of numbers from 1 to '
             'n? In other words, check whether there exists a sequence of '
             'steps ( possibly empty) such that after applying it, the array a '
             'contains in some order all numbers from 1 to n ( inclusive) , '
             'each exactly once.',
  'input': 'The first line contains an integer t ( 1≤t≤104) — the number of '
           'input data sets in the test. The description of each set of input '
           'data consists of three lines. The first line contains an integer n '
           '( 1≤n≤2⋅105) — the length of the original array a. The second line '
           'contains n integers a1, a2, . . . , an ( −109≤ai≤109) — the array '
           'elements themselves. The third line has length n and consists '
           "exclusively of the letters ' B' and/ or ' R' : ith character is ' "
           "B' if ai is colored blue, and is ' R' if colored red. It is "
           'guaranteed that the sum of n over all input sets does not exceed '
           '2⋅105.',
  'note': 'In the first test case of the example, the following sequence of '
          'moves can be performed: choose i= 3, element a3= 5 is blue, so we '
          'decrease it, we get a= [ 1, 2, 4, 2] ; choose i= 2, element a2= 2 '
          'is red, so we increase it, we get a= [ 1, 3, 4, 2] ; choose i= 3, '
          'element a3= 4 is blue, so we decrease it, we get a= [ 1, 3, 3, 2] ; '
          'choose i= 2, element a2= 2 is red, so we increase it, we get a= [ '
          '1, 4, 3, 2] . We got that a is a permutation. Hence the answer is '
          'YES.',
  'output': 'Print t lines, each of which contains the answer to the '
            'corresponding test case of the input. Print YES as an answer if '
            'the corresponding array can be transformed into a permutation, '
            'and NO otherwise. You can print the answer in any case ( for '
            'example, the strings yEs, yes, Yes, and YES will be recognized as '
            'a positive answer) .',
  'title': 'Blue-Red Permutation',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1607/D'},
 {'history': 'The robot is located on a checkered rectangular board of size '
             'n×mn×m ( nn rows, mm columns) . The rows in the board are '
             'numbered from 11 to nn from top to bottom, and the columns — '
             'from 11 to mm from left to right. The robot is able to move from '
             'the current cell to one of the four cells adjacent by side. The '
             'sequence of commands ss executed by the robot is given. Each '
             "command is denoted by one of the symbols ' L' , ' R' , ' D' or ' "
             "U' , and triggers the movement to left, right, down or up, "
             'respectively. The robot can start its movement in any cell. The '
             'robot executes the commands starting from the first one, '
             'strictly in the order in which they are listed in ss. If the '
             'robot moves beyond the edge of the board, it falls and breaks. A '
             'command that causes the robot to break is not considered '
             "successfully executed. The robot' s task is to execute as many "
             'commands as possible without falling off the board. For example, '
             'on board 3×33×3, if the robot starts a sequence of actions s= s= '
             '" RRDLUU" ( " right" , " right" , " down" , " left" , " up" , " '
             'up" ) from the central cell, the robot will perform one command, '
             'then the next command will force him to cross the edge. If the '
             'robot starts moving from the cell ( 2, 1) ( 2, 1) ( second row, '
             'first column) then all commands will be executed successfully '
             'and the robot will stop at the cell ( 1, 2) ( 1, 2) ( first row, '
             'second column) . The robot starts from cell ( 2, 1) ( 2, 1) ( '
             'second row, first column) . It moves right, right, down, left, '
             'up, and up. In this case it ends in the cell ( 1, 2) ( 1, 2) ( '
             'first row, second column) . Determine the cell from which the '
             'robot should start its movement in order to execute as many '
             'commands as possible.',
  'input': 'The first line contains an integer tt ( 1≤t≤1041≤t≤104) — the '
           'number of test cases. The next 2t2t lines contain descriptions of '
           'the test cases. In the description of each test case, the first '
           'line contains two integers nn and mm ( 1≤n, m≤1061≤n, m≤106) — the '
           'height and width of the field that the robot is located on. The '
           'second line of the description is a string ss consisting solely of '
           "characters ' L' , ' R' , ' D' and ' U' — the sequence of commands "
           'the robot executes. The string has a length from 11 to 106106 '
           'commands. It is guaranteed that the total length of ss over all '
           'test cases does not exceed 106106.',
  'note': ' ',
  'output': 'Print tt lines, each of which contains the answer to the '
            'corresponding test case. The answer to the test case are two '
            'integers rr ( 1≤r≤n1≤r≤n) and cc ( 1≤c≤m1≤c≤m) , separated by a '
            'space — the coordinates of the cell ( row number and column '
            'number) from which the robot should start moving to perform as '
            'many commands as possible. If there are several such cells, you '
            'may output any of them.',
  'title': 'Robot on the Board 1',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1607/E'},
 {'history': 'The robot is located on a checkered rectangular board of size '
             'n×m ( n rows, m columns) . The rows in the board are numbered '
             'from 1 to n from top to bottom, and the columns — from 1 to m '
             'from left to right. The robot is able to move from the current '
             'cell to one of the four cells adjacent by side. Each cell has '
             "one of the symbols ' L' , ' R' , ' D' or ' U' written on it, "
             'indicating the direction in which the robot will move when it '
             'gets in that cell — left, right, down or up, respectively. The '
             'robot can start its movement in any cell. He then moves to the '
             'adjacent square in the direction indicated on the current square '
             'in one move. If the robot moves beyond the edge of the board, it '
             'falls and breaks. If the robot appears in the cell it already '
             "visited before, it breaks ( it stops and doesn' t move anymore) "
             '. Robot can choose any cell as the starting cell. Its goal is to '
             'make the maximum number of steps before it breaks or stops. '
             'Determine from which square the robot should start its movement '
             'in order to execute as many commands as possible. A command is '
             'considered successfully completed if the robot has moved from '
             'the square on which that command was written ( it does not '
             'matter whether to another square or beyond the edge of the '
             'board) .',
  'input': 'The first line contains an integer t ( 1≤t≤10000) — the number of '
           "test cases in the test. Each test case' s description is preceded "
           'by a blank line. Next is a line that contains integers n and m ( '
           '1≤n≤2000; 1≤m≤2000) — the height and width of the board. This line '
           'followed by n lines, the i- th of which describes the i- th line '
           'of the board. Each of them is exactly m letters long and consists '
           "of symbols ' L' , ' R' , ' D' and ' U' . It is guaranteed that the "
           'sum of sizes of all boards in the input does not exceed 4⋅106.',
  'note': ' ',
  'output': 'For each test case, output three integers r, c and d ( 1≤r≤n; '
            '1≤c≤m; d≥0) , which denote that the robot should start moving '
            'from cell ( r, c) to make the maximum number of moves d. If there '
            'are several answers, output any of them.',
  'title': 'Robot on the Board 2',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1607/F'},
 {'history': 'The chef has cooked n dishes yet again: the i- th dish consists '
             'of ai grams of fish and bi grams of meat. Banquet organizers '
             'consider two dishes i and j equal if ai= aj and bi= bj at the '
             'same time. The banquet organizers estimate the variety of n '
             'dishes as follows. The variety of a set of dishes is equal to '
             'the number of different dishes in it. The less variety is, the '
             'better. In order to reduce the variety, a taster was invited. He '
             'will eat exactly mi grams of food from each dish. For each dish, '
             'the taster determines separately how much fish and how much meat '
             'he will eat. The only condition is that he will eat exactly mi '
             'grams of the i- th dish in total. Determine how much of what '
             'type of food the taster should eat from each dish so that the '
             'value of variety is the minimum possible. If there are several '
             'correct answers, you may output any of them.',
  'input': 'The first line of input data contains an integer t ( 1≤t≤104) — '
           "the number of test cases. Each test case' s description is "
           'preceded by a blank line. Next comes a line that contains an '
           'integer n ( 1≤n≤2⋅105) — the number of dishes. Then follows n '
           'lines, i- th of which contains three integers ai, bi and mi ( '
           '0≤ai, bi≤106; 0≤mi≤ai+ bi) — the mass of fish in i- th dish, the '
           'mass of meat in i- th dish and how many grams in total the taster '
           'should eat in i- th dish. The sum of all n values for all input '
           'data sets in the test does not exceed 2⋅105.',
  'note': ' ',
  'output': 'For each test case, print on the first line the minimum value of '
            'variety that can be achieved by eating exactly mi grams of food ( '
            'for all i from 1 to n) from a dish i. Then print n lines that '
            'describe a way to do this: the i- th line should contain two '
            'integers xi and yi ( 0≤xi≤ai; 0≤yi≤bi; xi+ yi= mi) , where xi is '
            'how many grams of fish the taster should eat from i- th dish, and '
            'yi is how many grams of meat. If there are several ways to '
            'achieve a minimum balance, print any of them.',
  'title': 'Banquet Preparations 2',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1607/H'},
 {'history': 'On an endless checkered sheet of paper, n cells are chosen and '
             'colored in three colors, where n is divisible by 3. It turns out '
             'that there are exactly n3 marked cells of each of three colors! '
             "Find the largest such k that it' s possible to choose k3 cells "
             'of each color, remove all other marked cells, and then select '
             'three rectangles with sides parallel to the grid lines so that '
             'the following conditions hold: No two rectangles can intersect ( '
             'but they can share a part of the boundary) . In other words, the '
             'area of intersection of any two of these rectangles must be 0. '
             'The i- th rectangle contains all the chosen cells of the i- th '
             'color and no chosen cells of other colors, for i= 1, 2, 3.',
  'input': 'The first line of the input contains a single integer n — the '
           'number of the marked cells ( 3≤n≤105, n is divisible by 3) . The '
           'i- th of the following n lines contains three integers xi, yi, ci '
           '( | xi| , | yi| ≤109; 1≤ci≤3) , where ( xi, yi) are the '
           "coordinates of the i- th marked cell and ci is its color. It' s "
           'guaranteed that all cells ( xi, yi) in the input are distinct, and '
           'that there are exactly n3 cells of each color.',
  'note': "In the first sample, it' s possible to leave 6 cells with indexes "
          "1, 5, 6, 7, 8, 9. In the second sample, it' s possible to leave 3 "
          'cells with indexes 1, 2, 3.',
  'output': 'Output a single integer k — the largest number of cells you can '
            'leave.',
  'title': 'The Cells on the Paper',
  'topics': ['implementation', 'sortings'],
  'url': 'https://codeforces.com/problemset/problem/1608/E'},
 {'history': 'For an array c of nonnegative integers, MEX( c) denotes the '
             "smallest nonnegative integer that doesn' t appear in it. For "
             'example, MEX( [ 0, 1, 3] ) = 2, MEX( [ 42] ) = 0. You are given '
             'integers n, k, and an array [ b1, b2, . . . , bn] . Find the '
             'number of arrays [ a1, a2, . . . , an] , for which the following '
             'conditions hold: 0≤ai≤n for each i for each i from 1 to n. | '
             'MEX( [ a1, a2, . . . , ai] ) −bi| ≤k for each i from 1 to n. As '
             'this number can be very big, output it modulo 998244353.',
  'input': 'The first line of the input contains two integers n, k ( 1≤n≤2000, '
           '0≤k≤50) . The second line of the input contains n integers b1, b2, '
           '. . . , bn ( −k≤bi≤n+ k) — elements of the array b.',
  'note': ' ',
  'output': 'Output a single integer — the number of arrays which satisfy the '
            'conditions from the statement, modulo 998244353.',
  'title': 'MEX counting',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1608/F'},
 {'history': 'You are given m strings and a tree on n nodes. Each edge has '
             'some letter written on it. You have to answer q queries. Each '
             'query is described by 4 integers u, v, l and r. The answer to '
             'the query is the total number of occurrences of str( u, v) in '
             'strings with indices from l to r. str( u, v) is defined as the '
             'string that is made by concatenating letters written on the '
             'edges on the shortest path from u to v ( in order that they are '
             'traversed) .',
  'input': 'The first line of the input contains three integers n, m and q ( '
           '2≤n≤105, 1≤m, q≤105) . The i- th of the following n−1 lines '
           'contains two integers ui, vi and a lowercase Latin letter ci ( '
           '1≤ui, vi≤n, ui= ̸vi) , denoting the edge between nodes ui, vi with '
           "a character ci on it. It' s guaranteed that these edges form a "
           'tree. The following m lines contain the strings consisting of '
           'lowercase Latin letters. The total length of those strings does '
           'not exceed 105. Then q lines follow, each containing four integers '
           'u, v, l and r ( 1≤u, v≤n, u= ̸v, 1≤l≤r≤m) , denoting the queries.',
  'note': ' ',
  'output': 'For each query print a single integer — the answer to the query.',
  'title': 'Alphabetic Tree',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1608/G'},
 {'history': 'William has array of nn numbers a1, a2, . . . , ana1, a2, . . . '
             ', an. He can perform the following sequence of operations any '
             'number of times: Pick any two items from array aiai and ajaj, '
             'where aiai must be a multiple of 22 ai= ai2ai= ai2 aj= aj⋅2aj= '
             'aj⋅2 Help William find the maximal sum of array elements, which '
             'he can get by performing the sequence of operations described '
             'above.',
  'input': 'Each test contains multiple test cases. The first line contains '
           'the number of test cases tt ( 1≤t≤1041≤t≤104) . Description of the '
           'test cases follows. The first line of each test case contains an '
           'integer nn ( 1≤n≤15) ( 1≤n≤15) , the number of elements in '
           "William' s array. The second line contains nn integers a1, a2, . . "
           '. , ana1, a2, . . . , an ( 1≤ai< 16) ( 1≤ai< 16) , the contents of '
           "William' s array.",
  'note': 'In the first example test case the optimal sequence would be: Pick '
          'i= 2i= 2 and j= 1j= 1. After performing a sequence of operations '
          'a2= 42= 2a2= 42= 2 and a1= 6⋅2= 12a1= 6⋅2= 12, making the array '
          'look as: [ 12, 2, 2] . Pick i= 2i= 2 and j= 1j= 1. After performing '
          'a sequence of operations a2= 22= 1a2= 22= 1 and a1= 12⋅2= 24a1= '
          '12⋅2= 24, making the array look as: [ 24, 1, 2] . Pick i= 3i= 3 and '
          'j= 1j= 1. After performing a sequence of operations a3= 22= 1a3= '
          '22= 1 and a1= 24⋅2= 48a1= 24⋅2= 48, making the array look as: [ 48, '
          '1, 1] . The final answer 48+ 1+ 1= 5048+ 1+ 1= 50. In the third '
          'example test case there is no way to change the sum of elements, so '
          'the answer is 1010.',
  'output': 'For each test case output the maximal sum of array elements after '
            'performing an optimal sequence of operations.',
  'title': 'Divide and Multiply',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1609/A'},
 {'history': 'Before becoming a successful trader William got a university '
             'degree. During his education an interesting situation happened, '
             'after which William started to listen to homework assignments '
             'much more attentively. What follows is the correct formal '
             'description of the homework assignment: You are given a string s '
             'of length n only consisting of characters " a" , " b" and " c" . '
             'There are q queries of format ( pos, c) , meaning replacing the '
             'element of string s at position pos with character c. After each '
             'query you must output the minimal number of characters in the '
             "string, which have to be replaced, so that the string doesn' t "
             'contain string " abc" as a substring. A valid replacement of a '
             'character is replacing it with " a" , " b" or " c" . A string x '
             'is a substring of a string y if x can be obtained from y by '
             'deletion of several ( possibly, zero or all) characters from the '
             'beginning and several ( possibly, zero or all) characters from '
             'the end.',
  'input': 'The first line contains two integers n and q ( 1≤n, q≤105) , the '
           'length of the string and the number of queries, respectively. The '
           'second line contains the string s, consisting of characters " a" , '
           '" b" and " c" . Each of the next q lines contains an integer i and '
           'character c ( 1≤i≤n) , index and the value of the new item in the '
           "string, respectively. It is guaranteed that character' s c value "
           'is " a" , " b" or " c" .',
  'note': 'Let\' s consider the state of the string after each query: s= " '
          'abcabcabc" . In this case 3 replacements can be performed to get, '
          'for instance, string s= " bbcaccabb" . This string does not contain '
          '" abc" as a substring. s= " bbcabcabc" . In this case 2 '
          'replacements can be performed to get, for instance, string s= " '
          'bbcbbcbbc" . This string does not contain " abc" as a substring. s= '
          '" bccabcabc" . In this case 2 replacements can be performed to get, '
          'for instance, string s= " bccbbcbbc" . This string does not contain '
          '" abc" as a substring. s= " bcaabcabc" . In this case 2 '
          'replacements can be performed to get, for instance, string s= " '
          'bcabbcbbc" . This string does not contain " abc" as a substring. s= '
          '" bcabbcabc" . In this case 1 replacements can be performed to get, '
          'for instance, string s= " bcabbcabb" . This string does not contain '
          '" abc" as a substring. s= " bcabccabc" . In this case 2 '
          'replacements can be performed to get, for instance, string s= " '
          'bcabbcabb" . This string does not contain " abc" as a substring. s= '
          '" bcabccaac" . In this case 1 replacements can be performed to get, '
          'for instance, string s= " bcabbcaac" . This string does not contain '
          '" abc" as a substring. s= " bcabccaab" . In this case 1 '
          'replacements can be performed to get, for instance, string s= " '
          'bcabbcaab" . This string does not contain " abc" as a substring. s= '
          '" ccabccaab" . In this case 1 replacements can be performed to get, '
          'for instance, string s= " ccabbcaab" . This string does not contain '
          '" abc" as a substring. s= " ccaaccaab" . In this case the string '
          'does not contain " abc" as a substring and no replacements are '
          'needed.',
  'output': 'For each query output the minimal number of characters that would '
            'have to be replaced so that the string doesn\' t contain " abc" '
            'as a substring.',
  'title': 'William the Vigilant',
  'topics': ['implementation', 'strings'],
  'url': 'https://codeforces.com/problemset/problem/1609/B'},
 {'history': 'While performing complex market analysis William encountered the '
             'following problem: For a given array aa of size nn and a natural '
             'number ee, calculate the number of pairs of natural numbers ( i, '
             'k) ( i, k) which satisfy the following conditions: 1≤i, k1≤i, k '
             'i+ e⋅k≤ni+ e⋅k≤n. Product ai⋅ai+ e⋅ai+ 2⋅e⋅. . . ⋅ai+ k⋅eai⋅ai+ '
             'e⋅ai+ 2⋅e⋅. . . ⋅ai+ k⋅e is a prime number. A prime number ( or '
             'a prime) is a natural number greater than 1 that is not a '
             'product of two smaller natural numbers.',
  'input': 'Each test contains multiple test cases. The first line contains '
           'the number of test cases tt ( 1≤t≤100001≤t≤10000) . Description of '
           'the test cases follows. The first line of each test case contains '
           'two integers nn and ee ( 1≤e≤n≤2⋅105) ( 1≤e≤n≤2⋅105) , the number '
           'of items in the array and number ee, respectively. The second line '
           'contains nn integers a1, a2, . . . , ana1, a2, . . . , an ( '
           '1≤ai≤106) ( 1≤ai≤106) , the contents of the array. It is '
           'guaranteed that the sum of nn over all test cases does not exceed '
           '2⋅1052⋅105.',
  'note': 'In the first example test case two pairs satisfy the conditions: i= '
          '2, k= 1i= 2, k= 1, for which the product is: a2⋅a5= 2a2⋅a5= 2 which '
          'is a prime number. i= 3, k= 1i= 3, k= 1, for which the product is: '
          'a3⋅a6= 19a3⋅a6= 19 which is a prime number. In the second example '
          'test case there are no pairs that satisfy the conditions. In the '
          'third example test case four pairs satisfy the conditions: i= 1, k= '
          '1i= 1, k= 1, for which the product is: a1⋅a4= 2a1⋅a4= 2 which is a '
          'prime number. i= 1, k= 2i= 1, k= 2, for which the product is: '
          'a1⋅a4⋅a7= 2a1⋅a4⋅a7= 2 which is a prime number. i= 3, k= 1i= 3, k= '
          '1, for which the product is: a3⋅a6= 2a3⋅a6= 2 which is a prime '
          'number. i= 6, k= 1i= 6, k= 1, for which the product is: a6⋅a9= '
          '2a6⋅a9= 2 which is a prime number. In the fourth example test case '
          'there are no pairs that satisfy the conditions. In the fifth '
          'example test case five pairs satisfy the conditions: i= 1, k= 1i= '
          '1, k= 1, for which the product is: a1⋅a2= 2a1⋅a2= 2 which is a '
          'prime number. i= 1, k= 2i= 1, k= 2, for which the product is: '
          'a1⋅a2⋅a3= 2a1⋅a2⋅a3= 2 which is a prime number. i= 1, k= 3i= 1, k= '
          '3, for which the product is: a1⋅a2⋅a3⋅a4= 2a1⋅a2⋅a3⋅a4= 2 which is '
          'a prime number. i= 2, k= 1i= 2, k= 1, for which the product is: '
          'a2⋅a3= 2a2⋅a3= 2 which is a prime number. i= 2, k= 2i= 2, k= 2, for '
          'which the product is: a2⋅a3⋅a4= 2a2⋅a3⋅a4= 2 which is a prime '
          'number. In the sixth example test case there are no pairs that '
          'satisfy the conditions.',
  'output': 'For each test case output the answer in the following format: '
            'Output one line containing the number of pairs of numbers ( i, k) '
            '( i, k) which satisfy the conditions.',
  'title': 'Complex Market Analysis',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1609/C'},
 {'history': 'William arrived at a conference dedicated to cryptocurrencies. '
             "Networking, meeting new people, and using friends' connections "
             'are essential to stay up to date with the latest news from the '
             'world of cryptocurrencies. The conference has nn participants, '
             'who are initially unfamiliar with each other. William can '
             'introduce any two people, aa and bb, who were not familiar '
             "before, to each other. William has dd conditions, ii' th of "
             'which requires person xixi to have a connection to person yiyi. '
             'Formally, two people xx and yy have a connection if there is '
             'such a chain p1= x, p2, p3, . . . , pk= yp1= x, p2, p3, . . . , '
             "pk= y for which for all ii from 11 to k−1k−1 it' s true that two "
             'people with numbers pipi and pi+ 1pi+ 1 know each other. For '
             'every ii ( 1≤i≤d1≤i≤d) William wants you to calculate the '
             'maximal number of acquaintances one person can have, assuming '
             'that William satisfied all conditions from 11 and up to and '
             'including ii and performed exactly ii introductions. The '
             'conditions are being checked after William performed ii '
             'introductions. The answer for each ii must be calculated '
             'independently. It means that when you compute an answer for ii, '
             'you should assume that no two people have been introduced to '
             'each other yet.',
  'input': 'The first line contains two integers nn and dd ( 2≤n≤103, '
           '1≤d≤n−12≤n≤103, 1≤d≤n−1) , the number of people, and number of '
           'conditions, respectively. Each of the next dd lines each contain '
           'two integers xixi and yiyi ( 1≤xi, yi≤n, xi= ̸yi1≤xi, yi≤n, xi= '
           '̸yi) , the numbers of people which must have a connection '
           'according to condition ii.',
  'note': 'The explanation for the first test case: In this explanation, the '
          'circles and the numbers in them denote a person with the '
          'corresponding number. The line denotes that William introduced two '
          'connected people. The person marked with red has the most '
          'acquaintances. These are not the only correct ways to introduce '
          'people.',
  'output': 'Output dd integers. iith number must equal the number of '
            'acquaintances the person with the maximal possible acquaintances '
            'will have, if William performed ii introductions and satisfied '
            'the first ii conditions.',
  'title': 'Social Network',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1609/D'},
 {'history': "Let' s call an array of k integers c1, c2, . . . , ck terrible, "
             'if the following condition holds: Let AVG be the c1+ c2+ . . . + '
             "ckk( the average of all the elements of the array, it doesn' t "
             'have to be integer) . Then the number of elements of the array '
             'which are bigger than AVG should be strictly larger than the '
             'number of elements of the array which are smaller than AVG. Note '
             "that elements equal to AVG don' t count. For example c= 1, 4, 4, "
             '5, 6 is terrible because AVG= 4. 0 and 5- th and 4- th elements '
             "are greater than AVG and 1- st element is smaller than AVG. Let' "
             's call an array of m integers b1, b2, . . . , bm bad, if at '
             'least one of its non- empty subsequences is terrible, and good '
             'otherwise. You are given an array of n integers a1, a2, . . . , '
             'an. Find the minimum number of elements that you have to delete '
             'from it to obtain a good array. An array is a subsequence of '
             'another array if it can be obtained from it by deletion of '
             'several ( possibly, zero or all) elements.',
  'input': 'The first line contains an integer t ( 1≤t≤104) — the number of '
           'test cases. The description of test cases follows. The first line '
           'of each test case contains a single integer n ( 2≤n≤2⋅105) — the '
           'size of a. The second line of each testcase contains n integers '
           'a1, a2, . . . , an ( 1≤ai≤109) — elements of array a. In each '
           'testcase for any 1≤i< n it is guaranteed that ai≤ai+ 1. It is '
           "guaranteed that the sum of n over all testcases doesn' t exceed "
           '2⋅105.',
  'note': 'In the first sample, the array a is already good. In the second '
          "sample, it' s enough to delete 1, obtaining array [ 4, 4, 5, 6] , "
          'which is good.',
  'output': 'For each testcase, print the minimum number of elements that you '
            'have to delete from it to obtain a good array.',
  'title': 'AmShZ and G.O.A.T.',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1610/E'},
 {'history': 'Monocarp is a tutor of a group of n students. He communicates '
             'with them using a conference in a popular messenger. Today was a '
             'busy day for Monocarp — he was asked to forward a lot of posts '
             "and announcements to his group, that' s why he had to write a "
             'very large number of messages in the conference. Monocarp knows '
             'the students in the group he is tutoring quite well, so he '
             'understands which message should each student read: Monocarp '
             "wants the student i to read the message mi. Of course, no one' s "
             "going to read all the messages in the conference. That' s why "
             'Monocarp decided to pin some of them. Monocarp can pin any '
             'number of messages, and if he wants anyone to read some message, '
             'he should pin it — otherwise it will definitely be skipped by '
             'everyone. Unfortunately, even if a message is pinned, some '
             'students may skip it anyway. For each student i, Monocarp knows '
             'that they will read at most ki messages. Suppose Monocarp pins t '
             'messages; if t≤ki, then the i- th student will read all the '
             'pinned messages; but if t> ki, the i- th student will choose '
             'exactly ki random pinned messages ( all possible subsets of '
             'pinned messages of size ki are equiprobable) and read only the '
             'chosen messages. Monocarp wants to maximize the expected number '
             'of students that read their respective messages ( i. e. the '
             'number of such indices i that student i reads the message mi) . '
             'Help him to choose how many ( and which) messages should he pin!',
  'input': 'The first line contains one integer n ( 1≤n≤2⋅105) — the number of '
           'students in the conference. Then n lines follow. The i- th line '
           'contains two integers mi and ki ( 1≤mi≤2⋅105; 1≤ki≤20) — the index '
           'of the message which Monocarp wants the i- th student to read and '
           'the maximum number of messages the i- th student will read, '
           'respectively.',
  'note': "Let' s consider the examples from the statement. In the first "
          'example, Monocarp pins the messages 5 and 10. if the first student '
          'reads the message 5, the second student reads the messages 5 and '
          '10, and the third student reads the messages 5 and 10, the number '
          'of students which have read their respective messages will be 2; if '
          'the first student reads the message 10, the second student reads '
          'the messages 5 and 10, and the third student reads the messages 5 '
          'and 10, the number of students which have read their respective '
          'messages will be 3. So, the expected number of students which will '
          'read their respective messages is 52. In the second example, '
          'Monocarp pins the message 10. if the first student reads the '
          'message 10, the second student reads the message 10, and the third '
          'student reads the message 10, the number of students which have '
          'read their respective messages will be 2. So, the expected number '
          'of students which will read their respective messages is 2. If '
          'Monocarp had pinned both messages 5 and 10, the expected number of '
          'students which read their respective messages would have been 2 as '
          'well. In the third example, the expected number of students which '
          'will read their respective messages is 83. In the fourth example, '
          'the expected number of students which will read their respective '
          'messages is 2.',
  'output': 'In the first line, print one integer t ( 1≤t≤2⋅105) — the number '
            'of messages Monocarp should pin. In the second line, print t '
            'distinct integers c1, c2, . . . , ct ( 1≤ci≤2⋅105) — the indices '
            'of the messages Monocarp should pin. The messages can be listed '
            'in any order. If there are multiple answers, print any of them.',
  'title': 'Messages',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1612/E'},
 {'history': 'You are given an array c= [ c1, c2, . . . , cm] . An array a= [ '
             'a1, a2, . . . , an] is constructed in such a way that it '
             'consists of integers 1, 2, . . . , m, and for each i∈[ 1, m] , '
             'there are exactly ci occurrences of integer i in a. So, the '
             "number of elements in a is exactly m∑i= 1ci. Let' s define for "
             'such array a the value f( a) as f( a) = ∑1≤i< j≤nai= ajj−i. In '
             'other words, f( a) is the total sum of distances between all '
             'pairs of equal elements. Your task is to calculate the maximum '
             'possible value of f( a) and the number of arrays yielding the '
             'maximum possible value of f( a) . Two arrays are considered '
             'different, if elements at some position differ.',
  'input': 'The first line contains a single integer m ( 1≤m≤5⋅105) — the size '
           'of the array c. The second line contains m integers c1, c2, . . . '
           ', cm ( 1≤ci≤106) — the array c.',
  'note': 'In the first example, all possible arrays a are permutations of [ '
          '1, 2, 3, 4, 5, 6] . Since each array a will have f( a) = 0, so '
          'maximum value is f( a) = 0 and there are 6! = 720 such arrays. In '
          'the second example, the only possible array consists of 106 ones '
          'and its f( a) = ∑1≤i< j≤106j−i= 166666666666500000 and '
          '166666666666500000mod109+ 7= 499833345.',
  'output': 'Print two integers — the maximum possible value of f( a) and the '
            'number of arrays a with such value. Since both answers may be too '
            'large, print them modulo 109+ 7.',
  'title': 'Max Sum Array',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1612/G'},
 {'history': 'Monocarp wrote down two numbers on a whiteboard. Both numbers '
             'follow a specific format: a positive integer x with p zeros '
             'appended to its end. Now Monocarp asks you to compare these two '
             'numbers. Can you help him?',
  'input': 'The first line contains a single integer t ( 1≤t≤104) — the number '
           'of testcases. The first line of each testcase contains two '
           'integers x1 and p1 ( 1≤x1≤106; 0≤p1≤106) — the description of the '
           'first number. The second line of each testcase contains two '
           'integers x2 and p2 ( 1≤x2≤106; 0≤p2≤106) — the description of the '
           'second number.',
  'note': 'The comparisons in the example are: 20> 19, 1000= 1000, 1999< 2000, '
          '1= 1, 99< 100.',
  'output': 'For each testcase print the result of the comparison of the given '
            'two numbers. If the first number is smaller than the second one, '
            "print ' < ' . If the first number is greater than the second one, "
            "print ' > ' . If they are equal, print ' = ' .",
  'title': 'Long Comparison',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1613/A'},
 {'history': 'You are given a sequence a1, a2, . . . , an consisting of n '
             'pairwise distinct positive integers. Find ⌊n2⌋ different pairs '
             'of integers x and y such that: x= ̸y; x and y appear in a; x mod '
             "y doesn' t appear in a. Note that some x or y can belong to "
             'multiple pairs. ⌊x⌋ denotes the floor function — the largest '
             'integer less than or equal to x. x mod y denotes the remainder '
             'from dividing x by y. If there are multiple solutions, print any '
             'of them. It can be shown that at least one solution always '
             'exists.',
  'input': 'The first line contains a single integer t ( 1≤t≤104) — the number '
           'of testcases. The first line of each testcase contains a single '
           'integer n ( 2≤n≤2⋅105) — the length of the sequence. The second '
           'line of each testcase contains n integers a1, a2, . . . , an ( '
           '1≤ai≤106) . All numbers in the sequence are pairwise distinct. The '
           "sum of n over all testcases doesn' t exceed 2⋅105.",
  'note': 'In the first testcase there are only two pairs: ( 1, 4) and ( 4, 1) '
          '. ⌊22⌋= 1, so we have to find one pair. 1 mod 4= 1, and 1 appears '
          'in a, so that pair is invalid. Thus, the only possible answer is a '
          'pair ( 4, 1) . In the second testcase, we chose pairs 8 mod 2= 0 '
          "and 8 mod 4= 0. 0 doesn' t appear in a, so that answer is valid. "
          'There are multiple possible answers for that testcase. In the third '
          'testcase, the chosen pairs are 9 mod 5= 4 and 7 mod 5= 2. Neither '
          '4, nor 2, appears in a, so that answer is valid.',
  'output': 'The answer for each testcase should contain ⌊n2⌋ different pairs '
            'of integers x and y such that x= ̸y, x and y appear in a and x '
            "mod y doesn' t appear in a. Print the pairs one after another. "
            'You can print the pairs in any order. However, the order of '
            'numbers in the pair should be exactly such that the first number '
            'is x and the second number is y. All pairs should be pairwise '
            'distinct. If there are multiple solutions, print any of them.',
  'title': 'Absent Remainder',
  'topics': ['implementation', 'sortings'],
  'url': 'https://codeforces.com/problemset/problem/1613/B'},
 {'history': 'The company " Divan\' s Sofas" is planning to build n+ 1 '
             'different buildings on a coordinate line so that: the coordinate '
             'of each building is an integer number; no two buildings stand at '
             'the same point. Let xi be the coordinate of the i- th building. '
             'To get from the building i to the building j, Divan spends | '
             'xi−xj| minutes, where | y| is the absolute value of y. All '
             'buildings that Divan is going to build can be numbered from 0 to '
             'n. The businessman will live in the building 0, the new '
             'headquarters of " Divan\' s Sofas" . In the first ten years '
             'after construction Divan will visit the i- th building ai times, '
             'each time spending 2⋅| x0−xi| minutes for walking. Divan asks '
             'you to choose the coordinates for all n+ 1 buildings so that '
             'over the next ten years the businessman will spend as little '
             'time for walking as possible.',
  'input': 'Each test contains several test cases. The first line contains one '
           'integer number t ( 1≤t≤103) — the number of test cases. The first '
           'line of each case contains an integer n ( 1≤n≤2⋅105) — the number '
           'of buildings that " Divan\' s Sofas" is going to build, apart from '
           'the headquarters. The second line contains the sequence a1, a2, . '
           '. . , an ( 0≤ai≤106) , where ai is the number of visits to the i- '
           'th building. It is guaranteed that the sum of n over all test '
           'cases does not exceed 2⋅105.',
  'note': "Let' s look at the first example. Divan will visit the first "
          'building a1= 1 times, the second a2= 2 times and the third a3= 3 '
          'times. Then one of the optimal solution will be as follows: the '
          'headquarters is located in x0= 2; x1= 4: Divan will spend 2⋅| '
          'x0−x1| ⋅a1= 2⋅| 2−4| ⋅1= 4 minutes walking to the first building; '
          'x2= 1: Divan will spend 2⋅| x0−x2| ⋅a2= 2⋅| 2−1| ⋅2= 4 minutes '
          'walking to the second building; x3= 3: Divan will spend 2⋅| x0−x3| '
          '⋅a3= 2⋅| 2−3| ⋅3= 6 minutes walking to the third building. In '
          'total, Divan will spend 4+ 4+ 6= 14 minutes. It can be shown that '
          'it is impossible to arrange buildings so that the businessman '
          'spends less time. Among others, x= [ 1, 3, 2, 0] , x= [ −5, −3, −6, '
          '−4] are also correct answers for the first example.',
  'output': 'For each test case, on the first line print the number T — the '
            'minimum time Divan will spend walking. On the second line print '
            'the sequence x0, x1, . . . , xn of n+ 1 integers, where xi ( '
            '−106≤xi≤106) is the selected coordinate of the i- th building. It '
            'can be shown that an optimal answer exists with coordinates not '
            'exceeding 106. If there are multiple answers, print any of them.',
  'title': 'Divan and a New Project ',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1614/B'},
 {'history': "Two players, Red and Blue, are at it again, and this time they' "
             're playing with crayons! The mischievous duo is now vandalizing '
             'a rooted tree, by coloring the nodes while playing their '
             'favorite game. The game works as follows: there is a tree of '
             'size nn, rooted at node 11, where each node is initially white. '
             "Red and Blue get one turn each. Red goes first. In Red' s turn, "
             'he can do the following operation any number of times: Pick any '
             'subtree of the rooted tree, and color every node in the subtree '
             'red. However, to make the game fair, Red is only allowed to '
             "color kk nodes of the tree. In other words, after Red' s turn, "
             "at most kk of the nodes can be colored red. Then, it' s Blue' s "
             'turn. Blue can do the following operation any number of times: '
             'Pick any subtree of the rooted tree, and color every node in the '
             "subtree blue. However, he' s not allowed to choose a subtree "
             'that contains a node already colored red, as that would make the '
             "node purple and no one likes purple crayon. Note: there' s no "
             'restriction on the number of nodes Blue can color, as long as he '
             "doesn' t color a node that Red has already colored. After the "
             'two turns, the score of the game is determined as follows: let '
             'ww be the number of white nodes, rr be the number of red nodes, '
             'and bb be the number of blue nodes. The score of the game is w⋅( '
             'r−b) w⋅( r−b) . Red wants to maximize this score, and Blue wants '
             'to minimize it. If both players play optimally, what will the '
             'final score of the game be?',
  'input': 'The first line contains two integers nn and kk ( '
           '2≤n≤2⋅1052≤n≤2⋅105; 1≤k≤n1≤k≤n) — the number of vertices in the '
           'tree and the maximum number of red nodes. Next n−1n−1 lines '
           'contains description of edges. The ii- th line contains two space '
           'separated integers uiui and vivi ( 1≤ui, vi≤n1≤ui, vi≤n; ui= '
           "̸viui= ̸vi) — the ii- th edge of the tree. It' s guaranteed that "
           'given edges form a tree.',
  'note': 'In the first test case, the optimal strategy is as follows: Red '
          'chooses to color the subtrees of nodes 22 and 33. Blue chooses to '
          'color the subtree of node 44. At the end of this process, nodes 22 '
          'and 33 are red, node 44 is blue, and node 11 is white. The score of '
          'the game is 1⋅( 2−1) = 11⋅( 2−1) = 1. In the second test case, the '
          'optimal strategy is as follows: Red chooses to color the subtree of '
          'node 44. This colors both nodes 44 and 55. Blue does not have any '
          'options, so nothing is colored blue. At the end of this process, '
          'nodes 44 and 55 are red, and nodes 11, 22 and 33 are white. The '
          'score of the game is 3⋅( 2−0) = 63⋅( 2−0) = 6. For the third test '
          'case: The score of the game is 4⋅( 2−1) = 44⋅( 2−1) = 4.',
  'output': 'Print one integer — the resulting score if both Red and Blue play '
            'optimally.',
  'title': 'Purple Crayon',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1615/E'},
 {'history': 'You are given n integers a1, a2, . . . , an. You choose any '
             'subset of the given numbers ( possibly, none or all numbers) and '
             'negate these numbers ( i. e. change x→( −x) ) . What is the '
             'maximum number of different values in the array you can achieve?',
  'input': 'The first line of input contains one integer t ( 1≤t≤100) : the '
           'number of test cases. The next lines contain the description of '
           'the t test cases, two lines per a test case. In the first line you '
           'are given one integer n ( 1≤n≤100) : the number of integers in the '
           'array. The second line contains n integers a1, a2, . . . , an ( '
           '−100≤ai≤100) .',
  'note': 'In the first example we can, for example, negate the first and the '
          'last numbers, achieving the array [ −1, 1, 2, −2] with four '
          'different values. In the second example all three numbers are '
          'already different. In the third example negation does not change '
          'anything.',
  'output': 'For each test case, print one integer: the maximum number of '
            'different elements in the array that you can achieve negating '
            'numbers in the array.',
  'title': 'Integer Diversity',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1616/A'},
 {'history': 'You have a string s1s2. . . sn and you stand on the left of the '
             'string looking right. You want to choose an index k ( 1≤k≤n) and '
             'place a mirror after the k- th letter, so that what you see is '
             's1s2. . . sksksk−1. . . s1. What is the lexicographically '
             'smallest string you can see? A string a is lexicographically '
             'smaller than a string b if and only if one of the following '
             'holds: a is a prefix of b, but a= ̸b; in the first position '
             'where a and b differ, the string a has a letter that appears '
             'earlier in the alphabet than the corresponding letter in b.',
  'input': 'The first line of input contains one integer t ( 1≤t≤10000) : the '
           'number of test cases. The next t lines contain the description of '
           'the test cases, two lines per a test case. In the first line you '
           'are given one integer n ( 1≤n≤105) : the length of the string. The '
           'second line contains the string s consisting of n lowercase '
           'English characters. It is guaranteed that the sum of n over all '
           'test cases does not exceed 105.',
  'note': 'In the first test case choose k= 1 to obtain " cc" . In the second '
          'test case choose k= 3 to obtain " cbaabc" . In the third test case '
          'choose k= 1 to obtain " aa" . In the fourth test case choose k= 1 '
          'to obtain " bb" .',
  'output': 'For each test case print the lexicographically smallest string '
            'you can see.',
  'title': 'Mirror in the String',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1616/B'},
 {'history': 'An array a1, a2, . . . , an is good if and only if for every '
             'subsegment 1≤l≤r≤n, the following holds: al+ al+ 1+ . . . + ar= '
             '12( al+ ar) ⋅( r−l+ 1) . You are given an array of integers a1, '
             'a2, . . . , an. In one operation, you can replace any one '
             'element of this array with any real number. Find the minimum '
             'number of operations you need to make this array good.',
  'input': 'The first line of input contains one integer t ( 1≤t≤100) : the '
           'number of test cases. Each of the next t lines contains the '
           'description of a test case. In the first line you are given one '
           'integer n ( 1≤n≤70) : the number of integers in the array. The '
           'second line contains n integers a1, a2, . . . , an ( −100≤ai≤100) '
           ': the initial array.',
  'note': 'In the first test case, the array is good already. In the second '
          'test case, one of the possible good arrays is [ 1, 1, 1_ , 1_ ] ( '
          'replaced elements are underlined) . In the third test case, the '
          'array is good already. In the fourth test case, one of the possible '
          'good arrays is [ −2. 5_ , −2, −1. 5_ , −1, −0. 5_ , 0] .',
  'output': 'For each test case, print one integer: the minimum number of '
            'elements that you need to replace to make the given array good.',
  'title': 'Representative Edges',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1616/C'},
 {'history': 'You are given two strings s and t of equal length n. In one '
             'move, you can swap any two adjacent characters of the string s. '
             'You need to find the minimal number of operations you need to '
             'make string s lexicographically smaller than string t. A string '
             'a is lexicographically smaller than a string b if and only if '
             'one of the following holds: a is a prefix of b, but a= ̸b; in '
             'the first position where a and b differ, the string a has a '
             'letter that appears earlier in the alphabet than the '
             'corresponding letter in b.',
  'input': 'The first line of input contains one integer q ( 1≤q≤10000) : the '
           'number of test cases. The first line of each test case contains a '
           'single integer n ( 1≤n≤105) . The second line of each test case '
           'contains the string s consisting of n lowercase English letters. '
           'The third line of each test case contains the string t consisting '
           'of n lowercase English letters. It is guaranteed that the sum of n '
           'over all test cases does not exceed 2⋅105.',
  'note': ' ',
  'output': 'For each test case, print in a separate line the minimal number '
            'of operations you need to make string s lexicographically smaller '
            "than string t, or −1, if it' s impossible.",
  'title': 'Lexicographically Small Enough',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1616/E'},
 {'history': 'You are given strings S and T, consisting of lowercase English '
             'letters. It is guaranteed that T is a permutation of the string '
             'abc. Find string S′, the lexicographically smallest permutation '
             'of S such that T is not a subsequence of S′. String a is a '
             'permutation of string b if the number of occurrences of each '
             'distinct character is the same in both strings. A string a is a '
             'subsequence of a string b if a can be obtained from b by '
             'deletion of several ( possibly, zero or all) elements. A string '
             'a is lexicographically smaller than a string b if and only if '
             'one of the following holds: a is a prefix of b, but a= ̸b; in '
             'the first position where a and b differ, the string a has a '
             'letter that appears earlier in the alphabet than the '
             'corresponding letter in b.',
  'input': 'Each test contains multiple test cases. The first line contains a '
           'single integer t ( 1≤t≤1000) — the number of test cases. '
           'Description of the test cases follows. The first line of each test '
           'case contains a string S ( 1≤| S| ≤100) , consisting of lowercase '
           'English letters. The second line of each test case contains a '
           'string T that is a permutation of the string abc. ( Hence, | T| = '
           '3) . Note that there is no limit on the sum of | S| across all '
           'test cases.',
  'note': 'In the first test case, both aaaabbc and aaaabcb are '
          'lexicographically smaller than aaaacbb, but they contain abc as a '
          'subsequence. In the second test case, abccc is the smallest '
          'permutation of cccba and does not contain acb as a subsequence. In '
          'the third test case, bcdis is the smallest permutation of dbsic and '
          'does not contain bac as a subsequence.',
  'output': 'For each test case, output a single string S′, the '
            'lexicographically smallest permutation of S such that T is not a '
            'subsequence of S′.',
  'title': 'Forbidden Subsequence',
  'topics': ['sortings', 'strings'],
  'url': 'https://codeforces.com/problemset/problem/1617/A'},
 {'history': 'Paprika loves permutations. She has an array a1, a2, . . . , an. '
             'She wants to make the array a permutation of integers 1 to n. In '
             'order to achieve this goal, she can perform operations on the '
             'array. In each operation she can choose two integers i ( 1≤i≤n) '
             'and x ( x> 0) , then perform ai: = aimodx ( that is, replace ai '
             'by the remainder of ai divided by x) . In different operations, '
             'the chosen i and x can be different. Determine the minimum '
             'number of operations needed to make the array a permutation of '
             'integers 1 to n. If it is impossible, output −1. A permutation '
             'is an array consisting of n distinct integers from 1 to n in '
             'arbitrary order. For example, [ 2, 3, 1, 5, 4] is a permutation, '
             'but [ 1, 2, 2] is not a permutation ( 2 appears twice in the '
             'array) and [ 1, 3, 4] is also not a permutation ( n= 3 but there '
             'is 4 in the array) .',
  'input': 'Each test contains multiple test cases. The first line contains a '
           'single integer t ( 1≤t≤104) — the number of test cases. '
           'Description of the test cases follows. The first line of each test '
           'case contains an integer n ( 1≤n≤105) . The second line of each '
           'test case contains n integers a1, a2, . . . , an. ( 1≤ai≤109) . It '
           'is guaranteed that the sum of n over all test cases does not '
           'exceed 2⋅105.',
  'note': 'For the first test, the only possible sequence of operations which '
          'minimizes the number of operations is: Choose i= 2, x= 5. Perform '
          'a2: = a2mod5= 2. For the second test, it is impossible to obtain a '
          'permutation of integers from 1 to n.',
  'output': 'For each test case, output the minimum number of operations '
            'needed to make the array a permutation of integers 1 to n, or −1 '
            'if it is impossible.',
  'title': 'Paprika and Permutation',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1617/C'},
 {'history': 'This is an interactive problem. The only difference between the '
             'easy and hard version is the limit on number of questions. There '
             'are n players labelled from 1 to n. It is guaranteed that n is a '
             'multiple of 3. Among them, there are k impostors and n−k '
             'crewmates. The number of impostors, k, is not given to you. It '
             'is guaranteed that n3< k< 2n3. In each question, you can choose '
             'three distinct integers a, b, c ( 1≤a, b, c≤n) and ask: " Among '
             'the players labelled a, b and c, are there more impostors or '
             'more crewmates? " You will be given the integer 0 if there are '
             'more impostors than crewmates, and 1 otherwise. Find the number '
             'of impostors k and the indices of players that are impostors '
             'after asking at most 2n questions. The jury is adaptive, which '
             'means the indices of impostors may not be fixed beforehand and '
             'can depend on your questions. It is guaranteed that there is at '
             'least one set of impostors which fulfills the constraints and '
             'the answers to your questions at any time. InteractionFor each '
             'test case, the interaction starts with reading n. Then you are '
             'allowed to make at most 2n questions in the following way: " ? a '
             'b c" ( 1≤a, b, c≤n, a, b and c are pairwise distinct) . After '
             'each one, you should read an integer r, which is equal to 0 if '
             'there are more impostors than crewmates among players labelled '
             'a, b and c, and equal to 1 otherwise. Answer −1 instead of 0 or '
             '1 means that you made an invalid query or exceeded the number of '
             'queries. Exit immediately after receiving −1 and you will see '
             'Wrong answer verdict. Otherwise you can get an arbitrary verdict '
             'because your solution will continue to read from a closed '
             'stream. When you have found the indices of all impostors, print '
             'a single line " ! " ( without quotes) , followed by the number '
             'of impostors k, followed by k integers representing the indices '
             'of the impostors. Please note that you must print all this '
             'information on the same line. After printing the answer, your '
             'program must then continue to solve the remaining test cases, or '
             'exit if all test cases have been solved. After printing the '
             'queries and answers do not forget to output end of line and '
             'flush the output buffer. Otherwise, you will get the Idleness '
             'limit exceeded verdict. To do flush use: fflush( stdout) or '
             'cout. flush( ) in C+ + ; System. out. flush( ) in Java; flush( '
             'output) in Pascal; stdout. flush( ) in Python; Read '
             'documentation for other languages. HacksYou cannot make hacks in '
             'this problem.',
  'input': 'Each test contains multiple test cases. The first line contains '
           'the number of test cases t ( 1≤t≤100) . Description of the test '
           'cases follows. The first and only line of each test case contains '
           'a single integer n ( 6≤n< 104, n is a multiple of 3) — the number '
           'of players. It is guaranteed that the sum of n over all test cases '
           'does not exceed 2⋅104.',
  'note': 'Explanation for example interaction ( note that this example only '
          'exists to demonstrate the interaction procedure and does not '
          'provide any hint for the solution) : For the first test case: '
          'Question " ? 1 2 3" returns 0, so there are more impostors than '
          'crewmates among players 1, 2 and 3. Question " ? 3 4 5" returns 1, '
          'so there are more crewmates than impostors among players 3, 4 and '
          '5. Outputting " ! 3 4 1 2" means that one has found all the '
          'impostors, by some miracle. There are k= 3 impostors. The players '
          'who are impostors are players 4, 1 and 2. For the second test case: '
          'Question " ? 7 1 9" returns 1, so there are more crewmates than '
          'impostors among players 7, 1 and 9. Outputting " ! 4 2 3 6 8" means '
          'that one has found all the impostors, by some miracle. There are k= '
          '4 impostors. The players who are impostors are players 2, 3, 6 and '
          '8.',
  'output': ' ',
  'title': 'Too Many Impostors (easy version)',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1617/D1'},
 {'history': 'This is an interactive problem. The only difference between the '
             'easy and hard version is the limit on number of questions. There '
             'are n players labelled from 1 to n. It is guaranteed that n is a '
             'multiple of 3. Among them, there are k impostors and n−k '
             'crewmates. The number of impostors, k, is not given to you. It '
             'is guaranteed that n3< k< 2n3. In each question, you can choose '
             'three distinct integers a, b, c ( 1≤a, b, c≤n) and ask: " Among '
             'the players labelled a, b and c, are there more impostors or '
             'more crewmates? " You will be given the integer 0 if there are '
             'more impostors than crewmates, and 1 otherwise. Find the number '
             'of impostors k and the indices of players that are impostors '
             'after asking at most n+ 6 questions. The jury is adaptive, which '
             'means the indices of impostors may not be fixed beforehand and '
             'can depend on your questions. It is guaranteed that there is at '
             'least one set of impostors which fulfills the constraints and '
             'the answers to your questions at any time. InteractionFor each '
             'test case, the interaction starts with reading n. Then you are '
             'allowed to make at most n+ 6 questions in the following way: " ? '
             'a b c" ( 1≤a, b, c≤n, a, b and c are pairwise distinct) . After '
             'each one, you should read an integer r, which is equal to 0 if '
             'there are more impostors than crewmates among players labelled '
             'a, b and c, and equal to 1 otherwise. Answer −1 instead of 0 or '
             '1 means that you made an invalid query. Exit immediately after '
             'receiving −1 and you will see Wrong answer verdict. Otherwise '
             'you can get an arbitrary verdict because your solution will '
             'continue to read from a closed stream. When you have found the '
             'indices of all impostors, print a single line " ! " ( without '
             'quotes) , followed by the number of impostors k, followed by k '
             'integers representing the indices of the impostors. Please note '
             'that you must print all this information on the same line. After '
             'printing the answer, your program must then continue to solve '
             'the remaining test cases, or exit if all test cases have been '
             'solved. After printing the queries and answers do not forget to '
             'output end of line and flush the output buffer. Otherwise, you '
             'will get the Idleness limit exceeded verdict. To do flush use: '
             'fflush( stdout) or cout. flush( ) in C+ + ; System. out. flush( '
             ') in Java; flush( output) in Pascal; stdout. flush( ) in Python; '
             'Read documentation for other languages. HacksYou cannot make '
             'hacks in this problem.',
  'input': 'Each test contains multiple test cases. The first line contains '
           'the number of test cases t ( 1≤t≤100) . Description of the test '
           'cases follows. The first and only line of each test case contains '
           'a single integer n ( 6≤n< 104, n is a multiple of 3) — the number '
           'of players. It is guaranteed that the sum of n over all test cases '
           'does not exceed 2⋅104.',
  'note': 'Explanation for example interaction ( note that this example only '
          'exists to demonstrate the interaction procedure and does not '
          'provide any hint for the solution) : For the first test case: '
          'Question " ? 1 2 3" returns 0, so there are more impostors than '
          'crewmates among players 1, 2 and 3. Question " ? 3 4 5" returns 1, '
          'so there are more crewmates than impostors among players 3, 4 and '
          '5. Outputting " ! 3 4 1 2" means that one has found all the '
          'impostors, by some miracle. There are k= 3 impostors. The players '
          'who are impostors are players 4, 1 and 2. For the second test case: '
          'Question " ? 7 1 9" returns 1, so there are more crewmates than '
          'impostors among players 7, 1 and 9. Outputting " ! 4 2 3 6 8" means '
          'that one has found all the impostors, by some miracle. There are k= '
          '4 impostors. The players who are impostors are players 2, 3, 6 and '
          '8.',
  'output': ' ',
  'title': 'Too Many Impostors (hard version)',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1617/D2'},
 {'history': 'Christmas is coming, Icy has just received a box of chocolates '
             'from her grandparents! The box contains n chocolates. The i- th '
             'chocolate has a non- negative integer type ai. Icy believes that '
             'good things come in pairs. Unfortunately, all types of '
             'chocolates are distinct ( all ai are distinct) . Icy wants to '
             'make at least one pair of chocolates the same type. As a result, '
             'she asks her grandparents to perform some chocolate exchanges. '
             'Before performing any chocolate exchanges, Icy chooses two '
             'chocolates with indices x and y ( 1≤x, y≤n, x= ̸y) . In a '
             "chocolate exchange, Icy' s grandparents choose a non- negative "
             'integer k, such that 2k≥ax, and change the type of the chocolate '
             'x from ax to 2k−ax ( that is, perform ax: = 2k−ax) . The '
             'chocolate exchanges will be stopped only when ax= ay. Note that '
             'other pairs of equal chocolate types do not stop the procedure. '
             "Icy' s grandparents are smart, so they would choose the sequence "
             'of chocolate exchanges that minimizes the number of exchanges '
             'needed. Since Icy likes causing trouble, she wants to maximize '
             'the minimum number of exchanges needed by choosing x and y '
             'appropriately. She wonders what is the optimal pair ( x, y) such '
             'that the minimum number of exchanges needed is maximized across '
             'all possible choices of ( x, y) . Since Icy is not good at math, '
             'she hopes that you can help her solve the problem.',
  'input': 'The first line of the input contains a single integer n ( '
           '2≤n≤2⋅105) — the number of chocolates. The second line of the '
           'input contains n integers a1, a2, . . . , an ( 0≤ai≤109) . It is '
           'guaranteed that all ai are distinct.',
  'note': 'In the first test case, the minimum number of exchanges needed to '
          'exchange a chocolate of type 6 to a chocolate of type 9 is 5. The '
          'sequence of exchanges is as follows: 6→2→0→1→7→9. In the second '
          'test case, the minimum number of exchanges needed to exchange a '
          'chocolate of type 4 to a chocolate of type 8 is 2. The sequence of '
          'exchanges is as follows: 4→0→8.',
  'output': 'Output three integers x, y, and m. x and y are indices of the '
            'optimal chocolates to perform exchanges on. Your output must '
            'satisfy 1≤x, y≤n, x= ̸y. m is the number of exchanges needed to '
            'obtain ax= ay. We can show that m≤109 for any pair of chocolates. '
            'If there are multiple solutions, output any.',
  'title': 'Christmas Chocolates',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1617/E'},
 {'history': 'Polycarp had an array a of 3 positive integers. He wrote out the '
             'sums of all non- empty subsequences of this array, sorted them '
             'in non- decreasing order, and got an array b of 7 integers. For '
             'example, if a= 1, 4, 3, then Polycarp wrote out 1, 4, 3, 1+ 4= '
             '5, 1+ 3= 4, 4+ 3= 7, 1+ 4+ 3= 8. After sorting, he got an array '
             'b= 1, 3, 4, 4, 5, 7, 8. Unfortunately, Polycarp lost the array '
             'a. He only has the array b left. Help him to restore the array '
             'a.',
  'input': 'The first line contains one integer t ( 1≤t≤5000) — the number of '
           'test cases. Each test case consists of one line which contains 7 '
           'integers b1, b2, . . . , b7 ( 1≤bi≤109; bi≤bi+ 1) . Additional '
           'constraint on the input: there exists at least one array a which '
           'yields this array b as described in the statement.',
  'note': 'The subsequence of the array a is a sequence that can be obtained '
          'from a by removing zero or more of its elements. Two subsequences '
          'are considered different if index sets of elements included in them '
          "are different. That is, the values of the elements don' t matter in "
          'the comparison of subsequences. In particular, any array of length '
          '3 has exactly 7 different non- empty subsequences.',
  'output': 'For each test case, print 3 integers — a1, a2 and a3. If there '
            'can be several answers, print any of them.',
  'title': 'Polycarp and Sums of Subsequences',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1618/A'},
 {'history': 'Polycarp has come up with a new game to play with you. He calls '
             'it " A missing bigram" . A bigram of a word is a sequence of two '
             'adjacent letters in it. For example, word " abbaaba" contains '
             'bigrams " ab" , " bb" , " ba" , " aa" , " ab" and " ba" . The '
             'game goes as follows. First, Polycarp comes up with a word, '
             "consisting only of lowercase letters ' a' and ' b' . Then, he "
             'writes down all its bigrams on a whiteboard in the same order as '
             'they appear in the word. After that, he wipes one of them off '
             'the whiteboard. Finally, Polycarp invites you to guess what the '
             'word that he has come up with was. Your goal is to find any word '
             "such that it' s possible to write down all its bigrams and "
             'remove one of them, so that the resulting sequence of bigrams is '
             'the same as the one Polycarp ended up with. The tests are '
             'generated in such a way that the answer exists. If there are '
             'multiple answers, you can print any of them.',
  'input': 'The first line contains a single integer t ( 1≤t≤2000) — the '
           'number of testcases. The first line of each testcase contains a '
           'single integer n ( 3≤n≤100) — the length of the word Polycarp has '
           'come up with. The second line of each testcase contains n−2 '
           'bigrams of that word, separated by a single space. Each bigram '
           "consists of two letters, each of them is either ' a' or ' b' . "
           'Additional constraint on the input: there exists at least one '
           'string such that it is possible to write down all its bigrams, '
           'except one, so that the resulting sequence is the same as the '
           'sequence in the input. In other words, the answer exists.',
  'note': 'The first two testcases from the example are produced from the word '
          '" abbaaba" . As listed in the statement, it contains bigrams " ab" '
          ', " bb" , " ba" , " aa" , " ab" and " ba" . In the first testcase, '
          'the 5- th bigram is removed. In the second testcase, the 2- nd '
          'bigram is removed. However, that sequence could also have been '
          'produced from the word " abaabaa" . It contains bigrams " ab" , " '
          'ba" , " aa" , " ab" , " ba" and " aa" . The missing bigram is the '
          '6- th one. In the third testcase, all of " baa" , " aab" and " aaa" '
          'are valid answers.',
  'output': 'For each testcase print a word, consisting of n letters, each of '
            "them should be either ' a' or ' b' . It should be possible to "
            'write down all its bigrams and remove one of them, so that the '
            'resulting sequence of bigrams is the same as the one Polycarp '
            'ended up with. The tests are generated in such a way that the '
            'answer exists. If there are multiple answers, you can print any '
            'of them.',
  'title': 'Missing Bigram',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1618/B'},
 {'history': 'You are given two positive integers x and y. You can perform the '
             'following operation with x: write it in its binary form without '
             'leading zeros, add 0 or 1 to the right of it, reverse the binary '
             'form and turn it into a decimal number which is assigned as the '
             'new value of x. For example: 34 can be turned into 81 via one '
             'operation: the binary form of 34 is 100010, if you add 1, '
             'reverse it and remove leading zeros, you will get 1010001, which '
             'is the binary form of 81. 34 can be turned into 17 via one '
             'operation: the binary form of 34 is 100010, if you add 0, '
             'reverse it and remove leading zeros, you will get 10001, which '
             'is the binary form of 17. 81 can be turned into 69 via one '
             'operation: the binary form of 81 is 1010001, if you add 0, '
             'reverse it and remove leading zeros, you will get 1000101, which '
             'is the binary form of 69. 34 can be turned into 69 via two '
             'operations: first you turn 34 into 81 and then 81 into 69. Your '
             'task is to find out whether x can be turned into y after a '
             'certain number of operations ( possibly zero) .',
  'input': 'The only line of the input contains two integers x and y ( 1≤x, '
           'y≤1018) .',
  'note': "In the first example, you don' t even need to do anything. The "
          'fourth example is described in the statement.',
  'output': "Print YES if you can make x equal to y and NO if you can' t.",
  'title': 'Reverse',
  'topics': ['implementation', 'strings'],
  'url': 'https://codeforces.com/problemset/problem/1618/F'},
 {'history': 'Monocarp plays a computer game ( yet again! ) . This game has a '
             'unique trading mechanics. To trade with a character, Monocarp '
             'has to choose one of the items he possesses and trade it for '
             'some item the other character possesses. Each item has an '
             "integer price. If Monocarp' s chosen item has price x, then he "
             'can trade it for any item ( exactly one item) with price not '
             'greater than x+ k. Monocarp initially has n items, the price of '
             'the i- th item he has is ai. The character Monocarp is trading '
             'with has m items, the price of the i- th item they have is bi. '
             'Monocarp can trade with this character as many times as he wants '
             '( possibly even zero times) , each time exchanging one of his '
             "items with one of the other character' s items according to the "
             'aforementioned constraints. Note that if Monocarp gets some item '
             'during an exchange, he can trade it for another item ( since now '
             'the item belongs to him) , and vice versa: if Monocarp trades '
             'one of his items for another item, he can get his item back by '
             'trading something for it. You have to answer q queries. Each '
             'query consists of one integer, which is the value of k, and asks '
             'you to calculate the maximum possible total cost of items '
             'Monocarp can have after some sequence of trades, assuming that '
             'he can trade an item of cost x for an item of cost not greater '
             'than x+ k during each trade. Note that the queries are '
             'independent: the trades do not actually occur, Monocarp only '
             'wants to calculate the maximum total cost he can get.',
  'input': 'The first line contains three integers n, m and q ( 1≤n, m, '
           'q≤2⋅105) . The second line contains n integers a1, a2, . . . , an '
           '( 1≤ai≤109) — the prices of the items Monocarp has. The third line '
           'contains m integers b1, b2, . . . , bm ( 1≤bi≤109) — the prices of '
           'the items the other character has. The fourth line contains q '
           'integers, where the i- th integer is the value of k for the i- th '
           'query ( 0≤k≤109) .',
  'note': ' ',
  'output': 'For each query, print one integer — the maximum possible total '
            'cost of items Monocarp can have after some sequence of trades, '
            'given the value of k from the query.',
  'title': 'Trader Problem',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1618/G'},
 {'history': 'A string is called square if it is some string written twice in '
             'a row. For example, the strings " aa" , " abcabc" , " abab" and '
             '" baabaa" are square. But the strings " aaa" , " abaaab" and " '
             'abcdabc" are not square. For a given string s determine if it is '
             'square.',
  'input': 'The first line of input data contains an integer t ( 1≤t≤100) —the '
           'number of test cases. This is followed by t lines, each containing '
           'a description of one test case. The given strings consist only of '
           'lowercase Latin letters and have lengths between 1 and 100 '
           'inclusive.',
  'note': ' ',
  'output': 'For each test case, output on a separate line: YES if the string '
            'in the corresponding test case is square, NO otherwise. You can '
            'output YES and NO in any case ( for example, strings yEs, yes, '
            'Yes and YES will be recognized as a positive response) .',
  'title': 'Square String?',
  'topics': ['implementation', 'strings'],
  'url': 'https://codeforces.com/problemset/problem/1619/A'},
 {'history': 'Polycarp likes squares and cubes of positive integers. Here is '
             'the beginning of the sequence of numbers he likes: 1, 4, 8, 9, . '
             '. . . For a given number n, count the number of integers from 1 '
             'to n that Polycarp likes. In other words, find the number of '
             'such x that x is a square of a positive integer number or a cube '
             'of a positive integer number ( or both a square and a cube '
             'simultaneously) .',
  'input': 'The first line contains an integer t ( 1≤t≤20) — the number of '
           'test cases. Then t lines contain the test cases, one per line. '
           'Each of the lines contains one integer n ( 1≤n≤109) .',
  'note': ' ',
  'output': 'For each test case, print the answer you are looking for — the '
            'number of integers from 1 to n that Polycarp likes.',
  'title': 'Squares and Cubes',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1619/B'},
 {'history': 'Tanya is learning how to add numbers, but so far she is not '
             'doing it correctly. She is adding two numbers a and b using the '
             'following algorithm: If one of the numbers is shorter than the '
             'other, Tanya adds leading zeros so that the numbers are the same '
             'length. The numbers are processed from right to left ( that is, '
             'from the least significant digits to the most significant) . In '
             'the first step, she adds the last digit of a to the last digit '
             'of b and writes their sum in the answer. At each next step, she '
             'performs the same operation on each pair of digits in the same '
             'place and writes the result to the left side of the answer. For '
             'example, the numbers a= 17236 and b= 3465 Tanya adds up as '
             'follows: + 17236034651106911 calculates the sum of 6+ 5= 11 and '
             'writes 11 in the answer. calculates the sum of 3+ 6= 9 and '
             'writes the result to the left side of the answer to get 911. '
             'calculates the sum of 2+ 4= 6 and writes the result to the left '
             'side of the answer to get 6911. calculates the sum of 7+ 3= 10, '
             'and writes the result to the left side of the answer to get '
             '106911. calculates the sum of 1+ 0= 1 and writes the result to '
             'the left side of the answer and get 1106911. As a result, she '
             'gets 1106911. You are given two positive integers a and s. Find '
             'the number b such that by adding a and b as described above, '
             'Tanya will get s. Or determine that no suitable b exists.',
  'input': 'The first line of input data contains an integer t ( 1≤t≤104) — '
           'the number of test cases. Each test case consists of a single line '
           'containing two positive integers a and s ( 1≤a< s≤1018) separated '
           'by a space.',
  'note': 'The first test case is explained in the main part of the statement. '
          'In the third test case, we cannot choose b that satisfies the '
          'problem statement.',
  'output': 'For each test case print the answer on a separate line. If the '
            'solution exists, print a single positive integer b. The answer '
            'must be written without leading zeros. If multiple answers exist, '
            'print any of them. If no suitable number b exists, output - 1.',
  'title': 'Wrong Addition',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1619/C'},
 {'history': 'Vlad has n friends, for each of whom he wants to buy one gift '
             'for the New Year. There are m shops in the city, in each of '
             'which he can buy a gift for any of his friends. If the j- th '
             'friend ( 1≤j≤n) receives a gift bought in the shop with the '
             'number i ( 1≤i≤m) , then the friend receives pij units of joy. '
             'The rectangular table pij is given in the input. Vlad has time '
             'to visit at most n−1 shops ( where n is the number of friends) . '
             'He chooses which shops he will visit and for which friends he '
             'will buy gifts in each of them. Let the j- th friend receive aj '
             "units of joy from Vlad' s gift. Let' s find the value α= mina1, "
             "a2, . . . , an. Vlad' s goal is to buy gifts so that the value "
             'of α is as large as possible. In other words, Vlad wants to '
             'maximize the minimum of the joys of his friends. For example, '
             'let m= 2, n= 2. Let the joy from the gifts that we can buy in '
             'the first shop: p11= 1, p12= 2, in the second shop: p21= 3, p22= '
             '4. Then it is enough for Vlad to go only to the second shop and '
             'buy a gift for the first friend, bringing joy 3, and for the '
             'second — bringing joy 4. In this case, the value α will be equal '
             'to min3, 4= 3Help Vlad choose gifts for his friends so that the '
             'value of α is as high as possible. Please note that each friend '
             'must receive one gift. Vlad can visit at most n−1 shops ( where '
             'n is the number of friends) . In the shop, he can buy any number '
             'of gifts.',
  'input': 'The first line of the input contains an integer t ( 1≤t≤104) — the '
           'number of test cases in the input. An empty line is written before '
           'each test case. Then there is a line containing integers m and n ( '
           '2≤n, 2≤n⋅m≤105) separated by a space — the number of shops and the '
           'number of friends, where n⋅m is the product of n and m. Then m '
           'lines follow, each containing n numbers. The number in the i- th '
           'row of the j- th column pij ( 1≤pij≤109) is the joy of the product '
           'intended for friend number j in shop number i. It is guaranteed '
           'that the sum of the values n⋅m over all test cases in the test '
           'does not exceed 105.',
  'note': ' ',
  'output': 'Print t lines, each line must contain the answer to the '
            'corresponding test case — the maximum possible value of α, where '
            "α is the minimum of the joys from a gift for all of Vlad' s "
            'friends.',
  'title': "New Year's Problem",
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1619/D'},
 {'history': 'Dmitry has an array of n non- negative integers a1, a2, . . . , '
             'an. In one operation, Dmitry can choose any index j ( 1≤j≤n) and '
             'increase the value of the element aj by 1. He can choose the '
             'same index j multiple times. For each i from 0 to n, determine '
             'whether Dmitry can make the MEX of the array equal to exactly i. '
             'If it is possible, then determine the minimum number of '
             'operations to do it. The MEX of the array is equal to the '
             'minimum non- negative integer that is not in the array. For '
             'example, the MEX of the array [ 3, 1, 0] is equal to 2, and the '
             'array [ 3, 3, 1, 4] is equal to 0.',
  'input': 'The first line of input data contains a single integer t ( '
           '1≤t≤104) — the number of test cases in the input. The descriptions '
           'of the test cases follow. The first line of the description of '
           'each test case contains a single integer n ( 1≤n≤2⋅105) — the '
           'length of the array a. The second line of the description of each '
           'test case contains n integers a1, a2, . . . , an ( 0≤ai≤n) — '
           'elements of the array a. It is guaranteed that the sum of the '
           'values n over all test cases in the test does not exceed 2⋅105.',
  'note': 'In the first set of example inputs, n= 3: to get MEX= 0, it is '
          'enough to perform one increment: a1+ + ; to get MEX= 1, it is '
          'enough to perform one increment: a2+ + ; MEX= 2 for a given array, '
          'so there is no need to perform increments; it is impossible to get '
          'MEX= 3 by performing increments.',
  'output': 'For each test case, output n+ 1 integer — i- th number is equal '
            'to the minimum number of operations for which you can make the '
            'array MEX equal to i ( 0≤i≤n) , or - 1 if this cannot be done.',
  'title': 'MEX and Increments',
  'topics': ['implementation', 'sortings'],
  'url': 'https://codeforces.com/problemset/problem/1619/E'},
 {'history': 'Polycarp is very fond of playing the game Minesweeper. Recently '
             'he found a similar game and there are such rules. There are '
             'mines on the field, for each the coordinates of its location are '
             'known ( xi, yixi, yi) . Each mine has a lifetime in seconds, '
             'after which it will explode. After the explosion, the mine also '
             'detonates all mines vertically and horizontally at a distance of '
             'kk ( two perpendicular lines) . As a result, we get an explosion '
             'on the field in the form of a " plus" symbol ( \' + \' ) . Thus, '
             'one explosion can cause new explosions, and so on. Also, '
             'Polycarp can detonate anyone mine every second, starting from '
             'zero seconds. After that, a chain reaction of explosions also '
             'takes place. Mines explode instantly and also instantly detonate '
             'other mines according to the rules described above. Polycarp '
             'wants to set a new record and asks you to help him calculate in '
             'what minimum number of seconds all mines can be detonated.',
  'input': 'The first line of the input contains an integer tt ( '
           '1≤t≤1041≤t≤104) — the number of test cases in the test. An empty '
           'line is written in front of each test suite. Next comes a line '
           'that contains integers nn and kk ( 1≤n≤2⋅1051≤n≤2⋅105, '
           '0≤k≤1090≤k≤109) — the number of mines and the distance that hit by '
           'mines during the explosion, respectively. Then nn lines follow, '
           'the ii- th of which describes the xx and yy coordinates of the ii- '
           'th mine and the time until its explosion ( −109≤x, y≤109−109≤x, '
           'y≤109, 0≤timer≤1090≤timer≤109) . It is guaranteed that all mines '
           'have different coordinates. It is guaranteed that the sum of the '
           'values nn over all test cases in the test does not exceed '
           '2⋅1052⋅105.',
  'note': 'Picture from examples First example: 00 second: we explode a mine '
          'at the cell ( 2, 2) ( 2, 2) , it does not detonate any other mine '
          'since k= 0k= 0. 11 second: we explode the mine at the cell ( 0, 1) '
          '( 0, 1) , and the mine at the cell ( 0, 0) ( 0, 0) explodes itself. '
          '22 second: we explode the mine at the cell ( 1, 1) ( 1, 1) , and '
          'the mine at the cell ( 1, 0) ( 1, 0) explodes itself. Second '
          'example: 00 second: we explode a mine at the cell ( 2, 2) ( 2, 2) '
          'we get: 11 second: the mine at coordinate ( 0, 0) ( 0, 0) explodes '
          'and since k= 2k= 2 the explosion detonates mines at the cells ( 0, '
          '1) ( 0, 1) and ( 1, 0) ( 1, 0) , and their explosions detonate the '
          'mine at the cell ( 1, 1) ( 1, 1) and there are no mines left on the '
          'field.',
  'output': 'Print tt lines, each of the lines must contain the answer to the '
            'corresponding set of input data — the minimum number of seconds '
            'it takes to explode all the mines.',
  'title': 'Unusual Minesweeper',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1619/G'},
 {'history': 'You had n positive integers a1, a2, . . . , an arranged in a '
             'circle. For each pair of neighboring numbers ( a1 and a2, a2 and '
             'a3, . . . , an−1 and an, and an and a1) , you wrote down: are '
             "the numbers in the pair equal or not. Unfortunately, you' ve "
             'lost a piece of paper with the array a. Moreover, you are afraid '
             'that even information about equality of neighboring elements may '
             'be inconsistent. So, you are wondering: is there any array a '
             'which is consistent with information you have about equality or '
             'non- equality of corresponding pairs?',
  'input': 'The first line contains a single integer t ( 1≤t≤1000) — the '
           'number of test cases. Next t cases follow. The first and only line '
           'of each test case contains a non- empty string s consisting of '
           'characters E and/ or N. The length of s is equal to the size of '
           'array n and 2≤n≤50. For each i from 1 to n: if si= E then ai is '
           'equal to ai+ 1 ( an= a1 for i= n) ; if si= N then ai is not equal '
           'to ai+ 1 ( an= ̸a1 for i= n) .',
  'note': 'In the first test case, you can choose, for example, a1= a2= a3= 5. '
          'In the second test case, there is no array a, since, according to '
          's1, a1 is equal to a2, but, according to s2, a2 is not equal to a1. '
          'In the third test case, you can, for example, choose array a= [ 20, '
          '20, 4, 50, 50, 50, 20] . In the fourth test case, you can, for '
          'example, choose a= [ 1, 3, 3, 7] .',
  'output': "For each test case, print YES if it' s possible to choose array a "
            'that are consistent with information from s you know. Otherwise, '
            'print NO. It can be proved, that if there exists some array a, '
            'then there exists an array a of positive integers with values '
            'less or equal to 109.',
  'title': 'Equal or Not Equal',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1620/A'},
 {'history': 'You are given an integer k and a string s that consists only of '
             "characters ' a' ( a lowercase Latin letter) and ' * ' ( an "
             'asterisk) . Each asterisk should be replaced with several ( from '
             "0 to k inclusive) lowercase Latin letters ' b' . Different "
             "asterisk can be replaced with different counts of letter ' b' . "
             'The result of the replacement is called a BA- string. Two '
             'strings a and b are different if they either have different '
             'lengths or there exists such a position i that ai= ̸bi. A string '
             'a is lexicographically smaller than a string b if and only if '
             'one of the following holds: a is a prefix of b, but a= ̸b; in '
             'the first position where a and b differ, the string a has a '
             'letter that appears earlier in the alphabet than the '
             'corresponding letter in b. Now consider all different BA- '
             'strings and find the x- th lexicographically smallest of them.',
  'input': 'The first line contains a single integer t ( 1≤t≤2000) — the '
           'number of testcases. The first line of each testcase contains '
           'three integers n, k and x ( 1≤n≤2000; 0≤k≤2000; 1≤x≤1018) . n is '
           'the length of string s. The second line of each testcase is a '
           "string s. It consists of n characters, each of them is either ' a' "
           "( a lowercase Latin letter) or ' * ' ( an asterisk) . The sum of n "
           "over all testcases doesn' t exceed 2000. For each testcase x "
           "doesn' t exceed the total number of different BA- strings. String "
           "s contains at least one character ' a' .",
  'note': 'In the first testcase of the example, BA- strings ordered '
          'lexicographically are: a ab abb abbb abbbb In the second testcase '
          'of the example, BA- strings ordered lexicographically are: aa aba '
          'abba Note that string " aba" is only counted once, even though '
          "there are two ways to replace asterisks with characters ' b' to get "
          'it.',
  'output': 'For each testcase, print a single string, consisting only of '
            "characters ' b' and ' a' ( lowercase Latin letters) — the x- th "
            'lexicographically smallest BA- string.',
  'title': 'BA-String',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1620/C'},
 {'history': 'You have an array of integers ( initially empty) . You have to '
             'perform q queries. Each query is of one of two types: " 1 x" — '
             'add the element x to the end of the array; " 2 x y" — replace '
             'all occurrences of x in the array with y. Find the resulting '
             'array after performing all the queries.',
  'input': 'The first line contains a single integer q ( 1≤q≤5⋅105) — the '
           'number of queries. Next q lines contain queries ( one per line) . '
           'Each query is of one of two types: " 1 x" ( 1≤x≤5⋅105) ; " 2 x y" '
           "( 1≤x, y≤5⋅105) . It' s guaranteed that there is at least one "
           'query of the first type.',
  'note': 'In the first example, the array changes as follows: [ ] → [ 3] → [ '
          '3, 1] → [ 3, 2] → [ 3, 2, 2] → [ 3, 2, 2, 1] → [ 3, 2, 2, 1, 2] → [ '
          '3, 2, 2, 3, 2] . In the second example, the array changes as '
          'follows: [ ] → [ 1] → [ 1, 2] → [ 1, 2, 1] → [ 1, 2, 1] . In the '
          'third example, the array changes as follows: [ ] → [ ] → [ 1] → [ '
          '1, 4] → [ 1, 4, 2] → [ 1, 4, 4] → [ 1, 3, 3] → [ 1, 3, 3, 2] → [ 1, '
          '3, 3, 7] .',
  'output': 'In a single line, print k integers — the resulting array after '
            'performing all the queries, where k is the number of queries of '
            'the first type.',
  'title': 'Replace the Numbers',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1620/E'},
 {'history': 'The integers shop sells n segments. The i- th of them contains '
             'all integers from li to ri and costs ci coins. Tomorrow Vasya '
             'will go to this shop and will buy some segments there. He will '
             'get all integers that appear in at least one of bought segments. '
             'The total cost of the purchase is the sum of costs of all '
             'segments in it. After shopping, Vasya will get some more '
             'integers as a gift. He will get integer x as a gift if and only '
             "if all of the following conditions are satisfied: Vasya hasn' t "
             'bought x. Vasya has bought integer l that is less than x. Vasya '
             'has bought integer r that is greater than x. Vasya can get '
             "integer x as a gift only once so he won' t have the same "
             'integers after receiving a gift. For example, if Vasya buys '
             'segment [ 2, 4] for 20 coins and segment [ 7, 8] for 22 coins, '
             'he spends 42 coins and receives integers 2, 3, 4, 7, 8 from '
             'these segments. He also gets integers 5 and 6 as a gift. Due to '
             'the technical issues only the first s segments ( that is, '
             'segments [ l1, r1] , [ l2, r2] , . . . , [ ls, rs] ) will be '
             'available tomorrow in the shop. Vasya wants to get ( to buy or '
             'to get as a gift) as many integers as possible. If he can do '
             'this in differents ways, he selects the cheapest of them. For '
             'each s from 1 to n, find how many coins will Vasya spend if only '
             'the first s segments will be available.',
  'input': 'The first line contains a single integer t ( 1≤t≤1000) — the '
           'number of test cases. The first line of each test case contains '
           'the single integer n ( 1≤n≤105) — the number of segments in the '
           'shop. Each of next n lines contains three integers li, ri, ci ( '
           '1≤li≤ri≤109, 1≤ci≤109) — the ends of the i- th segments and its '
           'cost. It is guaranteed that the total sum of n over all test cases '
           "doesn' t exceed 2⋅105.",
  'note': 'In the first test case if s= 1 then Vasya can buy only the segment '
          '[ 2, 4] for 20 coins and get 3 integers. The way to get 7 integers '
          'for 42 coins in case s= 2 is described in the statement. In the '
          'second test case note, that there can be the same segments in the '
          'shop.',
  'output': 'For each test case output n integers: the s- th ( 1≤s≤n) of them '
            'should be the number of coins Vasia will spend in the shop if '
            'only the first s segments will be available.',
  'title': 'Integers Shop',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1621/B'},
 {'history': 'You have decided to open a new school. You have already found n '
             'teachers and m groups of students. The i- th group of students '
             'consists of ki≥2 students. You know age of each teacher and each '
             'student. The ages of teachers are a1, a2, . . . , an and the '
             'ages of students of the i- th group are bi, 1, bi, 2, . . . , '
             'bi, ki. To start lessons you should assign the teacher to each '
             'group of students. Such assignment should satisfy the following '
             'requirements: To each group exactly one teacher assigned. To '
             'each teacher at most 1 group of students assigned. The average '
             "of students' ages in each group doesn' t exceed the age of the "
             'teacher assigned to this group. The average of set x1, x2, . . . '
             ', xk of k integers is x1+ x2+ . . . + xkk. Recently you have '
             'heard that one of the students will refuse to study in your '
             'school. After this, the size of one group will decrease by 1 '
             "while all other groups will remain unchanged. You don' t know "
             'who will refuse to study. For each student determine if you can '
             'start lessons in case of his refusal. Note, that it is not '
             'guaranteed that it is possible to start lessons before any '
             'refusal.',
  'input': 'The first line contains a single integer t ( 1≤t≤1000) — the '
           'number of test cases. The first line of each test case contains '
           'two integers n and m ( 1≤m≤n≤105) — the number of teachers and the '
           'number of groups of students. The second line of each test case '
           'contains n integers a1, a2, . . . , an ( 1≤ai≤105) — the ages of '
           'teachers. The next 2m lines contains descriptions of groups. The '
           'first line of description of group contains a single integer ki ( '
           '2≤ki≤105) — the number of students in this group. The second line '
           'of description of group contains ki integers bi, 1, bi, 2, . . . , '
           'bi, ki ( 1≤bi, j≤105) — the ages of students of this group. It is '
           "guaranteed that the total sum of n over all test cases doesn' t "
           'exceed 105 and that the total sum of k1+ k2+ . . . + km over all '
           "test cases doesn' t exceed 2⋅105",
  'note': 'In the first test case there is one group of students with average '
          'age 25+ 16+ 373= 26 and one teacher with age 30. There exists only '
          'one assignment that allows to start lessons. If the student with '
          'age 16 will refuse to study, the average age of students in this '
          "group will become 25+ 372= 31 so there won' t be any assignment "
          'that allows to start lessons. In the second test case it is '
          'impossible to start lessons initially. However, if the 3- rd '
          'student with age 111 will refuse to study, the average ages of '
          'groups will become 4+ 52= 4. 5 and 11+ 112= 11 correspondingly. '
          'Then it is possible to assing the first group to the first teacher '
          'and the second group to the third teacher.',
  'output': 'For each test case output string of symbols 0 and 1 of length k1+ '
            'k2+ . . . + km. The i- th symbol of this string should be equals '
            '1 if it is possible to start lessons in case of the i- th student '
            'refuse and it should be equals 0 otherwise. Students are numbered '
            'by integers from 1 to k1+ k2+ . . . + km in the order they appear '
            'in the input. Thus, students of the 1- st group are numbered by '
            'integers 1, 2, . . . , k1, students of the 2- nd group are '
            'numbered by integers k1+ 1, k1+ 2, . . . , k1+ k2 and so on.',
  'title': 'New School',
  'topics': ['implementation', 'sortings'],
  'url': 'https://codeforces.com/problemset/problem/1621/E'},
 {'history': 'Dasha has 10100 coins. Recently, she found a binary string s of '
             'length n and some operations that allows to change this string ( '
             'she can do each operation any number of times) : Replace '
             'substring 00 of s by 0 and receive a coins. Replace substring 11 '
             'of s by 1 and receive b coins. Remove 0 from any position in s '
             'and pay c coins. It turned out that while doing this operations '
             'Dasha should follow the rule: It is forbidden to do two '
             'operations with the same parity in a row. Operations are '
             'numbered by integers 1- 3 in the order they are given above. '
             'Please, calculate what is the maximum profit Dasha can get by '
             'doing these operations and following this rule.',
  'input': 'The first line contains a single integer t ( 1≤t≤104) — the number '
           'of test cases. The first line of each test case contains four '
           'integers n, a, b, c ( 1≤n≤105, 1≤a, b, c≤109) . The second line of '
           'each test case contains a binary string s of length n. It is '
           "guaranteed that the total sum of n over all test cases doesn' t "
           'exceed 2⋅105.',
  'note': 'In the first test case one of the optimal sequences of operations '
          'is 01101 → 0101 → 011 → 01. This sequence of operations consists of '
          'operations 2, 3 and 2 in this order. It satisfies all rules and '
          'gives profit 3. It can be shown that it is impossible to achieve '
          'higher profit in this test case, so the answer is 3. In the second '
          'test case one of the optimal sequences of operations is 110001 → '
          '11001 → 1001 → 101. In the third test case one of the optimal '
          'sequences of operations is 011110 → 01110 → 1110 → 110 → 11 → 1.',
  'output': 'For each test case print the answer.',
  'title': 'Strange Instructions',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1621/F'},
 {'history': 'Berland Music is a music streaming service built specifically to '
             'support Berland local artist. Its developers are currently '
             'working on a song recommendation module. So imagine Monocarp got '
             'recommended n songs, numbered from 1 to n. The i- th song had '
             'its predicted rating equal to pi, where 1≤pi≤n and every integer '
             'from 1 to n appears exactly once. In other words, p is a '
             'permutation. After listening to each of them, Monocarp pressed '
             'either a like or a dislike button. Let his vote sequence be '
             'represented with a string s, such that si= 0 means that he '
             'disliked the i- th song, and si= 1 means that he liked it. Now '
             'the service has to re- evaluate the song ratings in such a way '
             'that: the new ratings q1, q2, . . . , qn still form a '
             'permutation ( 1≤qi≤n; each integer from 1 to n appears exactly '
             'once) ; every song that Monocarp liked should have a greater '
             'rating than every song that Monocarp disliked ( formally, for '
             'all i, j such that si= 1 and sj= 0, qi> qj should hold) . Among '
             'all valid permutations q find the one that has the smallest '
             'value of n∑i= 1| pi−qi| , where | x| is an absolute value of x. '
             'Print the permutation q1, q2, . . . , qn. If there are multiple '
             'answers, you can print any of them.',
  'input': 'The first line contains a single integer t ( 1≤t≤104) — the number '
           'of testcases. The first line of each testcase contains a single '
           'integer n ( 1≤n≤2⋅105) — the number of songs. The second line of '
           'each testcase contains n integers p1, p2, . . . , pn ( 1≤pi≤n) — '
           'the permutation of the predicted ratings. The third line contains '
           'a single string s, consisting of n characters. Each character is '
           'either a 0 or a 1. 0 means that Monocarp disliked the song, and 1 '
           "means that he liked it. The sum of n over all testcases doesn' t "
           'exceed 2⋅105.',
  'note': 'In the first testcase, there exists only one permutation q such '
          'that each liked song is rating higher than each disliked song: song '
          '1 gets rating 2 and song 2 gets rating 1. n∑i= 1| pi−qi| = | 1−2| + '
          '| 2−1| = 2. In the second testcase, Monocarp liked all songs, so '
          'all permutations could work. The permutation with the minimum sum '
          'of absolute differences is the permutation equal to p. Its cost is '
          '0.',
  'output': 'For each testcase, print a permutation q — the re- evaluated '
            'ratings of the songs. If there are multiple answers such that '
            'n∑i= 1| pi−qi| is minimum possible, you can print any of them.',
  'title': 'Berland Music',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1622/B'},
 {'history': 'You are given an integer array a1, a2, . . . , an and integer k. '
             'In one step you can either choose some index i and decrease ai '
             'by one ( make ai= ai−1) ; or choose two indices i and j and set '
             'ai equal to aj ( make ai= aj) . What is the minimum number of '
             'steps you need to make the sum of array n∑i= 1ai≤k? ( You are '
             'allowed to make values of array negative) .',
  'input': 'The first line contains a single integer t ( 1≤t≤104) — the number '
           'of test cases. The first line of each test case contains two '
           'integers n and k ( 1≤n≤2⋅105; 1≤k≤1015) — the size of array a and '
           'upper bound on its sum. The second line of each test case contains '
           "n integers a1, a2, . . . , an ( 1≤ai≤109) — the array itself. It' "
           "s guaranteed that the sum of n over all test cases doesn' t exceed "
           '2⋅105.',
  'note': 'In the first test case, you should decrease a1 10 times to get the '
          'sum lower or equal to k= 10. In the second test case, the sum of '
          "array a is already less or equal to 69, so you don' t need to "
          'change it. In the third test case, you can, for example: set a4= '
          "a3= 1; decrease a4 by one, and get a4= 0. As a result, you' ll get "
          'array [ 1, 2, 1, 0, 1, 2, 1] with sum less or equal to 8 in 1+ 1= 2 '
          'steps. In the fourth test case, you can, for example: choose a7 and '
          "decrease in by one 3 times; you' ll get a7= −2; choose 4 elements "
          "a6, a8, a9 and a10 and them equal to a7= −2. As a result, you' ll "
          'get array [ 1, 2, 3, 1, 2, −2, −2, −2, −2, −2] with sum less or '
          'equal to 1 in 3+ 4= 7 steps.',
  'output': 'For each test case, print one integer — the minimum number of '
            'steps to make n∑i= 1ai≤k.',
  'title': 'Set or Decrease',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1622/C'},
 {'history': 'A robot cleaner is placed on the floor of a rectangle room, '
             'surrounded by walls. The floor consists of n rows and m columns. '
             'The rows of the floor are numbered from 1 to n from top to '
             'bottom, and columns of the floor are numbered from 1 to m from '
             'left to right. The cell on the intersection of the r- th row and '
             'the c- th column is denoted as ( r, c) . The initial position of '
             'the robot is ( rb, cb) . In one second, the robot moves by dr '
             'rows and dc columns, that is, after one second, the robot moves '
             'from the cell ( r, c) to ( r+ dr, c+ dc) . Initially dr= 1, dc= '
             '1. If there is a vertical wall ( the left or the right walls) in '
             'the movement direction, dc is reflected before the movement, so '
             'the new value of dc is −dc. And if there is a horizontal wall ( '
             'the upper or lower walls) , dr is reflected before the movement, '
             'so the new value of dr is −dr. Each second ( including the '
             'moment before the robot starts moving) , the robot cleans every '
             'cell lying in the same row or the same column as its position. '
             'There is only one dirty cell at ( rd, cd) . The job of the robot '
             'is to clean that dirty cell. Illustration for the first example. '
             'The blue arc is the robot. The red star is the target dirty '
             'cell. Each second the robot cleans a row and a column, denoted '
             "by yellow stripes. Given the floor size n and m, the robot' s "
             "initial position ( rb, cb) and the dirty cell' s position ( rd, "
             'cd) , find the time for the robot to do its job.',
  'input': 'Each test contains multiple test cases. The first line contains '
           'the number of test cases t ( 1≤t≤104) . Description of the test '
           'cases follows. A test case consists of only one line, containing '
           'six integers n, m, rb, cb, rd, and cd ( 1≤n, m≤100, 1≤rb, rd≤n, '
           '1≤cb, cd≤m) — the sizes of the room, the initial position of the '
           'robot and the position of the dirt cell.',
  'note': 'In the first example, the floor has the size of 10×10. The initial '
          'position of the robot is ( 6, 1) and the position of the dirty cell '
          'is ( 2, 8) . See the illustration of this example in the problem '
          'statement. In the second example, the floor is the same, but the '
          'initial position of the robot is now ( 9, 9) , and the position of '
          'the dirty cell is ( 1, 1) . In this example, the robot went '
          'straight to the dirty cell and clean it. In the third example, the '
          'floor has the size 9×8. The initial position of the robot is ( 5, '
          '6) , and the position of the dirty cell is ( 2, 1) . In the fourth '
          'example, the floor has the size 6×9. The initial position of the '
          'robot is ( 2, 2) and the position of the dirty cell is ( 5, 8) . In '
          'the last example, the robot was already standing in the same column '
          'as the dirty cell, so it can clean the cell right away.',
  'output': 'For each test case, print an integer — the time for the robot to '
            'clean the dirty cell. We can show that the robot always cleans '
            'the dirty cell eventually.',
  'title': 'Robot Cleaner',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1623/A'},
 {'history': 'Alice and Bob play the following game. Alice has a set S of '
             'disjoint ranges of integers, initially containing only one range '
             '[ 1, n] . In one turn, Alice picks a range [ l, r] from the set '
             'S and asks Bob to pick a number in the range. Bob chooses a '
             'number d ( l≤d≤r) . Then Alice removes [ l, r] from S and puts '
             'into the set S the range [ l, d−1] ( if l≤d−1) and the range [ '
             'd+ 1, r] ( if d+ 1≤r) . The game ends when the set S is empty. '
             'We can show that the number of turns in each game is exactly n. '
             'After playing the game, Alice remembers all the ranges [ l, r] '
             'she picked from the set S, but Bob does not remember any of the '
             'numbers that he picked. But Bob is smart, and he knows he can '
             "find out his numbers d from Alice' s ranges, and so he asks you "
             'for help with your programming skill. Given the list of ranges '
             'that Alice has picked ( [ l, r] ) , for each range, help Bob '
             'find the number d that Bob has picked. We can show that there is '
             'always a unique way for Bob to choose his number for a list of '
             'valid ranges picked by Alice.',
  'input': 'Each test contains multiple test cases. The first line contains '
           'the number of test cases t ( 1≤t≤1000) . Description of the test '
           'cases follows. The first line of each test case contains a single '
           'integer n ( 1≤n≤1000) . Each of the next n lines contains two '
           'integers l and r ( 1≤l≤r≤n) , denoting the range [ l, r] that '
           'Alice picked at some point. Note that the ranges are given in no '
           'particular order. It is guaranteed that the sum of n over all test '
           'cases does not exceed 1000, and the ranges for each test case are '
           'from a valid game.',
  'note': 'In the first test case, there is only 1 range [ 1, 1] . There was '
          'only one range [ 1, 1] for Alice to pick, and there was only one '
          'number 1 for Bob to pick. In the second test case, n= 3. Initially, '
          'the set contains only one range [ 1, 3] . Alice picked the range [ '
          '1, 3] . Bob picked the number 1. Then Alice put the range [ 2, 3] '
          'back to the set, which after this turn is the only range in the '
          'set. Alice picked the range [ 2, 3] . Bob picked the number 3. Then '
          'Alice put the range [ 2, 2] back to the set. Alice picked the range '
          '[ 2, 2] . Bob picked the number 2. The game ended. In the fourth '
          'test case, the game was played with n= 5. Initially, the set '
          "contains only one range [ 1, 5] . The game' s turn is described in "
          "the following table. Game turnAlice' s picked rangeBob' s picked "
          'numberThe range set afterBefore the game start[ 1, 5] 1[ 1, 5] 3[ '
          '1, 2] , [ 4, 5] 2[ 1, 2] 1[ 2, 2] , [ 4, 5] 3[ 4, 5] 5[ 2, 2] , [ '
          '4, 4] 4[ 2, 2] 2[ 4, 4] 5[ 4, 4] 4 ( empty set)',
  'output': 'For each test case print n lines. Each line should contain three '
            "integers l, r, and d, denoting that for Alice' s range [ l, r] "
            'Bob picked the number d. You can print the lines in any order. We '
            'can show that the answer is unique. It is not required to print a '
            'new line after each test case. The new lines in the output of the '
            'example are for readability only.',
  'title': 'Game on Ranges',
  'topics': ['implementation', 'sortings'],
  'url': 'https://codeforces.com/problemset/problem/1623/B'},
 {'history': 'The statement of this problem shares a lot with problem A. The '
             'differences are that in this problem, the probability is '
             'introduced, and the constraint is different. A robot cleaner is '
             'placed on the floor of a rectangle room, surrounded by walls. '
             'The floor consists of n rows and m columns. The rows of the '
             'floor are numbered from 1 to n from top to bottom, and columns '
             'of the floor are numbered from 1 to m from left to right. The '
             'cell on the intersection of the r- th row and the c- th column '
             'is denoted as ( r, c) . The initial position of the robot is ( '
             'rb, cb) . In one second, the robot moves by dr rows and dc '
             'columns, that is, after one second, the robot moves from the '
             'cell ( r, c) to ( r+ dr, c+ dc) . Initially dr= 1, dc= 1. If '
             'there is a vertical wall ( the left or the right walls) in the '
             'movement direction, dc is reflected before the movement, so the '
             'new value of dc is −dc. And if there is a horizontal wall ( the '
             'upper or lower walls) , dr is reflected before the movement, so '
             'the new value of dr is −dr. Each second ( including the moment '
             'before the robot starts moving) , the robot cleans every cell '
             'lying in the same row or the same column as its position. There '
             'is only one dirty cell at ( rd, cd) . The job of the robot is to '
             'clean that dirty cell. After a lot of testings in problem A, the '
             'robot is now broken. It cleans the floor as described above, but '
             'at each second the cleaning operation is performed with '
             'probability p100 only, and not performed with probability '
             '1−p100. The cleaning or not cleaning outcomes are independent '
             "each second. Given the floor size n and m, the robot' s initial "
             "position ( rb, cb) and the dirty cell' s position ( rd, cd) , "
             'find the expected time for the robot to do its job. It can be '
             'shown that the answer can be expressed as an irreducible '
             'fraction xy, where x and y are integers and y≢0( mod109+ 7) . '
             'Output the integer equal to x⋅y−1mod( 109+ 7) . In other words, '
             'output such an integer a that 0≤a< 109+ 7 and a⋅y≡x( mod109+ 7) '
             '.',
  'input': 'Each test contains multiple test cases. The first line contains '
           'the number of test cases t ( 1≤t≤10) . Description of the test '
           'cases follows. A test case consists of only one line, containing '
           'n, m, rb, cb, rd, cd, and p ( 4≤n⋅m≤105, n, m≥2, 1≤rb, rd≤n, 1≤cb, '
           'cd≤m, 1≤p≤99) — the sizes of the room, the initial position of the '
           'robot, the position of the dirt cell and the probability of '
           'cleaning in percentage.',
  'note': 'In the first test case, the robot has the opportunity to clean the '
          'dirty cell every second. Using the geometric distribution, we can '
          'find out that with the success rate of 25',
  'output': 'For each test case, print a single integer — the expected time '
            'for the robot to clean the dirty cell, modulo 109+ 7.',
  'title': 'Robot Cleaner Revisit',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1623/D'},
 {'history': 'A binary tree of nn nodes is given. Nodes of the tree are '
             'numbered from 11 to nn and the root is the node 11. Each node '
             'can have no child, only one left child, only one right child, or '
             "both children. For convenience, let' s denote lulu and ruru as "
             'the left and the right child of the node uu respectively, lu= '
             '0lu= 0 if uu does not have the left child, and ru= 0ru= 0 if the '
             'node uu does not have the right child. Each node has a string '
             "label, initially is a single character cucu. Let' s define the "
             'string representation of the binary tree as the concatenation of '
             'the labels of the nodes in the in- order. Formally, let f( u) f( '
             'u) be the string representation of the tree rooted at the node '
             'uu. f( u) f( u) is defined as follows: f( u) = < empty string> , '
             'f( lu) + cu+ f( ru) if u= 0; otherwise, f( u) = < empty string> '
             ', if u= 0; f( lu) + cu+ f( ru) otherwise, where + + denotes the '
             'string concatenation operation. This way, the string '
             'representation of the tree is f( 1) f( 1) . For each node, we '
             'can duplicate its label at most once, that is, assign cucu with '
             'cu+ cucu+ cu, but only if uu is the root of the tree, or if its '
             'parent also has its label duplicated. You are given the tree and '
             'an integer kk. What is the lexicographically smallest string '
             'representation of the tree, if we can duplicate labels of at '
             'most kk nodes? A string aa is lexicographically smaller than a '
             'string bb if and only if one of the following holds: aa is a '
             'prefix of bb, but a= ̸ba= ̸b; in the first position where aa and '
             'bb differ, the string aa has a letter that appears earlier in '
             'the alphabet than the corresponding letter in bb.',
  'input': 'The first line contains two integers nn and kk ( '
           '1≤k≤n≤2⋅1051≤k≤n≤2⋅105) . The second line contains a string cc of '
           'nn lower- case English letters, where cici is the initial label of '
           'the node ii for 1≤i≤n1≤i≤n. Note that the given string cc is not '
           'the initial string representation of the tree. The ii- th of the '
           'next nn lines contains two integers lili and riri ( 0≤li, '
           'ri≤n0≤li, ri≤n) . If the node ii does not have the left child, li= '
           '0li= 0, and if the node ii does not have the right child, ri= 0ri= '
           '0. It is guaranteed that the given input forms a binary tree, '
           'rooted at 11.',
  'note': 'The images below present the tree for the examples. The number in '
          'each node is the node number, while the subscripted letter is its '
          'label. To the right is the string representation of the tree, with '
          'each letter having the same color as the corresponding node. Here '
          'is the tree for the first example. Here we duplicated the labels of '
          'nodes 11 and 33. We should not duplicate the label of node 22 '
          'because it would give us the string " bbaaab" , which is '
          'lexicographically greater than " baaaab" . In the second example, '
          'we can duplicate the labels of nodes 11 and 22. Note that only '
          'duplicating the label of the root will produce a worse result than '
          'the initial string. In the third example, we should not duplicate '
          'any character at all. Even though we would want to duplicate the '
          'label of the node 33, by duplicating it we must also duplicate the '
          'label of the node 22, which produces a worse result. There is no '
          'way to produce string " darkkcyan" from a tree with the initial '
          'string representation " darkcyan" : ( .',
  'output': 'Print a single line, containing the lexicographically smallest '
            'string representation of the tree if at most kk nodes have their '
            'labels duplicated.',
  'title': 'Middle Duplication',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1623/E'},
 {'history': 'Polycarp has 3 positive integers a , b and c . He can perform '
             'the following operation exactly once. Choose a positive integer '
             'm and multiply exactly one of the integers a , b or c by m . Can '
             'Polycarp make it so that after performing the operation, the '
             'sequence of three numbers a , b , c ( in this order) forms an '
             'arithmetic progression? Note that you cannot change the order of '
             'a , b and c . Formally, a sequence x_ 1, x_ 2, . . . , x_ n is '
             'called an arithmetic progression ( AP) if there exists a number '
             'd ( called " common difference" ) such that x_ i+ 1= x_ i+ d for '
             'all i from 1 to n- 1 . In this problem, n= 3 . For example, the '
             'following sequences are AP: [ 5, 10, 15] , [ 3, 2, 1] , [ 1, 1, '
             '1] , and [ 13, 10, 7] . The following sequences are not AP: [ 1, '
             '2, 4] , [ 0, 1, 0] and [ 1, 3, 2] . You need to answer t '
             'independent test cases.',
  'input': 'The first line contains the number t ( 1 ≤ t ≤ 10^ 4 ) — the '
           'number of test cases. Each of the following t lines contains 3 '
           'integers a , b , c ( 1 ≤ a, b, c ≤ 10^ 8 ) .',
  'note': 'In the first and second test cases, you can choose the number m= 4 '
          'and multiply the second number ( b= 5 ) by 4 . In the first test '
          'case the resulting sequence will be [ 10, 20, 30] . This is an AP '
          'with a difference d= 10 . In the second test case the resulting '
          'sequence will be [ 30, 20, 10] . This is an AP with a difference d= '
          '- 10 . In the third test case, you can choose m= 1 and multiply any '
          'number by 1 . The resulting sequence will be [ 1, 2, 3] . This is '
          'an AP with a difference d= 1 . In the fourth test case, you can '
          'choose m= 9 and multiply the first number ( a= 1 ) by 9 . The '
          'resulting sequence will be [ 9, 6, 3] . This is an AP with a '
          'difference d= - 3 . In the fifth test case, it is impossible to '
          'make an AP.',
  'output': 'For each test case print " YES" ( without quotes) if Polycarp can '
            'choose a positive integer m and multiply exactly one of the '
            'integers a , b or c by m to make [ a, b, c] be an arithmetic '
            'progression. Print " NO" ( without quotes) otherwise. You can '
            'print YES and NO in any ( upper or lower) case ( for example, the '
            'strings yEs, yes, Yes and YES will be recognized as a positive '
            'answer) .',
  'title': 'Make AP',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1624/B'},
 {'history': 'You have a string s consisting of lowercase Latin alphabet '
             'letters. You can color some letters in colors from 1 to k. It is '
             'not necessary to paint all the letters. But for each color, '
             'there must be a letter painted in that color. Then you can swap '
             'any two symbols painted in the same color as many times as you '
             'want. After that, k strings will be created, i- th of them will '
             'contain all the characters colored in the color i, written in '
             'the order of their sequence in the string s. Your task is to '
             'color the characters of the string so that all the resulting k '
             'strings are palindromes, and the length of the shortest of these '
             'k strings is as large as possible. Read the note for the first '
             'test case of the example if you need a clarification. Recall '
             'that a string is a palindrome if it reads the same way both from '
             'left to right and from right to left. For example, the strings '
             'abacaba, cccc, z and dxd are palindromes, but the strings abab '
             'and aaabaa — are not.',
  'input': 'The first line of input data contains a single integer t ( '
           '1≤t≤104) — the number of input data sets in the test. The '
           'descriptions of the input data sets follow. The first line of the '
           'description of each input data set contains two integers n and k ( '
           '1≤k≤n≤2⋅105) — the length of the string and the number of colors '
           'in which its letters can be painted. The second line of the '
           'description of each input data set contains a string s of length n '
           'consisting of lowercase letters of the Latin alphabet. It is '
           'guaranteed that the sum of n over all test cases does not exceed '
           '2⋅105.',
  'note': 'In the first test case, s= " bxyaxzay" , k= 2. We use indices in '
          'the string from 1 to 8. The following coloring will work: bxyaxzay '
          '( the letter z remained uncolored) . After painting: swap two red '
          'characters ( with the indices 1 and 4) , we get axybxzay; swap two '
          'blue characters ( with the indices 5 and 8) , we get axybyzax. Now, '
          'for each of the two colors we write out the corresponding '
          'characters from left to right, we get two strings aba and xyyx. '
          'Both of them are palindromes, the length of the shortest is 3. It '
          'can be shown that the greatest length of the shortest palindrome '
          'cannot be achieved. In the second set of input data, the following '
          'coloring is suitable: [ 1, 1, 2, 2, 3, 3] . There is no need to '
          'swap characters. Both received strings are equal to aa, they are '
          'palindromes and their length is 2. In the third set of input data, '
          'you can color any character and take it into a string. In the '
          'fourth set of input data, you can color the ith character in the '
          'color i. In the fifth set of input data can be colored in each of '
          'the colors of one character. In the sixth set of input data, the '
          'following coloring is suitable: [ 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 0] '
          '. Rearrange the characters so as to get the palindromes abcba and '
          'acbca.',
  'output': 'For each set of input data, output a single integer — the maximum '
            'length of the shortest palindrome string that can be obtained.',
  'title': 'Palindromes Coloring',
  'topics': ['sortings', 'strings'],
  'url': 'https://codeforces.com/problemset/problem/1624/D'},
 {'history': 'Masha meets a new friend and learns his phone number — s. She '
             'wants to remember it as soon as possible. The phone number — is '
             'a string of length m that consists of digits from 0 to 9. The '
             'phone number may start with 0. Masha already knows n phone '
             'numbers ( all numbers have the same length m) . It will be '
             'easier for her to remember a new number if the s is represented '
             'as segments of numbers she already knows. Each such segment must '
             'be of length at least 2, otherwise there will be too many '
             'segments and Masha will get confused. For example, Masha needs '
             "to remember the number: s= ' 12345678' and she already knows n= "
             "4 numbers: ' 12340219' , ' 20215601' , ' 56782022' , ' 12300678' "
             ". You can represent s as a 3 segment: ' 1234' of number one, ' "
             "56' of number two, and ' 78' of number three. There are other "
             'ways to represent s. Masha asks you for help, she asks you to '
             'break the string s into segments of length 2 or more of the '
             'numbers she already knows. If there are several possible '
             'answers, print any of them.',
  'input': 'The first line of input data contains an integer t ( 1≤t≤104) —the '
           'number of test cases. Before each test case there is a blank line. '
           'Then there is a line containing integers n and m ( 1≤n, m≤103) '
           '—the number of phone numbers that Masha knows and the number of '
           'digits in each phone number. Then follow n line, i- th of which '
           'describes the i- th number that Masha knows. The next line '
           'contains the phone number of her new friend s. Among the given n+ '
           '1 phones, there may be duplicates ( identical phones) . It is '
           'guaranteed that the sum of n⋅m ( n multiplied by m) values over '
           'all input test cases does not exceed 106.',
  'note': 'The example from the statement. In the second case, it is '
          'impossible to represent by segments of known numbers of length 2 or '
          "more. In the third case, you can get the segments ' 12' and ' 21' "
          'from the first phone number.',
  'output': 'You need to print the answers to t test cases. The first line of '
            'the answer should contain one number k, corresponding to the '
            'number of segments into which you split the phone number s. Print '
            '- 1 if you cannot get such a split. If the answer is yes, then '
            'follow k lines containing triples of numbers l, r, i. Such '
            'triplets mean that the next r−l+ 1 digits of number s are equal '
            'to a segment ( substring) with boundaries [ l, r] of the phone '
            'under number i. Both the phones and the digits in them are '
            'numbered from 1. Note that r−l+ 1≥2 for all k lines.',
  'title': 'Masha-forgetful',
  'topics': ['implementation', 'strings'],
  'url': 'https://codeforces.com/problemset/problem/1624/E'},
 {'history': 'Martians are actively engaged in interplanetary trade. Olymp '
             'City, the Martian city known for its spaceport, has become a '
             'place where goods from all the corners of our Galaxy come. To '
             'deliver even more freight from faraway planets, Martians need '
             'fast spaceships. A group of scientists conducts experiments to '
             'build a fast engine for the new spaceship. In the current '
             'experiment, there are nn elementary particles, the ii- th of '
             'them has type aiai. Denote a subsegment of the particle sequence '
             '( a1, a2, . . . , ana1, a2, . . . , an) as a sequence ( al, al+ '
             '1, . . . , aral, al+ 1, . . . , ar) for some left bound ll and '
             'right bound rr ( 1≤l≤r≤n1≤l≤r≤n) . For instance, the sequence ( '
             '1 4 2 8 5 7) ( 1 4 2 8 5 7) for l= 2l= 2 and r= 4r= 4 has the '
             'sequence ( 4 2 8) ( 4 2 8) as a subsegment. Two subsegments are '
             'considered different if at least one bound of those subsegments '
             'differs. Note that the subsegments can be equal as sequences but '
             'still considered different. For example, consider the sequence ( '
             '1 1 1 1 1) ( 1 1 1 1 1) and two of its subsegments: one with l= '
             '1l= 1 and r= 3r= 3 and another with l= 2l= 2 and r= 4r= 4. Both '
             'subsegments are equal to ( 1 1 1) ( 1 1 1) , but still '
             'considered different, as their left and right bounds differ. The '
             'scientists want to conduct a reaction to get two different '
             'subsegments of the same length. Denote this length kk. The '
             'resulting pair of subsegments must be harmonious, i. e. for some '
             'ii ( 1≤i≤k1≤i≤k) it must be true that the types of particles on '
             'the ii- th position are the same for these two subsegments. For '
             'example, the pair ( 1 7 3) ( 1 7 3) and ( 4 7 8) ( 4 7 8) is '
             'harmonious, as both subsegments have 77 on the second position. '
             'The pair ( 1 2 3) ( 1 2 3) and ( 3 1 2) ( 3 1 2) is not '
             'harmonious. The longer are harmonious subsegments, the more '
             'chances for the scientists to design a fast engine. So, they '
             'asked you to calculate the maximal possible length of harmonious '
             'pair made of different subsegments.',
  'input': 'The first line contains an integer tt ( 1≤t≤1001≤t≤100) — the '
           'number of test cases. The following are descriptions of the test '
           'cases. The first line contains an integer nn ( '
           '2≤n≤1500002≤n≤150000) — the amount of elementary particles in the '
           'sequence. The second line contains nn integers aiai ( '
           '1≤ai≤1500001≤ai≤150000) — types of elementary particles. It is '
           'guaranteed that the sum of nn over all test cases does not exceed '
           '3⋅1053⋅105.',
  'note': 'The first test case is shown on the picture below: As you can see '
          'from it, you may choose the subsegments ( 2 1 3 4) ( 2 1 3 4) and ( '
          '3 1 5 2) ( 3 1 5 2) , which are a harmonious pair. Their length is '
          'equal to 44, so the answer is 44. In the second test case, you need '
          'to take two subsegments: one with l= 1l= 1 and r= 5r= 5, and one '
          "with l= 2l= 2 and r= 6r= 6. It' s not hard to observe that these "
          'segments are a harmonious pair and considered different even though '
          'they are both equal to ( 1 1 1 1 1) ( 1 1 1 1 1) . In the third '
          'test case, you cannot make a harmonious pair, so the answer is '
          '−1−1.',
  'output': 'For each test, print a single integer, maximal possible length of '
            'harmonious pair made of different subsegments. If such pair does '
            'not exist, print −1−1 instead.',
  'title': 'Elementary Particles',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1625/B'},
 {'history': 'Binary Spiders are species of spiders that live on Mars. These '
             'spiders weave their webs to defend themselves from enemies. To '
             'weave a web, spiders join in pairs. If the first spider in pair '
             'has x legs, and the second spider has y legs, then they weave a '
             'web with durability x⊕y. Here, ⊕ means bitwise XOR. Binary '
             'Spiders live in large groups. You observe a group of n spiders, '
             'and the i- th spider has ai legs. When the group is threatened, '
             'some of the spiders become defenders. Defenders are chosen in '
             'the following way. First, there must be at least two defenders. '
             'Second, any pair of defenders must be able to weave a web with '
             'durability at least k. Third, there must be as much defenders as '
             'possible. Scientists have researched the behaviour of Binary '
             'Spiders for a long time, and now they have a hypothesis that '
             'they can always choose the defenders in an optimal way, '
             'satisfying the conditions above. You need to verify this '
             'hypothesis on your group of spiders. So, you need to understand '
             'how many spiders must become defenders. You are not a Binary '
             'Spider, so you decided to use a computer to solve this problem.',
  'input': 'The first line contains two integers n and k ( 2≤n≤3⋅105, '
           '0≤k≤230−1) , the amount of spiders in the group and the minimal '
           'allowed durability of a web. The second line contains n integers '
           'ai ( 0≤ai≤230−1) — the number of legs the i- th spider has.',
  'note': 'Consider the examples above. In the first example, the group of '
          'spiders is illustrated on the picture below: We choose the two- '
          "legged, the ten- legged and the 16- legged spiders. It' s not hard "
          'to see that each pair may weave a web with enough durability, as '
          '2⊕10= 8≥8, 2⊕16= 18≥8 and 10⊕16= 26≥8. This is not the only way, as '
          'you can also choose, for example, the spiders with indices 3, 4, '
          'and 6. In the second example, no pair of spiders can weave the web '
          'with durability 1024 or more, so the answer is −1.',
  'output': 'In the first line, print a single integer l ( 2≤l≤n) , the '
            'maximum possible amount of defenders. In the second line, print l '
            'integers bi, separated by a single space ( 1≤bi≤n) — indices of '
            'spiders that will become defenders. If there exists more than one '
            'way to choose the defenders, print any of them. Unfortunately, it '
            "may appear that it' s impossible to choose the defenders. In this "
            'case, print a single integer −1.',
  'title': 'Binary Spiders',
  'topics': ['implementation', 'sortings'],
  'url': 'https://codeforces.com/problemset/problem/1625/D'},
 {'history': 'You are given a string s, consisting of lowercase Latin letters. '
             'Every letter appears in it no more than twice. Your task is to '
             'rearrange the letters in the string in such a way that for each '
             'pair of letters that appear exactly twice, the distance between '
             'the letters in the pair is the same. You are not allowed to add '
             'or remove letters. It can be shown that the answer always '
             'exists. If there are multiple answers, print any of them.',
  'input': 'The first line contains a single integer t ( 1≤t≤103) — the number '
           'of testcases. Each testcase consists of a non- empty string s, '
           'consisting of lowercase Latin letters. Every letter appears in the '
           "string no more than twice. The length of the string doesn' t "
           'exceed 52.',
  'note': 'In the first testcase of the example, the only letter that appears '
          "exactly twice is letter ' l' . You can rearrange the letters "
          'arbitrarily, since there are no distances to compare. In the second '
          'testcase of the example, the letters that appear exactly twice are '
          "' a' , ' b' and ' c' . Initially, letters ' a' are distance 6 "
          "apart, letters ' b' are distance 4 apart and letters ' c' are "
          'distance 2 apart. They are not the same, so we have to rearrange '
          "the letters. After rearrangement, letters ' a' are distance 2 "
          "apart, letters ' b' are distance 2 apart and letters ' c' are "
          'distance 2 apart. They are all the same, so the answer is valid. In '
          'the third testcase of the example, there are no letters that appear '
          'exactly twice. Thus, any rearrangement is valid. Including not '
          'changing the string at all.',
  'output': 'For each testcase, print a single string. Every letter should '
            'appear in it the same number of times as it appears in string s. '
            'For each pair of letters that appear exactly twice, the distance '
            'between the letters in the pair should be the same. If there are '
            'multiple answers, print any of them.',
  'title': 'Equidistant Letters',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1626/A'},
 {'history': 'You are given a decimal representation of an integer x without '
             'leading zeros. You have to perform the following reduction on it '
             'exactly once: take two neighboring digits in x and replace them '
             "with their sum without leading zeros ( if the sum is 0, it' s "
             'represented as a single 0) . For example, if x= 10057, the '
             'possible reductions are: choose the first and the second digits '
             '1 and 0, replace them with 1+ 0= 1; the result is 1057; choose '
             'the second and the third digits 0 and 0, replace them with 0+ 0= '
             '0; the result is also 1057; choose the third and the fourth '
             'digits 0 and 5, replace them with 0+ 5= 5; the result is still '
             '1057; choose the fourth and the fifth digits 5 and 7, replace '
             "them with 5+ 7= 12; the result is 10012. What' s the largest "
             'number that can be obtained?',
  'input': 'The first line contains a single integer t ( 1≤t≤104) — the number '
           'of testcases. Each testcase consists of a single integer x ( 10≤x< '
           "10200000) . x doesn' t contain leading zeros. The total length of "
           "the decimal representations of x over all testcases doesn' t "
           'exceed 2⋅105.',
  'note': 'The first testcase of the example is already explained in the '
          'statement. In the second testcase, there is only one possible '
          'reduction: the first and the second digits.',
  'output': 'For each testcase, print a single integer — the largest number '
            'that can be obtained after the reduction is applied exactly once. '
            'The number should not contain leading zeros.',
  'title': 'Minor Reduction',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1626/B'},
 {'history': 'Monocarp is playing a computer game once again. He is a wizard '
             'apprentice, who only knows a single spell. Luckily, this spell '
             "can damage the monsters. The level he' s currently on contains n "
             'monsters. The i - th of them appears k_ i seconds after the '
             'start of the level and has h_ i health points. As an additional '
             'constraint, h_ i ≤ k_ i for all 1 ≤ i ≤ n . All k_ i are '
             'different. Monocarp can cast the spell at moments which are '
             'positive integer amounts of second after the start of the level: '
             '1, 2, 3, . . . The damage of the spell is calculated as follows. '
             "If he didn' t cast the spell at the previous second, the damage "
             'is 1 . Otherwise, let the damage at the previous second be x . '
             'Then he can choose the damage to be either x + 1 or 1 . A spell '
             'uses mana: casting a spell with damage x uses x mana. Mana '
             "doesn' t regenerate. To kill the i - th monster, Monocarp has to "
             'cast a spell with damage at least h_ i at the exact moment the '
             'monster appears, which is k_ i . Note that Monocarp can cast the '
             'spell even when there is no monster at the current second. The '
             'mana amount required to cast the spells is the sum of mana '
             'usages for all cast spells. Calculate the least amount of mana '
             'required for Monocarp to kill all monsters. It can be shown that '
             "it' s always possible to kill all monsters under the constraints "
             'of the problem.',
  'input': 'The first line contains a single integer t ( 1 ≤ t ≤ 10^ 4 ) — the '
           'number of testcases. The first line of the testcase contains a '
           'single integer n ( 1 ≤ n ≤ 100 ) — the number of monsters in the '
           'level. The second line of the testcase contains n integers k_ 1 < '
           'k_ 2 < . . . < k_ n ( 1 ≤ k_ i ≤ 10^ 9 ) — the number of second '
           'from the start the i - th monster appears at. All k_ i are '
           'different, k_ i are provided in the increasing order. The third '
           'line of the testcase contains n integers h_ 1, h_ 2, . . . , h_ n '
           '( 1 ≤ h_ i ≤ k_ i ≤ 10^ 9 ) — the health of the i - th monster. '
           "The sum of n over all testcases doesn' t exceed 10^ 4 .",
  'note': 'In the first testcase of the example, Monocarp can cast spells 3, '
          '4, 5 and 6 seconds from the start with damages 1, 2, 3 and 4 , '
          'respectively. The damage dealt at 6 seconds is 4 , which is indeed '
          'greater than or equal to the health of the monster that appears. In '
          'the second testcase of the example, Monocarp can cast spells 3, 4 '
          'and 5 seconds from the start with damages 1, 2 and 3 , '
          'respectively. In the third testcase of the example, Monocarp can '
          'cast spells 4, 5, 7, 8 and 9 seconds from the start with damages 1, '
          '2, 1, 1 and 2 , respectively.',
  'output': 'For each testcase, print a single integer — the least amount of '
            'mana required for Monocarp to kill all monsters.',
  'title': 'Monsters And Spells',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1626/C'},
 {'history': 'There is a grid with n rows and m columns. Some cells are '
             'colored black, and the rest of the cells are colored white. In '
             'one operation, you can select some black cell and do exactly one '
             'of the following: color all cells in its row black, or color all '
             'cells in its column black. You are given two integers r and c . '
             'Find the minimum number of operations required to make the cell '
             'in row r and column c black, or determine that it is impossible.',
  'input': 'The input consists of multiple test cases. The first line contains '
           'an integer t ( 1 ≤ t ≤ 100 ) — the number of test cases. The '
           'description of the test cases follows. The first line of each test '
           'case contains four integers n , m , r , and c ( 1 ≤ n, m ≤ 50 ; 1 '
           '≤ r ≤ n ; 1 ≤ c ≤ m ) — the number of rows and the number of '
           'columns in the grid, and the row and column of the cell you need '
           'to turn black, respectively. Then n lines follow, each containing '
           "m characters. Each of these characters is either ' B' or ' W' — a "
           'black and a white cell, respectively.',
  'note': 'The first test case is pictured below. We can take the black cell '
          'in row 1 and column 2 , and make all cells in its row black. '
          'Therefore, the cell in row 1 and column 4 will become black. In the '
          'second test case, the cell in row 2 and column 1 is already black. '
          'In the third test case, it is impossible to make the cell in row 2 '
          'and column 2 black. The fourth test case is pictured below. We can '
          'take the black cell in row 2 and column 2 and make its column '
          'black. Then, we can take the black cell in row 1 and column 2 and '
          'make its row black. Therefore, the cell in row 1 and column 1 will '
          'become black.',
  'output': 'For each test case, if it is impossible to make the cell in row r '
            'and column c black, output - 1 . Otherwise, output a single '
            'integer — the minimum number of operations required to make the '
            'cell in row r and column c black.',
  'title': 'Not Shading',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1627/A'},
 {'history': 'Rahul and Tina are looking forward to starting their new year at '
             'college. As they enter their new classroom, they observe the '
             'seats of students are arranged in a n×mn×m grid. The seat in row '
             'rr and column cc is denoted by ( r, c) ( r, c) , and the '
             'distance between two seats ( a, b) ( a, b) and ( c, d) ( c, d) '
             'is | a−c| + | b−d| | a−c| + | b−d| . As the class president, '
             'Tina has access to exactly kk buckets of pink paint. The '
             'following process occurs. First, Tina chooses exactly kk seats '
             'in the classroom to paint with pink paint. One bucket of paint '
             'can paint exactly one seat. After Tina has painted kk seats in '
             'the previous step, Rahul chooses where he sits. He will not '
             'choose a seat that has been painted pink due to his hatred of '
             'the colour pink. After Rahul has chosen his seat, Tina chooses a '
             'seat for herself. She can choose any of the seats, painted or '
             'not, other than the one chosen by Rahul. Rahul wants to choose a '
             'seat such that he sits as close to Tina as possible. However, '
             'Tina wants to sit as far away from Rahul as possible due to some '
             "complicated relationship history that we couldn' t fit into the "
             'statement! Now, Rahul wonders for k= 0, 1, . . . , n⋅m−1k= 0, 1, '
             '. . . , n⋅m−1, if Tina has kk buckets of paint, how close can '
             'Rahul sit to Tina, if both Rahul and Tina are aware of each '
             "other' s intentions and they both act as strategically as "
             "possible? Please help satisfy Rahul' s curiosity!",
  'input': 'The input consists of multiple test cases. The first line contains '
           'an integer tt ( 1≤t≤5⋅1041≤t≤5⋅104) — the number of test cases. '
           'The description of the test cases follows. The first line of each '
           'test case contains two integers nn, mm ( 2≤n⋅m≤1052≤n⋅m≤105) — the '
           'number of rows and columns of seats in the classroom. The sum of '
           'n⋅mn⋅m across all test cases does not exceed 105105.',
  'note': 'One possible sequence of choices for the first testcase where Tina '
          'has k= 3k= 3 buckets of paints is as follows. Tina paints the seats '
          'at positions ( 1, 2) ( 1, 2) , ( 2, 2) ( 2, 2) , ( 3, 2) ( 3, 2) '
          'with pink paint. Rahul chooses the seat at ( 3, 1) ( 3, 1) after '
          'which Tina chooses to sit at ( 1, 3) ( 1, 3) . Therefore, the '
          'distance between Tina and Rahul is | 3−1| + | 1−3| = 4| 3−1| + | '
          '1−3| = 4, and we can prove that this is indeed the minimum possible '
          'distance under the given constraints. There may be other choices of '
          'seats which lead to the same answer as well. For k= 0k= 0 in the '
          'first test case, Rahul can decide to sit at ( 2, 2) ( 2, 2) and '
          'Tina can decide to sit at ( 4, 3) ( 4, 3) so the distance between '
          'them would be | 2−4| + | 2−3| = 3| 2−4| + | 2−3| = 3. Below are '
          'pictorial representations of the k= 3k= 3 and k= 0k= 0 cases for '
          'the first test case. A possible seating arrangement for k= 3k= 3. A '
          'possible seating arrangement for k= 0k= 0.',
  'output': 'For each test case, output n⋅mn⋅m ordered integers — the distance '
            'between Rahul and Tina if both of them act optimally for every '
            'k∈[ 0, n⋅m−1] k∈[ 0, n⋅m−1] .',
  'title': 'Not Sitting',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1627/B'},
 {'history': 'Major Ram is being chased by his arch enemy Raghav. Ram must '
             'reach the top of the building to escape via helicopter. The '
             'building, however, is on fire. Ram must choose the optimal path '
             'to reach the top of the building to lose the minimum amount of '
             'health. The building consists of n floors, each with m rooms '
             'each. Let ( i, j) represent the j- th room on the i- th floor. '
             'Additionally, there are k ladders installed. The i- th ladder '
             'allows Ram to travel from ( ai, bi) to ( ci, di) , but not in '
             'the other direction. Ram also gains hi health points if he uses '
             'the ladder i. It is guaranteed ai< ci for all ladders. If Ram is '
             'on the i- th floor, he can move either left or right. Travelling '
             'across floors, however, is treacherous. If Ram travels from ( i, '
             'j) to ( i, k) , he loses | j−k| ⋅xi health points. Ram enters '
             'the building at ( 1, 1) while his helicopter is waiting at ( n, '
             'm) . What is the minimum amount of health Ram loses if he takes '
             'the most optimal path? Note this answer may be negative ( in '
             'which case he gains health) . Output " NO ESCAPE" if no matter '
             'what path Ram takes, he cannot escape the clutches of Raghav.',
  'input': 'The first line of input contains t ( 1≤t≤5⋅104) — the number of '
           'test cases. The first line of each test case consists of 3 '
           'integers n, m, k ( 2≤n, m≤105; 1≤k≤105) — the number of floors, '
           'the number of rooms on each floor and the number of ladders '
           'respectively. The second line of a test case consists of n '
           'integers x1, x2, . . . , xn ( 1≤xi≤106) . The next k lines '
           'describe the ladders. Ladder i is denoted by ai, bi, ci, di, hi ( '
           '1≤ai< ci≤n; 1≤bi, di≤m; 1≤hi≤106) — the rooms it connects and the '
           'health points gained from using it. It is guaranteed ai< ci for '
           'all ladders and there is at most one ladder between any 2 rooms in '
           'the building. The sum of n, the sum of m, and the sum of k over '
           'all test cases do not exceed 105.',
  'note': 'The figure for the first test case is in the statement. There are '
          'only 2 possible paths to ( n, m) : Ram travels to ( 1, 3) , takes '
          'the ladder to ( 3, 3) , travels to ( 3, 2) , takes the ladder to ( '
          '5, 1) , travels to ( 5, 3) where he finally escapes via helicopter. '
          'The health lost would be = x1⋅| 1−3| −h1+ x3⋅| 3−2| −h3+ x5⋅| 1−3| '
          '= 5⋅2−4+ 8⋅1−6+ 4⋅2= 16. Ram travels to ( 1, 3) , takes the ladder '
          'to ( 3, 3) , travels to ( 3, 1) , takes the ladder to ( 5, 2) , '
          'travels to ( 5, 3) where he finally escapes via helicopter. The '
          'health lost would be = x1⋅| 1−3| −h1+ x3⋅| 3−1| −h2+ a5⋅| 2−3| = '
          '5⋅2−4+ 8⋅2−5+ 4⋅1= 21. Therefore, the minimum health lost would be '
          '16. In the second test case, there is no path to ( n, m) . In the '
          'third case case, Ram travels to ( 1, 3) and takes the only ladder '
          'to ( 5, 3) . He loses 5⋅2 health points and gains h1= 100 health '
          'points. Therefore the total loss is 10−100= −90 ( negative implies '
          'he gains health after the path) .',
  'output': 'Output the minimum health Ram loses on the optimal path from ( 1, '
            '1) to ( n, m) . If Ram cannot escape the clutches of Raghav '
            'regardless of the path he takes, output " NO ESCAPE" ( all '
            'uppercase, without quotes) .',
  'title': 'Not Escaping',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1627/E'},
 {'history': 'There is a k×k grid, where k is even. The square in row r and '
             'column c is denoted by ( r, c) . Two squares ( r1, c1) and ( r2, '
             'c2) are considered adjacent if | r1−r2| + | c1−c2| = 1. An array '
             'of adjacent pairs of squares is called strong if it is possible '
             'to cut the grid along grid lines into two connected, congruent '
             'pieces so that each pair is part of the same piece. Two pieces '
             'are congruent if one can be matched with the other by '
             'translation, rotation, and reflection, or a combination of '
             'these. The picture above represents the first test case. Arrows '
             'indicate pairs of squares, and the thick black line represents '
             'the cut. You are given an array a of n pairs of adjacent '
             'squares. Find the size of the largest strong subsequence of a. '
             'An array p is a subsequence of an array q if p can be obtained '
             'from q by deletion of several ( possibly, zero or all) elements.',
  'input': 'The input consists of multiple test cases. The first line contains '
           'an integer t ( 1≤t≤100) — the number of test cases. The '
           'description of the test cases follows. The first line of each test '
           'case contains two space- separated integers n and k ( 1≤n≤105; '
           '2≤k≤500, k is even) — the length of a and the size of the grid, '
           'respectively. Then n lines follow. The i- th of these lines '
           'contains four space- separated integers ri, 1, ci, 1, ri, 2, and '
           'ci, 2 ( 1≤ri, 1, ci, 1, ri, 2, ci, 2≤k) — the i- th element of a, '
           'represented by the row and column of the first square ( ri, 1, ci, '
           '1) and the row and column of the second square ( ri, 2, ci, 2) . '
           'These squares are adjacent. It is guaranteed that the sum of n '
           'over all test cases does not exceed 105, and the sum of k over all '
           'test cases does not exceed 500.',
  'note': 'In the first test case, the array a is not good, but if we take the '
          'subsequence [ a1, a2, a3, a4, a5, a6, a8] , then the square can be '
          'split as shown in the statement. In the second test case, we can '
          'take the subsequence consisting of the last four elements of a and '
          'cut the square with a horizontal line through its center.',
  'output': 'For each test case, output a single integer — the size of the '
            'largest strong subsequence of a.',
  'title': 'Not Splitting',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1627/F'},
 {'history': 'Mihai has just learned about the MEX concept and since he liked '
             'it so much, he decided to use it right away. Given an array a of '
             'n non- negative integers, Mihai wants to create a new array b '
             'that is formed in the following way: While a is not empty: '
             'Choose an integer k ( 1 ≤ k ≤ | a| ) . Append the MEX of the '
             'first k numbers of the array a to the end of array b and erase '
             'them from the array a , shifting the positions of the remaining '
             'numbers in a . But, since Mihai loves big arrays as much as the '
             'MEX concept, he wants the new array b to be the '
             'lexicographically maximum. So, Mihai asks you to tell him what '
             'the maximum array b that can be created by constructing the '
             'array optimally is. An array x is lexicographically greater than '
             'an array y if in the first position where x and y differ x_ i > '
             'y_ i or if | x| > | y| and y is a prefix of x ( where | x| '
             'denotes the size of the array x ) . The MEX of a set of non- '
             'negative integers is the minimal non- negative integer such that '
             'it is not in the set. For example, MEX( 1, 2, 3 ) = 0 and MEX( '
             '0, 1, 2, 4, 5 ) = 3 .',
  'input': 'The first line of the input contains a single integer t ( 1 ≤ t ≤ '
           '100 ) — the number of test cases. The description of test cases '
           'follows. The first line of each test case contains a single '
           'integer n ( 1 ≤ n ≤ 2 · 10^ 5 ) — the number of elements in the '
           'array a . The second line of each test case contains n non- '
           'negative integers a_ 1, . . . , a_ n ( 0 ≤ a_ i ≤ n ) , where a_ i '
           'is the i - th integer from the array a . It is guaranteed that the '
           'sum of n over all test cases does not exceed 2 · 10^ 5 .',
  'note': 'In the first test case, the lexicographically maximum array b is '
          'obtained by selecting k= 5 , resulting in the MEX of the whole '
          'array a . It is lexicographically maximum because an array starting '
          'with a smaller number than 4 is lexicographically smaller, and '
          'choosing a k< 5 would result in an array starting with a number '
          'smaller than 4 . In the second test case, there are two ways to '
          'obtain the maximum array: first selecting k= 6 , then k= 2 , or '
          'first selecting k= 7 and then k= 1 .',
  'output': 'For each test case print m — the length of the maximum array b '
            'Mihai can create, followed by m integers denoting the elements of '
            'the array b .',
  'title': 'Meximum Array',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1628/A'},
 {'history': 'Mihai plans to watch a movie. He only likes palindromic movies, '
             'so he wants to skip some ( possibly zero) scenes to make the '
             'remaining parts of the movie palindromic. You are given a list s '
             'of n non- empty strings of length at most 3, representing the '
             "scenes of Mihai' s movie. A subsequence of s is called awesome "
             'if it is non- empty and the concatenation of the strings in the '
             'subsequence, in order, is a palindrome. Can you help Mihai check '
             'if there is at least one awesome subsequence of s? A palindrome '
             'is a string that reads the same backward as forward, for example '
             'strings " z" , " aaa" , " aba" , " abccba" are palindromes, but '
             'strings " codeforces" , " reality" , " ab" are not. A sequence a '
             'is a non- empty subsequence of a non- empty sequence b if a can '
             'be obtained from b by deletion of several ( possibly zero, but '
             'not all) elements.',
  'input': 'The first line of the input contains a single integer t ( 1≤t≤100) '
           '— the number of test cases. The description of test cases follows. '
           'The first line of each test case contains a single integer n ( '
           '1≤n≤105) — the number of scenes in the movie. Then follows n '
           'lines, the i- th of which containing a single non- empty string si '
           'of length at most 3, consisting of lowercase Latin letters. It is '
           'guaranteed that the sum of n over all test cases does not exceed '
           '105.',
  'note': 'In the first test case, an awesome subsequence of s is [ ab, cc, '
          'ba]',
  'output': 'For each test case, print " YES" if there is an awesome '
            'subsequence of s, or " NO" otherwise ( case insensitive) .',
  'title': 'Peculiar Movie Preferences',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1628/B'},
 {'history': 'Note: The XOR- sum of set { s_ 1, s_ 2, . . . , s_ m} is defined '
             'as s_ 1 ⊕ s_ 2 ⊕. . . ⊕ s_ m , where ⊕ denotes the bitwise XOR '
             'operation. After almost winning IOI, Victor bought himself an n× '
             'n grid containing integers in each cell. n is an even integer. '
             'The integer in the cell in the i - th row and j - th column is '
             'a_ i, j . Sadly, Mihai stole the grid from Victor and told him '
             'he would return it with only one condition: Victor has to tell '
             'Mihai the XOR- sum of all the integers in the whole grid. Victor '
             "doesn' t remember all the elements of the grid, but he remembers "
             'some information about it: For each cell, Victor remembers the '
             'XOR- sum of all its neighboring cells. Two cells are considered '
             'neighbors if they share an edge — in other words, for some '
             'integers 1 ≤ i, j, k, l ≤ n , the cell in the i - th row and j - '
             'th column is a neighbor of the cell in the k - th row and l - th '
             'column if | i - k| = 1 and j = l , or if i = k and | j - l| = 1 '
             '. To get his grid back, Victor is asking you for your help. Can '
             'you use the information Victor remembers to find the XOR- sum of '
             'the whole grid? It can be proven that the answer is unique.',
  'input': 'The first line of the input contains a single integer t ( 1 ≤ t ≤ '
           '100 ) — the number of test cases. The description of test cases '
           'follows. The first line of each test case contains a single even '
           'integer n ( 2 ≤ n ≤ 1000 ) — the size of the grid. Then follows n '
           'lines, each containing n integers. The j - th integer in the i - '
           'th of these lines represents the XOR- sum of the integers in all '
           'the neighbors of the cell in the i - th row and j - th column. It '
           "is guaranteed that the sum of n over all test cases doesn' t "
           'exceed 1000 and in the original grid 0 ≤ a_ i, j≤ 2^ 30 - 1 . Hack '
           'FormatTo hack a solution, use the following format: The first line '
           'should contain a single integer t ( 1 ≤ t ≤ 100 ) — the number of '
           'test cases. The first line of each test case should contain a '
           'single even integer n ( 2 ≤ n ≤ 1000 ) — the size of the grid. '
           'Then n lines should follow, each containing n integers. The j - th '
           "integer in the i - th of these lines is a_ i, j in Victor' s "
           'original grid. The values in the grid should be integers in the '
           'range [ 0, 2^ 30- 1] The sum of n over all test cases must not '
           'exceed 1000 .',
  'note': "For the first test case, one possibility for Victor' s original "
          'grid is: 1 3 2 4 For the second test case, one possibility for '
          "Victor' s original grid is: 3 8 8 5 9 5 5 1 5 5 9 9 8 4 2 9 For the "
          "third test case, one possibility for Victor' s original grid is: 4 "
          '3 2 1 1 2 3 4 5 6 7 8 8 9 9 1',
  'output': 'For each test case, output a single integer — the XOR- sum of the '
            'whole grid.',
  'title': 'Grid Xor',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1628/C'},
 {'history': 'NASA ( Norwegian Astronaut Stuff Association) is developing a '
             'new steering system for spaceships. But in its current state, it '
             "wouldn' t be very safe if the spaceship would end up in a bunch "
             'of space junk. To make the steering system safe, they need to '
             'answer the following: Given the target position t= ( 0, 0) t= ( '
             '0, 0) , a set of nn pieces of space junk ll described by line '
             'segments li= ( ( aix, aiy) , ( bix, biy) ) li= ( ( aix, aiy) , ( '
             'bix, biy) ) , and a starting position s= ( sx, sy) s= ( sx, sy) '
             ', is there a direction such that floating in that direction from '
             'the starting position would lead to the target position? When '
             'the spaceship hits a piece of space junk, what happens depends '
             'on the absolute difference in angle between the floating '
             'direction and the line segment, θθ: If θ< 45∘θ< 45∘, the '
             'spaceship slides along the piece of space junk in the direction '
             'that minimizes the change in angle, and when the spaceship '
             'slides off the end of the space junk, it continues floating in '
             'the direction it came in ( before hitting the space junk) . If '
             'θ≥45∘θ≥45∘, the spaceship stops, because there is too much '
             'friction to slide along the space junk. You are only given the '
             'set of pieces of space junk once, and the target position is '
             'always ( 0, 0) ( 0, 0) , but there are qq queries, each with a '
             'starting position sj= ( sjx, sjy) sj= ( sjx, sjy) . Answer the '
             'above question for each query.',
  'input': 'The first line contains the the integer nn ( 1≤n≤15001≤n≤1500) . '
           'Then follows nn lines, the ii- th of which containing the 44 '
           'integers aixaix, aiyaiy, bixbix, and biybiy ( | aix| , | aiy| , | '
           'bix| , | biy| ≤1000| aix| , | aiy| , | bix| , | biy| ≤1000) . Then '
           'follows a line containing the integer qq ( 1≤q≤10001≤q≤1000) . '
           'Then follows qq lines, the jj- th of which containing the 22 '
           'integers sjxsjx and sjysjy ( | sjx| , | sjy| ≤1000| sjx| , | sjy| '
           '≤1000) . It is guaranteed that none of the segments in ll cross or '
           'touch, that tt is not on any segment in ll, that sjsj is not on '
           'any segment in ll, and that s= ̸ts= ̸t.',
  'note': 'The blue cross represents the target location, and the other blue '
          'line segments represent the space junk. Green dots represent '
          'starting locations where the answer is yes, and red dots represent '
          'starting locations where the answer is no. The yellow lines are '
          'possible paths to the target location for the 33rd and 1414th '
          'queries. The black line is a possible path from the starting '
          'location in the 66th query, but it barely misses the target '
          'location.',
  'output': 'For each query sjsj print an answer. If there exists a direction '
            'such that floating from sjsj in that direction, possibly sliding '
            'along some pieces of space junk, leads to tt, print " YES" . '
            'Otherwise, print " NO" ( case insensitive) .',
  'title': 'Spaceship Crisis Management',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1628/F'},
 {'history': 'Did you know you can download more RAM? There is a shop with n '
             'different pieces of software that increase your RAM. The i- th '
             'RAM increasing software takes ai GB of memory to run ( '
             'temporarily, once the program is done running, you get the RAM '
             'back) , and gives you an additional bi GB of RAM ( permanently) '
             '. Each software can only be used once. Your PC currently has k '
             "GB of RAM. Note that you can' t use a RAM- increasing software "
             'if it takes more GB of RAM to use than what you currently have. '
             'Since RAM is the most important thing in the world, you wonder, '
             'what is the maximum possible amount of RAM achievable?',
  'input': 'The first line of the input contains a single integer t ( 1≤t≤100) '
           '— the number of test cases. The description of test cases follows. '
           'The first line of each test case contains the integers n and k ( '
           '1≤n≤100, 1≤k≤1000) . Then two lines follow, each containing n '
           'integers describing the arrays a and b ( 1≤ai, bi≤1000) .',
  'note': 'In the first test case, you only have enough RAM to run the third '
          'software initially, but that increases your RAM to 20 GB, which '
          'allows you to use the first software, increasing your RAM to 29 GB. '
          'The only software left needs 30 GB of RAM, so you have to stop '
          'here. In the second test case, you can use the first, second, '
          'fourth and fifth software that need only 1 GB of RAM per software '
          'to run to increase your RAM to 5 GB, and then use the last '
          'remaining one to increase your RAM to 6 GB. In the third test case, '
          'all the software need more than 1 GB of RAM to run, so the amount '
          'of RAM you have stays at 1 GB.',
  'output': 'For each test case, output a single line containing the largest '
            'amount of RAM you can achieve.',
  'title': 'Download More RAM',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1629/A'},
 {'history': 'You are given nn elements numbered from 11 to nn, the element ii '
             'has value aiai and color cici, initially, ci= 0ci= 0 for all ii. '
             'The following operation can be applied: Select three elements '
             'ii, jj and kk ( 1≤i< j< k≤n1≤i< j< k≤n) , such that cici, cjcj '
             'and ckck are all equal to 00 and ai= akai= ak, then set cj= 1cj= '
             '1. Find the maximum value of n∑i= 1ci∑i= 1nci that can be '
             'obtained after applying the given operation any number of times.',
  'input': 'The first line contains an integer nn ( 3≤n≤2⋅1053≤n≤2⋅105) — the '
           'number of elements. The second line consists of nn integers a1, '
           'a2, . . . , ana1, a2, . . . , an ( 1≤ai≤n1≤ai≤n) , where aiai is '
           'the value of the ii- th element.',
  'note': 'In the first test, it is possible to apply the following operations '
          'in order:',
  'output': 'Print a single integer in a line — the maximum value of n∑i= '
            '1ci∑i= 1nci that can be obtained after applying the given '
            'operation any number of times.',
  'title': 'Paint the Middle',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1630/C'},
 {'history': 'Recently, the students of School 179 have developed a unique '
             'algorithm, which takes in a binary string s as input. However, '
             'they soon found out that if some substring t of s is a '
             'palindrome of length greater than 1, the algorithm will work '
             'incorrectly. Can the students somehow reorder the characters of '
             's so that the algorithm will work correctly on the string? A '
             'binary string is a string where each character is either 0 or 1. '
             'A string a is a substring of a string b if a can be obtained '
             'from b by deletion of several ( possibly, zero or all) '
             'characters from the beginning and several ( possibly, zero or '
             'all) characters from the end. A palindrome is a string that '
             'reads the same backwards as forwards.',
  'input': 'Each test contains multiple test cases. The first line contains '
           'the number of test cases t ( 1 ≤ t ≤ 100 ) . Description of the '
           'test cases follows. The first line of each test case contains a '
           'single integer n ( 1 ≤ n ≤ 100 ) — the length of the string s . '
           'The second line of each test case contains the string s of length '
           'n consisting only of the characters 0 and 1.',
  'note': 'In the first three test cases, the given strings do not contain '
          'palindromes of length greater than 1, so the answers are YES. In '
          'the last test case, it is impossible to reorder the characters so '
          'that the string does not contain palindromes of length greater than '
          '1, so the answer is NO.',
  'output': 'For each test case, print YES ( case- insensitive) if it is '
            'possible to reorder the characters of s so that there are no '
            'substrings that are a palindrome of length greater than 1, or NO '
            '( case- insensitive) otherwise.',
  'title': 'ABC',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1632/A'},
 {'history': 'You are given a connected weighted undirected graph, consisting '
             'of nn vertices and mm edges. You are asked kk queries about it. '
             'Each query consists of a single integer xx. For each query, you '
             'select a spanning tree in the graph. Let the weights of its '
             'edges be w1, w2, . . . , wn−1w1, w2, . . . , wn−1. The cost of a '
             'spanning tree is ∑i= 1n−1| wi−x| ∑i= 1n−1| wi−x| ( the sum of '
             'absolute differences between the weights and xx) . The answer to '
             'a query is the lowest cost of a spanning tree. The queries are '
             'given in a compressed format. The first pp ( 1≤p≤k) ( 1≤p≤k) '
             'queries q1, q2, . . . , qpq1, q2, . . . , qp are provided '
             'explicitly. For queries from p+ 1p+ 1 to kk, qj= ( qj−1⋅a+ b) '
             'modcqj= ( qj−1⋅a+ b) modc. Print the xor of answers to all '
             'queries.',
  'input': 'The first line contains two integers nn and mm ( 2≤n≤502≤n≤50; '
           'n−1≤m≤300n−1≤m≤300) — the number of vertices and the number of '
           'edges in the graph. Each of the next mm lines contains a '
           'description of an undirected edge: three integers vv, uu and ww ( '
           '1≤v, u≤n1≤v, u≤n; v= ̸uv= ̸u; 0≤w≤1080≤w≤108) — the vertices the '
           'edge connects and its weight. Note that there might be multiple '
           'edges between a pair of vertices. The edges form a connected '
           'graph. The next line contains five integers p, k, a, bp, k, a, b '
           'and cc ( 1≤p≤1051≤p≤105; p≤k≤107p≤k≤107; 0≤a, b≤1080≤a, b≤108; '
           '1≤c≤1081≤c≤108) — the number of queries provided explicitly, the '
           'total number of queries and parameters to generate the queries. '
           'The next line contains pp integers q1, q2, . . . , qpq1, q2, . . . '
           ', qp ( 0≤qj< c0≤qj< c) — the first pp queries.',
  'note': 'The queries in the first example are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, '
          '00, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0. The answers are 11, 9, 7, 3, 1, '
          '5, 8, 7, 5, 7, 1111, 9, 7, 3, 1, 5, 8, 7, 5, 7, 11. The queries in '
          'the second example are 3, 0, 2, 1, 6, 0, 3, 5, 4, 13, 0, 2, 1, 6, '
          '0, 3, 5, 4, 1. The answers are 14, 19, 15, 16, 11, 19, 14, 12, 13, '
          '1614, 19, 15, 16, 11, 19, 14, 12, 13, 16. The queries in the third '
          'example are 75, 0, 0, . . . 75, 0, 0, . . . . The answers are 50, '
          '150, 150, . . . 50, 150, 150, . . . .',
  'output': 'Print a single integer — the xor of answers to all queries.',
  'title': 'Spanning Tree Queries',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1633/E'},
 {'history': 'Real stupidity beats artificial intelligence every time. — Terry '
             'Pratchett, Hogfather, DiscworldYou are given a string s of '
             "length n and a number k. Let' s denote by rev( s) the reversed "
             'string s ( i. e. rev( s) = snsn−1. . . s1) . You can apply one '
             'of the two kinds of operations to the string: replace the string '
             's with s+ rev( s) replace the string s with rev( s) + sHow many '
             'different strings can you get as a result of performing exactly '
             'k operations ( possibly of different kinds) on the original '
             'string s? In this statement we denoted the concatenation of '
             'strings s and t as s+ t. In other words, s+ t= s1s2. . . snt1t2. '
             '. . tm, where n and m are the lengths of strings s and t '
             'respectively.',
  'input': 'The first line contains one integer t ( 1≤t≤100) — number of test '
           'cases. Next 2⋅t lines contain t test cases: The first line of a '
           'test case contains two integers n and k ( 1≤n≤100, 0≤k≤1000) — the '
           'length of the string and the number of operations respectively. '
           'The second string of a test case contains one string s of length n '
           'consisting of lowercase Latin letters.',
  'note': 'In the first test case of the example: After the first operation '
          'the string s can become either aabbaa or baaaab. After the second '
          'operation there are 2 possibilities for s: aabbaaaabbaa and '
          'baaaabbaaaab.',
  'output': 'For each test case, print the answer ( that is, the number of '
            'different strings that you can get after exactly k operations) on '
            'a separate line. It can be shown that the answer does not exceed '
            '109 under the given constraints.',
  'title': 'Reverse and Concatenate',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1634/A'},
 {'history': 'One of my most productive days was throwing away 1, 000 lines of '
             'code. — Ken ThompsonFibonacci addition is an operation on an '
             'array X of integers, parametrized by indices l and r . Fibonacci '
             'addition increases X_ l by F_ 1 , increases X_ l + 1 by F_ 2 , '
             'and so on up to X_ r which is increased by F_ r - l + 1 . F_ i '
             'denotes the i - th Fibonacci number ( F_ 1 = 1 , F_ 2 = 1 , F_ i '
             '= F_ i - 1 + F_ i - 2 for i > 2 ) , and all operations are '
             'performed modulo MOD . You are given two arrays A and B of the '
             'same length. We will ask you to perform several Fibonacci '
             'additions on these arrays with different parameters, and after '
             'each operation you have to report whether arrays A and B are '
             'equal modulo MOD .',
  'input': 'The first line contains 3 numbers n , q and MOD ( 1 ≤ n, q ≤ 3· '
           '10^ 5, 1 ≤ MOD ≤ 10^ 9+ 7 ) — the length of the arrays, the number '
           'of operations, and the number modulo which all operations are '
           'performed. The second line contains n numbers — array A ( 0 ≤ A_ i '
           '< MOD ) . The third line also contains n numbers — array B ( 0 ≤ '
           'B_ i < MOD ) . The next q lines contain character c and two '
           'numbers l and r ( 1 ≤ l ≤ r ≤ n ) — operation parameters. If c is '
           '" A" , Fibonacci addition is to be performed on array A , and if '
           'it is is " B" , the operation is to be performed on B .',
  'note': 'Explanation of the test from the condition: Initially A= [ 2, 2, 1] '
          ', B= [ 0, 0, 0] . After operation " A 1 3" : A= [ 0, 0, 0] , B= [ '
          '0, 0, 0] ( addition is modulo 3) . After operation " A 1 3" : A= [ '
          '1, 1, 2] , B= [ 0, 0, 0] . After operation " B 1 1" : A= [ 1, 1, 2] '
          ', B= [ 1, 0, 0] . After operation " B 2 2" : A= [ 1, 1, 2] , B= [ '
          '1, 1, 0] . After operation " A 3 3" : A= [ 1, 1, 0] , B= [ 1, 1, 0] '
          '.',
  'output': 'After each operation, print " YES" ( without quotes) if the '
            'arrays are equal and " NO" otherwise. Letter case does not '
            'matter.',
  'title': 'Fibonacci Additions',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1634/F'},
 {'history': 'You are given an array a consisting of n distinct positive '
             "integers. Let' s consider an infinite integer set S which "
             'contains all integers x that satisfy at least one of the '
             'following conditions: x= ai for some 1≤i≤n. x= 2y+ 1 and y is in '
             'S. x= 4y and y is in S. For example, if a= [ 1, 2] then the 10 '
             'smallest elements in S will be 1, 2, 3, 4, 5, 7, 8, 9, 11, 12. '
             'Find the number of elements in S that are strictly smaller than '
             '2p. Since this number may be too large, print it modulo 109+ 7.',
  'input': 'The first line contains two integers n and p ( 1≤n, p≤2⋅105) . The '
           'second line contains n integers a1, a2, . . . , an ( 1≤ai≤109) . '
           'It is guaranteed that all the numbers in a are distinct.',
  'note': 'In the first example, the elements smaller than 24 are 1, 3, 4, 6, '
          '7, 9, 12, 13, 15. In the second example, the elements smaller than '
          '27 are 5, 11, 20, 23, 39, 41, 44, 47, 79, 80, 83, 89, 92, 95.',
  'output': 'Print a single integer, the number of elements in S that are '
            'strictly smaller than 2p. Remember to print it modulo 109+ 7.',
  'title': 'Infinite Set',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1635/D'},
 {'history': 'There are n cars on a coordinate axis OX. Each car is located at '
             'an integer point initially and no two cars are located at the '
             'same point. Also, each car is oriented either left or right, and '
             'they can move at any constant positive speed in that direction '
             'at any moment. More formally, we can describe the i- th car with '
             'a letter and an integer: its orientation orii and its location '
             'xi. If orii= L, then xi is decreasing at a constant rate with '
             'respect to time. Similarly, if orii= R, then xi is increasing at '
             'a constant rate with respect to time. We call two cars '
             'irrelevant if they never end up in the same point regardless of '
             "their speed. In other words, they won' t share the same "
             'coordinate at any moment. We call two cars destined if they '
             'always end up in the same point regardless of their speed. In '
             'other words, they must share the same coordinate at some moment. '
             'Unfortunately, we lost all information about our cars, but we do '
             'remember m relationships. There are two types of relationships: '
             '1 i j —i- th car and j- th car are irrelevant. 2 i j —i- th car '
             'and j- th car are destined. Restore the orientations and the '
             'locations of the cars satisfying the relationships, or report '
             'that it is impossible. If there are multiple solutions, you can '
             'output any. Note that if two cars share the same coordinate, '
             'they will intersect, but at the same moment they will continue '
             'their movement in their directions.',
  'input': 'The first line contains two integers, n and m ( 2≤n≤2⋅105; '
           '1≤m≤min( 2⋅105, n( n−1) 2) — the number of cars and the number of '
           'restrictions respectively. Each of the next m lines contains three '
           'integers, type, i, and j ( 1≤type≤2; 1≤i, j≤n; i= ̸j) . If type = '
           '1, i- th car and j- th car are irrelevant. Otherwise, i- th car '
           'and j- th car are destined. It is guaranteed that for each pair of '
           'cars, there are at most 1 relationship between.',
  'note': ' ',
  'output': 'In the first line, print either " YES" or " NO" ( in any case) , '
            'whether it is possible to restore the orientations and the '
            'locations of the cars satisfying the relationships. If the answer '
            'is " YES" , print n lines each containing a symbol and an '
            'integer: orii and xi ( orii∈L, R; −109≤xi≤109) — representing the '
            'information of the i- th car. If the orientation is left, then '
            'orii = L. Otherwise orii = R. xi is the where the i- th car is '
            'located. Note that all xi should be distinct. We can prove that '
            'if there exists a solution, then there must be a solution '
            'satisfying the constraints on xi.',
  'title': 'Cars ',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1635/E'},
 {'history': 'You have an array a of length n. You can exactly once select an '
             'integer len between 1 and n−1 inclusively, and then sort in non- '
             'decreasing order the prefix of the array of length len and the '
             'suffix of the array of length n−len independently. For example, '
             'if the array is a= [ 3, 1, 4, 5, 2] , and you choose len= 2, '
             'then after that the array will be equal to [ 1, 3, 2, 4, 5] . '
             'Could it be that after performing this operation, the array will '
             'not be sorted in non- decreasing order?',
  'input': 'There are several test cases in the input data. The first line '
           'contains a single integer t ( 1≤t≤100) — the number of test cases. '
           'This is followed by the test cases description. The first line of '
           'each test case contains one integer n ( 2≤n≤104) — the length of '
           'the array. The second line of the test case contains a sequence of '
           'integers a1, a2, . . . , an ( 1≤ai≤109) — the array elements. It '
           'is guaranteed that the sum of n over all test cases does not '
           'exceed 104.',
  'note': "In the first test case, it' s possible to select len= 1, then after "
          'operation, the array will not be sorted in non- decreasing order '
          "and will be equal to [ 2, 1, 2] . In the second test case, it' s "
          'possible to select len= 3, then after operation, the array will not '
          'be sorted in non- decreasing order and will be equal to [ 1, 2, 3, '
          '1] . In the third test case, the array will be sorted in non- '
          'decreasing order for every possible len.',
  'output': 'For each test case of input data, output " YES" ( without quotes) '
            ', if the array may be not sorted in non- decreasing order, output '
            '" NO" ( without quotes) otherwise. You can output each letter in '
            'any case ( uppercase or lowercase) .',
  'title': 'Sorting Parts',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1637/A'},
 {'history': 'Andrew has n piles with stones. The i - th pile contains a_ i '
             'stones. He wants to make his table clean so he decided to put '
             'every stone either to the 1 - st or the n - th pile. Andrew can '
             'perform the following operation any number of times: choose 3 '
             'indices 1 ≤ i < j < k ≤ n , such that the j - th pile contains '
             'at least 2 stones, then he takes 2 stones from the pile j and '
             'puts one stone into pile i and one stone into pile k . Tell '
             'Andrew what is the minimum number of operations needed to move '
             "all the stones to piles 1 and n , or determine if it' s "
             'impossible.',
  'input': 'The input contains several test cases. The first line contains one '
           'integer t ( 1 ≤ t ≤ 10 000 ) — the number of test cases. The first '
           'line for each test case contains one integer n ( 3 ≤ n ≤ 10^ 5 ) — '
           'the length of the array. The second line contains a sequence of '
           'integers a_ 1, a_ 2, . . . , a_ n ( 1 ≤ a_ i ≤ 10^ 9 ) — the array '
           'elements. It is guaranteed that the sum of the values n over all '
           'test cases does not exceed 10^ 5 .',
  'note': 'In the first test case, it is optimal to do the following: Select ( '
          'i, j, k) = ( 1, 2, 5) . The array becomes equal to [ 2, 0, 2, 3, 7] '
          '. Select ( i, j, k) = ( 1, 3, 4) . The array becomes equal to [ 3, '
          '0, 0, 4, 7] . Twice select ( i, j, k) = ( 1, 4, 5) . The array '
          'becomes equal to [ 5, 0, 0, 0, 9] . This array satisfy the '
          'statement, because every stone is moved to piles 1 and 5 . There '
          "are 4 operations in total. In the second test case, it' s "
          'impossible to put all stones into piles with numbers 1 and 3 : At '
          "the beginning there' s only one possible operation with ( i, j, k) "
          '= ( 1, 2, 3) . The array becomes equal to [ 2, 1, 2] . Now there is '
          "no possible operation and the array doesn' t satisfy the statement, "
          "so the answer is - 1 . In the third test case, it' s optimal to do "
          'the following: Select ( i, j, k) = ( 1, 2, 3) . The array becomes '
          'equal to [ 2, 0, 2] . This array satisfies the statement, because '
          'every stone is moved to piles 1 and 3 . The is 1 operation in '
          "total. In the fourth test case, it' s impossible to do any "
          "operation, and the array doesn' t satisfy the statement, so the "
          'answer is - 1 .',
  'output': 'For each test case print the minimum number of operations needed '
            "to move stones to piles 1 and n , or print - 1 if it' s "
            'impossible.',
  'title': 'Andrew and Stones',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1637/C'},
 {'history': 'You are given an array a of length n . Let cnt_ x be the number '
             "of elements from the array which are equal to x . Let' s also "
             'define f( x, y) as ( cnt_ x + cnt_ y) · ( x + y) . Also you are '
             'given m bad pairs ( x_ i, y_ i) . Note that if ( x, y) is a bad '
             'pair, then ( y, x) is also bad. Your task is to find the maximum '
             'value of f( u, v) over all pairs ( u, v) , such that u = ̸ v , '
             'that this pair is not bad, and also that u and v each occur in '
             'the array a . It is guaranteed that such a pair exists.',
  'input': 'The first line contains a single integer t ( 1 ≤ t ≤ 10 000 ) — '
           'the number of test cases. The first line of each test case '
           'contains two integers n and m ( 2 ≤ n ≤ 3 · 10^ 5 , 0 ≤ m ≤ 3 · '
           '10^ 5 ) — the length of the array and the number of bad pairs. The '
           'second line of each test case contains n integers a_ 1, a_ 2, . . '
           '. , a_ n ( 1 ≤ a_ i ≤ 10^ 9 ) — elements of the array. The i - th '
           'of the next m lines contains two integers x_ i and y_ i ( 1 ≤ x_ i '
           '< y_ i ≤ 10^ 9 ) , which represent a bad pair. It is guaranteed '
           'that no bad pair occurs twice in the input. It is also guaranteed '
           'that cnt_ x_ i > 0 and cnt_ y_ i > 0 . It is guaranteed that for '
           'each test case there is a pair of integers ( u, v) , u v , that is '
           'not bad, and such that both of these numbers occur in a . It is '
           "guaranteed that the total sum of n and the total sum of m don' t "
           'exceed 3 · 10^ 5 .',
  'note': 'In the first test case 3 , 6 , 7 occur in the array. f( 3, 6) = ( '
          'cnt_ 3 + cnt_ 6) · ( 3 + 6) = ( 3 + 2) · ( 3 + 6) = 45 . But ( 3, '
          '6) is bad so we ignore it. f( 3, 7) = ( cnt_ 3 + cnt_ 7) · ( 3 + 7) '
          '= ( 3 + 1) · ( 3 + 7) = 40 . f( 6, 7) = ( cnt_ 6 + cnt_ 7) · ( 6 + '
          '7) = ( 2 + 1) · ( 6 + 7) = 39 . The answer to the problem is max( '
          '40, 39) = 40 .',
  'output': 'For each test case print a single integer — the answer to the '
            'problem.',
  'title': 'Best Pair',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1637/E'},
 {'history': 'You are given a permutation p of length n. You can choose any '
             'subsequence, remove it from the permutation, and insert it at '
             'the beginning of the permutation keeping the same order. For '
             'every k from 0 to n, find the minimal possible number of '
             'inversions in the permutation after you choose a subsequence of '
             'length exactly k.',
  'input': 'The first line contains a single integer t ( 1≤t≤50000) — the '
           'number of test cases. The first line of each test case contains '
           'one integer n ( 1≤n≤5⋅105) — the length of the permutation. The '
           'second line of each test case contains the permutation p1, p2, . . '
           ". , pn ( 1≤pi≤n) . It is guaranteed that the total sum of n doesn' "
           't exceed 5⋅105.',
  'note': 'In the second test case: For the length 0: [ 4, 2, 1, 3] →[ 4, 2, '
          '1, 3] : 4 inversions. For the length 1: [ 4, 2, 1, 3] →[ 1, 4, 2, '
          '3] : 2 inversions. For the length 2: [ 4, 2, 1, 3] →[ 2, 1, 4, 3] , '
          'or [ 4, 2, 1, 3] →[ 1, 3, 4, 2] : 2 inversions. For the length 3: [ '
          '4, 2, 1, 3] →[ 2, 1, 3, 4] : 1 inversion. For the length 4: [ 4, 2, '
          '1, 3] →[ 4, 2, 1, 3] : 4 inversions.',
  'output': 'For each test case output n+ 1 integers. The i- th of them must '
            'be the answer for the subsequence length of i−1.',
  'title': 'Minimize Inversions Number',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1637/H'},
 {'history': 'You are given an array a1, a2, . . . , an. You can perform '
             'operations on the array. In each operation you can choose an '
             'integer i ( 1≤i< n) , and swap elements ai and ai+ 1 of the '
             'array, if ai+ ai+ 1 is odd. Determine whether it can be sorted '
             'in non- decreasing order using this operation any number of '
             'times.',
  'input': 'Each test contains multiple test cases. The first line contains a '
           'single integer t ( 1≤t≤105) — the number of test cases. '
           'Description of the test cases follows. The first line of each test '
           'case contains a single integer n ( 1≤n≤105) — the length of the '
           'array. The second line of each test case contains n integers a1, '
           'a2, . . . , an ( 1≤ai≤109) — the elements of the array. It is '
           'guaranteed that the sum of n over all test cases does not exceed '
           '2⋅105.',
  'note': 'In the first test case, we can simply swap 31 and 14 ( 31+ 14= 45 '
          'which is odd) and obtain the non- decreasing array [ 1, 6, 14, 31] '
          '. In the second test case, the only way we could sort the array is '
          'by swapping 4 and 2, but this is impossible, since their sum 4+ 2= '
          '6 is even. In the third test case, there is no way to make the '
          'array non- decreasing. In the fourth test case, the array is '
          'already non- decreasing.',
  'output': 'For each test case, print " Yes" or " No" depending on whether '
            'you can or can not sort the given array. You may print each '
            'letter in any case ( for example, " YES" , " Yes" , " yes" , " '
            'yEs" will all be recognized as positive answer) .',
  'title': 'Odd Swap Sort',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1638/B'},
 {'history': 'You found a painting on a canvas of size n×m. The canvas can be '
             'represented as a grid with n rows and m columns. Each cell has '
             'some color. Cell ( i, j) has color ci, j. Near the painting you '
             'also found a brush in the shape of a 2×2 square, so the canvas '
             'was surely painted in the following way: initially, no cell was '
             'painted. Then, the following painting operation has been '
             'performed some number of times: Choose two integers i and j ( '
             '1≤i< n, 1≤j< m) and some color k ( 1≤k≤nm) . Paint cells ( i, j) '
             ', ( i+ 1, j) , ( i, j+ 1) , ( i+ 1, j+ 1) in color k. All cells '
             'must be painted at least once. A cell can be painted multiple '
             'times. In this case, its final color will be the last one. Find '
             'any sequence of at most nm operations that could have led to the '
             "painting you found or state that it' s impossible.",
  'input': 'The first line of input contains two integers n and m ( 2≤n, '
           'm≤1000) — the dimensions of the canvas. On the i- th of the next n '
           'lines of input, there will be m integers. The j- th of them is ai, '
           'j ( 1≤ai, j≤nm) — the color of cell ( i, j) .',
  'note': "In the first test case, the solution is not unique. Here' s one of "
          'them: In the second test case, there is no way one could obtain the '
          'given painting, thus the answer is −1.',
  'output': 'If there is no solution, print a single integer −1. Otherwise, on '
            'the first line, print one integer q ( 1≤q≤nm) — the number of '
            'operations. Next, print the operations in order. On the k- th of '
            'the next q lines, print three integers i, j, c ( 1≤i< n, 1≤j< m, '
            '1≤c≤nm) — the description of the k- th operation. If there are '
            'multiple solutions, print any.',
  'title': 'Big Brush',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1638/D'},
 {'history': 'You have an array a1, a2, . . . , an. Each element initially has '
             'value 0 and color 1. You are also given q queries to perform: '
             'Color l r c: Change the color of elements al, al+ 1, ⋯, ar to c '
             '( 1≤l≤r≤n, 1≤c≤n) . Add c x: Add x to values of all elements ai '
             '( 1≤i≤n) of color c ( 1≤c≤n, −109≤x≤109) . Query i: Print ai ( '
             '1≤i≤n) .',
  'input': 'The first line of input contains two integers n and q ( 1≤n, '
           'q≤106) — the length of array a and the number of queries you have '
           'to perform. Each of the next q lines contains the query given in '
           'the form described in the problem statement.',
  'note': 'The first sample test is explained below. Blue, red and green '
          'represent colors 1, 2 and 3 respectively.',
  'output': 'Print the answers to the queries of the third type on separate '
            'lines.',
  'title': 'Colorful Operations',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1638/E'},
 {'history': 'A sequence of positive integers is called great for a positive '
             'integer x, if we can split it into pairs in such a way that in '
             'each pair the first number multiplied by x is equal to the '
             'second number. More formally, a sequence a of size n is great '
             'for a positive integer x, if n is even and there exists a '
             'permutation p of size n, such that for each i ( 1≤i≤n2) '
             'ap2i−1⋅x= ap2i. Sam has a sequence a and a positive integer x. '
             'Help him to make the sequence great: find the minimum possible '
             'number of positive integers that should be added to the sequence '
             'a to make it great for the number x.',
  'input': 'Each test contains multiple test cases. The first line contains a '
           'single integer t ( 1≤t≤20000) — the number of test cases. '
           'Description of the test cases follows. The first line of each test '
           'case contains two integers n, x ( 1≤n≤2⋅105, 2≤x≤106) . The next '
           'line contains n integers a1, a2, . . . , an ( 1≤ai≤109) . It is '
           'guaranteed that the sum of n over all test cases does not exceed '
           '2⋅105.',
  'note': 'In the first test case, Sam got lucky and the sequence is already '
          'great for the number 4 because you can divide it into such pairs: ( '
          '1, 4) , ( 4, 16) . Thus we can add 0 numbers. In the second test '
          'case, you can add numbers 1 and 14 to the sequence, then you can '
          'divide all 8 integers into such pairs: ( 1, 2) , ( 1, 2) , ( 2, 4) '
          ', ( 7, 14) . It is impossible to add less than 2 integers to fix '
          'the sequence.',
  'output': 'For each test case print a single integer — the minimum number of '
            'integers that can be added to the end of a to make it a great '
            'sequence for the number x.',
  'title': 'Great Sequence',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1641/A'},
 {'history': 'Olya has an array of integers a1, a2, . . . , an. She wants to '
             "split it into tandem repeats. Since it' s rarely possible, "
             'before that she wants to perform the following operation several '
             '( possibly, zero) number of times: insert a pair of equal '
             'numbers into an arbitrary position. Help her! More formally: A '
             'tandem repeat is a sequence x of even length 2k such that for '
             'each 1≤i≤k the condition xi= xi+ k is satisfied. An array a '
             'could be split into tandem repeats if you can split it into '
             'several parts, each being a subsegment of the array, such that '
             'each part is a tandem repeat. In one operation you can choose an '
             'arbitrary letter c and insert [ c, c] to any position in the '
             'array ( at the beginning, between any two integers, or at the '
             'end) . You are to perform several operations and split the array '
             'into tandem repeats or determine that it is impossible. Please '
             'note that you do not have to minimize the number of operations.',
  'input': 'Each test contains multiple test cases. The first line contains a '
           'single integer t ( 1≤t≤30000) — the number of test cases. '
           'Description of the test cases follows. The first line of each test '
           'case contains a single integer n ( 1≤n≤500) . The second line '
           'contains n integers a1, a2, . . . , an ( 1≤ai≤109) — the initial '
           'array. It is guaranteed that the sum of n2 over all test cases '
           'does not exceed 250000.',
  'note': 'In the first test case, you cannot apply operations to the array to '
          'make it possible to split it into tandem repeats. In the second '
          'test case the array is already a tandem repeat [ 5, 5] = ( [ 5] + [ '
          '5] ) ⏟t1= 2, thus we can do no operations at all. In the third test '
          'case, initially, we have the following array: [ 1, 3, 1, 2, 2, 3] . '
          'After the first insertion with p= 1, c= 3: [ 1, 3, 3, 3, 1, 2, 2, '
          '3] . After the second insertion with p= 5, c= 3: [ 1, 3, 3, 3, 1, '
          '3, 3, 2, 2, 3] . After the third insertion with p= 5, c= 3: [ 1, 3, '
          '3, 3, 1, 3, 3, 3, 3, 2, 2, 3] . After the fourth insertion with p= '
          '10, c= 3: [ 1, 3, 3, 3, 1, 3, 3, 3, 3, 2, 3, 3, 2, 3] . The '
          'resulting array can be represented as a concatenation of tandem '
          'repeats: ( [ 1, 3, 3, 3] + [ 1, 3, 3, 3] ) ⏟t1= 8+ ( [ 3, 2, 3] + [ '
          '3, 2, 3] ) ⏟t2= 6. In the fourth test case, initially, we have the '
          'following array: [ 3, 2, 1, 1, 2, 3] . After the first insertion '
          'with p= 0, c= 3: [ 3, 3, 3, 2, 1, 1, 2, 3] . After the second '
          'insertion with p= 8, c= 3: [ 3, 3, 3, 2, 1, 1, 2, 3, 3, 3] . After '
          'the third insertion with p= 5, c= 3 [ 3, 3, 3, 2, 1, 3, 3, 1, 2, 3, '
          '3, 3] . After the fourth insertion with p= 6, c= 2: [ 3, 3, 3, 2, '
          '1, 3, 2, 2, 3, 1, 2, 3, 3, 3] . After the fifth insertion with p= '
          '7, c= 1: [ 3, 3, 3, 2, 1, 3, 2, 1, 1, 2, 3, 1, 2, 3, 3, 3] . The '
          'resulting array can be represented as a concatenation of tandem '
          'repeats: ( [ 3] + [ 3] ) ⏟t1= 2+ ( [ 3, 2, 1] + [ 3, 2, 1] ) ⏟t2= '
          '6+ ( [ 1, 2, 3] + [ 1, 2, 3] ) ⏟t3= 6+ ( [ 3] + [ 3] ) ⏟t4= 2.',
  'output': 'For each test case print answer in the following format. If you '
            'cannot turn the array into a concatenation of tandem repeats, '
            'print a single integer −1. Otherwise print the number of '
            'operations q ( 0≤q≤2⋅n2) that you want to do. Then print the '
            'descriptions of operations. In each of the following q lines '
            'print two integers p and c ( 1≤c≤109) , which mean that you '
            'insert the integer c twice after p elements of the array. If the '
            'length of the array is m before the operation, then the condition '
            '0≤p≤m should be satisfied. Then you should print any way to split '
            'the resulting array into tandem repeats. First, print a single '
            'integer d, and then print a sequence t1, t2, . . . , td of even '
            'integers of size d ( d, ti≥1) . These numbers are the lengths of '
            'the subsegments from left to right. Note that the size of the '
            'resulting array a is m= n+ 2⋅q. The following statements must '
            'hold: m= d∑i= 1ti. For all integer i such that 1≤i≤d, the '
            'sequence al, al+ 1, . . . , ar is a tandem repeat, where l= '
            'i−1∑j= 1tj+ 1, r= l+ ti−1. It can be shown that if the array can '
            'be turned into a concatenation of tandem repeats, then there '
            'exists a solution satisfying all constraints. If there are '
            'multiple answers, you can print any.',
  'title': 'Repetitions Decoding',
  'topics': ['implementation', 'sortings'],
  'url': 'https://codeforces.com/problemset/problem/1641/B'},
 {'history': 'In the work of a doctor, it is important to maintain the '
             'anonymity of clients and the results of tests. The test results '
             'are sent to everyone personally by email, but people are very '
             "impatient and they want to know the results right away. That' s "
             'why in the testing lab " De- vitro" doctors came up with an '
             "experimental way to report the results. Let' s assume that n "
             'people took the tests in the order of the queue. Then the chief '
             'doctor Sam can make several statements, in each telling if there '
             'is a sick person among the people in the queue from l- th to r- '
             'th ( inclusive) , for some values l and r. During the process, '
             'Sam will check how well this scheme works and will be interested '
             'in whether it is possible to find out the test result of i- th '
             'person from the information he announced. And if it can be done, '
             'then is that patient sick or not. Help Sam to test his scheme.',
  'input': 'The first line contains two integers n, q ( 1≤n, q≤2⋅105) — the '
           'number of people and the number of queries. In each of the next q '
           'lines, the description of the query is given. The first number in '
           'the line is t ( t= 0 or t= 1) — the type of the query. If t= 0, '
           'the line contains three more integers l, r, x ( 1≤l≤r≤n, x= 0 or '
           'x= 1) . This query means that Sam tells that among the people in '
           'the queue from l- th to r- th ( inclusive) : there was at least '
           'one sick person, if x= 1, there is no sick people, if x= 0. If t= '
           '1, the line contains one more integer j ( 1≤j≤n) — the position of '
           'the patient in the queue, for which Sam wants to know the status. '
           'All queries are correct, that means that there always exists an '
           'example of the queue of length n for which all reported results ( '
           'statements from queries with t= 0) are true.',
  'note': 'In the first test for the five first queries: Initially Sam tells '
          'that people 4, 5 are not sick. In the next query Sam asks the '
          'status of the patient 5. From the previous query, we know that the '
          'patient is definitely not sick. In the next query Sam asks the '
          "status of the patient 6. We don' t know any information about that "
          'patient now. After that Sam tells that there exists a sick patient '
          'among 4, 5, 6. In the next query Sam asks the status of the patient '
          '6. Now we can tell that this patient is definitely sick.',
  'output': 'After each Sam question ( query with t= 1) print: " NO" , if the '
            'patient is definitely not sick, " YES" , if the patient is '
            'definitely sick. " N/ A" , if it is impossible to definitely '
            'identify the status of patient having the given information.',
  'title': 'Anonymity Is Important',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1641/C'},
 {'history': 'The knight is standing in front of a long and narrow hallway. A '
             'princess is waiting at the end of it. In a hallway there are '
             'three doors: a red door, a green door and a blue door. The doors '
             'are placed one after another, however, possibly in a different '
             'order. To proceed to the next door, the knight must first open '
             'the door before. Each door can be only opened with a key of the '
             'corresponding color. So three keys: a red key, a green key and a '
             'blue key — are also placed somewhere in the hallway. To open the '
             'door, the knight should first pick up the key of its color. The '
             'knight has a map of the hallway. It can be transcribed as a '
             'string, consisting of six characters: R, G, B — denoting red, '
             'green and blue doors, respectively; r, g, b — denoting red, '
             'green and blue keys, respectively. Each of these six characters '
             'appears in the string exactly once. The knight is standing at '
             'the beginning of the hallway — on the left on the map. Given a '
             'map of the hallway, determine if the knight can open all doors '
             'and meet the princess at the end of the hallway.',
  'input': 'The first line contains a single integer t ( 1 ≤ t ≤ 720 ) — the '
           'number of testcases. Each testcase consists of a single string. '
           'Each character is one of R, G, B ( for the doors) , r, g, b ( for '
           'the keys) , and each of them appears exactly once.',
  'note': 'In the first testcase, the knight first collects all keys, then '
          'opens all doors with them. In the second testcase, there is a red '
          "door right in front of the knight, but he doesn' t have a key for "
          'it. In the third testcase, the key to each door is in front of each '
          'respective door, so the knight collects the key and uses it '
          "immediately three times. In the fourth testcase, the knight can' t "
          'open the blue door.',
  'output': 'For each testcase, print YES if the knight can open all doors. '
            'Otherwise, print NO.',
  'title': 'Doors and Keys',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1644/A'},
 {'history': "Let' s call a permutation p of length n anti- Fibonacci if the "
             'condition p_ i- 2 + p_ i- 1 p_ i holds for all i ( 3 ≤ i ≤ n ) . '
             'Recall that the permutation is the array of length n which '
             'contains each integer from 1 to n exactly once. Your task is for '
             'a given number n print n distinct anti- Fibonacci permutations '
             'of length n .',
  'input': 'The first line contains a single integer t ( 1 ≤ t ≤ 48 ) — the '
           'number of test cases. The single line of each test case contains a '
           'single integer n ( 3 ≤ n ≤ 50 ) .',
  'note': ' ',
  'output': 'For each test case, print n lines. Each line should contain an '
            'anti- Fibonacci permutation of length n . In each test case, you '
            'cannot print any permutation more than once. If there are '
            'multiple answers, print any of them. It can be shown that it is '
            'always possible to find n different anti- Fibonacci permutations '
            'of size n under the constraints of the problem.',
  'title': 'Anti-Fibonacci Permutation',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1644/B'},
 {'history': 'You are given an array a_ 1, a_ 2, . . . , a_ n , consisting of '
             'n integers. You are also given an integer value x . Let f( k) be '
             'the maximum sum of a contiguous subarray of a after applying the '
             'following operation: add x to the elements on exactly k distinct '
             'positions. An empty subarray should also be considered, it has '
             "sum 0 . Note that the subarray doesn' t have to include all of "
             'the increased elements. Calculate the maximum value of f( k) for '
             'all k from 0 to n independently.',
  'input': 'The first line contains a single integer t ( 1 ≤ t ≤ 5000 ) — the '
           'number of testcases. The first line of the testcase contains two '
           'integers n and x ( 1 ≤ n ≤ 5000 ; 0 ≤ x ≤ 10^ 5 ) — the number of '
           'elements in the array and the value to add. The second line '
           'contains n integers a_ 1, a_ 2, . . . , a_ n ( - 10^ 5 ≤ a_ i ≤ '
           "10^ 5 ) . The sum of n over all testcases doesn' t exceed 5000 .",
  'note': "In the first testcase, it doesn' t matter which elements you add x "
          'to. The subarray with the maximum sum will always be the entire '
          'array. If you increase k elements by x , k · x will be added to the '
          'sum. In the second testcase: For k = 0 , the empty subarray is the '
          "best option. For k = 1 , it' s optimal to increase the element at "
          'position 3 . The best sum becomes - 1 + 5 = 4 for a subarray [ 3, '
          "3] . For k = 2 , it' s optimal to increase the element at position "
          '3 and any other element. The best sum is still 4 for a subarray [ '
          '3, 3] . For k = 3 , you have to increase all elements. The best sum '
          'becomes ( - 2 + 5) + ( - 7 + 5) + ( - 1 + 5) = 5 for a subarray [ '
          '1, 3] .',
  'output': 'For each testcase, print n + 1 integers — the maximum value of f( '
            'k) for all k from 0 to n independently.',
  'title': 'Increase Subarray Sums',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1644/C'},
 {'history': 'There is a sheet of paper that can be represented with a grid of '
             'size n × m : n rows and m columns of cells. All cells are '
             'colored in white initially. q operations have been applied to '
             'the sheet. The i - th of them can be described as follows: x_ i '
             'y_ i — choose one of k non- white colors and color the entire '
             'row x_ i and the entire column y_ i in it. The new color is '
             'applied to each cell, regardless of whether the cell was colored '
             'before the operation. The sheet after applying all q operations '
             'is called a coloring. Two colorings are different if there '
             'exists at least one cell that is colored in different colors. '
             'How many different colorings are there? Print the number modulo '
             '998 244 353 .',
  'input': 'The first line contains a single integer t ( 1 ≤ t ≤ 10^ 4 ) — the '
           'number of testcases. The first line of the testcase contains four '
           'integers n, m, k and q ( 1 ≤ n, m, k, q ≤ 2 · 10^ 5 ) — the size '
           'of the sheet, the number of non- white colors and the number of '
           'operations. The i - th of the following q lines contains a '
           'description of the i - th operation — two integers x_ i and y_ i ( '
           '1 ≤ x_ i ≤ n ; 1 ≤ y_ i ≤ m ) — the row and the column the '
           "operation is applied to. The sum of q over all testcases doesn' t "
           'exceed 2 · 10^ 5 .',
  'note': ' ',
  'output': 'For each testcase, print a single integer — the number of '
            'different colorings modulo 998 244 353 .',
  'title': 'Cross Coloring',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1644/D'},
 {'history': 'Consider a grid of size n×n. The rows are numbered top to bottom '
             'from 1 to n, the columns are numbered left to right from 1 to n. '
             'The robot is positioned in a cell ( 1, 1) . It can perform two '
             'types of moves: D — move one cell down; R — move one cell right. '
             'The robot is not allowed to move outside the grid. You are given '
             'a sequence of moves s — the initial path of the robot. This path '
             "doesn' t lead the robot outside the grid. You are allowed to "
             'perform an arbitrary number of modifications to it ( possibly, '
             'zero) . With one modification, you can duplicate one move in the '
             'sequence. That is, replace a single occurrence of D with DD or a '
             'single occurrence of R with RR. Count the number of cells such '
             'that there exists at least one sequence of modifications that '
             "the robot visits this cell on the modified path and doesn' t "
             'move outside the grid.',
  'input': 'The first line contains a single integer t ( 1≤t≤104) — the number '
           'of testcases. The first line of each testcase contains the single '
           'integer n ( 2≤n≤108) — the number of rows and columns in the grid. '
           'The second line of each testcase contains a non- empty string s, '
           'consisting only of characters D and R, — the initial path of the '
           "robot. This path doesn' t lead the robot outside the grid. The "
           "total length of strings s over all testcases doesn' t exceed "
           '2⋅105.',
  'note': "In the first testcase, it' s enough to consider the following "
          'modified paths: RD → RRD → RRRD → RRRDD → RRRDDD — this path visits '
          'cells ( 1, 1) , ( 1, 2) , ( 1, 3) , ( 1, 4) , ( 2, 4) , ( 3, 4) and '
          '( 4, 4) ; RD → RRD → RRDD → RRDDD — this path visits cells ( 1, 1) '
          ', ( 1, 2) , ( 1, 3) , ( 2, 3) , ( 3, 3) and ( 4, 3) ; RD → RDD → '
          'RDDD — this path visits cells ( 1, 1) , ( 1, 2) , ( 2, 2) , ( 3, 2) '
          'and ( 4, 2) . Thus, the cells that are visited on at least one '
          'modified path are: ( 1, 1) , ( 1, 2) , ( 1, 3) , ( 1, 4) , ( 2, 2) '
          ', ( 2, 3) , ( 2, 4) , ( 3, 2) , ( 3, 3) , ( 3, 4) , ( 4, 2) , ( 4, '
          '3) and ( 4, 4) . In the second testcase, there is no way to modify '
          'the sequence without moving the robot outside the grid. So the only '
          'visited cells are the ones that are visited on the path DRDRDRDR. '
          'In the third testcase, the cells that are visited on at least one '
          'modified path are: ( 1, 1) , ( 2, 1) and ( 3, 1) . Here are the '
          'cells for all testcases:',
  'output': 'For each testcase, print a single integer — the number of cells '
            'such that there exists at least one sequence of modifications '
            "that the robot visits this cell on the modified path and doesn' t "
            'move outside the grid.',
  'title': 'Expand the Path',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1644/E'},
 {'history': 'You are given a sequence of n non- negative integers a1, a2, . . '
             '. , an. Initially, all the elements of the sequence are '
             'unpainted. You can paint each number Red_ or ̄Blue ( but not '
             'both) , or leave it unpainted. For a color c, Count( c) is the '
             'number of elements in the sequence painted with that color and '
             'Sum( c) is the sum of the elements in the sequence painted with '
             'that color. For example, if the given sequence is [ 2, 8, 6, 3, '
             '1] and it is painted this way: [ ̄2, 8, 6_ , ̄3, 1] ( where 6 is '
             'painted red, 2 and 3 are painted blue, 1 and 8 are unpainted) '
             'then Sum( Red_ ) = 6, Sum( ̄Blue) = 2+ 3= 5, Count( Red_ ) = 1, '
             'and Count( ̄Blue) = 2. Determine if it is possible to paint the '
             'sequence so that Sum( Red_ ) > Sum( ̄Blue) and Count( Red_ ) < '
             'Count( ̄Blue) .',
  'input': 'Each test contains multiple test cases. The first line contains '
           'the number of test cases t ( 1≤t≤1000) . Description of the test '
           'cases follows. The first line of each test case contains an '
           'integer n ( 3≤n≤2⋅105) — the length of the given sequence. The '
           'second line of each test case contains n integers a1, a2, . . . , '
           'an ( 0≤ai≤109) — the given sequence. It is guaranteed that the sum '
           'of n over all test cases does not exceed 2⋅105.',
  'note': 'In the first test case, there is no possible way to paint the '
          'sequence. For example, if you paint the sequence this way: [ ̄1, '
          '̄2, 3_ ] ( where 3 is painted red, 1 and 2 are painted blue) then '
          'Count( Red_ ) = 1< Count( ̄Blue) = 2, but Sum( Red_ ) = 3> ̸Sum( '
          '̄Blue) = 3. So, this is not a possible way to paint the sequence. '
          'In the second test case, a possible way to paint the sequence is '
          'described in the statement. We can see that Sum( Red_ ) = 6> Sum( '
          '̄Blue) = 5 and Count( Red_ ) = 1< Count( ̄Blue) = 2. In the third '
          'test case, there is no possible way to paint the sequence. For '
          'example, if you paint the sequence this way: [ 3_ , 5_ , ̄4, ̄2] ( '
          'where 3 and 5 are painted red, 4 and 2 are painted blue) then Sum( '
          'Red_ ) = 8> Sum( ̄Blue) = 6 but Count( Red_ ) = 2< ̸Count( ̄Blue) = '
          '2. So, this is not a possible way to paint the sequence. In the '
          'fourth test case, it can be proven that there is no possible way to '
          'paint the sequence satisfying sum and count constraints.',
  'output': 'For each test case, print YES if it is possible to paint the '
            'given sequence satisfying the above requirements, and NO '
            'otherwise. You can output YES and NO in any case ( for example, '
            'strings yEs, yes, Yes and YES will be recognized as a positive '
            'response) .',
  'title': 'Quality vs Quantity',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1646/B'},
 {'history': 'You are given a tree of n vertices numbered from 1 to n . A tree '
             'is a connected undirected graph without cycles. For each i= 1, '
             '2, . . . , n , let w_ i be the weight of the i - th vertex. A '
             'vertex is called good if its weight is equal to the sum of the '
             'weights of all its neighbors. Initially, the weights of all '
             'nodes are unassigned. Assign positive integer weights to each '
             'vertex of the tree, such that the number of good vertices in the '
             'tree is maximized. If there are multiple ways to do it, you have '
             'to find one that minimizes the sum of weights of all vertices in '
             'the tree.',
  'input': 'The first line contains one integer n ( 2≤ n≤ 2· 10^ 5 ) — the '
           'number of vertices in the tree. Then, n−1 lines follow. Each of '
           'them contains two integers u and v ( 1≤ u, v≤ n ) denoting an edge '
           'between vertices u and v . It is guaranteed that the edges form a '
           'tree.',
  'note': 'This is the tree for the first test case: In this case, if you '
          'assign a weight of 1 to each vertex, then the good vertices ( which '
          'are painted black) are 1 , 3 and 4 . It impossible to assign '
          'weights so that all vertices are good vertices. The minimum sum of '
          'weights in this case is 1+ 1+ 1+ 1= 4 , and it is impossible to '
          'have a lower sum because the weights have to be positive integers. '
          'This is the tree for the second test case: In this case, if you '
          'assign a weight of 1 to each vertex, then the good vertices ( which '
          'are painted black) are 2 and 3 . It can be proven that this is an '
          'optimal assignment.',
  'output': 'In the first line print two integers — the maximum number of good '
            'vertices and the minimum possible sum of weights for that '
            'maximum. In the second line print n integers w_ 1, w_ 2, . . . , '
            'w_ n ( 1≤ w_ i≤ 10^ 9 ) — the corresponding weight assigned to '
            'each vertex. It can be proven that there exists an optimal '
            'solution satisfying these constraints. If there are multiple '
            'optimal solutions, you may print any.',
  'title': 'Weight the Tree',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1646/D'},
 {'history': 'There are n players, numbered from 1 to n sitting around a round '
             'table. The ( i+ 1) - th player sits to the right of the i - th '
             'player for 1 ≤ i < n , and the 1 - st player sits to the right '
             'of the n - th player. There are n^ 2 cards, each of which has an '
             'integer between 1 and n written on it. For each integer from 1 '
             'to n , there are exactly n cards having this number. Initially, '
             'all these cards are distributed among all the players, in such a '
             'way that each of them has exactly n cards. In one operation, '
             'each player chooses one of his cards and passes it to the player '
             'to his right. All these actions are performed simultaneously. '
             'Player i is called solid if all his cards have the integer i '
             'written on them. Their objective is to reach a configuration in '
             'which everyone is solid. Find a way to do it using at most ( n^ '
             '2- n) operations. You do not need to minimize the number of '
             'operations.',
  'input': 'The first line contains a single integer n ( 2≤ n≤ 100 ) . Then n '
           'lines follow. The i - th of them contains n integers c_ 1, c_ 2, . '
           '. . , c_ n ( 1≤ c_ j≤ n ) — the initial cards of the i - th '
           'player. It is guaranteed that for each integer i from 1 to n , '
           'there are exactly n cards having the number i .',
  'note': 'In the first test case, if the first player passes a card with '
          'number 2 and the second player passes a card with number 1 , then '
          'the first player has two cards with number 1 and the second player '
          'has two cards with number 2 . Then, after making this operation, '
          'both players are solid. In the second test case, 0 operations would '
          'be enough too. Note that you do not need to minimize the number of '
          'operations.',
  'output': 'In the first line print an integer k ( 0≤ k≤ ( n^ 2- n) ) — the '
            'numbers of operations you want to make. Then k lines should '
            'follow. In the i - th of them print n integers d_ 1, d_ 2, . . . '
            ', d_ n ( 1≤ d_ j≤ n ) where d_ j is the number written on the '
            'card which j - th player passes to the player to his right in the '
            'i - th operation. We can show that an answer always exists under '
            'the given constraints. If there are multiple answers, print any.',
  'title': 'Playing Around the Table',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1646/F'},
 {'history': 'Madoka finally found the administrator password for her '
             'computer. Her father is a well- known popularizer of '
             'mathematics, so the password is the answer to the following '
             'problem. Find the maximum decimal number without zeroes and with '
             'no equal digits in a row, such that the sum of its digits is n . '
             'Madoka is too tired of math to solve it herself, so help her to '
             'solve this problem!',
  'input': 'Each test contains multiple test cases. The first line contains a '
           'single integer t ( 1 ≤ t ≤ 1000 ) — the number of test cases. '
           'Description of the test cases follows. The only line of each test '
           'case contains an integer n ( 1 ≤ n ≤ 1000 ) — the required sum of '
           'the digits.',
  'note': 'The only numbers with the sum of digits equal to 2 without zeros '
          "are 2 and 11 . But the last one has two ones in a row, so it' s not "
          "valid. That' s why the answer is 2 . The only numbers with the sum "
          'of digits equal to 3 without zeros are 111 , 12 , 21 , and 3 . The '
          "first one has 2 ones in a row, so it' s not valid. So the maximum "
          'valid number is 21 . The only numbers with the sum of digits equals '
          'to 4 without zeros are 1111 , 211 , 121 , 112 , 13 , 31 , 22 , and '
          "4 . Numbers 1111 , 211 , 112 , 22 aren' t valid, because they have "
          'some identical digits in a row. So the maximum valid number is 121 '
          '.',
  'output': 'For each test case print the maximum number you can obtain.',
  'title': 'Madoka and Math Dad',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1647/A'},
 {'history': "Madoka' s father just reached 1 million subscribers on Mathub! "
             'So the website decided to send him a personalized award — The '
             "Mathhub' s Bit Button! The Bit Button is a rectangular table "
             'with n rows and m columns with 0 or 1 in each cell. After '
             'exploring the table Madoka found out that: A subrectangle A is '
             "contained in a subrectangle B if there' s no cell contained in A "
             'but not contained in B. Two subrectangles intersect if there is '
             'a cell contained in both of them. A subrectangle is called black '
             "if there' s no cell with value 0 inside it. A subrectangle is "
             "called nice if it' s black and it' s not contained in another "
             'black subrectangle. The table is called elegant if there are no '
             'two nice intersecting subrectangles. For example, in the first '
             'illustration the red subrectangle is nice, but in the second one '
             "it' s not, because it' s contained in the purple subrectangle. "
             'Help Madoka to determine whether the table is elegant.',
  'input': 'Each test contains multiple test cases. The first line contains a '
           'single integer t ( 1≤t≤200) — the number of test cases. '
           'Description of the test cases follows. The first line of each test '
           'case contains two positive integers n, m ( 1≤n, m≤100) . The next '
           'n lines contain strings of length m consisting of zeros and ones — '
           'the description of the table. It is guaranteed that the sum of the '
           'values of n and the sum of the values of m for all test cases do '
           'not exceed 777.',
  'note': 'In the second test case the table is not elegant, because the red '
          'and the purple subrectangles are nice and intersect. In the fourth '
          'test case the table is not elegant, because the red and the purple '
          'subrectangles are nice and intersect.',
  'output': 'For each test case print " YES" if its table is elegant or print '
            '" NO" otherwise. You may print each letter in any case ( for '
            'example, " YES" , " Yes" , " yes" , " yEs" will all be recognized '
            'as positive answer) .',
  'title': 'Madoka and the Elegant Gift',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1647/B'},
 {'history': 'Egor has a table of size n×m, with lines numbered from 1 to n '
             'and columns numbered from 1 to m. Each cell has a color that can '
             'be presented as an integer from 1 to 105. Let us denote the cell '
             'that lies in the intersection of the r- th row and the c- th '
             'column as ( r, c) . We define the manhattan distance between two '
             'cells ( r1, c1) and ( r2, c2) as the length of a shortest path '
             'between them where each consecutive cells in the path must have '
             'a common side. The path can go through cells of any color. For '
             'example, in the table 3×4 the manhattan distance between ( 1, 2) '
             'and ( 3, 3) is 3, one of the shortest paths is the following: ( '
             '1, 2) →( 2, 2) →( 2, 3) →( 3, 3) . Egor decided to calculate the '
             'sum of manhattan distances between each pair of cells of the '
             'same color. Help him to calculate this sum.',
  'input': 'The first line contains two integers n and m ( 1≤n≤m, n⋅m≤100000) '
           '— number of rows and columns in the table. Each of next n lines '
           'describes a row of the table. The i- th line contains m integers '
           'ci1, ci2, . . . , cim ( 1≤cij≤100000) — colors of cells in the i- '
           'th row.',
  'note': 'In the first sample there are three pairs of cells of same color: '
          'in cells ( 1, 1) and ( 2, 3) , in cells ( 1, 2) and ( 2, 2) , in '
          'cells ( 1, 3) and ( 2, 1) . The manhattan distances between them '
          'are 3, 1 and 3, the sum is 7.',
  'output': 'Print one integer — the the sum of manhattan distances between '
            'each pair of cells of the same color.',
  'title': 'Weird Sum',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1648/A'},
 {'history': 'While looking at the kitchen fridge, the little boy Tyler '
             'noticed magnets with symbols, that can be aligned into a string '
             's . Tyler likes strings, and especially those that are '
             'lexicographically smaller than another string, t . After playing '
             'with magnets on the fridge, he is wondering, how many distinct '
             'strings can be composed out of letters of string s by '
             'rearranging them, so that the resulting string is '
             'lexicographically smaller than the string t ? Tyler is too '
             "young, so he can' t answer this question. The alphabet Tyler "
             'uses is very large, so for your convenience he has already '
             'replaced the same letters in s and t to the same integers, '
             'keeping that different letters have been replaced to different '
             'integers. We call a string x lexicographically smaller than a '
             'string y if one of the followings conditions is fulfilled: There '
             'exists such position of symbol m that is presented in both '
             'strings, so that before m - th symbol the strings are equal, and '
             'the m - th symbol of string x is smaller than m - th symbol of '
             'string y . String x is the prefix of string y and x = ̸ y . '
             'Because the answer can be too large, print it modulo 998 244 353 '
             '.',
  'input': 'The first line contains two integers n and m ( 1 ≤ n, m ≤ 200 000 '
           ') — the lengths of strings s and t respectively. The second line '
           'contains n integers s_ 1, s_ 2, s_ 3, . . . , s_ n ( 1 ≤ s_ i ≤ '
           '200 000 ) — letters of the string s . The third line contains m '
           'integers t_ 1, t_ 2, t_ 3, . . . , t_ m ( 1 ≤ t_ i ≤ 200 000 ) — '
           'letters of the string t .',
  'note': 'In the first example, the strings we are interested in are [ 1 2 2] '
          'and [ 2 1 2] . The string [ 2 2 1] is lexicographically larger than '
          "the string [ 2 1 2 1] , so we don' t count it. In the second "
          'example, all strings count except [ 4 3 2 1] , so the answer is 4! '
          '- 1 = 23 . In the third example, only the string [ 1 1 1 2] counts.',
  'output': 'Print a single number — the number of strings lexicographically '
            'smaller than t that can be obtained by rearranging the letters in '
            's , modulo 998 244 353 .',
  'title': 'Tyler and Strings',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1648/C'},
 {'history': 'Dima is taking part in a show organized by his friend Peter. In '
             'this show Dima is required to cross a 3 × n rectangular field. '
             'Rows are numbered from 1 to 3 and columns are numbered from 1 to '
             'n . The cell in the intersection of the i - th row and the j - '
             'th column of the field contains an integer a_ i, j . Initially '
             "Dima' s score equals zero, and whenever Dima reaches a cell in "
             'the row i and the column j , his score changes by a_ i, j . Note '
             'that the score can become negative. Initially all cells in the '
             'first and the third row are marked as available, and all cells '
             'in the second row are marked as unavailable. However, Peter '
             'offered Dima some help: there are q special offers in the show, '
             'the i - th special offer allows Dima to mark cells in the second '
             "row between l_ i and r_ i as available, though Dima' s score "
             'reduces by k_ i whenever he accepts a special offer. Dima is '
             'allowed to use as many special offers as he wants, and might '
             'mark the same cell as available multiple times. Dima starts his '
             'journey in the cell ( 1, 1) and would like to reach the cell ( '
             '3, n) . He can move either down to the next row or right to the '
             'next column ( meaning he could increase the current row or '
             'column by 1) , thus making n + 1 moves in total, out of which '
             'exactly n - 1 would be horizontal and 2 would be vertical. Peter '
             'promised Dima to pay him based on his final score, so the sum of '
             'all numbers of all visited cells minus the cost of all special '
             'offers used. Please help Dima to maximize his final score.',
  'input': 'The first input line contains two integers n and q ( 1 ≤ n, q ≤ '
           '500 000 ) — the number of columns in the field and the number of '
           'special offers. The next three lines describe the field, i - th of '
           'them contains n integers a_ i1 , a_ i2 , . . . , a_ in ( - 10^ 9 ≤ '
           'a_ ij≤ 10^ 9) — the values in the i - th row. The next q lines '
           'describe special offers: the i - th offer is described by 3 '
           'integers l_ i , r_ i and k_ i ( 1 ≤ l_ i ≤ r_ i ≤ n , 1≤ k_ i≤ 10^ '
           '9 ) — the segment that becomes unblocked and the cost of this '
           'special offer.',
  'note': "In the first example, it is optimal to use Peter' s second offer of "
          '4 rubles and go through the cells ( 1, 1) , ( 1, 2) , ( 1, 3) , ( '
          '2, 3) , ( 3, 3) , ( 3, 4) , earning 1 + 0 + 2 + 9 + 4 + 1 - 4 = 13 '
          "rubles in total. In the second example, it is optimal to use Peter' "
          's second and third offers of 2 and 3 rubles, respectively, and go '
          'through the cells ( 1, 1) , ( 2, 1) , ( 2, 2) , ( 2, 3) , ( 2, 4) , '
          '( 3, 4) , ( 3, 5) , earning - 20 + 1 + 3 + 3 + 6 + 6 + 2 - 2 - 3= - '
          '4 rubles.',
  'output': 'Output one integer — the maximum final score Dima can achieve.',
  'title': 'Serious Business',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1648/D'},
 {'history': 'Berland is a large country with developed airlines. In total, '
             'there are n cities in the country that are historically served '
             'by the Berlaflot airline. The airline operates bi- directional '
             'flights between m pairs of cities, i - th of them connects '
             'cities with numbers a_ i and b_ i and has a price c_ i for a '
             'flight in both directions. It is known that Berlaflot flights '
             'can be used to get from any city to any other ( possibly with '
             'transfers) , and the cost of any route that consists of several '
             'consequent flights is equal to the cost of the most expensive of '
             'them. More formally, the cost of the route from a city t_ 1 to a '
             'city t_ k with ( k- 2) transfers using cities t_ 2, t_ 3, t_ 4, '
             '. . . , t_ k - 1 is equal to the maximum cost of flights from t_ '
             '1 to t_ 2 , from t_ 2 to t_ 3 , from t_ 3 to t_ 4 and so on '
             'until the flight from t_ k - 1 to t_ k . Of course, all these '
             'flights must be operated by Berlaflot. A new airline, S8 '
             'Airlines, has recently started operating in Berland. This '
             'airline provides bi- directional flights between all pairs of '
             'cities that are not connected by Berlaflot direct flights. Thus, '
             'between each pair of cities there is a flight of either '
             'Berlaflot or S8 Airlines. The cost of S8 Airlines flights is '
             'calculated as follows: for each pair of cities x and y that is '
             'connected by a S8 Airlines flight, the cost of this flight is '
             'equal to the minimum cost of the route between the cities x and '
             'y at Berlaflot according to the pricing described earlier. It is '
             'known that with the help of S8 Airlines flights you can get from '
             'any city to any other with possible transfers, and, similarly to '
             'Berlaflot, the cost of a route between any two cities that '
             'consists of several S8 Airlines flights is equal to the cost of '
             'the most expensive flight. Due to the increased competition with '
             'S8 Airlines, Berlaflot decided to introduce an air reform and '
             'change the costs of its flights. Namely, for the i - th of its '
             'flight between the cities a_ i and b_ i , Berlaflot wants to '
             'make the cost of this flight equal to the minimum cost of the '
             'route between the cities a_ i and b_ i at S8 Airlines. Help '
             'Berlaflot managers calculate new flight costs.',
  'input': 'Each test consists of multiple test cases. The first line contains '
           'one integer t ( 1 ≤ t ≤ 10 000 ) — the amount of test cases. The '
           'first line of each test case contains two integers n and m ( 4 ≤ n '
           '≤ 200 000 , n - 1 ≤ m ≤ 200 000 , m ≤( n - 1) ( n - 2) / 2 ) — the '
           'amount of cities in Berland and the amount of Berlaflot flights. '
           'The next m lines contain the description of Berlaflot flights. The '
           'i - th line contains three integers a_ i , b_ i and c_ i ( 1 ≤ a_ '
           'i, b_ i ≤ n , 1 ≤ c_ i ≤ 10^ 9 ) — the numbers of cities that are '
           'connected with i - th Berlaflot flight and the price of i - th '
           'Berlaflot flight. It is guaranteed that no flight connects a city '
           'with itself, no two flights connect the same pair of cities. It is '
           'guaranteed that by using Berlaflot flights it is possible to get '
           'from any city to any other and by using S8 Airlines flights it is '
           'possible to get from any city to any other. Let N be the sum of n '
           'over all test cases and M be the sum of m over all test cases. It '
           'is guaranteed that N, M ≤ 200 000 .',
  'note': 'In the first test case S8 Airlines will provide flights between '
          'these pairs of cities: ( 1, 3) , ( 1, 4) and ( 2, 4) . The cost of '
          'a flight between cities 1 and 3 will be equal to 2 , since the '
          'minimum cost of the Berlaflot route is 2 — the route consists of a '
          'flight between cities 1 and 2 costing 1 and a flight between cities '
          '2 and 3 costing 2 , the maximum cost is 2 . The cost of a flight '
          'between cities 1 and 4 will be 3 , since the minimum cost of the '
          'Berlaflot route is 3 — the route consists of a flight between '
          'cities 1 and 2 costing 1 , a flight between cities 2 and 3 costing '
          '2 and a flight between cities 3 and 4 costing 3 , the maximum cost '
          'is 3 . The cost of a flight between cities 2 and 4 will be 3 , '
          'since the minimum cost of the Berlaflot route is 3 — the route '
          'consists of a flight between cities 2 and 3 costing 2 and a flight '
          'between cities 3 and 4 costing 3 , the maximum cost is 3 . After '
          'the air reform, the cost of the Berlaflot flight between cities 1 '
          'and 2 will be 3 , since the minimum cost of the S8 Airlines route '
          'between these cities is 3 — the route consists of a flight between '
          'cities 1 and 4 costing 3 and a flight between cities 2 and 4 '
          'costing 3 , the maximum cost is 3 . The cost of the Berlaflot '
          'flight between cities 2 and 3 will be 3 , since the minimum cost of '
          'the S8 Airlines route between these cities is 3 — the route '
          'consists of a flight between cities 2 and 4 costing 3 , a flight '
          'between cities 1 and 4 costing 3 and a flight between 1 and 3 '
          'costing 2 , the maximum cost is 3 . The cost of the Berlaflot '
          'flight between cities 3 and 4 will be 3 , since the minimum cost of '
          'the S8 Airlines route between these cities is 3 — the route '
          'consists of a flight between cities 1 and 3 costing 2 and a flight '
          'between cities 1 and 4 costing 3 , the maximum cost is 3 . In the '
          'second test case S8 Airlines will have the following flights: '
          'between cities 1 and 4 costing 1 , between cities 2 and 3 costing 1 '
          ', between cities 2 and 5 costing 2 , between cities 3 and 4 costing '
          '1 and between cities 3 and 5 costing 2 .',
  'output': 'For each test case you should print m integers in a single line, '
            'i - th of them should be the price of i - th Berlaflot flight '
            'after the air reform.',
  'title': 'Air Reform',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1648/E'},
 {'history': 'You are playing a very popular computer game. The next level '
             'consists of n consecutive locations, numbered from 1 to n , each '
             'of them containing either land or water. It is known that the '
             'first and last locations contain land, and for completing the '
             'level you have to move from the first location to the last. '
             'Also, if you become inside a location with water, you will die, '
             'so you can only move between locations with land. You can jump '
             'between adjacent locations for free, as well as no more than '
             'once jump from any location with land i to any location with '
             'land i + x , spending x coins ( x ≥ 0 ) . Your task is to spend '
             'the minimum possible number of coins to move from the first '
             'location to the last one. Note that this is always possible '
             'since both the first and last locations are the land locations.',
  'input': 'There are several test cases in the input data. The first line '
           'contains a single integer t ( 1 ≤ t ≤ 100 ) — the number of test '
           'cases. This is followed by the test cases description. The first '
           'line of each test case contains one integer n ( 2 ≤ n ≤ 100 ) — '
           'the number of locations. The second line of the test case contains '
           'a sequence of integers a_ 1, a_ 2, . . . , a_ n ( 0 ≤ a_ i ≤ 1 ) , '
           'where a_ i = 1 means that the i - th location is the location with '
           'land, and a_ i = 0 means that the i - th location is the location '
           'with water. It is guaranteed that a_ 1 = 1 and a_ n = 1 .',
  'note': 'In the first test case, it is enough to make one free jump from the '
          'first location to the second one, which is also the last one, so '
          'the answer is 0 . In the second test case, the only way to move '
          'from the first location to the last one is to jump between them, '
          'which will cost 4 coins. In the third test case, you can jump from '
          'the first location to the third for 2 coins, and then jump to the '
          'fourth location for free, so the answer is 2 . It can be shown that '
          'this is the optimal way.',
  'output': 'For each test case print a single integer — the answer to the '
            'problem.',
  'title': 'Game',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1649/A'},
 {'history': 'Daniel is watching a football team playing a game during their '
             'training session. They want to improve their passing skills '
             'during that session. The game involves n players, making '
             'multiple passes towards each other. Unfortunately, since the '
             'balls were moving too fast, after the session Daniel is unable '
             'to know how many balls were involved during the game. The only '
             'thing he knows is the number of passes delivered by each player '
             'during all the session. Find the minimum possible amount of '
             'balls that were involved in the game.',
  'input': 'There are several test cases in the input data. The first line '
           'contains a single integer t ( 1 ≤ t ≤ 5 · 10^ 4 ) — the number of '
           'test cases. This is followed by the test cases description. The '
           'first line of each test case contains one integer n ( 2 ≤ n ≤ 10^ '
           '5 ) — the number of players. The second line of the test case '
           'contains a sequence of integers a_ 1, a_ 2, . . . , a_ n ( 0 ≤ a_ '
           'i ≤ 10^ 9 ) , where a_ i is the number of passes delivered by the '
           'i - th player. It is guaranteed that the sum of n over all test '
           "cases doesn' t exceed 10^ 5 .",
  'note': 'In the first test case, with the only ball, the game can go like '
          'this: 2 → 1 → 3 → 4 → 1 → 2 → 3 → 4 → 2 → 3 → 2 . In the second '
          'test case, there is no possible way to play the game with only one '
          'ball. One possible way to play with two balls: 2 → 1 → 2 → 3 → 2 → '
          '1 . 2 → 3 → 2 → 1 In the third example, there were no passes, so 0 '
          'balls are possible.',
  'output': 'For each test case print a single integer — the answer to the '
            'problem.',
  'title': 'Game of Ball Passing',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1649/B'},
 {'history': 'The string s is given, the string length is odd number. The '
             'string consists of lowercase letters of the Latin alphabet. As '
             'long as the string length is greater than 1, the following '
             'operation can be performed on it: select any two adjacent '
             'letters in the string s and delete them from the string. For '
             'example, from the string " lemma" in one operation, you can get '
             'any of the four strings: " mma" , " lma" , " lea" or " lem" In '
             'particular, in one operation, the length of the string reduces '
             'by 2. Formally, let the string s have the form s= s1s2. . . sn ( '
             'n> 1) . During one operation, you choose an arbitrary index i ( '
             '1≤i< n) and replace s= s1s2. . . si−1si+ 2. . . sn. For the '
             'given string s and the letter c, determine whether it is '
             'possible to make such a sequence of operations that in the end '
             'the equality s= c will be true? In other words, is there such a '
             'sequence of operations that the process will end with a string '
             'of length 1, which consists of the letter c?',
  'input': 'The first line of input data contains an integer t ( 1≤t≤103) — '
           'the number of input test cases. The descriptions of the t cases '
           'follow. Each test case is represented by two lines: string s, '
           'which has an odd length from 1 to 49 inclusive and consists of '
           'lowercase letters of the Latin alphabet; is a string containing '
           'one letter c, where c is a lowercase letter of the Latin alphabet.',
  'note': 'In the first test case, s= " abcde" . You need to get s= " c" . For '
          'the first operation, delete the first two letters, we get s= " cde" '
          '. In the second operation, we delete the last two letters, so we '
          'get the expected value of s= " c" . In the third test case, s= " x" '
          ', it is required to get s= " y" . Obviously, this cannot be done.',
  'output': 'For each test case in a separate line output: YES, if the string '
            's can be converted so that s= c is true; NO otherwise. You can '
            'output YES and NO in any case ( for example, the strings yEs, '
            'yes, Yes and YES will be recognized as a positive response) .',
  'title': 'Deletions of Two Adjacent Letters',
  'topics': ['implementation', 'strings'],
  'url': 'https://codeforces.com/problemset/problem/1650/A'},
 {'history': 'On the number line there are m points, i- th of which has '
             'integer coordinate xi and integer weight wi. The coordinates of '
             'all points are different, and the points are numbered from 1 to '
             'm. A sequence of n segments [ l1, r1] , [ l2, r2] , . . . , [ '
             'ln, rn] is called system of nested segments if for each pair i, '
             'j ( 1≤i< j≤n) the condition li< lj< rj< ri is satisfied. In '
             'other words, the second segment is strictly inside the first '
             'one, the third segment is strictly inside the second one, and so '
             'on. For a given number n, find a system of nested segments such '
             'that: both ends of each segment are one of m given points; the '
             'sum of the weights 2⋅n of the points used as ends of the '
             'segments is minimal. For example, let m= 8. The given points are '
             'marked in the picture, their weights are marked in red, their '
             'coordinates are marked in blue. Make a system of three nested '
             'segments: weight of the first segment: 1+ 1= 2 weight of the '
             'second segment: 10+ ( −1) = 9 weight of the third segment: 3+ ( '
             '−2) = 1 sum of the weights of all the segments in the system: 2+ '
             '9+ 1= 12 System of three nested segments',
  'input': 'The first line of input data contains an integer t ( 1≤t≤104) —the '
           'number of input test cases. An empty line is written before each '
           'test case. The first line of each test case contains two positive '
           'integers n ( 1≤n≤105) and m ( 2⋅n≤m≤2⋅105) . The next m lines '
           'contain pairs of integers xi ( −109≤xi≤109) and wi ( −104≤wi≤104) '
           '— coordinate and weight of point number i ( 1≤i≤m) respectively. '
           'All xi are different. It is guaranteed that the sum of m values '
           'over all test cases does not exceed 2⋅105.',
  'note': 'The first test case coincides with the example from the condition. '
          'It can be shown that the weight of the composed system is minimal. '
          'The second test case has only 6 points, so you need to use each of '
          'them to compose 3 segments.',
  'output': 'For each test case, output n+ 1 lines: in the first of them, '
            'output the weight of the composed system, and in the next n lines '
            'output exactly two numbers — the indices of the points which are '
            'the endpoints of the i- th segment ( 1≤i≤n) . The order in which '
            'you output the endpoints of a segment is not important — you can '
            'output the index of the left endpoint first and then the number '
            'of the right endpoint, or the other way around. If there are '
            'several ways to make a system of nested segments with minimal '
            'weight, output any of them.',
  'title': 'Weight of the System of Nested Segments',
  'topics': ['implementation', 'sortings'],
  'url': 'https://codeforces.com/problemset/problem/1650/C'},
 {'history': 'Petya got an array a of numbers from 1 to n , where a[ i] = i . '
             'He performed n operations sequentially. In the end, he received '
             'a new state of the a array. At the i - th operation, Petya chose '
             'the first i elements of the array and cyclically shifted them to '
             'the right an arbitrary number of times ( elements with indexes '
             'i+ 1 and more remain in their places) . One cyclic shift to the '
             'right is such a transformation that the array a= [ a_ 1, a_ 2, . '
             '. . , a_ n] becomes equal to the array a = [ a_ i, a_ 1, a_ 2, . '
             '. . , a_ i- 2, a_ i- 1, a_ i+ 1, a_ i+ 2, . . . , a_ n] . For '
             'example, if a = [ 5, 4, 2, 1, 3] and i= 3 ( that is, this is the '
             'third operation) , then as a result of this operation, he could '
             'get any of these three arrays: a = [ 5, 4, 2, 1, 3] ( makes 0 '
             'cyclic shifts, or any number that is divisible by 3 ) ; a = [ 2, '
             '5, 4, 1, 3] ( makes 1 cyclic shift, or any number that has a '
             'remainder of 1 when divided by 3 ) ; a = [ 4, 2, 5, 1, 3] ( '
             'makes 2 cyclic shifts, or any number that has a remainder of 2 '
             "when divided by 3 ) . Let' s look at an example. Let n= 6 , i. "
             'e. initially a= [ 1, 2, 3, 4, 5, 6] . A possible scenario is '
             'described below. i= 1 : no matter how many cyclic shifts Petya '
             "makes, the array a does not change. i= 2 : let' s say Petya "
             'decided to make a 1 cyclic shift, then the array will look like '
             "a = [ 2, 1, 3, 4, 5, 6] . i= 3 : let' s say Petya decided to "
             'make 1 cyclic shift, then the array will look like a = [ 3, 2, '
             "1, 4, 5, 6] . i= 4 : let' s say Petya decided to make 2 cyclic "
             'shifts, the original array will look like a = [ 1, 4, 3, 2, 5, '
             "6] . i= 5 : let' s say Petya decided to make 0 cyclic shifts, "
             "then the array won' t change. i= 6 : let' s say Petya decided to "
             'make 4 cyclic shifts, the array will look like a = [ 3, 2, 5, 6, '
             '1, 4] . You are given a final array state a after all n '
             'operations. Determine if there is a way to perform the operation '
             'that produces this result. In this case, if an answer exists, '
             'print the numbers of cyclical shifts that occurred during each '
             'of the n operations.',
  'input': 'The first line of the input contains an integer t ( 1 ≤ t ≤ 500 ) '
           '— the number of test cases in the test. The descriptions of the '
           'test cases follow. The first line of the description of each test '
           'case contains one integer n ( 2 ≤ n ≤ 2·10^ 3 ) — the length of '
           'the array a . The next line contains the final state of the array '
           'a : n integers a_ 1, a_ 2, . . . , a_ n ( 1 ≤ a_ i ≤ n ) are '
           'written. All a_ i are distinct. It is guaranteed that the sum of n '
           'values over all test cases does not exceed 2·10^ 3 .',
  'note': 'The first test case matches the example from the statement. The '
          'second set of input data is simple. Note that the answer [ 3, 2, 1] '
          'also gives the same permutation, but since the total number of '
          'shifts 3+ 2+ 1 is greater than 0+ 0+ 1 , this answer is not '
          'correct.',
  'output': 'For each test case, print the answer on a separate line. Print - '
            '1 if the given final value a cannot be obtained by performing an '
            'arbitrary number of cyclic shifts on each operation. Otherwise, '
            'print n non- negative integers d_ 1, d_ 2, . . . , d_ n ( d_ i ≥ '
            '0 ) , where d_ i means that during the i - th operation the first '
            'i elements of the array were cyclic shifted to the right d_ i '
            'times. If there are several possible answers, print the one where '
            'the total number of shifts is minimal ( that is, the sum of d_ i '
            'values is the smallest) . If there are several such answers, '
            'print any of them.',
  'title': 'Twist the Permutation',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1650/D'},
 {'history': 'Now Dmitry has a session, and he has to pass n exams. The '
             'session starts on day 1 and lasts d days. The ith exam will take '
             'place on the day of ai ( 1≤ai≤d) , all ai — are different. '
             'Sample, where n= 3, d= 12, a= [ 3, 5, 9] . Orange — exam days. '
             'Before the first exam Dmitry will rest 2 days, before the second '
             'he will rest 1 day and before the third he will rest 3 days. For '
             'the session schedule, Dmitry considers a special value μ — the '
             'smallest of the rest times before the exam for all exams. For '
             'example, for the image above, μ= 1. In other words, for the '
             'schedule, he counts exactly n numbers — how many days he rests '
             'between the exam i−1 and i ( for i= 0 between the start of the '
             'session and the exam i) . Then it finds μ — the minimum among '
             'these n numbers. Dmitry believes that he can improve the '
             'schedule of the session. He may ask to change the date of one '
             'exam ( change one arbitrary value of ai) . Help him change the '
             'date so that all ai remain different, and the value of μ is as '
             'large as possible. For example, for the schedule above, it is '
             'most advantageous for Dmitry to move the second exam to the very '
             'end of the session. The new schedule will take the form: Now the '
             'rest periods before exams are equal to [ 2, 2, 5] . So, μ= 2. '
             'Dmitry can leave the proposed schedule unchanged ( if there is '
             'no way to move one exam so that it will lead to an improvement '
             'in the situation) .',
  'input': 'The first line of input data contains an integer t ( 1≤t≤104) — '
           'the number of input test cases. The descriptions of test cases '
           'follow. An empty line is written in the test before each case. The '
           'first line of each test case contains two integers n and d ( '
           '2≤n≤2⋅105, 1≤d≤109) — the number of exams and the length of the '
           'session, respectively. The second line of each test case contains '
           'n integers ai ( 1≤ai≤d, ai< ai+ 1) , where the i- th number means '
           'the date of the i- th exam. It is guaranteed that the sum of n for '
           'all test cases does not exceed 2⋅105.',
  'note': 'The first sample is parsed in statement. One of the optimal '
          'schedule changes for the second sample: Initial schedule. New '
          'schedule. In the third sample, we need to move the exam from day 1 '
          'to any day from 4 to 100. In the fourth sample, any change in the '
          'schedule will only reduce μ, so the schedule should be left as it '
          'is. In the fifth sample, we need to move the exam from day 1 to any '
          'day from 100000000 to 300000000. One of the optimal schedule '
          'changes for the sixth sample: Initial schedule. New schedule. In '
          'the seventh sample, every day is exam day, and it is impossible to '
          'rearrange the schedule.',
  'output': 'For each test case, output the maximum possible value of μ if '
            'Dmitry can move any one exam to an arbitrary day. All values of '
            'ai should remain distinct.',
  'title': 'Rescheduling the Exam',
  'topics': ['implementation', 'sortings'],
  'url': 'https://codeforces.com/problemset/problem/1650/E'},
 {'history': 'Vitaly enrolled in the course Advanced Useless Algorithms. The '
             'course consists of n tasks. Vitaly calculated that he has a_ i '
             'hours to do the task i from the day he enrolled in the course. '
             'That is, the deadline before the i - th task is a_ i hours. The '
             'array a is sorted in ascending order, in other words, the job '
             'numbers correspond to the order in which the assignments are '
             'turned in. Vitaly does everything conscientiously, so he wants '
             'to complete each task by 100 percent, or more. Initially, his '
             'completion rate for each task is 0 percent. Vitaly has m '
             'training options, each option can be used not more than once. '
             'The i th option is characterized by three integers: e_ i, t_ i '
             'and p_ i . If Vitaly uses the i th option, then after t_ i hours '
             '( from the current moment) he will increase the progress of the '
             'task e_ i by p_ i percent. For example, let Vitaly have 3 of '
             'tasks to complete. Let the array a have the form: a = [ 5, 7, 8] '
             '. Suppose Vitaly has 5 of options: [ e_ 1= 1, t_ 1= 1, p_ 1= 30] '
             ', [ e_ 2= 2, t_ 2= 3, p_ 2= 50] , [ e_ 3= 2, t_ 3= 3, p_ 3= 100] '
             ', [ e_ 4= 1, t_ 4= 1, p_ 4= 80] , [ e_ 5= 3, t_ 5= 3, p_ 5= 100] '
             '. Then, if Vitaly prepares in the following way, he will be able '
             'to complete everything in time: Vitaly chooses the 4 - th '
             'option. Then in 1 hour, he will complete the 1 - st task at 80 '
             'percent. He still has 4 hours left before the deadline for the 1 '
             '- st task. Vitaly chooses the 3 - rd option. Then in 3 hours, he '
             'will complete the 2 - nd task in its entirety. He has another 1 '
             'hour left before the deadline for the 1 - st task and 4 hours '
             'left before the deadline for the 3 - rd task. Vitaly chooses the '
             '1 - st option. Then after 1 hour, he will complete the 1 - st '
             'task for 110 percent, which means that he will complete the 1 - '
             'st task just in time for the deadline. Vitaly chooses the 5 - th '
             'option. He will complete the 3 - rd task for 2 hours, and after '
             'another 1 hour, Vitaly will complete the 3 - rd task in its '
             'entirety. Thus, Vitaly has managed to complete the course '
             'completely and on time, using the 4 options. Help Vitaly — print '
             'the options for Vitaly to complete the tasks in the correct '
             'order. Please note: each option can be used not more than once. '
             'If there are several possible answers, it is allowed to output '
             'any of them.',
  'input': 'The first line of input data contains an integer T ( 1 ≤ T ≤ 10^ 4 '
           ') —the number of input test cases in the test. The descriptions of '
           'the input test case follow. The first line of each test case '
           'description contains two integers n and m ( 1 ≤ n, m ≤ 10^ 5 ) '
           '—the number of jobs and the number of training options, '
           'respectively. The next line contains n numbers a_ 1, a_ 2, . . . , '
           'a_ n ( 1 ≤ a_ i ≤ 10^ 9 ) — the time before the deadline of job i '
           '. The array values — are non- decreasing, that is a_ 1 ≤ a_ 2 ≤. . '
           '. ≤ a_ n . The following m lines contain triples of numbers e_ i, '
           't_ i, p_ i ( 1 ≤ e_ i ≤ n , 1 ≤ t_ i ≤ 10^ 9 , 1 ≤ p_ i ≤ 100 ) — '
           'if Vitaly chooses this option, then after t_ i hours he will '
           'increase the progress of the task e_ i by p_ i percent. The '
           'options are numbered from 1 to m in order in the input data. It is '
           'guaranteed that the sum of n+ m on all test cases does not exceed '
           '2 · 10^ 5 .',
  'note': ' ',
  'output': 'For each test case, print on the first line the number k , '
            'meaning that for k of options, Vitaly will be able to complete '
            'each task by 100 percent or more on time. The options should not '
            'be repeated. Or print - 1 if Vitaly is unable to complete all '
            'tasks in time. If there is an answer, on the next line print k of '
            'different integers from 1 to m — the numbers of the options in '
            'the order you want. If there is more than one answer, it is '
            'allowed to print any of them.',
  'title': 'Vitaly and Advanced Useless Algorithms',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1650/F'},
 {'history': 'Consider a playoff tournament where 2n athletes compete. The '
             'athletes are numbered from 1 to 2n. The tournament is held in n '
             'stages. In each stage, the athletes are split into pairs in such '
             'a way that each athlete belongs exactly to one pair. In each '
             'pair, the athletes compete against each other, and exactly one '
             'of them wins. The winner of each pair advances to the next '
             'stage, the athlete who was defeated gets eliminated from the '
             'tournament. The pairs are formed as follows: in the first stage, '
             'athlete 1 competes against athlete 2; 3 competes against 4; 5 '
             'competes against 6, and so on; in the second stage, the winner '
             'of the match " 1–2" competes against the winner of the match " '
             '3–4" ; the winner of the match " 5–6" competes against the '
             'winner of the match " 7–8" , and so on; the next stages are held '
             'according to the same rules. When athletes x and y compete, the '
             'winner is decided as follows: if x+ y is odd, the athlete with '
             'the lower index wins ( i. e. if x< y, then x wins, otherwise y '
             'wins) ; if x+ y is even, the athlete with the higher index wins. '
             'The following picture describes the way the tournament with n= 3 '
             'goes. Your task is the following one: given the integer n, '
             'determine the index of the athlete who wins the tournament.',
  'input': 'The first line contains one integer t ( 1≤t≤30) — the number of '
           'test cases. Each test case consists of one line containing one '
           'integer n ( 1≤n≤30) .',
  'note': 'The case n= 3 is shown in the picture from the statement. If n= 1, '
          "then there' s only one match between athletes 1 and 2. Since 1+ 2= "
          '3 is an odd number, the athlete with the lower index wins. So, the '
          'athlete 1 is the winner.',
  'output': 'For each test case, print one integer — the index of the winner '
            'of the tournament.',
  'title': 'Playoff',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1651/A'},
 {'history': 'There is a classroom with two rows of computers. There are n '
             'computers in each row and each computer has its own grade. '
             'Computers in the first row has grades a_ 1, a_ 2, . . . , a_ n '
             'and in the second row — b_ 1, b_ 2, . . . , b_ n . Initially, '
             'all pairs of neighboring computers in each row are connected by '
             'wire ( pairs ( i, i + 1) for all 1 ≤ i < n ) , so two rows form '
             'two independent computer networks. Your task is to combine them '
             'in one common network by connecting one or more pairs of '
             'computers from different rows. Connecting the i - th computer '
             'from the first row and the j - th computer from the second row '
             'costs | a_ i - b_ j| . You can connect one computer to several '
             'other computers, but you need to provide at least a basic fault '
             'tolerance: you need to connect computers in such a way that the '
             'network stays connected, despite one of its computer failing. In '
             'other words, if one computer is broken ( no matter which one) , '
             "the network won' t split in two or more parts. That is the "
             'minimum total cost to make a fault- tolerant network?',
  'input': 'The first line contains a single integer t ( 1 ≤ t ≤ 10^ 4 ) — the '
           'number of test cases. Next t cases follow. The first line of each '
           'test case contains the single integer n ( 3 ≤ n ≤ 2 · 10^ 5 ) — '
           'the number of computers in each row. The second line contains n '
           'integers a_ 1, a_ 2, . . . , a_ n ( 1 ≤ a_ i ≤ 10^ 9 ) — the '
           'grades of computers in the first row. The third line contains n '
           'integers b_ 1, b_ 2, . . . , b_ n ( 1 ≤ b_ i ≤ 10^ 9 ) — the '
           "grades of computers in the second row. It' s guaranteed that the "
           "total sum of n doesn' t exceed 2 · 10^ 5 .",
  'note': "In the first test case, it' s optimal to connect four pairs of "
          'computers: computer 1 from the first row with computer 2 from the '
          'second row: cost | 1 - 4| = 3 ; computer 3 from the first row with '
          'computer 2 from the second row: cost | 1 - 4| = 3 ; computer 2 from '
          'the first row with computer 1 from the second row: cost | 10 - 20| '
          '= 10 ; computer 2 from the first row with computer 3 from the '
          'second row: cost | 10 - 25| = 15 ; In total, 3 + 3 + 10 + 15 = 31 . '
          "In the second test case, it' s optimal to connect 1 from the first "
          'row with 1 from the second row, and 4 from the first row with 4 '
          'from the second row.',
  'output': 'For each test case, print a single integer — the minimum total '
            'cost to make a fault- tolerant network.',
  'title': 'Fault-tolerant Network',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1651/C'},
 {'history': 'There are n pieces of cake on a line. The i- th piece of cake '
             'has weight ai ( 1≤i≤n) . The tastiness of the cake is the '
             'maximum total weight of two adjacent pieces of cake ( i. e. , '
             'max( a1+ a2, a2+ a3, . . . , an−1+ an) ) . You want to maximize '
             'the tastiness of the cake. You are allowed to do the following '
             'operation at most once ( doing more operations would ruin the '
             'cake) : Choose a contiguous subsegment a[ l, r] of pieces of '
             'cake ( 1≤l≤r≤n) , and reverse it. The subsegment a[ l, r] of the '
             'array a is the sequence al, al+ 1, . . . , ar. If you reverse '
             'it, the array will become a1, a2, . . . , al−2, al−1, ar_ , '
             'ar−1_ , . . . _ , al+ 1_ , al_ , ar+ 1, ar+ 2, . . . , an−1, an. '
             'For example, if the weights are initially [ 5, 2, 1, 4, 7, 3] , '
             'you can reverse the subsegment a[ 2, 5] , getting [ 5, 7_ , 4_ , '
             '1_ , 2_ , 3] . The tastiness of the cake is now 5+ 7= 12 ( while '
             'before the operation the tastiness was 4+ 7= 11) . Find the '
             'maximum tastiness of the cake after doing the operation at most '
             'once.',
  'input': 'The first line contains a single integer t ( 1≤t≤50) — the number '
           'of test cases. The first line of each test case contains a single '
           'integer n ( 2≤n≤1000) — the number of pieces of cake. The second '
           'line of each test case contains n integers a1, a2, . . . , an ( '
           '1≤ai≤109) — ai is the weight of the i- th piece of cake.',
  'note': 'In the first test case, after reversing the subsegment a[ 2, 5] , '
          'you get a cake with weights [ 5, 7_ , 4_ , 1_ , 2_ , 3] . The '
          'tastiness of the cake is now max( 5+ 7, 7+ 4, 4+ 1, 1+ 2, 2+ 3) = '
          '12. This is the maximum possible tastiness of the cake one can '
          'obtain by performing the operation at most once. In the second test '
          "case, it' s optimal not to do any operation. The tastiness is 78+ "
          '78= 156. In the third test case, after reversing the subsegment a[ '
          '1, 2] , you get a cake with weights [ 54_ , 69_ , 91] . The '
          'tastiness of the cake is now max( 54+ 69, 69+ 91) = 160. There is '
          'no way to make the tastiness of the cake greater than 160 by '
          'performing at most one operation.',
  'output': 'For each test case, print a single integer: the maximum tastiness '
            'of the cake after doing the operation at most once.',
  'title': 'Maximum Cake Tastiness',
  'topics': ['implementation', 'sortings'],
  'url': 'https://codeforces.com/problemset/problem/1654/A'},
 {'history': 'You are given a string s consisting of lowercase letters of the '
             'English alphabet. You must perform the following algorithm on s: '
             'Let x be the length of the longest prefix of s which occurs '
             'somewhere else in s as a contiguous substring ( the other '
             'occurrence may also intersect the prefix) . If x= 0, break. '
             'Otherwise, remove the first x characters of s, and repeat. A '
             'prefix is a string consisting of several first letters of a '
             'given string, without any reorders. An empty prefix is also a '
             'valid prefix. For example, the string " abcd" has 5 prefixes: '
             'empty string, " a" , " ab" , " abc" and " abcd" . For instance, '
             'if we perform the algorithm on s= " abcabdc" , Initially, " ab" '
             'is the longest prefix that also appears somewhere else as a '
             'substring in s, so s= " cabdc" after 1 operation. Then, " c" is '
             'the longest prefix that also appears somewhere else as a '
             'substring in s, so s= " abdc" after 2 operations. Now x= 0 ( '
             'because there are no non- empty prefixes of " abdc" that also '
             'appear somewhere else as a substring in s) , so the algorithm '
             'terminates. Find the final state of the string after performing '
             'the algorithm.',
  'input': 'The first line contains a single integer t ( 1≤t≤104) — the number '
           'of test cases. This is followed by t lines, each containing a '
           'description of one test case. Each line contains a string s. The '
           'given strings consist only of lowercase letters of the English '
           'alphabet and have lengths between 1 and 2⋅105 inclusive. It is '
           'guaranteed that the sum of the lengths of s over all test cases '
           'does not exceed 2⋅105.',
  'note': 'The first test case is explained in the statement. In the second '
          'test case, no operations can be performed on s. In the third test '
          'case, Initially, s= " bbbbbbbbbb" . After 1 operation, s= " b" . In '
          'the fourth test case, Initially, s= " codeforces" . After 1 '
          'operation, s= " odeforces" . After 2 operations, s= " deforces" .',
  'output': 'For each test case, print a single line containing the string s '
            'after executing the algorithm. It can be shown that such string '
            'is non- empty.',
  'title': 'Prefix Removals',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1654/B'},
 {'history': 'Alice has a cake, and she is going to cut it. She will perform '
             'the following operation n−1 times: choose a piece of the cake ( '
             'initially, the cake is all one piece) with weight w≥2 and cut it '
             'into two smaller pieces of weight ⌊w2⌋ and ⌈w2⌉ ( ⌊x⌋ and ⌈x⌉ '
             'denote floor and ceiling functions, respectively) . After '
             'cutting the cake in n pieces, she will line up these n pieces on '
             'a table in an arbitrary order. Let ai be the weight of the i- th '
             'piece in the line. You are given the array a. Determine whether '
             'there exists an initial weight and sequence of operations which '
             'results in a.',
  'input': 'The first line contains a single integer t ( 1≤t≤104) — the number '
           'of test cases. The first line of each test case contains a single '
           'integer n ( 1≤n≤2⋅105) . The second line of each test case '
           'contains n integers a1, a2, . . . , an ( 1≤ai≤109) . It is '
           'guaranteed that the sum of n for all test cases does not exceed '
           '2⋅105.',
  'note': "In the first test case, it' s possible to get the array a by "
          'performing 0 operations on a cake with weight 327. In the second '
          "test case, it' s not possible to get the array a. In the third test "
          "case, it' s possible to get the array a by performing 1 operation "
          'on a cake with weight 1970429473: Cut it in half, so that the '
          'weights are [ 985214736, 985214737] . Note that the starting weight '
          "can be greater than 109. In the fourth test case, it' s possible to "
          'get the array a by performing 2 operations on a cake with weight 6: '
          'Cut it in half, so that the weights are [ 3, 3] . Cut one of the '
          'two pieces with weight 3, so that the new weights are [ 1, 2, 3] '
          'which is equivalent to [ 2, 3, 1] up to reordering.',
  'output': 'For each test case, print a single line: print YES if the array a '
            "could have resulted from Alice' s operations, otherwise print NO. "
            'You may print each letter in any case ( for example, YES, Yes, '
            'yes, yEs will all be recognized as positive answer) .',
  'title': 'Alice and the Cake',
  'topics': ['implementation', 'sortings'],
  'url': 'https://codeforces.com/problemset/problem/1654/C'},
 {'history': 'You are given an integer n and a string s consisting of 2n '
             'lowercase letters of the English alphabet. The characters of the '
             'string s are s0s1s2⋯s2n−1. A string t of length 2n ( whose '
             'characters are denoted by t0t1t2⋯t2n−1) is a xoration of s if '
             'there exists an integer j ( 0≤j≤2n−1) such that, for each '
             '0≤i≤2n−1, ti= si⊕j ( where ⊕ denotes the operation bitwise XOR) '
             '. Find the lexicographically minimal xoration of s. A string a '
             'is lexicographically smaller than a string b if and only if one '
             'of the following holds: a is a prefix of b, but a= ̸b; in the '
             'first position where a and b differ, the string a has a letter '
             'that appears earlier in the alphabet than the corresponding '
             'letter in b.',
  'input': 'The first line contains a single integer n ( 1≤n≤18) . The second '
           'line contains a string s consisting of 2n lowercase letters of the '
           'English alphabet.',
  'note': 'In the first test, the lexicographically minimal xoration t of s= " '
          'acba" is " abca" . It\' s a xoration because, for j= 3, t0= s0⊕j= '
          's3= " a" ; t1= s1⊕j= s2= " b" ; t2= s2⊕j= s1= " c" ; t3= s3⊕j= s0= '
          '" a" . There isn\' t any xoration of s lexicographically smaller '
          'than " abca" . In the second test, the minimal string xoration '
          'corresponds to choosing j= 4 in the definition of xoration. In the '
          'third test, the minimal string xoration corresponds to choosing j= '
          '11 in the definition of xoration. In the fourth test, the minimal '
          'string xoration corresponds to choosing j= 10 in the definition of '
          'xoration. In the fifth test, the minimal string xoration '
          'corresponds to choosing either j= 0 or j= 1 in the definition of '
          'xoration.',
  'output': 'Print a single line containing the lexicographically minimal '
            'xoration of s.',
  'title': 'Minimal String Xoration',
  'topics': ['sortings', 'strings'],
  'url': 'https://codeforces.com/problemset/problem/1654/F'},
 {'history': 'You are given an array a1, a2, . . . , an of positive integers. '
             'A good pair is a pair of indices ( i, j) with 1≤i, j≤n such '
             'that, for all 1≤k≤n, the following equality holds: | ai−ak| + | '
             'ak−aj| = | ai−aj| , where | x| denotes the absolute value of x. '
             'Find a good pair. Note that i can be equal to j.',
  'input': 'The input consists of multiple test cases. The first line contains '
           'a single integer t ( 1≤t≤1000) — the number of test cases. '
           'Description of the test cases follows. The first line of each test '
           'case contains an integer n ( 1≤n≤105) — the length of the array. '
           'The second line of each test case contains n integers a1, a2, . . '
           '. , an ( 1≤ai≤109) where ai is the i- th element of the array. The '
           'sum of n for all test cases is at most 2⋅105.',
  'note': 'In the first case, for i= 2 and j= 3 the equality holds true for '
          'all k: k= 1: | a2−a1| + | a1−a3| = | 2−5| + | 5−7| = 5= | 2−7| = | '
          'a2−a3| , k= 2: | a2−a2| + | a2−a3| = | 2−2| + | 2−7| = 5= | 2−7| = '
          '| a2−a3| , k= 3: | a2−a3| + | a3−a3| = | 2−7| + | 7−7| = 5= | 2−7| '
          '= | a2−a3| .',
  'output': 'For each test case, print a single line with two space- separated '
            'indices i and j which form a good pair of the array. The case i= '
            'j is allowed. It can be shown that such a pair always exists. If '
            'there are multiple good pairs, print any of them.',
  'title': 'Good Pairs',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1656/A'},
 {'history': 'You are given an array of n non- negative integers a1, a2, . . . '
             ', an. You can make the following operation: choose an integer '
             'x≥2 and replace each number of the array by the remainder when '
             'dividing that number by x, that is, for all 1≤i≤n set ai to '
             'aimodx. Determine if it is possible to make all the elements of '
             'the array equal by applying the operation zero or more times.',
  'input': 'The input consists of multiple test cases. The first line contains '
           'a single integer t ( 1≤t≤104) — the number of test cases. '
           'Description of the test cases follows. The first line of each test '
           'case contains an integer n ( 1≤n≤105) — the length of the array. '
           'The second line of each test case contains n integers a1, a2, . . '
           '. , an ( 0≤ai≤109) where ai is the i- th element of the array. The '
           'sum of n for all test cases is at most 2⋅105.',
  'note': 'In the first test case, one can apply the operation with x= 3 to '
          'obtain the array [ 2, 2, 0, 2] , and then apply the operation with '
          'x= 2 to obtain [ 0, 0, 0, 0] . In the second test case, all numbers '
          'are already equal. In the fourth test case, applying the operation '
          'with x= 4 results in the array [ 1, 1, 1, 1] .',
  'output': 'For each test case, print a line with YES if you can make all '
            'elements of the list equal by applying the operation. Otherwise, '
            'print NO. You may print each letter in any case ( for example, " '
            'YES" , " Yes" , " yes" , " yEs" will all be recognized as a '
            'positive answer) .',
  'title': 'Make Equal With Mod',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1656/C'},
 {'history': 'You are given n integers a1, a2, . . . , an. For any real number '
             't, consider the complete weighted graph on n vertices Kn( t) '
             'with weight of the edge between vertices i and j equal to wij( '
             't) = ai⋅aj+ t⋅( ai+ aj) . Let f( t) be the cost of the minimum '
             'spanning tree of Kn( t) . Determine whether f( t) is bounded '
             'above and, if so, output the maximum value it attains.',
  'input': 'The input consists of multiple test cases. The first line contains '
           'a single integer T ( 1≤T≤104) — the number of test cases. '
           'Description of the test cases follows. The first line of each test '
           'case contains an integer n ( 2≤n≤2⋅105) — the number of vertices '
           'of the graph. The second line of each test case contains n '
           'integers a1, a2, . . . , an ( −106≤ai≤106) . The sum of n for all '
           'test cases is at most 2⋅105.',
  'note': ' ',
  'output': 'For each test case, print a single line with the maximum value of '
            'f( t) ( it can be shown that it is an integer) , or INF if f( t) '
            'is not bounded above.',
  'title': 'Parametric MST',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1656/F'},
 {'history': "You are given a bracket sequence consisting of n characters ' ( "
             "' and/ or ) ' . You perform several operations with it. During "
             'one operation, you choose the shortest prefix of this string ( '
             'some amount of first characters of the string) that is good and '
             'remove it from the string. The prefix is considered good if one '
             'of the following two conditions is satisfied: this prefix is a '
             'regular bracket sequence; this prefix is a palindrome of length '
             'at least two. A bracket sequence is called regular if it is '
             'possible to obtain a correct arithmetic expression by inserting '
             "characters ' + ' and ' 1' into this sequence. For example, "
             'sequences ( ( ) ) ( ) , ( ) and ( ( ) ( ( ) ) ) are regular, '
             'while ) ( , ( ( ) and ( ( ) ) ) ( are not. The bracket sequence '
             'is called palindrome if it reads the same back and forth. For '
             'example, the bracket sequences ) ) , ( ( and ) ( ( ) are '
             'palindromes, while bracket sequences ( ) , ) ( and ) ) ( are not '
             "palindromes. You stop performing the operations when it' s not "
             'possible to find a good prefix. Your task is to find the number '
             'of operations you will perform on the given string and the '
             'number of remaining characters in the string. You have to answer '
             't independent test cases.',
  'input': 'The first line of the input contains one integer t ( 1 ≤ t ≤ 10^ 4 '
           ') — the number of test cases. The next 2t lines describe test '
           'cases. The first line of the test case contains one integer n ( 1 '
           '≤ n ≤ 5 · 10^ 5 ) — the length of the bracket sequence. The second '
           "line of the test case contains n characters ' ( ' and/ or ' ) ' — "
           'the bracket sequence itself. It is guaranteed that the sum of n '
           'over all test cases do not exceed 5 · 10^ 5 ( ∑ n ≤ 5 · 10^ 5 ) .',
  'note': ' ',
  'output': 'For each test case, print two integers c and r — the number of '
            'operations you will perform on the given bracket sequence and the '
            'number of characters that remain in the string after performing '
            'all operations.',
  'title': 'Bracket Sequence Deletion',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1657/C'},
 {'history': 'Monocarp is playing a strategy game. In the game, he recruits a '
             'squad to fight monsters. Before each battle, Monocarp has C '
             'coins to spend on his squad. Before each battle starts, his '
             'squad is empty. Monocarp chooses one type of units and recruits '
             'no more units of that type than he can recruit with C coins. '
             'There are n types of units. Every unit type has three '
             'parameters: ci — the cost of recruiting one unit of the i- th '
             'type; di — the damage that one unit of the i- th type deals in a '
             'second; hi — the amount of health of one unit of the i- th type. '
             'Monocarp has to face m monsters. Every monster has two '
             'parameters: Dj — the damage that the j- th monster deals in a '
             'second; Hj — the amount of health the j- th monster has. '
             'Monocarp has to fight only the j- th monster during the j- th '
             'battle. He wants all his recruited units to stay alive. Both '
             "Monocarp' s squad and the monster attack continuously ( not once "
             'per second) and at the same time. Thus, Monocarp wins the battle '
             'if and only if his squad kills the monster strictly faster than '
             'the monster kills one of his units. The time is compared with no '
             'rounding. For each monster, Monocarp wants to know the minimum '
             'amount of coins he has to spend to kill that monster. If this '
             "amount is greater than C, then report that it' s impossible to "
             'kill that monster.',
  'input': 'The first line contains two integers n and C ( 1≤n≤3⋅105; 1≤C≤106) '
           '— the number of types of units and the amount of coins Monocarp '
           'has before each battle. The i- th of the next n lines contains '
           'three integers ci, di and hi ( 1≤ci≤C; 1≤di, hi≤106) . The next '
           'line contains a single integer m ( 1≤m≤3⋅105) — the number of '
           'monsters that Monocarp has to face. The j- th of the next m lines '
           'contains two integers Dj and Hj ( 1≤Dj≤106; 1≤Hj≤1012) .',
  'note': "Consider the first monster of the first example. Monocarp can' t "
          'recruit one unit of the first type, because it will take both him '
          'and the monster 0. 75 seconds to kill each other. He can recruit '
          'two units for the cost of 6 coins and kill the monster in 0. 375 '
          'second. Monocarp can recruit one unit of the second type, because '
          'he kills the monster in 0. 6 seconds, and the monster kills him in '
          '0. 625 seconds. The unit is faster. Thus, 5 coins is enough. '
          'Monocarp will need at least three units of the third type to kill '
          'the first monster, that will cost 30 coins. Monocarp will spend the '
          'least coins if he chooses the second type of units and recruits one '
          'unit of that type.',
  'output': 'Print m integers. For each monster, print the minimum amount of '
            'coins Monocarp has to spend to kill that monster. If this amount '
            'is greater than C, then print −1.',
  'title': 'For Gamers. By Gamers.',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1657/D'},
 {'history': 'Today, Marin is at a cosplay exhibition and is preparing for a '
             'group photoshoot! For the group picture, the cosplayers form a '
             'horizontal line. A group picture is considered beautiful if for '
             'every contiguous segment of at least 2 cosplayers, the number of '
             'males does not exceed the number of females ( obviously) . '
             'Currently, the line has n cosplayers which can be described by a '
             'binary string s . The i - th cosplayer is male if s_ i = 0 and '
             'female if s_ i = 1 . To ensure that the line is beautiful, you '
             'can invite some additional cosplayers ( possibly zero) to join '
             "the line at any position. You can' t remove any cosplayer from "
             'the line. Marin wants to know the minimum number of cosplayers '
             'you need to invite so that the group picture of all the '
             "cosplayers is beautiful. She can' t do this on her own, so she' "
             's asking you for help. Can you help her?',
  'input': 'The first line contains a single integer t ( 1 ≤ t ≤ 10^ 3 ) — the '
           'number of test cases. The first line of each test case contains a '
           'positive integer n ( 1 ≤ n ≤ 100 ) — the number of cosplayers in '
           'the initial line. The second line of each test case contains a '
           'binary string s of length n — describing the cosplayers already in '
           'line. Each character of the string is either 0 describing a male, '
           'or 1 describing a female. Note that there is no limit on the sum '
           'of n .',
  'note': 'In the first test case, for each pair of adjacent cosplayers, you '
          'can invite two female cosplayers to stand in between them. Then, '
          '000 → 0110110 . In the third test case, you can invite one female '
          'cosplayer to stand next to the second cosplayer. Then, 010 → 0110 .',
  'output': 'For each test case, print the minimum number of cosplayers you '
            'need to invite so that the group picture of all the cosplayers is '
            'beautiful.',
  'title': 'Marin and Photoshoot',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1658/A'},
 {'history': 'Marin feels exhausted after a long day of cosplay, so Gojou '
             'invites her to play a game! Marin and Gojou take turns to place '
             'one of their tokens on an n×n grid with Marin starting first. '
             'There are some restrictions and allowances on where to place '
             'tokens: Apart from the first move, the token placed by a player '
             'must be more than Manhattan distance k away from the previous '
             'token placed on the matrix. In other words, if a player places a '
             'token at ( x1, y1) , then the token placed by the other player '
             'in the next move must be in a cell ( x2, y2) satisfying | x2−x1| '
             '+ | y2−y1| > k. Apart from the previous restriction, a token can '
             'be placed anywhere on the matrix, including cells where tokens '
             'were previously placed by any player. Whenever a player places a '
             'token on cell ( x, y) , that player gets vx, y points. All '
             'values of v on the grid are distinct. You still get points from '
             'a cell even if tokens were already placed onto the cell. The '
             'game finishes when each player makes 10100 moves. Marin and '
             'Gojou will play n2 games. For each cell of the grid, there will '
             'be exactly one game where Marin places a token on that cell on '
             'her first move. Please answer for each game, if Marin and Gojou '
             "play optimally ( after Marin' s first move) , who will have more "
             'points at the end? Or will the game end in a draw ( both players '
             'have the same points at the end) ?',
  'input': 'The first line contains two integers n, k ( 3≤n≤2000, 1≤k≤n−2) . '
           'Note that under these constraints it is always possible to make a '
           'move. The following n lines contains n integers each. The j- th '
           'integer in the i- th line is vi, j ( 1≤vi, j≤n2) . All elements in '
           'v are distinct.',
  'note': ' ',
  'output': 'You should print n lines. In the i- th line, print n characters, '
            'where the j- th character is the result of the game in which '
            "Marin places her first token in the cell ( i, j) . Print ' M' if "
            "Marin wins, ' G' if Gojou wins, and ' D' if the game ends in a "
            'draw. Do not print spaces between the characters in one line.',
  'title': 'Gojou and Matrix Game',
  'topics': ['implementation', 'sortings'],
  'url': 'https://codeforces.com/problemset/problem/1658/E'},
 {'history': 'Team Red and Team Blue competed in a competitive FPS. Their '
             'match was streamed around the world. They played a series of n '
             'matches. In the end, it turned out Team Red won r times and Team '
             'Blue won b times. Team Blue was less skilled than Team Red, so b '
             'was strictly less than r . You missed the stream since you '
             'overslept, but you think that the match must have been neck and '
             'neck since so many people watched it. So you imagine a string of '
             'length n where the i - th character denotes who won the i - th '
             'match — it is R if Team Red won or B if Team Blue won. You '
             'imagine the string was such that the maximum number of times a '
             'team won in a row was as small as possible. For example, in the '
             'series of matches RBBRRRB, Team Red won 3 times in a row, which '
             'is the maximum. You must find a string satisfying the above '
             'conditions. If there are multiple answers, print any.',
  'input': 'The first line contains a single integer t ( 1 ≤ t ≤ 1000 ) — the '
           'number of test cases. Each test case has a single line containing '
           'three integers n , r , and b ( 3 ≤ n ≤ 100 ; 1 ≤ b < r ≤ n , r+ b= '
           'n ) .',
  'note': 'The first test case of the first example gives the optimal answer '
          'for the example in the statement. The maximum number of times a '
          'team wins in a row in RBRBRBR is 1 . We cannot minimize it any '
          'further. The answer for the second test case of the second example '
          'is RRBRBRBRBR. The maximum number of times a team wins in a row is '
          '2 , given by RR at the beginning. We cannot minimize the answer any '
          'further.',
  'output': 'For each test case, output a single line containing a string '
            'satisfying the given conditions. If there are multiple answers, '
            'print any.',
  'title': 'Red Versus Blue',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1659/A'},
 {'history': 'You are given a binary string of length n. You have exactly k '
             'moves. In one move, you must select a single bit. The state of '
             'all bits except that bit will get flipped ( 0 becomes 1, 1 '
             'becomes 0) . You need to output the lexicographically largest '
             'string that you can get after using all k moves. Also, output '
             'the number of times you will select each bit. If there are '
             'multiple ways to do this, you may output any of them. A binary '
             'string a is lexicographically larger than a binary string b of '
             'the same length, if and only if the following holds: in the '
             'first position where a and b differ, the string a contains a 1, '
             'and the string b contains a 0.',
  'input': 'The first line contains a single integer t ( 1≤t≤1000) — the '
           'number of test cases. Each test case has two lines. The first line '
           'has two integers n and k ( 1≤n≤2⋅105; 0≤k≤109) . The second line '
           'has a binary string of length n, each character is either 0 or 1. '
           'The sum of n over all test cases does not exceed 2⋅105.',
  'note': 'Here is the explanation for the first testcase. Each step shows how '
          'the binary string changes in a move. Choose bit 1: 1_ 00001→1_ '
          '11110. Choose bit 4: 1111_ 10→0001_ 01. Choose bit 4: 0001_ '
          '01→1111_ 10. The final string is 111110 and this is the '
          'lexicographically largest string we can get.',
  'output': 'For each test case, output two lines. The first line should '
            'contain the lexicographically largest string you can obtain. The '
            'second line should contain n integers f1, f2, . . . , fn, where '
            'fi is the number of times the i- th bit is selected. The sum of '
            'all the integers must be equal to k.',
  'title': 'Bit Flipping',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1659/B'},
 {'history': 'You are an ambitious king who wants to be the Emperor of The '
             'Reals. But to do that, you must first become Emperor of The '
             'Integers. Consider a number axis. The capital of your empire is '
             'initially at 0 . There are n unconquered kingdoms at positions '
             '0< x_ 1< x_ 2< . . . < x_ n . You want to conquer all other '
             'kingdoms. There are two actions available to you: You can change '
             'the location of your capital ( let its current position be c_ 1 '
             ') to any other conquered kingdom ( let its position be c_ 2 ) at '
             'a cost of a· | c_ 1- c_ 2| . From the current capital ( let its '
             'current position be c_ 1 ) you can conquer an unconquered '
             'kingdom ( let its position be c_ 2 ) at a cost of b· | c_ 1- c_ '
             '2| . You cannot conquer a kingdom if there is an unconquered '
             'kingdom between the target and your capital. Note that you '
             'cannot place the capital at a point without a kingdom. In other '
             'words, at any point, your capital can only be at 0 or one of x_ '
             '1, x_ 2, . . . , x_ n . Also note that conquering a kingdom does '
             'not change the position of your capital. Find the minimum total '
             'cost to conquer all kingdoms. Your capital can be anywhere at '
             'the end.',
  'input': 'The first line contains a single integer t ( 1 ≤ t ≤ 1000 ) — the '
           'number of test cases. The description of each test case follows. '
           'The first line of each test case contains 3 integers n , a , and b '
           '( 1 ≤ n ≤ 2 · 10^ 5 ; 1 ≤ a, b ≤ 10^ 5 ) . The second line of each '
           'test case contains n integers x_ 1, x_ 2, . . . , x_ n ( 1 ≤ x_ 1 '
           '< x_ 2 < . . . < x_ n ≤ 10^ 8 ) . The sum of n over all test cases '
           'does not exceed 2 · 10^ 5 .',
  'note': 'Here is an optimal sequence of moves for the second test case: '
          'Conquer the kingdom at position 1 with cost 3·( 1- 0) = 3 . Move '
          'the capital to the kingdom at position 1 with cost 6·( 1- 0) = 6 . '
          'Conquer the kingdom at position 5 with cost 3·( 5- 1) = 12 . Move '
          'the capital to the kingdom at position 5 with cost 6·( 5- 1) = 24 . '
          'Conquer the kingdom at position 6 with cost 3·( 6- 5) = 3 . Conquer '
          'the kingdom at position 21 with cost 3·( 21- 5) = 48 . Conquer the '
          'kingdom at position 30 with cost 3·( 30- 5) = 75 . The total cost '
          'is 3+ 6+ 12+ 24+ 3+ 48+ 75= 171 . You cannot get a lower cost than '
          'this.',
  'output': 'For each test case, output a single integer — the minimum cost to '
            'conquer all kingdoms.',
  'title': 'Line Empire',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1659/C'},
 {'history': 'Suppose you had an array A of n elements, each of which is 0 or '
             '1 . Let us define a function f( k, A) which returns another '
             'array B , the result of sorting the first k elements of A in '
             'non- decreasing order. For example, f( 4, [ 0, 1, 1, 0, 0, 1, 0] '
             ') = [ 0, 0, 1, 1, 0, 1, 0] . Note that the first 4 elements were '
             'sorted. Now consider the arrays B_ 1, B_ 2, . . . , B_ n '
             'generated by f( 1, A) , f( 2, A) , . . . , f( n, A) . Let C be '
             'the array obtained by taking the element- wise sum of B_ 1, B_ '
             '2, . . . , B_ n . For example, let A= [ 0, 1, 0, 1] . Then we '
             'have B_ 1= [ 0, 1, 0, 1] , B_ 2= [ 0, 1, 0, 1] , B_ 3= [ 0, 0, '
             '1, 1] , B_ 4= [ 0, 0, 1, 1] . Then C= B_ 1+ B_ 2+ B_ 3+ B_ 4= [ '
             '0, 1, 0, 1] + [ 0, 1, 0, 1] + [ 0, 0, 1, 1] + [ 0, 0, 1, 1] = [ '
             '0, 2, 2, 4] . You are given C . Determine a binary array A that '
             'would give C when processed as above. It is guaranteed that an '
             'array A exists for given C in the input.',
  'input': 'The first line contains a single integer t ( 1 ≤ t ≤ 1000 ) — the '
           'number of test cases. Each test case has two lines. The first line '
           'contains a single integer n ( 1 ≤ n ≤ 2 · 10^ 5 ) . The second '
           'line contains n integers c_ 1, c_ 2, . . . , c_ n ( 0 ≤ c_ i ≤ n ) '
           '. It is guaranteed that a valid array A exists for the given C . '
           'The sum of n over all test cases does not exceed 2 · 10^ 5 .',
  'note': "Here' s the explanation for the first test case. Given that A= [ 1, "
          '1, 0, 1] , we can construct each B_ i : B_ 1= [ 1, 1, 0, 1] ; B_ 2= '
          '[ 1, 1, 0, 1] ; B_ 3= [ 0, 1, 1, 1] ; B_ 4= [ 0, 1, 1, 1] And then, '
          'we can sum up each column above to get C= [ 1+ 1+ 0+ 0, 1+ 1+ 1+ 1, '
          '0+ 0+ 1+ 1, 1+ 1+ 1+ 1] = [ 2, 4, 2, 4] .',
  'output': 'For each test case, output a single line containing n integers a_ '
            '1, a_ 2, . . . , a_ n ( a_ i is 0 or 1 ) . If there are multiple '
            'answers, you may output any of them.',
  'title': 'Reverse Sort Sum',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1659/D'},
 {'history': 'A string a= a1a2. . . an is called even if it consists of a '
             'concatenation ( joining) of strings of length 2 consisting of '
             'the same characters. In other words, a string a is even if two '
             'conditions are satisfied at the same time: its length n is even; '
             'for all odd i ( 1≤i≤n−1) , ai= ai+ 1 is satisfied. For example, '
             'the following strings are even: " " ( empty string) , " tt" , " '
             'aabb" , " oooo" , and " ttrrrroouuuuuuuukk" . The following '
             'strings are not even: " aaa" , " abab" and " abba" . Given a '
             'string s consisting of lowercase Latin letters. Find the minimum '
             'number of characters to remove from the string s to make it '
             'even. The deleted characters do not have to be consecutive.',
  'input': 'The first line of input data contains an integer t ( 1≤t≤104) —the '
           'number of test cases in the test. The descriptions of the test '
           'cases follow. Each test case consists of one string s ( 1≤| s| '
           '≤2⋅105) , where | s| — the length of the string s. The string '
           'consists of lowercase Latin letters. It is guaranteed that the sum '
           'of | s| on all test cases does not exceed 2⋅105.',
  'note': 'In the first test case you can remove the characters with indices '
          '6, 7, and 9 to get an even string " aabbddcc" . In the second test '
          'case, each character occurs exactly once, so in order to get an '
          'even string, you must remove all characters from the string. In the '
          'third test case, you can get an even string " aaaabb" by removing, '
          'for example, 4- th and 6- th characters, or a string " aabbbb" by '
          'removing the 5- th character and any of the first three.',
  'output': 'For each test case, print a single number — the minimum number of '
            'characters that must be removed to make s even.',
  'title': 'Get an Even String',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1660/C'},
 {'history': 'You are given an array a consisting of n integers. For each i ( '
             '1 ≤ i ≤ n ) the following inequality is true: - 2 ≤ a_ i ≤ 2 . '
             'You can remove any number ( possibly 0 ) of elements from the '
             'beginning of the array and any number ( possibly 0 ) of elements '
             'from the end of the array. You are allowed to delete the whole '
             'array. You need to answer the question: how many elements should '
             'be removed from the beginning of the array, and how many '
             'elements should be removed from the end of the array, so that '
             'the result will be an array whose product ( multiplication) of '
             'elements is maximal. If there is more than one way to get an '
             'array with the maximum product of elements on it, you are '
             'allowed to output any of them. The product of elements of an '
             'empty array ( array of length 0 ) should be assumed to be 1 .',
  'input': 'The first line of input data contains an integer t ( 1 ≤ t ≤ 10^ 4 '
           ') —the number of test cases in the test. Then the descriptions of '
           'the input test cases follow. The first line of each test case '
           'description contains an integer n ( 1 ≤ n ≤ 2 · 10^ 5 ) —the '
           'length of array a . The next line contains n integers a_ 1, a_ 2, '
           '. . . , a_ n ( | a_ i| ≤ 2 ) — elements of array a . It is '
           'guaranteed that the sum of n over all test cases does not exceed 2 '
           '· 10^ 5 .',
  'note': 'In the first case, the maximal value of the product is 2 . Thus, we '
          'can either delete the first three elements ( obtain array [ 2] ) , '
          'or the last two and one first element ( also obtain array [ 2] ) , '
          'or the last two elements ( obtain array [ 1, 2] ) . Thus, in the '
          'first case, the answers fit: " 3 0" , or " 1 2" , or " 0 2" . In '
          'the second case, the maximum value of the product is 1 . Then we '
          'can remove all elements from the array because the value of the '
          'product on the empty array will be 1 . So the answer is " 3 0" , '
          'but there are other possible answers. In the third case, we can '
          'remove the first two elements of the array. Then we get the array: '
          '[ - 2, 2, - 1] . The product of the elements of the resulting array '
          'is ( - 2) · 2 · ( - 1) = 4 . This value is the maximum possible '
          'value that can be obtained. Thus, for this case the answer is: " 2 '
          '0" .',
  'output': 'For each test case, output two non- negative numbers x and y ( 0 '
            '≤ x + y ≤ n ) — such that the product ( multiplication) of the '
            'array numbers, after removing x elements from the beginning and y '
            'elements from the end, is maximal. If there is more than one way '
            'to get the maximal product, it is allowed to output any of them. '
            'Consider the product of numbers on empty array to be 1 .',
  'title': 'Maximum Product Strikes Back',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1660/D'},
 {'history': 'You are given a binary matrix A of size n × n . Rows are '
             'numbered from top to bottom from 1 to n , columns are numbered '
             'from left to right from 1 to n . The element located at the '
             'intersection of row i and column j is called A_ ij . Consider a '
             'set of 4 operations: Cyclically shift all rows up. The row with '
             'index i will be written in place of the row i- 1 ( 2 ≤ i ≤ n ) , '
             'the row with index 1 will be written in place of the row n . '
             'Cyclically shift all rows down. The row with index i will be '
             'written in place of the row i+ 1 ( 1 ≤ i ≤ n - 1 ) , the row '
             'with index n will be written in place of the row 1 . Cyclically '
             'shift all columns to the left. The column with index j will be '
             'written in place of the column j- 1 ( 2 ≤ j ≤ n ) , the column '
             'with index 1 will be written in place of the column n . '
             'Cyclically shift all columns to the right. The column with index '
             'j will be written in place of the column j+ 1 ( 1 ≤ j ≤ n - 1 ) '
             ', the column with index n will be written in place of the column '
             '1 . The 3 × 3 matrix is shown on the left before the 3 - rd '
             'operation is applied to it, on the right — after. You can '
             'perform an arbitrary ( possibly zero) number of operations on '
             'the matrix; the operations can be performed in any order. After '
             'that, you can perform an arbitrary ( possibly zero) number of '
             'new xor- operations: Select any element A_ ij and assign it with '
             'new value A_ ij⊕ 1 . In other words, the value of ( A_ ij + 1) 2 '
             'will have to be written into element A_ ij . Each application of '
             'this xor- operation costs one burl. Note that the 4 shift '
             'operations — are free. These 4 operations can only be performed '
             'before xor- operations are performed. Output the minimum number '
             'of burles you would have to pay to make the A matrix unitary. A '
             'unitary matrix is a matrix with ones on the main diagonal and '
             'the rest of its elements are zeros ( that is, A_ ij = 1 if i = j '
             'and A_ ij = 0 otherwise) .',
  'input': 'The first line of the input contains an integer t ( 1 ≤ t ≤ 10^ 4 '
           ') —the number of test cases in the test. The descriptions of the '
           'test cases follow. Before each test case, an empty line is written '
           'in the input. The first line of each test case contains a single '
           'number n ( 1 ≤ n ≤ 2000 ) This is followed by n lines, each '
           'containing exactly n characters and consisting only of zeros and '
           'ones. These lines describe the values in the elements of the '
           'matrix. It is guaranteed that the sum of n^ 2 values over all test '
           'cases does not exceed 4 · 10^ 6 .',
  'note': 'In the first test case, you can do the following: first, shift all '
          'the rows down cyclically, then the main diagonal of the matrix will '
          'contain only " 1" . Then it will be necessary to apply xor- '
          'operation to the only " 1" that is not on the main diagonal. In the '
          'second test case, you can make a unitary matrix by applying the '
          'operation 2 — cyclic shift of rows upward twice to the matrix.',
  'output': 'For each test case, output the minimum number of burles you would '
            'have to pay to make the A matrix unitary. In other words, print '
            'the minimum number of xor- operations it will take after applying '
            'cyclic shifts to the matrix for the A matrix to become unitary.',
  'title': 'Matrix and Shifts',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1660/E'},
 {'history': 'This is the easy version of Problem F. The only difference '
             'between the easy version and the hard version is the '
             'constraints. We will call a non- empty string balanced if it '
             'contains the same number of plus and minus signs. For example: '
             'strings " + –+ " and " + + - + –" are balanced, and strings " + '
             '–" , " –" and " " are not balanced. We will call a string '
             'promising if the string can be made balanced by several ( '
             'possibly zero) uses of the following operation: replace two '
             'adjacent minus signs with one plus sign. In particular, every '
             'balanced string is promising. However, the converse is not true: '
             'not every promising string is balanced. For example, the string '
             '" - + —" is promising, because you can replace two adjacent '
             'minuses with plus and get a balanced string " - + + - " , or get '
             'another balanced string " - + - + " . How many non- empty '
             'substrings of the given string s are promising? Each non- empty '
             'promising substring must be counted in the answer as many times '
             'as it occurs in string s. Recall that a substring is a sequence '
             'of consecutive characters of the string. For example, for string '
             '" + - + " its substring are: " + - " , " - + " , " + " , " + - + '
             '" ( the string is a substring of itself) and some others. But '
             'the following strings are not its substring: " –" , " + + " , " '
             '- + + " .',
  'input': 'The first line of the input contains an integer t ( 1≤t≤500) —the '
           'number of test cases in the test. Then the descriptions of test '
           'cases follow. Each test case of input data consists of two lines. '
           'The first line consists of the number n ( 1≤n≤3000) : the length '
           'of s. The second line of the test case contains the string s of '
           'length n, consisting only of characters " + " and " - " . It is '
           'guaranteed that the sum of values n over all test cases does not '
           'exceed 3000.',
  'note': 'The following are the promising substrings for the first three test '
          'cases in the example: s[ 1. . . 2] = " + - " , s[ 2. . . 3] = " - + '
          '" ; s[ 1. . . 2] = " - + " , s[ 2. . . 3] = " + - " , s[ 1. . . 5] '
          '= " - + —" , s[ 3. . . 5] = " —" ; s[ 1. . . 3] = " —" , s[ 2. . . '
          '4] = " —" .',
  'output': 'For each test case, print a single number: the number of the '
            'promising non- empty substrings of string s. Each non- empty '
            'promising substring must be counted in the answer as many times '
            'as it occurs in string s.',
  'title': 'Promising String (easy version)',
  'topics': ['implementation', 'strings'],
  'url': 'https://codeforces.com/problemset/problem/1660/F1'},
 {'history': 'This is the hard version of Problem F. The only difference '
             'between the easy version and the hard version is the '
             'constraints. We will call a non- empty string balanced if it '
             'contains the same number of plus and minus signs. For example: '
             'strings " + –+ " and " + + - + –" are balanced, and strings " + '
             '–" , " –" and " " are not balanced. We will call a string '
             'promising if the string can be made balanced by several ( '
             'possibly zero) uses of the following operation: replace two '
             'adjacent minus signs with one plus sign. In particular, every '
             'balanced string is promising. However, the converse is not true: '
             'not every promising string is balanced. For example, the string '
             '" - + —" is promising, because you can replace two adjacent '
             'minuses with plus and get a balanced string " - + + - " , or get '
             'another balanced string " - + - + " . How many non- empty '
             'substrings of the given string s are promising? Each non- empty '
             'promising substring must be counted in the answer as many times '
             'as it occurs in string s. Recall that a substring is a sequence '
             'of consecutive characters of the string. For example, for string '
             '" + - + " its substring are: " + - " , " - + " , " + " , " + - + '
             '" ( the string is a substring of itself) and some others. But '
             'the following strings are not its substring: " –" , " + + " , " '
             '- + + " .',
  'input': 'The first line of the input contains an integer t ( 1≤t≤104) —the '
           'number of test cases in the test. Then the descriptions of test '
           'cases follow. Each test case of input data consists of two lines. '
           'The first line consists of the number n ( 1≤n≤2⋅105) : the length '
           'of s. The second line of the test case contains the string s of '
           'length n, consisting only of characters " + " and " - " . It is '
           'guaranteed that the sum of values n over all test cases does not '
           'exceed 2⋅105.',
  'note': 'The following are the promising substrings for the first three test '
          'cases in the example: s[ 1. . . 2] = " + - " , s[ 2. . . 3] = " - + '
          '" ; s[ 1. . . 2] = " - + " , s[ 2. . . 3] = " + - " , s[ 1. . . 5] '
          '= " - + —" , s[ 3. . . 5] = " —" ; s[ 1. . . 3] = " —" , s[ 2. . . '
          '4] = " —" .',
  'output': 'For each test case, print a single number: the number of the '
            'promising non- empty substrings of string s. Each non- empty '
            'promising substring must be counted in the answer as many times '
            'as it occurs in string s.',
  'title': 'Promising String (hard version)',
  'topics': ['implementation', 'strings'],
  'url': 'https://codeforces.com/problemset/problem/1660/F2'},
 {'history': "Gianni, SWERC' s chief judge, received a huge amount of high "
             'quality problems from the judges and now he has to choose a '
             'problem set for SWERC. He received n problems and he assigned a '
             'beauty score and a difficulty to each of them. The i - th '
             'problem has beauty score equal to b_ i and difficulty equal to '
             'd_ i . The beauty and the difficulty are integers between 1 and '
             '10 . If there are no problems with a certain difficulty ( the '
             'possible difficulties are 1, 2, . . . , 10 ) then Gianni will '
             'ask for more problems to the judges. Otherwise, for each '
             'difficulty between 1 and 10 , he will put in the problem set one '
             'of the most beautiful problems with such difficulty ( so the '
             'problem set will contain exactly 10 problems with distinct '
             'difficulties) . You shall compute the total beauty of the '
             'problem set, that is the sum of the beauty scores of the '
             'problems chosen by Gianni.',
  'input': 'Each test contains multiple test cases. The first line contains an '
           'integer t ( 1≤ t≤ 100 ) — the number of test cases. The '
           'descriptions of the t test cases follow. The first line of each '
           'test case contains the integer n ( 1≤ n≤ 100 ) — how many problems '
           'Gianni received from the judges. The next n lines contain two '
           'integers each. The i - th of such lines contains b_ i and d_ i ( '
           '1≤ b_ i, d_ i≤ 10 ) — the beauty score and the difficulty of the i '
           '- th problem.',
  'note': 'In the first test case, Gianni has received only 3 problems, with '
          'difficulties 3, 4, 7 which are not sufficient to create a problem '
          'set ( for example because there is not a problem with difficulty 1 '
          ') . In the second test case, Gianni will create a problem set by '
          'taking the problems 2 , 3 , 4 , 5 , 7 , 8 , 9 , 10 , 11 ( which '
          'have beauty equal to 10 and all difficulties from 1 to 9 ) and one '
          'of the problems 1 and 6 ( which have both beauty 3 and difficulty '
          '10 ) . The total beauty of the resulting problem set is 10· 9 + 3 = '
          '93 .',
  'output': 'For each test case, print the total beauty of the problem set '
            'chosen by Gianni. If Gianni cannot create a problem set ( because '
            'there are no problems with a certain difficulty) print the string '
            'MOREPROBLEMS ( all letters are uppercase, there are no spaces) .',
  'title': 'Organizing SWERC',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1662/A'},
 {'history': 'Vittorio has three favorite toys: a teddy bear, an owl, and a '
             'raccoon. Each of them has a name. Vittorio takes several sheets '
             'of paper and writes a letter on each side of every sheet so that '
             'it is possible to spell any of the three names by arranging some '
             'of the sheets in a row ( sheets can be reordered and flipped as '
             'needed) . The three names do not have to be spelled at the same '
             'time, it is sufficient that it is possible to spell each of them '
             'using all the available sheets ( and the same sheet can be used '
             'to spell different names) . Find the minimum number of sheets '
             'required. In addition, produce a list of sheets with minimum '
             'cardinality which can be used to spell the three names ( if '
             'there are multiple answers, print any) .',
  'input': 'The first line contains a string t consisting of uppercase letters '
           'of the English alphabet ( 1≤| t| ≤1000) — the name of the teddy '
           'bear. The second line contains a string o consisting of uppercase '
           'letters of the English alphabet ( 1≤| o| ≤1000) — the name of the '
           'owl. The third line contains a string r consisting of uppercase '
           'letters of the English alphabet ( 1≤| r| ≤1000) — the name of the '
           'raccoon. The values | t| , | o| , | r| denote the length of the '
           'three names t, o, r.',
  'note': 'In the first sample, the solution uses two sheets: the first sheet '
          'has A on one side and G on the other side; the second sheet has A '
          'on one side and M on the other side. The name AA can be spelled '
          'using the A side of both sheets. The name GA can be spelled using '
          'the G side of the first sheet and the A side of the second sheet. '
          'Finally, the name MA can be spelled using the M side of the second '
          'sheet and the A side of the first sheet.',
  'output': 'The first line of the output contains a single integer m — the '
            'minimum number of sheets required. Then m lines follow: the j- th '
            'of these lines contains a string of two uppercase letters of the '
            'English alphabet — the letters appearing on the two sides of the '
            'j- th sheet. Note that you can print the sheets and the two '
            'letters of each sheet in any order.',
  'title': 'Toys',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1662/B'},
 {'history': 'A wild basilisk just appeared at your doorstep. You are not '
             'entirely sure what a basilisk is and you wonder whether it '
             'evolved from your favorite animal, the weasel. How can you find '
             'out whether basilisks evolved from weasels? Certainly, a good '
             'first step is to sequence both of their DNAs. Then you can try '
             'to check whether there is a sequence of possible mutations from '
             'the DNA of the weasel to the DNA of the basilisk. Your friend '
             'Ron is a talented alchemist and has studied DNA sequences in '
             'many of his experiments. He has found out that DNA strings '
             'consist of the letters A, B and C and that single mutations can '
             'only remove or add substrings at any position in the string ( a '
             'substring is a contiguous sequence of characters) . The '
             'substrings that can be removed or added by a mutation are AA, '
             'BB, CC, ABAB or BCBC. During a sequence of mutations a DNA '
             'string may even become empty. Ron has agreed to sequence the DNA '
             'of the weasel and the basilisk for you, but finding out whether '
             'there is a sequence of possible mutations that leads from one to '
             'the other is too difficult for him, so you have to do it on your '
             'own.',
  'input': 'Each test contains multiple test cases. The first line contains an '
           'integer t ( 1≤t≤100) — the number of test cases. The descriptions '
           'of the t test cases follow. The first line of each test case '
           'contains a string u ( 1≤| u| ≤200) — the DNA of the weasel. The '
           'second line of each test case contains a string v ( 1≤| v| ≤200) — '
           'the DNA of the basilisk. The values | u| , | v| denote the lengths '
           'of the strings u and v. It is guaranteed that both strings u and v '
           'consist of the letters A, B and C.',
  'note': ' ',
  'output': 'For each test case, print YES if there is a sequence of mutations '
            'to get from u to v and NO otherwise.',
  'title': 'Evolution of Weasels',
  'topics': ['implementation', 'strings'],
  'url': 'https://codeforces.com/problemset/problem/1662/D'},
 {'history': 'There are n equidistant antennas on a line, numbered from 1 to n '
             '. Each antenna has a power rating, the power of the i - th '
             'antenna is p_ i . The i - th and the j - th antenna can '
             'communicate directly if and only if their distance is at most '
             'the minimum of their powers, i. e. , | i- j| ≤min( p_ i, p_ j) . '
             'Sending a message directly between two such antennas takes 1 '
             'second. What is the minimum amount of time necessary to send a '
             'message from antenna a to antenna b , possibly using other '
             'antennas as relays?',
  'input': 'Each test contains multiple test cases. The first line contains an '
           'integer t ( 1≤ t≤ 100 000 ) — the number of test cases. The '
           'descriptions of the t test cases follow. The first line of each '
           'test case contains three integers n , a , b ( 1 ≤ a, b ≤ n ≤ 200 '
           '000 ) — the number of antennas, and the origin and target antenna. '
           'The second line contains n integers p_ 1, p_ 2, . . . , p_ n ( 1 ≤ '
           'p_ i ≤ n ) — the powers of the antennas. The sum of the values of '
           'n over all test cases does not exceed 200 000 .',
  'note': 'In the first test case, we must send a message from antenna 2 to '
          'antenna 9 . A sequence of communications requiring 4 seconds, which '
          'is the minimum possible amount of time, is the following: In 1 '
          'second we send the message from antenna 2 to antenna 1 . This is '
          'possible since | 2- 1| ≤min( 1, 4) = min( p_ 2, p_ 1) . In 1 second '
          'we send the message from antenna 1 to antenna 5 . This is possible '
          'since | 1- 5| ≤min( 4, 5) = min( p_ 1, p_ 5) . In 1 second we send '
          'the message from antenna 5 to antenna 10 . This is possible since | '
          '5- 10| ≤min( 5, 5) = min( p_ 5, p_ 10) . In 1 second we send the '
          'message from antenna 10 to antenna 9 . This is possible since | 10- '
          '9| ≤min( 5, 1) = min( p_ 10, p_ 9) .',
  'output': 'For each test case, print the number of seconds needed to trasmit '
            'a message from a to b . It can be shown that under the problem '
            'constraints, it is always possible to send such a message.',
  'title': 'Antennas',
  'topics': ['implementation', 'implementation'],
  'url': 'https://codeforces.com/problemset/problem/1662/F'},
 {'history': 'On a beach there are n huts in a perfect line, hut 1 being at '
             'the left and hut i+ 1 being 100 meters to the right of hut i, '
             'for all 1≤i≤n−1. In hut i there are pi people. There are m ice '
             'cream sellers, also aligned in a perfect line with all the huts. '
             'The i- th ice cream seller has their shop xi meters to the right '
             'of the first hut. All ice cream shops are at distinct locations, '
             'but they may be at the same location as a hut. You want to open '
             'a new ice cream shop and you wonder what the best location for '
             'your shop is. You can place your ice cream shop anywhere on the '
             'beach ( not necessarily at an integer distance from the first '
             'hut) as long as it is aligned with the huts and the other ice '
             'cream shops, even if there is already another ice cream shop or '
             'a hut at that location. You know that people would come to your '
             'shop only if it is strictly closer to their hut than any other '
             'ice cream shop. If every person living in the huts wants to buy '
             'exactly one ice cream, what is the maximum number of ice creams '
             'that you can sell if you place the shop optimally?',
  'input': 'The first line contains two integers n and m ( 2≤n≤200000, '
           '1≤m≤200000) — the number of huts and the number of ice cream '
           'sellers. The second line contains n integers p1, p2, . . . , pn ( '
           '1≤pi≤109) — the number of people in each hut. The third line '
           'contains m integers x1, x2, . . . , xm ( 0≤xi≤109, xi= ̸xj for i= '
           '̸j) — the location of each ice cream shop.',
  'note': 'In the first sample, you can place the shop ( coloured orange in '
          'the picture below) 150 meters to the right of the first hut ( for '
          'example) so that it is the closest shop to the first two huts, '
          'which have 2 and 5 people, for a total of 7 sold ice creams. In the '
          'second sample, you can place the shop 170 meters to the right of '
          'the first hut ( for example) so that it is the closest shop to the '
          'last two huts, which have 7 and 8 people, for a total of 15 sold '
          'ice creams.',
  'output': 'Print the maximum number of ice creams that can be sold by '
            'choosing optimally the location of the new shop.',
  'title': 'Ice Cream Shop',
  'topics': ['implementation', 'sortings'],
  'url': 'https://codeforces.com/problemset/problem/1662/I'},
 {'history': 'Today, like every year at SWERC, the n2n2 contestants have '
             'gathered outside the venue to take a drone photo. Jennifer, the '
             'social media manager for the event, has arranged them into an '
             'n×nn×n square. Being very good at her job, she knows that the '
             'contestant standing on the intersection of the ii- th row with '
             'the jj- th column is ai, jai, j years old. Coincidentally, she '
             'notices that no two contestants have the same age, and that '
             'everyone is between 11 and n2n2 years old. Jennifer is planning '
             'to have some contestants hold a banner with the ICPC logo '
             'parallel to the ground, so that it is clearly visible in the '
             'aerial picture. Here are the steps that she is going to follow '
             'in order to take the perfect SWERC drone photo. First of all, '
             'Jennifer is going to select four contestants standing on the '
             'vertices of an axis- aligned rectangle. Then, she will have the '
             'two younger contestants hold one of the poles, while the two '
             'older contestants will hold the other pole. Finally, she will '
             'unfold the banner, using the poles to support its two ends. '
             'Obviously, this can only be done if the two poles are parallel '
             'and do not cross, as shown in the pictures below. Being very '
             'indecisive, Jennifer would like to try out all possible '
             'arrangements for the banner, but she is worried that this may '
             'cause the contestants to be late for the competition. How many '
             'different ways are there to choose the four contestants holding '
             'the poles in order to take a perfect photo? Two choices are '
             'considered different if at least one contestant is included in '
             'one but not the other.',
  'input': 'The first line contains a single integer nn ( 2≤n≤15002≤n≤1500) . '
           'The next nn lines describe the ages of the contestants. '
           'Specifically, the ii- th line contains the integers ai, 1, ai, 2, '
           '. . . , ai, nai, 1, ai, 2, . . . , ai, n ( 1≤ai, j≤n21≤ai, j≤n2) . '
           'It is guaranteed that ai, j= ̸ak, lai, j= ̸ak, l if i= ̸ki= ̸k or '
           'j= ̸lj= ̸l.',
  'note': 'In the first sample, there are 44 contestants, arranged as follows. '
          'There is only one way to choose four contestants, with one pole '
          'held by contestants aged 11 and 22 and the other one by contestants '
          'aged 33 and 44. But then, as we can see in the picture, the poles '
          'cross. Since there is no valid way to choose four contestants, the '
          'answer is 00. In the second sample, the 44 contestants are arranged '
          'as follows. Once again, there is only one way to choose four '
          "contestants, but this time the poles don' t cross. Therefore, the "
          'answer is 11. In the third sample, the 99 contestants are arranged '
          'as follows. There are 66 ways of choosing four contestants so that '
          "the poles don' t cross, as shown in the following pictures.",
  'output': 'Print the number of ways for Jennifer to choose the four '
            'contestants holding the poles.',
  'title': 'Drone Photo',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1662/N'},
 {'history': 'You are given a circular maze such as the ones shown in the '
             'figures. Determine if it can be solved, i. e. , if there is a '
             'path which goes from the center to the outside of the maze which '
             'does not touch any wall. The maze is described by n walls. Each '
             'wall can be either circular or straight. Circular walls are '
             'described by a radius r, the distance from the center, and two '
             'angles θ1, θ2 describing the beginning and the end of the wall '
             'in the clockwise direction. Notice that swapping the two angles '
             'changes the wall. Straight walls are described by an angle θ, '
             'the direction of the wall, and two radii r1< r2 describing the '
             'beginning and the end of the wall. Angles are measured in '
             'degrees; the angle 0 corresponds to the upward pointing '
             'direction; and angles increase clockwise ( hence the east '
             'direction corresponds to the angle 90) .',
  'input': 'Each test contains multiple test cases. The first line contains an '
           'integer t ( 1≤t≤20) — the number of test cases. The descriptions '
           'of the t test cases follow. The first line of each test case '
           'contains an integer n ( 1≤n≤5000) — the number of walls. Each of '
           'the following n lines each contains a character ( C for circular, '
           'and S for straight) and three integers: either r, θ1, θ2 ( 1≤r≤20 '
           'and 0≤θ1, θ2< 360 with θ1= ̸θ2) if the wall is circular, or r1, r2 '
           'and θ ( 1≤r1< r2≤20 and 0≤θ< 360) if the wall is straight. It is '
           'guaranteed that circular walls do not overlap ( but two circular '
           'walls may intersect at one or two points) , and that straight '
           'walls do not overlap ( but two straight walls may intersect at one '
           'point) . However, circular and straight walls can intersect '
           'arbitrarily.',
  'note': 'The two sample test cases correspond to the two mazes in the '
          'picture.',
  'output': 'For each test case, print YES if the maze can be solved and NO '
            'otherwise.',
  'title': 'Circular Maze',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1662/O'},
 {'history': "You won' t find this sequence on OEIS.",
  'input': 'One integer r ( - 45 ≤ r ≤ 2999 ) .',
  'note': ' ',
  'output': 'One integer.',
  'title': "Mike's Sequence",
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1663/B'},
 {'history': 'Aenar has an array a consisting of n integers.',
  'input': 'The first line is the integer n ( 1 ≤ n ≤ 100 ) . The second line '
           'contains n integers a_ i ( 0 ≤ a_ i ≤ 3979 ) — the contents of the '
           'array.',
  'note': ' ',
  'output': 'Output a single number.',
  'title': 'Pōja Verdon',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1663/C'},
 {'history': 'Seven boys and seven girls from Athens were brought before King '
             'Minos. The evil king laughed and said " I hope you enjoy your '
             'stay in Crete" . With a loud clang, the doors behind them shut, '
             'and darkness reigned. The terrified children huddled together. '
             'In the distance they heard a bellowing, unholy roar. Bravely, '
             'they advanced forward, to their doom.',
  'input': 'n ( 1 ≤ n ≤ 100 ) — the dimensions of the labyrinth. Each of the '
           'next n lines contains a string of lowercase English letters of '
           'length n .',
  'note': ' ',
  'output': ' ',
  'title': 'Are You Safe?',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1663/E'},
 {'history': 'In every generation there is a Chosen One. She alone will stand '
             'against the vampires, the demons, and the forces of darkness. '
             'She is the Slayer. — Joss Whedon',
  'input': 'A string s ( 3≤| s| ≤7) consisting of lowercase English letters.',
  'note': ' ',
  'output': 'A single string. If there is no answer, print " none" ( without '
            'the quotes) .',
  'title': 'In Every Generation...',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1663/F'},
 {'history': "Aenar should go to the string' s home.",
  'input': 'A string consisting of only 6 letters.',
  'note': 'If many answers are possible, the jury will still only accept one!',
  'output': 'A string consisting of only 6 characters.',
  'title': 'Six Characters',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1663/G'},
 {'history': 'You are given an array a of n integers. Initially there is only '
             'one copy of the given array. You can do operations of two types: '
             'Choose any array and clone it. After that there is one more copy '
             'of the chosen array. Swap two elements from any two copies ( '
             'maybe in the same copy) on any positions. You need to find the '
             'minimal number of operations needed to obtain a copy where all '
             'elements are equal.',
  'input': 'The input consists of multiple test cases. The first line contains '
           'a single integer t ( 1≤t≤104) — the number of test cases. '
           'Description of the test cases follows. The first line of each test '
           'case contains a single integer n ( 1≤n≤105) — the length of the '
           'array a. The second line of each test case contains n integers a1, '
           'a2, . . . , an ( −109≤ai≤109) — the elements of the array a. It is '
           'guaranteed that the sum of n over all test cases does not exceed '
           '105.',
  'note': 'In the first test case all elements in the array are already equal, '
          "that' s why the answer is 0. In the second test case it is possible "
          'to create a copy of the given array. After that there will be two '
          'identical arrays: [ 0 1 3 3 7 0 ] and [ 0 1 3 3 7 0 ] After that we '
          'can swap elements in a way so all zeroes are in one array: [ 0 0_ '
          "0_ 3 7 0 ] and [ 1_ 1 3 3 7 3_ ] Now let' s create a copy of the "
          'first array: [ 0 0 0 3 7 0 ] , [ 0 0 0 3 7 0 ] and [ 1 1 3 3 7 3 ] '
          "Let' s swap elements in the first two copies: [ 0 0 0 0_ 0_ 0 ] , [ "
          '3_ 7_ 0 3 7 0 ] and [ 1 1 3 3 7 3 ] . Finally, we made a copy where '
          'all elements are equal and made 6 operations. It can be proven that '
          'no fewer operations are enough.',
  'output': 'For each test case output a single integer — the minimal number '
            'of operations needed to create at least one copy where all '
            'elements are equal.',
  'title': 'Array Cloning Technique',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1665/B'},
 {'history': 'A tree is a connected graph without cycles. A rooted tree has a '
             'special vertex called the root. The parent of a vertex vv ( '
             'different from root) is the previous to vv vertex on the '
             'shortest path from the root to the vertex vv. Children of the '
             'vertex vv are all vertices for which vv is the parent. You are '
             'given a rooted tree with nn vertices. The vertex 11 is the root. '
             'Initially, all vertices are healthy. Each second you do two '
             'operations, the spreading operation and, after that, the '
             'injection operation: Spreading: for each vertex vv, if at least '
             'one child of vv is infected, you can spread the disease by '
             'infecting at most one other child of vv of your choice. '
             'Injection: you can choose any healthy vertex and infect it. This '
             'process repeats each second until the whole tree is infected. '
             'You need to find the minimal number of seconds needed to infect '
             'the whole tree.',
  'input': 'The input consists of multiple test cases. The first line contains '
           'a single integer tt ( 1≤t≤1041≤t≤104) — the number of test cases. '
           'Description of the test cases follows. The first line of each test '
           'case contains a single integer nn ( 2≤n≤2⋅1052≤n≤2⋅105) — the '
           'number of the vertices in the given tree. The second line of each '
           'test case contains n−1n−1 integers p2, p3, . . . , pnp2, p3, . . . '
           ', pn ( 1≤pi≤n1≤pi≤n) , where pipi is the ancestor of the ii- th '
           'vertex in the tree. It is guaranteed that the given graph is a '
           'tree. It is guaranteed that the sum of nn over all test cases '
           "doesn' t exceed 2⋅1052⋅105.",
  'note': 'The image depicts the tree from the first test case during each '
          'second. A vertex is black if it is not infected. A vertex is blue '
          'if it is infected by injection during the previous second. A vertex '
          'is green if it is infected by spreading during the previous second. '
          'A vertex is red if it is infected earlier than the previous second. '
          'Note that you are able to choose which vertices are infected by '
          'spreading and by injections.',
  'output': 'For each test case you should output a single integer — the '
            'minimal number of seconds needed to infect the whole tree.',
  'title': 'Tree Infection',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1665/C'},
 {'history': 'You are given an array a of n non- negative integers, numbered '
             "from 1 to n . Let' s define the cost of the array a as min_ i = "
             '̸ j a_ i | a_ j , where | denotes the bitwise OR operation. '
             'There are q queries. For each query you are given two integers l '
             'and r ( l < r ) . For each query you should find the cost of the '
             'subarray a_ l, a_ l + 1, . . . , a_ r .',
  'input': 'Each test case consists of several test cases. The first line '
           'contains a single integer t ( 1 ≤ t ≤ 10^ 4 ) — the number of test '
           'cases. The first line of each test case contains an integer n ( 2 '
           '≤ n ≤ 10^ 5 ) — the length array a . The second line of each test '
           'case contains n integers a_ 1, a_ 2, . . . , a_ n ( 0 ≤ a_ i < 2^ '
           '30 ) — the elements of a . The third line of each test case '
           'contains an integer q ( 1 ≤ q ≤ 10^ 5 ) — the number of queries. '
           'Each of the next q lines contains two integers l_ j , r_ j ( 1 ≤ '
           'l_ j < r_ j ≤ n ) — the description of the j - th query. It is '
           'guaranteed that the sum of n and the sum of q over all test cases '
           'do not exceed 10^ 5 .',
  'note': 'In the first test case the array a is 110_ 2, 001_ 2, 011_ 2, 010_ '
          "2, 001_ 2 . That' s why the answers for the queries are: [ 1; 2] : "
          'a_ 1 | a_ 2 = 110_ 2 | 001_ 2 = 111_ 2 = 7 ; [ 2; 3] : a_ 2 | a_ 3 '
          '= 001_ 2 | 011_ 2 = 011_ 2 = 3 ; [ 2; 4] : a_ 2 | a_ 3 = a_ 3 | a_ '
          '4 = a_ 2 | a_ 4 = 011_ 2 = 3 ; [ 2; 5] : a_ 2 | a_ 5 = 001_ 2 = 1 . '
          'In the second test case the array a is 00_ 2, 10_ 2, 01_ 2, 11. . . '
          "1_ 2_ 30 ( a_ 4 = 2^ 30 - 1 ) . That' s why the answers for the "
          'queries are: [ 1; 2] : a_ 1 | a_ 2 = 10_ 2 = 2 ; [ 2; 3] : a_ 2 | '
          'a_ 3 = 11_ 2 = 3 ; [ 1; 3] : a_ 1 | a_ 3 = 01_ 2 = 1 ; [ 3; 4] : a_ '
          '3 | a_ 4 = 01_ 2 | 11. . . 1_ 2_ 30 = 2^ 30 - 1 = 1073741823 .',
  'output': 'For each test case print q numbers, where the j - th number is '
            'the cost of array a_ l_ j, a_ l_ j + 1, . . . , a_ r_ j .',
  'title': 'MinimizOR',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1665/E'},
 {'history': 'Little Fiona has a collection of n blocks of various sizes a_ 1, '
             'a_ 2, . . . , a_ n , where n is even. Some of the blocks can be '
             'equal in size. She would like to put all these blocks one onto '
             'another to form a fancy stack. Let b_ 1, b_ 2, . . . , b_ n be '
             'the sizes of blocks in the stack from top to bottom. Since Fiona '
             'is using all her blocks, b_ 1, b_ 2, . . . , b_ n must be a '
             'permutation of a_ 1, a_ 2, . . . , a_ n . Fiona thinks the stack '
             'is fancy if both of the following conditions are satisfied: The '
             'second block is strictly bigger than the first one, and then '
             'each block is alternately strictly smaller or strictly bigger '
             'than the previous one. Formally, b_ 1 < b_ 2 > b_ 3 < b_ 4 > . . '
             '. > b_ n- 1 < b_ n . The sizes of the blocks on even positions '
             'are strictly increasing. Formally, b_ 2 < b_ 4 < b_ 6 < . . . < '
             'b_ n ( remember that n is even) . Two stacks are considered '
             'different if their corresponding sequences b_ 1, b_ 2, . . . , '
             'b_ n differ in at least one position. Fiona wants to know how '
             'many different fancy stacks she can build with all of her '
             'blocks. Since large numbers scare Fiona, find this number modulo '
             '998 244 353 .',
  'input': 'Each input contains multiple test cases. The first line contains '
           'the number of test cases t ( 1 ≤ t ≤ 2500 ) . Description of the '
           'test cases follows. The first line of each test case contains a '
           "single integer n — the number of blocks at Fiona' s disposal ( 2 ≤ "
           'n ≤ 5000 ; n is even) . The second line contains n integers a_ 1, '
           'a_ 2, . . . , a_ n — the sizes of the blocks in non- decreasing '
           'order ( 1 ≤ a_ 1 ≤ a_ 2 ≤. . . ≤ a_ n ≤ n ) . It is guaranteed '
           'that the sum of n over all test cases does not exceed 5000 .',
  'note': ' ',
  'output': 'For each test case, print the number of ways to build a fancy '
            'stack, modulo 998 244 353 .',
  'title': 'Fancy Stack',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1666/F'},
 {'history': 'You are given a rectangular grid with n rows and m columns. n '
             'and m are divisible by 4 . Some of the cells are already colored '
             'black or white. It is guaranteed that no two colored cells share '
             'a corner or an edge. Color the remaining cells in a way that '
             'both the black and the white cells becomes orthogonally '
             'connected or determine that it is impossible. Consider a graph, '
             'where the black cells are the nodes. Two nodes are adjacent if '
             'the corresponding cells share an edge. If the described graph is '
             'connected, the black cells are orthogonally connected. Same for '
             'white cells.',
  'input': 'The input consists of multiple test cases. The first line of the '
           'input contains a single integer t ( 1 ≤ t ≤ 4000 ) — the number of '
           'test cases. The description of the test cases follows. The first '
           'line of each test case contains two integers n , m ( 8 ≤ n, m ≤ '
           '500 , n and m are divisible by 4 ) — the number of rows and '
           'columns. Each of the next n lines contains m characters. Each '
           "character is either ' B' , ' W' or ' . ' , representing black, "
           'white or empty cell respectively. Two colored ( black or white) '
           'cell does not share a corner or an edge. It is guaranteed that the '
           'sum of n · m over all test cases does not exceed 250 000 .',
  'note': 'Solution for test case 1: Test case 2: one can see that the black '
          "and the white part can' t be connected in the same time. So the "
          'answer is " NO" .',
  'output': 'For each testcase print " NO" if there is no solution, otherwise '
            'print " YES" and a grid with the same format. If there are '
            'multiple solutions, you can print any.',
  'title': 'Yin Yang',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1667/F'},
 {'history': 'You are given a grid with n rows and m columns. Rows and columns '
             'are numbered from 1 to n, and from 1 to m. The intersection of '
             'the a- th row and b- th column is denoted by ( a, b) . '
             'Initially, you are standing in the top left corner ( 1, 1) . '
             'Your goal is to reach the bottom right corner ( n, m) . You can '
             'move in four directions from ( a, b) : up to ( a−1, b) , down to '
             '( a+ 1, b) , left to ( a, b−1) or right to ( a, b+ 1) . You '
             'cannot move in the same direction in two consecutive moves, and '
             'you cannot leave the grid. What is the minimum number of moves '
             'to reach ( n, m) ?',
  'input': 'The input consists of multiple test cases. The first line contains '
           'a single integer t ( 1≤t≤103) — the number of the test cases. The '
           'description of the test cases follows. The first line of each test '
           'case contains two integers n and m ( 1≤n, m≤109) — the size of the '
           'grid.',
  'note': 'Test case 1: n= 1, m= 1, and initially you are standing in ( 1, 1) '
          'so 0 move is required to reach ( n, m) = ( 1, 1) . Test case 2: you '
          'should go down to reach ( 2, 1) . Test case 3: it is impossible to '
          'reach ( 1, 3) without moving right two consecutive times, or '
          'without leaving the grid. Test case 4: an optimal moving sequence '
          'could be: ( 1, 1) →( 1, 2) →( 2, 2) →( 2, 1) →( 3, 1) →( 3, 2) →( '
          '4, 2) . It can be proved that this is the optimal solution. So the '
          'answer is 6.',
  'output': 'For each test case, print a single integer: −1 if it is '
            'impossible to reach ( n, m) under the given conditions, otherwise '
            'the minimum number of moves.',
  'title': 'Direction Change',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1668/A'},
 {'history': 'm chairs are arranged in a circle sequentially. The chairs are '
             'numbered from 0 to m−1. n people want to sit in these chairs. '
             'The i- th of them wants at least a[ i] empty chairs both on his '
             'right and left side. More formally, if the i- th person sits in '
             'the j- th chair, then no one else should sit in the following '
             'chairs: ( j−a[ i] ) modm, ( j−a[ i] + 1) modm, . . . ( j+ a[ i] '
             '−1) modm, ( j+ a[ i] ) modm. Decide if it is possible to sit '
             'down for all of them, under the given limitations.',
  'input': 'The input consists of multiple test cases. The first line contains '
           'a single integer t ( 1≤t≤5⋅104) — the number of test cases. The '
           'description of the test cases follows. The first line of each test '
           'case contains two integers n and m ( 2≤n≤105, 1≤m≤109) — the '
           'number of people and the number of chairs. The next line contains '
           'n integers, a1, a2, . . . an ( 1≤ai≤109) — the minimum number of '
           'empty chairs, on both sides of the i- th person. It is guaranteed '
           'that the sum of n over all test cases will not exceed 105.',
  'note': 'Test case 1: n> m, so they can not sit down. Test case 2: the first '
          'person can sit 2- nd and the second person can sit in the 0- th '
          'chair. Both of them want at least 1 empty chair on both sides, '
          'chairs 1 and 3 are free, so this is a good solution. Test case 3: '
          'if the second person sits down somewhere, he needs 2 empty chairs, '
          'both on his right and on his left side, so it is impossible to find '
          'a place for the first person, because there are only 5 chairs. Test '
          'case 4: they can sit in the 1- st, 4- th, 7- th chairs '
          'respectively.',
  'output': 'For each test case print " YES" ( without quotes) if it is '
            'possible for everyone to sit down and fulfil the restrictions, '
            'and " NO" ( without quotes) otherwise. You may print every letter '
            'in any case you want ( so, for example, the strings " yEs" , " '
            'yes" , " Yes" and " YES" will all be recognized as positive '
            'answers) .',
  'title': 'Social Distance',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1668/B'},
 {'history': 'Codeforces separates its users into 4 divisions by their rating: '
             'For Division 1: 1900≤rating For Division 2: 1600≤rating≤1899 For '
             'Division 3: 1400≤rating≤1599 For Division 4: rating≤1399 Given a '
             'rating, print in which division the rating belongs.',
  'input': 'The first line of the input contains an integer t ( 1≤t≤104) — the '
           'number of testcases. The description of each test consists of one '
           'line containing one integer rating ( −5000≤rating≤5000) .',
  'note': 'For test cases 1−4, the corresponding ratings are −789, 1299, 1300, '
          '1399, so all of them are in division 4. For the fifth test case, '
          'the corresponding rating is 1400, so it is in division 3. For the '
          'sixth test case, the corresponding rating is 1679, so it is in '
          'division 2. For the seventh test case, the corresponding rating is '
          '2300, so it is in division 1.',
  'output': 'For each test case, output a single line containing the correct '
            'division in the format " Division X" , where X is an integer '
            'between 1 and 4 representing the division for the corresponding '
            'rating.',
  'title': 'Division?',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1669/A'},
 {'history': 'Given an array a of n elements, print any value that appears at '
             'least three times or print - 1 if there is no such value.',
  'input': 'The first line contains an integer t ( 1≤t≤104) — the number of '
           'test cases. The first line of each test case contains an integer n '
           '( 1≤n≤2⋅105) — the length of the array. The second line of each '
           'test case contains n integers a1, a2, . . . , an ( 1≤ai≤n) — the '
           'elements of the array. It is guaranteed that the sum of n over all '
           'test cases does not exceed 2⋅105.',
  'note': "In the first test case there is just a single element, so it can' t "
          'occur at least three times and the answer is - 1. In the second '
          'test case, all three elements of the array are equal to 2, so 2 '
          'occurs three times, and so the answer is 2. For the third test '
          'case, 2 occurs four times, so the answer is 2. For the fourth test '
          'case, 4 occurs three times, so the answer is 4. For the fifth test '
          'case, 1, 2 and 3 all occur at least three times, so they are all '
          'valid outputs. For the sixth test case, all elements are distinct, '
          'so none of them occurs at least three times and the answer is - 1.',
  'output': 'For each test case, print any value that appears at least three '
            'times or print - 1 if there is no such value.',
  'title': 'Triple',
  'topics': ['implementation', 'sortings'],
  'url': 'https://codeforces.com/problemset/problem/1669/B'},
 {'history': 'Given an array a= [ a_ 1, a_ 2, . . . , a_ n] of n positive '
             'integers, you can do operations of two types on it: Add 1 to '
             'every element with an odd index. In other words change the array '
             'as follows: a_ 1 : = a_ 1 + 1, a_ 3 : = a_ 3 + 1, a_ 5 : = a_ 5+ '
             '1, . . . . Add 1 to every element with an even index. In other '
             'words change the array as follows: a_ 2 : = a_ 2 + 1, a_ 4 : = '
             'a_ 4 + 1, a_ 6 : = a_ 6+ 1, . . . . Determine if after any '
             'number of operations it is possible to make the final array '
             'contain only even numbers or only odd numbers. In other words, '
             'determine if you can make all elements of the array have the '
             'same parity after any number of operations. Note that you can do '
             'operations of both types any number of times ( even none) . '
             'Operations of different types can be performed a different '
             'number of times.',
  'input': 'The first line contains an integer t ( 1 ≤ t ≤ 100 ) — the number '
           'of test cases. The first line of each test case contains an '
           'integer n ( 2 ≤ n ≤ 50 ) — the length of the array. The second '
           'line of each test case contains n integers a_ 1, a_ 2, . . . , a_ '
           'n ( 1 ≤ a_ i ≤ 10^ 3 ) — the elements of the array. Note that '
           'after the performed operations the elements in the array can '
           'become greater than 10^ 3 .',
  'note': 'For the first test case, we can increment the elements with an even '
          'index, obtaining the array [ 1, 3, 1] , which contains only odd '
          'numbers, so the answer is " YES" . For the second test case, we can '
          "show that after performing any number of operations we won' t be "
          'able to make all elements have the same parity, so the answer is " '
          'NO" . For the third test case, all elements already have the same '
          'parity so the answer is " YES" . For the fourth test case, we can '
          'perform one operation and increase all elements at odd positions by '
          '1 , thus obtaining the array [ 1001, 1, 1001, 1, 1001] , and all '
          'elements become odd so the answer is " YES" .',
  'output': 'Output t lines, each of which contains the answer to the '
            'corresponding test case. As an answer, output " YES" if after any '
            'number of operations it is possible to make the final array '
            'contain only even numbers or only odd numbers, and " NO" '
            'otherwise. You can output the answer in any case ( for example, '
            'the strings " yEs" , " yes" , " Yes" and " YES" will be '
            'recognized as a positive answer) .',
  'title': 'Odd/Even Increments',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1669/C'},
 {'history': 'A row of n cells is given, all initially white. Using a stamp, '
             'you can stamp any two neighboring cells such that one becomes '
             'red and the other becomes blue. A stamp can be rotated, i. e. it '
             'can be used in both ways: as and as . During use, the stamp must '
             'completely fit on the given n cells ( it cannot be partially '
             'outside the cells) . The stamp can be applied multiple times to '
             'the same cell. Each usage of the stamp recolors both cells that '
             'are under the stamp. For example, one possible sequence of '
             'stamps to make the picture could be →→→ . Here , , and represent '
             'a white, red, or blue cell, respectively, and the cells that the '
             'stamp is used on are marked with an underline. Given a final '
             'picture, is it possible to make it using the stamp zero or more '
             'times?',
  'input': 'The first line contains an integer t ( 1 ≤ t ≤ 10^ 4 ) — the '
           'number of test cases. The first line of each test case contains an '
           'integer n ( 1 ≤ n ≤ 10^ 5 ) — the length of the picture. The '
           'second line of each test case contains a string s — the picture '
           'you need to make. It is guaranteed that the length of s is n and '
           'that s only consists of the characters , , and , representing a '
           'white, red, or blue cell, respectively. It is guaranteed that the '
           'sum of n over all test cases does not exceed 10^ 5 .',
  'note': 'The first test case is explained in the statement. For the second, '
          'third, and fourth test cases, it is not possible to stamp a single '
          'cell, so the answer is " NO" . For the fifth test case, you can use '
          'the stamp as follows: →→ . For the sixth test case, you can use the '
          "stamp as follows: →→ . For the seventh test case, you don' t need "
          'to use the stamp at all.',
  'output': 'Output t lines, each of which contains the answer to the '
            'corresponding test case. As an answer, output " YES" if it '
            'possible to make the picture using the stamp zero or more times, '
            'and " NO" otherwise. You can output the answer in any case ( for '
            'example, the strings " yEs" , " yes" , " Yes" and " YES" will be '
            'recognized as a positive answer) .',
  'title': 'Colorful Stamp',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1669/D'},
 {'history': 'Given n strings, each of length 2, consisting of lowercase Latin '
             "alphabet letters from ' a' to ' k' , output the number of pairs "
             'of indices ( i, j) such that i< j and the i- th string and the '
             'j- th string differ in exactly one position. In other words, '
             'count the number of pairs ( i, j) ( i< j) such that the i- th '
             'string and the j- th string have exactly one position p ( 1≤p≤2) '
             'such that sip= ̸sjp. The answer may not fit into 32- bit integer '
             'type, so you should use 64- bit integers like long long in C+ + '
             'to avoid integer overflow.',
  'input': 'The first line of the input contains a single integer t ( 1≤t≤100) '
           '— the number of test cases. The description of test cases follows. '
           'The first line of each test case contains a single integer n ( '
           '1≤n≤105) — the number of strings. Then follows n lines, the i- th '
           'of which containing a single string si of length 2, consisting of '
           "lowercase Latin letters from ' a' to ' k' . It is guaranteed that "
           'the sum of n over all test cases does not exceed 105.',
  'note': 'For the first test case the pairs that differ in exactly one '
          'position are: ( " ab" , " cb" ) , ( " ab" , " db" ) , ( " ab" , " '
          'aa" ) , ( " cb" , " db" ) and ( " cb" , " cc" ) . For the second '
          'test case the pairs that differ in exactly one position are: ( " '
          'aa" , " ac" ) , ( " aa" , " ca" ) , ( " cc" , " ac" ) , ( " cc" , " '
          'ca" ) , ( " ac" , " aa" ) and ( " ca" , " aa" ) . For the third '
          'test case, the are no pairs satisfying the conditions.',
  'output': 'For each test case, print a single integer — the number of pairs '
            '( i, j) ( i< j) such that the i- th string and the j- th string '
            'have exactly one position p ( 1≤p≤2) such that sip= ̸sjp. Please '
            "note, that the answer for some test cases won' t fit into 32- bit "
            'integer type, so you should use at least 64- bit integer type in '
            'your programming language ( like long long for C+ + ) .',
  'title': '2-Letter Strings',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1669/E'},
 {'history': 'There is a grid with n rows and m columns, and three types of '
             "cells: An empty cell, denoted with ' . ' . A stone, denoted with "
             "' * ' . An obstacle, denoted with the lowercase Latin letter ' "
             "o' . All stones fall down until they meet the floor ( the bottom "
             'row) , an obstacle, or other stone which is already immovable. ( '
             'In other words, all the stones just fall down as long as they '
             'can fall. ) Simulate the process. What does the resulting grid '
             'look like?',
  'input': 'The input consists of multiple test cases. The first line contains '
           'an integer t ( 1 ≤ t ≤ 100 ) — the number of test cases. The '
           'description of the test cases follows. The first line of each test '
           'case contains two integers n and m ( 1 ≤ n, m ≤ 50 ) — the number '
           'of rows and the number of columns in the grid, respectively. Then '
           'n lines follow, each containing m characters. Each of these '
           "characters is either ' . ' , ' * ' , or ' o' — an empty cell, a "
           'stone, or an obstacle, respectively.',
  'note': ' ',
  'output': 'For each test case, output a grid with n rows and m columns, '
            "showing the result of the process. You don' t need to output a "
            'new line after each test, it is in the samples just for clarity.',
  'title': 'Fall Down',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1669/G'},
 {'history': 'One day Prof. Slim decided to leave the kingdom of the GUC to '
             'join the kingdom of the GIU. He was given an easy online '
             'assessment to solve before joining the GIU. Citizens of the GUC '
             'were happy sad to see the prof leaving, so they decided to hack '
             'into the system and change the online assessment into a harder '
             'one so that he stays at the GUC. After a long argument, they '
             'decided to change it into the following problem. Given an array '
             'of n integers a1, a2, . . . , an, where ai= ̸0, check if you can '
             'make this array sorted by using the following operation any '
             'number of times ( possibly zero) . An array is sorted if its '
             'elements are arranged in a non- decreasing order. select two '
             'indices i and j ( 1≤i, j≤n) such that ai and aj have different '
             'signs. In other words, one must be positive and one must be '
             'negative. swap the signs of ai and aj. For example if you select '
             'ai= 3 and aj= −2, then they will change to ai= −3 and aj= 2. '
             "Prof. Slim saw that the problem is still too easy and isn' t "
             'worth his time, so he decided to give it to you to solve.',
  'input': 'The first line contains a single integer t ( 1≤t≤104) — the number '
           'of test cases. Then t test cases follow. The first line of each '
           'test case contains a single integer n ( 1≤n≤105) — the length of '
           'the array a. The next line contain n integers a1, a2, . . . , an ( '
           '−109≤ai≤109, ai= ̸0) separated by spaces describing elements of '
           'the array a. It is guaranteed that the sum of n over all test '
           "cases doesn' t exceed 105.",
  'note': 'In the first test case, there is no way to make the array sorted '
          'using the operation any number of times. In the second test case, '
          'the array is already sorted. In the third test case, we can swap '
          'the sign of the 1- st element with the sign of the 5- th element, '
          'and the sign of the 3- rd element with the sign of the 6- th '
          'element, this way the array will be sorted. In the fourth test '
          'case, there is no way to make the array sorted using the operation '
          'any number of times.',
  'output': 'For each test case, print " YES" if the array can be sorted in '
            'the non- decreasing order, otherwise print " NO" . You can print '
            'each letter in any case ( upper or lower) .',
  'title': 'Prof. Slim',
  'topics': ['implementation', 'sortings'],
  'url': 'https://codeforces.com/problemset/problem/1670/A'},
 {'history': "Hosssam decided to sneak into Hemose' s room while he is "
             "sleeping and change his laptop' s password. He already knows the "
             'password, which is a string s of length n. He also knows that '
             'there are k special letters of the alphabet: c1, c2, . . . , ck. '
             'Hosssam made a program that can do the following. The program '
             'considers the current password s of some length m. Then it finds '
             'all positions i ( 1≤i< m) such that si+ 1 is one of the k '
             'special letters. Then it deletes all of those positions from the '
             'password s even if si is a special character. If there are no '
             'positions to delete, then the program displays an error message '
             'which has a very loud sound. For example, suppose the string s '
             'is " abcdef" and the special characters are \' b\' and \' d\' . '
             'If he runs the program once, the positions 1 and 3 will be '
             'deleted as they come before special characters, so the password '
             'becomes " bdef" . If he runs the program again, it deletes '
             'position 1, and the password becomes " def" . If he is wise, he '
             "won' t run it a third time. Hosssam wants to know how many times "
             "he can run the program on Hemose' s laptop without waking him up "
             'from the sound of the error message. Can you help him?',
  'input': 'The first line contains a single integer t ( 1≤t≤105) — the number '
           'of test cases. Then t test cases follow. The first line of each '
           'test case contains a single integer n ( 2≤n≤105) — the initial '
           'length of the password. The next line contains a string s '
           'consisting of n lowercase English letters — the initial password. '
           'The next line contains an integer k ( 1≤k≤26) , followed by k '
           'distinct lowercase letters c1, c2, . . . , ck — the special '
           'letters. It is guaranteed that the sum of n over all test cases '
           'does not exceed 2⋅105.',
  'note': 'In the first test case, the program can run 5 times as follows: '
          'iloveslim→ilovslim→iloslim→ilslim→islim→slimIn the second test '
          'case, the program can run 2 times as follows: joobeel→oel→elIn the '
          'third test case, the program can run 3 times as follows: '
          'basiozi→bioi→ii→i. In the fourth test case, the program can run 5 '
          'times as follows: khater→khatr→khar→khr→kr→rIn the fifth test case, '
          'the program can run only once as follows: abobeih→hIn the sixth '
          'test case, the program cannot run as none of the characters in the '
          'password is a special character.',
  'output': 'For each test case, print the maximum number of times Hosssam can '
            'run the program without displaying the error message, on a new '
            'line.',
  'title': 'Dorms War',
  'topics': ['implementation', 'strings'],
  'url': 'https://codeforces.com/problemset/problem/1670/B'},
 {'history': 'While searching for the pizza, baby Hosssam came across two '
             'permutations a and b of length n . Recall that a permutation is '
             'an array consisting of n distinct integers from 1 to n in '
             'arbitrary order. For example, [ 2, 3, 1, 5, 4] is a permutation, '
             'but [ 1, 2, 2] is not a permutation ( 2 appears twice in the '
             'array) and [ 1, 3, 4] is also not a permutation ( n= 3 but there '
             'is 4 in the array) . Baby Hosssam forgot about the pizza and '
             'started playing around with the two permutations. While he was '
             'playing with them, some elements of the first permutation got '
             'mixed up with some elements of the second permutation, and to '
             'his surprise those elements also formed a permutation of size n '
             '. Specifically, he mixed up the permutations to form a new array '
             'c in the following way. For each i ( 1≤ i≤ n ) , he either made '
             'c_ i= a_ i or c_ i= b_ i . The array c is a permutation. You '
             'know permutations a , b , and values at some positions in c . '
             'Please count the number different permutations c that are '
             'consistent with the described process and the given values. '
             'Since the answer can be large, print it modulo 10^ 9+ 7 . It is '
             'guaranteed that there exists at least one permutation c that '
             'satisfies all the requirements.',
  'input': 'The first line contains an integer t ( 1 ≤ t ≤ 10^ 5 ) — the '
           'number of test cases. The first line of each test case contains a '
           'single integer n ( 1≤ n≤ 10^ 5 ) — the length of the permutations. '
           'The next line contains n distinct integers a_ 1, a_ 2, . . . , a_ '
           'n ( 1≤ a_ i≤ n ) — the first permutation. The next line contains n '
           'distinct integers b_ 1, b_ 2, . . . , b_ n ( 1≤ b_ i≤ n ) — the '
           'second permutation. The next line contains n distinct integers d_ '
           '1, d_ 2, . . . , d_ n ( d_ i is either 0 , a_ i , or b_ i ) — the '
           'description of the known values of c . If d_ i= 0 , then there are '
           'no requirements on the value of c_ i . Otherwise, it is required '
           'that c_ i= d_ i . It is guaranteed that there exists at least one '
           'permutation c that satisfies all the requirements. It is '
           'guaranteed that the sum of n over all test cases does not exceed 5 '
           '· 10^ 5 .',
  'note': 'In the first test case, there are 4 distinct permutation that can '
          'be made using the process: [ 2, 3, 1, 4, 5, 6, 7] , [ 2, 3, 1, 7, '
          '6, 5, 4] , [ 2, 3, 1, 4, 6, 5, 7] , [ 2, 3, 1, 7, 5, 6, 4] . In the '
          'second test case, there is only one distinct permutation that can '
          'be made using the process: [ 1] . In the third test case, there are '
          '2 distinct permutation that can be made using the process: [ 6, 5, '
          '2, 1, 4, 3] , [ 6, 5, 3, 1, 4, 2] . In the fourth test case, there '
          'are 2 distinct permutation that can be made using the process: [ 1, '
          '2, 8, 7, 4, 3, 6, 5] , [ 1, 6, 4, 7, 2, 3, 8, 5] . In the fifth '
          'test case, there is only one distinct permutation that can be made '
          'using the process: [ 1, 9, 2, 3, 4, 10, 8, 6, 7, 5] .',
  'output': 'For each test case, print the number of possible permutations c , '
            'modulo 10^ 9+ 7 .',
  'title': 'Where is the Pizza?',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1670/C'},
 {'history': 'Sehr Sus is an infinite hexagonal grid as pictured below, '
             'controlled by MennaFadali, ZerooCool and Hosssam. They love '
             'equilateral triangles and want to create n equilateral triangles '
             'on the grid by adding some straight lines. The triangles must '
             'all be empty from the inside ( in other words, no straight line '
             'or hexagon edge should pass through any of the triangles) . You '
             'are allowed to add straight lines parallel to the edges of the '
             'hexagons. Given n , what is the minimum number of lines you need '
             'to add to create at least n equilateral triangles as described? '
             'Adding two red lines results in two new yellow equilateral '
             'triangles.',
  'input': 'The first line contains a single integer t ( 1 ≤ t ≤ 10^ 5 ) — the '
           'number of test cases. Then t test cases follow. Each test case '
           'contains a single integer n ( 1 ≤ n ≤ 10^ 9 ) — the required '
           'number of equilateral triangles.',
  'note': 'In the first and second test cases only 2 lines are needed. After '
          'adding the first line, no equilateral triangles will be created no '
          'matter where it is added. But after adding the second line, two '
          'more triangles will be created at once. In the third test case, the '
          'minimum needed is 3 lines as shown below.',
  'output': 'For each test case, print the minimum number of lines needed to '
            'have n or more equilateral triangles.',
  'title': 'Very Suspicious',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1670/D'},
 {'history': 'You are given a string s . You have to determine whether it is '
             'possible to build the string s out of strings aa, aaa, bb and/ '
             'or bbb by concatenating them. You can use the strings aa, aaa, '
             'bb and/ or bbb any number of times and in any order. For '
             'example: aaaabbb can be built as aa + aa + bbb; bbaaaaabbb can '
             'be built as bb + aaa + aa + bbb; aaaaaa can be built as aa + aa '
             '+ aa; abab cannot be built from aa, aaa, bb and/ or bbb.',
  'input': 'The first line contains one integer t ( 1 ≤ t ≤ 1000 ) — the '
           'number of test cases. Each test case consists of one line '
           'containing the string s ( 1 ≤ | s| ≤ 50 ) , consisting of '
           'characters a and/ or b.',
  'note': 'The first four test cases of the example are described in the '
          'statement.',
  'output': 'For each test case, print YES if it is possible to build the '
            'string s . Otherwise, print NO. You may print each letter in any '
            'case ( for example, YES, yes, Yes will all be recognized as '
            'positive answer, NO, no and nO will all be recognized as negative '
            'answer) .',
  'title': 'String Building',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1671/A'},
 {'history': 'You are given n points with integer coordinates on a coordinate '
             "axis OX. The coordinate of the i- th point is xi. All points' "
             'coordinates are distinct and given in strictly increasing order. '
             'For each point i, you can do the following operation no more '
             'than once: take this point and move it by 1 to the left or to '
             'the right ( i. . e. , you can change its coordinate xi to xi−1 '
             'or to xi+ 1) . In other words, for each point, you choose ( '
             'separately) its new coordinate. For the i- th point, it can be '
             'either xi−1, xi or xi+ 1. Your task is to determine if you can '
             'move some points as described above in such a way that the new '
             'set of points forms a consecutive segment of integers, i. e. for '
             'some integer l the coordinates of points should be equal to l, '
             'l+ 1, . . . , l+ n−1. Note that the resulting points should have '
             'distinct coordinates. You have to answer t independent test '
             'cases.',
  'input': 'The first line of the input contains one integer t ( 1≤t≤2⋅104) — '
           'the number of test cases. Then t test cases follow. The first line '
           'of the test case contains one integer n ( 1≤n≤2⋅105) — the number '
           'of points in the set x. The second line of the test case contains '
           'n integers x1< x2< . . . < xn ( 1≤xi≤106) , where xi is the '
           'coordinate of the i- th point. It is guaranteed that the points '
           'are given in strictly increasing order ( this also means that all '
           'coordinates are distinct) . It is also guaranteed that the sum of '
           'n does not exceed 2⋅105 ( ∑n≤2⋅105) .',
  'note': ' ',
  'output': 'For each test case, print the answer — if the set of points from '
            'the test case can be moved to form a consecutive segment of '
            'integers, print YES, otherwise print NO.',
  'title': 'Consecutive Points Segment',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1671/B'},
 {'history': 'You are given a rooted tree of 2n−1 vertices. Every vertex of '
             'this tree has either 0 children, or 2 children. All leaves of '
             'this tree have the same distance from the root, and for every '
             'non- leaf vertex, one of its children is the left one, and the '
             'other child is the right one. Formally, you are given a perfect '
             'binary tree. The vertices of the tree are numbered in the '
             'following order: the root has index 1; if a vertex has index x, '
             'then its left child has index 2x, and its right child has index '
             '2x+ 1. Every vertex of the tree has a letter written on it, '
             "either A or B. Let' s define the character on the vertex x as "
             'sx. Let the preorder string of some vertex x be defined in the '
             'following way: if the vertex x is a leaf, then the preorder '
             'string of x be consisting of only one character sx; otherwise, '
             'the preorder string of x is sx+ f( lx) + f( rx) , where + '
             'operator defines concatenation of strings, f( lx) is the '
             'preorder string of the left child of x, and f( rx) is the '
             'preorder string of the right child of x. The preorder string of '
             'the tree is the preorder string of its root. Now, for the '
             'problem itself. . . You have to calculate the number of '
             'different strings that can be obtained as the preorder string of '
             'the given tree, if you are allowed to perform the following '
             'operation any number of times before constructing the preorder '
             'string of the tree: choose any non- leaf vertex x, and swap its '
             'children ( so, the left child becomes the right one, and vice '
             'versa) .',
  'input': 'The first line contains one integer n ( 2≤n≤18) . The second line '
           'contains a sequence of 2n−1 characters s1, s2, . . . , s2n−1. Each '
           'character is either A or B. The characters are not separated by '
           'spaces or anything else.',
  'note': ' ',
  'output': 'Print one integer — the number of different strings that can be '
            'obtained as the preorder string of the given tree, if you can '
            'apply any number of operations described in the statement. Since '
            'it can be very large, print it modulo 998244353.',
  'title': 'Preorder',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1671/E'},
 {'history': 'There are n logs, the i - th log has a length of a_ i meters. '
             'Since chopping logs is tiring work, errorgorn and maomao90 have '
             'decided to play a game. errorgorn and maomao90 will take turns '
             'chopping the logs with errorgorn chopping first. On his turn, '
             'the player will pick a log and chop it into 2 pieces. If the '
             'length of the chosen log is x , and the lengths of the resulting '
             'pieces are y and z , then y and z have to be positive integers, '
             'and x= y+ z must hold. For example, you can chop a log of length '
             '3 into logs of lengths 2 and 1 , but not into logs of lengths 3 '
             'and 0 , 2 and 2 , or 1. 5 and 1. 5 . The player who is unable to '
             'make a chop will be the loser. Assuming that both errorgorn and '
             'maomao90 play optimally, who will be the winner?',
  'input': 'Each test contains multiple test cases. The first line contains a '
           'single integer t ( 1 ≤ t ≤ 100 ) — the number of test cases. The '
           'description of the test cases follows. The first line of each test '
           'case contains a single integer n ( 1 ≤ n ≤ 50 ) — the number of '
           'logs. The second line of each test case contains n integers a_ 1, '
           'a_ 2, . . . , a_ n ( 1 ≤ a_ i ≤ 50 ) — the lengths of the logs. '
           'Note that there is no bound on the sum of n over all test cases.',
  'note': 'In the first test case, errorgorn will be the winner. An optimal '
          'move is to chop the log of length 4 into 2 logs of length 2 . After '
          'this there will only be 4 logs of length 2 and 1 log of length 1 . '
          'After this, the only move any player can do is to chop any log of '
          'length 2 into 2 logs of length 1 . After 4 moves, it will be '
          "maomao90' s turn and he will not be able to make a move. Therefore "
          'errorgorn will be the winner. In the second test case, errorgorn '
          'will not be able to make a move on his first turn and will '
          'immediately lose, making maomao90 the winner.',
  'output': 'For each test case, print " errorgorn" if errorgorn wins or " '
            'maomao90" if maomao90 wins. ( Output without quotes) .',
  'title': 'Log Chopping',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1672/A'},
 {'history': "Let' s call a string good if its length is at least 2 and all of "
             'its characters are except for the last character which is . The '
             'good strings are , , , . . . . Note that is not a good string. '
             'You are given an initially empty string s_ 1 . You can perform '
             'the following operation any number of times: Choose any position '
             'of s_ 1 and insert some good string in that position. Given a '
             'string s_ 2 , can we turn s_ 1 into s_ 2 after some number of '
             'operations?',
  'input': 'Each test contains multiple test cases. The first line contains a '
           'single integer t ( 1 ≤ t ≤ 10^ 4 ) — the number of test cases. The '
           'description of the test cases follows. The first line of each test '
           'case contains a single string s_ 2 ( 1 ≤ | s_ 2| ≤ 2 · 10^ 5 ) . '
           'It is guaranteed that s_ 2 consists of only the characters and . '
           'It is guaranteed that the sum of | s_ 2| over all test cases does '
           'not exceed 2 · 10^ 5 .',
  'note': 'In the first test case, we transform s_ 1 as such: ∅→→ . In the '
          'third test case, we transform s_ 1 as such: ∅→ . In the second and '
          'fourth test case, it can be shown that it is impossible to turn s_ '
          '1 into s_ 2 .',
  'output': 'For each test case, print " YES" ( without quotes) if we can turn '
            's_ 1 into s_ 2 after some number of operations, and " NO" ( '
            'without quotes) otherwise. You can output " YES" and " NO" in any '
            'case ( for example, strings " yEs" , " yes" and " Yes" will be '
            'recognized as a positive response) .',
  'title': 'I love AAAB',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1672/B'},
 {'history': 'You are given an array a of length n . We define the equality of '
             'the array as the number of indices 1 ≤ i ≤ n - 1 such that a_ i '
             '= a_ i + 1 . We are allowed to do the following operation: '
             'Select two integers i and x such that 1 ≤ i ≤ n - 1 and 1 ≤ x ≤ '
             '10^ 9 . Then, set a_ i and a_ i + 1 to be equal to x . Find the '
             'minimum number of operations needed such that the equality of '
             'the array is less than or equal to 1 .',
  'input': 'Each test contains multiple test cases. The first line contains a '
           'single integer t ( 1 ≤ t ≤ 10^ 4 ) — the number of test cases. The '
           'description of the test cases follows. The first line of each test '
           'case contains an integer n ( 2 ≤ n ≤ 2 · 10 ^ 5 ) — the length of '
           'array a . The second line of each test case contains n integers a_ '
           '1, a_ 2, . . . , a_ n ( 1 ≤ a_ i ≤ 10^ 9 ) — elements of the '
           'array. It is guaranteed that the sum of n over all test cases does '
           'not exceed 2 · 10 ^ 5',
  'note': 'In the first test case, we can select i= 2 and x= 2 to form [ 1, 2, '
          '2, 1, 1] . Then, we can select i= 3 and x= 3 to form [ 1, 2, 3, 3, '
          '1] . In the second test case, we can select i= 3 and x= 100 to form '
          '[ 2, 1, 100, 100, 2] .',
  'output': 'For each test case, print the minimum number of operations '
            'needed.',
  'title': 'Unequal Array',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1672/C'},
 {'history': 'There is an array a of length n . You may perform the following '
             'operation any number of times: Choose two indices l and r where '
             '1 ≤ l < r ≤ n and a_ l = a_ r . Then, set a[ l . . . r] = [ a_ '
             'l+ 1, a_ l+ 2, . . . , a_ r, a_ l] . You are also given another '
             'array b of length n which is a permutation of a . Determine '
             'whether it is possible to transform array a into an array b '
             'using the above operation some number of times.',
  'input': 'Each test contains multiple test cases. The first line contains a '
           'single integer t ( 1 ≤ t ≤ 10^ 4 ) — the number of test cases. The '
           'description of the test cases follows. The first line of each test '
           'case contains an integer n ( 1 ≤ n ≤ 2 · 10 ^ 5 ) — the length of '
           'array a and b . The second line of each test case contains n '
           'integers a_ 1, a_ 2, . . . , a_ n ( 1 ≤ a_ i ≤ n ) — elements of '
           'the array a . The third line of each test case contains n integers '
           'b_ 1, b_ 2, . . . , b_ n ( 1 ≤ b_ i ≤ n ) — elements of the array '
           'b . It is guaranteed that b is a permutation of a . It is '
           'guaranteed that the sum of n over all test cases does not exceed 2 '
           '· 10 ^ 5',
  'note': 'In the first test case, we can choose l= 2 and r= 5 to form [ 1, 3, '
          '3, 2, 2] . In the second test case, we can choose l= 2 and r= 4 to '
          'form [ 1, 4, 2, 2, 1] . Then, we can choose l= 1 and r= 5 to form [ '
          '4, 2, 2, 1, 1] . In the third test case, it can be proven that it '
          'is not possible to transform array a to b using the operation.',
  'output': 'For each test case, print " YES" ( without quotes) if it is '
            'possible to transform array a to b , and " NO" ( without quotes) '
            'otherwise. You can output " YES" and " NO" in any case ( for '
            'example, strings " yEs" , " yes" and " Yes" will be recognized as '
            'a positive response) .',
  'title': 'Cyclic Rotation',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1672/D'},
 {'history': 'Alice and Bob are playing a game with strings. There will be t '
             'rounds in the game. In each round, there will be a string s '
             'consisting of lowercase English letters. Alice moves first and '
             'both the players take alternate turns. Alice is allowed to '
             'remove any substring of even length ( possibly empty) and Bob is '
             'allowed to remove any substring of odd length from s. More '
             'formally, if there was a string s= s1s2. . . sk the player can '
             'choose a substring slsl+ 1. . . sr−1sr with length of '
             'corresponding parity and remove it. After that the string will '
             'become s= s1. . . sl−1sr+ 1. . . sk. After the string becomes '
             'empty, the round ends and each player calculates his/ her score '
             'for this round. The score of a player is the sum of values of '
             'all characters removed by him/ her. The value of a is 1, the '
             'value of b is 2, the value of c is 3, . . . , and the value of z '
             'is 26. The player with higher score wins the round. For each '
             "round, determine the winner and the difference between winner' s "
             "and loser' s scores. Assume that both players play optimally to "
             'maximize their score. It can be proved that a draw is '
             'impossible.',
  'input': 'The first line of input contains a single integer t ( 1≤t≤5⋅104) '
           'denoting the number of rounds. Each of the next t lines contain a '
           'single string s ( 1≤| s| ≤2⋅105) consisting of lowercase English '
           'letters, denoting the string used for the round. Here | s| denotes '
           'the length of the string s. It is guaranteed that the sum of | s| '
           'over all rounds does not exceed 2⋅105.',
  'note': 'For the first round, " aba" Alice→" aba" →" a" Bob→" a" →" " . '
          "Alice' s total score is 1+ 2= 3. Bob' s total score is 1. For the "
          'second round, " abc" Alice→" abc" →" a" Bob→" a" →" " . Alice\' s '
          "total score is 2+ 3= 5. Bob' s total score is 1. For the third "
          'round, " cba" Alice→" cba" →" a" Bob→" a" →" " . Alice\' s total '
          'score is 3+ 2= 5. Bob\' s total score is 1. For the fourth round, " '
          'n" Alice→" n" →" n" Bob→" n" →" " . Alice\' s total score is 0. '
          'Bob\' s total score is 14. For the fifth round, " codeforces" '
          'Alice→" codeforces" →" " . Alice\' s total score is 3+ 15+ 4+ 5+ 6+ '
          "15+ 18+ 3+ 5+ 19= 93. Bob' s total score is 0.",
  'output': 'For each round, print a single line containing a string and an '
            'integer. If Alice wins the round, the string must be " Alice" . '
            'If Bob wins the round, the string must be " Bob" . The integer '
            'must be the difference between their scores assuming both players '
            'play optimally.',
  'title': 'Subtle Substring Subtraction',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1673/A'},
 {'history': "Let' s call a string s perfectly balanced if for all possible "
             'triplets ( t, u, v) such that t is a non- empty substring of s '
             'and u and v are characters present in s, the difference between '
             'the frequencies of u and v in t is not more than 1. For example, '
             'the strings " aba" and " abc" are perfectly balanced but " abb" '
             'is not because for the triplet ( " bb" , \' a\' , \' b\' ) , the '
             'condition is not satisfied. You are given a string s consisting '
             'of lowercase English letters only. Your task is to determine '
             'whether s is perfectly balanced or not. A string b is called a '
             'substring of another string a if b can be obtained by deleting '
             'some characters ( possibly 0) from the start and some characters '
             '( possibly 0) from the end of a.',
  'input': 'The first line of input contains a single integer t ( 1≤t≤2⋅104) '
           'denoting the number of testcases. Each of the next t lines contain '
           'a single string s ( 1≤| s| ≤2⋅105) , consisting of lowercase '
           'English letters. It is guaranteed that the sum of | s| over all '
           'testcases does not exceed 2⋅105.',
  'note': 'Let ft( c) represent the frequency of character c in string t. For '
          'the first testcase we have tft( a) ft( b) a10ab11aba21b01ba11 It '
          'can be seen that for any substring t of s, the difference between '
          'ft( a) and ft( b) is not more than 1. Hence the string s is '
          'perfectly balanced. For the second testcase we have tft( a) ft( b) '
          'a10ab11abb12b01bb02 It can be seen that for the substring t= bb, '
          'the difference between ft( a) and ft( b) is 2 which is greater than '
          '1. Hence the string s is not perfectly balanced. For the third '
          'testcase we have tft( a) ft( b) ft( c) '
          'a100ab110abc111b010bc011c001It can be seen that for any substring t '
          'of s and any two characters u, v∈a, b, c, the difference between '
          'ft( u) and ft( v) is not more than 1. Hence the string s is '
          'perfectly balanced.',
  'output': 'For each test case, print " YES" if s is a perfectly balanced '
            'string, and " NO" otherwise. You may print each letter in any '
            'case ( for example, " YES" , " Yes" , " yes" , " yEs" will all be '
            'recognized as positive answer) .',
  'title': 'A Perfectly Balanced String?',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1673/B'},
 {'history': "You are given a string s, consisting only of Latin letters ' a' "
             ', and a string t, consisting of lowercase Latin letters. In one '
             "move, you can replace any letter ' a' in the string s with a "
             'string t. Note that after the replacement string s might contain '
             "letters other than ' a' . You can perform an arbitrary number of "
             'moves ( including zero) . How many different strings can you '
             'obtain? Print the number, or report that it is infinitely large. '
             'Two strings are considered different if they have different '
             'length, or they differ at some index.',
  'input': 'The first line contains a single integer q ( 1≤q≤104) — the number '
           'of testcases. The first line of each testcase contains a non- '
           "empty string s, consisting only of Latin letters ' a' . The length "
           "of s doesn' t exceed 50. The second line contains a non- empty "
           'string t, consisting of lowercase Latin letters. The length of t '
           "doesn' t exceed 50.",
  'note': "In the first example, you can replace any letter ' a' with the "
          'string " a" , but that won\' t change the string. So no matter how '
          "many moves you make, you can' t obtain a string other than the "
          'initial one. In the second example, you can replace the second '
          'letter \' a\' with " abc" . String s becomes equal to " aabc" . '
          'Then the second letter \' a\' again. String s becomes equal to " '
          'aabcbc" . And so on, generating infinitely many different strings. '
          'In the third example, you can either leave string s as is, '
          'performing zero moves, or replace the only \' a\' with " b" . '
          'String s becomes equal to " b" , so you can\' t perform more moves '
          'on it.',
  'output': 'For each testcase, print the number of different strings s that '
            'can be obtained after an arbitrary amount of moves ( including '
            'zero) . If the number is infinitely large, print - 1. Otherwise, '
            'print the number.',
  'title': 'Infinite Replacement',
  'topics': ['implementation', 'strings'],
  'url': 'https://codeforces.com/problemset/problem/1674/C'},
 {'history': 'You are given three arrays a, b and c. Initially, array a '
             'consists of n elements, arrays b and c are empty. You are '
             'performing the following algorithm that consists of two steps: '
             'Step 1: while a is not empty, you take the last element from a '
             'and move it in the middle of array b. If b currently has odd '
             'length, you can choose: place the element from a to the left or '
             'to the right of the middle element of b. As a result, a becomes '
             'empty and b consists of n elements. Step 2: while b is not '
             'empty, you take the middle element from b and move it to the end '
             'of array c. If b currently has even length, you can choose which '
             'of two middle elements to take. As a result, b becomes empty and '
             'c now consists of n elements. Refer to the Note section for '
             'examples. Can you make array c sorted in non- decreasing order?',
  'input': 'The first line contains a single integer t ( 1≤t≤2⋅104) — the '
           'number of test cases. Next t cases follow. The first line of each '
           'test case contains the single integer n ( 1≤n≤2⋅105) — the length '
           'of array a. The second line of each test case contains n integers '
           "a1, a2, . . . , an ( 1≤ai≤106) — the array a itself. It' s "
           "guaranteed that the sum of n doesn' t exceed 2⋅105.",
  'note': 'In the first test case, we can do the following for a= [ 3, 1, 5, '
          '3] : Step 1: a[ 3, 1, 5, 3] ⇒[ 3, 1, 5] ⇒[ 3, 1] ⇒[ 3] ⇒[ ] b[ ] [ '
          '3_ ] [ 3, 5_ ] [ 3, 1_ , 5] [ 3, 3_ , 1, 5] Step 2: b[ 3, 3, 1_ , '
          '5] ⇒[ 3, 3_ , 5] ⇒[ 3_ , 5] ⇒[ 5_ ] ⇒[ ] c[ ] [ 1] [ 1, 3] [ 1, 3, '
          "3] [ 1, 3, 3, 5] As a result, array c= [ 1, 3, 3, 5] and it' s "
          'sorted.',
  'output': 'For each test, print YES ( case- insensitive) , if you can make '
            'array c sorted in non- decreasing order. Otherwise, print NO ( '
            'case- insensitive) .',
  'title': 'A-B-C Sort',
  'topics': ['implementation', 'sortings'],
  'url': 'https://codeforces.com/problemset/problem/1674/D'},
 {'history': 'Your friend Ivan asked you to help him rearrange his desktop. '
             'The desktop can be represented as a rectangle matrix of size n × '
             "m consisting of characters ' . ' ( empty cell of the desktop) "
             "and ' * ' ( an icon) . The desktop is called good if all its "
             'icons are occupying some prefix of full columns and, possibly, '
             'the prefix of the next column ( and there are no icons outside '
             'this figure) . In other words, some amount of first columns will '
             'be filled with icons and, possibly, some amount of first cells '
             'of the next ( after the last full column) column will be also '
             'filled with icons ( and all the icons on the desktop belong to '
             'this figure) . This is pretty much the same as the real life '
             'icons arrangement. In one move, you can take one icon and move '
             'it to any empty cell in the desktop. Ivan loves to add some '
             'icons to his desktop and remove them from it, so he is asking '
             'you to answer q queries: what is the minimum number of moves '
             'required to make the desktop good after adding/ removing one '
             'icon? Note that queries are permanent and change the state of '
             'the desktop.',
  'input': 'The first line of the input contains three integers n , m and q ( '
           '1 ≤ n, m ≤ 1000; 1 ≤ q ≤ 2 · 10^ 5 ) — the number of rows in the '
           'desktop, the number of columns in the desktop and the number of '
           'queries, respectively. The next n lines contain the description of '
           "the desktop. The i - th of them contains m characters ' . ' and ' "
           "* ' — the description of the i - th row of the desktop. The next q "
           'lines describe queries. The i - th of them contains two integers '
           'x_ i and y_ i ( 1 ≤ x_ i ≤ n; 1 ≤ y_ i ≤ m ) — the position of the '
           'cell which changes its state ( if this cell contained the icon '
           'before, then this icon is removed, otherwise an icon appears in '
           'this cell) .',
  'note': ' ',
  'output': 'Print q integers. The i - th of them should be the minimum number '
            'of moves required to make the desktop good after applying the '
            'first i queries.',
  'title': 'Desktop Rearrangement',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1674/F'},
 {'history': 'Given n integers a_ 1, a_ 2, . . . , a_ n . You can perform the '
             'following operation on them: select any element a_ i ( 1 ≤ i ≤ n '
             ') and divide it by 2 ( round down) . In other words, you can '
             'replace any selected element a_ i with the value ⌊a_ i/ 2⌋ ( '
             'where ⌊ x ⌋ is – round down the real number x ) . Output the '
             'minimum number of operations that must be done for a sequence of '
             'integers to become strictly increasing ( that is, for the '
             'condition a_ 1 a_ 2 . . . a_ n to be satisfied) . Or determine '
             'that it is impossible to obtain such a sequence. Note that '
             'elements cannot be swapped. The only possible operation is '
             'described above. For example, let n = 3 and a sequence of '
             'numbers [ 3, 6, 5] be given. Then it is enough to perform two '
             'operations on it: Write the number ⌊6/ 2⌋ = 3 instead of the '
             'number a_ 2= 6 and get the sequence [ 3, 3, 5] ; Then replace a_ '
             '1= 3 with ⌊3/ 2⌋ = 1 and get the sequence [ 1, 3, 5] . The '
             'resulting sequence is strictly increasing because 1 3 5 .',
  'input': 'The first line of the input contains an integer t ( 1 ≤ t ≤ 10^ 4 '
           ') — the number of test cases in the input. The descriptions of the '
           'test cases follow. The first line of each test case contains a '
           'single integer n ( 1 ≤ n ≤ 30 ) . The second line of each test '
           'case contains exactly n integers a_ 1, a_ 2, . . . , a_ n ( 0 ≤ a_ '
           'i ≤ 2 · 10^ 9 ) .',
  'note': 'The first test case is analyzed in the statement. In the second '
          'test case, it is impossible to obtain a strictly increasing '
          'sequence. In the third test case, the sequence is already strictly '
          'increasing.',
  'output': 'For each test case, print a single number on a separate line — '
            'the minimum number of operations to perform on the sequence to '
            'make it strictly increasing. If a strictly increasing sequence '
            'cannot be obtained, print " - 1" .',
  'title': 'Make It Increasing',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1675/B'},
 {'history': 'Polycarp bought a new expensive painting and decided to show it '
             'to his n friends. He hung it in his room. n of his friends '
             'entered and exited there one by one. At one moment there was no '
             'more than one person in the room. In other words, the first '
             'friend entered and left first, then the second, and so on. It is '
             'known that at the beginning ( before visiting friends) a picture '
             'hung in the room. At the end ( after the n - th friend) it '
             'turned out that it disappeared. At what exact moment it '
             'disappeared — there is no information. Polycarp asked his '
             'friends one by one. He asked each one if there was a picture '
             'when he entered the room. Each friend answered one of three: no '
             "( response encoded with 0) ; yes ( response encoded as 1) ; can' "
             't remember ( response is encoded with ? ) . Everyone except the '
             "thief either doesn' t remember or told the truth. The thief can "
             'say anything ( any of the three options) . Polycarp cannot '
             'understand who the thief is. He asks you to find out the number '
             'of those who can be considered a thief according to the answers.',
  'input': 'The first number t ( 1 ≤ t ≤ 10^ 4 ) — the number of test cases in '
           'the test. The following is a description of test cases. The first '
           'line of each test case contains one string s ( length does not '
           "exceed 2 · 10^ 5 ) — a description of the friends' answers, where "
           's_ i indicates the answer of the i - th friend. Each character in '
           'the string is either 0 or 1 or ? . The given regularity is '
           'described in the actual situation. In particular, on the basis of '
           'answers, at least one friend can be suspected of stealing a '
           'painting. It is guaranteed that the sum of string lengths over the '
           'entire input data set does not exceed 2 · 10^ 5 .',
  'note': 'In the first case, the answer is 1 since we had exactly 1 friend. '
          'The second case is similar to the first. In the third case, the '
          'suspects are the third and fourth friends ( we count from one) . It '
          'can be shown that no one else could be the thief. In the fourth '
          'case, we know absolutely nothing, so we suspect everyone.',
  'output': 'Output one positive ( strictly more zero) number – the number of '
            'people who could steal the picture based on the data shown.',
  'title': 'Detective Task',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1675/C'},
 {'history': 'You are given a rooted tree consisting of n vertices. Vertices '
             'are numbered from 1 to n. Any vertex can be the root of a tree. '
             'A tree is a connected undirected graph without cycles. A rooted '
             'tree is a tree with a selected vertex, which is called the root. '
             'The tree is specified by an array of parents p containing n '
             'numbers: pi is a parent of the vertex with the index i. The '
             'parent of a vertex u is a vertex that is the next vertex on the '
             'shortest path from u to the root. For example, on the simple '
             'path from 5 to 3 ( the root) , the next vertex would be 1, so '
             'the parent of 5 is 1. The root has no parent, so for it, the '
             'value of pi is i ( the root is the only vertex for which pi= i) '
             '. Find such a set of paths that: each vertex belongs to exactly '
             'one path, each path can contain one or more vertices; in each '
             'path each next vertex — is a son of the current vertex ( that '
             'is, paths always lead down — from parent to son) ; number of '
             'paths is minimal. For example, if n= 5 and p= [ 3, 1, 3, 3, 1] , '
             'then the tree can be divided into three paths: 3→1→5 ( path of 3 '
             'vertices) , 4 ( path of 1 vertices) . 2 ( path of 1 vertices) . '
             'Example of splitting a root tree into three paths for n= 5, the '
             'root of the tree — node 3.',
  'input': 'The first line of input data contains an integer t ( 1≤t≤104) — '
           'the number of test cases in the test. Each test case consists of '
           'two lines. The first of them contains an integer n ( 1≤n≤2⋅105) . '
           'It is the number of vertices in the tree. The second line contains '
           'n integers p1, p2, . . . , pn ( 1≤pi≤n) . It is guaranteed that '
           'the p array encodes some rooted tree. It is guaranteed that the '
           'sum of the values n over all test cases in the test does not '
           'exceed 2⋅105.',
  'note': ' ',
  'output': 'For each test case on the first line, output an integer m — the '
            'minimum number of non- intersecting leading down paths that can '
            'cover all vertices of the tree. Then print m pairs of lines '
            'containing path descriptions. In the first of them print the '
            'length of the path, in the second — the sequence of vertices '
            'specifying that path in the order from top to bottom. You can '
            'output the paths in any order. If there are several answers, '
            'output any of them.',
  'title': 'Vertical Paths',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1675/D'},
 {'history': 'You are given a string s of lowercase Latin letters. The '
             "following operation can be used: select one character ( from ' "
             "a' to ' z' ) that occurs at least once in the string. And "
             'replace all such characters in the string with the previous one '
             "in alphabetical order on the loop. For example, replace all ' c' "
             "with ' b' or replace all ' a' with ' z' . And you are given the "
             'integer k — the maximum number of operations that can be '
             'performed. Find the minimum lexicographically possible string '
             'that can be obtained by performing no more than k operations. '
             'The string a= a1a2. . . an is lexicographically smaller than the '
             'string b= b1b2. . . bn if there exists an index k ( 1≤k≤n) such '
             'that a1= b1, a2= b2, . . . , ak−1= bk−1, but ak< bk.',
  'input': 'The first line contains a single integer t ( 1≤t≤104) —the number '
           'of test cases in the test. This is followed by descriptions of the '
           'test cases. The first line of each test case contains two integers '
           'n and k ( 1≤n≤2⋅105, 1≤k≤109) — the size of the string s and the '
           'maximum number of operations that can be performed on the string '
           's. The second line of each test case contains a string s of length '
           'n consisting of lowercase Latin letters. It is guaranteed that the '
           'sum n over all test cases does not exceed 2⋅105.',
  'note': ' ',
  'output': 'For each test case, output the lexicographically minimal string '
            'that can be obtained from the string s by performing no more than '
            'k operations.',
  'title': 'Replace With the Previous, Minimize',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1675/E'},
 {'history': 'A ticket is a string consisting of six digits. A ticket is '
             'considered lucky if the sum of the first three digits is equal '
             'to the sum of the last three digits. Given a ticket, output if '
             'it is lucky or not. Note that a ticket can have leading zeroes.',
  'input': 'The first line of the input contains an integer t ( 1 ≤ t ≤ 10^ 3 '
           ') — the number of testcases. The description of each test consists '
           'of one line containing one string consisting of six digits.',
  'note': 'In the first test case, the sum of the first three digits is 2 + 1 '
          '+ 3 = 6 and the sum of the last three digits is 1 + 3 + 2 = 6 , '
          'they are equal so the answer is " YES" . In the second test case, '
          'the sum of the first three digits is 9 + 7 + 3 = 19 and the sum of '
          'the last three digits is 8 + 9 + 4 = 21 , they are not equal so the '
          'answer is " NO" . In the third test case, the sum of the first '
          'three digits is 0 + 4 + 5 = 9 and the sum of the last three digits '
          'is 2 + 0 + 7 = 9 , they are equal so the answer is " YES" .',
  'output': 'Output t lines, each of which contains the answer to the '
            'corresponding test case. Output " YES" if the given ticket is '
            'lucky, and " NO" otherwise. You can output the answer in any case '
            '( for example, the strings " yEs" , " yes" , " Yes" and " YES" '
            'will be recognized as a positive answer) .',
  'title': 'Lucky?',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1676/A'},
 {'history': 'There are n boxes with different quantities of candies in each '
             'of them. The i- th box has ai candies inside. You also have n '
             'friends that you want to give the candies to, so you decided to '
             "give each friend a box of candies. But, you don' t want any "
             'friends to get upset so you decided to eat some ( possibly none) '
             'candies from each box so that all boxes have the same quantity '
             'of candies in them. Note that you may eat a different number of '
             'candies from different boxes and you cannot add candies to any '
             "of the boxes. What' s the minimum total number of candies you "
             'have to eat to satisfy the requirements?',
  'input': 'The first line contains an integer t ( 1≤t≤1000) — the number of '
           'test cases. The first line of each test case contains an integer n '
           '( 1≤n≤50) — the number of boxes you have. The second line of each '
           'test case contains n integers a1, a2, . . . , an ( 1≤ai≤107) — the '
           'quantity of candies in each box.',
  'note': 'For the first test case, you can eat 1 candy from the second box, 2 '
          'candies from the third box, 3 candies from the fourth box and 4 '
          'candies from the fifth box. Now the boxes have [ 1, 1, 1, 1, 1] '
          'candies in them and you ate 0+ 1+ 2+ 3+ 4= 10 candies in total so '
          'the answer is 10. For the second test case, the best answer is '
          'obtained by making all boxes contain 5 candies in them, thus eating '
          '995+ 995+ 0+ 995+ 995+ 995= 4975 candies in total.',
  'output': 'For each test case, print a single integer denoting the minimum '
            'number of candies you have to eat to satisfy the requirements.',
  'title': 'Equal Candies',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1676/B'},
 {'history': 'You are given n words of equal length m, consisting of lowercase '
             'Latin alphabet letters. The i- th word is denoted si. In one '
             'move you can choose any position in any single word and change '
             'the letter at that position to the previous or next letter in '
             "alphabetical order. For example: you can change ' e' to ' d' or "
             "to ' f' ; ' a' can only be changed to ' b' ; ' z' can only be "
             "changed to ' y' . The difference between two words is the "
             'minimum number of moves required to make them equal. For '
             'example, the difference between " best" and " cost" is 1+ 10+ 0+ '
             '0= 11. Find the minimum difference of si and sj such that ( i< '
             'j) . In other words, find the minimum difference over all '
             'possible pairs of the n words.',
  'input': 'The first line of the input contains a single integer t ( 1≤t≤100) '
           '— the number of test cases. The description of test cases follows. '
           'The first line of each test case contains 2 integers n and m ( '
           '2≤n≤50, 1≤m≤8) — the number of strings and their length '
           'respectively. Then follows n lines, the i- th of which containing '
           'a single string si of length m, consisting of lowercase Latin '
           'letters.',
  'note': 'For the second test case, one can show that the best pair is ( " '
          'abb" , " bef" ) , which has difference equal to 8, which can be '
          'obtained in the following way: change the first character of the '
          "first string to ' b' in one move, change the second character of "
          "the second string to ' b' in 3 moves and change the third character "
          "of the second string to ' b' in 4 moves, thus making in total 1+ 3+ "
          '4= 8 moves. For the third test case, there is only one possible '
          'pair and it can be shown that the minimum amount of moves necessary '
          'to make the strings equal is 35. For the fourth test case, there is '
          'a pair of strings which is already equal, so the answer is 0.',
  'output': 'For each test case, print a single integer — the minimum '
            'difference over all possible pairs of the given strings.',
  'title': 'Most Similar Words',
  'topics': ['implementation', 'implementation', 'strings'],
  'url': 'https://codeforces.com/problemset/problem/1676/C'},
 {'history': "Timur' s grandfather gifted him a chessboard to practice his "
             'chess skills. This chessboard is a grid a with n rows and m '
             'columns with each cell having a non- negative integer written on '
             "it. Timur' s challenge is to place a bishop on the board such "
             'that the sum of all cells attacked by the bishop is maximal. The '
             'bishop attacks in all directions diagonally, and there is no '
             'limit to the distance which the bishop can attack. Note that the '
             'cell on which the bishop is placed is also considered attacked. '
             'Help him find the maximal sum he can get.',
  'input': 'The first line of the input contains a single integer t ( 1 ≤ t ≤ '
           '1000 ) — the number of test cases. The description of test cases '
           'follows. The first line of each test case contains the integers n '
           'and m ( 1 ≤ n ≤ 200 , 1 ≤ m ≤ 200 ) . The following n lines '
           'contain m integers each, the j - th element of the i - th line a_ '
           'ij is the number written in the j - th cell of the i - th row ( 0≤ '
           'a_ ij≤ 10^ 6) It is guaranteed that the sum of n· m over all test '
           'cases does not exceed 4·10^ 4 .',
  'note': 'For the first test case here the best sum is achieved by the bishop '
          'being in this position:',
  'output': 'For each test case output a single integer, the maximum sum over '
            'all possible placements of the bishop.',
  'title': 'X-Sum',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1676/D'},
 {'history': 'Timur has n candies. The i- th candy has a quantity of sugar '
             'equal to ai. So, by eating the i- th candy, Timur consumes a '
             'quantity of sugar equal to ai. Timur will ask you q queries '
             'regarding his candies. For the j- th query you have to answer '
             'what is the minimum number of candies he needs to eat in order '
             'to reach a quantity of sugar greater than or equal to xj or '
             "print - 1 if it' s not possible to obtain such a quantity. In "
             'other words, you should print the minimum possible k such that '
             'after eating k candies, Timur consumes a quantity of sugar of at '
             "least xj or say that no possible k exists. Note that he can' t "
             'eat the same candy twice and queries are independent of each '
             'other ( Timur can use the same candy in different queries) .',
  'input': 'The first line of input contains a single integer t ( 1≤t≤1000) — '
           'the number of test cases. The description of test cases follows. '
           'The first line contains 2 integers n and q ( 1≤n, q≤1. 5⋅105) — '
           'the number of candies Timur has and the number of queries you have '
           'to print an answer for respectively. The second line contains n '
           'integers a1, a2, . . . , an ( 1≤ai≤104) — the quantity of sugar in '
           'each of the candies respectively. Then q lines follow. Each of the '
           'next q lines contains a single integer xj ( 1≤xj≤2⋅109) – the '
           'quantity Timur wants to reach for the given query. It is '
           'guaranteed that the sum of n and the sum of q over all test cases '
           'do not exceed 1. 5⋅105.',
  'note': 'For the first test case: For the first query, Timur can eat any '
          'candy, and he will reach the desired quantity. For the second '
          'query, Timur can reach a quantity of at least 10 by eating the 7- '
          'th and the 8- th candies, thus consuming a quantity of sugar equal '
          'to 14. For the third query, there is no possible answer. For the '
          'fourth query, Timur can reach a quantity of at least 14 by eating '
          'the 7- th and the 8- th candies, thus consuming a quantity of sugar '
          'equal to 14. For the second test case: For the only query of the '
          'second test case, we can choose the third candy from which Timur '
          "receives exactly 3 sugar. It' s also possible to obtain the same "
          'answer by choosing the fourth candy.',
  'output': 'For each test case output q lines. For the j- th line output the '
            'number of candies Timur needs to eat in order to reach a quantity '
            "of sugar greater than or equal to xj or print - 1 if it' s not "
            'possible to obtain such a quantity.',
  'title': 'Eating Queries',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1676/E'},
 {'history': 'Given an array a of length n and an integer k, you are tasked to '
             'find any two numbers l and r ( l≤r) such that: For each x ( '
             'l≤x≤r) , x appears in a at least k times ( i. e. k or more array '
             'elements are equal to x) . The value r−l is maximized. If no '
             'numbers satisfy the conditions, output - 1. For example, if a= [ '
             '11, 11, 12, 13, 13, 14, 14] and k= 2, then: for l= 12, r= 14 the '
             'first condition fails because 12 does not appear at least k= 2 '
             'times. for l= 13, r= 14 the first condition holds, because 13 '
             'occurs at least k= 2 times in a and 14 occurs at least k= 2 '
             'times in a. for l= 11, r= 11 the first condition holds, because '
             '11 occurs at least k= 2 times in a. A pair of l and r for which '
             'the first condition holds and r−l is maximal is l= 13, r= 14.',
  'input': 'The first line of the input contains a single integer t ( '
           '1≤t≤1000) — the number of test cases. The description of test '
           'cases follows. The first line of each test case contains the '
           'integers n and k ( 1≤n≤2⋅105, 1≤k≤n) — the length of the array a '
           'and the minimum amount of times each number in the range [ l, r] '
           'should appear respectively. Then a single line follows, containing '
           'n integers describing the array a ( 1≤ai≤109) . It is guaranteed '
           'that the sum of n over all test cases does not exceed 2⋅105.',
  'note': ' ',
  'output': 'For each test case output 2 numbers, l and r that satisfy the '
            'conditions, or " - 1" if no numbers satisfy the conditions. If '
            'multiple answers exist, you can output any.',
  'title': 'Longest Strike',
  'topics': ['implementation', 'sortings'],
  'url': 'https://codeforces.com/problemset/problem/1676/F'},
 {'history': 'The only difference between the two versions is that in this '
             'version n≤2⋅105 and the sum of n over all test cases does not '
             'exceed 2⋅105. A terminal is a row of n equal segments numbered 1 '
             'to n in order. There are two terminals, one above the other. You '
             'are given an array a of length n. For all i= 1, 2, . . . , n, '
             'there should be a straight wire from some point on segment i of '
             'the top terminal to some point on segment ai of the bottom '
             "terminal. You can' t select the endpoints of a segment. For "
             'example, the following pictures show two possible wirings if n= '
             '7 and a= [ 4, 1, 4, 6, 7, 7, 5] . A crossing occurs when two '
             'wires share a point in common. In the picture above, crossings '
             'are circled in red. What is the maximum number of crossings '
             'there can be if you place the wires optimally?',
  'input': 'The first line contains an integer t ( 1≤t≤1000) — the number of '
           'test cases. The first line of each test case contains an integer n '
           '( 1≤n≤2⋅105) — the length of the array. The second line of each '
           'test case contains n integers a1, a2, . . . , an ( 1≤ai≤n) — the '
           'elements of the array. The sum of n across all test cases does not '
           'exceed 2⋅105.',
  'note': 'The first test case is shown in the second picture in the '
          'statement. In the second test case, the only wiring possible has '
          'the two wires cross, so the answer is 1. In the third test case, '
          'the only wiring possible has one wire, so the answer is 0.',
  'output': 'For each test case, output a single integer — the maximum number '
            'of crossings there can be if you place the wires optimally.',
  'title': 'Maximum Crossings (Hard Version)',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1676/H2'},
 {'history': 'Tokitsukaze is arranging a meeting. There are n rows and m '
             'columns of seats in the meeting hall. There are exactly n · m '
             'students attending the meeting, including several naughty '
             'students and several serious students. The students are '
             'numerated from 1 to n· m . The students will enter the meeting '
             'hall in order. When the i - th student enters the meeting hall, '
             'he will sit in the 1 - st column of the 1 - st row, and the '
             'students who are already seated will move back one seat. '
             'Specifically, the student sitting in the j - th ( 1≤ j ≤ m- 1 ) '
             'column of the i - th row will move to the ( j+ 1) - th column of '
             'the i - th row, and the student sitting in m - th column of the '
             'i - th row will move to the 1 - st column of the ( i+ 1) - th '
             'row. For example, there is a meeting hall with 2 rows and 2 '
             'columns of seats shown as below: There will be 4 students '
             'entering the meeting hall in order, represented as a binary '
             'string " 1100" , of which \' 0\' represents naughty students and '
             "' 1' represents serious students. The changes of seats in the "
             'meeting hall are as follows: Denote a row or a column good if '
             'and only if there is at least one serious student in this row or '
             'column. Please predict the number of good rows and columns just '
             'after the i - th student enters the meeting hall, for all i .',
  'input': 'The first contains a single positive integer t ( 1 ≤ t ≤ 10 000 ) '
           '— the number of test cases. For each test case, the first line '
           'contains two integers n , m ( 1 ≤ n, m ≤ 10^ 6 ; 1 ≤ n · m ≤ 10^ 6 '
           ') , denoting there are n rows and m columns of seats in the '
           'meeting hall. The second line contains a binary string s of length '
           "n · m , consisting only of zeros and ones. If s_ i equal to ' 0' "
           'represents the i - th student is a naughty student, and s_ i equal '
           "to ' 1' represents the i - th student is a serious student. It is "
           'guaranteed that the sum of n · m over all test cases does not '
           'exceed 10^ 6 .',
  'note': 'The first test case is shown in the statement. After the 1 - st '
          'student enters the meeting hall, there are 2 good rows and columns: '
          'the 1 - st row and the 1 - st column. After the 2 - nd student '
          'enters the meeting hall, there are 3 good rows and columns: the 1 - '
          'st row, the 1 - st column and the 2 - nd column. After the 3 - rd '
          'student enters the meeting hall, the 4 rows and columns are all '
          'good. After the 4 - th student enters the meeting hall, there are 3 '
          'good rows and columns: the 2 - nd row, the 1 - st column and the 2 '
          '- nd column.',
  'output': 'For each test case, print a single line with n · m integers — the '
            'number of good rows and columns just after the i - th student '
            'enters the meeting hall.',
  'title': 'Tokitsukaze and Meeting',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1677/B'},
 {'history': 'Tokitsukaze has a sequence a of length n . For each operation, '
             'she selects two numbers a_ i and a_ j ( i j ; 1 ≤ i, j ≤ n ) . '
             'If a_ i = a_ j , change one of them to 0 . Otherwise change both '
             'of them to min( a_ i, a_ j) . Tokitsukaze wants to know the '
             'minimum number of operations to change all numbers in the '
             'sequence to 0 . It can be proved that the answer always exists.',
  'input': 'The first line contains a single positive integer t ( 1 ≤ t ≤ 1000 '
           ') — the number of test cases. For each test case, the first line '
           'contains a single integer n ( 2 ≤ n ≤ 100 ) — the length of the '
           'sequence a . The second line contains n integers a_ 1, a_ 2, . . . '
           ', a_ n ( 0 ≤ a_ i ≤ 100 ) — the sequence a .',
  'note': 'In the first test case, one of the possible ways to change all '
          'numbers in the sequence to 0 : In the 1 - st operation, a_ 1 < a_ 2 '
          ', after the operation, a_ 2 = a_ 1 = 1 . Now the sequence a is [ 1, '
          '1, 3] . In the 2 - nd operation, a_ 1 = a_ 2 = 1 , after the '
          'operation, a_ 1 = 0 . Now the sequence a is [ 0, 1, 3] . In the 3 - '
          'rd operation, a_ 1 < a_ 2 , after the operation, a_ 2 = 0 . Now the '
          'sequence a is [ 0, 0, 3] . In the 4 - th operation, a_ 2 < a_ 3 , '
          'after the operation, a_ 3 = 0 . Now the sequence a is [ 0, 0, 0] . '
          'So the minimum number of operations is 4 .',
  'output': 'For each test case, print a single integer — the minimum number '
            'of operations to change all numbers in the sequence to 0 .',
  'title': 'Tokitsukaze and All Zero Sequence',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1678/A'},
 {'history': 'This is the easy version of the problem. The only difference '
             'between the two versions is that the harder version asks '
             'additionally for a minimum number of subsegments. Tokitsukaze '
             'has a binary string s of length n , consisting only of zeros and '
             'ones, n is even. Now Tokitsukaze divides s into the minimum '
             'number of contiguous subsegments, and for each subsegment, all '
             'bits in each subsegment are the same. After that, s is '
             'considered good if the lengths of all subsegments are even. For '
             'example, if s is " 11001111" , it will be divided into " 11" , " '
             '00" and " 1111" . Their lengths are 2 , 2 , 4 respectively, '
             'which are all even numbers, so " 11001111" is good. Another '
             'example, if s is " 1110011000" , it will be divided into " 111" '
             ', " 00" , " 11" and " 000" , and their lengths are 3 , 2 , 2 , 3 '
             '. Obviously, " 1110011000" is not good. Tokitsukaze wants to '
             'make s good by changing the values of some positions in s . '
             'Specifically, she can perform the operation any number of times: '
             "change the value of s_ i to ' 0' or ' 1' ( 1 ≤ i ≤ n ) . Can you "
             'tell her the minimum number of operations to make s good?',
  'input': 'The first contains a single positive integer t ( 1 ≤ t ≤ 10 000 ) '
           '— the number of test cases. For each test case, the first line '
           'contains a single integer n ( 2 ≤ n ≤ 2 · 10^ 5 ) — the length of '
           's , it is guaranteed that n is even. The second line contains a '
           'binary string s of length n , consisting only of zeros and ones. '
           'It is guaranteed that the sum of n over all test cases does not '
           'exceed 2 · 10^ 5 .',
  'note': 'In the first test case, one of the ways to make s good is the '
          "following. Change s_ 3 , s_ 6 and s_ 7 to ' 0' , after that s "
          'becomes " 1100000000" , it can be divided into " 11" and " '
          '00000000" , which lengths are 2 and 8 respectively. There are other '
          'ways to operate 3 times to make s good, such as " 1111110000" , " '
          '1100001100" , " 1111001100" . In the second, third and fourth test '
          'cases, s is good initially, so no operation is required.',
  'output': 'For each test case, print a single line with one integer — the '
            'minimum number of operations to make s good.',
  'title': 'Tokitsukaze and Good 01-String (easy version)',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1678/B1'},
 {'history': 'This is the hard version of the problem. The only difference '
             'between the two versions is that the harder version asks '
             'additionally for a minimum number of subsegments. Tokitsukaze '
             'has a binary string s of length n , consisting only of zeros and '
             'ones, n is even. Now Tokitsukaze divides s into the minimum '
             'number of contiguous subsegments, and for each subsegment, all '
             'bits in each subsegment are the same. After that, s is '
             'considered good if the lengths of all subsegments are even. For '
             'example, if s is " 11001111" , it will be divided into " 11" , " '
             '00" and " 1111" . Their lengths are 2 , 2 , 4 respectively, '
             'which are all even numbers, so " 11001111" is good. Another '
             'example, if s is " 1110011000" , it will be divided into " 111" '
             ', " 00" , " 11" and " 000" , and their lengths are 3 , 2 , 2 , 3 '
             '. Obviously, " 1110011000" is not good. Tokitsukaze wants to '
             'make s good by changing the values of some positions in s . '
             'Specifically, she can perform the operation any number of times: '
             "change the value of s_ i to ' 0' or ' 1' ( 1 ≤ i ≤ n ) . Can you "
             'tell her the minimum number of operations to make s good? '
             'Meanwhile, she also wants to know the minimum number of '
             'subsegments that s can be divided into among all solutions with '
             'the minimum number of operations.',
  'input': 'The first contains a single positive integer t ( 1 ≤ t ≤ 10 000 ) '
           '— the number of test cases. For each test case, the first line '
           'contains a single integer n ( 2 ≤ n ≤ 2 · 10^ 5 ) — the length of '
           's , it is guaranteed that n is even. The second line contains a '
           'binary string s of length n , consisting only of zeros and ones. '
           'It is guaranteed that the sum of n over all test cases does not '
           'exceed 2 · 10^ 5 .',
  'note': 'In the first test case, one of the ways to make s good is the '
          "following. Change s_ 3 , s_ 6 and s_ 7 to ' 0' , after that s "
          'becomes " 1100000000" , it can be divided into " 11" and " '
          '00000000" , which lengths are 2 and 8 respectively, the number of '
          'subsegments of it is 2 . There are other ways to operate 3 times to '
          'make s good, such as " 1111110000" , " 1100001100" , " 1111001100" '
          ", the number of subsegments of them are 2 , 4 , 4 respectively. It' "
          's easy to find that the minimum number of subsegments among all '
          'solutions with the minimum number of operations is 2 . In the '
          'second, third and fourth test cases, s is good initially, so no '
          'operation is required.',
  'output': 'For each test case, print a single line with two integers — the '
            'minimum number of operations to make s good, and the minimum '
            'number of subsegments that s can be divided into among all '
            'solutions with the minimum number of operations.',
  'title': 'Tokitsukaze and Good 01-String (hard version)',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1678/B2'},
 {'history': 'Once upon a time Mike and Mike decided to come up with an '
             'outstanding problem for some stage of ROI ( rare olympiad in '
             'informatics) . One of them came up with a problem prototype but '
             'another stole the idea and proposed that problem for another '
             'stage of the same olympiad. Since then the first Mike has been '
             'waiting for an opportunity to propose the original idea for some '
             'other contest. . . Mike waited until this moment! You are given '
             'an array a of n integers. You are also given q queries of two '
             'types: Replace i - th element in the array with integer x . '
             'Replace each element in the array with integer x . After '
             'performing each query you have to calculate the sum of all '
             'elements in the array.',
  'input': 'The first line contains two integers n and q ( 1 ≤ n, q ≤ 2 · 10^ '
           '5 ) — the number of elements in the array and the number of '
           'queries, respectively. The second line contains n integers a_ 1, . '
           '. . , a_ n ( 1 ≤ a_ i ≤ 10^ 9 ) — elements of the array a . Each '
           'of the following q lines contains a description of the '
           'corresponding query. Description begins with integer t ( t ∈{ 1, '
           '2} ) which denotes a type of the query: If t = 1 , then two '
           'integers i and x are following ( 1 ≤ i ≤ n , 1 ≤ x ≤ 10^ 9 ) — '
           "position of replaced element and it' s new value. If t = 2 , then "
           'integer x is following ( 1 ≤ x ≤ 10^ 9 ) — new value of each '
           'element in the array.',
  'note': 'Consider array from the example and the result of performing each '
          'query: Initial array is [ 1, 2, 3, 4, 5] . After performing the '
          'first query, array equals to [ 5, 2, 3, 4, 5] . The sum of all '
          'elements is 19 . After performing the second query, array equals to '
          '[ 10, 10, 10, 10, 10] . The sum of all elements is 50 . After '
          'performing the third query, array equals to [ 10, 10, 10, 10, 11 ] '
          '. The sum of all elements is 51 . After performing the fourth '
          'query, array equals to [ 10, 10, 10, 1, 11] . The sum of all '
          'elements is 42 . After performing the fifth query, array equals to '
          '[ 1, 1, 1, 1, 1] . The sum of all elements is 5 .',
  'output': 'Print q integers, each on a separate line. In the i - th line '
            'print the sum of all elements in the array after performing the '
            'first i queries.',
  'title': 'Stone Age Problem',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1679/B'},
 {'history': 'You have a square chessboard of size n × n . Rows are numbered '
             'from top to bottom with numbers from 1 to n , and columns — from '
             'left to right with numbers from 1 to n . So, each cell is '
             'denoted with pair of integers ( x, y) ( 1 ≤ x, y ≤ n ) , where x '
             'is a row number and y is a column number. You have to perform q '
             'queries of three types: Put a new rook in cell ( x, y) . Remove '
             "a rook from cell ( x, y) . It' s guaranteed that the rook was "
             'put in this cell before. Check if each cell of subrectangle ( x_ '
             '1, y_ 1) - ( x_ 2, y_ 2) of the board is attacked by at least '
             'one rook. Subrectangle is a set of cells ( x, y) such that for '
             'each cell two conditions are satisfied: x_ 1 ≤ x ≤ x_ 2 and y_ 1 '
             '≤ y ≤ y_ 2 . Recall that cell ( a, b) is attacked by a rook '
             'placed in cell ( c, d) if either a = c or b = d . In particular, '
             'the cell containing a rook is attacked by this rook.',
  'input': 'The first line contains two integers n and q ( 1 ≤ n ≤ 10^ 5 , 1 ≤ '
           'q ≤ 2 · 10^ 5 ) — the size of the chessboard and the number of '
           'queries, respectively. Each of the following q lines contains '
           'description of a query. Description begins with integer t ( t ∈{ '
           '1, 2, 3} ) which denotes type of a query: If t = 1 , two integers '
           'x and y follows ( 1 ≤ x, y ≤ n ) — coordinated of the cell where '
           "the new rook should be put in. It' s guaranteed that there is no "
           'rook in the cell ( x, y) at the moment of the given query. If t = '
           '2 , two integers x and y follows ( 1 ≤ x, y ≤ n ) — coordinates of '
           "the cell to remove a rook from. It' s guaranteed that there is a "
           'rook in the cell ( x, y) at the moment of the given query. If t = '
           '3 , four integers x_ 1, y_ 1, x_ 2 and y_ 2 follows ( 1 ≤ x_ 1 ≤ '
           'x_ 2 ≤ n , 1 ≤ y_ 1 ≤ y_ 2 ≤ n ) — subrectangle to check if each '
           "cell of it is attacked by at least one rook. It' s guaranteed that "
           'among q queries there is at least one query of the third type.',
  'note': 'Consider example. After the first two queries the board will look '
          'like the following picture ( the letter R denotes cells in which '
          'rooks are located, the subrectangle of the query of the third type '
          'is highlighted in green) : Chessboard after performing the third '
          'and the fourth queries: Chessboard after performing the fifth and '
          'the sixth queries: Chessboard after performing the seventh and the '
          'eighth queries: Chessboard after performing the last two queries:',
  'output': 'Print the answer for each query of the third type in a separate '
            'line. Print " Yes" ( without quotes) if each cell of the '
            'subrectangle is attacked by at least one rook. Otherwise print " '
            'No" ( without quotes) .',
  'title': 'Rooks Defenders',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1679/C'},
 {'history': 'Today is a holiday in the residence hall — Oleh arrived, in '
             'honor of which the girls gave him a string. Oleh liked the gift '
             'a lot, so he immediately thought up and offered you, his best '
             'friend, the following problem. You are given a string s of '
             'length n, which consists of the first 17 lowercase Latin letters '
             'a, b, c, . . . , p, q and question marks. And q queries. Each '
             'query is defined by a set of pairwise distinct lowercase first '
             '17 letters of the Latin alphabet, which can be used to replace '
             'the question marks in the string s. The answer to the query is '
             'the sum of the number of distinct substrings that are '
             'palindromes over all strings that can be obtained from the '
             'original string s by replacing question marks with available '
             'characters. The answer must be calculated modulo 998244353. Pay '
             'attention! Two substrings are different when their start and end '
             'positions in the string are different. So, the number of '
             'different substrings that are palindromes for the string aba '
             'will be 4: a, b, a, aba. Consider examples of replacing question '
             'marks with letters. For example, from the string aba? ? ee when '
             'querying a, b you can get the strings ababaee or abaaaee but you '
             'cannot get the strings pizza, abaee, abacaba, aba? fee, aba47ee, '
             'or abatree. Recall that a palindrome is a string that reads the '
             'same from left to right as from right to left.',
  'input': 'The first line contains a single integer n ( 1≤n≤1000) — the '
           'length of the string s. The second line contains the string s, '
           'which consists of n lowercase Latin letters and question marks. It '
           'is guaranteed that all letters in the string belong to the set a, '
           'b, c, . . . , p, q. The third line contains a single integer q ( '
           '1≤q≤2⋅105) — the number of queries. This is followed by q lines, '
           'each containing a single line t — a set of characters that can '
           'replace question marks ( 1≤| t| ≤17) . It is guaranteed that all '
           'letters in the string belong to the set a, b, c, . . . , p, q and '
           'occur at most once.',
  'note': 'Consider the first example and the first query in it. We can get '
          'only one string as a result of replacing the question marks — '
          'abaaaba. It has the following palindrome substrings: a — substring '
          '[ 1; 1] . b — substring [ 2; 2] . a — substring [ 3; 3] . a — '
          'substring [ 4; 4] . a — substring [ 5; 5] . b — substring [ 6; 6] . '
          'a — substring [ 7; 7] . aa — substring [ 3; 4] . aa — substring [ '
          '4; 5] . aba — substring [ 1; 3] . aaa — substring [ 3; 5] . aba — '
          'substring [ 5; 7] . baaab — substring [ 2; 6] . abaaaba — substring '
          '[ 1; 7] . In the third request, we get 4 lines: abaaaba, abababa, '
          'abbaaba, abbbaba.',
  'output': 'For each query print one number — the total numbers of '
            'palindromic substrings in all strings that can be obtained from '
            'the string s, modulo 998244353.',
  'title': 'Typical Party in Dorm',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1679/E'},
 {'history': 'There is a field divided into n rows and m columns. Some cells '
             'are empty ( denoted as E) , other cells contain robots ( denoted '
             'as R) . You can send a command to all robots at the same time. '
             'The command can be of one of the four types: move up; move '
             'right; move down; move left. When you send a command, all robots '
             'at the same time attempt to take one step in the direction you '
             'picked. If a robot tries to move outside the field, it explodes; '
             'otherwise, every robot moves to an adjacent cell in the chosen '
             'direction. You can send as many commands as you want ( possibly, '
             'zero) , in any order. Your goal is to make at least one robot '
             'reach the upper left corner of the field. Can you do this '
             'without forcing any of the robots to explode?',
  'input': 'The first line contains one integer t ( 1 ≤ t ≤ 5000 ) — the '
           'number of test cases. Each test case starts with a line containing '
           'two integers n and m ( 1 ≤ n, m ≤ 5 ) — the number of rows and the '
           'number of columns, respectively. Then n lines follow; each of them '
           'contains a string of m characters. Each character is either E ( '
           'empty cell or R ( robot) . Additional constraint on the input: in '
           'each test case, there is at least one robot on the field.',
  'note': 'Explanations for test cases of the example: in the first test case, '
          'it is enough to send a command to move left. in the second test '
          'case, if you try to send any command, at least one robot explodes. '
          'in the third test case, it is enough to send a command to move '
          'left. in the fourth test case, there is already a robot in the '
          'upper left corner. in the fifth test case, the sequence " move up, '
          'move left, move up" leads one robot to the upper left corner; in '
          'the sixth test case, if you try to move any robot to the upper left '
          'corner, at least one other robot explodes.',
  'output': 'If it is possible to make at least one robot reach the upper left '
            'corner of the field so that no robot explodes, print YES. '
            'Otherwise, print NO.',
  'title': 'Robots',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1680/B'},
 {'history': 'You are given a string s consisting of characters 0 and/ or 1. '
             'You have to remove several ( possibly zero) characters from the '
             'beginning of the string, and then several ( possibly zero) '
             'characters from the end of the string. The string may become '
             'empty after the removals. The cost of the removal is the maximum '
             'of the following two values: the number of characters 0 left in '
             'the string; the number of characters 1 removed from the string. '
             'What is the minimum cost of removal you can achieve?',
  'input': 'The first line contains one integer t ( 1≤t≤104) — the number of '
           'test cases. Each test case consists of one line containing the '
           'string s ( 1≤| s| ≤2⋅105) , consisting of characters 0 and/ or 1. '
           'The total length of strings s in all test cases does not exceed '
           '2⋅105.',
  'note': "Consider the test cases of the example: in the first test case, it' "
          's possible to remove two characters from the beginning and one '
          'character from the end. Only one 1 is deleted, only one 0 remains, '
          "so the cost is 1; in the second test case, it' s possible to remove "
          'three characters from the beginning and six characters from the '
          'end. Two characters 0 remain, three characters 1 are deleted, so '
          "the cost is 3; in the third test case, it' s optimal to remove four "
          "characters from the beginning; in the fourth test case, it' s "
          "optimal to remove the whole string; in the fifth test case, it' s "
          'optimal to leave the string as it is.',
  'output': 'For each test case, print one integer — the minimum cost of '
            'removal you can achieve.',
  'title': 'Binary String',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1680/C'},
 {'history': "Monocarp has just learned a new card trick, and can' t wait to "
             'present it to you. He shows you the entire deck of n cards. You '
             'see that the values of cards from the topmost to the bottommost '
             'are integers a_ 1, a_ 2, . . . , a_ n , and all values are '
             'different. Then he asks you to shuffle the deck m times. With '
             'the j - th shuffle, you should take b_ j topmost cards and move '
             'them under the remaining ( n - b_ j) cards without changing the '
             'order. And then, using some magic, Monocarp tells you the '
             'topmost card of the deck. However, you are not really buying '
             'that magic. You tell him that you know the topmost card '
             'yourself. Can you surprise Monocarp and tell him the topmost '
             'card before he shows it?',
  'input': 'The first line contains a single integer t ( 1 ≤ t ≤ 10^ 4 ) — the '
           'number of testcases. The first line of each testcase contains a '
           'single integer n ( 2 ≤ n ≤ 2 · 10^ 5 ) — the number of cards in '
           'the deck. The second line contains n pairwise distinct integers a_ '
           '1, a_ 2, . . . , a_ n ( 1 ≤ a_ i ≤ n ) — the values of the cards. '
           'The third line contains a single integer m ( 1 ≤ m ≤ 2 · 10^ 5 ) — '
           'the number of shuffles. The fourth line contains m integers b_ 1, '
           'b_ 2, . . . , b_ m ( 1 ≤ b_ j ≤ n - 1 ) — the amount of cards that '
           'are moved on the j - th shuffle. The sum of n over all testcases '
           "doesn' t exceed 2 · 10^ 5 . The sum of m over all testcases doesn' "
           't exceed 2 · 10^ 5 .',
  'note': 'In the first testcase, each shuffle effectively swaps two cards. '
          'After three swaps, the deck will be [ 2, 1] . In the second '
          'testcase, the second shuffle cancels what the first shuffle did. '
          'First, three topmost cards went underneath the last card, then that '
          'card went back below the remaining three cards. So the deck '
          'remained unchanged from the initial one — the topmost card has '
          'value 3 .',
  'output': 'For each testcase, print a single integer — the value of the card '
            'on the top of the deck after the deck is shuffled m times.',
  'title': 'Card Trick',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1681/B'},
 {'history': 'You are given two arrays a and b, both consisting of n integers. '
             'In one move, you can choose two indices i and j ( 1≤i, j≤n; i= '
             '̸j) and swap ai with aj and bi with bj. You have to perform the '
             'swap in both arrays. You are allowed to perform at most 104 '
             'moves ( possibly, zero) . Can you make both arrays sorted in a '
             'non- decreasing order at the end? If you can, print any sequence '
             'of moves that makes both arrays sorted.',
  'input': 'The first line contains a single integer t ( 1≤t≤100) — the number '
           'of testcases. The first line of each testcase contains a single '
           'integer n ( 2≤n≤100) — the number of elements in both arrays. The '
           'second line contains n integers a1, a2, . . . , an ( 1≤ai≤n) — the '
           'first array. The third line contains n integers b1, b2, . . . , bn '
           '( 1≤bi≤n) — the second array.',
  'note': ' ',
  'output': "For each testcase, print the answer. If it' s impossible to make "
            'both arrays sorted in a non- decreasing order in at most 104 '
            'moves, print - 1. Otherwise, first, print the number of moves k ( '
            '0≤k≤104) . Then print i and j for each move ( 1≤i, j≤n; i= ̸j) . '
            "If there are multiple answers, then print any of them. You don' t "
            'have to minimize the number of moves.',
  'title': 'Double Sort',
  'topics': ['implementation', 'sortings'],
  'url': 'https://codeforces.com/problemset/problem/1681/C'},
 {'history': 'You are given a palindromic string s of length n. You have to '
             'count the number of indices i ( 1≤i≤n) such that the string '
             'after removing si from s still remains a palindrome. For '
             'example, consider s = " aba" If we remove s1 from s, the string '
             'becomes " ba" which is not a palindrome. If we remove s2 from s, '
             'the string becomes " aa" which is a palindrome. If we remove s3 '
             'from s, the string becomes " ab" which is not a palindrome. A '
             'palindrome is a string that reads the same backward as forward. '
             'For example, " abba" , " a" , " fef" are palindromes whereas " '
             'codeforces" , " acd" , " xy" are not.',
  'input': 'The input consists of multiple test cases. The first line of the '
           'input contains a single integer t ( 1≤t≤103) — the number of test '
           'cases. Description of the test cases follows. The first line of '
           'each testcase contains a single integer n ( 2≤n≤105) — the length '
           'of string s. The second line of each test case contains a string s '
           'consisting of lowercase English letters. It is guaranteed that s '
           'is a palindrome. It is guaranteed that sum of n over all test '
           'cases does not exceed 2⋅105.',
  'note': 'The first test case is described in the statement. In the second '
          'test case, the indices i that result in palindrome after removing '
          'si are 3, 4, 5, 6. Hence the answer is 4. In the third test case, '
          'removal of any of the indices results in " d" which is a '
          'palindrome. Hence the answer is 2.',
  'output': 'For each test case, output a single integer — the number of '
            'indices i ( 1≤i≤n) such that the string after removing si from s '
            'still remains a palindrome.',
  'title': 'Palindromic Indices',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1682/A'},
 {'history': 'You are given a permutation p of integers from 0 to n−1 ( each '
             'of them occurs exactly once) . Initially, the permutation is not '
             'sorted ( that is, pi> pi+ 1 for at least one 1≤i≤n−1) . The '
             'permutation is called X- sortable for some non- negative integer '
             'X if it is possible to sort the permutation by performing the '
             'operation below some finite number of times: Choose two indices '
             'i and j ( 1≤i< j≤n) such that pi pj= X. Swap pi and pj. Here '
             'denotes the bitwise AND operation. Find the maximum value of X '
             'such that p is X- sortable. It can be shown that there always '
             'exists some value of X such that p is X- sortable.',
  'input': 'The input consists of multiple test cases. The first line contains '
           'a single integer t ( 1≤t≤104) — the number of test cases. '
           'Description of test cases follows. The first line of each test '
           'case contains a single integer n ( 2≤n≤2⋅105) — the length of the '
           'permutation. The second line of each test case contains n integers '
           'p1, p2, . . . , pn ( 0≤pi≤n−1, all pi are distinct) — the elements '
           'of p. It is guaranteed that p is not sorted. It is guaranteed that '
           'the sum of n over all cases does not exceed 2⋅105.',
  'note': 'In the first test case, the only X for which the permutation is X- '
          'sortable are X= 0 and X= 2, maximum of which is 2. Sorting using X= '
          '0: Swap p1 and p4, p= [ 2, 1, 3, 0] . Swap p3 and p4, p= [ 2, 1, 0, '
          '3] . Swap p1 and p3, p= [ 0, 1, 2, 3] . Sorting using X= 2: Swap p3 '
          'and p4, p= [ 0, 1, 2, 3] . In the second test case, we must swap p1 '
          'and p2 which is possible only with X= 0.',
  'output': 'For each test case output a single integer — the maximum value of '
            'X such that p is X- sortable.',
  'title': 'AND Sorting',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1682/B'},
 {'history': 'You are given an array a of n positive integers. Let LIS( a) '
             'denote the length of longest strictly increasing subsequence of '
             'a . For example, LIS( [ 2, 1, 1, 3] ) = 2 . LIS( [ 3, 5, 10, 20] '
             ") = 4 . LIS( [ 3, 1, 2, 4] ) = 3 . We define array a' as the "
             "array obtained after reversing the array a i. e. a' = [ a_ n, a_ "
             'n- 1, . . . , a_ 1] . The beauty of array a is defined as min( '
             "LIS( a) , LIS( a' ) ) . Your task is to determine the maximum "
             'possible beauty of the array a if you can rearrange the array a '
             'arbitrarily.',
  'input': 'The input consists of multiple test cases. The first line contains '
           'a single integer t ( 1 ≤ t ≤ 10^ 4) — the number of test cases. '
           'Description of the test cases follows. The first line of each test '
           'case contains a single integer n ( 1 ≤ n ≤ 2· 10^ 5) — the length '
           'of array a . The second line of each test case contains n integers '
           'a_ 1, a_ 2, . . . , a_ n ( 1 ≤ a_ i ≤ 10^ 9) — the elements of the '
           'array a . It is guaranteed that the sum of n over all test cases '
           'does not exceed 2· 10^ 5 .',
  'note': "In the first test case, a = [ 6, 6, 6] and a' = [ 6, 6, 6] . LIS( "
          "a) = LIS( a' ) = 1 . Hence the beauty is min( 1, 1) = 1 . In the "
          'second test case, a can be rearranged to [ 2, 5, 4, 5, 4, 2] . Then '
          "a' = [ 2, 4, 5, 4, 5, 2] . LIS( a) = LIS( a' ) = 3 . Hence the "
          'beauty is 3 and it can be shown that this is the maximum possible '
          'beauty. In the third test case, a can be rearranged to [ 1, 2, 3, '
          "2] . Then a' = [ 2, 3, 2, 1] . LIS( a) = 3 , LIS( a' ) = 2 . Hence "
          'the beauty is min( 3, 2) = 2 and it can be shown that 2 is the '
          'maximum possible beauty.',
  'output': 'For each test case, output a single integer — the maximum '
            'possible beauty of a after rearranging its elements arbitrarily.',
  'title': 'LIS or Reverse LIS?',
  'topics': ['implementation'],
  'url': 'https://codeforces.com/problemset/problem/1682/C'},
 {'history': 'Alice had a permutation p of numbers from 1 to n. Alice can swap '
             'a pair ( x, y) which means swapping elements at positions x and '
             'y in p ( i. e. swap px and py) . Alice recently learned her '
             'first sorting algorithm, so she decided to sort her permutation '
             'in the minimum number of swaps possible. She wrote down all the '
             'swaps in the order in which she performed them to sort the '
             'permutation on a piece of paper. For example, [ ( 2, 3) , ( 1, '
             '3) ] is a valid swap sequence by Alice for permutation p= [ 3, '
             "1, 2] whereas [ ( 1, 3) , ( 2, 3) ] is not because it doesn' t "
             'sort the permutation. Note that we cannot sort the permutation '
             'in less than 2 swaps. [ ( 1, 2) , ( 2, 3) , ( 2, 4) , ( 2, 3) ] '
             'cannot be a sequence of swaps by Alice for p= [ 2, 1, 4, 3] even '
             'if it sorts the permutation because p can be sorted in 2 swaps, '
             'for example using the sequence [ ( 4, 3) , ( 1, 2) ] . '
             'Unfortunately, Bob shuffled the sequence of swaps written by '
             "Alice. You are given Alice' s permutation p and the swaps "
             'performed by Alice in arbitrary order. Can you restore the '
             'correct sequence of swaps that sorts the permutation p? Since '
             'Alice wrote correct swaps before Bob shuffled them up, it is '
             'guaranteed that there exists some order of swaps that sorts the '
             'permutation.',
  'input': 'The first line contains 2 integers n and m ( 2≤n≤2⋅105, 1≤m≤n−1) — '
           'the size of permutation and the minimum number of swaps required '
           'to sort the permutation. The next line contains n integers p1, p2, '
           '. . . , pn ( 1≤pi≤n, all pi are distinct) — the elements of p. It '
           'is guaranteed that p forms a permutation. Then m lines follow. The '
           'i- th of the next m lines contains two integers xi and yi — the i- '
           'th swap ( xi, yi) . It is guaranteed that it is possible to sort p '
           'with these m swaps and that there is no way to sort p with less '
           'than m swaps.',
  'note': 'In the first example, p= [ 2, 3, 4, 1] , m= 3 and given swaps are [ '
          '( 1, 4) , ( 2, 1) , ( 1, 3) ] . There is only one correct order of '
          'swaps i. e [ 2, 3, 1] . First we perform the swap 2 from the input '
          'i. e ( 2, 1) , p becomes [ 3, 2, 4, 1] . Then we perform the swap 3 '
          'from the input i. e ( 1, 3) , p becomes [ 4, 2, 3, 1] . Finally we '
          'perform the swap 1 from the input i. e ( 1, 4) and p becomes [ 1, '
          '2, 3, 4] which is sorted. In the second example, p= [ 6, 5, 1, 3, '
          '2, 4] , m= 4 and the given swaps are [ ( 3, 1) , ( 2, 5) , ( 6, 3) '
          ', ( 6, 4) ] . One possible correct order of swaps is [ 4, 2, 1, 3] '
          '. Perform the swap 4 from the input i. e ( 6, 4) , p becomes [ 6, '
          '5, 1, 4, 2, 3] . Perform the swap 2 from the input i. e ( 2, 5) , p '
          'becomes [ 6, 2, 1, 4, 5, 3] . Perform the swap 1 from the input i. '
          'e ( 3, 1) , p becomes [ 1, 2, 6, 4, 5, 3] . Perform the swap 3 from '
          'the input i. e ( 6, 3) and p becomes [ 1, 2, 3, 4, 5, 6] which is '
          'sorted. There can be other possible answers such as [ 1, 2, 4, 3] .',
  'output': 'Print a permutation of m integers — a valid order of swaps '
            'written by Alice that sorts the permutation p. See sample '
            'explanation for better understanding. In case of multiple '
            'possible answers, output any.',
  'title': 'Unordered Swaps',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1682/E'},
 {'history': 'You are given two integer arrays aa and bb ( bi= ̸0bi= ̸0 and | '
             'bi| ≤109| bi| ≤109) . Array aa is sorted in non- decreasing '
             'order. The cost of a subarray a[ l: r] a[ l: r] is defined as '
             'follows: If ∑j= lrbj= ̸0∑j= lrbj= ̸0, then the cost is not '
             'defined. Otherwise: Construct a bipartite flow graph with r−l+ '
             '1r−l+ 1 vertices, labeled from ll to rr, with all vertices '
             'having bi< 0bi< 0 on the left and those with bi> 0bi> 0 on '
             'right. For each i, ji, j such that l≤i, j≤rl≤i, j≤r, bi< 0bi< 0 '
             'and bj> 0bj> 0, draw an edge from ii to jj with infinite '
             'capacity and cost of unit flow as | ai−aj| | ai−aj| . Add two '
             'more vertices: source SS and sink TT. For each ii such that '
             'l≤i≤rl≤i≤r and bi< 0bi< 0, add an edge from SS to ii with cost '
             '00 and capacity | bi| | bi| . For each ii such that l≤i≤rl≤i≤r '
             'and bi> 0bi> 0, add an edge from ii to TT with cost 00 and '
             'capacity | bi| | bi| . The cost of the subarray is then defined '
             'as the minimum cost of maximum flow from SS to TT. You are given '
             'qq queries in the form of two integers ll and rr. You have to '
             'compute the cost of subarray a[ l: r] a[ l: r] for each query, '
             "modulo 109+ 7109+ 7. If you don' t know what the minimum cost of "
             'maximum flow means, read here.',
  'input': 'The first line of input contains two integers nn and qq ( '
           '2≤n≤2⋅105, 1≤q≤2⋅105) ( 2≤n≤2⋅105, 1≤q≤2⋅105) — length of arrays '
           'aa, bb and the number of queries. The next line contains nn '
           'integers a1, a2. . . ana1, a2. . . an ( 0≤a1≤a2. . . ≤an≤109) '
           '0≤a1≤a2. . . ≤an≤109) — the array aa. It is guaranteed that aa is '
           'sorted in non- decreasing order. The next line contains nn '
           'integers b1, b2. . . bnb1, b2. . . bn ( −109≤bi≤109, bi= ̸0) ( '
           '−109≤bi≤109, bi= ̸0) — the array bb. The ii- th of the next qq '
           'lines contains two integers li, rili, ri ( 1≤li≤ri≤n) ( 1≤li≤ri≤n) '
           '. It is guaranteed that ∑j= liribj= 0∑j= liribj= 0.',
  'note': 'In the first query, the maximum possible flow is 11 i. e one unit '
          'from source to 22, then one unit from 22 to 33, then one unit from '
          '33 to sink. The cost of the flow is 0⋅1+ | 2−4| ⋅1+ 0⋅1= 20⋅1+ | '
          '2−4| ⋅1+ 0⋅1= 2. In the second query, the maximum possible flow is '
          'again 11 i. e from source to 77, 77 to 66, and 66 to sink with a '
          'cost of 0⋅| 10−10| ⋅1+ 0⋅1= 00⋅| 10−10| ⋅1+ 0⋅1= 0. In the third '
          'query, the flow network is shown on the left with capacity written '
          'over the edge and the cost written in bracket. The image on the '
          'right shows the flow through each edge in an optimal configuration. '
          'Maximum flow is 33 with a cost of 0⋅3+ 1⋅1+ 4⋅2+ 0⋅1+ 0⋅2= 90⋅3+ '
          '1⋅1+ 4⋅2+ 0⋅1+ 0⋅2= 9. In the fourth query, the flow network looks '
          'as – The minimum cost maximum flow is achieved in the configuration '
          '– The maximum flow in the above network is 4 and the minimum cost '
          'of such flow is 15.',
  'output': 'For each query lili, riri — print the cost of subarray a[ li: ri] '
            'a[ li: ri] modulo 109+ 7109+ 7.',
  'title': 'MCMF?',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1682/F'},
 {'history': 'There is an integer n without zeros in its decimal '
             'representation. Alice and Bob are playing a game with this '
             'integer. Alice starts first. They play the game in turns. On her '
             'turn, Alice must swap any two digits of the integer that are on '
             'different positions. Bob on his turn always removes the last '
             'digit of the integer. The game ends when there is only one digit '
             'left. You have to find the smallest integer Alice can get in the '
             'end, if she plays optimally.',
  'input': 'The input consists of multiple test cases. The first line contains '
           'a single integer t ( 1≤t≤104) — the number of test cases. '
           'Description of the test cases follows. The first and the only line '
           'of each test case contains the integer n ( 10≤n≤109) — the integer '
           'for the game. n does not have zeros in its decimal representation.',
  'note': 'In the first test case Alice has to swap 1 and 2. After that Bob '
          'removes the last digit, 1, so the answer is 2. In the second test '
          'case Alice can swap 3 and 1: 312. After that Bob deletes the last '
          'digit: 31. Then Alice swaps 3 and 1: 13 and Bob deletes 3, so the '
          'answer is 1.',
  'output': 'For each test case output a single integer — the smallest integer '
            'Alice can get in the end of the game.',
  'title': 'Digit Minimization',
  'topics': ['strings'],
  'url': 'https://codeforces.com/problemset/problem/1684/A'},
 {'history': 'You are given a grid with n rows and m columns, where each cell '
             "has a positive integer written on it. Let' s call a grid good, "
             'if in each row the sequence of numbers is sorted in a non- '
             'decreasing order. It means, that for each 1≤i≤n and 2≤j≤m the '
             'following holds: ai, j≥ai, j−1. You have to to do the following '
             'operation exactly once: choose two columns with indexes i and j '
             '( not necessarily different) , 1≤i, j≤m, and swap them. You are '
             'asked to determine whether it is possible to make the grid good '
             'after the swap and, if it is, find the columns that need to be '
             'swapped.',
  'input': 'Each test contains multiple test cases. The first line contains '
           'the number of test cases t ( 1≤t≤100) . Description of the test '
           'cases follows. The first line of each test case contains two '
           'integers n and m ( 1≤n, m≤2⋅105) — the number of rows and columns '
           'respectively. Each of the next n rows contains m integers, j- th '
           'element of i- th row is ai, j ( 1≤ai, j≤109) — the number written '
           "in the j- th cell of the i- th row. It' s guaranteed that the sum "
           'of n⋅m over all test cases does not exceed 2⋅105.',
  'note': 'In the first test case the grid is initially good, so we can, for '
          'example, swap the first column with itself. In the second test case '
          'it is impossible to make the grid good. In the third test case it '
          'is needed to swap the first and the second column, then the grid '
          'becomes good.',
  'output': 'If after the swap it is impossible to get a good grid, output −1. '
            'In the other case output 2 integers — the indices of the columns '
            'that should be swapped to get a good grid. If there are multiple '
            'solutions, print any.',
  'title': 'Column Swapping',
  'topics': ['implementation', 'sortings'],
  'url': 'https://codeforces.com/problemset/problem/1684/C'},
 {'history': 'There are n traps numbered from 1 to n. You will go through them '
             'one by one in order. The i- th trap deals ai base damage to you. '
             'Instead of going through a trap, you can jump it over. You can '
             'jump over no more than k traps. If you jump over a trap, it does '
             'not deal any damage to you. But there is an additional rule: if '
             'you jump over a trap, all next traps damages increase by 1 ( '
             'this is a bonus damage) . Note that if you jump over a trap, you '
             "don' t get any damage ( neither base damage nor bonus damage) . "
             'Also, the bonus damage stacks so, for example, if you go through '
             'a trap i with base damage ai, and you have already jumped over 3 '
             'traps, you get ( ai+ 3) damage. You have to find the minimal '
             'damage that it is possible to get if you are allowed to jump '
             'over no more than k traps.',
  'input': 'The input consists of multiple test cases. The first line contains '
           'a single integer t ( 1≤t≤100) — the number of test cases. '
           'Description of the test cases follows. The first line of each test '
           'case contains two integers n and k ( 1≤n≤2⋅105, 1≤k≤n) — the '
           'number of traps and the number of jump overs that you are allowed '
           'to make. The second line of each test case contains n integers a1, '
           'a2, . . . , an ( 1≤ai≤109) — base damage values of all traps. It '
           'is guaranteed that the sum of n over all test cases does not '
           'exceed 2⋅105.',
  'note': 'In the first test case it is allowed to jump over all traps and '
          'take 0 damage. In the second test case there are 5 ways to jump '
          'over some traps: Do not jump over any trap. Total damage: 5+ 10+ '
          '11+ 5= 31. Jump over the 1- st trap. Total damage: 0_ + ( 10+ 1) + '
          '( 11+ 1) + ( 5+ 1) = 29. Jump over the 2- nd trap. Total damage: 5+ '
          '0_ + ( 11+ 1) + ( 5+ 1) = 23. Jump over the 3- rd trap. Total '
          'damage: 5+ 10+ 0_ + ( 5+ 1) = 21. Jump over the 4- th trap. Total '
          'damage: 5+ 10+ 11+ 0_ = 26. To get minimal damage it is needed to '
          'jump over the 3- rd trap, so the answer is 21. In the third test '
          'case it is optimal to jump over the traps 1, 3, 4, 5, 7: Total '
          'damage: 0+ ( 2+ 1) + 0+ 0+ 0+ ( 2+ 4) + 0= 9.',
  'output': 'For each test case output a single integer — the minimal total '
            'damage that it is possible to get if you are allowed to jump over '
            'no more than k traps.',
  'title': 'Traps',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1684/D'},
 {'history': 'You are given an array a of n non- negative integers. In one '
             'operation you can change any number in the array to any other '
             "non- negative integer. Let' s define the cost of the array as "
             'DIFF( a) −MEX( a) , where MEX of a set of non- negative integers '
             'is the smallest non- negative integer not present in the set, '
             'and DIFF is the number of different numbers in the array. For '
             'example, MEX( 1, 2, 3) = 0, MEX( 0, 1, 2, 4, 5) = 3. You should '
             'find the minimal cost of the array a if you are allowed to make '
             'at most k operations.',
  'input': 'The input consists of multiple test cases. The first line contains '
           'a single integer t ( 1≤t≤104) — the number of test cases. '
           'Description of the test cases follows. The first line of each test '
           'case contains two integers n and k ( 1≤n≤105, 0≤k≤105) — the '
           'length of the array a and the number of operations that you are '
           'allowed to make. The second line of each test case contains n '
           'integers a1, a2, . . . , an ( 0≤ai≤109) — the elements of the '
           'array a. It is guaranteed that the sum of n over all test cases '
           'does not exceed 105.',
  'note': 'In the first test case no operations are needed to minimize the '
          'value of DIFF−MEX. In the second test case it is possible to '
          'replace 5 by 1. After that the array a is [ 0, 2, 4, 1] , DIFF= 4, '
          'MEX= MEX( 0, 1, 2, 4) = 3, so the answer is 1. In the third test '
          'case one possible array a is [ 4, 13, 0, 0, 13, 1, 2] , DIFF= 5, '
          'MEX= 3. In the fourth test case one possible array a is [ 1, 2, 3, '
          '0, 0, 0] .',
  'output': 'For each test case output a single integer — minimal cost that it '
            'is possible to get making at most k operations.',
  'title': 'MEX vs DIFF',
  'topics': [],
  'url': 'https://codeforces.com/problemset/problem/1684/E'},
 {'history': 'You are given a binary string s. You have to cut it into any '
             'number of non- intersecting substrings, so that the sum of '
             'binary integers denoted by these substrings is a power of 2. '
             'Each element of s should be in exactly one substring.',
  'input': 'Each test contains multiple test cases. The first line contains '
           'the number of test cases t ( 1≤t≤105) . Description of the test '
           'cases follows. Each test case contains a binary string s ( 1≤| s| '
           '≤106) . It is guaranteed that the sum of | s| over all test cases '
           'does not exceed 106.',
  'note': 'In the first test case it is impossible to cut the string into '
          'substrings, so that the sum is a power of 2. In the second test '
          'case such cut is valid: 0112= 310, 02= 010, 12= 110. 3+ 0+ 1= 4, 4 '
          'is a power of 2.',
  'output': 'For each test case output the answer to the problem as follows: '
            'If the answer does not exist, output −1. If the answer exists, '
            'firstly output an integer k — the number of substrings in the '
            'answer. After that output k non- intersecting substrings, for i- '
            'th substring output two integers li, ri ( 1≤li, ri≤| s| ) — the '
            'description of i- th substring. If there are multiple valid '
            'solutions, you can output any of them.',
  'title': 'Hard Cut',
  'topics': [],
  'url': 'https://codeforces.com/problemset/problem/1684/H'},
 {'history': 'You are given n integers a1, a2, . . . , an. Is it possible to '
             'arrange them on a circle so that each number is strictly greater '
             'than both its neighbors or strictly smaller than both its '
             'neighbors? In other words, check if there exists a rearrangement '
             'b1, b2, . . . , bn of the integers a1, a2, . . . , an such that '
             'for each i from 1 to n at least one of the following conditions '
             'holds: bi−1< bi> bi+ 1 bi−1> bi< bi+ 1To make sense of the '
             'previous formulas for i= 1 and i= n, one shall define b0= bn and '
             'bn+ 1= b1.',
  'input': 'The first line of the input contains a single integer t ( '
           '1≤t≤3⋅104) — the number of test cases. The description of the test '
           'cases follows. The first line of each test case contains a single '
           'integer n ( 3≤n≤105) — the number of integers. The second line of '
           'each test case contains n integers a1, a2, . . . , an ( 0≤ai≤109) '
           ". The sum of n over all test cases doesn' t exceed 2⋅105.",
  'note': 'It can be shown that there are no valid arrangements for the first '
          'and the third test cases. In the second test case, the arrangement '
          '[ 1, 8, 4, 9] works. In this arrangement, 1 and 4 are both smaller '
          'than their neighbors, and 8, 9 are larger. In the fourth test case, '
          'the arrangement [ 1, 11, 1, 111, 1, 1111] works. In this '
          'arrangement, the three elements equal to 1 are smaller than their '
          'neighbors, while all other elements are larger than their '
          'neighbors.',
  'output': 'For each test case, if it is not possible to arrange the numbers '
            'on the circle satisfying the conditions from the statement, '
            'output NO. You can output each letter in any case. Otherwise, '
            'output YES. In the second line, output n integers b1, b2, . . . , '
            'bn, which are a rearrangement of a1, a2, . . . , an and satisfy '
            'the conditions from the statement. If there are multiple valid '
            'ways to arrange the numbers, you can output any of them.',
  'title': 'Circular Local MiniMax',
  'topics': ['sortings'],
  'url': 'https://codeforces.com/problemset/problem/1685/A'},
 {'history': 'Alina has discovered a weird language, which contains only 4 '
             'words: A, B, AB, BA. It also turned out that there are no spaces '
             'in this language: a sentence is written by just concatenating '
             'its words into a single string. Alina has found one such '
             'sentence s and she is curious: is it possible that it consists '
             'of precisely a words A, b words B, c words AB, and d words BA? '
             "In other words, determine, if it' s possible to concatenate "
             'these a+ b+ c+ d words in some order so that the resulting '
             'string is s. Each of the a+ b+ c+ d words must be used exactly '
             'once in the concatenation, but you can choose the order in which '
             'they are concatenated.',
  'input': 'The first line of the input contains a single integer t ( 1≤t≤105) '
           '— the number of test cases. The description of the test cases '
           'follows. The first line of each test case contains four integers '
           'a, b, c, d ( 0≤a, b, c, d≤2⋅105) — the number of times that words '
           'A, B, AB, BA respectively must be used in the sentence. The second '
           'line contains the string s ( s consists only of the characters A '
           'and B, 1≤| s| ≤2⋅105, | s| = a+ b+ 2c+ 2d) — the sentence. Notice '
           'that the condition | s| = a+ b+ 2c+ 2d ( here | s| denotes the '
           'length of the string s) is equivalent to the fact that s is as '
           'long as the concatenation of the a+ b+ c+ d words. The sum of the '
           "lengths of s over all test cases doesn' t exceed 2⋅105.",
  'note': "In the first test case, the sentence s is B. Clearly, it can' t "
          'consist of a single word A, so the answer is NO. In the second test '
          "case, the sentence s is AB, and it' s possible that it consists of "
          'a single word AB, so the answer is YES. In the third test case, the '
          "sentence s is ABAB, and it' s possible that it consists of one word "
          'A, one word B, and one word BA, as A+ BA+ B= ABAB. In the fourth '
          "test case, the sentence s is ABAAB, and it' s possible that it "
          'consists of one word A, one word AB, and one word BA, as A+ BA+ AB= '
          'ABAAB. In the fifth test case, the sentence s is BAABBABBAA, and '
          "it' s possible that it consists of one word A, one word B, two "
          'words AB, and two words BA, as BA+ AB+ B+ AB+ BA+ A= BAABBABBAA.',
  'output': 'For each test case output YES if it is possible that the sentence '
            's consists of precisely a words A, b words B, c words AB, and d '
            'words BA, and NO otherwise. You can output each letter in any '
            'case.',
  'title': 'Linguistics',
  'topics': ['implementation', 'strings'],
  'url': 'https://codeforces.com/problemset/problem/1685/B'},
 {'history': 'For an array [ b1, b2, . . . , bm] define its number of '
             'inversions as the number of pairs ( i, j) of integers such that '
             "1≤i< j≤m and bi> bj. Let' s call array b odd if its number of "
             'inversions is odd. For example, array [ 4, 2, 7] is odd, as its '
             "number of inversions is 1, while array [ 2, 1, 4, 3] isn' t, as "
             'its number of inversions is 2. You are given a permutation [ p1, '
             'p2, . . . , pn] of integers from 1 to n ( each of them appears '
             'exactly once in the permutation) . You want to split it into '
             'several consecutive subarrays ( maybe just one) , so that the '
             'number of the odd subarrays among them is as large as possible. '
             'What largest number of these subarrays may be odd?',
  'input': 'The first line of the input contains a single integer t ( 1≤t≤105) '
           '— the number of test cases. The description of the test cases '
           'follows. The first line of each test case contains a single '
           'integer n ( 1≤n≤105) — the size of the permutation. The second '
           'line of each test case contains n integers p1, p2, . . . , pn ( '
           '1≤pi≤n, all pi are distinct) — the elements of the permutation. '
           "The sum of n over all test cases doesn' t exceed 2⋅105.",
  'note': 'In the first and third test cases, no matter how we split our '
          "permutation, there won' t be any odd subarrays. In the second test "
          'case, we can split our permutation into subarrays [ 4, 3] , [ 2, 1] '
          ', both of which are odd since their numbers of inversions are 1. In '
          'the fourth test case, we can split our permutation into a single '
          'subarray [ 2, 1] , which is odd. In the fifth test case, we can '
          'split our permutation into subarrays [ 4, 5] , [ 6, 1, 2, 3] . The '
          'first subarray has 0 inversions, and the second has 3, so it is '
          'odd.',
  'output': 'For each test case output a single integer — the largest possible '
            'number of odd subarrays that you can get after splitting the '
            'permutation into several consecutive subarrays.',
  'title': 'Odd Subarrays',
  'topics': [],
  'url': 'https://codeforces.com/problemset/problem/1686/B'},
 {'history': ' ',
  'input': ' ',
  'note': ' ',
  'output': ' ',
  'title': 'SUMAS Capicúa',
  'topics': ['strings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/1-AHEYOND'},
 {'history': 'Elaborar un programa que reciba n palabras, y devuelva una lista '
             'de las k palabras más frecuentes. El programa debe devolver la '
             'palabra e indicar cuantas veces se repite. La entrada será el '
             'número de palabras n, el número k, desde la siguiente línea '
             'recibe las palabras, cada una está separada por un espacio en '
             'blanco o un salto de línea. Nota: El comando scanf( "',
  'input': 'n kP1P2. . . PnPor simplicidad asumir que ninguna palabra supera '
           'los 40 caracteres.',
  'note': ' ',
  'output': 'Lista de las k palabras más frecuentes consu respectivo número '
            'de repeticiones. Las palabras deben estar ordenadas de mayor a '
            'menor frecuencia, en caso de empate seguir el orden alfabético.',
  'title': '1. Buscar K frecuentes',
  'topics': ['sortings'],
  'url': 'https://omegaup.com/arena/problem/1-Buscar-K-frecuentes'},
 {'history': ' ',
  'input': ' ',
  'note': ' ',
  'output': ' ',
  'title': '1. Ordenar números -no',
  'topics': ['sortings'],
  'url': 'https://omegaup.com/arena/problem/1-Ordenar-numeros--no'},
 {'history': ' ',
  'input': ' ',
  'note': ' ',
  'output': ' ',
  'title': '1. Restar polinomios',
  'topics': ['sortings'],
  'url': 'https://omegaup.com/arena/problem/1-Restar-polinomios'},
 {'history': 'Durante la última fiesta familiar te llamó mucho la atención '
             'ver que tus abues también son abues de más niñas y niños. '
             'Esto te dio tanta curiosidad que empezaste a ver qué tantos '
             'nietos tuvieron los abuelos de tus papás y los abuelos de tus '
             'abuelos. Así se te ocurrió una genial pregunta qué contestar: '
             '" ¿Quién ha dejado el legado de nietos más grande en la '
             'historia de la familia? " Después de escuchar tantas historias '
             'que te contaron tus papás, tíos, abuelos y viejos amigos de la '
             'familia por fin conseguiste la información necesaria para '
             'resolver esta pregunta. Sólo queda la parte más divertida: '
             'escribe un programa que procese toda la información y determine '
             'quién ha tenido más nietos en la historia de la familia.',
  'input': 'Un entero N, indicando el número de líneas. N líneas. Cada '
           'línea tendrá dos palabras, A y B, que representan una relación '
           'entre dos miembros de la familia. A es el nombre de la hija o '
           'hijo. B es el nombre de la madre o padre. No hay familiares con '
           'nombres repetidos. En la familia ninguna pareja de padres tiene '
           'antepasados en común. Es decir, no existe ninguna pareja de '
           'padres que tuvieran el mismo familiar de abuelo, o tatarabuelo, o '
           'bisabuelo, etc. Sólo se consideran nietos los hijos de hijos. 1 ≤ '
           'N ≤ 1, 200',
  'note': ' ',
  'output': 'El nombre del familiar con más nietos en la familia. En dado '
            'caso de empate listar los familiares empatados en orden '
            'alfabético separados por un espacio. '
            'EjemplosInputOutputDescription📋5YoMerengues MamaLindaMamaLinda '
            'AbuelaLinaMamaLinda AbueloTitoTiaTere AbueloTitoPrimaVera '
            'TiaTereAbueloTitoEn tanto a nietos AbueloTito tiene 2 ( PrimaVera '
            'y YoMerengues) , AbuelaLina tiene 1 ( YoMerengues) , y todos los '
            'demás tienen 0. Así AbueloTito es quién ha tenido más nietos '
            'en la historia de la familia. 📋6YoMerengues MamaLindaMamaLinda '
            'AbuelaLinaMamaLinda AbueloTitoTiaTere AbueloTitoPrimaVera '
            'TiaTereAbueloTito BisabuelaTitaAbueloTito BisabuelaTitaLa '
            'diferencia con el ejemplo anterior es la incorporación de '
            'BisabuelaTita que tiene 2 nietas ( MamaLinda y TiaTere) . La '
            'respuesta es empate entre AbueloTito y BisabuelaTita.',
  'title': 'El legado más grande',
  'topics': ['strings', 'sortings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/1er-ccp-abues'},
 {'history': 'Deseas iniciar tu carrera como desarrollador indie de '
             'videojuegos y uno de tus primeros intentos será programar una '
             'versión del popular juego de Tetris. Comenzarás programando la '
             'caída de bloques de 2 × 2 segmentos ( la famosa ficha cuadrada) '
             'en una zona de juego de 10 filas y 10 columnas. Como el día de '
             'hoy no tienes mucho tiempo para dedicarte a programar tu juego, '
             'la eliminación de filas llenas la dejarás para otro día y no '
             'la implementarás.',
  'input': 'Un entero N, indicando el número de bloques. La siguiente línea '
           'contiene N enteros, indicando las columnas donde caerán los '
           'bloques, en ese orden. La columna dada para cada bloque '
           'corresponde a la columna izquierda del mismo. Las columnas están '
           'numeradas a partir de 0. Está garantizado que los bloques '
           'apilados nunca se saldrán de la zona de juego. Habrán a lo mucho '
           'diez bloques, es decir, 0 ≤ N ≤ 10.',
  'note': ' ',
  'output': 'Una matriz de caracteres con 10 filas y 10 columnas, la cual '
            'denota la zona de juego después de que cayeron los bloques. Un '
            'caracter . denota una celda desocupada y un caracter # denota una '
            'celda ocupada por un segmento de bloque.',
  'title': 'Bloques cayendo',
  'topics': ['strings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/1er-ccp-bloques'},
 {'history': 'Desde que recuerdas, siempre te ha gustado el juego de Twister '
             'ya que es muy divertido ver a los adultos jugando, pero ellos '
             'siempre te dicen que estás chiquito y no puedes. Es por eso que '
             'acabas de inventar un nuevo juego, no tan divertido pero que te '
             'ejercitará. Cuentas con un tapete de N × N marcas, donde cada '
             'marca tiene algún número del 1 al N^ 2. Ningún número se '
             'repite y comienzas parado en la marca 1. El objetivo del juego '
             'es pisar la marca 2, luego a la 3, y así sucesivamente hasta '
             'pisar la marca con el último número. Como estás chiquito no '
             'puedes dar saltos largos, así que sólo podrás saltar vertical '
             'u horizontalmente de una marca a otra contigua. No te '
             'preocupará pisar marcas distintas a la de tu destino conforme '
             'vas saltando, ya que intentar evitarlas volvería el juego muy '
             'complicado ( aunque pisar una marca antes de tiempo no cuenta y '
             'tienes que volver a ella cuando ya le toque su turno) . Escribe '
             'un programa que calcule la menor cantidad de saltos que tendrás '
             'que dar para completar el juego.',
  'input': 'Un entero N, indicando la dimensión de la matriz. Una matriz de N '
           '× N enteros con los números del 1 al N^ 2 sin repetir. 1 ≤ N ≤ '
           '100',
  'note': ' ',
  'output': 'Un entero que sea la menor cantidad de saltos que tendrás que '
            'dar para completar el juego.',
  'title': 'El juego del mini-Twister',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/1er-ccp-tapete'},
 {'history': ' ',
  'input': ' ',
  'note': ' ',
  'output': ' ',
  'title': 'ANDAMIRO Pump It Up',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/2-AHEYOND'},
 {'history': 'Elaborar un programa que lea las ventas de un conjunto de '
             'vendedores y devuelvalos vendendores con mayor número de '
             'ventas. La salida deberá tener a los k mejores vendedores con '
             'sus ventas respectivas. La primera línea recibirá n y k que '
             'son el número total de vendedoresy el número de mejores '
             'vendedores a buscar, respectivamente.',
  'input': 'n kc_ 1 v_ 1c_ 2 v_ 2⋯c_ n v_ nDonde c_ i es el primer nombre de '
           'cada vendedor y v_ i es el monto de ventas de ese vendedor.',
  'note': ' ',
  'output': 'Lista de los k vendedores con el mayor monto de ventas.',
  'title': '2. Vendedores',
  'topics': ['sortings'],
  'url': 'https://omegaup.com/arena/problem/2-Vendedores'},
 {'history': 'Deseas construir un nuevo complejo turístico y estás buscando '
             'comprar un buen terreno. Acudiste a una agencia de bienes '
             'raíces y ésta te proporcionó una lista de terrenos en venta. '
             'Cada terreno está descrito mediante una cadena formada por '
             'caracteres - / y que denotan una sección plana, una elevación '
             'y un hundimiento de terreno, respectivamente. La descripción '
             'del terreno toma como referencia el nivel del mar y el terreno '
             'se considera útil si tiene alguna zona construíble. Una zona '
             'construíble es una zona de al menos 10 secciones planas '
             'consecutivas que además no está por debajo del nivel de mar y '
             'tampoco está más de 5 unidades de altura por encima del nivel '
             'del mar. Dada la lista de terrenos que te ofrecen, determina '
             'cuáles te podrían servir para construir tu complejo '
             'turístico.',
  'input': 'Un entero N seguido de N cadenas. Puedes suponer que 0 ≤ N ≤ 1000 '
           'y que todas las cadenas tienen una longitud máxima de 500 '
           'caracteres.',
  'note': ' ',
  'output': 'Para cada terrero dado, imprimir SI si el terreno es útil y NO '
            'en caso contrario.',
  'title': 'Buscando el terreno ideal',
  'topics': ['strings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/2da-ccp-terreno'},
 {'history': 'Elaborar un programa que lea dos polinomios y devuelva la '
             'multiplicación de las entradas. Consideraciones: Los monomios '
             'que integran los polinomios serán de la forma: cx^ Ay^ Bz^ C, '
             'donde c ∈Z es el coeficiente y A, B, C ∈Z son los exponentes de '
             'x, y y z respectivamente. El polinomio resultante debe tener los '
             'monomios ordenados de mayor a menor considerando los exponentes '
             'primero de x, después de y y finalmente de z. Por ejemplo: x^ 3 '
             '+ x^ 2 - y^ 2 x^ 3 + 2x^ 2 - y^ 2 + 5z^ 2 x^ 3 + x^ 2y^ 2 - x^ '
             '1y^ 2 - 2z^ 3 + z^ 1',
  'input': 'n mcoeficiente^ p_ 1 A^ p_ 1 B^ p_ 1 C^ p_ 1coeficiente^ p_ 2 A^ '
           'p_ 2 B^ p_ 2 C^ p_ 2. . . coeficiente^ p_ n A^ p_ n B^ p_ n C^ p_ '
           'ncoeficiente^ q_ 1 A^ q_ 1 B^ q_ 1 C^ q_ 1coeficiente^ q_ 2 A^ q_ '
           '2 B^ q_ 2 C^ q_ 2. . . coeficiente^ q_ m A^ q_ m B^ q_ m C^ q_ '
           'mdonde n es el número de elementos del polinomio p y m es el '
           'número de elementos del polinomio q. Cada monomio sigue el '
           'formato: coeficiente A B C.',
  'note': ' ',
  'output': 'Coeficientes y exponentes del polinomio resultante.',
  'title': '3. Multiplicar polinomios',
  'topics': ['sortings'],
  'url': 'https://omegaup.com/arena/problem/3-Multiplicar-polinomios'},
 {'history': 'Dada una matriz A_ n × m de n- filas por m- columnas, buscar '
             'todas las coincidencias de una matriz B_ p × q dep- filas por q- '
             'columnas. Devolver una lista de todas las posiciones, parejas ( '
             'fila, columna) , donde aparece B en la matriz A. Por ejemplo, '
             'sea la matriz A: Y sea la matriz B: El programa debe devolver la '
             'lista de posiciones donde aparece B en A: ( 1, 2) ( 3, 4)',
  'input': 'n ma_ 11 a_ 12 ⋯ a_ 1ma_ 21 a_ 22 ⋯ a_ 2m⋮a_ n1 a_ n2 ⋯ a_ nmp qb_ '
           '11 b_ 12 ⋯ b_ 1qb_ 21 b_ 22 ⋯ b_ 2q⋮b_ p1 b_ p2 ⋯ b_ pqPor '
           'simplicidad asumir que todos los números ingresados son enteros, '
           'también asumir que las posiciones de las filas y columnas '
           'comienzan en 0.',
  'note': ' ',
  'output': 'Lista de posiciones donde aparece B en A.',
  'title': '4. Buscar Sub matriz',
  'topics': ['sortings'],
  'url': 'https://omegaup.com/arena/problem/4-Buscar-Sub-matriz'},
 {'history': 'Elaborar un programa que lea dos polinomios y devuelva la '
             'multiplicación de las entradas. Consideraciones: Los monomios '
             'que integran los polinomios serán de la forma: cx^ Ay^ Bz^ C, '
             'donde c ∈Z es el coeficiente y A, B, C ∈Z son los exponentes de '
             'x, y y z respectivamente. El polinomio resultante debe tener los '
             'monomios ordenados de mayor a menor considerando los exponentes '
             'primero de x, después de y y finalmente de z. Por ejemplo: x^ 3 '
             '+ x^ 2 - y^ 2 x^ 3 + 2x^ 2 - y^ 2 + 5z^ 2 x^ 3 + x^ 2y^ 2 - x^ '
             '1y^ 2 - 2z^ 3 + z^ 1',
  'input': 'n mcoeficiente^ p_ 1 A^ p_ 1 B^ p_ 1 C^ p_ 1coeficiente^ p_ 2 A^ '
           'p_ 2 B^ p_ 2 C^ p_ 2. . . coeficiente^ p_ n A^ p_ n B^ p_ n C^ p_ '
           'ncoeficiente^ q_ 1 A^ q_ 1 B^ q_ 1 C^ q_ 1coeficiente^ q_ 2 A^ q_ '
           '2 B^ q_ 2 C^ q_ 2. . . coeficiente^ q_ m A^ q_ m B^ q_ m C^ q_ '
           'mdonde n es el número de elementos del polinomio p y m es el '
           'número de elementos del polinomio q. Cada monomio sigue el '
           'formato: coeficiente A B C.',
  'note': ' ',
  'output': 'Coeficientes y exponentes del polinomio resultante.',
  'title': '5. Multiplicar polinomios',
  'topics': ['sortings'],
  'url': 'https://omegaup.com/arena/problem/5-Multiplicar-polinomios'},
 {'history': ' ',
  'input': 'n kA_ 1 B_ 1 C_ 1A_ 2 B_ 2 C_ 2⋮A_ n B_ n C_ nX Y Z',
  'note': ' ',
  'output': 'Conjunto de los k ejemplos más similares a la nueva observación '
            '( X, Y, Z) .',
  'title': '6. Buscar K tripletas',
  'topics': ['sortings'],
  'url': 'https://omegaup.com/arena/problem/6-Buscar-K-tripletas'},
 {'history': ' ',
  'input': ' ',
  'note': ' ',
  'output': ' ',
  'title': 'A Code With Numbers',
  'topics': ['strings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/A-Code-With-Numbers'},
 {'history': 'Simple te pido que me cuentes el numero de letras que hay en una '
             'palabra ( sin contar espacios) .',
  'input': 'Una cadena de caracteres.',
  'note': ' ',
  'output': 'Numero de letras que existen.',
  'title': 'A Contar Letras',
  'topics': ['strings'],
  'url': 'https://omegaup.com/arena/problem/A-Contar-Letras'},
 {'history': 'A Marco se le ha dado una misión muy especial, que consiste en '
             'mezclar 3 cadenas que tienen los caracteres ordenados de menor a '
             'mayor, y encontrar el carácter que quedará en medio de la '
             'nueva cadena. Nota: Mezclar cadenas con caracteres ordenados de '
             'menor a mayor, es un proceso que consiste en crear una nueva '
             'cadena que contendrá todos los caracteres de las cadenas '
             'mezcladas, estando también ordenados de menor a mayor. Por '
             'ejemplo, al mezclar las cadenas ”abd”, ” bcd” y ” e”, quedará '
             'la cadena ”abbcdde”ProblemaAyuda a Marco a saber qué carácter '
             'quedará en medio en la cadena que se produce al mezclar las '
             'tres cadenas que le dieron.',
  'input': 'Tres líneas diferentes, cada una con una cadena de caracteres de '
           'letras minúscula diferentes. El tamaño de cada cadena será de a '
           'lo más 1000001. Se asegura que la suma de las longitudes de las '
           'cadenas será impar.',
  'note': ' ',
  'output': 'El carácter que estará en medio en la nueva cadena.',
  'title': 'A Mezclar Palabras',
  'topics': ['strings', 'sortings'],
  'url': 'https://omegaup.com/arena/problem/A-Mezclar-Palabras'},
 {'history': 'Estás en preescolar, pero sabes programación, por lo que te '
             'gustaría ayudar a tus amigos a aprenderse el abecedario, ellos '
             'te dirán letra por letra y al final debes decir si lo dijo '
             'completo o debe estudiar más. Como además de buen programador, '
             'eres buen amigo, no te importa en qué orden te dirán las '
             'letras, lo único importante es que te lo digan completo.',
  'input': 'Un entero N donde 1≤N≤100 que indica el numero de amigos que te '
           'dirán sus abecedarios. A continuación, N líneas donde cada una '
           'tiene una cadena de texto que representa las letras que te ha '
           'dicho ese compañero.',
  'note': ' ',
  'output': 'Para cada abecedario que escuchas, deberás decir si lo ha hecho '
            'bien o no. Deberás imprimir PERFECT si tu amigo dijo el '
            'abecedario completo o NO WAY si le faltó al menos una letra por '
            'mencionar.',
  'title': 'ABCdario',
  'topics': ['strings'],
  'url': 'https://omegaup.com/arena/problem/ABCdario'},
 {'history': ' ',
  'input': ' ',
  'note': ' ',
  'output': ' ',
  'title': 'ANIEI 2021 - E',
  'topics': ['strings'],
  'url': 'https://omegaup.com/arena/problem/ANIEI-2021---E'},
 {'history': 'Has sido contratado para una compañia de Seguridad Cibernetica, '
             'se te ha asignado la tarea de analizar un archivo binario ( . '
             'EXE) del cual se sospecha que es un virus, como buen hacker que '
             'eres le vas a realizar Ingenieria Inversa al archivo para '
             'extraer todas las cadenas de texto que se encuentran dentro del '
             'archivo, pero por alguna razon tienes instalado Windows en lugar '
             'de Linux ( No se por que encerio ya cambiate a Linux) , y como '
             'no tienes linux no puedes usar la Herramienta BinWalk, asi que '
             'tendras que hacer un programa que lea texto, este texto sera '
             'solo 0 y 1, y representa los datos binarios del ejecutable, tu '
             'tarea es convertir esos grupos de 0 y 1 a letras he imprimir la '
             'traduccion en la Salida ( stdout) . los bits estaran en grupos '
             'de 8 y cada 8 bits simboliza un carater en codificacion ASCII. '
             'Por ejemplo: 01000101 01111000 01100001 01101101 01110000 '
             '01101100 01100101En el texto anterior compuesto de 0 y 1. '
             'agrupados en 8, y codificados en ASCII, Representa la palabra: '
             'ExamplePuedes usar esta herramienta WEB para traducir de binario '
             'a ASCII. Binary To ASCII. Tambien se recomienda que investigues '
             'sobre el container bitset en c+ + . Bitset',
  'input': 'Una cantidad variable de caracteres que representa a un texto en '
           'binario codificado en ASCII.',
  'note': ' ',
  'output': 'El texto traducido en Formato ASCII',
  'title': 'ASCII Codificado en Binario',
  'topics': ['strings'],
  'url': 'https://omegaup.com/arena/problem/ASCII-Codificado-en-Binario'},
 {'history': ' ',
  'input': ' ',
  'note': ' ',
  'output': ' ',
  'title': 'ASCII for first four characters',
  'topics': ['strings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/ASCII-equivalent'},
 {'history': 'El primer problema de hoy es tan simple como a+ b. Recibirás '
             'una cadena de caracteres con dígitos. Tendrás que reacomodar '
             'esos dígitos para construir dos enteros no negativos, a y b, '
             'tal que la suma de a+ b sea la más grande posible. Cada número '
             'debe tener al menos un dígito. No se permitirán ceros a la '
             'izquierda, sin embargo el número cero hecho con un solo 0 es '
             'permitido. Tendrás que usar cada digito exactamente la misma '
             'cantidad de veces que aparezca en la cadena de caracteres '
             'inicial.',
  'input': 'La primera línea contendrá un entero t especificando el número '
           'de casos. Cada caso consistirá en una línea con una cadena de '
           'caracteres con dígitos de tamaño n. Si hay más de dos dígitos, '
           'no todos serán ceros.',
  'note': ' ',
  'output': 'Por cada caso, imprime una línea con la suma más grande que '
            'puede ser conseguida.',
  'title': 'A+B',
  'topics': ['strings', 'sortings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/ASUMAB'},
 {'history': 'Ayla es una niña que tiene demasiadas zapatillas y un día '
             'decidió acomodar cada una de ellas, mientras las acomodaba se '
             'dio cuenta que tenía un desorden y así que decidió re- '
             'ordenarlas y tirar a la basura todas las zapatillas que se '
             'habían quedado solas. Ayla tiene un montón de zapateros en '
             'donde tiene una infinidad de zapatillas. Problema: Realiza un '
             'programa que dadas la cantidad de zapatillas que tenía, y un '
             'identificador de cada zapatilla, decir de cuantas zapatillas se '
             'puede deshacer Ayla, es decir, todas las que han perdido su par. '
             'Dos zapatillas son del mismo par si tienen el mismo '
             'identificador.',
  'input': 'En la primer línea, un numero N con la cantidad de zapatillas que '
           'tiene Ayla. En la segunda línea, K números, el identificador de '
           'cada una de las zapatillas.',
  'note': ' ',
  'output': 'En la primera línea los identificadores de las zapatillas que '
            'puede tirar, en la segunda línea la cantidad de zapatillas que '
            'puede tirar y en la tercera línea la cantidad de zapatillas que '
            'Ayla se quedará, en caso de que Ayla haya encontrado todos los '
            'pares de las zapatillas debes imprimir : D en lugar de los '
            'identificadores.',
  'title': 'Acomodando zapatillas',
  'topics': ['sortings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Acomodando-zapatillas'},
 {'history': 'Larry se graduó este año y, finalmente, tiene un trabajo. '
             'Está ganando un montón de dinero, pero de alguna manera nunca '
             'parece tener suficiente. Larry ha decidido que necesita tomar '
             'control de su cartera financiera y resolver sus problemas de '
             'financiación. El primer paso es averiguar lo que está pasando '
             'con su dinero. Larry tiene sus estados de cuenta bancarios y '
             'quiere ver la cantidad de dinero que tiene. Ayuda a Larry '
             'escribiendo un programa que tome su balance de cierre de cada '
             'uno de los últimos doce meses y calcule su saldo promedio.',
  'input': 'La entrada será de 12 líneas. Cada línea contendrá el balance '
           'de cierre de su cuenta bancaria para un mes en particular. Cada '
           'número será positivo y se muestra hasta el último centavo. No '
           'se incluirá ningún signo de pesos.',
  'note': ' ',
  'output': 'La salida será un único número, el promedio ( media) de los '
            'saldos de cierre de los 12 meses. Se redondeará al centavo más '
            'cercano, inmediatamente precedido por un signo de pesos, y '
            'seguido por el final de la línea. No habrá otros espacios o '
            'caracteres en la salida.',
  'title': 'Administración financiera',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Administracion-financiera'},
 {'history': '¡Ayuda! En el burgo enemigo el rey Osman está aprendiendo a '
             'programar D: Como todos en el reino sabrán, el rey Agustín y '
             'el rey Osman fueron amigos en sus días de infancia hasta que '
             'por razones que ninguno de los dos han querido explicar se '
             'volvieron enemigos mortales. Aquí en el burgo del rey Agustín '
             'guardamos un profundo resentimiento hacia todos nuestros '
             'enemigos, es por eso que al enterarnos que el rey Osman estaba '
             'empezando a programar mandamos nuestros mejores espías hacia el '
             'burgo enemigo y encontramos el siguiente código escrito en C+ + '
             ': 📋int input[ MAX_ N] , toSort[ MAX_ N] ; long long quickSort ( '
             'int lft, int rgt, int lev ) if ( lft > = rgt ) return 0LL; int '
             'piv = lft + input[ lev]',
  'input': 'Un entero N seguido de N números, A_ 0, A_ 1, . . . , A_ n- 1, '
           'que corresponden al arreglo input. Se garantiza que 0 ≤ A_ i ≤ n- '
           '1 para todo i, 0 ≤ i ≤ n- 1.',
  'note': ' ',
  'output': 'N números, B_ 0, B_ 1, . . . , B_ n- 1 que corresponden al '
            'arreglo toSort. Todos los números de esta función tienen que '
            'ser diferentes y ademas todos tienen que estar entre 1 y n, o '
            'sea, para todo x en el arreglo toSort, se tiene que 1 ≤ x ≤ n.',
  'title': 'Agustín y su resentimiento',
  'topics': ['sortings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Agustin-y-su-resentimiento'},
 {'history': 'El pequeño Agustín no esta a gustín : ( Ayer llegó al '
             'palacio real, muy cansado de haber jugado toda la mañana, solo '
             'para encontrarse con la mala noticia de que su amigo Osman '
             'había refundido una nota en la que él, Agustín, había '
             'trabajado durante casi año y medio. La nota llevaba una sola '
             'palabra producto de las duras meditaciones que había llevado '
             'durante toda su vida ( cinco años tiene Agustín) . Así que '
             'apenas se enteró lo primero que hizo fue buscar por todo el '
             'palacio recolectando todas las notas que encontraba. Hoy por la '
             'mañana llegó Osman al palacio, a lo que Agustín le preguntó '
             'por la nota, él le respondió que había estado jugando un '
             'juego muy divertido con una nota que se había encontrado, sus '
             'palabras exactas fueron: Supongamos que tenemos una palabra; '
             'digamos ”palabra”, luego llegamos y escogemos dos letras del '
             "abecedario; digamos ' a' y ' b' , entonces lo que hacemos es "
             "llegar y cambiar en la palabra las letras ' a' por letras ' b' y "
             'las letras \' b\' por letras \' a\' , entonces " palabra" '
             'quedaría " pblbarb" ¿No es asombroso? E incluso lo podemos '
             "hacer con letras que no están en la palabra, digamos ' z' y ' "
             'l\' , quedaría " pbzbarb" Y mira, si lo hacemos con dos letras '
             "que no están en la palabra, digamos ' x' y ' y' , quedaría "
             '" pbzbarb" ¡Las posibilidades son infinitas! Agustín se fue muy '
             'enojado a su cuarto y no ha salido de allí desde el medio día, '
             'no quiere hablar con nadie ni ha recibido nada de comida. Si '
             'bien Agustín se sabe la palabra que él había escrito, él '
             'aún quiere hallar la nota, y está intentando descifrar cuál '
             'de las notas que él recolectó es la nota donde él '
             'originalmente escribió su palabra. Él ya descartó todas '
             'aquellas donde el tamaño de la palabra de Agustín ( llamemosla '
             'S) y la palabra escrita en la nota ( llamemosla Q) son '
             'diferentes. Entonces él te va a dar las dos palabras y tú '
             'tienes que ayudarlo diciéndole si se puede llegar desde la '
             'palabra que él escribió a la palabra escrita en la nota '
             'haciendo el juego de Osman cuantas veces sean necesarias ( No '
             'tenemos seguridad de cuantas veces hizo Osman el juego) . '
             'Ayúdalo por favor, él aún tiene cinco años y se le hacen muy '
             'difíciles estos trabajos : (',
  'input': 'Un cadena de carácteres S; la palabra que escribió Agustín, y '
           'una cadena de carácteres Q que consisten de solamente letras '
           'minúsculas del alfabeto inglés. | S| = | Q| ( | S| se refiere al '
           'tamaño de la cadena de carácteres S) .',
  'note': ' ',
  'output': 'Imprime Si si se puede llegar de la palabra S a la palabra Q '
            'haciendo el juego de Osman; imprime No si no se puede.',
  'title': 'Agustín y sus meditaciones',
  'topics': ['strings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Agustin-y-sus-meditaciones'},
 {'history': 'Alicia persiguió al conejo blanco y cayó en un agujero muy '
             'profundo. . . tan profundo que Alicia tuvo tiempo de aburrirse '
             'mientras caía. De pronto, Alicia observó que en el túnel '
             'apareció un estante, el cual tenía botellas de mermelada en '
             'algunas repisas. Alicia se dio cuenta que las botellas de '
             'mermelada eran de diferentes tamaños y se propuso acomodarlas '
             'en orden creciente. Ya que Alicia estaba en caída libre, sus '
             'acciones eran algo limitadas: Alicia puede agarrar una botella '
             'de una repisa, seguir cayendo con ella y luego colocarla en una '
             'repisa libre. Además, Alicia no puede tener más de una botella '
             'en las manos al mismo tiempo. Alicia sabe que será difícil '
             'ordenar el estante completo y se conformará con ordenar lo más '
             'posible el inicio del estante. Ayuda a Alicia con su difícil '
             'tarea.',
  'input': 'Cada fila de la entrada puede contener ya sea un entero positivo ( '
           'el cual denota el tamaño de la botella en dicha repisa) o el '
           'entero 0 ( el cual denota una repisa vacía) . Puedes suponer que '
           'los tamaños de las botellas son todos distintos y en el rango de '
           '1 a 105.',
  'note': ' ',
  'output': 'La máxima cantidad de botellas que pueden quedar ordenadas desde '
            'el inicio del estante antes de que el orden se termine.',
  'title': 'Alicia y el estante desordenado',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Alicia-y-el-estante-desordenado'},
 {'history': ' ',
  'input': ' ',
  'note': ' ',
  'output': ' ',
  'title': 'Alumnos de Lions',
  'topics': ['strings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Alumnos-de-Lions'},
 {'history': ' ',
  'input': ' ',
  'note': ' ',
  'output': ' ',
  'title': 'Amargo y Retruco',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Amargo-y-Retruco'},
 {'history': 'Durante todo el tiempo que ha durado la pandemia del COVID- 19 '
             'has sentido ansiedad, pero, al mismo tiempo, algunas veces has '
             'sentido más ansiedad que otras veces, así que decidiste hacer '
             'una función matemática que represente cuánta ansiedad has '
             'tenido en cierto momento. Como eres muy inteligente, pudiste '
             'generar una función polinómica f( t) de grado N: dado un '
             'tiempo t, la función f( t) representa el nivel de ansiedad que '
             'tienes con respecto a la ansiedad recomendada por los '
             'psicólogos, una f( t) positiva representa una ansiedad mayor a '
             'la recomendada y una f( t) negativa representa una ansiedad '
             'menor a la recomendada. Para regular tus emociones, te gustaría '
             'saber en qué momentos has tenido una ansiedad " cresta" , que '
             'representa un máximo de la función f( t) , y en qué momentos '
             'has tenido una ansiedad " valle" , que representa un mínimo de '
             'la función. Por último, quisieras saber qué tanto te ha '
             'afectado la pandemia con respecto al tiempo donde no había, por '
             'lo que un t positivo representa un momento durante la pandemia y '
             'un tiempo t negativo representa un momento antes de la pandemia.',
  'input': 'Un entero N que representa el grado del polinomio, seguido de N + '
           '1 reales, desde a_ n hasta a_ 0, donde a_ i representa el '
           'coeficiente de x^ i.',
  'note': ' ',
  'output': 'La salida consta de dos partes. La primera inicia con la cadena " '
            'maximos: " seguida de las parejas ( t, f( t) ) que representan '
            'los momentos donde tuviste ansiedades cresta, después la cadena '
            '" minimos: " seguida de las parejas ( t, f( t) ) que representan '
            'los momentos donde tuviste ansiedades valle. Como eres ingeniero '
            'en computación solo te interesan 3 cifras tanto para t como para '
            'f( t) . Las parejas de cada parte de la salida deben de estar '
            'ordenadas de menor a mayor con respecto a t.',
  'title': 'Analizando mi ansiedad',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Analizando-mi-ansiedad'},
 {'history': 'Escribe un programa que lea una línea de texto y que: Calcule '
             'la longitud de la línea y la cantidad de espacios que hay en '
             'ella. Cambie las letras mayúsculas por minúsculas, y '
             'viceversa. Incremente en uno cada dígito de la línea ( excepto '
             'los dígitos 9, que se quedan como están) .',
  'input': 'Una línea de texto de a lo mucho 50 caracteres de longitud. '
           'Puedes suponer que la línea incluye letras, dígitos, espacios '
           'sencillos y símbolos de puntuación. El salto de línea no se '
           'considera parte de la entrada.',
  'note': ' ',
  'output': 'En la primera línea, dos enteros que correspondan con el tamaño '
            'de la línea y la cantidad de espacios que hay en ella, '
            'respectivamente. En la segunda línea, la línea después de ser '
            'modificada.',
  'title': 'Analizando y transformando una cadena',
  'topics': ['strings'],
  'url': 'https://omegaup.com/arena/problem/Analizando-y-transformando-una-c'},
 {'history': 'Una noche mientras regresabas de comerte unos ricos tacos, una '
             'luz se posa sobre ti y pierdes el conocimiento. Cuando por fin '
             'abres los ojos, te das cuenta que has sido abducido por un grupo '
             'de extraterrestres que buscan hacer contacto con los habitantes '
             'de la tierra, pero no están seguros si los humanos son lo '
             'suficientemente inteligentes para incluirlos en la Unión de '
             'Planetas para la Cuarta Transformación ( UPCT) , así que tu '
             'serás uno de los humanos a los cuales evaluarán para probar la '
             'inteligencia terrestre. El grupo de extraterrestres ( '
             'provenientes de Venus, Marte y Saturno) quieren que muestres tus '
             'conocimientos de programación, ya que en todas las '
             'civilizaciones de la galaxia la programación es la habilidad '
             'más valiosa que hay y el estándar de la inteligencia en la '
             'galaxia. Te han puesto como tarea crear un programa, en el '
             'lenguaje que elijas, que calcule la cantidad de años terrestres '
             'equivalentes a los años que ellos indiquen de alguno de sus '
             'planetas de origen. De lograrlo, la Tierra será considerada '
             'para ingresar en la UPCT, de lo contrario los humanos quedarían '
             'relegados y muy probablemente exterminarían al planeta ya que '
             'no sería de utilidad a la Galaxia.',
  'input': 'Dos datos, un número positivo que representa la cantidad de años '
           'seguido por el nombre del planeta de alguno de los '
           'extraterrestres. Puede asumir que no se ingresarán otros nombres '
           'de planetas.',
  'note': ' ',
  'output': 'La cantidad de años terrestres a los que equivale esa cantidad '
            'de años del planeta dado redondeado a 2 decimales seguido por '
            'las palabras " años terrestres" de acuerdo a la siguiente tabla '
            'de equivalencia: 1. 882 años terrestres = un año en Marte29. '
            '476 años terrestres = un año en Saturno0. 616 años terrestres '
            '= un año en Venus',
  'title': 'Años extraterrestres',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Anos-extraterrestres-ANH'},
 {'history': 'La Universidad Autónoma Metropolitana fue creada el 1 de enero '
             'de 1974 y en algunos de sus documentos se registraron fechas '
             'donde el año está representado por dos dígitos. El problema '
             'de representar años con dos dígitos es que se necesita conocer '
             'el contexto para determinar el siglo. Por ejemplo, en el '
             'contexto de la UAM la fecha 12/ 10/ 74 se refiere a 12/ 10/ 1974 '
             'mientras que la fecha 12/ 10/ 18 se refiere a 12/ 10/ 2018. '
             'Escribe un programa que lea una secuencia de fechas cuyos años '
             'están representados con dos dígitos e imprima cada una '
             'representando el año con cuatro dígitos, donde el año se '
             'desambigua usando la fecha de creación de la UAM.',
  'input': 'Una secuencia de fechas en el formato d/ m/ a donde d, m y a '
           'denotan el día, mes y año de una fecha, con el año representado '
           'a dos dígitos. Puedes suponer que todas las fechas son válidas.',
  'note': ' ',
  'output': 'Una secuencia de fechas que corresponda con las fechas de la '
            'entrada pero representando el año con cuatro dígitos.',
  'title': 'Años con dos y cuatro dígitos',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Anyos-con-dos-y-cuatro-digitos'},
 {'history': 'Molesto después de fallar su entrevista en FB. Felipe decide '
             'crear su propia empresa " malvados y asociados" . Para que su '
             'empresa funcione de forma correcta, necesita que en cada área '
             'de la empresa halla una cantidad par de persona trabajando. La '
             'empresa tiene un total de n empleados, tu tarea será decir '
             'cuantas personas faltaría poner para que la empresa funcione de '
             'forma correcta. ProblemaDado una lista de n números que '
             'representan en que área trabaja cada empleado actual, decir '
             'cuantos empleados habría que contratar ( los nuevos empleados '
             'puede trabajar en cualquier área) para que la empresa funcione '
             'de manera correcta.',
  'input': 'Se te dará un número n que representa la cantidad de empleado. '
           'Luego, una lista de n números que son las áreas en la que '
           'trabaja cada empleado.',
  'note': ' ',
  'output': 'Un único entero que representa la minima cantidad de personas '
            'que faltan para que la empresa funcione de forma correcta.',
  'title': 'Mejorando la empresa',
  'topics': ['sortings'],
  'url': 'https://omegaup.com/arena/problem/Apariciones-pares'},
 {'history': 'A Jonathan le han mandado en el instituto que realice un '
             'problema de configuración electrónica. La verdad es que con '
             'química está bastante perdido, y ha decidido que no va a ser '
             'ésta la asignatura que le deje fuera de la universidad. '
             'Teniendo en cuenta que en el examen no es crucial para la nota '
             'la realización de un ejercicio de este tipo, pero que no se les '
             'permite aprobar si no entregan bien realizados todas las '
             'actividades propuestas en clase, ha decidido pedirle ayuda a su '
             'hermano que está estudiando un Ciclo Formativo de Grado '
             'Superior de Informática. Lo primero que hace Jonathan es '
             'explicarle a su hermano el ejercicio, que consiste en indicar de '
             'qué forma se distribuyen los electrones de los átomos o '
             'elementos químicos. Para eso, le cuenta, se utiliza el diagrama '
             'de Moëller que determina en qué orden se van completando los '
             'subniveles de cada orbital. La idea intuitiva es que para saber '
             'cómo se distribuyen los N electrones de un átomo concreto '
             'debemos pensar dónde se coloca el primer electrón, después '
             'dónde se coloca el segundo, etc. , hasta llegar al último. La '
             'tabla 1. a muestra todos los " huecos" posibles donde se pueden '
             'colocar. Sus nombres son una combinación del número nivel ( 1. '
             '. . 7) y del orbital ( s, p, d o f) . La figura 1. b muestra en '
             'qué orden se van completando los subniveles. Como se ve, '
             'consiste en recorrer los subniveles de forma diagonal de arriba '
             'a abajo y de derecha a izquierda: 1s 2s 2p 3s 3p 4s 3d 4p 5s 4d '
             '5p 6s 4f 5d 6p 7s 5f 6d 7pLo último que hay que tener en cuenta '
             'es el número de electrones que entran en cada subnivel: el '
             'subnivel s puede llenarse con 1 ó 2 electrones. El subnivel p '
             'puede contener de 1 a 6 electrones, el d de 1 a 10 electrones y '
             'el subnivel f de 1 a 14 electrones: Para que todo le quede más '
             'claro, Jonathan le enseña a su hermano un ejercicio que han '
             'realizado en clase: la configuración electrónica del Rubidio '
             'que tiene 37 electrones ( en la terminología química se dice '
             'que el número atómico del Rubidio es Z= 37) . Siguiendo el '
             'diagrama de Moëller, los dos primeros electrones irán en el '
             'subnivel 1s y los dos siguientes en 2s. A continuación se '
             'completará el 2p con seis electrones más ( son los que entran '
             'en los orbitales p) . Los dos siguientes irán a parar a 3s y '
             'los siguientes seis a 3p. En este momento hemos colocado ya 18 '
             'electrones. Si continuamos con el proceso hasta colocar los 37 '
             'veremos que los 36 primeros electrones completan todos los '
             'subniveles hasta el 4p y por tanto que el último electrón '
             'termina en el subnivel 5s. El número de electrones que quedan '
             'en cada subnivel es: La forma de indicar la configuración '
             'electrónica es mostrar uno tras otro todos los subniveles que '
             'tienen electrones utilizando el orden en el que se han ido '
             'rellenando. Además, para cada subnivel se indica el número de '
             'electrones que han caído en él. Para nuestro ejemplo será: '
             '1s2 2s2 2p6 3s2 3p6 4s2 3d10 4p6 5s1ProblemaDado el nombre de un '
             'elemento químico y su numero atómico neutral ( n) , determinar '
             'la configuración electrónica de los elementos',
  'input': 'La entrada consistirá en una secuencia de casos de prueba, donde '
           'cada caso de prueba está formado por dos líneas: el nombre del '
           'elemento químico y su número atómico Z. El nombre del elemento '
           'químico estará compuesto por una única palabra y no tendrá '
           'nunca más de 50 letras; por su parte, el número atómico estará '
           'entre 0 y 118. El programa terminará de recibir valores cuando el '
           'nombre del elemento sea " Exit" .',
  'note': ' ',
  'output': 'Para cada caso de prueba, el programa indicará la configuración '
            'electrónica del elemento introducido. La configuración '
            'electrónica será la lista de los subniveles en el orden en el '
            'que se van rellenando seguido del número de electrones que hay '
            'en ese subnivel. Cada subnivel se separará del anterior por un '
            'espacio en blanco. Si por un casual nos preguntan por el isótopo '
            'del Hidrógeno que no tiene ningún electrón ( Z= 0) , '
            'escribiremos 1s0.',
  'title': 'Aprobar Quimica',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Aprobar-Quimica'},
 {'history': 'Ahora que ya casi es Navidad, preso se quiere dedicar vender '
             'árboles de navidad y sacar algo de dinero extra. Pero como es '
             'muy innovador decido construirlos a la medida y con un diseño '
             'propio. Los árboles que construye son de altura n+ 1 ya que en '
             'el último nível tiene una estrella. Los árboles tienen la '
             'siguiente forma: La estrella es un * y los otros niveles están '
             'formados por letras " o" minúsculas. Tu trabajo ayudar a preso '
             'con su propósito navideño.',
  'input': 'En la primera línea un entero n el número de niveles en el '
           'árbol ( n no incluye la estrella) .',
  'note': ' ',
  'output': 'El árbol de n+ 1 niveles ya con la estrella incluida.',
  'title': 'Arbol de navidad estrellado',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Arbol-de-navidad-estrellado'},
 {'history': 'El área de una elipse con radio menor r_ 1 y radio mayor r_ 2 '
             'se calcula como π× r_ 1 × r_ 2. Se te darán las coordenadas x_ '
             'c, y_ c del centro de la elipse y las coordenadas de los puntos '
             'p_ 1 = ( x_ 1, y_ 1) y p_ 2 = ( x_ 2, y_ 2) de los extremos de '
             'los radios a partir del centro de la elipse. Escribe un programa '
             'que calcule el área de la elipse.',
  'input': 'La primera línea contendrá dos enteros x_ c, y_ c. La segunda '
           'línea contendrá dos enteros x_ 1, y_ 1. La tercera línea '
           'contendrá dos enteros x_ 2, y_ 2.',
  'note': ' ',
  'output': 'Un real que sea el área de la elipse. Ésta se debe imprimir '
            'obligatoriamente con dos decimales de precisión.',
  'title': 'Área de una elipse',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Area-de-una-elipse'},
 {'history': 'Con tus conocimientos sobre arreglos y bucles en C+ + , tú '
             'tarea es crear un algorítmo el cuál, dado un arreglo de 5 '
             'números enteros a, b, c, d, e imprima dicho arreglo pero con '
             'los números ordenados de mayor a menor.',
  'input': 'Se te darán como valor de entrada cinco números enteros a, b, c, '
           'd, e.',
  'note': ' ',
  'output': 'Deberás imprimir dichos números ordenados de mayor a menor '
            'separados por un espacio.',
  'title': 'Arreglo de mayor a menor',
  'topics': ['sortings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Arreglo-de-mayor-a-menor'},
 {'history': 'Karel recientemente se ha vuelto mayor de edad, lo que indica '
             'que podría ir a prisión en caso de que saliera con una menor '
             'de edad. Por suerte Karel se ha mudado a Karelandia donde '
             'también le permiten tener una novia de dieciséis años. '
             'ProblemaDada una lista de n personas acomoda de mayor a menor '
             'las personas con las que Karel puede salir en la fila 1. '
             'EspecificacionesKarel no tiene zumbadores en su mochila. Cada '
             'persona está representada por un montón de zumbadores igual a '
             'su edad. La posición y orientación inicial de Karel es '
             'desconocida. El récord de la persona más longeva en Karelandia '
             'es 100 años. El mundo de Karel será un rectángulo de 100×100 '
             'sin paredes interiores. Karel no puede tener una novia de '
             'diecisiete años. Las señoritas estarán siempre en el primer '
             'renglón. Puede haber espacios vacíos entre ellas. Mundo '
             'ejemplo entrada 1Mundo ejemplo salida',
  'input': ' ',
  'note': ' ',
  'output': ' ',
  'title': 'Asalta Kunas',
  'topics': ['sortings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Asalta-Kunas'},
 {'history': 'Eduardo es un tipo muy extraño y siempre juega con las cosas y '
             'las invierte, esta vez se topo con un gran '
             'problemaProblemaEduardo quiere invertir una pirámide de '
             'asteriscos pero no sabe mucho sobre condicionales necesita de tu '
             'ayuda ya que sabe que tu eres un PRO en programación, ayuda a '
             'Eduardo a que no se aburra.',
  'input': 'Recibirás por teclado solo un numero N, el cual representa la '
           'altura de la pirámide.',
  'note': ' ',
  'output': 'Una pirámide inversa de tamaño N.',
  'title': 'Asterisco de cabeza',
  'topics': ['strings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Asterisco-de-cabeza'},
 {'history': 'Realiza un programa que permita atender a una serie de personas '
             'de acuerdo a su rango de edad, pero también considerando su '
             'hora de llegada; de manera que, las personas tengan oportunidad '
             'de ser atendidas y no duren demasiado formados. La política de '
             'atención dice que las personas de 50 años en adelante tienen '
             'un menor tiempo de espera, puesto que por cada 3 que se atienden '
             'de 50 en adelante, se atienden 2 de la fila común. Realiza un '
             'programa que ayude a identificar el orden y momento de cada una '
             'de las personas que fueron llegando. Se asume que una vez que '
             'comienza el turno de atención de una de las filas no se '
             'suspende hasta terminar de atender al número de personas '
             'correspondiente. Ejemplo: suponiendo que el servicio arranca a '
             'las 8: 00 y en la fila común hay 5 personas que llegaron a las '
             '7: 59, en la fila de mayores llega una persona a las 8: 01. El '
             'servicio arranca atendiendo a 2 personas de la fila común, una '
             'a las 8: 00 y otra a las 08: 01, es decir, NO se debe suspender '
             'el turno de la fila común por el hecho de que haya llegado '
             'alguien a la fila de mayores. Nota: Toma en cuenta que si una '
             'persona se forma en una fila ( de mayores o la común) a la '
             'misma hora que otra, se formará primero la persona cuyo nombre '
             'sea menor en orden lexicográfico.',
  'input': 'Un entero N que representa el número de personas que llegaron a '
           'formarse, el tiempo de inicio de atención I dado por 2 enteros '
           'separados por " : " , es decir una hora y un minuto. Finalmente, '
           'se leerán N_ i líneas que contienen una cadena P que representa '
           'el nombre de la persona seguida de un " - " , posteriormente un '
           'entero E que representa la edad de la persona, seguido de un " - " '
           'y el momento M en el que la persona llegó a formarse ( por 2 '
           'enteros separados por " : " ) .',
  'note': ' ',
  'output': 'N_ i líneas que estarán formadas por el nombre de la persona n '
            'seguida por un - y finalmente, el momento m en el comenzó a ser '
            'atendido. NOTA: puedes suponer que cada persona tarda un minuto '
            'en ser atendida.',
  'title': 'Atención de clientes',
  'topics': ['sortings'],
  'url': 'https://omegaup.com/arena/problem/Atencion-de-clientes'},
 {'history': 'Batkarel está persiguiendo a un ladrón! Y es tu trabajo '
             'ayudarlo a atraparlo. Batkarel está siguiendo un rastro para '
             'poder encontrar al ladrón, siempre debe avanzar hacia adelante '
             'a no ser que se encuentre un beeper, el cuál le sirve de pista. '
             'Si encuentra un solo Beeper, sabe que debe girar a la izquierda, '
             'y si encuentra dos, sabe que debe girar a la derecha. Si '
             'encuentra tres beepers, quiere decir que atrapó al ladrón, '
             'así que debería terminar volteando hacia el sur. Si Batkarel '
             'se encuentra frente a una pared mientras persigue al ladrón, '
             'quiere decir que ya perdió su pista, y deberá terminar el '
             'programa.',
  'input': '',
  'note': ' ',
  'output': 'ConsideracionesBatkarel puede comenzar en cualquier lugar del '
            'mundo, mirando en cualquier direcciónSi Batkarel encuentra al '
            'ladrón, debe terminar en la posición donde lo encontró, '
            'mirando hacia el sur. Si Batkarel se encuentra frente a una '
            'pared, debe terminar en esa posición, mirando en la dirección '
            'que tenía cuando se encontró la pared. Batkarel empieza con 0 '
            'beepers en la mochila.',
  'title': 'Atrapando al ladrón',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Atrapando-al-ladron-omichh'},
 {'history': 'Un autómata celular es un modelo matemático que es útil para '
             'llevar a cabo simulaciones discretas. Éste consiste de una '
             'rejilla donde cada celda es llamada célula, de una asignación '
             'de estados discretos para las células, de una descripción de '
             'la vecindad de cada célula del autómata y de un conjunto de '
             'reglas que permiten actualizar los estados de las células del '
             'tiempo t_ i al tiempo t_ i + 1. Escribe un programa que '
             'implemente un autómata celular con una rejilla de N × N '
             'células con estados binarios # o - . La vecindad de una célula '
             'consistirá de ella y de las ocho células que la rodean ( '
             'vecindad de Moore) y se debe considerar que la última fila es '
             'vecina de la primera ( de manera circular) mientras que lo mismo '
             'ocurre para la última y primera columnas.',
  'input': 'El entero N seguido de una matriz de N × N caracteres # o - que '
           'denotan los estados de las células de la rejilla al tiempo t_ 0. '
           'Posteriormente un entero M seguido de M matrices de 3 × 3, una al '
           'lado de la otra y separadas por espacios, las cuales denotan las '
           'vecindades para las que la célula central en el tiempo t_ i se '
           'verá como # en el tiempo t_ i+ 1 ( la célula se verá como - '
           'para cualquier otra vecindad) . Finalmente, un entero T. Puedes '
           'suponer que 1 ≤ N ≤ 100, 0 ≤ M ≤ 512 y 0 ≤ T ≤ 10.',
  'note': ' ',
  'output': 'Una matriz de N × N caracteres que muestre la rejilla del '
            'autómata en el tiempo T. InputOutput📋4- # - # # - # –# - # # - # '
            '- 01—————- 📋4- # - # # - # –# - # # - # - 3- # - - # - # # # # - '
            '# # # # # - # - # - - # - # # # 1# - # –# - # # - # –# - # 📋4# # '
            '# # # –# # –# # # # # 4# # # # # # # – –# # – –# # – –# # – –# # '
            '# # # # # 1—–# # –# # —–📋4# # # # # –# # –# # # # # 4# # # # # # '
            '# – –# # – –# # – –# # – –# # # # # # # 2—————-',
  'title': 'Autómatas celulares',
  'topics': ['sortings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Automatas-celulares'},
 {'history': ' ',
  'input': ' ',
  'note': ' ',
  'output': 'Imprime " Aqui tiene su cafe " + el tipo de café que ordenó.',
  'title': 'Avance tecnológico ',
  'topics': ['strings'],
  'url': 'https://omegaup.com/arena/problem/Avance-tecnologico'},
 {'history': 'A Pedro le gustan mucho las palabras y las peculiaridades en los '
             'enunciados, como cuando lees “atar a la rata” de izquierda a '
             'derecha o de derecha a izquierda. Sin embargo, él se dio cuenta '
             'en los últimos días que le gustan más los números y decidió '
             'darle un valor a cada letra para entretenerse un rato. Lo que '
             'él hizo fue asignar ‘a’= 1, ‘b’= 2, ‘c’= 3, . . . , ’z’= 26 y '
             'noto que cada palabra tenía un valor entero si sumaba el valor '
             'de cada letra que la componía, a este valor le llamo X. Por '
             'ejemplo el valor X de la palabra “arte” equivale a 44 ya que '
             '‘a’= 1, ‘r’= 18, ‘t’= 20, ‘e’= 5 y ( 1+ 18+ 20+ 5) = 44 y el '
             'valor X de la palabra “jaja” es igual a 22 porque ‘a’= 1, ‘j’= '
             '10 y ( 10+ 1+ 10+ 1) = 22. Nota que en el abecedario no '
             'consideró la letra ñ ni algun dígrafo como ch o ll. Pedro '
             'necesita tu ayuda para resolver el siguiente problema: Dado un '
             'número n encuentra una string lo más corta posible tal que su '
             'valor X sea igual a n. Si existen varias strings que cumplan '
             'esta condición imprime la más pequeña lexicográficamente. La '
             'string lexicográficamente más pequeña es aquella que '
             'aparecería primero en el diccionario o formalmente hablando si '
             'se tienen dos strings A y B, A es lexicográficamente más '
             'pequeña que B si: - La string A es un prefijo de B y A es '
             'diferente de B. - En la primera posición donde A y B difieren, '
             'la string A tiene una letra que aparece primero en el alfabeto '
             'que la letra correspondiente en B.',
  'input': 'Un entero n.',
  'note': ' ',
  'output': 'Una string lo más corta posible tal que su valor X sea igual a '
            'n. Si existen varias strings que cumplan esta condición imprime '
            'la más pequeña lexicográficamente.',
  'title': 'Ayuda a Pedro',
  'topics': ['strings'],
  'url': 'https://omegaup.com/arena/problem/Ayuda-a-Pedro'},
 {'history': 'Veronica es una persona muy inteligente para el mundo de las '
             'finanzas, por lo que decidio abrir su propio bufet de '
             'contadores, pero el ser buena en finanzas no significa que sea '
             'buena haciendo logos, como todos sabemos hacer logos tiene su '
             'magia y ciencia. Conciente de su falta de conocimiento decidió '
             'consultar e investigar sobre como hacer un buen logo. Después '
             'de largo tiempo de investigacion decidió que lo mejor era un '
             'logo con la forma de una V que es la inicial de su nombre. '
             'Veronica no sabe que palabra quedaría mejor para su logo, pues '
             'tiene varias palabras que podrían describir la profesionalidad '
             'de su bufet de contadores, pero ella sabe que mandar a hacer uno '
             'cada vez que se le ocurra una palabra no es muy rentable. Ayuda '
             'a Veronica a saber que como quedaría su logo con cada palabra '
             'que ella quiera.',
  'input': 'Una sola cadena de tamaño x, ( 2≤x≤200) , la cadena puede '
           'contener espacios.',
  'note': ' ',
  'output': 'Imprimir la cadena que Veronica quiere en su logo, de la '
            'siguiente manera: InputOutput📋VeronicaV Ve er ro on ni ic '
            'caa📋ConfiableC Co on nf fi ia ab bl lee',
  'title': 'B21 El logo de Veronica',
  'topics': ['strings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/B21-El-logo-de-Veronica'},
 {'history': 'BB champivaca es una vaca muy especial ya que aparte de ser una '
             'vaca que da buena leche también tiene algo especial que es que '
             'se puede comunicar con las personas a través de señas '
             'especiales al igual que puede programar en cualquier lenguaje. '
             'Un día se encontraba pastando feliz cuando el granjero Chan le '
             'pidió que le ayudara a hacer un control de la población de '
             'vacas que tenia debido a que esta había estado creciendo '
             'últimamente. Lo que le pidió fue un programa que dado N vacas '
             'detectara cuanto era el máximo de vacas bebes que se '
             'encontraban juntas. A veces a BB champivaca no le gusta '
             'programar por lo que te ha solicitado a ti que le ayudes a '
             'programar.',
  'input': 'N numero de vacas. X edad maxima que considera el granjero Chan '
           'para que sea una vaca bebe. Las siguientes N lineas tienen las '
           'edades de las vacas.',
  'note': ' ',
  'output': 'Una sola línea expresando la mayor cantidad de vacas bebes que '
            'se encuentran juntas.',
  'title': 'BB Champivaca',
  'topics': ['strings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/BB-Champivaca'},
 {'history': 'Baker e Iris son muy buenas amigas. El mes pasado, Iris se mudó '
             'de la ciudad y ahora su única forma de comunicarse es usando '
             'cartas. Como tanto Baker como Iris son gatos, cada una de sus '
             'letras contiene una cadena de N caracteres. Para crear una forma '
             'más segura de comunicación, Iris decidió que cifrará los '
             'mensajes que envía a Baker mediante el siguiente procedimiento: '
             'Primero agregue el carácter al final de la cadena, luego '
             'creará todas las rotaciones de la cadena en orden '
             'lexicográfico. Considere que el carácter es el más bajo '
             'lexicográficamente. La cadena encriptada se realiza tomando el '
             'último carácter de cada rotación. Su tarea es ayudar a Baker '
             'a descifrar la carta que Iris ha enviado.',
  'input': 'La entrada consta de varios casos de prueba. Cada caso de prueba '
           'consiste en una línea con una cadena S que contiene solo '
           'caracteres en minúscula y el símbolo .',
  'note': ' ',
  'output': 'Para cada caso de prueba, imprima en una línea el mensaje '
            'descifrado.',
  'title': 'Baker',
  'topics': ['strings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Baker'},
 {'history': 'Baker e Iris son muy buenas amigas. El mes pasado, Iris se mudó '
             'de la ciudad y ahora su única forma de comunicarse es usando '
             'cartas. Como tanto Baker como Iris son gatos, cada una de sus '
             'letras contiene una cadena de N caracteres. Para crear una forma '
             'más segura de comunicación, Iris decidió que cifrará los '
             'mensajes que envía a Baker mediante el siguiente procedimiento: '
             'Primero agregue el carácter al final de la cadena, luego '
             'creará todas las rotaciones de la cadena en orden '
             'lexicográfico. Considere que el carácter es el más bajo '
             'lexicográficamente. La cadena encriptada se realiza tomando el '
             'último carácter de cada rotación. Su tarea es ayudar a Baker '
             'a descifrar la carta que Iris ha enviado.',
  'input': 'La entrada consta de varios casos de prueba. Cada caso de prueba '
           'consiste en una línea con una cadena S que contiene solo '
           'caracteres en minúscula y el símbolo .',
  'note': ' ',
  'output': 'Para cada caso de prueba, imprima en una línea el mensaje '
            'descifrado.',
  'title': 'Baker$',
  'topics': ['strings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Baker-ANEI'},
 {'history': 'Se te da una cadena de caracteres s con n letras, con caracteres '
             'que pueden ser a o b. Diremos que AB( s) es el número de '
             'ocurrencias de la cadena ab en s como una subcadena. '
             'Análogamente, BA( s) es el número de ocurrencias de la cadena '
             'ba en s como una subcadena. Por ejemplo, si s = aabbbabaa, '
             'entonces AB( s) = AB( aabbbabaa) = 2, ya que en s aparece 2 '
             'veces la cadena ab, en los índices 2 y 6, aabbbabaa. En un '
             'paso, tu puedes escoger cualquier índice i y reemplazar s_ i '
             'con la letra a o b. ¿Cuál es el mínimo número de pasos que '
             'necesitas hacer para lograr que AB( s) = BA( s) ?',
  'input': 'La primera línea de la entrada contiene un solo entero c, que es '
           'el número de casos de prueba. Para cada caso de prueba tendrás '
           'una cadena de caracteres s que contiene solo letras a o b.',
  'note': ' ',
  'output': 'Para cada caso de prueba imprime una cadena resultante s con AB( '
            's) = BA( s) , que se consigue haciendo la menor cantidad de '
            'pasos. Si hay múltiples soluciones, imprime cualquiera de ellas.',
  'title': 'Balance AB',
  'topics': ['strings'],
  'url': 'https://omegaup.com/arena/problem/Balance-AB'},
 {'history': 'Se entiende que una expresión tiene un correcto balanceo de '
             'agrupadores cuando cada uno de los paréntesis, corchetes o '
             'llaves de apertura tiene su paréntesis, corchete o llave de '
             'cierre correspondiente. Por ejemplo, la expresión 3−[ 2( a−b] = '
             '0) no está correctamente balanceada, pues el par más interno '
             'de agrupadores no coincide entre sí ( observa que tampoco '
             'coincide el par más externo) . Considerando lo anterior, si '
             'procedemos a insertar el paréntesis de cierre después de b; '
             'recorriendo el resto de la expresión a la derecha y, '
             'finalmente, eliminando el paréntesis de cierre que sobra al '
             'final, obtenemos la expresión balanceada: 3−[ 2( a−b) ] = 0. '
             'Siguiendo la estrategia descrita en el párrafo anterior, haz un '
             'programa que determine si una expresión está balanceada y '
             'balancéala si no lo está.',
  'input': 'Una cadena E de longitud L que contiene una expresión con '
           'agrupadores.',
  'note': ' ',
  'output': 'La palabra BALANCEADA o la palabra CORREGIDA, seguida de la nueva '
            'expresión balanceada, según sea el caso.',
  'title': 'Balanceando agrupadores',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Balanceando-agrupadores'},
 {'history': 'Un día Baphy decidió iniciar una tienda de pociones en el '
             'reino de " La Perla de Occidente" . Un día llego el sabio '
             'Matute a pedir información acerca de las pociones que vendía '
             'Baphy, y se dio cuenta que le parecían útiles todas. Así que '
             'se dispuso a comprar todas las que pudiera, con el pago de K '
             'monedas que recibió después de haber empujado un castillo con '
             'su mágico sistema. Baphy tiene n pociones y cada una tiene un '
             'precio diferente, una vez que se compra una poción esta se '
             'agota, evitando comprar varias veces la misma poción. Ayuda a '
             'Matute a saber cual es la cantidad máxima de pociones que puede '
             'comprar.',
  'input': 'Dos enteros, n y k que representan la cantidad de pociones de '
           'Baphy y la cantidad de dinero de Matute. Seguido vienen n lineas '
           'cada una con un entero a_ i que indica el precio de la i- esima '
           'poción.',
  'note': ' ',
  'output': 'La cantidad máxima de pociones que puede comprar Matute.',
  'title': 'Baphy y la tienda de pociones',
  'topics': ['sortings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Baphy-y-la-tienda-de-pociones'},
 {'history': ' ',
  'input': 'Un número N de libros en el sistema seguido de N parejas de '
           'líneas: un string L que es el nombre del libro y un string D que '
           'es la disponibilidad del libroAl final recibirás un string Q que '
           'representa el libro cuya disponibilidad se desea conocer.',
  'note': ' ',
  'output': 'Un string S con la disponibilidad del libro',
  'title': 'Bibliotecario eficiente',
  'topics': ['sortings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Bibliotecario-eficiente'},
 {'history': 'El hotel del Universo de los Seres Bellos, conocido como Hotel '
             'USB, te ha asignado la realización de un bot que '
             'automáticamente dé la bienvenida a sus huéspedes. Tu tarea es '
             'leer el nombre del huésped e imprimir el siguiente mensaje " '
             'Hola estimado [ nombre] , bienvenido al Hotel USB. " . Donde '
             'tienes que cambiar [ nombre] por el ingresado por el huésped. '
             'Tenga en cuenta que el huésped puede decidir poner su nombre '
             'completo o parte de su nombre.',
  'input': 'Contiene el nombre establecido por el invitado.',
  'note': ' ',
  'output': '" Hola estimado [ nombre] , bienvenido al Hotel USB. " . Donde '
            'tienes que cambiar [ nombre] por el ingresado por el huésped.',
  'title': 'Bienvenida Hotel USB',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Bienvenida-Hotel-USB'},
 {'history': 'Brayan adquirió un diccionario virtual que cambia '
             'constantemente las palabras que contiene en el por lo que decide '
             'hacer un programa que busque si una dicha pablara esta en el '
             'diccionario o no además de cuantas palabras coinciden en un '
             'patrón dado y un día decide prestarte dicho diccionario pero '
             'como le gusta verte sufrir no te pasa el código por lo que '
             'decides hacer el tuyo agregándole la función de buscar una '
             'palabra por el índice del diccionario.',
  'input': 'Dos enteros n y m que representan la cantidad de palabras del '
           'diccionario que te presto Brayan y la cantidad de instrucciones '
           'que harás en el diccionario con tu programa. bus busca en el '
           'diccionario la cadena s que consta de números , símbolos, y '
           'letras ( mayúsculas y minúsculas) además de que dichas palabras '
           'no superan los 25 caracteres. pre buscar cuantas palabras del '
           'diccionario cumplen que son prefijo de t con la única condición '
           'de que el prefijo y la palabra sean distintos en tamaño de '
           'longitud . ejemplo pre cadena [ cadena , cadenas] solo contara '
           'como prefijo valido cadenas pero cadena no ya que coinciden en '
           'tamañoindi buscar en el diccionario que palabra esta asociada a '
           'ese índice.',
  'note': ' ',
  'output': 'La respuesta de cada instrucción hecha. bus Si la palabra está, '
            'imprimir Si esta es la cadena # i donde i es la posición que '
            'ocupó dicha palabra cuando se te dio el diccionario como '
            'entrada, empezando por 0. Si la palabra no está, existen dos '
            'situaciones. La primera situación ocurre cuando la palabra '
            'buscada no tiene un prefijo en común con ninguna palabra del '
            'diccionario o cuando la palabra es un prefijo de alguna palabra '
            'del diccionario; en este caso debes No esta la cadena = ( . La '
            'segunda situación ocurre cuando la palabra buscada tiene un '
            'prefijo común con cualquier palabra del diccionario; en este '
            'caso debes imprimir el prefijo común más grande. pre el numero '
            'de prefijos que cumplen la condicionindi en caso de que dicho '
            'índice este asociado a una cadena imprimir la cadena en caso '
            'contrario imprimir No esta',
  'title': 'Brayan y su diccionario',
  'topics': ['strings'],
  'url': 'https://omegaup.com/arena/problem/Brayan-y-su-diccionario'},
 {'history': ' ',
  'input': ' ',
  'note': ' ',
  'output': ' ',
  'title': 'Buddy el ordenador.',
  'topics': ['sortings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Buddy-el-ordenador'},
 {'history': 'En un día normal, Buddy el perro iba caminando por la calle, '
             'pensando en lo rico que sería comerse un pollo. Al tratar de '
             'comunicarle a su dueña su necesidad de comer pollo, se dio '
             'cuenta de que no tenía suficientes croquetas para decirle este '
             'mensaje ( sí, Buddy y su dueña se entienden con croquetas) . '
             'Triste pero no derrotado, Buddy se decidió salir de casa en '
             'busca de delicioso pollo frito, rostizado o en salsa verde. Al '
             'cabo de unos días, un misterioso pollo de tamaño n apareció '
             'en su camino, este fue el mejor día de su vida. Como Buddy es '
             'un perro muy compartido, consideró repartirlo entre sus amigos '
             'perrunos, y analizó de qué manera podía repartir el pollo en '
             'partes iguales sin que sobrara ningún pellejito, hueso o carne. '
             'Ayuda a Buddy dándole todas las opciones en las que puede '
             'repartir su pollo.',
  'input': 'La entrada consiste de una sola línea con n: el tamaño del '
           'pollo.',
  'note': ' ',
  'output': 'Deberás imprimir en una sola línea una lista con las opciones '
            'en las que Buddy puede repartir su pollo en partes iguales. Como '
            'Buddy quiere evitar la fatiga, deberás imprimir esta lista en '
            'orden ascendente. Si dicha lista no existe entonces deberás '
            'dejar una línea en blanco.',
  'title': 'Buddy y el pollo.',
  'topics': ['sortings'],
  'url': 'https://omegaup.com/arena/problem/Buddy-y-el-pollo'},
 {'history': 'El equipo de básquetbol de Tavo acaba de ganar la final y han '
             'decidido ir a festejar. Los amigos de la escuela de Tavo ya '
             'saben que es peligroso que Tavo se ponga " happy" , entonces le '
             'pidieron que se reporte con un mensaje, así ellos mediante su '
             'mensaje podrán saber su estado. Cuando Tavo se empieza a poner '
             'mal escribe asteriscos, tu trabajo es hacer un programa que te '
             'imprima qué tan mal está Tavo de acuerdo a los siguientes '
             'criterios. Si en toda la cadena no hay asteriscos o sólo hay '
             'uno, debes imprimir " BIEN" . Si en toda la cadena hay dos '
             'asteriscos significa que está un poquito happy, es decir '
             'comenzó a hablar mucho, entonces imprimirás " HAPPY" . Si en '
             'toda la cadena encuentras tres o más asteriscos quiere decir '
             'que Tavo ya está muy mal y hay que ir a buscarlo, por lo que '
             'hay que imprimir " BUSCAR A TAVO" .',
  'input': 'Una línea que contiene el mensaje de Tavo.',
  'note': ' ',
  'output': 'Una línea con el estado de Tavo de acuerdo al mensaje.',
  'title': '¿Buscando a Tavo?',
  'topics': ['strings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Buscando-a-Tavo'},
 {'history': 'Dado un conjunto de N cadenas, escribe un programa que realice M '
             'búsquedas sobre dicho conjunto.',
  'input': 'Un entero N seguido de las N cadenas del conjunto. Posteriormente, '
           'un entero M seguido de las M cadenas a buscar. Puedes suponer que '
           '0 ≤ N, M ≤ 1, 000, 000 y que todas las cadenas consisten de entre '
           '8 y 16 caracteres ASCII gráficos.',
  'note': ' ',
  'output': 'Para cada una de las M búsquedas, el entero 1 si la cadena '
            'buscada aparece en el conjunto de N cadenas y el entero 0 en otro '
            'caso. NotaTu programa será aceptado por el juez en línea con un '
            'puntaje de 100',
  'title': 'Memorizando cadenas con poca memoria',
  'topics': ['strings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Buscando-cadenas-con-poca-memori'},
 {'history': 'El problema de reconocimiento de cadenas es encontrar todas las '
             'ocurrencias de un patrón dado P = p_ 1p_ 2. . . p_ m en un '
             'texto amplio T = t_ 1t_ 2. . . t_ n, donde ambos, T y P son '
             'secuencias de caracteres a partir de un conjunto finito de '
             'caracteres. Dado las cadenas x, y y z, se dice que x es un '
             'prefijo de xy, un sufijo de yx y un factor de yxz. Hay tres '
             'enfoques de búsqueda de patrones, para este problema se '
             'describe únicamente el método de búsqueda llamado “Búsqueda '
             'de Sufijos”. La búsqueda de sufijos, la cuál tiene una ventana '
             'de búsqueda del tamaño del patrón, es hecha hacia atrás a lo '
             'largo de la ventana de búsqueda considerando el sufijo más '
             'largo de la ventana que es también el sufijo del patrón. El '
             'algoritmo más famoso usando este método es el algoritmo '
             'Horspool, el cual se describe a continuación: Para cada '
             'posición de la ventana de búsqueda, se tiene que comparar su '
             'último carácter ( β en la figura) con el último carácter del '
             'patrón. Si ellos son iguales, se verifica la ventana de '
             'búsqueda hacia atrás contra el patrón hasta que se encuentre '
             'el patrón completo o falle la igualación en un carácter ( σ '
             'en la figura) . Entonces, si hubo una coincidencia o no, se '
             'corre la ventana de acuerdo a la siguiente ocurrencia de la '
             'letra β en el patrón.',
  'input': 'La primera línea contiene el texto T, donde 1 ≤ T ≤ 100 palabras. '
           'La segunda línea contiene el patrón P, donde 1 ≤ P ≤ 25 '
           'caracteres.',
  'note': ' ',
  'output': 'Imprimir la( s) posición( es) donde inicia( n) el/ los patrón( '
            'es) en el texto.',
  'title': 'Búsqueda de Patrones en Cadenas',
  'topics': ['strings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Busqueda-de-Patrones-en-Cadenas'},
 {'history': 'Dado un arreglo de N enteros, escribe un programa que procese '
             'una secuencia de M comandos de los siguientes tipos: EXISTE K: '
             'Determinar si el entero K existe o no en el arreglo. CAMBIA_ '
             'PARES: Sumar 3 a todos los elementos del arreglo que tengan un '
             'valor par.',
  'input': 'El entero N seguido de los N enteros del arreglo. Posteriormente, '
           'el entero M seguido de los M comandos a procesar. Puedes suponer '
           'que 0 ≤ N, M ≤ 10^ 5 y que los elementos del arreglo están en el '
           'rango de 0 a 10^ 9.',
  'note': ' ',
  'output': 'Para cada evento del tipo EXISTE, un 1 si el entero buscado '
            'existe en el arreglo y un 0 en caso contrario. Los valores '
            'impresos deben aparecer separados por espaciado en blanco.',
  'title': 'Búsquedas y modificaciones en un arreglo',
  'topics': ['sortings'],
  'url': 'https://omegaup.com/arena/problem/Busquedas-y-modificaciones-en-un'},
 {'history': 'Dado un arreglo de N enteros, escribe un programa que procese '
             'una secuencia de M comandos de los siguientes tipos: CUENTA K: '
             'Contar la cantidad de veces que aparece el entero K en el '
             'arreglo. SUMA K: Sumar K a todos los elementos del arreglo.',
  'input': 'Dos enteros N y M seguidos de los N enteros del arreglo y '
           'posteriormente de los M comandos a procesar. Puedes suponer que 0 '
           '≤ N, M ≤ 2 × 10^ 5, que los elementos del arreglo están en el '
           'rango de 0 a 10^ 9 y que los valores a sumar están en el rango de '
           '- 10 y + 10.',
  'note': ' ',
  'output': 'Para cada evento del tipo CUENTA, un entero que sea la cantidad '
            'de veces que aparece el entero dado. Los valores impresos deben '
            'aparecer separados por espacios en blanco.',
  'title': 'Búsquedas y modificaciones en un arreglo (reloaded)',
  'topics': ['sortings'],
  'url': 'https://omegaup.com/arena/problem/Busquedas-y-modificaciones-en-v2'},
 {'history': ' ',
  'input': 'La entra consiste en 2 numeros de punto flotante, el primero X '
           'indica el precio de un producto, y el segundo Y indica el monto '
           'que cancela el estudiante por dicho producto',
  'note': ' ',
  'output': 'Una salida Indicando si falta, si hay cambio, o si esta cabal, en '
            'caso de que falte o haya cambio el programa debera determinar el '
            'monto, faltante o sobrante. La salida debe tener 2 decimales '
            'depues del punto flotante. InputOutputDescription📋5. 503Faltan 2. '
            '50 Bs. El precio del producto es 5 Bs. y el monto que cancelo el '
            'estudiante es 3 Bs. lo que quiere decir que faltan 2. 50 Bs. '
            '📋510Hay 5. 00 Bs. de cambioEl precio del producto es 5 Bs. y el '
            'monto que cancelo el estudiante es 10 Bs. lo que quiere decir que '
            'hay 5. 00 Bs. de cambio. 📋55Cabal CaseroEl precio del producto es '
            '5 Bs. y el monto que cancelo el estudiante es 5 Bs. lo que quiere '
            'decir esta Cabal.',
  'title': 'CABAL CASERO',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/CABAL-CASERO'},
 {'history': ' ',
  'input': ' ',
  'note': ' ',
  'output': ' ',
  'title': 'CALENDARIO Gregoriano',
  'topics': ['strings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/CALENDARIO-Gregoriano'},
 {'history': '¡Jack Skellington ha secuestrado a Santa Claus! Pero no hay de '
             'que preocuparse, Santa Claus estaba preparado y la navidad no '
             'corre ningún peligro ( Hace un tiempo un loco peludo, gruñón '
             'y verde también intentó arruinar la navidad) . El duende de '
             'confianza de Santa Claus que labora en el CEP ( Centro '
             'Especializado en Presentes) posee una lista de emergencia con '
             'los nombres de todos los niños del mundo, así como sus '
             'respectivas acciones buenas y malas durante el año. El duende '
             'sabe que las acciones malas son difíciles de reparar, así que '
             'desde hace unas navidades, se declaró que 2 acciones buenas '
             'borran 1 acción mala, sin importar el orden de las acciones. Y '
             'que solo los niños que se hayan comportado bien durante el '
             'año, recibirán su regalo ( No hacer nada no significa portarse '
             'bien) . El duende sabe que la navidad ya está por venir, así '
             'que necesita tu ayuda para poder saber los nombres de los niños '
             'a los cuales se les premiará por haberse comportado bien, así '
             'como a quiénes se les enviará carbón por ser malos. . . . '
             'Mientras él llama a la policía para que ayuden a liberar a '
             'Santa Claus.',
  'input': 'La primera línea contiene un entero N, el número de niños en la '
           'lista. Los siguientes N pares de líneas contienen: 1ra línea : '
           'Un string X, el nombre del niño, y un entero Y, la cantidad de '
           'acciones que realizó durante el año. 2da línea : Y cantidad de '
           'acciones, donde B es una buena acción y M es una mala acción.',
  'note': ' ',
  'output': 'Imprime X, el nombre de cada niño. Si se portó bien, imprime a '
            'su lado REGALO, caso contrario CARBON.',
  'title': 'Jo Jo Jo! Feliz No-hay-vidad!',
  'topics': ['strings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/CEP2017_Feliz_No_hay_vidad'},
 {'history': 'El evaluador buscará en tu código esta función y la llamará '
             'con el número n como parámetro. Tu implementación deberá '
             'llamar las funciones pregunta( int x) ( la cual retorna el '
             'elemento que se encuentra en esa posición) y cambia( int x) ( '
             'la cual intercambia los elementos de la posición x y x+ 1 ) '
             'para ordenar el arreglo de tamaño n y retornar 0 cuando '
             'termineParámetrosn: El tamaño del arreglo. Rutina de EjemploA '
             'continuación se muestran las primeras llamadas de una rutina de '
             'ejemplo. InputOutputDescription📋Función llamadaValor '
             'devueltoDescripción📋inicio( 2) - El tamaño del arreglo es de '
             '2. 📋pregunta( 0) 20El usuario pregunta que número hay en la '
             'posición 0. 📋pregunta( 1) 15El usuario pregunta que número hay '
             'en la posición 1 . 📋cambia( 0) Ahora la posición 0 tiene 15 y '
             'la posición 1 tiene 20. Con lo cual el arreglo queda ordenado. '
             'Restricciones0 ≤ n ≤ 1, 000ConsideracionesSe asegura que el '
             'arreglo nunca tendrá más de 1, 000 elementos. Interactive '
             'templatesOperating SystemLinux/ Mac OS XWindowsLanguageCC+ + '
             'JavaPythonPascalFile to submitBubble. cDownload',
  'input': ' ',
  'note': ' ',
  'output': ' ',
  'title': 'Bubble',
  'topics': ['sortings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/COMI-Bubble'},
 {'history': 'El evaluador buscará en tu código esta función y la llamará '
             'con el arreglo n como parámetro. Deberas implementar la '
             'funciónpregunta( int x) ( la cual debe retornar el número de '
             'veces que se repite x en el arreglo) . Parámetrosn: El tamaño '
             'del arreglo. Rutina de EjemploA continuación se muestran las '
             'primeras llamadas de una rutina de ejemplo. '
             'InputOutputDescription📋Función llamadaValor '
             'devueltoDescripción📋inicio( N[ 1, 2, 3, 3, 2] , 5) - El arreglo '
             'es 1 2 3 3 2📋pregunta( 2) 2Hay 2 , 2 en mi arreglo. 📋pregunta( '
             '3) 2Hay 2, 3 en mi arregloRestricciones1 ≤ M ≤ 1, 0000 ≤ n_ i ≤ '
             '100ConsideracionesSe asegura que el arreglo nunca tendrá más '
             'de 1, 000 elementos. Interactive templatesOperating SystemLinux/ '
             'Mac OS XWindowsLanguageCC+ + JavaPythonPascalFile to '
             'submitBucket. cDownload',
  'input': ' ',
  'note': ' ',
  'output': ' ',
  'title': 'Bucket',
  'topics': ['sortings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/COMI-Bucket'},
 {'history': ' ',
  'input': 'La primer línea de entrada contiene un solo entero, n ( 1≤n≤1000) '
           ', el tamaño de la lista de números. En las siguientes n líneas '
           'hay un entero, xi ( 0≤xi≤1000000) , en cada linea.',
  'note': ' ',
  'output': 'La salida contiene 3 enteros separados por un espacio: el '
            'mínimo, el máximo, y el promedio de la lista de números.',
  'title': 'Revancha',
  'topics': ['sortings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/COMI-Comida-Fria'},
 {'history': 'En la función mezclar tiene los parámetros int izquierda e int '
             'derecha estos te dirán cual subarreglo del arreglo de lista '
             'debes dividir en dos partes mientras sea posible para luego '
             'llamar a la funcion combinar . El evaluador buscará en tu '
             'código esta función y la llamará con los parámetros '
             'izquierda y derecha. Tu implementación deberá ir dividiendo el '
             'arreglo lista entre izquierda y derecha y llamarse '
             'recursivamente sobre cada división. Cuando ya no sea posible '
             'dividir más el arreglo, lista debes llamar a la función '
             'combinar. Parámetrosizquierda: Es un entero que indica la '
             'posición del arreglo donde inicia la sublista que se va a '
             'dividir. derecha: Es un entero que indica la posición del '
             'arreglo donde termina sublista que se va a dividir. La función '
             'combinarcombinar( int izquierda, int mitad, int derecha) C/ C+ + '
             'void combinar( int izquierda, int mitad, int derecha) ; '
             'DescrpciónLa función combinar asume que los valores en el '
             'arreglo lista entre las posiciones izquierda y mitad ya están '
             'ordenados y asume lo mismo para los valores entre las posiciones '
             'mitad+ 1 y derecha. No tiene ningún valor de regreso pero en el '
             'arreglo lista, combina y ordena los valores entre las posiciones '
             'izquierda y derechaRutina de EjemploA continuación se muestran '
             'las primeras llamadas de una rutina de ejemplo. '
             'InputOutputDescription📋Función llamadaValor '
             'devueltoDescripción📋mezclar( 0, 5) - Asumiendo que int lista[ ] '
             '= 1, 5, 3, 4, 6, 2 después de llamar mezclar el arreglo queda '
             'ordenado completamente1, 2, 3, 4, 5, 6📋mezclar( 1, 3) - '
             'Asumiendo que int lista[ ] = 1, 5, 3, 4, 6, 2El arreglo queda '
             'ordenado entre las posiciones 1 y 31, 3, 4, 5, 2, '
             '6Restricciones0 / leq n / leq 10, 000Interactive '
             'templatesOperating SystemLinux/ Mac OS XWindowsLanguageCC+ + '
             'JavaPythonPascalFile to submitMergeSortInteractivo. cDownload',
  'input': ' ',
  'note': ' ',
  'output': ' ',
  'title': 'Merge Sort Interactivo',
  'topics': ['sortings'],
  'url': 'https://omegaup.com/arena/problem/COMI-MergeSort'},
 {'history': ' ',
  'input': 'Una línea con una palabra.',
  'note': ' ',
  'output': 'Una línea con la respuesta: Si o No.',
  'title': 'Palíndromos',
  'topics': ['strings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/COMI-Palindromos'},
 {'history': 'Fer está imprimiendo los diplomas para la última sesión del '
             'Coding Rush, pero hubo un problema. Como tú sabes, esta es la '
             'cuarta vez que realizan el CodingRush y Fer hizo los diplomas '
             'con los asistentes a la tercera sesión. Ella ha pedido tu ayuda '
             'para modificar, en todos los textos que tiene, los nombres '
             'equivocados por los correctos.',
  'input': 'Leerás un número N y luego N líneas que contendrán dos '
           'palabras. La primera palabra es el nombre a modificar y la segunda '
           'palabra es el nombre que debes poner, inmediatamente después '
           'leerás un texto.',
  'note': ' ',
  'output': 'Debes de imprimir el texto, con todos los nombres modificados.',
  'title': 'CR Cambiando diplomas',
  'topics': ['strings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/CR-Cambiando-diplomas'},
 {'history': 'Te dan todos los números entre 1, 2, . . . , n excepto uno. Tu '
             'tarea es encontrar el número faltante.',
  'input': 'La primer línea de entrada contiene un entero n. La segunda '
           'línea contiene n- 1 números. Cada número es distinto y está '
           'entre 1 y n ( inclusivo) .',
  'note': ' ',
  'output': 'Imprimir el número faltante. Restricciones2 ≤ n ≤ 2 · 10^ 5',
  'title': 'El número faltante',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/CSES-Missing-Number'},
 {'history': ' ',
  'input': 'La única línea de entrada contiene un entero n.',
  'note': ' ',
  'output': 'Imprimir una linea que contiene todos los valores de n durante el '
            'algoritmo. Restricciones1 ≤ n ≤ 10^ 6',
  'title': 'Algoritmo Raro',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/CSES-Weird-Algorithm'},
 {'history': 'Meredith tiene un servicio de taxis llamado Ruber , el cual '
             'ofrece viajes a clientes en pequeños pueblos ubicados al oeste '
             'de Pennsylvania . Ella quiere obtener hasta el último centavo '
             'posible de cada cliente que viaje en alguno de sus taxis , por '
             'lo que sus conductores cobran una tarifa fija no por minuto , '
             'por segundo . Dada esta tarifa tan peculiar , es muy importante '
             'saber con exactitud el tiempo que pasa desde que los clientes '
             'entran a un taxi , hasta que llegan a su destino . Meredith ha '
             'tenido problemas tratando de escribir un programa que haga eso , '
             'por lo que te ha pedido ayuda.',
  'input': 'La entrada consiste en dos lineas : la primera contiene la hora de '
           'inicio de un viaje , mientras que la segunda contiene la hora en '
           'la que el viaje termino ( esto para un solo taxi) . Cada hora esta '
           'dada con el siguiente formato : hh: mm: ss , horas , minutos y '
           'segundos , respectivamente . Meredith usa un reloj de 24 horas , '
           'por lo que 0: 0: 0 representa medianoche y 23: 59: 59 representa '
           'un segundo antes de medianoche . Observa que la hora en la que '
           'termina un viaje puede ser menor a la hora de inicio , esto en '
           'caso de que el viaje abarque medianoche ( observa el ultimo '
           'ejemplo) .',
  'note': ' ',
  'output': 'El número de segundos que han pasado desde el comienzo del viaje '
            'hasta el final de este . Ningún viaje tendrá una duración '
            'mayor o igual a 24 horas .',
  'title': 'Cada Segundo Cuenta ',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Cada-Segundo-Cuenta-'},
 {'history': ' ',
  'input': 'El programa debe procesar un único caso de entrada. Cada caso de '
           'entrada consiste en tres líneas, la primera contiene la cadena O '
           'original, la segunda contiene un valor entero que indica la '
           'cantidad de pliegues a realizar, y la tercera contiene una cadena '
           'de caracteres C ( según la descripción) .',
  'note': ' ',
  'output': 'La salida consistirá de una línea indicando " Eureka! " ó " '
            'not Eureka! " , según sean iguales ó no, la cadena generada y '
            'la cadena C. InputOutput📋ab2abbaabbaEureka! '
            '📋Xy4XyyXXyyXXyyXXyxXnot Eureka!',
  'title': 'Cadena Reflex and Duplex',
  'topics': ['strings'],
  'url': 'https://omegaup.com/arena/problem/Cadena-Reflex-and-Duplex'},
 {'history': ' ',
  'input': ' ',
  'note': ' ',
  'output': ' ',
  'title': 'Cadena de máxima frecuencia',
  'topics': ['strings'],
  'url': 'https://omegaup.com/arena/problem/Cadena-de-maxima-frecuencia'},
 {'history': 'Se te dará una palabra de tamaño indefinido, tu deber es '
             'separar los caracteres, ordenarlos ascendentemente según el '
             'alfabeto, e indicar cuantos caracteres identicos a el hay en la '
             'cadena. Si solo está una vez, será 1( Cáracter) , si son 2 '
             'será 2( Cáracter) , y así sucesivamente. NotaObserva el '
             'ejemplo para un mayor entendimiento, si en la cadena hay 2 '
             'carácteres iguales, soló imprime uno, y al lado izquierdo del '
             'carácter, un número indicando cuantas veces se repite. ( '
             'Repeticiones) [ Carácter] = 2h.',
  'input': 'Una cadena de tamaño indefinido. InputOutput📋hola1a1h1l1o',
  'note': ' ',
  'output': ' ',
  'title': 'Cadena perfecta',
  'topics': ['sortings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Cadena-perfecta'},
 {'history': 'Una cadena binaria es una cadena formada únicamente por '
             'dígitos 0 y 1, mientras que una cadena palíndroma es una '
             'cadena que se lee igual al derecho y al revés. Escribe un '
             'programa que imprima todas las cadenas binarias palíndromas de '
             'longitud N.',
  'input': 'Un entero N. Puedes suponer que 0 ≤ N ≤ 35.',
  'note': ' ',
  'output': 'Todas las cadenas binarias palíndromas que existen, una por '
            'línea. Las cadenas deberán imprimirse en orden lexicográfico.',
  'title': 'Cadenas binarias palíndromas',
  'topics': ['strings'],
  'url': 'https://omegaup.com/arena/problem/Cadenas-binarias-palindromas'},
 {'history': 'Una cadena poderosota es aquella que inicia con " heavy" y '
             'termina con " metal" . Tu tarea es dada una cadena s de a lo mas '
             '10^ 6 caracteres de ente [ a - z] y [ A - Z] . Encontrar todas '
             'las cadenas poderosotas que se pueden formar. Ver el ejemplo '
             'para entenderlo mejor.',
  'input': 'Una única cadena no vacía que consta de letras mayúsculas y '
           'minúsculas del alfabeto ingles y su longitud no sobrepasa 10^ 6 '
           'caracteres.',
  'note': ' ',
  'output': 'El número de cadenas poderosotas que se pueden formar.',
  'title': 'Cadenas poderosotas',
  'topics': ['strings'],
  'url': 'https://omegaup.com/arena/problem/Cadenas-poderosotas'},
 {'history': 'Carlitos fue a la tienda con su mama a comprar el mandado, y vio '
             'un estante con N cajas de dulces, entonces Carlitos le pide a su '
             'mama que si le puede comprarle algunas cajas, su mama dijo que '
             'si pero que solo agarrara K cajas y que si agarraba una caja '
             'tenia que agarrar las que estában junto para que no se tarde en '
             'ver cual escoger, Carlitos acepta el trato y va a agarrarlos, '
             'como su mama solo le permitio llevarse K cajas y que solo se '
             'podia llevar cajas que estuvieran juntas, entonces decide '
             'llevarse lo maximo de dulces posible, pero no sabe cuanto es el '
             'maximo de dulces que se puede llevar, entonces decides ayudarlo '
             'para saber la suma total de dulces que Carlitos se puede llevar.',
  'input': 'Recibirás 2 números N y K, que N representa el numero de cajas '
           'que hay en el estante y K las cajas que puede agarrar. En la '
           'siguiente linea seguirán los N_ i números que es el numero de '
           'dulces que contiene cada caja',
  'note': ' ',
  'output': 'Un numero que represente la suma maxima de dulces que puede '
            'llevarse Carlitos.',
  'title': "'Cajas de dulces'",
  'topics': ['sortings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Cajas-de-dulces'},
 {'history': ' ',
  'input': ' ',
  'note': ' ',
  'output': ' ',
  'title': 'Calcula mediana',
  'topics': ['sortings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Calcula-mediana'},
 {'history': 'Escriba un programa que lea dos matrices: una matriz A, de '
             'dimensiones ( Ax, Ay) y otra matriz B, de dimensiones ( Bx, By) '
             '. Después, calcular la suma, resta, traspuesta o '
             'multiplicación de esas matrices, según lo solicite el usuario, '
             'e imprimir la matriz resultante. En caso de la traspuesta, solo '
             'calcular e imprimir la traspuesta de la matriz A, e ignorar la '
             'matriz B. MUY IMPORTANTE: El programa debe estar estructurado en '
             'módulos, no todo en la función principal.',
  'input': 'Una linea con dos enteros separadas por un espacio '
           'correspondientes a las dimensiones Ax y Ay de la matriz A. '
           'Después, Ax lineas con Ay enteros separados por un espacio '
           'correspondientes a cada valor A( x, y) de la matriz A. Después, '
           'una linea con dos enteros separadas por un espacio '
           'correspondientes a las dimensiones Bx y By de la matriz B. '
           'Después, Bx lineas con By enteros separados por un espacio '
           'correspondientes a cada valor B( x, y) de la matriz B. Después se '
           'recibirán n cadenas correspondientes a la operación '
           'correspondiente, que pueden ser " SUMA" , " RESTA" , " '
           'MULTIPLICACION" , " TRASPUESTA" o " SALIR" .',
  'note': ' ',
  'output': 'En cada caso, la matriz resultante de efectuar la operación '
            'correspondiente. De no poder hacerse la operación solicitada, el '
            "programa deberá imprimir el caracter ' X' .",
  'title': 'Calculadora de operaciones matriciales',
  'topics': ['strings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Calculadora-de-operaciones-matri'},
 {'history': 'Escribe un programa que lea una secuencia de N enteros distintos '
             'A = a_ 0, a_ 1, . . . , a_ N- 1 y que determine el valor de la '
             'mediana de A así como su índice.',
  'input': 'Un entero N seguido de los N enteros de A. Puedes suponer que N es '
           'impar y menor que 10^ 5.',
  'note': ' ',
  'output': 'Dos enteros que sean el valor de la mediana de A y su índice.',
  'title': 'Cálculo de la mediana',
  'topics': ['sortings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Calculo-de-la-mediana'},
 {'history': 'Escribe un programa que lea el valor de dos variables enteras A, '
             'B y que ejecute el siguiente proceso: Mientras ambas A y B sean '
             'menores que 4000: Haz cinco veces lo siguiente: Súmale a la '
             'variable A el valor actual de B. Divide a la variable B entre 2. '
             'Mientras B sea menor que 100: Súmale 3 a la variable B. Imprime '
             'los valores finales de las variables A y B.',
  'input': 'Dos enteros A y B. Puedes suponer que 1≤A, B≤5000.',
  'note': ' ',
  'output': 'Dos enteros que sean los valores finales de A y B.',
  'title': 'Cálculos iterativos 2',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Calculos-iterativos-2'},
 {'history': 'El profesor Oswaldo es una persona avanzada de edad por lo tanto '
             'tarda muchos días elaborando su informe de calificaciones de '
             'los grupos a los cuales imparte clase, tú como buen estudiante '
             'de informática le comentaste que puede optimizar mucho tiempo '
             'si genera su reporte de calificaciones de manera automatizada y '
             'ofreciste tu ayuda para realizar un programa. El profesor te '
             'comentó que si hay dos alumnos con calificación más alta '
             'debes de considerar ordenarlos de manera alfabética, pero solo '
             'mostrando a un sólo alumno, esta misma regla se aplica la '
             'persona con menor calificación, de igual manera te recordó que '
             'las calificaciones se ponen en escala del 1 al 100, en donde los '
             'alumnos que obtienen un promedio mayor o igual a 60 son los que '
             'aprueban al curso, en el caso de los alumnos que tienen una '
             'calificación menor que 60 son los que se consideran como '
             'reprobados. Debido a que es muy común tener errores al momento '
             'de tipear deberás validar que la calificación ingresada no sea '
             'mayor a 100 o menor a 0 ya que si no se considera esto el '
             'reporte de calificaciones puede salir incorrecto, en caso de que '
             'se ingrese una calificación deberás de advertir esta '
             'situación no valida mostrando el siguiente mensaje " UPS, '
             'ERROR! , DIGITE DE NUEVO LA CALIFICACION" y posteriormente '
             'deberás solicitar de nuevo la calificación.',
  'input': 'En la primera linea un entero N la cual representa el número de '
           'alumnos a capturar, en las siguientes lineas 2 x N los nombres '
           'junto con el primer apellido y el la calificación de los N '
           'alumnos.',
  'note': ' ',
  'output': 'Promedio total del grupo, en caso de tener decimales solo se '
            'deben de mostrar dos en caso contrario no mostrar ninguno. '
            'Cantidad de alumnos aprobadosCantidad de alumnos reprobadosLa '
            'calificación mayor y el alumno que la obtuvoLa calificación '
            'menor y el alumno que la obtuvo',
  'title': 'Calificaciones de un grupo',
  'topics': ['strings', 'sortings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Calificaciones-de-un-grupo'},
 {'history': 'Dado un arreglo a de longitud n, definimos un subarreglo como un '
             'arreglo formado por tomar elementos consecutivos del arreglo a. '
             'Por ejemplo, ( 1, 2, 3) es un subarreglo del arreglo ( 10, 11, '
             '1, 2, 3, 4, 5) , pero ni ( 1, 3, 2) ni ( 10, 2, 4) lo son. '
             'Denotaremos con a[ l, r] al subarreglo de a formado por los '
             'elementos con posición entre l y r ( en el ejemplo anterior, a[ '
             '3, 5] = ( 1, 2, 3) ) . Además, definimos un " camino" como una '
             'secuencia de arreglos A = { s_ 1, . . . , s_ m} tal que se '
             'cumplan las siguientes condiciones: A_ i es subarreglo de a para '
             'todo i válido. | A_ i| > | A_ i + 1| para todo i válido, es '
             'decir, las longitudes de los elementos de A están en orden '
             'estrictamente decreciente. A_ i + 1 es menor o igual '
             'lexicográficamente que cualquier subcadena de A_ i de longitud '
             '| A_ i + 1| . Sea p_ i la posición en la que empieza A_ i en a '
             '( es decir, a[ p_ i : p_ i + | A_ i| - 1] = A_ i) , entonces p_ '
             'i + | A_ i| ≤ p_ i + 1 para todo i válido. Determina el máximo '
             'tamaño que puede tener un " camino" sobre el arreglo a. '
             'Definición: Sean x y y dos arreglos de la misma longitud, '
             'entonces x es lexicográficamente menor que y si x = ̸ y y si i '
             'es la primera posición en la que difieren, entonces x_ i < y_ '
             'i.',
  'input': 'La primera línea de entrada contiene un entero n, la longitud del '
           'arreglo a. La segunda línea de entrada contiene n enteros a_ i '
           'separados por un espacio, el i- ésimo de los enteros es el i- '
           'ésimo elemento de a.',
  'note': ' ',
  'output': 'Imprime una sola línea, la respuesta al problema.',
  'title': 'Camino de cadena',
  'topics': ['strings'],
  'url': 'https://omegaup.com/arena/problem/Camino-de-cadena'},
 {'history': ' ',
  'input': ' ',
  'note': ' ',
  'output': ' ',
  'title': 'Cancioneros Desordenados',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Cancioneros-Desordenados'},
 {'history': ' ',
  'input': ' ',
  'note': ' ',
  'output': ' ',
  'title': 'Canelito',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Canelito'},
 {'history': 'Elabore un programa para ingresar la cantidad de proyectiles los '
             'cuales deben ser lanzados por un cañón, los proyectiles deben '
             'ser lanzados en secuencia hasta que se terminen empezando en '
             'cinco grados e incrementar 5 grados para lanzar el siguiente '
             'hasta alcanzar 85 grados, luego regresar de 10 en 10 hasta '
             'llegar a 5 grados.',
  'input': 'El programa deberá recibir por la entrada estándar un valor '
           'entero a.',
  'note': ' ',
  'output': 'El programa deberá imprimir un listado con el número de '
            'proyectil y los grados de su lanzamiento.',
  'title': 'Cañon lanza proyectiles',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/CanonUACJ'},
 {'history': 'Jaime acaba de aprender el juego de “cara o escudo” ( o “cara o '
             'corona”) . Este juego consiste en lanzar una moneda hacia el '
             'aire, permitiéndole girar y observar si la moneda aterriza con '
             'la “cara” o el “escudo” boca arriba. El profesor de matemáticas '
             'le explicó a Jaime que jugando el juego de cara o escudo varias '
             'veces, se puede obtener una secuencia de resultados. Por '
             'ejemplo, la lista completa de las secuencias posibles al jugar '
             'cara o escudo 3 veces, es la siguiente: CCC, CCE, CEE, CEC, EEE, '
             'ECE, EEC, ECCFig 1. Todas las secuencias de cara o escudo de '
             'longitud 3. C singifica cara, E escudoEl profesor le explicó '
             'que aunque los resultados de cada juego sean aleatorios, se '
             'pueden obtener todas las posibles permutaciones de una longitud '
             'n, si se juega cara o escudo suficientes veces. Jaime quiere '
             'comprobar si lo que le dijo su profesor es cierto, y para eso, '
             'escribe un programa que identifica si todas las combinaciones '
             'para una secuencia de longitud n existen en un string input. Por '
             'ejemplo, en la siguiente cadena de caracteres, se pueden obtener '
             'todas las posibles secuencias de resultados de longitud 2. '
             'ECECCEEECCEFig 2. Un string the longitud total k = 11, donde se '
             'encuentran todas las posibles secuencias de longitud n = 2. E| '
             'CE| CC| EE| EC| CEFig 3. Divisiones necesarias para obtener '
             'todas las posibles secuencias de longitud n = 2, Empezando '
             'después del primer caracter, p = 1¿Puedes ayudarle a Jaime? '
             'Escribe un programa, que calcule, dado input string S, si es '
             'posible obtener todas las combinaciones de una secuencia de '
             '“cara o escudo” de tamaño n. Se debe dar un ńumero p, que '
             'indica en qué posición se empieza a dividir y contar las '
             'secuencias. Si hay varias soluciones para el problema, da cual '
             'sea tenga el valor de n más alto. Una secuencia no puede ser '
             'repetida en la sucesión.',
  'input': 'La entrada corresponderá al string que simboliza el resultado de '
           'muchos juegos de cara o escudo. La entrada puede tener hasta 11000 '
           'caracteres.',
  'note': ' ',
  'output': 'La salida consistirá de dos números. Primero un número n y p, '
            'en este orden, descritos en el problema. Si hay varios valores de '
            'n o p que satisfagan una solución, escoge la solución que '
            'primero tenga el mayor valor de n, y después el menor valor de '
            'p.',
  'title': 'Cara o escudo',
  'topics': ['strings', 'sortings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Cara-o-Escudo'},
 {'history': 'Cuentas con una cadena S formada por las letras a, b, c y deseas '
             'modificarla para que todas las apariciones de la misma letra '
             'aparezcan juntas ( aunque el orden entre letras distintas no te '
             'importa: da lo mismo si la cadena resultante es aabbcc o ccbbaa '
             'o bbccaa, etcétera) . Para volver más interesante el desafío, '
             'la única operación que podrás aplicar será la de tomar '
             'alguna subcadena de S e invertirla. Por ejemplo, si S = caccb '
             'entonces conviene invertir la subcadena de longitud 3 que '
             'comienza en el segundo caracter ( es decir, la subcadena acc) '
             "para así obtener S' = cccab. Escribe un programa que calcule la "
             'menor cantidad de veces que necesitarás aplicar la operación '
             'descrita para obtener una cadena que te satisfaga.',
  'input': 'Una cadena S formada por las letras a, b, c con al menos una '
           'aparición de cada letra y con una longitud no mayor a 15 '
           'caracteres.',
  'note': ' ',
  'output': 'Un entero que sea la menor cantidad de operaciones que necesitas '
            'aplicar.',
  'title': 'Caracteres iguales mediante inversiones',
  'topics': ['strings'],
  'url': 'https://omegaup.com/arena/problem/Caracteres-iguales-mediante-inve'},
 {'history': ' ',
  'input': ' ',
  'note': ' ',
  'output': ' ',
  'title': 'Card Testing',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Card-Testing'},
 {'history': 'En una carrera participaron 6< = N< = 1000 personas, a cada '
             'participante se le asignó un número único ( id) que lo '
             'identifica y la categoría en la que competirá. Existen dos '
             'categorías: 1 Categoría de 5 kilómetros2 Categoría de 10 '
             'kilométros. ProblemaDados el id, el nombre, el tiempo que '
             'registró ( en minutos) y la categoría en la que participó '
             'cada persona, determina los ganadores del primero, segundo y '
             'tercer lugar en cada categoría. Puedes estar seguro que la '
             'medición del tiempo es tan exacta que nunca habrá empates.',
  'input': 'En la primera línea el entero N. En cada una de las siguientes '
           '4xN líneas, el id, nombre, tiempo y categoría de cada persona.',
  'note': ' ',
  'output': '6 líneas, en las primeras tres los ids y nombres de los '
            'ganadores de los primeros tres lugares en la categoria 1, en las '
            'últimas tres líneas, los ids y nombres de los ganadores de los '
            'primeros tres lugares en la categoría 2. Obviamente los '
            'ganadores de los primeros tres lugares en cada categoría son '
            'aquellos que registren los tres menores tiempos. '
            'EjemplosInputOutputDescription📋8101Martin Gonzalez39. '
            '662103Julian Cardenas50. 052102Felix Garduza120. 562105Arturo '
            'Gonzalez28. 211104Jose Soto32. 41109Pedro Guerra23. 441120Luis '
            'Jimenez22. 11195Mario Torres110. 262120 Luis Jimenez109 Pedro '
            'Guerra105 Arturo Gonzalez101 Martin Gonzalez103 Julian '
            'Cardenas195 Mario TorresLas primeras tres líneas corresponden a '
            'los primeros tres lugares de la categoría 1, las últimas tres '
            'líneas a los ganadores de la categoría 2. '
            'InputOutputDescription📋511Martin Gonzalez19. 9121Julian '
            'Cardenas20. 0133Felix Garduza19. 1142Arturo Gonzalez55. 2154Jose '
            'Soto61. 5133 Felix Garduza11 Martin Gonzalez21 Julian '
            'CardenasTodos los participantes son de categoría 1, por lo tanto '
            'solo se imprimen los tres mejores tiempos. SUBTASKPara el 50',
  'title': 'Carrera estructurada',
  'topics': ['sortings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Carrera-estructurada'},
 {'history': 'La comunidad Shipibo- Conibo está planeando colocar puntos de '
             'acceso a internet a lo largo de un tramo recto de la Carretera '
             'Marginal de la Selva para cubrir a los asentamientos que se '
             'encuentran junto a dicha carretera. Hay N asentamientos en este '
             'tramo recto que va de sur a norte y cada uno está ubicado en '
             'una posición dada por un número entero no negativo de metros, '
             'donde 0 es el punto más al sur de este tramo. Como la carretera '
             'es muy grande, se puede asumir que cada asentamiento es un '
             'punto. Esta comunidad requiere tu ayuda porque tienen un '
             'problema muy complejo. Como primer punto, al comprar un punto de '
             'acceso a internet, se puede elegir el radio de cobertura de '
             'éste. Es decir, si un punto de acceso está en la posicion x y '
             'tiene un radio de cobertura de 8, todos los puntos en el '
             'intervalo cerrado [ x - 8, x + 8] tendrán internet. Es más, '
             'cada punto de acceso a internet puede estar localizado en '
             'cualquier posición y tener un radio de cobertura distinto. Sin '
             'embargo, la complicación es que el costo de cada punto de '
             'acceso depende de su radio de cobertura y está dado por la '
             'siguiente fórmulaF + 2 R_ i × Vdonde F es un costo fijo, R es '
             'el radio de cobertura elegido para ese punto y V es un costo '
             'variable a usar para todos los puntos de acceso. La comunidad '
             'requiere que determines una configuración de costo mínimo de '
             'puntos de acceso de manera que todos los asentamientos tengan '
             'internet. Puedes elegir la cantidad puntos de acceso, sus '
             'posiciones y sus radios de cobertura. No olvides que sólo '
             'tienes que reportar el costo total mínimo.',
  'input': 'La primera línea de la entrada contiene 3 enteros F, V y N. La '
           'segunda línea contiene N enteros en el intervalo [ 0, 100000] , '
           'que son las posiciones de los asentamientos. Estas posiciones no '
           'necesariamente están en orden y pueden haber puntos repetidos.',
  'note': ' ',
  'output': 'Un único entero con el costo total mínimo de una configuración '
            'que pueda cubrir a todos los asentamientos.',
  'title': 'Carretera',
  'topics': ['sortings'],
  'url': 'https://omegaup.com/arena/problem/Carretera2'},
 {'history': 'Continuando con las aventuras de tu vida, fuiste al Cervantino '
             'en Guanajuato. Ahí había, entre otras, cosas muchos pintores '
             'con ideas locachonas de distintas partes del mundo. A uno de '
             'estos pintores le gustaban mucho las hojas cuadriculadas de las '
             'libretas, por lo que en todas sus pinturas había una '
             'cuadricula. El artista decidía pintar puntitos en las esquinas '
             'de los cuadros de la cuadricula. Para hacer las pinturas mas '
             'abstractas y modernas, el pintor necesitaba que se cumpliera '
             'alguna de las siguientes cosas, para cualquier par de puntos en '
             'su pintura: Ambos puntos están en una línea de la cuadricula. '
             'Que al construir un rectángulo con esquinas en el par de puntos '
             'y aristas formadas por las rayitas de la cuadricula, se cumpla '
             'que haya al menos otro punto en la pintura. Como te estas '
             'muriendo de hambre por falta de dinero, has decidido volverte '
             'asistente del pintor. En tu trabajo como asistente el pintor te '
             'da una pintura con puntitos y quiere que tu le pongas algunos '
             'mas para completarla. El pintor piensa que su pintura se veria '
             'mal si tiene mas de 200, 000 puntitos. Utiliza tus habilidades '
             'como programador para sobrevivir.',
  'input': 'En la primera línea N, el número de puntitos que ya están en la '
           'cuadrícula. En las siguientes N líneas, las coordenadas x_ i, y_ '
           'i de los puntos de la cuadricula. Nunca habrán dos puntos '
           'iguales.',
  'note': ' ',
  'output': 'Un numero M, tal que N ≤ M ≤ 200, 000, que represente el número '
            'final de puntitos en la cuadrícula. En las siguientes M líneas, '
            'las coordenadas de los puntitos de la pintura final. Recuerda que '
            'solo le estas añadiendo puntos, por lo que todos los puntos de '
            'la figura original deben estar ahi. Ningún punto en la salida '
            'debe repetirse.',
  'title': 'Cervantino',
  'topics': ['sortings'],
  'url': 'https://omegaup.com/arena/problem/Cervantino'},
 {'history': 'Dado un string y tu tarea es responder si el string es chévere '
             'o no. Un string es chévere si no contiene ninguna vocal.',
  'input': 'Un string cuya longitud no excede los 20 caracteres, todos los '
           'caracteres están en minúsculas.',
  'note': ' ',
  'output': 'Imprima “SI” si el string es chévere, y “NO” si el string no es '
            'chévere.',
  'title': 'Chevere',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Chevere'},
 {'history': 'Dada una lista de números, tu tarea es leerlos de forma '
             'continua e imprimirlos. El ciclo se debe detener cuando el '
             'número leído sea 0.',
  'input': 'Una lista de números que termina en 0, el tamaño de la lista es '
           'menor a 100, y los elementos de la lista están en rango [ 0, 100]',
  'note': ' ',
  'output': 'Debe imprimir los números leídos excepto el 0.',
  'title': 'Ciclo Infinito',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Ciclo-Infinito'},
 {'history': ' ',
  'input': ' ',
  'note': ' ',
  'output': ' ',
  'title': 'Ciclos y Condiciones',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Ciclos-y-Condiciones'},
 {'history': 'Trabajas en la CIA y se te dio el encargo de cifrar las palabras '
             'que te envian dependiendo de la primera letra del mensajesi es '
             'una vocal se muestran primero las vocales, luego las consonantes '
             'y si la primera letra es una consonante primero se muestranlas '
             'consonantes, luego las vocales .',
  'input': 'Un string palabra de N caracteres',
  'note': ' ',
  'output': 'Si es vocal la primera letra primero se muestran las vocales y '
            'despues las consonantes siguiendo el orden de la palabra '
            'originalSi es consonante la primera letra primero se muestran las '
            'consonantes y despues las vocales siguiendo el orden de la '
            'palabra original',
  'title': 'Cifrado Chido1',
  'topics': ['strings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Cifrado-Chido1'},
 {'history': 'Te has inscrito a una escuela de arte y la clase del día de hoy '
             'es circulismo, donde todo lo que se dibuja sobre el lienzo son '
             'círculos. Tu primera tarea de la clase es poder pintar un '
             'lienzo de altura H y base B, solo puedes dibujar círculos, pero '
             'con el detalle de que cada círculo tiene que tener su centro '
             'sobre la línea horizontal que está en medio, el maestro te dio '
             'una descripción de una serie de círculos ( su posición y su '
             'radio) que son los únicos círculos que puedes dibujar, tienes '
             'que pintar cada círculo con un color diferente. Pero la pintura '
             'es muy cara por eso quieres comprar la menor cantidad de colores '
             'y como tienes que cubrir cada rincón de cuadro con al menos un '
             'color, quieres saber cuál es el menor número de colores '
             'necesarios para realizar tu primer obra maestra de circulismo.',
  'input': 'Primer línea: contiene 3 números H, B y N, donde H es la altura '
           'del cuadro, B es la longitud de la base y N es el número de '
           'círculos que tienes permitido dibujar. Siguientes N líneas: cada '
           'línea representa la descripción de cada círculo y contiene dos '
           'números X y R, donde X es la posición del centro del círculo y '
           'R es el radio del círculo.',
  'note': ' ',
  'output': 'Tu programa debe decir cuál es el mínimo número de colores que '
            'se necesita para realizar tu pintura o imprimir - 1 si no es '
            'posible pintar todo el cuadro.',
  'title': 'Circulismo',
  'topics': ['sortings'],
  'url': 'https://omegaup.com/arena/problem/Circulismo'},
 {'history': 'Recientemente el Acertijo y su pandilla volvieron a escapar del '
             'asilo de Karham. ( Otra vez) la ciudad Karelitica es un completo '
             'caos y el único que puede solucionar este desbarajuste es el '
             'mismísimo Bati- man. . . El único problema es que Bati- man se '
             'fue de sabático y tendrás que usar la batiseñal más grande '
             'que la ciudad Karelitica puede pagar. ProblemaDibuja una '
             'batiseñal de Bati- Beepers para que Bati- man ayude a resolver '
             'el caos.',
  'input': 'Un mundo vacio.',
  'note': ' ',
  'output': 'ConsideracionesNo importa la posición final de Karel. Karel '
            'comienza en la posición 1, 1Karel comienza con orientación al '
            'norteLa posicion mas al sur de la batiseñal empieza en la '
            'posición ( 15, 3) Dibuja la batiseñal tal y como se ve en el '
            'ejemploUsa la siguiente imagen para guiarte.',
  'title': 'Ciudad Karelitica',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Ciudad-Karelitica'},
 {'history': 'La situación se ha tornado infernal en Raccoon City, Claire '
             'Redfield se encuentra recorriendo la comisaria RPD, el teniente '
             'Marvin ha muerto a causa de las oleadas zombie, Claire decide '
             'encontrar los conectores electrónicos que le faltan para poder '
             'tomar la tarjeta llave y poder escapar, lo cual no será fácil, '
             'tiene miedo de no encontrar a Leon y a Sherry, resulta que la '
             'munición se encuentra escasa por lo que tendrá que ir con '
             'mucho cuidado si no quiere ser alimento de zombie, por lo que te '
             'pide a ti, el único programador de la RPD con vida que le '
             'ayudes a analizar la situación. Claire pudo percatarse de '
             'enfrentamientos anteriores lo siguiente: Un zombie le toma 5 '
             'balas para eliminarlo, pero si este la muerde ella perderá 10 '
             'puntos de salud. Un perro zombie le toma 10 balas, si la muerde '
             'ella pierde 20 puntos de salud. Un cuervo zombie le toma 7 '
             'balas, si la muerde ella pierde 8 puntos de salud. Un licker le '
             'toma 30 balas, si la muerde ella pierde 50 puntos de salud.',
  'input': 'Un entero N que son el número de eventos que ocurrirán, '
           'posteriormente otro entero M que representa la cantidad de '
           'munición con la que Claire cuenta en ese momento, después un '
           'carácter o que es la operación que se realiza: z indica que se '
           'trata de un enfrentamiento con un Zombie. p indica que se trata de '
           'un enfrentamiento con un Perro. c indica que se trata de un '
           'enfrentamiento con un Cuervo. l indica que se trata de un '
           'enfrentamiento con un Licker. m indica que se trata de una '
           'recolección de munición, en este caso leerás la cantidad T de '
           'munición que se recoge. v indica que se trata de una '
           'restauración de salud parcial, en este caso leerás la cantidad S '
           'de salud que se restaura. Nota: Para cada enfrentamiento Claire '
           'debe contar con mayor salud a la que le pudieran quitar en dicho '
           'enfrentamiento. Caso contrario imprimir: No tienes salud '
           'suficiente Además recuerda que la salud de Claire inicialmente es '
           'de 100, además recuerda que si Claire no cuenta con la munición '
           'necesaria para el enfrentamiento entonces ella pierde los puntos '
           'de salud correspondientes. Considera que N nunca será mayor a 100',
  'note': ' ',
  'output': 'El resultado de cada enfrentamiento, revisa los casos de prueba, '
            'finalmente verificar si la salud es mayor o igual a 80 imprimir '
            'Status: Fine, si la salud se encuentra entre 50 y 80 impimir '
            'Status: Caution, si la salud es menor a 50 imprimir Status: '
            'Danger, posteriormente imprimir la cantidad de balas restantes.',
  'title': 'Claire y las Oleadas de Zombies',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Claire-y-las-Oleadas-de-Zombies'},
 {'history': '6perfecto6 = = 1 + 2 + 312abundante12 < 1 + 2 + 3 + 4 + '
             '68deficiente8 > 1 + 2 + 3 + 4Límites( 0 < n < 1000)',
  'input': 'Número entero ( n) , que indica el número a analizar.',
  'note': ' ',
  'output': 'Cadena de caracteres que indica el tipo de número que es ( n) .',
  'title': 'Clasificando números',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Clasificando-numeros'},
 {'history': ' ',
  'input': ' ',
  'note': ' ',
  'output': ' ',
  'title': 'Clave de usuario',
  'topics': ['strings'],
  'url': 'https://omegaup.com/arena/problem/Clave-de-usuario'},
 {'history': 'Las claves de César son un antiguo método de encriptación que '
             'consiste en sustituir los caracteres de un mensaje siguiendo una '
             'rotación en order alfabético. Esta rotación está '
             'caracterizada por una clave de rotación n que indica cuántos '
             'espacios se van a rotar los caracteres del mensaje. Por ejemplo, '
             'si n= 2, entonces sustituimos la letra " a" por su rotación " '
             'c" , la letra " b" por su rotación " d" , y así sucesivamente '
             'hasta la letra " z" , que es rotada a " b" . Tu objetivo será '
             'escribir un programa que implemente este sistema de '
             'encriptación.',
  'input': 'En la primera línea, un número entero positivo n que representa '
           'la clave de rotación. En la segunda línea, un número entero '
           'positivo m que indica el número de caracteres del mensaje. En la '
           'tercera línea, un mensaje ( secuencia de caracteres sin espacios) '
           'de longitud m que debe ser encriptado.',
  'note': 'Los caracteres del mensaje pertenecen al alfabeto en inglés en '
          'minúsculas. El alfabeto en inglés consiste del alfabeto en '
          'español sin la letra " ñ" . Por lo tanto, el alfabeto en inglés '
          'tiene 26 letras.',
  'output': 'El mensaje encriptado de acuerdo a la rotación dada.',
  'title': 'Claves de César',
  'topics': ['strings'],
  'url': 'https://omegaup.com/arena/problem/Claves-de-Cesar'},
 {'history': 'El Club de programación de la EETP 644 necesita obtener el '
             'promedio de los problemas resueltos por sus integrantes en '
             'OmegaUp y te encargaron ese trabajo. Cómo desconoces la '
             'cantidad de integrantes vas a utilizar una estructura while que '
             'finalizará con un EOF',
  'input': 'Se van a ingresar la cantidad de problemas resueltos por cada uno '
           'de los integrantes hasta el fin de archivo.',
  'note': ' ',
  'output': 'La salida será el promedio de los problemas resueltos, sin '
            'decimales.',
  'title': 'Club Programadores',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Club-Programadores'},
 {'history': 'En este problema no te vamos a aventar un choro mareador. Dada '
             'una cadena y un patrón. La tarea es encontrar el número de '
             'veces que se repite el patrón en la cadena.',
  'input': 'La entrada consta de dos lineas, la primera línea contiene una '
           'cadena de longitud n y la segunda un patrón de longitud m. Ambas '
           'cadenas consisten de caracteres a - z.',
  'note': ' ',
  'output': 'Un entero, que es el número de ocurrencias del patrón en la '
            'cadena.',
  'title': 'Coincidencia de cadenas',
  'topics': ['strings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Coincidencia-de-cadenas'},
 {'history': 'Sea S una cadena y R su reverso, nos interesa contar cuántas '
             'coincidencias hay entre S y R. Por ejemplo, si S = " atolito" '
             'entonces R = " otilota" y hay tres coincidencias ( la primera t, '
             'la l y la segunda t) . Una coincidencia es válida sin importar '
             'si un caracter aparece en mayúscula y el otro en minúscula. '
             'Por ejemplo, si S = " ATOlito" entonces R = " otilOTA" y siguen '
             'habiendo tres coincidencias.',
  'input': 'Una cadena S. Puedes suponer que la longitud máxima de S es de '
           '1000 caracteres y que únicamente aparecen letras.',
  'note': ' ',
  'output': 'Un entero que sea la cantidad de coincidencias entre S y R.',
  'title': 'Coincidencias de una cadena con su reverso',
  'topics': ['strings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Coincidencias-de-una-cadena-con-'},
 {'history': 'Flipino está organizando su colección infinita de ramas ahora '
             'que tiene tiempo de sobra. Actualmente él las tiene organizadas '
             'de menor a mayor, comenzando por una ramita de 1 cm de largo, '
             'seguida por otra de 2cm, y así hasta el infinito. Para cada '
             'número natural existe una rama con longitud correspondiente. '
             'Filipino decidió reorganizar sus ramitas por su paridad. Como '
             'su colección es infinita, solo quiere seleccionar un rango, '
             'Escogiendo dos enteros positivos y tomando todas las ramas cuya '
             'longitud se encuentren entre esos dos números. Finalmente, para '
             'nombrar esta subcolección, tomará la longitud total de las '
             'ramas que la conforman. Filipino no tiene ganas de encontrar la '
             'longitud total, así que tu deberás ayudarlo.',
  'input': 'En la primer línea un entero 1 ≤ t ≤ 100 el número de casos de '
           'prueba. Por cada caso de prueba hay una línea con 2 enteros 1 ≤ A '
           '≤ B',
  'note': ' ',
  'output': 'Por cada caso de prueba, en líneas distintas, la longitud total '
            'de las ramas que cuya longitud sea impar y sea mayor o igual que '
            'A y menor o igual que B',
  'title': 'Colección de Ramitas',
  'topics': ['strings'],
  'url': 'https://omegaup.com/arena/problem/Coleccion-de-Ramitas'},
 {'history': 'Dados dos arreglos A, B ambos de tamaño n tu tarea es obtener '
             'una serie de arreglos de tamaño 2n usando los elementos de los '
             'arreglos antes mencionados. Teniendo en cuenta que los elementos '
             'de A son a0, a1, . . . , an−1 y los elementos de B son b0, b1, . '
             '. . , bn−1, los arreglos deseados se obtienen de la siguiente '
             'manera. El arreglo C se obtiene intercalando los arreglos A y B '
             'de la siguiente forma: a0, b0, a1, b1, . . . , an−1, bn−1. El '
             'arreglo D se obtiene de forma similar al arreglo C solo que al '
             'revés: an−1, bn−1, an−2, bn−2, . . . , a0, b0.',
  'input': 'Un entero 4≤n≤100, el tamaño de los arreglos. Después en otra '
           'linea se brindan n enteros correspondientes al arreglo A. '
           'Finalmente en otra linea se brindan n enteros correspondientes al '
           'arreglo B.',
  'note': ' ',
  'output': 'Dos lineas, la primera contiene el arreglo C, la segunda el '
            'arreglo D.',
  'title': 'Combinando arreglos',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Combinando-arreglos'},
 {'history': 'Tienes una base de datos de personas y has estado borrando '
             'muchos registros últimamente. Sin embargo, cuando borras un '
             'registro la implementación de tu base de datos sólo lo marca '
             'como borrado y el tamaño del archivo jamás ha disminuido. Para '
             'recuperar ese espacio, deseas reconstruir el archivo sin incluir '
             'los registros borrados. El archivo consta de un entero N seguido '
             'de dos secuencias ( la primera de enteros y la segunda de '
             'cadenas) . El entero N denota la cantidad de registros del '
             'archivo, incluyendo los registros borrados. La primera secuencia '
             'contiene, para cada uno de los N registros, tres enteros I_ '
             'nombre, I_ apellido, B donde B es 1 si el registro ha sido '
             'borrado y 0 en otro caso, mientras que I_ nombre, I_ apellido '
             'son índices sobre la segunda secuencia ( numerados desde cero) '
             '. La segunda secuencia contiene 2N cadenas que denotan los '
             'nombres o apellidos de las personas cuyos registros hacen '
             'referencia a ellas. Se sabe que cada cadena es referida '
             'exactamente una vez. Escribe un programa que lea los datos del '
             'archivo actual y genere un archivo que no contenga los registros '
             'borrados ni las cadenas referidas por los mismos.',
  'input': 'Un entero N seguido de la información de los N registros y '
           'posteriormente las 2N cadenas. Puedes suponer que 0 ≤ N ≤ 10^ 5, '
           'que todas las cadenas son alfabéticas de entre 1 y 16 caracteres '
           'y que no existen duplicados.',
  'note': ' ',
  'output': 'Un entero M seguido de la información de los M registros no '
            'borrados y posteriormente las 2M cadenas que satisfacen la '
            'relación dada en la entrada. La compactación debe ser estable, '
            'es decir, si el registro r_ 1 aparece antes que el registro r_ 2 '
            'en la entrada y ninguno de los dos fue borrado, entonces r_ 1 '
            'debe aparecer antes que r_ 2 en la salida. Lo mismo debe '
            'cumplirse para las cadenas.',
  'title': 'Compactación de archivos',
  'topics': ['sortings'],
  'url': 'https://omegaup.com/arena/problem/Compactacion-de-archivos'},
 {'history': ' ',
  'input': ' ',
  'note': ' ',
  'output': ' ',
  'title': 'Competencia de Iguanas',
  'topics': [],
  'url': 'https://omegaup.com/arena/problem/Competencia-de-Iguanas'},
 {'history': ' ',
  'input': ' ',
  'note': ' ',
  'output': ' ',
  'title': 'Comprando agua',
  'topics': ['sortings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Comprando-agua'},
 {'history': 'Dada una cadena S, diremos que una subcadena de S es homogénea '
             'si no es vacía y todos sus caracteres son iguales. Cuando no es '
             'posible agrandar una subcadena homogénea por ninguno de sus dos '
             'extremos, diremos que la subcadena es homogénea maximal. Por '
             'ejemplo, la secuencia de subcadenas homogéneas maximales de '
             'aabccccbaaa es ( aa, b, cccc, b, aaa) . Cuando la cadena S '
             'consta únicamente de caracteres alfabéticos, es posible '
             'comprimirla usando el algoritmo que se describe a continuación. '
             'Sea x_ i la i- ésima subcadena homogénea maximal de S: Si la '
             'longitud de x_ i es N = 1, entonces la representación '
             'comprimida de x_ i es x_ i misma. Si la longitud de x_ i es N ≥ '
             '2, entonces la representación comprimida de x_ i consta de los '
             'dígitos en decimal y sin ceros a la izquierda del entero N, '
             'seguidos del caracter que se repite en x_ i. La representación '
             'comprimida de S es la secuencia de las representaciones '
             'comprimidas de sus subcadenas homogéneas maximales. Escribe un '
             'programa que sea capaz de comprimir y descomprimir cadenas '
             'según la especificación anterior.',
  'input': 'La entrada inicia con el caracter P y un espacio. El resto de la '
           'entrada contiene una secuencia de caracteres ASCII, la cual debe '
           "procesarse hasta el fin de archivo. Si P = ' C' entonces la "
           "secuencia denota una cadena que se desea comprimir. Si P = ' D' "
           'entonces la secuencia denota una cadena comprimida la cual se '
           'desea descomprimir. Puedes suponer que las cadenas son válidas '
           'según la específicación y que ninguna cadena ( tanto la de la '
           'entrada como la de la salida) supera los 10^ 4 caracteres.',
  'note': ' ',
  'output': "Si P = ' C' entonces deberá imprimirse la representación "
            "comprimida de la cadena dada en la entrada. Si P = ' D' entonces "
            'deberá imprimirse la cadena descrita por la representación '
            'comprimida dada en la entrada.',
  'title': 'Compresión de cadenas (fácil)',
  'topics': ['strings'],
  'url': 'https://omegaup.com/arena/problem/Compresion-de-cadenas-facil'},
 {'history': 'Un día mientras estabas en la biblioteca, te encontraste con un '
             'libroantiguo que habla sobre algoritmos que se utilizaban '
             'comúnmente ensistemas muy viejos. Mientras leías dicho libro '
             'te topaste con unalgoritmo peculiar que realizaba compresiones '
             'sobre archivos binarios. Suponiendo que se tiene una secuencia '
             'binaria: Al encontrar un bit encendido ( un ) , se cuantifica el '
             'total de dichos bits consecutivos. Una vez que se termine de '
             'contar seescribe el numero obtenido, al lado de una letra . Al '
             'encontrar un bit apagado ( un ) , se cuantifica el total de '
             'dichos bits consecutivos. Una vez que se termine de contar '
             'seescribe el numero obtenido, al lado de una letra . Después de '
             'analizarlo un rato notaste que dicho algoritmo '
             'resultaineficiente en algunos casos. Así como pueden haber '
             'compresionesmagnificas ( eficientes) , también pueden existir '
             'ocasiones donde eltamaño de la secuencia aumente en lugar de '
             'disminuir ( a esto se ledenomina " compresión ineficiente" ) . '
             'Nota: Si al realizar una compresión la secuencia resultante se '
             'queda del mismo tamaño, esta se considera Ineficiente. Como '
             'estas interesado en este tipo de temas, decidiste '
             'implementardicho algoritmo para determinar si la compresión de '
             'alguna secuenciasera eficiente o no. ProblemaA partir de una '
             'secuencia dada, determina si aplicar dicho algoritmoresulta '
             'eficiente o no.',
  'input': 'En la primera linea, un entero n ( 1 ⩽ n ⩽ 10^ 5) - la cantidad de '
           'dígitos en la secuencia. En la segunda linea, n números '
           'consecutivos - los digitos queconforman la secuencia binaria. Se '
           'garantiza que estos solo puedentener el valor de un o un',
  'note': ' ',
  'output': 'En la primera linea, una secuencia de caracteres y dígitos - '
            'elresultado de aplicar dicho sistema de compresión a la '
            'secuenciaoriginal. En la segunda linea, una secuencia de '
            'caracteres - el estado de lacompresión. Dependiendo cual sea el '
            'caso, puede serEficiente o Ineficiente.',
  'title': 'Compresiones Ineficientes',
  'topics': ['strings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Compresiones-Ineficientes'},
 {'history': 'Realiza un programa que lea dos números e imprima su '
             'concatenación.',
  'input': 'Dos enteros a y b, cada uno en su propia línea.',
  'note': ' ',
  'output': 'La concatenación de ambos números.',
  'title': 'Concatenacion de dos números',
  'topics': ['strings'],
  'url': 'https://omegaup.com/arena/problem/Concatenacion-de-dos-numeros'},
 {'history': 'En una tabla de circuito impreso, se colocan cables conductores '
             'sobre una tabla no conductora. Como los cables conductores no '
             'pueden cruzarse sin crear un corto circuito, las tablas se '
             'dividen en varias capas, y se separan entre ellas por material '
             'no conductivo. Sin embargo, entre más capas tengan las tablas, '
             'su precio se incrementa. Como quieres gastar lo menos posible, '
             'debes conectar los cables conductores requeridos, en cada una de '
             'las capas, de forma que se minimice el número de capas usadas. '
             'En este caso, se observan las tablas donde cada cable conductor, '
             'está conectando dos puertos localizados en orillas opuestas de '
             'la tabla, buscando minimizar el costo de la misma. Supongamos '
             'que tenemos una tabla como muestra la figura de abajo a la '
             'izquierda. Si requirieras conectar un cable conductor entre A y '
             'B y otro entre C y D, puede hacerse en una sola capa como se '
             'muestra en la figura de en medio. Sin embargo conectar cables '
             'entre A y C, y entre B y D no puede hacerse en una sola capa, '
             'como se muestra en la figura de la derecha. ProblemaEscribe un '
             'programa con el que teniendo la ubicación de las N terminales '
             'para cables conductores, en una tabla con tamaño de W×H, '
             'determine el mínimo número de capas necesarias para realizar '
             'las conexiones. Debes asumir que la longitud de los cables '
             'conductores es pequeña, comparada a las distancias entre los '
             'puertos. Esto significa que entre dos cables conductores, '
             'siempre hay espacio suficiente para un tercero.',
  'input': 'La primera línea contiene N ( 1< = N< = 105) el número de cables '
           'conductores. Cada una de las siguientes N líneas contiene dos '
           'enteros Xi y Yi ( 0< = Xi, Yi< = 106) separados por un espacio, '
           'significando que el i- ésimo cable conductor debe conectar los '
           'puntos ( Xi, 0) y ( Yi, H) . Debes asumir que todos los 2N '
           'terminales dados en la entrada son distintos.',
  'note': ' ',
  'output': 'Un único entero que representa el número mínimo de capas '
            'necesarias para acomodar todos los cables conductores.',
  'title': 'Conectando Circuitos',
  'topics': ['sortings'],
  'url': 'https://omegaup.com/arena/problem/Conectando-Circuitos'},
 {'history': ' ',
  'input': ' ',
  'note': ' ',
  'output': ' ',
  'title': 'Consonantes y vocales',
  'topics': ['strings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Consonantes-y-vocales'},
 {'history': 'Hace mucho tiempo Nikola Tesla se encontraba analizando '
             'laspropiedades de los numeros 3, 6 y 9. De entre todas '
             'ellasencontro una que le permitia saber si un numero '
             'extremadamentegrande era divisible por 9 de manera relativamente '
             'rapida ( Puede que alguien mas ya hubiese descubierto dicha '
             'propiedad antes, pero eseno es el punto de este problema) . '
             'Ahora tu como programador quieresseguir los pasos de Tesla y '
             'diseñar un programa que te permita hacerlo enunciado arriba. '
             'ProblemaTienes la simple y sencilla labor de indicar si un '
             'numero nes divisible por 9, de ser así deberás mostrar la '
             'fraseDivisibilidad! , en caso contrario deberás mostrar No es '
             'multiplo. Decimos que un numero A es divisible por B, si A mod '
             'B= 0. ú“Si supieras la magnificencia de los números3, 6, y 9 '
             'tendrias la llave del universo. " − Nikola Tesla. ( ?',
  'input': 'En la primera y única linea solo habra un entero n ( 1≤n≤1038) − '
           'el número cuyo valor se quiere evaluar. Hint: En C+ + los limites '
           'de n no " entran" siquiera en un unsigned long long .',
  'note': ' ',
  'output': 'La frase correspondiente dependiendo de el valor que posea n. '
            'Ejemplos: InputOutput📋123381Divisibilidad! 📋277777788888899No es '
            'multiplo. 📋1184No es multiplo. Consideraciones : Cada caracter en '
            'la salida cuenta ( Eso incluye el . y el ! ) . El evaluador '
            'distingue entre mayúsculas y minúsculas.',
  'title': 'Tesla y las Constantes Enigmáticas',
  'topics': ['strings'],
  'url': 'https://omegaup.com/arena/problem/ConstantesEnigmaticas'},
 {'history': 'Considere un conjunto de N registros que representan la '
             'información de unusuario de acuerdo con los siguientes campos: '
             '📋* Un número de identificación compuesto por 8 digitos. * Un '
             'promedio compuesto por un número real no negativo. * Un entero '
             'que representa la edad del usuario. Ordene este conjunto de '
             'datos con base en la edad del usuario y posteriormenteimprima la '
             'información del K- ésimo usuario de acuerdo al valor indicado '
             'de K.',
  'input': 'Un entero N seguido de N secuencias de tres valores que contienen '
           'laidentificación, el promedio y la edad de un usuario. '
           'Posteriormente un entero Kque representa el índice en el conjunto '
           'ordenado, con base en la edad, del usuariocuya información se '
           'desea imprimir. Puede asumir que 0 ≤ N ≤ 100 y que el promedio de '
           'cada usuario es unreal entre 0 y 10.',
  'note': ' ',
  'output': 'La información del K- ésimo usuario en el conjunto ordenado o '
            'la cadena ERRORsi K es un índice inválido. Es necesario '
            'imprimir el promedio del usuario con sólodos posiciones '
            'decimales.',
  'title': 'Consultando registros',
  'topics': ['sortings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Consultando-Registros'},
 {'history': 'Escribe un programa que lea una secuencia de líneas y calcule '
             'cuántos enteros hay en cada línea además de su suma.',
  'input': 'Una secuencia de líneas, donde cada línea contiene cero o más '
           'enteros. Puedes suponer que cada línea consta de a lo mucho 1000 '
           'caracteres y que únicamente contiene enteros y espacios en blanco '
           '( terminando en un salto de línea) .',
  'note': ' ',
  'output': 'Para cada línea, el número de enteros en la línea y la suma de '
            'los mismos.',
  'title': 'Contando los enteros de la línea',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Contando-los-enteros-de-la-linea'},
 {'history': 'Everybody sit down in a circle. Ok. Listen to me carefully. " '
             'Woooooo, you scwewy wabbit! " Now, could someone tell me how '
             'many words I just said?',
  'input': 'Input to your program will consist of a series of lines, each line '
           'containing multiple words ( at least one) . A word is defined as a '
           'consecutive sequence of letters ( upper and/ or lower case) .',
  'note': ' ',
  'output': 'Your program should output a word count for each line of input. '
            'Each word count should be printedon a separate line.',
  'title': 'Contando palabras',
  'topics': ['strings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Contando-palabras'},
 {'history': 'La tarea a realizar es sencilla de comprender, dado un número N '
             'donde cada N_ i son 2 coordenadas en una matriz que representan '
             'las esquinas opuestas de un rectángulo, cada coordenada esta '
             'representada de la siguiente manera ( f, c) , fila y columna '
             'respectivamente. Se deberá responder M número de peticiones, '
             'cada petición consta de un punto en la matriz, y deberás '
             'imprimir la cantidad de rectángulos que se intersecan en ese '
             'punto.',
  'input': 'Un número N seguido de N_ i coordenadas ( f_ 1, c_ 1) , ( f_ 2, '
           'c_ 2) y un número M seguido de M_ i coordenadas de puntos.',
  'note': ' ',
  'output': 'Imprimir la cantidad de rectángulos que se intersecan en cada '
            'punto separados por un salto de linea.',
  'title': 'Contando rectangulos',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Contando-rectangulos'},
 {'history': 'Codificar un programa que lea una cadena de caracteres e informa '
             'la cantidad de ocurrencias de cada vocal en la cadena.',
  'input': 'Se ingresa una unica linea que contiene una cadena de hasta 500 '
           'caracteres. Los caracteres pueden ser digitos y letras, mayusculas '
           'y minusculas.',
  'note': ' ',
  'output': 'Mostrar en una unica linea 5 numeros enteros separados por un '
            'espacio. El primero es la cantidad de veces que aparece la vocal '
            "' a' ( en mayusculas o minusculas) . El segundo representa la "
            "cantidad de veces de la vocal ' e' . Y los tres restantes, la ' "
            "i' , ' o' y ' u' ,",
  'title': 'Contando vocales',
  'topics': ['strings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Contando-vocales'},
 {'history': ' ',
  'input': ' ',
  'note': ' ',
  'output': ' ',
  'title': 'Contar Palindromos',
  'topics': ['strings'],
  'url': 'https://omegaup.com/arena/problem/Contar-Palindromos'},
 {'history': 'Dado un número romano, deberás obtener el equivalente en '
             'arábigo.',
  'input': 'Recibirás un número romano, el equivalente en arábigo de este '
           'número estará en el rango de 1 a 3999. Los números romanos no '
           'contienen espacios y están escritos exclusivamente con letras '
           'mayúsculas.',
  'note': ' ',
  'output': 'Mostrar el número arábigo equivalente.',
  'title': 'Convertir de Romanos a Arábigos',
  'topics': ['strings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Convertir-de-Romanos-a-Arabigos'},
 {'history': 'Deberás realizar un algoritmo que imprima un corazón de altura '
             '12, el tamaño del lado izquierdo será de 6 y del lado derecho '
             'de 5',
  'input': 'En la primera línea recibirás una letra cualquiera.',
  'note': ' ',
  'output': 'Mostrar el corazón con la letra que se tecleó.',
  'title': 'Corazón de un enamorado',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Corazon-de-un-enamorado'},
 {'history': 'Felipe estaba apunto de lograr la maxima compañia electronica, '
             'pero no pudo hacer que su empresa sea eficiente y por eso '
             'fracaso. Por tanto, felipe se rindio con las empresas '
             'tecnologicas y empezo su servicio de mensajería. El servicio se '
             'llevaba acabo en un lugar muy especial, todo el lugar era una '
             'linea recta, por tanto cada locación se podía ver como un '
             'punto; es decir, uno podía tener su casa en punto - 5 o 10. En '
             'cada cierto punto había un punto de mensajeria que basicamente '
             'es donde entran y salen los mesajes. Felipe hizo una pagina web '
             'para presentar su servicio e hizo un lugar especial que era para '
             'ayuda a los clientes. Los mensajes que más llegaban allí eran '
             'las preguntas de " si el centro de mensajería más cercano que '
             'tengo es el que esta en a_ i ¿Cuanto es lo minimo y maximo que '
             'puedo pagar? " . El costo de envíar un mensaje es igual a la '
             'cantidad de casas o distancia que hay entre un centro de '
             'mensajería a otro. Es decir, si yo quiero enviar del lugar 5 al '
             '20 el costo sería de | 5- 20| = 15. Además las personas son '
             'inteligentes y saben que no tiene sentido enviar un mensaje al '
             'lugar mismo, es decir, no se envían mensajes desde la '
             'ubicación 5 a la ubicación 5. Como Felipe esta muy ocupado '
             'haciendo otras cosas te pidio ayuda para responder estas '
             'preguntas, tu como buen programador flojo decidiste precalcular '
             'todas las respuestas. Así que agarraste la lista de todas las '
             'ubicaciones de los puntos de mensajeria y decidiste calcular la '
             'respuesta de el costo minimo y maximo que se puede generar desde '
             'cada punto de mensajeria. ProblemaDada la lista de los n puntos '
             'de mensajeria a_ i. En donde el número dado es la ubicación de '
             'los puntos, decir para cada número la respuesta de cual es el '
             'costo minimo que se puede hacer y el maximo. Se debe responder '
             'en el orden que son dados.',
  'input': 'Un número n que indica el número de puntos. Seguido, n números '
           'a_ i que son las ubicaciones de los puntos de mensajería.',
  'note': ' ',
  'output': 'n líneas con pares de números que indica el precio minimo y '
            'maximo que puede hacer.',
  'title': 'Costo de mensajeria',
  'topics': ['sortings'],
  'url': 'https://omegaup.com/arena/problem/Costo-de-mensajeria'},
 {'history': 'Estas cansado de utilizar el Quicksort por que tienes muy mala '
             'suerte y siempre colocas el pivote en un mal lugar. Es por ello '
             'que decidiste buscar otros algoritmos de ordenamiento y '
             'encontraste el Counting Sort. Si no sabes como implementarlo en '
             'la solución del problema viene una explicación.',
  'input': 'En la primer linea recibirás la variable n que es el numero de '
           'elementos en el arreglo( 1< = n< = 100000) . La siguiente linea '
           'contiene el arreglo desordenado a con n enteros ( 1< = a_ i< = '
           '100000)',
  'note': ' ',
  'output': 'Debes implementar el algoritmo del Counting Sort e imprimir: en '
            'la primer linea el arreglo ordenado b. En la siguiente línea, '
            'los valores de las posiciones b_ i del arreglo donde hiciste el '
            'counting .',
  'title': 'Counting Sort',
  'topics': ['sortings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Counting-Sort'},
 {'history': 'Jesús y Cristian están jugando CraftMine. Ellos quieren '
             'construir una cerca dentro del juego. Para lo cual necesitan tu '
             'ayuda. La cerca será en línea recta y tendrá N columnas '
             'separadas por una distancia igual a K. La primera columna se '
             'encontrará en la posición 0. Debes ayudarlos diciéndoles las '
             'posiciones donde quedarán las columnas de la cerca.',
  'input': 'Dos enteros N y K. La cantidad de columnas de la cerca y la '
           'distancia entre columnas respectivamente.',
  'note': ' ',
  'output': 'Una linea con N enteros separados por espacios: La secuencia de '
            'posiciones donde quedarán las columnas.',
  'title': 'CraftMine',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/CraftMine'},
 {'history': 'En tu nuevo trabajo en la NASA, se te pidió realizar un '
             'programa que codificara en binario ( solo 0s y 1s) los mensajes '
             'entre laestación terrestre y los astronautas en el espacio. A '
             'pesar de haberle dedicado casi toda la tarde a la importante '
             'tarea, tussuperiores te reportan que cuando ejecutaron el '
             'programa, éste recibía de vez en cuando mensajes no binarios. '
             'Recordando los mejores años de tu vida en la universidad, se te '
             'ocurre " parchar" temporalmente el programa para que '
             'parezcafuncionar correctamente por unos días ( cuando tu equipo '
             'de lectura de comprensión competitiva por fin despegue, ya no '
             'tendrásque preocuparte por estas nimiedades) . Para resolver el '
             'problema rápidamente, se te ha ocurrido el " Brillante Filtro '
             'DobleEstrella" , que dejará pasar los mensajes binarios sin '
             'modificarlos, mientras que aquellos no binarios serán '
             "reemplazados porla cadena ' 10101' .",
  'input': '1 linea con el mensaje al cual se le debe aplicar el " brillante '
           'filtro doble estrella" .',
  'note': ' ',
  'output': '1 línea con el resultado de aplicar el filtro.',
  'title': 'Creo que ya funciona',
  'topics': ['strings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Creo-que-ya-funciona'},
 {'history': 'En este problema, tu misión es construir cuadrados vacíos.',
  'input': 'Un entero L que representa la medida de un lado del cuadrado.',
  'note': ' ',
  'output': 'El contorno de un cuadrado de lado L, dibujado con asteriscos.',
  'title': 'Cuadrados Vacíos',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Cuadrados-Vacios'},
 {'history': ' ',
  'input': 'En la primera línea el entero N. en las siguientes 2xN líneas, '
           'los nombres y promedios de los N alumnos.',
  'note': ' ',
  'output': 'K líneas con los nombres de los alumnos que alcanzaron cuadro de '
            'honor, después de ordenar la lista alfabéticamente.',
  'title': 'Cuadro de Honor',
  'topics': ['sortings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Cuadro-de-Honor'},
 {'history': 'Héctor, el programador tímido, se ha armado de valor y por fin '
             'ha decidido declararle su amor a Erick, pero Andrea, la novia de '
             'Erick, no puede enterarse de este amor prohibido. Sabiendo esto '
             'Héctor diseñó una manera de codificar su mensaje. Consiste en '
             'darle una clave seguido de un mensaje, para resolver este '
             'mensaje Erick debe de ordenar alfabéticamente la clave y mover '
             'cada columna correspondiente de cada letra de la clave a su '
             'nueva posición. Erick ha decidido que le ayudarás creando un '
             'programa que resuelva los acertijos de Héctor, ya que sabe que '
             'este mensaje de amor no será el último.',
  'input': 'La primera línea contendrá n, el número de filas y de '
           'caracteres que contendrá cada fila. La siguiente línea '
           'contendrá n caracteres, que forman la clave del acertijo. Las '
           'siguientes n líneas contendrán n caracteres. El mensaje a '
           'descifrar.',
  'note': ' ',
  'output': 'n líneas con n caracteres resolviendo el acertijo.',
  'title': 'Cuadros románticos',
  'topics': ['strings', 'sortings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Cuadros-romanticos'},
 {'history': 'Dado el un número N debes de contar la cantidad de veces que '
             'está contenido el número M. M debe de estar formado por cifras '
             'consecutivas de N.',
  'input': 'Primera línea un número NSegunda línea un entero T, la cantidad '
           'de números a los cuales debes de encontrar la cantidad de veces '
           'que aparece en sus cifras. Las siguientes T línea tendrán un '
           'entero M, el entero que debes encontrar en las cifras de N.',
  'note': ' ',
  'output': 'T líneas con las respuesta para cada caso.',
  'title': '¿Cuántas veces?',
  'topics': ['strings'],
  'url': 'https://omegaup.com/arena/problem/Cuantas-veces'},
 {'history': ' ',
  'input': 'La primera línea contendrá un número n ( 1 ≤ n ≤ 100) , la '
           'cantidad de cuentas a revisar. Cada una de las siguientes n '
           'líneas empezará con un número k ( 1 ≤ k ≤ 1, 000) , la cantidad '
           'de problemas resueltos, seguido por k números distintos los '
           'cuales son los problemas. Los problemas serán números entre 100 '
           'y 10, 000.',
  'note': ' ',
  'output': 'La salida consistirá en n líneas, una por cada cuenta revisada, '
            'conteniendo a cuál otra cuenta pueden pertenecer. En caso de que '
            'puedan pertenecer a dos o más cuentas, los números deberán '
            'estar separados por una coma y en orden ascendente. En caso de '
            'que no sea una cuenta de prueba, se deberá escribir un guión ( '
            '\x91- \x91) . InputOutput📋43 101 102 1033 104 103 1074 101 102 '
            '103 1045 101 107 103 104 1023, 444-',
  'title': 'Cuentas Prueba',
  'topics': ['sortings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Cuentas-Prueba'},
 {'history': 'El género MOBA está dominado por dos juegos: League of Legends '
             'y Dota 2. Ambos tienen un mapa muy parecido y el objetivo es el '
             'mismo, destruir la base del rival. Carlos, es un estudiante '
             'sanmarquino que quiere iniciar en el mundo de los videojuegos, '
             'sin embargo aún no decide con cuál juego iniciar, si Dota 2 o '
             'League of Legends así que decide realizar una encuesta del '
             'cuál es el juego más jugado.',
  'input': 'La entrada comienza con una línea que contiene un valor entero N '
           'que representa la cantidad de personas encuestadas. Luego, en una '
           'segunda línea, se ingresan las N respuestas de cada uno de los '
           'encuestados, que solo puede ser DOTA o LOL',
  'note': ' ',
  'output': 'El programa debe mostrar el resultado de la encuesta con el '
            'siguiente formato " DOTA: a" y " LOL: b" donde a es la cantidad '
            'de encuestados que dijeron " DOTA" y b es la cantidad de personas '
            'que dijeron " LOL"',
  'title': '¿DOTA 2 O LOL? ',
  'topics': ['strings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/DOTA-2-O-LOL-'},
 {'history': 'Dada una secuencia de N enteros a_ 1, a_ 2, . . . , a_ n- 1, a_ '
             'n, escribe un programa que imprima la secuencia en el orden a_ '
             '1, a_ n, a_ 2, a_ n - 1, . . . .',
  'input': 'El entero N en formato de texto seguido de un espacio en blanco. '
           'Posteriormente la secuencia de N enteros, los cuales deberán '
           'leerse con rutinas de lectura sin formato ( por ejemplo, fread) . '
           'Cada entero de la secuencia estará representado con sizeof( '
           'int32_ t) = 4 bytes. Puedes suponer que 0 ≤ N ≤ 5 × 2^ 22 y que '
           'todos los bytes que conforman la secuencia son caracteres ASCII '
           'gráficos.',
  'note': ' ',
  'output': 'La secuencia de N enteros en el orden solicitado, la cual deberá '
            'imprimirse con rutinas de escritura sin formato ( por ejemplo, '
            'fwrite) . Cada entero deberá representarse con sizeof( int32_ t) '
            '= 4 bytes. NotaYa que OmegaUp vincula la entrada estándar a un '
            'archivo, un programa podrá leer la entrada más de una vez '
            'utilizando rutinas de posicionamiento en archivos ( por ejemplo, '
            'fseek o rewind) sobre stdin o equivalente.',
  'title': 'De los extremos al centro',
  'topics': ['strings'],
  'url': 'https://omegaup.com/arena/problem/De-los-extremos-al-centro-v2'},
 {'history': 'Karel es un robot muy joven y es capaz de aprender nuevas '
             'habilidades, existe una función llamada " define" que ayuda a '
             'Karel a recordar todo. Por ejemplo, para moverse tres espacios '
             'hacia adelante, en vez de poner 3 veces el comando " move( ) ; " '
             ', puedes poner solamente un define fuera del " program( ) " y '
             'darle nombre a la instrucción, y de esta manera puedes llamar a '
             'la función dentro del " program( ) " las veces que lo desees y '
             'se cumplirá lo que se escribió en el define como por ejemplo: '
             '📋 class program define salto( ) move( ) ; move( ) ; move( ) ; '
             'program ( ) salto( ) ; turnoff( ) ; ProblemaKarel, caminando por '
             'el bosque y sin darse cuenta se perdió, solamente necesita dar '
             'media vuelta y asi poder regresar por el mismo camino. Utiliza '
             'la funcion " define" para girar dos veces a la derecha.',
  'input': '',
  'note': ' ',
  'output': '',
  'title': 'Definiendo funciones',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Definiendo-funciones'},
 {'history': ' ',
  'input': 'En la primera línea, un número entero positivo, N, la cantidad '
           'de números que tiene en cada lista ordenada. En la segunda '
           'línea, N números ordenados de menor a mayor: la primer lista. En '
           'la tercera línea, N números ordenados de menor a mayor: la '
           'segunda lista.',
  'note': ' ',
  'output': '2N números, la lista resultante de combinar las dos listas '
            'iniciales, ordenada de mayor a menor.',
  'title': 'Derdenio y sus Estructuras de Datos',
  'topics': ['sortings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Derdenio'},
 {'history': 'Como sabemos el factorial de un número N es la multiplicación '
             'de todos los números enteros positivos menores o iguales que '
             'NPero sabías que cualquier número entero puede ser '
             'representado como suma de FactorialesPor ejemploEl numero 20= 2! '
             '+ 3! + 3! + 3! . Y de manera simplificada seria: ( 2! * 1) + ( '
             '3! * 3) Obviamente no es la única manera de representar al 20 '
             'como suma de factoriales, pero si es en la que se utilizan menos '
             'factoriales',
  'input': 'Un numero entero N',
  'note': ' ',
  'output': 'Por cada línea dos números A y B separados por un espacio. '
            'Donde A representa al numero del factorial y B representa '
            'cuántas veces apareció el factorial en la suma',
  'title': 'Descomposicion Factorial',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Descomposicion-Factorial'},
 {'history': ' ',
  'input': ' ',
  'note': ' ',
  'output': ' ',
  'title': 'Desenmascarando Claves',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Desenmascarando-Claves'},
 {'history': 'A causa de que nuestro equipo aventurero no logro hackear la '
             'maquina de tele- transportación, estos salieron disparados '
             'hacia una dimensión completamente distinta en una galaxia muy '
             'muy lejana. . . Nuestros queridos aventureros cayeron en el '
             'suelo donde un pasto suave y verde como el aguacate les '
             'amortiguo la caída, era hermoso; sin embargo, lo demás de la '
             'ciudad no era igual de colorido, el cielo era rojo, se veían '
             'naves volando por todas partes y en vez de un sol había una '
             'nave gigante de color negro orbitando por el planeta. Al llegar '
             'nuestros aventureros solo podían ver un cartel con muchas luces '
             'de colores fosforescentes que decía: Santylandia: Lugar donde '
             'los Santys son felices Pocos segundos después de que llegaran, '
             'una enorme nave descendió del cielo; parecía que era la '
             'patrulla de la ciudad. En el momento que la nave aterriza una '
             'gran escalera se desplaza hacia el suelo y solo se alcanza a ver '
             'la figura de una persona con un traje negro, capa negra y un '
             'casco negro. La figura misteriosa empieza hablar y dice con una '
             'extraña voz: ¡Ustedes no son de aquí! ¿De donde vienen? '
             '¿Quienes son? ¿Qué quieren? " De forma casi inmediata el chino '
             'que trajimos respondió_ " Somos de la galaxia 666 y mi nombre '
             'es # @ " ! ¿" En eso todos empezaron a decir sus nombres y por '
             'ultimo el joven Santy dice: " Soy Santiago y solo queremos '
             'volver a casa, tengo un examen de programación que hacer" . En '
             'eso la figura misteriosa dice: Oh! un Santiago, hace tiempo que '
             'no se oye ese nombre por este planeta, no después de la '
             'tragedia. Con gusto les ayudaremos a volver, me pueden llamar '
             'Vaderdart; bienvenidos a la galaxia 22. Pero antes de ayudarlos '
             'debo ver si son dignos de mi ayuda resolviendo un pequeño '
             'problemaProblemaMuy bien lo siguiente es muy sencillo, por '
             'accidente se han unido dos palindromos en una solo cadena de '
             'caracteres ( Sin espacios) quiero saber cuales son esos dos '
             'palindromos que uní.',
  'input': 'Una cadena de caracteres que son 2 palindromos unidos ( Un '
           'palindromo es una palabra que se lee igual de izquierda a derecha '
           'que de derecha a izquierda)',
  'note': ' ',
  'output': 'En la primera linea el ultimo palindromo que se unió y en la '
            'segunda linea el primero. ( Solo habrá una respuesta valida)',
  'title': 'Desmostrando tu habilidad',
  'topics': ['strings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Desmostrando-tu-habilidad'},
 {'history': ' ',
  'input': 'Un entero n, que indica el número de alumnos, seguido de n '
           'enteros con el ID de cada alumno.',
  'note': ' ',
  'output': 'Imprime " Ordenable" en caso de que los alumnos puedan ordenarse, '
            'o " ! Ordenable" en caso contrario.',
  'title': 'Desorden en el Consejo Estudiantil',
  'topics': ['sortings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Desorden-en-el-Consejo-Estudiant'},
 {'history': 'Crystal recién ha aprendido el algoritmo Quick Sort. Este '
             'algoritmo de Divide and Conquer tiene una propiedad interesante: '
             'Su mejor rendimiento posible para ordenar un arreglo a de n '
             'elementos diferentes usa O( nlogn) comparaciones, mientras que '
             'el peor usa O( n^ 2) y el promedio usa O( nlogn) . Crystal usa '
             'la expresión pivot = ⌊| a| / 2⌋ para hacer su propio Quick '
             'Sort. De esta manera, su algoritmo se ve así: 📋void particion( '
             'int pivot, vector< int> a, vector< int> L, vector< int> R) for( '
             'int i = 0; i < a. size( ) ; i+ + ) if( i = = pivot) continue; '
             'if( a[ i] < = a[ pivot] ) L. emplace_ back( a[ i] ) ; else R. '
             'emplace_ back( a[ i] ) ; void Quicksort( vector< int> a) if( a. '
             'size( ) < = 1) return; int pivot = a. size( ) / 2; vector< int> '
             'L, R; particion( pivot, a, L, R) ; Quicksort( L) ; Quicksort( R) '
             '; L. emplace_ back( a[ pivot] ) ; for( auto x : R) L. emplace_ '
             'back( x) ; a = L; Ahora, se te dará un entero n y debes decirle '
             'a Crystal una permutación de los enteros ( 1, 2, . . . , n) que '
             'use la máxima cantidad de comparaciones posible. Nota: Solo '
             'considerar las comparaciones en la función particion.',
  'input': 'La primera línea de entrada contiene un entero n, El número de '
           'elementos de la permutación.',
  'note': ' ',
  'output': 'Imprime una sola línea, una permutación que use la máxima '
            'cantidad de comparaciones. Dado que pueden haber múltiples '
            'respuestas, imprime cualquiera de ellas.',
  'title': 'Destruyendo el Quicksort',
  'topics': ['sortings'],
  'url': 'https://omegaup.com/arena/problem/Destruyendo-el-Quicksort'},
 {'history': 'Escriba un programa que lea un carácter del usuario. En caso de '
             'leer una vocal mayúscula, el programa debe imprimir el '
             "carácter ' V' . En caso de leer una consonante mayúscula, el "
             "programa debe imprimir una ' C' . En caso de leer una semivocal "
             "mayúscula ( ' Y' ) , el programa debe imprimir ' S' . En caso "
             'de que no sea ninguna letra mayúscula, el programa debe leer de '
             'nuevo el carácter. El programa no se detendrá hasta leer 10 '
             'letras mayúsculas. MUY IMPORTANTE: El programa debe estar '
             'estructurado en modulos, no todo en la funcion principal.',
  'input': 'Un numero x de caracteres separados por un espacio.',
  'note': ' ',
  'output': 'La letra correspondiente a cada caso.',
  'title': 'Detector de letras',
  'topics': ['strings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Detector-de-letras-UAMA'},
 {'history': 'En un dia mientras estabas caminando, te diste cuenta que el '
             'día en que esta viviendo, este día es un día unico, a '
             'comparación de todos los demás por una única razon. '
             'ProblemaDeterminar si " Es un dia único" o " Es un día '
             'ordinario"',
  'input': 'ingresa D que es el día en que estas viviendo',
  'note': ' ',
  'output': 'Imprimir" Es un dia unico" o " Es un día ordinario" dependiendo '
            'la fecha en que estas viviendo.',
  'title': 'Dia unico',
  'topics': ['strings'],
  'url': 'https://omegaup.com/arena/problem/Dia-unico'},
 {'history': 'Dado un número entero N y un símbolo ingresado por pantalla, '
             'dibujar un esquema de N x NLa diagonal secundaria estará '
             'compuesta por el número de la fila, en la parte superior se '
             'completará con el símbolo ingresado por pantalla y en la parte '
             'inferior con X',
  'input': 'La entrada consiste líneas, en la primera un número entero y en '
           'la segunda un símbolo',
  'note': ' ',
  'output': 'Un esquema similar al de muestra. En la diagonal secundaria el '
            'número de línea, en la parte superior completar con el símbolo '
            'ingresado por pantalla y en la parte inferior completar con X',
  'title': 'Dibuja el esquema',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Dibuja-el-esquema'},
 {'history': ' ',
  'input': ' ',
  'note': ' ',
  'output': ' ',
  'title': 'Dibujando rombos',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Dibujando-rombos'},
 {'history': 'Deberás realizar un algoritmo que imprima un corazón de altura '
             '12, el tamaño del lado izquierdo será de 6 y del lado derecho '
             'de 5',
  'input': 'En la primera línea recibirás una letra cualquiera.',
  'note': ' ',
  'output': 'Mostrar el corazón con la letra que se tecleó.',
  'title': 'Dibujando un corazón',
  'topics': ['strings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Dibujando-un-corazon'},
 {'history': 'Dado un entero n, escribe un programa que dibuje un tache de '
             'arrobas de dimensiones n × n.',
  'input': 'Un entero n. Puedes suponer que 3 ≤ n ≤ 99 y que n es impar.',
  'note': ' ',
  'output': 'Un tache de arrobas. Los espacios innecesarios a la derecha se '
            'ignoran, pero evita imprimir espacios innecesarios a la izquierda '
            'o líneas vacías.',
  'title': 'Dibujando un tache',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Dibujando-un-tache'},
 {'history': 'Dado un entero N, escribe un programa que dibuje un triángulo '
             'de arrobas. La punta del triángulo ( a incluirse en la primera '
             'fila del dibujo) debe estar formada por una arroba y cada fila '
             'posterior debe contener dos arrobas adicionales ( una a la '
             'izquierda y otra a la derecha) . La base del triángulo ( a '
             'incluirse en la última fila del dibujo) debe estar formada por '
             'N arrobas. El triángulo debe aparecer centrado.',
  'input': 'Un entero N. Puedes suponer que N es impar y que 0 < N < 500.',
  'note': ' ',
  'output': 'El dibujo del triángulo descrito.',
  'title': 'Dibujando un triángulo',
  'topics': ['strings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Dibujando-un-triangulo'},
 {'history': 'Tu tarea es dibujar una pirámide de N x N.',
  'input': 'En la primera linea recibirás un valor entero el cual será el '
           'tamaño de la pirámide, en la segunda linea recibirás una letra '
           'cualquiera.',
  'note': ' ',
  'output': 'La pirámide impresa.',
  'title': 'Dibujando una pirámide',
  'topics': ['strings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Dibujando-una-piramide'},
 {'history': 'Un amigo tuyo va a ir de vacaciones a Chihuahua y quiere saber '
             'cuáles son los lugares a los que pertenece cierta clave lada l.',
  'input': 'Un número entero l que representa la clave lada.',
  'note': ' ',
  'output': 'El lugar de donde es la clave lada.',
  'title': 'Directorio Chihuahuense',
  'topics': ['strings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Directorio-Chihuahuense'},
 {'history': 'Pedrito utiliza mucho su aplicación de contactos para realizar '
             'llamadas con sus amigos y familiares. Una funcionalidad '
             'importante de la aplicación es poder sugerir al usuario '
             'contactos cuyos nombres coincidan con las letras presionadas en '
             'el teclado numérico de la aplicación. La siguiente imagen es '
             'del teclado numérico de la aplicación de contactos: Pedrito '
             'nos da el siguiente ejemplo utilizando su directorio de '
             'contactos: LUISJUDITHULISESSi el Pedrito ingresó con el teclado '
             '58, la aplicación debe de sugerir 2 contactos LUIS y JUDITH. '
             'Debido a que las letras del 5 son: J, K, L y del 8 son: T, U, V '
             'unas de las posibles combinaciones son JU y LU que coincide con '
             'las dos primeras letras de los contactos LU IS y JU DITH. El '
             'contacto de ULISES no es sugerido debido a que el orden de la '
             'secuencia de números importa y debe de ser respetada. La semana '
             'pasada Pedrito actualizó el sistema operativo de su teléfono. '
             'Y recientemente se ha dado cuenta que su aplicación de '
             'contactos tiene un bug. Después de la actualización, el '
             'teclado numérico cambia de forma aleatoria. Estos son algunos '
             'ejemplos: Pedrito pidió tu ayuda para saber si una combinación '
             'de dígitos pueden sugerirle un determinado nombre de contacto.',
  'input': 'En la primer línea un número entero N que representa las '
           'asignaciones de dígitos y letras del teclado numérico. Cada '
           'pareja Ni se compone de un dígito del teclado D, y una cadena de '
           'letras mayúsculas S. Después la siguiente línea, es un número '
           'entero Q que representa el número de parejas con las que ayudaras '
           'a Pedrito. Las siguientes Qi parejas son una secuencia de dígitos '
           'P, y el un nombre del contacto W.',
  'note': ' ',
  'output': 'Por cada pareja Qi deberás mostrar " SI" sí la combinación de '
            'dígitos Pi puede sugerir el nombre Wi. En caso contrario mostrar '
            '" NO" .',
  'title': 'Directorio Descompuesto',
  'topics': ['strings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Directorio-Descompuesto'},
 {'history': 'La época de pandemia te tiene aburrido y una tarde, ya '
             'desesperado, decidiste jugar con puntos en el plano cartesiano. '
             'Empezaste con 11 puntos en el plano, y teniendo una atracción '
             'desmedida por el equilibrio y el balance, quisiste dividirlos en '
             'conjuntos de igual cantidad. Para lograr tu objetivo, trazaste '
             'una recta desde el origen a uno de los puntos. De esta forma '
             'conseguiste que el plano quedara dividido en dos partes, ambas '
             'con 5 puntos en su interior, como se muestra en la figura: Luego '
             'de seguir experimentando con distintos puntos e incrementando la '
             'cantidad de puntos, te preguntas si esta tarea puede ser '
             'automatizada.',
  'input': 'Una línea con un entero positivo impar n indicando el número de '
           'puntos. Luego seguirán n líneas, con 2 números ( de tipo float) '
           'por línea separados por un espacio, representando las coordenadas '
           'de cada punto en el plano cartesiano.',
  'note': ' ',
  'output': 'Una única línea con las 2 coordenadas del punto deseado, '
            'separadas por un espacio y redondeadas a 4 decimales. El punto de '
            'la salida es el único punto que al formar una recta con el '
            'origen, divide al conjunto de puntos en dos subconjuntos de igual '
            'tamaño a ambos lados de la recta.',
  'title': 'Aburrimiento',
  'topics': ['sortings'],
  'url': 'https://omegaup.com/arena/problem/Dividir-puntos-en-partes-iguales'},
 {'history': 'Se tiene un número entero compuesto x de la forma x= 2^ m* 3^ '
             'ncon m y n números enteros. A este número se le aplicarán y '
             'operaciones. Cada operación consiste en multiplicar por 2 o por '
             '3, o dividir entre 2 o entre 3. De los resultados mostrados, '
             'decidir cuáles son posibles después de aplicarlas y '
             'operaciones.',
  'input': 'La primera fila contiene dos números separados por espacio. El '
           'primero es el número x querepresenta el número al que se le '
           'aplicarán las operaciones. El segundo es el número y que '
           'representa cuántas operaciones se habránde realizar. La segunda '
           'fila contiene una lista de Z números, separadas por espacio, cada '
           'n[ umero z= 2^ r* 3^ s para dos potencias r y s enteraspositivas, '
           'que representan cada uno un probable resultado.',
  'note': ' ',
  'output': 'De los probables resultados, mostrar sólo los resultados a los '
            'que es posiblellegar después de aplicar y operaciones, como una '
            'lista separada porespacios, ordenada de menor a mayor. Si no hay '
            'ninguna solución, imprimir " 0" ( cero) .',
  'title': 'Dos Tres Multiplos',
  'topics': ['sortings'],
  'url': 'https://omegaup.com/arena/problem/Dos-Tres-Multiplos'},
 {'history': 'La maestra de programacion te encargo una investigacion de n '
             'paginas paratu mala suerte la impresora fallo ese dia y te '
             'imprimio duplicados y faltaron paginas. dependiendo una lista de '
             'numeros enteros positivos de n tamaño, imprimiras la lista sin '
             'repetidos yen orden de menor a mayor',
  'input': 'Un entero n que indica la cantidas de hojas impresas. M valores '
           'enteros positivos.',
  'note': ' ',
  'output': 'Imprimir la lista pero ordenada de menor a mayor sin repetidos',
  'title': 'Duplicados y ordenamiento',
  'topics': ['sortings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Duplicados-y-ordenamiento'},
 {'history': ' ',
  'input': ' ',
  'note': ' ',
  'output': ' ',
  'title': 'Edades',
  'topics': ['sortings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Edades'},
 {'history': ' ',
  'input': 'La primer línea de entrada contendrá el valor N. Luego vendrán '
           'N líneas cada una conteniendo una cadena de caracteres de no más '
           'de 10000 caracteres, según la descripción de arriba)',
  'note': ' ',
  'output': 'Para cada una de las N líneas de entrada, se debe imprimir la '
            'cantidad de veces que apareció " DIEGO" ( según lo descripto) , '
            'como un valor entero, en líneas separadas. InputOutput📋1Mexico '
            '86 DIEGO1📋2DIE ARGENTINA GOLDIDIOLE OLE GOL GENIO12',
  'title': 'El Diego siempre estará',
  'topics': ['strings'],
  'url': 'https://omegaup.com/arena/problem/El-Diego-siempre-estara'},
 {'history': 'Fuiste contratado para ayudar a la Agencia Nacional de Seguridad '
             'Informática ( ANSI) para resolver un enigma. Hace unos meses un '
             'hacker de origen desconocido apodado gamma ( como el número '
             'misterioso) logró penetrar al sistema, pero increíblemente no '
             'robó datos ni modificó nada. Al parecer solo quiere dar un '
             'mensaje, enviando el mismo a distintos correos electrónicos. '
             'Una parte del contenido versaba lo siguiente: “Porque encuentras '
             'felicidad en pantallas y mensajes, cuando el hombre en sus '
             'inicios podía serlo con el simple apreciar de la naturaleza. '
             'Tú mismo puedes comprobar que la misma está envuelta de '
             'números como en la cola de un camaleón. . . ”El texto '
             'continuaba y más adelante versaba que en pocos días llegaría '
             'una nueva carta y en caso de no ser resuelta, lanzaría un '
             'ataque fulminante contra los servidores de la agencia. Haciendo '
             'vulnerable la red de nuestro país. Uno de nuestros más '
             'inteligentes agentes alias Delciuxs encontró un mensaje oculto '
             'dentro del primer mensaje. Pero no nos quiso decir. Simplemente '
             'a la mañana siguiente se presentó con nosotros y pidió su '
             'renuncia. Sin antes darnos unas pistas para la siguiente carta. '
             'Le gustan los númerosLa razón que versa el primer mensaje fue '
             'de oro, la que viene será de plata. El número de palabras del '
             'mensaje es indispensable para encontrar el mensaje oculto. El '
             'mensaje oculto se encuentra dentro de la misma carta. Tienen 10 '
             'días para encontrar el mensaje, suficiente como para encontrar '
             'una palabra por día. Es importante el orden de las palabras, el '
             'uno arroja la primera, el dos arroja la segunda, el tres la '
             'tercera. . . El siguiente símbolo es un grandísimo regalo de '
             'mi parte. . .',
  'input': 'Una linea de texto que contiene el nuevo mensaje del hacker gamma, '
           'este texto no contiene puntos ( . ) ni comas ( , ) ni saltos de '
           'linea, todas las palabras están en minúsculas. El texto del '
           'mensaje que se te dará como input es el que se presenta a '
           'continuación: sabes que si tenemos lo necesario para vivir '
           'realmente importara el que avance la tecnología por supuesto que '
           'si pero vale la pena gastar tu vida lo que hago y haces para a '
           'veces desarrollar entretenimiento mismo que solo convierte a '
           'nuestro semejante en un ente menos critico este mi trabajo no '
           'consiste en menospreciar dicho esfuerzo puesto que aun en estas '
           'actividades de desarrollo de software sigue existiendo esta forma '
           'de generar el arte de programar el código tecnológico es un '
           'legado correcto gama',
  'note': ' ',
  'output': ' ',
  'title': 'El Hacker Gamma',
  'topics': ['strings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/El-Hacker-Gama'},
 {'history': 'El maestro Toño desea colocar una valla alrededor de su casa '
             'sin embargo por motivos de trabajo saldrá de viaje '
             'próximamente así que ha decidido contratar a alguien que lo '
             'haga mientras esta fuera. Esta persona le solicito la medida de '
             'su terreno para la compra de materiales, pero cuando estaban en '
             'llamada esta se cortó y el maestro Toño solo dijo: - El área '
             'de mi terreno es de 117 m2 y el largo mide 4 metros más que el '
             'ancho óseo . . . . pip pip! Ahora la persona que pondrá la '
             'valla no sabe las dimensiones del terreno ¿Crees poder ayudarlo '
             'con la información que el maestro Toño le ha proporcionado?',
  'input': 'Se sabe que al tener una ecuación cuadrática es posible utilizar '
           'ciertos métodos GENERALES por lo que la entraba serán los '
           'valores de a, b y c',
  'note': ' ',
  'output': 'Como salida se espera el valor del largo y ancho del terreno ( '
            'redondeados) junto con la m de metros.',
  'title': 'El Maestro Toño y su terreno',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/El-Maestro-Tono-y-su-terreno'},
 {'history': 'Hace ya mucho años un matemático descubrió que si tienes un '
             'numero de mas de 1 cifra o de menos de 5 cifras y ordenas los '
             'dígitos de Mayor a Menor, luego de Menor a Mayory restas el '
             'numero MAYOR obtenido menos el MENOR y después al resultado '
             'obtenido le repites el mismo proceso va llegar un momento en que '
             'el resultado sera igual a 6174 sin excepcionesIMPORTANTE: Si el '
             'resultado de la resta tiene menos de 4 dígitos se le agregara '
             'un 0 al inicioTu tarea es encontrar cuantas veces se tiene que '
             'repetir el proceso para que la resta sea igual a 6174',
  'input': 'Un numero de mas de 1 cifra pero menor de 5 cifras ejemplo 12, 021 '
           'o 1234',
  'note': ' ',
  'output': 'Mostrar la resta del Mayor - Menor y el resultado separado por un '
            'salto de lineaY al final mostrar cuantas veces se repitió el '
            'proceso',
  'title': 'El Misterio del numero 6174',
  'topics': ['strings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/El-Misterio-del-numero-6174'},
 {'history': ' ',
  'input': 'Un nombre sin tamaño especificado, seguido de una letra ( A, B o '
           'C) .',
  'note': ' ',
  'output': 'La respuesta segun las indicaciones anteriores. '
            'InputOutput📋Tamarindo Ctamarindotemerondu',
  'title': 'El regreso de MrKrista',
  'topics': ['strings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/El-Regreso-De-MrKrista'},
 {'history': ' ',
  'input': ' ',
  'note': ' ',
  'output': ' ',
  'title': 'El Viaje de Marianito',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/El-Viaje-de-Marianito'},
 {'history': 'A lo largo de 82 capítulos, en tres temporadas transmitidas '
             'originalmente entre 1957 y 1961, Guy Williams enamoró a '
             'millones de televidentes del mundo entero como el playboy don '
             'Diego de la Vega quien, oculto tras un antifaz y una capa, '
             'impartía justicia en la California española de principios del '
             'siglo XIX como el Zorro. Don Diego, el único hijo de don '
             'Alejandro de la Vega, regresa a su Los Ángeles natal convertido '
             'en un hábil espadachín y en un jinete sin igual tras sus años '
             'de estudio en Madrid. Al descubrir las injusticias y abusos en '
             'la colonia española en México, decide esconder sus dotes de '
             'luchador y, oculto tras un traje, capa, sombrero y antifaz '
             'negros se enfrenta a bandidos, militares y funcionarios '
             'corruptos que abusaban de los buenos y honestos habitantes de '
             'California. Un sirviente mudo, Bernardo, lo ayuda fielmente en '
             'su batalla contra la potencia colonial y para frenar a ladrones '
             'y malhechores que azotaban las tierras californianas. Su caballo '
             'negro Tornado obedecía a sus silbidos, lo salvaba cuando estaba '
             'en dificultades y se enfrentaba a la adversidad por su dueño '
             'que, a los ojos de la sociedad, sólo se dedicaba a leer, '
             'bailar, cantar y enamorar a las chicas de la zona. Los capitanes '
             'Monasterio, Briones, Arrellano y Mendoza trataban de imponer su '
             'ley y usaban como peones al bonachón sargento Demetrio López '
             'García y al inocente cabo Reyes. Mientras tanto, el capitán '
             'Arturo Toledano era honesto y un rival de altura para el Zorro. '
             'El gobernador se dejaba llevar por la corriente, mientras el '
             'clero hacía lo que podía para salvar a campesinos e indígenas '
             'de los abusos de poder. El Zorro dejaba su firma, una Z, tras '
             'cada acción y como marca para corruptos, ladrones y abusadores. '
             'Tu trabajo consiste en ayudar al nuevo zorro digital dejando su '
             'marca en la pantalla de la computadora. El tamaño N ( un '
             'número entero) y los símbolos con que tienes que realizar la Z '
             'serán ingresados por pantalla.',
  'input': 'Ingresaran por pantalla un número N y un símbolo x.',
  'note': ' ',
  'output': ' ',
  'title': 'El Zorro',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/El-Zorro'},
 {'history': ' ',
  'input': ' ',
  'note': ' ',
  'output': ' ',
  'title': 'K-cambios en el Alfabeto de Rob',
  'topics': ['strings', 'sortings'],
  'url': 'https://omegaup.com/arena/problem/El-alfabeto-de-Rob'},
 {'history': 'Ulises el chairo tiene un arreglo a1, a2, . . . , an de n ( '
             '1≤n≤2⋅105) elementos. Planea hacer q operaciones, cada una '
             'definida por li, ri. Una operacion definida por li, ri consiste '
             'en sumar los numeros en las posiciones li, li+ 1, . . . , ri ( '
             'es decir ali, . . . , ari) . Sin embargo, despues de hacer esto, '
             'decidio reordenar los elementos de tal manera que la suma de los '
             'resultados de las operaciones se maximice.',
  'input': 'Primera LÌnea: n, q ( 1≤n, q≤2⋅105) Segunda Linea: los n numeros '
           'a1, a2, . . . , anSiguientes m lineas: li, ri ( 1≤li≤ri≤n)',
  'note': ' ',
  'output': "La maxima suma de las operaciones posible al permutar los ai' s'",
  'title': 'El chairo y la mayor suma',
  'topics': ['sortings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/El-chairo-y-la-mayor-suma'},
 {'history': 'Estás por organizar el desfile anual de perritos y quieres que '
             'salga perfecto. Ya cuentas con los nombres de N perritos que '
             'desfilarán, pero desafortunadamente hay muchos perritos que se '
             'llaman igual y eso puede prestarse a confusiones, por lo que '
             'quieres evitar que dos perritos con el mismo nombre estén en el '
             'escenario al mismo tiempo. El escenario tiene espacio para E '
             'perritos y la idea es que los perritos desfilen de izquierda a '
             'derecha, de modo que cuando salga un perrito del escenario, vaya '
             'entrando el siguiente. Por ejemplo, si E= 3 entonces entrarán '
             'al escenario los perritos 1, 2, y 3; después saldrá el perrito '
             '1 para que pueda entrar el 4, después saldrá el perrito 2 para '
             'que pueda entrar el 5, etcétera. Faltan pocas horas para el '
             'desfile y quisieras simularlo con la lista de nombres que ya '
             'tienes, para así saber si el orden actual cumplirá con tus '
             'expectativas o si ocurrirá en algún momento lo que quieres '
             'evitar. Escribe un programa que te ayude a determinarlo.',
  'input': 'Dos enteros N y E seguidos de los nombres de los N perritos que '
           'desfilarán. Puedes suponer que 0 ≤ E ≤ N ≤ 10^ 4.',
  'note': ' ',
  'output': 'Si dos perritos con el mismo nombre estarán en el escenario al '
            'mismo tiempo, tu programa debe imprimir el mensaje " Habran dos '
            'perritos con el nombre P al mismo tiempo" , donde P es el nombre '
            'de los perritos involucrados. Sólo debes imprimir ese mensaje la '
            'primera vez que ocurra esta situación. Si lo anterior no '
            'ocurrirá, tu programa debe imprimir el mensaje " El desfile de '
            'perritos estara bien hecho" .',
  'title': 'El desfile de perritos (original)',
  'topics': ['strings', 'sortings'],
  'url': 'https://omegaup.com/arena/problem/El-desfile-de-perritos'},
 {'history': 'Estás por organizar el desfile anual de perritos y quieres que '
             'salga perfecto. Ya cuentas con los nombres de N perritos que '
             'desfilarán, pero desafortunadamente hay muchos perritos que se '
             'llaman igual y eso puede prestarse a confusiones, por lo que '
             'quieres evitar que dos perritos con el mismo nombre estén en el '
             'escenario al mismo tiempo. El escenario tiene espacio para E '
             'perritos y la idea es que los perritos desfilen de izquierda a '
             'derecha, de modo que cuando salga un perrito del escenario, vaya '
             'entrando el siguiente. Por ejemplo, si E= 3 entonces entrarán '
             'al escenario los perritos 1, 2, y 3; después saldrá el perrito '
             '1 para que pueda entrar el 4, después saldrá el perrito 2 para '
             'que pueda entrar el 5, etcétera. Faltan pocas horas para el '
             'desfile y quisieras simularlo con la lista de nombres que ya '
             'tienes, para así saber si el orden actual cumplirá con tus '
             'expectativas o si ocurrirá en algún momento lo que quieres '
             'evitar. Escribe un programa que te ayude a determinarlo.',
  'input': 'Dos enteros N y E seguidos de los nombres de los N perritos que '
           'desfilarán. Puedes suponer que E ≤ N, que 1 ≤ E ≤ 10^ 4 y que 1 ≤ '
           'N ≤ 10^ 6.',
  'note': ' ',
  'output': 'Si dos perritos con el mismo nombre estarán en el escenario al '
            'mismo tiempo, tu programa debe imprimir el mensaje " Habran dos '
            'perritos con el nombre P al mismo tiempo" , donde P es el nombre '
            'de los perritos involucrados. Sólo debes imprimir ese mensaje la '
            'primera vez que ocurra esta situación. Si lo anterior no '
            'ocurrirá, tu programa debe imprimir el mensaje " El desfile de '
            'perritos estara bien hecho" .',
  'title': 'El desfile de perritos (alternativo)',
  'topics': ['strings'],
  'url': 'https://omegaup.com/arena/problem/El-desfile-de-perritos-alternati'},
 {'history': 'Karel, como es bien sabido, es un robot muy ordenado, lleva su '
             'pasión por el ordenamiento a cada rincón del mundo, lo '
             'comparte con todos sus amigos y conocidos. Su prima lejana, '
             'Karla, no comparte la misma pasión con Karel, el día de hoy la '
             'visitó y se encontró con la horrible situación de 3 montones '
             'de zumbadores desordenados dentro de la casa. Problema. Ayuda a '
             'Karel a ordenar los montones de zumbadores de menor a mayor. '
             'Entrada. Karel inicia en la esquina inferior izquierda del mundo '
             'con orientación desconocida. La casa de Karla consiste de una '
             'única fila de ancho 1 y de largo 3. En cada casilla se '
             'encuentra un montón de zumbadores a ordenar. Salida. Karel '
             'deberá ordenar de forma creciente los montones de zumbadores, '
             'para enseñarle a su prima Karla lo que es tener las cosas en '
             'orden. Ejemplo. Mundo de entradaMundo de salidaConsideraciones. '
             'Karel inicia en la esquina 1, 1 con orientación desconocida. '
             'Para un grupo del 50 de los casos, Karel no tiene zumbadores en '
             'su mochila. Para otro grupo del 50 de los casos, Karel tiene '
             'infinitos zumbadores en la mochila. Las únicas paredes del '
             'mundo son las que delimitan la casa de Karla. A Karla le da '
             'mucha pena el desorden que Karel encontró en su casa. Los '
             'montones de zumbadores van de 0 a 100Se desconoce el orden de '
             'los montones de zumbadores ( puede que al inicio los montones de '
             'zumbadores se encuentren ordenados, de esta manera no le dará '
             'pena a Karla) . No importa la orientación ni ubicación final '
             'de Karel.',
  'input': ' ',
  'note': ' ',
  'output': ' ',
  'title': 'El desorden de Karla reloaded',
  'topics': ['sortings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/El-desorden-de-Karla-reloaded'},
 {'history': 'Carlitos es un aluno del ITSUR, el es muy flojo a si que cuando '
             'esta asciendo sus apuntes y escucha una palabra larga solo '
             'apunta la primera letra , el numero de letras entre la primera y '
             'la ultima letra, para el las palabras largas son las que tienen '
             'mas de 4 letras, ejemplo la palabra Milanesa la escribiría así '
             'M6a, la palabra ingeniero seria asi i7o, la palabra hola se '
             'queda igual',
  'input': 'Una cadena m',
  'note': ' ',
  'output': 'La palabra de forma acortada',
  'title': 'El flojo',
  'topics': ['strings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/El-flojo'},
 {'history': 'El popular juego de Jenga consiste en retirar una a una las '
             'piezas de una torre. Tu labor será escribir un programa que '
             'recree lo que sucedería si se te proporciona una descripción '
             'de la torre y el orden en el que el jugador desea retirar las '
             'fichas. El estado de la torre está descrito por una matriz de '
             '10 × 10 caracteres que puede contener letras mayúsculas ( '
             'denotando la sección de una pieza identificada por esa letra) o '
             'caracteres . ( denotando la ausencia de una pieza) . Todas las '
             'piezas son horizontales y pueden tener entre 1 y 10 secciones. '
             'El jugador intentará retirar N piezas de la torre ( en cierto '
             'orden dado) y la torre colapsará si cualquier pieza se queda '
             'sin al menos una sección de soporte contiguo debajo de ella ( '
             'ya sea de otras piezas o de suelo; la torre no podrá caer de '
             'pie) . Tu programa deberá simular la remoción de las piezas '
             'que no provoquen un colapso y deberá detenerse si una pieza no '
             'puede ser removida sin colapsar la torre. Tu programa también '
             'deberá imprimir el estado final de la torre ( sin incluir la '
             'remoción que provoque el colapso) .',
  'input': 'Una matriz de 10 × 10 caracteres seguida de un entero N y N letras '
           'mayúsculas que denoten el orden en el que las piezas serán '
           'removidas. Puedes suponer que nunca se retira una pieza '
           'inexistente.',
  'note': ' ',
  'output': 'Para cada pieza que pudo removerse, imprimir el mensaje Pieza # '
            'removida donde # es la letra que la identifica. Si una pieza no '
            'pudo removerse, imprimir el mensaje Pieza # no puede removerse e '
            'ignorar las piezas restantes. Finalmente, una matriz de 10 × 10 '
            'caracteres que denoten el estado final de la torre.',
  'title': 'El juego de Jenga',
  'topics': ['strings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/El-juego-de-Jenga'},
 {'history': 'El juego de las sillas consiste en caminar alrededor de una fila '
             'de sillas mientras suena una pista sonora. Cuando la pista '
             'sonora se detiene, debes sentarte cuanto antes en una silla '
             'antes de que te la ganen. Estás practicando para el torneo '
             'mundial del juego de la silla y sabes que la estrategia ganadora '
             'es siempre sentarte en la silla más cercana, sin importar si la '
             'silla te queda adelante o atrás. Escribe un programa que lea '
             'las posiciones de las N sillas y que responda cuántos segundos '
             'te toma llegar a la silla más cercana si actualmente te '
             'encuentras en la posición P y te mueves a un ritmo de una '
             'unidad de distancia por segundo.',
  'input': 'Un entero N seguido de N enteros que denotan las posiciones de las '
           'sillas. Posteriormente un entero M seguido de M enteros P_ 1, P_ '
           '2, . . . , P_ m que corresponden con los valores de P para los que '
           'debes contestar la pregunta mencionada. Puedes suponer que 1 ≤ N, '
           'M ≤ 10^ 5, que todas las sillas están en posiciones distintas y '
           'que todas las posiciones están en el rango de 0 a 10^ 9.',
  'note': ' ',
  'output': 'Para cada P_ i, la distancia a la que te queda la silla más '
            'cercana.',
  'title': 'El juego de la silla',
  'topics': ['sortings'],
  'url': 'https://omegaup.com/arena/problem/El-juego-de-la-silla'},
 {'history': 'Escribe un programa que, dadas las coordenadas de los vértices '
             'de un cuadrilátero, calcule la longitud de su lado más corto.',
  'input': 'Ocho reales x_ 1, y_ 1, x_ 2, y_ 2, x_ 3, y_ 3, x_ 4, y_ 4. Puedes '
           'suponer que 0 ≤ x_ i, y_ i ≤ 100 y que los vértices se listan '
           'ordenados en el sentido de las manecillas del reloj.',
  'note': ' ',
  'output': 'Un real que sea la longitud del lado más corto del '
            'cuadrilátero. Tu programa se considerará correcto si el valor '
            'calculado es razonablemente cercano a la respuesta exacta.',
  'title': 'El lado más corto',
  'topics': ['sortings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/El-lado-mas-corto'},
 {'history': 'En la clase de programación el profesor Toño esta apunto de '
             'dar el tema de " Métodos de ordenamiento" , sin embargo antes '
             'de iniciar quizo poner aprueba sus alumnos dando el siguiente '
             'problema: Profesor Toño: Si yo tengo esta cadena de números '
             '134563 y la quiero ordenar de mayor a menor como¿Cómo '
             'quedaría? . A lo que el alumno Ahmed respondió: '
             '654331¡Correcto! Sencillo ¿no? ahora quiero que me creen un '
             'pequeño programa que al recibir una cadena de longitud N con '
             'números del 0 al 9, me devuelva dicha cadena pero ordenada de '
             'mayor a menor.',
  'input': 'Se va a ingresar una cadena conformada por números del 0 al 9 ( '
           'cadena junta, sin espacios, sin comas, ni decimales) se pueden '
           'colocar números repetidos. La longitud de la cadena debe ser '
           'mayor a 0 y menor a 100.',
  'note': ' ',
  'output': 'Como salida se obtendrá la cadena ordenada de mayor a menor ( '
            'junta, sin espacios o comas) .',
  'title': 'El maestro Toño (Mayor a menor).',
  'topics': ['strings', 'sortings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/El-maestro-Tono'},
 {'history': 'Al profesor Toño se le ha asignado el grupo de 2° A de '
             'programación, por lo que debe aplicarles un examen de '
             'diagnostico para ver sus conocimientos obtenidos el semestre '
             'pasado. Para ello les deja el siguiente problema: Alumnos quiero '
             'que me formen una cadena de mínimo 5 palabras y máximo 20, '
             'dicha cadena la va a leer su programa y como resultado les debe '
             'mostrar " P" mas el numero de la palabra, seguido de la palabra '
             'correspondiente.',
  'input': 'Se va ingresar una cadena la cual debe contener al menos 5 '
           'palabras o mas de 20',
  'note': ' ',
  'output': 'Como salida se debe mostrar una P mayúscula concatenada con el '
            'numero de la palabra, un espacio en blanco y la palabra '
            'correspondiente.',
  'title': 'El maestro Toño (Palabras).',
  'topics': ['strings'],
  'url': 'https://omegaup.com/arena/problem/El-maestro-Tono-Palabras'},
 {'history': 'Realiza un problema que imprima el mayor de tres números.',
  'input': 'Escribe tres números enteros a, b y c',
  'note': ' ',
  'output': 'El número entero mayor de los tres números introducidos.',
  'title': 'El mayor de tres números',
  'topics': ['sortings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/El-mayor-de-tres-numeros'},
 {'history': 'Realiza un problema que imprima el menor de dos números.',
  'input': 'Escribe dos números enteros x_ 1 y x_ 2',
  'note': ' ',
  'output': 'El número entero menor de los dos números introducidos.',
  'title': 'El menor de dos números',
  'topics': ['sortings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/El-menor-de-dos-numeros'},
 {'history': 'El Conejo Blanco regresaba ansiosamente a casa, pues había '
             'perdido sus guantes en su camino a ver a la Duquesa. De pronto, '
             'el Conejo Blanco vio a Alicia y confundido le dijo " Ana María, '
             've corriendo a casa para traerme el par de guantes que está '
             'sobre la mesa" . Alicia corrió presurosa a la casa del Conejo '
             'Blanco, sin detenerse a preguntar por qué la habían llamado '
             'Ana María y no Alicia. Al entrar a la casa, vio una mesa en la '
             'que había N guantes revueltos y de muchos colores. Al poner '
             'más atención, Alicia notó que había exactamente una pareja '
             'de guantes del mismo color G y que todos los demás guantes eran '
             'de colores distintos y sin pareja.',
  'input': 'Un entero N seguido de N enteros A_ 1, A_ 2, . . . , A_ N que '
           'representan los colores de los guantes.',
  'note': ' ',
  'output': 'El entero G, correspondiente al color de los guantes que sí '
            'vienen en pareja. RangosPuedes suponer que 2 ≤ N ≤ 2 × 10^ 5 y '
            'que 0 ≤ A_ i ≤ 10^ 9.',
  'title': 'El par de guantes del Conejo Blanco',
  'topics': ['sortings'],
  'url': 'https://omegaup.com/arena/problem/El-par-de-guantes-del-Conejo-Bla'},
 {'history': 'John Carter acaba de tener su primer encuentro con los marcianos '
             'verdes, y tanto él como los soldados que lo encontraron están '
             'confundidos. Tars Tarkas, el jefe de los soldados, se acercó a '
             'saludar a John. Después de un cruce de gestos, Tars Tarkas '
             'ordenó a sus soldados a acercarse. Los soldados lo hicieron de '
             'manera salvaje y desordenada, y temiendo que John se asustase, '
             'Tars Tarkas les ordenó reagruparse. Dado que existen tres '
             'categorías de soldados, el grupo de soldados debe ordenarse de '
             'modo que los soldados de una misma categoría queden juntos ( el '
             'orden entre categorías no importa) . Ayuda a los soldados a '
             'acomodarse en una formación válida usando la menor cantidad de '
             'intercambios.',
  'input': "Una cadena C con caracteres ' A' , ' B' , ' C' que denotan las "
           'categorías de los soldados en el orden actual. Puedes suponer que '
           'existe la misma cantidad de soldados de cada categoría y que la '
           'cadena tiene menos de 1000000 caracteres.',
  'note': ' ',
  'output': 'Un entero N que sea el número mínimo de intercambios necesarios '
            'para llegar a una formación válida.',
  'title': 'El pelotón de soldados marcianos',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/El-peloton-de-soldados-marcianos'},
 {'history': ' ',
  'input': 'Un natural n que representa la cantidad de números y k que es el '
           'número que se desea. En la siguiente linea van los n números.',
  'note': ' ',
  'output': 'Un único entero que representa las formas de obtener el número '
            'deseado.',
  'title': 'Elemento objetivo',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Elemento-objetivo'},
 {'history': 'Dados dos valores a y b, calcular el valor de a^ b.',
  'input': 'Dos enteros a, b separados por un espacio tales que 1 ≤ a, b ≤ 9.',
  'note': ' ',
  'output': 'Un entero que sea el valor de a^ b.',
  'title': 'Elevando a alguna potencia',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Elevando-a-alguna-potencia'},
 {'history': 'Emiliano está trabajando como empacador en una tienda de '
             'autoservicio muy concurrida en su ciudad, sin embargo, algunas '
             'ocasiones su trabajo se le hace un poco tedioso, por lo que '
             'regularmente busca alternativas para distraerse mientras empaca '
             'el mandado. El día de hoy, Emiliano se ha encontrado haciendo '
             'cuentas mentalmente mientras empaca, para ello, se ha propuesto, '
             'que cuando el cajero le pase los N productos uno por uno, irá '
             'sumando su costo, con el objetivo de comparar el total a pagar '
             'por el cliente con el que él ha obtenido. Los N productos se '
             'los irá pasando el cajero, su precio, está marcado con una '
             'etiqueta verde debajo de cada producto. ProblemaCrea un programa '
             'que le permita a Emiliano verificar la suma del costo de los N '
             'productos antes de compararla con la de la caja.',
  'input': 'En el mismo orden: N - Como el número de productos que va a pagar '
           'el cliente. C1, C2, C3, . . . Cn - Como el costo de cada producto '
           'a pagar.',
  'note': ' ',
  'output': 'X - Como el monto total a pagar por el clinete, una vez sumandos '
            'totod los costos.',
  'title': 'Empacando mandado',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Empacando-mandado'},
 {'history': 'Recientemente leíste la definición de la palabra anagrama en '
             'uno de los tantos libros que lees. Un anagrama consiste en crear '
             'una nueva palabra recombinando las letras de la palabra '
             'original. Por ejemplo, la palabra RAMO tiene como posibles '
             'anagramas las palabras OMAR y MORA, entre otras posibilidades. '
             'Leerás dos palabras, S1 y S2. Tu trabajo será imprimir " '
             'ANAGRAMA! " , en caso de poder formar una a partir de la otra, '
             'si no se puede, deberás imprimir " NO : ( " . NOTA: las '
             'palabras que leas solo tendrán minúsculas.',
  'input': 'En la primera línea una cadena de texto que representa la palabra '
           'S1En la segunda línea otra cadena que representa la palabra S2',
  'note': ' ',
  'output': 'Debes imprimir " ANAGRAMA! " si ambas palabras son anagramas, y " '
            'No : ( " en caso contrario.',
  'title': 'Encontrando Anagramas',
  'topics': ['strings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Encontrando-Anagramas'},
 {'history': 'Eres un programador apasionado de la ciencia en general, debido '
             'a esto, un grupo de físicos te contrataron para ayudarles en su '
             'proyecto científico. Están estudiando un nueva interacción a '
             'nivel cuántica, la " fuerza omega" ( si, quien sabe quien le '
             'puso el nombre) , con esta fuerza pueden descubrir los misterios '
             'de la energía oscura. El problema es que solo tienen datos de '
             'sus experimentos en forma de una función de fuerza con respecto '
             'al tiempo, del estilo: " fω( 0) = 0, fω( 1) = 2, fω( 2) = 4" . '
             'Con estos datos no han podido encontrar una función matemática '
             'que pueda regir esta interacción, y la verdad ni les interesa, '
             'aunque sospechan que es una función polinomial. Debido a que '
             'solo les interesa el valor de fω en cierto tiempo t, y, como '
             'saben que los programadores hacen posible lo imposible, te han '
             'llamado a ti para ayudarles. ¿Podrás desvelar los misterios de '
             'la energía oscura?',
  'input': 'Un entero N que significa el número de experimentos que se '
           'hicieron, luego de esto N parejas de reales, que representan las '
           'parejas ordenadas ( t, fω( t) ) de cada uno de sus experimentos. '
           'Después un entero M seguido de M reales, que son los tiempos t '
           'donde se quiere evaluar la función. Puedes suponer que todos las '
           'las parejas están ordenadas de menor a mayor con respecto a t.',
  'note': ' ',
  'output': 'Para cada uno de los M reales, un real que representa la función '
            'evaluada en ese instante del tiempo. Como son ingenieros '
            'físicos, quieren que la respuesta tenga solo dos decimales '
            'redondeados de precisión.',
  'title': 'Encontrando la función omega',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Encontrando-la-funcion-omega'},
 {'history': 'Dado un conjunto de 1< = N< = 100 números enteros, determina en '
             'que lugar ( ordinal) queda el número K después de ordenar el '
             'conjunto en forma creciente. Puedes estar seguro de que el '
             'entero K solo aparecerá una vez en el conjunto.',
  'input': 'En la primera línea el entero N. En la segunda línea y separados '
           'por espacios, los N datos del conjunto. en la tercera líne el '
           'entero K.',
  'note': ' ',
  'output': 'El entero que denota en que posición queda el entero K, después '
            'de ordenar el conjunto. Considera que las posiciones se cuentan a '
            'partir de 0. EjemplosInputOutputDescription📋75 6 2 10 1 20 884Los '
            'datos del conjunto ordenados de forma creciente: 1 2 5 6 8 10 '
            '20K= 8 está en la posición 4.',
  'title': 'Encontrando la posición.',
  'topics': ['sortings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Encontrando-la-posicion'},
 {'history': 'Un número N, con dígitos ( d_ 1d_ 2 . . . d_ n) , se considera '
             'capicúa ( o palíndromo) si es igual a su reverso, denotado '
             'como ( d_ nd_ n- 1 . . . d_ 1) . Un procedimiento que puede '
             'generar un número capicúa a partir de un número N es el '
             'siguiente: Si N ya es capicúa, entonces terminamos. Si N no es '
             'capicúa, entonces a N le sumamos su reverso. El proceso '
             'anterior se repite hasta que N se considere capicúa. Toma en '
             'cuenta que aún no se sabe si siempre es posible generar un '
             'número capicúa, por lo cual, si N no es capicua pero ya es '
             'mayor a 10^ 9, entonces debes detenerte e imprimir - 1.',
  'input': 'Un entero N. Puedes suponer N ≥ 0.',
  'note': ' ',
  'output': 'Un entero que sea un capicúa o - 1 en caso de que no sea posible '
            'obtenerlo.',
  'title': 'Encuentra el número capicúa',
  'topics': ['strings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Encuentra-el-numero-capicua'},
 {'history': ' ',
  'input': ' ',
  'note': ' ',
  'output': ' ',
  'title': 'Encuentro de amigos post pandemia',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Encuentro-de-amigos-post-pandemi'},
 {'history': ' ',
  'input': 'En la primera línea el entero N. en las siguientes cuatro '
           'líneas, los datos id, nombre, peso y estatura de la primera '
           'persona, los datos de la segunda persona están en las 4 líneas '
           'siguientes y así sucesivamente para las N personas. Recuerda que '
           'el IMC de una persona se calcula dividiendo su peso entre el '
           'cuadrado de su estatura.',
  'note': ' ',
  'output': 'Una lista con N líneas, cada línea contiene el Id, Nombre e IMC '
            '( con 1 decimal) ordenados decrecientemente por IMC.',
  'title': 'Encuesta Reloaded',
  'topics': ['strings', 'sortings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Encuesta-Reloaded'},
 {'history': 'Acaba de estrenarse la consola de videjuegos de moda y hay mucha '
             'gente formada para comprarla en la venta nocturna. Los '
             'encargados de la tienda aprovecharán la gran afluencia para '
             'hacer una encuenta y saber cuántas personas de la cola se '
             'llaman igual. Ayúdalos a escribir un programa que contesta a '
             'esta pregunta. Tu programa deberá procesar una secuencia de N '
             'eventos de los siguientes tipos: E C: se formó un cliente con '
             'nombre C en la cola. P C: se desea conocer cuántas personas '
             'actualmente formadas en la cola tienen C por nombre. S: se '
             'atendió al siguiente cliente de la cola.',
  'input': 'Un entero N seguido de los N eventos a procesar. Puedes suponer '
           'que 0 ≤ N ≤ 500000, que todos los nombres están formados '
           'exclusivamente por entre 4 y 8 letras mayúsculas y que sólo se '
           'atienden clientes cuando hay gente formada.',
  'note': ' ',
  'output': 'Para cada evento del tipo P, la cantidad de personas formadas con '
            'el nombre dado.',
  'title': 'Encuestando a la gente de la cola',
  'topics': ['strings'],
  'url': 'https://omegaup.com/arena/problem/Encuestando-a-la-gente-de-la-col'},
 {'history': ' ',
  'input': 'Una variable entera A que representa la cantidad de personas que '
           'hay en la fila y las edades de cada una de las personas de la '
           'fila.',
  'note': ' ',
  'output': 'Un valor entero que representa la cantidad de personas que '
            'ingresaron a la sala a ver la pelicula. '
            'EjemplosInputOutput📋525301012163InputOutput📋85152032145243256',
  'title': 'Entrada al cine',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Entrada-al-cine'},
 {'history': 'En este problema, se te da un arreglo a que consta de n números '
             'enteros positivos. Se sabe que en este arreglo, todos los '
             'números excepto uno de los numeros son iguales ( por ejemplo, '
             'en el arreglo [ 4, 11, 4, 4] todos los números excepto 11 son '
             'iguales a 4) . ProblemaImprime el índice del elemento que no es '
             'igual a otros. Los números del arreglo se enlistan por medio de '
             'la secuencia a_ 1, a_ 2 , . . . , a_ n.',
  'input': 'La primera línea contiene un solo entero t ( 1 ⩽ t ⩽ 100) - la '
           'cantidad de casos de prueba. La primera línea de cada caso de '
           'prueba contiene un solo entero n ( 3 ⩽ n ⩽ 100) - la longitud del '
           'arreglo. La segunda línea para cada caso de prueba contiene n '
           'números enteros a_ 1, a_ 2 , . . . , a_ n - ( 1 ⩽ a_ i ⩽ 100) . '
           'Se te garantiza que todos los números excepto uno en el arreglo a '
           'seran iguales.',
  'note': ' ',
  'output': 'Para cada caso de prueba, un único entero - el índice del '
            'elemento que no es igual a los demás.',
  'title': '¡Espía detectado!',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Espia-detectado'},
 {'history': 'La famosa primatóloga y antropóloga Jane Goodall se dirige a '
             'Tanzania para investigar el comportamiento de múltiples '
             'familias de chimpancés salvajes. En preparación para su '
             'llegada, sus colaboradores elaboraron un mapa que indica la '
             'ubicación de las familias de chimpancés que la Dra. Goodall '
             'necesita investigar durante su expedición. El mapa consiste en '
             'una retícula rectangular de N filas por M columnas donde cada '
             'celda está marcada con una letra ‘C’ si en ese lugar habita una '
             'familia de chimpancés y con un punto ( ‘. ’) si en ese lugar no '
             'habita ninguna familia de chimpancés. Por ejemplo, el siguiente '
             'mapa de 5 filas por 10 columnas indica la ubicación de 4 '
             'familias de chimpancés: 📋. C. . . . . . . . . . . . . . . C. . '
             '. . . C. . . . . . . . . . . . . . . . . . . . . C. . . . Ayuda '
             'a la Dra. Goodall a contar el número de familias de chimpancés '
             'que estudiará durante su expedición.',
  'input': 'En la primera línea el número N de filas y M de columnas del '
           'mapa. En cada una de las siguientes N líneas, M caracteres '
           'indicando si en esa posición habita una familia de chimpancés o '
           'no.',
  'note': ' ',
  'output': 'El número de familias de chimpancés que estudiará la Dra. '
            'Goodall durante su expedición.',
  'title': 'Estudio de primates',
  'topics': ['strings'],
  'url': 'https://omegaup.com/arena/problem/Estudio-de-primates'},
 {'history': 'Como te gustan los métodos numéricos decidiste probar '
             'integración numérica con la única integral que encontraste '
             'que no se podía resolver con Wolfram. La gran integral de '
             'Gauss: ∫_ a^ be^ - x^ 2dx',
  'input': 'Un entero N seguido de N reales a, b.',
  'note': ' ',
  'output': 'Para cada una de las N parejas reales, un real que representa la '
            'integral evaluada desde a hasta b. Como eres ingeniero en '
            'computación, solo quieres averiguar los primeros tres decimales, '
            'pero ten mucho cuidado con la precisión.',
  'title': 'Evaluando la integral de Gauss',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Evaluando-la-integral-de-Gauss'},
 {'history': 'Escribe un programa que, dados los valores de las incógnitas x_ '
             '0, x_ 1, . . . , x_ n- 1, evalúe una secuencia de polinomios. '
             'Cada polinomio es una suma de productos de variables.',
  'input': 'El entero N seguido de N números en punto flotante, '
           'Posteriormente una secuencia de polinomios, uno por línea, los '
           'cuales deben procesarse hasta el fin de archivo. Puedes suponer '
           'que 1 ≤ N ≤ 10.',
  'note': ' ',
  'output': 'Por cada polinomio, un real que corresponda con la evaluación '
            'del polinomio. El valor impreso se considerará correcto si está '
            'razonablemente cerca del valor exacto.',
  'title': 'Evaluar polinomios',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Evaluar-polinomios'},
 {'history': ' ',
  'input': ' ',
  'note': ' ',
  'output': ' ',
  'title': 'Examen07-07-21',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Examen07-07-21'},
 {'history': ' ',
  'input': 'En la primera línea las coordenadas X, Y del vértcie A. En la '
           'segunda línea las coordenadas X, Y del vértice B. En la tercera '
           'línea las coordenadas X, Y del vértice C. En la cuarta línea '
           'las coordenadas X, Y del vértice D. En la quinta línea un entero '
           'que corresponde al radio del círculo. Puedes estar seguro de que '
           'las coordenadas de los vértices siempre formarán un rectángulo '
           'o un cuadrado.',
  'note': ' ',
  'output': 'Tu programa debe imprimir RECTANGULO ( si el radio es cero) . '
            'CUADRADO ( si el radio es cero) . CIRCULO INSCRITO ó '
            'CIRCULONOINSCRITO según sea el caso. Ejemplo: InputOutput📋1 - 5 '
            '622. 000000003. 00000000Limites: −105 ≤ A, B, C ≤ 105',
  'title': 'Sumas Continúas I',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Exhaust-sum-from-1-to-1000'},
 {'history': ' ',
  'input': 'Se te dará un número N que indica la cantidad de personas que '
           'hay en la nave. Seguido se te dará una lista de N números ei que '
           'indica el nivel de inexperiencia de cada tripulante',
  'note': ' ',
  'output': 'Un único número representado la cantidad máxima de grupos que '
            'se pueden hacer. EjemplosInputOutputDescription📋52 3 1 2 '
            '22Podemos dejar a la persona con inexperiencia 3 en la navey los '
            'grupos serían 1, 2 y 2, 2. Los grupos estan bienformados porque '
            'en cada grupo no hay un persona que tenga menospersonas que la '
            'experiencia de los integrantes. Además se puedever que es el '
            'mayor número de grupos que se pueden hacer. 📋42 2 1 '
            '13LimitesPara un 10',
  'title': 'Explorando un nuevo mundo',
  'topics': ['sortings'],
  'url': 'https://omegaup.com/arena/problem/Explorando-un-nuevo-mundo'},
 {'history': 'Escriba un programa que calcule las soluciones de una ecuación '
             'de segundo grado de la forma ax^ 2 + bx + c = 0, teniendo en '
             'cuenta que: x= - b±√( b^ 2 - 4ac) / 2a',
  'input': 'En las primeras tres lineas recibirás el valor de A, B y C',
  'note': ' ',
  'output': 'Mostrar el resultado de X_ 1 y X_ 2',
  'title': 'FCG',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/FCG'},
 {'history': ' ',
  'input': 'En la primera línea leeras un número entero',
  'note': ' ',
  'output': 'La serie de la descomposición de los factores primos',
  'title': 'Factores primos',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Factores-primos-'},
 {'history': 'La maestra de matematicas esta enojada > : v, porque los shabos '
             'no saben como sacar el factorial de un numero asi que deja una '
             'tarea voluntaria ( voluntariamente a fuerzas) y pues como tienes '
             'mucho tiempo libre pues dices porque no hago un programa que '
             'alfin y alcabo voy a terminar aprendiendo ( : v.',
  'input': 'Se ingresa un numero N y recuerda que factorial de 1 es 1 y '
           'factorial de 0 es 10> = N< = 30',
  'note': ' ',
  'output': 'Debe salir el numero y si sale con potencia se debe usar '
            'eEjemplosInputOutput📋01📋11📋6720📋302. 65253e+ 032',
  'title': 'Factorial de ASINUS',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Factorizar-de-ASINUS'},
 {'history': 'Whatsapp empezó a fallar hace unas horas junto con otras '
             'páginas web y te han pedido tu ayuda para reparar los daños '
             'devastadores antes de que todas las plataformas se consumen. '
             'Todos los chats de grupo se han borrado y lo unico que queda son '
             'listas de dos amigos que fueron parte de esos grupos. Puedes '
             'reconstruir los grupos uniendo todos los amigos que son mutuos. '
             'Por ejemplo, si Edgar y Marvin son amigos y Edgar y Miguel '
             'támbien son amigos, se puede formar un grupo con estas tres '
             'personas.',
  'input': 'Un número N de amistades, cada amistad tendra dos strings con los '
           'nombres de cada persona. Se puede asegurar que un par de personas '
           'nunca se repite.',
  'note': ' ',
  'output': ' ',
  'title': 'Fallas de Whatsapp',
  'topics': ['strings', 'sortings'],
  'url': 'https://omegaup.com/arena/problem/Fallas-de-Whatsapp'},
 {'history': 'Hacer un programa que realize la serie fibonacci - > 1 1 2 3 5 8 '
             '13. . . n',
  'input': 'En la primera línea recibiras el número de fibonacci a mostrar',
  'note': ' ',
  'output': 'Mostrar la serie fibonacci solicitada',
  'title': 'Fibonacci gigante',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Fibonacci-gigante'},
 {'history': 'Este problema consiste en calcular los números de la serie de '
             'Fibonacci, considerando: f( 0) = 0f( 1) = 1f( n) = f( n- 1) + f( '
             'n- 2)',
  'input': 'Recibirás múltiples valores enteros positivos N ( 0 ≤ N ≤ 3000) '
           '.',
  'note': ' ',
  'output': 'Para cada valor de N, mostrar f( N) . Cada valor generado debe '
            'aparecer en una línea.',
  'title': "Fibonacci's grandes",
  'topics': ['strings'],
  'url': 'https://omegaup.com/arena/problem/Fibonaccis-grandes'},
 {'history': 'Football the most popular sport in the world ( americans insist '
             'to call it Soccer, but we will callit Football) . As everyone '
             'knows, Brasil is the country that have most World Cup titles ( '
             'four ofthem: 1958, 1962, 1970 and 1994) . As our national '
             'tournament have many teams ( and even regionaltournaments have '
             'many teams also) it’s a very hard task to keep track of '
             'standings with so many teamsand games played! So, your task is '
             'quite simple: write a program that receives the tournament name, '
             'team names andgames played and outputs the tournament standings '
             'so far. A team wins a game if it scores more goals than its '
             'oponent. Obviously, a team loses a game if itscores less goals. '
             'When both teams score the same number of goals, we call it a '
             'tie. A team earns 3points for each win, 1 point for each tie and '
             '0 point for each loss. Teams are ranked according to these rules '
             '( in this order) : Most points earned. Most wins. Most goal '
             'difference ( i. e. goals scored - goals against) Most goals '
             'scored. Less games played. Lexicographic order.',
  'input': 'The first line of input will be the tournament name, on a single '
           'line. Tournamentnames can have any letter, digits, spaces etc. '
           'Tournament names will have length of at most 100. Then, in the '
           'next line, there will be a number T ( 1 < T ≤ 30) , which stands '
           'for the number of teamsparticipating on this tournament. Then will '
           'follow T lines, each one containing one team name. Teamnames may '
           'have any character that have ASCII code greater than or equal to '
           '32 ( space) , except for# and @ characters, which will never '
           'appear in team names. No team name will have more than '
           '30characters. Following to team names, there will be a non- '
           'negative integer G on a single line which stands forthe number of '
           'games already played on this tournament. G will be no greater than '
           '1000. Then, G lineswill follow with the results of games played. '
           'They will follow this format: 📋team_ name_ 1# goals1@ goals2# '
           'team_ name_ 2For instance, the following line: 📋Team A# 3@ 1# Team '
           'BMeans that in a game between Team A and Team B, Team A scored 3 '
           'goals and Team B scored 1. All goals will be non- negative '
           'integers less than 20. You may assume that there will not be '
           'inexistentteam names ( i. e. all team names that appear on game '
           'results will have apperead on the team namessection) and that no '
           'team will play against itself.',
  'note': ' ',
  'output': 'For each tournament, you must output the tournament name in a '
            'single line. In the next T lines youmust output the standings, '
            'according to the rules above. Notice that should the tie- breaker '
            'be thelexographic order, it must be done case insenstive. The '
            'output format for each line is shown bellow: [ a] ) Team_ name [ '
            'b] p, [ c] g ( [ d] - [ e] - [ f] ) , [ g] gd ( [ h] - [ i] ) '
            'Where: * [ a] = team rank* [ b] = total points earned* [ c] = '
            'games played* [ d] = wins* [ e] = ties* [ f] = losses* [ g] = '
            'goal difference* [ h] = goals scored* [ i] = goals againstThere '
            'must be a single blank space between fields and a single blank '
            'line between output sets. See the sample output for examples.',
  'title': 'Football (aka soccer)',
  'topics': ['strings', 'sortings'],
  'url': 'https://omegaup.com/arena/problem/Football-aka-soccer'},
 {'history': 'Historia de relleno para el programaTu trabajas en una zona de '
             'arqueología, genial, aunque tu no eres el que excava y '
             'encuentra los huesos de dinosaurios, a ti te contrataron para '
             'que hagas un programa que analizara la zona. La zona tiene '
             'alrededor de N fósiles, el equipo de excavación llegara dentro '
             'de K días, pero la tierra de esa zona hace que los fósiles se '
             'hundan mas profundo, cada día se hunde 1 metros, el equipo que '
             'te llegara en unos días, solo podrá excavar R metros, tu '
             'trabajo es crear un programa que logre predecir que fósiles '
             'podrán ser excavados por el equipo que llegara en K días. '
             'Cuando pasa un día el primer fósil ingresado bajara una '
             'casilla abajo, luego el siguiente día bajara el primero y el '
             'segundo fósil, el siguiente día, el primero bajara, luego el '
             'segundo, luego el tercer y así consecutivamente, si un fósil '
             'esta abajo de la cantidad de metros que puede excavar el equipo, '
             'sera marcado con el numero 2 y si se puede excavar, sera marcado '
             'con un 1. La zona consta de una cuadro de 10 metros de largo y '
             'por ( 1 < M< = 100) de profundidad hacia abajo, el cual se puede '
             'representar de esta manera: InputOutput📋* * ( X = 10) * * 0 0 0 '
             '0 0 0 0 0 0 0 * * ( Y = 6) * * 0 0 0 1 0 0 0 0 0 0 ( profundidad '
             'de la cueva) 0 1 0 0 0 0 0 0 0 0 ( los 1 son fósiles y los) 0 0 '
             '1 0 0 0 0 0 0 0 ( 0 son espacios de tierra) 0 0 1 0 0 0 0 0 0 00 '
             '0 0 0 0 0 0 0 0 0',
  'input': 'El programa deberá introducir un numero R que representara que '
           'tantos metros podrá excavar el equipo, seguido de un numero N con '
           'un valor Z, que son la cantidad de fósiles en la zona, seguido '
           'por la posición en X de los fósiles, para por ultimo, introducir '
           'la cantidad K de días que pasaran antes de que el equipo llegue.',
  'note': ' ',
  'output': 'La salida consta de una matriz unidimensional mostrando los '
            'fósiles en el terreno y mostrando con un 1 los fósiles que '
            'podrán ser sacados con el equipo y con un 2 los que se perderán '
            'en la tierra, la matriz siempre sera una matriz de 10x10.',
  'title': 'Fosiles pokemon',
  'topics': ['sortings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Fosiles-pokemon'},
 {'history': 'En este ejercicio deberás contar las veces que aparece una '
             'letra l en la palabra p',
  'input': 'Una palabra p seguida de una letra l',
  'note': ' ',
  'output': 'La frecuencia de l en la palabra p',
  'title': 'Frecuencia de una letra',
  'topics': ['strings'],
  'url': 'https://omegaup.com/arena/problem/Frecuencia-de-una-letra'},
 {'history': 'Iancarlo es un gran desencriptador. El sabe que cualquier '
             'cifrado en el mundo puede romperse por un analisis de '
             'frecuencias, sin embargo tiene una idea completamente erronea de '
             'lo que significa analisis de frecuencias. Iancarlo intercepto un '
             'mensaje de su enemigo Isaias. El mensaje de Isaias consiste de N '
             'numeros, todos menores o igual a C. Iancarlo cree que el '
             'analisis de frecuencia consiste de ordenar la secuencia de '
             'numeros de tal forma que los numeros mas frecuentes aparecen '
             'antes que los numeros menos frecuentes. Formalmente, la '
             'secuencia debe ser ordenada de tal forma que para cualesquiera '
             'dos numeros X y Y, X aparece antes que Y si el numero de veces '
             'que X aparece en la secuencia original es mayor que el numero de '
             'veces que Y aparece. Si el numero de apariciones es el mismo, el '
             'número que aparece primero en la secuencia original, debe '
             'aparecer antes en la secuencia ordenada. Ayuda a Iancarlo a " '
             'descifrar" el codigo de Isaias.',
  'input': 'En la primera linea vienen dos numeros enteros positivos N y C, la '
           'longitud del mensaje, y el numero de la descripción '
           'respectivamente. La siguiente linea contiene N enteros menores o '
           'iguales que C , el mensaje de Isaias.',
  'note': ' ',
  'output': 'En una sola linea, debes imprimir los N enteros de la secuencia '
            'ordenada con un espacio entre cada uno.',
  'title': 'Frequency Sort',
  'topics': ['sortings'],
  'url': 'https://omegaup.com/arena/problem/Frequency-Sort'},
 {'history': 'En la ciudad de Wakanda se esta llevando a cabo una guerra entre '
             'algunos de nuestros queridos y amados super- héroes los '
             'vengadores contra las tropas del maligno Thanos. La batalla se '
             'estima que sera de proporciones épicas, pero puede que la '
             'fuerza de los vengadores no sea suficiente como para derrotar a '
             'los rivales. Para la suerte de los vengadores Felipe esta al '
             'rescate, pero Felipe es un super- héroe tan fuerte que sus '
             'poderes igual lo dañan; por lo cual sus poderes se deben usar '
             'en la menor cantidad posible. ProblemaLa batalla entre ambos '
             'equipos ( vengadores y enemigos) esta balanceada en cuanto '
             'integrantes. Ambos tienen N miembros en su equipo y cada miembro '
             'cuenta con una fuerza F_ i. Para saber que equipo va ganar se '
             'calculan los Puntos de victoria. Los puntos de victoria que '
             'tiene cada equipo se calcula de la siguiente forma: tomas a cada '
             'miembro de los vengadores A_ i ( 1< = i < = N) y comparas la '
             'fuerza de todos contra cada uno de los integrantes del equipo de '
             'Thanos T_ j ( 1< = j< = N) . Si la fuerza del vengador es mayor, '
             'los vengadores ganan un punto, si es igual nadie recibe punto y '
             'si es menor el equipo de Thanos recibe un punto. Haces la '
             'comparación para cada posible par de A_ i y T_ j para obtener '
             'los puntos en total. Si el equipo de los vengares tiene más '
             'puntos significa que ellos ganan, si esto sucede debes imprimir '
             '" Avengers" y por cuantos puntos ganan. De lo contrario '
             'significa que Felipe debe actuar para darle más puntos de '
             'victoria a los vengadores, así que debes imprimir " Thanos" y '
             'un número indicando el mínimo número de puntos que necesitan '
             'los vengadores para ganarle al equipo de Thanos',
  'input': 'Un único número entero N que el indica el número de integrantes '
           'que tiene cada equiposEn la siguiente linea N números enteros '
           'positivos separados por un espacio representando la fuerza de cada '
           'integrante de los vengadoresEn la siguiente linea N números '
           'enteros positivos separados por un espacio representando la fuerza '
           'de cada integrante del grupo de Thanos',
  'note': ' ',
  'output': 'Una palabra " Thanos" o " Avengers" dependiendo de quien gane. En '
            'otra linea un entero S representando lo dicho en el problema.',
  'title': 'Dándole fuerza a los Vengadores',
  'topics': ['sortings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Fuerza-a-los-Vengadores'},
 {'history': ' ',
  'input': ' ',
  'note': ' ',
  'output': ' ',
  'title': 'Funciones',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Funciones-UTM'},
 {'history': 'Un punto P en el espacio tridimensional tiene coordenadas '
             'enteras ( P_ X, P_ Y, P_ Z) . Definiremos una función f que '
             'toma dos puntos A, B como parámetros y que regresa un punto '
             'usando el siguiente algoritmo: Si A_ X < B_ X, entonces: Regresa '
             'A. Sino pero si A_ Y > B_ Y, entonces: Regresa B. Sino entonces: '
             'Regresa un punto con coordenadas ( A_ X + B_ X, A_ Y, B_ Z) . '
             'Dados tres puntos P, Q, R, escribe un programa que calcule e '
             'imprima los puntos S = f( f( P, Q) , R) y T = f( P, f( Q, R) ) .',
  'input': 'Nueve enteros P_ X, P_ Y, P_ Z, Q_ X, Q_ Y, Q_ Z, R_ X, R_ Y, R_ '
           'Z. Puedes suponer que todos los enteros están en el rango de - '
           '100 a + 100.',
  'note': ' ',
  'output': 'Seis enteros S_ X, S_ Y, S_ Z, T_ X, T_ Y, T_ Z separados por '
            'espacios.',
  'title': 'Funciones con puntos tridimensionales',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Funciones-con-puntos-tridimensio'},
 {'history': 'Has sido contratado para trabajar en el gobierno de MEXICO, y te '
             'asignaron a trabajar con un grupo de ingenieros que se encargan '
             'de administrar la base de datos. Se dividieron el trabajo y a ti '
             'te toco crear el software que valida las CURP de las personas. A '
             'continuación se muestra las características de la CURP.',
  'input': 'Una cadena de texto de longitud variable que se quiere validar si '
           'es una CURP. ( Maximo 50 chars) Nombre de la Persona ( Maximo 50 '
           'chars) Fecha de Nacimiento de la persona con el siguiente formato '
           'DD- MM- YY ( Dia- Mes- Año) . ( Siempre es el mismo formato y la '
           'misma longitud) Clave de Entidad de Nacimiento ( Siempre son 2 '
           'letras) Aspectos a comprobar',
  'note': ' ',
  'output': 'Imprimir " valido" si es una CURP con formato correcto o invalido '
            'si no cumple con TODOS los requisitos.',
  'title': 'Gobierno De Mexico 1',
  'topics': ['strings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Gobierno-De-Mexico-1'},
 {'history': ' ',
  'input': 'Un número n que indica el número de villanos y k que es el daño '
           'que hace Elías al villano en un batalla. Seguido n números r_ i '
           'que fueron mencionados anteriormente.',
  'note': ' ',
  'output': 'n números que representan el orden en que fueron vencidos los '
            'villanos.',
  'title': 'Golpeando villanos',
  'topics': ['sortings'],
  'url': 'https://omegaup.com/arena/problem/Golpeando-villanos'},
 {'history': 'Un lienzo será una matriz de N× N sobre el cuál caerán G '
             'gotas de tinta negra, una por una. Cada que cae una gota en una '
             'posición dada, esta posición se ennegrece un poco más, hasta '
             '3 niveles de intensidad. Debes mostrar cómo quedará el lienzo '
             'al final del goteo. Una posición donde no ha caído ninguna '
             'gota será representada por el símbolo " . " ( punto) . '
             'Conforme caigan gotas en una misma posición, el símbolo '
             'utilizado será " - " , luego " + " , y hasta llegar a " # " .',
  'input': 'Las primeras dos líneas contienen los enteros N y G, '
           'respectivamente. Seguidas de G lineas, cada una con una pareja de '
           'enteros r, c separados por espacio, representando el renglón y '
           'columna del lienzo donde cae una gota. La numeración de renglones '
           'y columnas empieza desde 0, y puedes suponer que 1≤ N ≤ 30 y que '
           '1≤ G ≤ N^ 2.',
  'note': ' ',
  'output': 'La matriz de N× N, con sus símbolos separados por espacio.',
  'title': 'Goteando un lienzo',
  'topics': ['strings'],
  'url': 'https://omegaup.com/arena/problem/Goteando'},
 {'history': ' ',
  'input': ' ',
  'note': ' ',
  'output': ' ',
  'title': 'Greedy Artisan',
  'topics': ['sortings'],
  'url': 'https://omegaup.com/arena/problem/Greedy-Artisan'},
 {'history': 'En un planeta de robots, los idiomas más utilizados son el '
             'idioma " 0" y el idioma " 1" , los cuales no constan de palabras '
             'sino de números. Afortunadamente cuentas con un diccionario '
             'bilingüe para poder realizar traducciones entre ambos idiomas. '
             'Escribe un programa que lea el contenido de tu diccionario y que '
             'posteriormente realice las traducciones solicitadas.',
  'input': 'Un entero N seguido de una secuencia de N parejas de enteros P_ 0, '
           'P_ 1 donde cada pareja indica que el número P_ 0 en el idioma " '
           '0" corresponde con el número P_ 1 en el idioma " 1" . '
           'Posteriormente un entero M seguido de una secuencia de M parejas '
           'de enteros D, P donde cada pareja indica que se desea traducir el '
           'número P del idioma D al otro idioma del planeta. Puedes suponer '
           'que 0 ≤ N, M ≤ 100, 000, 0 ≤ D ≤ 1, que no hay números repetidos '
           'en el diccionario y que están en el rango de 0 a 10^ 9.',
  'note': ' ',
  'output': 'Para cada traducción, un entero que corresponda con el resultado '
            'de la misma o - 1 si la traducción no puede realizarse.',
  'title': 'Hablando entre robots',
  'topics': ['sortings'],
  'url': 'https://omegaup.com/arena/problem/Hablando-entre-robots'},
 {'history': ' ',
  'input': 'La entrada consiste en N casos de prueba. La primera línea de la '
           'entrada solo contiene el entero positivo N. Luego, siga los casos. '
           'Cada caso consta de exactamente una línea con dos enteros '
           'positivos A B separados por espacio. Estos son los números '
           'invertidos que debes agregar.',
  'note': ' ',
  'output': ' ',
  'title': 'Hackers',
  'topics': ['strings'],
  'url': 'https://omegaup.com/arena/problem/Hackers_cpp'},
 {'history': ' ',
  'input': ' ',
  'note': ' ',
  'output': ' ',
  'title': 'Help Cupid',
  'topics': ['sortings'],
  'url': 'https://omegaup.com/arena/problem/Help-Cupid'},
 {'history': 'En una primaria se se lleva a cabo una encuesta anual para '
             'conocer cuál es la letra preferida de los niños que recién '
             'aprenden a leer. Se genera un archivo con las respuestas de '
             'todos los alumnos del primer año y posteriormente se elabora '
             'una gráfica de barras horizontales en la que se identifica la '
             'letra y el porcentaje que representa del total capturado. Los '
             'directivos de la primaria solicitaron la ayuda del ITESS para '
             'automatizar esta tarea. ¿Podrás ayudarles?',
  'input': 'Un entero N que representa la cantidad de niños encuestados. N '
           'letras mayúsculas separadas por espacios.',
  'note': ' ',
  'output': 'Un histograma horizontal en el que se indique la letra y el '
            'porcentaje que representa del total.',
  'title': 'Histograma de letras',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Histograma-de-letras'},
 {'history': 'Elabora un programa que permita introducir un nombre por teclado '
             'y desplegar un saludo de bienvenida. InputOutput📋JuanHola Juan '
             'bienvenid@ a PRO- 111',
  'input': ' ',
  'note': ' ',
  'output': ' ',
  'title': 'Hola PRO-111',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Hola-PRO-111'},
 {'history': 'Los programadores mayas estan callendo por el hoyo sin fin, pero '
             'un misterioso hombre mágico oculto en las sombras del templo '
             'decide ayudarlos con el poder de volar. Para ello necesita '
             'darles N poderes, cada poder tiene un nivel mágico, sin '
             'embargo, ellos no pueden recibir los poderes en cualquier orden, '
             'tienen que recibirlos tal que: | a_ 1 - a_ 2 | ≤| a_ 2 - a_ 3 | '
             '≤| a_ 3 - a_ 4 | ≤ . . . ≤| a_ n- 1 - a_ n | . De no ser así, '
             'morirán por los cambios de magía tan drasticos. ProblemaAyuda '
             'al misterioso hombre proporcionando la secuencia que debe lanzar '
             'los poderes a los programadores mayas.',
  'input': 'En la primeria línea un número N que es la cantidad de poderes '
           'que tiene el misterioso hombre, seguido de N líneas donde N_ i es '
           'el nivel que tiene el i- ésimo poder.',
  'note': ' ',
  'output': 'N números que representan el arreglo que satisface las '
            'condiciones. Cualquier arreglo que cumpla las condiciones será '
            'tomado como correcto. Si logras hacer que la condición se cumpla '
            'parcialmente recibirás algunos puntos. Por ejemplo, el arreglo '
            '8, 9, 10, 4, 2, 3 no cumple la condición en todo el arreglo. '
            'Pero los primeros 4 elementos si ( | 8- 9| = 1 ≤ | 9 - 10| = 1 ≤ '
            '| 10 - 4| = 6) , entonces no se te dan todos los puntos pero si '
            'algunos. ( Mientras más números cumplan la condición más '
            'puntos tendrás) InputOutputDescription📋65 - 2 4 8 6 55 5 4 6 8 - '
            '2Este caso se cumple la condición de la siguiente manera: | 5 - '
            '5 | ≤| 5 - 4 | ≤| 4 - 6 | ≤| 6- 8 | ≤| 8 - ( - 2) | 📋48 1 4 21 2 '
            '4 8Límites1 ≤ N ≤ 10^ 51 ≤ N_ i ≤ 10^ 9',
  'title': 'Hombre misterioso',
  'topics': ['sortings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Hombre-misterioso'},
 {'history': 'En la feria de ciencias de este año se organizaron muchos '
             'eventos en diferentes puntos de tu escuela, pero '
             'desafortunadamente no podrás asistir a todos los eventos debido '
             'a que algunos horarios están empalmados. Tu consuelo será el '
             'asistir a la mayor cantidad posible de eventos distintos '
             'completos. Dada la lista de tiempos de inicio y fin de cada '
             'evento, escribe un programa que calcule a cuántos eventos '
             'puedes asistir.',
  'input': 'Un entero N seguido de N parejas de enteros T_ i, F_ i que denotan '
           'los tiempos de inicio y de fin del i- ésimo evento. Puedes '
           'suponer que 1 ≤ N ≤ 100, 000 y que 0 ≤ T_ i < F_ i ≤ 1, 000, 000 '
           'para 1 ≤ i ≤ N.',
  'note': ' ',
  'output': 'Un entero que denota la mayor cantidad de eventos a los cuales es '
            'posible asistir.',
  'title': 'Horarios empalmados',
  'topics': ['sortings'],
  'url': 'https://omegaup.com/arena/problem/Horarios-empalmados'},
 {'history': 'A el grupo de Yoselin le dejaron una tarea para que investigaran '
             'los numeros Hyperpares Capicuas, y encontraron que dichos '
             'numeros son aquellos que todos su digitos son pares y que se '
             'leen de la misma forma que de izquierda a derecha al igual que '
             'de derecha a izquierda, pero ella quiero optimizar ya que se le '
             'hace muy complicado programar, ella pide tu ayuda para encontrar '
             'una solucion necesaria.',
  'input': 'Un solo numero entero para hacerle la prueba si es o no Capicua.',
  'note': ' ',
  'output': 'Un texto que dira " Hyperpar Capicua" en caso de que se cumplan '
            'los casos, en caso contrario " Numero no Hyperpar Capicua" sin '
            'comillas.',
  'title': 'Hyperpar Capicua',
  'topics': ['strings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Hyperpar-Capicua'},
 {'history': 'Al momento de hablar de videojuegos no puedes omitir hablar del '
             'juego más jugado de los últimos años ̈Minecraft ̈. Por lo '
             'menos es lo que Santy dice. La parte favorita de Santy del juego '
             'consiste en minar. Esta es una actividad muy satisfactoria y '
             'desestresante. En el juego puedes buscar minas naturales que son '
             'generadas por el juego o artificiales que son minas que tu '
             'creas. La forma más eficiente de crear una mina artificial es '
             'haciendo una línea recta. Lamentablemente al ser artificial no '
             'existe iluminación dentro de la mina. Sin embargo, existen '
             'artefactos llamados antorchas. Las antorchas son elementos que '
             'colocas en una posición x ( un bloque) e ilumina todas las '
             'posiciones [ x−k, x+ k] donde k es el radio de iluminación de '
             'las antorchas. Por ejemplo, si el radio de iluminación es de 2 '
             'y colocas la antorcha en el bloque 10 entonces los bloques desde '
             'el 8 hasta el 12 van a quedar iluminados. Obviamente Santy '
             'quiere que toda su mina se encuentre iluminada. Pero otro dato a '
             'considerar es que muchas veces al crear las minas artificiales '
             'te encuentras con lugares interesantes. Además de querer '
             'iluminar toda su mina, Santy quiere que exista una antorcha en '
             'estos lugares interesantes para tener cierta marca de estos. '
             'ProblemaSe tiene una mina unidimensional de N bloquees, '
             'numerados del 0 al N−1. Dentro de la mina existen M lugares '
             'interesantes en los bloquees a1, . . . , aM que requieren tener '
             'una antorcha. Teniendo en cuenta que el radio de iluminación de '
             'las antorchas es de k, ayuda a Santy a saber la mínima cantidad '
             'de antorchas que santy necesita para iluminar toda su mina.',
  'input': 'Tres enteros N, M, k que representan la cantidad de bloquees en la '
           'mina, el número de lugares interesantes y el radio de '
           'iluminación de las antorchas respectivamente. En la siguiente '
           'línea se te darán M enteros ordenados de menor a mayor que '
           'representan las posiciones de los lugares interesantes.',
  'note': ' ',
  'output': 'La cantidad mínima de antorchas necesarias para iluminar la mina',
  'title': 'Iluminando la Mina',
  'topics': [],
  'url': 'https://omegaup.com/arena/problem/Iluminando-la-Mina'},
 {'history': 'Siempre activa, Susana Distancia se comprometió a informar '
             'telefónicamente a todos los habitantes de la ciudad acerca de '
             'las medidas de sana distancia. Para ello, ha conseguido a '
             'través del gobierno de la ciudad una lista que contiene los '
             'números de todos los habitantes, además de que ella tiene su '
             'propia lista de los números a los que ya llamó para informar. '
             'Desafortunadamente su lista estaba desordenada y puede tener '
             'números repetidos, además de que la lista del gobierno '
             'también está desordenada. Afortunadamente, Susana Distancia '
             'cuenta con tu ayuda para generar una lista ordenada de los D '
             'números distintos T_ 1, T_ 2, . . . , T_ D a los que falta por '
             'llamar.',
  'input': 'En el primer renglón, dos enteros positivos N y M. En el '
           'siguiente renglón, los N números G_ 1, G_ 2, . . . , G_ N en la '
           'lista del gobierno. En el siguiente renglón, los M números S_ 1, '
           'S_ 2, . . . , S_ M en la lista de Susana Distancia.',
  'note': ' ',
  'output': 'En el primer renglón el entero D. En el siguiente renglón, los '
            'D números T_ 1, T_ 2, . . . , T_ D en orden creciente. Límites1 '
            '≤ N ≤ 10^ 51 ≤ M ≤ 10^ 510^ 8 ≤ G_ I < 10^ 9 para cada 1 ≤ I ≤ '
            'N10^ 8 ≤ S_ J < 10^ 9 para cada 1 ≤ J ≤ M',
  'title': 'Informando a los desinformados',
  'topics': ['sortings'],
  'url': 'https://omegaup.com/arena/problem/Informando-a-los-desinformados'},
 {'history': 'Eres un fanático de las cadenas de longitud L y finalmente has '
             'decidido comenzar tu colección, pero para que ésta se preserve '
             'para la posteridad, deseas almacenarla en un archivo. Para poder '
             'identificar tus cadenas más fácilmente, cada nueva cadena de '
             'tu colección recibirá un identificador numérico único e '
             'incremental ( de modo que la primera cadena de tu colección '
             'será la cadena 0, la siguiente será la cadena 1 y así '
             'sucesivamente) . Sin embargo, sabes que eres muy impulsivo y en '
             'ocasiones agregarás cadenas a tu colección que después ya no '
             'te gustarán, por lo que también deseas poder borrarlas. Para '
             'esto, cada cadena S de tu colección aparecerá en el archivo '
             'con el formato + IS_ 1S_ 2 . . . S_ L donde I es el '
             'identificador numérico de tu cadena a cuatro dígitos ( por '
             'ejemplo, el identificador 0 aparecerá como 0000 mientras que el '
             'identificador 123 aparecerá como 0123. Has decidido también '
             'que la operación para borrar una cadena debe ser sumamente '
             'eficiente, por lo que la única modificación que realizarás en '
             'el archivo es cambiar el símbolo inicial del registro de + a - '
             '( es decir, el registro de una cadena existente + IS_ 1S_ 2 . . '
             '. S_ L pasará a verse como - IS_ 1S_ 2 . . . S_ L al borrar la '
             'cadena) . Por otra parte y para que evitar que el archivo crezca '
             'demasiado, reutilizarás el espacio de las cadenas que ya '
             'borraste al insertar nuevas cadenas. En caso de que haya varias '
             'cadenas borradas, preferirás reutilizar el espacio de la que '
             'borraste primero. Si no hay espacio por reutilizar entonces tu '
             'nueva cadena se agregará al final del archivo. Finalmente, has '
             'decidido que los identificadores numéricos no los reciclarás: '
             'la I- ésima cadena insertada tendrá identificador numérico I '
             'aún si varias cadenas previas fueron borradas. Escribe un '
             'programa que mantenga y actualice tu colección de cadenas.',
  'input': 'Dos enteros N y L seguidos de una secuencia de N eventos, uno por '
           'línea. Un evento del tipo A S corresponde con la inserción de la '
           'cadena S ( el identificador numérico de la cadena debe calcularse '
           'automáticamente) . Un evento del tipo B I corresponde con el '
           'borrado de la cadena con identificador I. Puedes suponer que 0 ≤ N '
           '≤ 1, 000, que 1 ≤ L ≤ 10, 000, que la cadena I en un evento de '
           'borrado está en ese momento en la colección y que todas las '
           'cadenas están formadas por caracteres ASCII gráficos.',
  'note': ' ',
  'output': 'El contenido del archivo después de los N eventos. NotaYa que '
            'OmegaUp vincula la salida estándar a un archivo, un programa '
            'podrá modificar su salida utilizando rutinas de posicionamiento '
            'en archivos ( por ejemplo, fseek o rewind) sobre stdout o '
            'equivalente.',
  'title': 'Inserción y borrado de registros',
  'topics': ['strings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Insercion-y-borrado-de-registro'},
 {'history': ' ',
  'input': ' ',
  'note': ' ',
  'output': ' ',
  'title': 'Inserting Ominoes',
  'topics': [],
  'url': 'https://omegaup.com/arena/problem/Inserting-Ominoes'},
 {'history': 'ITSURITO está programado en java, él es muy cuidadoso al '
             'programar, es tan cuidadoso que siempre declara una sola '
             'variable de referencia por línea y en la misma línea siempre '
             'crea la instancia de la clase y la asigna a su variable. Por '
             'ejemplo, para declarar sus variables y crear las instancias de '
             'clase lo hace de la siguiente manera: Integer miVariable = new '
             'Integer( “5”) ; ITSURITO te ha pedido que dado una lista de '
             'variables de referencia declaradas e inicializadas y una lista '
             'de asignaciones entre las diferentes variables de referencia, le '
             'indiques cuántos objetos siguen siendo referenciados en el '
             'código.',
  'input': 'Un número D, que indica el número de líneas que declaran '
           'variables de referencia y crean una instancia, seguido de un '
           'número A que indica el número de lineas que contienen '
           'asignaciones. En seguida D líneas donde cada Di contiene una '
           'cadena que representa una línea de código que realiza una '
           'declaración e instancia de una clase, seguido de A líneas de '
           'código que realizan una asignación de variables. La línea de '
           'código puede contener caracteres del alfabeto inglés ( a- z y/ o '
           'A- Z) , digitos del 0 al 9 y los siguientes signos: " ; " " . " " '
           '= " y espacios en blanco.',
  'note': ' ',
  'output': 'Un número N, que indica cuantas instancias están referenciadas '
            'al finalizar.',
  'title': 'Instancias de clases',
  'topics': ['strings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Instancias-de-clases'},
 {'history': 'Completar el programa dado codificando la función '
             'IntercalacionStrings, la cual debe ser una función recursiva '
             'que reciba dos strings A y B, y que retorne la intercalación de '
             'ambos, como una cadena formada por caracteres intercalados de A '
             'y B, tomados de derecha a izquierda. Observación: Los '
             'profesores revisarán el código de la función que ud. suba, '
             'porque la misma debe codificarse de manera recursiva ( las '
             'soluciones iterativas no obtendrán puntos) .',
  'input': 'La entrada consiste de dos líneas: La primera contiene el string '
           'A ( el cual puede tener hasta 80 caracteres) , y la segunda '
           'contiene el string B ( el cual puede tener hasta 80 caracteres)',
  'note': ' ',
  'output': 'La Salida contiene una única cadena con el contenido de la '
            'intercalación de derecha a izquierda según se describió más '
            'arriba. InputOutput📋AMORROSARAOSMOAR📋FanSNUe ta TUTN Santa Fe',
  'title': 'Intercalación de Strings',
  'topics': ['strings'],
  'url': 'https://omegaup.com/arena/problem/Intercalacion-de-Strings'},
 {'history': 'Existen una gran cantidad de operaciones con cadenas. El '
             'propósito de este ejercicio es que implementes dos de ellas. La '
             'primera operación se llama inversión y consiste en '
             'intercambiar el primer carácter de una cadena con el último, '
             'el segundo con el penúltimo, y así sucesivamente, hasta que la '
             'cadena original quede invertida. Por ejemplo, la inversión de '
             'la cadena trimestre es la cadena ertsemirt. La segunda '
             'operación se llama intercalación y consiste en tomar dos '
             'cadenas e intercalar sus caracteres. Es más fácil explicar '
             'esta operación con algunos ejemplos: La intercalación de adios '
             'y hola es la cadena ahdoiloas. La intercalación de hola y adios '
             'es la cadena haodliaos. Observa que la cadena intercalada '
             'comienza con un carácter de la primera cadena, continúa con un '
             'carácter de la segunda, y así sucesivamente, hasta que una de '
             'las dos cadenas se acaba y simplemente se pegan al final los '
             'caracteres restantes de la otra. Sugerencia: escribe una '
             'función inversion( s, t) que ponga la inversión de s en t, y '
             'una función intercalacion( r, s, t) que ponga la intercalación '
             'de r y s en t.',
  'input': 'Consiste de dos cadenas A, B, que pueden contener espacios, una en '
           'cada renglón y con un máximo de 100 caracteres cada una.',
  'note': ' ',
  'output': 'Consiste de la inversión de A, la inversión de B, la '
            'intercalación de A y B, la intercalación de B y A, la '
            'intercalación de A con la inversión de A, y la intercalación '
            'de B con la inversión de B, cada una en un renglón.',
  'title': 'Inversiones e intercalaciones',
  'topics': ['strings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Inversiones-e-intercalaciones'},
 {'history': ' ',
  'input': ' ',
  'note': ' ',
  'output': ' ',
  'title': 'Islotes',
  'topics': ['strings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Islotes'},
 {'history': ' ',
  'input': 'Consiste en una línea del texto que se debe descifrar.',
  'note': ' ',
  'output': 'Consiste en una línea de texto con el mensaje descifrado.',
  'title': 'JERIGONZA',
  'topics': ['strings'],
  'url': 'https://omegaup.com/arena/problem/JERIGONZA'},
 {'history': 'Alicia notó que, en el mundo a través del espejo, la gente '
             'temía a ciertas criaturas, principalmente al Jabberwock, al '
             'Jubjub y a las Roburlezas. Sin embargo, la intensidad con que la '
             'gente teme a esas criaturas varía de persona a persona. Alicia '
             'le preguntó a una persona a cuál de las tres criaturas le '
             'temía más, luego cuál le seguía y finalmente a cuál le '
             'temía menos. Si representamos con la " J" al Jabberwock, con la '
             '" U" al Jubjub y con la " R" a las Roburlezas, anota el orden de '
             'las criaturas dado por la persona.',
  'input': 'Las tres palabras " Jabberwock" , " Jubjub" y " Roburlezas" en un '
           'orden particular, separadas por espacios.',
  'note': ' ',
  'output': 'Las tres letras " J" , " U" y " R" en el orden correspondiente a '
            'la entrada, separadas por espacios.',
  'title': 'Jabberwocky',
  'topics': ['strings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Jabberwocky'},
 {'history': ' ',
  'input': 'Un número N seguido de N enteros, a0, a1, . . . , an- 1.',
  'note': ' ',
  'output': 'El máximo producto que se puede hacer escogiendo dos números '
            'del arreglo',
  'title': 'John Freddy y los numeros',
  'topics': ['sortings'],
  'url': 'https://omegaup.com/arena/problem/John-Freddy-y-los-numeros'},
 {'history': 'Juan ya ha podido juntar las cajas y las esta repartiendo. Pero '
             'para comprobar que la persona que recibe la caja es a quien iba '
             'dirigida, la empresa de Juan diseño un sistema muy simple, le '
             'dan una palabra en letras minusculas y una letra para luego '
             'preguntarle cuanto mide la palabra y cuantas veces aparece la '
             'letra. Pero juan no tiene las respuestas porque perdio la lista '
             'cuando se cayeron las cajas, por lo que te ha pedido tu ayuda '
             'para que les digas las respuestas de los codigos y el pueda '
             'preguntarselo a los dueños de las cajas.',
  'input': 'En la primer linea una palabra de longitud x. En la segunda linea '
           'un caracter n.',
  'note': ' ',
  'output': 'Dos lineas una diciendo la longitud de la palabra y la segunda '
            'diciendo cuantas veces aparece el caracter que se pregunta',
  'title': 'Juan y las cajas Parte 2',
  'topics': ['strings'],
  'url': 'https://omegaup.com/arena/problem/Juan-y-las-cajas-Parte-2'},
 {'history': 'Ana estaba aburrida e inventó un juego, el mismo consiste en '
             'pensar un número entero entre 0 y 99, escribirlo y si es par lo '
             'suma. El juego finaliza cuando el número ingresado por pantalla '
             'es menor a la suma de los números pares. Gana si la cantidad de '
             'números ingresados es mayor a diez. Tu trabajo consiste en '
             'programarlo.',
  'input': 'Una indeterminada cantidad de números enteros.',
  'note': ' ',
  'output': 'Una línea con el total obtenido y otra con el texto “WINNER” O '
            '“GAME OVER” según el resultado obtenido',
  'title': 'Juego de Pares',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Juego-de-Pares'},
 {'history': 'Realice un programa que lea una matriz dinámica de N x M y cree '
             'su matriz traspuesta, en caso de no ser una matriz transpuesta '
             'deberás mostrar la matriz original junto con un mensaje que '
             'diga " MATRIZ NO TRANSPUESTA" , sin comillas. NOTA: La Matriz '
             'nunca será mayor a 50* 50',
  'input': 'En la primera línea el números de filas, en la segunda línea el '
           'número de columnas',
  'note': ' ',
  'output': 'Debes de imprimir la matriz transpuesta en caso de que lo sea, '
            'por otro lado, si esta no es transpuesta mostrar el mensaje '
            'mencionado con anterioridad.',
  'title': 'Jugando con la Matriz',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Jugando-con-la-Matriz'},
 {'history': ' ',
  'input': ' ',
  'note': ' ',
  'output': ' ',
  'title': 'Karate en TecnoMate',
  'topics': ['sortings'],
  'url': 'https://omegaup.com/arena/problem/Karate-en-TecnoMate'},
 {'history': 'Después de que el KeiShip finalizara su travesía por el '
             'espacio, la tripulación decidió arribar en las oficinas de '
             'KeiCorp. Pero antes de arribar, fuiste infectado por Karel ( Que '
             'dura traición) , fuiste engañado al ayudarlo en el cuarto de '
             'oxigenación y ahora Karel y tú son unos impostores que se han '
             'logrado infiltrar en las oficinas de KeiCorp. Ahora su trabajo '
             'como impostores es encontrar a todos los tripulantes que se '
             'encuentren en las oficinas de KeiCorp. ProblemaLas oficinas de '
             'KeiCorp tienen una forma rectangular de NxM, dentro las oficinas '
             'existe un número P de paredes las cuales nunca forman ángulos '
             'rectos ( nunca forman L ) entre ellas o con el mundo ni tampoco '
             'son más anchas que una unidad en el mapa, en las oficinas hay '
             'una T cantidad de tripulantes representados por 1 beeper. Ayuda '
             'a Karel el impostor a atrapar a todos los tripulantes en las '
             'oficinas de KeiCorp.',
  'input': '',
  'note': ' ',
  'output': 'ConsideracionesKarel inicia en una posición desconocida de las '
            'oficinas. No importa la posición ni la orientación final de '
            'Karel, lo único que importa es que no quede ningún tripulante '
            'en las oficinas de KeiCorp. Las oficinas nunca excederán un '
            'tamaño de 50x50. En el mundo nunca habrá una pared horizontal '
            'frente a otra pared horizontal y tampoco habrá una pared '
            'vertical frente a otra pared vertical, mas las que delimitan el '
            'mundo. Subtareas1. - Para un grupo de casos que representan 18',
  'title': 'Karel Impostor',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Karel-Impostor-correct'},
 {'history': 'Llegó el gran momento que tú y Karel habían esperado, por fin '
             'tienen la oportunidad de formar parte de la tripulación del '
             'más nuevo y espectacular ¡KeiShip! , esta nave es parecida a un '
             'avión, pero con la tecnología más avanzada que puedes '
             'imaginar. Después de recibir sus tareas, como forman un gran '
             'equipo tú y Karel deciden hacer las tareas juntos, como Karel '
             'es el tripulante más rápido que has visto, se va a encargar de '
             'realizar las tareas y como tú eres un experto en algoritmos, '
             'tú misión es encontrar la forma más rápida de realizar todos '
             'los problemas y al final saber cuanto tiempo tardaron. La única '
             'condición que Karel te pidió es que tiene que empezar a hacer '
             'las tareas en la esquina interna más al sur y al oeste de la '
             'nave. ProblemaKarel inicia en cualquier parte del cuarto y '
             'deberá de realizar todas las tareas que se encuentren en una '
             'esquina interior. Las tareas son representadas por montones de '
             'beepers mayores a uno, la cantidad de beepers representan el '
             'tiempo en minutos que tardara karel en resolver la tarea. '
             'Después de acabar todas las tareas, Karel tiene que regresar a '
             'la esquina interna más al sur y más al oeste e indicar la '
             'cantidad de tiempo que tardó en terminar todas las tareas.',
  'input': '',
  'note': 'Una esquina interna se describe de la siguiente manera: Una esquina '
          'externa se define de la siguiente manera:',
  'output': 'ConsideracionesKarel inicia en una posición desconocida de las '
            'oficinas. El mundo puede tener cualquier forma no necesariamente '
            'una forma cuadrada. La posición final de Karel tiene que ser la '
            'esquina interna más al sur y más al oeste del cuarto. Las '
            'tareas siempre son mayores a 1 minuto. Se te asegura que la '
            'esquina donde comienza karel siempre tendrá una tarea a '
            'realizar. Solo existe una posible esquina al sur del cuarto. Las '
            'tareas que solo puede realizar Karel se encuentran en esquinas '
            'internas, pueden existir mas tareas pero Karel no deberá '
            'realizarlas. Los casos a evaluar pueden tener formas distintas a '
            'un cuadrado o rectángulo. En ningún caso las esquinas pueden '
            'estar empalmadas una con otra, ejemplo un espacio reducido de 1x1',
  'title': 'KarelTask',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/KarelTask'},
 {'history': 'Haga un programa que reciba como entrada un entero n y haga una '
             'N partiendo de esa descripción.',
  'input': 'Como entrada recibirá un entero n.',
  'note': ' ',
  'output': 'La letra solicitada con las medidas dadas.',
  'title': 'LA N (ETITC)',
  'topics': ['strings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/LA-N-ETITC'},
 {'history': ' ',
  'input': 'Dos numeros enteros ( Dividendo y Divisor)',
  'note': ' ',
  'output': 'Cociente y el Residuo. LimitesNinguno',
  'title': 'LIAUVAQ-Restas Sucesivas',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/LIAUVAQ-Restas-Sucesivas'},
 {'history': 'La hormiga Langton, propuesta por Chris Langton en 1986, es un '
             'tipo de autómata celular. Las cuadrículas están rellenas de '
             'blanco o negro. Hay una " hormiga" en uno de los cuadrados. La '
             'orientación de la cabeza de la hormiga es: arriba, abajo, '
             'izquierda y derecha. Aunque las reglas son simples, el '
             'comportamiento de las hormigas es muy complicado. La ruta que se '
             'deja al principio será casi simétrica, como si se repitiera, '
             'pero no importa cuál sea el estado inicial, las hormigas '
             'abrirán una " carretera" regular después de una larga '
             'actividad caótica. ProblemaSu tarea es simular la posición de '
             'la hormiga Langton después de la enésima caminata basándose '
             'en el estado inicial y reglas de la version clasica: Cada '
             'cuadrado del entramado se colorea blanco o negro. Se identifica '
             'arbitrariamente un cuadrado como la «hormiga». La hormiga '
             'siempre está mirando en una de las cuatro direcciones '
             'cardinales y se mueve un cuadrado cada vez, de acuerdo con las '
             'siguientes reglas: El tablero es una cuadricula 10 x 10 '
             'completamente negro donde la primer casilla representa las '
             'coordenadas ( 1, 1) La hormiga comienza a la mitad del tablero ( '
             '6, 6) mirando hacia arriba ↑ sobre el unico cuadro de color '
             'blancoSi está sobre un cuadrado blanco, cambia el color del '
             'cuadrado, gira noventa grados a la izquierda y avanza un '
             'cuadrado. Si está sobre un cuadrado negro, cambia el color del '
             'cuadrado, gira noventa grados a la derecha y avanza un cuadrado.',
  'input': 'Un numero n ( 3 < n < 100) que indica el numero de generaciones',
  'note': ' ',
  'output': 'Los datos de salida son dos enteros j k separados por un espacio, '
            'que representan respectivamente el número de columna y el '
            'número de fila de la cuadrícula donde se encuentra la hormiga '
            'después de n pasos. ( El primer numero es la posición en el eje '
            'y y el segundo numero es la posición en el eje x)',
  'title': 'La Hormiga de Langton',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/La-Hormiga-de-Langton_'},
 {'history': 'Kevin y Blanca son dos amigos de Juanito que se la pasan '
             'comiendo pizza en su tiempo libre cuando ya terminaron de '
             'trabajar en sus robots. Como ya no saben si pedir pizza de '
             'pepperoni o hawaiiana decidieron jugar un juego para tomar la '
             'dificil decisión. En una bolsa tienen monedas de 1, 2, 5 y 10 '
             'pesos. Juanito va a tomar una de las monedas. Sea N valor de la '
             'moneda que salga, lo van a multiplicar por N+ 2, si el resultado '
             'de la operación es par, pedirán hawaiiana, y si es impar, '
             'pedirán de pepperoni. Como Juanito es muy listo y sabe que se '
             'va a quedar con la moneda que agarre, siempre va a buscar la '
             'moneda que se sienta mas grande. Ayudalos a saber de que pizza '
             'comerán hoy.',
  'input': 'El primer valor será K, el numero de monedas que hay en la bolsa. '
           'Los siguientes K valores serán las monedas que hay en la bolsa.',
  'note': ' ',
  'output': 'La palabra hawaiiana o pepperoni dependiendo de que pizza '
            'pedirán.',
  'title': 'La Pizza de Juanito',
  'topics': ['strings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/La-Pizza-de-Juanito'},
 {'history': 'Karel tiene una sucesión de montones con uno o dos zumbadores, '
             'a partir de ella quiere hacer otra sucesión que tenga las '
             'siguientes características: 1) Deberá tener la misma cantidad '
             'de montones. 2) Los montones de los dos extremos serán iguales '
             'a los montones de los extremos del original. 3) Para decidir la '
             'cantidad de zumbadores en el montón k- ésimo de la nueva '
             'sucesión se fija en los montones k- 1, k y k+ 1 de la sucesión '
             'original, ordena de forma no decreciente dichos montones, y la '
             'cantidad de zumbadores que tenga el montón de en medio, será '
             'la cantidad de zumbadores que le pondrá al montón k- ésimo. '
             'Por ejemplo: si los montones tienen 2, 1 y 2 zumbadores '
             'respectivamente, después de ordenarlos quedaría 1, 2 y 2, por '
             'lo cual le pondría 2 zumbadores a la nueva sucesión. ProblemaA '
             'partir de una sucesión de montones de zumbadores, crea una '
             'nueva sucesión con las características mencionadas en el '
             'párrafo anterior. EspecificacionesKarel inicia en la casilla en '
             'la esquina inferior izquierda orientado al norte. Karel tiene '
             'infinitos zumbadores en la mochila. La sucesión de los montones '
             'de zumbadores empieza en la esquina inferior izquierda y termina '
             'en una pared de altura 1. Cada montón tendrá uno o dos '
             'zumbadores. La sucesión resultante la deberás poner en el '
             'segundo renglón empezando en la primera columna. Solamente se '
             'te calificará la cantidad de zumbadores que dejes en el segundo '
             'renglón y que está exactamente arriba de la sucesión '
             'original. Mundo ejemplo entrada 1Mundo ejemplo salida',
  'input': ' ',
  'note': ' ',
  'output': ' ',
  'title': 'La Sucesión de Karel',
  'topics': ['sortings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/La-Sucesion-de-Karel'},
 {'history': ' ',
  'input': ' ',
  'note': ' ',
  'output': 'si adolf puede hacer que el circuito a sea igual al b imprime " '
            'Si" de lo contrario imprime " No" '
            'InputOutput📋4abcd4acbdSi📋4abcd4abceNoSubTask 1Para 30 puntos se '
            'dice que: 1 ≤ n, t ≤ 10^ 3SubTask 2Para el resto de puntos: 1 ≤ '
            'n, t ≤ 10^ 5',
  'title': 'La Tesis De Adolf',
  'topics': ['strings'],
  'url': 'https://omegaup.com/arena/problem/La-Tesis-De-Adolf-cpp'},
 {'history': 'El Grifo le preguntó a Alicia si prefería intentar bailar la '
             'cuadrilla de la langosta u oir cantar a la Falsa Tortuga. '
             'Emocionada, Alicia eligió la canción. El Grifo le pidió a la '
             'Falsa Tortuga que cantara " Sopa de tortuga" , a lo que la Falsa '
             'Tortuga accedió, no sin antes preguntar ¿con cuántas tortugas? '
             'Como ni Alicia ni el Grifo entendían la pregunta, la Falsa '
             'Tortuga comenzó a explicar que el coro de la canción " Sopa de '
             'tortuga" consiste sólo de dos frases, a saber, " Hermosa sopa" '
             'y " Sopa nocturna" ( que nosotros representaremos con las letras '
             'h y n respectivamente) . La primera tortuga puede elegir cantar '
             'cualquier sucesión de estas frases. Cada una de las demás '
             'tortugas tomará lo que cantó la anterior y reemplazará cada h '
             'por nh y cada n por hh. Si se sabe lo que cantó la primera '
             'tortuga y hay un total de T tortugas, ¿qué coro cantará la '
             'última?',
  'input': 'En la primera línea, el entero T. En la segunda línea, el coro '
           'que cantó la primera tortuga, dado como una cadena que consta '
           'sólo de los caracteres h y n.',
  'note': ' ',
  'output': 'El coro que cantará la última tortuga. RangosPuedes suponer que '
            'T ≥ 1 y que la respuesta se puede representar con un millón de '
            'caracteres o menos.',
  'title': 'La canción de la sopa de tortuga',
  'topics': ['strings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/La-cancion-de-la-sopa-de-tortuga'},
 {'history': 'La Falsa Tortuga y el Grifo le intentaban explicar a Alicia '
             'cómo era la famosa cuadrilla de langostas. Esta danza comienza '
             'con una línea de langostas, cada una mirando en alguna de '
             'cuatro direcciones diferentes. A cada paso de la danza, cada '
             'langosta en la línea trae a otras tres langostas que no estaban '
             'en la línea para formar su cuadrilla. En cada cuadrilla, las '
             'cuatro langostas comienzan mirando en la misma dirección que la '
             'langosta que ya estaba en la línea, pero de inmediato la '
             'langosta que quedó a la izquierda gira hacia la izquierda y la '
             'langosta que quedó a la derecha gira a la derecha. Como Alicia '
             'seguía confundida, la Falsa Tortuga y el Grifo le hicieron un '
             'dibujo de cómo se vería después de un paso una cuadrilla de '
             'langostas que comenzó con una línea de tres langostas. Alicia, '
             'maravillada, ahora les preguntó que cómo se vería una '
             'cuadrilla de langostas después de N pasos. Ayuda a la Falsa '
             'Tortuga y al Grifo a explicarle esto a Alicia.',
  'input': 'En la primera línea un entero N. En la segunda línea, una cadena '
           'que describe la línea inicial de langostas. Esta cadena consiste '
           'exclusivamente de los caracteres ^ , > , v, < , que corresponden '
           'con las cuatro direcciones en el orden de giros a la derecha.',
  'note': ' ',
  'output': 'Una cadena que describa la línea de langostas al final. '
            'RangosPuedes suponer que 0 ≤ N ≤ 10, que al inicio habrá al '
            'menos una langosta y que al final habrá a lo mucho dos millones '
            'de langostas.',
  'title': 'La cuadrilla de langostas',
  'topics': ['strings'],
  'url': 'https://omegaup.com/arena/problem/La-cuadrilla-de-langostas'},
 {'history': 'En algún lugar de la cornisa por la que John Carter intentaba '
             'escapar de los indios, John descubrió una cueva en la que '
             'decidió esconderse. La cueva resultó ser muy estrecha, oscura '
             'y profunda, así que John Carter estaba seguro de que los indios '
             'no lo encontrarían. Poco después, los indios encontraron la '
             'misma cueva y decidieron entrar a explorarla. Los indios '
             'entraron uno por uno, pero a veces el jefe indio ( que '
             'permanecía afuera de la cueva) pedía que saliera cierto indio '
             'y diera su reporte. Por lo limitado de la movilidad dentro de la '
             'cueva, los indios que estaban más cerca de la entrada tenían '
             'que salir para permitir que el indio llamado también pudiera '
             'salir. Ocasionalmente el jefe se equivocaba y llamaba a un indio '
             'que no estaba dentro de la cueva, pero los indios se percataban '
             'del error hasta que todos habían salido y el indio llamado no '
             'estaba. Escribe un programa que determine en qué orden salieron '
             'los indios de la cueva cada vez que el jefe indio llamaba a '
             'alguien.',
  'input': 'Un entero N seguido de N eventos. Cada evento contendrá una letra '
           'E o B seguida del nombre de un indio: si la letra es E entonces el '
           'indio entró, mientras que si la letra es B entonces el indio fue '
           'llamado por el jefe. Puedes suponer que 0 ≤ N ≤ 10^ 5, que los '
           'nombres de los indios consisten de entre 3 y 10 letras, que el '
           'jefe no llamó a nadie si no había indios dentro de la cueva y '
           'que no hay indios con nombres repetidos.',
  'note': ' ',
  'output': 'Por cada evento del tipo B, un renglón que contenga los nombres '
            'de los indios en el orden en el que salieron.',
  'title': 'La cueva en la cornisa',
  'topics': ['strings'],
  'url': 'https://omegaup.com/arena/problem/La-cueva-en-la-cornisa'},
 {'history': 'Los robots humanoides del planeta N- 0J4- V4 han instaurado una '
             'democracia y todo parecía estar bien hasta que el robot 4ML07 '
             'denunció fraude electoral y exigió un recuento voto por voto. '
             'Los N robots del planeta no han creado partidos políticos y '
             'cada uno votó directamente por alguien más. El objetivo era '
             'elegir a K representantes bajo el requisito de que cada '
             'representante obtuviera al menos ⌊N/ K + 1⌋ + 1 votos. A pesar '
             'de lo raro del sistema de votación y contra todo pronóstico, '
             'se lograron elegir correctamente a los K representantes. Como el '
             'robot 4ML07 impugnó la elección, debes escribir un programa '
             'que tome la lista de los N votos que se emitieron durante las '
             'elecciones y que recalcule la lista de los K representantes. '
             'Como en realidad no hubo fraude electoral, sabes que es posible '
             'calcular correctamente dicha lista.',
  'input': 'En la primera linea, dos enteros N y K separados por un espacio. '
           'Posteriormente aparecen N líneas, cada una conteniendo una cadena '
           'de cinco caracteres alfanuméricos ( las letras aparecen en '
           'mayúscula) que denota el nombre de un robot que fue votado. '
           'Puedes suponer que K ≤ N ≤ 5 × 10^ 6 y que 1 ≤ K ≤ 3.',
  'note': ' ',
  'output': 'Los nombres de los K representantes elegidos en orden '
            'lexicográfico ASCII.',
  'title': 'La elección impugnada de los robots',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/La-eleccion-impugnada-de-los-rob'},
 {'history': ' ',
  'input': ' ',
  'note': ' ',
  'output': ' ',
  'title': 'La familia de Buddy.',
  'topics': ['sortings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/La-familia-de-Buddy'},
 {'history': 'En su huída desesperada, John Carter localizó una delgada '
             'cornisa al borde de un precipicio y subió por ella. Los indios '
             'lo siguieron por la cornisa, pero pronto se dieron cuenta de que '
             'la tarea se dificultaba porque los indios más altos le tapaban '
             'la vista a los más bajos que venían atrás. Por ello '
             'decidieron acomodarse de modo que los indios más bajos fueran '
             'adelante y los más altos fueran atrás. Sin embargo, cambiarse '
             'de lugar resultaba muy peligroso. El poco espacio disponible en '
             'la cornisa los obligó a que dos indios podían cambiar de lugar '
             'sólo si estaban uno justo detrás del otro. ¿Cuál es la '
             'mínima cantidad de dichos cambios que se necesitan para lograr '
             'su objetivo?',
  'input': 'Un entero N seguido de las N alturas H_ 1, . . . , H_ N de los '
           'indios. Puedes suponer que 1 ≤ N ≤ 1, 000, 000, que 1 ≤ H_ i ≤ 1, '
           '000, 000, 000 y que las alturas de todos los indios son distintas.',
  'note': ' ',
  'output': 'La cantidad mínima M de cambios de lugar que deben realizarse.',
  'title': 'La fila de indios en la cornisa',
  'topics': ['sortings'],
  'url': 'https://omegaup.com/arena/problem/La-fila-de-indios-en-la-cornisa'},
 {'history': 'En una empresa de desarrollo de sistemas informáticos han '
             'decidido premiar la precisión de sus programadores. Y tal vez '
             'pienses que se tomará en cuenta la precisión con la que '
             'desarrollan sus códigos. . . ¡Pero no! . El único criterio '
             'para obtener el premio es: hacer una fila perfecta; después de '
             'todo, uno debe ser muy preciso para lograr ese objetivo. En un '
             'punto P0( X0, Y0) se coloca el director de la empresa, listo '
             'para entregar el premio a quienes superen la prueba. Luego se '
             'forma el primer programador en el punto P1( X1, Y1) , quien, por '
             'cierto, asegura su premio por ser el primero en llegar a la '
             'fila. Detrás de él se forman el resto de los programadores '
             'intentando hacer una fila perfecta con respecto del director y '
             'del primer programador que llegó a formarse. Un dron que '
             'sobrevuela el espacio donde se lleva a cabo la prueba, captura '
             'las coordenadas del resto de los empleados y las envía al '
             'servidor central de la empresa. Sólo se premiará a quienes '
             'estén colocados en una fila perfecta. Ya que los N '
             'programadores acudieron por el premio, no hay quién programe la '
             'solución al problema. ¿Crees que puedas ayudarles?',
  'input': 'Dos enteros X0 y Y0 que representan las coordenadas de la '
           'ubicación del director, seguidos de la cantidad N de '
           'programadores que acudieron por el premio. En seguida, N pares de '
           'números enteros representando las coordenadas de cada empleado en '
           'la fila.',
  'note': ' ',
  'output': 'La cantidad de programadores que recibieron el premio.',
  'title': 'La fila perfecta',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/La-fila-perfecta'},
 {'history': 'Hackerman ha penetrado los servidores de una compañía muy '
             'importante con el objetivo de sabotear su reputación, pero '
             'dicha empresa se dio cuenta de la intrusión y logró rastrear '
             'la ubicación del hacker. Como Hackerman siempre tiene un truco '
             'bajo la manga, programó un software que sobreescribe los N '
             'archivos de la empresa y que funciona como se describe a '
             'continuación. El software cuenta con un búfer de T bytes y '
             'puede ejecutar una operación que siempre tarda un segundo y que '
             'siempre sobreescribe K megabytes del búfer. Una limitación del '
             'software es que sólo puede cargar un archivo de la empresa si '
             'éste cabe completo en el búfer ( aunque la carga del archivo '
             'es instantánea y no consume tiempo) . Conforme el software '
             'sobreescribe algunos datos, éstos se liberan del búfer. Ayuda '
             'a Hackerman a saber cuánto tiempo tardará el software en '
             'sobreescribir todos los archivos, si el software debe '
             'procesarlos de forma estrictamente secuencial. Como Hackerman '
             'tiene prisa de borrar sus huellas lo más rápido posible, '
             'programó el software para que éste intente cargar el siguiente '
             'archivo a sobreescribir en cuanto el búfer tenga suficiente '
             'espacio para él.',
  'input': 'La primera linea contiene tres enteros N, T y K ( 1 ≤ N ≤ 100000, '
           '1 ≤ K ≤ T ≤ 10^ 9) que son el número de archivos de la empresa, '
           'el tamaño del búfer y la cantidad de megabytes que el software '
           'sobrescribe en cada aplicación de la operación, respectivamente. '
           'La segunda línea contiene N enteros que denotan el peso en MB de '
           'cada uno de los N archivos de la empresa.',
  'note': ' ',
  'output': 'Un entero que sea el tiempo que tarda el software en sobrescribir '
            'todos los archivos.',
  'title': 'La huida del hacker',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/La-huida-del-hacker'},
 {'history': 'Tu profesor de informática tiene una junta muy importante y no '
             'podrá darte clases hoy, está nervioso ya que no sabe si es '
             'para felicitarlo por los excelentes programadores que han '
             'resultado sus alumnos sin buscar códigos en internet o si es '
             'para regañarlo porque pasa más tiempo jugando voli que creando '
             'ejercicios para el grupo. Cuando salga de junta tiene que sacar '
             'promedios grupales así que, sabiendo que tú no tendrías su '
             'clase y para que no estuvieras holgazaneando te ha pedido ayuda '
             'para automatizar algunas tareas. Debe calcular el promedio del '
             'grupo, que consta de 8 alumnos, y saber si está aprobado o no ( '
             'la calificación mínima aprobatoria es 7) . Además debe '
             'encontrar cuántas veces se repite una calificación C. Al final '
             'debe ordenar de manera descendente las calificaciones. Ayuda a '
             'tu profesor para que así tenga más tiempo de jugar voleibol '
             'crear ejercicios para OmegaUp',
  'input': 'Ocho números flotantes que representarán las calificaciones de '
           'los alumnos seguida por la calificación C a buscar.',
  'note': ' ',
  'output': 'El promedio grupalEl mensaje " Reprobado" si el promedio es menor '
            'a 7 o el mensaje " Aprobado" si es caso contrarioEl número de '
            'veces que se repite la calificación C en la lista. De no estar, '
            'debe mostrar el mensaje " Calificación no registrada" La lista '
            'de las calificaciones ordenada de manera descendente ( de mayor a '
            'menor)',
  'title': 'La junta del profe',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/La-junta-del-profe-ANH'},
 {'history': 'Dada una secuencia de N dígitos del 1 al 9 donde cada dígito '
             'puede aparecer con signo + o - , escribe un programa que '
             'determine qué dígito apareció más veces ( independientemente '
             'de los signos) y cuántas veces apareció en su forma positiva y '
             'negativa.',
  'input': 'Un entero N seguido de N dígitos del 1 al 9 en versiones '
           'positivas o negativas. Puedes suponer que 1 ≤ N ≤ 1000.',
  'note': ' ',
  'output': 'Un entero que sea el dígito que apareció más veces, seguido de '
            'dos enteros que sean la cantidad de veces que apareció dicho '
            'dígito en su forma positiva y negativa. En caso de empate en '
            'apariciones, debe dársele preferencia al dígito numéricamente '
            'menor ( en magnitud) .',
  'title': 'La moda y sus signos',
  'topics': ['strings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/La-moda-y-sus-signos'},
 {'history': ' ',
  'input': ' ',
  'note': ' ',
  'output': ' ',
  'title': 'La moneda perdida de Karel',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/La-moneda-perdida-de-Karel'},
 {'history': 'Juan tiene una compañia de telefonia, pero tiene un problema ya '
             'que no tiene a la suficiente gente para echar a andar sus '
             'servicios, el pide de tu ayuda para resolver su problema. '
             'ProblemaJuan quiere regalar una SIM a aquellos usuarios que '
             'tengan todos los números pares, NOTA: recuerda que los primeros '
             '3 números son indiferentes ya que son los de la lada de la '
             'ciudad',
  'input': 'Un numero de 10 dígitos en el cual corresponde al numero del '
           'teléfono del usuario.',
  'note': ' ',
  'output': 'Una único mensaje: - Si cumple con el caso imprime " SIM gratis '
            ': ) " ( sin las comillas) . - Si no cumple con la función '
            'imprime " F mi pana : ( " ( sin las comillas) - Si el numero es '
            'incompleto imprime " Numero incorrecto" ( sin las comillas) .',
  'title': 'La nueva telefonia',
  'topics': ['strings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/La-nueva-telefonia'},
 {'history': 'Salem es un gato que le encanta la pizza. Ha probado de todos '
             'los tipos, Salem no es un gato egoísta, de hecho, él quiere '
             'compartirla con sus amigos felinos. él quiere comprar la pizza '
             'con rebanadas más pequeñas considerando los estómagos de sus '
             'compañeros felinos, gracias a su basto conocimiento de pizzas '
             'este gato conoce las dimensiones de cada rebanada de pizza ( o '
             'eso cree él) . Salem sabe que la mejor forma para calcular las '
             'áreas de un triángulo con lados a, b y c es la fórmula de '
             'Herón: A= √( s( s- a) ( s- b) ( s- c) ) donde s= a+ b+ c/ 2 Sin '
             'embargo, Salem no puede programar ya que no existen teclados '
             'para gatos, ¡aquí es donde entras tú! Salem te dará una lista '
             'de los lados a, b y c de las rebanadas de pizza del poblado en '
             'el que piensa compartir la pizza, y tú le darás las tres '
             'mejores opciones ( ya que es mala idea tener solo una opción) . '
             'Ayuda a Salem a resolver su dilema y quizá te de una rebanada '
             'de pizza la próxima vez que lo veas.',
  'input': 'La primer línea contiene un entero n, las siguientes n líneas '
           'contendrán los lados a_ i, b_ i y c_ i de las rebanadas de pizza '
           'separados por un espacio.',
  'note': ' ',
  'output': 'Tres lineas con 3 enteros separados por un espacio, los cuales '
            'serán los lados a_ i, b_ i y c_ i de las tres rebanadas de pizza '
            'con menor área.',
  'title': 'Las rebanadas de pizza',
  'topics': ['sortings'],
  'url': 'https://omegaup.com/arena/problem/La-pizza-de-Salem'},
 {'history': 'Alicia no entendía nada de lo que el Dodo le decía. En '
             'particular, no entendía qué quería decir el Dodo con hacer '
             'una carrera loca. Tampoco es que Alicia quisiera saber, pero el '
             'Dodo dijo que la mejor forma de explicar qué era una carrera '
             'loca era justamente hacer una. Y entonces todos los animales '
             'corrieron sin ton ni son, hasta que en algún momento el Dodo '
             'gritó ¡se acabó la carrera! Y cuando preguntaron quién había '
             'ganado, el Dodo lo pensó un rato y dijo ¡no importa mucho '
             'quién ganó, todos recibirán el mismo premio! y Alicia tuvo '
             'que darle un premio a cada animal que participó en la carrera, '
             'los cuales fueron llamados por el Dodo del último al primer '
             'lugar. Sin embargo, el Dodo los nombró tan rápido que Alicia '
             'tuvo dificultades en seguirle el paso.',
  'input': 'Una serie de renglones formados exclusivamente por letras. Cada '
           'renglón contendrá uno o más nombres. Cada nombre comenzará con '
           'una letra mayúscula y el resto de sus letras aparecerán en '
           'minúscula.',
  'note': ' ',
  'output': 'Los nombres de los animales que participaron en la carrera, uno '
            'por renglón y del primer al último lugar. RangosPuedes suponer '
            'que cada renglón tendrá a lo mucho 50 caracteres y que habrán '
            'a lo mucho 1000 nombres.',
  'title': 'La premiación de la carrera loca',
  'topics': ['strings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/La-premiacion-de-la-carrera-loca'},
 {'history': 'Día 2, 523 después de la destrucción de nuestro planeta '
             'madre, seguimos en búsqueda de un planeta ideal para nuestra '
             'supervivencia, a la nave solo le quedan combustible para '
             'recorrer 3 años luz mas. Hemos encontrado una constelación '
             'cercana con planetas con Hiridium, al parecer encontramos una '
             'esperanza. Por fortuna del destino fue interceptado este mensaje '
             'por tu poderosisimo nokia 3310 que no conforme con recibirlo de '
             'un galaxia muy lejana, lo tradujo para ti de Arimosimonestl a '
             'Español y te dio acceso a la base de datos científica de la '
             'nave nodriza, como crack de la programación que eres no te '
             'quedaras con los brazos cruzados y enviaras un mensaje de texto '
             'a la raza alienígena ( Esperando que no salga muy caro : C) , '
             'indicándole cual es el planeta mas optimo para su '
             'supervivencia, este planeta sera el que contenga mayor cantidad '
             'de Hiridium, y que este a al menos a k distancia de la estrella '
             'mk3620013.',
  'input': 'n Cantidad de estrellas y planetas que se recibiráPor cada '
           'planeta y estrella se recibirá su nombre , óposición, '
           'cantidad−de−Hiridium. Distancia k maxima a la que estará el '
           'planeta. Finalmente se dará la posición de la estrella mk3620013',
  'note': 'Se sabe que para que uno de los astros dados sea un planeta su '
          'nivel de Hiridium debe ser de al menos 5, de lo contrario sera una '
          'estrella la cual no es habitable. La base de datos a la cual tienes '
          'acceso no esta actualizada por lo cual la estrella mk3620013 se '
          'llama diferente, el único dato que tienes de ella es su posición. '
          'En caso de no existir planetas habitables cerca de mk3620013 '
          'imprime sin comillas " c murieron : \' v" mk3620013 estará dentro '
          'de los astros dados.',
  'output': 'Se imprimirá el nombre del planeta mas optimo y su posición.',
  'title': 'La ultima esperanza',
  'topics': ['sortings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/La-ultima-esperanza'},
 {'history': ' ',
  'input': ' ',
  'note': ' ',
  'output': ' ',
  'title': 'La leche',
  'topics': ['sortings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/LaLeche'},
 {'history': ' ',
  'input': 'Se darán el la primera línea tres números n, m y k, luego k '
           'pares de números, uno por línea, donde se presenta x y y. Luego '
           "de los k pares, finitos números 0' s y 1' s, donde un 1 significa "
           'que Krista puede pasar al siguiente día, en caso de un 0, Krista '
           'debe regresar a casa, y mostrar la últimafoto de como estaban '
           'acomodados los aliens.',
  'note': ' ',
  'output': ' ',
  'title': 'MrK07. La última, larga vida a Krista',
  'topics': ['strings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Larga-vida-a-Krista'},
 {'history': 'Edmundo quiere probar las habilidades de los candidatos para '
             'saber como la llevan, así que les quiere poner un problema pero '
             'no está seguro de si su redacción está correcta, para eso '
             'quiere pedirte tu ayuda. Se te va a dar una cadena msj que va a '
             'tener una palabra en él. Verifica si la palabra está bien '
             'escrita. msj va a estar bien escrita cuando cumpla una de las '
             'siguientes condiciones: Todas sus letras son minúsculas. Todas '
             'sus letras son mayúsculas. Su primera letra es mayúscula, el '
             'resto minúsculas. Si la palabra está bien escrita, imprimir un '
             '" SI" sin las comillas, en caso contrario imprime un " NO" .',
  'input': ' ',
  'note': ' ',
  'output': ' ',
  'title': 'Las redacciones de Edmundo',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Las-redacciones-de-Edmundo'},
 {'history': 'La Reina Roja es una persona bastante especial, ya que adora las '
             'rosas rojas y detesta sobremanera las rosas blancas. El gran '
             'problema es que también es muy violenta, y no dudará un '
             'segundo en cortarle la cabeza al jardinero que ose llevarle una '
             'rosa blanca en los ramos de rosas que ella pide con frecuencia. '
             'Desafortunadamente para los jardineros, el jardín de la Reina '
             'Roja tiene muchas rosas blancas, así que los jardineros tienen '
             'que pintar las rosas blancas de rojo para que la Reina Roja no '
             'los ejecute. Un día mientras los jardineros descansaban, uno de '
             'sus compañeros les avisó que la Reina Roja iba en camino. Los '
             'jardineros entraron en pánico porque el jardín tenía todavía '
             'muchas rosas blancas sin pintar. En la desesperación, cada '
             'jardinero gritó su posición en el jardín y el color de la '
             'rosa que estaba en ese lugar. Los jardineros saben que la Reina '
             'Roja siempre pide ramos que estén formados por las rosas que se '
             'encuentren en algún intervalo cerrado [ I, U] de las posiciones '
             'del jardín. El jardín es muy amplio y no todas sus posiciones '
             'tienen una rosa, pero sabes que cada rosa tiene un jardinero '
             'asignado. Ayuda a los jardineros a determinar cuántas rosas '
             'blancas tendrían que pintar para cada uno de los intervalos que '
             'le podrían interesar a la Reina Roja.',
  'input': 'Inicialmente, un entero N seguido de N parejas P, C donde P es la '
           'posición de un jardinero y C es el color de la rosa que se '
           'encuentra ahí ( R para roja y B para blanca) . Posteriormente, un '
           'entero M seguido de M parejas de enteros I, U que denotan los '
           'extremos de los intervalos de interés. Puedes suponer que 1≤N, '
           'M≤105 y que I≤U. Además, puedes suponer que todas las posiciones '
           'del jardín P, I, U están en el rango de 0 a 109 y que todas las '
           'rosas están en posiciones distintas.',
  'note': ' ',
  'output': 'Para cada intervalo dado, la cantidad de rosas blancas que '
            'existen en esa parte del jardín.',
  'title': 'Las rosas del jardín de la Reina Roja',
  'topics': ['sortings'],
  'url': 'https://omegaup.com/arena/problem/Las-rosas-del-jardin-de-la-Reina'},
 {'history': 'Chema es muy aficionado a las matemáticas, en su tiempo libre '
             'toma papel y lápiz e inventa juegos con números, recientemente '
             'ha inventado un juego donde te proporciona dos conjuntos de '
             'enteros S, A y te reta a que encuentres de cuantas formas se '
             'puede lograr cada elemento S_ i sumando dos elementos '
             'cualesquiera del conjunto A. Como tiene cierto grado de autismo, '
             'siempre se asegura de escribir los números de cada conjunto, de '
             'tal forma que ninguno se repita.',
  'input': 'En la primera línea los enteros M, N que denotan el tamaño del '
           'conjunto S y A respectivamente. En la segunda línea los M enteros '
           'del conjunto S separados por un espacio. En la tercera línea, los '
           'N enteros que conforman el conjunto A, separados por espacios.',
  'note': ' ',
  'output': 'El número de parejas distintas que hay en A, tal que su suma se '
            'encuentre en S.',
  'title': 'Las sumas locas del Chema',
  'topics': ['sortings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Las-sumas-locas-del-Chema'},
 {'history': 'Últimamente Briaares ha estado muy atareado por lo que necesita '
             'tu ayuda. Él debe resolver K tareas de las N que tiene, en el '
             'menor tiempo posible. Para facilitar las cosas le asignó un '
             'valor de tiempo a cada tarea. Por el mismo motivo – que está '
             'muy apurado – necesita tu ayuda para que le digas cuál es el '
             'menor tiempo que debe invertir para acabar K tareas. Supongamos '
             'que decide hacer las tareas x_ 1 , x_ 2, x_ 3 , . . . , x_ k ( '
             'en ese orden) . Entonces, el tiempo que le toma resolver estas '
             'tareas juntas lo definió como ∑_ 1 ≤ i < j ≤ k | x_ i - x_ j| . '
             '¿Por qué una formula tan rara y no solo sumar los tiempos? Solo '
             'Briaares lo sabe. . .',
  'input': 'En la primera linea dos enteros, N y K, la cantidad de tareas que '
           'tiene y la cantidad que debe resolver. En la siguiente linea N '
           'enteros separados por un espacio, donde el iésimo valor '
           'representa el tiempo que le asignó a la tarea i.',
  'note': ' ',
  'output': 'La mínima cantidad de tiempo para que Briaares acabe K tareas.',
  'title': 'Las tareas de Briaares',
  'topics': ['sortings'],
  'url': 'https://omegaup.com/arena/problem/Las-tareas-de-Briaares'},
 {'history': 'En clase de programación, el acomodo de las butacas es en forma '
             'de círculo. Al ingresar al salón, el primer estudiante debe '
             'ocupar la primer butaca vacía, el segundo estudiante debe '
             'ocupar la siguiente butaca vacía y así sucesivamente hasta '
             'ocupar todas las butacas disponibles. No siempre llegan todos '
             'los alumnos, por lo que es probable que queden algunas butacas '
             'vacías. Pero nunca quedarán estudiantes de pie. La revisión '
             'de las tareas se hace de la siguiente manera: El profesor '
             'menciona un número N y el estudiante sentado en la butaca '
             'número N explica su programa al resto del grupo. Posteriormente '
             'continúa el alumno sentado en la butaca N- 1 y así, '
             'sucesivamente, hasta que todos los estudiantes hayan explicado '
             'sus programas.',
  'input': 'Un entero X que representa la cantidad de estudiantes que entraron '
           'a la clase. X cadenas de texto, representando los nombres de cada '
           'estudiante en el orden que ingresaron al salón. Cada cadena se '
           'lee en una línea independiente. Un entero N que representa la '
           'butaca del primer alumno que expondrá su tarea.',
  'note': ' ',
  'output': 'X líneas con los nombres de los estudiantes en el orden que '
            'expusieron su tarea.',
  'title': 'Las tareas de Progra',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Las-tareas-de-Progra'},
 {'history': 'Melanie consiguió un nuevo trabajo como cajera en un banco. '
             'Ella está muy emocionada porque así tendrá dinero para '
             'invitar a Adriana a un lujoso restaurante. Sin embargo, Melanie '
             'es pésima en su trabajo lo cual preocupa a Alonso, su '
             'supervisor, quién a pesar de que odia a Adriana y quisiera ver '
             'que Melanie sea despedida, debe mejorar la situación o será '
             'él quién sea despedido. Alonso no es tonto, así que le pide a '
             'cada cliente que diga qué trámite realizará para así poder '
             'decirle cuánto tiempo demorará su trámite. Con esta '
             'información crea una lista con el tiempo que demorará cada '
             'cliente en sus trámites, la cual puede servir a Melanie para '
             'mejorar las cosas. Alonso le da la lista a Melanie y le dice que '
             'la despedirá si no optimiza el funcionamiento de la cola. '
             'Melanie se da cuenta que las personas se molestan si el tiempo '
             'que esperan en la cola supera el tiempo que demorarán en sus '
             'trámites. Melanie está desesperada por lo que te pide ayuda '
             'para que cambies de posición a las personas en la fila de tal '
             'forma que la cantidad de personas molestas sea mínima. '
             'Importante: A pesar de que un cliente esté molesto Melanie debe '
             'atenderlo',
  'input': 'La primera linea contiene un número entero n, la cantidad de '
           'personas en la fila. La segunda línea son n números que '
           'representan el tiempo que demorará cada persona en hacer su '
           'trámite.',
  'note': ' ',
  'output': ' ',
  'title': '¿Le brindé un buen servicio?',
  'topics': ['sortings'],
  'url': 'https://omegaup.com/arena/problem/Le-brinde-un-buen-servicio-hoy'},
 {'history': 'Dada una secuencia de enteros, imprime dicha secuencia ordenada '
             'de la siguiente manera: primero los enteros pares en orden '
             'creciente y luego los enteros impares en orden decreciente. Tu '
             'programa debe leer los datos e imprimir la salida según los '
             'formatos indicados en la entrada.',
  'input': 'La primera línea de la entrada consta de dos caracteres E, S y un '
           'caracter de salto de línea. El resto de la entrada contiene la '
           'secuencia de enteros, la cual debe procesarse hasta el fin de '
           "archivo. Si E = ' T' entonces la secuencia deberá leerse con "
           "rutinas de lectura con formato ( por ejemplo, scanf) . Si E = ' B' "
           'entonces la secuencia deberá leerse con rutinas de lectura sin '
           'formato ( por ejemplo, fread) y cada entero se representará con '
           'sizeof( int32_ t) = 4 bytes. Puedes suponer que la secuencia '
           'tendrá a lo mucho 100, 000 enteros y que todos los bytes de sus '
           'representaciones binarias son caracteres ASCII gráficos.',
  'note': ' ',
  'output': "Si S = ' T' entonces la secuencia deberá imprimirse con rutinas "
            'de escritura con formato ( por ejemplo, printf) y los enteros '
            'deberán estar separados por un espacio o salto de línea. Si S = '
            "' B' entonces la secuencia deberá imprimirse con rutinas de "
            'escritura sin formato ( por ejemplo, fwrite) y cada entero '
            'deberá representarse con sizeof( int32_ t) = 4 bytes.',
  'title': 'Lectura y escritura de datos',
  'topics': ['sortings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Lectura-y-escritura-de-datos'},
 {'history': 'María está entrenando para la 1er Copa Centroamericana de '
             'Programación. Tiene H horas antes de que empiece la '
             'competición y tiene L libros que quiere estudiar. Ella lee una '
             'página cada minuto y quiere saber cuál es el máximo número '
             'de libros que puede leer antes de la competición. Ella también '
             'sabe que leer libros grandes es más útil, entonces si hay dos '
             'grupos con el mismo números de libros, ella prefiere el grupo '
             'con el libro más grande que no esté en el otro grupo.',
  'input': 'La primer línea tendrá dos números H y L. La próxima línea '
           'tendrá los L números. Cada número indica el número de páginas '
           'de cada uno de los libros. No hay dos libros con el mismo número '
           'de páginas. 0 H ≤ 10, 0000 L ≤ 100, 0000 L_ i ≤ 100, 000',
  'note': ' ',
  'output': 'El mejor grupo de libros ordenados por número de páginas.',
  'title': 'Leer libros',
  'topics': ['sortings'],
  'url': 'https://omegaup.com/arena/problem/Leer-Libros'},
 {'history': 'Utilizando la estructura repetitiva FOR y escribiendo un solo '
             'caracter por vez debes dibujar la letra A con el caracter '
             'ingresado por pantalla. El tamaño del mismo es de 9 filas de '
             'alto y 5 columnas de ancho.',
  'input': 'La entrada consiste en un caracter, con el cual se realizará la '
           'letra solicitada',
  'note': ' ',
  'output': 'La letra solicitada',
  'title': 'Letra A',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Letra-A'},
 {'history': 'Utilizando la estructura repetitiva FOR y escribiendo un solo '
             'caracter por vez debes dibujar la letra C con el caracter '
             'ingresado por pantalla. El tamaño del mismo es de 9 filas de '
             'alto y 5 columnas de ancho.',
  'input': 'La entrada consiste en un caracter, con el cual se realizará la '
           'letra solicitada',
  'note': ' ',
  'output': 'La letra solicitada',
  'title': 'Letra C',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Letra-C'},
 {'history': 'Utilizando la estructura repetitiva FOR y escribiendo un solo '
             'caracter por vez debes dibujar la letra D con el caracter '
             'ingresado por pantalla. El tamaño del mismo es de 9 filas de '
             'alto y 5 columnas de ancho.',
  'input': 'La entrada consiste en un caracter, con el cual se realizará la '
           'letra solicitada',
  'note': ' ',
  'output': 'La letra solicitada',
  'title': 'Letra D',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Letra-D'},
 {'history': 'Utilizando la estructura repetitiva FOR y escribiendo un solo '
             'caracter por vez debes dibujar la letra E con el caracter '
             'ingresado por pantalla. El tamaño del mismo es de 9 filas de '
             'alto y 5 columnas de ancho.',
  'input': 'La entrada consiste en un caracter, con el cual se realizará la '
           'letra solicitada',
  'note': ' ',
  'output': 'La letra solicitada',
  'title': 'Letra E',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Letra-E'},
 {'history': 'Utilizando la estructura repetitiva FOR y escribiendo un solo '
             'caracter por vez debes dibujar la letra F con el caracter '
             'ingresado por pantalla. El tamaño del mismo es de 9 filas de '
             'alto y 5 columnas de ancho.',
  'input': 'La entrada consiste en un caracter, con el cual se realizará la '
           'letra solicitada',
  'note': ' ',
  'output': 'La letra solicitada',
  'title': 'Letra F',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Letra-F'},
 {'history': 'Utilizando la estructura repetitiva FOR y escribiendo un solo '
             'caracter por vez debes dibujar la letra G con el caracter '
             'ingresado por pantalla. El tamaño del mismo es de 9 filas de '
             'alto y 5 columnas de ancho.',
  'input': 'La entrada consiste en un caracter, con el cual se realizará la '
           'letra solicitada',
  'note': ' ',
  'output': 'La letra solicitada',
  'title': 'Letra G',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Letra-G'},
 {'history': 'Utilizando la estructura repetitiva FOR y escribiendo un solo '
             'caracter por vez debes dibujar la letra H con el caracter '
             'ingresado por pantalla. El tamaño del mismo es de 9 filas de '
             'alto y 5 columnas de ancho.',
  'input': 'La entrada consiste en un caracter, con el cual se realizará la '
           'letra solicitada',
  'note': ' ',
  'output': 'La letra solicitada',
  'title': 'Letra H',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Letra-H'},
 {'history': 'Utilizando la estructura repetitiva FOR y escribiendo un solo '
             'caracter por vez debes dibujar la letra J con el caracter '
             'ingresado por pantalla. El tamaño del mismo es de 9 filas de '
             'alto y 5 columnas de ancho.',
  'input': 'La entrada consiste en un caracter, con el cual se realizará la '
           'letra solicitada',
  'note': ' ',
  'output': 'La letra solicitada',
  'title': 'Letra J',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Letra-J'},
 {'history': 'Utilizando la estructura repetitiva FOR y escribiendo un solo '
             'caracter por vez debes dibujar la letra K con el caracter '
             'ingresado por pantalla. El tamaño del mismo es de 9 filas de '
             'alto y 5 columnas de ancho.',
  'input': 'La entrada consiste en un caracter, con el cual se realizará la '
           'letra solicitada',
  'note': ' ',
  'output': 'La letra solicitada',
  'title': 'Letra K',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Letra-K'},
 {'history': 'Utilizando la estructura repetitiva FOR y escribiendo un solo '
             'caracter por vez debes dibujar la letra L con el caracter '
             'ingresado por pantalla. El tamaño del mismo es de 9 filas de '
             'alto y 5 columnas de ancho.',
  'input': 'La entrada consiste en un caracter, con el cual se realizará la '
           'letra solicitada',
  'note': ' ',
  'output': 'La letra solicitada',
  'title': 'Letra L',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Letra-L'},
 {'history': 'Utilizando la estructura repetitiva FOR y escribiendo un solo '
             'caracter por vez debes dibujar la letra W con el caracter '
             'ingresado por pantalla. El tamaño del mismo es de 9 filas de '
             'alto y 5 columnas de ancho.',
  'input': 'La entrada consiste en un caracter, con el cual se realizará la '
           'letra solicitada',
  'note': ' ',
  'output': 'La letra solicitada',
  'title': 'Letra W',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Letra-W'},
 {'history': 'Utilizando la estructura repetitiva FOR y escribiendo un solo '
             'caracter por vez debes dibujar la letra X con el caracter '
             'ingresado por pantalla. El tamaño del mismo es de 9 filas de '
             'alto y 5 columnas de ancho.',
  'input': 'La entrada consiste en un caracter, con el cual se realizará la '
           'letra solicitada',
  'note': ' ',
  'output': 'La letra solicitada',
  'title': 'Letra X',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Letra-X'},
 {'history': 'Utilizando la estructura repetitiva FOR y escribiendo un solo '
             'caracter por vez debes dibujar la letra Y con el caracter '
             'ingresado por pantalla. El tamaño del mismo es de 9 filas de '
             'alto y 5 columnas de ancho.',
  'input': 'La entrada consiste en un caracter, con el cual se realizará la '
           'letra solicitada',
  'note': ' ',
  'output': 'La letra solicitada',
  'title': 'Letra Y',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Letra-Y'},
 {'history': 'Utilizando la estructura repetitiva FOR y escribiendo un solo '
             'caracter por vez debes dibujar la letra Z con el caracter '
             'ingresado por pantalla. El tamaño del mismo es de 9 filas de '
             'alto y 5 columnas de ancho.',
  'input': 'La entrada consiste en un caracter, con el cual se realizará la '
           'letra solicitada',
  'note': ' ',
  'output': 'La letra solicitada',
  'title': 'Letra Z',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Letra-Z'},
 {'history': 'Utilizando la estructura repetitiva FOR y escribiendo un solo '
             'caracter por vez debes dibujar la letra B con el caracter '
             'ingresado por pantalla. El tamaño del mismo es de 9 filas de '
             'alto y 5 columnas de ancho.',
  'input': 'La entrada consiste en un caracter, con el cual se realizará la '
           'letra solicitada',
  'note': ' ',
  'output': 'La letra solicitada',
  'title': 'Letra B',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/LetraB'},
 {'history': 'Durante la etapa de análisis léxico, un compilador debe '
             'agrupar el conjunto decaracteres que compone un programa fuente '
             'en componentes gramaticales conocidascomo lexemas. Por cada '
             'lexema encontrado, el compilador debe producir un Tokenque '
             'representa una de las categorías sintácticas de un lenguaje de '
             'programación. Considere un lenguaje de programación con las '
             'siguientes categorías sintacticas: Identificadores: posicion, '
             'miVariable, PI, _ campo, contador2. Palabras reservadas: if, '
             'else, do, while, break. Tipos: num, bool. Constantes numéricas: '
             '2, - 5, 3. 14, 2. 54e- 24, 0. 03, 1. 16e27, 5e28. Constantes '
             'booleanas: false, true. Operadores relacionales: < , > , < = , > '
             '= , = = Operadores aritméticos: + , - , * , / ,',
  'input': 'Una secuencia de caracteres ASCII que representan un programa '
           'fuente.',
  'note': ' ',
  'output': 'Por cada linea del programa fuente un entero que representa el '
            'número de linea, seguido de un token por cada lexema encontrado '
            'de acuerdo a lo siguiente: Identificadores: IDPalabras '
            'reservadas: IF, ELSE, DO, WHILE, BREAKTipos: NUM, BOOLConstantes '
            'numéricas: LNUMConstantes booleanas: FALSE, TRUEOperadores '
            'relacionales: RELOPOperadores aritméticos: ARITHOPOperadores '
            'lógicos: LOGOPOperadores de asignación: ASSIGNSímbolos de '
            'agrupación: LPAR, RPAR, LBRACKET, RBRACKET, LCURLY, '
            'RCURLYCaracteres de puntuación: SEMICOLON',
  'title': 'Lexemas y tokens',
  'topics': ['strings'],
  'url': 'https://omegaup.com/arena/problem/Lexemas-y-tokens'},
 {'history': 'Joyce es madre de varios niños y tiene reglas muy estrictas '
             'sobre los aparatos tecnológicos que cada niño utiliza . Una de '
             'sus reglas , es que cada niño puede tener solamente una '
             'aplicación instalada en su teléfono . A los niños no les da '
             'miedo esta regla , ya que saben que si se quejan , perderán '
             'media hora de televisión ese día . Para poder maximizar el '
             'número de aplicaciones que pueden compartir entre ellos , los '
             'niños han decidido que cada uno instalará una aplicación '
             'diferente en su teléfono . Cada uno de ellos prefiere '
             'diferentes aplicaciones , por lo que cada uno quiere usar la que '
             'más le gusta , o alguna que le guste . Esta es la manera en la '
             'que los niños han decidido seleccionar las aplicaciones : cada '
             'uno escribirá una lista de aplicaciones que les gustan , siendo '
             'la primera la que más prefieren , y la última la que menos '
             'prefieren ( dejando fuera aquellas aplicaciones que no les '
             'interesan) . Después , el niño más grande instalará en su '
             'teléfono la primera aplicación en su lista . Después , el '
             'segundo niño más grande instalará la primera aplicación en '
             'su lista , a menos que esta ya haya sido instalada por algún '
             'hermano ( en este caso , por el niño más grande , ya que solo '
             'ha pasado el) . Este proceso se repite para todos los niños - '
             'cada uno instalará la aplicación mejor rankeada en su lista a '
             'menos que algún hermano ya la tenga instalada . Dada la lista '
             'de cada niño , ayudalos a saber que aplicación debe instalar '
             'cada uno .',
  'input': 'La primera línea contiene un entero positivo n , siendo n el '
           'número de niños . Las siguientes n líneas empiezan con un '
           'entero positivo m , seguido de m cadenas . El valor de m denota el '
           'número de aplicaciones en la lista del niño , mientras que las m '
           'cadenas denotan el nombre de cada aplicación , el orden en que '
           'los nombres se dan es desde la que ese niño más prefiere , hasta '
           'la que menos prefiere . La primera línea es la lista de '
           'preferencia del niño más grande , mientras que la última línea '
           'es la lista de preferencia del niño más joven .',
  'note': ' ',
  'output': 'Muestra la aplicación seleccionada para cada niño , empezando '
            'desde el mas viejo , terminando con el más joven , separando '
            'cada aplicación con un espacio en blanco . Nunca habrá un caso '
            'donde todas las aplicaciones en la lista de un niño ya hayan '
            'sido seleccionadas .',
  'title': 'Limitando Aplicaciones',
  'topics': ['strings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Limitando-Aplicaciones'},
 {'history': ' ',
  'input': 'En la primer línea esta un entero C que indica el numero de '
           'casos. En la primera línea de cada caso viene un único entero 0 '
           '< n < 30000 que especifica la cantidad de limogochis. En las '
           'segunda línea vienen n enteros - 200000 < x1, x2, . . . xi, . . . '
           ', xn < 200000 separados por un espacio, donde xi representa la '
           'carga del limogochi enumerado con el índice i. Observa que el '
           'primer limogochi esta enumerado con el indice 1, el segundo con el '
           '2, etcetera.',
  'note': ' ',
  'output': 'Un único entero que representa la suma mínima de limocargas que '
            'se puede generar por los limogochis considerando que uno de ellos '
            'fue capturado.',
  'title': 'Limocargas ',
  'topics': ['sortings'],
  'url': 'https://omegaup.com/arena/problem/Limocargas'},
 {'history': 'Existen N casas a la venya. La i- va casa cuesta A_ i dolares. '
             'Tú tienes un presupuesto de B dolares para gastar. ¿Cúal es '
             'numero máximo de casas que puedes comprar?',
  'input': 'La primera linea de entrada da el numero de casos de prueba '
           'deinido como T. Cada caso de prueba inicia con una línea que '
           'contiene 2 enteros que corresponden a N y B respectivamente. La '
           'segunda linea contiene N enteros. The i- vo entero es A_ i es '
           'decir el costos de la i- va casa.',
  'note': ' ',
  'output': 'Para cada caso deberá existir una linea de salida que contenga '
            'Caso # x: y donde x es el numero de caso empezando con 1 y y es '
            'el numero máximo de casas que puede comprar',
  'title': 'Locacion de casas',
  'topics': ['sortings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Locacion-de-casas'},
 {'history': 'Emiliano y sus amigos se encuentran en el festival Codeachella y '
             'la hora de los snacks ha llegado, sin embargo, como son muchos '
             'amigos con diferentes gustos, han decidido que cada uno de los N '
             'amigos propondrá un lugar para ir a comer. Para ello, '
             'utilizarán como criterio los likes que tiene en su página de '
             'redes sociales cada lugar, por ejemplo, las papas Don Tino, '
             'tienen 120 likes, ese número es el que será registrado. Una '
             'vez registrados los likes ( L) de cada lugar, se elegirá aquel '
             'lugar con mayor número de likes. ProblemaLos amigos de Emiliano '
             'son muy desconfiados, por lo que han dejado en tus manos la '
             'creación de un programa que cumpla con la tarea de elegir el '
             'lugar que tenga mayor cantidad de likes, sin embargo, cuando la '
             'decisión sea tomada, se deberá presentar a los amigos la lista '
             'de lugares capturados. PPara mayor conformidad de todos, en '
             'lugar de los likes se presentará una " X" , cuando el lugar no '
             'haya sido seleccionado como el lugar con mayor cantidad de '
             'likes, dejando visible el número del lugar con mayor cantidad '
             'de likes, Los lugares deberán mostrarse en el mismo orden en '
             'que fueron registrados.',
  'input': 'N - Como el número de lugares de los cuales se va a capturar los '
           'likes. L1, L2, L3, . . . Ln - Como el número de likes que tenga '
           'cada lugar a registrar desde 1 y hasta el N.',
  'note': ' ',
  'output': 'Un listado de los lugares registrados, mostrando una " X" en '
            'lugar del número de likes de aquellos lugares que no fueron '
            'seleccionados y el número del lugar que tenga el mayor número '
            'de likes, todos en el mismo orden.',
  'title': 'Los Snacks',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Los-Snacks-ASINUS'},
 {'history': ' ',
  'input': 'Varios nombres de concursantes como van cruzando la meta. La '
           'entrada termina con el string " # " .',
  'note': ' ',
  'output': 'Los nombres en orden al lugar que ocuparon en la competencia. '
            'InputOutput📋PABLOVANESSAMARIANADANIELAIVAN# '
            'IVANDANIELAMARIANAVANESSAPABLO',
  'title': 'Los Ultimos Seran Los Primeros',
  'topics': ['strings'],
  'url': 'https://omegaup.com/arena/problem/Los-Ultimos-Seran-Los-Primeros'},
 {'history': 'El festival Codeachella ha comenzado y hay N conciertos '
             'simultáneos a los que Emiliano y sus amigos pueden acudir, por '
             'lo que, al haber más de una opción, no logran ponerse de '
             'acuerdo a cual acudir ya que no quieren separarse. Han decidido '
             'dejarlo a la suerte, para ello, Emiliano tiene el registro de '
             'todos los escenarios, registrados de manera numerada y en orden '
             'consecutivo con la inicial del nombre In, ejemplo: el primer '
             'escenario se llama Luna, por lo que lo tiene registrado como L, '
             'y este es el primero. Le ha pedido a uno de sus amigos que le '
             'den un número Z al azar de entre 1 y N, acto seguido, Emiliano '
             'deberá decirle a que escenario pertenece ese número para '
             'acudir a ese concierto y así solo les queda una cosa por hacer; '
             'Disfrutar la presentación del artista que les toque. '
             'ProblemaAyuda a Emiliano con un programa de cómputo que permita '
             'el registro de los escenarios como se indica en la descripción '
             'y que su amigo pueda seleccionar uno y así indicarles a sus '
             'amigos, en que escenario tocó estar en ese momento. Para que no '
             'se equivoquen o haya dudas, Emiliano deberá ocultar el nombre '
             'de aquellos escenarios que no hayan sido seleccionados con una " '
             'X" .',
  'input': 'N - Como el número de escenarios que hay para visitar en ese '
           'momento. I1, I2, I3, . . . In - Como la inicial de cada escenario '
           'que hay para visitar, desde el escenario 1 y hasta el N. Z - Como '
           'el número del escenario que el amigo eligió.',
  'note': ' ',
  'output': 'Las iniciales de todos los escenarios no seleccionados ocultas '
            'con " X" y la inicial del escenario que ha sido seleccionado, en '
            'el mismo orden que Emiliano los registró.',
  'title': 'Los escenarios en Codeachella',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Los-escenarios-en-Codeachella'},
 {'history': 'El partido de cróquet de la Reina Roja es muy singular, porque '
             'en lugar de palos se usan flamencos para golpear a los pobres '
             'erizos que sirven de pelotas. La Reina Roja siempre se había '
             'enorgullecido de que su parvada de flamencos se mantiene '
             'ordenada por estaturas entre juego y juego, y no se imaginó que '
             'la llegada de Alicia vendría a hacerla dudar incluso de esto. '
             'Durante el partido de cróquet, Alicia y la Duquesa ( eterna '
             'enemiga de la Reina Roja) platicaban sobre los flamencos que '
             'estaban usando. La Reina Roja estaba muy lejos y no alcanzó a '
             'escuchar la conversación, excepto cuando la Duquesa gritó con '
             'mucha seguridad " ¡Tienes razón Alicia! pájaros de igual '
             'plumaje hacen buen maridaje" . Después de que terminó el '
             'partido, la Reina Roja se dio cuenta de que sus flamencos eran '
             'muy coloridos ( había azules, blancos, cafés, dorados y '
             'escarlatas) . La Reina Roja decidió ordenar sus flamencos por '
             'estatura, pero separándolos por color. El problema era que '
             'ahora había cinco filas de flamencos, por lo que se preguntó '
             '¿será que el flamenco de estatura H_ 1 está en la misma fila '
             'que el flamenco de estatura H_ 2? Ayuda a la Reina Roja a '
             'contestar estas preguntas.',
  'input': 'Inicialmente, un entero N seguido de N parejas H, C donde H es la '
           'altura de un flamenco y C es su color ( A para azul, B para '
           'blanco, C para café, D para dorado y E para escarlata) . '
           'Posteriormente, un entero M seguido de M parejas de enteros H_ 1, '
           'H_ 2 que denotan una pregunta de la Reina Roja. Puedes suponer que '
           '1 ≤ N, M ≤ 10^ 6, que las estaturas de los flamencos están en en '
           'rango de 0 a 10^ 9 y que además son distintas.',
  'note': ' ',
  'output': 'Para cada pregunta, un 1 si los flamencos dados están en la '
            'misma fila y un 0 en caso contrario.',
  'title': 'Los flamencos de la Reina Roja',
  'topics': ['sortings'],
  'url': 'https://omegaup.com/arena/problem/Los-flamencos-de-la-Reina-Roja'},
 {'history': 'Santy tiene muchos libros, los cuales tienen un numero como '
             'identificador y todos son distintos, lo malo es que su hermana '
             'menor se los desordeno todos. Además mañana Santy entra a la '
             'escuela y necesita tener todos sus libros ordenados, al igual '
             'que debe tener una forma rápida de buscar aquellos que '
             'necesite. Así que decidió hacer un programa que le diga la '
             'posición de sus libros después de ordenarlos de menor a mayor. '
             'ProblemaDado un arreglo de N números no ordenados que '
             'representan los libros, decir en que posición se encuentran Q '
             'de esos libros después de ser ordenados',
  'input': 'Primera linea: N y Q que representan el numero de libros que hay y '
           'los que quiere conocer su posiciónSegunda linea: N números Ai '
           'que representa el ID de cada libroTercera linea Q números Bi que '
           'representa el ID de cada libro que busca',
  'note': ' ',
  'output': 'Una linea con Q números separados por un espacio representando '
            'la posición de cada libro después de ser ordenado; donde el '
            'numero 1 responde a B1 ( i responde a Bi) teniendo en cuenta que '
            'esta indexado desde 0Nota: Santy a veces puede ser muy tonto y '
            'pedir el mismo libro más de una vez',
  'title': 'Los libros de Santy 2',
  'topics': ['sortings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Los-libros-de-Santy-2'},
 {'history': 'Antes de la llegada de Gilgamesh a Uruk, la ciudad era '
             'constantemente asediada por sus enemigos y estaba al borde de la '
             'destrucción. Las deidades de Uruk, lejos de querer compartir el '
             'mismo destino que la ciudad, se transformaron en ratones y '
             'huyeron a sus agujeros. Al momento de transformarse, los ratones '
             'se encontraban en una hilera y los agujeros también, pero del '
             'otro lado de la calle. El ratón de más a la izquierda '
             'prosiguió a refugiarse en el agujero desocupado de más a la '
             'izquierda, y así sucesivamente hasta que todos los ratones se '
             'escondieron. Dados los nombres de los ratones, los nombres de '
             'los agujeros y las posiciones de todos ellos en sus respectivas '
             'hileras, determina qué ratón se refugió en qué agujero.',
  'input': 'Un entero r seguido de r parejas ( nombre, posición) '
           'correspondientes a los r ratones y un entero h seguido de h '
           'parejas ( nombre, posición) correspondientes a los h agujeros. '
           'Puedes suponer que 1 ≤ r ≤ h ≤ 100000. Los nombres contendrán '
           'letras minúsculas ( a lo más 30) , no hay nombres ni posiciones '
           'repetidas por hilera y las posiciones están en el intervalo [ 1, '
           '1000000000] con p1 < p2 si p1 está a la izquierda de p2.',
  'note': ' ',
  'output': 'Las r parejas ( nombre- ratón, nombre- agujero) que denotan qué '
            'ratón se escondió en qué agujero. La lista debe imprimirse '
            'según el orden de los ratones de izquierda a derecha.',
  'title': 'Los ratones de Uruk',
  'topics': ['sortings'],
  'url': 'https://omegaup.com/arena/problem/Los-ratones-de-Uruk'},
 {'history': 'Emiliano está por festejar el Día del Niño, y recibirá N '
             'regalos de sus papás y tíos, por lo que esta muy emocionado '
             'con lo que pueda encontrar al abrirlos. Sin embargo como es un '
             'niño muy metódico quiere llevar un registro exacto de sus '
             'regalos y quien se lo dio, así mismo como es muy exigente y '
             'está algo consentido, no se conformará con cualquier regalo, '
             'por lo que si algún regalo es pequeño, de seguro no le '
             'agradará y terminará ignorándolo. ProblemaComo Emiliano '
             'estará distraído con el festejo, no tiene oportunidad de '
             'realizar el registro, así que deberás ayudarlo con ello a '
             'través de un programa computacional. Toma en cuenta que '
             'recibirá N regalos, y para el método que ha creado para el '
             'registro necesita que cada regalo tenga dos categorías; el '
             'tamaño del regalo y quien lo entregó; lo cual deberá quedar '
             'en el registro de la siguiente manera, P para un regalo pequeño '
             'o G para un regalo grande, que irá en el tamaño, posterior a '
             'ello se registrará la inicial de quien se lo regaló. El plan '
             'de Emiliano, es que una vez que sea de noche, revisará el '
             'registro y sabrá quien le dio cada regalo. Solo que como te '
             'mencionamos, está algo consentido, por lo que todos los regalos '
             'que sean pequeños P, deberán ser omitidos de la impresión del '
             'registro, ya que para él esos regalos no tienen valor.',
  'input': 'N como el número de regalos que recibió. La captura de los datos '
           'de los N regalos: [ tamaño ] [ inicial de quien lo regalo ] . '
           'Considera que los dos datos deberán ser capturados en la misma '
           'línea, separados por un espacio ( G A) .',
  'note': ' ',
  'output': 'El listado de los regalos que sean de tamaño G: tamaño e '
            'inicial de quien lo regalo. Considera para la salida que los dos '
            'datos, deberán estár en la misma línea, separados por un '
            'espacio ( G D) . CondicionesSi nadie le regalo algún regalo '
            'grande ( G) , al imprimir el listado, se imprimirá 0.',
  'title': 'Los regalos de Emiliano',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Los-regalos-de-Emiliano-ASINUS'},
 {'history': ' ',
  'input': ' ',
  'note': ' ',
  'output': ' ',
  'title': 'Lozinke',
  'topics': ['strings'],
  'url': 'https://omegaup.com/arena/problem/Lozinke_COCI_2017'},
 {'history': 'Mario Montes es un famoso alpinista quien se encuentra '
             'contándole sobre sus aventuras a sus amigos. Ha escalado tantas '
             'montañas que cuando alguien le pide que nombre algunas que haya '
             'escalado, no sabe qué decir. Por suerte, siempre carga consigo '
             'la lista entera de todas las montañas que alguna vez ha '
             'conquistado y su altura. Como quiere impresionar a sus amigos, '
             'él pretende ordenar la lista de la mayor altura a la menor. No '
             'quiere perder la atención de los demás así que debe trabajar '
             'rápido.',
  'input': 'En la primera línea el entero N, la cantidad de montañas que '
           'Mario Montes ha ascendido. En la siguiente línea N enteros 1, '
           '000< = n_ i< = 7, 000: las alturas de esas montañas, separadas '
           'por un espacio en blanco.',
  'note': ' ',
  'output': 'Imprime 1 línea con las alturas de las montañas, de mayor a '
            'menor',
  'title': 'ME Mario el alpinista',
  'topics': ['sortings'],
  'url': 'https://omegaup.com/arena/problem/ME-Mario-el-alpinista'},
 {'history': 'El profesor Bárquez está calificando los exámenes de su clase '
             'de matemáticas. Él tiene un total de N alumnos. Los exámenes '
             'están valorados con enteros del 0 al 10. Una vez que los '
             'califica, los quiere ordenar del menor puntaje al mayor. Para '
             'darse una idea de cómo le va a su grupo, el profesor hará '
             'además lo siguiente: anotará la cantidad de alumnos que '
             'obtuvieron cada puntaje posible, empezando por el cero y '
             'terminando en el diez. Como él sabe que el primer número '
             'corresponde a la calificación de 0, la segunda al 1 y así '
             'consecutivamente, no escribirá los puntajes, solo la cantidad '
             'de veces que se reportaron. Por desgracia, a sus clases atienden '
             'muchos alumnos y él no dispone de tanto tiempo, por lo que '
             'desea realizar su tarea lo más rápido posible.',
  'input': 'En la primera línea el entero N, la cantidad de alumnos. En la '
           'siguiente línea N enteros: las calificaciones obtenidas por los '
           'alumnos, separadas por un espacio en blanco',
  'note': ' ',
  'output': 'Imprime 2 líneas, la primera contiene las calificaciones '
            'obtenidas, ordenadas de menor a mayor. La segunda línea contiene '
            '11 enteros a_ 0, a_ 1, . . . a_ 10 la cantidad de alumnos que '
            'obtuvieron la calificación a_ i.',
  'title': 'ME asistente del profesor',
  'topics': ['sortings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/ME-asistente-del-profesor'},
 {'history': 'La galaxia sigue amenazada por Lord Palpatine quien busca '
             'filtrarse al consejo Jedi a través de la seducción del Darth '
             'Side a Anakin Skywalker. El consejo Jedi tendrá una consulta '
             'para ver quien será el nuevo gran maestro que formará parte de '
             'él, hay 4 candidatos y de quien resulte ganador dependerá el '
             'futuro de la República. Los candidatos estan representados por '
             'un numero de la siguiente manera: 1 Anakin Skywalker2 Ahsoka3 '
             'Obi - Wan Kenobi4 Luminara UnduliSi Anakin Slywalker logra ganar '
             'la votación el Imperio se instaura, si no la Republica seguirá '
             'gobernando con igualdad.',
  'input': 'Una secuencia de N enteros que representan el número del '
           'candidato al que se le dio el voto. Se registran votos hasta que '
           'se introduzca un - 1',
  'note': ' ',
  'output': 'Dos líneas de texto con la siguiente información: la primera '
            'con el nombre del ganador y la segunda con el futuro de la '
            'galaxia',
  'title': 'Maestro Jedi',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Maestro-Jedi'},
 {'history': "Un poco de Historia: # El dictador ' perpetuus' Julio César "
             'utilizaba un código cuando quería mantener en secreto un '
             'mensaje. El cifrado consistía en sustituir la primera letra del '
             'alfabeto, A, por la cuarta, D, y asi sucesivamente con las '
             'demás, es decir, la segunda, B, por la quinta, E. . . Bien esto '
             'sucede si la clave es igual a 3, es decir si tomamos la primera '
             'letra y le sumamos 3, obtenemos entonces la cuarta letra. Para '
             'descifrar se tendría que hacer la operación contraria. # '
             "Contexto: # En la ciudad se ha abierto un maid café. Las maid' "
             's al repartir publicidad se dieron cuenta de la popularidad del '
             'negocio, tristemente no podrían atender a todos los '
             'interesados. Es entonces que se les ocurre una idea, Adriana una '
             'de las maid es estudiante de Computer Science, y propone que '
             'entraran al maid café aquellas personas que puedan resolver un '
             'acertijo. El acertijo consta de descifrar un mensaje encriptado '
             'bajo el método del cifrado césar. . . Tu quieres ser uno de '
             'los pocos que entren al maid café asi que tendrás que resolver '
             "los acertijos. # Las maid' s proponen este abecedario que se "
             'usará para cifrar los mensajes: " abcdefghijklmnopqrstuvwxyz '
             '0123456789" # Observaciones, entre la Z y el 0 se considera el '
             'carácter de espacio. Si al sumarle la clave a la posición de '
             'la letra, la posición excede el tamaño del abecedario, '
             'entonces se regresa al inicio y se continua desde ahí.',
  'input': 'Dos lineas de código, la primera tendrá un string con el mensaje '
           'encriptado. La segunda tendrá la clave para descifrar el mensaje.',
  'note': ' ',
  'output': 'Una única linea que contenga el mensaje descifrado',
  'title': 'Maid Café',
  'topics': ['strings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Maid-Cafe'},
 {'history': 'En algún rincón de tu casa debe haber una máquina de '
             'escribir. Si la llegaras a usar, tal vez notarías que está '
             'descompuesta. En este caso, tenemos una máquina de escribir que '
             'cambia entre mayúsculas y minúsculas de manera arbitraria. Por '
             'ejemplo, podrías obtener el siguiente resultado: hOLa. eStoY '
             'DesComPUEsta. cuando en realidad deseabas teclear: Hola. Estoy '
             'descompuesta. Por supuesto, un lector que domine la gramática '
             'podría saber cuáles letras deben ser mayúsculas y cuáles '
             'minúsculas. Para este ejercicio consideraremos una regla '
             'simplificada de los casos de mayúscula inicial: la primera '
             'letra de cada enunciado ( que terminaremos con punto) debe ser '
             'mayúscula, todas las demás letras deben ser minúsculas.',
  'input': 'Consiste de una cadena S de longitud entre 1 y 80. Los caracteres '
           'de esa cadena podrán ser letras ( sin acentos) , dígitos, puntos '
           'y espacios.',
  'note': ' ',
  'output': 'Consiste de una cadena T en la cual se han arreglado las '
            'mayúsculas y las minúsculas de acuerdo a la regla simplificada.',
  'title': 'Máquina descompuesta',
  'topics': ['strings'],
  'url': 'https://omegaup.com/arena/problem/Maquina-descompuesta'},
 {'history': 'En este caso, tenemos una máquina de escribir que cambia entre '
             'mayúsculas y minúsculas de manera arbitraria. Pero ahora la '
             'utilizaremos para escribir títulos y subtítulos de películas. '
             'Por ejemplo: duRO De mAtaR 3: La VENgaNzAdebería convertirse '
             'en: Duro De Matar 3: " La Venganza" La reglas serán: La primera '
             'letra de cada palabra debe ser mayúscula y todas las demás '
             'letras deben ser minúsculas. Si aparece el signo de dos puntos '
             '( : ) lo siguiente es un subtítulo y debe aparecer entre '
             'comillas.',
  'input': 'Consiste de una cadena S de longitud entre 1 y 80. Los caracteres '
           'de esa cadena podrán ser letras ( sin acentos) , dígitos, dos '
           'puntos y espacios.',
  'note': ' ',
  'output': 'Consiste de una cadena T en la cual se han arreglado las '
            'mayúsculas y las minúsculas, y cuando sea necesario agregar '
            'comillas al subtítulo.',
  'title': 'Máquina descompuesta 2',
  'topics': ['strings'],
  'url': 'https://omegaup.com/arena/problem/Maquina-descompuesta2'},
 {'history': 'KENNY quiere saber el mayor de N números, para hacerlo mas '
             'interesante el quiere sumarle el numeromas pequeño y '
             'multiplicarlo por N, como KENNY esta muerto quiere que hagas un '
             'programa que realicé estos cálculos por el.',
  'input': 'En la primera linea un entero N que indica la cantidad de números '
           'a leer en la segunda linea separados por un espacio.',
  'note': ' ',
  'output': 'Un entero L que representa la suma del mayor con el menor y su '
            'multiplicación por N',
  'title': 'Mataron a Kenny',
  'topics': ['sortings'],
  'url': 'https://omegaup.com/arena/problem/Mataron-a-Kenny'},
 {'history': 'En el sistema decimal podemos escribir números como 451, 672, '
             '30, etc, es decir, es un sistema de números ( con base de diez) '
             'teniendo así diez valores posibles ( 0, 1, 2, 3, 4, 5, 6, 7, 8, '
             '9) por cada valor posicional. Mientras que en el caso del '
             'sistema hexadecimal podemos escribir números como 3E2ADF3, '
             '1A1B1C0D, 01B31, DAB2, etc, es decir, es un sistema de números '
             'y letras ( con base de dieciséis) cuyos posibles valores '
             'numéricos y letras pueden ser ( 0, 1, 2, 3, 4, 5, 6, 7, 8, 9) '
             'para números y ( A, B, C, D, E, F) para letras por cada valor '
             'posicional. Dicho proceso de conversión se realiza dividiendo '
             'entre 16 el numero decimal que queremos convertir, tratando la '
             'división como una división entera sin decimales, anotar el '
             'resto y continuar dividendo el cociente obtenido entre '
             'dieciséis hasta conseguir un cociente final de entre 1 y 15.',
  'input': 'Un número entero N',
  'note': ' ',
  'output': 'Su representación del N en Hexadecimal',
  'title': 'Mates discretas - Ejercicio 1',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Mates-discretas---Ejercicio-1'},
 {'history': 'Dado un conjunto de 1 ≤ N ≤100 números enteros, determina '
             'cuantas veces aparece el elemento de valor máximo.',
  'input': 'En la primera línea el entero N. En la segunda línea y separados '
           'por espacios, los N datos del conjunto.',
  'note': ' ',
  'output': 'Un entero que denota cuantas veces aparece el dato de valor '
            'máximo. EjemplosInputOutputDescription📋72 5 9 10 1 10 82El dato '
            'de valor máximo es 10 y aparece 2 veces en el conjunto.',
  'title': 'Máximo repetido',
  'topics': ['sortings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Maximo-repetido'},
 {'history': 'Realiza un problema que ordene de mayor a menor dos números.',
  'input': 'Escribe dos números enteros x_ 1 y x_ 2',
  'note': ' ',
  'output': 'Los dos números enteros introducidos pero ordenados de mayor a '
            'menor.',
  'title': 'Mayor a menor',
  'topics': ['sortings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Mayor-a-menor'},
 {'history': 'Dados tres número enteros, muestra el mayor.',
  'input': 'Tres enteros 1 ≤ a, b, c ≤ 10000.',
  'note': ' ',
  'output': 'El mayor de a, b, c.',
  'title': 'Mayor de 3',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Mayor-de-3'},
 {'history': 'Mencho tiene mucha tarea y poco tiempo libre, te quiere pedir '
             'ayuda para saber cuanta tarea puede hacer en su tiempo libre. '
             'Mencho revisa su reloj cada vez que termina una tarea, por lo '
             'que significa que, a menos de que coincida su tarea con su '
             'tiempo restante se va a pasar tantito de sus minutos.',
  'input': 'Se te va a dar un número Long Long X que vas a tener que '
           'descomponer en números individuales. Ej( 12345 [ 5, 4, 3, 2, 1] ) '
           'que van a indicar los minutos que se tarda realizando cada tarea y '
           'un número entero Y que van a ser los minutos libres de Mencho.',
  'note': ' ',
  'output': 'Cuantas tareas puede hacer Mencho.',
  'title': 'Mencho y sus tareas',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Mencho-y-sus-tareas'},
 {'history': 'Realiza un problema que ordene de menor a mayor dos números.',
  'input': 'Escribe dos números enteros x1 y x2',
  'note': ' ',
  'output': 'Los dos números enteros introducidos pero ordenados de menor a '
            'mayor.',
  'title': 'Menor a Mayor',
  'topics': ['sortings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Menor-a-Mayor'},
 {'history': 'Mientras Iris buscaba información en internet encontró '
             'información sobre el código ASCII al leer esa información a '
             'ella le interesó esto, y su intención de ella es aprenderlo '
             'por lo tanto le comento a su amigo Francisco para que la '
             'ayudará a estudiar y practicar el código ASCII, así que Iris '
             'ahora le escribe a Francisco sus mensajes en código ASCII, pero '
             'desafortunadamente él no le entiende a este código por lo '
             'tanto él te contacto a ti como buen programador para que lo '
             'ayudes a construir un traductor de cadenas recibidas en ASCII '
             'para que él le pueda entender.',
  'input': 'N números ASCII',
  'note': ' ',
  'output': 'El significado de la palabra',
  'title': 'Mensaje ASCII',
  'topics': ['strings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Mensaje-ASCII'},
 {'history': 'La encriptación DRM es relativamente nueva . Dada una cadena '
             'encriptada ( la cual llamaremos mensaje DRM) , la '
             'desencriptación consiste en tres simples pasos : Dividir , '
             'Rotar y Unir . Estos pasos se describirán usando el siguiente '
             'mensaje DRM como ejemplo , “EWPGAJRB” : Divide - Primero , '
             'divide el mensaje a la mitad , obteniendo " EWPG" y " AJRB" . '
             'Rota - Para cada mitad , calcula su valor de rotación , el cual '
             'se obtiene sumando el valor de cada carácter ( A = 0 , B = 1 , '
             '. . . , Z = 25) . El valor de rotación de " EWPG" es 4 + 22 + '
             '15 + 6 = 47 . Rota cada elemento de " EWPG" 47 veces hacia '
             'adelante ( pasando de A a Z en caso de ser necesario) para '
             'obtener una nueva cadena , " ZRKB" . Haciendo lo mismo con la '
             'segunda mitad " AJRB" , se obtiene " BKSC" . Une - El último '
             'paso es unir la dos mitades obtenidas en el paso anterior , esto '
             'se lograra rotando cada carácter de la primera mitad el valor '
             'correspondiente del carácter en la segunda mitad . Para la '
             "primera posición , rotar ' Z' un total de ' B' veces , "
             "significa avanzar una sola vez , es decir , se obtiene ' A' . "
             'Continuando con este proceso para cada posición , se obtiene " '
             'ABCD" , siendo este el mensaje ya descifrado .',
  'input': 'La entrada consiste en una sola línea , una cadena de longitud l '
           ', que es el mensaje DRM que se va a descifrar . Todos los '
           'caracteres de la cadena son letras mayúsculas .',
  'note': ' ',
  'output': 'Muestra el mensaje DRM ya descifrado .',
  'title': 'Mensajes DRM',
  'topics': ['strings'],
  'url': 'https://omegaup.com/arena/problem/Mensajes-DRM'},
 {'history': 'Imagine que tiene dos pilas de exámenes ordenados por número '
             'de lista y que quiere obtener una sola pila con todos los '
             'exámenes ordenados por número de lista. Por ejemplo, una pila '
             'podría consistir de los cuatro exámenes con números 1, 5, 6 y '
             '9 y la otra pila podría consistir de los tres exámenes con '
             'números 2, 7 y 11. Entonces, al mezclar los números de lista '
             'obtendría una pila con los siete exámenes con números 1, 2, '
             '5, 6, 7, 9 y 11. Si se da una lista de N números a1< a2< ⋯< aN '
             'y otra lista de M números b1< b2< ⋯< bM se desea obtener una '
             'lista con N+ M números c1< c2< . . . < cN+ M que contenga a los '
             'N+ M números dados.',
  'input': 'La entrada consiste de dos números enteros N y M separados por un '
           'espacio y con 1≤N, M≤1000, seguidos de un renglón con N números '
           'enteros 0< a1< a2< ⋯< aN< 10, 000 y otro reglón con M números '
           'enteros 0< b1< b2< ⋯< bM< 10, 000. Puede suponer que todos los '
           'valores de a y de b serán diferentes entre sí.',
  'note': ' ',
  'output': 'La salida consiste de una lista con N+ M números enteros c1< c2< '
            '⋯< cN+ M.',
  'title': 'Mezcla de números',
  'topics': ['sortings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Mezcla-de-numeros'},
 {'history': 'Función que devolvera el minimo tamaño del sub arreglo que '
             'debe ser ordenado. ParámetrosN: Tamaño del arreglo. Regresa: '
             'un entero representando el tamaño. NOTA: El arreglo esta '
             'indexado en 0. SampleEl archivo de ejemplo consiste de un entero '
             'n que es el tamaño del arreglo, seguido del arreglo. Luego, en '
             'la ultima linea ira un entero con la respuesta.',
  'input': ' ',
  'note': ' ',
  'output': ' ',
  'title': 'Escaleras alteradas',
  'topics': ['sortings'],
  'url': 'https://omegaup.com/arena/problem/Minimo-Ordenamiento'},
 {'history': 'Denotaremos el máximo común divisor de dos enteros positivos '
             'a, b como mcd( a, b) y a su mínimo común múltiplo como mcm( '
             'a, b) . Se sabe que éstos se pueden calcular como sigue: Se '
             'sabe que la función del mínimo común múltiplo es asociativa '
             'por izquierda y por derecha, es decir, mcm( a, b, c) = mcm( a, '
             'mcm( b, c) ) = mcm( mcm( a, b) , c) . Escribe un programa que '
             'calcule el mínimo común múltiplo de una secuencia de n '
             'enteros.',
  'input': 'Un entero n seguido de una secuencia de n enteros. Puedes suponer '
           'que 1 ≤ n ≤ 10, que los n enteros están en el rango de 1 a 50 y '
           'que es posible realizar todos los cálculos usando el tipo int.',
  'note': ' ',
  'output': 'Un entero que sea el mínimo común múltiplo de los n enteros de '
            'la secuencia.',
  'title': 'Mínimo común múltiplo de varios enteros',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Minimo-comun-multiplo-de-varios-'},
 {'history': 'La moda en estadística es el valor que tiene mayor frecuencia '
             'absoluta en un conjunto de datos. Para calcular la moda deberás '
             'leer el número total de datos n seguido por los datos de la '
             'lista l. Se asume que l siempre tendrá una única moda.',
  'input': 'Un número entero n seguido de la lista de elementos l. l será '
           'una lista de números enteros menores a 1000 separados por '
           'espacio. 0< n < 1000',
  'note': ' ',
  'output': 'La moda de l',
  'title': 'Moda-GCF',
  'topics': ['sortings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Moda-GCF'},
 {'history': 'Como cualquier otro adolescente, las vacas adolescentes '
             'ocasionalmente se sobrepasan con las modas. Algunas veces es un '
             'hula hula, una piedra mascota, otras veces es Pokemon, Rick '
             'Astley, o tatuajes tribales en sus ubres. Matemáticamente, '
             'sabemos que una moda tiene un nivel de atracción inicial L. La '
             'vaca i tiene una resistencia R_ i que dice cuanto ella puede '
             'evitar una moda antes de tener otra alternativa distinta a la de '
             'participar. Cuando el nivel de atracción de una moda alcance o '
             'exceda la resistencia de una vaca, entonces la vaca querrá '
             'participar de la moda. Cada vaca que participe en una moda '
             'aumenta ( a través de presión colectiva) el nivel de '
             'atracción de esa moda por algún valor K. ProblemaDada una '
             'población de N vacas, determine cuántas vacas participaran en '
             'una moda.',
  'input': 'Línea 1: Tres enteros separados por espacios: N, L, y KLíneas 2. '
           '. N+ 1: La línea i+ 1 contiene un solo entero que es la '
           'resistencia a modas de la vaca i: R_ i',
  'note': ' ',
  'output': 'Línea 1: Un solo entero que es el número de vacas que '
            'participan finalmente de la moda.',
  'title': 'Modas',
  'topics': ['sortings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Modas'},
 {'history': 'Dada una secuencia de N enteros donde el entero 5 aparece al '
             'menos dos veces, realiza lo siguiente: Sea p_ 1 la posición de '
             'la primera ocurrencia del entero 5 en la secuencia, invierte la '
             'subsecuencia anterior a p_ 1. Sea p_ 2 la posición de la '
             'segunda ocurrencia del entero 5 en la secuencia, invierte la '
             'subsecuencia posterior a p_ 2. Busca la primera ocurrencia del '
             'entero 7 en la subsecuencia posterior a p_ 1 pero anterior a p_ '
             '2. Si existe, reemplázala por el entero 0. En caso contrario, '
             'ordena la subsecuencia mencionada. Escribe un programa que '
             'imprima el estado final de la secuencia.',
  'input': 'Un entero N seguido de los N enteros de la secuencia. Puedes '
           'suponer que 2 ≤ N ≤ 100, que los enteros de la secuencia están en '
           'el rango de 0 a 100 y que el entero 5 aparece al menos dos veces.',
  'note': ' ',
  'output': 'Los N enteros de la secuencia después de realizar las '
            'operaciones.',
  'title': 'Modificando secuencias a lo loco',
  'topics': ['sortings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Modificando-secuencias-a-lo-loco'},
 {'history': 'Escribe un programa que implemente el siguiente algoritmo '
             'recursivo f, el cual opera recursivamente sobre una secuencia de '
             'enteros y realiza los siguientes pasos: Sea S la secuencia '
             'recibida por f y sea N la cantidad de elementos de S. Si N ≥ 2, '
             'entonces: Si el primer elemento de S es par, entonces: 1. 1. '
             'Ordena ascendentemente los primeros N- 1 elementos de S. 1. 2. '
             'Ejecuta f sobre los primeros N- 1 elementos de S. Si el último '
             'elemento de S es par, entonces: 2. 1. Invierte el orden de los '
             'últimos N- 1 elementos de S. 2. 2. Ejecuta f sobre los últimos '
             'N- 1 elementos de S.',
  'input': 'Un entero N seguido de los N enteros de la secuencia original '
           'sobre la que f se ejecutará. Puedes suponer que 1 ≤ N ≤ 20 y que '
           'todos los elementos de la secuencia están entre 0 y 10.',
  'note': ' ',
  'output': 'La secuencia después de ejecutar f sobre ella.',
  'title': 'Modificando secuencias recursivamente (reloaded)',
  'topics': ['sortings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Modificando-secuencias-recursiv3'},
 {'history': 'Escribe un programa que implemente el siguiente algoritmo '
             'recursivo f, el cual opera sobre una secuencia S de enteros y '
             'realiza los siguientes pasos: Ordena S. Si S tiene 20 o más '
             'elementos, entonces: Invierte el orden de los primeros 20 '
             'elementos de S. Busca la posición p del primer 0 de S. Si la '
             'búsqueda tiene éxito, entonces: Escribe un 1 en p. Ejecuta f '
             'sobre la secuencia posterior a p.',
  'input': 'Un entero N seguido de los N enteros de S. Puedes suponer que 1 ≤ '
           'N ≤ 10^ 4 y que todos los elementos de S están entre - 1000 y + '
           '1000.',
  'note': ' ',
  'output': 'La secuencia S después de ejecutar f sobre ella.',
  'title': 'Modificando secuencias recursivamente (Reto Tokio)',
  'topics': ['sortings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Modificando-secuencias-recursiv4'},
 {'history': 'Después de haber ahorrado monedas durante toda tu vida te has '
             'dispuesto a gastarlas, sin embargo andar cargando kilos de '
             'monedas por la vida no es algo práctico. Así que te has puesto '
             'a pensar la mejor forma de cargar las monedas de modo que '
             'siempre te sea posible comprar algo que se te pueda antojar pero '
             'no quieres gastar más de cierta cantidad. Tu pareja sentimental '
             '( novio o novia) ha decidido ayudarte, y para ello ha '
             'seleccionado un set de monedas que puedas llevar contigo. Así '
             'que por ahora solo quieres saber cuál es la primera cantidad '
             'que no podrás pagar con las monedas que ha seleccionado tu '
             'pareja sentimental. Nota que no quieres recibir cambio puesto '
             'que ya estás harto de tantas monedas.',
  'input': 'Primera línea: contiene un entero N indicando la cantidad de '
           'monedas que ha seleccionado tu pareja sentimental. Segunda línea: '
           'contiene N enteros v_ i indicando el valor de las monedas que ha '
           'seleccionado tu pareja sentimental.',
  'note': ' ',
  'output': 'Tu programa deberá decir cuál es la cantidad más pequeña que '
            'no puedes pagar con las monedas seleccionadas, sin que te den '
            'cambio.',
  'title': 'Monedas',
  'topics': ['sortings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Monedas'},
 {'history': 'Cuentas con un fila infinita de monedas donde todas muestran sol '
             'inicialmente. Escribe un programa que calcule la menor cantidad '
             'de monedas que necesitas voltear para que exista al menos un '
             'águila en cada uno de los M intervalos que se te darán.',
  'input': 'Un entero M seguido de M parejas de enteros I, J correspondientes '
           'a intervalos cerrados. Puedes suponer que 0 ≤ M ≤ 100, 000 y que 1 '
           '≤ I ≤ J ≤ 1, 000, 000.',
  'note': ' ',
  'output': 'Un entero que sea la menor cantidad de monedas que necesitas '
            'voltear.',
  'title': 'Monedas volteadas en intervalos',
  'topics': ['sortings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Monedas-volteadas-en-intervalos'},
 {'history': 'Escribe un programa que imprima un mosaico de - y # de ancho N y '
             'altura 2. La primera fila debe comenzar con - y la segunda con # '
             '. Los caracteres de la misma fila deben alternarse.',
  'input': 'Un entero N. Puedes suponer que 0 ≤ N ≤ 10000.',
  'note': ' ',
  'output': 'Dos líneas de N caracteres cada una, según lo descrito arriba.',
  'title': 'Mosaicos de caracteres',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Mosaicos-de-caracteres'},
 {'history': 'Mr. Mistoffelees es un mago malvado que busca causar '
             'inconveniencias. Su plan mas reciente es cambiar el orden con el '
             'cual percibimos los números. Comos sabemos, el número 2 va '
             'inmediatamente después del 1, el 3 después del 2 etc. A '
             'través de magia maléfica, el orden ahora es distinto. Tu '
             'tienes una colección de n números enteros que mantienes '
             'ordenada. Tu tarea es acomodarlos con respecto al nuevo orden '
             'dado por el mago.',
  'input': 'En la primer línea un entero 1≤n≤1e5, la cantidad de números '
           'afectados por el mago. En la segunda línea hay n números '
           'distintos 1≤ai≤n estos representan el nuevo ordenamiento de los '
           'números. En la tercer línea un entero 1≤m≤1e5 el tamaño de tu '
           'colección de números. En la última línea m enteros 1≤bi≤n los '
           'numeros que tienes en tu colección.',
  'note': ' ',
  'output': 'm enteros separados por un espacio, los cuales deben encontrarse '
            'ordenados de forma ascendente.',
  'title': 'Mr. Mistoffelees',
  'topics': ['sortings'],
  'url': 'https://omegaup.com/arena/problem/Mr-Mistoffelees'},
 {'history': ' ',
  'input': 'Dada n numero de átomos y m número de pipetas, determine hasta '
           'cuantos atomos pueden depositarse en cada pipeta para bombardear '
           'el elemento deseado. Nota: Si le sobran átomos sin transportar, a '
           'Bohr le cobran comisión, por lo tanto desea tranportar tantos '
           'átomos como pueda en cada pipeta.',
  'note': ' ',
  'output': 'El maximo numero de atomos a transportar por '
            'pipetaInputOutput📋1830 117030',
  'title': 'MrKrista en Dinamarca',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/MrKrista-en-Dinamarca'},
 {'history': 'Karel está trabajando arduamente, por eso, le pidieron que '
             'mueva un montón de beepers hacia un montón de beepers que '
             'está a una distancia desconocida de élProblemaMueve un montón '
             'de beepers de cantidad desconocida hacia otro montón que está '
             'en una distancia desconocida ( en direcciónde tu orientación '
             'inicial) .',
  'input': ' ',
  'note': ' ',
  'output': ' ',
  'title': 'Mueve el monton',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Mueve-el-monton'},
 {'history': 'Mucha gente tiene problemas al exponer, y los robots humanoides '
             'del planeta N- 0J4- V4 no son la excepción. Aunque estos robots '
             'hablan con números en lugar de con palabras, también son '
             'propensos a usar muletillas parecidas al clásico " este. . . " '
             'de los humanos terrestres ( pero ellos con números) . Tuviste '
             'acceso al discurso de un robot profesor de programación y te '
             'gustaría detectar si también usa muletillas. Como en realidad '
             'no entiendes el idioma de los robots, asumirás que la muletilla '
             'es el número que más aparece en el discurso del robot. Escribe '
             'un programa que te ayude a identificarlo.',
  'input': 'Un entero N seguido de los N enteros que conforman el discurso del '
           'robot. Puedes asumir que 1 ≤ N ≤ 100, 000 y que todos los enteros '
           'del discurso están en el rango de 0 a 2, 000, 000, 000.',
  'note': ' ',
  'output': 'El entero que más aparezca en el discurso del robot. En caso de '
            'que varios números aparezcan la misma cantidad de veces, puedes '
            'imprimir cualquiera de ellos.',
  'title': 'Muletillas de robots',
  'topics': ['sortings'],
  'url': 'https://omegaup.com/arena/problem/Muletillas-de-robots'},
 {'history': ' ',
  'input': 'Un numero positivo o negativo A y un numero positivo o negativo B.',
  'note': ' ',
  'output': 'EL RESULTADO ES A * B',
  'title': 'Multiplicación de 2 números',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Multiplicacion-de-2-numeros'},
 {'history': 'A Juan le acaban de enseñar en su clase de Matemáticas que '
             'cualquier numero entero N puede ser representado por la '
             'multiplicación de otros dos números enteros A y B. Sin embargo '
             'él se dio cuenta que no solo hay una manera para representar N '
             'como producto de dos numerosPor ejemplo el numero 20= ( 1∗20) , '
             '( 2∗10) , ( 4∗5) . Juan sabe que eres buena gente y quiere que '
             'le ayudes a saber cual es la manera en la que A∗B= N tal que A= '
             '̸B y A, B> 1 y que a su vez estos dos números sean lo mas '
             'cercano posibles entre si.',
  'input': 'Un numero entero N',
  'note': ' ',
  'output': 'Dos números A y B separados por un espacio mostrando primero el '
            'más pequeño. En caso de no cumplir las condiciones mostrar un '
            '−1',
  'title': 'Múltiplos Cercanos',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Multiplos-Cercanos'},
 {'history': ' ',
  'input': 'Primera línea: n Cantidad de elementos a ordenar. Segunda línea: '
           'x_ 1 x_ 2 . . . x_ n Los n elementos a ordenar separados por un '
           'espacio.',
  'note': ' ',
  'output': 'Los n número separados por un espacio y ordenados según el '
            'algoritmo de Nieves.',
  'title': 'Nieves y el merge-sort',
  'topics': ['sortings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Nieves-y-el-merge-sort'},
 {'history': 'Elaborar un programa que recibe los vuelos disponibles con sus '
             'costos. También recibe una lista de los países a visitar en un '
             'viaje. Devolver el costo total del viaje. Por ejemplo, vea el '
             'siguiente grafo con los vuelos: Se representan en una tabla con '
             'los detalles: Dada la lista de países MEX PAN ESP BRAel costo '
             'del viaje es 200 + 360 + 350 = 910',
  'input': 'n mo_ 1 d_ 1 c_ 1o_ 2 d_ 2 c_ 2⋮o_ n d_ n c_ np1 p2 ⋯ p_ mDonde n '
           'es el número de vuelos, m es el número de países a visitar, o_ '
           'i es el origen del vuelo, d_ i es el destino, c_ i es el costo yp_ '
           'j es el país a visitar, 1< = i< = n, 1< = j< = m. Por '
           'simplicidad, asumir que los costos de los vuelos son enteros yque '
           'los países se representan con palabras de 3 caracteres.',
  'note': ' ',
  'output': 'El costo del viaje.',
  'title': 'No 1. Buscar costo vuelo',
  'topics': ['sortings'],
  'url': 'https://omegaup.com/arena/problem/No-1-Buscar-costo-vuelo'},
 {'history': 'Susana Distancia quiere saber qué ciudadanos sí están '
             'guardando la sana distancia en esta contingencia. Para lograrlo, '
             'Susana planea llamarles por teléfono con el objetivo de '
             'hacerles una encuesta, pero los operadores del servicio le '
             'mandaron una lista de nombres completos que aparecen un orden '
             'que no le agrada a Susana Distancia: Los nombres completos de '
             'dos palabras tienen primero un apellido y luego un nombre. Los '
             'nombres completos de tres palabras tienen primero dos apellidos '
             'y luego un nombre. Los nombres completos de cuatro palabras '
             'tienen primero dos apellidos y luego dos nombres. También hay '
             'nombres en la lista de una sola palabra o de más de cuatro '
             'palabras, pero estos se consideran inválidos. Ayuda a Susana '
             'Distancia a reconstruir la lista de los nombres completos, donde '
             'aquéllos que sean válidos aparezcan en el orden de primero los '
             'nombres y luego los apellidos, mientras que cada nombre completo '
             'inválido se reemplace por un asterisco.',
  'input': 'Una lista de los nombres completos de las personas a las que '
           'llamará Susana, uno por renglón. Cada nombre completo es una '
           'secuencia de cadenas de letras ( sin acentos) separadas por '
           'espacios. Puedes suponer que cada renglón comienza y termina con '
           'una letra y que no aparecen dos o más espacios consecutivos.',
  'note': ' ',
  'output': 'Una lista de los nombres completos, uno en cada renglón, donde '
            'los nombres completos válidos aparecen como se solicitaron en la '
            'descripción y los nombres completos inválidos se reemplazan por '
            'un asterisco * . LímitesNingún renglón medirá más de 40 '
            'caracteres. Puede haber una cantidad arbitraria de renglones.',
  'title': 'Nombres y apellidos sanos',
  'topics': ['strings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Nombres-y-apellidos-sanos'},
 {'history': 'Brithany esta aprendiendo a expresar números en su notación '
             'desarrollada, así que quiere crear un programa que reciba un '
             'numero y lo exprese de esa manera. Brithany sabe que un numero '
             'en notación desarrollada debe expresarse de la siguiente '
             'manera: N = 1234 Notación desarrollada: 1000 + 200 + 30 + '
             '4Ayuda a Brithany a crear ese programa que necesita.',
  'input': 'Un entero N que es el numero a expresar en notación desarrollada',
  'note': ' ',
  'output': 'Una línea donde se exprese N y su notación desarrollada',
  'title': 'Notación Desarrollada (Mensaje)',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Notacion-Desarrollada-Mensaje'},
 {'history': 'Después de la semana de descanso por las díficles pruebas del '
             'Hombre Misterioso, los programadores mayas necesitan seguir '
             'aprendiendo cosas para derrotar al Malvado Robot OMI. Se '
             'aproxima un combate, entonces, el Hombre Misterioso les va '
             'enseñar la Numeración Maya, ya que, el lenguaje de Maya+ + '
             'esta codificado con este ( vigesimal, es decir, base 20) . Esta '
             'numeración esta dado por los siguientes simbolos y sus valores '
             'de la numeración decimal: ? = 0∗= 1. −= 5. Recordemos que en la '
             'numeración maya si la cantidad de ∗ modulo 5 es igual a 0 se '
             'sustituye los ∗ por un −. A continuación mostramos algunas '
             'equivalencias con el sistema decimal, El resto de numeros salen '
             'intuitivamente. Veamos un ejemplo para mayor comprensión: '
             'ProblemaEscribe un programa que convierte un número entero de '
             'sistema decimal a una cadena que representa su valor en la '
             'númeración maya dado con las condiciones anteriores y '
             'viceversa.',
  'input': 'En la primera línea un entero T que indica el tipo de converción '
           'que vas hacer ( 1= decimal a numeración maya, 2= numeración maya '
           'a decimal) , en la segunda línea un entero n o una cadena s '
           'dependiendo del tipo de conversión.',
  'note': ' ',
  'output': 'La cadena s que representa a x si T= 1, o el entero x que '
            'representa a s si T= 2. InputOutput📋119—* * * * / 📋2–* * / - / * '
            '/ 512📋11856—* / –* * / * * * * / 📋2? / ? / * / 400LímitesPara el '
            '50',
  'title': 'Numeración Maya',
  'topics': ['strings'],
  'url': 'https://omegaup.com/arena/problem/Numeracion-Maya'},
 {'history': 'Utilizando la estructura repetitiva FOR y escribiendo un solo '
             'caracter por vez debes realizar el número cero con el caracter '
             'ingresado por pantalla. El tamaño del mismo es de 9 filas de '
             'alto y 5 columnas de ancho.',
  'input': 'La entrada consiste en un caracter, con el cual se realizará el '
           'número solicitado',
  'note': ' ',
  'output': 'El número solicitado realizado',
  'title': 'Número Cero',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Numero-Cero'},
 {'history': 'Utilizando la estructura repetitiva FOR y escribiendo un solo '
             'caracter por vez debes realizar el número CINCO con el caracter '
             'ingresado por pantalla. El tamaño del mismo es de 9 filas de '
             'alto y 5 columnas de ancho.',
  'input': 'La entrada consiste en un caracter, con el cual se realizará el '
           'número solicitado',
  'note': ' ',
  'output': 'El número solicitado realizado',
  'title': 'Número cinco',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Numero-cinco'},
 {'history': 'Utilizando la estructura repetitiva FOR y escribiendo un solo '
             'caracter por vez debes realizar el número CUATRO con el '
             'caracter ingresado por pantalla. El tamaño del mismo es de 9 '
             'filas de alto y 5 columnas de ancho.',
  'input': 'La entrada consiste en un caracter, con el cual se realizará el '
           'número solicitado',
  'note': ' ',
  'output': 'El número solicitado realizado',
  'title': 'Número cuatro',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Numero-cuatro'},
 {'history': 'Utilizando la estructura repetitiva FOR y escribiendo un solo '
             'caracter por vez debes realizar el número DOS con el caracter '
             'ingresado por pantalla. El tamaño del mismo es de 9 filas de '
             'alto y 5 columnas de ancho.',
  'input': 'La entrada consiste en un caracter, con el cual se realizará el '
           'número solicitado',
  'note': ' ',
  'output': 'El número solicitado realizado',
  'title': 'Número dos',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Numero-dos'},
 {'history': 'Utilizando la estructura repetitiva FOR y escribiendo un solo '
             'caracter por vez debes realizar el número NUEVE con el caracter '
             'ingresado por pantalla. El tamaño del mismo es de 9 filas de '
             'alto y 5 columnas de ancho.',
  'input': 'La entrada consiste en un caracter, con el cual se realizará el '
           'número solicitado',
  'note': ' ',
  'output': 'El número solicitado realizado',
  'title': 'Número nueve',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Numero-nueve'},
 {'history': 'Utilizando la estructura repetitiva FOR y escribiendo un solo '
             'caracter por vez debes realizar el número SEIS con el caracter '
             'ingresado por pantalla. El tamaño del mismo es de 9 filas de '
             'alto y 5 columnas de ancho.',
  'input': 'La entrada consiste en un caracter, con el cual se realizará el '
           'número solicitado',
  'note': ' ',
  'output': 'El número solicitado realizado',
  'title': 'Número seis',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Numero-seis'},
 {'history': 'Utilizando la estructura repetitiva FOR y escribiendo un solo '
             'caracter por vez debes realizar el número SIETE con el caracter '
             'ingresado por pantalla. El tamaño del mismo es de 9 filas de '
             'alto y 5 columnas de ancho.',
  'input': 'La entrada consiste en un caracter, con el cual se realizará el '
           'número solicitado',
  'note': ' ',
  'output': 'El número solicitado realizado',
  'title': 'Número siete',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Numero-siete'},
 {'history': 'Dado un set de números, quieres determinar cuántos números '
             'son mayores a cada valor.',
  'input': 'Un número N, el número de valores en el arreglo, seguido por N '
           'valores i_ n, el valor de cada elemento del arreglo. Nota '
           'importante: los números se pueden repetir.',
  'note': ' ',
  'output': 'N líneas con los valores correspondientes a cuántos números '
            'mayores hay a partir del elemento en ese lugar',
  'title': 'Números Mayores',
  'topics': ['sortings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Numeros-Mayores1'},
 {'history': ' ',
  'input': ' ',
  'note': ' ',
  'output': ' ',
  'title': 'Números Narcisistas',
  'topics': ['strings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Numeros-Narcisistas'},
 {'history': 'Guardar n enteros en una lista ligada, imprimirla, proceder a su '
             'ordenamiento e imprimirla.',
  'input': 'n enteros que se guardarán en la lista ligada.',
  'note': ' ',
  'output': 'n enteros ordenados ascendentemente',
  'title': 'Números en Orden',
  'topics': ['sortings'],
  'url': 'https://omegaup.com/arena/problem/Numeros-en-Orden'},
 {'history': ' ',
  'input': 'En la primera linea un número N el cual sera la cantidad de '
           'números a recibir, en las siguientes lineas recibirás dos '
           'números con los cuales realizar el método que el profesor le ha '
           'comentado a Carlos.',
  'note': ' ',
  'output': 'Imprimir los resultados de cada número de manera " '
            'desencriptada"',
  'title': 'Números ocultos',
  'topics': ['strings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Numeros-ocultos'},
 {'history': 'Junto con tus amigos, acabas de organizar una salida al famoso '
             'parque de diversiones Six Flags. Su deseo es subirse a todos los '
             'juegos del parque, pero no contabas con que los juegos tienen un '
             'requisito de estatura mínima y con que varios de tus amigos son '
             'bastante chaparritos. Como eres muy solidario y no quieres '
             'excluir a nadie, acordaron que sólo se subirán a los juegos en '
             'los que todos cumplan el requisito de estatura. ¿A cuántos '
             'juegos podrán subirse?',
  'input': 'Inicialmente, dos enteros N y M. Posteriormente, una secuencia de '
           'N enteros que denotan los requisitos de estatura mínima de los N '
           'juegos del parque. Finalmente, una secuencia de M enteros que '
           'denotan las estaturas de tu grupo de amigos, incluyéndote. Puedes '
           'suponer que 1 ≤ N, M ≤ 10^ 5 y que todas las estaturas están en '
           'centímetros en el rango de 0 a 250.',
  'note': ' ',
  'output': 'Un entero que sea la cantidad de juegos a los que todos se pueden '
            'subir.',
  'title': 'O todos o ninguno',
  'topics': ['sortings'],
  'url': 'https://omegaup.com/arena/problem/O-todos-o-ninguno'},
 {'history': 'LSD Radix sort es un algoritmo de ordenamiento que consiste en '
             'ordenar desde el digito menos significativo hasta el más '
             'significativo, de manera que al terminar de ordenar todas las '
             'columnas de digitos individualmente logres obtener un arreglo '
             'ordenado. Deberás usar LSD Radix sort para ordenar un arreglo '
             'de m cadenas de bits; cada una de ellas de n bits de longitud.',
  'input': 'Dos enteros n y m separados por un espacio, seguidos de m cadenas '
           'de bits sin separar.',
  'note': ' ',
  'output': 'Las m cadenas de bits ordenadas.',
  'title': 'OIRCh LSD Radix Sort',
  'topics': ['strings', 'sortings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/OIRCh-LSD-Radix-Sort'},
 {'history': ' ',
  'input': 'En la primera línea los enteros N y M, representando el número '
           'de asistentes a la convención y el número de amistades '
           'respectivamente. Cada una de las siguientes M líneas tendrá dos '
           'enteros a_ i b_ i que indican que la persona a_ i es amiga de la '
           'persona b_ i y viceversa.',
  'note': ' ',
  'output': 'Un entero representando el tamaño del grupo más grande de '
            'personas que cumplan con la restricción cool de Alexis.',
  'title': 'Convención',
  'topics': ['sortings'],
  'url': 'https://omegaup.com/arena/problem/OMI-2017-Pandillas'},
 {'history': ' ',
  'input': 'La primera línea contendrá dos enteros N y K respectivamente. La '
           'segunda línea contendrá N enteros representando la cantidad de '
           'mililitros que tiene cada una de las botellas.',
  'note': ' ',
  'output': 'Tu programa deberá escribir dos enteros separados por un espacio '
            'representando la cantidad máxima de botellas que puedes enviar y '
            'los mililitros que contendrá cada una de ellas. Restricciones1 ≤ '
            'N ≤ 2, 000, 000 ( Número de botellas) 0 ≤ K ≤ 1, 000, 000, 000 ( '
            'Cantidad de mililitros) 0 ≤ c_ i ≤ 1, 000, 000 ( Mililitros que '
            'contiene la i- ésima botella)',
  'title': 'Salsa "La Pikina"',
  'topics': ['sortings'],
  'url': 'https://omegaup.com/arena/problem/OMI2015LENGUAJE2'},
 {'history': ' ',
  'input': 'En la primera línea un entero T que indica el tipo de conversión '
           'que vas a hacer ( 0 = de decimal a cadena, 1 = de cadena a '
           'decimal) En la segunda línea un entero X o una cadena S '
           'dependiendo del tipo de conversión.',
  'note': ' ',
  'output': 'La cadena S que representa a X si la conversión es de tipo 0, o '
            'el entero X que representa a la cadena S si la conversión es de '
            'tipo 1.',
  'title': 'Convertidor',
  'topics': ['strings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/OMI2018-Convertidor'},
 {'history': 'Desde que iniciaron los entrenamientos de preselección, ha sido '
             'difícil seleccionar un horario para los entrenamientos y '
             'concursos. Esto debido a la ocupada agenda de los participantes, '
             '( o procrastinación, o el covid, o tal vez nunca lo sabremos) . '
             'Una teoría del COMICH es que el tiempo que toman las '
             'actividades no se ha organizado en la secuencia ideal, aunque ya '
             'han intentado muchas variaciones como poner primero las '
             'actividades que requieren más tiempo, o realizar primero todas '
             'las que requieren un número par de horas y un sin fin más. '
             'Desafortunadamente ninguna estrategia ha funcionado para que '
             'lleguen más de 3 alumnos a los entrenamientos. La última '
             'esperanza es organizar las actividades en una secuencia hermosa '
             '¿Y qué rayos es eso se preguntaran? Pues bien, aquí va el '
             'rollo: si tienen una lista con n números enteros A= [ a_ 0, a_ '
             '1, . . . , a_ n- 1] una secuencia hermosa es aquella en la que '
             'la suma de todos los pares consecutivos | a_ i- a_ i- 1| para 0 '
             '≤ i< n será mínima. Su tarea será ayudar al COMICH a '
             'determinar el número mínimo de intercambios que deberían '
             'realizarse para que una lista A cualquiera, la cual contenga la '
             'duración de todas las actividades propuestas se convierta en '
             'una lista hermosa.',
  'input': 'n el número de elmentos en ASeguido de n enteros a_ 0 a_ 1 . . . '
           'a_ n- 1',
  'note': ' ',
  'output': 'Un único entero indicando el número mínimo de intercambios '
            'necesarios para generar la secuencia hermosa.',
  'title': 'Ocupados',
  'topics': ['sortings'],
  'url': 'https://omegaup.com/arena/problem/Ocupados'},
 {'history': 'Dadas dos secuencias de N enteros, escribe un programa que '
             'reimprima las secuencias pero omitiendo los enteros que aparecen '
             'en ambas secuencias. El orden de aparición de los enteros debe '
             'conservarse.',
  'input': 'Un entero N seguido de dos líneas donde cada una tiene N enteros. '
           'Puedes suponer que 0≤N≤100, 000 y que los enteros de las '
           'secuencias están en el rango de −109 a + 109.',
  'note': ' ',
  'output': 'Dos líneas que contengan las secuencias de enteros originales '
            'pero omitiendo los enteros que aparecen en ambas secuencias. '
            'NotaEste problema se puede resolver con los temas vistos en '
            'Algoritmos y Estructuras de Datos de la UAM Azcapotzalco.',
  'title': 'Omitiendo la intersección',
  'topics': ['sortings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Omitiendo-la-interseccion'},
 {'history': 'En este problema debes hacer m numero de operaciones operaciones '
             'sobre una cadena de longitud n que contiene solo caracteres de '
             'la ‘a’ a la ‘z’ en minúsculas. Estas operaciones, según se '
             'piden pueden ser: ‘B’, buscar un carácter en especifico e '
             'imprimir el numero total de veces que aparece en la cadena. ‘O’, '
             'imprimir todos los caracteres de la cadena en orden alfabético '
             '( debes conservar la cadena original) . ‘I’, imprimir todos los '
             'caracteres de la cadena en orden alfabético invertido. ‘C’, '
             'concatenar la cadena original con una cadena de tamaño l e '
             'imprimir la nueva cadena. ‘T’, terminar y salir.',
  'input': 'Una cadena, seguida de las operaciones a realizar, separadas por '
           'renglones.',
  'note': ' ',
  'output': 'El resultado de cada operación según se pida.',
  'title': 'Operaciones con cadenas',
  'topics': ['strings'],
  'url': 'https://omegaup.com/arena/problem/Operaciones-con-cadenas'},
 {'history': 'Dado un arreglo de N enteros, escribe un programa que procese '
             'una secuencia de M comandos de los siguientes tipos: SUMA K: '
             'Sumar el entero K a todos los elementos del arreglo. ORDENA: '
             'Ordenar el arreglo.',
  'input': 'El entero N seguido de los N enteros del arreglo. Posteriormente, '
           'el entero M seguido de los M comandos a procesar. Puedes suponer '
           'que 0≤N, M≤105 y que tanto los elementos del arreglo como los '
           'valores a sumar están en el rango de −100 a + 100.',
  'note': ' ',
  'output': 'Los N enteros del arreglo después de procesar los comandos.',
  'title': 'Operaciones triviales sobre un arreglo',
  'topics': ['sortings'],
  'url': 'https://omegaup.com/arena/problem/Operaciones-triviales-sobre-un-a'},
 {'history': 'Escribe un programa que lea N enteros positivos y que los ordene '
             'de la siguiente manera: Si a tiene menos divisores que b '
             'entonces a debe ir antes que b. Los números que empaten en '
             'cantidad de divisores deben quedar ordenados de mayor a menor.',
  'input': 'Un entero N seguido de N enteros, donde todo está en el rango de '
           '1 a 100. Puedes suponer que 1 ≤ N ≤ 10^ 5.',
  'note': ' ',
  'output': 'Los N enteros despúes de ordenarlos.',
  'title': 'Orden raro por divisores',
  'topics': ['sortings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Orden-raro-por-divisores'},
 {'history': 'Este es un problema básico de arreglos en el cual debe leer un '
             'arreglo y ordenarlo de MAYOR a MENOR.',
  'input': 'Leer primero N, donde 1< = N< = 100. El dato N indica la cantidad '
           'de números que se leerán desde el teclado. En las siguientes N '
           'lineas se encuentran los datos de entrada.',
  'note': ' ',
  'output': 'Imprima el arreglo ordenado de mayor a menor. '
            'EjemplosInputOutput📋42 8 1 38321InputOutput📋101 2 3 4 5 6 7 8 9 '
            '09876543210',
  'title': 'Ordena Básico 2',
  'topics': ['sortings'],
  'url': 'https://omegaup.com/arena/problem/Ordena-Basico-2'},
 {'history': ' ',
  'input': ' ',
  'note': ' ',
  'output': 'Imprime el número de movimientos que se realizaron para que este '
            'ordenado.',
  'title': 'ME Ordena las botellas',
  'topics': ['sortings'],
  'url': 'https://omegaup.com/arena/problem/Ordena-las-botellas'},
 {'history': 'Panchoberto es un coleccionista de cajas. Sus cajas son todos '
             'cubos, conocemos su volumen y su peso. Panchoberto quiere '
             'ordenar las cajas en una linea, primero con respecto a su '
             'volumen y luego conforme a su peso. Ordenará las cajas de menor '
             'a mayor tomando en cuenta su volumen. Si hay un empate, se '
             'resolverá con la caja que tenga un mayor peso. Ayúdale a decir '
             'cómo quedarán ordenadas sus cajas.',
  'input': 'En la primer línea un entero 2≤ n ≤ 1e5, la cantidad de cajas que '
           'tiene Panchoberto. En las siguientes n líneas viene un par de '
           'enteros 1 ≤ a_ i, b_ i ≤ 1e5, el primer número es el volumen y el '
           'segundo el peso de la caja correspondiente.',
  'note': ' ',
  'output': 'n enteros en una linea separados por un espacio y terminando en '
            'un salto de línea. Cada entero es el índice de la caja que va '
            'en esa posición luego del ordenamiento.',
  'title': 'Ordena las cajas',
  'topics': ['sortings'],
  'url': 'https://omegaup.com/arena/problem/Ordena-las-cajas'},
 {'history': 'Realiza una aplicación en C+ + en forma individual, en donde '
             'dado n números de entrada y realice las funciones de '
             'ordenamiento de intercambio, burbuja y merge sort. La '
             'aplicación deberá leer los n datos ordenarlos, decir la '
             'cantidad de comparaciones de cada uno de los tres métodos, '
             'posteriormente deberá leer las q consultas de datos, diciendo '
             'la posición donde se encuentra el dato en el arreglo ordenado ( '
             '- 1 en caso de que no se encuentre) y la cantidad de '
             'comparaciones que hizo tanto por la búsqueda secuencial como '
             'por la búsqueda binaria.',
  'input': 'Primero vendrá una línea con la n ( número de datos) seguido de '
           'las n lineas con los datos numéricos, posteriormente vendrá una '
           'línea con la q, y posteriormente vendrá los q números que se '
           'desean consultar.',
  'note': ' ',
  'output': 'En una línea vendrán la cantidad de comparaciones que arrojó '
            'el ordenamiento de intercambio, el ordenamiento de burbuja y el '
            'ordenamiento de MergeSort, separados por un espacio. Después '
            'vendrán q lineas ( una por cada consulta) con el formato de '
            'posición, cantidad de comparaciones por búsqueda secuencial y '
            'cantidad de comparaciones por búsqueda binaria.',
  'title': 'Ordena y Busca',
  'topics': ['sortings'],
  'url': 'https://omegaup.com/arena/problem/Ordena-y-Busca'},
 {'history': 'Santy ya se había cansado de hacer problemas, así que pidio '
             'ayuda a Jacobo para venir con la idea de un problema que tenga '
             'que ver con Ordenamientos. Y le dijo ¿Por que no hacer un '
             'problema donde debas ordenar por frecuencia? Y entonces Santy '
             'decidio robarle esta idea. ProblemaSe te dara un arreglo de n '
             'elementos, el cuál debera ser ordenado por la cantidad de veces '
             'que aparece el elemento en todo el arreglo. Si dos elementos '
             'aparecen la misma cantidad de veces, entonce se hara desempate '
             'por el que sea menor. ( Primero van elementos con mayor '
             'frecuencia)',
  'input': 'Un número n que representa la cantidad de elementos en arreglo, y '
           'en la siguiente linea se te daran los n números del arreglo.',
  'note': ' ',
  'output': 'El arreglo ordenado por frecuencias.',
  'title': 'Ordenamiendo por frecuencia',
  'topics': ['sortings'],
  'url': 'https://omegaup.com/arena/problem/Ordenamiendo-por-frecuencia'},
 {'history': ' ',
  'input': 'Un número n que representa la cantidad de participantes, luego n '
           'palabras que son los nombres de los participantes. Los nombres son '
           'una solo cadena sin espacios, con letras del alfabeto ingles en '
           'mayusculas o minusculas.',
  'note': ' ',
  'output': 'Los nombres ordenados alfabeticamente',
  'title': 'Ordenamiento Alfabetico',
  'topics': ['strings', 'sortings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Ordenamiento-Alfabetico'},
 {'history': 'Se ingresa un valor entero X ( 1< = X< = 50000) , y a '
             'continuación N filas conteniendo cada una un valor entero ( '
             'tipo int) . Como resultado, se deben mostrar los N valores '
             'ingresados, ordenados ascendentemente, uno por línea.',
  'input': 'La primer línea de entrada contendrá el valor X. Luego vendrán '
           'N líneas con un valor entero por línea. '
           'InputOutput📋1041184676334265001916915724114782935826962244644163341147815724184671916924464265002696229358',
  'note': ' ',
  'output': ' ',
  'title': 'Ordenamiento Vector Enteros',
  'topics': ['sortings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Ordenamiento-Vector-Enteros'},
 {'history': ' ',
  'input': 'Un natural n que representa el tamaño de los arreglos. Luego n '
           'números a_ i que son los elementos del primer arreglo y otros n '
           'número b_ i que son los elementos del segundo arreglo.',
  'note': ' ',
  'output': 'Un entero que representa la cantidad de arreglos ordenados que '
            'puede hacer con elementos alternados de los arreglos '
            'ordenadosInputOutputDescription📋112132Los dos posibles arreglos '
            'de elementos ordenados son [ 12] y [ 12, 13] 📋33 1 46 5 216Los '
            'posibles 16 son: [ 1] , [ 1, 2] , [ 1, 2, 3] , [ 1, 2, 3, 5] , [ '
            '1, 2, 3, 6] , [ 1, 2, 4] , [ 1, 2, 4, 5] , [ 1, 2, 4, 6] , [ 3] , '
            '[ 1, 5] , [ 1, 6] , [ 3, 5] , [ 3, 6] , [ 4] , [ 4, 5] , [ 4, 6] '
            'Limites1 ≤ n ≤ 101 ≤ a_ i, b_ 1 ≤ 10^ 6',
  'title': 'Ordenamiento alternado',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Ordenamiento-alternado'},
 {'history': 'Dados 3 números, deberás imprimirlos de manera ordenada '
             'ascendente',
  'input': 'se te darán 3 números separados por un espacio',
  'note': ' ',
  'output': 'La salida serán esos 3 números pero ordenados',
  'title': 'Ordenamiento con condicionales',
  'topics': ['sortings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Ordenamiento-con-condicionales'},
 {'history': 'Problema básico de arreglo donde se debe de leer un arreglo y '
             'ordenarlo de mayor a menor.',
  'input': 'Leer primero N, donde N es un número entero positivo dentro del '
           'rango 1< = N< = 100 y el cual indica la cantidad de números que '
           'se leeran desde el teclado. En las siguientes N lineas se '
           'encuentran los datos de entrada.',
  'note': ' ',
  'output': 'Imprimir el arreglo ordenado de mayor a menor',
  'title': 'Ordenamiento inverso',
  'topics': ['sortings'],
  'url': 'https://omegaup.com/arena/problem/Ordenamiento-inverso'},
 {'history': 'Después de la gran aventura que tuvo jorge para encontrar a su '
             'ayudante perfecto ( en busca de derrotar a Santy) , Jorge se '
             'dirige hacia la torre maligna. En el camino se encuentra con '
             'unas vacas, que mugen cada cierto tiempo. En ese lugar hay un '
             'profesor loco con las vacas tratando de descifrar el patron de '
             'mugido; este mismo profesor es el único que puede dejar pasar a '
             'Jorge por ese lugar. Si Jorge no pasa por aquí tendrá que '
             'tomar la ruta larga y maligna. Entonces Jorge decide preguntarle '
             'al profesor si lo dejaba salir. Este mismo le dijo que si le '
             'decía cuantos mugidos iban hacer las vacas en este minuto, '
             'entonces si lo dejaba pasar. El profesor es buena onda entonces '
             'le dijo todo lo que había aprendido de las vacas y eso es que '
             'cada minutos a las vacas se les muestra un arreglo, luego se les '
             'muestra como el arreglo se va ordenando con el bubble sort y '
             'cada vez que hay un cambio entonces las vacas mugen. Entonces, '
             'la tarea de Jorge era decir cuantas veces mugen las vacas en '
             'cierto minuto. Como Jorge no entendía muy bien como las vacas '
             'mugían entonces, su compañero decidió darle una idea de como '
             'sería un algoritmo para eso📋for( i = 0 hasta n- 1) for( j = 0 '
             'hasta n - 1 - i) if( ar[ j] > ar[ j+ 1] ) cambiar( ar[ j] , ar[ '
             'j+ 1] ) imprimir " Muuu" Entonces quieres ver cuantas veces se '
             'imprime " Muuu" ProblemaDada un arreglo A de tamaño n, decir '
             'cuantas veces mugen las vacas cuando ven dicho arreglo ordenarse '
             'con el bubble sort.',
  'input': 'Un natural n que representa el tamaño del arreglo, seguido n '
           'enteros que son los elementos A_ i.',
  'note': ' ',
  'output': 'Un unico número que representa la cantidad de veces que mugen '
            'las vacas con ese arreglo.',
  'title': 'Ordenamiento vacuno',
  'topics': ['sortings'],
  'url': 'https://omegaup.com/arena/problem/Ordenamiento-vacuno'},
 {'history': 'Se tiene un archivo que contiene una gran cantidad de dígitos '
             'en desorden. Como ordenar es una de las tareas más básicas de '
             'la computación te interesa utilizar dicho archivo para '
             'practicar tus algoritmos de ordenación. ProblemaEscribe un '
             'programa que dado N de dígitos, entregue como resultado los '
             'mismos N dígitos en orden ascendente. NOTA: Para este problema '
             'se hará un especial énfasis en la eficiencia de los '
             'algoritmos, por lo que te recomendamos que implementes la '
             'solución más eficiente que encuentres, es decir, la que se '
             'ejecute en el menor tiempo posible.',
  'input': 'En la primera línea el número 1 ≤ N ≤ 1, 000, 000. En la segunda '
           'línea habrá N dígitos separados cada uno por un espacio.',
  'note': ' ',
  'output': 'En la primera y única línea, los N dígitos ordenados, '
            'separados por un espacio cada uno.',
  'title': 'Ordenando Dígitos',
  'topics': ['sortings'],
  'url': 'https://omegaup.com/arena/problem/Ordenando-Digitos'},
 {'history': 'Leerás la edad en años de toda la gente del país cuya edad es '
             'como mínimo 1. Se sabe que nadie tiene una edad superior a 100. '
             'Tienes como meta mostrar las edades de todas las personas '
             'ordenadas de manera ascendente.',
  'input': 'Se tiene un entero N ( 1≤N≤1000000) que corresponde a la edad de '
           'las personas que viven en el país. En las siguientes líneas hay '
           'N enteros que indican las edades de las personas de manera '
           'individual.',
  'note': ' ',
  'output': 'Imprime las edades ordenadas de menor a mayor de todas las '
            'personas del país.',
  'title': 'Ordenando Edades',
  'topics': ['sortings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Ordenando-Edades'},
 {'history': 'Al inicio de un curso de matemáticas, el profesor les dijo a '
             'los alumnos que su calificación final estaría dada por un '
             'único examen E1. Sin embargo, como a varios alumnos les fue '
             'mal, el profesor dio la oportunidad de presentar un segundo '
             'examen opcional E2, de modo que la calificación final de un '
             'alumno que presentara ambos estaría dada por el promedio real '
             'de dichos exámenes. El curso ya ha terminado y el profesor '
             'desea ordenar a los alumnos bajo los siguientes criterios: Los '
             'alumnos de mayor calificación final deben aparecer primero. En '
             'caso de empate en calificación final, los alumnos que hayan '
             'presentado la menor cantidad de exámenes deben aparecer '
             'primero. En caso de empate en calificación final y en número '
             'de exámenes presentados, los alumnos con mayor calificación en '
             'el examen E1 deben aparecer primero.',
  'input': 'Un entero N seguido de N filas. Cada fila contiene dos enteros E1, '
           'E2 que denotan las calificaciones obtenidas por cada alumno ( si '
           'E2= −1 entonces el alumno decidió no presentar el segundo examen '
           'opcional, por lo que su calificación final estaría dada '
           'únicamente por E1) . Puedes suponer que 1≤N≤105, que 0≤E1≤10 y '
           'que −1≤E2≤10.',
  'note': ' ',
  'output': 'Una secuencia de N parejas de enteros que denota la lista de '
            'alumnos ordenada bajo los criterios previamente mencionados.',
  'title': 'Ordenando alumnos por calificaciones',
  'topics': ['sortings'],
  'url': 'https://omegaup.com/arena/problem/Ordenando-alumnos-por-calificaci'},
 {'history': 'Dada una secuencia de N enteros positivos distintos, imprime '
             'dicha secuencia ordenada.',
  'input': 'El entero N en formato de texto seguido de un espacio en blanco. '
           'Posteriormente la secuencia de N enteros, los cuales deberán '
           'leerse con rutinas de lectura sin formato ( por ejemplo, fread) . '
           'Cada entero de la secuencia estará representado con sizeof( '
           'int32_ t) = 4 bytes. Puedes suponer que 0 ≤ N ≤ 2^ 21 y que todos '
           'los bytes que conforman la secuencia son caracteres ASCII '
           'gráficos.',
  'note': ' ',
  'output': 'La secuencia ordenada, la cual deberá imprimirse con rutinas de '
            'escritura sin formato ( por ejemplo, fwrite) . Cada entero '
            'deberá representarse con sizeof( int32_ t) = 4 bytes. NotaYa que '
            'OmegaUp vincula la entrada estándar a un archivo, un programa '
            'podrá leer la entrada más de una vez utilizando rutinas de '
            'posicionamiento en archivos ( por ejemplo, fseek o rewind) sobre '
            'stdin o equivalente.',
  'title': 'Ordenando archivos',
  'topics': ['sortings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Ordenando-archivos-v2'},
 {'history': 'Dada una matriz A de m filas y n columnas. Escribe un programa '
             'que imprimaA con cada una de sus columnas ordenada de manera '
             'creciente.',
  'input': 'Dos enteros m, n que representas el número de filas y columnas de '
           'la matrizA. A continuación los m×n enteros que representan cada '
           'una de lasentradas de la matriz. Puedes asumir que cada entrada en '
           'la matriz es unentero cuyo valor esta en el intervalo [ −100, 100] '
           'y que 1≤m, n≤100',
  'note': ' ',
  'output': 'La matriz A con cada una de sus columnas ordenada de manera '
            'creciente.',
  'title': 'Ordenando columnas',
  'topics': ['sortings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Ordenando-columnas'},
 {'history': 'Dado un arreglo de N enteros, escribe un programa que procese '
             'una lista de M instrucciones a ejecutar secuencialmente, las '
             'cuales pueden ser de los siguientes tipos: < : Ordenar el '
             'arreglo de menor a mayor. > : Ordenar el arreglo de mayor a '
             'menor. I K: Imprimir el valor actual del K- ésimo elemento del '
             'arreglo.',
  'input': 'Un entero N seguido de los N enteros del arreglo. Posteriormente, '
           'un entero M seguido de las M instrucciones. Puedes suponer que 1 ≤ '
           'N ≤ 10^ 5, que 1 ≤ M ≤ 10^ 6, que 0 ≤ K < N y que la primera '
           'instrucción será ya sea < o > .',
  'note': ' ',
  'output': 'Para cada instrucción del tipo I K, el valor actual del K- '
            'ésimo elemento del arreglo.',
  'title': 'Ordenando de forma ascendente y descendente',
  'topics': ['sortings'],
  'url': 'https://omegaup.com/arena/problem/Ordenando-de-forma-ascendente-y-'},
 {'history': ' ',
  'input': 'Se te dará un entero N que representa la cantidad de pelotas que '
           'hay y un entero M que representa el mayor número que puedes '
           'encontrar en las pelotas. En la siguiente línea se te dará N '
           'elementos, los cuales son las distintas pelotas con su distinto '
           'número.',
  'note': ' ',
  'output': 'Debes imprimir todas las cantidades de pelotas, de manera '
            'ascendente empezando desde el 1 hasta M, debes imprimir el '
            'número de la pelota seguido por dos puntos y un espacio, '
            'posteriormente la cantidad de pelotas que hay de ese tipo. Por '
            'ejemplo si tenemos 3 pelotas del color 1 se debe imprimir de la '
            'siguiente manera 1: 3 .',
  'title': 'Ordenando en cubetas',
  'topics': ['sortings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Ordenando-en-cubetas'},
 {'history': 'Escribe un programa que lea una línea de texto y la imprima con '
             'sus letras ordenadas. Los caracteres no alfabéticos deben '
             'permanecer en su posición original.',
  'input': 'Una línea de texto de a lo mucho 100 caracteres. Puedes suponer '
           'que la línea consiste de letras minúsculas, comas, puntos y '
           'espacios en blanco.',
  'note': ' ',
  'output': 'La línea de texto con sus letras ordenadas',
  'title': 'Ordenando las letras de la línea',
  'topics': ['strings', 'sortings'],
  'url': 'https://omegaup.com/arena/problem/Ordenando-las-letras-de-la-linea'},
 {'history': 'Escribe un programa que lea cuatro enteros y los imprima '
             'ordenados.',
  'input': 'Cuatro enteros A, B, C, D. Puedes suponer que 0 ≤ A, B, C, D ≤ '
           '1000.',
  'note': ' ',
  'output': 'Cuatro enteros que sean los valores de A, B, C, D ordenados.',
  'title': 'Ordenando números',
  'topics': ['sortings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Ordenando-numeros'},
 {'history': 'Escribe un programa que lea una secuencia de N enteros y los '
             'ordene de la siguiente manera: Deberán aparecer primero los '
             'enteros que tengan menos cifras. En caso de empate en cantidad '
             'de cifras, deberán aparecer primero los enteros de mayor valor.',
  'input': 'El entero N seguido de la secuencia de N enteros. Puedes suponer '
           'que 0 ≤ N ≤ 10^ 5, que todos los enteros de la secuencia están '
           'entre 0 y 1000 y que éstos no aparecen con ceros a la izquierda.',
  'note': ' ',
  'output': 'Los enteros de la secuencia después de ordenarlos.',
  'title': 'Ordenando por cantidad de cifras',
  'topics': ['sortings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Ordenando-por-cantidad-de-cifras'},
 {'history': 'Escribe un programa que lea un arreglo de N puntos en el plano ( '
             'x_ i, y_ i) y los ordene según su distancia con respecto al '
             'origen. En caso de empates en distancia, primero deben aparecer '
             'los de menor x y después los de menor y.',
  'input': 'Un entero N seguido de N parejas de enteros ( x_ i, y_ i) . Puedes '
           'suponer que 1 ≤ N ≤ 10^ 5 y que las coordenadas están en el rango '
           'de - 25000 a + 25000.',
  'note': ' ',
  'output': 'Los N puntos del arreglo ordenado.',
  'title': 'Ordenando por distancia al origen',
  'topics': ['sortings'],
  'url': 'https://omegaup.com/arena/problem/Ordenando-por-distancia-al-orige'},
 {'history': 'Escribe un programa que lea un arreglo de N parejas de enteros ( '
             'B, E) y los ordene ascendentemente según el valor de BE. En '
             'caso de empates en dicho valor, primero deben aparecer los de '
             'menor B y después los de menor E.',
  'input': 'Un entero N seguido de N parejas de enteros ( B, E) . Puedes '
           'suponer que 1≤N≤50000, que 0≤B, E≤32 y que 0≤BE≤1018.',
  'note': ' ',
  'output': 'Las N parejas del arreglo ordenado.',
  'title': 'Ordenando por el valor de la potencia',
  'topics': ['sortings'],
  'url': 'https://omegaup.com/arena/problem/Ordenando-por-el-valor-de-la-pot'},
 {'history': 'Escribe un programa que lea N reales positivos y que los ordene '
             'de la siguiente manera: Si la parte decimal de a es menor que la '
             'parte decimal de b, entonces a debe ir antes que b. La parte '
             'decimal incluye el punto decimal ( es decir, 0. 123 < 0. 5) . '
             'Los números que empaten en la parte decimal deben quedar '
             'ordenados de menor a mayor.',
  'input': 'Un entero N seguido de N reales positivos. Puedes suponer que 1 ≤ '
           'N ≤ 10^ 5.',
  'note': ' ',
  'output': 'Los N reales despúes de ordenarlos.',
  'title': 'Ordenando por la parte decimal',
  'topics': ['sortings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Ordenando-por-la-parte-decimal'},
 {'history': 'Escribe un programa que lea un arreglo de N enteros y ordene sus '
             'elementos por valor absoluto. En caso de empates en valor '
             'absoluto, primero deben aparecer los negativos y luego los '
             'positivos.',
  'input': 'Un entero N seguido de N enteros. Puedes suponer que 1 ≤ N ≤ 10^ 5 '
           'y que los enteros del arreglo están en el rango de - 10^ 9 a 10^ '
           '9.',
  'note': ' ',
  'output': 'Los N enteros del arreglo ordenado.',
  'title': 'Ordenando por magnitud',
  'topics': ['sortings'],
  'url': 'https://omegaup.com/arena/problem/Ordenando-por-magnitud'},
 {'history': 'Dada una tripleta de enteros, una inversión es una pareja de '
             'elementos E_ 1, E_ 2 tales que E_ 1 aparece a la izquierda de E_ '
             '2 pero donde E_ 1 > E_ 2. Por ejemplo, la tripleta ( 4, 7, 3) '
             'tiene dos inversiones que son ( 4, 3) y ( 7, 3) , la tripleta ( '
             '9, 5, 1) tiene tres inversiones que son ( 9, 5) , ( 9, 1) y ( 5, '
             '1) , la tripleta ( 1, 3, 2) tiene una inversión que es ( 3, 2) '
             'y la tripleta ( 2, 5, 8) no tiene inversiones. Escribe un '
             'programa que lea una secuencia de N tripletas y que las ordene '
             'bajo los siguientes criterios: Las tripletas con menor cantidad '
             'de inversiones deben aparecer primero. En caso de empate en '
             'cantidad de inversiones, deben aparecer primero las tripletas '
             'cuyo primer elemento sea menor. En caso de empate en cantidad de '
             'inversiones y en el primer elemento, deben aparecer primero las '
             'tripletas cuyo segundo elemento sea menor. En caso de empate en '
             'cantidad de inversiones y en los dos primeros elementos, deben '
             'aparecer primero las tripletas cuyo tercer elemento sea menor.',
  'input': 'Un entero N seguido de N tripletas. Puedes suponer que 1 ≤ N ≤ 10^ '
           '5, que los elementos de las tripletas están entre - 1000 y + 1000 '
           'y que ninguna tripleta tiene elementos repetidos.',
  'note': ' ',
  'output': 'Las N tripletas después de ordenarlas.',
  'title': 'Ordenando tripletas por inversiones',
  'topics': ['sortings'],
  'url': 'https://omegaup.com/arena/problem/Ordenando-tripletas-por-inversio'},
 {'history': 'Realiza un problema que ordene de mayor a menor tres números.',
  'input': 'Escribe tres números enteros a, b y c',
  'note': ' ',
  'output': 'Los tres números enteros introducidos pero ordenados de mayor a '
            'menor.',
  'title': 'Ordenar de mayor a menor tres números',
  'topics': ['sortings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Ordenar-Mayor-a-menor-3-numeros'},
 {'history': 'Un palíndromo es una palabra o cadena de caracteres que se lee '
             'igual de izquierda a derecha que de derecha a izquierda. En este '
             'problema recibirás una string s de tamaño n y debes determinar '
             'si es posible convertir la string s en un palíndromo eliminando '
             'a lo más un carácter.',
  'input': 'Primero recibirás un entero T, que corresponde al numero de '
           'casos. Cada una de las siguientes T líneas contienen un entero n '
           'y una string s. La string s solo está compuesta por las letras '
           'minúsculas ( excluyendo la ñ) , n es el tamaño de s.',
  'note': ' ',
  'output': 'Para cada caso debes imprimir " SI" ( sin comillas) si es posible '
            'convertir la string s en un palíndromo eliminando a lo más un '
            'carácter o " NO" ( sin comillas) en caso contrario.',
  'title': 'Otro problema de palíndromos',
  'topics': ['strings'],
  'url': 'https://omegaup.com/arena/problem/Otro-problema-de-palindromos'},
 {'history': 'Realiza un programa que solicite al usuario nn palabras. El '
             'programadeberá solicitar las nn palabras y deberá imprimir '
             'cuál de ellas tiene menoscaracteres, de cuántos caracteres '
             'consta dicha palabra y si el número decaracteres de dicha la '
             'palabra es impar o par.',
  'input': 'Un número entero n seguido de n palabras.',
  'note': ' ',
  'output': 'La palabra con menos caracteres, cantidad de caracteres de esa '
            'palabra y si el número de caracteres de dicha la palabra es '
            'impar o par.',
  'title': 'Palabra corta',
  'topics': ['strings', 'sortings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Palabra-corta'},
 {'history': 'Los palíndromos son palabras o frases que al leerse de '
             'izquierda a derecha y viceversa expresan o tienen el mismo '
             'sentido. A este vocablo también se le puede llamar '
             'palíndromas. Deberá leer una palabra p e indicar si es o no '
             'una palabra palíndroma.',
  'input': 'Una palabra p',
  'note': ' ',
  'output': 'Si la palabra es palíndroma deberá imprimir SI. Si la palabra '
            'no es palíndroma deberá imprimir NO.',
  'title': 'Palabra palindroma',
  'topics': ['strings'],
  'url': 'https://omegaup.com/arena/problem/Palabra-palindroma'},
 {'history': 'Dada una cadena s y una cadena t borre ( cambie por espacios en '
             'blanco) cadauna de las ocurrencias de la cadena t en la cadenas '
             's. Es decir, el tamañode la cadena s no cambia.',
  'input': 'Dos cadenas de caracteres s y t. Puede asumir que ambas cadenas '
           'están compuestas por letras mayúsculas, minúsculas, puntos '
           'ycomas. Además puede asumir que la longitud de ambas cadenas es '
           'de a lo más 100caracteres.',
  'note': ' ',
  'output': 'La cadenas s con cada ocurrencia de la cadena t reemplazada por '
            'espacios en blanco.',
  'title': 'Palabras prohibidas',
  'topics': ['strings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Palabras-prohibidas'},
 {'history': 'Pinal y Marvin estaban discutiendo acerca de si la palabra '
             '“Lions” es un palíndromo o no, después de una larga discusión '
             'de dos horas y una votación democrática que se resolvió con '
             'un voto de diferencia, se concluyó que no es un palíndromo. '
             'Como siempre se pierde mucho tiempo en discutir si una frase es '
             'un palíndromo o no, tu tarea es ayudarlos con un programa que '
             'automatice la tarea de averiguar si una frase tiene la '
             'característica de ser palíndromo ( ignorando si las letras son '
             'mayúsculas o minúsculas) .',
  'input': 'Un número N que indica cuantas frases van a probar en tu sistema. '
           'Enseguida N frases de menos de 100 caracteres que pueden ser o no '
           'ser palíndromos.',
  'note': ' ',
  'output': 'N líneas con la palabra Si o la palabra No dependiendo de si es '
            'palíndromo o no',
  'title': 'Palindromos',
  'topics': ['strings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Palindromo-Lions'},
 {'history': 'Entrar una serie de caracteres en un arreglo, y verificar si '
             'esta es un palíndromo o no lo es. Un palíndromo son aquellas '
             'palabras que se leen igual de izquierda aderecha que de derecha '
             'a izquierda, por ejemplo ALLA.',
  'input': 'Un entero N que indica la cantidad de letras de la palabra. Las '
           'siguientes N lineas una letra mayúscula que indica una letra de '
           'la palabra.',
  'note': ' ',
  'output': 'Si es palíndromo mostrar " SI" , en caso contrario mostrar " NO"',
  'title': 'Palíndromo',
  'topics': ['strings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/PalindromoUASLP'},
 {'history': 'En una escuela preparatoria, la maestra de español organizó un '
             'concurso de escribir palíndromos. Un palíndromos es una '
             'palabra, número o frase que se lee igual del principio al '
             'final, o del final hacia el principio. En este concurso se '
             'jugará con palabras solamente. Te pidieron que escribas un '
             'programa que lea una palabra y decida si es palíndromo o no.',
  'input': 'Una linea con una palabra.',
  'note': ' ',
  'output': 'Una linea con la respuesta: Si o No.',
  'title': 'Palindromos',
  'topics': ['strings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Palindromos-ORAC'},
 {'history': 'Un palíndromo es una cadena cuya inversión es igual a la '
             'original ( por ejemplo, RADAR es un palíndromo porque se lee '
             'igual al derecho y al revés) . Dada una cadena S que no es un '
             'palíndromo, podemos obtener un palíndromo si excluimos algunos '
             'de sus caracteres ( por ejemplo, de BANANA es posible obtener el '
             'palíndromo ANNA si excluimos los caracteres en las posiciones 1 '
             'y 4) . Dado un conjunto de posiciones especiales de S, queremos '
             'encontrar un palíndromo de S que incluya la mayor cantidad '
             'posible de sus posiciones especiales. En caso de que varios '
             'palíndromos incluyan la misma cantidad de posiciones '
             'especiales, nos interesa sólo el palíndromo más grande. '
             'Escribe un programa que calcule la longitud de dicho '
             'palíndromo.',
  'input': 'La entrada consiste de varios casos de prueba, los cuales deben '
           'procesarse hasta el fin de archivo. Cada caso de prueba consiste '
           'de una cadena no vacía S, un entero N y posteriormente una '
           'secuencia de N enteros que denotan las posiciones especiales de S. '
           'Puedes suponer que 0 ≤ N ≤ | S| ≤ 2000, que S está formada '
           'únicamente por letras mayúsculas y que las posiciones especiales '
           'están en el rango de 1 a | S| .',
  'note': ' ',
  'output': 'Para cada caso de prueba, un entero que sea la longitud del '
            'palíndromo más grande que incluya la mayor cantidad posible de '
            'posiciones especiales.',
  'title': 'Palíndromos',
  'topics': ['strings'],
  'url': 'https://omegaup.com/arena/problem/Palindromos-uva'},
 {'history': 'Pancho es portero de un equipo de fut, por lo que su deber es '
             'evitar la mayor cantidad de goles. Pancho está muy '
             'entusiasmado, pues sabe que si su desempeño es bueno podrá ser '
             'considerado para la selección de su país. El desempeño se '
             'evalúa de la siguiente manera: Cada equipo que anote una '
             'cantidad x de goles afecta en el desempeño en una cantidad de '
             'x2 puntos, es decir, si el equipo c anota 4 goles, entonces '
             'afectará a Pancho en 42= 16 puntos. Pancho sabe que puede parar '
             'k goles, por lo que le interesa saber a quienes debe de pararle '
             'esos k goles para poder obtener el mínimo de puntos que afecte '
             'su desempeño, los k goles pueden ser distribuidos entre todos '
             'los equipos. ProblemaAyuda a Pancho a obtener el mínimo puntaje '
             'que afectará a su desempeño teniendo en cuenta que puede parar '
             'k goles.',
  'input': 'Una cadena s, la cual tendrá letras minúsculas del abecedario, '
           'cada letra ci de la cadena s será un gol anotado por el equipo '
           'con esa letra. Un entero k, que es la cantidad de goles que puede '
           'parar Pancho',
  'note': ' ',
  'output': 'Un entero m, que será el mínimo puntaje que afectará a Pancho '
            'en su desempeño',
  'title': 'Pancho el portero',
  'topics': ['strings'],
  'url': 'https://omegaup.com/arena/problem/Pancho-el-portero'},
 {'history': 'Lamentablemente corrieron a Pancho de su empleo ( Aun no '
             'comprendo como lo consiguió en un principio) pero Pancho no es '
             'una sapo que se rinde, así que ingreso en al kínder, así que '
             'te pidió ayuda con su tarea. Su maestra le dio una palabra y le '
             'pidió que hiciera una de estas 3 opciones. 1 Escribe el numero '
             'de caracteres que tiene la palabra2 Escribe cuantas vocales '
             'tiene esa palabra ( a, e, i, o, u) 3 Escribe la palabra al '
             'revés',
  'input': 'Una palabra s y un numero representando una de las opciones antes '
           'mencionadas.',
  'note': ' ',
  'output': 'Una única linea, lo que se le haya pedido hacer',
  'title': 'Pancho y las Palabras',
  'topics': ['strings'],
  'url': 'https://omegaup.com/arena/problem/Pancho-y-las-Palabras'},
 {'history': ' ',
  'input': ' ',
  'note': ' ',
  'output': ' ',
  'title': 'Parcial 1 Enunciado A',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Parcial-1-Enunciado-A'},
 {'history': ' ',
  'input': ' ',
  'note': ' ',
  'output': ' ',
  'title': 'Parcial 1 Enunciado B',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Parcial-1-Enunciado-B'},
 {'history': ' ',
  'input': ' ',
  'note': ' ',
  'output': ' ',
  'title': 'Parcial 1 Enunciado C',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Parcial-1-Enunciado-C'},
 {'history': ' ',
  'input': ' ',
  'note': ' ',
  'output': ' ',
  'title': 'Parcial 1 Enunciado D',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Parcial-1-Enunciado-D'},
 {'history': ' ',
  'input': ' ',
  'note': ' ',
  'output': ' ',
  'title': 'Parcial 1 Enunciado E',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Parcial-1-Enunciado-E'},
 {'history': ' ',
  'input': ' ',
  'note': ' ',
  'output': ' ',
  'title': 'Parcial 1 Enunciado F',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Parcial-1-Enunciado-F'},
 {'history': 'Era sábado por la mañana de finales de Octubre . El parque de '
             'diversiones iba a abrir esa tarde por primera vez tras varios '
             'meses de reconstrucción. Josse y Murry estaban sentados en su '
             'oficina ubicada a la entrada del parque . Por fin habían '
             'terminado de depurar su avanzado sistema de inteligencia '
             'artificial que se encargaba de administrar los juegos del parque '
             '. " El trabajo esta terminado , " dijo Josse . " Ahora, para un '
             'poco de diversión, ¿Se te ocurre algún problema algorítmico? '
             '" " ¡Claro! " , respondió Murry mientras sonreía a su amigo '
             'desde su escritorio . " Considera , por ejemplo , secuencias '
             'finitas de números . Para mi , las secuencias mas interesantes '
             ', son aquellas que terminan con una gran secuencia aritmética . '
             'En otras palabras , me gustan las secuencias aritméticas que '
             'abarcan desde algún indice hasta el ultimo elemento de la '
             'secuencia . Debido a que probablemente hayan varias '
             'subsecuencias , para poder apreciar lo interesante que es en '
             'verdad una secuencia , es necesario determinar cual es la mas '
             'larga . Aquí esta tu secuencia inicial . Tienes que encontrar '
             'el inicio de la subsecuencia aritmética continua que abarque '
             'hasta el final. " " OK" , dijo Josse mientras marcaba el indice '
             'correcto en la secuencia . " Eso fue bastante sencillo , ¿que '
             'sigue? " , " ¿Que sigue? " repitió Murry riendo por un momento '
             'mientras se levantaba de su silla " ¡Vamos al parque para poder '
             'encontrar problemas mas complicados ahí! " .',
  'input': 'Hay varios casos prueba , pero no se te brindara el numero exacto '
           ', por lo que debes leer datos hasta que ya no hayan mas. Cada caso '
           'consiste en dos linea. La primera contiene un entero n que '
           'especifica el tamaño de la secuencia . La segunda linea contiene '
           'la secuencia de n enteros x_ i , separados por un espacio.',
  'note': ' ',
  'output': 'Para cada caso prueba , imprime en una linea el indice de el '
            'primer elemento de la subsecuencia aritmética continua mas larga '
            'que abarca hasta el final de la secuencia . El indice del primer '
            'elemento en la secuencia siempre es 1 .',
  'title': 'Parque de Diversiones',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Parque-de-Diversiones'},
 {'history': 'Tienes una cadena que has ido construyendo a lo largo de los '
             'años y ya es muy larga. Desafortunadamente, en tu ciudad acaban '
             'de promulgar una ley que obliga a todos los dueños de cadenas '
             'largas a reducir su tamaño. La política es que el dueño de la '
             'cadena se verá obligado a borrar todas las apariciones de un '
             'caracter de su elección ( el caracter debe aparecer en la '
             'cadena, sino es trampa) , lo cual tiene el efecto de partir la '
             'cadena en pedazos. Por ejemplo, si se borran todas las '
             'apariciones de " t" de la cadena " gatitos" entonces se forman '
             'las cadenas " ga" , " i" , " os" mientras que si se borran todas '
             'las apariciones de " a" se forman las cadenas " g" y " titos" . '
             'Tu deseo es que, después de aplicar la operación, tengas una '
             'cadena del mayor tamaño posible. Escribe un programa que te '
             'ayude a conseguir tu objetivo.',
  'input': 'Una cadena de caracteres ASCII gráficos seguida de un salto de '
           'línea. Puedes suponer que la cadena tiene a lo mucho 10^ 7 '
           'caracteres.',
  'note': ' ',
  'output': 'Un entero que es el tamaño de la cadena más larga que puedes '
            'conservar después de aplicar la operación.',
  'title': 'Partiendo cadenas',
  'topics': ['strings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Partiendo-cadenas'},
 {'history': 'Un compañero colecciona cartas con diferentes símbolos, y '
             'quiere checar cuales son las cantidad de conjuntos diferente que '
             'puede generar con ellas. Te ha pedido su ayuda pero te puso '
             'ciertas reglas debido a su estrés de ordén. El conjunto que te '
             'de está ordenado de carta de mayor importancia, a menor '
             'importanciaTienen que ir en orden lexicográfico de acuerdo a su '
             'ordenSe consideran aparte, incluso si se repiten las mismas '
             'letrasTambién cuenta el conjunto vacio',
  'input': 'En la entrada tendrás una seríe de N caractéres c únidos, cada '
           'uno representando un símbolo de la carta. Aquí ya están en el '
           'orden de el compañero.',
  'note': ' ',
  'output': 'Todas las diferentes combinaciones en ordén lexicográfico, '
            'incluyendo el conjunto vacio.',
  'title': 'Permutaciones de Caractéres',
  'topics': ['sortings'],
  'url': 'https://omegaup.com/arena/problem/Perm_Char'},
 {'history': 'Nati y Velita son unos buenos artistas y pintores, pero hay '
             'carencia de pintura, por lo que quieren ahorrarla y optimizarla '
             'en cada obra que ellos realicen. Ellos utilizan únicamente los '
             '3 colores primarios ( Rojo, Azul, Amarillo) para formar otros '
             'colores: Rojo + Amarillo = NaranjaRojo + Azul = PúrpuraAmarillo '
             '+ Azul = VerdeRojo + Amarillo + Azul = GrisLas pinturas '
             'especiales que hacen que no importe el orden en el que combines '
             'las pinturas o la cantidad que pongas, siempre producirán el '
             'mismo resultado. Nati y Velita quieren hacer una pinura lineal '
             'de N cuadros. Al principio los cuadros no tienen color. Si se '
             'pinta un cuadro sin color de un color c, el nuevo color del '
             'cuadro será c. Si se pinta un cuadro con un color de un color '
             'c, entonces el nuevo color del cuadro será la combinación de '
             'todos los colores puestos. Ellos tienen una manera peculiar de '
             'hacer sus obras. Para pintar, ellos hacen pasadas de pintura: '
             'primero eligen un color c y dos enteros l y r ( 1 ≤ l, r ≤ N) y '
             'agregan el color c a todos los cuadros en el intervalo [ l, r] . '
             'Recuerda que el objetivo es ahorrar pintura, por lo que tu tarea '
             'es decir cuál es la mínima cantidad de pasadas que debe dar '
             'Nati para hacer la pintura que quiere. ProblemaDado un string '
             'que representa la pintura que Nati quiere recrear, decir cuál '
             'es la mínima cantidad de pasadas para lograrlo.',
  'input': 'En la primera línea un entero T, la cantidad de casos. En la '
           'primera línea de cada caso un entero N, la longitud de la '
           'pintura. En la segunda línea de cada caso, un string P '
           'representando la pintura a la que se quiere llegar. El i- ésimo '
           'caracter de P representa el color de ese cuadro y estos colores '
           'pueden ser: U = Sin colorR = RojoY = AmariloB = AzulO = NaranjaP = '
           'PúrpuraG = VerdeA = Gris',
  'note': ' ',
  'output': 'Para cada caso, imprimir la respuesta como " Case # i: x" , donde '
            'i es el i- ésimo caso y x es la mínima cantidad de pasadas para '
            'ese caso.',
  'title': 'Pinturas de Nati',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Pinturas-de-Nati'},
 {'history': 'Tu tarea es dibujar una pirámide de N x N.',
  'input': 'En la primera linea recibirás un valor entero el cual será el '
           'tamaño de la pirámide, en la segunda linea recibirás una letra '
           'cualquiera.',
  'note': ' ',
  'output': 'La pirámide impresa.',
  'title': 'Pirámides egipcias',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Piramides-egipcias'},
 {'history': 'Es un problema básico el cual consiste en imprimir el valor de '
             'la hipotenusa C de un triangulo cualquiera mediante el valor de '
             'sus lados A y B.',
  'input': 'La entrada consta únicamente de dos números enteros A y B ( '
           'separados por un salto de linea) los culaes representan los lados '
           'del triangulo.',
  'note': ' ',
  'output': 'Imprimir C el cual representa el valor de la hipotenusa. NOTA: El '
            'resultado se mostrará con una precisión exacta de 3 decimales.',
  'title': 'Pitágoras',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Pitagoras'},
 {'history': ' ',
  'input': ' ',
  'note': ' ',
  'output': ' ',
  'title': 'Pivot',
  'topics': ['sortings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Pivote_UP'},
 {'history': ' ',
  'input': ' ',
  'note': ' ',
  'output': 'Tu programa deberá un solo número entero que contenga la '
            'cantidad de parejas de pollos que puede pueden entrar en una '
            'bolsa.',
  'title': 'Pollero pollos',
  'topics': ['sortings'],
  'url': 'https://omegaup.com/arena/problem/Pollero-pollos'},
 {'history': 'Dados n números enteros, imprima cuántos son positivos y '
             'cuántos son negativos. Nota: El 0 no es negativo ni positivo.',
  'input': 'La primera línea contiene n, el número de elementos. La segunda '
           'línea contiene los n números enteros para evaluar.',
  'note': ' ',
  'output': 'Una línea con dos enteros a y b, donde a representa el número '
            'de elementos positivos, y b el número de elementos negativos.',
  'title': 'Positivos y Negativos',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Positivos-y-Negativos-ovi'},
 {'history': 'Con este problema vamos a repasar el manejo básico de arreglos. '
             'Crea un programa que permita leer un conjunto de N números '
             'enteros y después imprima una lista ordenada ( de menor a '
             'mayor) de los números positivos y después una lista ordenada ( '
             'de mayor a menor) de los números negativos.',
  'input': 'Leer primero N, donde 1< = N< = 100. El dato N indica la cantidad '
           'de números que se leerán desde el teclado. En la siguiente '
           'línea deberás leer los N números que se encuentran separados '
           'por un espacio. Cada uno de los N números tiene un valor de entre '
           '- 2000 y 2000.',
  'note': ' ',
  'output': ' ',
  'title': 'Positivos y negativos',
  'topics': ['sortings'],
  'url': 'https://omegaup.com/arena/problem/Positivos-y-negativos'},
 {'history': 'Cierta empresa de renta lonas para eventos sociales ( fiestas, '
             'reuniones, etc. ) . Requieren elegir “k” postes de los “n” '
             'postes que poseen de diversos tamaños, mismos que serán usados '
             'para colocar la lona. Es necesario que la distancia entre el '
             'poste de menor tamaño y el poste de mayor tamaño sea la '
             'mínima para que la lona quede balanceada y luzca una apariencia '
             'agradable. ProblemaDebes construir un programa que determine '
             'cuál es la diferencia mínima ( entre el poste mayor y de menor '
             'tamaño) de los “k” postes que sea posible encontrar de entre '
             'todos los postes que posee la empresa y que servirán para fijar '
             'la lona.',
  'input': 'Tu programa deberá leer del teclado los siguientes datos. El '
           'primer renglón va el número 1< = k < = 10, 000 de postes que se '
           'requieren para el evento. En el segundo renglones va el número k< '
           '= n < = 100, 000 de postes que tiene la empresaEn el tercer '
           'renglón van el tamaño de cada poste separado por un espacio el '
           'tamaño de cada poste está entre 1 < = t < = 1, 000, 000.',
  'note': ' ',
  'output': ' ',
  'title': 'PostesDF',
  'topics': ['sortings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/PostesDF'},
 {'history': ' ',
  'input': 'Python is an easy to learn, powerful programming language. It has '
           'efficient high- level data structures and a simple but effective '
           'approach to object- oriented programming. Python’s elegant syntax '
           'and dynamic typing, together with its interpreted nature, make it '
           'an ideal language for scripting and rapid application development '
           'in many areas on most platforms.',
  'note': ' ',
  'output': ' ',
  'title': 'Problema_String_Curso_Programación',
  'topics': ['strings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Problema_String_Curso_Programaci'},
 {'history': 'Estás modernizando la base de datos de tu escuela y deseas '
             'recopilar información mientras se procesan las calificaciones '
             'de los alumnos. Los alumnos de la escuela tienen números de '
             'lista implícitos 1, 2, 3, . . . , etc. y el programa que '
             'diseñes deberá procesar una secuencia de las siguientes '
             'instrucciones: REGISTRA c: Registrar que el siguiente alumno de '
             'la lista obtuvo calificación c. CUENTA c i j: Contar cuántos '
             'alumnos con calificación c existen entre los números de lista '
             'i y j inclusivo.',
  'input': 'Un entero N seguido de las N instrucciones a procesar. Puedes '
           'suponer que 0 ≤ N ≤ 10^ 5, que todas las calificaciones están '
           'entre 0 y 100 y que todos los intervalos de números de lista se '
           'referirán a alumnos ya registrados.',
  'note': ' ',
  'output': 'Para cada instrucción de cuenta, el valor correspondiente.',
  'title': 'Procesando calificaciones de alumnos',
  'topics': ['sortings'],
  'url': 'https://omegaup.com/arena/problem/Procesando-calificaciones-de-alu'},
 {'history': ' ',
  'input': ' ',
  'note': ' ',
  'output': ' ',
  'title': 'Productos gigantes',
  'topics': ['strings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Productos-gigantes'},
 {'history': 'Juanito esta haciendo una encuesta a todos los miembros de su '
             'ciudad y quiere saber cual es el promedio, la mediana y la moda '
             'de los edades de todos los ciudadanos. El problema es que ha '
             'capturado los datos de millones personas y Excel ya no quiere '
             'calcular tantos datos. Recuerda que el promedio es la suma de '
             'los datos entre el numero de personas, la mediana es el valor '
             'justo en medio de la lista ordenada ( si hay dos valores en '
             'medio, se toma el promedio de los dos) y la moda es el valor mas '
             'común.',
  'input': 'La primera línea es el número de personas entrevistadas N y las '
           'siguentes N líneas contienen las edades de cada persona.',
  'note': ' ',
  'output': 'El promedio, la mediana y la moda con decimales en ese orden '
            'separados por espacios.',
  'title': 'Promedio, Mediana y Moda',
  'topics': ['sortings'],
  'url': 'https://omegaup.com/arena/problem/Promedio-Mediana-y-Moda'},
 {'history': 'A Juanito le están enseñando los números pares e impares en '
             'su asignatura de matemáticas; como actividad extra para ganar '
             'puntos su maestro le dio varios rangos numéricos para que el '
             'determinara cuantos números son pares e impares y el promedio '
             'de estos. Ayuda a Juanito a desarrollar un programa que haga lo '
             'que el profesor le pidió de manera automática',
  'input': 'Dos números enteros inicio y fin separados por un espacio que '
           'corresponden al inicio y fin de un rango numérico.',
  'note': ' ',
  'output': 'Dos líneas, en la primera dos enteros p e m que representan las '
            'cantidad de pares e impares en el rango numérico; la segunda '
            'línea dos números reales x y y con dos decimales cada uno, que '
            'representan los promedios de los números pares e impares '
            'respectivamente.',
  'title': 'Promedio de Pares e Impares',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Promedio-de-Pares-e-Impares'},
 {'history': 'Dado un registro de alumnos donde cada uno tiene un número de '
             'lista y una calificación, escribe un programa que pueda '
             'resolver la siguiente pregunta: ¿cuál es el promedio entero de '
             'las calificaciones de los alumnos cuyos números de lista están '
             'entre I y U inclusivo?',
  'input': 'Un entero N seguido de N parejas de enteros L, C donde L es el '
           'número de lista de un alumno y C es su calificación. '
           'Posteriormente un entero M seguido de M parejas de enteros I y U. '
           'Puedes suponer que 0 ≤ N ≤ 10^ 5, M ≥ 0, 0 ≤ L ≤ 10^ 9, 0 ≤ C ≤ '
           '10, 0 ≤ I ≤ U < N y que no hay números de lista repetidos, aunque '
           'puede haber números de lista faltantes.',
  'note': ' ',
  'output': 'Para cada intervalo, un entero que sea el promedio entero de las '
            'calificaciones de los alumnos con números de lista en ese '
            'intervalo o bien, el entero - 1 si no hay alumnos en ese '
            'intervalo.',
  'title': 'Promedios en intervalos',
  'topics': ['sortings'],
  'url': 'https://omegaup.com/arena/problem/Promedios-en-intervalos'},
 {'history': 'Escribe un programa que lea N datos enteros 1< = N< = 100, '
             'calcula el promedio y cuales son mayores al promedio.',
  'input': 'En la primera línea el entero N, en la segunda línea, N enteros '
           'separados por un espacio.',
  'note': ' ',
  'output': 'En la primera línea el promedio ajustado a un decimal, en la '
            'segunda línea los números mayores al promedio en orden '
            'creciente. EjemplosInputOutputDescription📋57 5 3 2 13. 65 7',
  'title': 'Promedios reloaded',
  'topics': ['sortings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Promedios-reloaded'},
 {'history': ' ',
  'input': 'En la primera línea un entero N, el tamaño del puente. En la '
           'segunda línea, una cadena de caracteres que representa el puente.',
  'note': ' ',
  'output': 'Imprimir la mínima cantidad de bloques que tienen que ser '
            'insertados en el puente original para convertirlo en un puente '
            'bonito.',
  'title': 'Puente de Metrópolis',
  'topics': ['strings'],
  'url': 'https://omegaup.com/arena/problem/Puente-de-Metropolis'},
 {'history': ' ',
  'input': 'En la primera línea el entero N. en las siguientes N líneas las '
           'coordenadas x, y de cada punto.',
  'note': ' ',
  'output': 'Una lista con N líneas, cada línea contiene las coordenadas de '
            'los puntos ( x y) ordenados de forma creciente respecto a X.',
  'title': 'Puntos Ordenados',
  'topics': ['sortings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Puntos-Ordenados'},
 {'history': 'Dados dos puntos en el plano, siempre existe una línea recta '
             'que los une. Sin embargo, para tres puntos puede que dicha recta '
             'no exista. Dadas las coordenadas de tres puntos en el plano, '
             'determina si existe o no una recta que toca a todos los puntos.',
  'input': 'Seis enteros x_ 1, y_ 1, x_ 2, y_ 2, x_ 3, y_ 3 separados por '
           'espacios que denotan las coordenadas de los tres puntos en el '
           'plano, respectivamente. Puedes suponer que - 1000 ≤ x_ i, y_ i ≤ + '
           '1000 para 1 ≤ i ≤ 3.',
  'note': ' ',
  'output': "La letra ' S' si existe una recta que toque todos los puntos y la "
            "letra ' N' en caso contrario.",
  'title': 'Puntos colineales',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Puntos-colineales'},
 {'history': 'La empresa donde acabas de entrar a hacer tu servicio social '
             'necesita capturar todos los datos de sus empleados. Para '
             'facilitarlo te pidieron crear un programa sencillo para capturar '
             'los nombres y fechas de nacimiento. Pero para ahorrarse capturar '
             'algo más debes generar el RFC de los empleados. El RFC se '
             'genera con las 2 primeras letras del apellido paterno, la primer '
             'letra del apellido materno y la primer letra del nombre, '
             'seguidos por los dos últimos dígitos del año de nacimeinto, '
             'los 2 dígitos del mes y los dos dígitos del día de '
             'nacimiento.',
  'input': 'El nombre completo, comenzando por nombre, apellido paterno y '
           'materno, el día de nacimiento con dos dígitos, el mes expresado '
           'numéricamente, y el año de nacimiento. Puedes asumir que todos '
           'los empleados tienen sólo un nombre y no se introducirán '
           'acentos.',
  'note': ' ',
  'output': 'Una sola línea mostrando el RFC sin homoclave.',
  'title': 'RFC simple',
  'topics': ['strings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/RFC-simple'},
 {'history': 'Elaborar un programa para calcular la raíz cuadrada de un '
             'numero.',
  'input': '2 números enteros N y D separados por un espacio en blanco.',
  'note': ' ',
  'output': 'La raíz cuadrada de N con expresada con D decimales.',
  'title': 'Raíz cuadrada entrada y salida',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Raiz-cuadrada-entrada-y-salida'},
 {'history': ' ',
  'input': ' ',
  'note': ' ',
  'output': ' ',
  'title': 'Rec Parcial 1 Problema A',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Rec-Parcial-1-Problema-A'},
 {'history': ' ',
  'input': ' ',
  'note': ' ',
  'output': ' ',
  'title': 'Rec Parcial 1 Problema C',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Rec-Parcial-1-Problema-C'},
 {'history': ' ',
  'input': ' ',
  'note': ' ',
  'output': ' ',
  'title': 'Rec Parcial 1 Problema D',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Rec-Parcial-1-Problema-D'},
 {'history': 'Después de lo molesto que quedo Jorge al no encontrar alguien '
             'que tome bien las fotos y mucho menos alguien que las recorte de '
             'forma decente, el equipo entro en el castillo de Santy. En este '
             'lugar tenían la opción de reunir a un aliado con ellos. Para '
             'poder reunirse con un aliado, el equipo de Jorge debe encontrar '
             'las letras que hacen su nombre; es decir, si quieren a " bob" '
             'como aliado deben encontrar las letras b - o - b en el castillo. '
             'Actualmente, ellos se encuentran en una habitación del castillo '
             'y delante de ellos hay una cantidad de puertas, una vez el '
             'equipo pasa por una puerta ya no pueden irse atrás. Además, '
             'cada habitación tiene una letra ( excepto en la que ellos '
             'están actualmente) . Un aliado es más fuerte entre más largo '
             'es su nombre ( tiene sentido porque impone más " Sir lord el '
             'destrona huesos" a alguien llamado " bob" ) . Como es de '
             'esperarse el equipo quiere al aliado más fuerte, pero no saben '
             'muy bien como conseguirlo. Por suerte, el fiel compañero de '
             'Jorge logro obtener el mapa en donde describe como estan las '
             'puertas del castillo y las letras que hay en cada habitación. '
             'El mapa esta cifrado de una forma muy especial, es un texto ( '
             'una cadena de caracteres) . Imaginemos que tenemos un mapa como '
             'el siguienteEntonces, en el texto se vería algo como una '
             'palabra: B. O. . B. ID. RE. En donde el punto quiere decir '
             'después de cuantas puertas está esa palabra. Además, se '
             'encuentran en el orden tal forma que si una letra está después '
             'de n puntos, entonces la anterior letra que tenga n- 1 puntos '
             'será la letra que había en la puerta antes de esa. En el '
             'ejemplo, notamos que tenemos " . I" y la letra más atrás que '
             'no tienen ningún punto es la " B" , entonces quiere decir que '
             'para pasar a esa " I" tienes que ir por la puerta " B" . Que es '
             'lo que está en el dibujo. Como Jorge no está de humor por sus '
             'fotos, el quiere saber cuál sería el nombre del Aliado más '
             'fuerte antes de perder su tiempo en buscarlo. ProblemaDada una '
             'cadena llena de caracteres que representa el mapa descrito '
             'anteriormente. Se debe decir el nombre del aliado más fuerte ( '
             'el nombre más largo que se puede formar) teniendo en cuenta que '
             'una vez que pasas por una puerta ya no puedes regresar. En caso '
             'de haber varios aliados con el mismo poder ( misma cantidad de '
             'caracteres) , decir el que tenga el menor nombre '
             'lexicograficamente.',
  'input': 'Una unica cadena de caracteres descrita anteriormente ( El mapa) .',
  'note': ' ',
  'output': 'El nombre del aliado más fuerte y menor lexicograficamente.',
  'title': 'Recogiendo letras en la torre',
  'topics': ['strings'],
  'url': 'https://omegaup.com/arena/problem/Recogiendo-letras-en-la-torre'},
 {'history': 'José esta escribiendo una carta a mano y faltando 25',
  'input': 'Una palabra p seguido de un número p ( 0< p < 5) . La longitud de '
           'p siempre será mayor al doble de n',
  'note': ' ',
  'output': 'La palabra p recortada.',
  'title': 'Recortando palabras',
  'topics': ['strings'],
  'url': 'https://omegaup.com/arena/problem/Recortando-palabras'},
 {'history': 'Juanito tiene ganas de una rica y suculenta Pepsi con juguito de '
             'limón. De modo que Juanito le pidió a sus buenos amigos Charls '
             'y Briaares que robaran un banco para obtener dinero para comprar '
             'su Pepsi ( Esto ya que Juanito teme que al robar directamente la '
             'Pepsi, esta pierda el amor y deliciosidad con la que fue hecha) '
             '. El plan de Charls y Briaares iba a la perfección, hasta que '
             'se toparon con la bóveda, la cual solo puede ser abierta '
             'mediante una clave. El único ser que conoce la clave, es Blak '
             'Dragon ( Descendiente de Randy el celestial) . Pero a Blak '
             'Dragon le fascinan los juegos, por lo que se las ingenió para '
             'hacer que Charls y Briaares jugaran con él a cambio de la '
             'clave. El juego de Blak Dragon consiste en lo siguiente. El les '
             'dará a Charls y Briaares exactamente T cadenas de carácteres ( '
             'Que solo contienen a los carácteres a, b, c) . Y les definió '
             'una operación como: Tomar cualesquiera dos carácteres '
             'adyacentes en la cadena, y remplazarlos por el tercer carácter. '
             'Por ejemplo, si a y b son adyacentes, Charls y Briaares lo '
             'pueden remplazar por c. La tarea que Blak Dragon les asignó por '
             'cada una de las T cadenas, es encontrar la menor longitud que se '
             'puede obtener después de aplicar esta operación repetidas '
             'veces. En caso de que Charls y Briaares no lo consigan, Blak '
             'Dragon los meterá a prisión. Ayudales a ganar el juego, y '
             'satisfacer las necesidades de Juanito. ProblemaDadas T cadenas ( '
             'Formadas únicamente por los carácteres a, b, c) , por cada una '
             'de ellas, imprimir la menor longitud posible de la cadena '
             'resultante tras aplicar la operación definida en la '
             'descripción una cantidad arbitraria de veces.',
  'input': 'La primera línea contiene un entero T que representa la cantidad '
           'de cadenas. Las siguientes T líneas contienen cada una, una '
           'cadena de carácteres ( Formadas únicamente por los carácteres '
           'a, b, c) .',
  'note': ' ',
  'output': 'Por cada una de las T cadenas, imprime un solo entero '
            'representando la menor longitud posible de la cadena resultante '
            'tras aplicar la operación definida en la descripción una '
            'cantidad arbitraria de veces a la cadena inicial.',
  'title': 'Recurrencias Randyales',
  'topics': ['strings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Recurrencias-salvajes'},
 {'history': ' ',
  'input': 'En la primera línea un entero N. Cada una de las siguientes N '
           'líneas contendrá un solo caracter indicando la i- ésima letra '
           'de la secuencia.',
  'note': ' ',
  'output': 'La menor palabra que se puede generar, además, debes imprimir un '
            'salto de línea cada 80 caracteres.',
  'title': 'Reordenamiento Lexicografico',
  'topics': ['strings', 'sortings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Reordenamiento-Lexicografico'},
 {'history': 'Eres un programador apasionado de las matemáticas y de la '
             'ciencia en general, así que se te ocurrió ayudar a tu amigo '
             'matemático ( muy mala idea) . Tu amigo quiere que le ayudes a '
             'evaluar en algunos puntos la función f( x) que es solución de '
             'esta ecuación diferencial: ( 2x^ 2- ye^ x) - e^ xdy/ dx = '
             '0Además te va a dar un valor inicial para que puedas hacer la '
             'tarea de la mejor forma posible. Como tu amigo no confía en tus '
             'habilidades matemáticas te dijo que te regalará una Xbox '
             'Series X o una PS5 si lo logras. Lamentablemente reprobaste ese '
             'curso, pero lo que no reprobaste fue métodos numéricos, y '
             'sabes que puedes hacer magia con la programación, así que '
             'aceptas el reto. ¿Podrás jugar los juegos más actuales en tu '
             'nueva consola, o tendrás que jugar Super Mario Bros toda la '
             'vida?',
  'input': 'Dos reales, x_ 0 y f( x_ 0) que representan los valores iniciales '
           'de la ecuación. Después un entero N seguido de N reales, que '
           'representan los valores de x para los cuales tu amigo quiere '
           'evaluar f( x) , que es la solución de la ecuación diferencial.',
  'note': ' ',
  'output': 'Para cada uno de los M reales, un real que representa la función '
            'evaluada en ese punto. Como sabe que eres ingeniero, solo te va a '
            'pedir dos decimales redondeados de precisión.',
  'title': 'Resolviendo ecuaciones diferenciales',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Resolviendo-ecuaciones-diferenci'},
 {'history': 'Un día, como cualquier otro, Fernanda estaba jugando Fornite '
             'con José, jugaban y jugaban y nada más no ganaban : ( A '
             'Fernanda le entró una crisis nerviosa de la rabia, al ser '
             'asesinada de un headshoot a 1500 m, por lo que decidió dejar de '
             'jugar al fornait y ponerse a resolver rompecabezas. Uno de los '
             'rompecabezas con los que se cruzó le estaba rompiendo la '
             'cabeza, como la intensión de resolver rompecabezas era para '
             'relajarse decidió pedirte tu ayuda, para no estresarse tanto ni '
             'tampoco sentirse como una inútil al no poder resolver el '
             'rompecabezas. ¿y de qué constaba el problema que tanto '
             'mosqueaba a Fer? se preguntaran, pues muy fácil. . . la '
             'intención era acomodar ciertas palabras, las palabras que '
             'tuvieran las mismas letras se debían de acomodar en un mismo '
             'montón, así bien podías tener muchos montones con muchas '
             'palabras. Pero ella tampoco quiere que todo lo hagas tú, '
             'reitero, no se quiere sentir inútil, por lo que solo le '
             'tendrás que decir la cantidad de palabras que tiene el montón '
             'más grande.',
  'input': 'N que representa la cantidad de palabras del rompecabezas. N_ i o '
           'sea N palabras',
  'note': ' ',
  'output': 'La cantidad de palabras en el montón más grande.',
  'title': 'Rompecabezas extraño',
  'topics': ['strings', 'sortings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Rompecabezas-extrano'},
 {'history': 'Kelly es una chica a quien le gustan mucho las matemáticas, '
             'pero sobre todo le encantan las matrices que aprendió en la '
             'clase de Álgebra Lineal. Le gustan tanto que tiene en su '
             'habitación un cuadro con una matriz de 3 x 3 justo al lado del '
             'cuadro de su banda favorita: The Stokes. Cierto día imaginó '
             'que podría utilizar este cuadro como una ruleta, girando 90° a '
             'la izquierda y/ o a la derecha cierta cantidad de veces. Le '
             'pareció interesante poder determinar el orden de los números '
             'después de realizar X giros a la derecha y posteriormente Y '
             'giros a la izquierda, así que vino a pedirte ayuda para '
             'elaborar un programa que pueda determinar el resultado correcto.',
  'input': 'En una linea, dos enteros F, C: las filas y columnas de la matriz. '
           'En seguida, los F × C números que conforman la matriz. En una '
           'última línea, dos enteros X, Y: las vueltas a la derecha y a la '
           'izquierda respectivamente.',
  'note': ' ',
  'output': 'El estado final de la matriz luego de girar X veces a la derecha '
            'y Y veces a la izquierda.',
  'title': 'Ruleta de Matrices',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Ruleta-de-Matrices'},
 {'history': 'Diseñe un software que: Solicite valores numéricos de la '
             'medida de los lados de un triángulo y que determine el '
             'perímetro de un TRIÁNGULO. El resultado debe utilizar 2 '
             'lugares decimales después del punto y que muestre un Mensaje '
             'del Resultado, El PERÍMETRO del triángulo es: 23. 58',
  'input': 'Se ingresan 3 valores de las medidas de los lados de un triángulo',
  'note': ' ',
  'output': 'El PERÍMETRO del triángulo es: 23. 58',
  'title': 'SEC04-A-00 Perímetro Triángulo',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/SEC04-00-Perimetro-Triangulo'},
 {'history': 'Diseñe un Software en código C+ + , en el cuál se solicite '
             'dos valores numéricos que estén ubicados en una recta '
             'numérica. el software deberá calcular la distancia que existe '
             'en la recta de ambos puntos: La DISTANCIA entre los puntos es: '
             '876( OJO: Cuide las mayúsculas, minúsculas y espacios)',
  'input': '- 515',
  'note': ' ',
  'output': 'La DISTANCIA entre los puntos es: 20',
  'title': 'SEC04-A-01 Recta Numérica',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/SEC04-01'},
 {'history': ' ',
  'input': ' ',
  'note': ' ',
  'output': ' ',
  'title': 'SEC04-A-05 Volumen',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/SEC04-A-05-Volumen'},
 {'history': 'Iggy es una rana que vive alado de un rio. Iggy cruzaba al otro '
             'lado del rio por un camino de rocas de tamaño N, saltando de '
             'roca en roca pero un dia varias rocas desaparecieron dejando el '
             'camino incompleto, . Iggy solo puede recorrer k distancia en '
             'cada salto ( al terminar un salto debera estar en una piedra) y '
             'se pregunta si puede cruzar al otro lado del rio y de ser asi, '
             'cual es el mínimo número de saltos que necesitara hacer .',
  'input': 'En la primer linea N y M, que son el tamaño del rio y la '
           'distancia que Iggy puede recorrer en cada salto. En la siguiente '
           'linea una cadena de tamaño N donde 1 representa una piedra y 0 '
           'representa agua. Se garantiza que el primer y último carácter es '
           '1',
  'note': ' ',
  'output': 'Un entero, la mínima cantidad de saltos que Iggy debe usar para '
            'llegar a la ultima piedra o - 1 si no es posible.',
  'title': 'Saltos de rana',
  'topics': ['strings'],
  'url': 'https://omegaup.com/arena/problem/Saltos-de-rana'},
 {'history': 'Spiderkarel a sido llamado a salvar a los gatitos en los '
             'árboles de la gente de Nueva York, estos gatitos treparon tan '
             'alto que ya no pueden bajar del árbol, el problema es que '
             'llamaron a Spiderkarel 5 dueños de gatitos al mismo tiempo y '
             'aunque lo intenta no puede salvar a todos al mismo tiempo. El '
             'departamento de bomberos de Nueva York también ha salido a '
             'ayudar, por lo que todos los gatitos serán salvados. '
             'ProblemaCada caso de gatito en peligro está representado por un '
             'montón de zumbadores ( beepers) , si el montón tiene 2 '
             'zumbadores quiere decir que SpiderKarel rescato al gatito y si '
             'es 1 zumbador quiere decir que el gatito fue salvado por los '
             'bomberos. Muestra cuantos gatitos ha salvado Spiderkarel de caer '
             'tan alto de los árboles, dejando un montón de zumbadores en la '
             'posición ( 1, 1) que representa los gatitos salvados por '
             'Spiderkarel.',
  'input': '',
  'note': ' ',
  'output': 'ConsideracionesKarel empieza en la posición ( 1, 1) , orientado '
            'hacia el norte. Karel no tiene beepers en la mochila. No importa '
            'la posición ni la horientación de final de karel. No importa '
            'los beepers del mundo, solo importa los beepers que Siperkarel '
            'deja en la posición ( 1, 1) . Es posible que los bomberos '
            'lleguen pimero que Spiderkarel y salven a todos los gatitos y no '
            'tedría nada que dejar Spiderkarel. Cada monton de zumbadores '
            'representa un gatito salvado.',
  'title': 'Salvando gatitos',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Salvando-gatitos'},
 {'history': 'A nuestros super- amigos les iba muy bien en su oficio, pero '
             'creían que ya era momento de regresar y terminar con su '
             'aventura ( ya tenían todo lo que necesitaban) . Al momento de '
             'querer regresar por el portal se encontraron con varias personas '
             'tapando el camino, todas furiosas con antorchas y armas; '
             'parecía que querían atacar el cuartel central del cartel. El '
             'informante del cartel le dijo a Joel y Santy lo que había '
             'sucedido. Resulta que un hombre misterioso que se hace llamar " '
             'campechano" , se dice que vino del más allá con fines de '
             'venganza contra los super- amigos. Esta persona le informo a los '
             'ciudadanos de lo que ellos habían hecho con el precio de los '
             'dulces y naturalmente las personas se molestaron tanto al punto '
             'de armar una trinchera contra todo el cartel. Fue en ese momento '
             'que Joel y Santy recordaron que dejaron a su amigo Victor ( de '
             'campeche) fuera del examen y el estaba muy molesto por eso. '
             'Luego Joel recordó que dejo el portal hacia la tierra de los '
             'problemas abierto. Para su buena suerte Santy recordó que dejo '
             'un atajo escondido para llegar al portal por vía subterránea. '
             'La puerta del atajo estaba bloqueada con contraseña, en la '
             'pantalla de la puerta aparecía un arreglo A de N números '
             'enteros. Santy recordó que para desbloquear la puerta había '
             'que ordenar los números de forma creciente; pero los super '
             'amigos no tenían una computadora a la mano y solo sabían '
             'ordenar números poniendo la función sort( ) . Y las ideas que '
             'tenían ( burbuja) eran muy tardas; por lo cuál Santy se le '
             'ocurrió la magnifica idea de inventar su propio método de '
             'ordenamiento " Santy- sort" . El método era muy sencillo Santy '
             'agarraba un número del arreglo ( A_ i) y comparaba en tercias, '
             'veía el número de dos posiciones atrás ( A_ i- 2) y si el '
             'número era menor ( A_ i < A_ i- 2) entonces revertía el '
             'arreglo desde A[ i - 2] hasta A[ i] ( lo volteaba) . Y esto lo '
             'hacía para cada número hasta que ya no pudiera hacer más '
             'cambios. El pseudocódigo se vería algo así: 📋Termine = '
             'falseMientras ! Termine: Termine = true; Desde i = 3 hasta N: Si '
             '( A[ i] > A[ i - 2] ) : Termine = falseRevertir desde A[ i - 2] '
             'hasta A[ i] La función revertir se refiere a lo siguiente, si '
             'tengo la lista 4, 5, 7, 8, 9, 19 y revierto ( volteo) todos los '
             'elementos me queda: 19, 9, 8, 7, 5, 4Para entender mejor el '
             'Santy- sort, pensemos que tenemos el arreglo: 34, 48, 56, 23, '
             '5Primera pasada: Ve la primera tercia 34, 48, 56, vemos que 56 > '
             '34 por lo tanto no pasa nada y nos queda 34, 48, 56, 23, 5Ve la '
             'segunda tercia 48, 56, 23 como 23 < 48 revertimos ese pedazo del '
             'arreglo y nos queda: 34, 23, 56, 48, 5Ve la tercera tercia 56, '
             '48, 5 como 5 < 56 revertimos ese pedazo del arreglo y nos queda: '
             '34, 23, 5, 48, 56Como hubo al menos un cambio entonces volvemos '
             'a pasar: Ve la primera tercia 34, 23, 5, ya que 5 < 34 por lo '
             'tanto revertimos y nos queda: 5, 23, 34, 48, 56Ve la * segunda '
             'tercia 23, 34, 48 como 48 > 23 no pasa nada y queda igual el '
             'arreglo 5, 23, 34, 48, 56Ve la tercera tercia 34, 48, 56 como 56 '
             '> 34 no pasa nada y queda igual el arreglo 5, 23, 34, 48, 56Como '
             'hubo al menos un cambio entonces volvemos a pasar pero en esta '
             'pasada no hay cambios por lo cual el arreglo permanece igual y '
             'ya arreglado 5, 23, 34, 48, 56Pero Santy se dio cuenta que no '
             'siempre te queda un arreglo ordenada por ejemplo 5, 98, 79, 34, '
             '45 después del Santy- sort queda como 5, 34, 45, 98, 79. '
             'Entonces ellos quieren saber si el Santy- sort les dejara '
             'ordenado el arreglo o no. ProblemaDado un arreglo A imprimir " '
             'Si" , si después de hacer el Santy- sort el arreglo queda '
             'ordenado o " No" en caso contrario.',
  'input': 'N representando el número de elementos del arregloEn la siguiente '
           'linea N números enteros ( A_ i) que son los elementos del arreglo',
  'note': ' ',
  'output': '" Si" , si después de hacer el Santy- sort el arreglo queda '
            'ordenado o " No" en caso contrario.',
  'title': 'Santy Sort',
  'topics': ['sortings'],
  'url': 'https://omegaup.com/arena/problem/Santy-Sort'},
 {'history': ' ',
  'input': ' ',
  'note': ' ',
  'output': ' ',
  'title': 'Selección de estudiantes',
  'topics': ['strings'],
  'url': 'https://omegaup.com/arena/problem/Seleccion-de-estudiantes'},
 {'history': ' ',
  'input': 'Una secuencia de numeros de tamaño indefinido que seran las '
           'teclas presionadas en el telefono',
  'note': ' ',
  'output': 'El mensaje obtenido a partir de la secuencia de numeros',
  'title': 'Teclas del Nokia',
  'topics': ['strings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Serial_Nokia'},
 {'history': 'Un autómata finito determinista ( AFD) es una 5- tupla ( Q, Σ, '
             'δ, q_ 0, F) , donde: Q es un conjunto finito llamado estados, Σ '
             'es un conjunto finito llamado alfabeto, δ: Q ×Σ→ Q es la '
             'función de transición, q_ 0 ∈ Q es el estado inicial, yF ⊆ Q '
             'es el conjunto de estados de aceptación. Sea M= ( Q, Σ, δ, q_ '
             '0, F) un AFD y sea w= w_ 1w_ 2⋯ w_ n unacadena de símbolos '
             'donde w_ i ∈Σ. Entonces, M acepta wsi existe una secuencia de '
             'estados r_ 0, r_ 1, . . . , r_ n en Q con trescondiciones: r_ 0 '
             '= q_ 0, δ( r_ i, w_ i+ 1) = r_ i+ 1, para i= 0, . . . , n- 1, '
             'yr_ n ∈ F. La condición 1 establece que la máquina comienza en '
             'el estado inicial. La condición 2 establece que la máquina '
             'cambia desde un estado hacia otroestado de acuerdo a la función '
             'de transición. La condición 3 establece quela máquina acepta '
             'la cadena de entrada si termina en un estado de aceptación. '
             'Entonces, M reconoce el lenguaje A si A= w| M acepta w. Escribir '
             'un programa para determinar si un conjunto de cadenas W '
             'perteneceno no pertenecen al lenguaje A reconocido por un AFD M.',
  'input': 'La primer línea de entrada contiene seis enterosN, S, D, q_ 0, T '
           'y C, ( 1 ≤ N, S, C ≤ 100, 1 ≤ D ≤ 10^ 4, 1 ≤ q_ 0 ≤ N, 0 ≤ T ≤ N) '
           ', donde N= | Q| , S= | Σ| , D= N × S es el número de transiciones '
           'en el autómata, q_ 0 es el estado inicial, T= | F| , y C es la '
           'cantidadde cadenas a verificar si son aceptadas o nopor el '
           'autómata M. Cada estado q ∈ Q seidentifica de manera implícita '
           'por un número enterocon valor entre 1 y N. La segunda línea '
           'contiene el alfabeto Σ, representado por una secuencia de S '
           'símbolos s_ iseparados por espacios, tal que cada símbolo s_ i '
           'puede ser una letra, un dígitoo cualquier carácter del código '
           'ASCII excepto por el espacio. La tercer línea contiene el '
           'conjunto de estados de aceptación F, representado por una '
           'secuencia de T enteros t_ i( 1 ≤ t_ i ≤ N) separados por espacios. '
           'Las siguientes D líneas especifican las transicionesdel '
           'autómata. Cada línea define una transición δ( I, X) = Jpor '
           'medio de un entero I, un carácter Xy un entero J ( I, J ∈ Q y X '
           '∈Σ) separados por espacios, representando la transicióndesde el '
           'estado I hacia el estado J cuando el símbolode la entrada sea X. '
           'Finalmente, cada una de las siguientes C líneascontienen una '
           'cadena W, compuesta por símbolos quepertenecen al alfabeto Σ. La '
           'longitud de lacadena W está entre 0 y 100 caracteres.',
  'note': ' ',
  'output': 'Para cada una de las C cadenas W se deberá imprimir el '
            'mensajeACEPTADA si el autómata M acepta la cadena W, ó '
            'RECHAZADA en caso contrario.',
  'title': 'Simulación de un Autómata Finito Determinista',
  'topics': ['strings'],
  'url': 'https://omegaup.com/arena/problem/Simulacion-de-AFD'},
 {'history': ' ',
  'input': ' ',
  'note': ' ',
  'output': ' ',
  'title': 'Simulación de un Autómata Finito No Determinista',
  'topics': ['strings'],
  'url': 'https://omegaup.com/arena/problem/Simulacion-de-AFN'},
 {'history': 'Como proyecto de fin de semana te has propuesto simular un '
             'display de siete segmentos, solo que tú eres especial y no te '
             'gustan las rayitas así que usaras algún otro caracter. Ve el '
             'ejemplo para que te quede más claro, como se dibujaran los '
             'números si el caracter dado fuera " # " : 📋 # # # # # # # # # # '
             '# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # '
             '# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # '
             '# # # # # # # # # # # # # # # # # # # # # # # # # # # # #',
  'input': 'Un entero n de a lo más 9 dígitos, seguido de un caracter ascii. '
           'Los dígitos estaran en el rango de 0- 9.',
  'note': ' ',
  'output': 'El número n dibujado únicamente con el caracter dado, cada '
            'dígito tendra un espacio de separación.',
  'title': 'Simulando un Display',
  'topics': ['strings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Simulando-un-Display'},
 {'history': 'Tu empresa cuenta con una base de datos de cadenas de longitud '
             'variable, pero un programa que alguien hizo la corrompió. '
             'Originalmente, la base de datos tenía cadenas de letras '
             'minúsculas terminadas por barras verticales | ( por ejemplo '
             'hola| gatito| adios| ) y un programa era el responsable de '
             'sobreescribir las cadenas. Sin embargo, ese programa no validó '
             'que la cadena a usar para sobreescribir una cadena existente '
             'fuera de longitud menor o igual la cadena que iba a ser '
             'modificada. Por ejemplo, después de sobreescribir la cadena '
             'gatito con la cadena cachorros, la base de datos quedó hola| '
             'cachorrosios| y se perdió información valiosa. '
             'Afortunadamente, cuentas con un respaldo antiguo de la base de '
             'datos y con la lista de modificaciones que se le hicieron. Tu '
             'labor será implementar un programa que modifique la base de '
             'datos correctamente. La operación de sobreescribir una cadena '
             'existente con una más grande debe fallar y debe sustituir todos '
             'los caracteres de cadena existente con X. La operación de '
             'sobreescribir una cadena existente con una cadena de tamaño '
             'menor o igual debe tener éxito y además debe sustituir todos '
             'los caracteres sobrantes de la cadena existente con .',
  'input': 'La primera línea contendrá la cadena que representa el respaldo '
           'antiguo de la base de datos. La siguiente línea contendrá un '
           'entero N. Posteriormente se dan las N operaciones de modificación '
           'sobre la base de datos. Cada operación está representada con un '
           'entero I y una cadena alfabética S, donde I es el índice de la '
           'cadena de la base de datos que se debe sobreescribir con S. Las '
           'cadenas de la base de datos están numeradas implícitamente a '
           'partir de 0. Puedes suponer que la base de datos guarda un máximo '
           'de 25 cadenas, que 0 ≤ N ≤ 20, que el valor de I es válido y que '
           'la longitud máxima de S y de cada cadena individual de la base de '
           'datos es de 10^ 6 caracteres.',
  'note': ' ',
  'output': 'Una cadena que sea la representación de la base de datos final.',
  'title': 'Sobreescribiendo cadenas de longitud variable',
  'topics': ['strings'],
  'url': 'https://omegaup.com/arena/problem/Sobreescribiendo-cadenas-de-long'},
 {'history': 'Te encantan los números y cada noche sueñas con ellos hasta el '
             'amanecer. Algunas veces sueñas con números primos, otras veces '
             'con cuadrados perfectos, pero sin duda tus sueños favoritos son '
             'en los que aparecen los números escalera. Su hermosura te deja '
             'sin palabras para describirlos, así que es más fácil explicar '
             'cómo se ven: 1, 121, 12321, 1234321, 123454321 son ejemplos de '
             'estos bellos números. Cuando tu sueño comienza con un número '
             'escalera eres muy feliz, pero cuando no, intentarás " arreglar" '
             'el número N que estás soñando para conseguir un número '
             'escalera. Dados dos números auxiliares A y B, tu primer intento '
             'para arreglar N será restarle A y luego dividirlo entre B + 1. '
             'Si obtienes un número escalera podrás seguir feliz con tu '
             'sueño, pero sino harás un segundo intento al restarle A + B y '
             'luego sumarle 1 a lo que te quedó después del primer intento. '
             'Si después del segundo intento no lograste obtener un número '
             'escalera, te rendirás y continuarás con tu sueño. Escribe un '
             'programa que determine si podrás soñar con un número '
             'escalera. Como no te gustan los números reales, en tus sueños '
             'manipulas únicamente números enteros.',
  'input': 'Tres enteros N, A, B. Puedes suponer que 0 ≤ N ≤ 5×10^ 8 y 0 ≤ A, '
           'B ≤ 10^ 4.',
  'note': ' ',
  'output': 'Si el número N es escalera, imprimir el mensaje " es escalera '
            'inicialmente" . En caso de que no lo sea pero se pueda arreglar '
            'después del primer intento, imprimir el mensaje " es escalera '
            'despues del primer intento" . En caso de que hasta el segundo '
            'intento se pueda obtener un número escalera, imprimir el mensaje '
            '" es escalera despues del segundo intento" . En caso de que no '
            'sea posible obtener un número escalera, imprimir el mensaje " '
            'nos rendimos" . ObservaciónPor el valor de N, los únicos '
            'números escalera en rango son 1, 121, 12321, 1234321 y '
            '123454321.',
  'title': 'Soñando con números escalera',
  'topics': ['strings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Sonando-con-numeros-escalera'},
 {'history': 'Alicia es una lectora de libros y dentro de sus aficiones esta '
             'el contar de algunos párrafos de su interés las consonantes, '
             'vocales y números ( 0. . 9) , ayúdale a escribir un programa '
             'que le facilite esta tarea que suele ser bastante aburrida.',
  'input': 'La primer linea contiene un numero entero N positivo que '
           'representa la cantidad de lineas de texto que tiene el párrafo. '
           'las siguiente N linea son el texto que se pretende analizar. El '
           'texto puede contener mayúsculas, minúsculas y cualquier otro '
           'caracteres como símbolos de puntuación.',
  'note': ' ',
  'output': 'En la salida se esperan 3 números enteros que representan el '
            'numero de consonantes, vocales y números.',
  'title': 'Sopa de consonantes, vocales y numeros',
  'topics': ['strings'],
  'url': 'https://omegaup.com/arena/problem/Sopa-consonantes-vocales-y-num'},
 {'history': 'Dada una cuadrícula de m por n de letras, ( 1 ≤ m, n ≤ 150) , y '
             'una lista de palabras, encuentre la ubicación en la cuadrícula '
             'en que la palabra se puede encontrar. Cada palabra coincide con '
             'una línea de letras en línea recta de manera ininterrumpida en '
             'la cuadrícula. La palabra puede estar formada por letras, '
             'números o símbolos de puntuación imprimibles. Una palabra '
             'puede coincidir con las letras en la cuadrícula '
             'independientemente de de si son mayúsculas o minúsculas ( es '
             'decir, las letras mayúsculas y minúsculas deben tratarse del '
             'mismo modo) . La coincidencia se puede hacer en cualquiera de '
             'las ocho direcciones, ya sea horizontal, vertical o '
             'diagonalmente. sobre la cuadrícula.',
  'input': 'La entrada comienza con un par de enteros, m seguido de n, 1 ≤ m, '
           'n ≤ 150 en una línea. Las siguientes m líneas contienen n letras '
           'cada una; esta es la cuadrícula de letras en la que deberás '
           'buscar las palabras de la lista. Las letras en la cuadrícula '
           'pueden estar en mayúsculas o minúsculas. Después de las m '
           'líneas que forman la cuadrícula, habrá otro entero k en una '
           'línea ( 1 ≤ k ≤ 20) . Las siguientes líneas de entrada contienen '
           'la lista de palabras que deben ser buscadas, una palabra por '
           'línea. Estas palabras pueden contener letras mayúsculas y '
           'minúsculas, números y otros caracteres imprimibles.',
  'note': ' ',
  'output': 'Para cada palabra en la lista de palabras, un par de números '
            'enteros que representan la ubicación de la palabra '
            'correspondiente en la cuadrícula. Los enteros deben estar '
            'separados por un solo espacio. El primer entero es la línea en '
            'la cuadrícula donde se puede encontrar la primera letra de la '
            'palabra dada ( 1 representa la primer línea. El segundo entero '
            'es la columna en la cuadrícula donde se puede encontrar la '
            'primera letra de la palabra dada ( 1 representa la columna más a '
            'la izquierda en la cuadrícula) . Si se puede encontrar una '
            'palabra más de una vez en la cuadrícula, entonces la ubicación '
            'que se emite debe corresponder a la ocurrencia del menor valor '
            'para la línea ( es decir, la coincidencia de la primera letra de '
            'la palabra más cercana a la parte superior de la cuadrícula) . '
            'Si dos o más palabras empatan en la línea, la salida debe '
            'corresponder a la parte más a la izquierda de estas ocurrencias '
            '( menor valor de la columna) . Se asegura que todas las palabras '
            'pueden ser encontrado al menos una vez en la cuadrícula.',
  'title': 'Sopa de letras 02',
  'topics': ['strings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Sopa-de-letras-02'},
 {'history': 'Codificar un programa que lea una cadena de caracteres e informa '
             'la cantidad de ocurrencias de cada vocal en la cadena.',
  'input': 'Se ingresa una unica linea que contiene una cadena de hasta 500 '
           'caracteres. Los caracteres pueden ser digitos y letras, mayusculas '
           'y minusculas.',
  'note': ' ',
  'output': 'Mostrar en una unica linea 5 numeros enteros separados por un '
            'espacio. El primero es la cantidad de veces que aparece la vocal '
            "' a' ( en mayusculas o minusculas) . El segundo representa la "
            "cantidad de veces de la vocal ' e' . Y los tres restantes, la ' "
            "i' , ' o' y ' u' , InputOutput📋Santa Fe2 1 0 0 0",
  'title': 'String con Vocales',
  'topics': ['strings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/String-con-Vocales'},
 {'history': 'Imagina un grupo de N personas numeradas de 1 a N, y que están '
             'ordenadas de izquierda a derecha, de menor a mayor. Entre estas '
             'personas existen M relaciones de amistad. Si hay una relación '
             'de amistad entre las personas A y B, entonces A es amigo de B y '
             'B es amigo de A. Considera que A es amigo de A, todos son amigos '
             'de si mismos. Si A es amigo de B y B es amigo de C, entonces no '
             'necesariamente A es amigo de C. ProblemaDadas la relaciones de '
             'amistad debes determinar el subarreglo palindamigo de mayor '
             'longitud. Un subarreglo es palindamigo si la primera persona es '
             'amiga de la última, la segunda de la penúltima, la tercera de '
             'la antepenúltima y asi sucesivamente.',
  'input': 'En la primera línea dos enteros N y M, la cantidad de personas y '
           'el numero de relaciones de amistad. En las siguientes M líneas '
           'dos enteros A y B, que significa que hay una relación de amistad '
           'entre estas personas',
  'note': ' ',
  'output': 'El tamaño del subarreglo palindamigo de mayor longitud.',
  'title': 'Subarreglos palindamigos',
  'topics': ['sortings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Subarreglos-palindamigos'},
 {'history': 'Se te da una cadena de caracteres s que contiene n letras, en '
             "donde cada letra puede ser ' a' o ' b' . s[ l; r] es una "
             'subcadena continua de las letras del índice l hasta el r de la '
             'cadena, este rango es inclusivo. Diremos que una cadena de '
             "caracteres esta balanceada si el la cantidad de letras ' a' en "
             "la cadena es igual al número de letras ' b' . Por ejemplo, las "
             'cadenas " baba" y " aabbab" son balanceadas, pero las cadenas " '
             'aaab" y " b" no lo son. Encuentra cualquier subcadena no vacía '
             'balanceada s[ l, r] de la cadena s.',
  'input': 'La primera línea de la entrada contiene un solo entero c que es '
           'el número de casos de prueba. Cada caso de prueba contiene dos '
           'líneas: La primera línea contiene un entero n que denota la '
           'longitud de la cadena de caracteres. La segunda línea de cada '
           'caso de prueba contiene la cadena s, que consiste de n letras, '
           "cada una siendo la letra ' a' o ' b' .",
  'note': ' ',
  'output': 'Para cada caso de prueba imprime dos enteros. Si existe alguna '
            'subcadena de caracteres balanceada s[ l; r] , entonces imprime l '
            'y r ( 1 ≤ l ≤ r ≤ n) , que son los índices del inicio y el fin '
            'del rango, ambos números indexados en 1. Si no existe dicha '
            'subcadena, imprime - 1 - 1.',
  'title': 'Subcadena balanceada',
  'topics': ['strings'],
  'url': 'https://omegaup.com/arena/problem/Subcadena-balanceada'},
 {'history': 'Dado un arreglo a de n enteros positivos encuentra un '
             'subconjunto de los elementos de a tal que su suma es par ( '
             'divisible entre 2) o determina que no existe algún subconjunto '
             'con dicha característica.',
  'input': 'En la primera línea un entero n, el tamaño del arreglo. En la '
           'segunda línea, n enteros a_ 1, a_ 2, . . . , a_ n separados por '
           'un espacio.',
  'note': ' ',
  'output': 'Impirme 9 · 10^ 180 + 1 si no existe algún subconjunto tal que '
            'su suma sea par. En otro caso, imprime un entero k, la cantidad '
            'de elementos del subconjunto. En otra línea k enteros positivos '
            'distintos, los índices de los elementos elegidos. Si hay '
            'múltiples soluciones imprime cualquiera de ellas.',
  'title': 'Subconjunto con suma par',
  'topics': ['strings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Subconjunto-con-suma-par'},
 {'history': 'Hay N robots en una colina y una bomba en la base de la misma: '
             'tu objetivo es usar los robots para subir la bomba lo más '
             'posible sobre la colina. Cada robot cuenta con una altura '
             'inicial H, una cantidad de energía E y puede bajar la colina '
             'sin gastar energía pero gasta una unidad de energía para subir '
             'una unidad de altura. Cuando un robot alcanza la bomba, éste '
             'puede cargarla y llevársela ( el robot gasta la misma cantidad '
             'de energía subiendo con o sin la bomba) ; el robot puede soltar '
             'la bomba en cualquier momento o bien, soltarla hasta que se '
             'acabe su energía y ya no pueda avanzar más. Si fuera posible, '
             'otro robot puede ir a recoger la bomba en la posición en la que '
             'quedó para seguir subiéndola. Los robots pueden programarse en '
             'cualquier orden. Escribe un programa que determine la altura '
             'máxima que puede alcanzar la bomba si se usan los robots de '
             'manera óptima.',
  'input': 'Un entero N seguido de N parejas de enteros H, E que determinan la '
           'altura y energía de cada robot. Puedes suponer que 0 ≤ N ≤ 10^ 5, '
           '0 ≤ H ≤ 10^ 9 y 0 ≤ E ≤ 10^ 6.',
  'note': ' ',
  'output': 'Un entero positivo que sea la altura máxima que puede alcanzar '
            'la bomba.',
  'title': 'Subiendo la bomba por la colina',
  'topics': ['sortings'],
  'url': 'https://omegaup.com/arena/problem/Subiendo-la-bomba-por-la-colina'},
 {'history': 'Nadie habrá dejado de observar que con frecuencia el suelo se '
             'pliega de manera tal que una parte sube en ángulo recto con el '
             'plano del suelo, y luego la parte siguiente se coloca paralela a '
             'este plano, para dar paso a una nueva perpendicular, conducta '
             'que se repite en espiral o en línea quebrada hasta alturas '
             'sumamente variables. Agachándose y poniendo la mano izquierda '
             'en una de las partes verticales, y la derecha en la horizontal '
             'correspondiente, se está en posesión momentánea de un '
             'peldaño o escalón. Cada uno de estos peldaños, formados como '
             'se ve por dos elementos, se sitúa un tanto más arriba y '
             'adelante que el anterior, principio que da sentido a la '
             'escalera, ya que cualquiera otra combinación producirá formas '
             'quizá más bellas o pintorescas, pero incapaces de trasladar de '
             'una planta baja a un primer piso. Las escaleras se suben de '
             'frente, pues hacia atrás o de costado resultan particularmente '
             'incómodas. La actitud natural consiste en mantenerse de pie, '
             'los brazos colgando sin esfuerzo, la cabeza erguida aunque no '
             'tanto que los ojos dejen de ver los peldaños inmediatamente '
             'superiores al que se pisa, y respirando lenta y regularmente. '
             'Para subir una escalera se comienza por levantar esa parte del '
             'cuerpo situada a la derecha abajo, envuelta casi siempre en '
             'cuero o gamuza, y que salvo excepciones cabe exactamente en el '
             'escalón. Puesta en el primer peldaño dicha parte, que para '
             'abreviar llamaremos pie, se recoge la parte equivalente de la '
             'izquierda ( también llamada pie, pero que no ha de confundirse '
             'con el pie antes citado) , y llevándola a la altura del pie, se '
             'le hace seguir hasta colocarla en el segundo peldaño, con lo '
             'cual en éste descansará el pie, y en el primero descansará el '
             'pie. ( Los primeros peldaños son siempre los más difíciles, '
             'hasta adquirir la coordinación necesaria. La coincidencia de '
             'nombre entre el pie y el pie hace difícil la explicación. '
             'Cuídese especialmente de no levantar al mismo tiempo el pie y '
             'el pie) . Llegado en esta forma al segundo peldaño, basta '
             'repetir alternadamente los movimientos hasta encontrarse con el '
             'final de la escalera. Se sale de ella fácilmente, con un ligero '
             'golpe de talón que la fija en su sitio, del que no se moverá '
             'hasta el momento del descenso. Escribe un programa que imprima '
             'en pantalla estos extraños fenómenos conocidos como escaleras.',
  'input': 'El número de escaleras a imprimir.',
  'note': ' ',
  'output': 'La escalera con su índice.',
  'title': 'Instrucciones para subir una escalera',
  'topics': ['strings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Subir-escalera'},
 {'history': 'Dadas dos cadenas, escribe un programa que calcule su '
             'subsecuencia común más larga. Una subsecuencia común se '
             'define como una selección de posiciones en ambas cadenas donde '
             'los caracteres de una y otra son iguales y además se respeta el '
             'orden de aparición de los mismos en las cadenas. Una posición '
             'de una cadena no se puede hacer coincidir con más de una '
             'posición de la otra cadena.',
  'input': 'Dos cadenas S y T. Puedes suponer que las cadenas están formadas '
           'únicamente por letras y que tienen una longitud máxima de 45000 '
           'caracteres.',
  'note': ' ',
  'output': 'Un entero N que sea la longitud de la subsecuencia común más '
            'larga de S y T. Si ninguna cadena supera los 1000 caracteres de '
            'longitud, también deberán imprimirse N parejas de enteros I_ S, '
            'J_ T que denotan las posiciones de las coincidencias que '
            'conforman la subsecuencia ( en orden) . Si hay más de una '
            'respuesta, puedes imprimir cualquiera de ellas.',
  'title': 'Subsecuencia común más larga',
  'topics': ['strings'],
  'url': 'https://omegaup.com/arena/problem/Subsecuencia-comun-mas-larga'},
 {'history': 'Los programadores mayas concluyeron los desafios del hombre '
             'misterioso, entonces, el hombre misterioso accedió a '
             'entrenarlos para derrotar al Malvado Robot OMI. El primer '
             'entrenamiento consiste en los principios basicos del lenguaje '
             'Maya+ + , el codigo del lenguaje es una cadena binaria S que '
             'consta de n ceros y unos. El entrenamiento consiste en dividir '
             'la cadena en el mínimo número de subsecuencias de tal manera '
             'que cada carácter pertenezca a una subsecuencia y cada '
             'subsecuencia se parezca a " 101010. . . " o " 010101. . . " ( es '
             'decir, la subsecuencia no debe tener ceros o unos adyacentes) . '
             'Recuerda que una subsecuencia es una secuencia que puede '
             'derivarse de la secuencia dada eliminando cero o más elementos '
             'sin cambiar el orden de los elementos. Por ejemplo, las '
             'subsecuencias de " 1011101" son " 0" , " 1" , " 11111" , " 0111" '
             ', " 101" , " 1001" , pero no " 000" , " 101010" y " 11100" . '
             'ProblemaDado la cadena binaria S ayuda a los programadores mayas '
             'a saber cual es el número mínimo de subsecuencias con las '
             'condiciones antes mencionadas.',
  'input': 'Un número n, el tamaño de la cadena binaria, seguido de la '
           'cadena S.',
  'note': ' ',
  'output': 'Un entero el cual es el número mínimo de subsecuencias que '
            'tiene la cadena S. InputOutput📋6 1001012📋5 111115📋8 '
            '010100004Límites1 ≤ n ≤ 10^ 5Para 12. 5 puntosSolo hay unos en '
            'S. Para 25 puntosLas subsecuencias de la cadena S eliminan 0 '
            'elementos. Para 62. 5 puntosNo hay restricciones.',
  'title': 'Subsecuencias Maya++',
  'topics': ['strings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Subsecuencias-Maya'},
 {'history': 'Unos científicos malvados quieren explotar toda la ciudad con '
             'dinamita, por lo que han juntado varias herramientas, '
             'ingredientes y compuestos a lo largo de una mesa, todos en fila. '
             'Tú quieres detenerlos, así que has entrado en su laboratorio y '
             'te detuviste frente a la mesa para esconder la TNT y que no '
             'puedan producir la dinamita, pero como buen matemático que '
             'eres, te pusiste a calcular de cuántas formas se puede formar '
             'TNT con lo que encontraste en la mesa. ProblemaDada una cadena '
             'de caracteres ( los objetos e ingredientes en la mesa) , '
             'encuentra la cantidad de subsecuencias que son exactamente TNT. '
             'Una subsecuencia es una secuencia que puede obtenerse de otra '
             'eligiendo cero o más elementos no necesariamente consecutivos, '
             'pero respetando el orden de aparición. Por ejemplo, para la '
             'secuenciaHOTLANT, son subsecuencias: HOTLANTTNTHOLALANY las '
             'siguientes no son subsecuencias de HOTLANT: TNALTOHALTOTAOTLOH',
  'input': 'Una cadena de caracteres de longitud N que representan los objetos '
           'en la mesa. La cadena solo contendrá caracteres del alfabeto '
           'inglés en mayúsculas.',
  'note': ' ',
  'output': 'La cantidad de subsecuencias en la cadena que son exactamente '
            'TNT.',
  'title': 'Subsecuencias TNT',
  'topics': ['strings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Subsecuencias-TNT'},
 {'history': 'Crea una función que reciba un número entero m, y que entregue '
             '1 si m es impar o 0 si es par. Utilizando la función anterior y '
             'dados dos números enteros a, b ( con a< b) calcula la suma s de '
             'todos los números impares en el intervalo [ a, b] . Por '
             'ejemplo, si a= 0 y b= 4: s= 1+ 3= 4',
  'input': 'Consiste de dos números enteros, a, b, separados por espacios, '
           'que cumplen −70 000≤a< b≤70 000.',
  'note': ' ',
  'output': 'Consiste de un número entero s cuyo valor absoluto siempre será '
            'menor que 1 300 000 000. EjemplosInputOutput📋0 44InputOutput📋- 10 '
            '40375',
  'title': 'Suma Impares',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Suma-Impares'},
 {'history': ' ',
  'input': 'En la primer línea un entero, N, la cantidad de puntos. En las '
           'siguientes N líneas, dos enteros representando las coordenadas de '
           'un punto.',
  'note': ' ',
  'output': 'Un sólo entero: el resultado de evaluar la expresión requerida. '
            'Imprime el resultado módulo 1, 000, 000, 007 ( 10^ 9 + 7) .',
  'title': 'Suma Manhattan',
  'topics': ['sortings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Suma-Manhattan'},
 {'history': ' ',
  'input': 'Un entero N',
  'note': ' ',
  'output': ' ',
  'title': 'Suma de N',
  'topics': ['strings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Suma-de-N'},
 {'history': 'Dados n números enteros, y sea a el menor de esos números, y b '
             'el mayor de ellos, imprima a+ b.',
  'input': 'La primera línea contiene n, el número de elementos. La segunda '
           'línea contiene los n números enteros para evaluar.',
  'note': ' ',
  'output': 'a+ b, donde a es el menor de los números, y b el mayor de ellos.',
  'title': 'Suma de mayor y menor',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Suma-de-mayor-y-menor'},
 {'history': 'Elabora un programa que sume dos numeros',
  'input': 'Dos numeros reales',
  'note': ' ',
  'output': 'La suma de los dos numeros con dos decimales',
  'title': 'Suma de reales',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Suma-de-reales'},
 {'history': 'Dados 4 enteros n, a, b, c debes sumar los múltiplos de a, los '
             'múltiplos de b y los múltiplos de c que se encuentran entre [ '
             '1, n] .',
  'input': 'Cuatro enteros 10 ≤ n ≤ 100000, 2 ≤ a, b, c ≤ 9.',
  'note': ' ',
  'output': 'Un entero, la suma de todos los múltiplos de los tres números '
            'dados que se encuentren entre [ 1, n]',
  'title': 'Suma de suma de múltiplos',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Suma-de-suma-de-multiplos'},
 {'history': ' ',
  'input': 'Se te da el número n que son la cantidad de digitos que tienes. '
           'Luego se te dan los n digitos.',
  'note': ' ',
  'output': 'Un único número que es la suma de los dos números formados.',
  'title': 'Suma mínima de dígitos',
  'topics': ['sortings'],
  'url': 'https://omegaup.com/arena/problem/Suma-minima-de-digitos'},
 {'history': 'Para este problema, tendrás que leer parejas de números que '
             'representan fracciones. Tu tarea es obtener la suma de todas las '
             'fracciones y mostrarlas en forma reducida. Por ejemplo si la '
             'entrada es: 2 23 44 54 33 4supongamos que se usa el algoritmo '
             'común ( sin reducir la fracción) , se obtendría: 2224 / '
             '480Pero usando las fracciones reducidas se debe llegar a: 139 / '
             '30',
  'input': 'Tu programa procesará parejas de números hasta EOF. Se garantiza '
           'que los números son enteros con signo de 32 bits. No hay '
           'divisores con valor 0. Y el resultado es una fracción válida. '
           'Cuando una fracción es negativa, el signo - aparece a la '
           'izquierda del numerador.',
  'note': ' ',
  'output': 'Mostrar la fracción reducida como dos enteros que la '
            'representan. Si el número fraccionario es negativo, el signo '
            'deberá acompañar al numerador. El numerado y denominador '
            'deberán estar separados por el símbolo / habiendo un espacio '
            'entre éstos y el símbolo.',
  'title': 'Sumando y reduciendo fracciones',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Suma-reduce-fracciones'},
 {'history': 'Sebas está en un entrenamiento de matematicas, y le presentaron '
             'un problema: " Demuestra que para toda N existe una suma de N '
             'números tal que su suma sea un cuadrado perfecto. " , Sebas '
             'esta muy ocupado para resolver ese problema, y tú como buen '
             'programador que eres, te ha pedido que demuestres el problema '
             'con " casitos" .',
  'input': 'Un entero N',
  'note': ' ',
  'output': ' ',
  'title': 'Sumita cuadrada',
  'topics': ['strings', 'sortings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Sumita-cuadrada'},
 {'history': 'Te gustan mucho los juegos de celular donde tu personaje corre a '
             'través de un escenario con precipicios y tú sólo debes '
             'indicar en qué momento saltar. Acabas de comprar la expansión '
             'de tu juego favorito pero ya te castigaron por jugar tanto, así '
             'que quieres escribir un programa que juegue por ti. Cada nivel '
             'del juego está representado por una cadena de caracteres # y '
             'espacios, donde # denota tierra firme y un espacio denota un '
             'precipicio. Comienzas del lado izquierdo del nivel y el objetivo '
             'es llegar al extremo derecho. Si estás en tierra firme y al '
             'lado hay tierra firme, entonces puedes avanzar caminando; en '
             'caso contrario, tendrás que saltar. Existen precipicios más '
             'largos que otros ( múltiples espacios consecutivos) , pero '
             'saltando puedes avanzar por el aire de 1 a 5 celdas antes de '
             'aterrizar ( tú decides la longitud del salto) . Escribe un '
             'programa que reciba la descripción de un nivel y calcule la '
             'menor cantidad de saltos que necesitas para completarlo.',
  'input': 'Una cadena formada por caracteres # y espacios. Puedes suponer que '
           'la cadena comienza y termina con # , que la longitud de la cadena '
           'es a lo mucho 100 y que siempre se puede completar el nivel.',
  'note': ' ',
  'output': 'Un entero que sea la cantidad mínima de saltos que se necesitan '
            'para completar el nivel.',
  'title': 'Super UAMKid Run',
  'topics': ['strings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Super-UAMKid-Run'},
 {'history': ' ',
  'input': 'reciviras un numero N representando la cantidad de productos en '
           'las proximas n lineas reciviras el nombre del producto seguido de '
           'su precio.',
  'note': ' ',
  'output': 'tendras que imprimir en el tiket los productos ordenados de mayor '
            'a menor precio iniciando por el numero 1 hasta N separado por una '
            'cadena " | " ( sin las comillas) seguido del nombre del producto '
            'seguido por la misma cadena de separacion seguido del precio, '
            'finalmente seguido de un salto de linea deberas imprimir el total '
            'de las compras',
  'title': 'Supermercado',
  'topics': ['sortings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Supermercado_cpp'},
 {'history': 'Deberas imprimir la lista de caracteres ASCII con sus valores en '
             'decimal y hexadecimal, el rango sera especificado por el '
             'usuario. El primer numero especifica el limite inferior de '
             'acuerdo a la tabla de caracteres ASCII y el segundo especifica '
             'el limite superior de acuerdo a la tabla de caracteres ASCII. '
             'Nota Ambos numeros pueden ser iguales, si ese es el caso solo se '
             'imprimen los valores para ese caracter ( Mira los ejemplos) .',
  'input': 'Primero un numero decimal indicando el primer caracter ASCII ( '
           'Limite inferior) . Segundo un numero decimal indicando el ultimo '
           'caracter ASCII ( Limite Superior) .',
  'note': ' ',
  'output': 'Tres Columnas separadas por una tabulacion con el siguiente '
            'Orden: CARACTER, DECIMAL y HEXADECIMAL ( En Mayusculas el Valor '
            'Hex) .',
  'title': 'Tabla ASCII',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Tabla-ASCII'},
 {'history': 'Desarrolla un programa que imprima cualquier tabla de '
             'multiplicar donde puedas mostrar n X i= ni.',
  'input': 'Dos enteros n, i',
  'note': ' ',
  'output': 'i líneas donde se muestren los resultados de la tabla de '
            'multiplicación de n.',
  'title': 'Tablas de Multiplicar',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Tablas-Multiplicar'},
 {'history': 'Este año para la OMICH se ha decidido elaborar unos tapetes, '
             'los cuales tendrán un diseño con un patrón numérico. Los '
             'tapetes serán de ( 2n+ 1) ×( 2n+ 1) . En los bordes exteriores '
             'comenzarán en n e irán decreciendo, en la parte central del '
             'tapete siempre habrá un número 1. Por ejemplo sí n= 3, el '
             'tapete resultante será el que se muestra a continuación: Tu '
             'trabajo será ayudar a generar el patrón para un valor dado de '
             'n.',
  'input': 'Un único entero n, que indica en que valor comienza el borde del '
           'tapete',
  'note': ' ',
  'output': 'El patrón del tapete de ( 2n+ 1) ×( 2n+ 1) enteros ( los valores '
            'en cada renglón están separados por un único espacio) .',
  'title': 'Tapetes C',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Tapetes-C'},
 {'history': ' ',
  'input': ' ',
  'note': ' ',
  'output': ' ',
  'title': 'Tarjetas Inválidas',
  'topics': ['strings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Tarjetas-Invalidas'},
 {'history': 'Iván es muy buen programador por lo que es capaz de escribir '
             'muy rápido en el teclado de su computadora. Ultimamente ha '
             'tenido muchas responsabilidades; proyectos, tareas, escribir '
             'problemas, entrenar entre otras cosas. Anoche escribió un '
             'ensayo de varias páginas, pero como estaba tan cansado no se '
             'dio cuenta de que su teclado estaba fallando de tal manera que '
             'cada vez que quería escribir un espacio se escribía un guión '
             "bajo en su lugar ( ' _ ' ) . Iván se acaba de dar cuenta de "
             'este desperfecto y no tiene tiempo para corregir su ensayo, pero '
             'tampoco lo puede dejar así porque Juan, su profesor, es muy '
             'estricto y no le validará la calificación de este ensayo. Por '
             'esta razón Iván está en riesgo de reprobar la materia y como '
             'a nadie le gusta reprobar, ha decidió pedirte ayuda para '
             'solucionar su problema. Ahora sabes que tienes que hacer un '
             'programa que le ayude a Iván, este programa debe de leer una '
             'cadena hasta el fin del archivo y reemplazar todos los guiones '
             'bajos por espacios.',
  'input': 'Son varias líneas de caracteres. Cada línea contiene letras '
           'mayúsculas y minúsculas del alfabeto americano, signos de '
           "puntuación, dígitos y el carácter del guión bajo ' _ ' .",
  'note': ' ',
  'output': 'Imprimir cada línea reemplazando los guiones bajos por espacios.',
  'title': 'Teclado defectuoso',
  'topics': ['strings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Teclado_defectuoso'},
 {'history': 'Se te dará un número N de instrucciones que deberás realizar. '
             'Solo hay instrucciones de tipo A y B, cada una seguida de un '
             'número M. A) Esta instrucción indica que has tecleado el '
             'número M. B) Tienes que imprimir cuántas veces has tecleado el '
             'número M hasta ese momento.',
  'input': 'En la primera línea un entero N. En las siguientes N líneas se '
           'te dará una letra, ya sea A o B, seguida de un número.',
  'note': ' ',
  'output': 'Por cada instrucción B deberás imprimir cuantas veces se ha '
            'tecleado el número M hasta ese momento.',
  'title': 'Tecleando números',
  'topics': ['sortings'],
  'url': 'https://omegaup.com/arena/problem/Tecleando-numeros'},
 {'history': ' ',
  'input': 'El programa debe procesar un único caso de entrada. Cada caso de '
           'entrada consiste de únicamente una línea con el nombre de un '
           'mes, en mayúsculas.',
  'note': ' ',
  'output': 'Como salida tu programa debe informar " Tiene 30! " en caso que '
            'el mes ingresado corresponda a un mes que tiene 30 días, o " No '
            'Tiene 30! " en caso contrario. InputOutput📋FEBRERONo Tiene 30! '
            '📋SETIEMBRETiene 30!',
  'title': 'Tiene 30',
  'topics': ['strings'],
  'url': 'https://omegaup.com/arena/problem/Tiene-30'},
 {'history': ' ',
  'input': 'Una unica entrada que sera la frase encriptada',
  'note': ' ',
  'output': 'Como salida debera ser la frase desencriptada.',
  'title': 'Top Secret',
  'topics': ['strings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Top-Secret'},
 {'history': ' ',
  'input': ' ',
  'note': ' ',
  'output': ' ',
  'title': 'Torneo de listas ordenadas',
  'topics': ['sortings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Torneo-de-listas-ordenadas'},
 {'history': 'Iván tiene un sueño, quiere hacer la torre de goma de mascar '
             'más grande del mundo. Este es un trabajo difícil, más tomando '
             'en cuenta que sus dientes son muy sensibles y no puede mascar '
             'más de un chicle por día. Sin duda será cansado pero el '
             'resultado compensará completamente todo. Él tiene un diario, '
             'donde anota día a día la cantidad de goma de mascar que lleva '
             'su torre, lastimosamente el último día su diario desapareció '
             'misteriosamente, dejándolo sin su registro. Él recuerda la '
             'cantidad de días que ha hecho esta práctica, además de que, '
             'como mencionamos antes, él solo puede agregar un chicle por '
             'día, pero quiere re hacer su diario por mero amor al arte, '
             '¿Puedes ayudarlo a re hacer su diario con el registro de gomas '
             'de mascar que tenía día con día?',
  'input': 'Una n ( 1 ≤ n ≤ 1e5 ) que representará los días que lleva Iván '
           'haciendo su torre.',
  'note': ' ',
  'output': 'n números k que representarán la cantidad de goma de mascar que '
            'tiene la torre al día k_ i separados por un espacio.',
  'title': 'Torre chiclosa',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Torre-chiclosa'},
 {'history': ' ',
  'input': ' ',
  'note': ' ',
  'output': ' ',
  'title': 'Toxicity',
  'topics': ['sortings'],
  'url': 'https://omegaup.com/arena/problem/Toxicity'},
 {'history': ' ',
  'input': ' ',
  'note': ' ',
  'output': ' ',
  'title': 'Traductor-Lions',
  'topics': ['strings'],
  'url': 'https://omegaup.com/arena/problem/Traductor-Lions'},
 {'history': 'En este problema se te dará una string S de longitud N. Tu '
             'tarea es hacer Q transformaciones en S. Una transformación se '
             'hace en un intervalo [ l, r] de S y existen dos tipos: '
             'Instrucción tipo 1: Ordena la substring del rango [ l, r] de '
             'manera no- decreciente. Instrucción tipo 2: Ordena la substring '
             'del rango [ l, r] de manera no- creciente. Al terminar todas las '
             'transformaciones debes dar como salida como se ve la string S.',
  'input': 'En la primera línea dos enteros N y Q, la longitud de S y la '
           'cantidad de transformaciones que debes realizar. En la segunda '
           'línea una string de longitud N conformada solamente por letras '
           'minúsculas del alfabeto ingles. En las siguientes Q líneas tres '
           'enteros t, l y r. El tipo de transformación y el rango donde se '
           'debe aplicar.',
  'note': ' ',
  'output': 'La string S después de hacerle las Q transformaciones.',
  'title': 'Transformaciones de una String',
  'topics': ['strings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Transformaciones-de-una-String'},
 {'history': 'El número de transiciones de una cadena binaria b1, b2, . . . , '
             'bN es el número de parejas bi, bi+ 1 tales que bi= ̸bi+ 1. Por '
             'ejemplo, en la cadena 001011 existen tres transiciones: la '
             'cadena comienza con 0 y luego cambia a 1, luego cambia otra vez '
             'a 0 y luego cambia otra vez a 1. Escribe un programa que sume el '
             'número de transiciones que ocurren en las 2N cadenas binarias '
             'de longitud N e imprima el valor de dicha suma.',
  'input': 'Un entero N. Puedes suponer que 0≤N≤50.',
  'note': ' ',
  'output': 'Un entero que es la suma del número de transiciones que ocurren '
            'en las 2N cadenas binarias de longitud N.',
  'title': 'Transiciones en cadenas binarias',
  'topics': ['strings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Transiciones-en-cadenas-binarias'},
 {'history': 'Se te pide encontrar los tres números mas grandes que existen '
             'en un conjunto de N números. Debes imprimir esos tres números '
             'en orden descendente.',
  'input': 'Leer primero N, donde 3< = N< = 100. El dato N indica la cantidad '
           'de números que se leerán desde el teclado. En las siguientes N '
           'lineas se encuentran los datos de entrada. Cada uno de los datos '
           'de entrada es un número entero que puede ser desde - 100, 000 '
           'hasta 100, 000.',
  'note': ' ',
  'output': 'Imprima los tres números mas grandes de mayor a menor, cada uno '
            'de ellos en una línea separada. EjemplosInputOutput📋101 2 3 4 5 '
            '6 7 8 9 101098📋53 25 100 23 281002825',
  'title': 'Tres números mas grandes',
  'topics': ['sortings'],
  'url': 'https://omegaup.com/arena/problem/Tres-numeros-mas-grandes'},
 {'history': 'Este problema consiste en calcular los primeros N renglones del '
             'triángulo de pascal e imprimir la última línea. Por ejemplo, '
             'las primeras 7 líneas del triángulo de Pascal son: 📋 1 11 2 11 '
             '3 3 11 4 6 4 11 5 10 10 5 11 6 15 20 15 6 11 7 21 35 35 21 7 '
             '1Tranquil@ , sólo deberás imprimir la última línea B- )',
  'input': 'Recibirás un valor entero N ( 1 ≤ N ≤ 1000)',
  'note': ' ',
  'output': 'Imprimir la N- ésima línea del triángulo de Pascal. Los '
            'números en la línea deberán estar separados por espacios.',
  'title': 'Gran Triangulo de Pascal ',
  'topics': ['strings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Triangulo-de-Pascal-bignum'},
 {'history': 'Diseñar un programa que imprima un triángulo rectángulo '
             'dependiendo del número de filas a considerar. Lo dibujará a '
             'través de un asterisco, y por cada línea el incremento será '
             'en dos unidades adicionales.',
  'input': 'Se pedirá un valor que corresponderá al número de filas ( '
           'renglones) a imprimir.',
  'note': ' ',
  'output': 'En la primera fila imprime un asterisco * ; en la segunda se '
            'incrementa en dos la cantidad de asteriscos e imprime * * * , y '
            'así sucesivamente con el resto. '
            'EjemplosInputOutputDescription📋1* Una fila. Un asterisco en la '
            'última fila. 📋3* * * * * * * * * Tres filas. Cinco asteriscos en '
            'la última fila. 📋5* * * * * * * * * * * * * * * * * * * * * * * '
            '* * Cinco filas. Nueve asteriscos en la última fila. Límites1 ≤ '
            'filas ≤ 30',
  'title': 'Triangulo de asteriscos',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Triangulo-de-asteriscos'},
 {'history': 'Luke Skywalker , Han Solo y la princesa Leia Organa estaban '
             'escapando de los soldados de asalto imperiales dentro de la '
             'temible estrella de la muerte. Durante el escape los 3 amigos '
             'lograron entrar a un ducto que los llevo a un cuarto feo y mal '
             'oliente lleno de basura que se encontraba cerca de las celdas de '
             'prisioneros. Para su mala suerte el cuarto a donde entraron era '
             'uno de los trituradores de basura de la estrella de la muerte. '
             'Afortunadamente su amigo C3PO( que es un androide de protocolo) '
             ', esta escondido en las cámaras de vigilancia de la estrella de '
             'la muerte, desde ahí puede desactivar los trituradores de '
             'basura y salvar la vida de sus amigos. ProblemaC3PO se encuentra '
             'frente a una paleta de comandos en el cuarto de cámaras de '
             'vigilancia, para poder desactivar los trituradores C3PO tiene '
             'que ingresar el codigo correcto en la paleta de comandos( ver '
             'figura) . Que es dado un numero entero N ( que es el numero de '
             'triturador) escribir en la paleta de comando el numero entero '
             'mas cercan o igual al numero N. Esta paleta de comandos es un '
             'poco especial ya que si presionas una tecla, no puedes presionar '
             'ninguna otra tecla que este ala izquierda o arriba de la que '
             'acabas de presionar, es decir si presionas una tecla 5 ya no '
             'podras presionar las teclas 1, 2, 3, 4, 7 porque se encuntran ya '
             'sea arriba o a la izquierda de la tecla 5, sin embargo puedes '
             'presionar cualquiera de las siguentes teclas 5, 6, 8, 9, 0. Dado '
             'un numero N ayuda a C3PO a encontrar el numero entero mas '
             'cercano que se pueda escribir en esta paleta de comandos.',
  'input': 'En la primera linea de entrada un numero entero Q que representa '
           'la cantidad de casos a evaluar. En las siguientes Q lineas , un '
           'numero entero N por linea.',
  'note': ' ',
  'output': 'Q lineas ( una por caso) , que representan la solución para cada '
            'uno de los casos. Nota: en caso de haber dos o mas soluciones que '
            'cumplan con lo que el problema pide , imprimir la que el numero '
            'sea menor.',
  'title': 'Trituradores de Basura',
  'topics': ['strings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Trituradores-de-Basura'},
 {'history': 'El siguiente procedimiento se llama conjetura de ULAM en honor '
             'al matemático S. Ulam: Comience con cualquier entero positivo '
             'N. Si es par, divídalo entre 2Si es impar, multiplíquelo por 3 '
             'y agréguele 1. Obtenga enteros sucesivamente repitiendo el '
             'procesoAl final, obtendra el número 1, independientemente del '
             'entero inicial. Tu tarea es dado un entero positivo N, imprime '
             'en orden ascendente todos los enteros generados por el '
             'procedimiento anteriormente planteado.',
  'input': 'Una línea con el entero N.',
  'note': ' ',
  'output': 'Los números de la serie ULAM en orden ascendente y separados por '
            'espacios.',
  'title': 'ULAM ordenado',
  'topics': ['sortings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/ULAM-ordenado'},
 {'history': 'Dada una función f( n) definida como sigue: escribe un programa '
             'que calcule f( f( f( n) ) ) .',
  'input': 'Un entero n en el rango de 1 a 6.',
  'note': ' ',
  'output': 'Un entero que sea el valor de f( f( f( n) ) ) . El resultado '
            'puede no caber en un int de 32 bits.',
  'title': 'Una función de suma triangular',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Una-funcion-de-suma-triangular'},
 {'history': 'Los tres hobbits José, María y el buen Morelos tenían la '
             'importante tarea de destruir el collar para gobernarlos a todos. '
             'Después de una larga travesía están muy cerca del final de su '
             'tarea, pero fue cuando se preguntaron. " ¿Por qué no '
             'conservarlo? " , y como son un grupo que apoya la democracia '
             'decidieron realizar una votación para decidir si conservarlo. '
             'Como juez imparcial que eres te encargaras de contar los votos '
             'de este legendario grupo.',
  'input': '3 votos, cada uno puede ser Si o No.',
  'note': ' ',
  'output': 'En caso de que la mayoría sea Si imprimir " Que podria salir '
            'mal? " . En caso contrario imprimir " Por la comarca" .',
  'title': 'Una importante decision',
  'topics': ['strings'],
  'url': 'https://omegaup.com/arena/problem/Una-importante-decision'},
 {'history': 'Tu profesor de matemáticas y tú se odian en silencio, pero él '
             'lleva las de ganar porque siempre está buscando formas de '
             'reprobarte. Su último intento fue pedirte que resolvieras '
             'listas inmensas de sumas y restas. Afortunadamente ya aprendiste '
             'a programar, así que esta vez estás preparado para enfrentar '
             'su desafío.',
  'input': 'Una secuencia de líneas que siguen el formato i) a+ b o i) a- b '
           'donde i es el inciso del problema y a, b son enteros no negativos. '
           'La entrada deberá procesarse hasta el fin de ésta. Puedes '
           'suponer que todas las operaciones involucradas se pueden llevar a '
           'cabo en un int.',
  'note': ' ',
  'output': 'Cada línea leída seguida de = c donde c es el resultado de la '
            'operación de dicha línea. No debes imprimir espacios '
            'adicionales.',
  'title': 'Una lista inmensa de sumas y restas',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Una-lista-inmensa-de-sumas-y-res'},
 {'history': 'A Jimena le encanta la palabra " unicornio" y la escribe por '
             'todas partes. A veces le gusta escribirla con algunas letras en '
             'mayúscula y otras letras en minúscula. Y en ocasiones la '
             'escribe tan rápido que tiene errores: escribe alguna letra '
             'equivocada o escribe letras de menos. Dada una de estas palabras '
             'escritas por Jimena, escribe un programa que determine en cuál '
             'de los siguientes casos nos encontramos: Si la palabra es '
             'correcta ( salvo cambios de mayúsculas y minúsculas) , imprime '
             '0. Si la palabra tiene 9 letras pero alguna es incorrecta, '
             'imprime la primera letra que difirió de " unicornio" . Si la '
             'palabra tiene N letras menos que " unicornio" , imprime - N.',
  'input': 'Un intento de Jimena de escribir la palabra " unicornio" . Tendrá '
           'a lo más 9 letras y puede que tenga algunas letras en mayúscula '
           'y otras en minúscula.',
  'note': ' ',
  'output': 'La correspondiente al caso de la palabra de entrada.',
  'title': 'Unicornio',
  'topics': ['strings'],
  'url': 'https://omegaup.com/arena/problem/Unicornio'},
 {'history': 'De niño siempre comprabas revistas para colorear y te gustaba '
             'la sección en la que unías puntos numerados para formar una '
             'figura. Esas revistas no son tan populares como antes, pero te '
             'gustaría contar con un programa que simule la misma actividad. '
             'Si unes el punto 1 con el 2 mediante una recta, el 2 con el 3, . '
             '. . , el N - 1 con el N y finalmente el N con el 1 para cerrar '
             'el dibujo, ¿cuál fue la longitud total del trazo realizado?',
  'input': 'Un entero N seguido de N parejas enteros que denotan las '
           'coordenadas X, Y de los puntos desde el punto 1 hasta el N. Puedes '
           'suponer que 2 ≤ N ≤ 200 y que para cada punto se cumple que 0 ≤ X, '
           'Y ≤ 100.',
  'note': ' ',
  'output': 'Un real con dos decimales de precisión que sea la longitud del '
            'trazo realizado. Éste corresponde con la suma de las longitudes '
            'de cada recta dibujada. NotaEste problema se puede resolver con '
            'los temas vistos en Programación Estructurada de la UAM '
            'Azcapotzalco.',
  'title': 'Uniendo puntos',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Uniendo-puntos'},
 {'history': 'Tenemos cuatro puntos A, B, C, D en el plano. Deseamos unirlos '
             'usando tres segmentos de recta. ¿En qué orden tenemos que '
             'unirlos si deseamos minimizar la suma de las longitudes de los '
             'segmentos de recta usados?',
  'input': 'Cuatro parejas de reales que denotan las coordenadas en el plano '
           'de los puntos A, B, C, D respectivamente. Puedes suponer que todas '
           'las coordenadas están en el rango de −10 a + 10.',
  'note': ' ',
  'output': 'El orden en el que se deben unir los cuatro puntos ( denotados '
            'con caracteres) . En caso de existir más de una solución, '
            'puedes imprimir cualquiera de ellas. Además, se debe imprimir un '
            'real que sea la suma de las longitudes de los segmentos usados. '
            'El real impreso se considerará correcto si es razonablemente '
            'cercano a la respuesta exacta.',
  'title': 'Uniendo puntos con segmentos cortos',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Uniendo-puntos-con-segmentos-cor'},
 {'history': 'Juan necesita un programa que le permita sumar todas las ventas '
             'que realiza durante el día, cómo desconoce la cantidad debes '
             'utilizar la estructura repetitiva while que finalizará cuando '
             'ingreses un cero.',
  'input': 'La entrada consiste en indeterminada cantidad de montos de las '
           'ventas.',
  'note': ' ',
  'output': 'La salida será el total de la venta con el signo y dos '
            'decimales.',
  'title': 'Ventas GM',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Ventas-GM'},
 {'history': 'Emiliano trabaja en la veterinaria Don Canino desde hace un '
             'año, sin embargo, hay algunos procedimientos a los que aún no '
             'se acostumbra por lo cual algunas ocasiones comete errores. El '
             'más reciente fue confundir la cantidad de alimento que le '
             'corresponde a cada perro, dándole alimento de más a un perro '
             'pequeño llamado Mili, lo que resultó en pancreatitis en el '
             'animal, provocando su deceso. ProblemaEmiliano tiene la '
             'responsabilidad de alimentar a N número de perros, por tal '
             'motivo debe ir de perro en perro alimentándolos según su peso, '
             'para ello, él sabe que la cantidad de alimento es la siguiente: '
             '0 a 3 kg – 300gr. 3. 1 a 6 kg – 400gr. 6. 1 a 8 kg – 420gr. 8. 1 '
             'a 12kg – 430 gr. Como es un poco complicado para él llevar la '
             'cuenta del alimento, requiere que se le apoye con un programa '
             'que le indique perro por perro, cuál será la cantidad de '
             'alimento y que imprima en la pantalla, cuantos gramos de '
             'croquetas necesita poner en el plato.',
  'input': 'N Como el número de perros que se alimentarán. Seguido de P que '
           'represental el peso en kg. De cada perro, ten encuenta que P '
           'deberá ser introducida N veces.',
  'note': ' ',
  'output': 'La cantidad de gramos de alimento que recibirá cada perro.',
  'title': 'Veterinaria Don Canino',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Veterinaria-Don-Canino-ASINUS'},
 {'history': 'Determinar el precio de un viaje de remis a otras localidades. '
             'La cantidad de kilómetros a recorrer y el precio por km. será '
             'ingresado por teclado.',
  'input': 'La entrada consiste en la cantidad de kilómetros a recorrer y el '
           'precio que se cobra por km.',
  'note': ' ',
  'output': 'La salida consiste en el texto El costo del viaje es: y el '
            'importe con el signo peso y dos decimales. Ejemplo: El costo del '
            'viaje es: 30. 00',
  'title': 'Viaje en Remis',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Viaje-en-Remis'},
 {'history': 'Wendolin tiene una pequeña obsesión con el orden, todo lo que '
             've lo tiene que ordenar, adora hacerlo, es su afición favorita. '
             'Un día se dio cuenta de que su obsesión había ido muy lejos, '
             'pues leyendo un libro se percató de que las palabras le '
             'causaban cierta molestia, quería agrupar cada una de las letras '
             'y ordenar cada grupo de forma ascendente. Pensó primero en '
             'contar cada letra y después reescribirlo en un cuaderno, pero '
             'son bastantes palabras y probablemente perdería la cuenta, esto '
             'además de causar más molestia, también haría todo más '
             'complicado. Por suerte es programadora y sabe que puede '
             'solucionar este gran e importante problema con sus habilidades. '
             'Necesita un programa que le diga la cantidad total de cada una '
             'de las letras, dando igual si son mayúsculas o minúsculas, no '
             'era necesario que el programa le dijera de qué letra habla, '
             'solo la cantidad, pues ella lo intuiría porque este tiene que '
             'mostrar el resultado ordenado de la menor letra a la mayor, si '
             'no hay ni una sola letra de alguna de las 26 letras del '
             'abecedario inglés, simplemente se ignora y no se imprime nada. '
             'Haz este programa y ayuda a Wen con su obsesión.',
  'input': 'Una oración de longitud N ( 1 ≤ N ≤ 1e7) que puede contener L '
           'letras distintas ( 1 ≤ L ≤ 26, indistintamente pueden ser '
           'mayúsculas o minúsculas, todas pertenecientes al alfabeto '
           'inglés ) o espacios.',
  'note': ' ',
  'output': 'La cantidad total de cada una de las letras existentes en toda la '
            'oración, ordenadas de menor a mayor y separadas por un espacio.',
  'title': 'Wena ordenadora',
  'topics': ['sortings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Wena-ordenadora'},
 {'history': 'Melanie es una chica enamoradiza, nunca pasa una temporada '
             'entera sin tener pareja. Esto significa que sus relaciones no '
             'duran mucho, por lo que Melanie a empezado a dudar de si existe '
             'el amor. . . Por suerte la nueva pareja de Melanie, Adriana, '
             'estudio ciencias de la computación y como un gesto romántico '
             'decidió enviarle mensajes románticos a Melanie. Ella los leyó '
             'en su smartphone y decidió imprimirlos, sin embargo su '
             'impresora esta malograda e imprimió el mensaje sobre una cadena '
             'de números. Sin embargo ella es super ecológica así que '
             'decide quedarse con las impresiones. Pero hay algunas que no '
             'tienen todo el mensaje entero así que te pide ayuda. ¿Puedes '
             'decirle a Melanie si el mensaje que le envió Adriana esta en la '
             'impresión? De ser así puedes decirle en que posición se '
             'encuentra cada letra, del mensaje en la impresión. Imprime las '
             'posiciones en orden.',
  'input': 'La primer línea de entrada contendrá un número n, el tamaño de '
           'laimpresión. La segunda línea de entrada contendrá un string s, '
           'el mensaje queleyó Melanie. La tercera linea de entrada '
           'contendrá un string w de tamaño n, lo quese imprimió.',
  'note': ' ',
  'output': ' ',
  'title': '¿What is love?',
  'topics': ['strings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/What-is-love'},
 {'history': ' ',
  'input': 'La primera línea de la entrada contiene un número entero n ( 1 ⩽ '
           'n ⩽ 10^ 6) - el número de amigos. La segunda línea contiene n '
           'enteros distintos separados por espacios: a_ 1, a_ 2 , . . . , a_ '
           'n ( 1 ⩽ a_ i ⩽ 10^ 9) - el número que tienen los papeles de cada '
           'amigo.',
  'note': 'Explicación para el caso de ejemplo: El primer amigo piensa en el '
          'numero , esta parado en la posición , por lo tanto Xander si '
          'llevara a su amigo ( divide al ) . El segundo amigo piensa en el '
          'numero , esta parado en la posición , por lo tanto Xander si '
          'llevara a su amigo ( divide al ) . El tercer amigo piensa en el '
          'numero , esta parado en la posición , por lo tanto Xander si '
          'llevara a su amigo ( divide al ) . El cuarto amigo piensa en el '
          'numero , esta parado en la posición , por lo tanto Xander si '
          'llevara a su amigo ( divide al ) . El quinto amigo piensa en el '
          'numero , esta parado en la posición , por lo tanto Xander no '
          'llevara a su amigo ( no divide al ) . El sexto amigo piensa en el '
          'numero , esta parado en la posición , por lo tanto Xander si '
          'llevara a su amigo ( divide al ) . Por lo tanto llevara a de sus '
          'amigos que se encuentran en las posiciones 1, 2, 3 4 y 6.',
  'output': 'Dos enteros positivos que indicaran el número de amigos que '
            'llevará y no llevara Xander.',
  'title': "Xander's Food",
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/Xanders-Food'},
 {'history': ' ',
  'input': 'Un entero N.',
  'note': ' ',
  'output': ' ',
  'title': 'Y^3 + X^5 = N^7',
  'topics': ['strings', 'sortings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Y3--X5--N7'},
 {'history': 'Jorge se encontraba jugando Yu- Gi- Oh! con sus n cartas cuando '
             'de pronto adquirió un poder que le permitía ver el nivel de '
             'cada carta en su pila de cartas ( deck) . Las cartas están '
             'numeradas de 1 a n desde el fondo hasta la cima de la pila. El '
             'deck está representado por un arreglo con las puntuaciones p_ i '
             '( 1 ≤ i ≤ n) de cada carta. La carta con puntuación p_ 1 está '
             'en el fondo y la carta con puntuación p_ n está en la cima. '
             'Jorge está a punto de revolver su deck, por lo que quiere '
             'utilizar este poder para maximizar la fuerza de su deck y vencer '
             'a Santy, su malvado oponente. La fuerza del deck se define como: '
             '∑_ i= 1^ n n^ n - i· p_ i Jorge revuelve su deck de la siguiente '
             'manera: Elige un entero k ( 0 < k) . Toma las primeras k cartas '
             'de la cima de su deck y las pone, en el orden en el que están, '
             'en la cima de una segunda pila que va a ser su deck revuelto. '
             'Repite el proceso hasta que no queden cartas en su deck '
             'original. Por ejemplo, si el deck es 1 2 3 4 5, puede revolverlo '
             'de la siguiente manera: k = 1: se toma la primer carta de la '
             'cima del deck original y se ponen en la cima del segundo deck. '
             'Original: 1 2 3 4Segundo: 5k = 3: se toman las primeras 3 cartas '
             'de la cima del deck original y se ponen en la cima del segundo '
             'deck. Original: 1Segundo: 5 2 3 4k = 1: se toma la primer carta '
             'de la cima del deck original y se ponen en la cima del segundo '
             'deck. Original: Segundo: 5 2 3 4 1Jorge sabe que eres un buen '
             'programador y quiere ganar a toda costa, por lo que te ha pedido '
             'que le ayudes a revolver su deck y calcules la fuerza obtenida. '
             'ProblemaDado un arreglo con las puntuaciones p_ i de las n '
             'cartas del deck de Jorge ( desde el fondo hasta la cima) , '
             'revuelve el deck y calcula la fuerza obtenida. El puntaje '
             'obtenido para cada caso será mayor si tu respuesta se acerca a '
             'la fuerza máxima posible, o menor si se aleja de la fuerza '
             'máxima posible. Si imprimes la máxima fuerza posible, '
             'obtendrás todos los puntos.',
  'input': 'En la primera línea un entero n, la cantidad de cartas del deck '
           'de Jorge. En la segunda línea, n enteros p_ i, las puntuaciones '
           'de cada carta empezando por el fondo y terminando en la cima del '
           'deck.',
  'note': ' ',
  'output': 'Una línea con un entero indicando la fuerza calculada, módulo '
            '10^ 9 + 7.',
  'title': 'Yu-Gi-Oh!',
  'topics': ['sortings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/Yu-Gi-Oh'},
 {'history': ' ',
  'input': 'Línea 1: Dos enteros separados por un espacio indicando N y P '
           'respectivamente. Siguientes N líneas. Cada línea representará '
           'la posición de un cubículo y contendrá un único entero.',
  'note': ' ',
  'output': 'Línea 1: Un entero indicando la distancia mínima mas grande.',
  'title': 'Agresivos',
  'topics': ['sortings'],
  'url': 'https://omegaup.com/arena/problem/agresivos'},
 {'history': '📋 Has decidido viajar a tu lugar favorito de vacaciones, para lo '
             'cual necesitas 5000 pesos, por lo que, haciendo un esfuerzo de '
             'privarte de varios gastos, has logrado ahorrar una sola cantidad '
             'diaria durante un periodo de tiempo y ahora quieres saber si '
             'puedes viajar o no. Aunque por causas de fuerza mayor algunos '
             'días, el ahorro fue negativo, porque en vez de guardar dinero, '
             'le retiraste para alguna emergencia. Elabora un programa que lea '
             'un número entero n el cual representa el número de días que '
             'ahorraste. Después deberá leer n números enteros, los cuales '
             'representan las cantidades c ahorradas cada día. Si la cantidad '
             'es positiva, fue un ahorro. Si la cantidad fue negativa fue un '
             'retiro. Si la cantidad fue un 0 significa que ese día no '
             'ahorraste, pero tampoco retiraste. Y por último tu programa '
             'imprimirá: La palabra SI si te alcanza para ir al viaje, o la '
             'palabra NO si no te alcanza para ir al viaje. En una segunda '
             'línea imprime 2 números enteros separados por un espacio, los '
             'cuales representan respectivamente el número de retiros '
             'efectuados y la suma de los retiros efectuados ( el cual es un '
             'número negativo) .',
  'input': 'Un número entero n el cual representa el número de días que '
           'ahorraste. n números enteros, los cuales representan las '
           'cantidades ahorradas cada día. Si la cantidad es positiva, fue un '
           'ahorro. Si la cantidad fue negativa fue un retiro. Si la cantidad '
           'fue un 0 significa que ese día no ahorraste, pero tampoco '
           'retiraste.',
  'note': ' ',
  'output': 'La palabra SI si te alcanza para ir al viaje, o la palabra NO si '
            'no te alcanza para ir al viaje. En una segunda línea imprime 2 '
            'números enteros separados por un espacio, los cuales representan '
            'respectivamente el número de retiros efectuados y la suma de los '
            'retiros efectuados ( número negativo) . NotaLa suma de los '
            'retiros efectuados es un número negativo, a menos que no sehaya '
            'efectuado ningún retiro, entonces sería un cero. 1 < = n < = '
            '90- 5000 < = c < = 5000InputOutput📋1010002000- 1000- '
            '3000400030004000- 5000- 10002000SI4 - 10000📋201090803020706040- '
            '20- 30- 80- 402060- 10- 7090100200500NO6 - 250',
  'title': 'ahorro y retiro',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/ahorro-y-retiro'},
 {'history': 'Después de su larga caída, Alicia quedó atrapada en el fondo '
             'del agujero del conejo. Afortunadamente no estaba totalmente '
             'oscuro y pudo ver que había muchas puertas ( todas cerradas) y '
             'una mesa con varias llaves doradas. Seguramente alguna llave '
             'abriría alguna de estas puertas, así que Alicia lo intentó y '
             'pronto descubrió que las chapas de las puertas eran de '
             'diferentes tamaños y que estaban ordenadas en fila, de la más '
             'pequeña a la más grande. Cada llave sólo abriría la chapa '
             'del mismo tamaño. Como en verdad eran muchas puertas y muchas '
             'llaves, Alicia pensó que le tomaría mucho tiempo intentar '
             'abrir todas las puertas con las llaves correctas. Ayuda a Alicia '
             'a determinar qué llaves abren qué puertas.',
  'input': 'Un entero M seguido de los tamaños de las chapas P1, . . . , PM. '
           'Posteriormente un entero N seguido de los tamaños de las llaves '
           'L1, . . . , LN. Puedes suponer que 1≤N, M≤100, 000, que los '
           'tamaños de las chapas son distintos con 1≤P1< P2< . . . < PM≤100, '
           '000 y que los tamaños de las llaves cumplen 1≤Li≤100, 000 para '
           'toda 1≤i≤N.',
  'note': ' ',
  'output': 'Para cada una de las N llaves, el número de la puerta que puede '
            'ser abierta con esa llave o 0 si no corresponde con ninguna '
            'puerta.',
  'title': ' Alicia y las llaves doradas de las puertas',
  'topics': ['sortings'],
  'url': 'https://omegaup.com/arena/problem/aldp'},
 {'history': ' ',
  'input': ' ',
  'note': ' ',
  'output': ' ',
  'title': 'Área máxima de un trapecio',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/amt'},
 {'history': 'En la escuela a Carlitos le han enseñado a calcular el área de '
             'un triángulo usando los valores de los lados. La maestra le ha '
             'indicado que lo primero que debe calcular es el valor: S = L_ 1 '
             '+ L_ 2 + L_ 3/ 2 El siguiente paso es aplicar la fórmula para '
             'calcular el área. area = √( s ( s- L_ 1) ( s- L_ 2) ( s- L_ 3) '
             ') Carlitos está empezando sus cursos, por ello te pide que le '
             'apoyes escribiendo un programa que permita verificar si está '
             'haciendo bien sus cálculos.',
  'input': 'Recibirás 3 valores de tipo real. Estos lados corresponden '
           'siempre a un triángulo válido.',
  'note': ' ',
  'output': 'Mostrar cada uno de los lados leídos en la entrada y el área '
            'del triángulo. Considera 15 caracteres para imprimir cada '
            'número y cuatro decimales. Los detalles puedes consultarlos en '
            'los ejemplos.',
  'title': 'Área de un triángulo ',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/area-triangulo-inout'},
 {'history': 'Calcula el área de N círculos, a partir de la longitud del '
             'radio de cada círculo. Puede utilizar el valor de π como 3. '
             '1416.',
  'input': 'Un entero N entre 1 y 100 ( la cantidad de círculos) , y en la '
           'siguiente línea N racionales separados por espacios, cada uno '
           'representa la longitud del radio de un círculo y tendrá un valor '
           'entre 0 y 1 000.',
  'note': ' ',
  'output': 'Son N racionales separados por un espacio, correspondientes al '
            'área de cada uno de los círculos. Los valores calculados deben '
            'ser razonablemente cercanos a la respuesta exacta.',
  'title': 'Área de N círculos',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/areaNcirculos'},
 {'history': 'Por un descuido, Alicia tiró a todos los jurados del estrado. '
             'El Rey, clavando los ojos en Alicia, anunció que el juicio no '
             'continuaría hasta que todos estuvieran en su respectivo '
             'asiento. Así que Alicia se apresuró a recoger a los jurados de '
             '3 en 3. Sin embargo, las reglas para asignar los asientos eran '
             'demasiado complicadas. Dado un trio de personas, a, b, c, se les '
             'asigna un número de asiento en una fila determinada, a en la '
             'fila 1, b en la fila 2 y c en la fila 3, usando las siguientes '
             'fórmulas: fila1( a, b, c) = a2−a+ bc10+ 1, fila2( a, b, c) = 1+ '
             '( ( fila1( a, b, c) −1+ abc) mod101) , fila3( a, b, c) = 1+ '
             'fila1( a, b, c) 2+ fila2( a, b, c) 2. Ayuda a Alicia a calcular '
             'el número de asiento de los primeros 3 jurados. Las divisiones '
             'son enteras y mod es la operación del residuo de la división, '
             'también llamada módulo.',
  'input': 'Tres números enteros a, b y c, separados por un espacio. Puede '
           'suponer que 0≤a, b, c≤10.',
  'note': ' ',
  'output': 'Tres números enteros separados por espacios, obtenidos al '
            'calcular fila1( a, b, c) , fila2( a, b, c) y fila3( a, b, c) . '
            'EjemplosInputOutput📋7 4 243 99 71📋3 10 916 84 51',
  'title': 'Los asientos del jurado',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/asientos-jurado'},
 {'history': 'Como dejaron a Xela solo en su casa y tenia tiempo que no '
             'torturaba a los olímpicos de la OB pense en hacer un problema '
             'tan dificil que ni el mismo Legna pudiera resolver pero al ver a '
             'su gata dormiendo decidio mejor hacer un simple y aburrido '
             'problema de ordenacion',
  'input': ' ',
  'note': ' ',
  'output': ' ',
  'title': 'Ordenamiento super basico',
  'topics': ['sortings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/boredx100'},
 {'history': 'Mientras John Carter huía de los indios, él observó varios '
             'cactus en el horizonte. Además de correr por su vida no tenía '
             'nada mejor que hacer, así que se aprendió las alturas de los '
             'cactus. Posteriormente, en la seguridad de una cueva, se hizo '
             'varias preguntas como ¿cuál es la altura del cactus más alto '
             'en el horizonte? ¿cuál es la altura del tercer cactus más alto '
             'en el horizonte? Ayuda a John Carter a salir de la duda.',
  'input': 'Un entero N seguido de las N alturas H_ 1, . . . , H_ N de los '
           'cactus en el horizonte. Posteriormente un entero P seguido de las '
           'P preguntas Q_ 1, . . . . , Q_ P, donde la pregunta Q_ J se lee '
           '¿cuál es la altura del Q_ J cactus más alto en el horizonte? '
           'Puedes suponer que 1 ≤ N, P ≤ 1, 000, 000, que 1 ≤ H_ I ≤ 1, 000, '
           '000, 000, que 1 ≤ Q_ J ≤ N y que las alturas de todos los cactus '
           'son distintas.',
  'note': ' ',
  'output': 'Salida: Las P alturas que responden a las preguntas dadas.',
  'title': 'El cactus más alto en el horizonte',
  'topics': ['sortings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/cactus_horizonte'},
 {'history': ' ',
  'input': ' ',
  'note': ' ',
  'output': ' ',
  'title': 'calcula su swag moderado',
  'topics': ['strings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/calcula-su-swag-moderado'},
 {'history': 'Éste es un año electoral y las candidaturas independientes han '
             'sido autorizadas. Para ganar terreno, Engel, candidato '
             'independiente, ha decidido eficientar sus asistencias a los '
             'diferentes eventos ( conferencias, cenas, desayunos, '
             'presentaciones, visitas, etc. ) Engel desea acudir a tantos '
             'eventos como sea posible. No hay tanto problema entre semana '
             'porque sólo hay dos o tres eventos en la tarde, pero los '
             'sábados su agenda está saturada. Por lo general los eventos '
             'empiezan a las 8 am ( desayuno incluido) y pueden terminarse '
             'hasta media noche ( para no molestar a los vecinos) . '
             'Naturalmente Engel quiere asistir al máximo número de eventos '
             'posibles. Cada evento tiene una hora de inicio y otra de fin, '
             'todas las horas exactas. Están listadas con el formato de 24 '
             'horas. Por ejemplo un evento podrá empezar a las 10 am ( 10) y '
             'finalizar a las 2 pm ( 14) . El primer evento puede empezar a '
             'las 8 am ( 8) y el último evento finalizar a media noche ( 24) '
             '. A fin de no ser descortés, Engel se queda en cada evento al '
             'menos media hora y se debe de considerar que el traslado entre '
             'los eventos es instantáneo. Si no hay eventos que atender en '
             'algunas horas del día, simplemente se va a la casa de campaña '
             'a descansar.',
  'input': 'Cada caso prueba contiene un entero p ( ≤ 100) que indica los '
           'eventos que se tienen considerados para ese día. En las '
           'siguientes p líneas, cada una con el formato s, e, ambos enteros '
           'donde 8 ≤ s ≤ e ≤ 24, se indica la hora s de inicio del evento y '
           'el fin a la hora e. Se debe de tomar en cuenta que puede haber '
           'muchos eventos con la misma hora de inicio y fin',
  'note': ' ',
  'output': 'Indique el valor n con el máximo número de eventos que Engel '
            'puede atenderEjemplosInputOutput📋314 1514 1514 152📋812 1313 1412 '
            '139 109 1012 1312 149 117',
  'title': 'Candidato independiente',
  'topics': ['sortings'],
  'url': 'https://omegaup.com/arena/problem/candidato_independiente'},
 {'history': 'En un intento por hacer que el hombre vuelva a la luna, el COMI '
             '( Comité Mexicano Interespacial) ha decidido instalar un centro '
             'de investigación en ella. Para esto envió a Nanobot, un '
             'pequeño robot explorador, a determinar cuál es el mejor lugar '
             'para construirlo. El objetivo del COMI es instalar el centro en '
             'el fondo de un cráter para analizar sus rocas y, por supuesto, '
             'quiere instalarlo en el cráter en donde haya más rocas. '
             'Desafortunadamente, durante el regreso de Nanobot a la Tierra, '
             'algunos datos se han perdido debido a causas desconocidas, sin '
             'embargo en la memoria del pequeño robot se conservan los mapas '
             'que este trazó en su recorrido por la superficie lunar. Los '
             'mapas lunares se encuentran representados en matrices de F x C '
             'kilómetros, en donde cada celda representa un kilómetro '
             'cuadrado. En estos mapas los cráteres se muestran como números '
             'enteros indicando la cantidad de rocas que Nanobot encontró en '
             'ese kilómetro cuadrado. El resto de la superficie ( es decir, '
             'el espacio sin cráteres) ha sido rellenado con 0. El pequeño '
             'robot ha numerado los cráteres de 1 a N, siguiendo un estricto '
             'orden de izquierda a derecha y de arriba abajo, esto es, los '
             'cráteres que estén más a la izquierda serán los primeros en '
             'ser numerados. Si dos cráteres comienzan en la misma columna, '
             'el que esté más arriba en esa columna tendrá prioridad. En '
             'uno de sus recorridos Nanobot trazó un mapa de 7 x 7 '
             'kilómetros cuadrados como el que se muestra debajo. Este mapa '
             'cuenta con 3 cráteres, el primero con 39 rocas, el segundo con '
             '31 y el último con 39. ProblemaDentro de los datos que se han '
             'perdido se encuentra la ubicación donde Nanobot decidió sería '
             'conveniente instalar el centro. Tu tarea consiste en recuperar '
             'estos datos a partir de los mapas y decirle al COMI en qué '
             'cráter debería ser construida la base, así como el número de '
             'rocas que se han encontrado en él.',
  'input': 'Línea 1: Contiene dos enteros separados por un espacio que '
           'representan F y C, las dimensiones del mapa lunar. Siguientes F '
           'líneas: Cada línea contiene C enteros separados por un espacio '
           'que indican la cantidad de rocas para cada kilómetro cuadrado del '
           'mapa. Ejemplo: 📋 7 70 0 0 0 0 7 80 1 5 8 0 7 80 3 4 7 0 0 90 2 8 0 '
           '0 0 00 0 1 0 5 9 00 0 0 2 1 2 00 3 2 1 6 0 0',
  'note': ' ',
  'output': ' ',
  'title': 'Cráteres',
  'topics': ['sortings'],
  'url': 'https://omegaup.com/arena/problem/crateres'},
 {'history': 'Escribe un programa que lea una cadena ( solo minúsculas, sin '
             'acentos, sin espacios, sin la " ñ" ) de máximo 1000. Y el '
             'programa nos dirá cuantas veces aparece cada letra del '
             'alfabeto.',
  'input': 'Una cadena de carcateres del alfabeto en minúsculas, si acentos, '
           'sin espacios, sin la " ñ" y entre 0 y 1000 caracteres.',
  'note': ' ',
  'output': 'La salida imprimirá, en la primer línea, una lista de números '
            'que indícan el número de veces que aparecen TODAS y cada una la '
            'letra del alfabeto ( por orden alfabético) . Después se '
            'imprimirá una línea por cada una de las letras que sí aparecen '
            'en la cadena ( también por orden alfabético) , de la siguiente '
            'forma: La letra x aparece n vecesNotaRecuerda que debes preveer '
            'que además de los caracteres de la cadena, también hay que '
            'guardar el caracter de fin de cadena al final del arreglo de '
            'caracteres. InputOutput📋programacion2 0 1 0 0 0 1 0 1 0 0 0 1 1 2 '
            '1 0 2 0 0 0 0 0 0 0 0La letra a aparece 2 vecesLa letra c aparece '
            '1 vecesLa letra g aparece 1 vecesLa letra i aparece 1 vecesLa '
            'letra m aparece 1 vecesLa letra n aparece 1 vecesLa letra o '
            'aparece 2 vecesLa letra p aparece 1 vecesLa letra r aparece 2 '
            'veces📋aaaaacccceeegghxxzzz5 0 4 0 3 0 2 1 0 0 0 0 0 0 0 0 0 0 0 0 '
            '0 0 0 2 0 3La letra a aparece 5 vecesLa letra c aparece 4 vecesLa '
            'letra e aparece 3 vecesLa letra g aparece 2 vecesLa letra h '
            'aparece 1 vecesLa letra x aparece 2 vecesLa letra z aparece 3 '
            'veces',
  'title': 'cuenta_letras_al_vector',
  'topics': ['strings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/cuenta_letras_al_vector'},
 {'history': 'Por accidente o por mala costumbre, muchos alumnos inscriben '
             'materias en horarios que se empalman. Aunque la escuela no puede '
             'evitarlo, a los administrativos del proceso de inscripción sí '
             'les gustaría detectar estos casos para por lo menos alertar al '
             'alumno de este hecho. Ya que los administrativos no son expertos '
             'en programación, te han pedido que los ayudes a resolver el '
             'problema. Escribe un programa que lea la información de los '
             'grupos a los que se inscribirá el alumno y detecte qué grupos '
             'tienen horarios que se empalman.',
  'input': 'Un entero G seguido de la información de los G grupos del alumno. '
           'La información de cada grupo consiste en el nombre del mismo '
           'seguido de una cadena de cinco caracteres que representa qué '
           'días hay clases en ese grupo seguido de las horas de inicio y fin '
           'de clase en el formato HH: MM. Puedes suponer 0 ≤ G ≤ 10000, que '
           'el nombre de cada grupo será único de 5 letras mayúsculas y que '
           'las horas de inicio y fin serán válidas y sin clases de 0 '
           'minutos. .',
  'note': ' ',
  'output': 'Un entero E que denote el número de grupos que tienen empalmes '
            'seguido de los E nombres de estos grupos en orden alfabético y '
            'separados por saltos de línea.',
  'title': 'Detectando empalme de materias',
  'topics': ['strings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/dem'},
 {'history': 'El abominable Dr Joe se encuentra realizando su pasatiempo '
             'favorito: crear mounstruos. Quiere crear un nuevo mounstruo que '
             'sea lo más parecido posible a Frankenstein. Y te ha pedido a ti '
             'crear un programa que le permita determinar si dos mounstruos '
             'son equivalentes. Para determinar si 2 mounstruos son '
             'equivalentes el Dr Joe te dará la secuencia de ADN de los 2 '
             'mounstruos y tú deberás decir si son equivalentes. Dos '
             'secuencias de ADN son equivalentes si se puede convertir la '
             'primera secuencia en la segunda al invertir una subsecuencia de '
             'caracteres de la primera secuencia. Por ejemplo, ATAGAACGT y '
             'ATACAAGGT son equivalentes ya que al invertir la subsecuencia '
             'GAAC en ATAGAACGT, se convierte en ATACAAGGT',
  'input': 'La primera línea contendra la secuencia del ADN del primer '
           'mounstruo. La segunda línea contendra la secuencia del ADN del '
           'segundo mounstruo.',
  'note': ' ',
  'output': 'La cadena EQUIVALENTES si son equivalentes los dos mounstruos, o '
            'DIFERENTES si son diferentes.',
  'title': 'El Abominable Dr Joe',
  'topics': ['strings'],
  'url': 'https://omegaup.com/arena/problem/dr-joe'},
 {'history': 'La Asociación de Fútbol Provincial ha establecido un nuevo '
             'reglamento para la numeración de las camisetas para los '
             'partidos oficiales de la liga: Desde el 1 en adelante, cada '
             'número sólo podrá ser usado por un jugador de una posición '
             'específica, siguiente la siguiente secuencia: ArqueroLateral '
             'derechoLateral izquierdoDefensa centralDefensa '
             'centralPivoteExtremo derechoMediocentroDelantero '
             'centralMediapuntaExtremo izquierdoY luego se repite, es decir, '
             'la camiseta con el número 12 sólo puede ser usada por un '
             'Arquero, la 13 por un Lateral derecho y así sucesivamente. Para '
             'tu club, esta nueva regla es un problema, porque ya se han '
             'encargado N camisetas para jugar en la liga. Tu trabajo es '
             'determinar en qué posiciones deberán jugar los jugadores que '
             'usen las camisetas.',
  'input': 'Una línea con la cantidad N de camisetas encargadas por el club. '
           'N líneas, cada una con el número de una camiseta.',
  'note': ' ',
  'output': 'N líneas, cada una con la posición en la que deberá jugar el '
            'jugador que use una camiseta ( en el orden de la entrada) .',
  'title': 'Nuevo reglamento para las camisetas',
  'topics': ['strings'],
  'url': 'https://omegaup.com/arena/problem/edm2021n1-camisetas'},
 {'history': ' ',
  'input': ' ',
  'note': ' ',
  'output': ' ',
  'title': 'alemova el olvidadizo',
  'topics': ['strings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/el-olvidadizo'},
 {'history': 'Para este problema recibirás una lista con N- 1 números '
             'distintos entre el 1 y N. Debes calcular el número que falta '
             'para tener todos del 1 al N.',
  'input': 'La primera línea tendrá un número entero N. La segunda línea '
           'tendrá la lista de N- 1 números.',
  'note': ' ',
  'output': 'Una sola línea con el número faltante.',
  'title': 'Encontrar el numero faltante',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/encontrar-numero-faltante-ovi'},
 {'history': ' ',
  'input': 'Un flujo continuo de números n con 0 ≤ n ≤ 100',
  'note': ' ',
  'output': 'Para cada n = ̸ 0 , imprime n. En caso de que n = 0, entonces se '
            'detiene la ejecución del programa y no se imprime nada '
            'másEjemplosInputOutput📋45621045621📋0📋310003100',
  'title': 'Espejo',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/espejo-ovi'},
 {'history': ' ',
  'input': 'La primera línea contiene s, una cadena que consiste en letras '
           'mayúsculas y minúsculas. Ninguna letra tiene acentos, y no puede '
           'ser ñ. La longitud de s está entre 1 y 100 letras.',
  'note': ' ',
  'output': 'Imprime la palabra corregida, según lo establecido arriba.',
  'title': 'Extensión de Lalito',
  'topics': ['strings'],
  'url': 'https://omegaup.com/arena/problem/extension'},
 {'history': ' ',
  'input': ' ',
  'note': ' ',
  'output': ' ',
  'title': 'Capitalize first four characters',
  'topics': ['strings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/first-four'},
 {'history': 'Tu maestra de biología te dejo hacer todas las cadenas posibles '
             'de ADN y contarlas con la siguientes condiciones: Una par de '
             'bases de adenina y timina AT o TA siempre le debe de seguir un '
             'par de bases de guanina y citosina GC o CG y viceversa para la '
             'guanina y citosina. Pero como eres un poco flojo decides hacer '
             'un programa que haga dicha tarea.',
  'input': 'Un entero n que representa el numero de pares de bases que debe '
           'tener el ADN',
  'note': ' ',
  'output': 'Las cadenas de ADN que cumplen esas condiciones en el siguiente '
            'orden AT TA CG GC y un entero K que representan el numero de '
            'cadenas que cumplieron la condiciones .',
  'title': 'generando cadenas de ADN',
  'topics': ['strings'],
  'url': 'https://omegaup.com/arena/problem/generando-cadenas-de-AND'},
 {'history': 'Durante su búsqueda del secreto de la vida eterna, Gilgamesh se '
             'encuentra con Siduri, la ninfa que vive en medio del mar. '
             'Gilgamesh le pregunta cómo llegar con Utanapíshtim y ella le '
             'responde que la única manera es ir con el barquero Urshanabí y '
             'sus gigantes de piedra. Sin oír más, Gilgamesh se dirige a '
             'donde está Urshanabí y, al encontrarse con los gigantes de '
             'piedra, piensa que serán un obstáculo en su camino y decide '
             'destruirlos. Para enfrentarlo, los gigantes se forman en una '
             'fila frente a él. Como algunos gigantes son más altos que '
             'otros, Gilgamesh decide acabarlos uno por uno, comenzando por el '
             'más alto que pueda ver desde su posición. Gilgamesh es muy '
             'hábil y, para destruir un gigante, simplemente tendrá que '
             'lanzar una flecha sin moverse de su posición. Cada gigante '
             'destruido se derrumba, permitiendo ver a aquellos otros gigantes '
             'que estaban detrás de él. Dadas las alturas de los gigantes y '
             'sus nombres, escribe un programa que determine el orden en que '
             'los gigantes serán destruidos.',
  'input': 'Un entero N, que determina el número de gigantes que Gilgamesh '
           'debe destruir, seguido de N líneas. Cada línea estará formada '
           'de una pareja h_ i, g_ i, donde h_ i representa la altura del '
           'gigante i- ésimo y g_ i es el nombre de dicho gigante. Puede '
           'suponer que 1 ≤ N ≤ 1, 000, 1 ≤ h_ i, ≤ 100 y que el nombre de '
           'cada gigante no es más largo que 10 letras mayúsculas del '
           'alfabeto inglés.',
  'note': ' ',
  'output': 'Deberá imprimir N líneas con los nombres de los gigantes en el '
            'orden en que fueron destruidos.',
  'title': 'La destrucción de los gigantes de piedra',
  'topics': ['strings', 'sortings'],
  'url': 'https://omegaup.com/arena/problem/gigantes'},
 {'history': 'Recordarás que dos puntos distintos en el plano determinan una '
             'única recta. Similarmentedos puntos en el plano determinan un '
             'segmento, el cual consiste únicamente delos puntos en la recta '
             'que los une y que se encuentran entre ellos ( incluyéndolos) . '
             'Tambiénrecordarás que dos rectas en el plano o bien son '
             'paralelas, o bien se intersectan enun único punto. Con los '
             'segmentos ocurre algo distinto, pues es posible que no se '
             'intersecten aun sinser paralelos. Considera por ejemplo tres '
             'segmentos: P determinado por los puntos extremos ( 2, 1) y ( 3, '
             '2) , Q determinado por los puntos extremos ( 1, 3) y ( 3, 4) , '
             'así como R determinado por los puntos extremos ( 4, 1) y ( 1, '
             '4) . Observa que P y Q no se intersectan, P y R se intersectan '
             'en ( 3, 2) y Q y R se intersectan en ( 5/ 3, 10/ 3) = ( 1. '
             '666666. . . , 3. 333333. . . ) . Dados dos segmentos '
             'cualesquiera ( que no sean paralelos y ninguno de los cuales '
             'seahorizontal ni vertical) determinados por sus puntos extremos, '
             'deberás descubrir si éstosse intersectan o no y, en su caso, '
             'deberás calcular las coordenadas del punto de intersección.',
  'input': 'Consiste de ocho números positivos de punto flotante, x_ 1, y_ 1, '
           'x_ 2, y_ 2, x_ 3, y_ 3, x_ 4, y_ 4, separados por espacios. Los '
           'extremos del segmento P son los puntos de coordenadas ( x_ 1, y_ '
           '1) y ( x_ 2, y_ 2) . Los extremos del segmento Q son los puntos de '
           'coordenadas ( x_ 3, y_ 3) y ( x_ 4, y_ 4) .',
  'note': ' ',
  'output': 'Consiste de dos números x, y de punto flotante separados por un '
            'espacio. Si P y Q se intersectan, entonces ( x , y) son las '
            'coordenadas del punto de intersección. En caso contrario, x = y '
            '= - 1.',
  'title': 'Intersección de segmentos',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/inter-segmentos'},
 {'history': ' ',
  'input': ' ',
  'note': '1 ≤ N ≤ 100No hay concursantes con nombres repetidosLa entrada '
          'siempre generará una lista válida, no hay necesidad de validar la '
          'entradaOutputLos nombres de los N concursantes del primer lugar al '
          'último separados por espacios. '
          'ExamplesInputOutputDescription📋3Luis PacoHugo nullPaco HugoHugo '
          'Paco LuisHugo quedó en primer lugar por el renglón Hugo null. '
          'Paco va después por el renglón Paco Hugo. Luis va al final por el '
          'renglón Luis Paco📋3Burbuja nullBombon BellotaBellota '
          'BurbujaBurbuja Bellota BombonBurbuja quedó en primer lugar por el '
          'renglón Burbuja null. Bellota va después por el renglón Bellota '
          'Burbuja. Bombon va al final por el renglón Bombon Bellota',
  'output': ' ',
  'title': 'Premiacion desordenada',
  'topics': ['strings', 'sortings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/itp18-premiacion'},
 {'history': 'Dada una cadena de caracteres de longitud n, genera todos los '
             'posibles subconjuntos de longitud k, imprime los resultados en '
             'orden alfabético, una por línea. Como referencia, para una '
             'cadena de longitud n, el numero de subconjuntos de longitud k se '
             'puede calcular con la fórmula: n k = n! / k! ( n - k) !',
  'input': 'En la primer línea 2 enteros, n y k. En la segunda línea una '
           'cadena de caracteres de longitud n.',
  'note': ' ',
  'output': 'Todos los subconjuntos de longitud k, en orden alfabético.',
  'title': 'K Subconjuntos',
  'topics': ['strings', 'sortings'],
  'url': 'https://omegaup.com/arena/problem/ksubconjuntos'},
 {'history': 'Según una antigua leyenda, la historia de Gilgamesh fue escrita '
             'en tablillas de lapizlázuli. En ellas están narradas todas las '
             'pruebas que sufrió Gilgamesh para volverse el más famoso de '
             'los reyes. Según la misma leyenda, las tablillas están '
             'guardadas en un cofre de cobre con un cerrojo de bronce. Los '
             'cofres está guardado en un templo de Uruk. Por alguna razón '
             'sabes las dimensiones A × B × C de una tablilla y deseas saber '
             'si ésta cabe en el cofre de dimensiones X × Y × Z que tienes '
             'frente a ti.',
  'input': 'Seis enteros A, B, C, X, Y, Z. Puedes suponer que 1 ≤ A, B, C, X, '
           'Y, Z ≤ 1000.',
  'note': ' ',
  'output': 'El entero 1 si la tablilla cabe dentro del cofre o 0 en caso '
            'contrario. Considera que puede ser necesario rotar la tablilla.',
  'title': ' El cofre y la tablilla de lapizlázuli',
  'topics': ['sortings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/lapizlazuli'},
 {'history': 'Debido a una pandemia que azota al mundo ha comenzado a aumentar '
             'el desempleo en la ciudad. Cada vez hay menos negocios abiertos, '
             'y por cuestión de presupuesto muchos de los que sí se '
             'encuentran abiertos están recortando su personal. Una industria '
             'que creció fue la agrícola, ya que la demanda de alimento '
             'aumentó porque la gente no tiene otra cosa que hacer, sólo '
             'comer. Por eso, mi tío, fue a buscar empleo en las afueras de '
             'la ciudad, pero el único empleo que encontró fue de '
             'organizador de lombrices. Su trabajo consta de ordenar las '
             'lombrices en la granja por tamaño. En la granja tienen '
             'organizados estos invertebrados en grupos de 5. Y mi tío debe '
             'acomodarlos del más pequeño al más grande. Para facilitarlo, '
             'mi tío pidió le ayudaras a crear un programa que le indique el '
             'orden correcto.',
  'input': 'Cinco números enteros que representar la longitud de cada lombriz '
           'en cms.',
  'note': ' ',
  'output': 'La lista de longitudes de manera ordenada separados por un '
            'espacio',
  'title': 'lombrices',
  'topics': ['sortings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/lombrices-ANH'},
 {'history': ' ',
  'input': 'La primera línea de la entrada contiene un número entero N ( 2 ≤ '
           'N ≤ 26) : el número de letras en el alfabeto. La siguiente línea '
           'contiene n enteros a_ i ( 1 ≤ a_ i ≤ 10^ 9) : el i- ésimo de '
           'estos enteros limita la cantidad de apariciones del i- ésimo '
           'carácter en la cadena. SalidaImprimiras un solo entero: la '
           'longitud máxima de la cadena que cumple con todos los requisitos. '
           'InputOutputDescription📋32 5 5Por conveniencia, consideremos un '
           'alfabeto que consta de tres letras: " a" , " b" , " c" . En la '
           'primera muestra, algunas de las cadenas óptimas son: " '
           'cccaabbccbb" , " aabcbcbcbcb" . 11📋31 1 2En el ejemplo, algunas de '
           'las cadenas óptimas son: " acc" , " cbc" . 3',
  'note': ' ',
  'output': ' ',
  'title': 'hackerman y los strings',
  'topics': ['sortings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/make-a-string-cpp'},
 {'history': 'Algunos enteros se pueden leer de la misma forma sin importar si '
             'se escriben de izquierda a derecha o de derecha a izquierda ( '
             'obviamente sin cambiar de valor) como por ejemplo 33 en base 10 '
             'es palíndromo, pero también en base 2, ya que 33 en decimal es '
             'igual a 100001 en binario. Dado un número n en base 10, escribe '
             'un programa que proporcione la menor base b tal que 2 ≤ b ≤ 10, '
             'en la que este se puede representar como palíndromo, así como '
             'su representación r, en caso de no existir dicha base, la '
             'salida debe de ser b = - 1 y r = 0.',
  'input': 'Un número entero n en decimal tal que 0 < n < 2, 147, 483, 647.',
  'note': ' ',
  'output': 'Un número entero b y un numero r representado en base b.',
  'title': 'Menor base para palíndromo',
  'topics': ['strings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/mbp'},
 {'history': 'Después de la muerte de Endiku, Gilgamesh va a buscar la vida '
             'eterna y en su camino se encuentra varias montañas, entre ellas '
             'los picos de Mashú. Él sigue dolido de la muerte de Enkidu y '
             'se imagina a sí mismo destruyendo todas las montañas. Él las '
             've de frente, de manera que las más altas tapan a las de atrás '
             'que son más bajas. Gilgamesh piensa destruir primero a la '
             'montaña más alta que vea, lo que posiblemente vuelva visibles '
             'a algunas montañas de atrás, y así sucesivamente hasta '
             'destruir todo. Dadas las alturas y los nombres de las montañas, '
             'determine el orden en que serán destruídas.',
  'input': 'Un entero N, que determina el número de montañas que Gilgamesh '
           'debe destruir, seguido de N líneas. Cada línea estará formada '
           'de una pareja h_ i, s_ i, donde h_ i representa la altura de la '
           'montaña i- ésima y s_ i el nombre de dicha montaña. La primera '
           'línea representa a la montaña que se encuentra más al frente y '
           'la última línea a la que se encuentra al final. Puede suponer '
           'que 1 ≤ N ≤ 1, 000, que 1 ≤ h_ i, ≤ 100 y que el nombre de cada '
           'montaña no es más largo que 10 letras mayúsculas del alfabeto '
           'inglés.',
  'note': ' ',
  'output': 'Deberá imprimir N líneas con los nombres de las montañas en el '
            'orden en que fueron destruídas.',
  'title': 'Las montañas destruidas por Gilgamesh',
  'topics': ['strings', 'sortings'],
  'url': 'https://omegaup.com/arena/problem/montanas'},
 {'history': 'Una agencia de noticias paga dinero por artículos según '
             'ciertas reglas. Cada caracter tiene un valor ( los caracteres no '
             'listados tienen un valor igual a cero) . El autor obtiene su '
             'pago como la suma de todos los caracteres del artículo. El '
             'problema consiste en determinar la cantidad de dinero que la '
             'agencia de noticias debe pagar por un artículo.',
  'input': 'Tu programa procesará una prueba, que inicia con un número '
           'entero K ( 0Si el carácter no se puede encontrar en la tabla, '
           'entonces su valor es igual a cero. Enseguida, hay un número '
           'entero M ( 0 < M ≤150000) . Las siguientes M líneas contienen un '
           'artículo en sí mismo. Cada línea puede tener hasta 100000 '
           'caracteres de longitud.',
  'note': ' ',
  'output': 'Para cada prueba, imprima cuánto dinero debe pagar el editor por '
            'un artículo en formato x. aa . Donde x es una cantidad de '
            'dólares sin ceros a la izquierda y yy con centavos con un cero '
            'inicial si es necesario. Ejemplos: 3. 32, 13. 07 , 71. 30, 0. 09 '
            '.',
  'title': 'Periodico',
  'topics': ['strings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/newspaper'},
 {'history': 'A un alumno del CECyTE 05 se le perdio la llave en algun lugar '
             'del hotel en el que se quedan a dormir para poder asistir a los '
             'entrenamientos de la OMI, el esta muy preocupado de que sus '
             'compañeros se molesten con el, por lo que te pidio que le '
             'ayudaras a encontrar la llave de la forma en la que pudieras. El '
             'es muy especial y tambien te pidio que le dijeras la suma del '
             'camino minimo de su posicion a la llave y a todas las posibles '
             'llaves ( incluso la llave) . NOTA: con la suma de caminos se '
             'refiere a la suma de la posicion del alumno a todas las posibles '
             'llaves no importa las veces que pase por el mismo lugar.',
  'input': "resiviras un mapa del hotel de tamaño NxM donde ' # ' representa "
           "una pared, ' y' la posicion donde se encuentra el alumno del "
           "CECyTE, ' L' donde esta la llave, ' * ' donde esta una posible "
           "llave y ' . ' que significa pasillo libre.",
  'note': ' ',
  'output': 'En caso de que pueda encontrar la llave: Imprime " SI" sin '
            'comillas, después un salto de linea e imprime la distancia '
            'mínima de la posición del alumno hasta la llave, después un '
            'espacio en blanco y la suma a todas las posibles llaves como se '
            'explico arriba. En caso de que no pueda encontrar la llave solo '
            'imprime " NO" sin comillas.',
  'title': 'La llave :)',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/ninguno'},
 {'history': ' ',
  'input': 'La primera línea de la entrada sera un número n, el tamaño del '
           'nombre a evaluar. Luego, en la segunda línea, el nombre a '
           'evaluar. Este nombre solo puede estarcompuesto de letras '
           'minúsculasLimites1 ≤ n ≤ 50,',
  'note': ' ',
  'output': 'Deberás imprimir 1 en caso de que el nombre sea elegante, 0 en '
            'caso contrario. '
            'EjemplosInputOutput📋4sara0📋3ana1📋6andres0📋7adriana1',
  'title': 'Nombre elegante',
  'topics': ['strings'],
  'url': 'https://omegaup.com/arena/problem/nombre-elegante'},
 {'history': ' ',
  'input': ' ',
  'note': ' ',
  'output': ' ',
  'title': 'occ11nssf32',
  'topics': ['strings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/occ11nssf32'},
 {'history': ' ',
  'input': 'La primera línea de la entrada contiene una cadena de hasta 150 0 '
           '́s y 1 ́s, la cadena que ve Alfredo. La segunda líneacontiene la '
           'cadena de 0 ́s y 1 ́s que se inventa Alfredo de hasta 10 '
           'caracteres.',
  'note': ' ',
  'output': 'La cadena que queda después de haber removido todas las veces '
            'posibles la cadena inventada por Alfredo',
  'title': 'occ11pnfd14',
  'topics': ['strings'],
  'url': 'https://omegaup.com/arena/problem/occ11pnfd14'},
 {'history': ' ',
  'input': ' ',
  'note': ' ',
  'output': ' ',
  'title': 'occ20sfns21ns23',
  'topics': ['strings'],
  'url': 'https://omegaup.com/arena/problem/occ20sfns21ns23'},
 {'history': ' ',
  'input': ' ',
  'note': ' ',
  'output': ' ',
  'title': 'occ20sfns25',
  'topics': ['strings'],
  'url': 'https://omegaup.com/arena/problem/occ20sfns25'},
 {'history': ' ',
  'input': ' ',
  'note': ' ',
  'output': ' ',
  'title': 'occ20sfns32',
  'topics': ['strings'],
  'url': 'https://omegaup.com/arena/problem/occ20sfns32'},
 {'history': ' ',
  'input': ' ',
  'note': ' ',
  'output': ' ',
  'title': 'occ20sfpn25',
  'topics': ['strings'],
  'url': 'https://omegaup.com/arena/problem/occ20sfpn25'},
 {'history': ' ',
  'input': ' ',
  'note': ' ',
  'output': ' ',
  'title': 'occ21sfinpn21',
  'topics': ['strings'],
  'url': 'https://omegaup.com/arena/problem/occ21sfinpn21'},
 {'history': ' ',
  'input': ' ',
  'note': ' ',
  'output': ' ',
  'title': 'occ21sfinpn25',
  'topics': ['strings'],
  'url': 'https://omegaup.com/arena/problem/occ21sfinpn25'},
 {'history': ' ',
  'input': ' ',
  'note': ' ',
  'output': ' ',
  'title': 'Hola Mundo',
  'topics': ['sortings'],
  'url': 'https://omegaup.com/arena/problem/ofs-hola-mundo'},
 {'history': 'Pachito es un chico muy ocupado. Justamente la semana pasada '
             'tuvo un concierto de piano y ahora se ha atrasado en el colegio '
             '( que es bastante pesado) . Para mañana tiene que presentar n '
             'tareas para las diferentes asignaturas. Cada tarea i le toma t_ '
             'i minutos para hacerla. Sin embargo, hoy solo cuenta con T '
             'minutos disponibles. ¿Puedes ayudar a Pachito a determinar cuál '
             'es el número máximo de tareas que puede hacer?',
  'input': 'La primera línea tiene el número de tareas y el tiempo '
           'disponible, n y T, respectivamente. La segunda línea tiene n '
           'números separados por un espacio, los tiempos t_ i para realizar '
           'cada tarea.',
  'note': ' ',
  'output': 'El número de tareas que puede hacer Pachito para mañana.',
  'title': 'Pachito y sus tareas',
  'topics': ['sortings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/pachito-tareas'},
 {'history': 'Dado un conjunto de n puntos ( x_ 1, y_ 1) , ( x_ 2, y_ 2) , . . '
             '. , ( x_ n, y_ n) en el plano, decimos que un punto ( x_ i, y_ '
             'i) es óptimo de Pareto si para todo j = ̸ i se cumple por lo '
             'menos una de las siguientes dos condiciones: x_ i x_ jy_ i y_ '
             'jEs decir, que no haya ningún punto que esté estrictamente '
             'arriba y a la derecha de ( x_ i, y_ i) . Nótese que un conjunto '
             'de puntos puede contener varios óptimos de Pareto. Por ejemplo '
             'el conjunto de puntos ( 1, 1) , ( 3, 1) , ( 1, 3) tiene dos '
             'óptimo de Pareto: ( 3, 1) y ( 1, 3) . En este otro ejemplo los '
             'óptimos de Pareto se muestran en rojo: ProblemaDado un conjunto '
             'de n puntos ( x_ 1, y_ 1) , ( x_ 2, y_ 2) , . . . , ( x_ n, y_ '
             'n) , imprime el número de óptimos de Pareto que contiene.',
  'input': 'Un entero N, indicando el número de puntos. N líneas. Cada '
           'línea contiene dos coordenadas que definen un punto ( x_ i, y_ i) '
           '. Se garantiza que ninguno de los puntos se repetirá. 0 ≤ x_ i, '
           'y_ i ≤ 100, 000, 000Para el 50',
  'note': ' ',
  'output': 'El número de óptimos de Pareto en el conjunto de puntos.',
  'title': 'Óptimos de Pareto',
  'topics': ['sortings'],
  'url': 'https://omegaup.com/arena/problem/pareto'},
 {'history': 'Un triángulo es formado por 3 segmentos ( con valor entero) de '
             'recta unidos por sus extremos, sin embargo no todas las '
             'combinaciones de 3 segmentos pueden formar un triángulo. '
             'ProblemaEscriba un programa que dados 3 números que representan '
             '3 segmentos de rectas, diga si pueden formar un triángulo '
             'rectángulo.',
  'input': 'En la primera línea 3 números “a”, “b” y “c” representando las '
           'longitudes de 3 segmentos de recta en un rango de entre 1 y 32, '
           '000.',
  'note': ' ',
  'output': ' ',
  'title': 'pb Triángulo',
  'topics': ['sortings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/pb-Triangulo'},
 {'history': 'Escriba un programa que reciba tres números enteros X, A, y B, '
             'si X es igual a 1 debe imprimir ( A+ 3) B, pero si X es igual 0 '
             'debe imprimir ( B+ 1) A.',
  'input': 'Tres números enteros X, A, y B.',
  'note': ' ',
  'output': 'Un número entero, que representa la respuesta al problema.',
  'title': 'Potencia',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/potencia-ovi'},
 {'history': 'Después de terminarse el pastelillo de un bocado, Alicia '
             'empezó a crecer. - ¡Me estoy estirando como el telescopio más '
             'largo que haya existido jamás! ¡Adiós, manos! ¡Adiós, pies! - '
             'gritó, cuando sus pies casi se habían perdido de vista. Tomó '
             'la llavecita dorada ( que ahora ya alcanzaba) , se tiró de '
             'costado en el suelo y abrió las N puertecillas que daban al '
             'jardín. Sin embargo, su tamaño le impedía entrar por '
             'cualquiera de ellas. Únicamente pudo atisbar dentro del jardín '
             'a través de una, con sólo un ojo. Se imaginó que, quién la '
             'viera desde el jardín, podría darse cuenta de su tamaño tan '
             'sólo contando las puertecillas entre aquella por donde asomaba '
             'su pie, aquella por la que salía su mano y aquella donde estaba '
             'su ojo. ¿A cuántas puertecillas está el pie de la mano, y a '
             'cuántas está la mano del ojo?',
  'input': 'Un entero N entre 3 y 150 ( la cantidad de puertecillas) , y en la '
           'siguiente línea N dígitos ( enteros) separados por espacios, '
           'donde alguno de ellos será un 1, otro de ellos será un 2 y otro '
           'un 3, representando al ojo, mano y pie de Alicia, respectivamente. '
           'El resto de dígitos tendrán el valor de 0 y se garantiza que la '
           'mano siempre estará entre el pie y el ojo.',
  'note': ' ',
  'output': 'Dos números enteros S y T; la distancia ( en puertecillas) entre '
            'el pie y la mano, y la distancia entre la mano y el ojo, '
            'respectivamente.',
  'title': 'Las puertecillas del jardín',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/puertecillas'},
 {'history': ' ',
  'input': ' ',
  'note': ' ',
  'output': ' ',
  'title': 'Curso de Introducción a Python - Introducción',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/python_1'},
 {'history': ' ',
  'input': ' ',
  'note': ' ',
  'output': ' ',
  'title': 'Curso de Introducción a Python - Operaciones con Strings',
  'topics': ['strings'],
  'url': 'https://omegaup.com/arena/problem/python_5'},
 {'history': ' ',
  'input': ' ',
  'note': ' ',
  'output': ' ',
  'title': 'Curso de Introducción a Python - Funciones',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/python_6'},
 {'history': 'Connie y Blyde son una pareja de ranas cuyo pasatiempo es '
             'saltar. Todo el día se la pasan saltando en una hilera de rocas '
             'cerca de su casa. Un día se les aparece un pez volador mágico '
             'y les propone un acertijo. El pez inscribe números mágicos en '
             'las piedras. Pone a Connie en la piedra más a la izquierda, y a '
             'Blyde en la que le sigue. A continuación les pone un hechizo el '
             'cual hace que cada rana solo pueda saltar a otra piedra si entre '
             'estas dos existe una y solo una piedra de por medio. Cuando una '
             'rana salta de piedra en piedra puede o no intercambiar los '
             'números que estaban inscritos en ellas. El pez mágico volador '
             'les dice que si logran reacomodar los números de manera que '
             'estos queden ordenados de forma no descendente de izquierda a '
             'derecha, les dará un deseo. Ayuda a Connie y Blyde a saber si '
             'es posible completar el desafío.',
  'input': 'En la primer línea un entero 2 ≤ n ≤ 1e6 el número de piedras. '
           'En la segunda línea n enteros 1 ≤ a_ i ≤ n los números inscritos '
           'en las piedras, en su orden inicial. Donde el índice 1 '
           'corresponde a la piedra más a la izquierda.',
  'note': ' ',
  'output': 'Imprime " larga vida al pez" sin comillas, si es posible ordenar '
            'los números con las limitaciones dadas. De lo contrario, imprime '
            '" pez tramposo" sin comillas.',
  'title': 'ranas 4 laif',
  'topics': ['sortings'],
  'url': 'https://omegaup.com/arena/problem/ranas-4-laif'},
 {'history': 'El último obstáculo de Gilgamesh para visitar a Utanapíshtim '
             'era cruzarlas aguas de la muerte y el único que lo podía '
             'ayudar era el barquero Urshanabí. Éste le pidió a Gilgamesh '
             'que fuera al bosque a cortar R árboles parahacer los R remos '
             'que le faltaban. Como Gilgamesh estaba cansado, queríacaminar '
             'lo menos posible para traer uno por uno los árboles necesarios. '
             'Escribeun programa que, dadas las coordenadas de N árboles, '
             'calcule la mínimadistancia D que debe caminar Gilgamesh desde '
             'el origen. Gilgamesh sólo puede cargar un árbol a la vez.',
  'input': 'Dos enteros N y R, seguidos de N parejas de enteros X_ i, Y_ i que '
           'son lascoordenadas ( X_ i, Y_ i) del árbol i.',
  'note': ' ',
  'output': 'El valor de D ( redondeado al entero más cercano) .',
  'title': 'Los remos faltantes de Urshanabí',
  'topics': ['sortings'],
  'url': 'https://omegaup.com/arena/problem/remos'},
 {'history': 'Pepe Python se siente muy solo en la terminal y le vendría bien '
             'un saludo, por qué no le dices " hola" :',
  'input': 'El programa debe recibir hola como entrada',
  'note': ' ',
  'output': 'El programa debe imprimir hola también.',
  'title': 'saludar',
  'topics': ['strings'],
  'url': 'https://omegaup.com/arena/problem/saludar'},
 {'history': '¡Un evento que pasará a la historia ha ocurrido! El SETI ha '
             'confirmado que ha detectado una señal de vida inteligente, la '
             'cuál se estuvo repitiendo por poco tiempo, y al ser tú el '
             'encargado de los sistemas de detección de señales del SETI, '
             'tienes como trabajo descifrar ésta señal. Te has dado cuenta '
             'que cada repetición contiene una serie de números que '
             'misteriosamente concuerdan con la representación decimal el un '
             'carácter ASCII; sin embargo, ciertos elementos se han '
             'corrompido por lo que utilizando todas las repeticiones '
             'disponibles de la señal debes tratar de descifrarla '
             'completamente.',
  'input': 'La primera línea contará con dos números R y N, donde R es la '
           'cantidad de repetición de la señal y N es el número de '
           'elementosque contiene la señal. Las siguientes R líneas '
           'contendrán una N números enteros i, donde cada i elemento '
           'corrompido será representado por - 1.',
  'note': ' ',
  'output': 'Una sola línea conteniendo una cadena de caracteres, la cuál es '
            'la señal descifrada. Si no es posible descifrar completamente la '
            'señal, debes imprimir solamente el número - 1. '
            'EjemplosInputOutput📋3 13104 - 1 - 1 97 32 104 117 - 1 97 - 1 111 '
            '115 - 1- 1 111 108 - 1 32 - 1 117 109 - 1 110 111 - 1 33104 111 - '
            '1 97 32 104 - 1 109 97 110 - 1 115 33hola humanos! 📋3 5104 - 1 - '
            '1 97 - 1- 1 111 - 1 - 1 - 1- 1 111 - 1 97 33- 1Límites1 ≤ R ≤ '
            '1001 ≤ N ≤ 100, 000- 1 ≤ i ≤ 255',
  'title': 'Señal',
  'topics': ['strings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/senial'},
 {'history': 'Dados dos enteros A, B ( 0≤A, B≤101000) , imprima la suma de '
             'ambos números.',
  'input': 'Recibirás dos valores enteros positivos con hasta 1001 dígitos. '
           'Los números no estarán necesariamente en la misma línea.',
  'note': ' ',
  'output': 'Mostrar la suma de A+ B',
  'title': 'Sumas con números grandes',
  'topics': ['strings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/sumas-con-numeros-grandes'},
 {'history': 'Dada una secuencia de N enteros, calcula el número mínimo de '
             'intercambios que se necesitan para ordenarlos.',
  'input': 'El entero N seguido de la secuencia de N enteros. Puedes suponer '
           'que 0 ≤ N ≤ 1, 000, 000 y que los N enteros son distintos y están '
           'en el rango de - 1, 000, 000, 000 a + 1, 000, 000, 000.',
  'note': ' ',
  'output': 'Un entero con la respuesta.',
  'title': 'Intercambios mínimos para ordenar',
  'topics': ['sortings'],
  'url': 'https://omegaup.com/arena/problem/swap-min-sort'},
 {'history': 'Karel ha recibido las llaves de su nueva casa, está muy '
             'contento. Pero no sabe cuánto mide el techo de su nueva casa. '
             'ProblemaAyuda a Karel a indicar el ancho del techo de su nueva '
             'casa, y colocar el tamaño en la posición ( 1, 1) '
             'ConsideracionesKarel empieza dentro de su casa nuevaLa altura de '
             'su casa siempre es de un renlgónKarel trae infinito número de '
             'beepers en su mochilaKarel está orientado hacia el este en la '
             'posición ( 1, 1) La casa de Karel siempre tendrá techoNo '
             'importa la posición final de KarelSólo importa la cantidad de '
             'beepers en la posición ( 1, 1) que indican el ancho del techo '
             'de la nueva casa de KarelEntrada ejemploSalida ejemplo',
  'input': ' ',
  'note': ' ',
  'output': ' ',
  'title': 'Techo',
  'topics': ['sortings'],
  'url': 'https://omegaup.com/arena/problem/techo'},
 {'history': ' ',
  'input': ' ',
  'note': ' ',
  'output': ' ',
  'title': '01000101 01000001 01010011 01011001',
  'topics': ['strings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/tonsOfBits'},
 {'history': ' ',
  'input': ' ',
  'note': ' ',
  'output': ' ',
  'title': '0110 0101 0122 0104',
  'topics': ['strings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/tonsOfBits2'},
 {'history': 'Un anagrama es una palabra o frase que resulta de la '
             'transposición de letras de otra palabra o frase. Dicho de otra '
             'forma, una palabra es anagrama de otra si las dos tienen las '
             'mismas letras, con el mismo número de apariciones, pero en un '
             'orden diferente. Escribe un programa que lea dos palabras en '
             'minusculas, y determine si las palabras tienen la misma '
             'longitud, si no tuvieran la misma longitud, cancelar el '
             'programa, de lo contrario determinar si las palabras son '
             'anagrama una de otra.',
  'input': 'La primer línea de entrada contendrá la primer palabra ( sólo '
           'minusculas, del alfabeto inglés( sin ñ) y a lo mucho contendrá '
           '1000 letras) . La segunda línea contendrá la segunda palabra ( '
           'sólo minusculas, del alfabeto inglés( sin ñ) y a lo mucho '
           'contendrá 1000 letras) . '
           'InputOutput📋imperdonablementeimponderablementeSI es un ANAGRAMA! '
           '📋bulliciosamenteescabullimientoSI es un ANAGRAMA! 📋rocacoroNO es '
           'un Anagrama! 📋enfriamientorefinamientosLas cadenas tienen longitud '
           'diferente. Operacion Cancelada!',
  'note': ' ',
  'output': ' ',
  'title': 'un_anagrama_sencillo',
  'topics': ['strings', 'implementation'],
  'url': 'https://omegaup.com/arena/problem/un_anagrama_sencillo'},
 {'history': 'Calcula el volumen de N cubos, a partir de la longitud ( en '
             'metros) de un lado de cada cubo.',
  'input': 'Un entero N entre 1 y 100 ( la cantidad de cubos) , y en la '
           'siguiente línea N enteros separados por espacios, cada uno '
           'representa la longitud del lado de un cubo y tendrá un valor '
           'entre 1 y 1 000.',
  'note': ' ',
  'output': 'Son N enteros separados por un espacio, correspondientes al '
            'volumen de cada uno de los cubos.',
  'title': 'Volumen de N cubos',
  'topics': ['implementation'],
  'url': 'https://omegaup.com/arena/problem/volumenNcubos'}]

def getAllProblems(onlyThisTopics = []):
  """
  Dummy client, given certain topics returns data only with those topics
  """

  # problems = api.getAllProblems()
  # for problem in problems:
  #   cleanTopics = []
  #   for topic in problem['topics']:
  #     cleanTopics.append(topic['name'])
  #   problem['topics'] = cleanTopics

  if len(onlyThisTopics):
    for problem in staticProblems:
      problem['topics'] = [topic for topic in problem['topics'] if topic in onlyThisTopics]

  return staticProblems


# pprint(getAllProblems()[:5])
# pprint(getAllProblems(['implementation', 'sortings', 'strings'])[:5])