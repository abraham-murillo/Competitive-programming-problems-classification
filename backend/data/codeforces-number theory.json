[
  {
    "title": "Game of the Year",
    "url": "https://codeforces.com/problemset/problem/1783/E",
    "history": "Monocarp and Polycarp are playing a computer game. This game features n bosses for the playing to kill, numbered from 1 to n . They will fight each boss the following way: Monocarp makes k attempts to kill the boss; Polycarp makes k attempts to kill the boss; Monocarp makes k attempts to kill the boss; Polycarp makes k attempts to kill the boss; . . . Monocarp kills the i - th boss on his a_ i - th attempt. Polycarp kills the i - th boss on his b_ i - th attempt. After one of them kills the i - th boss, they move on to the ( i+ 1) - st boss. The attempt counters reset for both of them. Once one of them kills the n - th boss, the game ends. Find all values of k from 1 to n such that Monocarp kills all bosses.",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of testcases. The first line of each testcase contains a single integer n ( 1 \u2264 n \u2264 2 \u00b7 10^ 5 ) \u2014 the number of bosses. The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 n ) \u2014 the index of attempt Monocarp kills each boss on. The third line contains n integers b_ 1, b_ 2, . . . , b_ n ( 1 \u2264 b_ i \u2264 n ) \u2014 the index of attempt Polycarp kills each boss on. The sum of n over all testcases doesn' t exceed 2 \u00b7 10^ 5 .",
    "output": "For each testcase, print two lines. The first line should contain a single integer cnt \u2014 the number of values of k from 1 to n such that Monocarp kills all bosses. The second line should contain cnt distinct integers \u2014 the values of k themselves.",
    "note": "Consider the last testcase of the example. Let k = 1 . First, Monocarp makes one attempt to kill the first boss. It' s successful, since a_ 1 = 1 . Then, Monocarp makes one attempt to kill the second boss. It' s unsuccessful, since a_ 2 > 1 . So, Polycarp makes an attempt then. It' s also unsuccessful, since b_ 2 > 1 . Then, Monocarp makes another attempt. It' s still unsuccessful, since a_ 2 > 2 . This goes on until Polycarp finally kills the boss on his third attempt. Monocarp didn' t kill this boss, thus, k = 1 isn' t the answer. Let k = 2 . Monocarp still kills the first boss on his first attempt. Then, he makes two unsuccessful attempts for the second boss. Then, Polycarp makes two unsuccessful attempts. Then, Monocarp makes two more attempts and kills the boss on his fourth attempt. The third boss is similar. First, two unsuccessful attempts by Monocarp. Then, two unsuccessful attempts by Polycarp. Then, Monocarp has two more attempts, but even his first one is successful, since a_ 3 = 3 . The fourth boss is also killed by Monocarp. Thus, k = 2 is the answer.",
    "topics": [
      "brute force",
      "data structures",
      "math",
      "number theory"
    ],
    "id": "1783E"
  },
  {
    "title": "Many Perfect Squares",
    "url": "https://codeforces.com/problemset/problem/1781/D",
    "history": "You are given a set a_ 1, a_ 2, . . . , a_ n of distinct positive integers. We define the squareness of an integer x as the number of perfect squares among the numbers a_ 1 + x, a_ 2 + x, . . . , a_ n + x . Find the maximum squareness among all integers x between 0 and 10^ 18 , inclusive. Perfect squares are integers of the form t^ 2 , where t is a non- negative integer. The smallest perfect squares are 0, 1, 4, 9, 16, . . . .",
    "input": "Each test contains multiple test cases. The first line contains the number of test cases t ( 1 \u2264 t \u2264 50 ) . The description of the test cases follows. The first line of each test case contains a single integer n ( 1 \u2264 n \u2264 50 ) \u2014 the size of the set. The second line contains n distinct integers a_ 1, a_ 2, . . . , a_ n in increasing order ( 1 \u2264 a_ 1 < a_ 2 < . . . < a_ n \u2264 10^ 9 ) \u2014 the set itself. It is guaranteed that the sum of n over all test cases does not exceed 50 .",
    "output": "For each test case, print a single integer \u2014 the largest possible number of perfect squares among a_ 1 + x, a_ 2 + x, . . . , a_ n + x , for some 0 \u2264 x \u2264 10^ 18 .",
    "note": "In the first test case, for x = 0 the set contains two perfect squares: 1 and 4 . It is impossible to obtain more than two perfect squares. In the second test case, for x = 3 the set looks like 4, 9, 16, 25, 100 , that is, all its elements are perfect squares.",
    "topics": [
      "brute force",
      "math",
      "number theory"
    ],
    "id": "1781D"
  },
  {
    "title": "Friendly Spiders",
    "url": "https://codeforces.com/problemset/problem/1775/D",
    "history": "Mars is home to an unusual species of spiders \u2014 Binary spiders. Right now, Martian scientists are observing a colony of n spiders, the i - th of which has a_ i legs. Some of the spiders are friends with each other. Namely, the i - th and j - th spiders are friends if ( a_ i, a_ j) 1 , i. e. , there is some integer k \u2265 2 such that a_ i and a_ j are simultaneously divided by k without a remainder. Here ( x, y) denotes the greatest common divisor ( GCD) of integers x and y . Scientists have discovered that spiders can send messages. If two spiders are friends, then they can transmit a message directly in one second. Otherwise, the spider must pass the message to his friend, who in turn must pass the message to his friend, and so on until the message reaches the recipient. Let' s look at an example. Suppose a spider with eight legs wants to send a message to a spider with 15 legs. He can' t do it directly, because ( 8, 15) = 1 . But he can send a message through the spider with six legs because ( 8, 6) = 2 and ( 6, 15) = 3 . Thus, the message will arrive in two seconds. Right now, scientists are observing how the s - th spider wants to send a message to the t - th spider. The researchers have a hypothesis that spiders always transmit messages optimally. For this reason, scientists would need a program that could calculate the minimum time to send a message and also deduce one of the optimal routes.",
    "input": "The first line of input contains an integer n ( 2 \u2264 n \u2264 3\u00b710^ 5 ) \u2014 the number of spiders in the colony. The second line of input contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 3\u00b710^ 5 ) \u2014 the number of legs the spiders have. The third line of input contains two integers s and t ( 1 \u2264 s, t \u2264 n ) \u2014the spiders between which the message must be sent.",
    "output": "If it is impossible to transmit a message between the given pair of spiders, print - 1 . Otherwise, in the first line of the output print the integer t ( t \u2265 1 ) \u2014 the number of spiders that participate in the message transmission ( i. e. the minimum time of message delivery in seconds plus one) . In the second line, print t different integers b_ 1, b_ 2, . . . , b_ t ( 1 \u2264 b_ i \u2264 n ) \u2014 the ids of the spiders through which the message should follow, in order from sender to receiver. If there are several optimal routes for the message, output any of them.",
    "note": "The first example is shown above. It shows that the message from the 5 - th spider ( with eight legs) to the 6 - th spider ( with 15 legs) is optimal to pass through the 4 - th spider ( with six legs) . In the second example, the spider number 7 ( with 11 legs) is not friends with anyone, so it is impossible to send him a message.",
    "topics": [
      "dfs and similar",
      "graphs",
      "math",
      "number theory",
      "shortest paths"
    ],
    "id": "1775D"
  },
  {
    "title": "Hossam and Trainees",
    "url": "https://codeforces.com/problemset/problem/1771/C",
    "history": "Hossam has n trainees. He assigned a number a_ i for the i - th trainee. A pair of the i - th and j - th ( i = \u0338 j ) trainees is called successful if there is an integer x ( x \u2265 2 ) , such that x divides a_ i , and x divides a_ j . Hossam wants to know if there is a successful pair of trainees. Hossam is very tired now, so he asks you for your help!",
    "input": "The input consists of multiple test cases. The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 5 ) , the number of test cases. A description of the test cases follows. The first line of each test case contains an integer number n ( 2 \u2264 n \u2264 10^ 5 ) . The second line of each test case contains n integers, the number of each trainee a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 9 ) . It is guaranteed that the sum of n over all test cases does not exceed 10^ 5 .",
    "output": "Print the answer \u2014 \" YES\" ( without quotes) if there is a successful pair of trainees and \" NO\" otherwise. You can print each letter in any case.",
    "note": "In the first example, the first trainee and the second trainee make up a successful pair: a_ 1 = 32, a_ 2 = 48 , you can choose x = 4 .",
    "topics": [
      "greedy",
      "math",
      "number theory"
    ],
    "id": "1771C"
  },
  {
    "title": "Koxia and Sequence",
    "url": "https://codeforces.com/problemset/problem/1770/F",
    "history": "Mari has three integers n , x , and y . Call an array a of n non- negative integers good if it satisfies the following conditions: a_ 1+ a_ 2+ . . . + a_ n= x , and a_ 1 | a_ 2 | . . . | a_ n= y , where | denotes the bitwise OR operation. The score of a good array is the value of a_ 1 \u2295 a_ 2 \u2295. . . \u2295 a_ n , where \u2295 denotes the bitwise XOR operation. Koxia wants you to find the total bitwise XOR of the scores of all good arrays. If there are no good arrays, output 0 instead.",
    "input": "The first line of input contains three integers n , x and y ( 1 \u2264 n < 2^ 40 , 0 \u2264 x < 2^ 60 , 0 \u2264 y < 2^ 20 ) .",
    "output": "Output a single integer \u2014 the total bitwise XOR of the scores of all good arrays.",
    "note": "In the first test case, there are 12 good arrays totally as follows. [ 0, 2, 3] , [ 0, 3, 2] , [ 2, 0, 3] , [ 2, 3, 0] , [ 3, 0, 2] and [ 3, 2, 0] \u2014 the score is 0 \u2295 2 \u2295 3 = 1 ; [ 1, 2, 2] , [ 2, 1, 2] and [ 2, 2, 1] \u2014 the score is 1 \u2295 2 \u2295 2 = 1 ; [ 1, 1, 3] , [ 1, 3, 1] and [ 3, 1, 1] \u2014 the score is 1 \u2295 1 \u2295 3 = 3 . Therefore, the total bitwise xor of the scores is 1 \u2295. . . \u2295 1_ 9 times\u2295 3 \u2295 3 \u2295 3 = 2 . In the second test case, there are no good sequences. The output should be 0 .",
    "topics": [
      "bitmasks",
      "combinatorics",
      "dp",
      "math",
      "number theory"
    ],
    "id": "1770F"
  },
  {
    "title": "Koxia and Number Theory",
    "url": "https://codeforces.com/problemset/problem/1770/C",
    "history": "Joi has an array a of n positive integers. Koxia wants you to determine whether there exists a positive integer x > 0 such that ( a_ i+ x, a_ j+ x) = 1 for all 1 \u2264 i < j \u2264 n . Here ( y, z) denotes the greatest common divisor ( GCD) of integers y and z .",
    "input": "Each test consists of multiple test cases. The first line contains a single integer t ( 1 \u2264 t \u2264 100 ) \u2014 the number of test cases. The description of test cases follows. The first line of each test case contains an integer n ( 2 \u2264 n \u2264 100 ) \u2014 the size of the array. The second line of each test case contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u226410^ 18 ) . It is guaranteed that the sum of n over all test cases does not exceed 1000 .",
    "output": "For each test case, output \" YES\" ( without quotes) if there exists a positive integer x such that ( a_ i+ x, a_ j+ x) = 1 for all 1 \u2264 i < j \u2264 n , and \" NO\" ( without quotes) otherwise. You can output the answer in any case ( upper or lower) . For example, the strings \" yEs\" , \" yes\" , \" Yes\" , and \" YES\" will be recognized as positive responses.",
    "note": "In the first test case, we can set x = 4 . This is valid because: When i= 1 and j= 2 , ( a_ i+ x, a_ j+ x) = ( 5+ 4, 7+ 4) = ( 9, 11) = 1 . When i= 1 and j= 3 , ( a_ i+ x, a_ j+ x) = ( 5+ 4, 10+ 4) = ( 9, 14) = 1 . When i= 2 and j= 3 , ( a_ i+ x, a_ j+ x) = ( 7+ 4, 10+ 4) = ( 11, 14) = 1 . In the second test case, any choice of x makes ( a_ 1 + x, a_ 2 + x) = ( 3+ x, 3+ x) = 3+ x . Therefore, no such x exists.",
    "topics": [
      "brute force",
      "chinese remainder theorem",
      "math",
      "number theory"
    ],
    "id": "1770C"
  },
  {
    "title": "Partial Sorting",
    "url": "https://codeforces.com/problemset/problem/1768/E",
    "history": "Consider a permutation ^ \u2020 p of length 3n . Each time you can do one of the following operations: Sort the first 2n elements in increasing order. Sort the last 2n elements in increasing order. We can show that every permutation can be made sorted in increasing order using only these operations. Let' s call f( p) the minimum number of these operations needed to make the permutation p sorted in increasing order. Given n , find the sum of f( p) over all ( 3n) ! permutations p of size 3n . Since the answer could be very large, output it modulo a prime M . ^ \u2020 A permutation of length n is an array consisting of n distinct integers from 1 to n in arbitrary order. For example, [ 2, 3, 1, 5, 4] is a permutation, but [ 1, 2, 2] is not a permutation ( 2 appears twice in the array) , and [ 1, 3, 4] is also not a permutation ( n= 3 but there is 4 in the array) .",
    "input": "The only line of input contains two numbers n and M ( 1 \u2264 n \u2264 10^ 6 , 10^ 8 \u2264 M \u2264 10^ 9 ) . It is guaranteed that M is a prime number.",
    "output": "Output the answer modulo M .",
    "note": "In the first test case, all the permutations are: [ 1, 2, 3] , which requires 0 operations; [ 1, 3, 2] , which requires 1 operation; [ 2, 1, 3] , which requires 1 operation; [ 2, 3, 1] , which requires 2 operations; [ 3, 1, 2] , which requires 2 operations; [ 3, 2, 1] , which requires 3 operations. Therefore, the answer is 0+ 1+ 1+ 2+ 2+ 3= 9 .",
    "topics": [
      "combinatorics",
      "math",
      "number theory"
    ],
    "id": "1768E"
  },
  {
    "title": "Greatest Convex",
    "url": "https://codeforces.com/problemset/problem/1768/A",
    "history": "You are given an integer k . Find the largest integer x , where 1 \u2264 x < k , such that x! + ( x - 1) ! ^ \u2020 is a multiple of ^ k , or determine that no such x exists. ^ \u2020 y! denotes the factorial of y , which is defined recursively as y! = y \u00b7 ( y- 1) ! for y \u2265 1 with the base case of 0! = 1 . For example, 5! = 5 \u00b7 4 \u00b7 3 \u00b7 2 \u00b7 1 \u00b7 0! = 120 . ^ If a and b are integers, then a is a multiple of b if there exists an integer c such that a = b \u00b7 c . For example, 10 is a multiple of 5 but 9 is not a multiple of 6 .",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. The description of test cases follows. The only line of each test case contains a single integer k ( 2 \u2264 k \u2264 10^ 9 ) .",
    "output": "For each test case output a single integer \u2014 the largest possible integer x that satisfies the conditions above. If no such x exists, output - 1 .",
    "note": "In the first test case, 2! + 1! = 2 + 1 = 3 , which is a multiple of 3 . In the third test case, 7! + 6! = 5040 + 720 = 5760 , which is a multiple of 8 .",
    "topics": [
      "greedy",
      "math",
      "number theory"
    ],
    "id": "1768A"
  },
  {
    "title": "Lucky Chains",
    "url": "https://codeforces.com/problemset/problem/1766/D",
    "history": "Let' s name a pair of positive integers ( x, y) lucky if the greatest common divisor of them is equal to 1 ( ( x, y) = 1 ) . Let' s define a chain induced by ( x, y) as a sequence of pairs ( x, y) , ( x + 1, y + 1) , ( x + 2, y + 2) , . . . , ( x + k, y + k) for some integer k \u2265 0 . The length of the chain is the number of pairs it consists of, or ( k + 1) . Let' s name such chain lucky if all pairs in the chain are lucky. You are given n pairs ( x_ i, y_ i) . Calculate for each pair the length of the longest lucky chain induced by this pair. Note that if ( x_ i, y_ i) is not lucky itself, the chain will have the length 0 .",
    "input": "The first line contains a single integer n ( 1 \u2264 n \u2264 10^ 6 ) \u2014 the number of pairs. Next n lines contains n pairs \u2014 one per line. The i - th line contains two integers x_ i and y_ i ( 1 \u2264 x_ i < y_ i \u2264 10^ 7 ) \u2014 the corresponding pair.",
    "output": "Print n integers, where the i - th integer is the length of the longest lucky chain induced by ( x_ i, y_ i) or - 1 if the chain can be infinitely long.",
    "note": "In the first test case, ( 5, 15) = 5 > 1 , so it' s already not lucky, so the length of the lucky chain is 0 . In the second test case, ( 13 + 1, 37 + 1) = ( 14, 38) = 2 . So, the lucky chain consists of the single pair ( 13, 37) .",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "1766D"
  },
  {
    "title": "Minimum LCM",
    "url": "https://codeforces.com/problemset/problem/1765/M",
    "history": "You are given an integer n . Your task is to find two positive ( greater than 0 ) integers a and b such that a+ b= n and the least common multiple ( LCM) of a and b is the minimum among all possible values of a and b . If there are multiple answers, you can print any of them.",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 100 ) \u2014 the number of test cases. The first line of each test case contains a single integer n ( 2 \u2264 n \u2264 10^ 9 ) .",
    "output": "For each test case, print two positive integers a and b \u2014 the answer to the problem. If there are multiple answers, you can print any of them.",
    "note": "In the second example, there are 8 possible pairs of a and b : a = 1 , b = 8 , LCM( 1, 8) = 8 ; a = 2 , b = 7 , LCM( 2, 7) = 14 ; a = 3 , b = 6 , LCM( 3, 6) = 6 ; a = 4 , b = 5 , LCM( 4, 5) = 20 ; a = 5 , b = 4 , LCM( 5, 4) = 20 ; a = 6 , b = 3 , LCM( 6, 3) = 6 ; a = 7 , b = 2 , LCM( 7, 2) = 14 ; a = 8 , b = 1 , LCM( 8, 1) = 8 . In the third example, there are 5 possible pairs of a and b : a = 1 , b = 4 , LCM( 1, 4) = 4 ; a = 2 , b = 3 , LCM( 2, 3) = 6 ; a = 3 , b = 2 , LCM( 3, 2) = 6 ; a = 4 , b = 1 , LCM( 4, 1) = 4 .",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "1765M"
  },
  {
    "title": "Doremy's Perfect Math Class",
    "url": "https://codeforces.com/problemset/problem/1764/B",
    "history": "\" Everybody! Doremy' s Perfect Math Class is about to start! Come and do your best if you want to have as much IQ as me! \" In today' s math class, Doremy is teaching everyone subtraction. Now she gives you a quiz to prove that you are paying attention in class. You are given a set S containing positive integers. You may perform the following operation some ( possibly zero) number of times: choose two integers x and y from the set S such that x > y and x - y is not in the set S . add x- y into the set S . You need to tell Doremy the maximum possible number of integers in S if the operations are performed optimally. It can be proven that this number is finite.",
    "input": "The input consists of multiple test cases. The first line contains a single integer t ( 1\u2264 t\u2264 10^ 4 ) \u2014 the number of test cases. The description of the test cases follows. The first line contains an integer n ( 2 \u2264 n\u2264 10^ 5 ) \u2014 the size of the set S . The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 1\u2264 a_ 1 < a_ 2 < \u22ef < a_ n \u2264 10^ 9 ) \u2014 the positive integers in S . It is guaranteed that the sum of n over all test cases does not exceed 2\u00b7 10^ 5 .",
    "output": "For each test case, you need to output the maximum possible number of integers in S . It can be proven that this value is finite.",
    "note": "In the first test case, no such x and y exist. The maximum possible number of integers in S is 2 . In the second test case, S= { 5, 10, 25} at first. You can choose x= 25 , y= 10 , then add x- y= 15 to the set. S= { 5, 10, 15, 25} now. You can choose x= 25 , y= 5 , then add x- y= 20 to the set. S= { 5, 10, 15, 20, 25} now. You can not perform any operation now. After performing all operations, the number of integers in S is 5 . It can be proven that no other sequence of operations allows S to contain more than 5 integers.",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "1764B"
  },
  {
    "title": "Node Pairs",
    "url": "https://codeforces.com/problemset/problem/1763/E",
    "history": "Let' s call an ordered pair of nodes ( u, v) in a directed graph unidirectional if u = \u0338 v , there exists a path from u to v , and there are no paths from v to u . A directed graph is called p - reachable if it contains exactly p ordered pairs of nodes ( u, v) such that u < v and u and v are reachable from each other. Find the minimum number of nodes required to create a p - reachable directed graph. Also, among all such p - reachable directed graphs with the minimum number of nodes, let G denote a graph which maximizes the number of unidirectional pairs of nodes. Find this number.",
    "input": "The first and only line contains a single integer p ( 0 \u2264 p \u2264 2 \u00b7 10^ 5 ) \u2014 the number of ordered pairs of nodes.",
    "output": "Print a single line containing two integers \u2014 the minimum number of nodes required to create a p - reachable directed graph, and the maximum number of unidirectional pairs of nodes among all such p - reachable directed graphs with the minimum number of nodes.",
    "note": "In the first test case, the minimum number of nodes required to create a 3 - reachable directed graph is 3 . Among all 3 - reachable directed graphs with 3 nodes, the following graph G is one of the graphs with the maximum number of unidirectional pairs of nodes, which is 0 .",
    "topics": [
      "dp",
      "graphs",
      "math",
      "number theory"
    ],
    "id": "1763E"
  },
  {
    "title": "Valid Bitonic Permutations",
    "url": "https://codeforces.com/problemset/problem/1763/D",
    "history": "You are given five integers n , i , j , x , and y . Find the number of bitonic permutations B , of the numbers 1 to n , such that B_ i= x , and B_ j= y . Since the answer can be large, compute it modulo 10^ 9+ 7 . A bitonic permutation is a permutation of numbers, such that the elements of the permutation first increase till a certain index k , 2 \u2264 k \u2264 n- 1 , and then decrease till the end. Refer to notes for further clarification.",
    "input": "Each test contains multiple test cases. The first line contains a single integer t ( 1 \u2264 t \u2264 100 ) \u2014 the number of test cases. The description of test cases follows. The only line of each test case contains five integers, n , i , j , x , and y ( 3 \u2264 n \u2264 100 and 1 \u2264 i, j, x, y \u2264 n ) . It is guaranteed that i < j and x y .",
    "output": "For each test case, output a single line containing the number of bitonic permutations satisfying the above conditions modulo 10^ 9+ 7 .",
    "note": "A permutation is an array consisting of n distinct integers from 1 to n in arbitrary order. For example, [ 2, 3, 1, 5, 4] is a permutation, but [ 1, 2, 2] is not a permutation ( 2 appears twice in the array) and [ 1, 3, 4] is also not a permutation ( n= 3 but there is 4 in the array) . An array of n \u2265 3 elements is bitonic if its elements are first increasing till an index k , 2 \u2264 k \u2264 n- 1 , and then decreasing till the end. For example, [ 2, 5, 8, 6, 1] is a bitonic array with k= 3 , but [ 2, 5, 8, 1, 6] is not a bitonic array ( elements first increase till k= 3 , then decrease, and then increase again) . A bitonic permutation is a permutation in which the elements follow the above- mentioned bitonic property. For example, [ 2, 3, 5, 4, 1] is a bitonic permutation, but [ 2, 3, 5, 1, 4] is not a bitonic permutation ( since it is not a bitonic array) and [ 2, 3, 4, 4, 1] is also not a bitonic permutation ( since it is not a permutation) . Sample Test Case DescriptionFor n= 3 , possible permutations are [ 1, 2, 3] , [ 1, 3, 2] , [ 2, 1, 3] , [ 2, 3, 1] , [ 3, 1, 2] , and [ 3, 2, 1] . Among the given permutations, the bitonic permutations are [ 1, 3, 2] and [ 2, 3, 1] . In the first test case, the expected permutation must be of the form [ 2, ? , 3] , which does not satisfy either of the two bitonic permutations with n= 3 , therefore the answer is 0. In the second test case, the expected permutation must be of the form [ ? , 3, 2] , which only satisfies the bitonic permutation [ 1, 3, 2] , therefore, the answer is 1.",
    "topics": [
      "combinatorics",
      "dp",
      "implementation",
      "math",
      "number theory"
    ],
    "id": "1763D"
  },
  {
    "title": "GCD Queries ",
    "url": "https://codeforces.com/problemset/problem/1762/D",
    "history": "This is an interactive problem. There is a secret permutation p of [ 0, 1, 2, . . . , n- 1] . Your task is to find 2 indices x and y ( 1 \u2264 x, y \u2264 n , possibly x= y ) such that p_ x= 0 or p_ y= 0 . In order to find it, you are allowed to ask at most 2n queries. In one query, you give two integers i and j ( 1 \u2264 i, j \u2264 n , i = \u0338 j ) and receive the value of ( p_ i, p_ j) ^ \u2020 . Note that the permutation p is fixed before any queries are made and does not depend on the queries. ^ \u2020 ( x, y) denotes the greatest common divisor ( GCD) of integers x and y . Note that ( x, 0) = ( 0, x) = x for all positive integers x . InteractionThe interaction for each test case begins by reading the integer n . To make a query, output \" ? i j \" ( 1 \u2264 i, j \u2264 n , i = \u0338 j ) without quotes. Afterwards, you should read a single integer \u2014 the answer to your query ( p_ i, p_ j) . You can make at most 2n such queries in each test case. If you want to print the answer, output \" ! x y \" ( 1 \u2264 x, y \u2264 n ) without quotes. After doing that, read 1 or - 1 . If p_ x= 0 or p_ y= 0 , you' ll receive 1 , otherwise you' ll receive - 1 . If you receive - 1 , your program must terminate immediately to receive a Wrong Answer verdict. Otherwise, you can get an arbitrary verdict because your solution will continue to read from a closed stream. If you receive the integer - 1 instead of an answer or a valid value of n , it means your program has made an invalid query, has exceeded the limit of queries, or has given an incorrect answer on the previous test case. Your program must terminate immediately to receive a Wrong Answer verdict. Otherwise, you can get an arbitrary verdict because your solution will continue to read from a closed stream. After printing a query or the answer, do not forget to output the end of line and flush the output. Otherwise, you will get Idleness limit exceeded. To do this, use: fflush( stdout) or cout. flush( ) in C+ + ; System. out. flush( ) in Java; flush( output) in Pascal; stdout. flush( ) in Python; see documentation for other languages. HacksTo hack, use the following format. The first line should contain a single integer t ( 1 \u2264 t \u2264 10^ 4 ) . The first line of each test case should contain a single integer n ( 2 \u2264 n \u2264 2 \u00b7 10^ 4 ) . The second line of each test case should contain n space separated integers p_ 1, p_ 2, . . . , p_ n . p should be a permutation of [ 0, 1, 2, . . . , n- 1] . The sum of n should not exceed 2 \u00b7 10^ 4 .",
    "input": "Each test contains multiple test cases. The first line contains the number of test cases t ( 1 \u2264 t \u2264 10^ 4 ) . The description of the test cases follows. The first line of each test case contains a single integer n ( 2 \u2264 n \u2264 2 \u00b7 10^ 4 ) . After reading the integer n for each test case, you should begin the interaction. It is guaranteed that the sum of n over all test cases does not exceed 2 \u00b7 10^ 4 .",
    "output": "",
    "note": "In the first test, the interaction proceeds as follows. SolutionJuryExplanation There are 2 test cases. In the first test case, the hidden permutation is [ 1, 0] , with length 2 . The solution requests ( p_ 1, p_ 2) , and the jury responds with 1 . The solution knows that either p_ 1= 0 or p_ 2= 0 , and prints the answer. Since the output is correct, the jury responds with 1 and continues to the next test case. In the second test case, the hidden permutation is [ 2, 4, 0, 1, 3] , with length 5 . The solution requests ( p_ 1, p_ 2) , and the jury responds with 2 . The solution requests ( p_ 2, p_ 3) , and the jury responds with 4 . The solution has somehow determined that p_ 3= 0 , and prints the answer. Since the output is correct, the jury responds with 1 . Note that the empty lines in the example input and output are for the sake of clarity, and do not occur in the real interaction. After each test case, make sure to read 1 or - 1 .",
    "topics": [
      "constructive algorithms",
      "interactive",
      "number theory"
    ],
    "id": "1762D"
  },
  {
    "title": "Make Array Good",
    "url": "https://codeforces.com/problemset/problem/1762/B",
    "history": "An array b of m positive integers is good if for all pairs i and j ( 1 \u2264 i, j \u2264 m ) , max( b_ i, b_ j) is divisible by min( b_ i, b_ j) . You are given an array a of n positive integers. You can perform the following operation: Select an index i ( 1 \u2264 i \u2264 n ) and an integer x ( 0 \u2264 x \u2264 a_ i ) and add x to a_ i , in other words, a_ i : = a_ i+ x . After this operation, a_ i \u2264 10^ 18 should be satisfied. You have to construct a sequence of at most n operations that will make a good. It can be proven that under the constraints of the problem, such a sequence of operations always exists.",
    "input": "Each test contains multiple test cases. The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. The description of the test cases follows. The first line of each test case contains a single integer n ( 1 \u2264 n \u2264 10^ 5 ) \u2014 the length of the array a . The second line of each test case contains n space- separated integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 9 ) \u2014 representing the array a . It is guaranteed that the sum of n over all test cases does not exceed 10^ 5 .",
    "output": "For each test, output a single integer p ( 0 \u2264 p \u2264 n ) \u2014 denoting the number of operations in your solution. In each of the following p lines, output two space- separated integers \u2014 i and x . You do not need to minimize the number of operations. It can be proven that a solution always exists.",
    "note": "In the first test case, array a becomes [ 5, 5, 5, 5] after the operations. It is easy to see that [ 5, 5, 5, 5] is good. In the second test case, array a is already good. In the third test case, after performing the operations, array a becomes [ 10, 5, 350, 5, 10] , which is good. In the fourth test case, after performing the operations, array a becomes [ 60, 10, 20] , which is good.",
    "topics": [
      "constructive algorithms",
      "implementation",
      "number theory",
      "sortings"
    ],
    "id": "1762B"
  },
  {
    "title": "Divide and Conquer",
    "url": "https://codeforces.com/problemset/problem/1762/A",
    "history": "An array b is good if the sum of elements of b is even. You are given an array a consisting of n positive integers. In one operation, you can select an index i and change a_ i : = \u230aa_ i/ 2\u230b . ^ \u2020 Find the minimum number of operations ( possibly 0 ) needed to make a good. It can be proven that it is always possible to make a good. ^ \u2020 \u230a x \u230b denotes the floor function \u2014 the largest integer less than or equal to x . For example, \u230a 2. 7 \u230b = 2 , \u230a\u03c0\u230b = 3 and \u230a 5 \u230b = 5 .",
    "input": "Each test contains multiple test cases. The first line contains a single integer t ( 1 \u2264 t \u2264 1000 ) \u2014 the number of test cases. The description of the test cases follows. The first line of each test case contains a single integer n ( 1 \u2264 n \u2264 50 ) \u2014 the length of the array a . The second line of each test case contains n space- separated integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 6 ) \u2014 representing the array a . Do note that the sum of n over all test cases is not bounded.",
    "output": "For each test case, output the minimum number of operations needed to make a good.",
    "note": "In the first test case, array a is already good. In the second test case, we can perform on index 2 twice. After the first operation, array a becomes [ 7, 2] . After performing on index 2 again, a becomes [ 7, 1] , which is good. It can be proved that it is not possible to make a good in less number of operations. In the third test case, a becomes [ 0, 2, 4] if we perform the operation on index 1 once. As [ 0, 2, 4] is good, answer is 1 . In the fourth test case, we need to perform the operation on index 1 four times. After all operations, a becomes [ 0] . It can be proved that it is not possible to make a good in less number of operations.",
    "topics": [
      "greedy",
      "math",
      "number theory"
    ],
    "id": "1762A"
  },
  {
    "title": "All Possible Digits",
    "url": "https://codeforces.com/problemset/problem/1759/F",
    "history": "A positive number x of length n in base p ( 2 \u2264 p \u2264 10^ 9 ) is written on the blackboard. The number x is given as a sequence a_ 1, a_ 2, . . . , a_ n ( 0 \u2264 a_ i < p ) \u2014 the digits of x in order from left to right ( most significant to least significant) . Dmitry is very fond of all the digits of this number system, so he wants to see each of them at least once. In one operation, he can: take any number x written on the board, increase it by 1 , and write the new value x + 1 on the board. For example, p= 5 and x= 234_ 5 . Initially, the board contains the digits 2 , 3 and 4 ; Dmitry increases the number 234_ 5 by 1 and writes down the number 240_ 5 . On the board there are digits 0, 2, 3, 4 ; Dmitry increases the number 240_ 5 by 1 and writes down the number 241_ 5 . Now the board contains all the digits from 0 to 4 . Your task is to determine the minimum number of operations required to make all the digits from 0 to p- 1 appear on the board at least once.",
    "input": "The first line of the input contains a single integer t ( 1 \u2264 t \u2264 2 \u00b7 10^ 3 ) \u2014 the number of test cases. The descriptions of the input test cases follow. The first line of description of each test case contains two integers n ( 1 \u2264 n \u2264 100 ) and p ( 2 \u2264 p \u2264 10^ 9 ) \u2014 the length of the number and the base of the number system. The second line of the description of each test case contains n integers a_ 1, a_ 2, . . . , a_ n ( 0 \u2264 a_ i < p ) \u2014 digits of x in number system with base p It is guaranteed that the number x does not contain leading zeros ( that is, a_ 1> 0 ) .",
    "output": "For each test case print a single integer \u2014 the minimum number of operations required for Dmitry to get all the digits on the board from 0 to p- 1 . It can be shown that this always requires a finite number of operations.",
    "note": "",
    "topics": [
      "binary search",
      "data structures",
      "greedy",
      "math",
      "number theory"
    ],
    "id": "1759F"
  },
  {
    "title": "Make It Round",
    "url": "https://codeforces.com/problemset/problem/1759/D",
    "history": "Inflation has occurred in Berlandia, so the store needs to change the price of goods. The current price of good n is given. It is allowed to increase the price of the good by k times, with 1 \u2264 k \u2264 m , k is an integer. Output the roundest possible new price of the good. That is, the one that has the maximum number of zeros at the end. For example, the number 481000 is more round than the number 1000010 ( three zeros at the end of 481000 and only one at the end of 1000010) . If there are several possible variants, output the one in which the new price is maximal. If it is impossible to get a rounder price, output n \u00b7 m ( that is, the maximum possible price) .",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014the number of test cases in the test. Each test case consists of one line. This line contains two integers: n and m ( 1 \u2264 n, m \u2264 10^ 9 ) . Where n is the old price of the good, and the number m means that you can increase the price n no more than m times.",
    "output": "For each test case, output on a separate line the roundest integer of the form n \u00b7 k ( 1 \u2264 k \u2264 m , k \u2014 an integer) . If there are several possible variants, output the one in which the new price ( value n \u00b7 k ) is maximal. If it is impossible to get a more rounded price, output n \u00b7 m ( that is, the maximum possible price) .",
    "note": "In the first case n = 6 , m = 11 . We cannot get a number with two zeros or more at the end, because we need to increase the price 50 times, but 50 > m = 11 . The maximum price multiple of 10 would be 6 \u00b7 10 = 60 . In the second case n = 5 , m = 43 . The maximum price multiple of 100 would be 5 \u00b7 40 = 200 . In the third case, n = 13 , m = 5 . All possible new prices will not end in 0 , then you should output n \u00b7 m = 65 . In the fourth case, you should increase the price 15 times. In the fifth case, increase the price 12000 times.",
    "topics": [
      "brute force",
      "number theory"
    ],
    "id": "1759D"
  },
  {
    "title": "Almost All Multiples",
    "url": "https://codeforces.com/problemset/problem/1758/C",
    "history": "Given two integers n and x , a permutation ^ \u2020 p of length n is called funny if p_ i is a multiple of i for all 1 \u2264 i \u2264 n - 1 , p_ n = 1 , and p_ 1 = x . Find the lexicographically minimal ^ funny permutation, or report that no such permutation exists. ^ \u2020 A permutation of length n is an array consisting of each of the integers from 1 to n exactly once. ^ Let a and b be permutations of length n . Then a is lexicographically smaller than b if in the first position i where a and b differ, a_ i < b_ i . A permutation is lexicographically minimal if it is lexicographically smaller than all other permutations.",
    "input": "The input consists of multiple test cases. The first line contains an integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. The description of the test cases follows. The only line of each test case contains two integers n and x ( 2 \u2264 n \u2264 2 \u00b7 10^ 5 ; 1 < x \u2264 n ) . The sum of n across all test cases does not exceed 2 \u00b7 10^ 5 .",
    "output": "For each test case, if the answer exists, output n distinct integers p_ 1, p_ 2, . . . , p_ n ( 1 \u2264 p_ i \u2264 n ) \u2014 the lexicographically minimal funny permutation p . Otherwise, output - 1 .",
    "note": "In the first test case, the permutation [ 3, 2, 1] satisfies all the conditions: p_ 1= 3 , p_ 3= 1 , and: p_ 1= 3 is a multiple of 1 . p_ 2= 2 is a multiple of 2 . In the second test case, the permutation [ 2, 4, 3, 1] satisfies all the conditions: p_ 1= 2 , p_ 4= 1 , and: p_ 1= 2 is a multiple of 1 . p_ 2= 4 is a multiple of 2 . p_ 3= 3 is a multiple of 3 . We can show that these permutations are lexicographically minimal. No such permutations exist in the third test case.",
    "topics": [
      "greedy",
      "number theory"
    ],
    "id": "1758C"
  },
  {
    "title": "Factorial Divisibility",
    "url": "https://codeforces.com/problemset/problem/1753/B",
    "history": "You are given an integer x and an array of integers a_ 1, a_ 2, . . . , a_ n . You have to determine if the number a_ 1! + a_ 2! + . . . + a_ n! is divisible by x! . Here k! is a factorial of k \u2014 the product of all positive integers less than or equal to k . For example, 3! = 1 \u00b7 2 \u00b7 3 = 6 , and 5! = 1 \u00b7 2 \u00b7 3 \u00b7 4 \u00b7 5 = 120 .",
    "input": "The first line contains two integers n and x ( 1 \u2264 n \u2264 500 000 , 1 \u2264 x \u2264 500 000 ) . The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 x ) \u2014 elements of given array.",
    "output": "In the only line print \" Yes\" ( without quotes) if a_ 1! + a_ 2! + . . . + a_ n! is divisible by x! , and \" No\" ( without quotes) otherwise.",
    "note": "In the first example 3! + 2! + 2! + 2! + 3! + 3! = 6 + 2 + 2 + 2 + 6 + 6 = 24 . Number 24 is divisible by 4! = 24 . In the second example 3! + 2! + 2! + 2! + 2! + 2! + 1! + 1! = 18 , is divisible by 3! = 6 . In the third example 7! + 7! + 7! + 7! + 7! + 7! + 7! = 7 \u00b7 7! . It is easy to prove that this number is not divisible by 8! .",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "1753B"
  },
  {
    "title": "Count GCD",
    "url": "https://codeforces.com/problemset/problem/1750/D",
    "history": "You are given two integers n and m and an array a of n integers. For each 1 \u2264 i \u2264 n it holds that 1 \u2264 a_ i \u2264 m . Your task is to count the number of different arrays b of length n such that: 1 \u2264 b_ i \u2264 m for each 1 \u2264 i \u2264 n , and ( b_ 1, b_ 2, b_ 3, . . . , b_ i) = a_ i for each 1 \u2264 i \u2264 n . Here ( a_ 1, a_ 2, . . . , a_ i) denotes the greatest common divisor ( GCD) of integers a_ 1, a_ 2, . . . , a_ i . Since this number can be too large, print it modulo 998 244 353 .",
    "input": "Each test consist of multiple test cases. The first line contains a single integer t ( 1 \u2264 t \u2264 100 ) \u2014 the number of test cases. The description of test cases follows. The first line of each test case contains two integers n and m ( 1 \u2264 n \u2264 2 \u00b7 10^ 5 , 1 \u2264 m \u2264 10^ 9 ) \u2014 the length of the array a and the maximum possible value of the element. The second line of each test case contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 m ) \u2014 the elements of the array a . It is guaranteed that the sum of n across all test cases doesn' t exceed 2 \u00b7 10^ 5 .",
    "output": "For each test case, print a single integer \u2014 the number of different arrays satisfying the conditions above. Since this number can be large, print it modulo 998 244 353 .",
    "note": "In the first test case, the possible arrays b are: [ 4, 2, 1] ; [ 4, 2, 3] ; [ 4, 2, 5] . In the second test case, the only array satisfying the demands is [ 1, 1] . In the third test case, it can be proven no such array exists.",
    "topics": [
      "combinatorics",
      "math",
      "number theory"
    ],
    "id": "1750D"
  },
  {
    "title": "Counting Arrays",
    "url": "https://codeforces.com/problemset/problem/1749/D",
    "history": "Consider an array a of length n with elements numbered from 1 to n . It is possible to remove the i - th element of a if gcd( a_ i, i) = 1 , where gcd denotes the greatest common divisor. After an element is removed, the elements to the right are shifted to the left by one position. An array b with n integers such that 1 \u2264 b_ i \u2264 n - i + 1 is a removal sequence for the array a if it is possible to remove all elements of a , if you remove the b_ 1 - th element, then the b_ 2 - th, . . . , then the b_ n - th element. For example, let a = [ 42, 314] : [ 1, 1] is a removal sequence: when you remove the 1 - st element of the array, the condition gcd( 42, 1) = 1 holds, and the array becomes [ 314] ; when you remove the 1 - st element again, the condition gcd( 314, 1) = 1 holds, and the array becomes empty. [ 2, 1] is not a removal sequence: when you try to remove the 2 - nd element, the condition gcd( 314, 2) = 1 is false. An array is ambiguous if it has at least two removal sequences. For example, the array [ 1, 2, 5] is ambiguous: it has removal sequences [ 3, 1, 1] and [ 1, 2, 1] . The array [ 42, 314] is not ambiguous: the only removal sequence it has is [ 1, 1] . You are given two integers n and m . You have to calculate the number of ambiguous arrays a such that the length of a is from 1 to n and each a_ i is an integer from 1 to m .",
    "input": "The only line of the input contains two integers n and m ( 2 \u2264 n \u2264 3 \u00b7 10^ 5 ; 1 \u2264 m \u2264 10^ 12 ) .",
    "output": "Print one integer \u2014 the number of ambiguous arrays a such that the length of a is from 1 to n and each a_ i is an integer from 1 to m . Since the answer can be very large, print it modulo 998244353 .",
    "note": "",
    "topics": [
      "combinatorics",
      "dp",
      "math",
      "number theory"
    ],
    "id": "1749D"
  },
  {
    "title": "ConstructOR ",
    "url": "https://codeforces.com/problemset/problem/1748/D",
    "history": "You are given three integers a , b , and d . Your task is to find any integer x which satisfies all of the following conditions, or determine that no such integers exist: 0 \u2264 x 2^ 60 ; a| x is divisible by d ; b| x is divisible by d . Here, | denotes the bitwise OR operation.",
    "input": "Each test contains multiple test cases. The first line of input contains one integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. Each test case consists of one line, containing three integers a , b , and d ( 1 \u2264 a, b, d 2^ 30 ) .",
    "output": "For each test case print one integer. If there exists an integer x which satisfies all of the conditions from the statement, print x . Otherwise, print - 1 . If there are multiple solutions, you may print any of them.",
    "note": "In the first test case, x= 18 is one of the possible solutions, since 39| 18= 55 and 12| 18= 30 , both of which are multiples of d= 5 . In the second test case, x= 14 is one of the possible solutions, since 8| 14= 6| 14= 14 , which is a multiple of d= 14 . In the third and fourth test cases, we can show that there are no solutions.",
    "topics": [
      "bitmasks",
      "chinese remainder theorem",
      "combinatorics",
      "constructive algorithms",
      "math",
      "number theory"
    ],
    "id": "1748D"
  },
  {
    "title": "Divisible Numbers (hard version)",
    "url": "https://codeforces.com/problemset/problem/1744/E2",
    "history": "This is an hard version of the problem. The only difference between an easy and a hard version is the constraints on a , b , c and d . You are given 4 positive integers a , b , c , d with a < c and b < d . Find any pair of numbers x and y that satisfies the following conditions: a < x \u2264 c , b < y \u2264 d , x \u00b7 y is divisible by a \u00b7 b . Note that required x and y may not exist.",
    "input": "The first line of the input contains a single integer t ( 1 \u2264 t \u2264 10 ) , the number of test cases. The descriptions of the test cases follow. The only line of each test case contains four integers a , b , c and d ( 1 \u2264 a < c \u2264 10^ 9 , 1 \u2264 b < d \u2264 10^ 9 ) .",
    "output": "For each test case print a pair of numbers a < x \u2264 c and b < y \u2264 d such that x \u00b7 y is divisible by a \u00b7 b . If there are multiple answers, print any of them. If there is no such pair of numbers, then print - 1 - 1.",
    "note": "",
    "topics": [
      "brute force",
      "math",
      "number theory"
    ],
    "id": "1744E2"
  },
  {
    "title": "Divisible Numbers (easy version)",
    "url": "https://codeforces.com/problemset/problem/1744/E1",
    "history": "This is an easy version of the problem. The only difference between an easy and a hard version is the constraints on a , b , c and d . You are given 4 positive integers a , b , c , d with a < c and b < d . Find any pair of numbers x and y that satisfies the following conditions: a < x \u2264 c , b < y \u2264 d , x \u00b7 y is divisible by a \u00b7 b . Note that required x and y may not exist.",
    "input": "The first line of the input contains a single integer t ( 1 \u2264 t \u2264 10 ) , the number of test cases. The descriptions of the test cases follow. The only line of each test case contains four integers a , b , c and d ( 1 \u2264 a < c \u2264 10^ 5 , 1 \u2264 b < d \u2264 10^ 5 ) .",
    "output": "For each test case print a pair of numbers a < x \u2264 c and b < y \u2264 d such that x \u00b7 y is divisible by a \u00b7 b . If there are multiple answers, print any of them. If there is no such pair of numbers, then print - 1 - 1.",
    "note": "",
    "topics": [
      "brute force",
      "math",
      "number theory"
    ],
    "id": "1744E1"
  },
  {
    "title": "Coprime",
    "url": "https://codeforces.com/problemset/problem/1742/D",
    "history": "Given an array of n positive integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 1000 ) . Find the maximum value of i + j such that a_ i and a_ j are coprime, ^ \u2020 or - 1 if no such i , j exist. For example consider the array [ 1, 3, 5, 2, 4, 7, 7] . The maximum value of i + j that can be obtained is 5 + 7 , since a_ 5 = 4 and a_ 7 = 7 are coprime. ^ \u2020 Two integers p and q are coprime if the only positive integer that is a divisor of both of them is 1 ( that is, their greatest common divisor is 1 ) .",
    "input": "The input consists of multiple test cases. The first line contains an integer t ( 1 \u2264 t \u2264 10 ) \u2014 the number of test cases. The description of the test cases follows. The first line of each test case contains an integer n ( 2 \u2264 n \u2264 2\u00b710^ 5 ) \u2014 the length of the array. The following line contains n space- separated positive integers a_ 1 , a_ 2 , . . . , a_ n ( 1 \u2264 a_ i \u2264 1000 ) \u2014 the elements of the array. It is guaranteed that the sum of n over all test cases does not exceed 2\u00b710^ 5 .",
    "output": "For each test case, output a single integer \u2014 the maximum value of i + j such that i and j satisfy the condition that a_ i and a_ j are coprime, or output - 1 in case no i , j satisfy the condition.",
    "note": "For the first test case, we can choose i = j = 3 , with sum of indices equal to 6 , since 1 and 1 are coprime. For the second test case, we can choose i = 7 and j = 5 , with sum of indices equal to 7 + 5 = 12 , since 7 and 4 are coprime.",
    "topics": [
      "brute force",
      "greedy",
      "number theory"
    ],
    "id": "1742D"
  },
  {
    "title": "Arranging Crystal Balls",
    "url": "https://codeforces.com/problemset/problem/1740/I",
    "history": "In the world of Compfestnesia, Pak Chanek discovers a secret underground dungeon. Inside it, there is a treasure chest that is surrounded by n statues that are arranged in a circular manner. The statues are numbered from 0 to n- 1 with statue i being to the left of statue i+ 1 and statue n- 1 being to the left of statue 0 . Pak Chanek observes that each statue is holding a crystal ball with an integer between 0 and m- 1 inclusive. Let' s say the integer in the crystal ball of statue i is a_ i . The dungeon provides instructions that every integer in the crystal balls must be 0 in order to open the treasure chest. To achieve that, Pak Chanek is given an integer k , and he can do zero or more operations. In a single operation, Pak Chanek does the following: Choose exactly k consecutive statues. In other words, choose the statues p, ( p+ 1) n, ( p+ 2) n, ( p+ 3) n, . . . , ( p+ k- 1) n for some chosen index p . Do one of the following: For all chosen statues, change their values of a_ i into ( a_ i+ 1) m . For all chosen statues, change their values of a_ i into ( a_ i- 1) m . Help Pak Chanek find the minimum possible number of operations to open the treasure chest.",
    "input": "The first line contains three integers n , m , and k ( 2 \u2264 n, m \u2264 10^ 6 , nm \u2264 2 \u00b7 10^ 6 , 1 \u2264 k < n ) \u2014 the number of statues, the bound of the integers in the crystal balls, and the number of statues that can be operated in a single operation. The second line contains n integers a_ 0, a_ 1, . . . , a_ n- 1 ( 0 \u2264 a_ i < m ) \u2014 the integers in the crystal balls.",
    "output": "If it is possible to perform zero or more operations so that a_ 0= a_ 1= . . . = a_ n- 1= 0 , output the minimum number of operations required. Otherwise, output - 1 .",
    "note": "In the first example, Pak Chanek can do the following operations: Do the a_ i : = ( a_ i- 1) m operation 3 times for statues 1 , 2 , and 3 . Now a= [ 8, 7, 1, 2, 0] . Do the a_ i : = ( a_ i- 1) m operation 1 time for statues 3 , 4 , and 0 . Now a= [ 7, 7, 1, 1, 8] . Do the a_ i : = ( a_ i+ 1) m operation 2 times for statues 4 , 0 , and 1 . Now a= [ 0, 0, 1, 1, 1] . Do the a_ i : = ( a_ i- 1) m operation 1 time for statues 2 , 3 , and 4 . Now a= [ 0, 0, 0, 0, 0] .",
    "topics": [
      "data structures",
      "divide and conquer",
      "divide and conquer",
      "dp",
      "geometry",
      "graphs",
      "number theory"
    ],
    "id": "1740I"
  },
  {
    "title": "Factorise N+M",
    "url": "https://codeforces.com/problemset/problem/1740/A",
    "history": "Pak Chanek has a prime number ^ \u2020 n . Find a prime number m such that n + m is not prime. ^ \u2020 A prime number is a number with exactly 2 factors. The first few prime numbers are 2, 3, 5, 7, 11, 13, . . . . In particular, 1 is not a prime number.",
    "input": "Each test contains multiple test cases. The first line contains an integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. The following lines contain the description of each test case. The only line of each test case contains a prime number n ( 2 \u2264 n \u2264 10^ 5 ) .",
    "output": "For each test case, output a line containing a prime number m ( 2 \u2264 m \u2264 10^ 5 ) such that n + m is not prime. It can be proven that under the constraints of the problem, such m always exists. If there are multiple solutions, you can output any of them.",
    "note": "In the first test case, m = 2 , which is prime, and n + m = 7 + 2 = 9 , which is not prime. In the second test case, m = 7 , which is prime, and n + m = 2 + 7 = 9 , which is not prime. In the third test case, m = 47837 , which is prime, and n + m = 75619 + 47837 = 123456 , which is not prime.",
    "topics": [
      "constructive algorithms",
      "number theory"
    ],
    "id": "1740A"
  },
  {
    "title": "Ela and Prime GCD",
    "url": "https://codeforces.com/problemset/problem/1737/F",
    "history": "After a long, tough, but fruitful day at DTL, Ela goes home happily. She entertains herself by solving Competitive Programming problems. She prefers short statements, because she already read too many long papers and documentation at work. The problem of the day reads: You are given an integer c . Suppose that c has n divisors. You have to find a sequence with n - 1 integers [ a_ 1, a_ 2, . . . a_ n - 1] , which satisfies the following conditions: Each element is strictly greater than 1 . Each element is a divisor of c . All elements are distinct. For all 1 \u2264 i < n - 1 , ( a_ i, a_ i + 1) is a prime number. In this problem, because c can be too big, the result of prime factorization of c is given instead. Note that ( x, y) denotes the greatest common divisor ( GCD) of integers x and y and a prime number is a positive integer which has exactly 2 divisors.",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 10^ 4 ) - the number of test cases. The first line of each test case contains one integer m ( 1 \u2264 m \u2264 16 ) - the number of prime factor of c . The second line of each test case contains m integers b_ 1, b_ 2, . . . , b_ m ( 1 \u2264 b_ i < 2^ 20 ) \u2014 exponents of corresponding prime factors of c , so that c = p_ 1^ b_ 1\u00b7 p_ 2^ b_ 2\u00b7. . . \u00b7 p_ m^ b_ m and n = ( b_ 1 + 1) ( b_ 2 + 1) . . . ( b_ m + 1) hold. p_ i is the i - th smallest prime number. It is guaranteed that the sum of n \u00b7 m over all test cases does not exceed 2^ 20 .",
    "output": "Print the answer for each test case, one per line. If there is no sequence for the given c , print - 1 . Otherwise, print n - 1 lines. In i - th line, print m space- separated integers. The j - th integer of i - th line is equal to the exponent of j - th prime number from a_ i . If there are multiple answers, print any of them.",
    "note": "In each test case, the values of c are 6 , 2 , 30 , 16 , and 12 in that order. In the first test case, 1 , 2 , 3 , 6 are divisors of 6 . Here, sequences [ 2, 6, 3] and [ 3, 6, 2] can be answer. Permutation [ 3, 2, 6] is invalid because ( a_ 1, a_ 2) = 1 is not a prime number. In the forth test case, 1 , 2 , 4 , 8 , 16 are divisors of 16 . Among the permutation of sequence [ 2, 4, 8, 16] , no valid answer exist.",
    "topics": [
      "constructive algorithms",
      "math",
      "number theory"
    ],
    "id": "1737F"
  },
  {
    "title": "Playing with GCD",
    "url": "https://codeforces.com/problemset/problem/1736/B",
    "history": "You are given an integer array a of length n . Does there exist an array b consisting of n+ 1 positive integers such that a_ i= ( b_ i, b_ i+ 1) for all i ( 1 \u2264 i \u2264 n ) ? Note that ( x, y) denotes the greatest common divisor ( GCD) of integers x and y .",
    "input": "Each test contains multiple test cases. The first line contains the number of test cases t ( 1 \u2264 t \u2264 10^ 5 ) . Description of the test cases follows. The first line of each test case contains an integer n ( 1 \u2264 n \u2264 10^ 5 ) \u2014 the length of the array a . The second line of each test case contains n space- separated integers a_ 1, a_ 2, . . . , a_ n representing the array a ( 1 \u2264 a_ i \u2264 10^ 4 ) . It is guaranteed that the sum of n over all test cases does not exceed 10^ 5 .",
    "output": "For each test case, output \" YES\" if such b exists, otherwise output \" NO\" . You can print each letter in any case ( upper or lower) .",
    "note": "In the first test case, we can take b= [ 343, 343] . In the second test case, one possibility for b is b= [ 12, 8, 6] . In the third test case, it can be proved that there does not exist any array b that fulfills all the conditions.",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "1736B"
  },
  {
    "title": "Rectangular Congruence",
    "url": "https://codeforces.com/problemset/problem/1734/E",
    "history": "You are given a prime number n , and an array of n integers b_ 1, b_ 2, . . . , b_ n , where 0 \u2264 b_ i < n for each 1 \u2264 i \u2264 n . You have to find a matrix a of size n \u00d7 n such that all of the following requirements hold: 0 \u2264 a_ i, j < n for all 1 \u2264 i, j \u2264 n . a_ r_ 1, c_ 1 + a_ r_ 2, c_ 2\u2261\u0338a_ r_ 1, c_ 2 + a_ r_ 2, c_ 1 n for all positive integers r_ 1 , r_ 2 , c_ 1 , and c_ 2 such that 1 \u2264 r_ 1 < r_ 2 \u2264 n and 1 \u2264 c_ 1 < c_ 2 \u2264 n . a_ i, i = b_ i for all 1 \u2264 i \u2264 n . Here x \u2261\u0338y m denotes that x and y give different remainders when divided by m . If there are multiple solutions, output any. It can be shown that such a matrix always exists under the given constraints.",
    "input": "The first line contains a single positive integer n ( 2 \u2264 n < 350 ) . The second line contains n integers b_ 1, b_ 2, . . . , b_ n ( 0 \u2264 b_ i < n ) \u2014 the required values on the main diagonal of the matrix. It is guaranteed that n is prime.",
    "output": "Print n lines. On the i - th line, print n integers a_ i, 1, a_ i, 2, . . . , a_ i, n , each separated with a space. If there are multiple solutions, output any.",
    "note": "In the first example, the answer is valid because all entries are non- negative integers less than n = 2 , and a_ 1, 1+ a_ 2, 2\u2261\u0338a_ 1, 2+ a_ 2, 1 2 ( because a_ 1, 1+ a_ 2, 2 = 0 + 0 \u2261 0 2 and a_ 1, 2+ a_ 2, 1 = 1 + 0 \u2261 1 2 ) . Moreover, the values on the main diagonals are equal to 0, 0 as required. In the second example, the answer is correct because all entries are non- negative integers less than n = 3 , and the second condition is satisfied for all quadruplets ( r_ 1, r_ 2, c_ 1, c_ 2) . For example: When r_ 1= 1 , r_ 2= 2 , c_ 1= 1 and c_ 2= 2 , a_ 1, 1+ a_ 2, 2\u2261\u0338a_ 1, 2+ a_ 2, 1 3 because a_ 1, 1+ a_ 2, 2 = 1 + 1 \u2261 2 3 and a_ 1, 2+ a_ 2, 1 = 2 + 1 \u2261 0 3 . When r_ 1= 2 , r_ 2= 3 , c_ 1= 1 , and c_ 2= 3 , a_ 2, 1+ a_ 3, 3\u2261\u0338a_ 2, 3+ a_ 3, 1 3 because a_ 2, 1+ a_ 3, 3 = 1 + 1 \u2261 2 3 and a_ 2, 3+ a_ 3, 1 = 0 + 1 \u2261 1 3 . Moreover, the values on the main diagonal are equal to 1, 1, 1 as required.",
    "topics": [
      "constructive algorithms",
      "number theory"
    ],
    "id": "1734E"
  },
  {
    "title": "Location",
    "url": "https://codeforces.com/problemset/problem/1732/E",
    "history": "You are given two arrays of integers a_ 1, a_ 2, . . . , a_ n and b_ 1, b_ 2, . . . , b_ n . You need to handle q queries of the following two types: 1 l r x : assign a_ i : = x for all l \u2264 i \u2264 r ; 2 l r : find the minimum value of the following expression among all l \u2264 i \u2264 r : lcm( a_ i, b_ i) / ( a_ i, b_ i) . In this problem ( x, y) denotes the greatest common divisor of x and y , and lcm( x, y) denotes the least common multiple of x and y .",
    "input": "The first line contains two integers n and q ( 1 \u2264 n, q \u2264 5 \u00b7 10^ 4 ) \u2014 the number of numbers in the arrays a and b and the number of queries. The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 5 \u00b7 10^ 4 ) \u2014 the elements of the array a . The third line contains n integers b_ 1, b_ 2, . . . , b_ n ( 1 \u2264 b_ i \u2264 5 \u00b7 10^ 4 ) \u2014 the elements of the array b . Then q lines follow, j - th of which starts with an integer t_ j ( 1 \u2264 t_ j \u2264 2 ) and means that the j - th query has type t_ j . If t_ j = 1 , it is followed by three integers l_ j , r_ j , and x_ j ( 1 \u2264 l_ j \u2264 r_ j \u2264 n , 1 \u2264 x_ j \u2264 5 \u00b7 10^ 4 ) . If t_ j = 2 , it is followed by two integers l_ j and r_ j ( 1 \u2264 l_ j \u2264 r_ j \u2264 n ) . It is guaranteed that there is at least one query of type 2 .",
    "output": "For each query of the second type, output the minimum value of the expression.",
    "note": "In the first example: For the first query we can choose i = 4 . So the value is lcm( 4, 4) / ( 4, 4) = 4/ 4 = 1 . After the second query the array a = [ 6, 10, 15, 4, 9, 25, 9, 9, 9, 9] . For the third query we can choose i = 9 . So the value is lcm( 9, 18) / ( 9, 18) = 18/ 9 = 2 . In the second: For the first query we can choose i = 4 . So the value is lcm( 1, 5) / ( 1, 5) = 5/ 1 = 5 . After the second query the array a = [ 10, 18, 18, 5] . After the third query the array a = [ 10, 10, 18, 5] . For the fourth query we can choose i = 2 . So the value is lcm( 10, 12) / ( 10, 12) = 60/ 2 = 30 .",
    "topics": [
      "data structures",
      "dp",
      "math",
      "number theory"
    ],
    "id": "1732E"
  },
  {
    "title": "Balance (Hard version)",
    "url": "https://codeforces.com/problemset/problem/1732/D2",
    "history": "This is the hard version of the problem. The only difference is that in this version there are remove queries. Initially you have a set containing one element \u2014 0 . You need to handle q queries of the following types: + x \u2014 add the integer x to the set. It is guaranteed that this integer is not contained in the set; - x \u2014 remove the integer x from the set. It is guaranteed that this integer is contained in the set; ? k \u2014 find the k- mex of the set. In our problem, we define the k- mex of a set of integers as the smallest non- negative integer x that is divisible by k and which is not contained in the set.",
    "input": "The first line contains an integer q ( 1 \u2264 q \u2264 2 \u00b7 10^ 5 ) \u2014 the number of queries. The following q lines describe the queries. An addition query of integer x is given in the format + x ( 1 \u2264 x \u2264 10^ 18 ) . It is guaranteed that x is not contained in the set. A remove query of integer x is given in the format - x ( 1 \u2264 x \u2264 10^ 18 ) . It is guaranteed that x is contained in the set. A search query of k- mex is given in the format ? k ( 1 \u2264 k \u2264 10^ 18 ) . It is guaranteed that there is at least one query of type ? .",
    "output": "For each query of type ? output a single integer \u2014 the k- mex of the set.",
    "note": "In the first example: After the first and second queries, the set will contain elements { 0, 1, 2} . The smallest non- negative number that is divisible by 1 and is not in the set is 3 . After the fourth query, the set will contain the elements { 0, 1, 2, 4} . The smallest non- negative number that is divisible by 2 and is not in the set is 6 . In the second example: Initially, the set contains only the element { 0} . After adding an integer 100 the set contains elements { 0, 100} . 100- mex of the set is 200 . After adding an integer 200 the set contains elements { 0, 100, 200} . 100- mex of the set 300 . After removing an integer 100 the set contains elements { 0, 200} . 100- mex of the set is 100 . After adding an integer 50 the set contains elements { 0, 50, 200} . 50- mex of the set is 100 . After removing an integer 50 the set contains elements { 0, 200} . 100- mex of the set is 50 .",
    "topics": [
      "brute force",
      "data structures",
      "number theory"
    ],
    "id": "1732D2"
  },
  {
    "title": "Balance (Easy version)",
    "url": "https://codeforces.com/problemset/problem/1732/D1",
    "history": "This is the easy version of the problem. The only difference is that in this version there are no \" remove\" queries. Initially you have a set containing one element \u2014 0 . You need to handle q queries of the following types: + x \u2014 add the integer x to the set. It is guaranteed that this integer is not contained in the set; ? k \u2014 find the k- mex of the set. In our problem, we define the k- mex of a set of integers as the smallest non- negative integer x that is divisible by k and which is not contained in the set.",
    "input": "The first line contains an integer q ( 1 \u2264 q \u2264 2 \u00b7 10^ 5 ) \u2014 the number of queries. The following q lines describe the queries. An addition query of integer x is given in the format + x ( 1 \u2264 x \u2264 10^ 18 ) . It is guaranteed that x was not contained in the set. A search query of k- mex is given in the format ? k ( 1 \u2264 k \u2264 10^ 18 ) . It is guaranteed that there will be at least one query of type ? .",
    "output": "For each query of type ? output a single integer \u2014 the k- mex of the set.",
    "note": "In the first example: After the first and second queries, the set will contain elements { 0, 1, 2} . The smallest non- negative number that is divisible by 1 and is not contained in the set is 3 . After the fourth query, the set will contain the elements { 0, 1, 2, 4} . The smallest non- negative number that is divisible by 2 and is not contained in the set is 6 . In the second example: Initially, the set contains only the element { 0} . After adding an integer 100 the set contains elements { 0, 100} . 100- mex of the set is 200 . After adding an integer 200 the set contains elements { 0, 100, 200} . 100- mex of the set is 300 . After adding an integer 50 the set contains elements { 0, 50, 100, 200} . 50- mex of the set is 150 .",
    "topics": [
      "brute force",
      "data structures",
      "implementation",
      "number theory"
    ],
    "id": "1732D1"
  },
  {
    "title": "Bestie",
    "url": "https://codeforces.com/problemset/problem/1732/A",
    "history": "You are given an array a consisting of n integers a_ 1, a_ 2, . . . , a_ n . Friends asked you to make the greatest common divisor ( GCD) of all numbers in the array equal to 1 . In one operation, you can do the following: Select an arbitrary index in the array 1 \u2264 i \u2264 n ; Make a_ i = ( a_ i, i) , where ( x, y) denotes the GCD of integers x and y . The cost of such an operation is n - i + 1 . You need to find the minimum total cost of operations we need to perform so that the GCD of the all array numbers becomes equal to 1 .",
    "input": "Each test consists of multiple test cases. The first line contains an integer t ( 1 \u2264 t \u2264 5 000 ) \u2014 the number of test cases. The description of test cases follows. The first line of each test case contains a single integer n ( 1 \u2264 n \u2264 20 ) \u2014 the length of the array. The second line of each test case contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 9 ) \u2014 the elements of the array.",
    "output": "For each test case, output a single integer \u2014 the minimum total cost of operations that will need to be performed so that the GCD of all numbers in the array becomes equal to 1 . We can show that it' s always possible to do so.",
    "note": "In the first test case, the GCD of the entire array is already equal to 1 , so there is no need to perform operations. In the second test case, select i = 1 . After this operation, a_ 1 = ( 2, 1) = 1 . The cost of this operation is 1 . In the third test case, you can select i = 1 , after that the array a will be equal to [ 1, 4] . The GCD of this array is 1 , and the total cost is 2 . In the fourth test case, you can select i = 2 , after that the array a will be equal to [ 3, 2, 9] . The GCD of this array is 1 , and the total cost is 2 . In the sixth test case, you can select i = 4 and i = 5 , after that the array a will be equal to [ 120, 60, 80, 4, 5] . The GCD of this array is 1 , and the total cost is 3 .",
    "topics": [
      "brute force",
      "combinatorics",
      "constructive algorithms",
      "implementation",
      "math",
      "number theory"
    ],
    "id": "1732A"
  },
  {
    "title": "Graph Cost",
    "url": "https://codeforces.com/problemset/problem/1731/E",
    "history": "You are given an initially empty undirected graph with n nodes, numbered from 1 to n ( i. e. n nodes and 0 edges) . You want to add m edges to the graph, so the graph won' t contain any self- loop or multiple edges. If an edge connecting two nodes u and v is added, its weight must be equal to the greatest common divisor of u and v , i. e. ( u, v) . In order to add edges to the graph, you can repeat the following process any number of times ( possibly zero) : choose an integer k \u2265 1 ; add exactly k edges to the graph, each having a weight equal to k + 1 . Adding these k edges costs k + 1 in total. Note that you can' t create self- loops or multiple edges. Also, if you can' t add k edges of weight k + 1 , you can' t choose such k . For example, if you can add 5 more edges to the graph of weight 6 , you may add them, and it will cost 6 for the whole pack of 5 edges. But if you can only add 4 edges of weight 6 to the graph, you can' t perform this operation for k = 5 . Given two integers n and m , find the minimum total cost to form a graph of n vertices and exactly m edges using the operation above. If such a graph can' t be constructed, output - 1 . Note that the final graph may consist of several connected components.",
    "input": "Each test contains multiple test cases. The first line contains the number of test cases t ( 1 \u2264 t \u2264 10^ 4 ) . Description of the test cases follows. The first line of each test case contains two integers n and m ( 2 \u2264 n \u2264 10^ 6 ; 1 \u2264 m \u2264n( n- 1) / 2 ) . It is guaranteed that the sum of n over all test cases does not exceed 10^ 6 .",
    "output": "For each test case, print the minimum cost to build the graph, or - 1 if you can' t build such a graph.",
    "note": "In the first test case, we can add an edge between the vertices 2 and 4 with = 2 . This is the only possible way to add 1 edge that will cost 2 . In the second test case, there is no way to add 10 edges, so the answer is - 1 . In the third test case, we can add the following edges: k = 1 : edge of weight 2 between vertices 2 and 4 ( ( 2, 4) = 2 ) . Cost: 2 ; k = 1 : edge of weight 2 between vertices 4 and 6 ( ( 4, 6) = 2 ) . Cost: 2 ; k = 2 : edges of weight 3 : ( 3, 6) and ( 3, 9) ( ( 3, 6) = ( 3, 9) = 3 ) . Cost: 3 . As a result, we added 1 + 1 + 2 = 4 edges with total cost 2 + 2 + 3 = 7 , which is the minimal possible cost.",
    "topics": [
      "dp",
      "greedy",
      "math",
      "number theory"
    ],
    "id": "1731E"
  },
  {
    "title": "Even Subarrays",
    "url": "https://codeforces.com/problemset/problem/1731/C",
    "history": "You are given an integer array a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 n ) . Find the number of subarrays of a whose XOR has an even number of divisors. In other words, find all pairs of indices ( i, j) ( i \u2264 j ) such that a_ i \u2295 a_ i + 1\u2295. . . \u2295 a_ j has an even number of divisors. For example, numbers 2 , 3 , 5 or 6 have an even number of divisors, while 1 and 4 \u2014 odd. Consider that 0 has an odd number of divisors in this task. Here XOR ( or \u2295 ) denotes the bitwise XOR operation. Print the number of subarrays but multiplied by 2022. . . Okay, let' s stop. Just print the actual answer.",
    "input": "Each test contains multiple test cases. The first line contains the number of test cases t ( 1 \u2264 t \u2264 10^ 4 ) . Description of the test cases follows. The first line of each test case contains a single integer n ( 2 \u2264 n \u2264 2 \u00b7 10^ 5 ) \u2014 the length of the array a . The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 n ) . It is guaranteed that the sum of n over all test cases does not exceed 2 \u00b7 10^ 5 .",
    "output": "For each test case, print the number of subarrays, whose XOR has an even number of divisors.",
    "note": "In the first test case, there are 4 subarrays whose XOR has an even number of divisors: [ 3] , [ 3, 1] , [ 1, 2] , [ 2] . In the second test case, there are 11 subarrays whose XOR has an even number of divisors: [ 4, 2] , [ 4, 2, 1] , [ 4, 2, 1, 5] , [ 2] , [ 2, 1] , [ 2, 1, 5] , [ 2, 1, 5, 3] , [ 1, 5, 3] , [ 5] , [ 5, 3] , [ 3] . In the third test case, there is no subarray whose XOR has an even number of divisors since XOR of any subarray is either 4 or 0 .",
    "topics": [
      "bitmasks",
      "brute force",
      "hashing",
      "math",
      "number theory"
    ],
    "id": "1731C"
  },
  {
    "title": "Maximums and Minimums",
    "url": "https://codeforces.com/problemset/problem/1730/E",
    "history": "You are given an array a_ 1, a_ 2, . . . , a_ n of positive integers. Find the number of pairs of indices ( l, r) , where 1 \u2264 l \u2264 r \u2264 n , that pass the check. The check is performed in the following manner: The minimum and maximum numbers are found among a_ l, a_ l+ 1, . . . , a_ r . The check is passed if the maximum number is divisible by the minimum number.",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 10 ) \u2014 the number of test cases. Then the test cases follow. Each test case consists of two lines. The first line contains a single integer n ( 1 \u2264 n \u2264 5 \u00b7 10^ 5 ) \u2014 the size of the array. The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 6 ) . It is guaranteed that the sum of n over all test cases does not exceed 5 \u00b7 10^ 5 .",
    "output": "For each test case, print a single integer \u2014 the number of pairs of indices that pass the check.",
    "note": "Below x | y denotes that y is divisible by x . In the first test case, there is one pair ( 1, 1) , the maximum for this pair is 1 , the minimum is also 1 , 1 | 1 , so the check is passed, and the answer is 1 . In the second test case, there are 3 segments: ( 1, 1) : the maximum is 2 , the minimum is 2 , 2 | 2 , so the check is passed. ( 1, 2) : the maximum is 4 , the minimum is 2 , 2 | 4 , so the check is passed. ( 2, 2) : the maximum is 4 , the minimum is 4 , 4 | 4 , so the check is passed. In the third test case, there are 3 segments: ( 1, 1) : the maximum is 2 , the minimum is 2 , 2 | 2 , so the check is passed. ( 1, 2) : the maximum is 3 , the minimum is 2 , 3 isn' t divisible by 2 , so the check is failed. ( 2, 2) : the maximum is 3 , the minimum is 3 , 3 | 3 , so the check is passed.",
    "topics": [
      "combinatorics",
      "data structures",
      "divide and conquer",
      "number theory"
    ],
    "id": "1730E"
  },
  {
    "title": "Red-Black Pepper",
    "url": "https://codeforces.com/problemset/problem/1728/E",
    "history": "Monocarp is going to host a party for his friends. He prepared n dishes and is about to serve them. First, he has to add some powdered pepper to each of them \u2014 otherwise, the dishes will be pretty tasteless. The i - th dish has two values a_ i and b_ i \u2014 its tastiness with red pepper added or black pepper added, respectively. Monocarp won' t add both peppers to any dish, won' t add any pepper multiple times, and won' t leave any dish without the pepper added. Before adding the pepper, Monocarp should first purchase the said pepper in some shop. There are m shops in his local area. The j - th of them has packages of red pepper sufficient for x_ j servings and packages of black pepper sufficient for y_ j servings. Monocarp goes to exactly one shop, purchases multiple ( possibly, zero) packages of each pepper in such a way that each dish will get the pepper added once, and no pepper is left. More formally, if he purchases x red pepper packages and y black pepper packages, then x and y should be non- negative and x \u00b7 x_ j + y \u00b7 y_ j should be equal to n . For each shop, determine the maximum total tastiness of the dishes after Monocarp buys pepper packages only in this shop and adds the pepper to the dishes. If it' s impossible to purchase the packages in the said way, print - 1.",
    "input": "The first line contains a single integer n ( 1 \u2264 n \u2264 3 \u00b7 10^ 5 ) \u2014 the number of dishes. The i - th of the next n lines contains two integers a_ i and b_ i ( 1 \u2264 a_ i, b_ i \u2264 10^ 9 ) \u2014 the tastiness of the i - th dish with red pepper added or black pepper added, respectively. The next line contains a single integer m ( 1 \u2264 m \u2264 3 \u00b7 10^ 5 ) \u2014 the number of shops. The j - th of the next m lines contains two integers x_ j and y_ j ( 1 \u2264 x_ j, y_ j \u2264 n ) \u2014 the number of servings the red and the black pepper packages are sufficient for in the j - th shop, respectively.",
    "output": "Print m integers. For each shop, print the maximum total tastiness of the dishes after Monocarp buys pepper packages only in this shop and adds the pepper to the dishes. If it' s impossible to purchase the packages so that each dish will get the pepper added once and no pepper is left, print - 1.",
    "note": "Consider the first example. In the first shop, Monocarp can only buy 0 red pepper packages and 1 black pepper package. Black pepper added to all dishes will sum up to 10 + 50 + 2 = 62 . In the second shop, Monocarp can buy any number of red and black pepper packages: 0 and 3 , 1 and 2 , 2 and 1 or 3 and 0 . The optimal choice turns out to be either 1 and 2 or 2 and 1 . Monocarp can add black pepper to the first dish, red pepper to the second dish and any pepper to the third dish, the total is 10 + 100 + 2 = 112 . In the third shop, Monocarp can only buy 1 red pepper package and 0 black pepper packages. Red pepper added to all dishes will sum up to 5 + 100 + 2 = 107 . In the fourth shop, Monocarp can only buy an even total number of packages. Since n is odd, it' s impossible to get exactly n packages. Thus, the answer is - 1 .",
    "topics": [
      "brute force",
      "data structures",
      "greedy",
      "math",
      "number theory"
    ],
    "id": "1728E"
  },
  {
    "title": "Electrical Efficiency",
    "url": "https://codeforces.com/problemset/problem/1725/E",
    "history": "In the country of Dengkleknesia, there are N factories numbered from 1 to N . Factory i has an electrical coefficient of A_ i . There are also N- 1 power lines with the j - th power line connecting factory U_ j and factory V_ j . It can be guaranteed that each factory in Dengkleknesia is connected to all other factories in Dengkleknesia through one or more power lines. In other words, the collection of factories forms a tree. Each pair of different factories in Dengkleknesia can use one or more existing power lines to transfer electricity to each other. However, each power line needs to be turned on first so that electricity can pass through it. Define f( x, y, z) as the minimum number of power lines that need to be turned on so that factory x can make electrical transfers to factory y and factory z . Also define g( x, y, z) as the number of distinct prime factors of GCD( A_ x, A_ y, A_ z) . To measure the electrical efficiency, you must find the sum of f( x, y, z) \u00d7 g( x, y, z) for all combinations of ( x, y, z) such that 1 \u2264 x < y < z \u2264 N . Because the answer can be very large, you just need to output the answer modulo 998 244 353 . Note: GCD( k_ 1, k_ 2, k_ 3) is the greatest common divisor of k_ 1 , k_ 2 , and k_ 3 , which is the biggest integer that simultaneously divides k_ 1 , k_ 2 , and k_ 3 .",
    "input": "The first line contains a single integer N ( 1 \u2264 N \u2264 2 \u00b7 10^ 5 ) \u2014 the number of factories in Dengkleknesia. The second line contains N integers A_ 1, A_ 2, . . . , A_ N ( 1 \u2264 A_ i \u2264 2 \u00b7 10^ 5 ) \u2014 the electrical coefficients of the factories. The j - th of the next N- 1 lines contains two integers U_ j and V_ j ( 1 \u2264 U_ j, V_ j \u2264 N ) \u2014 a power line that connects cities U_ j and V_ j . The collection of factories forms a tree.",
    "output": "An integer representing the sum of f( x, y, z) \u00d7 g( x, y, z) for all combinations of ( x, y, z) such that 1 \u2264 x < y < z \u2264 N , modulo 998 244 353",
    "note": "In the first example, the only ( x, y, z) possible is ( 1, 2, 3) . Because GCD( A_ 1, A_ 2, A_ 3) = GCD( 1, 2, 3) = 1 has 0 distinct prime factors, therefore f( x, y, z) \u00d7 g( x, y, z) = 2 \u00d7 0 = 0 . In the second example, all triples ( x, y, z) that satisfy the condition are as follows: ( 1, 2, 3) \u2192 f( 1, 2, 3) \u00d7 g( 1, 2, 3) = 2 \u00d7 1 = 2 ( 1, 2, 4) \u2192 f( 1, 2, 4) \u00d7 g( 1, 2, 4) = 2 \u00d7 1 = 2 ( 1, 3, 4) \u2192 f( 1, 3, 4) \u00d7 g( 1, 3, 4) = 3 \u00d7 2 = 6 ( 2, 3, 4) \u2192 f( 2, 3, 4) \u00d7 g( 2, 3, 4) = 2 \u00d7 1 = 2 So the electrical efficiency is 2 + 2 + 6 + 2 = 12 .",
    "topics": [
      "combinatorics",
      "data structures",
      "dp",
      "math",
      "number theory",
      "trees"
    ],
    "id": "1725E"
  },
  {
    "title": "Burenka Plays with Fractions",
    "url": "https://codeforces.com/problemset/problem/1720/A",
    "history": "Burenka came to kindergarden. This kindergarten is quite strange, so each kid there receives two fractions ( a/ b and c/ d ) with integer numerators and denominators. Then children are commanded to play with their fractions. Burenka is a clever kid, so she noticed that when she claps once, she can multiply numerator or denominator of one of her two fractions by any integer of her choice ( but she can' t multiply denominators by 0 ) . Now she wants know the minimal number of claps to make her fractions equal ( by value) . Please help her and find the required number of claps!",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. Then follow the descriptions of each test case. The only line of each test case contains four integers a , b , c and d ( 0 \u2264 a, c \u2264 10^ 9 , 1 \u2264 b, d \u2264 10^ 9 ) \u2014 numerators and denominators of the fractions given to Burenka initially.",
    "output": "For each test case print a single integer \u2014 the minimal number of claps Burenka needs to make her fractions equal.",
    "note": "In the first case, Burenka can multiply c by 2 , then the fractions will be equal. In the second case, fractions are already equal. In the third case, Burenka can multiply a by 4 , then b by 3 . Then the fractions will be equal ( 1 \u00b7 4/ 2 \u00b7 3 = 2/ 3 ) .",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "1720A"
  },
  {
    "title": "Burenka, an Array and Queries",
    "url": "https://codeforces.com/problemset/problem/1718/F",
    "history": "Eugene got Burenka an array a of length n of integers from 1 to m for her birthday. Burenka knows that Eugene really likes coprime integers ( integers x and y such that they have only one common factor ( equal to 1 ) ) so she wants to to ask Eugene q questions about the present. Each time Burenka will choose a subsegment a_ l, a_ l + 1, . . . , a_ r of array a , and compute the product of these numbers p = a_ l \u00b7 a_ l + 1\u00b7. . . \u00b7 a_ r . Then she will ask Eugene to count the number of integers between 1 and C inclusive which are coprime with p . Help Eugene answer all the questions!",
    "input": "In the first line of input there are four integers n , m , C , q ( 1 \u2264 n, q \u2264 10^ 5 , 1 \u2264 m \u2264 2\u00b7 10^ 4 , 1 \u2264 C \u2264 10^ 5 ) \u2014 the length of the array a , the maximum possible value of a_ i , the value C , and the number of queries. The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i\u2264 m ) \u2014 the array a . In the next q lines the queries are given. Each query consists of two integers l and r ( 1 \u2264 l \u2264 r \u2264 n ) .",
    "output": "Print q integers \u2014 the answers to Burenka' s queries.",
    "note": "Here' s an explanation for the example: in the first query, the product is equal to 1 , which is coprime with 1, 2, 3, 4, 5 . in the second query, the product is equal to 12 , which is coprime with 1 and 5 . in the third query, the product is equal to 10 , which is coprime with 1 and 3 .",
    "topics": [
      "data structures",
      "math",
      "number theory"
    ],
    "id": "1718F"
  },
  {
    "title": "Tonya and Burenka-179",
    "url": "https://codeforces.com/problemset/problem/1718/C",
    "history": "Tonya was given an array of a of length n written on a postcard for his birthday. For some reason, the postcard turned out to be a cyclic array, so the index of the element located strictly to the right of the n - th is 1 . Tonya wanted to study it better, so he bought a robot \" Burenka- 179\" . A program for Burenka is a pair of numbers ( s, k) , where 1 \u2264 s \u2264 n , 1 \u2264 k \u2264 n- 1 . Note that k cannot be equal to n . Initially, Tonya puts the robot in the position of the array s . After that, Burenka makes exactly n steps through the array. If at the beginning of a step Burenka stands in the position i , then the following happens: The number a_ i is added to the usefulness of the program. \" Burenka\" moves k positions to the right ( i : = i + k is executed, if i becomes greater than n , then i : = i - n ) . Help Tonya find the maximum possible usefulness of a program for \" Burenka\" if the initial usefulness of any program is 0 . Also, Tony' s friend Ilyusha asks him to change the array q times. Each time he wants to assign a_ p : = x for a given index p and a value x . You need to find the maximum possible usefulness of the program after each of these changes.",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 4 ) is the number of test cases. The description of the test cases follows. The first line of each test case contains two integers n and q ( 2 \u2264 n \u2264 2 \u00b7 10^ 5 , 0 \u2264 q \u2264 2 \u00b7 10^ 5 ) . The second line of each test case contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 9 ) \u2014 elements of the array. The following q lines contain changes, each of them contains two integers p and x ( 1 \u2264 p \u2264 n , 1 \u2264 x \u2264 10^ 9 ) , meaning you should assign a_ p : = x . It is guaranteed that the sum of n and the sum of q over all test cases do not exceed 2 \u00b7 10^ 5 .",
    "output": "For each test case, output q+ 1 numbers \u2014 the maximum usefulness of a program initially and after each of the changes.",
    "note": "In the first test case, initially and after each request, the answer is achieved at s = 1 , k = 1 or s = 2 , k = 1 . In the second test case, initially, the answer is achieved when s = 1 , k = 2 or s = 3 , k = 2 . After the first request, the answer is achieved at s = 2 , k = 2 or s = 4 , k = 2 .",
    "topics": [
      "data structures",
      "greedy",
      "math",
      "number theory"
    ],
    "id": "1718C"
  },
  {
    "title": "Fibonacci Strings",
    "url": "https://codeforces.com/problemset/problem/1718/B",
    "history": "In all schools in Buryatia, in the 1 class, everyone is told the theory of Fibonacci strings. \" A block is a subsegment of a string where all the letters are the same and are bounded on the left and right by the ends of the string or by letters other than the letters in the block. A string is called a Fibonacci string if, when it is divided into blocks, their lengths in the order they appear in the string form the Fibonacci sequence ( f_ 0 = f_ 1 = 1 , f_ i = f_ i- 2 + f_ i- 1 ) , starting from the zeroth member of this sequence. A string is called semi- Fibonacci if it possible to reorder its letters to get a Fibonacci string. \" Burenka decided to enter the Buryat State University, but at the entrance exam she was given a difficult task. She was given a string consisting of the letters of the Buryat alphabet ( which contains exactly k letters) , and was asked if the given string is semi- Fibonacci. The string can be very long, so instead of the string, she was given the number of appearances of each letter ( c_ i for the i - th letter) in that string. Unfortunately, Burenka no longer remembers the theory of Fibonacci strings, so without your help she will not pass the exam.",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. The following is a description of the input data sets. The first line of each test case contains one integer k ( 1 \u2264 k \u2264 100 ) \u2014 the number of letters in the alphabet. The second line of each test case contains k integers c_ 1, c_ 2, . . . , c_ k ( 1 \u2264 c_ i \u2264 10^ 9 ) \u2014 the number of occurrences of each letter in the string.",
    "output": "For each test case print the string \" YES\" if the corresponding string is semi- Fibonacci, and \" NO\" if it is not. You can print \" YES\" and \" NO\" in any case ( for example, the strings \" yEs\" , \" yes\" , \" Yes\" will be recognized as a positive answer) .",
    "note": "In the first test case, a one- character string is semi- Fibonacci, being itself a Fibonacci string. In the second test case, a string of two different characters is Fibonacci. In the third test case, the string \" abb\" ( let the first of the alphabet letter be a, the second letter b) is not a semi- Fibonacci string, since no permutation of its letters ( \" abb\" , \" bab\" , and \" bba\" ) is a Fibonacci string. In the fourth test case, two permutations of the letters of the string \" abaccac\" ( the first letter is a, the second letter is b, the third letter is c) are Fibonacci strings \u2014 \" abaaccc\" and \" cbccaaa\" .",
    "topics": [
      "greedy",
      "implementation",
      "math",
      "number theory"
    ],
    "id": "1718B"
  },
  {
    "title": "Madoka and The Best University",
    "url": "https://codeforces.com/problemset/problem/1717/E",
    "history": "Madoka wants to enter to \" Novosibirsk State University\" , but in the entrance exam she came across a very difficult task: Given an integer n , it is required to calculate \u2211lcm( c, ( a, b) ) , for all triples of positive integers ( a, b, c) , where a + b + c = n . In this problem ( x, y) denotes the greatest common divisor of x and y , and lcm( x, y) denotes the least common multiple of x and y . Solve this problem for Madoka and help her to enter to the best university!",
    "input": "The first and the only line contains a single integer n ( 3 \u2264 n \u2264 10^ 5 ) .",
    "output": "Print exactly one interger \u2014 \u2211lcm( c, ( a, b) ) . Since the answer can be very large, then output it modulo 10^ 9 + 7 .",
    "note": "In the first example, there is only one suitable triple ( 1, 1, 1) . So the answer is lcm( 1, ( 1, 1) ) = lcm( 1, 1) = 1 . In the second example, lcm( 1, ( 3, 1) ) + lcm( 1, ( 2, 2) ) + lcm( 1, ( 1, 3) ) + lcm( 2, ( 2, 1) ) + lcm( 2, ( 1, 2) ) + lcm( 3, ( 1, 1) ) = lcm( 1, 1) + lcm( 1, 2) + lcm( 1, 1) + lcm( 2, 1) + lcm( 2, 1) + lcm( 3, 1) = 1 + 2 + 1 + 2 + 2 + 3 = 11",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "1717E"
  },
  {
    "title": "Madoka and Strange Thoughts",
    "url": "https://codeforces.com/problemset/problem/1717/A",
    "history": "Madoka is a very strange girl, and therefore she suddenly wondered how many pairs of integers ( a, b) exist, where 1 \u2264 a, b \u2264 n , for which lcm( a, b) / gcd( a, b) \u2264 3 . In this problem, gcd( a, b) denotes the greatest common divisor of the numbers a and b , and lcm( a, b) denotes the smallest common multiple of the numbers a and b .",
    "input": "The input consists of multiple test cases. The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. Description of the test cases follows. The first and the only line of each test case contains the integer n ( 1 \u2264 n \u2264 10^ 8 ) .",
    "output": "For each test case output a single integer \u2014 the number of pairs of integers satisfying the condition.",
    "note": "For n = 1 there is exactly one pair of numbers \u2014 ( 1, 1) and it fits. For n = 2 , there are only 4 pairs \u2014 ( 1, 1) , ( 1, 2) , ( 2, 1) , ( 2, 2) and they all fit. For n = 3 , all 9 pair are suitable, except ( 2, 3) and ( 3, 2) , since their lcm is 6 , and gcd is 1 , which doesn' t fit the condition.",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "1717A"
  },
  {
    "title": "Bags with Balls",
    "url": "https://codeforces.com/problemset/problem/1716/F",
    "history": "There are n bags, each bag contains m balls with numbers from 1 to m . For every i \u2208 [ 1, m] , there is exactly one ball with number i in each bag. You have to take exactly one ball from each bag ( all bags are different, so, for example, taking the ball 1 from the first bag and the ball 2 from the second bag is not the same as taking the ball 2 from the first bag and the ball 1 from the second bag) . After that, you calculate the number of balls with odd numbers among the ones you have taken. Let the number of these balls be F . Your task is to calculate the sum of F^ k over all possible ways to take n balls, one from each bag.",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 5000 ) \u2014 the number of test cases. Each test case consists of one line containing three integers n , m and k ( 1 \u2264 n, m \u2264 998244352 ; 1 \u2264 k \u2264 2000 ) .",
    "output": "For each test case, print one integer \u2014 the sum of F^ k over all possible ways to take n balls, one from each bag. Since it can be huge, print it modulo 998244353 .",
    "note": "",
    "topics": [
      "combinatorics",
      "dp",
      "math",
      "number theory"
    ],
    "id": "1716F"
  },
  {
    "title": "Add Modulo 10",
    "url": "https://codeforces.com/problemset/problem/1714/E",
    "history": "You are given an array of n integers a_ 1, a_ 2, . . . , a_ n You can apply the following operation an arbitrary number of times: select an index i ( 1 \u2264 i \u2264 n ) and replace the value of the element a_ i with the value a_ i + ( a_ i 10) , where a_ i 10 is the remainder of the integer dividing a_ i by 10 . For a single index ( value i ) , this operation can be applied multiple times. If the operation is applied repeatedly to the same index, then the current value of a_ i is taken into account each time. For example, if a_ i= 47 then after the first operation we get a_ i= 47+ 7= 54 , and after the second operation we get a_ i= 54+ 4= 58 . Check if it is possible to make all array elements equal by applying multiple ( possibly zero) operations. For example, you have an array [ 6, 11] . Let' s apply this operation to the first element of the array. Let' s replace a_ 1 = 6 with a_ 1 + ( a_ 1 10) = 6 + ( 6 10) = 6 + 6 = 12 . We get the array [ 12, 11] . Then apply this operation to the second element of the array. Let' s replace a_ 2 = 11 with a_ 2 + ( a_ 2 10) = 11 + ( 11 10) = 11 + 1 = 12 . We get the array [ 12, 12] . Thus, by applying 2 operations, you can make all elements of an array equal.",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. What follows is a description of each test case. The first line of each test case contains one integer n ( 1 \u2264 n \u2264 2 \u00b7 10^ 5 ) \u2014 the size of the array. The second line of each test case contains n integers a_ i ( 0 \u2264 a_ i \u2264 10^ 9 ) \u2014 array elements. It is guaranteed that the sum of n over all test cases does not exceed 2 \u00b7 10^ 5 .",
    "output": "For each test case print: YES if it is possible to make all array elements equal; NO otherwise. You can print YES and NO in any case ( for example, the strings yEs, yes, Yes and YES will be recognized as a positive answer) .",
    "note": "The first test case is clarified above. In the second test case, it is impossible to make all array elements equal. In the third test case, you need to apply this operation once to all elements equal to 5 . In the fourth test case, you need to apply this operation to all elements until they become equal to 8 . In the fifth test case, it is impossible to make all array elements equal. In the sixth test case, you need to apply this operation to all elements until they become equal to 102 .",
    "topics": [
      "brute force",
      "math",
      "number theory"
    ],
    "id": "1714E"
  },
  {
    "title": "Tournament Countdown",
    "url": "https://codeforces.com/problemset/problem/1713/D",
    "history": "This is an interactive problem. There was a tournament consisting of 2^ n contestants. The 1 - st contestant competed with the 2 - nd, the 3 - rd competed with the 4 - th, and so on. After that, the winner of the first match competed with the winner of second match, etc. The tournament ended when there was only one contestant left, who was declared the winner of the tournament. Such a tournament scheme is known as the single- elimination tournament. You don' t know the results, but you want to find the winner of the tournament. In one query, you select two integers a and b , which are the indices of two contestants. The jury will return 1 if a won more matches than b , 2 if b won more matches than a , or 0 if their number of wins was equal. Find the winner in no more than \u23081/ 3\u00b7 2^ n + 1\u2309 queries. Here \u2308 x \u2309 denotes the value of x rounded up to the nearest integer. Note that the tournament is long over, meaning that the results are fixed and do not depend on your queries. InteractionThe interaction for each test case begins by reading the integer n . To make a query, output \" ? a b\" ( 1 \u2264 a, b \u2264 2^ n ) without quotes. Afterwards, you should read one single integer \u2014 the answer for your query. You can make at most \u23081/ 3\u00b7 2^ n + 1\u2309 such queries in each test case. If you receive the integer - 1 instead of an answer or a valid value of n , it means your program has made an invalid query, has exceed the limit of queries, or has given incorrect answer on the previous test case. Your program must terminate immediately to receive a Wrong Answer verdict. Otherwise you can get an arbitrary verdict because your solution will continue to read from a closed stream. When you are ready to give the final answer, output \" ! x\" ( 1 \u2264 x \u2264 2^ n ) without quotes \u2014 the winner of the tournament. Giving this answer does not count towards the limit of queries. After solving a test case, your program should move to the next one immediately. After solving all test cases, your program should be terminated immediately. After printing a query or the answer do not forget to output end of line and flush the output. Otherwise, you will get Idleness limit exceeded. To do this, use: fflush( stdout) or cout. flush( ) in C+ + ; System. out. flush( ) in Java; flush( output) in Pascal; stdout. flush( ) in Python; see documentation for other languages. HacksTo hack, use the following format. The first line contains an integer t ( 1 \u2264 t \u2264 2^ 14 ) \u2014 the number of test cases. The first line of each test case contains a single integer n ( 1 \u2264 n \u2264 17 ) . The second line of each test case contains 2^ n numbers on a line \u2014 the number of wins of each participant. There should be a sequence of matches that is consistent with the number of wins. The sum of 2^ n should not exceed 2^ 17 .",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 2^ 14 ) \u2014 the number of test cases. The only line of input contains a single integer n ( 1 \u2264 n \u2264 17 ) . It is guaranteed that the sum of 2^ n over all test cases does not exceed 2^ 17 .",
    "output": "",
    "note": "The tournament in the first test case is shown below. The number of wins is [ 1, 0, 0, 2, 0, 1, 3, 0] . In this example, the winner is the 7 - th contestant.",
    "topics": [
      "constructive algorithms",
      "greedy",
      "interactive",
      "number theory",
      "probabilities"
    ],
    "id": "1713D"
  },
  {
    "title": "LCM Sum (hard version)",
    "url": "https://codeforces.com/problemset/problem/1712/E2",
    "history": "We are sum for we are manySome NumberThis version of the problem differs from the previous one only in the constraint on t . You can make hacks only if both versions of the problem are solved. You are given two positive integers l and r . Count the number of distinct triplets of integers ( i, j, k) such that l \u2264 i < j < k \u2264 r and lcm( i, j, k) \u2265 i + j + k . Here lcm( i, j, k) denotes the least common multiple ( LCM) of integers i , j , and k .",
    "input": "Each test contains multiple test cases. The first line contains the number of test cases t ( 1 \u2264 t \u2264 10^ 5 ) . Description of the test cases follows. The only line for each test case contains two integers l and r ( 1 \u2264 l \u2264 r \u2264 2 \u00b7 10^ 5 , l + 2 \u2264 r ) .",
    "output": "For each test case print one integer \u2014 the number of suitable triplets.",
    "note": "In the first test case, there are 3 suitable triplets: ( 1, 2, 3) , ( 1, 3, 4) , ( 2, 3, 4) . In the second test case, there is 1 suitable triplet: ( 3, 4, 5) .",
    "topics": [
      "brute force",
      "data structures",
      "math",
      "number theory",
      "two pointers"
    ],
    "id": "1712E2"
  },
  {
    "title": "LCM Sum (easy version)",
    "url": "https://codeforces.com/problemset/problem/1712/E1",
    "history": "We are sum for we are manySome NumberThis version of the problem differs from the next one only in the constraint on t . You can make hacks only if both versions of the problem are solved. You are given two positive integers l and r . Count the number of distinct triplets of integers ( i, j, k) such that l \u2264 i < j < k \u2264 r and lcm( i, j, k) \u2265 i + j + k . Here lcm( i, j, k) denotes the least common multiple ( LCM) of integers i , j , and k .",
    "input": "Each test contains multiple test cases. The first line contains the number of test cases t ( 1 \u2264 t \u2264 5 ) . Description of the test cases follows. The only line for each test case contains two integers l and r ( 1 \u2264 l \u2264 r \u2264 2 \u00b7 10^ 5 , l + 2 \u2264 r ) .",
    "output": "For each test case print one integer \u2014 the number of suitable triplets.",
    "note": "In the first test case, there are 3 suitable triplets: ( 1, 2, 3) , ( 1, 3, 4) , ( 2, 3, 4) . In the second test case, there is 1 suitable triplet: ( 3, 4, 5) .",
    "topics": [
      "binary search",
      "brute force",
      "combinatorics",
      "math",
      "number theory",
      "two pointers"
    ],
    "id": "1712E1"
  },
  {
    "title": "Woeful Permutation",
    "url": "https://codeforces.com/problemset/problem/1712/B",
    "history": "I wonder, does the falling rain Forever yearn for it' s disdain? Effluvium of the MindYou are given a positive integer n . Find any permutation p of length n such that the sum lcm( 1, p_ 1) + lcm( 2, p_ 2) + . . . + lcm( n, p_ n) is as large as possible. Here lcm( x, y) denotes the least common multiple ( LCM) of integers x and y . A permutation is an array consisting of n distinct integers from 1 to n in arbitrary order. For example, [ 2, 3, 1, 5, 4] is a permutation, but [ 1, 2, 2] is not a permutation ( 2 appears twice in the array) and [ 1, 3, 4] is also not a permutation ( n= 3 but there is 4 in the array) .",
    "input": "Each test contains multiple test cases. The first line contains the number of test cases t ( 1 \u2264 t \u2264 1 000 ) . Description of the test cases follows. The only line for each test case contains a single integer n ( 1 \u2264 n \u2264 10^ 5 ) . It is guaranteed that the sum of n over all test cases does not exceed 10^ 5 .",
    "output": "For each test case print n integers p_ 1 , p_ 2 , . . . , p_ n \u2014 the permutation with the maximum possible value of lcm( 1, p_ 1) + lcm( 2, p_ 2) + . . . + lcm( n, p_ n) . If there are multiple answers, print any of them.",
    "note": "For n = 1 , there is only one permutation, so the answer is [ 1] . For n = 2 , there are two permutations: [ 1, 2] \u2014 the sum is lcm( 1, 1) + lcm( 2, 2) = 1 + 2 = 3 . [ 2, 1] \u2014 the sum is lcm( 1, 2) + lcm( 2, 1) = 2 + 2 = 4 .",
    "topics": [
      "constructive algorithms",
      "greedy",
      "number theory"
    ],
    "id": "1712B"
  },
  {
    "title": "Bugaboo",
    "url": "https://codeforces.com/problemset/problem/1707/F",
    "history": "A transformation of an array of positive integers a_ 1, a_ 2, . . . , a_ n is defined by replacing a with the array b_ 1, b_ 2, . . . , b_ n given by b_ i= a_ i\u2295 a_ ( i n) + 1 , where \u2295 denotes the bitwise XOR operation. You are given integers n , t , and w . We consider an array c_ 1, c_ 2, . . . , c_ n ( 0 \u2264 c_ i \u2264 2^ w- 1 ) to be bugaboo if and only if there exists an array a_ 1, a_ 2, . . . , a_ n such that after transforming a for t times, a becomes c . For example, when n= 6 , t= 2 , w= 2 , then the array [ 3, 2, 1, 0, 2, 2] is bugaboo because it can be given by transforming the array [ 2, 3, 1, 1, 0, 1] for 2 times: [ 2, 3, 1, 1, 0, 1] \u2192 [ 2\u2295 3, 3\u2295 1, 1\u2295 1, 1\u2295 0, 0\u2295 1, 1\u2295 2] = [ 1, 2, 0, 1, 1, 3] ; [ 1, 2, 0, 1, 1, 3] \u2192 [ 1\u2295 2, 2\u2295 0, 0\u2295 1, 1\u2295 1, 1\u2295 3, 3\u2295 1] = [ 3, 2, 1, 0, 2, 2] . And the array [ 4, 4, 4, 4, 0, 0] is not bugaboo because 4 > 2^ 2 - 1 . The array [ 2, 3, 3, 3, 3, 3] is also not bugaboo because it can' t be given by transforming one array for 2 times. You are given an array c with some positions lost ( only m positions are known at first and the remaining positions are lost) . And there are q modifications, where each modification is changing a position of c . A modification can possibly change whether the position is lost or known, and it can possibly redefine a position that is already given. You need to calculate how many possible arrays c ( with arbitrary elements on the lost positions) are bugaboos after each modification. Output the i - th answer modulo p_ i ( p_ i is a given array consisting of q elements) .",
    "input": "The first line contains four integers n , m , t and w ( 2\u2264 n\u2264 10^ 7 , 0\u2264 m\u2264min( n, 10^ 5) , 1\u2264 t\u2264 10^ 9 , 1\u2264 w\u2264 30 ) . The i - th line of the following m lines contains two integers d_ i and e_ i ( 1\u2264 d_ i\u2264 n , 0\u2264 e_ i< 2^ w ) . It means the position d_ i of the array c is given and c_ d_ i= e_ i . It is guaranteed that 1\u2264 d_ 1< d_ 2< . . . < d_ m\u2264 n . The next line contains only one number q ( 1\u2264 q\u2264 10^ 5 ) \u2014 the number of modifications. The i - th line of the following q lines contains three integers f_ i , g_ i , p_ i ( 1\u2264 f_ i\u2264 n , - 1\u2264 g_ i< 2^ w , 11\u2264 p_ i\u2264 10^ 9+ 7 ) . The value g_ i= - 1 means changing the position f_ i of the array c to a lost position, otherwise it means changing the position f_ i of the array c to a known position, and c_ f_ i= g_ i . The value p_ i means you need to output the i - th answer modulo p_ i .",
    "output": "The output contains q lines, denoting your answers.",
    "note": "In the first example, n= 3 , t= 1 , and w= 1 . Let ? denote a lost position of c . In the first query, c= [ 1, 0, 1] . The only possible array [ 1, 0, 1] is bugaboo because it can be given by transforming [ 0, 1, 1] once. So the answer is 1 123 456 789 = 1 . In the second query, c= [ 1, 1, 1] . The only possible array [ 1, 1, 1] is not bugaboo. So the answer is 0 111 111 111 = 0 . In the third query, c= [ ? , 1, 1] . There are two possible arrays [ 1, 1, 1] and [ 0, 1, 1] . Only [ 0, 1, 1] is bugaboo because it can be given by transforming [ 1, 1, 0] once. So the answer is 1 987 654 321= 1 . In the fourth query, c= [ ? , 1, ? ] . There are four possible arrays. [ 0, 1, 1] and [ 1, 1, 0] are bugaboos. [ 1, 1, 0] can be given by performing [ 1, 0, 1] once. So the answer is 2 555 555 555= 2 .",
    "topics": [
      "bitmasks",
      "constructive algorithms",
      "dp",
      "number theory"
    ],
    "id": "1707F"
  },
  {
    "title": "Chopping Carrots (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1706/D2",
    "history": "This is the hard version of the problem. The only difference between the versions is the constraints on n , k , a_ i , and the sum of n over all test cases. You can make hacks only if both versions of the problem are solved. Note the unusual memory limit. You are given an array of integers a_ 1, a_ 2, . . . , a_ n of length n , and an integer k . The cost of an array of integers p_ 1, p_ 2, . . . , p_ n of length n is max_ 1 \u2264 i \u2264 n( \u230aa_ i/ p_ i\u230b) - min_ 1 \u2264 i \u2264 n( \u230aa_ i/ p_ i\u230b) . Here, \u230ax/ y\u230b denotes the integer part of the division of x by y . Find the minimum cost of an array p such that 1 \u2264 p_ i \u2264 k for all 1 \u2264 i \u2264 n .",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 100 ) \u2014 the number of test cases. The first line of each test case contains two integers n and k ( 1 \u2264 n, k \u2264 10^ 5 ) . The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ 1 \u2264 a_ 2 \u2264. . . \u2264 a_ n \u2264 10^ 5 ) . It is guaranteed that the sum of n over all test cases does not exceed 10^ 5 .",
    "output": "For each test case, print a single integer \u2014 the minimum possible cost of an array p satisfying the condition above.",
    "note": "In the first test case, the optimal array is p = [ 1, 1, 1, 2, 2] . The resulting array of values of \u230aa_ i/ p_ i\u230b is [ 4, 5, 6, 4, 5] . The cost of p is max_ 1 \u2264 i \u2264 n( \u230aa_ i/ p_ i\u230b) - min_ 1 \u2264 i \u2264 n( \u230aa_ i/ p_ i\u230b) = 6 - 4 = 2 . We can show that there is no array ( satisfying the condition from the statement) with a smaller cost. In the second test case, one of the optimal arrays is p = [ 12, 12, 12, 12, 12] , which results in all \u230aa_ i/ p_ i\u230b being 0 . In the third test case, the only possible array is p = [ 1, 1, 1] .",
    "topics": [
      "brute force",
      "constructive algorithms",
      "data structures",
      "dp",
      "greedy",
      "math",
      "number theory",
      "two pointers"
    ],
    "id": "1706D2"
  },
  {
    "title": "Chopping Carrots (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1706/D1",
    "history": "This is the easy version of the problem. The only difference between the versions is the constraints on n , k , a_ i , and the sum of n over all test cases. You can make hacks only if both versions of the problem are solved. Note the unusual memory limit. You are given an array of integers a_ 1, a_ 2, . . . , a_ n of length n , and an integer k . The cost of an array of integers p_ 1, p_ 2, . . . , p_ n of length n is max_ 1 \u2264 i \u2264 n( \u230aa_ i/ p_ i\u230b) - min_ 1 \u2264 i \u2264 n( \u230aa_ i/ p_ i\u230b) . Here, \u230ax/ y\u230b denotes the integer part of the division of x by y . Find the minimum cost of an array p such that 1 \u2264 p_ i \u2264 k for all 1 \u2264 i \u2264 n .",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 100 ) \u2014 the number of test cases. The first line of each test case contains two integers n and k ( 1 \u2264 n, k \u2264 3000 ) . The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ 1 \u2264 a_ 2 \u2264. . . \u2264 a_ n \u2264 3000 ) . It is guaranteed that the sum of n over all test cases does not exceed 3000 .",
    "output": "For each test case, print a single integer \u2014 the minimum possible cost of an array p satisfying the condition above.",
    "note": "In the first test case, the optimal array is p = [ 1, 1, 1, 2, 2] . The resulting array of values of \u230aa_ i/ p_ i\u230b is [ 4, 5, 6, 4, 5] . The cost of p is max_ 1 \u2264 i \u2264 n( \u230aa_ i/ p_ i\u230b) - min_ 1 \u2264 i \u2264 n( \u230aa_ i/ p_ i\u230b) = 6 - 4 = 2 . We can show that there is no array ( satisfying the condition from the statement) with a smaller cost. In the second test case, one of the optimal arrays is p = [ 12, 12, 12, 12, 12] , which results in all \u230aa_ i/ p_ i\u230b being 0 . In the third test case, the only possible array is p = [ 1, 1, 1] .",
    "topics": [
      "binary search",
      "brute force",
      "constructive algorithms",
      "greedy",
      "number theory"
    ],
    "id": "1706D1"
  },
  {
    "title": "Equate Multisets",
    "url": "https://codeforces.com/problemset/problem/1702/F",
    "history": "Multiset \u2014is a set of numbers in which there can be equal elements, and the order of the numbers does not matter. Two multisets are equal when each value occurs the same number of times. For example, the multisets { 2, 2, 4} and { 2, 4, 2} are equal, but the multisets { 1, 2, 2} and { 1, 1, 2} \u2014 are not. You are given two multisets a and b , each consisting of n integers. In a single operation, any element of the b multiset can be doubled or halved ( rounded down) . In other words, you have one of the following operations available for an element x of the b multiset: replace x with x \u00b7 2 , or replace x with \u230ax/ 2\u230b ( round down) . Note that you cannot change the elements of the a multiset. See if you can make the multiset b become equal to the multiset a in an arbitrary number of operations ( maybe 0 ) . For example, if n = 4 , a = { 4, 24, 5, 2} , b = { 4, 1, 6, 11} , then the answer is yes. We can proceed as follows: Replace 1 with 1 \u00b7 2 = 2 . We get b = { 4, 2, 6, 11} . Replace 11 with \u230a11/ 2\u230b = 5 . We get b = { 4, 2, 6, 5} . Replace 6 with 6 \u00b7 2 = 12 . We get b = { 4, 2, 12, 5} . Replace 12 with 12 \u00b7 2 = 24 . We get b = { 4, 2, 24, 5} . Got equal multisets a = { 4, 24, 5, 2} and b = { 4, 2, 24, 5} .",
    "input": "The first line of input data contains a single integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014the number of test cases. Each test case consists of three lines. The first line of the test case contains an integer n ( 1 \u2264 n \u2264 2 \u00b7 10^ 5 ) \u2014the number of elements in the multisets a and b . The second line gives n integers: a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ 1 \u2264 a_ 2 \u2264. . . \u2264 a_ n \u2264 10^ 9 ) \u2014the elements of the multiset a . Note that the elements may be equal. The third line contains n integers: b_ 1, b_ 2, . . . , b_ n ( 1 \u2264 b_ 1 \u2264 b_ 2 \u2264. . . \u2264 b_ n \u2264 10^ 9 ) \u2014 elements of the multiset b . Note that the elements may be equal. It is guaranteed that the sum of n values over all test cases does not exceed 2 \u00b7 10^ 5 .",
    "output": "For each test case, print on a separate line: YES if you can make the multiset b become equal to a , NO otherwise. You can output YES and NO in any case ( for example, strings yEs, yes, Yes and YES will be recognized as positive answer) .",
    "note": "The first example is explained in the statement. In the second example, it is impossible to get the value 31 from the numbers of the multiset b by available operations. In the third example, we can proceed as follows: Replace 2 with 2 \u00b7 2 = 4 . We get b = { 4, 14, 14, 26, 42} . Replace 14 with \u230a14/ 2\u230b = 7 . We get b = { 4, 7, 14, 26, 42} . Replace 26 with \u230a26/ 2\u230b = 13 . We get b = { 4, 7, 14, 13, 42} . Replace 42 with \u230a42/ 2\u230b = 21 . We get b = { 4, 7, 14, 13, 21} . Replace 21 with \u230a21/ 2\u230b = 10 . We get b = { 4, 7, 14, 13, 10} . Got equal multisets a = { 4, 7, 10, 13, 14} and b = { 4, 7, 14, 13, 10} .",
    "topics": [
      "constructive algorithms",
      "data structures",
      "greedy",
      "math",
      "number theory"
    ],
    "id": "1702F"
  },
  {
    "title": "Three Days Grace",
    "url": "https://codeforces.com/problemset/problem/1699/E",
    "history": "Ibti was thinking about a good title for this problem that would fit the round theme ( numerus ternarium) . He immediately thought about the third derivative, but that was pretty lame so he decided to include the best band in the world \u2014 Three Days Grace. You are given a multiset A with initial size n , whose elements are integers between 1 and m . In one operation, do the following: select a value x from the multiset A , then select two integers p and q such that p, q > 1 and p \u00b7 q = x . Insert p and q to A , delete x from A . Note that the size of the multiset A increases by 1 after each operation. We define the balance of the multiset A as max( a_ i) - min( a_ i) . Find the minimum possible balance after performing any number ( possible zero) of operations.",
    "input": "The first line of the input contains a single integer t ( 1 \u2264 t \u2264 10^ 5 ) \u2014 the number of test cases. The second line of each test case contains two integers n and m ( 1 \u2264 n \u2264 10^ 6 , 1 \u2264 m \u2264 5 \u00b7 10^ 6 ) \u2014 the initial size of the multiset, and the maximum value of an element. The third line of each test case contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 m ) \u2014 the elements in the initial multiset. It is guaranteed that the sum of n across all test cases does not exceed 10^ 6 and the sum of m across all test cases does not exceed 5 \u00b7 10^ 6 .",
    "output": "For each test case, print a single integer \u2014 the minimum possible balance.",
    "note": "In the first test case, we can apply the operation on each of the 4 s with ( p, q) = ( 2, 2) and make the multiset { 2, 2, 2, 2, 2, 2, 2} with balance max( { 2, 2, 2, 2, 2, 2, 2} ) - min( { 2, 2, 2, 2, 2, 2, 2} ) = 0 . It is obvious we cannot make this balance less than 0 . In the second test case, we can apply an operation on 12 with ( p, q) = ( 3, 4) . After this our multiset will be { 3, 4, 2, 3} . We can make one more operation on 4 with ( p, q) = ( 2, 2) , making the multiset { 3, 2, 2, 2, 3} with balance equal to 1 . In the third test case, we can apply an operation on 35 with ( p, q) = ( 5, 7) . The final multiset is { 6, 5, 7} and has a balance equal to 7- 5 = 2 . In the forth test case, we cannot apply any operation, so the balance is 5 - 1 = 4 .",
    "topics": [
      "data structures",
      "dp",
      "greedy",
      "math",
      "number theory",
      "two pointers"
    ],
    "id": "1699E"
  },
  {
    "title": "Long Binary String",
    "url": "https://codeforces.com/problemset/problem/1698/G",
    "history": "There is a binary string t of length 10^ 100 , and initally all of its bits are . You are given a binary string s , and perform the following operation some times: Select some substring of t , and replace it with its XOR with s . ^ \u2020 After several operations, the string t has exactly two bits ; that is, there are exactly two distinct indices p and q such that the p - th and q - th bits of t are , and the rest of the bits are . Find the lexicographically largest ^ string t satisfying these constraints, or report that no such string exists. ^ \u2020 Formally, choose an index i such that 0 \u2264 i \u2264 10^ 100- | s| . For all 1 \u2264 j \u2264 | s| , if s_ j = , then toggle t_ i+ j . That is, if t_ i+ j= , set t_ i+ j= . Otherwise if t_ i+ j= , set t_ i+ j= . ^ A binary string a is lexicographically larger than a binary string b of the same length if in the first position where a and b differ, the string a has a bit and the corresponding bit in b is .",
    "input": "The only line of each test contains a single binary string s ( 1 \u2264 | s| \u2264 35 ) .",
    "output": "If no string t exists as described in the statement, output - 1. Otherwise, output the integers p and q ( 1 \u2264 p < q \u2264 10^ 100 ) such that the p - th and q - th bits of the lexicographically maximal t are .",
    "note": "In the first test, you can perform the following operations. . . . \u2192. . . \u2192. . . In the second test, you can perform the following operations. . . . \u2192. . . \u2192. . . In the third test, you can perform the following operations. . . . \u2192. . . \u2192. . . It can be proven that these strings t are the lexicographically largest ones. In the fourth test, you can' t make a single bit , so it is impossible.",
    "topics": [
      "bitmasks",
      "math",
      "matrices",
      "meet-in-the-middle",
      "number theory"
    ],
    "id": "1698G"
  },
  {
    "title": "Shifting String",
    "url": "https://codeforces.com/problemset/problem/1690/F",
    "history": "Polycarp found the string s and the permutation p . Their lengths turned out to be the same and equal to n . A permutation of n elements \u2014 is an array of length n , in which every integer from 1 to n occurs exactly once. For example, [ 1, 2, 3] and [ 4, 3, 5, 1, 2] are permutations, but [ 1, 2, 4] , [ 4, 3, 2, 1, 2] and [ 0, 1, 2] are not. In one operation he can multiply s by p , so he replaces s with string new , in which for any i from 1 to n it is true that new_ i = s_ p_ i . For example, with s= wmbe and p = [ 3, 1, 4, 2] , after operation the string will turn to s= s_ 3 s_ 1 s_ 4 s_ 2= bwem . Polycarp wondered after how many operations the string would become equal to its initial value for the first time. Since it may take too long, he asks for your help in this matter. It can be proved that the required number of operations always exists. It can be very large, so use a 64- bit integer type.",
    "input": "The first line of input contains one integer t ( 1 \u2264 t \u2264 5000 ) \u2014 the number of test cases in input. The first line of each case contains single integer n ( 1 \u2264 n \u2264 200 ) \u2014 the length of string and permutation. The second line of each case contains a string s of length n , containing lowercase Latin letters. The third line of each case contains n integers \u2014 permutation p ( 1 \u2264 p_ i \u2264 n ) , all p_ i are different.",
    "output": "Output t lines, each of which contains the answer to the corresponding test case of input. As an answer output single integer \u2014 the minimum number of operations, after which the string s will become the same as it was before operations.",
    "note": "In the first sample operation doesn' t change the string, so it will become the same as it was after 1 operations. In the second sample the string will change as follows: s = babaa s = abaab s = baaba s = abbaa s = baaab s = ababa",
    "topics": [
      "graphs",
      "math",
      "number theory",
      "strings"
    ],
    "id": "1690F"
  },
  {
    "title": "Become Big For Me",
    "url": "https://codeforces.com/problemset/problem/1687/E",
    "history": "Come, let' s build a world where even the weak are not forgotten! \u2014Kijin Seija, Double Dealing CharactersShinmyoumaru has a mallet that can turn objects bigger or smaller. She is testing it out on a sequence a and a number v whose initial value is 1 . She wants to make v = _ i j{ a_ i\u00b7 a_ j} by no more than 10^ 5 operations ( _ i j{ a_ i\u00b7 a_ j} denotes the of all products of two distinct elements of the sequence a ) . In each operation, she picks a subsequence b of a , and does one of the followings: Enlarge: v = v \u00b7lcm( b) Reduce: v = v/ lcm( b) Note that she does not need to guarantee that v is an integer, that is, v does not need to be a multiple of lcm( b) when performing Reduce. Moreover, she wants to guarantee that the total length of b chosen over the operations does not exceed 10^ 6 . Fine a possible operation sequence for her. You don' t need to minimize anything.",
    "input": "The first line contains a single integer n ( 2\u2264 n\u2264 10^ 5 ) \u2014 the size of sequence a . The second line contains n integers a_ 1, a_ 2, \u22ef, a_ n ( 1\u2264 a_ i\u2264 10^ 6 ) \u2014 the sequence a . It can be shown that the answer exists.",
    "output": "The first line contains a non- negative integer k ( 0\u2264 k\u2264 10^ 5 ) \u2014 the number of operations. The following k lines contains several integers. For each line, the first two integers f ( f\u2208{ 0, 1} ) and p ( 1\u2264 p\u2264 n ) stand for the option you choose ( 0 for Enlarge and 1 for Reduce) and the length of b . The other p integers of the line i_ 1, i_ 2, . . . , i_ p ( 1\u2264 i_ 1< i_ 2< . . . < i_ p\u2264 n ) represents the indexes of the subsequence. Formally, b_ j= a_ i_ j .",
    "note": "Test case 1: _ i j{ a_ i\u00b7 a_ j} = { 60, 90, 150} = 30 . Perform v = v\u00b7lcm{ a_ 1, a_ 2, a_ 3} = 30 . Test case 2: _ i j{ a_ i\u00b7 a_ j} = 8 . Perform v = v\u00b7lcm{ a_ 4} = 16 . Perform v = v/ lcm{ a_ 1} = 8 .",
    "topics": [
      "combinatorics",
      "constructive algorithms",
      "greedy",
      "math",
      "number theory"
    ],
    "id": "1687E"
  },
  {
    "title": "Euclid Guess",
    "url": "https://codeforces.com/problemset/problem/1684/G",
    "history": "Let' s consider Euclid' s algorithm for finding the greatest common divisor, where t is a list: function Euclid( a, b) : if a < b: swap( a, b) if b = = 0: return a r = reminder from dividing a by b if r > 0: append r to the back of t return Euclid( b, r) There is an array p of pairs of positive integers that are not greater than m . Initially, the list t is empty. Then the function is run on each pair in p . After that the list t is shuffled and given to you. You have to find an array p of any size not greater than 2 \u00b7 10^ 4 that produces the given list t , or tell that no such array exists.",
    "input": "The first line contains two integers n and m ( 1 \u2264 n \u2264 10^ 3 , 1 \u2264 m \u2264 10^ 9 ) \u2014 the length of the array t and the constraint for integers in pairs. The second line contains n integers t_ 1, t_ 2, . . . , t_ n ( 1 \u2264 t_ i \u2264 m ) \u2014 the elements of the array t .",
    "output": "If the answer does not exist, output - 1 . If the answer exists, in the first line output k ( 1 \u2264 k \u2264 2 \u00b7 10^ 4 ) \u2014 the size of your array p , i. e. the number of pairs in the answer. The i - th of the next k lines should contain two integers a_ i and b_ i ( 1 \u2264 a_ i, b_ i \u2264 m ) \u2014 the i - th pair in p . If there are multiple valid answers you can output any of them.",
    "note": "In the first sample let' s consider the array t for each pair: ( 19, 11) : t = [ 8, 3, 2, 1] ; ( 15, 9) : t = [ 6, 3] ; ( 3, 7) : t = [ 1] . So in total t = [ 8, 3, 2, 1, 6, 3, 1] , which is the same as the input t ( up to a permutation) . In the second test case it is impossible to find such array p of pairs that all integers are not greater than 10 and t = [ 7, 1] In the third test case for the pair ( 15, 8) array t will be [ 7, 1] .",
    "topics": [
      "constructive algorithms",
      "flows",
      "graph matchings",
      "math",
      "number theory"
    ],
    "id": "1684G"
  },
  {
    "title": "AvtoBus",
    "url": "https://codeforces.com/problemset/problem/1679/A",
    "history": "Spring has come, and the management of the AvtoBus bus fleet has given the order to replace winter tires with summer tires on all buses. You own a small bus service business and you have just received an order to replace n tires. You know that the bus fleet owns two types of buses: with two axles ( these buses have 4 wheels) and with three axles ( these buses have 6 wheels) . You don' t know how many buses of which type the AvtoBus bus fleet owns, so you wonder how many buses the fleet might have. You have to determine the minimum and the maximum number of buses that can be in the fleet if you know that the total number of wheels for all buses is n .",
    "input": "The first line contains an integer t ( 1 \u2264 t \u2264 1 000 ) \u2014 the number of test cases. The following lines contain description of test cases. The only line of each test case contains one integer n ( 1 \u2264 n \u2264 10^ 18 ) \u2014 the total number of wheels for all buses.",
    "output": "For each test case print the answer in a single line using the following format. Print two integers x and y ( 1 \u2264 x \u2264 y ) \u2014 the minimum and the maximum possible number of buses that can be in the bus fleet. If there is no suitable number of buses for the given n , print the number - 1 as the answer.",
    "note": "In the first test case the total number of wheels is 4 . It means that there is the only one bus with two axles in the bus fleet. In the second test case it' s easy to show that there is no suitable number of buses with 7 wheels in total. In the third test case the total number of wheels is 24 . The following options are possible: Four buses with three axles. Three buses with two axles and two buses with three axles. Six buses with two axles. So the minimum number of buses is 4 and the maximum number of buses is 6 .",
    "topics": [
      "brute force",
      "greedy",
      "math",
      "number theory"
    ],
    "id": "1679A"
  },
  {
    "title": "Power or XOR?",
    "url": "https://codeforces.com/problemset/problem/1673/E",
    "history": "The symbol \u2227 is quite ambiguous, especially when used without context. Sometimes it is used to denote a power ( a\u2227 b = a^ b ) and sometimes it is used to denote the XOR operation ( a\u2227 b= a\u2295 b ) . You have an ambiguous expression E= A_ 1\u2227 A_ 2\u2227 A_ 3\u2227. . . \u2227 A_ n . You can replace each \u2227 symbol with either a operation or a operation to get an unambiguous expression E' . The value of this expression E' is determined according to the following rules: All operations are performed before any operation. In other words, the operation takes precedence over operation. For example, 4 6 2= 4\u2295 ( 6^ 2) = 4\u2295 36= 32 . Consecutive powers are calculated from left to right. For example, 2 3 4 = ( 2^ 3) ^ 4 = 8^ 4 = 4096 . You are given an array B of length n and an integer k . The array A is given by A_ i= 2^ B_ i and the expression E is given by E= A_ 1\u2227 A_ 2\u2227 A_ 3\u2227. . . \u2227 A_ n . You need to find the XOR of the values of all possible unambiguous expressions E' which can be obtained from E and has at least k \u2227 symbols used as operation. Since the answer can be very large, you need to find it modulo 2^ 2^ 20 . Since this number can also be very large, you need to print its binary representation without leading zeroes. If the answer is equal to 0 , print 0 .",
    "input": "The first line of input contains two integers n and k ( 1\u2264 n\u2264 2^ 20, 0\u2264 k < n) . The second line of input contains n integers B_ 1, B_ 2, . . . , B_ n ( 1\u2264 B_ i < 2^ 20) .",
    "output": "Print a single line containing a binary string without leading zeroes denoting the answer to the problem. If the answer is equal to 0 , print 0 .",
    "note": "For each of the testcases 1 to 3 , A = { 2^ 3, 2^ 1, 2^ 2} = { 8, 2, 4} and E= 8\u2227 2\u2227 4 . For the first testcase, there is only one possible valid unambiguous expression E' = 8\u2295 2\u2295 4 = 14 = ( 1110) _ 2 . For the second testcase, there are three possible valid unambiguous expressions E' : 8\u2295 2\u2295 4 = 14 8^ 2\u2295 4 = 64\u2295 4= 68 8\u2295 2^ 4 = 8\u2295 16= 24 XOR of the values of all of these is 14\u2295 68\u2295 24 = 82 = ( 1010010) _ 2 . For the third testcase, there are four possible valid unambiguous expressions E' : 8\u2295 2\u2295 4 = 14 8^ 2\u2295 4 = 64\u2295 4= 68 8\u2295 2^ 4 = 8\u2295 16= 24 ( 8^ 2) ^ 4 = 64^ 4 = 2^ 24 = 16777216 XOR of the values of all of these is 14\u2295 68\u2295 24\u2295 16777216 = 16777298 = ( 1000000000000000001010010) _ 2 . For the fourth testcase, A= { 2, 2} and E= 2\u2227 2 . The only possible valid unambiguous expression E' = 2\u2295 2 = 0 = ( 0) _ 2 .",
    "topics": [
      "bitmasks",
      "combinatorics",
      "math",
      "number theory"
    ],
    "id": "1673E"
  },
  {
    "title": "Lost Arithmetic Progression",
    "url": "https://codeforces.com/problemset/problem/1673/D",
    "history": "Long ago, you thought of two finite arithmetic progressions A and B . Then you found out another sequence C containing all elements common to both A and B . It is not hard to see that C is also a finite arithmetic progression. After many years, you forgot what A was but remember B and C . You are, for some reason, determined to find this lost arithmetic progression. Before you begin this eternal search, you want to know how many different finite arithmetic progressions exist which can be your lost progression A . Two arithmetic progressions are considered different if they differ in their first term, common difference or number of terms. It may be possible that there are infinitely many such progressions, in which case you won' t even try to look for them! Print - 1 in all such cases. Even if there are finite number of them, the answer might be very large. So, you are only interested to find the answer modulo 10^ 9+ 7 .",
    "input": "The first line of input contains a single integer t ( 1\u2264 t\u2264 100 ) denoting the number of testcases. The first line of each testcase contains three integers b , q and y ( - 10^ 9\u2264 b\u2264 10^ 9 , 1\u2264 q\u2264 10^ 9 , 2\u2264 y\u2264 10^ 9 ) denoting the first term, common difference and number of terms of B respectively. The second line of each testcase contains three integers c , r and z ( - 10^ 9\u2264 c\u2264 10^ 9 , 1\u2264 r\u2264 10^ 9 , 2\u2264 z\u2264 10^ 9 ) denoting the first term, common difference and number of terms of C respectively.",
    "output": "For each testcase, print a single line containing a single integer. If there are infinitely many finite arithmetic progressions which could be your lost progression A , print - 1 . Otherwise, print the number of finite arithmetic progressions which could be your lost progression A modulo 10^ 9+ 7 . In particular, if there are no such finite arithmetic progressions, print 0 .",
    "note": "For the first testcase, B= { - 3, - 2, - 1, 0, 1, 2, 3} and C= { - 1, 1, 3, 5} . There is no such arithmetic progression which can be equal to A because 5 is not present in B and for any A , 5 should not be present in C also. For the second testcase, B= { - 9, - 6, - 3, 0, 3, 6, 9, 12, 15, 18, 21} and C= { 0, 6, 12} . There are 10 possible arithmetic progressions which can be A : { 0, 6, 12} { 0, 2, 4, 6, 8, 10, 12} { 0, 2, 4, 6, 8, 10, 12, 14} { 0, 2, 4, 6, 8, 10, 12, 14, 16} { - 2, 0, 2, 4, 6, 8, 10, 12} { - 2, 0, 2, 4, 6, 8, 10, 12, 14} { - 2, 0, 2, 4, 6, 8, 10, 12, 14, 16} { - 4, - 2, 0, 2, 4, 6, 8, 10, 12} { - 4, - 2, 0, 2, 4, 6, 8, 10, 12, 14} { - 4, - 2, 0, 2, 4, 6, 8, 10, 12, 14, 16} For the third testcase, B= { 2, 7, 12, 17, 22} and C= { 7, 12, 17, 22} . There are infinitely many arithmetic progressions which can be A like: { 7, 12, 17, 22} { 7, 12, 17, 22, 27} { 7, 12, 17, 22, 27, 32} { 7, 12, 17, 22, 27, 32, 37} { 7, 12, 17, 22, 27, 32, 37, 42} . . .",
    "topics": [
      "combinatorics",
      "math",
      "number theory"
    ],
    "id": "1673D"
  },
  {
    "title": "Palindrome Basis",
    "url": "https://codeforces.com/problemset/problem/1673/C",
    "history": "You are given a positive integer n . Let' s call some positive integer a without leading zeroes palindromic if it remains the same after reversing the order of its digits. Find the number of distinct ways to express n as a sum of positive palindromic integers. Two ways are considered different if the frequency of at least one palindromic integer is different in them. For example, 5= 4+ 1 and 5= 3+ 1+ 1 are considered different but 5= 3+ 1+ 1 and 5= 1+ 3+ 1 are considered the same. Formally, you need to find the number of distinct multisets of positive palindromic integers the sum of which is equal to n . Since the answer can be quite large, print it modulo 10^ 9+ 7 .",
    "input": "The first line of input contains a single integer t ( 1\u2264 t\u2264 10^ 4 ) denoting the number of testcases. Each testcase contains a single line of input containing a single integer n ( 1\u2264 n\u2264 4\u00b7 10^ 4 ) \u2014 the required sum of palindromic integers.",
    "output": "For each testcase, print a single integer denoting the required answer modulo 10^ 9+ 7 .",
    "note": "For the first testcase, there are 7 ways to partition 5 as a sum of positive palindromic integers: 5= 1+ 1+ 1+ 1+ 1 5= 1+ 1+ 1+ 2 5= 1+ 2+ 2 5= 1+ 1+ 3 5= 2+ 3 5= 1+ 4 5= 5 For the second testcase, there are total 77 ways to partition 12 as a sum of positive integers but among them, the partitions 12= 2+ 10 , 12= 1+ 1+ 10 and 12= 12 are not valid partitions of 12 as a sum of positive palindromic integers because 10 and 12 are not palindromic. So, there are 74 ways to partition 12 as a sum of positive palindromic integers.",
    "topics": [
      "brute force",
      "dp",
      "math",
      "number theory"
    ],
    "id": "1673C"
  },
  {
    "title": "GCD Guess",
    "url": "https://codeforces.com/problemset/problem/1665/D",
    "history": "This is an interactive problem. There is a positive integer 1 \u2264 x \u2264 10^ 9 that you have to guess. In one query you can choose two positive integers a = \u0338 b . As an answer to this query you will get ( x + a, x + b) , where ( n, m) is the greatest common divisor of the numbers n and m . To guess one hidden number x you are allowed to make no more than 30 queries. InteractionThe hidden number x is fixed before the start of the interaction and does not depend on your queries. To guess each x you can make no more than 30 queries in the following way: \" ? a b\" ( 1 \u2264 a, b \u2264 2 \u00b7 10^ 9 , a = \u0338 b ) . For this query you will get ( x + a, x + b) . When you know x , print a single line in the following format. \" ! x\" ( 1 \u2264 x \u2264 10^ 9 ) . After that continue to solve the next test case. If you ask more than 30 queries for one x or make an invalid query, the interactor will terminate immediately and your program will receive verdict Wrong Answer. After printing each query do not forget to output end of line and flush the output buffer. Otherwise, you will get the Idleness limit exceeded verdict. To do flush use: fflush( stdout) or cout. flush( ) in C+ + ; System. out. flush( ) in Java; flush( output) in Pascal; stdout. flush( ) in Python; Read documentation for other languages. HacksTo use hacks, use the following format of tests: The first line should contain a single integer t ( 1 \u2264 t \u2264 1000 ) \u2014 the number of test cases. The first and only line of each test case should contain a single integer x ( 1 \u2264 x \u2264 10^ 9 ) denoting the integer x that should be guessed.",
    "input": "The first line of input contains a single integer t ( 1 \u2264 t \u2264 1000 ) denoting the number of test cases. The integer x that you have to guess satisfies the constraints: ( 1 \u2264 x \u2264 10^ 9 ) .",
    "output": "",
    "note": "The first hidden number is 4 , that' s why the answers for the queries are: \" ? 1 2\" \u2014 ( 4 + 1, 4 + 2) = ( 5, 6) = 1 . \" ? 12 4\" \u2014 ( 4 + 12, 4 + 4) = ( 16, 8) = 8 . The second hidden number is 10^ 9 , that' s why the answer for the query is: \" ? 2000000000 1999999999\" \u2014 ( 3 \u00b7 10^ 9, 3 \u00b7 10^ 9 - 1) = 1 . These queries are made only for understanding the interaction and are not enough for finding the true x .",
    "topics": [
      "bitmasks",
      "chinese remainder theorem",
      "constructive algorithms",
      "games",
      "interactive",
      "math",
      "number theory"
    ],
    "id": "1665D"
  },
  {
    "title": "Gojou and Matrix Game",
    "url": "https://codeforces.com/problemset/problem/1658/E",
    "history": "Marin feels exhausted after a long day of cosplay, so Gojou invites her to play a game! Marin and Gojou take turns to place one of their tokens on an n \u00d7 n grid with Marin starting first. There are some restrictions and allowances on where to place tokens: Apart from the first move, the token placed by a player must be more than Manhattan distance k away from the previous token placed on the matrix. In other words, if a player places a token at ( x_ 1, y_ 1) , then the token placed by the other player in the next move must be in a cell ( x_ 2, y_ 2) satisfying | x_ 2 - x_ 1| + | y_ 2 - y_ 1| > k . Apart from the previous restriction, a token can be placed anywhere on the matrix, including cells where tokens were previously placed by any player. Whenever a player places a token on cell ( x, y) , that player gets v_ x, y points. All values of v on the grid are distinct. You still get points from a cell even if tokens were already placed onto the cell. The game finishes when each player makes 10^ 100 moves. Marin and Gojou will play n^ 2 games. For each cell of the grid, there will be exactly one game where Marin places a token on that cell on her first move. Please answer for each game, if Marin and Gojou play optimally ( after Marin' s first move) , who will have more points at the end? Or will the game end in a draw ( both players have the same points at the end) ?",
    "input": "The first line contains two integers n , k ( 3 \u2264 n \u2264 2000 , 1 \u2264 k \u2264 n - 2 ) . Note that under these constraints it is always possible to make a move. The following n lines contains n integers each. The j - th integer in the i - th line is v_ i, j ( 1 \u2264 v_ i, j\u2264 n^ 2 ) . All elements in v are distinct.",
    "output": "You should print n lines. In the i - th line, print n characters, where the j - th character is the result of the game in which Marin places her first token in the cell ( i, j) . Print ' M' if Marin wins, ' G' if Gojou wins, and ' D' if the game ends in a draw. Do not print spaces between the characters in one line.",
    "note": "",
    "topics": [
      "data structures",
      "dp",
      "games",
      "hashing",
      "implementation",
      "math",
      "number theory",
      "sortings"
    ],
    "id": "1658E"
  },
  {
    "title": "Marin and Anti-coprime Permutation",
    "url": "https://codeforces.com/problemset/problem/1658/B",
    "history": "Marin wants you to count number of permutations that are beautiful. A beautiful permutation of length n is a permutation that has the following property: ( 1 \u00b7 p_ 1, 2 \u00b7 p_ 2, . . . , n \u00b7 p_ n) > 1, where is the greatest common divisor. A permutation is an array consisting of n distinct integers from 1 to n in arbitrary order. For example, [ 2, 3, 1, 5, 4] is a permutation, but [ 1, 2, 2] is not a permutation ( 2 appears twice in the array) and [ 1, 3, 4] is also not a permutation ( n= 3 but there is 4 in the array) .",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 10^ 3 ) \u2014 the number of test cases. Each test case consists of one line containing one integer n ( 1 \u2264 n \u2264 10^ 3 ) .",
    "output": "For each test case, print one integer \u2014 number of beautiful permutations. Because the answer can be very big, please print the answer modulo 998 244 353 .",
    "note": "In first test case, we only have one permutation which is [ 1] but it is not beautiful because ( 1 \u00b7 1) = 1 . In second test case, we only have one beautiful permutation which is [ 2, 1] because ( 1 \u00b7 2, 2 \u00b7 1) = 2 .",
    "topics": [
      "combinatorics",
      "math",
      "number theory"
    ],
    "id": "1658B"
  },
  {
    "title": "Equal LCM Subsets",
    "url": "https://codeforces.com/problemset/problem/1656/H",
    "history": "You are given two sets of positive integers A and B . You have to find two non- empty subsets S_ A \u2286 A , S_ B \u2286 B so that the least common multiple ( LCM) of the elements of S_ A is equal to the least common multiple ( LCM) of the elements of S_ B .",
    "input": "The input consists of multiple test cases. The first line of the input contains one integer t ( 1 \u2264 t \u2264 200 ) , the number of test cases. For each test case, there is one line containing two integers n, m ( 1 \u2264 n, m \u2264 1000 ) , the sizes of the sets A and B , respectively. The next line contains n distinct integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 4 \u00b7 10^ 36 ) , the elements of A . The next line contains m distinct integers b_ 1, b_ 2, . . . , b_ m ( 1 \u2264 b_ i \u2264 4 \u00b7 10^ 36 ) , the elements of B . The sum of n for all test cases and the sum of m for all test cases is at most 1000 .",
    "output": "For each test case, if there do not exist two subsets with equal least common multiple, output one line with NO. Otherwise, output one line with YES, followed by a line with two integers | S_ A| , | S_ B| ( 1 \u2264 | S_ A| \u2264 n , 1 \u2264 | S_ B| \u2264 m ) , the sizes of the subsets S_ A and S_ B The next line should contain | S_ A| integers x_ 1, x_ 2, . . . , x_ | S_ A| , the elements of S_ A , followed by a line with | S_ B| integers y_ 1, y_ 2, . . . , y_ | S_ B| , the elements of S_ B . If there are multiple possible pairs of subsets, you can print any.",
    "note": "",
    "topics": [
      "data structures",
      "math",
      "number theory"
    ],
    "id": "1656H"
  },
  {
    "title": "K-good",
    "url": "https://codeforces.com/problemset/problem/1656/D",
    "history": "We say that a positive integer n is k - good for some positive integer k if n can be expressed as a sum of k positive integers which give k distinct remainders when divided by k . Given a positive integer n , find some k \u2265 2 so that n is k - good or tell that such a k does not exist.",
    "input": "The input consists of multiple test cases. The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 5 ) \u2014 the number of test cases. Each test case consists of one line with an integer n ( 2 \u2264 n \u2264 10^ 18 ) .",
    "output": "For each test case, print a line with a value of k such that n is k - good ( k \u2265 2 ) , or - 1 if n is not k - good for any k . If there are multiple valid values of k , you can print any of them.",
    "note": "6 is a 3 - good number since it can be expressed as a sum of 3 numbers which give different remainders when divided by 3 : 6 = 1 + 2 + 3 . 15 is also a 3 - good number since 15 = 1 + 5 + 9 and 1, 5, 9 give different remainders when divided by 3 . 20 is a 5 - good number since 20 = 2 + 3 + 4 + 5 + 6 and 2, 3, 4, 5, 6 give different remainders when divided by 5 .",
    "topics": [
      "constructive algorithms",
      "math",
      "number theory"
    ],
    "id": "1656D"
  },
  {
    "title": "Make Equal With Mod",
    "url": "https://codeforces.com/problemset/problem/1656/C",
    "history": "You are given an array of n non- negative integers a_ 1, a_ 2, . . . , a_ n . You can make the following operation: choose an integer x \u2265 2 and replace each number of the array by the remainder when dividing that number by x , that is, for all 1 \u2264 i \u2264 n set a_ i to a_ i x . Determine if it is possible to make all the elements of the array equal by applying the operation zero or more times.",
    "input": "The input consists of multiple test cases. The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. Description of the test cases follows. The first line of each test case contains an integer n ( 1 \u2264 n \u2264 10^ 5 ) \u2014 the length of the array. The second line of each test case contains n integers a_ 1, a_ 2, . . . , a_ n ( 0 \u2264 a_ i \u2264 10^ 9 ) where a_ i is the i - th element of the array. The sum of n for all test cases is at most 2 \u00b7 10^ 5 .",
    "output": "For each test case, print a line with YES if you can make all elements of the list equal by applying the operation. Otherwise, print NO. You may print each letter in any case ( for example, \" YES\" , \" Yes\" , \" yes\" , \" yEs\" will all be recognized as a positive answer) .",
    "note": "In the first test case, one can apply the operation with x = 3 to obtain the array [ 2, 2, 0, 2] , and then apply the operation with x = 2 to obtain [ 0, 0, 0, 0] . In the second test case, all numbers are already equal. In the fourth test case, applying the operation with x = 4 results in the array [ 1, 1, 1, 1] .",
    "topics": [
      "constructive algorithms",
      "math",
      "number theory",
      "sortings"
    ],
    "id": "1656C"
  },
  {
    "title": "Potion Brewing Class",
    "url": "https://codeforces.com/problemset/problem/1654/D",
    "history": "Alice' s potion making professor gave the following assignment to his students: brew a potion using n ingredients, such that the proportion of ingredient i in the final potion is r_ i > 0 ( and r_ 1 + r_ 2 + \u22ef + r_ n = 1 ) . He forgot the recipe, and now all he remembers is a set of n- 1 facts of the form, \" ingredients i and j should have a ratio of x to y \" ( i. e. , if a_ i and a_ j are the amounts of ingredient i and j in the potion respectively, then it must hold a_ i/ a_ j = x/ y ) , where x and y are positive integers. However, it is guaranteed that the set of facts he remembers is sufficient to uniquely determine the original values r_ i . He decided that he will allow the students to pass the class as long as they submit a potion which satisfies all of the n- 1 requirements ( there may be many such satisfactory potions) , and contains a positive integer amount of each ingredient. Find the minimum total amount of ingredients needed to make a potion which passes the class. As the result can be very large, you should print the answer modulo 998 244 353 .",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. The first line of each test case contains a single integer n ( 2 \u2264 n \u2264 2 \u00b7 10^ 5 ) . Each of the next n- 1 lines contains four integers i, j, x, y ( 1 \u2264 i, j \u2264 n , i= \u0338j , 1\u2264 x, y \u2264 n ) \u2014 ingredients i and j should have a ratio of x to y . It is guaranteed that the set of facts is sufficient to uniquely determine the original values r_ i . It is also guaranteed that the sum of n for all test cases does not exceed 2 \u00b7 10^ 5 .",
    "output": "For each test case, print the minimum total amount of ingredients needed to make a potion which passes the class, modulo 998 244 353 .",
    "note": "In the first test case, the minimum total amount of ingredients is 69 . In fact, the amounts of ingredients 1, 2, 3, 4 of a valid potion are 16, 12, 9, 32 , respectively. The potion is valid because Ingredients 3 and 2 have a ratio of 9 : 12 = 3 : 4 ; Ingredients 1 and 2 have a ratio of 16 : 12 = 4 : 3 ; Ingredients 1 and 4 have a ratio of 16 : 32 = 2 : 4 . In the second test case, the amounts of ingredients 1, 2, 3, 4, 5, 6, 7, 8 in the potion that minimizes the total amount of ingredients are 60, 60, 24, 48, 32, 60, 45, 30 .",
    "topics": [
      "dfs and similar",
      "math",
      "number theory",
      "trees"
    ],
    "id": "1654D"
  },
  {
    "title": "Madoka and the Best School in Russia",
    "url": "https://codeforces.com/problemset/problem/1647/D",
    "history": "Madoka is going to enroll in \" TSUNS PTU\" . But she stumbled upon a difficult task during the entrance computer science exam: A number is called good if it is a multiple of d . A number is called beatiful if it is good and it cannot be represented as a product of two good numbers. Notice that a beautiful number must be good. Given a good number x , determine whether it can be represented in at least two different ways as a product of several ( possibly, one) beautiful numbers. Two ways are different if the sets of numbers used are different. Solve this problem for Madoka and help her to enroll in the best school in Russia!",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 100 ) \u2014 number of test cases. Below comes their description. Each test case consists of two integers x and d , separated by a space ( 2 \u2264 x, d \u2264 10^ 9 ) . It is guaranteed that x is a multiple of d .",
    "output": "For each set of input data, output \" NO\" if the number cannot be represented in at least two ways. Otherwise, output \" YES\" . You can output each letter in any case ( for example, \" YES\" , \" Yes\" , \" yes\" , \" yEs\" , \" yEs\" will be recognized as a positive answer) .",
    "note": "In the first example, 6 can be represented as 6 , 1 \u00b7 6 , 2 \u00b7 3 . But 3 and 1 are not a good numbers because they are not divisible by 2 , so there is only one way. In the second example, 12 can be represented as 6 \u00b7 2 , 12 , 3 \u00b7 4 , or 3 \u00b7 2 \u00b7 2 . The first option is suitable. The second is\u2014 no, because 12 is not beautiful number ( 12 = 6 \u00b7 2 ) . The third and fourth are also not suitable, because 3 is not good number. In the third example, 36 can be represented as 18 \u00b7 2 and 6 \u00b7 6 . Therefore it can be decomposed in at least two ways.",
    "topics": [
      "constructive algorithms",
      "dp",
      "math",
      "number theory"
    ],
    "id": "1647D"
  },
  {
    "title": "Power Board",
    "url": "https://codeforces.com/problemset/problem/1646/E",
    "history": "You have a rectangular board of size n\u00d7 m ( n rows, m columns) . The n rows are numbered from 1 to n from top to bottom, and the m columns are numbered from 1 to m from left to right. The cell at the intersection of row i and column j contains the number i^ j ( i raised to the power of j ) . For example, if n= 3 and m= 3 the board is as follows: Find the number of distinct integers written on the board.",
    "input": "The only line contains two integers n and m ( 1\u2264 n, m\u2264 10^ 6 ) \u2014 the number of rows and columns of the board.",
    "output": "Print one integer, the number of distinct integers on the board.",
    "note": "The statement shows the board for the first test case. In this case there are 7 distinct integers: 1 , 2 , 3 , 4 , 8 , 9 , and 27 . In the second test case, the board is as follows: There are 5 distinct numbers: 1 , 2 , 4 , 8 and 16 . In the third test case, the board is as follows: There are 6 distinct numbers: 1 , 2 , 3 , 4 , 9 and 16 .",
    "topics": [
      "brute force",
      "dp",
      "math",
      "number theory"
    ],
    "id": "1646E"
  },
  {
    "title": "Basis",
    "url": "https://codeforces.com/problemset/problem/1644/F",
    "history": "For an array of integers a , let' s define | a| as the number of elements in it. Let' s denote two functions: F( a, k) is a function that takes an array of integers a and a positive integer k . The result of this function is the array containing | a| first elements of the array that you get by replacing each element of a with exactly k copies of that element. For example, F( [ 2, 2, 1, 3, 5, 6, 8] , 2) is calculated as follows: first, you replace each element of the array with 2 copies of it, so you obtain [ 2, 2, 2, 2, 1, 1, 3, 3, 5, 5, 6, 6, 8, 8] . Then, you take the first 7 elements of the array you obtained, so the result of the function is [ 2, 2, 2, 2, 1, 1, 3] . G( a, x, y) is a function that takes an array of integers a and two different integers x and y . The result of this function is the array a with every element equal to x replaced by y , and every element equal to y replaced by x . For example, G( [ 1, 1, 2, 3, 5] , 3, 1) = [ 3, 3, 2, 1, 5] . An array a is a parent of the array b if: either there exists a positive integer k such that F( a, k) = b ; or there exist two different integers x and y such that G( a, x, y) = b . An array a is an ancestor of the array b if there exists a finite sequence of arrays c_ 0, c_ 1, . . . , c_ m ( m \u2265 0 ) such that c_ 0 is a , c_ m is b , and for every i \u2208 [ 1, m] , c_ i- 1 is a parent of c_ i . And now, the problem itself. You are given two integers n and k . Your goal is to construct a sequence of arrays s_ 1, s_ 2, . . . , s_ m in such a way that: every array s_ i contains exactly n elements, and all elements are integers from 1 to k ; for every array a consisting of exactly n integers from 1 to k , the sequence contains at least one array s_ i such that s_ i is an ancestor of a . Print the minimum number of arrays in such sequence.",
    "input": "The only line contains two integers n and k ( 1 \u2264 n, k \u2264 2 \u00b7 10^ 5 ) .",
    "output": "Print one integer \u2014 the minimum number of elements in a sequence of arrays meeting the constraints. Since the answer can be large, output it modulo 998244353 .",
    "note": "Let' s analyze the first example. One of the possible answers for the first example is the sequence [ [ 2, 1, 2] , [ 1, 2, 2] ] . Every array of size 3 consisting of elements from 1 to 2 has an ancestor in this sequence: for the array [ 1, 1, 1] , the ancestor is [ 1, 2, 2] : F( [ 1, 2, 2] , 13) = [ 1, 1, 1] ; for the array [ 1, 1, 2] , the ancestor is [ 1, 2, 2] : F( [ 1, 2, 2] , 2) = [ 1, 1, 2] ; for the array [ 1, 2, 1] , the ancestor is [ 2, 1, 2] : G( [ 2, 1, 2] , 1, 2) = [ 1, 2, 1] ; for the array [ 1, 2, 2] , the ancestor is [ 1, 2, 2] ; for the array [ 2, 1, 1] , the ancestor is [ 1, 2, 2] : G( [ 1, 2, 2] , 1, 2) = [ 2, 1, 1] ; for the array [ 2, 1, 2] , the ancestor is [ 2, 1, 2] ; for the array [ 2, 2, 1] , the ancestor is [ 2, 1, 2] : F( [ 2, 1, 2] , 2) = [ 2, 2, 1] ; for the array [ 2, 2, 2] , the ancestor is [ 1, 2, 2] : G( F( [ 1, 2, 2] , 4) , 1, 2) = G( [ 1, 1, 1] , 1, 2) = [ 2, 2, 2] .",
    "topics": [
      "combinatorics",
      "fft",
      "math",
      "number theory"
    ],
    "id": "1644F"
  },
  {
    "title": "Infinite Set",
    "url": "https://codeforces.com/problemset/problem/1635/D",
    "history": "You are given an array a consisting of n distinct positive integers. Let' s consider an infinite integer set S which contains all integers x that satisfy at least one of the following conditions: x = a_ i for some 1 \u2264 i \u2264 n . x = 2y + 1 and y is in S . x = 4y and y is in S . For example, if a = [ 1, 2] then the 10 smallest elements in S will be { 1, 2, 3, 4, 5, 7, 8, 9, 11, 12} . Find the number of elements in S that are strictly smaller than 2^ p . Since this number may be too large, print it modulo 10^ 9 + 7 .",
    "input": "The first line contains two integers n and p ( 1 \u2264 n, p \u2264 2 \u00b7 10^ 5) . The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 9) . It is guaranteed that all the numbers in a are distinct.",
    "output": "Print a single integer, the number of elements in S that are strictly smaller than 2^ p . Remember to print it modulo 10^ 9 + 7 .",
    "note": "In the first example, the elements smaller than 2^ 4 are { 1, 3, 4, 6, 7, 9, 12, 13, 15} . In the second example, the elements smaller than 2^ 7 are { 5, 11, 20, 23, 39, 41, 44, 47, 79, 80, 83, 89, 92, 95} .",
    "topics": [
      "bitmasks",
      "dp",
      "math",
      "matrices",
      "number theory",
      "strings"
    ],
    "id": "1635D"
  },
  {
    "title": "New Year Concert",
    "url": "https://codeforces.com/problemset/problem/1632/D",
    "history": "New Year is just around the corner, which means that in School 179, preparations for the concert are in full swing. There are n classes in the school, numbered from 1 to n , the i - th class has prepared a scene of length a_ i minutes. As the main one responsible for holding the concert, Idnar knows that if a concert has k scenes of lengths b_ 1 , b_ 2 , . . . , b_ k minutes, then the audience will get bored if there exist two integers l and r such that 1 \u2264 l \u2264 r \u2264 k and ( b_ l, b_ l + 1, . . . , b_ r - 1, b_ r) = r - l + 1 , where ( b_ l, b_ l + 1, . . . , b_ r - 1, b_ r) is equal to the greatest common divisor ( GCD) of the numbers b_ l , b_ l + 1 , . . . , b_ r - 1 , b_ r . To avoid boring the audience, Idnar can ask any number of times ( possibly zero) for the t - th class ( 1 \u2264 t \u2264 k ) to make a new scene d minutes in length, where d can be any positive integer. Thus, after this operation, b_ t is equal to d . Note that t and d can be different for each operation. For a sequence of scene lengths b_ 1 , b_ 2 , . . . , b_ k , let f( b) be the minimum number of classes Idnar has to ask to change their scene if he wants to avoid boring the audience. Idnar hasn' t decided which scenes will be allowed for the concert, so he wants to know the value of f for each non- empty prefix of a . In other words, Idnar wants to know the values of f( a_ 1) , f( a_ 1 , a_ 2) , . . . , f( a_ 1 , a_ 2 , . . . , a_ n) .",
    "input": "The first line contains a single integer n ( 1 \u2264 n \u2264 2 \u00b7 10^ 5 ) \u2014 the number of classes in the school. The second line contains n positive integers a_ 1 , a_ 2 , . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 9 ) \u2014 the lengths of the class scenes.",
    "output": "Print a sequence of n integers in a single line \u2014 f( a_ 1) , f( a_ 1 , a_ 2) , . . . , f( a_ 1 , a_ 2 , . . . , a_ n) .",
    "note": "In the first test we can change 1 to 2 , so the answer is 1 . In the second test: [ 1] can be changed into [ 2] , [ 1, 4] can be changed into [ 3, 4] , [ 1, 4, 2] can be changed into [ 2, 3, 2] .",
    "topics": [
      "binary search",
      "data structures",
      "greedy",
      "math",
      "number theory",
      "two pointers"
    ],
    "id": "1632D"
  },
  {
    "title": "Making It Bipartite",
    "url": "https://codeforces.com/problemset/problem/1630/F",
    "history": "You are given an undirected graph of n vertices indexed from 1 to n , where vertex i has a value a_ i assigned to it and all values a_ i are different. There is an edge between two vertices u and v if either a_ u divides a_ v or a_ v divides a_ u . Find the minimum number of vertices to remove such that the remaining graph is bipartite, when you remove a vertex you remove all the edges incident to it.",
    "input": "The input consists of multiple test cases. The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. Description of the test cases follows. The first line of each test case contains a single integer n ( 1 \u2264 n \u2264 5\u00b710^ 4 ) \u2014 the number of vertices in the graph. The second line of each test case contains n integers, the i - th of them is the value a_ i ( 1 \u2264 a_ i \u2264 5\u00b710^ 4 ) assigned to the i - th vertex, all values a_ i are different. It is guaranteed that the sum of n over all test cases does not exceed 5\u00b710^ 4 .",
    "output": "For each test case print a single integer \u2014 the minimum number of vertices to remove such that the remaining graph is bipartite.",
    "note": "In the first test case if we remove the vertices with values 1 and 2 we will obtain a bipartite graph, so the answer is 2 , it is impossible to remove less than 2 vertices and still obtain a bipartite graph. BeforeAfter test case # 1 In the second test case we do not have to remove any vertex because the graph is already bipartite, so the answer is 0 . BeforeAfter test case # 2 In the third test case we only have to remove the vertex with value 12 , so the answer is 1 . BeforeAfter test case # 3 In the fourth test case we remove the vertices with values 2 and 195 , so the answer is 2 . BeforeAfter test case # 4",
    "topics": [
      "flows",
      "graph matchings",
      "graphs",
      "number theory"
    ],
    "id": "1630F"
  },
  {
    "title": "Expected Components",
    "url": "https://codeforces.com/problemset/problem/1630/E",
    "history": "Given a cyclic array a of size n , where a_ i is the value of a in the i - th position, there may be repeated values. Let us define that a permutation of a is equal to another permutation of a if and only if their values are the same for each position i or we can transform them to each other by performing some cyclic rotation. Let us define for a cyclic array b its number of components as the number of connected components in a graph, where the vertices are the positions of b and we add an edge between each pair of adjacent positions of b with equal values ( note that in a cyclic array the first and last position are also adjacents) . Find the expected value of components of a permutation of a if we select it equiprobably over the set of all the different permutations of a .",
    "input": "The input consists of multiple test cases. The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 5 ) \u2014 the number of test cases. Description of the test cases follows. The first line of each test case contains a single integer n ( 1 \u2264 n \u2264 10^ 6 ) \u2014 the size of the cyclic array a . The second line of each test case contains n integers, the i - th of them is the value a_ i ( 1 \u2264 a_ i \u2264 n ) . It is guaranteed that the sum of n over all test cases does not exceed 10^ 6 . It is guaranteed that the total number of different permutations of a is not divisible by M",
    "output": "For each test case print a single integer \u2014 the expected value of components of a permutation of a if we select it equiprobably over the set of all the different permutations of a modulo 998 244 353 . Formally, let M = 998 244 353 . It can be shown that the answer can be expressed as an irreducible fraction p/ q , where p and q are integers and q \u2261\u03380 M . Output the integer equal to p \u00b7 q^ - 1 M . In other words, output such an integer x that 0 \u2264 x < M and x \u00b7 q \u2261 p M .",
    "note": "In the first test case there is only 1 different permutation of a : [ 1, 1, 1, 1] has 1 component. Therefore the expected value of components is 1/ 1 = 1 In the second test case there are 4 ways to permute the cyclic array a , but there is only 1 different permutation of a : [ 1, 1, 1, 2] , [ 1, 1, 2, 1] , [ 1, 2, 1, 1] and [ 2, 1, 1, 1] are the same permutation and have 2 components. Therefore the expected value of components is 2/ 1 = 2 In the third test case there are 6 ways to permute the cyclic array a , but there are only 2 different permutations of a : [ 1, 1, 2, 2] , [ 2, 1, 1, 2] , [ 2, 2, 1, 1] and [ 1, 2, 2, 1] are the same permutation and have 2 components. [ 1, 2, 1, 2] and [ 2, 1, 2, 1] are the same permutation and have 4 components. Therefore the expected value of components is 2+ 4/ 2 = 6/ 2 = 3 In the fourth test case there are 120 ways to permute the cyclic array a , but there are only 24 different permutations of a : Any permutation of a has 5 components. Therefore the expected value of components is 24\u00b7 5/ 24 = 120/ 24 = 5",
    "topics": [
      "combinatorics",
      "math",
      "number theory",
      "probabilities"
    ],
    "id": "1630E"
  },
  {
    "title": "Flipping Range",
    "url": "https://codeforces.com/problemset/problem/1630/D",
    "history": "You are given an array a of n integers and a set B of m positive integers such that 1 \u2264 b_ i \u2264\u230an/ 2\u230b for 1\u2264 i\u2264 m , where b_ i is the i - th element of B . You can make the following operation on a : Select some x such that x appears in B . Select an interval from array a of size x and multiply by - 1 every element in the interval. Formally, select l and r such that 1\u2264 l\u2264 r \u2264 n and r- l+ 1= x , then assign a_ i: = - a_ i for every i such that l\u2264 i\u2264 r . Consider the following example, let a= [ 0, 6, - 2, 1, - 4, 5] and B= { 1, 2} : [ 0, 6, - 2, - 1, 4, 5] is obtained after choosing size 2 and l= 4 , r= 5 . [ 0, 6, 2, - 1, 4, 5] is obtained after choosing size 1 and l= 3 , r= 3 . Find the maximum \u2211_ i= 1^ n a_ i you can get after applying such operation any number of times ( possibly zero) .",
    "input": "The input consists of multiple test cases. The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 5 ) \u2014 the number of test cases. Description of the test cases follows. The first line of each test case contains two integers n and m ( 2\u2264 n \u2264 10^ 6 , 1 \u2264 m \u2264\u230an/ 2\u230b ) \u2014 the number of elements of a and B respectively. The second line of each test case contains n integers a_ 1, a_ 2, . . . , a_ n ( - 10^ 9\u2264 a_ i \u2264 10^ 9 ) . The third line of each test case contains m distinct positive integers b_ 1, b_ 2, . . . , b_ m ( 1 \u2264 b_ i \u2264\u230an/ 2\u230b ) \u2014 the elements in the set B . It' s guaranteed that the sum of n over all test cases does not exceed 10^ 6 .",
    "output": "For each test case print a single integer \u2014 the maximum possible sum of all a_ i after applying such operation any number of times.",
    "note": "In the first test, you can apply the operation x= 1 , l= 3 , r= 3 , and the operation x= 1 , l= 5 , r= 5 , then the array becomes [ 0, 6, 2, 1, 4, 5] . In the second test, you can apply the operation x= 2 , l= 2 , r= 3 , and the array becomes [ 1, 1, - 1, - 1, 1, - 1, 1] , then apply the operation x= 2 , l= 3 , r= 4 , and the array becomes [ 1, 1, 1, 1, 1, - 1, 1] . There is no way to achieve a sum bigger than 5 .",
    "topics": [
      "constructive algorithms",
      "dp",
      "greedy",
      "number theory"
    ],
    "id": "1630D"
  },
  {
    "title": "GCD Arrays",
    "url": "https://codeforces.com/problemset/problem/1629/B",
    "history": "Consider the array a composed of all the integers in the range [ l, r] . For example, if l = 3 and r = 7 , then a = [ 3, 4, 5, 6, 7] . Given l , r , and k , is it possible for ( a) to be greater than 1 after doing the following operation at most k times? Choose 2 numbers from a . Permanently remove one occurrence of each of them from the array. Insert their product back into a . ( b) denotes the greatest common divisor ( GCD) of the integers in b .",
    "input": "The first line of the input contains a single integer t ( 1 \u2264 t \u2264 10^ 5 ) \u2014 the number of test cases. The description of test cases follows. The input for each test case consists of a single line containing 3 non- negative integers l , r , and k ( 1 \u2264 l \u2264 r \u2264 10^ 9, 0 \u2264 k \u2264 r - l ) .",
    "output": "For each test case, print \" YES\" if it is possible to have the GCD of the corresponding array greater than 1 by performing at most k operations, and \" NO\" otherwise ( case insensitive) .",
    "note": "For the first test case, a = [ 1] , so the answer is \" NO\" , since the only element in the array is 1 . For the second test case the array is a = [ 3, 4, 5] and we have 1 operation. After the first operation the array can change to: [ 3, 20] , [ 4, 15] or [ 5, 12] all of which having their greatest common divisor equal to 1 so the answer is \" NO\" . For the third test case, a = [ 13] , so the answer is \" YES\" , since the only element in the array is 13 . For the fourth test case, a = [ 4] , so the answer is \" YES\" , since the only element in the array is 4 .",
    "topics": [
      "greedy",
      "math",
      "number theory"
    ],
    "id": "1629B"
  },
  {
    "title": "Not Adding",
    "url": "https://codeforces.com/problemset/problem/1627/D",
    "history": "You have an array a_ 1, a_ 2, . . . , a_ n consisting of n distinct integers. You are allowed to perform the following operation on it: Choose two elements from the array a_ i and a_ j ( i j ) such that ( a_ i, a_ j) is not present in the array, and add ( a_ i, a_ j) to the end of the array. Here ( x, y) denotes greatest common divisor ( GCD) of integers x and y . Note that the array changes after each operation, and the subsequent operations are performed on the new array. What is the maximum number of times you can perform the operation on the array?",
    "input": "The first line consists of a single integer n ( 2 \u2264 n \u2264 10^ 6 ) . The second line consists of n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 6 ) . All a_ i are distinct.",
    "output": "Output a single line containing one integer \u2014 the maximum number of times the operation can be performed on the given array.",
    "note": "In the first example, one of the ways to perform maximum number of operations on the array is: Pick i = 1, j= 5 and add ( a_ 1, a_ 5) = ( 4, 30) = 2 to the array. Pick i = 2, j= 4 and add ( a_ 2, a_ 4) = ( 20, 25) = 5 to the array. Pick i = 2, j= 5 and add ( a_ 2, a_ 5) = ( 20, 30) = 10 to the array. It can be proved that there is no way to perform more than 3 operations on the original array. In the second example one can add 3 , then 1 , then 5 , and 2 .",
    "topics": [
      "brute force",
      "dp",
      "math",
      "number theory"
    ],
    "id": "1627D"
  },
  {
    "title": "Not Assigning",
    "url": "https://codeforces.com/problemset/problem/1627/C",
    "history": "You are given a tree of n vertices numbered from 1 to n , with edges numbered from 1 to n- 1 . A tree is a connected undirected graph without cycles. You have to assign integer weights to each edge of the tree, such that the resultant graph is a prime tree. A prime tree is a tree where the weight of every path consisting of one or two edges is prime. A path should not visit any vertex twice. The weight of a path is the sum of edge weights on that path. Consider the graph below. It is a prime tree as the weight of every path of two or less edges is prime. For example, the following path of two edges: 2 \u2192 1 \u2192 3 has a weight of 11 + 2 = 13 , which is prime. Similarly, the path of one edge: 4 \u2192 3 has a weight of 5 , which is also prime. Print any valid assignment of weights such that the resultant tree is a prime tree. If there is no such assignment, then print - 1 . It can be proven that if a valid assignment exists, one exists with weights between 1 and 10^ 5 as well.",
    "input": "The input consists of multiple test cases. The first line contains an integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. The description of the test cases follows. The first line of each test case contains one integer n ( 2 \u2264 n \u2264 10^ 5 ) \u2014 the number of vertices in the tree. Then, n- 1 lines follow. The i - th line contains two integers u and v ( 1 \u2264 u, v \u2264 n ) denoting that edge number i is between vertices u and v . It is guaranteed that the edges form a tree. It is guaranteed that the sum of n over all test cases does not exceed 10^ 5 .",
    "output": "For each test case, if a valid assignment exists, then print a single line containing n- 1 integers a_ 1, a_ 2, . . . , a_ n- 1 ( 1 \u2264 a_ i \u2264 10^ 5 ) , where a_ i denotes the weight assigned to the edge numbered i . Otherwise, print - 1 . If there are multiple solutions, you may print any.",
    "note": "For the first test case, there are only two paths having one edge each: 1 \u2192 2 and 2 \u2192 1 , both having a weight of 17 , which is prime. The second test case is described in the statement. It can be proven that no such assignment exists for the third test case.",
    "topics": [
      "constructive algorithms",
      "dfs and similar",
      "number theory",
      "trees"
    ],
    "id": "1627C"
  },
  {
    "title": "A Random Code Problem",
    "url": "https://codeforces.com/problemset/problem/1626/F",
    "history": "You are given an integer array a_ 0, a_ 1, . . . , a_ n - 1 , and an integer k . You perform the following code with it: long long ans = 0; / / create a 64- bit signed variable which is initially equal to 0for( int i = 1; i < = k; i+ + ) int idx = rnd. next( 0, n - 1) ; / / generate a random integer between 0 and n - 1, both inclusive / / each integer from 0 to n - 1 has the same probability of being chosen ans + = a[ idx] ; a[ idx] - = ( a[ idx]",
    "input": "The only line contains six integers n , a_ 0 , x , y , k and M ( 1 \u2264 n \u2264 10^ 7 ; 1 \u2264 a_ 0, x, y < M \u2264 998244353 ; 1 \u2264 k \u2264 17 ) . The array a in the input is constructed as follows: a_ 0 is given in the input; for every i from 1 to n - 1 , the value of a_ i can be calculated as a_ i = ( a_ i - 1\u00b7 x + y) M .",
    "output": "Let the expected value of the variable ans after performing the code be E . It can be shown that E \u00b7 n^ k is an integer. You have to output this integer modulo 998244353 .",
    "note": "The array in the first example test is [ 10, 35, 22] . In the second example, it is [ 15363, 1418543] .",
    "topics": [
      "combinatorics",
      "dp",
      "math",
      "number theory",
      "probabilities"
    ],
    "id": "1626F"
  },
  {
    "title": "Quadratic Set",
    "url": "https://codeforces.com/problemset/problem/1622/F",
    "history": "Let' s call a set of positive integers a_ 1, a_ 2, . . . , a_ k quadratic if the product of the factorials of its elements is a square of an integer, i. e. \u220f_ i= 1^ k a_ i! = m^ 2 , for some integer m . You are given a positive integer n . Your task is to find a quadratic subset of a set 1, 2, . . . , n of maximum size. If there are multiple answers, print any of them.",
    "input": "A single line contains a single integer n ( 1 \u2264 n \u2264 10^ 6 ) .",
    "output": "In the first line, print a single integer \u2014 the size of the maximum subset. In the second line, print the subset itself in an arbitrary order.",
    "note": "",
    "topics": [
      "constructive algorithms",
      "hashing",
      "math",
      "number theory"
    ],
    "id": "1622F"
  },
  {
    "title": "Christmas Chocolates",
    "url": "https://codeforces.com/problemset/problem/1617/E",
    "history": "Christmas is coming, Icy has just received a box of chocolates from her grandparents! The box contains n chocolates. The i - th chocolate has a non- negative integer type a_ i . Icy believes that good things come in pairs. Unfortunately, all types of chocolates are distinct ( all a_ i are distinct) . Icy wants to make at least one pair of chocolates the same type. As a result, she asks her grandparents to perform some chocolate exchanges. Before performing any chocolate exchanges, Icy chooses two chocolates with indices x and y ( 1 \u2264 x, y \u2264 n , x y ) . In a chocolate exchange, Icy' s grandparents choose a non- negative integer k , such that 2^ k \u2265 a_ x , and change the type of the chocolate x from a_ x to 2^ k - a_ x ( that is, perform a_ x : = 2^ k - a_ x ) . The chocolate exchanges will be stopped only when a_ x = a_ y . Note that other pairs of equal chocolate types do not stop the procedure. Icy' s grandparents are smart, so they would choose the sequence of chocolate exchanges that minimizes the number of exchanges needed. Since Icy likes causing trouble, she wants to maximize the minimum number of exchanges needed by choosing x and y appropriately. She wonders what is the optimal pair ( x, y) such that the minimum number of exchanges needed is maximized across all possible choices of ( x, y) . Since Icy is not good at math, she hopes that you can help her solve the problem.",
    "input": "The first line of the input contains a single integer n ( 2 \u2264 n \u2264 2 \u00b7 10^ 5 ) \u2014 the number of chocolates. The second line of the input contains n integers a_ 1, a_ 2, . . . , a_ n ( 0 \u2264 a_ i \u2264 10^ 9 ) . It is guaranteed that all a_ i are distinct.",
    "output": "Output three integers x , y , and m . x and y are indices of the optimal chocolates to perform exchanges on. Your output must satisfy 1 \u2264 x, y \u2264 n , x y . m is the number of exchanges needed to obtain a_ x = a_ y . We can show that m \u2264 10^ 9 for any pair of chocolates. If there are multiple solutions, output any.",
    "note": "In the first test case, the minimum number of exchanges needed to exchange a chocolate of type 6 to a chocolate of type 9 is 5 . The sequence of exchanges is as follows: 6 \u2192 2 \u2192 0 \u2192 1 \u2192 7 \u2192 9 . In the second test case, the minimum number of exchanges needed to exchange a chocolate of type 4 to a chocolate of type 8 is 2 . The sequence of exchanges is as follows: 4 \u2192 0 \u2192 8 .",
    "topics": [
      "dfs and similar",
      "dp",
      "games",
      "graphs",
      "implementation",
      "math",
      "number theory",
      "shortest paths",
      "trees"
    ],
    "id": "1617E"
  },
  {
    "title": "GCD Problem",
    "url": "https://codeforces.com/problemset/problem/1617/B",
    "history": "Given a positive integer n . Find three distinct positive integers a , b , c such that a + b + c = n and gcd( a, b) = c , where gcd( x, y) denotes the greatest common divisor ( GCD) of integers x and y .",
    "input": "The input consists of multiple test cases. The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 5 ) \u2014 the number of test cases. Description of the test cases follows. The first and only line of each test case contains a single integer n ( 10 \u2264 n \u2264 10^ 9 ) .",
    "output": "For each test case, output three distinct positive integers a , b , c satisfying the requirements. If there are multiple solutions, you can print any. We can show that an answer always exists.",
    "note": "In the first test case, 6 + 9 + 3 = 18 and gcd( 6, 9) = 3 . In the second test case, 21 + 39 + 3 = 63 and gcd( 21, 39) = 3 . In the third test case, 29 + 43 + 1 = 73 and gcd( 29, 43) = 1 .",
    "topics": [
      "brute force",
      "constructive algorithms",
      "math",
      "number theory"
    ],
    "id": "1617B"
  },
  {
    "title": "Divan and Kostomuksha (hard version)",
    "url": "https://codeforces.com/problemset/problem/1614/D2",
    "history": "This is the hard version of the problem. The only difference is maximum value of a_ i . Once in Kostomuksha Divan found an array a consisting of positive integers. Now he wants to reorder the elements of a to maximize the value of the following function: \u2211_ i= 1^ n gcd( a_ 1, a_ 2, . . . , a_ i) , where gcd( x_ 1, x_ 2, . . . , x_ k) denotes the greatest common divisor of integers x_ 1, x_ 2, . . . , x_ k , and gcd( x) = x for any integer x . Reordering elements of an array means changing the order of elements in the array arbitrary, or leaving the initial order. Of course, Divan can solve this problem. However, he found it interesting, so he decided to share it with you.",
    "input": "The first line contains a single integer n ( 1 \u2264 n \u2264 10^ 5 ) \u2014 the size of the array a . The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i\u2264 2 \u00b7 10^ 7 ) \u2014 the array a .",
    "output": "Output the maximum value of the function that you can get by reordering elements of the array a .",
    "note": "In the first example, it' s optimal to rearrange the elements of the given array in the following order: [ 6, 2, 2, 2, 3, 1] : gcd( a_ 1) + gcd( a_ 1, a_ 2) + gcd( a_ 1, a_ 2, a_ 3) + gcd( a_ 1, a_ 2, a_ 3, a_ 4) + gcd( a_ 1, a_ 2, a_ 3, a_ 4, a_ 5) + gcd( a_ 1, a_ 2, a_ 3, a_ 4, a_ 5, a_ 6) = 6 + 2 + 2 + 2 + 1 + 1 = 14. It can be shown that it is impossible to get a better answer. In the second example, it' s optimal to rearrange the elements of a given array in the following order: [ 100, 10, 10, 5, 1, 3, 3, 7, 42, 54] .",
    "topics": [
      "dp",
      "number theory"
    ],
    "id": "1614D2"
  },
  {
    "title": "Divan and Kostomuksha (easy version)",
    "url": "https://codeforces.com/problemset/problem/1614/D1",
    "history": "This is the easy version of the problem. The only difference is maximum value of a_ i . Once in Kostomuksha Divan found an array a consisting of positive integers. Now he wants to reorder the elements of a to maximize the value of the following function: \u2211_ i= 1^ n gcd( a_ 1, a_ 2, . . . , a_ i) , where gcd( x_ 1, x_ 2, . . . , x_ k) denotes the greatest common divisor of integers x_ 1, x_ 2, . . . , x_ k , and gcd( x) = x for any integer x . Reordering elements of an array means changing the order of elements in the array arbitrary, or leaving the initial order. Of course, Divan can solve this problem. However, he found it interesting, so he decided to share it with you.",
    "input": "The first line contains a single integer n ( 1 \u2264 n \u2264 10^ 5 ) \u2014 the size of the array a . The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i\u2264 5 \u00b7 10^ 6 ) \u2014 the array a .",
    "output": "Output the maximum value of the function that you can get by reordering elements of the array a .",
    "note": "In the first example, it' s optimal to rearrange the elements of the given array in the following order: [ 6, 2, 2, 2, 3, 1] : gcd( a_ 1) + gcd( a_ 1, a_ 2) + gcd( a_ 1, a_ 2, a_ 3) + gcd( a_ 1, a_ 2, a_ 3, a_ 4) + gcd( a_ 1, a_ 2, a_ 3, a_ 4, a_ 5) + gcd( a_ 1, a_ 2, a_ 3, a_ 4, a_ 5, a_ 6) = 6 + 2 + 2 + 2 + 1 + 1 = 14. It can be shown that it is impossible to get a better answer. In the second example, it' s optimal to rearrange the elements of a given array in the following order: [ 100, 10, 10, 5, 1, 3, 3, 7, 42, 54] .",
    "topics": [
      "dp",
      "number theory"
    ],
    "id": "1614D1"
  },
  {
    "title": "X-Magic Pair",
    "url": "https://codeforces.com/problemset/problem/1612/D",
    "history": "You are given a pair of integers ( a, b) and an integer x . You can change the pair in two different ways: set ( assign) a : = | a - b| ; set ( assign) b : = | a - b| , where | a - b| is the absolute difference between a and b . The pair ( a, b) is called x - magic if x is obtainable either as a or as b using only the given operations ( i. e. the pair ( a, b) is x - magic if a = x or b = x after some number of operations applied) . You can apply the operations any number of times ( even zero) . Your task is to find out if the pair ( a, b) is x - magic or not. You have to answer t independent test cases.",
    "input": "The first line of the input contains one integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. The next t lines describe test cases. The only line of the test case contains three integers a , b and x ( 1 \u2264 a, b, x \u2264 10^ 18 ) .",
    "output": "For the i - th test case, print YES if the corresponding pair ( a, b) is x - magic and NO otherwise.",
    "note": "",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "1612D"
  },
  {
    "title": "Not Quite Lee",
    "url": "https://codeforces.com/problemset/problem/1610/D",
    "history": "Lee couldn' t sleep lately, because he had nightmares. In one of his nightmares ( which was about an unbalanced global round) , he decided to fight back and propose a problem below ( which you should solve) to balance the round, hopefully setting him free from the nightmares. A non- empty array b_ 1, b_ 2, . . . , b_ m is called good, if there exist m integer sequences which satisfy the following properties: The i - th sequence consists of b_ i consecutive integers ( for example if b_ i = 3 then the i - th sequence can be ( - 1, 0, 1) or ( - 5, - 4, - 3) but not ( 0, - 1, 1) or ( 1, 2, 3, 4) ) . Assuming the sum of integers in the i - th sequence is sum_ i , we want sum_ 1 + sum_ 2 + . . . + sum_ m to be equal to 0 . You are given an array a_ 1, a_ 2, . . . , a_ n . It has 2^ n - 1 nonempty subsequences. Find how many of them are good. As this number can be very large, output it modulo 10^ 9 + 7 . An array c is a subsequence of an array d if c can be obtained from d by deletion of several ( possibly, zero or all) elements.",
    "input": "The first line contains a single integer n ( 2 \u2264 n \u2264 2 \u00b7 10^ 5 ) \u2014 the size of array a . The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 9 ) \u2014 elements of the array.",
    "output": "Print a single integer \u2014 the number of nonempty good subsequences of a , modulo 10^ 9 + 7 .",
    "note": "For the first test, two examples of good subsequences are [ 2, 7] and [ 2, 2, 4, 7] : For b = [ 2, 7] we can use ( - 3, - 4) as the first sequence and ( - 2, - 1, . . . , 4) as the second. Note that subsequence [ 2, 7] appears twice in [ 2, 2, 4, 7] , so we have to count it twice. Green circles denote ( - 3, - 4) and orange squares denote ( - 2, - 1, . . . , 4) . For b = [ 2, 2, 4, 7] the following sequences would satisfy the properties: ( - 1, 0) , ( - 3, - 2) , ( 0, 1, 2, 3) and ( - 3, - 2, . . . , 3)",
    "topics": [
      "combinatorics",
      "dp",
      "math",
      "number theory"
    ],
    "id": "1610D"
  },
  {
    "title": "Complex Market Analysis",
    "url": "https://codeforces.com/problemset/problem/1609/C",
    "history": "While performing complex market analysis William encountered the following problem: For a given array a of size n and a natural number e , calculate the number of pairs of natural numbers ( i, k) which satisfy the following conditions: 1 \u2264 i, k i + e \u00b7 k \u2264 n . Product a_ i \u00b7 a_ i + e\u00b7 a_ i + 2 \u00b7 e\u00b7. . . \u00b7 a_ i + k \u00b7 e is a prime number. A prime number ( or a prime) is a natural number greater than 1 that is not a product of two smaller natural numbers.",
    "input": "Each test contains multiple test cases. The first line contains the number of test cases t ( 1 \u2264 t \u2264 10 000 ) . Description of the test cases follows. The first line of each test case contains two integers n and e ( 1 \u2264 e \u2264 n \u2264 2 \u00b7 10^ 5) , the number of items in the array and number e , respectively. The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 6) , the contents of the array. It is guaranteed that the sum of n over all test cases does not exceed 2 \u00b7 10^ 5 .",
    "output": "For each test case output the answer in the following format: Output one line containing the number of pairs of numbers ( i, k) which satisfy the conditions.",
    "note": "In the first example test case two pairs satisfy the conditions: i = 2, k = 1 , for which the product is: a_ 2\u00b7 a_ 5 = 2 which is a prime number. i = 3, k = 1 , for which the product is: a_ 3\u00b7 a_ 6 = 19 which is a prime number. In the second example test case there are no pairs that satisfy the conditions. In the third example test case four pairs satisfy the conditions: i = 1, k = 1 , for which the product is: a_ 1\u00b7 a_ 4 = 2 which is a prime number. i = 1, k = 2 , for which the product is: a_ 1\u00b7 a_ 4\u00b7 a_ 7 = 2 which is a prime number. i = 3, k = 1 , for which the product is: a_ 3\u00b7 a_ 6 = 2 which is a prime number. i = 6, k = 1 , for which the product is: a_ 6\u00b7 a_ 9 = 2 which is a prime number. In the fourth example test case there are no pairs that satisfy the conditions. In the fifth example test case five pairs satisfy the conditions: i = 1, k = 1 , for which the product is: a_ 1\u00b7 a_ 2 = 2 which is a prime number. i = 1, k = 2 , for which the product is: a_ 1\u00b7 a_ 2\u00b7 a_ 3 = 2 which is a prime number. i = 1, k = 3 , for which the product is: a_ 1\u00b7 a_ 2\u00b7 a_ 3\u00b7 a_ 4 = 2 which is a prime number. i = 2, k = 1 , for which the product is: a_ 2\u00b7 a_ 3 = 2 which is a prime number. i = 2, k = 2 , for which the product is: a_ 2\u00b7 a_ 3\u00b7 a_ 4 = 2 which is a prime number. In the sixth example test case there are no pairs that satisfy the conditions.",
    "topics": [
      "binary search",
      "dp",
      "implementation",
      "number theory",
      "schedules",
      "two pointers"
    ],
    "id": "1609C"
  },
  {
    "title": "Divide and Multiply",
    "url": "https://codeforces.com/problemset/problem/1609/A",
    "history": "William has array of n numbers a_ 1, a_ 2, . . . , a_ n . He can perform the following sequence of operations any number of times: Pick any two items from array a_ i and a_ j , where a_ i must be a multiple of 2 a_ i = a_ i/ 2 a_ j = a_ j \u00b7 2 Help William find the maximal sum of array elements, which he can get by performing the sequence of operations described above.",
    "input": "Each test contains multiple test cases. The first line contains the number of test cases t ( 1 \u2264 t \u2264 10^ 4 ) . Description of the test cases follows. The first line of each test case contains an integer n ( 1 \u2264 n \u2264 15) , the number of elements in William' s array. The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i < 16) , the contents of William' s array.",
    "output": "For each test case output the maximal sum of array elements after performing an optimal sequence of operations.",
    "note": "In the first example test case the optimal sequence would be: Pick i = 2 and j = 1 . After performing a sequence of operations a_ 2 = 4/ 2 = 2 and a_ 1 = 6 \u00b7 2 = 12 , making the array look as: [ 12, 2, 2] . Pick i = 2 and j = 1 . After performing a sequence of operations a_ 2 = 2/ 2 = 1 and a_ 1 = 12 \u00b7 2 = 24 , making the array look as: [ 24, 1, 2] . Pick i = 3 and j = 1 . After performing a sequence of operations a_ 3 = 2/ 2 = 1 and a_ 1 = 24 \u00b7 2 = 48 , making the array look as: [ 48, 1, 1] . The final answer 48 + 1 + 1 = 50 . In the third example test case there is no way to change the sum of elements, so the answer is 10 .",
    "topics": [
      "greedy",
      "implementation",
      "math",
      "number theory"
    ],
    "id": "1609A"
  },
  {
    "title": "Dominoes",
    "url": "https://codeforces.com/problemset/problem/1608/D",
    "history": "You are given n dominoes. Each domino has a left and a right cell. Each cell can be colored either black or white. Some cells are already colored, while some aren' t yet. The coloring is said to be valid if and only if it is possible to rearrange the dominoes in some order such that for each 1 \u2264 i \u2264 n the color of the right cell of the i - th domino is different from the color of the left cell of the ( ( i n) + 1) - st domino. Note that you can' t rotate the dominoes, so the left cell always remains the left cell, and the right cell always remains the right cell. Count the number of valid ways to color the yet uncolored cells of dominoes. Two ways are considered different if there is a cell that is colored white in one way and black in the other. In particular, colorings BW WB and WB BW different ( and both invalid) . As this number can be very big, output it modulo 998 244 353 .",
    "input": "The first line of the input contains a single integer n ( 1 \u2264 n \u2264 10^ 5 ) \u2014 the number of dominoes. The next n lines describe dominoes. Each line contains two characters which represent the left and the right cell. Character B means that the corresponding cell is black, character W means that the corresponding cell is white, and ? means that the cell is yet to be colored.",
    "output": "Print a single integer \u2014 the answer to the problem.",
    "note": "In the first test case, there is only one domino, and we need the color of its right cell to be different from the color of its left cell. There is only one way to achieve this. In the second test case, there are only 2 such colorings: BB WW and WB WB.",
    "topics": [
      "combinatorics",
      "fft",
      "graphs",
      "math",
      "number theory"
    ],
    "id": "1608D"
  },
  {
    "title": "Banknotes",
    "url": "https://codeforces.com/problemset/problem/1606/C",
    "history": "In Berland, n different types of banknotes are used. Banknotes of the i - th type have denomination 10^ a_ i burles ( burles are the currency used in Berland) ; the denomination of banknotes of the first type is exactly 1 . Let' s denote f( s) as the minimum number of banknotes required to represent exactly s burles. For example, if the denominations of banknotes used in Berland are 1 , 10 and 100 , then f( 59) = 14 : 9 banknotes with denomination of 1 burle and 5 banknotes with denomination of 10 burles can be used to represent exactly 9 \u00b7 1 + 5 \u00b7 10 = 59 burles, and there' s no way to do it with fewer banknotes. For a given integer k , find the minimum positive number of burles s that cannot be represented with k or fewer banknotes ( that is, f( s) > k ) .",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 number of test cases. The first line of each test case contains two integers n and k ( 1 \u2264 n \u2264 10; 1 \u2264 k \u2264 10^ 9 ) . The next line contains n integers a_ 1, a_ 2, . . . , a_ n ( 0 = a_ 1 < a_ 2 < . . . < a_ n \u2264 9 ) .",
    "output": "For each test case, print one integer \u2014 the minimum positive number of burles s that cannot be represented with k or fewer banknotes.",
    "note": "",
    "topics": [
      "greedy",
      "number theory"
    ],
    "id": "1606C"
  },
  {
    "title": "Array Equalizer",
    "url": "https://codeforces.com/problemset/problem/1605/E",
    "history": "Jeevan has two arrays a and b of size n . He is fond of performing weird operations on arrays. This time, he comes up with two types of operations: Choose any i ( 1 \u2264 i \u2264 n ) and increment a_ j by 1 for every j which is a multiple of i and 1 \u2264 j \u2264 n . Choose any i ( 1 \u2264 i \u2264 n ) and decrement a_ j by 1 for every j which is a multiple of i and 1 \u2264 j \u2264 n . He wants to convert array a into an array b using the minimum total number of operations. However, Jeevan seems to have forgotten the value of b_ 1 . So he makes some guesses. He will ask you q questions corresponding to his q guesses, the i - th of which is of the form: If b_ 1 = x_ i , what is the minimum number of operations required to convert a to b ? Help him by answering each question.",
    "input": "The first line contains a single integer n ( 1 \u2264 n \u2264 2 \u00b7 10^ 5) \u2014 the size of arrays a and b . The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 6) . The third line contains n integers b_ 1, b_ 2, . . . , b_ n ( 1 \u2264 b_ i \u2264 10^ 6 for i = \u0338 1 ; b_ 1 = - 1 , representing that the value of b_ 1 is unknown ) . The fourth line contains a single integer q ( 1 \u2264 q \u2264 2 \u00b7 10^ 5) \u2014 the number of questions. Each of the following q lines contains a single integer x_ i ( 1 \u2264 x_ i \u2264 10^ 6) \u2014 representing the i - th question.",
    "output": "Output q integers \u2014 the answers to each of his q questions.",
    "note": "Consider the first test case. b_ 1 = 1 : We need to convert [ 3, 7] \u2192 [ 1, 5] . We can perform the following operations: [ 3, 7] [ 2, 6] [ 1, 5] Hence the answer is 2 . b_ 1 = 4 : We need to convert [ 3, 7] \u2192 [ 4, 5] . We can perform the following operations: [ 3, 7] [ 3, 6] [ 3, 5] [ 4, 6] [ 4, 5] Hence the answer is 4 . b_ 1 = 3 : We need to convert [ 3, 7] \u2192 [ 3, 5] . We can perform the following operations: [ 3, 7] [ 3, 6] [ 3, 5] Hence the answer is 2 .",
    "topics": [
      "binary search",
      "greedy",
      "implementation",
      "math",
      "number theory",
      "sortings",
      "two pointers"
    ],
    "id": "1605E"
  },
  {
    "title": "A.M. Deviation",
    "url": "https://codeforces.com/problemset/problem/1605/A",
    "history": "A number a_ 2 is said to be the arithmetic mean of two numbers a_ 1 and a_ 3 , if the following condition holds: a_ 1 + a_ 3 = 2\u00b7 a_ 2 . We define an arithmetic mean deviation of three numbers a_ 1 , a_ 2 and a_ 3 as follows: d( a_ 1, a_ 2, a_ 3) = | a_ 1 + a_ 3 - 2 \u00b7 a_ 2| . Arithmetic means a lot to Jeevan. He has three numbers a_ 1 , a_ 2 and a_ 3 and he wants to minimize the arithmetic mean deviation d( a_ 1, a_ 2, a_ 3) . To do so, he can perform the following operation any number of times ( possibly zero) : Choose i, j from { 1, 2, 3} such that i j and increment a_ i by 1 and decrement a_ j by 1 Help Jeevan find out the minimum value of d( a_ 1, a_ 2, a_ 3) that can be obtained after applying the operation any number of times.",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 5000) \u2014 the number of test cases. The first and only line of each test case contains three integers a_ 1 , a_ 2 and a_ 3 ( 1 \u2264 a_ 1, a_ 2, a_ 3 \u2264 10^ 8) .",
    "output": "For each test case, output the minimum value of d( a_ 1, a_ 2, a_ 3) that can be obtained after applying the operation any number of times.",
    "note": "Note that after applying a few operations, the values of a_ 1 , a_ 2 and a_ 3 may become negative. In the first test case, 4 is already the Arithmetic Mean of 3 and 5 . d( 3, 4, 5) = | 3 + 5 - 2 \u00b7 4| = 0 In the second test case, we can apply the following operation: ( 2, 2, 6) ( 1, 3, 6) d( 1, 3, 6) = | 1 + 6 - 2 \u00b7 3| = 1 It can be proven that answer can not be improved any further. In the third test case, we can apply the following operations: ( 1, 6, 5) ( 1, 5, 6) ( 2, 4, 6) d( 2, 4, 6) = | 2 + 6 - 2 \u00b7 4| = 0",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "1605A"
  },
  {
    "title": "Artistic Partition",
    "url": "https://codeforces.com/problemset/problem/1603/D",
    "history": "For two positive integers l and r ( l \u2264 r ) let c( l, r) denote the number of integer pairs ( i, j) such that l \u2264 i \u2264 j \u2264 r and gcd( i, j) \u2265 l . Here, gcd( i, j) is the greatest common divisor ( GCD) of integers i and j . YouKn0wWho has two integers n and k where 1 \u2264 k \u2264 n . Let f( n, k) denote the minimum of \u2211_ i= 1^ kc( x_ i+ 1, x_ i+ 1) over all integer sequences 0= x_ 1 x_ 2 . . . x_ k x_ k+ 1= n . Help YouKn0wWho find f( n, k) .",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 3 \u00b7 10^ 5 ) \u2014 the number of test cases. The first and only line of each test case contains two integers n and k ( 1 \u2264 k \u2264 n \u2264 10^ 5 ) .",
    "output": "For each test case, print a single integer \u2014 f( n, k) .",
    "note": "In the first test case, YouKn0wWho can select the sequence [ 0, 2, 6] . So f( 6, 2) = c( 1, 2) + c( 3, 6) = 3 + 5 = 8 which is the minimum possible.",
    "topics": [
      "divide and conquer",
      "dp",
      "number theory"
    ],
    "id": "1603D"
  },
  {
    "title": "Extreme Extension",
    "url": "https://codeforces.com/problemset/problem/1603/C",
    "history": "For an array b of n integers, the extreme value of this array is the minimum number of times ( possibly, zero) the following operation has to be performed to make b non- decreasing: Select an index i such that 1 \u2264 i \u2264 | b| , where | b| is the current length of b . Replace b_ i with two elements x and y such that x and y both are positive integers and x + y = b_ i . This way, the array b changes and the next operation is performed on this modified array. For example, if b = [ 2, 4, 3] and index 2 gets selected, then the possible arrays after this operation are [ 2, 1, 3, 3] , [ 2, 2, 2, 3] , or [ 2, 3, 1, 3] . And consequently, for this array, this single operation is enough to make it non- decreasing: [ 2, 4, 3] \u2192 [ 2, 2, 2, 3] . It' s easy to see that every array of positive integers can be made non- decreasing this way. YouKn0wWho has an array a of n integers. Help him find the sum of extreme values of all nonempty subarrays of a modulo 998 244 353 . If a subarray appears in a multiple times, its extreme value should be counted the number of times it appears. An array d is a subarray of an array c if d can be obtained from c by deletion of several ( possibly, zero or all) elements from the beginning and several ( possibly, zero or all) elements from the end.",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 10 000 ) \u2014 the number of test cases. The first line of each test case contains a single integer n ( 1 \u2264 n \u2264 10^ 5 ) . The second line of each test case contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 5 ) . It is guaranteed that the sum of n over all test cases doesn' t exceed 10^ 5 .",
    "output": "For each test case, print a single integer \u2014 the sum of extreme values of all subarrays of a modulo 998 244 353 .",
    "note": "Let f( l, r) denote the extreme value of [ a_ l, a_ l+ 1, . . . , a_ r] . In the first test case, f( 1, 3) = 3 , because YouKn0wWho can perform the following operations on the subarray [ 5, 4, 3] ( the newly inserted elements are underlined) : [ 5, 4, 3] \u2192 [ 3, 2, 4, 3] \u2192 [ 3, 2, 2, 2, 3] \u2192 [ 1, 2, 2, 2, 2, 3] ; f( 1, 2) = 1 , because [ 5, 4] \u2192 [ 2, 3, 4] ; f( 2, 3) = 1 , because [ 4, 3] \u2192 [ 1, 3, 3] ; f( 1, 1) = f( 2, 2) = f( 3, 3) = 0 , because they are already non- decreasing. So the total sum of extreme values of all subarrays of a = 3 + 1 + 1 + 0 + 0 + 0 = 5 .",
    "topics": [
      "dp",
      "greedy",
      "math",
      "number theory"
    ],
    "id": "1603C"
  },
  {
    "title": "Moderate Modular Mode",
    "url": "https://codeforces.com/problemset/problem/1603/B",
    "history": "YouKn0wWho has two even integers x and y . Help him to find an integer n such that 1 \u2264 n \u2264 2 \u00b7 10^ 18 and n x = y n . Here, a b denotes the remainder of a after division by b . If there are multiple such integers, output any. It can be shown that such an integer always exists under the given constraints.",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 5 ) \u2014 the number of test cases. The first and only line of each test case contains two integers x and y ( 2 \u2264 x, y \u2264 10^ 9 , both are even) .",
    "output": "For each test case, print a single integer n ( 1 \u2264 n \u2264 2 \u00b7 10^ 18 ) that satisfies the condition mentioned in the statement. If there are multiple such integers, output any. It can be shown that such an integer always exists under the given constraints.",
    "note": "In the first test case, 4 4 = 8 4 = 0 . In the second test case, 10 4 = 2 10 = 2 . In the third test case, 420 420 = 420 420 = 0 .",
    "topics": [
      "constructive algorithms",
      "math",
      "number theory"
    ],
    "id": "1603B"
  },
  {
    "title": "Di-visible Confusion",
    "url": "https://codeforces.com/problemset/problem/1603/A",
    "history": "YouKn0wWho has an integer sequence a_ 1, a_ 2, . . . , a_ n . He will perform the following operation until the sequence becomes empty: select an index i such that 1 \u2264 i \u2264 | a| and a_ i is not divisible by ( i + 1) , and erase this element from the sequence. Here | a| is the length of sequence a at the moment of operation. Note that the sequence a changes and the next operation is performed on this changed sequence. For example, if a= [ 3, 5, 4, 5] , then he can select i = 2 , because a_ 2 = 5 is not divisible by i+ 1 = 3 . After this operation the sequence is [ 3, 4, 5] . Help YouKn0wWho determine if it is possible to erase the whole sequence using the aforementioned operation.",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 10 000 ) \u2014 the number of test cases. The first line of each test case contains a single integer n ( 1 \u2264 n \u2264 10^ 5 ) . The second line of each test case contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 9 ) . It is guaranteed that the sum of n over all test cases doesn' t exceed 3 \u00b7 10^ 5 .",
    "output": "For each test case, print \" YES\" ( without quotes) if it is possible to erase the whole sequence using the aforementioned operation, print \" NO\" ( without quotes) otherwise. You can print each letter in any register ( upper or lower) .",
    "note": "In the first test case, YouKn0wWho can perform the following operations ( the erased elements are underlined) : [ 1, 2, 3] \u2192 [ 1, 3] \u2192 [ 3] \u2192 [ ] . In the second test case, it is impossible to erase the sequence as i can only be 1 , and when i= 1 , a_ 1 = 2 is divisible by i + 1 = 2 .",
    "topics": [
      "constructive algorithms",
      "math",
      "number theory"
    ],
    "id": "1603A"
  },
  {
    "title": "Array Elimination",
    "url": "https://codeforces.com/problemset/problem/1601/A",
    "history": "You are given array a_ 1, a_ 2, . . . , a_ n , consisting of non- negative integers. Let' s define operation of \" elimination\" with integer parameter k ( 1 \u2264 k \u2264 n ) as follows: Choose k distinct array indices 1 \u2264 i_ 1 < i_ 2 < . . . < i_ k \u2264 n . Calculate x = a_ i_ 1 & a_ i_ 2 & . . . & a_ i_ k , where & denotes the bitwise AND operation ( notes section contains formal definition) . Subtract x from each of a_ i_ 1, a_ i_ 2, . . . , a_ i_ k ; all other elements remain untouched. Find all possible values of k , such that it' s possible to make all elements of array a equal to 0 using a finite number of elimination operations with parameter k . It can be proven that exists at least one possible k for any array a . Note that you firstly choose k and only after that perform elimination operations with value k you' ve chosen initially.",
    "input": "Each test contains multiple test cases. The first line contains the number of test cases t ( 1 \u2264 t \u2264 10^ 4 ) . Description of the test cases follows. The first line of each test case contains one integer n ( 1 \u2264 n \u2264 200 000 ) \u2014 the length of array a . The second line of each test case contains n integers a_ 1, a_ 2, . . . , a_ n ( 0 \u2264 a_ i < 2^ 30 ) \u2014 array a itself. It' s guaranteed that the sum of n over all test cases doesn' t exceed 200 000 .",
    "output": "For each test case, print all values k , such that it' s possible to make all elements of a equal to 0 in a finite number of elimination operations with the given parameter k . Print them in increasing order.",
    "note": "In the first test case: If k = 1 , we can make four elimination operations with sets of indices { 1} , { 2} , { 3} , { 4} . Since & of one element is equal to the element itself, then for each operation x = a_ i , so a_ i - x = a_ i - a_ i = 0 . If k = 2 , we can make two elimination operations with, for example, sets of indices { 1, 3} and { 2, 4} : x = a_ 1 & a_ 3 = a_ 2 & a_ 4 = 4 & 4 = 4 . For both operations x = 4 , so after the first operation a_ 1 - x = 0 and a_ 3 - x = 0 , and after the second operation \u2014 a_ 2 - x = 0 and a_ 4 - x = 0 . If k = 3 , it' s impossible to make all a_ i equal to 0 . After performing the first operation, we' ll get three elements equal to 0 and one equal to 4 . After that, all elimination operations won' t change anything, since at least one chosen element will always be equal to 0 . If k = 4 , we can make one operation with set { 1, 2, 3, 4} , because x = a_ 1 & a_ 2 & a_ 3 & a_ 4 = 4 . In the second test case, if k = 2 then we can make the following elimination operations: Operation with indices { 1, 3} : x = a_ 1 & a_ 3 = 13 & 25 = 9 . a_ 1 - x = 13 - 9 = 4 and a_ 3 - x = 25 - 9 = 16 . Array a will become equal to [ 4, 7, 16, 19] . Operation with indices { 3, 4} : x = a_ 3 & a_ 4 = 16 & 19 = 16 . a_ 3 - x = 16 - 16 = 0 and a_ 4 - x = 19 - 16 = 3 . Array a will become equal to [ 4, 7, 0, 3] . Operation with indices { 2, 4} : x = a_ 2 & a_ 4 = 7 & 3 = 3 . a_ 2 - x = 7 - 3 = 4 and a_ 4 - x = 3 - 3 = 0 . Array a will become equal to [ 4, 4, 0, 0] . Operation with indices { 1, 2} : x = a_ 1 & a_ 2 = 4 & 4 = 4 . a_ 1 - x = 4 - 4 = 0 and a_ 2 - x = 4 - 4 = 0 . Array a will become equal to [ 0, 0, 0, 0] . Formal definition of bitwise AND: Let' s define bitwise AND ( & ) as follows. Suppose we have two non- negative integers x and y , let' s look at their binary representations ( possibly, with leading zeroes) : x_ k . . . x_ 2 x_ 1 x_ 0 and y_ k . . . y_ 2 y_ 1 y_ 0 . Here, x_ i is the i - th bit of number x , and y_ i is the i - th bit of number y . Let r = x & y is a result of operation & on number x and y . Then binary representation of r will be r_ k . . . r_ 2 r_ 1 r_ 0 , where: r_ i = 1, if x_ i = 1 and y_ i = 1 0, if x_ i = 0 or y_ i = 0",
    "topics": [
      "bitmasks",
      "greedy",
      "math",
      "number theory"
    ],
    "id": "1601A"
  },
  {
    "title": "Half of Same",
    "url": "https://codeforces.com/problemset/problem/1593/D2",
    "history": "This problem is a complicated version of D1, but it has significant differences, so read the whole statement. Polycarp has an array of n ( n is even) integers a_ 1, a_ 2, . . . , a_ n . Polycarp conceived of a positive integer k . After that, Polycarp began performing the following operations on the array: take an index i ( 1 \u2264 i \u2264 n ) and reduce the number a_ i by k . After Polycarp performed some ( possibly zero) number of such operations, it turned out that at least half of the numbers in the array became the same. Find the maximum k at which such a situation is possible, or print - 1 if such a number can be arbitrarily large.",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 10 ) \u2014 the number of test cases. Then t test cases follow. Each test case consists of two lines. The first line contains an even integer n ( 4 \u2264 n \u2264 40 ) ( n is even) . The second line contains n integers a_ 1, a_ 2, . . . a_ n ( - 10^ 6 \u2264 a_ i \u2264 10^ 6 ) . It is guaranteed that the sum of all n specified in the given test cases does not exceed 100 .",
    "output": "For each test case output on a separate line an integer k ( k \u2265 1 ) \u2014 the maximum possible number that Polycarp used in operations on the array, or - 1 , if such a number can be arbitrarily large.",
    "note": "",
    "topics": [
      "brute force",
      "math",
      "number theory"
    ],
    "id": "1593D2"
  },
  {
    "title": "All are Same",
    "url": "https://codeforces.com/problemset/problem/1593/D1",
    "history": "This problem is a simplified version of D2, but it has significant differences, so read the whole statement. Polycarp has an array of n ( n is even) integers a_ 1, a_ 2, . . . , a_ n . Polycarp conceived of a positive integer k . After that, Polycarp began performing the following operations on the array: take an index i ( 1 \u2264 i \u2264 n ) and reduce the number a_ i by k . After Polycarp performed some ( possibly zero) number of such operations, it turned out that all numbers in the array became the same. Find the maximum k at which such a situation is possible, or print - 1 if such a number can be arbitrarily large.",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 10 ) \u2014 the number of test cases. Then t test cases follow. Each test case consists of two lines. The first line contains an even integer n ( 4 \u2264 n \u2264 40 ) ( n is even) . The second line contains n integers a_ 1, a_ 2, . . . a_ n ( - 10^ 6 \u2264 a_ i \u2264 10^ 6 ) . It is guaranteed that the sum of all n specified in the given test cases does not exceed 100 .",
    "output": "For each test case output on a separate line an integer k ( k \u2265 1 ) \u2014 the maximum possible number that Polycarp used in operations on the array, or - 1 , if such a number can be arbitrarily large.",
    "note": "",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "1593D1"
  },
  {
    "title": "Hemose in ICPC ?",
    "url": "https://codeforces.com/problemset/problem/1592/D",
    "history": "This is an interactive problem! In the last regional contest Hemose, ZeyadKhattab and YahiaSherif \u2014 members of the team Carpe Diem \u2014 did not qualify to ICPC because of some unknown reasons. Hemose was very sad and had a bad day after the contest, but ZeyadKhattab is very wise and knows Hemose very well, and does not want to see him sad. Zeyad knows that Hemose loves tree problems, so he gave him a tree problem with a very special device. Hemose has a weighted tree with n nodes and n- 1 edges. Unfortunately, Hemose doesn' t remember the weights of edges. Let' s define Dist( u, v) for u= \u0338 v as the greatest common divisor of the weights of all edges on the path from node u to node v . Hemose has a special device. Hemose can give the device a set of nodes, and the device will return the largest Dist between any two nodes from the set. More formally, if Hemose gives the device a set S of nodes, the device will return the largest value of Dist( u, v) over all pairs ( u, v) with u , v \u2208 S and u = \u0338 v . Hemose can use this Device at most 12 times, and wants to find any two distinct nodes a , b , such that Dist( a, b) is maximum possible. Can you help him? InteractionBegin the interaction from reading a single integer n ( 2 \u2264 n \u2264 10^ 3 ) \u2014 the number of nodes in the tree. Next, read n- 1 lines. The i - th of the next n- 1 lines contains two integers u_ i and v_ i ( 1 \u2264 u_ i, v_ i \u2264 n , u_ i= \u0338 v_ i ) , which means that there' s an edge between nodes u_ i and v_ i . It' s guaranteed that weights of edges were \u2264 10^ 9 . It is guaranteed that the given graph is a tree. Now you may begin asking queries. To ask a query about a set of k nodes v_ 1, v_ 2, . . . , v_ k ( 2 \u2264 k \u2264 n , 1 \u2264 v_ i \u2264 n , all v_ i are distinct) , output: ? k v_ 1 v_ 2 . . . v_ k You will then receive an integer x , the largest Dist( v_ i, v_ j) over 1 \u2264 i, j \u2264 k with i = \u0338 j . When you have found a and b ( 1 \u2264 a, b \u2264 n) , a= \u0338 b ) such that Dist( a, b) is the maximum possible, print the answer in the following format: ! a b Outputting answer doesn' t count towards the limit of 12 queries. If there are several pairs ( a, b) with the same largest Dist( a, b) , you can output any. After printing a query do not forget to output the end of line and flush the output. Otherwise, you will get Idleness limit exceeded. To do this, use: fflush( stdout) or cout. flush( ) in C+ + ; System. out. flush( ) in Java; flush( output) in Pascal; stdout. flush( ) in Python; see the documentation for other languages. HacksTo hack a solution, use the following format. The first line should contain a single integer n ( 2 \u2264 n \u2264 10^ 3) \u2014 the number of nodes. The i - th of the next n- 1 lines should contain three integers u_ i , v_ i , w_ i ( 1 \u2264 u_ i, v_ i \u2264 n , u_ i v_ i , 1 \u2264 w \u2264 10^ 9 ) , which means that there' s an edge between nodes u_ i and v_ i with weight w_ i . These n- 1 edges must form a tree.",
    "input": "",
    "output": "",
    "note": "The tree in the first sample:",
    "topics": [
      "binary search",
      "dfs and similar",
      "implementation",
      "interactive",
      "math",
      "number theory",
      "trees"
    ],
    "id": "1592D"
  },
  {
    "title": "Windblume Ode",
    "url": "https://codeforces.com/problemset/problem/1583/A",
    "history": "A bow adorned with nameless flowers that bears the earnest hopes of an equally nameless person. You have obtained the elegant bow known as the Windblume Ode. Inscribed in the weapon is an array of n ( n \u2265 3 ) positive distinct integers ( i. e. different, no duplicates are allowed) . Find the largest subset ( i. e. having the maximum number of elements) of this array such that its sum is a composite number. A positive integer x is called composite if there exists a positive integer y such that 1 < y < x and x is divisible by y . If there are multiple subsets with this largest size with the composite sum, you can output any of them. It can be proven that under the constraints of the problem such a non- empty subset always exists.",
    "input": "Each test consists of multiple test cases. The first line contains the number of test cases t ( 1 \u2264 t \u2264 100 ) . Description of the test cases follows. The first line of each test case contains an integer n ( 3 \u2264 n \u2264 100 ) \u2014 the length of the array. The second line of each test case contains n distinct integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i\u2264 200 ) \u2014 the elements of the array.",
    "output": "Each test case should have two lines of output. The first line should contain a single integer x : the size of the largest subset with composite sum. The next line should contain x space separated integers representing the indices of the subset of the initial array.",
    "note": "In the first test case, the subset { a_ 2, a_ 1} has a sum of 9 , which is a composite number. The only subset of size 3 has a prime sum equal to 11 . Note that you could also have selected the subset { a_ 1, a_ 3} with sum 8 + 2 = 10 , which is composite as it' s divisible by 2 . In the second test case, the sum of all elements equals to 21 , which is a composite number. Here we simply take the whole array as our subset.",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "1583A"
  },
  {
    "title": "Kuzya and Homework",
    "url": "https://codeforces.com/problemset/problem/1582/G",
    "history": "Kuzya started going to school. He was given math homework in which he was given an array a of length n and an array of symbols b of length n , consisting of symbols ' * ' and ' / ' . Let' s denote a path of calculations for a segment [ l; r] ( 1 \u2264 l \u2264 r \u2264 n ) in the following way: Let x= 1 initially. For every i from l to r we will consequently do the following: if b_ i= ' * ' , x= x* a_ i , and if b_ i= ' / ' , then x= x/ a_ i . Let' s call a path of calculations for the segment [ l; r] a list of all x that we got during the calculations ( the number of them is exactly r - l + 1 ) . For example, let a= [ 7, 12, 3, 5, 4, 10, 9] , b= [ / , * , / , / , / , * , * ] , l= 2 , r= 6 , then the path of calculations for that segment is [ 12, 4, 0. 8, 0. 2, 2] . Let' s call a segment [ l; r] simple if the path of calculations for it contains only integer numbers. Kuzya needs to find the number of simple segments [ l; r] ( 1 \u2264 l \u2264 r \u2264 n ) . Since he obviously has no time and no interest to do the calculations for each option, he asked you to write a program to get to find that number!",
    "input": "The first line contains a single integer n ( 2 \u2264 n \u2264 10^ 6 ) . The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 6 ) . The third line contains n symbols without spaces between them \u2014 the array b_ 1, b_ 2 . . . b_ n ( b_ i= ' / ' or b_ i= ' * ' for every 1 \u2264 i \u2264 n ) .",
    "output": "Print a single integer \u2014 the number of simple segments [ l; r] .",
    "note": "",
    "topics": [
      "data structures",
      "number theory"
    ],
    "id": "1582G"
  },
  {
    "title": "CQXYM Count Permutations",
    "url": "https://codeforces.com/problemset/problem/1581/A",
    "history": "CQXYM is counting permutations length of 2n . A permutation is an array consisting of n distinct integers from 1 to n in arbitrary order. For example, [ 2, 3, 1, 5, 4] is a permutation, but [ 1, 2, 2] is not a permutation ( 2 appears twice in the array) and [ 1, 3, 4] is also not a permutation ( n= 3 but there is 4 in the array) . A permutation p ( length of 2n ) will be counted only if the number of i satisfying p_ i< p_ i+ 1 is no less than n . For example: Permutation [ 1, 2, 3, 4] will count, because the number of such i that p_ i< p_ i+ 1 equals 3 ( i = 1 , i = 2 , i = 3 ) . Permutation [ 3, 2, 1, 4] won' t count, because the number of such i that p_ i< p_ i+ 1 equals 1 ( i = 3 ) . CQXYM wants you to help him to count the number of such permutations modulo 1000000007 ( 10^ 9+ 7 ) . In addition, modulo operation is to get the remainder. For example: 7 3= 1 , because 7 = 3 \u00b7 2 + 1 , 15 4= 3 , because 15 = 4 \u00b7 3 + 3 .",
    "input": "The input consists of multiple test cases. The first line contains an integer t ( t \u2265 1) \u2014 the number of test cases. The description of the test cases follows. Only one line of each test case contains an integer n( 1 \u2264 n \u2264 10^ 5) . It is guaranteed that the sum of n over all test cases does not exceed 10^ 5",
    "output": "For each test case, print the answer in a single line.",
    "note": "n= 1 , there is only one permutation that satisfies the condition: [ 1, 2] . In permutation [ 1, 2] , p_ 1< p_ 2 , and there is one i= 1 satisfy the condition. Since 1 \u2265 n , this permutation should be counted. In permutation [ 2, 1] , p_ 1> p_ 2 . Because 0< n , this permutation should not be counted. n= 2 , there are 12 permutations: [ 1, 2, 3, 4] , [ 1, 2, 4, 3] , [ 1, 3, 2, 4] , [ 1, 3, 4, 2] , [ 1, 4, 2, 3] , [ 2, 1, 3, 4] , [ 2, 3, 1, 4] , [ 2, 3, 4, 1] , [ 2, 4, 1, 3] , [ 3, 1, 2, 4] , [ 3, 4, 1, 2] , [ 4, 1, 2, 3] .",
    "topics": [
      "combinatorics",
      "math",
      "number theory"
    ],
    "id": "1581A"
  },
  {
    "title": "Array Stabilization (AND version)",
    "url": "https://codeforces.com/problemset/problem/1579/F",
    "history": "You are given an array a[ 0 . . . n - 1] = [ a_ 0, a_ 1, . . . , a_ n - 1] of zeroes and ones only. Note that in this problem, unlike the others, the array indexes are numbered from zero, not from one. In one step, the array a is replaced by another array of length n according to the following rules: First, a new array a^ \u2192 d is defined as a cyclic shift of the array a to the right by d cells. The elements of this array can be defined as a^ \u2192 d_ i = a_ ( i + n - d) n , where ( i + n - d) n is the remainder of integer division of i + n - d by n . It means that the whole array a^ \u2192 d can be represented as a sequence a^ \u2192 d = [ a_ n - d, a_ n - d + 1, . . . , a_ n - 1, a_ 0, a_ 1, . . . , a_ n - d - 1] Then each element of the array a_ i is replaced by a_ i & a^ \u2192 d_ i , where & is a logical \" AND\" operator. For example, if a = [ 0, 0, 1, 1] and d = 1 , then a^ \u2192 d = [ 1, 0, 0, 1] and the value of a after the first step will be [ 0 & 1, 0 & 0, 1 & 0, 1 & 1] , that is [ 0, 0, 0, 1] . The process ends when the array stops changing. For a given array a , determine whether it will consist of only zeros at the end of the process. If yes, also find the number of steps the process will take before it finishes.",
    "input": "The first line contains an integer t ( 1 \u2264 t \u2264 1000 ) \u2014 the number of test cases. The next 2t lines contain descriptions of the test cases. The first line of each test case description contains two integers: n ( 1 \u2264 n \u2264 10^ 6 ) \u2014 array size and d ( 1 \u2264 d \u2264 n ) \u2014 cyclic shift offset. The second line of the description contains n space- separated integers a_ i ( 0 \u2264 a_ i \u2264 1 ) \u2014 elements of the array. It is guaranteed that the sum of n over all test cases does not exceed 10^ 6 .",
    "output": "Print t lines, each line containing the answer to the corresponding test case. The answer to a test case should be a single integer \u2014 the number of steps after which the array will contain only zeros for the first time. If there are still elements equal to 1 in the array after the end of the process, print - 1.",
    "note": "In the third sample test case the array will change as follows: At the beginning a = [ 1, 1, 0, 1, 0] , and a^ \u2192 2 = [ 1, 0, 1, 1, 0] . Their element- by- element \" AND\" is equal to [ 1 & 1, 1 & 0, 0 & 1, 1 & 1, 0 & 0] = [ 1, 0, 0, 1, 0] Now a = [ 1, 0, 0, 1, 0] , then a^ \u2192 2 = [ 1, 0, 1, 0, 0] . Their element- by- element \" AND\" equals to [ 1 & 1, 0 & 0, 0 & 1, 1 & 0, 0 & 0] = [ 1, 0, 0, 0, 0] And finally, when a = [ 1, 0, 0, 0, 0] we get a^ \u2192 2 = [ 0, 0, 1, 0, 0] . Their element- by- element \" AND\" equals to [ 1 & 0, 0 & 0, 0 & 1, 0 & 0, 0 & 0] = [ 0, 0, 0, 0, 0] Thus, the answer is 3 steps. In the fourth sample test case, the array will not change as it shifts by 2 to the right, so each element will be calculated as 0 & 0 or 1 & 1 thus not changing its value. So the answer is - 1, the array will never contain only zeros.",
    "topics": [
      "brute force",
      "graphs",
      "math",
      "number theory",
      "shortest paths"
    ],
    "id": "1579F"
  },
  {
    "title": "GCD Festival",
    "url": "https://codeforces.com/problemset/problem/1575/G",
    "history": "Mr. Chanek has an array a of n integers. The prettiness value of a is denoted as: \u2211_ i= 1^ n\u2211_ j= 1^ n( a_ i, a_ j) \u00b7( i, j) where ( x, y) denotes the greatest common divisor ( GCD) of integers x and y . In other words, the prettiness value of an array a is the total sum of ( a_ i, a_ j) \u00b7( i, j) for all pairs ( i, j) . Help Mr. Chanek find the prettiness value of a , and output the result modulo 10^ 9 + 7 !",
    "input": "The first line contains an integer n ( 2 \u2264 n \u2264 10^ 5 ) . The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 5 ) .",
    "output": "Output an integer denoting the prettiness value of a modulo 10^ 9 + 7 .",
    "note": "",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "1575G"
  },
  {
    "title": "Cyclic Sum",
    "url": "https://codeforces.com/problemset/problem/1575/C",
    "history": "Denote a cyclic sequence of size n as an array s such that s_ n is adjacent to s_ 1 . The segment s[ r, l] where l < r is the concatenation of s[ r, n] and s[ 1, l] . You are given an array a consisting of n integers. Define b as the cyclic sequence obtained from concatenating m copies of a . Note that b has size n \u00b7 m . You are given an integer k where k = 1 or k is a prime number. Find the number of different segments in b where the sum of elements in the segment is divisible by k . Two segments are considered different if the set of indices of the segments are different. For example, when n = 3 and m = 2 , the set of indices for segment s[ 2, 5] is { 2, 3, 4, 5} , and for segment s[ 5, 2] is { 5, 6, 1, 2} . In particular, the segments s[ 1, 6] , s[ 2, 1] , . . . , s[ 6, 5] are considered as the same segment. Output the answer modulo 10^ 9 + 7 .",
    "input": "The first line contains three integers n , m , and k ( 1 \u2264 n, m, k \u2264 2 \u00b7 10^ 5 , k = 1 or k is a prime number) . The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 0 \u2264 a_ i \u2264 2 \u00b7 10^ 5 ) .",
    "output": "Output an integer denoting the number of different segments in b where the sum of elements in the segment is divisible by k , modulo 10^ 9 + 7 .",
    "note": "In the first example, all valid segments are [ 1, 4] , [ 2, 3] , [ 3, 5] , and [ 4, 2] . In the second example, one of the valid segments is [ 1, 5] .",
    "topics": [
      "data structures",
      "fft",
      "number theory"
    ],
    "id": "1575C"
  },
  {
    "title": "Xor-quiz",
    "url": "https://codeforces.com/problemset/problem/1566/H",
    "history": "This is an interactive problem. You are given two integers c and n . The jury has a randomly generated set A of distinct positive integers not greater than c ( it is generated from all such possible sets with equal probability) . The size of A is equal to n . Your task is to guess the set A . In order to guess it, you can ask at most \u2308 0. 65 \u00b7 c \u2309 queries. In each query, you choose a single integer 1 \u2264 x \u2264 c . As the answer to this query you will be given the bitwise xor sum of all y , such that y \u2208 A and gcd( x, y) = 1 ( i. e. x and y are coprime) . If there is no such y this xor sum is equal to 0 . You can ask all queries at the beginning and you will receive the answers to all your queries. After that, you won' t have the possibility to ask queries. You should find any set A' , such that | A' | = n and A' and A have the same answers for all c possible queries. InteractionIn the first line you should print an integer q ( 0 \u2264 q \u2264\u2308 0. 65 \u00b7 c \u2309) \u2014 the number of queries you want to ask. After that in the same line print q integers x_ 1, x_ 2, . . . , x_ q ( 1 \u2264 x_ i \u2264 c) \u2014 the queries. For these queries you should read q integers, i - th of them is the answer to the described query for x = x_ i . After that you should print n distinct integers A' _ 1, A' _ 2, . . . , A' _ n \u2014 the set A' you found. If there are different sets A' that have the same answers for all possible queries, print any of them. If you will ask more than \u2308 0. 65 \u00b7 c \u2309 queries or if the queries will be invalid, the interactor will terminate immediately and your program will receive verdict Wrong Answer. After printing the queries and answers do not forget to output end of line and flush the output buffer. Otherwise, you will get the Idleness limit exceeded verdict. To do flush use: fflush( stdout) or cout. flush( ) in C+ + ; System. out. flush( ) in Java; flush( output) in Pascal; stdout. flush( ) in Python; Read documentation for other languages. HacksYou cannot make hacks in this problem.",
    "input": "Firstly you are given two integers c and n ( 100 \u2264 c \u2264 10^ 6 , 0 \u2264 n \u2264 c ) .",
    "output": "",
    "note": "The sample is made only for you to understand the interaction protocol. Your solution will not be tested on the sample. In the sample A = { 1, 4, 5, 6, 8, 10} . 7 queries are made, 7 \u2264\u2308 0. 65 \u00b7 10 \u2309 = 7 , so the query limit is not exceeded. Answers for the queries: For 10 : 1 is the only number in the set A coprime with 10 , so the answer is 1 For 2 : 1_ 10\u2295 5_ 10 = 001_ 2 \u2295 101_ 2 = 4_ 10 , where \u2295 is the bitwise xor For 3 : 1_ 10\u2295 4_ 10\u2295 5_ 10\u2295 8_ 10\u2295 10_ 10 = 0001_ 2 \u2295 0100_ 2 \u2295 0101_ 2 \u2295 1000_ 2 \u2295 1010_ 2 = 2_ 10 For 5 : 1_ 10\u2295 4_ 10\u2295 6_ 10\u2295 8_ 10 = 0001_ 2 \u2295 0100_ 2 \u2295 0110_ 2 \u2295 1000_ 2 = 11_ 10 For 7 : 1_ 10\u2295 4_ 10\u2295 5_ 10\u2295 6_ 10\u2295 8_ 10\u2295 10_ 10 = 0001_ 2 \u2295 0100_ 2 \u2295 0101_ 2 \u2295 0110_ 2 \u2295 1000_ 2 \u2295 1010_ 2 = 4_ 10 For 1 : 1_ 10\u2295 4_ 10\u2295 5_ 10\u2295 6_ 10\u2295 8_ 10\u2295 10_ 10 = 0001_ 2 \u2295 0100_ 2 \u2295 0101_ 2 \u2295 0110_ 2 \u2295 1000_ 2 \u2295 1010_ 2 = 4_ 10 For 6 : 1_ 10\u2295 5_ 10 = 0001_ 2 \u2295 0101_ 2 = 4_ 10",
    "topics": [
      "constructive algorithms",
      "dp",
      "interactive",
      "math",
      "number theory"
    ],
    "id": "1566H"
  },
  {
    "title": "Tubular Bells",
    "url": "https://codeforces.com/problemset/problem/1562/F",
    "history": "Do you know what tubular bells are? They are a musical instrument made up of cylindrical metal tubes. In an orchestra, tubular bells are used to mimic the ringing of bells. Mike has tubular bells, too! They consist of n tubes, and each of the tubes has a length that can be expressed by a integer from l to r inclusive. It is clear that the lengths of all the tubes are different ( it makes no sense to make the same tubes) . It is also known that r- l+ 1 = n . Formally, we can say that Mike' s tubular bells are described by a permutation a of length n that contains all numbers from l to r inclusive, with a_ i denoting the length of the i - th tube. You are offered an interesting task: to guess what Mike' s instrument looks like. Simply, you must guess the permutation. Mike won' t tell you l or r . He will only tell you n , and will allow you to ask no more than n + 5000 queries. In each query, you name two positive integers x , y such that 1 \u2264 x, y \u2264 n, x = \u0338 y . In response to this query, the program written by Mike will give you lcm( a_ x, a_ y) , where lcm( c, d) denotes the least common multiple of c and d . Solve Mike' s problem! InteractionFor each set of input data, read one integer n . You are allowed to make no more than n + 5000 queries. If you want to make a query, output it in the format \" ? x y \" , where x and y \u2014 the numbers of tubes for which you learn the lcm ( least common multiple) of their lengths. Note that 1 \u2264 x, y \u2264 n, x = \u0338 y must be satisfied. The interactor will return a single integer \u2014the answer to your query. If you are ready to print the answer, print it in the format \" ! a_ 1 a_ 2 . . . a_ n \" . The output of the answer is not considered a query and is not included in the number of queries. After each query and answer output, don' t forget to output the line translation and reset the output buffer. Otherwise you will get the verdict \" Idleness limit exceeded\" . To reset the buffer use: fflush( stdout) or cout. flush( ) in C+ + ; System. out. flush( ) in Java; flush( output) in Pascal; stdout. flush( ) in Python; see documentation for other languages. Note that the interactor is not adaptive. That is, the original permutation is fixed in the beginning and don' t depend on your queries. Hacks: Use the following format for hacks: The first line contains a single positive integer t ( 1 \u2264 t \u2264 20 ) \u2014 the number of input datasets. A description of the input data sets is given below. The first line of each test case contains one positive integer n ( 3 \u2264 n \u2264 10^ 5 ) \u2014the number of tubes. It is known that 1 \u2264 l \u2264 r \u2264 2 \u00b7 10^ 5 , i. e. the lengths of the tubes do not exceed 2 \u00b7 10^ 5 . The second line of each test case contains an array a of n positive integers \u2014 the lengths of the tubes in each input dataset. Remember that l \u2264 a_ i \u2264 r and r- l+ 1 = n , and that all a_ i are different.",
    "input": "Each test contains multiple test cases. The first line contains one positive integer t ( 1 \u2264 t \u2264 20 ) , denoting the number of test cases. Description of the test cases follows. The single line of each test case contains one positive integer n ( 3 \u2264 n \u2264 10^ 5 ) \u2014 number of tubes in Mike' s tubular bells. Also 1 \u2264 l \u2264 r \u2264 2 \u00b7 10^ 5 , i. e. the lengths of the tubes do not exceed 2 \u00b7 10^ 5 . It is guaranteed that the sum of maximal number of queries ( i. e. n + 5000 ) over all test cases does not exceed 10^ 5 + 5000 . It means that sum of n does not exceed 10^ 5 + 5000 - t \u00b7 5000 .",
    "output": "",
    "note": "",
    "topics": [
      "interactive",
      "math",
      "number theory",
      "probabilities"
    ],
    "id": "1562F"
  },
  {
    "title": "Scenes From a Memory",
    "url": "https://codeforces.com/problemset/problem/1562/B",
    "history": "During the hypnosis session, Nicholas suddenly remembered a positive integer n , which doesn' t contain zeros in decimal notation. Soon, when he returned home, he got curious: what is the maximum number of digits that can be removed from the number so that the number becomes not prime, that is, either composite or equal to one? For some numbers doing so is impossible: for example, for number 53 it' s impossible to delete some of its digits to obtain a not prime integer. However, for all n in the test cases of this problem, it' s guaranteed that it' s possible to delete some of their digits to obtain a not prime number. Note that you cannot remove all the digits from the number. A prime number is a number that has no divisors except one and itself. A composite is a number that has more than two divisors. 1 is neither a prime nor a composite number.",
    "input": "Each test contains multiple test cases. The first line contains one positive integer t ( 1 \u2264 t \u2264 10^ 3 ) , denoting the number of test cases. Description of the test cases follows. The first line of each test case contains one positive integer k ( 1 \u2264 k \u2264 50 ) \u2014 the number of digits in the number. The second line of each test case contains a positive integer n , which doesn' t contain zeros in decimal notation ( 10^ k- 1\u2264 n < 10^ k ) . It is guaranteed that it is always possible to remove less than k digits to make the number not prime. It is guaranteed that the sum of k over all test cases does not exceed 10^ 4 .",
    "output": "For every test case, print two numbers in two lines. In the first line print the number of digits, that you have left in the number. In the second line print the digits left after all delitions. If there are multiple solutions, print any.",
    "note": "In the first test case, you can' t delete 2 digits from the number 237 , as all the numbers 2 , 3 , and 7 are prime. However, you can delete 1 digit, obtaining a number 27 = 3^ 3 . In the second test case, you can delete all digits except one, as 4 = 2^ 2 is a composite number.",
    "topics": [
      "brute force",
      "constructive algorithms",
      "implementation",
      "math",
      "number theory"
    ],
    "id": "1562B"
  },
  {
    "title": "Up the Strip (simplified version)",
    "url": "https://codeforces.com/problemset/problem/1561/D1",
    "history": "This version of the problem differs from the next one only in the constraint on n . Note that the memory limit in this problem is lower than in others. You have a vertical strip with n cells, numbered consecutively from 1 to n from top to bottom. You also have a token that is initially placed in cell n . You will move the token up until it arrives at cell 1 . Let the token be in cell x > 1 at some moment. One shift of the token can have either of the following kinds: Subtraction: you choose an integer y between 1 and x- 1 , inclusive, and move the token from cell x to cell x - y . Floored division: you choose an integer z between 2 and x , inclusive, and move the token from cell x to cell \u230ax/ z\u230b ( x divided by z rounded down) . Find the number of ways to move the token from cell n to cell 1 using one or more shifts, and print it modulo m . Note that if there are several ways to move the token from one cell to another in one shift, all these ways are considered distinct ( check example explanation for a better understanding) .",
    "input": "The only line contains two integers n and m ( 2 \u2264 n \u2264 2 \u00b7 10^ 5 ; 10^ 8 < m < 10^ 9 ; m is a prime number) \u2014 the length of the strip and the modulo.",
    "output": "Print the number of ways to move the token from cell n to cell 1 , modulo m .",
    "note": "In the first test, there are three ways to move the token from cell 3 to cell 1 in one shift: using subtraction of y = 2 , or using division by z = 2 or z = 3 . There are also two ways to move the token from cell 3 to cell 1 via cell 2 : first subtract y = 1 , and then either subtract y = 1 again or divide by z = 2 . Therefore, there are five ways in total.",
    "topics": [
      "brute force",
      "data structures",
      "dp",
      "math",
      "number theory"
    ],
    "id": "1561D1"
  },
  {
    "title": "Mocha and Stars",
    "url": "https://codeforces.com/problemset/problem/1559/E",
    "history": "Mocha wants to be an astrologer. There are n stars which can be seen in Zhijiang, and the brightness of the i - th star is a_ i . Mocha considers that these n stars form a constellation, and she uses ( a_ 1, a_ 2, . . . , a_ n) to show its state. A state is called mathematical if all of the following three conditions are satisfied: For all i ( 1\u2264 i\u2264 n ) , a_ i is an integer in the range [ l_ i, r_ i] . \u2211 _ i= 1 ^ n a_ i \u2264 m . ( a_ 1, a_ 2, . . . , a_ n) = 1 . Here, ( a_ 1, a_ 2, . . . , a_ n) denotes the greatest common divisor ( GCD) of integers a_ 1, a_ 2, . . . , a_ n . Mocha is wondering how many different mathematical states of this constellation exist. Because the answer may be large, you must find it modulo 998 244 353 . Two states ( a_ 1, a_ 2, . . . , a_ n) and ( b_ 1, b_ 2, . . . , b_ n) are considered different if there exists i ( 1\u2264 i\u2264 n ) such that a_ i b_ i .",
    "input": "The first line contains two integers n and m ( 2 \u2264 n \u2264 50 , 1 \u2264 m \u2264 10^ 5 ) \u2014 the number of stars and the upper bound of the sum of the brightness of stars. Each of the next n lines contains two integers l_ i and r_ i ( 1 \u2264 l_ i \u2264 r_ i \u2264 m ) \u2014 the range of the brightness of the i - th star.",
    "output": "Print a single integer \u2014 the number of different mathematical states of this constellation, modulo 998 244 353 .",
    "note": "In the first example, there are 4 different mathematical states of this constellation: a_ 1= 1 , a_ 2= 1 . a_ 1= 1 , a_ 2= 2 . a_ 1= 2 , a_ 2= 1 . a_ 1= 3 , a_ 2= 1 .",
    "topics": [
      "combinatorics",
      "dp",
      "fft",
      "math",
      "number theory"
    ],
    "id": "1559E"
  },
  {
    "title": "Up the Strip",
    "url": "https://codeforces.com/problemset/problem/1558/B",
    "history": "Note that the memory limit in this problem is lower than in others. You have a vertical strip with n cells, numbered consecutively from 1 to n from top to bottom. You also have a token that is initially placed in cell n . You will move the token up until it arrives at cell 1 . Let the token be in cell x > 1 at some moment. One shift of the token can have either of the following kinds: Subtraction: you choose an integer y between 1 and x- 1 , inclusive, and move the token from cell x to cell x - y . Floored division: you choose an integer z between 2 and x , inclusive, and move the token from cell x to cell \u230ax/ z\u230b ( x divided by z rounded down) . Find the number of ways to move the token from cell n to cell 1 using one or more shifts, and print it modulo m . Note that if there are several ways to move the token from one cell to another in one shift, all these ways are considered distinct ( check example explanation for a better understanding) .",
    "input": "The only line contains two integers n and m ( 2 \u2264 n \u2264 4 \u00b7 10^ 6 ; 10^ 8 < m < 10^ 9 ; m is a prime number) \u2014 the length of the strip and the modulo.",
    "output": "Print the number of ways to move the token from cell n to cell 1 , modulo m .",
    "note": "In the first test, there are three ways to move the token from cell 3 to cell 1 in one shift: using subtraction of y = 2 , or using division by z = 2 or z = 3 . There are also two ways to move the token from cell 3 to cell 1 via cell 2 : first subtract y = 1 , and then either subtract y = 1 again or divide by z = 2 . Therefore, there are five ways in total.",
    "topics": [
      "brute force",
      "dp",
      "math",
      "number theory",
      "two pointers"
    ],
    "id": "1558B"
  },
  {
    "title": "You",
    "url": "https://codeforces.com/problemset/problem/1554/E",
    "history": "You are given a tree with n nodes. As a reminder, a tree is a connected undirected graph without cycles. Let a_ 1, a_ 2, . . . , a_ n be a sequence of integers. Perform the following operation exactly n times: Select an unerased node u . Assign a_ u : = number of unerased nodes adjacent to u . Then, erase the node u along with all edges that have it as an endpoint. For each integer k from 1 to n , find the number, modulo 998 244 353 , of different sequences a_ 1, a_ 2, . . . , a_ n that satisfy the following conditions: it is possible to obtain a by performing the aforementioned operations exactly n times in some order. gcd( a_ 1, a_ 2, . . . , a_ n) = k . Here, gcd means the greatest common divisor of the elements in a .",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 10 000 ) \u2014 the number of test cases. The first line of each test case contains a single integer n ( 2 \u2264 n \u2264 10^ 5 ) . Each of the next n - 1 lines contains two integers u and v ( 1 \u2264 u, v \u2264 n ) indicating there is an edge between vertices u and v . It is guaranteed that the given edges form a tree. It is guaranteed that the sum of n over all test cases doesn' t exceed 3 \u00b7 10^ 5 .",
    "output": "For each test case, print n integers in a single line, where for each k from 1 to n , the k - th integer denotes the answer when gcd equals to k .",
    "note": "In the first test case, If we delete the nodes in order 1 \u2192 2 \u2192 3 or 1 \u2192 3 \u2192 2 , then the obtained sequence will be a = [ 2, 0, 0] which has gcd equals to 2 . If we delete the nodes in order 2 \u2192 1 \u2192 3 , then the obtained sequence will be a = [ 1, 1, 0] which has gcd equals to 1 . If we delete the nodes in order 3 \u2192 1 \u2192 2 , then the obtained sequence will be a = [ 1, 0, 1] which has gcd equals to 1 . If we delete the nodes in order 2 \u2192 3 \u2192 1 or 3 \u2192 2 \u2192 1 , then the obtained sequence will be a = [ 0, 1, 1] which has gcd equals to 1 . Note that here we are counting the number of different sequences, not the number of different orders of deleting nodes.",
    "topics": [
      "dfs and similar",
      "dp",
      "math",
      "number theory"
    ],
    "id": "1554E"
  },
  {
    "title": "Common Divisor Graph",
    "url": "https://codeforces.com/problemset/problem/1553/G",
    "history": "Consider a sequence of distinct integers a_ 1, . . . , a_ n , each representing one node of a graph. There is an edge between two nodes if the two values are not coprime, i. e. they have a common divisor greater than 1 . There are q queries, in each query, you want to get from one given node a_ s to another a_ t . In order to achieve that, you can choose an existing value a_ i and create new value a_ n+ 1 = a_ i \u00b7 ( 1 + a_ i) , with edges to all values that are not coprime with a_ n+ 1 . Also, n gets increased by 1 . You can repeat that operation multiple times, possibly making the sequence much longer and getting huge or repeated values. What' s the minimum possible number of newly created nodes so that a_ t is reachable from a_ s ? Queries are independent. In each query, you start with the initial sequence a given in the input.",
    "input": "The first line contains two integers n and q ( 2 \u2264 n \u2264 150 000 , 1 \u2264 q \u2264 300 000 ) \u2014 the size of the sequence and the number of queries. The second line contains n distinct integers a_ 1, a_ 2, . . . , a_ n ( 2 \u2264 a_ i \u2264 10^ 6 , a_ i = \u0338 a_ j if i j ) . The j - th of the following q lines contains two distinct integers s_ j and t_ j ( 1 \u2264 s_ j, t_ j \u2264 n , s_ j = \u0338 t_ j ) \u2014 indices of nodes for j - th query.",
    "output": "Print q lines. The j - th line should contain one integer: the minimum number of new nodes you create in order to move from a_ s_ j to a_ t_ j .",
    "note": "In the first example, you can first create new value 2 \u00b7 3 = 6 or 10 \u00b7 11 = 110 or 3 \u00b7 4 = 12 . None of that is needed in the first query because you can already get from a_ 1 = 2 to a_ 2 = 10 . In the second query, it' s optimal to first create 6 or 12 . For example, creating 6 makes it possible to get from a_ 1 = 2 to a_ 3 = 3 with a path ( 2, 6, 3) . In the last query of the second example, we want to get from a_ 3 = 7 to a_ 5 = 25 . One way to achieve that is to first create 6 \u00b7 7 = 42 and then create 25 \u00b7 26 = 650 . The final graph has seven nodes and it contains a path from a_ 3 = 7 to a_ 5 = 25 .",
    "topics": [
      "brute force",
      "constructive algorithms",
      "dsu",
      "graphs",
      "hashing",
      "math",
      "number theory"
    ],
    "id": "1553G"
  },
  {
    "title": "Digits Sum",
    "url": "https://codeforces.com/problemset/problem/1553/A",
    "history": "Let' s define S( x) to be the sum of digits of number x written in decimal system. For example, S( 5) = 5 , S( 10) = 1 , S( 322) = 7 . We will call an integer x interesting if S( x + 1) < S( x) . In each test you will be given one integer n . Your task is to calculate the number of integers x such that 1 \u2264 x \u2264 n and x is interesting.",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 1000 ) \u2014 number of test cases. Then t lines follow, the i - th line contains one integer n ( 1 \u2264 n \u2264 10^ 9 ) for the i - th test case.",
    "output": "Print t integers, the i - th should be the answer for the i - th test case.",
    "note": "The first interesting number is equal to 9 .",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "1553A"
  },
  {
    "title": "Guess the Perimeter",
    "url": "https://codeforces.com/problemset/problem/1552/H",
    "history": "Let us call a point of the plane admissible if its coordinates are positive integers less than or equal to 200 . There is an invisible rectangle such that: its vertices are all admissible; its sides are parallel to the coordinate axes; its area is strictly positive. Your task is to guess the perimeter of this rectangle. In order to guess it, you may ask at most 4 queries. In each query, you choose a nonempty subset of the admissible points and you are told how many of the chosen points are inside or on the boundary of the invisible rectangle. InteractionTo ask a query ( of the kind described in the statement) , you shall print two lines: In the first line print \" ? k \" ( without the quotes) where k ( k\u2265 1 ) is the number of chosen points. In the second line print 2k integers x_ 1, y_ 1, x_ 2, y_ 2, . . . , x_ k, y_ k ( 1\u2264 x_ i, y_ i\u2264 200 for i= 1, 2, . . . , k ) where ( x_ 1, y_ 1) , ( x_ 2, y_ 2) , ( x_ 3, y_ 3) , . . . , ( x_ k, y_ k) are the k distinct admissible chosen points ( the order of the points is not important) . After this, you should read an integer \u2014 the number of chosen points that are inside or on the boundary of the invisible rectangle. When you have identified the perimeter p of the invisible rectangle, you must print \" ! p \" ( without quotes) and terminate your program. If you ask more than 4 queries or if one of the queries is malformed, the interactor terminates immediately and your program receives verdict Wrong Answer. The interactor may be adaptive ( i. e. , the hidden rectangle may not be chosen before the beginning of the interaction) . After printing a query do not forget to output end of line and flush the output. Otherwise, you will get Idleness limit exceeded. To do this, use: fflush( stdout) or cout. flush( ) in C+ + ; System. out. flush( ) in Java; flush( output) in Pascal; stdout. flush( ) in Python; see documentation for other languages. HacksTo hack a solution, use the following format. The input has only one line, containing the 4 integers x_ 0 , y_ 0 , x_ 1 , y_ 1 ( 1\u2264 x_ 0< x_ 1\u2264 200 , 1\u2264 y_ 0 < y_ 1 \u2264 200 ) \u2014 ( x_ 0, y_ 0) is the bottom- left vertex of the hidden rectangle and ( x_ 1, y_ 1) is the top- right vertex of the hidden rectangle. Note that for hacks the interaction won' t be adaptive.",
    "input": "",
    "output": "",
    "note": "The following is an example of interaction for the first sample intended to show the format of the queries. [ Query ( contestant program) Answer ( interactor) Explanation; ? 4 We choose the 4 vertices of; 13 5 13 80 123 5 123 80 4 the hidden rectangle. ; ? 5 We choose 4 points just outside the hidden; 100 4 100 81 12 40 124 40 50 50 1 rectangle and also the point ( 50, 50) . ; ? 2 We choose the points ( 1, 1) ; 200 200 1 1 0 and ( 200, 200) . ; ! 370 This is the correct perimeter. ] For the second sample, a possible interaction is the following. [ Query ( contestant program) Answer ( interactor) Explanation; ? 4 We choose the points ( 3, 2) , ( 4, 1) , ; 3 2 4 1 5 2 4 3 2 ( 5, 2) and ( 4, 3) . ; ? 7 We choose the points ( 1, 4) , ( 2, 4) , ; 1 4 2 4 1 5 2 5 5 5 5 6 6 5 1 ( 1, 5) , ( 2, 5) , ( 5, 5) , ( 5, 6) and ( 6, 5) . ; ! 8 This is the correct perimeter. ] The situation is shown in the following picture: The green points are the ones belonging to the first query, while the orange points are the ones belonging to the second query. One can see that there are exactly two rectangles consistent with the interactor' s answers: the rectangle of vertices ( 2, 2) and ( 4, 4) , shown in red; the rectangle of vertices ( 4, 2) and ( 5, 5) , shown in blue. Since both of these rectangles have perimeter 8 , this is the final answer.",
    "topics": [
      "binary search",
      "interactive",
      "number theory"
    ],
    "id": "1552H"
  },
  {
    "title": "Gregor and Cryptography",
    "url": "https://codeforces.com/problemset/problem/1549/A",
    "history": "Gregor is learning about RSA cryptography, and although he doesn' t understand how RSA works, he is now fascinated with prime numbers and factoring them. Gregor' s favorite prime number is P . Gregor wants to find two bases of P . Formally, Gregor is looking for two integers a and b which satisfy both of the following properties. P a = P b , where x y denotes the remainder when x is divided by y , and 2 \u2264 a < b \u2264 P . Help Gregor find two bases of his favorite prime number!",
    "input": "Each test contains multiple test cases. The first line contains the number of test cases t ( 1 \u2264 t \u2264 1000 ) . Each subsequent line contains the integer P ( 5 \u2264 P \u226410^ 9 ) , with P guaranteed to be prime.",
    "output": "Your output should consist of t lines. Each line should consist of two integers a and b ( 2 \u2264 a < b \u2264 P ) . If there are multiple possible solutions, print any.",
    "note": "The first query is P= 17 . a= 3 and b= 5 are valid bases in this case, because 17 3 = 17 5 = 2 . There are other pairs which work as well. In the second query, with P= 5 , the only solution is a= 2 and b= 4 .",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "1549A"
  },
  {
    "title": "Gregor and the Odd Cows (Hard)",
    "url": "https://codeforces.com/problemset/problem/1548/D2",
    "history": "This is the hard version of the problem. The only difference from the easy version is that in this version the coordinates can be both odd and even. There are n fence- posts at distinct coordinates on a plane. It is guaranteed that no three fence posts lie on the same line. There are an infinite number of cows on the plane, one at every point with integer coordinates. Gregor is a member of the Illuminati, and wants to build a triangular fence, connecting 3 distinct existing fence posts. A cow strictly inside the fence is said to be enclosed. If there are an odd number of enclosed cows and the area of the fence is an integer, the fence is said to be interesting. Find the number of interesting fences.",
    "input": "The first line contains the integer n ( 3 \u2264 n \u2264 6000 ) , the number of fence posts which Gregor can choose to form the vertices of a fence. Each of the next n line contains two integers x and y ( 0 \u2264 x, y \u2264 10^ 7 , where ( x, y) is the coordinate of a fence post. All fence posts lie at distinct coordinates. No three fence posts are on the same line.",
    "output": "Print a single integer, the number of interesting fences. Two fences are considered different if they are constructed with a different set of three fence posts.",
    "note": "In the first example, there is only 1 fence. That fence is interesting since its area is 4 and there is 1 enclosed cow, marked in red. In the second example, there are 4 possible fences. Only one of them is interesting however. That fence has an area of 8 and 5 enclosed cows.",
    "topics": [
      "brute force",
      "geometry",
      "math",
      "number theory"
    ],
    "id": "1548D2"
  },
  {
    "title": "Gregor and the Odd Cows (Easy)",
    "url": "https://codeforces.com/problemset/problem/1548/D1",
    "history": "This is the easy version of the problem. The only difference from the hard version is that in this version all coordinates are even. There are n fence- posts at distinct coordinates on a plane. It is guaranteed that no three fence posts lie on the same line. There are an infinite number of cows on the plane, one at every point with integer coordinates. Gregor is a member of the Illuminati, and wants to build a triangular fence, connecting 3 distinct existing fence posts. A cow strictly inside the fence is said to be enclosed. If there are an odd number of enclosed cows and the area of the fence is an integer, the fence is said to be interesting. Find the number of interesting fences.",
    "input": "The first line contains the integer n ( 3 \u2264 n \u2264 6000 ) , the number of fence posts which Gregor can choose to form the vertices of a fence. Each of the next n line contains two integers x and y ( 0 \u2264 x, y \u2264 10^ 7 , x and y are even) , where ( x, y) is the coordinate of a fence post. All fence posts lie at distinct coordinates. No three fence posts are on the same line.",
    "output": "Print a single integer, the number of interesting fences. Two fences are considered different if they are constructed with a different set of three fence posts.",
    "note": "In the first example, there is only 1 fence. That fence is interesting since its area is 4 and there is 1 enclosed cow, marked in red. In the second example, there are 3 interesting fences. ( 0, 0) \u2014 ( 30, 14) \u2014 ( 2, 10) ( 2, 16) \u2014 ( 30, 14) \u2014 ( 2, 10) ( 30, 14) \u2014 ( 4, 6) \u2014 ( 2, 10)",
    "topics": [
      "bitmasks",
      "geometry",
      "math",
      "number theory"
    ],
    "id": "1548D1"
  },
  {
    "title": "Integers Have Friends",
    "url": "https://codeforces.com/problemset/problem/1548/B",
    "history": "British mathematician John Littlewood once said about Indian mathematician Srinivasa Ramanujan that \" every positive integer was one of his personal friends. \" It turns out that positive integers can also be friends with each other! You are given an array a of distinct positive integers. Define a subarray a_ i, a_ i+ 1, . . . , a_ j to be a friend group if and only if there exists an integer m \u2265 2 such that a_ i m = a_ i+ 1 m = . . . = a_ j m , where x y denotes the remainder when x is divided by y . Your friend Gregor wants to know the size of the largest friend group in a .",
    "input": "Each test contains multiple test cases. The first line contains the number of test cases t ( 1 \u2264 t \u2264 2\u00b7 10^ 4 ) . Each test case begins with a line containing the integer n ( 1 \u2264 n \u2264 2 \u00b7 10^ 5 ) , the size of the array a . The next line contains n positive integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u226410^ 18 ) , representing the contents of the array a . It is guaranteed that all the numbers in a are distinct. It is guaranteed that the sum of n over all test cases is less than 2\u00b7 10^ 5 .",
    "output": "Your output should consist of t lines. Each line should consist of a single integer, the size of the largest friend group in a .",
    "note": "In the first test case, the array is [ 1, 5, 2, 4, 6] . The largest friend group is [ 2, 4, 6] , since all those numbers are congruent to 0 modulo 2 , so m= 2 . In the second test case, the array is [ 8, 2, 5, 10] . The largest friend group is [ 8, 2, 5] , since all those numbers are congruent to 2 modulo 3 , so m= 3 . In the third case, the largest friend group is [ 1000, 2000] . There are clearly many possible values of m that work.",
    "topics": [
      "binary search",
      "data structures",
      "divide and conquer",
      "math",
      "number theory",
      "two pointers"
    ],
    "id": "1548B"
  },
  {
    "title": "Array Stabilization (GCD version)",
    "url": "https://codeforces.com/problemset/problem/1547/F",
    "history": "You are given an array of positive integers a = [ a_ 0, a_ 1, . . . , a_ n - 1] ( n \u2265 2 ) . In one step, the array a is replaced with another array of length n , in which each element is the greatest common divisor ( GCD) of two neighboring elements ( the element itself and its right neighbor; consider that the right neighbor of the ( n - 1) - th element is the 0 - th element) . Formally speaking, a new array b = [ b_ 0, b_ 1, . . . , b_ n - 1] is being built from array a = [ a_ 0, a_ 1, . . . , a_ n - 1] such that b_ i = ( a_ i, a_ ( i + 1) n) , where ( x, y) is the greatest common divisor of x and y , and x y is the remainder of x dividing by y . In one step the array b is built and then the array a is replaced with b ( that is, the assignment a : = b is taking place) . For example, if a = [ 16, 24, 10, 5] then b = [ ( 16, 24) , ( 24, 10) , ( 10, 5) , ( 5, 16) ] = [ 8, 2, 5, 1] . Thus, after one step the array a = [ 16, 24, 10, 5] will be equal to [ 8, 2, 5, 1] . For a given array a , find the minimum number of steps after which all values a_ i become equal ( that is, a_ 0 = a_ 1 = . . . = a_ n - 1 ) . If the original array a consists of identical elements then consider the number of steps is equal to 0 .",
    "input": "The first line contains an integer t ( 1 \u2264 t \u2264 10^ 4 ) . Then t test cases follow. Each test case contains two lines. The first line contains an integer n ( 2 \u2264 n \u2264 2 \u00b7 10^ 5 ) \u2014 length of the sequence a . The second line contains n integers a_ 0, a_ 1, . . . , a_ n - 1 ( 1 \u2264 a_ i \u2264 10^ 6 ) . It is guaranteed that the sum of n over all test cases doesn' t exceed 2 \u00b7 10^ 5 .",
    "output": "Print t numbers \u2014 answers for each test case.",
    "note": "",
    "topics": [
      "binary search",
      "brute force",
      "data structures",
      "divide and conquer",
      "number theory",
      "two pointers"
    ],
    "id": "1547F"
  },
  {
    "title": "Exciting Bets",
    "url": "https://codeforces.com/problemset/problem/1543/A",
    "history": "Welcome to Rockport City! It is time for your first ever race in the game against Ronnie. To make the race interesting, you have bet a dollars and Ronnie has bet b dollars. But the fans seem to be disappointed. The excitement of the fans is given by gcd( a, b) , where gcd( x, y) denotes the greatest common divisor ( GCD) of integers x and y . To make the race more exciting, you can perform two types of operations: Increase both a and b by 1 . Decrease both a and b by 1 . This operation can only be performed if both a and b are greater than 0 . In one move, you can perform any one of these operations. You can perform arbitrary ( possibly zero) number of moves. Determine the maximum excitement the fans can get and the minimum number of moves required to achieve it. Note that gcd( x, 0) = x for any x \u2265 0 .",
    "input": "The first line of input contains a single integer t ( 1\u2264 t\u2264 5\u00b7 10^ 3 ) \u2014 the number of test cases. The first and the only line of each test case contains two integers a and b ( 0\u2264 a, b\u2264 10^ 18 ) .",
    "output": "For each test case, print a single line containing two integers. If the fans can get infinite excitement, print 0 0. Otherwise, the first integer must be the maximum excitement the fans can get, and the second integer must be the minimum number of moves required to achieve that excitement.",
    "note": "For the first test case, you can apply the first operation 1 time to get a= 9 and b= 6 . It can be shown that 3 is the maximum excitement possible. For the second test case, no matter how many operations you apply, the fans will always have an excitement equal to 1 . Since the initial excitement is also 1 , you don' t need to apply any operation. For the third case, the fans can get infinite excitement by applying the first operation an infinite amount of times. For the fourth test case, you can apply the second operation 3 times to get a= 0 and b= 6 . Since, gcd( 0, 6) = 6 , the fans will get an excitement of 6 .",
    "topics": [
      "greedy",
      "math",
      "number theory"
    ],
    "id": "1543A"
  },
  {
    "title": "Strange Function",
    "url": "https://codeforces.com/problemset/problem/1542/C",
    "history": "Let f( i) denote the minimum positive integer x such that x is not a divisor of i . Compute \u2211_ i= 1^ n f( i) modulo 10^ 9+ 7 . In other words, compute f( 1) + f( 2) + . . . + f( n) modulo 10^ 9+ 7 .",
    "input": "The first line contains a single integer t ( 1\u2264 t\u2264 10^ 4 ) , the number of test cases. Then t cases follow. The only line of each test case contains a single integer n ( 1\u2264 n\u2264 10^ 16 ) .",
    "output": "For each test case, output a single integer ans , where ans= \u2211_ i= 1^ n f( i) modulo 10^ 9+ 7 .",
    "note": "In the fourth test case n= 4 , so ans= f( 1) + f( 2) + f( 3) + f( 4) . 1 is a divisor of 1 but 2 isn' t, so 2 is the minimum positive integer that isn' t a divisor of 1 . Thus, f( 1) = 2 . 1 and 2 are divisors of 2 but 3 isn' t, so 3 is the minimum positive integer that isn' t a divisor of 2 . Thus, f( 2) = 3 . 1 is a divisor of 3 but 2 isn' t, so 2 is the minimum positive integer that isn' t a divisor of 3 . Thus, f( 3) = 2 . 1 and 2 are divisors of 4 but 3 isn' t, so 3 is the minimum positive integer that isn' t a divisor of 4 . Thus, f( 4) = 3 . Therefore, ans= f( 1) + f( 2) + f( 3) + f( 4) = 2+ 3+ 2+ 3= 10 .",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "1542C"
  },
  {
    "title": "Plus and Multiply",
    "url": "https://codeforces.com/problemset/problem/1542/B",
    "history": "There is an infinite set generated as follows: 1 is in this set. If x is in this set, x \u00b7 a and x+ b both are in this set. For example, when a= 3 and b= 6 , the five smallest elements of the set are: 1 , 3 ( 1 is in this set, so 1\u00b7 a= 3 is in this set) , 7 ( 1 is in this set, so 1+ b= 7 is in this set) , 9 ( 3 is in this set, so 3\u00b7 a= 9 is in this set) , 13 ( 7 is in this set, so 7+ b= 13 is in this set) . Given positive integers a , b , n , determine if n is in this set.",
    "input": "The input consists of multiple test cases. The first line contains an integer t ( 1\u2264 t\u2264 10^ 5 ) \u2014 the number of test cases. The description of the test cases follows. The only line describing each test case contains three integers n , a , b ( 1\u2264 n, a, b\u2264 10^ 9 ) separated by a single space.",
    "output": "For each test case, print \" Yes\" if n is in this set, and \" No\" otherwise. You can print each letter in any case.",
    "note": "In the first test case, 24 is generated as follows: 1 is in this set, so 3 and 6 are in this set; 3 is in this set, so 9 and 8 are in this set; 8 is in this set, so 24 and 13 are in this set. Thus we can see 24 is in this set. The five smallest elements of the set in the second test case is described in statements. We can see that 10 isn' t among them.",
    "topics": [
      "constructive algorithms",
      "math",
      "number theory"
    ],
    "id": "1542B"
  },
  {
    "title": "Pleasant Pairs",
    "url": "https://codeforces.com/problemset/problem/1541/B",
    "history": "You are given an array a_ 1, a_ 2, . . . , a_ n consisting of n distinct integers. Count the number of pairs of indices ( i, j) such that i < j and a_ i \u00b7 a_ j = i + j .",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. Then t cases follow. The first line of each test case contains one integer n ( 2 \u2264 n \u2264 10^ 5 ) \u2014 the length of array a . The second line of each test case contains n space separated integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 2 \u00b7 n ) \u2014 the array a . It is guaranteed that all elements are distinct. It is guaranteed that the sum of n over all test cases does not exceed 2 \u00b7 10^ 5 .",
    "output": "For each test case, output the number of pairs of indices ( i, j) such that i < j and a_ i \u00b7 a_ j = i + j .",
    "note": "For the first test case, the only pair that satisfies the constraints is ( 1, 2) , as a_ 1 \u00b7 a_ 2 = 1 + 2 = 3 For the second test case, the only pair that satisfies the constraints is ( 2, 3) . For the third test case, the pairs that satisfy the constraints are ( 1, 2) , ( 1, 5) , and ( 2, 3) .",
    "topics": [
      "brute force",
      "implementation",
      "math",
      "number theory"
    ],
    "id": "1541B"
  },
  {
    "title": "Interesting Function",
    "url": "https://codeforces.com/problemset/problem/1538/F",
    "history": "You are given two integers l and r , where l < r . We will add 1 to l until the result is equal to r . Thus, there will be exactly r- l additions performed. For each such addition, let' s look at the number of digits that will be changed after it. For example: if l= 909 , then adding one will result in 910 and 2 digits will be changed; if you add one to l= 9 , the result will be 10 and 2 digits will also be changed; if you add one to l= 489999 , the result will be 490000 and 5 digits will be changed. Changed digits always form a suffix of the result written in the decimal system. Output the total number of changed digits, if you want to get r from l , adding 1 each time.",
    "input": "The first line contains an integer t ( 1 \u2264 t \u2264 10^ 4 ) . Then t test cases follow. Each test case is characterized by two integers l and r ( 1 \u2264 l < r \u2264 10^ 9 ) .",
    "output": "For each test case, calculate the total number of changed digits if you want to get r from l , adding one each time.",
    "note": "",
    "topics": [
      "binary search",
      "dp",
      "math",
      "number theory"
    ],
    "id": "1538F"
  },
  {
    "title": "Another Problem About Dividing Numbers",
    "url": "https://codeforces.com/problemset/problem/1538/D",
    "history": "You are given two integers a and b . In one turn, you can do one of the following operations: Take an integer c ( c > 1 and a should be divisible by c ) and replace a with a/ c ; Take an integer c ( c > 1 and b should be divisible by c ) and replace b with b/ c . Your goal is to make a equal to b using exactly k turns. For example, the numbers a= 36 and b= 48 can be made equal in 4 moves: c= 6 , divide b by c \u21d2 a= 36 , b= 8 ; c= 2 , divide a by c \u21d2 a= 18 , b= 8 ; c= 9 , divide a by c \u21d2 a= 2 , b= 8 ; c= 4 , divide b by c \u21d2 a= 2 , b= 2 . For the given numbers a and b , determine whether it is possible to make them equal using exactly k turns.",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 10^ 4 ) . Then t test cases follow. Each test case is contains three integers a , b and k ( 1 \u2264 a, b, k \u2264 10^ 9 ) .",
    "output": "For each test case output: \" Yes\" , if it is possible to make the numbers a and b equal in exactly k turns; \" No\" otherwise. The strings \" Yes\" and \" No\" can be output in any case.",
    "note": "",
    "topics": [
      "constructive algorithms",
      "math",
      "number theory"
    ],
    "id": "1538D"
  },
  {
    "title": "Deleting Divisors",
    "url": "https://codeforces.com/problemset/problem/1537/D",
    "history": "Alice and Bob are playing a game. They start with a positive integer n and take alternating turns doing operations on it. Each turn a player can subtract from n one of its divisors that isn' t 1 or n . The player who cannot make a move on his/ her turn loses. Alice always moves first. Note that they subtract a divisor of the current number in each turn. You are asked to find out who will win the game if both players play optimally.",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. Then t test cases follow. Each test case contains a single integer n ( 1 \u2264 n \u2264 10^ 9 ) \u2014 the initial number.",
    "output": "For each test case output \" Alice\" if Alice will win the game or \" Bob\" if Bob will win, if both players play optimally.",
    "note": "In the first test case, the game ends immediately because Alice cannot make a move. In the second test case, Alice can subtract 2 making n = 2 , then Bob cannot make a move so Alice wins. In the third test case, Alice can subtract 3 so that n = 9 . Bob' s only move is to subtract 3 and make n = 6 . Now, Alice can subtract 3 again and n = 3 . Then Bob cannot make a move, so Alice wins.",
    "topics": [
      "games",
      "math",
      "number theory"
    ],
    "id": "1537D"
  },
  {
    "title": "Diluc and Kaeya",
    "url": "https://codeforces.com/problemset/problem/1536/C",
    "history": "The tycoon of a winery empire in Mondstadt, unmatched in every possible way. A thinker in the Knights of Favonius with an exotic appearance. This time, the brothers are dealing with a strange piece of wood marked with their names. This plank of wood can be represented as a string of n characters. Each character is either a ' D' or a ' K' . You want to make some number of cuts ( possibly 0 ) on this string, partitioning it into several contiguous pieces, each with length at least 1 . Both brothers act with dignity, so they want to split the wood as evenly as possible. They want to know the maximum number of pieces you can split the wood into such that the ratios of the number of occurrences of ' D' to the number of occurrences of ' K' in each chunk are the same. Kaeya, the curious thinker, is interested in the solution for multiple scenarios. He wants to know the answer for every prefix of the given string. Help him to solve this problem! For a string we define a ratio as a: b where ' D' appears in it a times, and ' K' appears b times. Note that a or b can equal 0 , but not both. Ratios a: b and c: d are considered equal if and only if a\u00b7 d = b\u00b7 c . For example, for the string ' DDD' the ratio will be 3: 0 , for ' DKD' \u2014 2: 1 , for ' DKK' \u2014 1: 2 , and for ' KKKKDD' \u2014 2: 4 . Note that the ratios of the latter two strings are equal to each other, but they are not equal to the ratios of the first two strings.",
    "input": "Each test contains multiple test cases. The first line contains the number of test cases t ( 1 \u2264 t \u2264 1000 ) . Description of the test cases follows. The first line of each test case contains an integer n ( 1 \u2264 n \u2264 5 \u00b7 10^ 5 ) \u2014 the length of the wood. The second line of each test case contains a string s of length n . Every character of s will be either ' D' or ' K' . It is guaranteed that the sum of n over all test cases does not exceed 5 \u00b7 10^ 5 .",
    "output": "For each test case, output n space separated integers. The i - th of these numbers should equal the answer for the prefix s_ 1, s_ 2, . . . , s_ i .",
    "note": "For the first test case, there is no way to partition ' D' or ' DDK' into more than one block with equal ratios of numbers of ' D' and ' K' , while you can split ' DD' into ' D' and ' D' . For the second test case, you can split each prefix of length i into i blocks ' D' .",
    "topics": [
      "data structures",
      "dp",
      "hashing",
      "number theory"
    ],
    "id": "1536C"
  },
  {
    "title": "Array Reodering",
    "url": "https://codeforces.com/problemset/problem/1535/B",
    "history": "You are given an array a consisting of n integers. Let' s call a pair of indices i , j good if 1 \u2264 i < j \u2264 n and ( a_ i, 2a_ j) > 1 ( where ( x, y) is the greatest common divisor of x and y ) . Find the maximum number of good index pairs if you can reorder the array a in an arbitrary way.",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 1000 ) \u2014 the number of test cases. The first line of the test case contains a single integer n ( 2 \u2264 n \u2264 2000 ) \u2014 the number of elements in the array. The second line of the test case contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 5 ) . It is guaranteed that the sum of n over all test cases does not exceed 2000 .",
    "output": "For each test case, output a single integer \u2014 the maximum number of good index pairs if you can reorder the array a in an arbitrary way.",
    "note": "In the first example, the array elements can be rearranged as follows: [ 6, 3, 5, 3] . In the third example, the array elements can be rearranged as follows: [ 4, 4, 2, 1, 1] .",
    "topics": [
      "brute force",
      "greedy",
      "math",
      "number theory",
      "sortings"
    ],
    "id": "1535B"
  },
  {
    "title": "I Hate 1111",
    "url": "https://codeforces.com/problemset/problem/1526/B",
    "history": "You are given an integer x . Can you make x by summing up some number of 11, 111, 1111, 11111, . . . ? ( You can use any number among them any number of times) . For instance, 33= 11+ 11+ 11 144= 111+ 11+ 11+ 11",
    "input": "The first line of input contains a single integer t ( 1 \u2264 t \u2264 10000) \u2014 the number of testcases. The first and only line of each testcase contains a single integer x ( 1 \u2264 x \u2264 10^ 9) \u2014 the number you have to make.",
    "output": "For each testcase, you should output a single string. If you can make x , output \" YES\" ( without quotes) . Otherwise, output \" NO\" . You can print each letter of \" YES\" and \" NO\" in any case ( upper or lower) .",
    "note": "Ways to make 33 and 144 were presented in the statement. It can be proved that we can' t present 69 this way.",
    "topics": [
      "dp",
      "math",
      "number theory"
    ],
    "id": "1526B"
  },
  {
    "title": "Potion-making",
    "url": "https://codeforces.com/problemset/problem/1525/A",
    "history": "You have an initially empty cauldron, and you want to brew a potion in it. The potion consists of two ingredients: magic essence and water. The potion you want to brew should contain exactly k % magic essence and ( 100 - k) % water. In one step, you can pour either one liter of magic essence or one liter of water into the cauldron. What is the minimum number of steps to brew a potion? You don' t care about the total volume of the potion, only about the ratio between magic essence and water in it. A small reminder: if you pour e liters of essence and w liters of water ( e + w > 0 ) into the cauldron, then it contains e/ e + w\u00b7 100 % ( without rounding) magic essence and w/ e + w\u00b7 100 % water.",
    "input": "The first line contains the single t ( 1 \u2264 t \u2264 100 ) \u2014 the number of test cases. The first and only line of each test case contains a single integer k ( 1 \u2264 k \u2264 100 ) \u2014 the percentage of essence in a good potion.",
    "output": "For each test case, print the minimum number of steps to brew a good potion. It can be proved that it' s always possible to achieve it in a finite number of steps.",
    "note": "In the first test case, you should pour 3 liters of magic essence and 97 liters of water into the cauldron to get a potion with 3 % of magic essence. In the second test case, you can pour only 1 liter of essence to get a potion with 100 % of magic essence. In the third test case, you can pour 1 liter of magic essence and 3 liters of water.",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "1525A"
  },
  {
    "title": "Nastia and a Good Array",
    "url": "https://codeforces.com/problemset/problem/1521/B",
    "history": "Nastia has received an array of n positive integers as a gift. She calls such an array a good that for all i ( 2 \u2264 i \u2264 n ) takes place gcd( a_ i - 1, a_ i) = 1 , where gcd( u, v) denotes the greatest common divisor ( GCD) of integers u and v . You can perform the operation: select two different indices i, j ( 1 \u2264 i, j \u2264 n , i = \u0338 j ) and two integers x, y ( 1 \u2264 x, y \u2264 2 \u00b7 10^ 9 ) so that min( a_ i, a_ j) = min( x, y) . Then change a_ i to x and a_ j to y . The girl asks you to make the array good using at most n operations. It can be proven that this is always possible.",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 10 000 ) \u2014 the number of test cases. The first line of each test case contains a single integer n ( 1 \u2264 n \u2264 10^ 5 ) \u2014 the length of the array. The second line of each test case contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 9 ) \u2014 the array which Nastia has received as a gift. It' s guaranteed that the sum of n in one test doesn' t exceed 2 \u00b7 10^ 5 .",
    "output": "For each of t test cases print a single integer k ( 0 \u2264 k \u2264 n ) \u2014 the number of operations. You don' t need to minimize this number. In each of the next k lines print 4 integers i , j , x , y ( 1 \u2264 i = \u0338 j \u2264 n , 1 \u2264 x, y \u2264 2 \u00b7 10^ 9 ) so that min( a_ i, a_ j) = min( x, y) \u2014 in this manner you replace a_ i with x and a_ j with y . If there are multiple answers, print any.",
    "note": "Consider the first test case. Initially a = [ 9, 6, 3, 11, 15] . In the first operation replace a_ 1 with 11 and a_ 5 with 9 . It' s valid, because min( a_ 1, a_ 5) = min( 11, 9) = 9 . After this a = [ 11, 6, 3, 11, 9] . In the second operation replace a_ 2 with 7 and a_ 5 with 6 . It' s valid, because min( a_ 2, a_ 5) = min( 7, 6) = 6 . After this a = [ 11, 7, 3, 11, 6] \u2014 a good array. In the second test case, the initial array is already good.",
    "topics": [
      "constructive algorithms",
      "math",
      "number theory"
    ],
    "id": "1521B"
  },
  {
    "title": "Nastia and Nearly Good Numbers",
    "url": "https://codeforces.com/problemset/problem/1521/A",
    "history": "Nastia has 2 positive integers A and B . She defines that: The integer is good if it is divisible by A \u00b7 B ; Otherwise, the integer is nearly good, if it is divisible by A . For example, if A = 6 and B = 4 , the integers 24 and 72 are good, the integers 6 , 660 and 12 are nearly good, the integers 16 , 7 are neither good nor nearly good. Find 3 different positive integers x , y , and z such that exactly one of them is good and the other 2 are nearly good, and x + y = z .",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 10 000 ) \u2014 the number of test cases. The first line of each test case contains two integers A and B ( 1 \u2264 A \u2264 10^ 6 , 1 \u2264 B \u2264 10^ 6 ) \u2014 numbers that Nastia has.",
    "output": "For each test case print: \" YES\" and 3 different positive integers x , y , and z ( 1 \u2264 x, y, z \u2264 10^ 18 ) such that exactly one of them is good and the other 2 are nearly good, and x + y = z . \" NO\" if no answer exists. You can print each character of \" YES\" or \" NO\" in any case. If there are multiple answers, print any.",
    "note": "In the first test case: 60 \u2014 good number; 10 and 50 \u2014 nearly good numbers. In the second test case: 208 \u2014 good number; 169 and 39 \u2014 nearly good numbers. In the third test case: 154 \u2014 good number; 28 and 182 \u2014 nearly good numbers.",
    "topics": [
      "constructive algorithms",
      "math",
      "number theory"
    ],
    "id": "1521A"
  },
  {
    "title": "Ordinary Numbers",
    "url": "https://codeforces.com/problemset/problem/1520/B",
    "history": "Let' s call a positive integer n ordinary if in the decimal notation all its digits are the same. For example, 1 , 2 and 99 are ordinary numbers, but 719 and 2021 are not ordinary numbers. For a given number n , find the number of ordinary numbers among the numbers from 1 to n .",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 10^ 4 ) . Then t test cases follow. Each test case is characterized by one integer n ( 1 \u2264 n \u2264 10^ 9 ) .",
    "output": "For each test case output the number of ordinary numbers among numbers from 1 to n .",
    "note": "",
    "topics": [
      "brute force",
      "math",
      "number theory"
    ],
    "id": "1520B"
  },
  {
    "title": "Berland Regional",
    "url": "https://codeforces.com/problemset/problem/1519/C",
    "history": "Polycarp is an organizer of a Berland ICPC regional event. There are n universities in Berland numbered from 1 to n . Polycarp knows all competitive programmers in the region. There are n students: the i - th student is enrolled at a university u_ i and has a programming skill s_ i . Polycarp has to decide on the rules now. In particular, the number of members in the team. Polycarp knows that if he chooses the size of the team to be some integer k , each university will send their k strongest ( with the highest programming skill s ) students in the first team, the next k strongest students in the second team and so on. If there are fewer than k students left, then the team can' t be formed. Note that there might be universities that send zero teams. The strength of the region is the total skill of the members of all present teams. If there are no teams present, then the strength is 0 . Help Polycarp to find the strength of the region for each choice of k from 1 to n .",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 1000 ) \u2014 the number of testcases. The first line of each testcase contains a single integer n ( 1 \u2264 n \u2264 2 \u00b7 10^ 5 ) \u2014 the number of universities and the number of students. The second line of each testcase contains n integers u_ 1, u_ 2, . . . , u_ n ( 1 \u2264 u_ i \u2264 n ) \u2014 the university the i - th student is enrolled at. The third line of each testcase contains n integers s_ 1, s_ 2, . . . , s_ n ( 1 \u2264 s_ i \u2264 10^ 9 ) \u2014 the programming skill of the i - th student. The sum of n over all testcases doesn' t exceed 2 \u00b7 10^ 5 .",
    "output": "For each testcase print n integers: the strength of the region \u2014 the total skill of the members of the present teams \u2014 for each choice of team size k .",
    "note": "In the first testcase the teams from each university for each k are: k= 1 : university 1 : [ 6] , [ 5] , [ 5] , [ 3] ; university 2 : [ 8] , [ 1] , [ 1] ; k= 2 : university 1 : [ 6, 5] , [ 5, 3] ; university 2 : [ 8, 1] ; k= 3 : university 1 : [ 6, 5, 5] ; university 2 : [ 8, 1, 1] ; k= 4 : university 1 : [ 6, 5, 5, 3] ;",
    "topics": [
      "brute force",
      "data structures",
      "greedy",
      "number theory",
      "sortings"
    ],
    "id": "1519C"
  },
  {
    "title": "Cut",
    "url": "https://codeforces.com/problemset/problem/1516/D",
    "history": "This time Baby Ehab will only cut and not stick. He starts with a piece of paper with an array a of length n written on it, and then he does the following: he picks a range ( l, r) and cuts the subsegment a_ l, a_ l + 1, . . . , a_ r out, removing the rest of the array. he then cuts this range into multiple subranges. to add a number theory spice to it, he requires that the elements of every subrange must have their product equal to their least common multiple ( LCM) . Formally, he partitions the elements of a_ l, a_ l + 1, . . . , a_ r into contiguous subarrays such that the product of every subarray is equal to its LCM. Now, for q independent ranges ( l, r) , tell Baby Ehab the minimum number of subarrays he needs.",
    "input": "The first line contains 2 integers n and q ( 1 \u2264 n, q \u2264 10^ 5 ) \u2014 the length of the array a and the number of queries. The next line contains n integers a_ 1 , a_ 2 , . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 5 ) \u2014 the elements of the array a . Each of the next q lines contains 2 integers l and r ( 1 \u2264 l \u2264 r \u2264 n ) \u2014 the endpoints of this query' s interval.",
    "output": "For each query, print its answer on a new line.",
    "note": "The first query asks about the whole array. You can partition it into [ 2] , [ 3, 10, 7] , and [ 5, 14] . The first subrange has product and LCM equal to 2 . The second has product and LCM equal to 210 . And the third has product and LCM equal to 70 . Another possible partitioning is [ 2, 3] , [ 10, 7] , and [ 5, 14] . The second query asks about the range ( 2, 4) . Its product is equal to its LCM, so you don' t need to partition it further. The last query asks about the range ( 3, 5) . You can partition it into [ 10, 7] and [ 5] .",
    "topics": [
      "binary search",
      "data structures",
      "dp",
      "graphs",
      "number theory",
      "two pointers"
    ],
    "id": "1516D"
  },
  {
    "title": "Phoenix and Odometers",
    "url": "https://codeforces.com/problemset/problem/1515/G",
    "history": "In Fire City, there are n intersections and m one- way roads. The i - th road goes from intersection a_ i to b_ i and has length l_ i miles. There are q cars that may only drive along those roads. The i - th car starts at intersection v_ i and has an odometer that begins at s_ i , increments for each mile driven, and resets to 0 whenever it reaches t_ i . Phoenix has been tasked to drive cars along some roads ( possibly none) and return them to their initial intersection with the odometer showing 0 . For each car, please find if this is possible. A car may visit the same road or intersection an arbitrary number of times. The odometers don' t stop counting the distance after resetting, so odometers may also be reset an arbitrary number of times.",
    "input": "The first line of the input contains two integers n and m ( 2 \u2264 n \u2264 2 \u00b7 10^ 5 ; 1 \u2264 m \u2264 2 \u00b7 10^ 5 ) \u2014 the number of intersections and the number of roads, respectively. Each of the next m lines contain three integers a_ i , b_ i , and l_ i ( 1 \u2264 a_ i, b_ i \u2264 n ; a_ i = \u0338 b_ i ; 1 \u2264 l_ i \u2264 10^ 9 ) \u2014 the information about the i - th road. The graph is not necessarily connected. It is guaranteed that between any two intersections, there is at most one road for each direction. The next line contains an integer q ( 1 \u2264 q \u2264 2 \u00b7 10^ 5 ) \u2014 the number of cars. Each of the next q lines contains three integers v_ i , s_ i , and t_ i ( 1 \u2264 v_ i \u2264 n ; 0 \u2264 s_ i < t_ i \u2264 10^ 9 ) \u2014 the initial intersection of the i - th car, the initial number on the i - th odometer, and the number at which the i - th odometer resets, respectively.",
    "output": "Print q answers. If the i - th car' s odometer may be reset to 0 by driving through some roads ( possibly none) and returning to its starting intersection v_ i , print YES. Otherwise, print NO.",
    "note": "The illustration for the first example is below: In the first query, Phoenix can drive through the following cities: 1 \u2192 2 \u2192 3 \u2192 1 \u2192 2 \u2192 3 \u2192 1 . The odometer will have reset 3 times, but it displays 0 at the end. In the second query, we can show that there is no way to reset the odometer to 0 and return to intersection 1 . In the third query, the odometer already displays 0 , so there is no need to drive through any roads. Below is the illustration for the second example:",
    "topics": [
      "dfs and similar",
      "graphs",
      "math",
      "number theory"
    ],
    "id": "1515G"
  },
  {
    "title": "Phoenix and Puzzle",
    "url": "https://codeforces.com/problemset/problem/1515/B",
    "history": "Phoenix is playing with a new puzzle, which consists of n identical puzzle pieces. Each puzzle piece is a right isosceles triangle as shown below. A puzzle piece The goal of the puzzle is to create a square using the n pieces. He is allowed to rotate and move the pieces around, but none of them can overlap and all n pieces must be used ( of course, the square shouldn' t contain any holes as well) . Can he do it?",
    "input": "The input consists of multiple test cases. The first line contains an integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. The first line of each test case contains an integer n ( 1 \u2264 n \u2264 10^ 9 ) \u2014 the number of puzzle pieces.",
    "output": "For each test case, if Phoenix can create a square with the n puzzle pieces, print YES. Otherwise, print NO.",
    "note": "For n= 2 , Phoenix can create a square like this: For n= 4 , Phoenix can create a square like this: For n= 6 , it is impossible for Phoenix to create a square.",
    "topics": [
      "brute force",
      "geometry",
      "math",
      "number theory"
    ],
    "id": "1515B"
  },
  {
    "title": "Product 1 Modulo N",
    "url": "https://codeforces.com/problemset/problem/1514/C",
    "history": "Now you get Baby Ehab' s first words: \" Given an integer n , find the longest subsequence of [ 1, 2, . . . , n- 1] whose product is 1 modulo n . \" Please solve the problem. A sequence b is a subsequence of an array a if b can be obtained from a by deleting some ( possibly all) elements. The product of an empty subsequence is equal to 1 .",
    "input": "The only line contains the integer n ( 2 \u2264 n \u2264 10^ 5 ) .",
    "output": "The first line should contain a single integer, the length of the longest subsequence. The second line should contain the elements of the subsequence, in increasing order. If there are multiple solutions, you can print any.",
    "note": "In the first example, the product of the elements is 6 which is congruent to 1 modulo 5 . The only longer subsequence is [ 1, 2, 3, 4] . Its product is 24 which is congruent to 4 modulo 5 . Hence, the answer is [ 1, 2, 3] .",
    "topics": [
      "greedy",
      "number theory"
    ],
    "id": "1514C"
  },
  {
    "title": "Perfectly Imperfect Array",
    "url": "https://codeforces.com/problemset/problem/1514/A",
    "history": "Given an array a of length n , tell us whether it has a non- empty subsequence such that the product of its elements is not a perfect square. A sequence b is a subsequence of an array a if b can be obtained from a by deleting some ( possibly zero) elements.",
    "input": "The first line contains an integer t ( 1 \u2264 t \u2264 100 ) \u2014 the number of test cases. The description of the test cases follows. The first line of each test case contains an integer n ( 1 \u2264 n \u2264 100 ) \u2014 the length of the array a . The second line of each test case contains n integers a_ 1 , a_ 2 , . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 4 ) \u2014 the elements of the array a .",
    "output": "If there' s a subsequence of a whose product isn' t a perfect square, print \" YES\" . Otherwise, print \" NO\" .",
    "note": "In the first example, the product of the whole array ( 20 ) isn' t a perfect square. In the second example, all subsequences have a perfect square product.",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "1514A"
  },
  {
    "title": "GCD and MST",
    "url": "https://codeforces.com/problemset/problem/1513/D",
    "history": "You are given an array a of n ( n \u2265 2 ) positive integers and an integer p . Consider an undirected weighted graph of n vertices numbered from 1 to n for which the edges between the vertices i and j ( i< j ) are added in the following manner: If gcd( a_ i, a_ i+ 1, a_ i+ 2, . . . , a_ j) = min( a_ i, a_ i+ 1, a_ i+ 2, . . . , a_ j) , then there is an edge of weight min( a_ i, a_ i+ 1, a_ i+ 2, . . . , a_ j) between i and j . If i+ 1= j , then there is an edge of weight p between i and j . Here gcd( x, y, . . . ) denotes the greatest common divisor ( GCD) of integers x , y , . . . . Note that there could be multiple edges between i and j if both of the above conditions are true, and if both the conditions fail for i and j , then there is no edge between these vertices. The goal is to find the weight of the minimum spanning tree of this graph.",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. The first line of each test case contains two integers n ( 2 \u2264 n \u2264 2 \u00b7 10^ 5 ) and p ( 1 \u2264 p \u2264 10^ 9 ) \u2014 the number of nodes and the parameter p . The second line contains n integers a_ 1, a_ 2, a_ 3, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 9 ) . It is guaranteed that the sum of n over all test cases does not exceed 2 \u00b7 10^ 5 .",
    "output": "Output t lines. For each test case print the weight of the corresponding graph.",
    "note": "Here are the graphs for the four test cases of the example ( the edges of a possible MST of the graphs are marked pink) : For test case 1 For test case 2 For test case 3 For test case 4",
    "topics": [
      "constructive algorithms",
      "dsu",
      "graphs",
      "greedy",
      "number theory",
      "sortings"
    ],
    "id": "1513D"
  },
  {
    "title": "Short Task",
    "url": "https://codeforces.com/problemset/problem/1512/G",
    "history": "Let us denote by d( n) the sum of all divisors of the number n , i. e. d( n) = \u2211_ k | n k . For example, d( 1) = 1 , d( 4) = 1+ 2+ 4= 7 , d( 6) = 1+ 2+ 3+ 6= 12 . For a given number c , find the minimum n such that d( n) = c .",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 10^ 4 ) . Then t test cases follow. Each test case is characterized by one integer c ( 1 \u2264 c \u2264 10^ 7 ) .",
    "output": "For each test case, output: \" - 1\" if there is no such n that d( n) = c ; n , otherwise.",
    "note": "",
    "topics": [
      "brute force",
      "dp",
      "math",
      "number theory"
    ],
    "id": "1512G"
  },
  {
    "title": "GCD Length",
    "url": "https://codeforces.com/problemset/problem/1511/B",
    "history": "You are given three integers a , b and c . Find two positive integers x and y ( x > 0 , y > 0 ) such that: the decimal representation of x without leading zeroes consists of a digits; the decimal representation of y without leading zeroes consists of b digits; the decimal representation of gcd( x, y) without leading zeroes consists of c digits. gcd( x, y) denotes the greatest common divisor ( GCD) of integers x and y . Output x and y . If there are multiple answers, output any of them.",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 285 ) \u2014 the number of testcases. Each of the next t lines contains three integers a , b and c ( 1 \u2264 a, b \u2264 9 , 1 \u2264 c \u2264 min( a, b) ) \u2014 the required lengths of the numbers. It can be shown that the answer exists for all testcases under the given constraints. Additional constraint on the input: all testcases are different.",
    "output": "For each testcase print two positive integers \u2014 x and y ( x > 0 , y > 0 ) such that the decimal representation of x without leading zeroes consists of a digits; the decimal representation of y without leading zeroes consists of b digits; the decimal representation of gcd( x, y) without leading zeroes consists of c digits.",
    "note": "In the example: gcd( 11, 492) = 1 gcd( 13, 26) = 13 gcd( 140133, 160776) = 21 gcd( 1, 1) = 1",
    "topics": [
      "constructive algorithms",
      "math",
      "number theory"
    ],
    "id": "1511B"
  },
  {
    "title": "Digits",
    "url": "https://codeforces.com/problemset/problem/1510/D",
    "history": "Diana loves playing with numbers. She' s got n cards with positive integer numbers a_ i written on them. She spends her free time multiplying the numbers on the cards. She picks a non- empty subset of the cards and multiplies all the numbers a_ i written on them. Diana is happy when the product of the numbers ends with her favorite digit d . Now she is curious what cards she should pick so that the product of the numbers on them is the largest possible and the last decimal digit of the product is d . Please, help her.",
    "input": "The first line contains the integers n and d ( 1\u2264 n\u2264 10^ 5 , 0\u2264 d\u2264 9 ) . The second line contains n integers a_ i ( 1\u2264 a_ i\u2264 1000 ) .",
    "output": "On the first line, print the number of chosen cards k ( 1\u2264 k\u2264 n ) . On the next line, print the numbers written on the chosen cards in any order. If it is impossible to choose a subset of cards with the product that ends with the digit d , print the single line with - 1 .",
    "note": "In the first example, 1 \u00d7 2 \u00d7 4 \u00d7 11 \u00d7 13 = 1144 , which is the largest product that ends with the digit 4. The same set of cards without the number 1 is also a valid answer, as well as a set of 8, 11, and 13 with or without 1 that also has the product of 1144. In the second example, all the numbers on the cards are even and their product cannot end with an odd digit 1. In the third example, the only possible products are 1, 3, 5, 9, 15, and 45, none of which end with the digit 7. In the fourth example, 9 \u00d7 11 \u00d7 17 = 1683 , which ends with the digit 3. In the fifth example, 2 \u00d7 2 \u00d7 2 \u00d7 2 = 16 , which ends with the digit 6.",
    "topics": [
      "dp",
      "math",
      "number theory"
    ],
    "id": "1510D"
  },
  {
    "title": "Xenolith? Hippodrome?",
    "url": "https://codeforces.com/problemset/problem/1505/D",
    "history": "",
    "input": "The input contains two integers N , M ( 1 \u2264 N \u2264 1024, 2 \u2264 M \u2264 16 ) , separated by a single space.",
    "output": "Output \" YES\" or \" NO\" .",
    "note": "",
    "topics": [
      "*special",
      "number theory"
    ],
    "id": "1505D"
  },
  {
    "title": "DMCA",
    "url": "https://codeforces.com/problemset/problem/1505/B",
    "history": "Many people are aware of DMCA \u2013 Digital Millennium Copyright Act. But another recently proposed DMCA \u2013 Digital Millennium Calculation Act \u2013 is much less known. In this problem you need to find a root of a number according to this new DMCA law.",
    "input": "The input contains a single integer a ( 1 \u2264 a \u2264 1000000 ) .",
    "output": "Output the result \u2013 an integer number.",
    "note": "",
    "topics": [
      "*special",
      "implementation",
      "number theory"
    ],
    "id": "1505B"
  },
  {
    "title": "Two chandeliers",
    "url": "https://codeforces.com/problemset/problem/1500/B",
    "history": "Vasya is a CEO of a big construction company. And as any other big boss he has a spacious, richly furnished office with two crystal chandeliers. To stay motivated Vasya needs the color of light at his office to change every day. That' s why he ordered both chandeliers that can change its color cyclically. For example: red \u2013 brown \u2013 yellow \u2013 red \u2013 brown \u2013 yellow and so on. There are many chandeliers that differs in color set or order of colors. And the person responsible for the light made a critical mistake \u2014 they bought two different chandeliers. Since chandeliers are different, some days they will have the same color, but some days \u2014 different. Of course, it looks poor and only annoys Vasya. As a result, at the k - th time when chandeliers will light with different colors, Vasya will become very angry and, most probably, will fire the person who bought chandeliers. Your task is to calculate the day, when it happens ( counting from the day chandeliers were installed) . You can think that Vasya works every day without weekends and days off.",
    "input": "The first line contains three integers n , m and k ( 1 \u2264 n, m \u2264 500 000 ; 1 \u2264 k \u2264 10^ 12 ) \u2014 the number of colors in the first and the second chandeliers and how many times colors should differ to anger Vasya. The second line contains n different integers a_ i ( 1 \u2264 a_ i \u2264 2 \u00b7max( n, m) ) that describe the first chandelier' s sequence of colors. The third line contains m different integers b_ j ( 1 \u2264 b_ i \u2264 2 \u00b7max( n, m) ) that describe the second chandelier' s sequence of colors. At the i - th day, the first chandelier has a color a_ x , where x = ( ( i - 1) n) + 1) and the second one has a color b_ y , where y = ( ( i - 1) m) + 1) . It' s guaranteed that sequence a differs from sequence b , so there are will be days when colors of chandeliers differs.",
    "output": "Print the single integer \u2014 the index of day when Vasya will become angry.",
    "note": "In the first example, the chandeliers will have different colors at days 1 , 2 , 3 and 5 . That' s why the answer is 5 .",
    "topics": [
      "binary search",
      "brute force",
      "chinese remainder theorem",
      "math",
      "number theory"
    ],
    "id": "1500B"
  },
  {
    "title": "The Number of Pairs",
    "url": "https://codeforces.com/problemset/problem/1499/D",
    "history": "You are given three positive ( greater than zero) integers c , d and x . You have to find the number of pairs of positive integers ( a, b) such that equality c \u00b7 lcm( a, b) - d \u00b7 gcd( a, b) = x holds. Where lcm( a, b) is the least common multiple of a and b and gcd( a, b) is the greatest common divisor of a and b .",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. Each test case consists of one line containing three integer c , d and x ( 1 \u2264 c, d, x \u2264 10^ 7 ) .",
    "output": "For each test case, print one integer \u2014 the number of pairs ( a, b ) such that the above equality holds.",
    "note": "In the first example, the correct pairs are: ( 1, 4 ) , ( 4, 1 ) , ( 3, 6 ) , ( 6, 3 ) . In the second example, the correct pairs are: ( 1, 2 ) , ( 2, 1 ) , ( 3, 3 ) .",
    "topics": [
      "dp",
      "math",
      "number theory"
    ],
    "id": "1499D"
  },
  {
    "title": "Square-free division (hard version)",
    "url": "https://codeforces.com/problemset/problem/1497/E2",
    "history": "This is the hard version of the problem. The only difference is that in this version 0 \u2264 k \u2264 20 . There is an array a_ 1, a_ 2, . . . , a_ n of n positive integers. You should divide it into a minimal number of continuous segments, such that in each segment there are no two numbers ( on different positions) , whose product is a perfect square. Moreover, it is allowed to do at most k such operations before the division: choose a number in the array and change its value to any positive integer. What is the minimum number of continuous segments you should use if you will make changes optimally?",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 1000) \u2014 the number of test cases. The first line of each test case contains two integers n , k ( 1 \u2264 n \u2264 2 \u00b7 10^ 5 , 0 \u2264 k \u2264 20 ) . The second line of each test case contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 7 ) . It' s guaranteed that the sum of n over all test cases does not exceed 2 \u00b7 10^ 5 .",
    "output": "For each test case print a single integer \u2014 the answer to the problem.",
    "note": "In the first test case it is possible to change the array this way: [ 3, 6, 2, 4, 5] ( changed elements are underlined) . After that the array does not need to be divided, so the answer is 1 . In the second test case it is possible to change the array this way: [ 6, 2, 3, 8, 9, 5, 3, 6, 10, 11, 7] . After that such division is optimal: [ 6, 2, 3] [ 8, 9, 5, 3, 6, 10, 11, 7]",
    "topics": [
      "data structures",
      "dp",
      "greedy",
      "math",
      "number theory",
      "two pointers"
    ],
    "id": "1497E2"
  },
  {
    "title": "Square-Free Division (easy version)",
    "url": "https://codeforces.com/problemset/problem/1497/E1",
    "history": "This is the easy version of the problem. The only difference is that in this version k = 0 . There is an array a_ 1, a_ 2, . . . , a_ n of n positive integers. You should divide it into a minimal number of continuous segments, such that in each segment there are no two numbers ( on different positions) , whose product is a perfect square. Moreover, it is allowed to do at most k such operations before the division: choose a number in the array and change its value to any positive integer. But in this version k = 0 , so it is not important. What is the minimum number of continuous segments you should use if you will make changes optimally?",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 1000) \u2014 the number of test cases. The first line of each test case contains two integers n , k ( 1 \u2264 n \u2264 2 \u00b7 10^ 5 , k = 0 ) . The second line of each test case contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 7 ) . It' s guaranteed that the sum of n over all test cases does not exceed 2 \u00b7 10^ 5 .",
    "output": "For each test case print a single integer \u2014 the answer to the problem.",
    "note": "In the first test case the division may be as follows: [ 18, 6] [ 2, 4] [ 1]",
    "topics": [
      "data structures",
      "dp",
      "greedy",
      "math",
      "number theory",
      "two pointers"
    ],
    "id": "1497E1"
  },
  {
    "title": "Genius",
    "url": "https://codeforces.com/problemset/problem/1497/D",
    "history": "Please note the non- standard memory limit. There are n problems numbered with integers from 1 to n . i - th problem has the complexity c_ i = 2^ i , tag tag_ i and score s_ i . After solving the problem i it' s allowed to solve problem j if and only if IQ < | c_ i - c_ j| and tag_ i = \u0338 tag_ j . After solving it your IQ changes and becomes IQ = | c_ i - c_ j| and you gain | s_ i - s_ j| points. Any problem can be the first. You can solve problems in any order and as many times as you want. Initially your IQ = 0 . Find the maximum number of points that can be earned.",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 100) \u2014 the number of test cases. The first line of each test case contains an integer n ( 1 \u2264 n \u2264 5000) \u2014 the number of problems. The second line of each test case contains n integers tag_ 1, tag_ 2, . . . , tag_ n ( 1 \u2264 tag_ i \u2264 n) \u2014 tags of the problems. The third line of each test case contains n integers s_ 1, s_ 2, . . . , s_ n ( 1 \u2264 s_ i \u2264 10^ 9) \u2014 scores of the problems. It' s guaranteed that sum of n over all test cases does not exceed 5000 .",
    "output": "For each test case print a single integer \u2014 the maximum number of points that can be earned.",
    "note": "In the first test case optimal sequence of solving problems is as follows: 1 \u2192 2 , after that total score is 5 and IQ = 2 2 \u2192 3 , after that total score is 10 and IQ = 4 3 \u2192 1 , after that total score is 20 and IQ = 6 1 \u2192 4 , after that total score is 35 and IQ = 14 In the second test case optimal sequence of solving problems is as follows: 1 \u2192 2 , after that total score is 5 and IQ = 2 2 \u2192 3 , after that total score is 10 and IQ = 4 3 \u2192 4 , after that total score is 15 and IQ = 8 4 \u2192 1 , after that total score is 35 and IQ = 14 In the third test case optimal sequence of solving problems is as follows: 1 \u2192 3 , after that total score is 17 and IQ = 6 3 \u2192 4 , after that total score is 35 and IQ = 8 4 \u2192 2 , after that total score is 42 and IQ = 12",
    "topics": [
      "bitmasks",
      "dp",
      "graphs",
      "number theory"
    ],
    "id": "1497D"
  },
  {
    "title": "Enchanted Matrix",
    "url": "https://codeforces.com/problemset/problem/1493/F",
    "history": "This is an interactive problem. There exists a matrix a of size n \u00d7 m ( n rows and m columns) , you know only numbers n and m . The rows of the matrix are numbered from 1 to n from top to bottom, and columns of the matrix are numbered from 1 to m from left to right. The cell on the intersection of the x - th row and the y - th column is denoted as ( x, y) . You are asked to find the number of pairs ( r, c) ( 1 \u2264 r \u2264 n , 1 \u2264 c \u2264 m , r is a divisor of n , c is a divisor of m ) such that if we split the matrix into rectangles of size r \u00d7 c ( of height r rows and of width c columns, each cell belongs to exactly one rectangle) , all those rectangles are pairwise equal. You can use queries of the following type: ? h w i_ 1 j_ 1 i_ 2 j_ 2 ( 1 \u2264 h \u2264 n , 1 \u2264 w \u2264 m , 1 \u2264 i_ 1, i_ 2 \u2264 n , 1 \u2264 j_ 1, j_ 2 \u2264 m ) \u2014 to check if non- overlapping subrectangles of height h rows and of width w columns of matrix a are equal or not. The upper left corner of the first rectangle is ( i_ 1, j_ 1) . The upper left corner of the second rectangle is ( i_ 2, j_ 2) . Subrectangles overlap, if they have at least one mutual cell. If the subrectangles in your query have incorrect coordinates ( for example, they go beyond the boundaries of the matrix) or overlap, your solution will be considered incorrect. You can use at most 3 \u00b7\u230alog_ 2( n+ m) \u230b queries. All elements of the matrix a are fixed before the start of your program and do not depend on your queries. InteractionTo make a query, print a line with the format \" ? h w i_ 1 j_ 1 i_ 2 j_ 2 \" , where the integers are the height and width and the coordinates of upper left corners of non- overlapping rectangles, about which you want to know if they are equal or not. After each query read a single integer t ( t is 0 or 1 ) : if the subrectangles are equal, t= 1 , otherwise t= 0 . In case your query is of incorrect format or you asked more than 3 \u00b7\u230alog_ 2( n+ m) \u230b queries, you will receive the Wrong Answer verdict. After printing a query do not forget to output end of line and flush the output. Otherwise, you will get Idleness limit exceeded. To do this, use: fflush( stdout) or cout. flush( ) in C+ + ; System. out. flush( ) in Java; flush( output) in Pascal; stdout. flush( ) in Python; see documentation for other languages. It is guaranteed that the matrix a is fixed and won' t change during the interaction process. Hacks formatFor hacks use the following format. The first line contains two integers n and m ( 1 \u2264 n, m \u2264 1000 ) \u2014 the number of rows and columns in the matrix, respectively. Each of the next n lines contains m integers \u2014 the elements of matrix a . All the elements of the matrix must be integers between 1 and n \u00b7 m , inclusive.",
    "input": "The first line contains two integers n and m ( 1 \u2264 n, m \u2264 1000 ) \u2014 the number of rows and columns, respectively.",
    "output": "When ready, print a line with an exclamation mark ( ' ! ' ) and then the answer \u2014 the number of suitable pairs ( r, c) . After that your program should terminate.",
    "note": "In the example test the matrix a of size 3 \u00d7 4 is equal to: 1 2 1 23 3 3 32 1 2 1",
    "topics": [
      "bitmasks",
      "interactive",
      "number theory"
    ],
    "id": "1493F"
  },
  {
    "title": "GCD of an Array",
    "url": "https://codeforces.com/problemset/problem/1493/D",
    "history": "You are given an array a of length n . You are asked to process q queries of the following format: given integers i and x , multiply a_ i by x . After processing each query you need to output the greatest common divisor ( GCD) of all elements of the array a . Since the answer can be too large, you are asked to output it modulo 10^ 9+ 7 .",
    "input": "The first line contains two integers \u2014 n and q ( 1 \u2264 n, q \u2264 2 \u00b7 10^ 5 ) . The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 2 \u00b7 10^ 5 ) \u2014 the elements of the array a before the changes. The next q lines contain queries in the following format: each line contains two integers i and x ( 1 \u2264 i \u2264 n , 1 \u2264 x \u2264 2 \u00b7 10^ 5 ) .",
    "output": "Print q lines: after processing each query output the GCD of all elements modulo 10^ 9+ 7 on a separate line.",
    "note": "After the first query the array is [ 12, 6, 8, 12] , gcd( 12, 6, 8, 12) = 2 . After the second query \u2014 [ 12, 18, 8, 12] , gcd( 12, 18, 8, 12) = 2 . After the third query \u2014 [ 12, 18, 24, 12] , gcd( 12, 18, 24, 12) = 6 . Here the gcd function denotes the greatest common divisor.",
    "topics": [
      "brute force",
      "data structures",
      "hashing",
      "implementation",
      "math",
      "number theory",
      "sortings",
      "two pointers"
    ],
    "id": "1493D"
  },
  {
    "title": "Fib-tree",
    "url": "https://codeforces.com/problemset/problem/1491/E",
    "history": "Let F_ k denote the k - th term of Fibonacci sequence, defined as below: F_ 0 = F_ 1 = 1 for any integer n \u2265 0 , F_ n+ 2 = F_ n+ 1 + F_ n You are given a tree with n vertices. Recall that a tree is a connected undirected graph without cycles. We call a tree a Fib- tree, if its number of vertices equals F_ k for some k , and at least one of the following conditions holds: The tree consists of only 1 vertex; You can divide it into two Fib- trees by removing some edge of the tree. Determine whether the given tree is a Fib- tree or not.",
    "input": "The first line of the input contains a single integer n ( 1 \u2264 n \u2264 2 \u00b7 10^ 5 ) \u2014 the number of vertices in the tree. Then n- 1 lines follow, each of which contains two integers u and v ( 1\u2264 u, v \u2264 n , u = \u0338 v ) , representing an edge between vertices u and v . It' s guaranteed that given edges form a tree.",
    "output": "Print \" YES\" if the given tree is a Fib- tree, or \" NO\" otherwise. You can print your answer in any case. For example, if the answer is \" YES\" , then the output \" Yes\" or \" yeS\" will also be considered as correct answer.",
    "note": "In the first sample, we can cut the edge ( 1, 2) , and the tree will be split into 2 trees of sizes 1 and 2 correspondently. Any tree of size 2 is a Fib- tree, as it can be split into 2 trees of size 1 . In the second sample, no matter what edge we cut, the tree will be split into 2 trees of sizes 1 and 4 . As 4 isn' t F_ k for any k , it' s not Fib- tree. In the third sample, here is one possible order of cutting the edges so that all the trees in the process are Fib- trees: ( 1, 3) , ( 1, 2) , ( 4, 5) , ( 3, 4) .",
    "topics": [
      "brute force",
      "dfs and similar",
      "divide and conquer",
      "number theory",
      "trees"
    ],
    "id": "1491E"
  },
  {
    "title": "Painting Numbers",
    "url": "https://codeforces.com/problemset/problem/1488/G",
    "history": "You are given n integers, each integer is from 1 to n , all of them are pairwise distinct. You have to paint them red and blue ( each integer should have exactly one color) . The cost of painting is the number of pairs ( x, y) such that y x = 0 , y is red and x is blue. For each k \u2208 [ 1, n] , calculate the maximum cost of painting if exactly k integers should have a red color.",
    "input": "The first line contains one integer n ( 2 \u2264 n \u2264 10^ 5 ) .",
    "output": "For each k \u2208 [ 1, n] print one integer \u2014 the maximum cost of painting, if exactly k integers should be red.",
    "note": "",
    "topics": [
      "*special",
      "data structures",
      "greedy",
      "number theory"
    ],
    "id": "1488G"
  },
  {
    "title": "Pythagorean Triples",
    "url": "https://codeforces.com/problemset/problem/1487/D",
    "history": "A Pythagorean triple is a triple of integer numbers ( a, b, c) such that it is possible to form a right triangle with the lengths of the first cathetus, the second cathetus and the hypotenuse equal to a , b and c , respectively. An example of the Pythagorean triple is ( 3, 4, 5) . Vasya studies the properties of right triangles, and he uses a formula that determines if some triple of integers is Pythagorean. Unfortunately, he has forgotten the exact formula; he remembers only that the formula was some equation with squares. So, he came up with the following formula: c = a^ 2 - b . Obviously, this is not the right formula to check if a triple of numbers is Pythagorean. But, to Vasya' s surprise, it actually worked on the triple ( 3, 4, 5) : 5 = 3^ 2 - 4 , so, according to Vasya' s formula, it is a Pythagorean triple. When Vasya found the right formula ( and understood that his formula is wrong) , he wondered: how many are there triples of integers ( a, b, c) with 1 \u2264 a \u2264 b \u2264 c \u2264 n such that they are Pythagorean both according to his formula and the real definition? He asked you to count these triples.",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. Each test case consists of one line containing one integer n ( 1 \u2264 n \u2264 10^ 9 ) .",
    "output": "For each test case, print one integer \u2014 the number of triples of integers ( a, b, c) with 1 \u2264 a \u2264 b \u2264 c \u2264 n such that they are Pythagorean according both to the real definition and to the formula Vasya came up with.",
    "note": "The only Pythagorean triple satisfying c = a^ 2 - b with 1 \u2264 a \u2264 b \u2264 c \u2264 9 is ( 3, 4, 5) ; that' s why the answer for n = 3 is 0 , and the answer for n = 6 ( and for n = 9 ) is 1 .",
    "topics": [
      "binary search",
      "brute force",
      "math",
      "number theory"
    ],
    "id": "1487D"
  },
  {
    "title": "Cat Cycle",
    "url": "https://codeforces.com/problemset/problem/1487/B",
    "history": "Suppose you are living with two cats: A and B. There are n napping spots where both cats usually sleep. Your cats like to sleep and also like all these spots, so they change napping spot each hour cyclically: Cat A changes its napping place in order: n, n - 1, n - 2, . . . , 3, 2, 1, n, n - 1, . . . In other words, at the first hour it' s on the spot n and then goes in decreasing order cyclically; Cat B changes its napping place in order: 1, 2, 3, . . . , n - 1, n, 1, 2, . . . In other words, at the first hour it' s on the spot 1 and then goes in increasing order cyclically. The cat B is much younger, so they have a strict hierarchy: A and B don' t lie together. In other words, if both cats' d like to go in spot x then the A takes this place and B moves to the next place in its order ( if x < n then to x + 1 , but if x = n then to 1 ) . Cat B follows his order, so it won' t return to the skipped spot x after A frees it, but will move to the spot x + 2 and so on. Calculate, where cat B will be at hour k ?",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. The first and only line of each test case contains two integers n and k ( 2 \u2264 n \u2264 10^ 9 ; 1 \u2264 k \u2264 10^ 9 ) \u2014 the number of spots and hour k .",
    "output": "For each test case, print one integer \u2014 the index of the spot where cat B will sleep at hour k .",
    "note": "In the first and second test cases n = 2 , so: at the 1 - st hour, A is on spot 2 and B is on 1 ; at the 2 - nd hour, A moves to spot 1 and B \u2014 to 2 . If n = 3 then: at the 1 - st hour, A is on spot 3 and B is on 1 ; at the 2 - nd hour, A moves to spot 2 ; B' d like to move from 1 to 2 , but this spot is occupied, so it moves to 3 ; at the 3 - rd hour, A moves to spot 1 ; B also would like to move from 3 to 1 , but this spot is occupied, so it moves to 2 . In the sixth test case: A' s spots at each hour are [ 5, 4, 3, 2, 1] ; B' s spots at each hour are [ 1, 2, 4, 5, 2] .",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "1487B"
  },
  {
    "title": "Multiples and Power Differences",
    "url": "https://codeforces.com/problemset/problem/1485/D",
    "history": "You are given a matrix a consisting of positive integers. It has n rows and m columns. Construct a matrix b consisting of positive integers. It should have the same size as a , and the following conditions should be met: 1 \u2264 b_ i, j\u2264 10^ 6 ; b_ i, j is a multiple of a_ i, j ; the absolute value of the difference between numbers in any adjacent pair of cells ( two cells that share the same side) in b is equal to k^ 4 for some integer k \u2265 1 ( k is not necessarily the same for all pairs, it is own for each pair) . We can show that the answer always exists.",
    "input": "The first line contains two integers n and m ( 2 \u2264 n, m \u2264 500 ) . Each of the following n lines contains m integers. The j - th integer in the i - th line is a_ i, j ( 1 \u2264 a_ i, j\u2264 16 ) .",
    "output": "The output should contain n lines each containing m integers. The j - th integer in the i - th line should be b_ i, j .",
    "note": "In the first example, the matrix a can be used as the matrix b , because the absolute value of the difference between numbers in any adjacent pair of cells is 1 = 1^ 4 . In the third example: 327 is a multiple of 3 , 583 is a multiple of 11 , 408 is a multiple of 12 , 664 is a multiple of 8 ; | 408 - 327| = 3^ 4 , | 583 - 327| = 4^ 4 , | 664 - 408| = 4^ 4 , | 664 - 583| = 3^ 4 .",
    "topics": [
      "constructive algorithms",
      "graphs",
      "math",
      "number theory"
    ],
    "id": "1485D"
  },
  {
    "title": "Floor and Mod",
    "url": "https://codeforces.com/problemset/problem/1485/C",
    "history": "A pair of positive integers ( a, b) is called special if \u230aa/ b\u230b = a b . Here, \u230aa/ b\u230b is the result of the integer division between a and b , while a b is its remainder. You are given two integers x and y . Find the number of special pairs ( a, b) such that 1\u2264 a \u2264 x and 1 \u2264 b \u2264 y .",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 100 ) \u2014 the number of test cases. The only line of the description of each test case contains two integers x , y ( 1 \u2264 x, y \u2264 10^ 9 ) .",
    "output": "For each test case print the answer on a single line.",
    "note": "In the first test case, the only special pair is ( 3, 2) . In the second test case, there are no special pairs. In the third test case, there are two special pairs: ( 3, 2) and ( 4, 3) .",
    "topics": [
      "binary search",
      "brute force",
      "math",
      "number theory"
    ],
    "id": "1485C"
  },
  {
    "title": "Add and Divide",
    "url": "https://codeforces.com/problemset/problem/1485/A",
    "history": "You have two positive integers a and b . You can perform two kinds of operations: a = \u230aa/ b\u230b ( replace a with the integer part of the division between a and b ) b= b+ 1 ( increase b by 1 ) Find the minimum number of operations required to make a= 0 .",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 100 ) \u2014 the number of test cases. The only line of the description of each test case contains two integers a , b ( 1 \u2264 a, b \u2264 10^ 9 ) .",
    "output": "For each test case, print a single integer: the minimum number of operations required to make a= 0 .",
    "note": "In the first test case, one of the optimal solutions is: Divide a by b . After this operation a = 4 and b = 2 . Divide a by b . After this operation a = 2 and b = 2 . Increase b . After this operation a = 2 and b = 3 . Divide a by b . After this operation a = 0 and b = 3 .",
    "topics": [
      "brute force",
      "greedy",
      "math",
      "number theory"
    ],
    "id": "1485A"
  },
  {
    "title": "School Clubs",
    "url": "https://codeforces.com/problemset/problem/1479/E",
    "history": "In Homer' s school, there are n students who love clubs. Initially, there are m clubs, and each of the n students is in exactly one club. In other words, there are a_ i students in the i - th club for 1 \u2264 i \u2264 m and a_ 1+ a_ 2+ . . . + a_ m = n . The n students are so unfriendly that every day one of them ( chosen uniformly at random from all of the n students) gets angry. The student who gets angry will do one of the following things. With probability 1/ 2 , he leaves his current club, then creates a new club himself and joins it. There is only one student ( himself) in the new club he creates. With probability 1/ 2 , he does not create new clubs. In this case, he changes his club to a new one ( possibly the same club he is in currently) with probability proportional to the number of students in it. Formally, suppose there are k clubs and there are b_ i students in the i - th club for 1 \u2264 i \u2264 k ( before the student gets angry) . He leaves his current club, and then joins the i - th club with probability b_ i/ n . We note that when a club becomes empty, students will never join it because any student who gets angry will join an empty club with probability 0 according to the above statement. Homer wonders the expected number of days until every student is in the same club for the first time. We can prove that the answer can be represented as a rational number p/ q with ( p, q) = 1 . Therefore, you are asked to find the value of pq^ - 1 998 244 353 . It can be shown that q 998 244 353 = \u0338 0 under the given constraints of the problem.",
    "input": "The first line contains an integer m ( 1 \u2264 m \u2264 1000 ) \u2014 the number of clubs initially. The second line contains m integers a_ 1, a_ 2, . . . , a_ m ( 1 \u2264 a_ i \u2264 4 \u00b7 10^ 8 ) with 1 \u2264 a_ 1+ a_ 2+ . . . + a_ m \u2264 4 \u00b7 10^ 8 , where a_ i denotes the number of students in the i - th club initially.",
    "output": "Print one integer \u2014 the expected number of days until every student is in the same club for the first time, modulo 998 244 353 .",
    "note": "In the first example, no matter which student gets angry, the two students will become in the same club with probability 1/ 4 . So the expected number of days until every student is in the same club should be 4 . In the second example, we note that in the first day: The only student in the first club will get angry with probability 1/ 3 . If he gets angry, then he will create a new club and join it with probability 1/ 2 ( In this case, there will be three clubs which have 0, 1, 2 students in it, respectively) , leave his current club and join the second club with probability 1/ 2\u00b72/ 3 = 1/ 3 , or stay still with probability 1/ 2\u00b71/ 3 = 1/ 6 ; Each of the two students in the second club will get angry with probability 1/ 3 . If one of them gets angry, then he will create a new club and join it with probability 1/ 2 , leave his current club and join the second club with probability 1/ 2\u00b71/ 3 = 1/ 6 , or stay still with probability 1/ 2\u00b72/ 3 = 1/ 3 . In the fourth example, there is only one club initially. That is, every student has already been in the same club. So the answer is 0 .",
    "topics": [
      "dp",
      "fft",
      "math",
      "number theory",
      "probabilities"
    ],
    "id": "1479E"
  },
  {
    "title": "Nezzar and Board",
    "url": "https://codeforces.com/problemset/problem/1477/A",
    "history": "n distinct integers x_ 1, x_ 2, . . . , x_ n are written on the board. Nezzar can perform the following operation multiple times. Select two integers x, y ( not necessarily distinct) on the board, and write down 2x- y . Note that you don' t remove selected numbers. Now, Nezzar wonders if it is possible to have his favorite number k on the board after applying above operation multiple times.",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 5 ) \u2014 the number of test cases. The first line of each test case contains two integers n, k ( 2 \u2264 n \u2264 2 \u00b7 10^ 5 , - 10^ 18\u2264 k \u2264 10^ 18 ) . The second line of each test case contains n distinct integers x_ 1, x_ 2, . . . , x_ n ( - 10^ 18\u2264 x_ i \u2264 10^ 18 ) . It is guaranteed that the sum of n for all test cases does not exceed 2 \u00b7 10^ 5 .",
    "output": "For each test case, print \" YES\" on a single line if it is possible to have k on the board. Otherwise, print \" NO\" . You can print each letter in any case ( upper or lower) .",
    "note": "In the first test case, the number 1 is already on the board. In the second test case, Nezzar could perform the following operations to write down k= 0 on the board: Select x= 3 and y= 2 and write down 4 on the board. Select x= 4 and y= 7 and write down 1 on the board. Select x= 1 and y= 2 and write down 0 on the board. In the third test case, it is impossible to have the number k = - 1 on the board.",
    "topics": [
      "constructive algorithms",
      "math",
      "number theory"
    ],
    "id": "1477A"
  },
  {
    "title": "Strange Beauty",
    "url": "https://codeforces.com/problemset/problem/1475/G",
    "history": "Polycarp found on the street an array a of n elements. Polycarp invented his criterion for the beauty of an array. He calls an array a beautiful if at least one of the following conditions must be met for each different pair of indices i j : a_ i is divisible by a_ j ; or a_ j is divisible by a_ i . For example, if: n= 5 and a= [ 7, 9, 3, 14, 63] , then the a array is not beautiful ( for i= 4 and j= 2 , none of the conditions above is met) ; n= 3 and a= [ 2, 14, 42] , then the a array is beautiful; n= 4 and a= [ 45, 9, 3, 18] , then the a array is not beautiful ( for i= 1 and j= 4 none of the conditions above is met) ; Ugly arrays upset Polycarp, so he wants to remove some elements from the array a so that it becomes beautiful. Help Polycarp determine the smallest number of elements to remove to make the array a beautiful.",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 10 ) \u2014 the number of test cases. Then t test cases follow. The first line of each test case contains one integer n ( 1 \u2264 n \u2264 2 \u00b7 10^ 5 ) \u2014 the length of the array a . The second line of each test case contains n numbers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 2 \u00b7 10^ 5 ) \u2014 elements of the array a .",
    "output": "For each test case output one integer \u2014 the minimum number of elements that must be removed to make the array a beautiful.",
    "note": "In the first test case, removing 7 and 14 will make array a beautiful. In the second test case, the array a is already beautiful. In the third test case, removing one of the elements 45 or 18 will make the array a beautiful. In the fourth test case, the array a is beautiful.",
    "topics": [
      "dp",
      "math",
      "number theory",
      "sortings"
    ],
    "id": "1475G"
  },
  {
    "title": "Odd Divisor",
    "url": "https://codeforces.com/problemset/problem/1475/A",
    "history": "You are given an integer n . Check if n has an odd divisor, greater than one ( does there exist such a number x ( x > 1 ) that n is divisible by x and x is odd) . For example, if n= 6 , then there is x= 3 . If n= 4 , then such a number does not exist.",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. Then t test cases follow. Each test case contains one integer n ( 2 \u2264 n \u2264 10^ 14 ) . Please note, that the input for some test cases won' t fit into 32 - bit integer type, so you should use at least 64 - bit integer type in your programming language.",
    "output": "For each test case, output on a separate line: \" YES\" if n has an odd divisor, greater than one; \" NO\" otherwise. You can output \" YES\" and \" NO\" in any case ( for example, the strings yEs, yes, Yes and YES will be recognized as positive) .",
    "note": "",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "1475A"
  },
  {
    "title": "Different Divisors",
    "url": "https://codeforces.com/problemset/problem/1474/B",
    "history": "Positive integer x is called divisor of positive integer y , if y is divisible by x without remainder. For example, 1 is a divisor of 7 and 3 is not divisor of 8 . We gave you an integer d and asked you to find the smallest positive integer a , such that a has at least 4 divisors; difference between any two divisors of a is at least d .",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 3000 ) \u2014 the number of test cases. The first line of each test case contains a single integer d ( 1 \u2264 d \u2264 10000 ) .",
    "output": "For each test case print one integer a \u2014 the answer for this test case.",
    "note": "In the first test case, integer 6 have following divisors: [ 1, 2, 3, 6] . There are 4 of them and the difference between any two of them is at least 1 . There is no smaller integer with at least 4 divisors. In the second test case, integer 15 have following divisors: [ 1, 3, 5, 15] . There are 4 of them and the difference between any two of them is at least 2 . The answer 12 is INVALID because divisors are [ 1, 2, 3, 4, 6, 12] . And the difference between, for example, divisors 2 and 3 is less than d= 2 .",
    "topics": [
      "binary search",
      "constructive algorithms",
      "greedy",
      "math",
      "number theory"
    ],
    "id": "1474B"
  },
  {
    "title": "String LCM",
    "url": "https://codeforces.com/problemset/problem/1473/B",
    "history": "Let' s define a multiplication operation between a string a and a positive integer x : a \u00b7 x is the string that is a result of writing x copies of a one after another. For example, \" abc\" \u00b7 2 = \" abcabc\" , \" a\" \u00b7 5 = \" aaaaa\" . A string a is divisible by another string b if there exists an integer x such that b \u00b7 x = a . For example, \" abababab\" is divisible by \" ab\" , but is not divisible by \" ababab\" or \" aa\" . LCM of two strings s and t ( defined as LCM( s, t) ) is the shortest non- empty string that is divisible by both s and t . You are given two strings s and t . Find LCM( s, t) or report that it does not exist. It can be shown that if LCM( s, t) exists, it is unique.",
    "input": "The first line contains one integer q ( 1 \u2264 q \u2264 2000 ) \u2014 the number of test cases. Each test case consists of two lines, containing strings s and t ( 1 \u2264 | s| , | t| \u2264 20 ) . Each character in each of these strings is either ' a' or ' b' .",
    "output": "For each test case, print LCM( s, t) if it exists; otherwise, print - 1. It can be shown that if LCM( s, t) exists, it is unique.",
    "note": "In the first test case, \" baba\" = \" baba\" \u00b7 1 = \" ba\" \u00b7 2 . In the second test case, \" aaaaaa\" = \" aa\" \u00b7 3 = \" aaa\" \u00b7 2 .",
    "topics": [
      "brute force",
      "math",
      "number theory",
      "strings"
    ],
    "id": "1473B"
  },
  {
    "title": "Strange Partition",
    "url": "https://codeforces.com/problemset/problem/1471/A",
    "history": "You are given an array a of length n , and an integer x . You can perform the following operation as many times as you would like ( possibly zero) : replace two adjacent elements of the array by their sum. For example, if the initial array was [ 3, 6, 9] , in a single operation one can replace the last two elements by their sum, yielding an array [ 3, 15] , or replace the first two elements to get an array [ 9, 9] . Note that the size of the array decreases after each operation. The beauty of an array b= [ b_ 1, . . . , b_ k] is defined as \u2211_ i= 1^ k \u2308b_ i/ x\u2309 , which means that we divide each element by x , round it up to the nearest integer, and sum up the resulting values. For example, if x = 3 , and the array is [ 4, 11, 6] , the beauty of the array is equal to \u23084/ 3\u2309 + \u230811/ 3\u2309 + \u23086/ 3\u2309 = 2 + 4 + 2 = 8 . Please determine the minimum and the maximum beauty you can get by performing some operations on the original array.",
    "input": "The first input line contains a single integer t \u2014 the number of test cases ( 1 \u2264 t \u2264 1000 ) . The first line of each test case contains two integers n and x ( 1 \u2264 n \u2264 10^ 5 , 1 \u2264 x \u2264 10^ 9 ) . The next line contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 9 ) , the elements of the array a . It is guaranteed that the sum of values of n over all test cases does not exceed 10^ 5 .",
    "output": "For each test case output two integers \u2014 the minimal and the maximal possible beauty.",
    "note": "In the first test case the beauty of the array does not change if we perform any operations. In the second example we can leave the array unchanged to attain the maximum beauty, and to get the minimum beauty one can replace two elements 4 and 11 with their sum, yielding an array [ 6, 15] , which has its beauty equal to 7 .",
    "topics": [
      "greedy",
      "math",
      "number theory"
    ],
    "id": "1471A"
  },
  {
    "title": "Strange Definition",
    "url": "https://codeforces.com/problemset/problem/1470/B",
    "history": "Let us call two integers x and y adjacent if lcm( x, y) / gcd( x, y) is a perfect square. For example, 3 and 12 are adjacent, but 6 and 9 are not. Here gcd( x, y) denotes the greatest common divisor ( GCD) of integers x and y , and lcm( x, y) denotes the least common multiple ( LCM) of integers x and y . You are given an array a of length n . Each second the following happens: each element a_ i of the array is replaced by the product of all elements of the array ( including itself) , that are adjacent to the current value. Let d_ i be the number of adjacent elements to a_ i ( including a_ i itself) . The beauty of the array is defined as max_ 1 \u2264 i \u2264 n d_ i . You are given q queries: each query is described by an integer w , and you have to output the beauty of the array after w seconds.",
    "input": "The first input line contains a single integer t ( 1 \u2264 t \u2264 10^ 5) \u2014 the number of test cases. The first line of each test case contains a single integer n ( 1 \u2264 n \u2264 3 \u00b7 10^ 5 ) \u2014 the length of the array. The following line contains n integers a_ 1, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 6 ) \u2014 array elements. The next line contain a single integer q ( 1 \u2264 q \u2264 3 \u00b7 10^ 5 ) \u2014 the number of queries. The following q lines contain a single integer w each ( 0 \u2264 w \u2264 10^ 18 ) \u2014 the queries themselves. It is guaranteed that the sum of values n over all test cases does not exceed 3 \u00b7 10^ 5 , and the sum of values q over all test cases does not exceed 3 \u00b7 10^ 5",
    "output": "For each query output a single integer \u2014 the beauty of the array at the corresponding moment.",
    "note": "In the first test case, the initial array contains elements [ 6, 8, 4, 2] . Element a_ 4= 2 in this array is adjacent to a_ 4= 2 ( since lcm( 2, 2) / gcd( 2, 2) = 2/ 2= 1= 1^ 2 ) and a_ 2= 8 ( since lcm( 8, 2) / gcd( 8, 2) = 8/ 2= 4= 2^ 2 ) . Hence, d_ 4= 2 , and this is the maximal possible value d_ i in this array. In the second test case, the initial array contains elements [ 12, 3, 20, 5, 80, 1] . The elements adjacent to 12 are { 12, 3} , the elements adjacent to 3 are { 12, 3} , the elements adjacent to 20 are { 20, 5, 80} , the elements adjacent to 5 are { 20, 5, 80} , the elements adjacent to 80 are { 20, 5, 80} , the elements adjacent to 1 are { 1} . After one second, the array is transformed into [ 36, 36, 8000, 8000, 8000, 1] .",
    "topics": [
      "bitmasks",
      "graphs",
      "hashing",
      "math",
      "number theory"
    ],
    "id": "1470B"
  },
  {
    "title": "Ceil Divisions",
    "url": "https://codeforces.com/problemset/problem/1469/D",
    "history": "You have an array a_ 1, a_ 2, . . . , a_ n where a_ i = i . In one step, you can choose two indices x and y ( x = \u0338 y ) and set a_ x = \u2308a_ x/ a_ y\u2309 ( ceiling function) . Your goal is to make array a consist of n - 1 ones and 1 two in no more than n + 5 steps. Note that you don' t have to minimize the number of steps.",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 1000 ) \u2014 the number of test cases. The first and only line of each test case contains the single integer n ( 3 \u2264 n \u2264 2 \u00b7 10^ 5 ) \u2014 the length of array a . It' s guaranteed that the sum of n over test cases doesn' t exceed 2 \u00b7 10^ 5 .",
    "output": "For each test case, print the sequence of operations that will make a as n - 1 ones and 1 two in the following format: firstly, print one integer m ( m \u2264 n + 5 ) \u2014 the number of operations; next print m pairs of integers x and y ( 1 \u2264 x, y \u2264 n ; x = \u0338 y ) ( x may be greater or less than y ) \u2014 the indices of the corresponding operation. It can be proven that for the given constraints it' s always possible to find a correct sequence of operations.",
    "note": "In the first test case, you have array a = [ 1, 2, 3] . For example, you can do the following: choose 3 , 2 : a_ 3 = \u2308a_ 3/ a_ 2\u2309 = 2 and array a = [ 1, 2, 2] ; choose 3 , 2 : a_ 3 = \u23082/ 2\u2309 = 1 and array a = [ 1, 2, 1] . You' ve got array with 2 ones and 1 two in 2 steps. In the second test case, a = [ 1, 2, 3, 4] . For example, you can do the following: choose 3 , 4 : a_ 3 = \u23083/ 4\u2309 = 1 and array a = [ 1, 2, 1, 4] ; choose 4 , 2 : a_ 4 = \u23084/ 2\u2309 = 2 and array a = [ 1, 2, 1, 2] ; choose 4 , 2 : a_ 4 = \u23082/ 2\u2309 = 1 and array a = [ 1, 2, 1, 1] .",
    "topics": [
      "brute force",
      "constructive algorithms",
      "math",
      "number theory"
    ],
    "id": "1469D"
  },
  {
    "title": "Prime Divisors Selection",
    "url": "https://codeforces.com/problemset/problem/1468/L",
    "history": "Suppose you have a sequence of k integers A = [ a_ 1, a_ 2, . . . , a_ k] where each a_ i \u2265 2 . A sequence of prime integers P = [ p_ 1, p_ 2, . . . , p_ k] is called suitable for the sequence A if a_ 1 is divisible by p_ 1 , a_ 2 is divisible by p_ 2 and so on. A sequence of prime integers P is called friendly if there are no unique integers in this sequence. A sequence A is called ideal, if each sequence P that is suitable for A is friendly as well ( i. e. there is no sequence P that is suitable for A , but not friendly) . For example, the sequence [ 2, 4, 16] is ideal, while the sequence [ 2, 4, 6] is not ideal ( there exists a sequence P = [ 2, 2, 3] which is suitable for A , but not friendly) . You are given n different integers x_ 1 , x_ 2 , . . . , x_ n . You have to choose exactly k of them in such a way that they form an ideal sequence, or report that it is impossible. Note that no integer can be chosen more than once.",
    "input": "The first line contains two integers n and k ( 1 \u2264 k \u2264 n \u2264 1000 ) . The second line contains n pairwise distinct integers x_ 1 , x_ 2 , . . . , x_ n ( 2 \u2264 x_ i \u2264 10^ 18 ) .",
    "output": "If it is impossible to choose exactly k integers from x_ 1 , x_ 2 , . . . , x_ n in such a way that the chosen integers form an ideal sequence, print 0 . Otherwise, print k pairwise distinct integers \u2014 the elements of the chosen ideal sequence. If there are multiple answers, print any of them.",
    "note": "",
    "topics": [
      "binary search",
      "greedy",
      "math",
      "number theory"
    ],
    "id": "1468L"
  },
  {
    "title": "Full Turn",
    "url": "https://codeforces.com/problemset/problem/1468/F",
    "history": "There are n persons located on a plane. The i - th person is located at the point ( x_ i, y_ i) and initially looks at the point ( u_ i, v_ i) . At the same moment of time, all persons will start to rotate clockwise synchronously with the same angular speed. They will rotate until they do one full 360 - degree turn. It is said that persons A and B made eye contact if person A looks in person B ' s direction at the same moment when person B looks in person A ' s direction. If there is a person C located between persons A and B , that will not obstruct A and B from making eye contact. A person can make eye contact with more than one person at the same time. Calculate the number of pairs of persons that will make eye contact at least once during the rotation ( including the initial moment) .",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. The first line of each test case contains a single integer n ( 1 \u2264 n \u2264 10^ 5 ) \u2014 the number of persons. The following n lines describe persons, each line containing four space- separated integers x_ i, y_ i, u_ i, v_ i ( | x_ i| , | y_ i| , | u_ i| , | v_ i| \u2264 10^ 9 ; x_ i u_ i or y_ i v_ i ) , where ( x_ i, y_ i ) are the coordinates of the point where the i - th person is located and ( u_ i , v_ i ) are the coordinates of the point that the i - th person looks at initially. Each person' s location is unique in each test case. The sum of n over all test cases does not exceed 10^ 5 .",
    "output": "For each test case, print one integer \u2014 the number of pairs of persons who will make eye contact at least once during the rotation, including the initial moment.",
    "note": "",
    "topics": [
      "geometry",
      "hashing",
      "number theory"
    ],
    "id": "1468F"
  },
  {
    "title": "Add to Neighbour and Remove",
    "url": "https://codeforces.com/problemset/problem/1462/D",
    "history": "Polycarp was given an array of a[ 1 . . . n] of n integers. He can perform the following operation with the array a no more than n times: Polycarp selects the index i and adds the value a_ i to one of his choice of its neighbors. More formally, Polycarp adds the value of a_ i to a_ i- 1 or to a_ i+ 1 ( if such a neighbor does not exist, then it is impossible to add to it) . After adding it, Polycarp removes the i - th element from the a array. During this step the length of a is decreased by 1 . The two items above together denote one single operation. For example, if Polycarp has an array a = [ 3, 1, 6, 6, 2] , then it can perform the following sequence of operations with it: Polycarp selects i = 2 and adds the value a_ i to ( i- 1) - th element: a = [ 4, 6, 6, 2] . Polycarp selects i = 1 and adds the value a_ i to ( i+ 1) - th element: a = [ 10, 6, 2] . Polycarp selects i = 3 and adds the value a_ i to ( i- 1) - th element: a = [ 10, 8] . Polycarp selects i = 2 and adds the value a_ i to ( i- 1) - th element: a = [ 18] . Note that Polycarp could stop performing operations at any time. Polycarp wondered how many minimum operations he would need to perform to make all the elements of a equal ( i. e. , he wants all a_ i are equal to each other) .",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 3000 ) \u2014 the number of test cases in the test. Then t test cases follow. The first line of each test case contains a single integer n ( 1 \u2264 n \u2264 3000 ) \u2014 the length of the array. The next line contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 5 ) \u2014 array a . It is guaranteed that the sum of n over all test cases does not exceed 3000 .",
    "output": "For each test case, output a single number \u2014 the minimum number of operations that Polycarp needs to perform so that all elements of the a array are the same ( equal) .",
    "note": "In the first test case of the example, the answer can be constructed like this ( just one way among many other ways) : [ 3, 1, 6, 6, 2] [ 3, 1, 12, 2] [ 3, 13, 2] [ 16, 2] [ 18] . All elements of the array [ 18] are the same. In the second test case of the example, the answer can be constructed like this ( just one way among other ways) : [ 1, 2, 2, 1] [ 3, 2, 1] [ 3, 3] . All elements of the array [ 3, 3] are the same. In the third test case of the example, Polycarp doesn' t need to perform any operations since [ 2, 2, 2] contains equal ( same) elements only. In the fourth test case of the example, the answer can be constructed like this ( just one way among other ways) : [ 6, 3, 2, 1] [ 6, 3, 3] [ 6, 6] . All elements of the array [ 6, 6] are the same.",
    "topics": [
      "greedy",
      "math",
      "number theory"
    ],
    "id": "1462D"
  },
  {
    "title": "Row GCD",
    "url": "https://codeforces.com/problemset/problem/1458/A",
    "history": "You are given two positive integer sequences a_ 1, . . . , a_ n and b_ 1, . . . , b_ m . For each j = 1, . . . , m find the greatest common divisor of a_ 1 + b_ j, . . . , a_ n + b_ j .",
    "input": "The first line contains two integers n and m ( 1 \u2264 n, m \u2264 2 \u00b7 10^ 5 ) . The second line contains n integers a_ 1, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 18) . The third line contains m integers b_ 1, . . . , b_ m ( 1 \u2264 b_ j \u2264 10^ 18) .",
    "output": "Print m integers. The j - th of them should be equal to GCD ( a_ 1 + b_ j, . . . , a_ n + b_ j) .",
    "note": "",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "1458A"
  },
  {
    "title": "Strange Functions",
    "url": "https://codeforces.com/problemset/problem/1455/A",
    "history": "Let' s define a function f( x) ( x is a positive integer) as follows: write all digits of the decimal representation of x backwards, then get rid of the leading zeroes. For example, f( 321) = 123 , f( 120) = 21 , f( 1000000) = 1 , f( 111) = 111 . Let' s define another function g( x) = xf( f( x) ) ( x is a positive integer as well) . Your task is the following: for the given positive integer n , calculate the number of different values of g( x) among all numbers x such that 1 \u2264 x \u2264 n .",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 100 ) \u2014 the number of test cases. Each test case consists of one line containing one integer n ( 1 \u2264 n < 10^ 100 ) . This integer is given without leading zeroes.",
    "output": "For each test case, print one integer \u2014 the number of different values of the function g( x) , if x can be any integer from [ 1, n] .",
    "note": "Explanations for the two first test cases of the example: if n = 4 , then for every integer x such that 1 \u2264 x \u2264 n , xf( f( x) ) = 1 ; if n = 37 , then for some integers x such that 1 \u2264 x \u2264 n , xf( f( x) ) = 1 ( for example, if x = 23 , f( f( x) ) = 23 , xf( f( x) ) = 1 ) ; and for other values of x , xf( f( x) ) = 10 ( for example, if x = 30 , f( f( x) ) = 3 , xf( f( x) ) = 10 ) . So, there are two different values of g( x) .",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "1455A"
  },
  {
    "title": "Number into Sequence",
    "url": "https://codeforces.com/problemset/problem/1454/D",
    "history": "You are given an integer n ( n > 1 ) . Your task is to find a sequence of integers a_ 1, a_ 2, . . . , a_ k such that: each a_ i is strictly greater than 1 ; a_ 1 \u00b7 a_ 2 \u00b7. . . \u00b7 a_ k = n ( i. e. the product of this sequence is n ) ; a_ i + 1 is divisible by a_ i for each i from 1 to k- 1 ; k is the maximum possible ( i. e. the length of this sequence is the maximum possible) . If there are several such sequences, any of them is acceptable. It can be proven that at least one valid sequence always exists for any integer n > 1 . You have to answer t independent test cases.",
    "input": "The first line of the input contains one integer t ( 1 \u2264 t \u2264 5000 ) \u2014 the number of test cases. Then t test cases follow. The only line of the test case contains one integer n ( 2 \u2264 n \u2264 10^ 10 ) . It is guaranteed that the sum of n does not exceed 10^ 10 ( \u2211 n \u2264 10^ 10 ) .",
    "output": "For each test case, print the answer: in the first line, print one positive integer k \u2014 the maximum possible length of a . In the second line, print k integers a_ 1, a_ 2, . . . , a_ k \u2014 the sequence of length k satisfying the conditions from the problem statement. If there are several answers, you can print any. It can be proven that at least one valid sequence always exists for any integer n > 1 .",
    "note": "",
    "topics": [
      "constructive algorithms",
      "math",
      "number theory"
    ],
    "id": "1454D"
  },
  {
    "title": "Division",
    "url": "https://codeforces.com/problemset/problem/1444/A",
    "history": "Oleg' s favorite subjects are History and Math, and his favorite branch of mathematics is division. To improve his division skills, Oleg came up with t pairs of integers p_ i and q_ i and for each pair decided to find the greatest integer x_ i , such that: p_ i is divisible by x_ i ; x_ i is not divisible by q_ i . Oleg is really good at division and managed to find all the answers quickly, how about you?",
    "input": "The first line contains an integer t ( 1 \u2264 t \u2264 50 ) \u2014 the number of pairs. Each of the following t lines contains two integers p_ i and q_ i ( 1 \u2264 p_ i \u2264 10^ 18 ; 2 \u2264 q_ i \u2264 10^ 9 ) \u2014 the i - th pair of integers.",
    "output": "Print t integers: the i - th integer is the largest x_ i such that p_ i is divisible by x_ i , but x_ i is not divisible by q_ i . One can show that there is always at least one value of x_ i satisfying the divisibility conditions for the given constraints.",
    "note": "For the first pair, where p_ 1 = 10 and q_ 1 = 4 , the answer is x_ 1 = 10 , since it is the greatest divisor of 10 and 10 is not divisible by 4 . For the second pair, where p_ 2 = 12 and q_ 2 = 6 , note that 12 is not a valid x_ 2 , since 12 is divisible by q_ 2 = 6 ; 6 is not valid x_ 2 as well: 6 is also divisible by q_ 2 = 6 . The next available divisor of p_ 2 = 12 is 4 , which is the answer, since 4 is not divisible by 6 .",
    "topics": [
      "brute force",
      "math",
      "number theory"
    ],
    "id": "1444A"
  },
  {
    "title": "Sum Over Subsets",
    "url": "https://codeforces.com/problemset/problem/1436/F",
    "history": "You are given a multiset S . Over all pairs of subsets A and B , such that: B \u2282 A ; | B| = | A| - 1 ; greatest common divisor of all elements in A is equal to one; find the sum of \u2211_ x \u2208 Ax\u00b7\u2211_ x \u2208 Bx , modulo 998 244 353 .",
    "input": "The first line contains one integer m ( 1 \u2264 m \u2264 10^ 5 ) : the number of different values in the multiset S . Each of the next m lines contains two integers a_ i , freq_ i ( 1 \u2264 a_ i \u2264 10^ 5, 1 \u2264 freq_ i \u2264 10^ 9 ) . Element a_ i appears in the multiset S freq_ i times. All a_ i are different.",
    "output": "Print the required sum, modulo 998 244 353 .",
    "note": "A multiset is a set where elements are allowed to coincide. | X| is the cardinality of a set X , the number of elements in it. A \u2282 B : Set A is a subset of a set B . In the first example B= { 1} , A= { 1, 2} and B= { 2} , A= { 1, 2} have a product equal to 1\u00b73 + 2\u00b73= 9 . Other pairs of A and B don' t satisfy the given constraints.",
    "topics": [
      "combinatorics",
      "math",
      "number theory"
    ],
    "id": "1436F"
  },
  {
    "title": "Xum",
    "url": "https://codeforces.com/problemset/problem/1427/E",
    "history": "You have a blackboard and initially only an odd number x is written on it. Your goal is to write the number 1 on the blackboard. You may write new numbers on the blackboard with the following two operations. You may take two numbers ( not necessarily distinct) already on the blackboard and write their sum on the blackboard. The two numbers you have chosen remain on the blackboard. You may take two numbers ( not necessarily distinct) already on the blackboard and write their bitwise XOR on the blackboard. The two numbers you have chosen remain on the blackboard. Perform a sequence of operations such that at the end the number 1 is on the blackboard.",
    "input": "The single line of the input contains the odd integer x ( 3 \u2264 x \u2264 999, 999 ) .",
    "output": "Print on the first line the number q of operations you perform. Then q lines should follow, each describing one operation. The \" sum\" operation is described by the line \" a + b \" , where a, b must be integers already present on the blackboard. The \" xor\" operation is described by the line \" a ^ b \" , where a, b must be integers already present on the blackboard. The operation symbol ( + or ^ ) must be separated from a, b by a whitespace. You can perform at most 100, 000 operations ( that is, q\u2264 100, 000 ) and all numbers written on the blackboard must be in the range [ 0, 5\u00b710^ 18] . It can be proven that under such restrictions the required sequence of operations exists. You can output any suitable sequence of operations.",
    "note": "",
    "topics": [
      "bitmasks",
      "constructive algorithms",
      "math",
      "matrices",
      "number theory"
    ],
    "id": "1427E"
  },
  {
    "title": "Lonely Numbers",
    "url": "https://codeforces.com/problemset/problem/1423/K",
    "history": "In number world, two different numbers are friends if they have a lot in common, but also each one has unique perks. More precisely, two different numbers a and b are friends if gcd( a, b) , a/ gcd( a, b) , b/ gcd( a, b) can form sides of a triangle. Three numbers a , b and c can form sides of a triangle if a + b > c , b + c > a and c + a > b . In a group of numbers, a number is lonely if it doesn' t have any friends in that group. Given a group of numbers containing all numbers from 1, 2, 3, . . . , n , how many numbers in that group are lonely?",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 6) - number of test cases. On next line there are t numbers, n_ i ( 1 \u2264 n_ i \u2264 10^ 6) - meaning that in case i you should solve for numbers 1, 2, 3, . . . , n_ i .",
    "output": "For each test case, print the answer on separate lines: number of lonely numbers in group 1, 2, 3, . . . , n_ i .",
    "note": "For first test case, 1 is the only number and therefore lonely. For second test case where n= 5 , numbers 1 , 3 and 5 are lonely. For third test case where n= 10 , numbers 1 , 5 and 7 are lonely.",
    "topics": [
      "binary search",
      "math",
      "number theory",
      "two pointers"
    ],
    "id": "1423K"
  },
  {
    "title": "Boring Queries",
    "url": "https://codeforces.com/problemset/problem/1422/F",
    "history": "Yura owns a quite ordinary and boring array a of length n . You think there is nothing more boring than that, but Vladik doesn' t agree! In order to make Yura' s array even more boring, Vladik makes q boring queries. Each query consists of two integers x and y . Before answering a query, the bounds l and r for this query are calculated: l = ( last + x) n + 1 , r = ( last + y) n + 1 , where last is the answer on the previous query ( zero initially) , and is the remainder operation. Whenever l > r , they are swapped. After Vladik computes l and r for a query, he is to compute the least common multiple ( LCM) on the segment [ l; r] of the initial array a modulo 10^ 9 + 7 . LCM of a multiset of integers is the smallest positive integer that is divisible by all the elements of the multiset. The obtained LCM is the answer for this query. Help Vladik and compute the answer for each query!",
    "input": "The first line contains a single integer n ( 1 \u2264 n \u2264 10^ 5 ) \u2014 the length of the array. The second line contains n integers a_ i ( 1 \u2264 a_ i \u2264 2 \u00b7 10^ 5 ) \u2014 the elements of the array. The third line contains a single integer q ( 1 \u2264 q \u2264 10^ 5 ) \u2014 the number of queries. The next q lines contain two integers x and y each ( 1 \u2264 x, y \u2264 n ) \u2014 the description of the corresponding query.",
    "output": "Print q integers \u2014 the answers for the queries.",
    "note": "Consider the example: boundaries for first query are ( 0 + 1) 3 + 1 = 2 and ( 0 + 3) 3 + 1 = 1 . LCM for segment [ 1, 2] is equal to 6 ; boundaries for second query are ( 6 + 3) 3 + 1 = 1 and ( 6 + 3) 3 + 1 = 1 . LCM for segment [ 1, 1] is equal to 2 ; boundaries for third query are ( 2 + 2) 3 + 1 = 2 and ( 2 + 3) 3 + 1 = 3 . LCM for segment [ 2, 3] is equal to 15 ; boundaries for fourth query are ( 15 + 2) 3 + 1 = 3 and ( 15 + 3) 3 + 1 = 1 . LCM for segment [ 1, 3] is equal to 30 .",
    "topics": [
      "data structures",
      "math",
      "number theory"
    ],
    "id": "1422F"
  },
  {
    "title": "Decryption",
    "url": "https://codeforces.com/problemset/problem/1419/E",
    "history": "An agent called Cypher is decrypting a message, that contains a composite number n . All divisors of n , which are greater than 1 , are placed in a circle. Cypher can choose the initial order of numbers in the circle. In one move Cypher can choose two adjacent numbers in a circle and insert their least common multiple between them. He can do that move as many times as needed. A message is decrypted, if every two adjacent numbers are not coprime. Note that for such constraints it' s always possible to decrypt the message. Find the minimal number of moves that Cypher should do to decrypt the message, and show the initial order of numbers in the circle for that.",
    "input": "The first line contains an integer t ( 1 \u2264 t \u2264 100) \u2014 the number of test cases. Next t lines describe each test case. In a single line of each test case description, there is a single composite number n ( 4 \u2264 n \u2264 10^ 9) \u2014 the number from the message. It' s guaranteed that the total number of divisors of n for all test cases does not exceed 2 \u00b7 10^ 5 .",
    "output": "For each test case in the first line output the initial order of divisors, which are greater than 1 , in the circle. In the second line output, the minimal number of moves needed to decrypt the message. If there are different possible orders with a correct answer, print any of them.",
    "note": "In the first test case 6 has three divisors, which are greater than 1 : 2, 3, 6 . Regardless of the initial order, numbers 2 and 3 are adjacent, so it' s needed to place their least common multiple between them. After that the circle becomes 2, 6, 3, 6 , and every two adjacent numbers are not coprime. In the second test case 4 has two divisors greater than 1 : 2, 4 , and they are not coprime, so any initial order is correct, and it' s not needed to place any least common multiples. In the third test case all divisors of 30 greater than 1 can be placed in some order so that there are no two adjacent numbers that are coprime.",
    "topics": [
      "constructive algorithms",
      "implementation",
      "math",
      "number theory"
    ],
    "id": "1419E"
  },
  {
    "title": "Equal Product",
    "url": "https://codeforces.com/problemset/problem/1418/F",
    "history": "You are given four integers n , m , l and r . Let' s name a tuple ( x_ 1, y_ 1, x_ 2, y_ 2) as good if: 1 \u2264 x_ 1 < x_ 2 \u2264 n ; 1 \u2264 y_ 2 < y_ 1 \u2264 m ; x_ 1 \u00b7 y_ 1 = x_ 2 \u00b7 y_ 2 ; l \u2264 x_ 1 \u00b7 y_ 1 \u2264 r . Find any good tuple for each x_ 1 from 1 to n inclusive.",
    "input": "The first line contains two integers n and m ( 1 \u2264 n, m \u2264 2 \u00b7 10^ 5 ) . The second line contains two integers l and r ( 1 \u2264 l \u2264 r \u2264 nm ) .",
    "output": "For each x_ 1 from 1 to n inclusive: if there are no such four integers, print - 1 ; otherwise, print four integers x_ 1 , y_ 1 , x_ 2 and y_ 2 . If there are multiple answers, print any of them.",
    "note": "",
    "topics": [
      "data structures",
      "math",
      "number theory",
      "two pointers"
    ],
    "id": "1418F"
  },
  {
    "title": "Fair Numbers",
    "url": "https://codeforces.com/problemset/problem/1411/B",
    "history": "We call a positive integer number fair if it is divisible by each of its nonzero digits. For example, 102 is fair ( because it is divisible by 1 and 2 ) , but 282 is not, because it isn' t divisible by 8 . Given a positive integer n . Find the minimum integer x , such that n \u2264 x and x is fair.",
    "input": "The first line contains number of test cases t ( 1 \u2264 t \u2264 10^ 3 ) . Each of the next t lines contains an integer n ( 1 \u2264 n \u2264 10^ 18 ) .",
    "output": "For each of t test cases print a single integer \u2014 the least fair number, which is not less than n .",
    "note": "Explanations for some test cases: In the first test case number 1 is fair itself. In the second test case number 288 is fair ( it' s divisible by both 2 and 8 ) . None of the numbers from [ 282, 287] is fair, because, for example, none of them is divisible by 8 .",
    "topics": [
      "brute force",
      "number theory"
    ],
    "id": "1411B"
  },
  {
    "title": "Yet Another Array Restoration",
    "url": "https://codeforces.com/problemset/problem/1409/C",
    "history": "We have a secret array. You don' t know this array and you have to restore it. However, you know some facts about this array: The array consists of n distinct positive ( greater than 0 ) integers. The array contains two elements x and y ( these elements are known for you) such that x < y . If you sort the array in increasing order ( such that a_ 1 < a_ 2 < . . . < a_ n ) , differences between all adjacent ( consecutive) elements are equal ( i. e. a_ 2 - a_ 1 = a_ 3 - a_ 2 = . . . = a_ n - a_ n- 1) . It can be proven that such an array always exists under the constraints given below. Among all possible arrays that satisfy the given conditions, we ask you to restore one which has the minimum possible maximum element. In other words, you have to minimize max( a_ 1, a_ 2, . . . , a_ n) . You have to answer t independent test cases.",
    "input": "The first line of the input contains one integer t ( 1 \u2264 t \u2264 100 ) \u2014 the number of test cases. Then t test cases follow. The only line of the test case contains three integers n , x and y ( 2 \u2264 n \u2264 50 ; 1 \u2264 x < y \u2264 50 ) \u2014 the length of the array and two elements that are present in the array, respectively.",
    "output": "For each test case, print the answer: n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 9 ) , where a_ i is the i - th element of the required array. If there are several answers, you can print any ( it also means that the order of elements doesn' t matter) . It can be proven that such an array always exists under the given constraints.",
    "note": "",
    "topics": [
      "brute force",
      "math",
      "number theory"
    ],
    "id": "1409C"
  },
  {
    "title": "Big Vova",
    "url": "https://codeforces.com/problemset/problem/1407/B",
    "history": "Alexander is a well- known programmer. Today he decided to finally go out and play football, but with the first hit he left a dent on the new Rolls- Royce of the wealthy businessman Big Vova. Vladimir has recently opened a store on the popular online marketplace \" Zmey- Gorynych\" , and offers Alex a job: if he shows his programming skills by solving a task, he' ll work as a cybersecurity specialist. Otherwise, he' ll be delivering some doubtful products for the next two years. You' re given n positive integers a_ 1, a_ 2, . . . , a_ n . Using each of them exactly at once, you' re to make such sequence b_ 1, b_ 2, . . . , b_ n that sequence c_ 1, c_ 2, . . . , c_ n is lexicographically maximal, where c_ i= GCD( b_ 1, . . . , b_ i) - the greatest common divisor of the first i elements of b . Alexander is really afraid of the conditions of this simple task, so he asks you to solve it. A sequence a is lexicographically smaller than a sequence b if and only if one of the following holds: a is a prefix of b , but a b ; in the first position where a and b differ, the sequence a has a smaller element than the corresponding element in b .",
    "input": "Each test contains multiple test cases. The first line contains the number of test cases t ( 1 \u2264 t \u2264 10^ 3 ) . Description of the test cases follows. The first line of each test case contains a single integer n ( 1 \u2264 n \u2264 10^ 3 ) \u2014 the length of the sequence a . The second line of each test case contains n integers a_ 1, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 3 ) \u2014 the sequence a . It is guaranteed that the sum of n over all test cases does not exceed 10^ 3 .",
    "output": "For each test case output the answer in a single line \u2014 the desired sequence b . If there are multiple answers, print any.",
    "note": "In the first test case of the example, there are only two possible permutations b \u2014 [ 2, 5] and [ 5, 2] : for the first one c= [ 2, 1] , for the second one c= [ 5, 1] . In the third test case of the example, number 9 should be the first in b , and GCD( 9, 3) = 3 , GCD( 9, 8) = 1 , so the second number of b should be 3 . In the seventh test case of the example, first four numbers pairwise have a common divisor ( a power of two) , but none of them can be the first in the optimal permutation b .",
    "topics": [
      "brute force",
      "greedy",
      "math",
      "number theory"
    ],
    "id": "1407B"
  },
  {
    "title": "Deleting Numbers",
    "url": "https://codeforces.com/problemset/problem/1406/E",
    "history": "This is an interactive problem. There is an unknown integer x ( 1\u2264 x\u2264 n ) . You want to find x . At first, you have a set of integers { 1, 2, . . . , n} . You can perform the following operations no more than 10000 times: A a : find how many numbers are multiples of a in the current set. B a : find how many numbers are multiples of a in this set, and then delete all multiples of a , but x will never be deleted ( even if it is a multiple of a ) . In this operation, a must be greater than 1 . C a : it means that you know that x= a . This operation can be only performed once. Remember that in the operation of type B a> 1 must hold. Write a program, that will find the value of x . InteractionIn each round, your program needs to print a line containing one uppercase letter A, B or C and an integer a ( 1\u2264 a\u2264 n for operations A and C, 2\u2264 a\u2264 n for operation B) . This line desribes operation you make. If your operation has type C your program should terminate immediately. Else your program should read one line containing a single integer, which is the answer to your operation. After outputting each line, don' t forget to flush the output. To do it use: fflush( stdout) in C/ C+ + ; System. out. flush( ) in Java; sys. stdout. flush( ) in Python; flush( output) in Pascal; See the documentation for other languages. It is guaranteed, that the number x is fixed and won' t change during the interaction process. Hacks: To make a hack, use such input format: The only line should contain two integers n , x ( 1 \u2264 x \u2264 n \u2264 10^ 5 ) .",
    "input": "The first line contains one integer n ( 1\u2264 n\u2264 10^ 5 ) . The remaining parts of the input will be given throughout the interaction process.",
    "output": "",
    "note": "Note that to make the sample more clear, we added extra empty lines. You shouldn' t print any extra empty lines during the interaction process. In the first test n= 10 and x= 4 . Initially the set is: { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10} . In the first operation, you ask how many numbers are multiples of 4 and delete them. The answer is 2 because there are two numbers divisible by 4 : { 4, 8} . 8 will be deleted but 4 won' t, because the number x will never be deleted. Now the set is { 1, 2, 3, 4, 5, 6, 7, 9, 10} . In the second operation, you ask how many numbers are multiples of 2 . The answer is 4 because there are four numbers divisible by 2 : { 2, 4, 6, 10} . In the third operation, you ask how many numbers are multiples of 8 . The answer is 0 because there isn' t any number divisible by 8 in the current set. In the fourth operation, you know that x= 4 , which is the right answer.",
    "topics": [
      "interactive",
      "math",
      "number theory"
    ],
    "id": "1406E"
  },
  {
    "title": "Game of Pairs",
    "url": "https://codeforces.com/problemset/problem/1404/D",
    "history": "This is an interactive problem. Consider a fixed positive integer n . Two players, First and Second play a game as follows: First considers the 2n numbers 1, 2, . . . , 2n , and partitions them as he wants into n disjoint pairs. Then, Second chooses exactly one element from each of the pairs that First created ( he chooses elements he wants) . To determine the winner of the game, we compute the sum of the numbers chosen by Second. If the sum of all these numbers is a multiple of 2n , then Second wins. Otherwise, First wins. You are given the integer n . Your task is to decide which player you wish to play as and win the game. InteractionThe interaction begins by reading the integer n ( 1 \u2264 n \u2264 5 \u00b7 10^ 5 ) . After reading, print a single line containing either First or Second, denoting who you want to play as. The interaction then varies depending on who you chose to play as. If you chose to play as First, print a single line containing 2n integers p_ 1, p_ 2, . . . , p_ 2n , denoting that the number i belongs to the p_ i - th pair for 1\u2264 i \u2264 2n . Thus, 1 \u2264 p_ i \u2264 n , and every number between 1 and n inclusive should appear exactly twice. If you chose to play as Second, the interactor will print 2n integers p_ 1, p_ 2, . . . , p_ 2n , denoting that the number i belongs to the p_ i - th pair. As a response, print n integers a_ 1, a_ 2, . . . , a_ n in a single line. These should contain exactly one number from each pair. Regardless of who you chose to play as the interactor will finish by printing a single integer: 0 if your answer for the test case is correct ( that is, you are playing as First and it cannot choose adequate numbers from your pairs, or you are playing as Second and your chosen numbers add up to a multiple of 2n ) , or - 1 if it is incorrect. In particular, the interactor will not print the chosen numbers if you choose to play First and lose. In either case, your program should terminate immediately after reading this number. If at any point you make an invalid interaction, the interactor will print - 1 and finish the interaction. You will receive a Wrong Answer verdict. Make sure to terminate immediately to avoid getting other verdicts. After printing something do not forget to output end of line and flush the output. Otherwise, you will get Idleness limit exceeded. To do this, use: fflush( stdout) or cout. flush( ) in C+ + ; System. out. flush( ) in Java; flush( output) in Pascal; stdout. flush( ) in Python; see documentation for other languages. Hack FormatTo hack, use the following format: The first line contains an integer n ( 1 \u2264 n \u2264 5 \u00b7 10^ 5 ) . The second line contains 2n integers p_ 1, p_ 2, . . . , p_ 2n , denoting that the number i belongs to the p_ i - th pair if the solution being hacked chooses to play as Second. If the solution being hacked chooses to play as First, those pairs don' t matter but the p_ 1, p_ 2, . . . , p_ 2n must still form a valid partition of 1, 2, . . . , 2n into n disjoint pairs.",
    "input": "",
    "output": "",
    "note": "In the first sample, n = 2 , and you decide to play as Second. The judge chooses the pairs ( 1, 2) and ( 3, 4) , and you reply with the numbers 1 and 3 . This is a valid choice since it contains exactly one number from each pair, and the sum 1 + 3 = 4 is divisible by 4 . In the second sample, n = 2 again, and you play as First. You choose the pairs ( 2, 4) and ( 1, 3) . The judge fails to choose a number from each pair such that their sum is divisible by 4 , so the answer is correct. Note that the sample tests are just for illustration of the interaction protocol, and don' t necessarily correspond to the behavior of the real interactor.",
    "topics": [
      "constructive algorithms",
      "dfs and similar",
      "interactive",
      "math",
      "number theory"
    ],
    "id": "1404D"
  },
  {
    "title": "Maximum Distributed Tree",
    "url": "https://codeforces.com/problemset/problem/1401/D",
    "history": "You are given a tree that consists of n nodes. You should label each of its n- 1 edges with an integer in such way that satisfies the following conditions: each integer must be greater than 0 ; the product of all n- 1 numbers should be equal to k ; the number of 1 - s among all n- 1 integers must be minimum possible. Let' s define f( u, v) as the sum of the numbers on the simple path from node u to node v . Also, let \u2211_ i= 1^ n- 1\u2211_ j= i+ 1^ n f( i, j) be a distribution index of the tree. Find the maximum possible distribution index you can get. Since answer can be too large, print it modulo 10^ 9 + 7 . In this problem, since the number k can be large, the result of the prime factorization of k is given instead.",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 100 ) \u2014 the number of test cases. The first line of each test case contains a single integer n ( 2 \u2264 n \u2264 10^ 5 ) \u2014 the number of nodes in the tree. Each of the next n- 1 lines describes an edge: the i - th line contains two integers u_ i and v_ i ( 1 \u2264 u_ i, v_ i \u2264 n ; u_ i v_ i ) \u2014 indices of vertices connected by the i - th edge. Next line contains a single integer m ( 1 \u2264 m \u2264 6 \u00b7 10^ 4 ) \u2014 the number of prime factors of k . Next line contains m prime numbers p_ 1, p_ 2, . . . , p_ m ( 2 \u2264 p_ i < 6 \u00b7 10^ 4 ) such that k = p_ 1 \u00b7 p_ 2 \u00b7. . . \u00b7 p_ m . It is guaranteed that the sum of n over all test cases doesn' t exceed 10^ 5 , the sum of m over all test cases doesn' t exceed 6 \u00b7 10^ 4 , and the given edges for each test cases form a tree.",
    "output": "Print the maximum distribution index you can get. Since answer can be too large, print it modulo 10^ 9+ 7 .",
    "note": "In the first test case, one of the optimal ways is on the following image: In this case, f( 1, 2) = 1 , f( 1, 3) = 3 , f( 1, 4) = 5 , f( 2, 3) = 2 , f( 2, 4) = 4 , f( 3, 4) = 2 , so the sum of these 6 numbers is 17 . In the second test case, one of the optimal ways is on the following image: In this case, f( 1, 2) = 3 , f( 1, 3) = 1 , f( 1, 4) = 4 , f( 2, 3) = 2 , f( 2, 4) = 5 , f( 3, 4) = 3 , so the sum of these 6 numbers is 18 .",
    "topics": [
      "dfs and similar",
      "dp",
      "greedy",
      "implementation",
      "math",
      "number theory",
      "sortings",
      "trees"
    ],
    "id": "1401D"
  },
  {
    "title": "Mere Array",
    "url": "https://codeforces.com/problemset/problem/1401/C",
    "history": "You are given an array a_ 1, a_ 2, . . . , a_ n where all a_ i are integers and greater than 0 . In one operation, you can choose two different indices i and j ( 1 \u2264 i, j \u2264 n ) . If gcd( a_ i, a_ j) is equal to the minimum element of the whole array a , you can swap a_ i and a_ j . gcd( x, y) denotes the greatest common divisor ( GCD) of integers x and y . Now you' d like to make a non- decreasing using the operation any number of times ( possibly zero) . Determine if you can do this. An array a is non- decreasing if and only if a_ 1 \u2264 a_ 2 \u2264. . . \u2264 a_ n .",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. The first line of each test case contains one integer n ( 1 \u2264 n \u2264 10^ 5 ) \u2014 the length of array a . The second line of each test case contains n positive integers a_ 1, a_ 2, . . . a_ n ( 1 \u2264 a_ i \u2264 10^ 9 ) \u2014 the array itself. It is guaranteed that the sum of n over all test cases doesn' t exceed 10^ 5 .",
    "output": "For each test case, output \" YES\" if it is possible to make the array a non- decreasing using the described operation, or \" NO\" if it is impossible to do so.",
    "note": "In the first and third sample, the array is already non- decreasing. In the second sample, we can swap a_ 1 and a_ 3 first, and swap a_ 1 and a_ 5 second to make the array non- decreasing. In the forth sample, we cannot the array non- decreasing using the operation.",
    "topics": [
      "constructive algorithms",
      "math",
      "number theory",
      "sortings"
    ],
    "id": "1401C"
  },
  {
    "title": "Running Competition",
    "url": "https://codeforces.com/problemset/problem/1398/G",
    "history": "A running competition is going to be held soon. The stadium where the competition will be held can be represented by several segments on the coordinate plane: two horizontal segments: one connecting the points ( 0, 0) and ( x, 0) , the other connecting the points ( 0, y) and ( x, y) ; n + 1 vertical segments, numbered from 0 to n . The i - th segment connects the points ( a_ i, 0) and ( a_ i, y) ; 0 = a_ 0 < a_ 1 < a_ 2 < . . . < a_ n - 1 < a_ n = x . For example, here is a picture of the stadium with x = 10 , y = 5 , n = 3 and a = [ 0, 3, 5, 10] : A lap is a route that goes along the segments, starts and finishes at the same point, and never intersects itself ( the only two points of a lap that coincide are its starting point and ending point) . The length of a lap is a total distance travelled around it. For example, the red route in the picture representing the stadium is a lap of length 24 . The competition will be held in q stages. The i - th stage has length l_ i , and the organizers want to choose a lap for each stage such that the length of the lap is a divisor of l_ i . The organizers don' t want to choose short laps for the stages, so for each stage, they want to find the maximum possible length of a suitable lap. Help the organizers to calculate the maximum possible lengths of the laps for the stages! In other words, for every l_ i , find the maximum possible integer L such that l_ i L = 0 , and there exists a lap of length exactly L . If it is impossible to choose such a lap then print - 1 .",
    "input": "The first line contains three integers n , x and y ( 1 \u2264 n, x, y \u2264 2 \u00b7 10^ 5 , n \u2264 x ) . The second line contains n + 1 integers a_ 0 , a_ 1 , . . . , a_ n ( 0 = a_ 0 < a_ 1 < a_ 2 < . . . < a_ n - 1 < a_ n = x ) . The third line contains one integer q ( 1 \u2264 q \u2264 2 \u00b7 10^ 5 ) \u2014 the number of stages. The fourth line contains q even integers l_ 1 , l_ 2 , . . . , l_ q ( 4 \u2264 l_ i \u2264 10^ 6 ) \u2014 the lengths of the stages.",
    "output": "Print q numbers. The i - th number should be equal to the maximum possible length of a suitable lap for the i - th stage, or - 1 if it is impossible to choose a lap for that stage.",
    "note": "",
    "topics": [
      "bitmasks",
      "fft",
      "math",
      "number theory"
    ],
    "id": "1398G"
  },
  {
    "title": "Power Sequence",
    "url": "https://codeforces.com/problemset/problem/1397/B",
    "history": "Let' s call a list of positive integers a_ 0, a_ 1, . . . , a_ n- 1 a power sequence if there is a positive integer c , so that for every 0 \u2264 i \u2264 n- 1 then a_ i = c^ i . Given a list of n positive integers a_ 0, a_ 1, . . . , a_ n- 1 , you are allowed to: Reorder the list ( i. e. pick a permutation p of { 0, 1, . . . , n - 1} and change a_ i to a_ p_ i ) , then Do the following operation any number of times: pick an index i and change a_ i to a_ i - 1 or a_ i + 1 ( i. e. increment or decrement a_ i by 1 ) with a cost of 1 . Find the minimum cost to transform a_ 0, a_ 1, . . . , a_ n- 1 into a power sequence.",
    "input": "The first line contains an integer n ( 3 \u2264 n \u2264 10^ 5 ) . The second line contains n integers a_ 0, a_ 1, . . . , a_ n- 1 ( 1 \u2264 a_ i \u2264 10^ 9 ) .",
    "output": "Print the minimum cost to transform a_ 0, a_ 1, . . . , a_ n- 1 into a power sequence.",
    "note": "In the first example, we first reorder { 1, 3, 2} into { 1, 2, 3} , then increment a_ 2 to 4 with cost 1 to get a power sequence { 1, 2, 4} .",
    "topics": [
      "brute force",
      "math",
      "number theory",
      "sortings"
    ],
    "id": "1397B"
  },
  {
    "title": "Multiples of Length",
    "url": "https://codeforces.com/problemset/problem/1396/A",
    "history": "You are given an array a of n integers. You want to make all elements of a equal to zero by doing the following operation exactly three times: Select a segment, for each number in this segment we can add a multiple of len to it, where len is the length of this segment ( added integers can be different) . It can be proven that it is always possible to make all elements of a equal to zero.",
    "input": "The first line contains one integer n ( 1 \u2264 n \u2264 100 000 ) : the number of elements of the array. The second line contains n elements of an array a separated by spaces: a_ 1, a_ 2, . . . , a_ n ( - 10^ 9 \u2264 a_ i \u2264 10^ 9 ) .",
    "output": "The output should contain six lines representing three operations. For each operation, print two lines: The first line contains two integers l , r ( 1 \u2264 l \u2264 r \u2264 n ) : the bounds of the selected segment. The second line contains r- l+ 1 integers b_ l, b_ l+ 1, . . . , b_ r ( - 10^ 18\u2264 b_ i \u2264 10^ 18 ) : the numbers to add to a_ l, a_ l+ 1, . . . , a_ r , respectively; b_ i should be divisible by r - l + 1 .",
    "note": "",
    "topics": [
      "constructive algorithms",
      "greedy",
      "number theory"
    ],
    "id": "1396A"
  },
  {
    "title": "Calendar Ambiguity",
    "url": "https://codeforces.com/problemset/problem/1389/E",
    "history": "Berland year consists of m months with d days each. Months are numbered from 1 to m . Berland week consists of w days. The first day of the year is also the first day of the week. Note that the last week of the year might be shorter than w days. A pair ( x, y) such that x < y is ambiguous if day x of month y is the same day of the week as day y of month x . Count the number of ambiguous pairs.",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 1000 ) \u2014 the number of testcases. Each of the next t lines contains three integers m , d and w ( 1 \u2264 m, d, w \u2264 10^ 9 ) \u2014 the number of months in a year, the number of days in a month and the number of days in a week.",
    "output": "Print t integers \u2014 for each testcase output the number of pairs ( x, y) such that x < y and day x of month y is the same day of the week as day y of month x .",
    "note": "Here are the pairs for the first test case:",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "1389E"
  },
  {
    "title": "LCM Problem",
    "url": "https://codeforces.com/problemset/problem/1389/A",
    "history": "Let LCM( x, y) be the minimum positive integer that is divisible by both x and y . For example, LCM( 13, 37) = 481 , LCM( 9, 6) = 18 . You are given two integers l and r . Find two integers x and y such that l \u2264 x < y \u2264 r and l \u2264 LCM( x, y) \u2264 r .",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 10000 ) \u2014 the number of test cases. Each test case is represented by one line containing two integers l and r ( 1 \u2264 l < r \u2264 10^ 9 ) .",
    "output": "For each test case, print two integers: if it is impossible to find integers x and y meeting the constraints in the statement, print two integers equal to - 1 ; otherwise, print the values of x and y ( if there are multiple valid answers, you may print any of them) .",
    "note": "",
    "topics": [
      "constructive algorithms",
      "greedy",
      "math",
      "number theory"
    ],
    "id": "1389A"
  },
  {
    "title": "Captain Flint and Crew Recruitment",
    "url": "https://codeforces.com/problemset/problem/1388/A",
    "history": "Despite his bad reputation, Captain Flint is a friendly person ( at least, friendly to animals) . Now Captain Flint is searching worthy sailors to join his new crew ( solely for peaceful purposes) . A sailor is considered as worthy if he can solve Flint' s task. Recently, out of blue Captain Flint has been interested in math and even defined a new class of integers. Let' s define a positive integer x as nearly prime if it can be represented as p \u00b7 q , where 1 < p < q and p and q are prime numbers. For example, integers 6 and 10 are nearly primes ( since 2 \u00b7 3 = 6 and 2 \u00b7 5 = 10 ) , but integers 1 , 3 , 4 , 16 , 17 or 44 are not. Captain Flint guessed an integer n and asked you: can you represent it as the sum of 4 different positive integers where at least 3 of them should be nearly prime. Uncle Bogdan easily solved the task and joined the crew. Can you do the same?",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 1000 ) \u2014 the number of test cases. Next t lines contain test cases \u2014 one per line. The first and only line of each test case contains the single integer n ( 1 \u2264 n \u2264 2 \u00b7 10^ 5) \u2014 the number Flint guessed.",
    "output": "For each test case print: YES and 4 different positive integers such that at least 3 of them are nearly prime and their sum is equal to n ( if there are multiple answers print any of them) ; NO if there is no way to represent n as the sum of 4 different positive integers where at least 3 of them are nearly prime. You can print each character of YES or NO in any case.",
    "note": "In the first and second test cases, it can be proven that there are no four different positive integers such that at least three of them are nearly prime. In the third test case, n= 31= 2 \u00b7 7 + 2 \u00b7 5 + 2 \u00b7 3 + 1 : integers 14 , 10 , 6 are nearly prime. In the fourth test case, n= 36= 5 + 2 \u00b7 3 + 2 \u00b7 5 + 3 \u00b7 5 : integers 6 , 10 , 15 are nearly prime. In the fifth test case, n= 44= 2 \u00b7 3 + 7 + 2 \u00b7 5 + 3 \u00b7 7 : integers 6 , 10 , 21 are nearly prime. In the sixth test case, n= 100= 2 + 2 \u00b7 5 + 3 \u00b7 11 + 5 \u00b7 11 : integers 10 , 33 , 55 are nearly prime. In the seventh test case, n= 258= 2 \u00b7 5 + 3 \u00b7 7 + 13 \u00b7 17 + 2 \u00b7 3 : integers 10 , 21 , 221 , 6 are nearly prime.",
    "topics": [
      "brute force",
      "greedy",
      "math",
      "number theory"
    ],
    "id": "1388A"
  },
  {
    "title": "Dubious Cyrpto",
    "url": "https://codeforces.com/problemset/problem/1379/B",
    "history": "Pasha loves to send strictly positive integers to his friends. Pasha cares about security, therefore when he wants to send an integer n , he encrypts it in the following way: he picks three integers a , b and c such that l \u2264 a, b, c \u2264 r , and then he computes the encrypted value m = n \u00b7 a + b - c . Unfortunately, an adversary intercepted the values l , r and m . Is it possible to recover the original values of a , b and c from this information? More formally, you are asked to find any values of a , b and c such that a , b and c are integers, l \u2264 a, b, c \u2264 r , there exists a strictly positive integer n , such that n \u00b7 a + b - c = m .",
    "input": "The first line contains the only integer t ( 1 \u2264 t \u2264 20 ) \u2014 the number of test cases. The following t lines describe one test case each. Each test case consists of three integers l , r and m ( 1 \u2264 l \u2264 r \u2264 500 000 , 1 \u2264 m \u2264 10^ 10 ) . The numbers are such that the answer to the problem exists.",
    "output": "For each test case output three integers a , b and c such that, l \u2264 a, b, c \u2264 r and there exists a strictly positive integer n such that n \u00b7 a + b - c = m . It is guaranteed that there is at least one possible solution, and you can output any possible combination if there are multiple solutions.",
    "note": "In the first example n = 3 is possible, then n \u00b7 4 + 6 - 5 = 13 = m . Other possible solutions include: a = 4 , b = 5 , c = 4 ( when n = 3 ) ; a = 5 , b = 4 , c = 6 ( when n = 3 ) ; a = 6 , b = 6 , c = 5 ( when n = 2 ) ; a = 6 , b = 5 , c = 4 ( when n = 2 ) . In the second example the only possible case is n = 1 : in this case n \u00b7 2 + 2 - 3 = 1 = m . Note that, n = 0 is not possible, since in that case n is not a strictly positive integer.",
    "topics": [
      "binary search",
      "brute force",
      "math",
      "number theory"
    ],
    "id": "1379B"
  },
  {
    "title": "Cubic Lattice",
    "url": "https://codeforces.com/problemset/problem/1375/I",
    "history": "A cubic lattice L in 3 - dimensional euclidean space is a set of points defined in the following way: L= { u \u00b7r\u20d7_ 1 + v \u00b7r\u20d7_ 2 + w \u00b7r\u20d7_ 3} _ u, v, w \u2208Z Where r\u20d7_ 1, r\u20d7_ 2, r\u20d7_ 3 \u2208Z^ 3 are some integer vectors such that: r\u20d7_ 1 , r\u20d7_ 2 and r\u20d7_ 3 are pairwise orthogonal: r\u20d7_ 1 \u00b7r\u20d7_ 2 = r\u20d7_ 1 \u00b7r\u20d7_ 3 = r\u20d7_ 2 \u00b7r\u20d7_ 3 = 0 Where a\u20d7\u00b7b\u20d7 is a dot product of vectors a\u20d7 and b\u20d7 . r\u20d7_ 1 , r\u20d7_ 2 and r\u20d7_ 3 all have the same length: | r\u20d7_ 1| = | r\u20d7_ 2| = | r\u20d7_ 3| = r You' re given a set A= { a\u20d7_ 1, a\u20d7_ 2, . . . , a\u20d7_ n} of integer points, i - th point has coordinates a_ i= ( x_ i; y_ i; z_ i) . Let g_ i= ( x_ i, y_ i, z_ i) . It is guaranteed that ( g_ 1, g_ 2, . . . , g_ n) = 1 . You have to find a cubic lattice L such that A \u2282 L and r is the maximum possible.",
    "input": "First line contains single integer n ( 1 \u2264 n \u2264 10^ 4 ) \u2014 the number of points in A . The i - th of the following n lines contains integers x_ i , y_ i , z_ i ( 0 < x_ i^ 2 + y_ i^ 2 + z_ i^ 2 \u2264 10^ 16 ) \u2014 coordinates of the i - th point. It is guaranteed that ( g_ 1, g_ 2, . . . , g_ n) = 1 where g_ i= ( x_ i, y_ i, z_ i) .",
    "output": "In first line output a single integer r^ 2 , the square of maximum possible r . In following 3 lines output coordinates of vectors r\u20d7_ 1 , r\u20d7_ 2 and r\u20d7_ 3 respectively. If there are multiple possible answers, output any.",
    "note": "",
    "topics": [
      "geometry",
      "math",
      "matrices",
      "number theory"
    ],
    "id": "1375I"
  },
  {
    "title": "Omkar and Last Class of Math",
    "url": "https://codeforces.com/problemset/problem/1372/B",
    "history": "In Omkar' s last class of math, he learned about the least common multiple, or LCM . LCM( a, b) is the smallest positive integer x which is divisible by both a and b . Omkar, having a laudably curious mind, immediately thought of a problem involving the LCM operation: given an integer n , find positive integers a and b such that a + b = n and LCM( a, b) is the minimum value possible. Can you help Omkar solve his ludicrously challenging math problem?",
    "input": "Each test contains multiple test cases. The first line contains the number of test cases t ( 1 \u2264 t \u2264 10 ) . Description of the test cases follows. Each test case consists of a single integer n ( 2 \u2264 n \u2264 10^ 9 ) .",
    "output": "For each test case, output two positive integers a and b , such that a + b = n and LCM( a, b) is the minimum possible.",
    "note": "For the first test case, the numbers we can choose are 1, 3 or 2, 2 . LCM( 1, 3) = 3 and LCM( 2, 2) = 2 , so we output 2 2 . For the second test case, the numbers we can choose are 1, 5 , 2, 4 , or 3, 3 . LCM( 1, 5) = 5 , LCM( 2, 4) = 4 , and LCM( 3, 3) = 3 , so we output 3 3 . For the third test case, LCM( 3, 6) = 6 . It can be shown that there are no other pairs of numbers which sum to 9 that have a lower LCM .",
    "topics": [
      "greedy",
      "math",
      "number theory"
    ],
    "id": "1372B"
  },
  {
    "title": "Asterism (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1371/E2",
    "history": "This is the hard version of the problem. The difference between versions is the constraints on n and a_ i . You can make hacks only if all versions of the problem are solved. First, Aoi came up with the following idea for the competitive programming problem: Yuzu is a girl who collecting candies. Originally, she has x candies. There are also n enemies numbered with integers from 1 to n . Enemy i has a_ i candies. Yuzu is going to determine a permutation P . A permutation is an array consisting of n distinct integers from 1 to n in arbitrary order. For example, { 2, 3, 1, 5, 4} is a permutation, but { 1, 2, 2} is not a permutation ( 2 appears twice in the array) and { 1, 3, 4} is also not a permutation ( because n= 3 but there is the number 4 in the array) . After that, she will do n duels with the enemies with the following rules: If Yuzu has equal or more number of candies than enemy P_ i , she wins the duel and gets 1 candy. Otherwise, she loses the duel and gets nothing. The candy which Yuzu gets will be used in the next duels. Yuzu wants to win all duels. How many valid permutations P exist? This problem was easy and wasn' t interesting for Akari, who is a friend of Aoi. And Akari made the following problem from the above idea: Let' s define f( x) as the number of valid permutations for the integer x . You are given n , a and a prime number p \u2264 n . Let' s call a positive integer x good, if the value f( x) is not divisible by p . Find all good integers x . Your task is to solve this problem made by Akari.",
    "input": "The first line contains two integers n , p ( 2 \u2264 p \u2264 n \u2264 10^ 5) . It is guaranteed, that the number p is prime ( it has exactly two divisors 1 and p ) . The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 9) .",
    "output": "In the first line, print the number of good integers x . In the second line, output all good integers x in the ascending order. It is guaranteed that the number of good integers x does not exceed 10^ 5 .",
    "note": "In the first test, p= 2 . If x \u2264 2 , there are no valid permutations for Yuzu. So f( x) = 0 for all x \u2264 2 . The number 0 is divisible by 2 , so all integers x \u2264 2 are not good. If x = 3 , { 1, 2, 3} is the only valid permutation for Yuzu. So f( 3) = 1 , so the number 3 is good. If x = 4 , { 1, 2, 3} , { 1, 3, 2} , { 2, 1, 3} , { 2, 3, 1} are all valid permutations for Yuzu. So f( 4) = 4 , so the number 4 is not good. If x \u2265 5 , all 6 permutations are valid for Yuzu. So f( x) = 6 for all x \u2265 5 , so all integers x \u2265 5 are not good. So, the only good number is 3 . In the third test, for all positive integers x the value f( x) is divisible by p = 3 .",
    "topics": [
      "binary search",
      "combinatorics",
      "dp",
      "math",
      "number theory",
      "sortings"
    ],
    "id": "1371E2"
  },
  {
    "title": "Asterism (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1371/E1",
    "history": "This is the easy version of the problem. The difference between versions is the constraints on n and a_ i . You can make hacks only if all versions of the problem are solved. First, Aoi came up with the following idea for the competitive programming problem: Yuzu is a girl who collecting candies. Originally, she has x candies. There are also n enemies numbered with integers from 1 to n . Enemy i has a_ i candies. Yuzu is going to determine a permutation P . A permutation is an array consisting of n distinct integers from 1 to n in arbitrary order. For example, { 2, 3, 1, 5, 4} is a permutation, but { 1, 2, 2} is not a permutation ( 2 appears twice in the array) and { 1, 3, 4} is also not a permutation ( because n= 3 but there is the number 4 in the array) . After that, she will do n duels with the enemies with the following rules: If Yuzu has equal or more number of candies than enemy P_ i , she wins the duel and gets 1 candy. Otherwise, she loses the duel and gets nothing. The candy which Yuzu gets will be used in the next duels. Yuzu wants to win all duels. How many valid permutations P exist? This problem was easy and wasn' t interesting for Akari, who is a friend of Aoi. And Akari made the following problem from the above idea: Let' s define f( x) as the number of valid permutations for the integer x . You are given n , a and a prime number p \u2264 n . Let' s call a positive integer x good, if the value f( x) is not divisible by p . Find all good integers x . Your task is to solve this problem made by Akari.",
    "input": "The first line contains two integers n , p ( 2 \u2264 p \u2264 n \u2264 2000) . It is guaranteed, that the number p is prime ( it has exactly two divisors 1 and p ) . The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 2000) .",
    "output": "In the first line, print the number of good integers x . In the second line, output all good integers x in the ascending order. It is guaranteed that the number of good integers x does not exceed 10^ 5 .",
    "note": "In the first test, p= 2 . If x \u2264 2 , there are no valid permutations for Yuzu. So f( x) = 0 for all x \u2264 2 . The number 0 is divisible by 2 , so all integers x \u2264 2 are not good. If x = 3 , { 1, 2, 3} is the only valid permutation for Yuzu. So f( 3) = 1 , so the number 3 is good. If x = 4 , { 1, 2, 3} , { 1, 3, 2} , { 2, 1, 3} , { 2, 3, 1} are all valid permutations for Yuzu. So f( 4) = 4 , so the number 4 is not good. If x \u2265 5 , all 6 permutations are valid for Yuzu. So f( x) = 6 for all x \u2265 5 , so all integers x \u2265 5 are not good. So, the only good number is 3 . In the third test, for all positive integers x the value f( x) is divisible by p = 3 .",
    "topics": [
      "binary search",
      "brute force",
      "combinatorics",
      "math",
      "number theory",
      "sortings"
    ],
    "id": "1371E1"
  },
  {
    "title": "Number Game",
    "url": "https://codeforces.com/problemset/problem/1370/C",
    "history": "Ashishgup and FastestFinger play a game. They start with a number n and play in turns. In each turn, a player can make any one of the following moves: Divide n by any of its odd divisors greater than 1 . Subtract 1 from n if n is greater than 1 . Divisors of a number include the number itself. The player who is unable to make a move loses the game. Ashishgup moves first. Determine the winner of the game if both of them play optimally.",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 100 ) \u2014 the number of test cases. The description of the test cases follows. The only line of each test case contains a single integer \u2014 n ( 1 \u2264 n \u2264 10^ 9 ) .",
    "output": "For each test case, print \" Ashishgup\" if he wins, and \" FastestFinger\" otherwise ( without quotes) .",
    "note": "In the first test case, n = 1 , Ashishgup cannot make a move. He loses. In the second test case, n = 2 , Ashishgup subtracts 1 on the first move. Now n = 1 , FastestFinger cannot make a move, so he loses. In the third test case, n = 3 , Ashishgup divides by 3 on the first move. Now n = 1 , FastestFinger cannot make a move, so he loses. In the last test case, n = 12 , Ashishgup divides it by 3 . Now n = 4 , FastestFinger is forced to subtract 1 , and Ashishgup gets 3 , so he wins by dividing it by 3 .",
    "topics": [
      "games",
      "math",
      "number theory"
    ],
    "id": "1370C"
  },
  {
    "title": "GCD Compression",
    "url": "https://codeforces.com/problemset/problem/1370/B",
    "history": "Ashish has an array a of consisting of 2n positive integers. He wants to compress a into an array b of size n- 1 . To do this, he first discards exactly 2 ( any two) elements from a . He then performs the following operation until there are no elements left in a : Remove any two elements from a and append their sum to b . The compressed array b has to have a special property. The greatest common divisor ( gcd ) of all its elements should be greater than 1 . Recall that the gcd of an array of positive integers is the biggest integer that is a divisor of all integers in the array. It can be proven that it is always possible to compress array a into an array b of size n- 1 such that gcd( b_ 1, b_ 2. . . , b_ n- 1) > 1 . Help Ashish find a way to do so.",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 10 ) \u2014 the number of test cases. The description of the test cases follows. The first line of each test case contains a single integer n ( 2 \u2264 n \u2264 1000 ) . The second line of each test case contains 2n integers a_ 1, a_ 2, . . . , a_ 2n ( 1 \u2264 a_ i \u2264 1000 ) \u2014 the elements of the array a .",
    "output": "For each test case, output n- 1 lines \u2014 the operations performed to compress the array a to the array b . The initial discard of the two elements is not an operation, you don' t need to output anything about it. The i - th line should contain two integers, the indices ( 1 \u2014based) of the two elements from the array a that are used in the i - th operation. All 2n- 2 indices should be distinct integers from 1 to 2n . You don' t need to output two initially discarded elements from a . If there are multiple answers, you can find any.",
    "note": "In the first test case, b = { 3+ 6, 4+ 5} = { 9, 9} and gcd( 9, 9) = 9 . In the second test case, b = { 9+ 10} = { 19} and gcd( 19) = 19 . In the third test case, b = { 1+ 2, 3+ 3, 4+ 5, 90+ 3} = { 3, 6, 9, 93} and gcd( 3, 6, 9, 93) = 3 .",
    "topics": [
      "constructive algorithms",
      "math",
      "number theory"
    ],
    "id": "1370B"
  },
  {
    "title": "Maximum GCD",
    "url": "https://codeforces.com/problemset/problem/1370/A",
    "history": "Let' s consider all integers in the range from 1 to n ( inclusive) . Among all pairs of distinct integers in this range, find the maximum possible greatest common divisor of integers in pair. Formally, find the maximum value of gcd( a, b) , where 1 \u2264 a < b \u2264 n . The greatest common divisor, gcd( a, b) , of two positive integers a and b is the biggest integer that is a divisor of both a and b .",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 100 ) \u2014 the number of test cases. The description of the test cases follows. The only line of each test case contains a single integer n ( 2 \u2264 n \u2264 10^ 6 ) .",
    "output": "For each test case, output the maximum value of gcd( a, b) among all 1 \u2264 a < b \u2264 n .",
    "note": "In the first test case, gcd( 1, 2) = gcd( 2, 3) = gcd( 1, 3) = 1 . In the second test case, 2 is the maximum possible value, corresponding to gcd( 2, 4) .",
    "topics": [
      "greedy",
      "implementation",
      "math",
      "number theory"
    ],
    "id": "1370A"
  },
  {
    "title": "Necklace Assembly",
    "url": "https://codeforces.com/problemset/problem/1367/E",
    "history": "The store sells n beads. The color of each bead is described by a lowercase letter of the English alphabet ( \" a\" \u2013\" z\" ) . You want to buy some beads to assemble a necklace from them. A necklace is a set of beads connected in a circle. For example, if the store sells beads \" a\" , \" b\" , \" c\" , \" a\" , \" c\" , \" c\" , then you can assemble the following necklaces ( these are not all possible options) : And the following necklaces cannot be assembled from beads sold in the store: The first necklace cannot be assembled because it has three beads \" a\" ( of the two available) . The second necklace cannot be assembled because it contains a bead \" d\" , which is not sold in the store. We call a necklace k - beautiful if, when it is turned clockwise by k beads, the necklace remains unchanged. For example, here is a sequence of three turns of a necklace. As you can see, this necklace is, for example, 3 - beautiful, 6 - beautiful, 9 - beautiful, and so on, but it is not 1 - beautiful or 2 - beautiful. In particular, a necklace of length 1 is k - beautiful for any integer k . A necklace that consists of beads of the same color is also beautiful for any k . You are given the integers n and k , and also the string s containing n lowercase letters of the English alphabet \u2014 each letter defines a bead in the store. You can buy any subset of beads and connect them in any order. Find the maximum length of a k - beautiful necklace you can assemble.",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 100 ) \u2014 the number of test cases in the test. Then t test cases follow. The first line of each test case contains two integers n and k ( 1 \u2264 n, k \u2264 2000 ) . The second line of each test case contains the string s containing n lowercase English letters \u2014 the beads in the store. It is guaranteed that the sum of n for all test cases does not exceed 2000 .",
    "output": "Output t answers to the test cases. Each answer is a positive integer \u2014 the maximum length of the k - beautiful necklace you can assemble.",
    "note": "The first test case is explained in the statement. In the second test case, a 6 - beautiful necklace can be assembled from all the letters. In the third test case, a 1000 - beautiful necklace can be assembled, for example, from beads \" abzyo\" .",
    "topics": [
      "brute force",
      "dfs and similar",
      "dp",
      "graphs",
      "greedy",
      "number theory"
    ],
    "id": "1367E"
  },
  {
    "title": "Two Divisors",
    "url": "https://codeforces.com/problemset/problem/1366/D",
    "history": "You are given n integers a_ 1, a_ 2, . . . , a_ n . For each a_ i find its two divisors d_ 1 > 1 and d_ 2 > 1 such that ( d_ 1 + d_ 2, a_ i) = 1 ( where ( a, b) is the greatest common divisor of a and b ) or say that there is no such pair.",
    "input": "The first line contains single integer n ( 1 \u2264 n \u2264 5 \u00b7 10^ 5 ) \u2014 the size of the array a . The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 2 \u2264 a_ i \u2264 10^ 7 ) \u2014 the array a .",
    "output": "To speed up the output, print two lines with n integers in each line. The i - th integers in the first and second lines should be corresponding divisors d_ 1 > 1 and d_ 2 > 1 such that ( d_ 1 + d_ 2, a_ i) = 1 or - 1 and - 1 if there is no such pair. If there are multiple answers, print any of them.",
    "note": "Let' s look at a_ 7 = 8 . It has 3 divisors greater than 1 : 2 , 4 , 8 . As you can see, the sum of any pair of divisors is divisible by 2 as well as a_ 7 . There are other valid pairs of d_ 1 and d_ 2 for a_ 10= 24 , like ( 3, 4) or ( 8, 3) . You can print any of them.",
    "topics": [
      "constructive algorithms",
      "math",
      "number theory"
    ],
    "id": "1366D"
  },
  {
    "title": "XXXXX",
    "url": "https://codeforces.com/problemset/problem/1364/A",
    "history": "Ehab loves number theory, but for some reason he hates the number x . Given an array a , find the length of its longest subarray such that the sum of its elements isn' t divisible by x , or determine that such subarray doesn' t exist. An array a is a subarray of an array b if a can be obtained from b by deletion of several ( possibly, zero or all) elements from the beginning and several ( possibly, zero or all) elements from the end.",
    "input": "The first line contains an integer t ( 1 \u2264 t \u2264 5) \u2014 the number of test cases you need to solve. The description of the test cases follows. The first line of each test case contains 2 integers n and x ( 1 \u2264 n \u2264 10^ 5 , 1 \u2264 x \u2264 10^ 4 ) \u2014 the number of elements in the array a and the number that Ehab hates. The second line contains n space- separated integers a_ 1 , a_ 2 , . . . , a_ n ( 0 \u2264 a_ i \u2264 10^ 4 ) \u2014 the elements of the array a .",
    "output": "For each testcase, print the length of the longest subarray whose sum isn' t divisible by x . If there' s no such subarray, print - 1 .",
    "note": "In the first test case, the subarray [ 2, 3] has sum of elements 5 , which isn' t divisible by 3 . In the second test case, the sum of elements of the whole array is 6 , which isn' t divisible by 4 . In the third test case, all subarrays have an even sum, so the answer is - 1 .",
    "topics": [
      "brute force",
      "data structures",
      "number theory",
      "two pointers"
    ],
    "id": "1364A"
  },
  {
    "title": "Buying Shovels",
    "url": "https://codeforces.com/problemset/problem/1360/D",
    "history": "Polycarp wants to buy exactly n shovels. The shop sells packages with shovels. The store has k types of packages: the package of the i - th type consists of exactly i shovels ( 1 \u2264 i \u2264 k ) . The store has an infinite number of packages of each type. Polycarp wants to choose one type of packages and then buy several ( one or more) packages of this type. What is the smallest number of packages Polycarp will have to buy to get exactly n shovels? For example, if n= 8 and k= 7 , then Polycarp will buy 2 packages of 4 shovels. Help Polycarp find the minimum number of packages that he needs to buy, given that he: will buy exactly n shovels in total; the sizes of all packages he will buy are all the same and the number of shovels in each package is an integer from 1 to k , inclusive.",
    "input": "The first line contains an integer t ( 1 \u2264 t \u2264 100 ) \u2014 the number of test cases in the input. Then, t test cases follow, one per line. Each test case consists of two positive integers n ( 1 \u2264 n \u2264 10^ 9 ) and k ( 1 \u2264 k \u2264 10^ 9 ) \u2014 the number of shovels and the number of types of packages.",
    "output": "Print t answers to the test cases. Each answer is a positive integer \u2014 the minimum number of packages.",
    "note": "The answer to the first test case was explained in the statement. In the second test case, there is only one way to buy 8 shovels \u2014 8 packages of one shovel. In the third test case, you need to buy a 1 package of 6 shovels.",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "1360D"
  },
  {
    "title": "Modular Stability",
    "url": "https://codeforces.com/problemset/problem/1359/E",
    "history": "We define x y as the remainder of division of x by y ( % operator in C+ + or Java, mod operator in Pascal) . Let' s call an array of positive integers [ a_ 1, a_ 2, . . . , a_ k] stable if for every permutation p of integers from 1 to k , and for every non- negative integer x , the following condition is met: ( ( ( x a_ 1) a_ 2) . . . a_ k - 1) a_ k = ( ( ( x a_ p_ 1) a_ p_ 2) . . . a_ p_ k - 1) a_ p_ k That is, for each non- negative integer x , the value of ( ( ( x a_ 1) a_ 2) . . . a_ k - 1) a_ k does not change if we reorder the elements of the array a . For two given integers n and k , calculate the number of stable arrays [ a_ 1, a_ 2, . . . , a_ k] such that 1 \u2264 a_ 1 < a_ 2 < . . . < a_ k \u2264 n .",
    "input": "The only line contains two integers n and k ( 1 \u2264 n, k \u2264 5 \u00b7 10^ 5 ) .",
    "output": "Print one integer \u2014 the number of stable arrays [ a_ 1, a_ 2, . . . , a_ k] such that 1 \u2264 a_ 1 < a_ 2 < . . . < a_ k \u2264 n . Since the answer may be large, print it modulo 998244353 .",
    "note": "",
    "topics": [
      "combinatorics",
      "math",
      "number theory"
    ],
    "id": "1359E"
  },
  {
    "title": "Guess Divisors Count",
    "url": "https://codeforces.com/problemset/problem/1355/F",
    "history": "This is an interactive problem. We have hidden an integer 1 \u2264 X \u2264 10^ 9 . You don' t have to guess this number. You have to find the number of divisors of this number, and you don' t even have to find the exact number: your answer will be considered correct if its absolute error is not greater than 7 or its relative error is not greater than 0. 5 . More formally, let your answer be ans and the number of divisors of X be d , then your answer will be considered correct if at least one of the two following conditions is true: | ans - d | \u2264 7 ; 1/ 2\u2264ans/ d\u2264 2 . You can make at most 22 queries. One query consists of one integer 1 \u2264 Q \u2264 10^ 18 . In response, you will get gcd( X, Q) \u2014 the greatest common divisor of X and Q . The number X is fixed before all queries. In other words, interactor is not adaptive. Let' s call the process of guessing the number of divisors of number X a game. In one test you will have to play T independent games, that is, guess the number of divisors T times for T independent values of X . InteractionTo make a query print a line \" ? Q\" ( 1 \u2264 Q \u2264 10^ 18 ) . After that read one integer gcd( X, Q) . You can make no more than 22 such queries during one game. If you are confident that you have figured out the number of divisors of X with enough precision, you can print your answer in \" ! ans\" format. ans have to be an integer. If this was the last game, you have to terminate the program, otherwise you have to start the next game immediately. Note that the interactor doesn' t print anything in response to you printing answer. After printing a query do not forget to output end of line and flush the output. To do this, use: fflush( stdout) or cout. flush( ) in C+ + ; System. out. flush( ) in Java; flush( output) in Pascal; stdout. flush( ) in Python; see documentation for other languages. HacksTo hack, use the following format: The first line contains one integer T ( 1 \u2264 T \u2264 100 ) \u2014 the number of games. Each of the next T lines contains one integer X ( 1 \u2264 X \u2264 10^ 9 ) \u2014 the hidden number. So the example has the form 29982443534194304",
    "input": "The first line of input contains one integer T ( 1 \u2264 T \u2264 100 ) \u2014 the number of games.",
    "output": "",
    "note": "Why the limitation for number of queries is 22 exactly? Maybe the problem author is a Taylor Swift fan. Let' s look at the example. In the first game X = 998 244 353 is hidden. Would be hard to guess this, right? This number is prime, so the number of its divisors is 2. The solution has made several random queries, and all the responses turned out to be 1 ( strange things, not even one of three random numbers is divisible by 998 244 353 ) . It' s fare to assume that the hidden number doesn' t have many divisors, so the solution has answered 5. Why not. This answer will be considered correct since | 5 - 2 | = 3 \u2264 7 . In the second game X = 4 194 304 = 2^ 22 is hidden, it has 23 divisors. The solution has made queries 1024 = 2^ 10 , 1 048 576 = 2^ 20 , 1 073 741 824 = 2^ 30 and got responses 1024 = 2^ 10 , 1 048 576 = 2^ 20 , 4 194 304 = 2^ 22 , respectively. Then the solution got completely confused and answered the answer to The Ultimate Question of Life, the Universe, and Everything. This answer will be considered correct since 1/ 2\u226442/ 23\u2264 2 .",
    "topics": [
      "constructive algorithms",
      "interactive",
      "number theory"
    ],
    "id": "1355F"
  },
  {
    "title": "Orac and Models",
    "url": "https://codeforces.com/problemset/problem/1350/B",
    "history": "There are n models in the shop numbered from 1 to n , with sizes s_ 1, s_ 2, . . . , s_ n . Orac will buy some of the models and will arrange them in the order of increasing numbers ( i. e. indices, but not sizes) . Orac thinks that the obtained arrangement is beatiful, if for any two adjacent models with indices i_ j and i_ j+ 1 ( note that i_ j < i_ j+ 1 , because Orac arranged them properly) , i_ j+ 1 is divisible by i_ j and s_ i_ j < s_ i_ j+ 1 . For example, for 6 models with sizes { 3, 6, 7, 7, 7, 7} , he can buy models with indices 1 , 2 , and 6 , and the obtained arrangement will be beautiful. Also, note that the arrangement with exactly one model is also considered beautiful. Orac wants to know the maximum number of models that he can buy, and he may ask you these queries many times.",
    "input": "The first line contains one integer t ( 1 \u2264 t\u2264 100) : the number of queries. Each query contains two lines. The first line contains one integer n ( 1\u2264 n\u2264 100 000) : the number of models in the shop, and the second line contains n integers s_ 1, . . . , s_ n ( 1\u2264 s_ i\u2264 10^ 9) : the sizes of models. It is guaranteed that the total sum of n is at most 100 000 .",
    "output": "Print t lines, the i - th of them should contain the maximum number of models that Orac can buy for the i - th query.",
    "note": "In the first query, for example, Orac can buy models with indices 2 and 4 , the arrangement will be beautiful because 4 is divisible by 2 and 6 is more than 3 . By enumerating, we can easily find that there are no beautiful arrangements with more than two models. In the second query, Orac can buy models with indices 1 , 3 , and 6 . By enumerating, we can easily find that there are no beautiful arrangements with more than three models. In the third query, there are no beautiful arrangements with more than one model.",
    "topics": [
      "dp",
      "math",
      "number theory"
    ],
    "id": "1350B"
  },
  {
    "title": "Orac and LCM",
    "url": "https://codeforces.com/problemset/problem/1349/A",
    "history": "For the multiset of positive integers s= { s_ 1, s_ 2, . . . , s_ k} , define the Greatest Common Divisor ( GCD) and Least Common Multiple ( LCM) of s as follow: ( s) is the maximum positive integer x , such that all integers in s are divisible on x . lcm( s) is the minimum positive integer x , that divisible on all integers from s . For example, ( { 8, 12} ) = 4, ( { 12, 18, 6} ) = 6 and lcm( { 4, 6} ) = 12 . Note that for any positive integer x , ( { x} ) = lcm( { x} ) = x . Orac has a sequence a with length n . He come up with the multiset t= { lcm( { a_ i, a_ j} ) | i< j} , and asked you to find the value of ( t) for him. In other words, you need to calculate the GCD of LCMs of all pairs of elements in the given sequence.",
    "input": "The first line contains one integer n ( 2\u2264 n\u2264 100 000) . The second line contains n integers, a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 200 000 ) .",
    "output": "Print one integer: ( { lcm( { a_ i, a_ j} ) | i< j} ) .",
    "note": "For the first example, t= { lcm( { 1, 1} ) } = { 1} , so ( t) = 1 . For the second example, t= { 120, 40, 80, 120, 240, 80} , and it' s not hard to see that ( t) = 40 .",
    "topics": [
      "data structures",
      "math",
      "number theory"
    ],
    "id": "1349A"
  },
  {
    "title": "Two IP Cameras",
    "url": "https://codeforces.com/problemset/problem/1346/G",
    "history": "You have two IP cameras of the same model. Each camera can take photos starting from some moment of time with a fixed period. You can freely choose the starting moment but you can choose the period only as one of k values p_ 1, p_ 2, . . . , p_ k which are chosen by the camera' s manufacturer. You have n moments of interest x_ 1, x_ 2, . . . , x_ n . You' d like to configure both cameras in such a way that at least one camera will take a photo in each of these moments. Configuring the camera means setting the moment when it takes the first photo and the gap between two consecutive photos ( which should be one of the values p_ 1, p_ 2, . . . , p_ k ) . It' s not a problem for you that cameras can take photos at other moments of time \u2014 you only care about moments of interest.",
    "input": "The first line contains two integers k and n ( 1 \u2264 k \u2264 10^ 5 ; 2 \u2264 n \u2264 10^ 5 ) \u2014 the number of periods to choose and the number of moments of interest. The second line contains k integers p_ 1, p_ 2, . . . , p_ k ( 1 \u2264 p_ 1 < p_ 2 < . . . < p_ k \u2264 10^ 6 ) \u2014 the periods to choose in the ascending order. The third line contains n integers x_ 1, x_ 2, . . . , x_ n ( 1 \u2264 x_ 1 < x_ 2 < . . . < x_ n \u2264 10^ 6 ) \u2014 the moments of interest in the ascending order.",
    "output": "Print YES ( case insensitive) in the first line if there is a way to configure cameras. In the second line, print two integers s_ 1 and cp_ 1 ( 1 \u2264 s_ 1 \u2264 10^ 6 ; 1 \u2264 cp_ 1 \u2264 10^ 6 ; cp_ 1 \u2208{ p_ 1, . . . , p_ k} ) \u2014 the starting moment and the period for the first camera. The period should be one of the given periods. In the third line, print two integers s_ 2 and cp_ 2 ( 1 \u2264 s_ 2 \u2264 10^ 6 ; 1 \u2264 cp_ 2 \u2264 10^ 6 ; cp_ 2 \u2208{ p_ 1, . . . , p_ k} ) \u2014 the starting moment and the period for the second camera. The period should be one of the given periods. If there is no way to configure cameras, print NO ( case insensitive) . If there are multiple ways, you may print any of them.",
    "note": "",
    "topics": [
      "*special",
      "math",
      "number theory"
    ],
    "id": "1346G"
  },
  {
    "title": "Hilbert's Hotel",
    "url": "https://codeforces.com/problemset/problem/1344/A",
    "history": "Hilbert' s Hotel is a very unusual hotel since the number of rooms is infinite! In fact, there is exactly one room for every integer, including zero and negative integers. Even stranger, the hotel is currently at full capacity, meaning there is exactly one guest in every room. The hotel' s manager, David Hilbert himself, decides he wants to shuffle the guests around because he thinks this will create a vacancy ( a room without a guest) . For any integer k and positive integer n , let k n denote the remainder when k is divided by n . More formally, r= k n is the smallest non- negative integer such that k- r is divisible by n . It always holds that 0\u2264 k n\u2264 n- 1 . For example, 100 12= 4 and ( - 1337) 3= 1 . Then the shuffling works as follows. There is an array of n integers a_ 0, a_ 1, . . . , a_ n- 1 . Then for each integer k , the guest in room k is moved to room number k+ a_ k n . After this shuffling process, determine if there is still exactly one guest assigned to each room. That is, there are no vacancies or rooms with multiple guests.",
    "input": "Each test consists of multiple test cases. The first line contains a single integer t ( 1\u2264 t\u2264 10^ 4 ) \u2014 the number of test cases. Next 2t lines contain descriptions of test cases. The first line of each test case contains a single integer n ( 1\u2264 n\u2264 2\u00b7 10^ 5 ) \u2014 the length of the array. The second line of each test case contains n integers a_ 0, a_ 1, . . . , a_ n- 1 ( - 10^ 9\u2264 a_ i\u2264 10^ 9 ) . It is guaranteed that the sum of n over all test cases does not exceed 2\u00b7 10^ 5 .",
    "output": "For each test case, output a single line containing \" YES\" if there is exactly one guest assigned to each room after the shuffling process, or \" NO\" otherwise. You can print each letter in any case ( upper or lower) .",
    "note": "In the first test case, every guest is shifted by 14 rooms, so the assignment is still unique. In the second test case, even guests move to the right by 1 room, and odd guests move to the left by 1 room. We can show that the assignment is still unique. In the third test case, every fourth guest moves to the right by 1 room, and the other guests move to the right by 5 rooms. We can show that the assignment is still unique. In the fourth test case, guests 0 and 1 are both assigned to room 3 . In the fifth test case, guests 1 and 2 are both assigned to room 2 .",
    "topics": [
      "math",
      "number theory",
      "sortings"
    ],
    "id": "1344A"
  },
  {
    "title": "Yet Another Counting Problem",
    "url": "https://codeforces.com/problemset/problem/1342/C",
    "history": "You are given two integers a and b , and q queries. The i - th query consists of two numbers l_ i and r_ i , and the answer to it is the number of integers x such that l_ i \u2264 x \u2264 r_ i , and ( ( x a) b) ( ( x b) a) . Calculate the answer for each query. Recall that y z is the remainder of the division of y by z . For example, 5 3 = 2 , 7 8 = 7 , 9 4 = 1 , 9 9 = 0 .",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 100 ) \u2014 the number of test cases. Then the test cases follow. The first line of each test case contains three integers a , b and q ( 1 \u2264 a, b \u2264 200 ; 1 \u2264 q \u2264 500 ) . Then q lines follow, each containing two integers l_ i and r_ i ( 1 \u2264 l_ i \u2264 r_ i \u2264 10^ 18 ) for the corresponding query.",
    "output": "For each test case, print q integers \u2014 the answers to the queries of this test case in the order they appear.",
    "note": "",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "1342C"
  },
  {
    "title": "Divisor Paths",
    "url": "https://codeforces.com/problemset/problem/1334/E",
    "history": "You are given a positive integer D . Let' s build the following graph from it: each vertex is a divisor of D ( not necessarily prime, 1 and D itself are also included) ; two vertices x and y ( x > y ) have an undirected edge between them if x is divisible by y and x/ y is a prime; the weight of an edge is the number of divisors of x that are not divisors of y . For example, here is the graph for D= 12 : Edge ( 4, 12) has weight 3 because 12 has divisors [ 1, 2, 3, 4, 6, 12] and 4 has divisors [ 1, 2, 4] . Thus, there are 3 divisors of 12 that are not divisors of 4 \u2014 [ 3, 6, 12] . There is no edge between 3 and 2 because 3 is not divisible by 2 . There is no edge between 12 and 3 because 12/ 3= 4 is not a prime. Let the length of the path between some vertices v and u in the graph be the total weight of edges on it. For example, path [ ( 1, 2) , ( 2, 6) , ( 6, 12) , ( 12, 4) , ( 4, 2) , ( 2, 6) ] has length 1+ 2+ 2+ 3+ 1+ 2= 11 . The empty path has length 0 . So the shortest path between two vertices v and u is the path that has the minimal possible length. Two paths a and b are different if there is either a different number of edges in them or there is a position i such that a_ i and b_ i are different edges. You are given q queries of the following form: v u \u2014 calculate the number of the shortest paths between vertices v and u . The answer for each query might be large so print it modulo 998244353 .",
    "input": "The first line contains a single integer D ( 1 \u2264 D \u2264 10^ 15 ) \u2014 the number the graph is built from. The second line contains a single integer q ( 1 \u2264 q \u2264 3 \u00b7 10^ 5 ) \u2014 the number of queries. Each of the next q lines contains two integers v and u ( 1 \u2264 v, u \u2264 D ) . It is guaranteed that D is divisible by both v and u ( both v and u are divisors of D ) .",
    "output": "Print q integers \u2014 for each query output the number of the shortest paths between the two given vertices modulo 998244353 .",
    "note": "In the first example: The first query is only the empty path \u2014 length 0 ; The second query are paths [ ( 12, 4) , ( 4, 2) , ( 2, 1) ] ( length 3+ 1+ 1= 5 ) , [ ( 12, 6) , ( 6, 2) , ( 2, 1) ] ( length 2+ 2+ 1= 5 ) and [ ( 12, 6) , ( 6, 3) , ( 3, 1) ] ( length 2+ 2+ 1= 5 ) . The third query is only the path [ ( 3, 1) , ( 1, 2) , ( 2, 4) ] ( length 1+ 1+ 1= 3 ) .",
    "topics": [
      "combinatorics",
      "graphs",
      "greedy",
      "math",
      "number theory"
    ],
    "id": "1334E"
  },
  {
    "title": "Kate and imperfection",
    "url": "https://codeforces.com/problemset/problem/1333/F",
    "history": "Kate has a set S of n integers { 1, . . . , n} . She thinks that imperfection of a subset M \u2286 S is equal to the maximum of gcd( a, b) over all pairs ( a, b) such that both a and b are in M and a = \u0338 b . Kate is a very neat girl and for each k \u2208{ 2, . . . , n} she wants to find a subset that has the smallest imperfection among all subsets in S of size k . There can be more than one subset with the smallest imperfection and the same size, but you don' t need to worry about it. Kate wants to find all the subsets herself, but she needs your help to find the smallest possible imperfection for each size k , will name it I_ k . Please, help Kate to find I_ 2 , I_ 3 , . . . , I_ n .",
    "input": "The first and only line in the input consists of only one integer n ( 2\u2264 n \u2264 5 \u00b7 10^ 5 ) \u2014 the size of the given set S .",
    "output": "Output contains only one line that includes n - 1 integers: I_ 2 , I_ 3 , . . . , I_ n .",
    "note": "First sample: answer is 1, because gcd( 1, 2) = 1 . Second sample: there are subsets of S with sizes 2, 3 with imperfection equal to 1. For example, { 2, 3} and { 1, 2, 3} .",
    "topics": [
      "greedy",
      "implementation",
      "math",
      "number theory",
      "sortings",
      "two pointers"
    ],
    "id": "1333F"
  },
  {
    "title": "Composite Coloring",
    "url": "https://codeforces.com/problemset/problem/1332/B",
    "history": "A positive integer is called composite if it can be represented as a product of two positive integers, both greater than 1 . For example, the following numbers are composite: 6 , 4 , 120 , 27 . The following numbers aren' t: 1 , 2 , 3 , 17 , 97 . Alice is given a sequence of n composite numbers a_ 1, a_ 2, . . . , a_ n . She wants to choose an integer m \u2264 11 and color each element one of m colors from 1 to m so that: for each color from 1 to m there is at least one element of this color; each element is colored and colored exactly one color; the greatest common divisor of any two elements that are colored the same color is greater than 1 , i. e. ( a_ i, a_ j) > 1 for each pair i, j if these elements are colored the same color. Note that equal elements can be colored different colors \u2014 you just have to choose one of m colors for each of the indices from 1 to n . Alice showed already that if all a_ i \u2264 1000 then she can always solve the task by choosing some m \u2264 11 . Help Alice to find the required coloring. Note that you don' t have to minimize or maximize the number of colors, you just have to find the solution with some m from 1 to 11 .",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 1000 ) \u2014 the number of test cases. Then the descriptions of the test cases follow. The first line of the test case contains a single integer n ( 1 \u2264 n \u2264 1000 ) \u2014 the amount of numbers in a sequence a . The second line of the test case contains n composite integers a_ 1, a_ 2, . . . , a_ n ( 4 \u2264 a_ i \u2264 1000 ) . It is guaranteed that the sum of n over all test cases doesn' t exceed 10^ 4 .",
    "output": "For each test case print 2 lines. The first line should contain a single integer m ( 1 \u2264 m \u2264 11 ) \u2014 the number of used colors. Consider colors to be numbered from 1 to m . The second line should contain any coloring that satisfies the above conditions. Print n integers c_ 1, c_ 2, . . . , c_ n ( 1 \u2264 c_ i \u2264 m ) , where c_ i is the color of the i - th element. If there are multiple solutions then you can print any of them. Note that you don' t have to minimize or maximize the number of colors, you just have to find the solution with some m from 1 to 11 . Remember that each color from 1 to m should be used at least once. Any two elements of the same color should not be coprime ( i. e. their GCD should be greater than 1 ) .",
    "note": "In the first test case, ( 6, 10) = 2 , ( 6, 15) = 3 and ( 10, 15) = 5 . Therefore, it' s valid to color all elements the same color. Note that there are other colorings which satisfy Alice' s requirement in this test case. In the second test case there is only one element of each color, so the coloring definitely satisfies Alice' s requirement.",
    "topics": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "math",
      "number theory"
    ],
    "id": "1332B"
  },
  {
    "title": "Limericks",
    "url": "https://codeforces.com/problemset/problem/1331/B",
    "history": "There was once young lass called Mary, Whose jokes were occasionally scary. On this April' s Fool Fixed limerick rules Allowed her to trip the unwary. Can she fill all the linesTo work at all times? On juggling the wordsRight around two- thirdsShe nearly ran out of rhymes.",
    "input": "The input contains a single integer a ( 4 \u2264 a \u2264 998 ) . Not every integer in the range is a valid input for the problem; you are guaranteed that the input will be a valid integer.",
    "output": "Output a single number.",
    "note": "",
    "topics": [
      "*special",
      "math",
      "number theory"
    ],
    "id": "1331B"
  },
  {
    "title": "Infinite Path",
    "url": "https://codeforces.com/problemset/problem/1327/D",
    "history": "You are given a colored permutation p_ 1, p_ 2, . . . , p_ n . The i - th element of the permutation has color c_ i . Let' s define an infinite path as infinite sequence i, p[ i] , p[ p[ i] ] , p[ p[ p[ i] ] ] . . . where all elements have same color ( c[ i] = c[ p[ i] ] = c[ p[ p[ i] ] ] = . . . ) . We can also define a multiplication of permutations a and b as permutation c = a \u00d7 b where c[ i] = b[ a[ i] ] . Moreover, we can define a power k of permutation p as p^ k= p \u00d7 p \u00d7. . . \u00d7 p_ k times . Find the minimum k > 0 such that p^ k has at least one infinite path ( i. e. there is a position i in p^ k such that the sequence starting from i is an infinite path) . It can be proved that the answer always exists.",
    "input": "The first line contains single integer T ( 1 \u2264 T \u2264 10^ 4 ) \u2014 the number of test cases. Next 3T lines contain test cases \u2014 one per three lines. The first line contains single integer n ( 1 \u2264 n \u2264 2 \u00b7 10^ 5 ) \u2014 the size of the permutation. The second line contains n integers p_ 1, p_ 2, . . . , p_ n ( 1 \u2264 p_ i \u2264 n , p_ i = \u0338 p_ j for i = \u0338 j ) \u2014 the permutation p . The third line contains n integers c_ 1, c_ 2, . . . , c_ n ( 1 \u2264 c_ i \u2264 n ) \u2014 the colors of elements of the permutation. It is guaranteed that the total sum of n doesn' t exceed 2 \u00b7 10^ 5 .",
    "output": "Print T integers \u2014 one per test case. For each test case print minimum k > 0 such that p^ k has at least one infinite path.",
    "note": "In the first test case, p^ 1 = p = [ 1, 3, 4, 2] and the sequence starting from 1 : 1, p[ 1] = 1, . . . is an infinite path. In the second test case, p^ 5 = [ 1, 2, 3, 4, 5] and it obviously contains several infinite paths. In the third test case, p^ 2 = [ 3, 6, 1, 8, 7, 2, 5, 4] and the sequence starting from 4 : 4, p^ 2[ 4] = 8, p^ 2[ 8] = 4, . . . is an infinite path since c_ 4 = c_ 8 = 4 .",
    "topics": [
      "brute force",
      "dfs and similar",
      "graphs",
      "math",
      "number theory"
    ],
    "id": "1327D"
  },
  {
    "title": "Bad Ugly Numbers",
    "url": "https://codeforces.com/problemset/problem/1326/A",
    "history": "You are given a integer n ( n > 0 ) . Find any integer s which satisfies these conditions, or report that there are no such numbers: In the decimal representation of s : s > 0 , s consists of n digits, no digit in s equals 0 , s is not divisible by any of it' s digits.",
    "input": "The input consists of multiple test cases. The first line of the input contains a single integer t ( 1 \u2264 t \u2264 400 ) , the number of test cases. The next t lines each describe a test case. Each test case contains one positive integer n ( 1 \u2264 n \u2264 10^ 5 ) . It is guaranteed that the sum of n for all test cases does not exceed 10^ 5 .",
    "output": "For each test case, print an integer s which satisfies the conditions described above, or \" - 1\" ( without quotes) , if no such number exists. If there are multiple possible solutions for s , print any solution.",
    "note": "In the first test case, there are no possible solutions for s consisting of one digit, because any such solution is divisible by itself. For the second test case, the possible solutions are: 23 , 27 , 29 , 34 , 37 , 38 , 43 , 46 , 47 , 49 , 53 , 54 , 56 , 57 , 58 , 59 , 67 , 68 , 69 , 73 , 74 , 76 , 78 , 79 , 83 , 86 , 87 , 89 , 94 , 97 , and 98 . For the third test case, one possible solution is 239 because 239 is not divisible by 2 , 3 or 9 and has three digits ( none of which equals zero) .",
    "topics": [
      "constructive algorithms",
      "number theory"
    ],
    "id": "1326A"
  },
  {
    "title": "Ehab's REAL Number Theory Problem",
    "url": "https://codeforces.com/problemset/problem/1325/E",
    "history": "You are given an array a of length n that has a special condition: every element in this array has at most 7 divisors. Find the length of the shortest non- empty subsequence of this array product of whose elements is a perfect square. A sequence a is a subsequence of an array b if a can be obtained from b by deletion of several ( possibly, zero or all) elements.",
    "input": "The first line contains an integer n ( 1 \u2264 n \u2264 10^ 5 ) \u2014 the length of a . The second line contains n integers a_ 1 , a_ 2 , . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 6 ) \u2014 the elements of the array a .",
    "output": "Output the length of the shortest non- empty subsequence of a product of whose elements is a perfect square. If there are several shortest subsequences, you can find any of them. If there' s no such subsequence, print \" - 1\" .",
    "note": "In the first sample, you can choose a subsequence [ 1] . In the second sample, you can choose a subsequence [ 6, 6] . In the third sample, you can choose a subsequence [ 6, 15, 10] . In the fourth sample, there is no such subsequence.",
    "topics": [
      "brute force",
      "dfs and similar",
      "graphs",
      "number theory",
      "shortest paths"
    ],
    "id": "1325E"
  },
  {
    "title": "Ehab the Xorcist",
    "url": "https://codeforces.com/problemset/problem/1325/D",
    "history": "Given 2 integers u and v , find the shortest array such that bitwise- xor of its elements is u , and the sum of its elements is v .",
    "input": "The only line contains 2 integers u and v ( 0 \u2264 u, v \u2264 10^ 18) .",
    "output": "If there' s no array that satisfies the condition, print \" - 1\" . Otherwise: The first line should contain one integer, n , representing the length of the desired array. The next line should contain n positive integers, the array itself. If there are multiple possible answers, print any.",
    "note": "In the first sample, 3\u2295 1 = 2 and 3 + 1 = 4 . There is no valid array of smaller length. Notice that in the fourth sample the array is empty.",
    "topics": [
      "bitmasks",
      "constructive algorithms",
      "greedy",
      "number theory"
    ],
    "id": "1325D"
  },
  {
    "title": "EhAb AnD gCd",
    "url": "https://codeforces.com/problemset/problem/1325/A",
    "history": "You are given a positive integer x . Find any such 2 positive integers a and b such that GCD( a, b) + LCM( a, b) = x . As a reminder, GCD( a, b) is the greatest integer that divides both a and b . Similarly, LCM( a, b) is the smallest integer such that both a and b divide it. It' s guaranteed that the solution always exists. If there are several such pairs ( a, b) , you can output any of them.",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 100) \u2014 the number of testcases. Each testcase consists of one line containing a single integer, x ( 2 \u2264 x \u2264 10^ 9) .",
    "output": "For each testcase, output a pair of positive integers a and b ( 1 \u2264 a, b \u2264 10^ 9) such that GCD( a, b) + LCM( a, b) = x . It' s guaranteed that the solution always exists. If there are several such pairs ( a, b) , you can output any of them.",
    "note": "In the first testcase of the sample, GCD( 1, 1) + LCM( 1, 1) = 1+ 1= 2 . In the second testcase of the sample, GCD( 6, 4) + LCM( 6, 4) = 2+ 12= 14 .",
    "topics": [
      "constructive algorithms",
      "greedy",
      "number theory"
    ],
    "id": "1325A"
  },
  {
    "title": "Yet Another Tetris Problem",
    "url": "https://codeforces.com/problemset/problem/1324/A",
    "history": "You are given some Tetris field consisting of n columns. The initial height of the i - th column of the field is a_ i blocks. On top of these columns you can place only figures of size 2 \u00d7 1 ( i. e. the height of this figure is 2 blocks and the width of this figure is 1 block) . Note that you cannot rotate these figures. Your task is to say if you can clear the whole field by placing such figures. More formally, the problem can be described like this: The following process occurs while at least one a_ i is greater than 0 : You place one figure 2 \u00d7 1 ( choose some i from 1 to n and replace a_ i with a_ i + 2 ) ; then, while all a_ i are greater than zero, replace each a_ i with a_ i - 1 . And your task is to determine if it is possible to clear the whole field ( i. e. finish the described process) , choosing the places for new figures properly. You have to answer t independent test cases.",
    "input": "The first line of the input contains one integer t ( 1 \u2264 t \u2264 100 ) \u2014 the number of test cases. The next 2t lines describe test cases. The first line of the test case contains one integer n ( 1 \u2264 n \u2264 100 ) \u2014 the number of columns in the Tetris field. The second line of the test case contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 100 ) , where a_ i is the initial height of the i - th column of the Tetris field.",
    "output": "For each test case, print the answer \u2014 \" YES\" ( without quotes) if you can clear the whole Tetris field and \" NO\" otherwise.",
    "note": "The first test case of the example field is shown below: Gray lines are bounds of the Tetris field. Note that the field has no upper bound. One of the correct answers is to first place the figure in the first column. Then after the second step of the process, the field becomes [ 2, 0, 2] . Then place the figure in the second column and after the second step of the process, the field becomes [ 0, 0, 0] . And the second test case of the example field is shown below: It can be shown that you cannot do anything to end the process. In the third test case of the example, you first place the figure in the second column after the second step of the process, the field becomes [ 0, 2] . Then place the figure in the first column and after the second step of the process, the field becomes [ 0, 0] . In the fourth test case of the example, place the figure in the first column, then the field becomes [ 102] after the first step of the process, and then the field becomes [ 0] after the second step of the process.",
    "topics": [
      "implementation",
      "number theory"
    ],
    "id": "1324A"
  },
  {
    "title": "Instant Noodles",
    "url": "https://codeforces.com/problemset/problem/1322/C",
    "history": "Wu got hungry after an intense training session, and came to a nearby store to buy his favourite instant noodles. After Wu paid for his purchase, the cashier gave him an interesting task. You are given a bipartite graph with positive integers in all vertices of the right half. For a subset S of vertices of the left half we define N( S) as the set of all vertices of the right half adjacent to at least one vertex in S , and f( S) as the sum of all numbers in vertices of N( S) . Find the greatest common divisor of f( S) for all possible non- empty subsets S ( assume that GCD of empty set is 0 ) . Wu is too tired after his training to solve this problem. Help him!",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 500 000 ) \u2014 the number of test cases in the given test set. Test case descriptions follow. The first line of each case description contains two integers n and m ( 1 \u2264 n, m \u2264 500 000 ) \u2014 the number of vertices in either half of the graph, and the number of edges respectively. The second line contains n integers c_ i ( 1 \u2264 c_ i \u2264 10^ 12 ) . The i - th number describes the integer in the vertex i of the right half of the graph. Each of the following m lines contains a pair of integers u_ i and v_ i ( 1 \u2264 u_ i, v_ i \u2264 n ) , describing an edge between the vertex u_ i of the left half and the vertex v_ i of the right half. It is guaranteed that the graph does not contain multiple edges. Test case descriptions are separated with empty lines. The total value of n across all test cases does not exceed 500 000 , and the total value of m across all test cases does not exceed 500 000 as well.",
    "output": "For each test case print a single integer \u2014 the required greatest common divisor.",
    "note": "The greatest common divisor of a set of integers is the largest integer g such that all elements of the set are divisible by g . In the first sample case vertices of the left half and vertices of the right half are pairwise connected, and f( S) for any non- empty subset is 2 , thus the greatest common divisor of these values if also equal to 2 . In the second sample case the subset { 1} in the left half is connected to vertices { 1, 2} of the right half, with the sum of numbers equal to 2 , and the subset { 1, 2} in the left half is connected to vertices { 1, 2, 3} of the right half, with the sum of numbers equal to 3 . Thus, f( { 1} ) = 2 , f( { 1, 2} ) = 3 , which means that the greatest common divisor of all values of f( S) is 1 .",
    "topics": [
      "graphs",
      "hashing",
      "math",
      "number theory"
    ],
    "id": "1322C"
  },
  {
    "title": "Adding Powers",
    "url": "https://codeforces.com/problemset/problem/1312/C",
    "history": "Suppose you are performing the following algorithm. There is an array v_ 1, v_ 2, . . . , v_ n filled with zeroes at start. The following operation is applied to the array several times \u2014 at i - th step ( 0 - indexed) you can: either choose position pos ( 1 \u2264 pos \u2264 n ) and increase v_ pos by k^ i ; or not choose any position and skip this step. You can choose how the algorithm would behave on each step and when to stop it. The question is: can you make array v equal to the given array a ( v_ j = a_ j for each j ) after some step?",
    "input": "The first line contains one integer T ( 1 \u2264 T \u2264 1000 ) \u2014 the number of test cases. Next 2T lines contain test cases \u2014 two lines per test case. The first line of each test case contains two integers n and k ( 1 \u2264 n \u2264 30 , 2 \u2264 k \u2264 100 ) \u2014 the size of arrays v and a and value k used in the algorithm. The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 0 \u2264 a_ i \u2264 10^ 16 ) \u2014 the array you' d like to achieve.",
    "output": "For each test case print YES ( case insensitive) if you can achieve the array a after some step or NO ( case insensitive) otherwise.",
    "note": "In the first test case, you can stop the algorithm before the 0 - th step, or don' t choose any position several times and stop the algorithm. In the second test case, you can add k^ 0 to v_ 1 and stop the algorithm. In the third test case, you can' t make two 1 in the array v . In the fifth test case, you can skip 9^ 0 and 9^ 1 , then add 9^ 2 and 9^ 3 to v_ 3 , skip 9^ 4 and finally, add 9^ 5 to v_ 2 .",
    "topics": [
      "bitmasks",
      "greedy",
      "implementation",
      "math",
      "number theory",
      "ternary search"
    ],
    "id": "1312C"
  },
  {
    "title": "Two Regular Polygons",
    "url": "https://codeforces.com/problemset/problem/1312/A",
    "history": "You are given two integers n and m ( m < n ) . Consider a convex regular polygon of n vertices. Recall that a regular polygon is a polygon that is equiangular ( all angles are equal in measure) and equilateral ( all sides have the same length) . Examples of convex regular polygons Your task is to say if it is possible to build another convex regular polygon with m vertices such that its center coincides with the center of the initial polygon and each of its vertices is some vertex of the initial polygon. You have to answer t independent test cases.",
    "input": "The first line of the input contains one integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. The next t lines describe test cases. Each test case is given as two space- separated integers n and m ( 3 \u2264 m < n \u2264 100 ) \u2014 the number of vertices in the initial polygon and the number of vertices in the polygon you want to build.",
    "output": "For each test case, print the answer \u2014 \" YES\" ( without quotes) , if it is possible to build another convex regular polygon with m vertices such that its center coincides with the center of the initial polygon and each of its vertices is some vertex of the initial polygon and \" NO\" otherwise.",
    "note": "The first test case of the example It can be shown that the answer for the second test case of the example is \" NO\" .",
    "topics": [
      "geometry",
      "greedy",
      "math",
      "number theory"
    ],
    "id": "1312A"
  },
  {
    "title": "Bad Cryptography",
    "url": "https://codeforces.com/problemset/problem/1310/F",
    "history": "In modern cryptography much is tied to the algorithmic complexity of solving several problems. One of such problems is a discrete logarithm problem. It is formulated as follows: Let' s fix a finite field and two it' s elements a and b . One need to fun such x that a^ x = b or detect there is no such x. It is most likely that modern mankind cannot solve the problem of discrete logarithm for a sufficiently large field size. For example, for a field of residues modulo prime number, primes of 1024 or 2048 bits are considered to be safe. However, calculations with such large numbers can place a significant load on servers that perform cryptographic operations. For this reason, instead of a simple module residue field, more complex fields are often used. For such field no fast algorithms that use a field structure are known, smaller fields can be used and operations can be properly optimized. Developer Nikolai does not trust the generally accepted methods, so he wants to invent his own. Recently, he read about a very strange field \u2014 nimbers, and thinks it' s a great fit for the purpose. The field of nimbers is defined on a set of integers from 0 to 2^ 2^ k - 1 for some positive integer k . Bitwise exclusive or ( \u2295 ) operation is used as addition. One of ways to define multiplication operation ( \u2299 ) is following properties: 0 \u2299 a = a \u2299 0 = 0 1 \u2299 a = a \u2299 1 = a a \u2299 b = b \u2299 a a \u2299 ( b \u2299 c) = ( a \u2299 b) \u2299 c a \u2299 ( b \u2295 c) = ( a \u2299 b) \u2295 ( a \u2299 c) If a = 2^ 2^ n for some integer n > 0 , and b < a , then a \u2299 b = a \u00b7 b . If a = 2^ 2^ n for some integer n > 0 , then a \u2299 a = 3/ 2\u00b7 a . For example: 4 \u2299 4 = 6 8 \u2299 8 = 4 \u2299 2 \u2299 4 \u2299 2 = 4 \u2299 4 \u2299 2 \u2299 2 = 6 \u2299 3 = ( 4 \u2295 2) \u2299 3 = ( 4 \u2299 3) \u2295 ( 2 \u2299 ( 2 \u2295 1) ) = ( 4 \u2299 3) \u2295 ( 2 \u2299 2) \u2295 ( 2 \u2299 1) = 12 \u2295 3 \u2295 2 = 13. 32 \u2299 64 = ( 16 \u2299 2) \u2299 ( 16 \u2299 4) = ( 16 \u2299 16) \u2299 ( 2 \u2299 4) = 24 \u2299 8 = ( 16 \u2295 8) \u2299 8 = ( 16 \u2299 8) \u2295 ( 8 \u2299 8) = 128 \u2295 13 = 141 5 \u2299 6 = ( 4 \u2295 1) \u2299 ( 4 \u2295 2) = ( 4\u2299 4) \u2295 ( 4 \u2299 2) \u2295 ( 4 \u2299 1) \u2295 ( 1 \u2299 2) = 6 \u2295 8 \u2295 4 \u2295 2 = 8 Formally, this algorithm can be described by following pseudo- code. multiply( a, b) ans = 0 for p1 in bits( a) / / numbers of bits of a equal to one for p2 in bits( b) / / numbers of bits of b equal to one ans = ans xor multiply_ powers_ of_ 2( 1 < < p1, 1 < < p2) return ans; multiply_ powers_ of_ 2( a, b) if ( a = = 1 or b = = 1) return a * b n = maximal value, such 2^ 2^ n < = max( a, b) power = 2^ 2^ n; if ( a > = power and b > = power) return multiply( power * 3 / 2, multiply_ powers_ of_ 2( a / power, b / power) ) else if ( a > = power) return multiply_ powers_ of_ 2( a / power, b) * power else return multiply_ powers_ of_ 2( a, b / power) * power It can be shown, that this operations really forms a field. Moreover, than can make sense as game theory operations, but that' s not related to problem much. With the help of appropriate caching and grouping of operations, it is possible to calculate the product quickly enough, which is important to improve speed of the cryptoalgorithm. More formal definitions as well as additional properties can be clarified in the wikipedia article at link. The authors of the task hope that the properties listed in the statement should be enough for the solution. Powering for such muliplication is defined in same way, formally a^ \u2299 k = a \u2299 a \u2299\u22ef\u2299 a_ k . You need to analyze the proposed scheme strength. For pairs of numbers a and b you need to find such x , that a^ \u2299 x = b , or determine that it doesn' t exist.",
    "input": "In the first line of input there is single integer t ( 1 \u2264 t \u2264 100 ) \u2014 number of pairs, for which you need to find the discrete logarithm. In each of next t line there is a pair of integers a b ( 1 \u2264 a, b < 2^ 64 ) .",
    "output": "For each pair you should print one integer x ( 0 \u2264 x < 2^ 64 ) , such that a^ \u2299 x = b , or - 1 if no such x exists. It can be shown, that if any such x exists, there is one inside given bounds. If there are several good values, you can output any of them.",
    "note": "",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "1310F"
  },
  {
    "title": "Kuroni and the Punishment",
    "url": "https://codeforces.com/problemset/problem/1305/F",
    "history": "Kuroni is very angry at the other setters for using him as a theme! As a punishment, he forced them to solve the following problem: You have an array a consisting of n positive integers. An operation consists of choosing an element and either adding 1 to it or subtracting 1 from it, such that the element remains positive. We say the array is good if the greatest common divisor of all its elements is not 1 . Find the minimum number of operations needed to make the array good. Unable to match Kuroni' s intellect, the setters failed to solve the problem. Help them escape from Kuroni' s punishment!",
    "input": "The first line contains an integer n ( 2 \u2264 n \u2264 2 \u00b7 10^ 5 ) \u2014 the number of elements in the array. The second line contains n integers a_ 1, a_ 2, . . . , a_ n . ( 1 \u2264 a_ i \u2264 10^ 12 ) \u2014 the elements of the array.",
    "output": "Print a single integer \u2014 the minimum number of operations required to make the array good.",
    "note": "In the first example, the first array is already good, since the greatest common divisor of all the elements is 2 . In the second example, we may apply the following operations: Add 1 to the second element, making it equal to 9 . Subtract 1 from the third element, making it equal to 6 . Add 1 to the fifth element, making it equal to 2 . Add 1 to the fifth element again, making it equal to 3 . The greatest common divisor of all elements will then be equal to 3 , so the array will be good. It can be shown that no sequence of three or less operations can make the array good.",
    "topics": [
      "math",
      "number theory",
      "probabilities"
    ],
    "id": "1305F"
  },
  {
    "title": "Kuroni and Impossible Calculation",
    "url": "https://codeforces.com/problemset/problem/1305/C",
    "history": "To become the king of Codeforces, Kuroni has to solve the following problem. He is given n numbers a_ 1, a_ 2, . . . , a_ n . Help Kuroni to calculate \u220f_ 1\u2264 i< j\u2264 n | a_ i - a_ j| . As result can be very big, output it modulo m . If you are not familiar with short notation, \u220f_ 1\u2264 i< j\u2264 n | a_ i - a_ j| is equal to | a_ 1 - a_ 2| \u00b7| a_ 1 - a_ 3| \u00b7 . . . \u00b7| a_ 1 - a_ n| \u00b7| a_ 2 - a_ 3| \u00b7| a_ 2 - a_ 4| \u00b7 . . . \u00b7| a_ 2 - a_ n| \u00b7 . . . \u00b7 | a_ n- 1 - a_ n| . In other words, this is the product of | a_ i - a_ j| for all 1\u2264 i < j \u2264 n .",
    "input": "The first line contains two integers n , m ( 2\u2264 n \u2264 2\u00b7 10^ 5 , 1\u2264 m \u2264 1000 ) \u2014 number of numbers and modulo. The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 0 \u2264 a_ i \u2264 10^ 9 ) .",
    "output": "Output the single number \u2014 \u220f_ 1\u2264 i< j\u2264 n | a_ i - a_ j| m .",
    "note": "In the first sample, | 8 - 5| = 3 \u2261 3 10 . In the second sample, | 1 - 4| \u00b7| 1 - 5| \u00b7| 4 - 5| = 3\u00b7 4 \u00b7 1 = 12 \u2261 0 12 . In the third sample, | 1 - 4| \u00b7| 1 - 9| \u00b7| 4 - 9| = 3 \u00b7 8 \u00b7 5 = 120 \u2261 1 7 .",
    "topics": [
      "brute force",
      "combinatorics",
      "math",
      "number theory"
    ],
    "id": "1305C"
  },
  {
    "title": "Same GCDs",
    "url": "https://codeforces.com/problemset/problem/1295/D",
    "history": "You are given two integers a and m . Calculate the number of integers x such that 0 \u2264 x < m and ( a, m) = ( a + x, m) . Note: ( a, b) is the greatest common divisor of a and b .",
    "input": "The first line contains the single integer T ( 1 \u2264 T \u2264 50 ) \u2014 the number of test cases. Next T lines contain test cases \u2014 one per line. Each line contains two integers a and m ( 1 \u2264 a < m \u2264 10^ 10 ) .",
    "output": "Print T integers \u2014 one per test case. For each test case print the number of appropriate x - s.",
    "note": "In the first test case appropriate x - s are [ 0, 1, 3, 4, 6, 7] . In the second test case the only appropriate x is 0 .",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "1295D"
  },
  {
    "title": "Product of Three Numbers",
    "url": "https://codeforces.com/problemset/problem/1294/C",
    "history": "You are given one integer number n . Find three distinct integers a, b, c such that 2 \u2264 a, b, c and a \u00b7 b \u00b7 c = n or say that it is impossible to do it. If there are several answers, you can print any. You have to answer t independent test cases.",
    "input": "The first line of the input contains one integer t ( 1 \u2264 t \u2264 100 ) \u2014 the number of test cases. The next n lines describe test cases. The i - th test case is given on a new line as one integer n ( 2 \u2264 n \u2264 10^ 9 ) .",
    "output": "For each test case, print the answer on it. Print \" NO\" if it is impossible to represent n as a \u00b7 b \u00b7 c for some distinct integers a, b, c such that 2 \u2264 a, b, c . Otherwise, print \" YES\" and any possible such representation.",
    "note": "",
    "topics": [
      "greedy",
      "math",
      "number theory"
    ],
    "id": "1294C"
  },
  {
    "title": "Chaotic V.",
    "url": "https://codeforces.com/problemset/problem/1292/D",
    "history": "\u00c6sir - CHAOS \u00c6sir - V. \" Everything has been planned out. No more hidden concerns. The condition of Cytus is also perfect. The time right now. . . . . . 00: 01: 12. . . . . . It' s time. \" The emotion samples are now sufficient. After almost 3 years, it' s time for Ivy to awake her bonded sister, Vanessa. The system inside A. R. C. ' s Library core can be considered as an undirected graph with infinite number of processing nodes, numbered with all positive integers ( 1, 2, 3, . . . ) . The node with a number x ( x > 1 ) , is directly connected with a node with number x/ f( x) , with f( x) being the lowest prime divisor of x . Vanessa' s mind is divided into n fragments. Due to more than 500 years of coma, the fragments have been scattered: the i - th fragment is now located at the node with a number k_ i! ( a factorial of k_ i ) . To maximize the chance of successful awakening, Ivy decides to place the samples in a node P , so that the total length of paths from each fragment to P is smallest possible. If there are multiple fragments located at the same node, the path from that node to P needs to be counted multiple times. In the world of zeros and ones, such a requirement is very simple for Ivy. Not longer than a second later, she has already figured out such a node. But for a mere human like you, is this still possible? For simplicity, please answer the minimal sum of paths' lengths from every fragment to the emotion samples' assembly node P .",
    "input": "The first line contains an integer n ( 1 \u2264 n \u2264 10^ 6 ) \u2014 number of fragments of Vanessa' s mind. The second line contains n integers: k_ 1, k_ 2, . . . , k_ n ( 0 \u2264 k_ i \u2264 5000 ) , denoting the nodes where fragments of Vanessa' s mind are located: the i - th fragment is at the node with a number k_ i! .",
    "output": "Print a single integer, denoting the minimal sum of path from every fragment to the node with the emotion samples ( a. k. a. node P ) . As a reminder, if there are multiple fragments at the same node, the distance from that node to P needs to be counted multiple times as well.",
    "note": "Considering the first 24 nodes of the system, the node network will look as follows ( the nodes 1! , 2! , 3! , 4! are drawn bold) : For the first example, Ivy will place the emotion samples at the node 1 . From here: The distance from Vanessa' s first fragment to the node 1 is 1 . The distance from Vanessa' s second fragment to the node 1 is 0 . The distance from Vanessa' s third fragment to the node 1 is 4 . The total length is 5 . For the second example, the assembly node will be 6 . From here: The distance from Vanessa' s first fragment to the node 6 is 0 . The distance from Vanessa' s second fragment to the node 6 is 2 . The distance from Vanessa' s third fragment to the node 6 is 2 . The distance from Vanessa' s fourth fragment to the node 6 is again 2 . The total path length is 6 .",
    "topics": [
      "dp",
      "graphs",
      "greedy",
      "math",
      "number theory",
      "trees"
    ],
    "id": "1292D"
  },
  {
    "title": "Classical?",
    "url": "https://codeforces.com/problemset/problem/1285/F",
    "history": "Given an array a , consisting of n integers, find: max_ 1 \u2264 i < j \u2264 n LCM( a_ i, a_ j) , where LCM( x, y) is the smallest positive integer that is divisible by both x and y . For example, LCM( 6, 8) = 24 , LCM( 4, 12) = 12 , LCM( 2, 3) = 6 .",
    "input": "The first line contains an integer n ( 2 \u2264 n \u2264 10^ 5 ) \u2014 the number of elements in the array a . The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 5 ) \u2014 the elements of the array a .",
    "output": "Print one integer, the maximum value of the least common multiple of two elements in the array a .",
    "note": "",
    "topics": [
      "binary search",
      "combinatorics",
      "number theory"
    ],
    "id": "1285F"
  },
  {
    "title": "Fadi and LCM",
    "url": "https://codeforces.com/problemset/problem/1285/C",
    "history": "Today, Osama gave Fadi an integer X , and Fadi was wondering about the minimum possible value of max( a, b) such that LCM( a, b) equals X . Both a and b should be positive integers. LCM( a, b) is the smallest positive integer that is divisible by both a and b . For example, LCM( 6, 8) = 24 , LCM( 4, 12) = 12 , LCM( 2, 3) = 6 . Of course, Fadi immediately knew the answer. Can you be just like Fadi and find any such pair?",
    "input": "The first and only line contains an integer X ( 1 \u2264 X \u2264 10^ 12 ) .",
    "output": "Print two positive integers, a and b , such that the value of max( a, b) is minimum possible and LCM( a, b) equals X . If there are several possible such pairs, you can print any.",
    "note": "",
    "topics": [
      "brute force",
      "math",
      "number theory"
    ],
    "id": "1285C"
  },
  {
    "title": "Cards",
    "url": "https://codeforces.com/problemset/problem/1278/F",
    "history": "Consider the following experiment. You have a deck of m cards, and exactly one card is a joker. n times, you do the following: shuffle the deck, take the top card of the deck, look at it and return it into the deck. Let x be the number of times you have taken the joker out of the deck during this experiment. Assuming that every time you shuffle the deck, all m! possible permutations of cards are equiprobable, what is the expected value of x^ k ? Print the answer modulo 998244353 .",
    "input": "The only line contains three integers n , m and k ( 1 \u2264 n, m < 998244353 , 1 \u2264 k \u2264 5000 ) .",
    "output": "Print one integer \u2014 the expected value of x^ k , taken modulo 998244353 ( the answer can always be represented as an irreducible fraction a/ b , where b 998244353 0 ; you have to print a \u00b7 b^ - 1 998244353 ) .",
    "note": "",
    "topics": [
      "combinatorics",
      "dp",
      "math",
      "number theory",
      "probabilities"
    ],
    "id": "1278F"
  },
  {
    "title": "Make Them Odd",
    "url": "https://codeforces.com/problemset/problem/1277/B",
    "history": "There are n positive integers a_ 1, a_ 2, . . . , a_ n . For the one move you can choose any even value c and divide by two all elements that equal c . For example, if a= [ 6, 8, 12, 6, 3, 12] and you choose c= 6 , and a is transformed into a= [ 3, 8, 12, 3, 3, 12] after the move. You need to find the minimal number of moves for transforming a to an array of only odd integers ( each element shouldn' t be divisible by 2 ) .",
    "input": "The first line of the input contains one integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases in the input. Then t test cases follow. The first line of a test case contains n ( 1 \u2264 n \u2264 2\u00b710^ 5 ) \u2014 the number of integers in the sequence a . The second line contains positive integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 9 ) . The sum of n for all test cases in the input doesn' t exceed 2\u00b710^ 5 .",
    "output": "For t test cases print the answers in the order of test cases in the input. The answer for the test case is the minimal number of moves needed to make all numbers in the test case odd ( i. e. not divisible by 2 ) .",
    "note": "In the first test case of the example, the optimal sequence of moves can be as follows: before making moves a= [ 40, 6, 40, 3, 20, 1] ; choose c= 6 ; now a= [ 40, 3, 40, 3, 20, 1] ; choose c= 40 ; now a= [ 20, 3, 20, 3, 20, 1] ; choose c= 20 ; now a= [ 10, 3, 10, 3, 10, 1] ; choose c= 10 ; now a= [ 5, 3, 5, 3, 5, 1] \u2014 all numbers are odd. Thus, all numbers became odd after 4 moves. In 3 or fewer moves, you cannot make them all odd.",
    "topics": [
      "greedy",
      "number theory"
    ],
    "id": "1277B"
  },
  {
    "title": "Diverse Matrix",
    "url": "https://codeforces.com/problemset/problem/1266/C",
    "history": "Let a be a matrix of size r \u00d7 c containing positive integers, not necessarily distinct. Rows of the matrix are numbered from 1 to r , columns are numbered from 1 to c . We can construct an array b consisting of r + c integers as follows: for each i \u2208 [ 1, r] , let b_ i be the greatest common divisor of integers in the i - th row, and for each j \u2208 [ 1, c] let b_ r+ j be the greatest common divisor of integers in the j - th column. We call the matrix diverse if all r + c numbers b_ k ( k \u2208 [ 1, r + c] ) are pairwise distinct. The magnitude of a matrix equals to the maximum of b_ k . For example, suppose we have the following matrix: [ 2 9 7; 4 144 84 ] We construct the array b : b_ 1 is the greatest common divisor of 2 , 9 , and 7 , that is 1 ; b_ 2 is the greatest common divisor of 4 , 144 , and 84 , that is 4 ; b_ 3 is the greatest common divisor of 2 and 4 , that is 2 ; b_ 4 is the greatest common divisor of 9 and 144 , that is 9 ; b_ 5 is the greatest common divisor of 7 and 84 , that is 7 . So b = [ 1, 4, 2, 9, 7] . All values in this array are distinct, so the matrix is diverse. The magnitude is equal to 9 . For a given r and c , find a diverse matrix that minimises the magnitude. If there are multiple solutions, you may output any of them. If there are no solutions, output a single integer 0 .",
    "input": "The only line in the input contains two space separated integers r and c ( 1 \u2264 r, c \u2264 500 ) \u2014 the number of rows and the number of columns of the matrix to be found.",
    "output": "If there is no solution, output a single integer 0 . Otherwise, output r rows. The i - th of them should contain c space- separated integers, the j - th of which is a_ i, j \u2014 the positive integer in the i - th row and j - th column of a diverse matrix minimizing the magnitude. Furthermore, it must hold that 1 \u2264 a_ i, j\u2264 10^ 9 . It can be shown that if a solution exists, there is also a solution with this additional constraint ( still having minimum possible magnitude) .",
    "note": "In the first example, the GCDs of rows are b_ 1 = 4 and b_ 2 = 1 , and the GCDs of columns are b_ 3 = 2 and b_ 4 = 3 . All GCDs are pairwise distinct and the maximum of them is 4 . Since the GCDs have to be distinct and at least 1 , it is clear that there are no diverse matrices of size 2 \u00d7 2 with magnitude smaller than 4 . In the second example, no matter what a_ 1, 1 is, b_ 1 = b_ 2 will always hold, so there are no diverse matrices.",
    "topics": [
      "constructive algorithms",
      "greedy",
      "math",
      "number theory"
    ],
    "id": "1266C"
  },
  {
    "title": "Beautiful Fibonacci Problem",
    "url": "https://codeforces.com/problemset/problem/1264/F",
    "history": "The well- known Fibonacci sequence F_ 0, F_ 1, F_ 2, . . . is defined as follows: F_ 0 = 0, F_ 1 = 1 . For each i \u2265 2 : F_ i = F_ i - 1 + F_ i - 2 . Given an increasing arithmetic sequence of positive integers with n elements: ( a, a + d, a + 2\u00b7 d, . . . , a + ( n - 1) \u00b7 d) . You need to find another increasing arithmetic sequence of positive integers with n elements ( b, b + e, b + 2\u00b7 e, . . . , b + ( n - 1) \u00b7 e) such that: 0 < b, e < 2^ 64 , for all 0\u2264 i < n , the decimal representation of a + i \u00b7 d appears as substring in the last 18 digits of the decimal representation of F_ b + i \u00b7 e ( if this number has less than 18 digits, then we consider all its digits) .",
    "input": "The first line contains three positive integers n , a , d ( 1 \u2264 n, a, d, a + ( n - 1) \u00b7 d < 10^ 6 ) .",
    "output": "If no such arithmetic sequence exists, print - 1 . Otherwise, print two integers b and e , separated by space in a single line ( 0 < b, e < 2^ 64 ) . If there are many answers, you can output any of them.",
    "note": "In the first test case, we can choose ( b, e) = ( 2, 1) , because F_ 2 = 1, F_ 3 = 2, F_ 4 = 3 . In the second test case, we can choose ( b, e) = ( 19, 5) because: F_ 19 = 4181 contains 1 ; F_ 24 = 46368 contains 3 ; F_ 29 = 514229 contains 5 ; F_ 34 = 5702887 contains 7 ; F_ 39 = 63245986 contains 9 .",
    "topics": [
      "constructive algorithms",
      "number theory"
    ],
    "id": "1264F"
  },
  {
    "title": "Everyone is a Winner!",
    "url": "https://codeforces.com/problemset/problem/1263/C",
    "history": "On the well- known testing system MathForces, a draw of n rating units is arranged. The rating will be distributed according to the following algorithm: if k participants take part in this event, then the n rating is evenly distributed between them and rounded to the nearest lower integer, At the end of the drawing, an unused rating may remain \u2014 it is not given to any of the participants. For example, if n = 5 and k = 3 , then each participant will recieve an 1 rating unit, and also 2 rating units will remain unused. If n = 5 , and k = 6 , then none of the participants will increase their rating. Vasya participates in this rating draw but does not have information on the total number of participants in this event. Therefore, he wants to know what different values of the rating increment are possible to get as a result of this draw and asks you for help. For example, if n= 5 , then the answer is equal to the sequence 0, 1, 2, 5 . Each of the sequence values ( and only them) can be obtained as \u230a n/ k \u230b for some positive integer k ( where \u230a x \u230b is the value of x rounded down) : 0 = \u230a 5/ 7 \u230b , 1 = \u230a 5/ 5 \u230b , 2 = \u230a 5/ 2 \u230b , 5 = \u230a 5/ 1 \u230b . Write a program that, for a given n , finds a sequence of all possible rating increments.",
    "input": "The first line contains integer number t ( 1 \u2264 t \u2264 10 ) \u2014 the number of test cases in the input. Then t test cases follow. Each line contains an integer n ( 1 \u2264 n \u2264 10^ 9 ) \u2014 the total number of the rating units being drawn.",
    "output": "Output the answers for each of t test cases. Each answer should be contained in two lines. In the first line print a single integer m \u2014 the number of different rating increment values that Vasya can get. In the following line print m integers in ascending order \u2014 the values of possible rating increments.",
    "note": "",
    "topics": [
      "binary search",
      "math",
      "meet-in-the-middle",
      "number theory"
    ],
    "id": "1263C"
  },
  {
    "title": "Infinite Fence",
    "url": "https://codeforces.com/problemset/problem/1260/C",
    "history": "You are a rebel leader and you are planning to start a revolution in your country. But the evil Government found out about your plans and set your punishment in the form of correctional labor. You must paint a fence which consists of 10^ 100 planks in two colors in the following way ( suppose planks are numbered from left to right from 0 ) : if the index of the plank is divisible by r ( such planks have indices 0 , r , 2r and so on) then you must paint it red; if the index of the plank is divisible by b ( such planks have indices 0 , b , 2b and so on) then you must paint it blue; if the index is divisible both by r and b you can choose the color to paint the plank; otherwise, you don' t need to paint the plank at all ( and it is forbidden to spent paint on it) . Furthermore, the Government added one additional restriction to make your punishment worse. Let' s list all painted planks of the fence in ascending order: if there are k consecutive planks with the same color in this list, then the Government will state that you failed the labor and execute you immediately. If you don' t paint the fence according to the four aforementioned conditions, you will also be executed. The question is: will you be able to accomplish the labor ( the time is not important) or the execution is unavoidable and you need to escape at all costs.",
    "input": "The first line contains single integer T ( 1 \u2264 T \u2264 1000 ) \u2014 the number of test cases. The next T lines contain descriptions of test cases \u2014 one per line. Each test case contains three integers r , b , k ( 1 \u2264 r, b \u2264 10^ 9 , 2 \u2264 k \u2264 10^ 9 ) \u2014 the corresponding coefficients.",
    "output": "Print T words \u2014 one per line. For each test case print REBEL ( case insensitive) if the execution is unavoidable or OBEY ( case insensitive) otherwise.",
    "note": "",
    "topics": [
      "greedy",
      "math",
      "number theory"
    ],
    "id": "1260C"
  },
  {
    "title": "Divisor Set",
    "url": "https://codeforces.com/problemset/problem/1257/G",
    "history": "You are given an integer x represented as a product of n its prime divisors p_ 1 \u00b7 p_ 2, \u00b7. . . \u00b7 p_ n . Let S be the set of all positive integer divisors of x ( including 1 and x itself) . We call a set of integers D good if ( and only if) there is no pair a \u2208 D , b \u2208 D such that a b and a divides b . Find a good subset of S with maximum possible size. Since the answer can be large, print the size of the subset modulo 998244353 .",
    "input": "The first line contains the single integer n ( 1 \u2264 n \u2264 2 \u00b7 10^ 5 ) \u2014 the number of prime divisors in representation of x . The second line contains n integers p_ 1, p_ 2, . . . , p_ n ( 2 \u2264 p_ i \u2264 3 \u00b7 10^ 6 ) \u2014 the prime factorization of x .",
    "output": "Print the maximum possible size of a good subset modulo 998244353 .",
    "note": "In the first sample, x = 2999999 \u00b7 43 \u00b7 2999957 and one of the maximum good subsets is { 43, 2999957, 2999999 } . In the second sample, x = 2 \u00b7 3 \u00b7 2 \u00b7 3 \u00b7 2 \u00b7 2 = 144 and one of the maximum good subsets is { 9, 12, 16 } .",
    "topics": [
      "divide and conquer",
      "fft",
      "greedy",
      "math",
      "number theory"
    ],
    "id": "1257G"
  },
  {
    "title": "Send Boxes to Alice (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1254/B2",
    "history": "This is the harder version of the problem. In this version, 1 \u2264 n \u2264 10^ 6 and 0 \u2264 a_ i \u2264 10^ 6 . You can hack this problem if you locked it. But you can hack the previous problem only if you locked both problemsChristmas is coming, and our protagonist, Bob, is preparing a spectacular present for his long- time best friend Alice. This year, he decides to prepare n boxes of chocolate, numbered from 1 to n . Initially, the i - th box contains a_ i chocolate pieces. Since Bob is a typical nice guy, he will not send Alice n empty boxes. In other words, at least one of a_ 1, a_ 2, . . . , a_ n is positive. Since Alice dislikes coprime sets, she will be happy only if there exists some integer k > 1 such that the number of pieces in each box is divisible by k . Note that Alice won' t mind if there exists some empty boxes. Charlie, Alice' s boyfriend, also is Bob' s second best friend, so he decides to help Bob by rearranging the chocolate pieces. In one second, Charlie can pick up a piece in box i and put it into either box i- 1 or box i+ 1 ( if such boxes exist) . Of course, he wants to help his friend as quickly as possible. Therefore, he asks you to calculate the minimum number of seconds he would need to make Alice happy.",
    "input": "The first line contains a single integer n ( 1 \u2264 n \u2264 10^ 6 ) \u2014 the number of chocolate boxes. The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 0 \u2264 a_ i \u2264 10^ 6 ) \u2014 the number of chocolate pieces in the i - th box. It is guaranteed that at least one of a_ 1, a_ 2, . . . , a_ n is positive.",
    "output": "If there is no way for Charlie to make Alice happy, print - 1 . Otherwise, print a single integer x \u2014 the minimum number of seconds for Charlie to help Bob make Alice happy.",
    "note": "In the first example, Charlie can move all chocolate pieces to the second box. Each box will be divisible by 17 . In the second example, Charlie can move a piece from box 2 to box 3 and a piece from box 4 to box 5 . Each box will be divisible by 3 . In the third example, each box is already divisible by 5 . In the fourth example, since Charlie has no available move, he cannot help Bob make Alice happy.",
    "topics": [
      "constructive algorithms",
      "greedy",
      "math",
      "number theory",
      "ternary search",
      "two pointers"
    ],
    "id": "1254B2"
  },
  {
    "title": "Send Boxes to Alice (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1254/B1",
    "history": "This is the easier version of the problem. In this version, 1 \u2264 n \u2264 10^ 5 and 0 \u2264 a_ i \u2264 1 . You can hack this problem only if you solve and lock both problems. Christmas is coming, and our protagonist, Bob, is preparing a spectacular present for his long- time best friend Alice. This year, he decides to prepare n boxes of chocolate, numbered from 1 to n . Initially, the i - th box contains a_ i chocolate pieces. Since Bob is a typical nice guy, he will not send Alice n empty boxes. In other words, at least one of a_ 1, a_ 2, . . . , a_ n is positive. Since Alice dislikes coprime sets, she will be happy only if there exists some integer k > 1 such that the number of pieces in each box is divisible by k . Note that Alice won' t mind if there exists some empty boxes. Charlie, Alice' s boyfriend, also is Bob' s second best friend, so he decides to help Bob by rearranging the chocolate pieces. In one second, Charlie can pick up a piece in box i and put it into either box i- 1 or box i+ 1 ( if such boxes exist) . Of course, he wants to help his friend as quickly as possible. Therefore, he asks you to calculate the minimum number of seconds he would need to make Alice happy.",
    "input": "The first line contains a single integer n ( 1 \u2264 n \u2264 10^ 5 ) \u2014 the number of chocolate boxes. The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 0 \u2264 a_ i \u2264 1 ) \u2014 the number of chocolate pieces in the i - th box. It is guaranteed that at least one of a_ 1, a_ 2, . . . , a_ n is positive.",
    "output": "If there is no way for Charlie to make Alice happy, print - 1 . Otherwise, print a single integer x \u2014 the minimum number of seconds for Charlie to help Bob make Alice happy.",
    "note": "",
    "topics": [
      "constructive algorithms",
      "greedy",
      "math",
      "number theory",
      "ternary search",
      "two pointers"
    ],
    "id": "1254B1"
  },
  {
    "title": "Good ol' Numbers Coloring",
    "url": "https://codeforces.com/problemset/problem/1245/A",
    "history": "Consider the set of all nonnegative integers: 0, 1, 2, . . . . Given two integers a and b ( 1 \u2264 a, b \u2264 10^ 4 ) . We paint all the numbers in increasing number first we paint 0 , then we paint 1 , then 2 and so on. Each number is painted white or black. We paint a number i according to the following rules: if i = 0 , it is colored white; if i \u2265 a and i - a is colored white, i is also colored white; if i \u2265 b and i - b is colored white, i is also colored white; if i is still not colored white, it is colored black. In this way, each nonnegative integer gets one of two colors. For example, if a= 3 , b= 5 , then the colors of the numbers ( in the order from 0 ) are: white ( 0 ) , black ( 1 ) , black ( 2 ) , white ( 3 ) , black ( 4 ) , white ( 5 ) , white ( 6 ) , black ( 7 ) , white ( 8 ) , white ( 9 ) , . . . Note that: It is possible that there are infinitely many nonnegative integers colored black. For example, if a = 10 and b = 10 , then only 0, 10, 20, 30 and any other nonnegative integers that end in 0 when written in base 10 are white. The other integers are colored black. It is also possible that there are only finitely many nonnegative integers colored black. For example, when a = 1 and b = 10 , then there is no nonnegative integer colored black at all. Your task is to determine whether or not the number of nonnegative integers colored black is infinite. If there are infinitely many nonnegative integers colored black, simply print a line containing \" Infinite\" ( without the quotes) . Otherwise, print \" Finite\" ( without the quotes) .",
    "input": "The first line of input contains a single integer t ( 1 \u2264 t \u2264 100 ) \u2014 the number of test cases in the input. Then t lines follow, each line contains two space- separated integers a and b ( 1 \u2264 a, b \u2264 10^ 4 ) .",
    "output": "For each test case, print one line containing either \" Infinite\" or \" Finite\" ( without the quotes) . Output is case- insensitive ( i. e. \" infinite\" , \" inFiNite\" or \" finiTE\" are all valid answers) .",
    "note": "",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "1245A"
  },
  {
    "title": "The Football Season",
    "url": "https://codeforces.com/problemset/problem/1244/C",
    "history": "The football season has just ended in Berland. According to the rules of Berland football, each match is played between two teams. The result of each match is either a draw, or a victory of one of the playing teams. If a team wins the match, it gets w points, and the opposing team gets 0 points. If the game results in a draw, both teams get d points. The manager of the Berland capital team wants to summarize the results of the season, but, unfortunately, all information about the results of each match is lost. The manager only knows that the team has played n games and got p points for them. You have to determine three integers x , y and z \u2014 the number of wins, draws and loses of the team. If there are multiple answers, print any of them. If there is no suitable triple ( x, y, z) , report about it.",
    "input": "The first line contains four integers n , p , w and d ( 1 \u2264 n \u2264 10^ 12, 0 \u2264 p \u2264 10^ 17, 1 \u2264 d < w \u2264 10^ 5) \u2014 the number of games, the number of points the team got, the number of points awarded for winning a match, and the number of points awarded for a draw, respectively. Note that w > d , so the number of points awarded for winning is strictly greater than the number of points awarded for draw.",
    "output": "If there is no answer, print - 1 . Otherwise print three non- negative integers x , y and z \u2014 the number of wins, draws and losses of the team. If there are multiple possible triples ( x, y, z) , print any of them. The numbers should meet the following conditions: x \u00b7 w + y \u00b7 d = p , x + y + z = n .",
    "note": "One of the possible answers in the first example \u2014 17 wins, 9 draws and 4 losses. Then the team got 17 \u00b7 3 + 9 \u00b7 1 = 60 points in 17 + 9 + 4 = 30 games. In the second example the maximum possible score is 10 \u00b7 5 = 50 . Since p = 51 , there is no answer. In the third example the team got 0 points, so all 20 games were lost.",
    "topics": [
      "brute force",
      "math",
      "number theory"
    ],
    "id": "1244C"
  },
  {
    "title": "Tile Painting",
    "url": "https://codeforces.com/problemset/problem/1242/A",
    "history": "Ujan has been lazy lately, but now has decided to bring his yard to good shape. First, he decided to paint the path from his house to the gate. The path consists of n consecutive tiles, numbered from 1 to n . Ujan will paint each tile in some color. He will consider the path aesthetic if for any two different tiles with numbers i and j , such that | j - i| is a divisor of n greater than 1 , they have the same color. Formally, the colors of two tiles with numbers i and j should be the same if | i- j| > 1 and n | i- j| = 0 ( where x y is the remainder when dividing x by y ) . Ujan wants to brighten up space. What is the maximum number of different colors that Ujan can use, so that the path is aesthetic?",
    "input": "The first line of input contains a single integer n ( 1 \u2264 n \u2264 10^ 12 ) , the length of the path.",
    "output": "Output a single integer, the maximum possible number of colors that the path can be painted in.",
    "note": "In the first sample, two colors is the maximum number. Tiles 1 and 3 should have the same color since 4 | 3- 1| = 0 . Also, tiles 2 and 4 should have the same color since 4 | 4- 2| = 0 . In the second sample, all five colors can be used.",
    "topics": [
      "constructive algorithms",
      "math",
      "number theory"
    ],
    "id": "1242A"
  },
  {
    "title": "Prime Subtraction",
    "url": "https://codeforces.com/problemset/problem/1238/A",
    "history": "You are given two integers x and y ( it is guaranteed that x > y ) . You may choose any prime integer p and subtract it any number of times from x . Is it possible to make x equal to y ? Recall that a prime number is a positive integer that has exactly two positive divisors: 1 and this integer itself. The sequence of prime numbers starts with 2 , 3 , 5 , 7 , 11 . Your program should solve t independent test cases.",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 1000 ) \u2014 the number of test cases. Then t lines follow, each describing a test case. Each line contains two integers x and y ( 1 \u2264 y < x \u2264 10^ 18 ) .",
    "output": "For each test case, print YES if it is possible to choose a prime number p and subtract it any number of times from x so that x becomes equal to y . Otherwise, print NO. You may print every letter in any case you want ( so, for example, the strings yEs, yes, Yes, and YES will all be recognized as positive answer) .",
    "note": "In the first test of the example you may choose p = 2 and subtract it once. In the second test of the example you may choose p = 5 and subtract it twice. Note that you cannot choose p = 7 , subtract it, then choose p = 3 and subtract it again. In the third test of the example you may choose p = 3 and subtract it 333333333333333333 times.",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "1238A"
  },
  {
    "title": "Primes and Multiplication",
    "url": "https://codeforces.com/problemset/problem/1228/C",
    "history": "Let' s introduce some definitions that will be needed later. Let prime( x) be the set of prime divisors of x . For example, prime( 140) = { 2, 5, 7 } , prime( 169) = { 13 } . Let g( x, p) be the maximum possible integer p^ k where k is an integer such that x is divisible by p^ k . For example: g( 45, 3) = 9 ( 45 is divisible by 3^ 2= 9 but not divisible by 3^ 3= 27 ) , g( 63, 7) = 7 ( 63 is divisible by 7^ 1= 7 but not divisible by 7^ 2= 49 ) . Let f( x, y) be the product of g( y, p) for all p in prime( x) . For example: f( 30, 70) = g( 70, 2) \u00b7 g( 70, 3) \u00b7 g( 70, 5) = 2^ 1 \u00b7 3^ 0 \u00b7 5^ 1 = 10 , f( 525, 63) = g( 63, 3) \u00b7 g( 63, 5) \u00b7 g( 63, 7) = 3^ 2 \u00b7 5^ 0 \u00b7 7^ 1 = 63 . You have integers x and n . Calculate f( x, 1) \u00b7 f( x, 2) \u00b7. . . \u00b7 f( x, n) ( 10^ 9 + 7) .",
    "input": "The only line contains integers x and n ( 2 \u2264 x \u2264 10^ 9 , 1 \u2264 n \u2264 10^ 18 ) \u2014 the numbers used in formula.",
    "output": "Print the answer.",
    "note": "In the first example, f( 10, 1) = g( 1, 2) \u00b7 g( 1, 5) = 1 , f( 10, 2) = g( 2, 2) \u00b7 g( 2, 5) = 2 . In the second example, actual value of formula is approximately 1. 597 \u00b7 10^ 171 . Make sure you print the answer modulo ( 10^ 9 + 7) . In the third example, be careful about overflow issue.",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "1228C"
  },
  {
    "title": "To Make 1",
    "url": "https://codeforces.com/problemset/problem/1225/G",
    "history": "There are n positive integers written on the blackboard. Also, a positive number k \u2265 2 is chosen, and none of the numbers on the blackboard are divisible by k . In one operation, you can choose any two integers x and y , erase them and write one extra number f( x + y) , where f( x) is equal to x if x is not divisible by k , otherwise f( x) = f( x / k) . In the end, there will be a single number of the blackboard. Is it possible to make the final number equal to 1 ? If so, restore any sequence of operations to do so.",
    "input": "The first line contains two integers n and k \u2014 the initial number of integers on the blackboard, and the chosen number ( 2 \u2264 n \u2264 16 , 2 \u2264 k \u2264 2000 ) . The second line contains n positive integers a_ 1, . . . , a_ n initially written on the blackboard. It is guaranteed that none of the numbers a_ i is divisible by k , and the sum of all a_ i does not exceed 2000 .",
    "output": "If it is impossible to obtain 1 as the final number, print \" NO\" in the only line. Otherwise, print \" YES\" on the first line, followed by n - 1 lines describing operations. The i - th of these lines has to contain two integers x_ i and y_ i to be erased and replaced with f( x_ i + y_ i) on the i - th operation. If there are several suitable ways, output any of them.",
    "note": "In the second sample case: f( 8 + 7) = f( 15) = f( 5) = 5 ; f( 23 + 13) = f( 36) = f( 12) = f( 4) = 4 ; f( 5 + 4) = f( 9) = f( 3) = f( 1) = 1 .",
    "topics": [
      "bitmasks",
      "constructive algorithms",
      "dp",
      "greedy",
      "number theory"
    ],
    "id": "1225G"
  },
  {
    "title": "Power Products",
    "url": "https://codeforces.com/problemset/problem/1225/D",
    "history": "You are given n positive integers a_ 1, . . . , a_ n , and an integer k \u2265 2 . Count the number of pairs i, j such that 1 \u2264 i < j \u2264 n , and there exists an integer x such that a_ i \u00b7 a_ j = x^ k .",
    "input": "The first line contains two integers n and k ( 2 \u2264 n \u2264 10^ 5 , 2 \u2264 k \u2264 100 ) . The second line contains n integers a_ 1, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 5 ) .",
    "output": "Print a single integer \u2014 the number of suitable pairs.",
    "note": "In the sample case, the suitable pairs are: a_ 1 \u00b7 a_ 4 = 8 = 2^ 3 ; a_ 1 \u00b7 a_ 6 = 1 = 1^ 3 ; a_ 2 \u00b7 a_ 3 = 27 = 3^ 3 ; a_ 3 \u00b7 a_ 5 = 216 = 6^ 3 ; a_ 4 \u00b7 a_ 6 = 8 = 2^ 3 .",
    "topics": [
      "hashing",
      "math",
      "number theory"
    ],
    "id": "1225D"
  },
  {
    "title": "Wooden Raft",
    "url": "https://codeforces.com/problemset/problem/1223/G",
    "history": "Suppose you are stuck on a desert island. The only way to save yourself is to craft a wooden raft and go to the sea. Fortunately, you have a hand- made saw and a forest nearby. Moreover, you' ve already cut several trees and prepared it to the point that now you have n logs and the i - th log has length a_ i . The wooden raft you' d like to build has the following structure: 2 logs of length x and x logs of length y . Such raft would have the area equal to x \u00b7 y . Both x and y must be integers since it' s the only way you can measure the lengths while being on a desert island. And both x and y must be at least 2 since the raft that is one log wide is unstable. You can cut logs in pieces but you can' t merge two logs in one. What is the maximum area of the raft you can craft?",
    "input": "The first line contains the only integer n ( 1 \u2264 n \u2264 5 \u00b7 10^ 5 ) \u2014 the number of logs you have. The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 2 \u2264 a_ i \u2264 5 \u00b7 10^ 5 ) \u2014 the corresponding lengths of the logs. It' s guaranteed that you can always craft at least 2 \u00d7 2 raft.",
    "output": "Print the only integer \u2014 the maximum area of the raft you can craft.",
    "note": "In the first example, you can cut the log of the length 9 in 5 parts: 2 + 2 + 2 + 2 + 1 . Now you can build 2 \u00d7 2 raft using 2 logs of length x = 2 and x = 2 logs of length y = 2 . In the second example, you can cut a_ 4 = 18 into two pieces 9 + 9 and a_ 8 = 28 in three pieces 10 + 9 + 9 . Now you can make 10 \u00d7 9 raft using 2 logs of length 10 and 10 logs of length 9 .",
    "topics": [
      "binary search",
      "math",
      "number theory"
    ],
    "id": "1223G"
  },
  {
    "title": "Alex and Julian",
    "url": "https://codeforces.com/problemset/problem/1220/D",
    "history": "Boy Dima gave Julian a birthday present \u2014 set B consisting of positive integers. However, he didn' t know, that Julian hates sets, but enjoys bipartite graphs more than anything else! Julian was almost upset, but her friend Alex said, that he can build an undirected graph using this set in such a way: let all integer numbers be vertices, then connect any two i and j with an edge if | i - j| belongs to B . Unfortunately, Julian doesn' t like the graph, that was built using B . Alex decided to rectify the situation, so he wants to erase some numbers from B , so that graph built using the new set is bipartite. The difficulty of this task is that the graph, Alex has to work with, has an infinite number of vertices and edges! It is impossible to solve this task alone, so Alex asks you for help. Write a program that erases a subset of minimum size from B so that graph constructed on the new set is bipartite. Recall, that graph is bipartite if all its vertices can be divided into two disjoint sets such that every edge connects a vertex from different sets.",
    "input": "First line contains an integer n ( 1 \u2a7d n \u2a7d 200 000) \u2014 size of B Second line contains n integers b_ 1, b_ 2, . . . , b_ n ( 1 \u2a7d b_ i \u2a7d 10^ 18) \u2014 numbers of B , all b_ i are unique",
    "output": "In the first line print single integer k \u2013 the number of erased elements. In the second line print k integers \u2014 values of erased elements. If there are multiple answers, print any of them.",
    "note": "",
    "topics": [
      "bitmasks",
      "math",
      "number theory"
    ],
    "id": "1220D"
  },
  {
    "title": "Multiplication Table",
    "url": "https://codeforces.com/problemset/problem/1220/B",
    "history": "Sasha grew up and went to first grade. To celebrate this event her mother bought her a multiplication table M with n rows and n columns such that M_ ij= a_ i \u00b7 a_ j where a_ 1, . . . , a_ n is some sequence of positive integers. Of course, the girl decided to take it to school with her. But while she was having lunch, hooligan Grisha erased numbers on the main diagonal and threw away the array a_ 1, . . . , a_ n . Help Sasha restore the array!",
    "input": "The first line contains a single integer n ( 3 \u2a7d n \u2a7d 10^ 3 ) , the size of the table. The next n lines contain n integers each. The j - th number of the i - th line contains the number M_ ij ( 1 \u2264 M_ ij\u2264 10^ 9 ) . The table has zeroes on the main diagonal, that is, M_ ii= 0 .",
    "output": "In a single line print n integers, the original array a_ 1, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 9 ) . It is guaranteed that an answer exists. If there are multiple answers, print any.",
    "note": "",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "1220B"
  },
  {
    "title": "Kamil and Making a Stream",
    "url": "https://codeforces.com/problemset/problem/1210/C",
    "history": "Kamil likes streaming the competitive programming videos. His MeTube channel has recently reached 100 million subscribers. In order to celebrate this, he posted a video with an interesting problem he couldn' t solve yet. Can you help him? You' re given a tree \u2014 a connected undirected graph consisting of n vertices connected by n - 1 edges. The tree is rooted at vertex 1 . A vertex u is called an ancestor of v if it lies on the shortest path between the root and v . In particular, a vertex is an ancestor of itself. Each vertex v is assigned its beauty x_ v \u2014 a non- negative integer not larger than 10^ 12 . This allows us to define the beauty of a path. Let u be an ancestor of v . Then we define the beauty f( u, v) as the greatest common divisor of the beauties of all vertices on the shortest path between u and v . Formally, if u= t_ 1, t_ 2, t_ 3, . . . , t_ k= v are the vertices on the shortest path between u and v , then f( u, v) = ( x_ t_ 1, x_ t_ 2, . . . , x_ t_ k) . Here, denotes the greatest common divisor of a set of numbers. In particular, f( u, u) = ( x_ u) = x_ u . Your task is to find the sum \u2211_ u is an ancestor of v f( u, v) . As the result might be too large, please output it modulo 10^ 9 + 7 . Note that for each y , ( 0, y) = ( y, 0) = y . In particular, ( 0, 0) = 0 .",
    "input": "The first line contains a single integer n ( 2 \u2264 n \u2264 100 000 ) \u2014 the number of vertices in the tree. The following line contains n integers x_ 1, x_ 2, . . . , x_ n ( 0 \u2264 x_ i \u2264 10^ 12 ) . The value x_ v denotes the beauty of vertex v . The following n - 1 lines describe the edges of the tree. Each of them contains two integers a, b ( 1 \u2264 a, b \u2264 n , a = \u0338 b ) \u2014 the vertices connected by a single edge.",
    "output": "Output the sum of the beauties on all paths ( u, v) such that u is ancestor of v . This sum should be printed modulo 10^ 9 + 7 .",
    "note": "The following figure shows all 10 possible paths for which one endpoint is an ancestor of another endpoint. The sum of beauties of all these paths is equal to 42 :",
    "topics": [
      "math",
      "number theory",
      "trees"
    ],
    "id": "1210C"
  },
  {
    "title": "Koala and Lights",
    "url": "https://codeforces.com/problemset/problem/1209/B",
    "history": "It is a holiday season, and Koala is decorating his house with cool lights! He owns n lights, all of which flash periodically. After taking a quick glance at them, Koala realizes that each of his lights can be described with two parameters a_ i and b_ i . Light with parameters a_ i and b_ i will toggle ( on to off, or off to on) every a_ i seconds starting from the b_ i - th second. In other words, it will toggle at the moments b_ i , b_ i + a_ i , b_ i + 2 \u00b7 a_ i and so on. You know for each light whether it' s initially on or off and its corresponding parameters a_ i and b_ i . Koala is wondering what is the maximum number of lights that will ever be on at the same time. So you need to find that out. Here is a graphic for the first example.",
    "input": "The first line contains a single integer n ( 1 \u2264 n \u2264 100 ) , the number of lights. The next line contains a string s of n characters. The i - th character is \" 1\" , if the i - th lamp is initially on. Otherwise, i - th character is \" 0\" . The i - th of the following n lines contains two integers a_ i and b_ i ( 1 \u2264 a_ i, b_ i \u2264 5 ) \u2014 the parameters of the i - th light.",
    "output": "Print a single integer \u2014 the maximum number of lights that will ever be on at the same time.",
    "note": "For first example, the lamps' states are shown in the picture above. The largest number of simultaneously on lamps is 2 ( e. g. at the moment 2 ) . In the second example, all lights are initially on. So the answer is 4 .",
    "topics": [
      "implementation",
      "math",
      "number theory"
    ],
    "id": "1209B"
  },
  {
    "title": "Polygons",
    "url": "https://codeforces.com/problemset/problem/1208/G",
    "history": "You are given two integers n and k . You need to construct k regular polygons having same circumcircle, with distinct number of sides l between 3 and n . Illustration for the first example. You can rotate them to minimize the total number of distinct points on the circle. Find the minimum number of such points.",
    "input": "The only line of input contains two integers n and k ( 3 \u2264 n \u2264 10^ 6 , 1 \u2264 k \u2264 n- 2 ) , the maximum number of sides of a polygon and the number of polygons to construct, respectively.",
    "output": "Print a single integer \u2014 the minimum number of points required for k polygons.",
    "note": "In the first example, we have n = 6 and k = 2 . So, we have 4 polygons with number of sides 3 , 4 , 5 and 6 to choose from and if we choose the triangle and the hexagon, then we can arrange them as shown in the picture in the statement. Hence, the minimum number of points required on the circle is 6 , which is also the minimum overall possible sets.",
    "topics": [
      "greedy",
      "math",
      "number theory"
    ],
    "id": "1208G"
  },
  {
    "title": "Natasha, Sasha and the Prefix Sums",
    "url": "https://codeforces.com/problemset/problem/1204/E",
    "history": "Natasha' s favourite numbers are n and 1 , and Sasha' s favourite numbers are m and - 1 . One day Natasha and Sasha met and wrote down every possible array of length n+ m such that some n of its elements are equal to 1 and another m elements are equal to - 1 . For each such array they counted its maximal prefix sum, probably an empty one which is equal to 0 ( in another words, if every nonempty prefix sum is less to zero, then it is considered equal to zero) . Formally, denote as f( a) the maximal prefix sum of an array a_ 1, . . . , l of length l \u2265 0 . Then: f( a) = max ( 0, max_ 1 \u2264 i \u2264 l\u2211_ j= 1^ i a_ j ) Now they want to count the sum of maximal prefix sums for each such an array and they are asking you to help. As this sum can be very large, output it modulo 998 244 853 .",
    "input": "The only line contains two integers n and m ( 0 \u2264 n, m \u2264 2 000 ) .",
    "output": "Output the answer to the problem modulo 998 244 853 .",
    "note": "In the first example the only possible array is [ - 1, - 1] , its maximal prefix sum is equal to 0 . In the second example the only possible array is [ 1, 1] , its maximal prefix sum is equal to 2 . There are 6 possible arrays in the third example: [ 1, 1, - 1, - 1] , f( [ 1, 1, - 1, - 1] ) = 2[ 1, - 1, 1, - 1] , f( [ 1, - 1, 1, - 1] ) = 1[ 1, - 1, - 1, 1] , f( [ 1, - 1, - 1, 1] ) = 1[ - 1, 1, 1, - 1] , f( [ - 1, 1, 1, - 1] ) = 1[ - 1, 1, - 1, 1] , f( [ - 1, 1, - 1, 1] ) = 0[ - 1, - 1, 1, 1] , f( [ - 1, - 1, 1, 1] ) = 0So the answer for the third example is 2+ 1+ 1+ 1+ 0+ 0 = 5 .",
    "topics": [
      "combinatorics",
      "dp",
      "math",
      "number theory"
    ],
    "id": "1204E"
  },
  {
    "title": "Graph Traveler",
    "url": "https://codeforces.com/problemset/problem/1200/F",
    "history": "Gildong is experimenting with an interesting machine Graph Traveler. In Graph Traveler, there is a directed graph consisting of n vertices numbered from 1 to n . The i - th vertex has m_ i outgoing edges that are labeled as e_ i[ 0] , e_ i[ 1] , . . . , e_ i[ m_ i- 1] , each representing the destination vertex of the edge. The graph can have multiple edges and self- loops. The i - th vertex also has an integer k_ i written on itself. A travel on this graph works as follows. Gildong chooses a vertex to start from, and an integer to start with. Set the variable c to this integer. After arriving at the vertex i , or when Gildong begins the travel at some vertex i , add k_ i to c . The next vertex is e_ i[ x] where x is an integer 0 \u2264 x \u2264 m_ i- 1 satisfying x \u2261 c m_ i . Go to the next vertex and go back to step 2. It' s obvious that a travel never ends, since the 2nd and the 3rd step will be repeated endlessly. For example, assume that Gildong starts at vertex 1 with c = 5 , and m_ 1 = 2 , e_ 1[ 0] = 1 , e_ 1[ 1] = 2 , k_ 1 = - 3 . Right after he starts at vertex 1 , c becomes 2 . Since the only integer x ( 0 \u2264 x \u2264 1 ) where x \u2261 c m_ i is 0 , Gildong goes to vertex e_ 1[ 0] = 1 . After arriving at vertex 1 again, c becomes - 1 . The only integer x satisfying the conditions is 1 , so he goes to vertex e_ 1[ 1] = 2 , and so on. Since Gildong is quite inquisitive, he' s going to ask you q queries. He wants to know how many distinct vertices will be visited infinitely many times, if he starts the travel from a certain vertex with a certain value of c . Note that you should not count the vertices that will be visited only finite times.",
    "input": "The first line of the input contains an integer n ( 1 \u2264 n \u2264 1000 ) , the number of vertices in the graph. The second line contains n integers. The i - th integer is k_ i ( - 10^ 9 \u2264 k_ i \u2264 10^ 9 ) , the integer written on the i - th vertex. Next 2 \u00b7 n lines describe the edges of each vertex. The ( 2 \u00b7 i + 1) - st line contains an integer m_ i ( 1 \u2264 m_ i \u2264 10 ) , the number of outgoing edges of the i - th vertex. The ( 2 \u00b7 i + 2) - nd line contains m_ i integers e_ i[ 0] , e_ i[ 1] , . . . , e_ i[ m_ i- 1] , each having an integer value between 1 and n , inclusive. Next line contains an integer q ( 1 \u2264 q \u2264 10^ 5 ) , the number of queries Gildong wants to ask. Next q lines contains two integers x and y ( 1 \u2264 x \u2264 n , - 10^ 9 \u2264 y \u2264 10^ 9 ) each, which mean that the start vertex is x and the starting value of c is y .",
    "output": "For each query, print the number of distinct vertices that will be visited infinitely many times, if Gildong starts at vertex x with starting integer y .",
    "note": "The first example can be shown like the following image: Three integers are marked on i - th vertex: i , k_ i , and m_ i respectively. The outgoing edges are labeled with an integer representing the edge number of i - th vertex. The travel for each query works as follows. It is described as a sequence of phrases, each in the format \" vertex ( c after k_ i added) \" . 1( 0) \u2192 2( 0) \u2192 2( 0) \u2192. . . 2( 0) \u2192 2( 0) \u2192. . . 3( - 1) \u2192 1( - 1) \u2192 3( - 1) \u2192. . . 4( - 2) \u2192 2( - 2) \u2192 2( - 2) \u2192. . . 1( 1) \u2192 3( 1) \u2192 4( 1) \u2192 1( 1) \u2192. . . 1( 5) \u2192 3( 5) \u2192 1( 5) \u2192. . . The second example is same as the first example, except that the vertices have non- zero values. Therefore the answers to the queries also differ from the first example. The queries for the second example works as follows: 1( 4) \u2192 2( - 1) \u2192 2( - 6) \u2192. . . 2( - 5) \u2192 2( - 10) \u2192. . . 3( - 4) \u2192 1( 0) \u2192 2( - 5) \u2192 2( - 10) \u2192. . . 4( - 3) \u2192 1( 1) \u2192 3( - 2) \u2192 4( - 3) \u2192. . . 1( 5) \u2192 3( 2) \u2192 1( 6) \u2192 2( 1) \u2192 2( - 4) \u2192. . . 1( 9) \u2192 3( 6) \u2192 2( 1) \u2192 2( - 4) \u2192. . .",
    "topics": [
      "brute force",
      "data structures",
      "dfs and similar",
      "dp",
      "graphs",
      "implementation",
      "math",
      "number theory"
    ],
    "id": "1200F"
  },
  {
    "title": "Round Corridor",
    "url": "https://codeforces.com/problemset/problem/1200/C",
    "history": "Amugae is in a very large round corridor. The corridor consists of two areas. The inner area is equally divided by n sectors, and the outer area is equally divided by m sectors. A wall exists between each pair of sectors of same area ( inner or outer) , but there is no wall between the inner area and the outer area. A wall always exists at the 12 o' clock position. The inner area' s sectors are denoted as ( 1, 1) , ( 1, 2) , . . . , ( 1, n) in clockwise direction. The outer area' s sectors are denoted as ( 2, 1) , ( 2, 2) , . . . , ( 2, m) in the same manner. For a clear understanding, see the example image above. Amugae wants to know if he can move from one sector to another sector. He has q questions. For each question, check if he can move between two given sectors.",
    "input": "The first line contains three integers n , m and q ( 1 \u2264 n, m \u2264 10^ 18 , 1 \u2264 q \u2264 10^ 4 ) \u2014 the number of sectors in the inner area, the number of sectors in the outer area and the number of questions. Each of the next q lines contains four integers s_ x , s_ y , e_ x , e_ y ( 1 \u2264 s_ x, e_ x \u2264 2 ; if s_ x = 1 , then 1 \u2264 s_ y \u2264 n , otherwise 1 \u2264 s_ y \u2264 m ; constraints on e_ y are similar) . Amague wants to know if it is possible to move from sector ( s_ x, s_ y) to sector ( e_ x, e_ y) .",
    "output": "For each question, print \" YES\" if Amugae can move from ( s_ x, s_ y) to ( e_ x, e_ y) , and \" NO\" otherwise. You can print each letter in any case ( upper or lower) .",
    "note": "Example is shown on the picture in the statement.",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "1200C"
  },
  {
    "title": "GCD Groups 2",
    "url": "https://codeforces.com/problemset/problem/1198/F",
    "history": "You are given an array of n integers. You need to split all integers into two groups so that the GCD of all integers in the first group is equal to one and the GCD of all integers in the second group is equal to one. The GCD of a group of integers is the largest non- negative integer that divides all the integers in the group. Both groups have to be non- empty.",
    "input": "The first line contains a single integer n ( 2 \u2264 n \u2264 10^ 5 ) . The second line contains n integers a_ 1 , a_ 2 , . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 9 ) \u2014 the elements of the array.",
    "output": "In the first line print \" YES\" ( without quotes) , if it is possible to split the integers into two groups as required, and \" NO\" ( without quotes) otherwise. If it is possible to split the integers, in the second line print n integers, where the i - th integer is equal to 1 if the integer a_ i should be in the first group, and 2 otherwise. If there are multiple solutions, print any.",
    "note": "",
    "topics": [
      "greedy",
      "number theory",
      "probabilities"
    ],
    "id": "1198F"
  },
  {
    "title": "Submarine in the Rybinsk Sea (hard edition)",
    "url": "https://codeforces.com/problemset/problem/1195/D2",
    "history": "This problem differs from the previous one only in the absence of the constraint on the equal length of all numbers a_ 1, a_ 2, . . . , a_ n . A team of SIS students is going to make a trip on a submarine. Their target is an ancient treasure in a sunken ship lying on the bottom of the Great Rybinsk sea. Unfortunately, the students don' t know the coordinates of the ship, so they asked Meshanya ( who is a hereditary mage) to help them. He agreed to help them, but only if they solve his problem. Let' s denote a function that alternates digits of two numbers f( a_ 1 a_ 2 . . . a_ p - 1 a_ p, b_ 1 b_ 2 . . . b_ q - 1 b_ q) , where a_ 1 . . . a_ p and b_ 1 . . . b_ q are digits of two integers written in the decimal notation without leading zeros. In other words, the function f( x, y) alternately shuffles the digits of the numbers x and y by writing them from the lowest digits to the older ones, starting with the number y . The result of the function is also built from right to left ( that is, from the lower digits to the older ones) . If the digits of one of the arguments have ended, then the remaining digits of the other argument are written out. Familiarize with examples and formal definitions of the function below. For example: f( 1111, 2222) = 12121212 f( 7777, 888) = 7787878 f( 33, 44444) = 4443434 f( 555, 6) = 5556 f( 111, 2222) = 2121212 Formally, if p \u2265 q then f( a_ 1 . . . a_ p, b_ 1 . . . b_ q) = a_ 1 a_ 2 . . . a_ p - q + 1 b_ 1 a_ p - q + 2 b_ 2 . . . a_ p - 1 b_ q - 1 a_ p b_ q ; if p < q then f( a_ 1 . . . a_ p, b_ 1 . . . b_ q) = b_ 1 b_ 2 . . . b_ q - p a_ 1 b_ q - p + 1 a_ 2 . . . a_ p - 1 b_ q - 1 a_ p b_ q . Mishanya gives you an array consisting of n integers a_ i , your task is to help students to calculate \u2211_ i = 1^ n\u2211_ j = 1^ n f( a_ i, a_ j) modulo 998 244 353 .",
    "input": "The first line of the input contains a single integer n ( 1 \u2264 n \u2264 100 000 ) \u2014 the number of elements in the array. The second line of the input contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 9 ) \u2014 the elements of the array.",
    "output": "Print the answer modulo 998 244 353 .",
    "note": "",
    "topics": [
      "combinatorics",
      "math",
      "number theory"
    ],
    "id": "1195D2"
  },
  {
    "title": "Submarine in the Rybinsk Sea (easy edition)",
    "url": "https://codeforces.com/problemset/problem/1195/D1",
    "history": "This problem differs from the next one only in the presence of the constraint on the equal length of all numbers a_ 1, a_ 2, . . . , a_ n . Actually, this problem is a subtask of the problem D2 from the same contest and the solution of D2 solves this subtask too. A team of SIS students is going to make a trip on a submarine. Their target is an ancient treasure in a sunken ship lying on the bottom of the Great Rybinsk sea. Unfortunately, the students don' t know the coordinates of the ship, so they asked Meshanya ( who is a hereditary mage) to help them. He agreed to help them, but only if they solve his problem. Let' s denote a function that alternates digits of two numbers f( a_ 1 a_ 2 . . . a_ p - 1 a_ p, b_ 1 b_ 2 . . . b_ q - 1 b_ q) , where a_ 1 . . . a_ p and b_ 1 . . . b_ q are digits of two integers written in the decimal notation without leading zeros. In other words, the function f( x, y) alternately shuffles the digits of the numbers x and y by writing them from the lowest digits to the older ones, starting with the number y . The result of the function is also built from right to left ( that is, from the lower digits to the older ones) . If the digits of one of the arguments have ended, then the remaining digits of the other argument are written out. Familiarize with examples and formal definitions of the function below. For example: f( 1111, 2222) = 12121212 f( 7777, 888) = 7787878 f( 33, 44444) = 4443434 f( 555, 6) = 5556 f( 111, 2222) = 2121212 Formally, if p \u2265 q then f( a_ 1 . . . a_ p, b_ 1 . . . b_ q) = a_ 1 a_ 2 . . . a_ p - q + 1 b_ 1 a_ p - q + 2 b_ 2 . . . a_ p - 1 b_ q - 1 a_ p b_ q ; if p < q then f( a_ 1 . . . a_ p, b_ 1 . . . b_ q) = b_ 1 b_ 2 . . . b_ q - p a_ 1 b_ q - p + 1 a_ 2 . . . a_ p - 1 b_ q - 1 a_ p b_ q . Mishanya gives you an array consisting of n integers a_ i . All numbers in this array are of equal length ( that is, they consist of the same number of digits) . Your task is to help students to calculate \u2211_ i = 1^ n\u2211_ j = 1^ n f( a_ i, a_ j) modulo 998 244 353 .",
    "input": "The first line of the input contains a single integer n ( 1 \u2264 n \u2264 100 000 ) \u2014 the number of elements in the array. The second line of the input contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 9 ) \u2014 the elements of the array. All numbers a_ 1, a_ 2, . . . , a_ n are of equal length ( that is, they consist of the same number of digits) .",
    "output": "Print the answer modulo 998 244 353 .",
    "note": "",
    "topics": [
      "combinatorics",
      "math",
      "number theory"
    ],
    "id": "1195D1"
  },
  {
    "title": "Crossword Expert",
    "url": "https://codeforces.com/problemset/problem/1194/F",
    "history": "Today Adilbek is taking his probability theory test. Unfortunately, when Adilbek arrived at the university, there had already been a long queue of students wanting to take the same test. Adilbek has estimated that he will be able to start the test only T seconds after coming. Fortunately, Adilbek can spend time without revising any boring theorems or formulas. He has an app on this smartphone which contains n Japanese crosswords to solve. Adilbek has decided to solve them all one by one in the order they are listed in the app, without skipping any crossword. For each crossword, a number t_ i is given that represents the time it takes an average crossword expert to solve this crossword ( the time is given in seconds) . Adilbek is a true crossword expert, but, unfortunately, he is sometimes unlucky in choosing the way to solve the crossword. So, it takes him either t_ i seconds or t_ i + 1 seconds to solve the i - th crossword, equiprobably ( with probability 1/ 2 he solves the crossword in exactly t_ i seconds, and with probability 1/ 2 he has to spend an additional second to finish the crossword) . All these events are independent. After T seconds pass ( or after solving the last crossword, if he manages to do it in less than T seconds) , Adilbek closes the app ( if he finishes some crossword at the same moment, that crossword is considered solved; otherwise Adilbek does not finish solving the current crossword at all) . He thinks it would be an interesting probability theory problem to calculate E \u2014 the expected number of crosswords he will be able to solve completely. Can you calculate it? Recall that the expected value of a discrete random variable is the probability- weighted average of all possible values \u2014 in this problem it means that the expected value of the number of solved crosswords can be calculated as E = \u2211_ i = 0^ n i p_ i , where p_ i is the probability that Adilbek will solve exactly i crosswords. We can represent E as rational fraction P/ Q with Q > 0 . To give the answer, you should print P \u00b7 Q^ - 1 ( 10^ 9 + 7) .",
    "input": "The first line contains two integers n and T ( 1 \u2264 n \u2264 2 \u00b7 10^ 5 , 1 \u2264 T \u2264 2 \u00b7 10^ 14 ) \u2014 the number of crosswords and the time Adilbek has to spend, respectively. The second line contains n integers t_ 1, t_ 2, . . . , t_ n ( 1 \u2264 t_ i \u2264 10^ 9 ) , where t_ i is the time it takes a crossword expert to solve the i - th crossword. Note that Adilbek solves the crosswords in the order they are given in the input without skipping any of them.",
    "output": "Print one integer \u2014 the expected value of the number of crosswords Adilbek solves in T seconds, expressed in the form of P \u00b7 Q^ - 1 ( 10^ 9 + 7) .",
    "note": "The answer for the first sample is equal to 14/ 8 . The answer for the second sample is equal to 17/ 8 .",
    "topics": [
      "combinatorics",
      "dp",
      "number theory",
      "probabilities",
      "two pointers"
    ],
    "id": "1194F"
  },
  {
    "title": "Tokitsukaze and Powers",
    "url": "https://codeforces.com/problemset/problem/1190/F",
    "history": "Tokitsukaze is playing a room escape game designed by SkywalkerT. In this game, she needs to find out hidden clues in the room to reveal a way to escape. After a while, she realizes that the only way to run away is to open the digital door lock since she accidentally went into a secret compartment and found some clues, which can be interpreted as: Only when you enter n possible different passwords can you open the door; Passwords must be integers ranged from 0 to ( m - 1) ; A password cannot be x ( 0 \u2264 x < m ) if x and m are not coprime ( i. e. x and m have some common divisor greater than 1 ) ; A password cannot be x ( 0 \u2264 x < m ) if there exist non- negative integers e and k such that p^ e = k m + x , where p is a secret integer; Any integer that doesn' t break the above rules can be a password; Several integers are hidden in the room, but only one of them can be p . Fortunately, she finds that n and m are recorded in the lock. However, what makes Tokitsukaze frustrated is that she doesn' t do well in math. Now that she has found an integer that is suspected to be p , she wants you to help her find out n possible passwords, or determine the integer cannot be p .",
    "input": "The only line contains three integers n , m and p ( 1 \u2264 n \u2264 5 \u00d7 10^ 5 , 1 \u2264 p < m \u2264 10^ 18 ) . It is guaranteed that m is a positive integer power of a single prime number.",
    "output": "If the number of possible different passwords is less than n , print a single integer - 1 . Otherwise, print n distinct integers ranged from 0 to ( m - 1) as passwords. You can print these integers in any order. Besides, if there are multiple solutions, print any.",
    "note": "In the first example, there is no possible password. In each of the last three examples, the given integer n equals to the number of possible different passwords for the given integers m and p , so if the order of numbers in the output is ignored, the solution is unique as shown above.",
    "topics": [
      "number theory",
      "probabilities"
    ],
    "id": "1190F"
  },
  {
    "title": "Count Pairs",
    "url": "https://codeforces.com/problemset/problem/1188/B",
    "history": "You are given a prime number p , n integers a_ 1, a_ 2, . . . , a_ n , and an integer k . Find the number of pairs of indexes ( i, j) ( 1 \u2264 i < j \u2264 n ) for which ( a_ i + a_ j) ( a_ i^ 2 + a_ j^ 2) \u2261 k p .",
    "input": "The first line contains integers n, p, k ( 2 \u2264 n \u2264 3 \u00b7 10^ 5 , 2 \u2264 p \u2264 10^ 9 , 0 \u2264 k \u2264 p- 1 ) . p is guaranteed to be prime. The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 0 \u2264 a_ i \u2264 p- 1 ) . It is guaranteed that all elements are different.",
    "output": "Output a single integer \u2014 answer to the problem.",
    "note": "In the first example: ( 0+ 1) ( 0^ 2 + 1^ 2) = 1 \u2261 1 3 . ( 0+ 2) ( 0^ 2 + 2^ 2) = 8 \u2261 2 3 . ( 1+ 2) ( 1^ 2 + 2^ 2) = 15 \u2261 0 3 . So only 1 pair satisfies the condition. In the second example, there are 3 such pairs: ( 1, 5) , ( 2, 3) , ( 4, 6) .",
    "topics": [
      "math",
      "matrices",
      "number theory",
      "two pointers"
    ],
    "id": "1188B"
  },
  {
    "title": "Heidi Learns Hashing (Hard)",
    "url": "https://codeforces.com/problemset/problem/1184/A3",
    "history": "Now Heidi is ready to crack Madame Kovarian' s hashing function. Madame Kovarian has a very strict set of rules for name changes. Two names can be interchanged only if using the following hashing function on them results in a collision. However, the hashing function is parametrized, so one can always find a set of parameters that causes such a collision. Heidi decided to exploit this to her advantage. Given two strings w_ 1 , w_ 2 of equal length n consisting of lowercase English letters and an integer m . Consider the standard polynomial hashing function: H_ p( w) : = ( \u2211_ i= 0^ | w| - 1 w_ i r^ i ) ( p) where p is some prime, and r is some number such that 2\u2264 r \u2264 p- 2 . The goal is to find r and a prime p ( m \u2264 p \u2264 10^ 9 ) such that H_ p( w_ 1) = H_ p( w_ 2) . Strings w_ 1 and w_ 2 are sampled independently at random from all strings of length n over lowercase English letters.",
    "input": "The first line contains two integers n and m ( 10 \u2264 n \u2264 10^ 5 , 2 \u2264 m \u2264 10^ 5 ) . The second and the third line, respectively, contain the words w_ 1 , w_ 2 that were sampled independently at random from all strings of length n over lowercase English letters.",
    "output": "Output integers p, r . p should be a prime in the range [ m, 10^ 9] and r should be an integer satisfying r\u2208 [ 2, p- 2] . At least one solution is guaranteed to exist. In case multiple solutions exist, print any of them.",
    "note": "In the first example, note that even though p= 3 and r= 2 also causes a colision of hashes, it is not a correct solution, since m is 5 and thus we want p\u2265 5 . In the second example, we are aware of the extra ' g' at the end. We just didn' t realize that \" River Song\" and \" Melody Pond\" have different lengths. . .",
    "topics": [
      "fft",
      "math",
      "number theory"
    ],
    "id": "1184A3"
  },
  {
    "title": "Heidi Learns Hashing (Medium)",
    "url": "https://codeforces.com/problemset/problem/1184/A2",
    "history": "After learning about polynomial hashing, Heidi decided to learn about shift- xor hashing. In particular, she came across this interesting problem. Given a bitstring y \u2208{ 0, 1} ^ n find out the number of different k ( 0 \u2264 k < n ) such that there exists x \u2208{ 0, 1} ^ n for which y = x \u2295^ k( x) . In the above, \u2295 is the xor operation and ^ k is the operation of shifting a bitstring cyclically to the right k times. For example, 001 \u2295 111 = 110 and ^ 3( 00010010111000) = 00000010010111 .",
    "input": "The first line contains an integer n ( 1 \u2264 n \u2264 2 \u00b7 10^ 5 ) , the length of the bitstring y . The second line contains the bitstring y .",
    "output": "Output a single integer: the number of suitable values of k .",
    "note": "In the first example: 1100\u2295^ 1( 1100) = 1010 1000\u2295^ 2( 1000) = 1010 0110\u2295^ 3( 0110) = 1010 There is no x such that x \u2295 x = 1010 , hence the answer is 3 .",
    "topics": [
      "brute force",
      "number theory"
    ],
    "id": "1184A2"
  },
  {
    "title": "Heidi Learns Hashing (Easy)",
    "url": "https://codeforces.com/problemset/problem/1184/A1",
    "history": "Melody Pond was stolen from her parents as a newborn baby by Madame Kovarian, to become a weapon of the Silence in their crusade against the Doctor. Madame Kovarian changed Melody' s name to River Song, giving her a new identity that allowed her to kill the Eleventh Doctor. Heidi figured out that Madame Kovarian uses a very complicated hashing function in order to change the names of the babies she steals. In order to prevent this from happening to future Doctors, Heidi decided to prepare herself by learning some basic hashing techniques. The first hashing function she designed is as follows. Given two positive integers ( x, y) she defines H( x, y) : = x^ 2+ 2xy+ x+ 1 . Now, Heidi wonders if the function is reversible. That is, given a positive integer r , can you find a pair ( x, y) ( of positive integers) such that H( x, y) = r ? If multiple such pairs exist, output the one with smallest possible x . If there is no such pair, output \" NO\" .",
    "input": "The first and only line contains an integer r ( 1 \u2264 r \u2264 10^ 12 ) .",
    "output": "Output integers x, y such that H( x, y) = r and x is smallest possible, or \" NO\" if no such pair exists.",
    "note": "",
    "topics": [
      "brute force",
      "math",
      "number theory"
    ],
    "id": "1184A1"
  },
  {
    "title": "Maximum Sine",
    "url": "https://codeforces.com/problemset/problem/1182/F",
    "history": "You have given integers a , b , p , and q . Let f( x) = abs( sin( p/ q\u03c0 x) ) . Find minimum possible integer x that maximizes f( x) where a \u2264 x \u2264 b .",
    "input": "Each test contains multiple test cases. The first line contains the number of test cases t ( 1 \u2264 t \u2264 100 ) \u2014 the number of test cases. The first line of each test case contains four integers a , b , p , and q ( 0 \u2264 a \u2264 b \u2264 10^ 9 , 1 \u2264 p , q \u2264 10^ 9 ) .",
    "output": "Print the minimum possible integer x for each test cases, separated by newline.",
    "note": "In the first test case, f( 0) = 0 , f( 1) = f( 2) \u2248 0. 866 , f( 3) = 0 . In the second test case, f( 55) \u2248 0. 999969 , which is the largest among all possible values.",
    "topics": [
      "binary search",
      "data structures",
      "number theory"
    ],
    "id": "1182F"
  },
  {
    "title": "Product Oriented Recurrence",
    "url": "https://codeforces.com/problemset/problem/1182/E",
    "history": "Let f_ x = c^ 2x- 6\u00b7 f_ x- 1\u00b7 f_ x- 2\u00b7 f_ x- 3 for x \u2265 4 . You have given integers n , f_ 1 , f_ 2 , f_ 3 , and c . Find f_ n ( 10^ 9+ 7) .",
    "input": "The only line contains five integers n , f_ 1 , f_ 2 , f_ 3 , and c ( 4 \u2264 n \u2264 10^ 18 , 1 \u2264 f_ 1 , f_ 2 , f_ 3 , c \u2264 10^ 9 ) .",
    "output": "Print f_ n ( 10^ 9 + 7) .",
    "note": "In the first example, f_ 4 = 90 , f_ 5 = 72900 . In the second example, f_ 17\u2248 2. 28 \u00d7 10^ 29587 .",
    "topics": [
      "dp",
      "math",
      "matrices",
      "number theory"
    ],
    "id": "1182E"
  },
  {
    "title": "Prime Graph",
    "url": "https://codeforces.com/problemset/problem/1178/D",
    "history": "Every person likes prime numbers. Alice is a person, thus she also shares the love for them. Bob wanted to give her an affectionate gift but couldn' t think of anything inventive. Hence, he will be giving her a graph. How original, Bob! Alice will surely be thrilled! When building the graph, he needs four conditions to be satisfied: It must be a simple undirected graph, i. e. without multiple ( parallel) edges and self- loops. The number of vertices must be exactly n \u2014 a number he selected. This number is not necessarily prime. The total number of edges must be prime. The degree ( i. e. the number of edges connected to the vertex) of each vertex must be prime. Below is an example for n = 4 . The first graph ( left one) is invalid as the degree of vertex 2 ( and 4 ) equals to 1 , which is not prime. The second graph ( middle one) is invalid as the total number of edges is 4 , which is not a prime number. The third graph ( right one) is a valid answer for n = 4 . Note that the graph can be disconnected. Please help Bob to find any such graph!",
    "input": "The input consists of a single integer n ( 3 \u2264 n \u2264 1 000 ) \u2014 the number of vertices.",
    "output": "If there is no graph satisfying the conditions, print a single line containing the integer - 1 . Otherwise, first print a line containing a prime number m ( 2 \u2264 m \u2264n( n- 1) / 2 ) \u2014 the number of edges in the graph. Then, print m lines, the i - th of which containing two integers u_ i , v_ i ( 1 \u2264 u_ i, v_ i \u2264 n ) \u2014 meaning that there is an edge between vertices u_ i and v_ i . The degree of each vertex must be prime. There must be no multiple ( parallel) edges or self- loops. If there are multiple solutions, you may print any of them. Note that the graph can be disconnected.",
    "note": "The first example was described in the statement. In the second example, the degrees of vertices are [ 7, 5, 2, 2, 3, 2, 2, 3] . Each of these numbers is prime. Additionally, the number of edges, 13 , is also a prime number, hence both conditions are satisfied.",
    "topics": [
      "constructive algorithms",
      "greedy",
      "math",
      "number theory"
    ],
    "id": "1178D"
  },
  {
    "title": "Recover it!",
    "url": "https://codeforces.com/problemset/problem/1176/D",
    "history": "Authors guessed an array a consisting of n integers; each integer is not less than 2 and not greater than 2 \u00b7 10^ 5 . You don' t know the array a , but you know the array b which is formed from it with the following sequence of operations: Firstly, let the array b be equal to the array a ; Secondly, for each i from 1 to n : if a_ i is a prime number, then one integer p_ a_ i is appended to array b , where p is an infinite sequence of prime numbers ( 2, 3, 5, . . . ) ; otherwise ( if a_ i is not a prime number) , the greatest divisor of a_ i which is not equal to a_ i is appended to b ; Then the obtained array of length 2n is shuffled and given to you in the input. Here p_ a_ i means the a_ i - th prime number. The first prime p_ 1 = 2 , the second one is p_ 2 = 3 , and so on. Your task is to recover any suitable array a that forms the given array b . It is guaranteed that the answer exists ( so the array b is obtained from some suitable array a ) . If there are multiple answers, you can print any.",
    "input": "The first line of the input contains one integer n ( 1 \u2264 n \u2264 2 \u00b7 10^ 5 ) \u2014 the number of elements in a . The second line of the input contains 2n integers b_ 1, b_ 2, . . . , b_ 2n ( 2 \u2264 b_ i \u2264 2750131 ) , where b_ i is the i - th element of b . 2750131 is the 199999 - th prime number.",
    "output": "In the only line of the output print n integers a_ 1, a_ 2, . . . , a_ n ( 2 \u2264 a_ i \u2264 2 \u00b7 10^ 5 ) in any order \u2014 the array a from which the array b can be obtained using the sequence of moves given in the problem statement. If there are multiple answers, you can print any.",
    "note": "",
    "topics": [
      "dfs and similar",
      "graphs",
      "greedy",
      "number theory",
      "sortings"
    ],
    "id": "1176D"
  },
  {
    "title": "Ehab and the Expected GCD Problem",
    "url": "https://codeforces.com/problemset/problem/1174/E",
    "history": "Let' s define a function f( p) on a permutation p as follows. Let g_ i be the greatest common divisor ( GCD) of elements p_ 1 , p_ 2 , . . . , p_ i ( in other words, it is the GCD of the prefix of length i ) . Then f( p) is the number of distinct elements among g_ 1 , g_ 2 , . . . , g_ n . Let f_ max( n) be the maximum value of f( p) among all permutations p of integers 1 , 2 , . . . , n . Given an integers n , count the number of permutations p of integers 1 , 2 , . . . , n , such that f( p) is equal to f_ max( n) . Since the answer may be large, print the remainder of its division by 1000 000 007 = 10^ 9 + 7 .",
    "input": "The only line contains the integer n ( 2 \u2264 n \u2264 10^ 6 ) \u2014 the length of the permutations.",
    "output": "The only line should contain your answer modulo 10^ 9+ 7 .",
    "note": "Consider the second example: these are the permutations of length 3 : [ 1, 2, 3] , f( p) = 1 . [ 1, 3, 2] , f( p) = 1 . [ 2, 1, 3] , f( p) = 2 . [ 2, 3, 1] , f( p) = 2 . [ 3, 1, 2] , f( p) = 2 . [ 3, 2, 1] , f( p) = 2 . The maximum value f_ max( 3) = 2 , and there are 4 permutations p such that f( p) = 2 .",
    "topics": [
      "combinatorics",
      "dp",
      "math",
      "number theory"
    ],
    "id": "1174E"
  },
  {
    "title": "Ehab and a Special Coloring Problem",
    "url": "https://codeforces.com/problemset/problem/1174/C",
    "history": "You' re given an integer n . For every integer i from 2 to n , assign a positive integer a_ i such that the following conditions hold: For any pair of integers ( i, j) , if i and j are coprime, a_ i = \u0338 a_ j . The maximal value of all a_ i should be minimized ( that is, as small as possible) . A pair of integers is called coprime if their greatest common divisor is 1 .",
    "input": "The only line contains the integer n ( 2 \u2264 n \u2264 10^ 5 ) .",
    "output": "Print n- 1 integers, a_ 2 , a_ 3 , . . . , a_ n ( 1 \u2264 a_ i \u2264 n ) . If there are multiple solutions, print any of them.",
    "note": "In the first example, notice that 3 and 4 are coprime, so a_ 3 = \u0338 a_ 4 . Also, notice that a= [ 1, 2, 3] satisfies the first condition, but it' s not a correct answer because its maximal value is 3 .",
    "topics": [
      "constructive algorithms",
      "number theory"
    ],
    "id": "1174C"
  },
  {
    "title": "The LCMs Must be Large",
    "url": "https://codeforces.com/problemset/problem/1166/E",
    "history": "Dora the explorer has decided to use her money after several years of juicy royalties to go shopping. What better place to shop than Nlogonia? There are n stores numbered from 1 to n in Nlogonia. The i - th of these stores offers a positive integer a_ i . Each day among the last m days Dora bought a single integer from some of the stores. The same day, Swiper the fox bought a single integer from all the stores that Dora did not buy an integer from on that day. Dora considers Swiper to be her rival, and she considers that she beat Swiper on day i if and only if the least common multiple of the numbers she bought on day i is strictly greater than the least common multiple of the numbers that Swiper bought on day i . The least common multiple ( LCM) of a collection of integers is the smallest positive integer that is divisible by all the integers in the collection. However, Dora forgot the values of a_ i . Help Dora find out if there are positive integer values of a_ i such that she beat Swiper on every day. You don' t need to find what are the possible values of a_ i though. Note that it is possible for some values of a_ i to coincide in a solution.",
    "input": "The first line contains integers m and n ( 1\u2264 m \u2264 50 , 1\u2264 n \u2264 10^ 4 ) \u2014 the number of days and the number of stores. After this m lines follow, the i - th line starts with an integer s_ i ( 1\u2264 s_ i \u2264 n- 1 ) , the number of integers Dora bought on day i , followed by s_ i distinct integers, the indices of the stores where Dora bought an integer on the i - th day. The indices are between 1 and n .",
    "output": "Output must consist of a single line containing \" possible\" if there exist positive integers a_ i such that for each day the least common multiple of the integers bought by Dora is strictly greater than the least common multiple of the integers bought by Swiper on that day. Otherwise, print \" impossible\" . Note that you don' t have to restore the integers themselves.",
    "note": "In the first sample, a possible choice for the values of the a_ i is 3, 4, 3, 5, 2 . On the first day, Dora buys the integers 3, 4 and 3 , whose LCM is 12 , while Swiper buys integers 5 and 2 , whose LCM is 10 . On the second day, Dora buys 3, 5 and 2 , whose LCM is 30 , and Swiper buys integers 3 and 4 , whose LCM is 12 .",
    "topics": [
      "bitmasks",
      "brute force",
      "constructive algorithms",
      "math",
      "number theory"
    ],
    "id": "1166E"
  },
  {
    "title": "All the Vowels Please",
    "url": "https://codeforces.com/problemset/problem/1166/B",
    "history": "Tom loves vowels, and he likes long words with many vowels. His favorite words are vowelly words. We say a word of length k is vowelly if there are positive integers n and m such that n\u00b7 m = k and when the word is written by using n rows and m columns ( the first row is filled first, then the second and so on, with each row filled from left to right) , every vowel of the English alphabet appears at least once in every row and every column. You are given an integer k and you must either print a vowelly word of length k or print - 1 if no such word exists. In this problem the vowels of the English alphabet are ' a' , ' e' , ' i' , ' o' , ' u' .",
    "input": "Input consists of a single line containing the integer k ( 1\u2264 k \u2264 10^ 4 ) \u2014 the required length.",
    "output": "The output must consist of a single line, consisting of a vowelly word of length k consisting of lowercase English letters if it exists or - 1 if it does not. If there are multiple possible words, you may output any of them.",
    "note": "In the second example, the word \" agoeuioaeiruuimaeoieauoweouoiaouimae\" can be arranged into the following 6 \u00d7 6 grid: It is easy to verify that every row and every column contain all the vowels.",
    "topics": [
      "constructive algorithms",
      "math",
      "number theory"
    ],
    "id": "1166B"
  },
  {
    "title": "Almost All Divisors",
    "url": "https://codeforces.com/problemset/problem/1165/D",
    "history": "We guessed some integer number x . You are given a list of almost all its divisors. Almost all means that there are all divisors except 1 and x in the list. Your task is to find the minimum possible integer x that can be the guessed number, or say that the input data is contradictory and it is impossible to find such number. You have to answer t independent queries.",
    "input": "The first line of the input contains one integer t ( 1 \u2264 t \u2264 25 ) \u2014 the number of queries. Then t queries follow. The first line of the query contains one integer n ( 1 \u2264 n \u2264 300 ) \u2014 the number of divisors in the list. The second line of the query contains n integers d_ 1, d_ 2, . . . , d_ n ( 2 \u2264 d_ i \u2264 10^ 6 ) , where d_ i is the i - th divisor of the guessed number. It is guaranteed that all values d_ i are distinct.",
    "output": "For each query print the answer to it. If the input data in the query is contradictory and it is impossible to find such number x that the given list of divisors is the list of almost all its divisors, print - 1. Otherwise print the minimum possible x .",
    "note": "",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "1165D"
  },
  {
    "title": "Alarm Clocks Everywhere",
    "url": "https://codeforces.com/problemset/problem/1155/C",
    "history": "Ivan is going to sleep now and wants to set his alarm clock. There will be many necessary events tomorrow, the i - th of them will start during the x_ i - th minute. Ivan doesn' t want to skip any of the events, so he has to set his alarm clock in such a way that it rings during minutes x_ 1, x_ 2, . . . , x_ n , so he will be awake during each of these minutes ( note that it does not matter if his alarm clock will ring during any other minute) . Ivan can choose two properties for the alarm clock \u2014 the first minute it will ring ( let' s denote it as y ) and the interval between two consecutive signals ( let' s denote it by p ) . After the clock is set, it will ring during minutes y, y + p, y + 2p, y + 3p and so on. Ivan can choose any minute as the first one, but he cannot choose any arbitrary value of p . He has to pick it among the given values p_ 1, p_ 2, . . . , p_ m ( his phone does not support any other options for this setting) . So Ivan has to choose the first minute y when the alarm clock should start ringing and the interval between two consecutive signals p_ j in such a way that it will ring during all given minutes x_ 1, x_ 2, . . . , x_ n ( and it does not matter if his alarm clock will ring in any other minutes) . Your task is to tell the first minute y and the index j such that if Ivan sets his alarm clock with properties y and p_ j it will ring during all given minutes x_ 1, x_ 2, . . . , x_ n or say that it is impossible to choose such values of the given properties. If there are multiple answers, you can print any.",
    "input": "The first line of the input contains two integers n and m ( 2 \u2264 n \u2264 3 \u00b7 10^ 5, 1 \u2264 m \u2264 3 \u00b7 10^ 5 ) \u2014 the number of events and the number of possible settings for the interval between signals. The second line of the input contains n integers x_ 1, x_ 2, . . . , x_ n ( 1 \u2264 x_ i \u2264 10^ 18 ) , where x_ i is the minute when i - th event starts. It is guaranteed that all x_ i are given in increasing order ( i. e. the condition x_ 1 < x_ 2 < . . . < x_ n holds) . The third line of the input contains m integers p_ 1, p_ 2, . . . , p_ m ( 1 \u2264 p_ j \u2264 10^ 18 ) , where p_ j is the j - th option for the interval between two consecutive signals.",
    "output": "If it' s impossible to choose such values y and j so all constraints are satisfied, print \" NO\" in the first line. Otherwise print \" YES\" in the first line. Then print two integers y ( 1 \u2264 y \u2264 10^ 18 ) and j ( 1 \u2264 j \u2264 m ) in the second line, where y is the first minute Ivan' s alarm clock should start ringing and j is the index of the option for the interval between two consecutive signals ( options are numbered from 1 to m in the order they are given input) . These values should be chosen in such a way that the alarm clock will ring during all given minutes x_ 1, x_ 2, . . . , x_ n . If there are multiple answers, you can print any.",
    "note": "",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "1155C"
  },
  {
    "title": "Minimum Possible LCM",
    "url": "https://codeforces.com/problemset/problem/1154/G",
    "history": "You are given an array a consisting of n integers a_ 1, a_ 2, . . . , a_ n . Your problem is to find such pair of indices i, j ( 1 \u2264 i < j \u2264 n ) that lcm( a_ i, a_ j) is minimum possible. lcm( x, y) is the least common multiple of x and y ( minimum positive number such that both x and y are divisors of this number) .",
    "input": "The first line of the input contains one integer n ( 2 \u2264 n \u2264 10^ 6 ) \u2014 the number of elements in a . The second line of the input contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 7 ) , where a_ i is the i - th element of a .",
    "output": "Print two integers i and j ( 1 \u2264 i < j \u2264 n ) such that the value of lcm( a_ i, a_ j) is minimum among all valid pairs i, j . If there are multiple answers, you can print any.",
    "note": "",
    "topics": [
      "brute force",
      "greedy",
      "math",
      "number theory"
    ],
    "id": "1154G"
  },
  {
    "title": "Neko does Maths",
    "url": "https://codeforces.com/problemset/problem/1152/C",
    "history": "Neko loves divisors. During the latest number theory lesson, he got an interesting exercise from his math teacher. Neko has two integers a and b . His goal is to find a non- negative integer k such that the least common multiple of a+ k and b+ k is the smallest possible. If there are multiple optimal integers k , he needs to choose the smallest one. Given his mathematical talent, Neko had no trouble getting Wrong Answer on this problem. Can you help him solve it?",
    "input": "The only line contains two integers a and b ( 1 \u2264 a, b \u2264 10^ 9 ) .",
    "output": "Print the smallest non- negative integer k ( k \u2265 0 ) such that the lowest common multiple of a+ k and b+ k is the smallest possible. If there are many possible integers k giving the same value of the least common multiple, print the smallest one.",
    "note": "In the first test, one should choose k = 2 , as the least common multiple of 6 + 2 and 10 + 2 is 24 , which is the smallest least common multiple possible.",
    "topics": [
      "brute force",
      "math",
      "number theory"
    ],
    "id": "1152C"
  },
  {
    "title": "Prefix Sum Primes",
    "url": "https://codeforces.com/problemset/problem/1149/A",
    "history": "We' re giving away nice huge bags containing number tiles! A bag we want to present to you contains n tiles. Each of them has a single number written on it \u2014 either 1 or 2 . However, there is one condition you must fulfill in order to receive the prize. You will need to put all the tiles from the bag in a sequence, in any order you wish. We will then compute the sums of all prefixes in the sequence, and then count how many of these sums are prime numbers. If you want to keep the prize, you will need to maximize the number of primes you get. Can you win the prize? Hurry up, the bags are waiting!",
    "input": "The first line of the input contains a single integer n ( 1 \u2264 n \u2264 200 000 ) \u2014 the number of number tiles in the bag. The following line contains n space- separated integers a_ 1, a_ 2, . . . , a_ n ( a_ i \u2208{ 1, 2} ) \u2014 the values written on the tiles.",
    "output": "Output a permutation b_ 1, b_ 2, . . . , b_ n of the input sequence ( a_ 1, a_ 2, . . . , a_ n) maximizing the number of the prefix sums being prime numbers. If there are multiple optimal permutations, output any.",
    "note": "The first solution produces the prefix sums 1, 2, 3, 5, 7 ( four primes constructed) , while the prefix sums in the second solution are 1, 2, 3, 5, 6, 7, 8, 10, 11 ( five primes) . Primes are marked bold and blue. In each of these cases, the number of produced primes is maximum possible.",
    "topics": [
      "constructive algorithms",
      "greedy",
      "math",
      "number theory"
    ],
    "id": "1149A"
  },
  {
    "title": "Gold Experience",
    "url": "https://codeforces.com/problemset/problem/1148/G",
    "history": "Consider an undirected graph G with n vertices. There is a value a_ i in each vertex. Two vertices i and j are connected with an edge if and only if gcd( a_ i, a_ j) > 1 , where gcd( x, y) denotes the greatest common divisor ( GCD) of integers x and y . Consider a set of vertices. Let' s call a vertex in this set fair if it is connected with an edge with all other vertices in this set. You need to find a set of k vertices ( where k is a given integer, 2 \u00b7 k \u2264 n ) where all vertices are fair or all vertices are not fair. One can show that such a set always exists.",
    "input": "The first line contains integers n and k ( 6 \u2264 2 \u00b7 k \u2264 n \u2264 10^ 5 ) \u2014 the number of vertices and parameter k . The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 2 \u2264 a_ i \u2264 10^ 7 ) \u2014 the values in the vertices.",
    "output": "Print exactly k distinct integers \u2014 the indices of the vertices in the chosen set in any order.",
    "note": "In the first test case, set { 2, 4, 5} is an example of set where no vertices are fair. The vertex 2 does not share an edge with vertex 4 since gcd( 15, 8) = 1 . The vertex 4 does not share an edge with vertex 2 . The vertex 5 does not share an edge with vertex 2 . In the second test case, set { 8, 5, 6, 4} is an example of a set where all vertices are fair.",
    "topics": [
      "constructive algorithms",
      "graphs",
      "math",
      "number theory",
      "probabilities"
    ],
    "id": "1148G"
  },
  {
    "title": "Frog Jumping",
    "url": "https://codeforces.com/problemset/problem/1146/D",
    "history": "A frog is initially at position 0 on the number line. The frog has two positive integers a and b . From a position k , it can either jump to position k+ a or k- b . Let f( x) be the number of distinct integers the frog can reach if it never jumps on an integer outside the interval [ 0, x] . The frog doesn' t need to visit all these integers in one trip, that is, an integer is counted if the frog can somehow reach it if it starts from 0 . Given an integer m , find \u2211_ i= 0^ m f( i) . That is, find the sum of all f( i) for i from 0 to m .",
    "input": "The first line contains three integers m, a, b ( 1 \u2264 m \u2264 10^ 9, 1 \u2264 a, b \u2264 10^ 5 ) .",
    "output": "Print a single integer, the desired sum.",
    "note": "In the first example, we must find f( 0) + f( 1) + . . . + f( 7) . We have f( 0) = 1, f( 1) = 1, f( 2) = 1, f( 3) = 1, f( 4) = 1, f( 5) = 3, f( 6) = 3, f( 7) = 8 . The sum of these values is 19 . In the second example, we have f( i) = i+ 1 , so we want to find \u2211_ i= 0^ 10^ 9 i+ 1 . In the third example, the frog can' t make any jumps in any case.",
    "topics": [
      "dfs and similar",
      "math",
      "number theory"
    ],
    "id": "1146D"
  },
  {
    "title": "Median String",
    "url": "https://codeforces.com/problemset/problem/1144/E",
    "history": "You are given two strings s and t , both consisting of exactly k lowercase Latin letters, s is lexicographically less than t . Let' s consider list of all strings consisting of exactly k lowercase Latin letters, lexicographically not less than s and not greater than t ( including s and t ) in lexicographical order. For example, for k= 2 , s= \" az\" and t= \" bf\" the list will be [ \" az\" , \" ba\" , \" bb\" , \" bc\" , \" bd\" , \" be\" , \" bf\" ] . Your task is to print the median ( the middle element) of this list. For the example above this will be \" bc\" . It is guaranteed that there is an odd number of strings lexicographically not less than s and not greater than t .",
    "input": "The first line of the input contains one integer k ( 1 \u2264 k \u2264 2 \u00b7 10^ 5 ) \u2014 the length of strings. The second line of the input contains one string s consisting of exactly k lowercase Latin letters. The third line of the input contains one string t consisting of exactly k lowercase Latin letters. It is guaranteed that s is lexicographically less than t . It is guaranteed that there is an odd number of strings lexicographically not less than s and not greater than t .",
    "output": "Print one string consisting exactly of k lowercase Latin letters \u2014 the median ( the middle element) of list of strings of length k lexicographically not less than s and not greater than t .",
    "note": "",
    "topics": [
      "bitmasks",
      "math",
      "number theory",
      "strings"
    ],
    "id": "1144E"
  },
  {
    "title": "Nirvana",
    "url": "https://codeforces.com/problemset/problem/1143/B",
    "history": "Kurt reaches nirvana when he finds the product of all the digits of some positive integer. Greater value of the product makes the nirvana deeper. Help Kurt find the maximum possible product of digits among all integers from 1 to n .",
    "input": "The only input line contains the integer n ( 1 \u2264 n \u2264 2\u00b710^ 9 ) .",
    "output": "Print the maximum product of digits among all integers from 1 to n .",
    "note": "In the first example the maximum product is achieved for 389 ( the product of digits is 3\u00b78\u00b79= 216 ) . In the second example the maximum product is achieved for 7 ( the product of digits is 7 ) . In the third example the maximum product is achieved for 999999999 ( the product of digits is 9^ 9= 387420489 ) .",
    "topics": [
      "brute force",
      "math",
      "number theory"
    ],
    "id": "1143B"
  },
  {
    "title": "Steps to One",
    "url": "https://codeforces.com/problemset/problem/1139/D",
    "history": "Vivek initially has an empty array a and some integer constant m . He performs the following algorithm: Select a random integer x uniformly in range from 1 to m and append it to the end of a . Compute the greatest common divisor of integers in a . In case it equals to 1 , break Otherwise, return to step 1 . Find the expected length of a . It can be shown that it can be represented as P/ Q where P and Q are coprime integers and Q= \u0338 0 10^ 9+ 7 . Print the value of P \u00b7 Q^ - 110^ 9+ 7 .",
    "input": "The first and only line contains a single integer m ( 1 \u2264 m \u2264 100000 ) .",
    "output": "Print a single integer \u2014 the expected length of the array a written as P \u00b7 Q^ - 110^ 9+ 7 .",
    "note": "In the first example, since Vivek can choose only integers from 1 to 1 , he will have a= [ 1] after the first append operation, and after that quit the algorithm. Hence the length of a is always 1 , so its expected value is 1 as well. In the second example, Vivek each time will append either 1 or 2 , so after finishing the algorithm he will end up having some number of 2 ' s ( possibly zero) , and a single 1 in the end. The expected length of the list is 1\u00b71/ 2 + 2\u00b71/ 2^ 2 + 3\u00b71/ 2^ 3 + . . . = 2 .",
    "topics": [
      "dp",
      "math",
      "number theory",
      "probabilities"
    ],
    "id": "1139D"
  },
  {
    "title": "Cooperative Game",
    "url": "https://codeforces.com/problemset/problem/1137/D",
    "history": "This is an interactive problem. Misha likes to play cooperative games with incomplete information. Today he suggested ten his friends to play a cooperative game \" Lake\" . Misha has already come up with a field for the upcoming game. The field for this game is a directed graph consisting of two parts. The first part is a road along the coast of the lake which is a cycle of c vertices. The second part is a path from home to the lake which is a chain of t vertices, and there is an edge from the last vertex of this chain to the vertex of the road along the coast which has the most beautiful view of the lake, also known as the finish vertex. Misha decided to keep the field secret, so nobody knows neither t nor c . Note that each vertex of the field has exactly one outgoing edge and all the vertices except the home vertex and the finish vertex have exactly one ingoing edge. The home vertex has no incoming edges, the finish vertex has two incoming edges. At the beginning of the game pieces of all the ten players, indexed with consecutive integers from 0 to 9 , are at the home vertex. After that on each turn some of the players can ask Misha to simultaneously move their pieces along the corresponding edges. Misha will not answer more than q such queries. After each move Misha will tell players whose pieces are at the same vertices and whose pieces are at different vertices. The goal of the game is to move all the pieces to the finish vertex. Misha' s friends have no idea how to win in such a game without knowledge of c , t and q , but luckily they are your friends. Help them: coordinate their actions to win the game. Misha has drawn such a field that 1 \u2264 t, c , ( t+ c) \u2264 1000 and q = 3 \u00b7 ( t+ c) . InteractionTo give a command to move the friends, print \" next\" and then space- separated indices of the friends you want to move. For example, to give the command to move the friends with indices 0 , 2 , 5 and 9 print \" next 0 2 5 9\" . At each turn, you must move at least one of your friends. As an answer, first read an integer k , and then 10 digits divided into k space- separated groups. The friends that correspond to the indices in the same group are in the same vertex. The friends that correspond to indices in different groups are in different vertices. The indices in each group follow in ascending order. For example, the answer \" 2 05 12346789\" means that the friends with indices 0 and 5 are in one vertex, and all other friends are in the same but different vertex. The answer \" 4 01 567 234 89\" means that Misha' s friends are in four different vertices: the friends with indices 0 and 1 are in the first, the friends with indices 5 , 6 and 7 are in the second, the friends with indices 2 , 3 and 4 are in the third, and the friends with indices 8 and 9 are in the fourth. After printing a query do not forget to output end of line and flush the output. Otherwise you will get Idleness limit exceeded. To do this, use: fflush( stdout) or cout. flush( ) in C+ + ; System. out. flush( ) in Java; flush( output) in Pascal; stdout. flush( ) in Python; see documentation for other languages. Answer \" stop\" instead of a valid one means that you made an invalid query. Exit immediately after receiving \" stop\" and you will see Wrong answer verdict. Otherwise you can get an arbitrary verdict because your solution will continue to read from a closed stream. HacksIn order to hack, print two integers t and c in a single line ( 1 \u2264 t, c , ( t+ c) \u2264 1000 ) .",
    "input": "There is no input \u2014 go to the interaction part straight away.",
    "output": "After all friends gather at the finish vertex, print \" done\" and terminate your program.",
    "note": "In the sample input and output values are aligned only for simplicity of interpreting them chronologically. In real interaction no \" extra\" line breaks should appear. In the example, the friends move as follows:",
    "topics": [
      "constructive algorithms",
      "interactive",
      "number theory"
    ],
    "id": "1137D"
  },
  {
    "title": "Zero Quantity Maximization",
    "url": "https://codeforces.com/problemset/problem/1133/D",
    "history": "You are given two arrays a and b , each contains n integers. You want to create a new array c as follows: choose some real ( i. e. not necessarily integer) number d , and then for every i \u2208 [ 1, n] let c_ i : = d \u00b7 a_ i + b_ i . Your goal is to maximize the number of zeroes in array c . What is the largest possible answer, if you choose d optimally?",
    "input": "The first line contains one integer n ( 1 \u2264 n \u2264 2 \u00b7 10^ 5 ) \u2014 the number of elements in both arrays. The second line contains n integers a_ 1 , a_ 2 , . . . , a_ n ( - 10^ 9 \u2264 a_ i \u2264 10^ 9 ) . The third line contains n integers b_ 1 , b_ 2 , . . . , b_ n ( - 10^ 9 \u2264 b_ i \u2264 10^ 9 ) .",
    "output": "Print one integer \u2014 the maximum number of zeroes in array c , if you choose d optimally.",
    "note": "In the first example, we may choose d = - 2 . In the second example, we may choose d = - 1/ 13 . In the third example, we cannot obtain any zero in array c , no matter which d we choose. In the fourth example, we may choose d = 6 .",
    "topics": [
      "hashing",
      "math",
      "number theory"
    ],
    "id": "1133D"
  },
  {
    "title": "Preparation for International Women's Day",
    "url": "https://codeforces.com/problemset/problem/1133/B",
    "history": "International Women' s Day is coming soon! Polycarp is preparing for the holiday. There are n candy boxes in the shop for sale. The i - th box contains d_ i candies. Polycarp wants to prepare the maximum number of gifts for k girls. Each gift will consist of exactly two boxes. The girls should be able to share each gift equally, so the total amount of candies in a gift ( in a pair of boxes) should be divisible by k . In other words, two boxes i and j ( i j ) can be combined as a gift if d_ i + d_ j is divisible by k . How many boxes will Polycarp be able to give? Of course, each box can be a part of no more than one gift. Polycarp cannot use boxes \" partially\" or redistribute candies between them.",
    "input": "The first line of the input contains two integers n and k ( 1 \u2264 n \u2264 2 \u00b7 10^ 5, 1 \u2264 k \u2264 100 ) \u2014 the number the boxes and the number the girls. The second line of the input contains n integers d_ 1, d_ 2, . . . , d_ n ( 1 \u2264 d_ i \u2264 10^ 9 ) , where d_ i is the number of candies in the i - th box.",
    "output": "Print one integer \u2014 the maximum number of the boxes Polycarp can give as gifts.",
    "note": "In the first example Polycarp can give the following pairs of boxes ( pairs are presented by indices of corresponding boxes) : ( 2, 3) ; ( 5, 6) ; ( 1, 4) . So the answer is 6 . In the second example Polycarp can give the following pairs of boxes ( pairs are presented by indices of corresponding boxes) : ( 6, 8) ; ( 2, 3) ; ( 1, 4) ; ( 5, 7) . So the answer is 8 . In the third example Polycarp can give the following pairs of boxes ( pairs are presented by indices of corresponding boxes) : ( 1, 2) ; ( 6, 7) . So the answer is 4 .",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "1133B"
  },
  {
    "title": "Please, another Queries on Array?",
    "url": "https://codeforces.com/problemset/problem/1114/F",
    "history": "You are given an array a_ 1, a_ 2, . . . , a_ n . You need to perform q queries of the following two types: \" MULTIPLY l r x\" \u2014 for every i ( l \u2264 i \u2264 r ) multiply a_ i by x . \" TOTIENT l r\" \u2014 print \u03c6( \u220f_ i= l^ r a_ i) taken modulo 10^ 9+ 7 , where \u03c6 denotes Euler' s totient function. The Euler' s totient function of a positive integer n ( denoted as \u03c6( n) ) is the number of integers x ( 1 \u2264 x \u2264 n ) such that ( n, x) = 1 .",
    "input": "The first line contains two integers n and q ( 1 \u2264 n \u2264 4 \u00b7 10^ 5 , 1 \u2264 q \u2264 2 \u00b7 10^ 5 ) \u2014 the number of elements in array a and the number of queries. The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 300 ) \u2014 the elements of array a . Then q lines follow, describing queries in the format given in the statement. \" MULTIPLY l r x\" ( 1 \u2264 l \u2264 r \u2264 n , 1 \u2264 x \u2264 300 ) \u2014 denotes a multiplication query. \" TOTIENT l r\" ( 1 \u2264 l \u2264 r \u2264 n ) \u2014 denotes a query on the value of Euler' s totient function. It is guaranteed that there is at least one \" TOTIENT\" query.",
    "output": "For each \" TOTIENT\" query, print the answer to it.",
    "note": "In the first example, \u03c6( 1) = 1 for the first query, \u03c6( 2) = 1 for the second query and \u03c6( 6) = 2 for the third one.",
    "topics": [
      "bitmasks",
      "data structures",
      "divide and conquer",
      "math",
      "number theory"
    ],
    "id": "1114F"
  },
  {
    "title": "Arithmetic Progression",
    "url": "https://codeforces.com/problemset/problem/1114/E",
    "history": "This is an interactive problem! An arithmetic progression or arithmetic sequence is a sequence of integers such that the subtraction of element with its previous element ( x_ i - x_ i - 1 , where i \u2265 2 ) is constant \u2014 such difference is called a common difference of the sequence. That is, an arithmetic progression is a sequence of form x_ i = x_ 1 + ( i - 1) d , where d is a common difference of the sequence. There is a secret list of n integers a_ 1, a_ 2, . . . , a_ n . It is guaranteed that all elements a_ 1, a_ 2, . . . , a_ n are between 0 and 10^ 9 , inclusive. This list is special: if sorted in increasing order, it will form an arithmetic progression with positive common difference ( d > 0 ) . For example, the list [ 14, 24, 9, 19] satisfies this requirement, after sorting it makes a list [ 9, 14, 19, 24] , which can be produced as x_ n = 9 + 5 \u00b7 ( n - 1) . Also you are also given a device, which has a quite discharged battery, thus you can only use it to perform at most 60 queries of following two types: Given a value i ( 1 \u2264 i \u2264 n ) , the device will show the value of the a_ i . Given a value x ( 0 \u2264 x \u2264 10^ 9 ) , the device will return 1 if an element with a value strictly greater than x exists, and it will return 0 otherwise. Your can use this special device for at most 60 queries. Could you please find out the smallest element and the common difference of the sequence? That is, values x_ 1 and d in the definition of the arithmetic progression. Note that the array a is not sorted. InteractionThe interaction starts with a single integer n ( 2 \u2264 n \u2264 10^ 6 ) , the size of the list of integers. Then you can make queries of two types: \" ? i\" ( 1 \u2264 i \u2264 n ) \u2014 to get the value of a_ i . \" > x\" ( 0 \u2264 x \u2264 10^ 9 ) \u2014 to check whether there exists an element greater than x After the query read its result r as an integer. For the first query type, the r satisfies 0 \u2264 r \u2264 10^ 9 . For the second query type, the r is either 0 or 1 . In case you make more than 60 queries or violated the number range in the queries, you will get a r = - 1 . If you terminate after receiving the - 1, you will get the \" Wrong answer\" verdict. Otherwise you can get an arbitrary verdict because your solution will continue to read from a closed stream. When you find out what the smallest element x_ 1 and common difference d , print \" ! x_ 1 d \" And quit after that. This query is not counted towards the 60 queries limit. After printing any query do not forget to output end of line and flush the output. Otherwise you will get Idleness limit exceeded. To do this, use: fflush( stdout) or cout. flush( ) in C+ + ; System. out. flush( ) in Java; flush( output) in Pascal; stdout. flush( ) in Python; see documentation for other languages. HacksFor hack, use the following format: The first line should contain an integer n ( 2 \u2264 n \u2264 10^ 6 ) \u2014 the list' s size. The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 0 \u2264 a_ i \u2264 10^ 9 ) \u2014 the elements of the list. Also, after the sorting the list must form an arithmetic progression with positive common difference.",
    "input": "",
    "output": "",
    "note": "Note that the example interaction contains extra empty lines so that it' s easier to read. The real interaction doesn' t contain any empty lines and you shouldn' t print any extra empty lines as well. The list in the example test is [ 14, 24, 9, 19] .",
    "topics": [
      "binary search",
      "interactive",
      "number theory",
      "probabilities"
    ],
    "id": "1114E"
  },
  {
    "title": "Trailing Loves (or L'oeufs?)",
    "url": "https://codeforces.com/problemset/problem/1114/C",
    "history": "The number \" zero\" is called \" love\" ( or \" l' oeuf\" to be precise, literally means \" egg\" in French) , for example when denoting the zero score in a game of tennis. Aki is fond of numbers, especially those with trailing zeros. For example, the number 9200 has two trailing zeros. Aki thinks the more trailing zero digits a number has, the prettier it is. However, Aki believes, that the number of trailing zeros of a number is not static, but depends on the base ( radix) it is represented in. Thus, he considers a few scenarios with some numbers and bases. And now, since the numbers he used become quite bizarre, he asks you to help him to calculate the beauty of these numbers. Given two integers n and b ( in decimal notation) , your task is to calculate the number of trailing zero digits in the b - ary ( in the base/ radix of b ) representation of n ! ( factorial of n ) .",
    "input": "The only line of the input contains two integers n and b ( 1 \u2264 n \u2264 10^ 18 , 2 \u2264 b \u2264 10^ 12 ) .",
    "output": "Print an only integer \u2014 the number of trailing zero digits in the b - ary representation of n!",
    "note": "In the first example, 6! _ ( 10) = 720_ ( 10) = 880_ ( 9) . In the third and fourth example, 5! _ ( 10) = 120_ ( 10) = 1111000_ ( 2) . The representation of the number x in the b - ary base is d_ 1, d_ 2, . . . , d_ k if x = d_ 1 b^ k - 1 + d_ 2 b^ k - 2 + . . . + d_ k b^ 0 , where d_ i are integers and 0 \u2264 d_ i \u2264 b - 1 . For example, the number 720 from the first example is represented as 880_ ( 9) since 720 = 8 \u00b7 9^ 2 + 8 \u00b7 9 + 0 \u00b7 1 . You can read more about bases here.",
    "topics": [
      "brute force",
      "implementation",
      "math",
      "number theory"
    ],
    "id": "1114C"
  },
  {
    "title": "Sasha and Magnetic Machines",
    "url": "https://codeforces.com/problemset/problem/1113/B",
    "history": "One day Sasha visited the farmer 2D and his famous magnetic farm. On this farm, the crop grows due to the influence of a special magnetic field. Maintaining of the magnetic field is provided by n machines, and the power of the i - th machine is a_ i . This year 2D decided to cultivate a new culture, but what exactly he didn' t say. For the successful growth of the new culture, it is necessary to slightly change the powers of the machines. 2D can at most once choose an arbitrary integer x , then choose one machine and reduce the power of its machine by x times, and at the same time increase the power of one another machine by x times ( powers of all the machines must stay positive integers) . Note that he may not do that if he wants. More formally, 2D can choose two such indices i and j , and one integer x such that x is a divisor of a_ i , and change powers as following: a_ i = a_ i/ x , a_ j = a_ j \u00b7 x Sasha is very curious, that' s why he wants to calculate the minimum total power the farmer can reach. There are too many machines, and Sasha can' t cope with computations, help him!",
    "input": "The first line contains one integer n ( 2 \u2264 n \u2264 5 \u00b7 10^ 4 ) \u2014 the number of machines. The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 100 ) \u2014 the powers of the machines.",
    "output": "Print one integer \u2014 minimum total power.",
    "note": "In the first example, the farmer can reduce the power of the 4 - th machine by 2 times, and increase the power of the 1 - st machine by 2 times, then the powers will be: [ 2, 2, 3, 2, 5] . In the second example, the farmer can reduce the power of the 3 - rd machine by 2 times, and increase the power of the 2 - nd machine by 2 times. At the same time, the farmer can leave is be as it is and the total power won' t change. In the third example, it is optimal to leave it be as it is.",
    "topics": [
      "greedy",
      "number theory"
    ],
    "id": "1113B"
  },
  {
    "title": "Meaningless Operations",
    "url": "https://codeforces.com/problemset/problem/1110/C",
    "history": "Can the greatest common divisor and bitwise operations have anything in common? It is time to answer this question. Suppose you are given a positive integer a . You want to choose some integer b from 1 to a - 1 inclusive in such a way that the greatest common divisor ( GCD) of integers a \u2295 b and a & b is as large as possible. In other words, you' d like to compute the following function: f( a) = max_ 0 < b < agcd( a \u2295 b, a & b) . Here \u2295 denotes the bitwise XOR operation, and & denotes the bitwise AND operation. The greatest common divisor of two integers x and y is the largest integer g such that both x and y are divided by g without remainder. You are given q integers a_ 1, a_ 2, . . . , a_ q . For each of these integers compute the largest possible value of the greatest common divisor ( when b is chosen optimally) .",
    "input": "The first line contains an integer q ( 1 \u2264 q \u2264 10^ 3 ) \u2014 the number of integers you need to compute the answer for. After that q integers are given, one per line: a_ 1, a_ 2, . . . , a_ q ( 2 \u2264 a_ i \u2264 2^ 25 - 1 ) \u2014 the integers you need to compute the answer for.",
    "output": "For each integer, print the answer in the same order as the integers are given in input.",
    "note": "For the first integer the optimal choice is b = 1 , then a \u2295 b = 3 , a & b = 0 , and the greatest common divisor of 3 and 0 is 3 . For the second integer one optimal choice is b = 2 , then a \u2295 b = 1 , a & b = 2 , and the greatest common divisor of 1 and 2 is 1 . For the third integer the optimal choice is b = 2 , then a \u2295 b = 7 , a & b = 0 , and the greatest common divisor of 7 and 0 is 7 .",
    "topics": [
      "constructive algorithms",
      "math",
      "number theory"
    ],
    "id": "1110C"
  },
  {
    "title": "Sasha and a Very Easy Test",
    "url": "https://codeforces.com/problemset/problem/1109/E",
    "history": "Egor likes math, and not so long ago he got the highest degree of recognition in the math community \u2014 Egor became a red mathematician. In this regard, Sasha decided to congratulate Egor and give him a math test as a present. This test contains an array a of integers of length n and exactly q queries. Queries were of three types: \" 1 l r x\" \u2014 multiply each number on the range from l to r by x . \" 2 p x\" \u2014 divide the number at the position p by x ( divisibility guaranteed) . \" 3 l r\" \u2014 find the sum of all elements on the range from l to r . The sum can be big, so Sasha asked Egor to calculate the sum modulo some integer mod . But since Egor is a red mathematician, he doesn' t have enough time to solve such easy tasks, at the same time he doesn' t want to anger Sasha, that' s why he asked you to help and to find answers for all queries of the 3 - rd type.",
    "input": "The first line contains two integers n and mod ( 1 \u2264 n \u2264 10^ 5 , 2 \u2264 mod \u2264 10^ 9 + 9 ) \u2014 the size of the array and the number mod . The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 5 ) \u2014 the array itself. The third line contains one integer q ( 1 \u2264 q \u2264 10^ 5 ) \u2014 the number of queries. Next q lines satisfy one of the following formats: 1 l r x ( 1 \u2264 l \u2264 r \u2264 n , 1 \u2264 x \u2264 10^ 5 ) , means that you must multiply each number on the range from l to r by x . 2 p x ( 1 \u2264 p \u2264 n , 1 \u2264 x \u2264 10^ 5 ) , means that you must divide number at the position p by x ( divisibility guaranteed) . 3 l r ( 1 \u2264 l \u2264 r \u2264 n ) , means that you must find the sum of elements on the range from l to r . It is guaranteed that there is at least one query of the 3 - rd type.",
    "output": "For each query of the 3 - rd type print the answer on a new line modulo mod .",
    "note": "The first example: Inital array is [ 4, 1, 2, 3, 5] In the first query, you must calculate the sum of the whole array, it' s equal to ( 4 + 1 + 2 + 3 + 5) 100 = 15 100 = 15 In the second query, you must multiply each number on the range from 2 to 3 by 6 . The resulting array will be [ 4, 6, 12, 3, 5] In the third query, you must calculate the sum on the range from 1 to 2 , it' s equal to ( 4 + 6) 100 = 10 100 = 10 In the fourth query, you must multiply each number on the range from 1 to 5 by 1 . Multiplication by 1 doesn' t affect the array. In the fifth query, you must calculate the sum on the range from 2 to 4 , it' s equal to ( 6 + 12 + 3) 100 = 21 100 = 21 The second example: Inital array is [ 4, 1, 2, 3, 5] In the first query, you must calculate the sum of the whole array, it' s equal to ( 4 + 1 + 2 + 3 + 5) 2 = 15 2 = 1 In the second query, you must multiply each number on the range from 2 to 3 by 6 . The resulting array will be [ 4, 6, 12, 3, 5] In the third query, you must calculate the sum on the range from 1 to 2 , it' s equal to ( 4 + 6) 2 = 10 2 = 0 In the fourth query, you must multiply each number on the range from 1 to 5 by 1 . Multiplication by 1 doesn' t affect the array. In the fifth query, you must calculate the sum on the range from 2 to 4 , it' s equal to ( 6 + 12 + 3) 2 = 21 2 = 1 In the sixth query, you must divide number at the position 3 by 4 . 12/ 4= 3 , so the array will be [ 4, 6, 3, 3, 5] . In the seventh, query you must calculate the sum on the range form 3 to 4 , it' s equal to ( 3 + 3) 2 = 6 2 = 0",
    "topics": [
      "data structures",
      "number theory"
    ],
    "id": "1109E"
  },
  {
    "title": "Divisors of Two Integers",
    "url": "https://codeforces.com/problemset/problem/1108/B",
    "history": "Recently you have received two positive integer numbers x and y . You forgot them, but you remembered a shuffled list containing all divisors of x ( including 1 and x ) and all divisors of y ( including 1 and y ) . If d is a divisor of both numbers x and y at the same time, there are two occurrences of d in the list. For example, if x= 4 and y= 6 then the given list can be any permutation of the list [ 1, 2, 4, 1, 2, 3, 6] . Some of the possible lists are: [ 1, 1, 2, 4, 6, 3, 2] , [ 4, 6, 1, 1, 2, 3, 2] or [ 1, 6, 3, 2, 4, 1, 2] . Your problem is to restore suitable positive integer numbers x and y that would yield the same list of divisors ( possibly in different order) . It is guaranteed that the answer exists, i. e. the given list of divisors corresponds to some positive integers x and y .",
    "input": "The first line contains one integer n ( 2 \u2264 n \u2264 128 ) \u2014 the number of divisors of x and y . The second line of the input contains n integers d_ 1, d_ 2, . . . , d_ n ( 1 \u2264 d_ i \u2264 10^ 4 ) , where d_ i is either divisor of x or divisor of y . If a number is divisor of both numbers x and y then there are two copies of this number in the list.",
    "output": "Print two positive integer numbers x and y \u2014 such numbers that merged list of their divisors is the permutation of the given list of integers. It is guaranteed that the answer exists.",
    "note": "",
    "topics": [
      "brute force",
      "greedy",
      "math",
      "number theory"
    ],
    "id": "1108B"
  },
  {
    "title": "Compression",
    "url": "https://codeforces.com/problemset/problem/1107/D",
    "history": "You are given a binary matrix A of size n \u00d7 n . Let' s denote an x - compression of the given matrix as a matrix B of size n/ x\u00d7n/ x such that for every i \u2208 [ 1, n] , j \u2208 [ 1, n] the condition A[ i] [ j] = B[ \u2308i/ x\u2309] [ \u2308j/ x\u2309] is met. Obviously, x - compression is possible only if x divides n , but this condition is not enough. For example, the following matrix of size 2 \u00d7 2 does not have any 2 - compression: 01 10 For the given matrix A , find maximum x such that an x - compression of this matrix is possible. Note that the input is given in compressed form. But even though it is compressed, you' d better use fast input.",
    "input": "The first line contains one number n ( 4 \u2264 n \u2264 5200 ) \u2014 the number of rows and columns in the matrix A . It is guaranteed that n is divisible by 4 . Then the representation of matrix follows. Each of n next lines contains n/ 4 one- digit hexadecimal numbers ( that is, these numbers can be represented either as digits from 0 to 9 or as uppercase Latin letters from A to F ) . Binary representation of each of these numbers denotes next 4 elements of the matrix in the corresponding row. For example, if the number B is given, then the corresponding elements are 1011, and if the number is 5 , then the corresponding elements are 0101. Elements are not separated by whitespaces.",
    "output": "Print one number: maximum x such that an x - compression of the given matrix is possible.",
    "note": "The first example corresponds to the matrix: 11100111 11100111 11100111 00000000 00000000 11100111 11100111 11100111 It is easy to see that the answer on this example is 1 .",
    "topics": [
      "dp",
      "implementation",
      "math",
      "number theory"
    ],
    "id": "1107D"
  },
  {
    "title": "Digital root",
    "url": "https://codeforces.com/problemset/problem/1107/B",
    "history": "Today at the lesson of mathematics, Petya learns about the digital root. The digital root of a non- negative integer is the single digit value obtained by an iterative process of summing digits, on each iteration using the result from the previous iteration to compute a digit sum. The process continues until a single- digit number is reached. Let' s denote the digital root of x as S( x) . Then S( 5) = 5 , S( 38) = S( 3+ 8= 11) = S( 1+ 1= 2) = 2 , S( 10) = S( 1+ 0= 1) = 1 . As a homework Petya got n tasks of the form: find k - th positive number whose digital root is x . Petya has already solved all the problems, but he doesn' t know if it' s right. Your task is to solve all n tasks from Petya' s homework.",
    "input": "The first line contains a single integer n ( 1 \u2264 n \u2264 10^ 3 ) \u2014 the number of tasks in Petya' s homework. The next n lines contain two integers k_ i ( 1 \u2264 k_ i \u2264 10^ 12 ) and x_ i ( 1 \u2264 x_ i \u2264 9 ) \u2014 i - th Petya' s task in which you need to find a k_ i - th positive number, the digital root of which is x_ i .",
    "output": "Output n lines, i - th line should contain a single integer \u2014 the answer to the i - th problem.",
    "note": "",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "1107B"
  },
  {
    "title": "Lunar New Year and a Recursive Sequence",
    "url": "https://codeforces.com/problemset/problem/1106/F",
    "history": "Lunar New Year is approaching, and Bob received a gift from his friend recently \u2014 a recursive sequence! He loves this sequence very much and wants to play with it. Let f_ 1, f_ 2, . . . , f_ i, . . . be an infinite sequence of positive integers. Bob knows that for i > k , f_ i can be obtained by the following recursive equation: f_ i = ( f_ i - 1 ^ b_ 1\u00b7 f_ i - 2 ^ b_ 2\u00b7\u22ef\u00b7 f_ i - k ^ b_ k) p, which in short is f_ i = ( \u220f_ j = 1^ k f_ i - j^ b_ j) p, where p = 998 244 353 ( a widely- used prime) , b_ 1, b_ 2, . . . , b_ k are known integer constants, and x y denotes the remainder of x divided by y . Bob lost the values of f_ 1, f_ 2, . . . , f_ k , which is extremely troublesome \u2013 these are the basis of the sequence! Luckily, Bob remembers the first k - 1 elements of the sequence: f_ 1 = f_ 2 = . . . = f_ k - 1 = 1 and the n - th element: f_ n = m . Please find any possible value of f_ k . If no solution exists, just tell Bob that it is impossible to recover his favorite sequence, regardless of Bob' s sadness.",
    "input": "The first line contains a positive integer k ( 1 \u2264 k \u2264 100 ) , denoting the length of the sequence b_ 1, b_ 2, . . . , b_ k . The second line contains k positive integers b_ 1, b_ 2, . . . , b_ k ( 1 \u2264 b_ i < p ) . The third line contains two positive integers n and m ( k < n \u2264 10^ 9 , 1 \u2264 m < p ) , which implies f_ n = m .",
    "output": "Output a possible value of f_ k , where f_ k is a positive integer satisfying 1 \u2264 f_ k < p . If there are multiple answers, print any of them. If no such f_ k makes f_ n = m , output - 1 instead. It is easy to show that if there are some possible values of f_ k , there must be at least one satisfying 1 \u2264 f_ k < p .",
    "note": "In the first sample, we have f_ 4 = f_ 3^ 2 \u00b7 f_ 2^ 3 \u00b7 f_ 1^ 5 . Therefore, applying f_ 3 = 4 , we have f_ 4 = 16 . Note that there can be multiple answers. In the third sample, applying f_ 7 = 1 makes f_ 23333 = 1 . In the fourth sample, no such f_ 1 makes f_ 88888 = 66666 . Therefore, we output - 1 instead.",
    "topics": [
      "math",
      "matrices",
      "number theory"
    ],
    "id": "1106F"
  },
  {
    "title": "Radix sum",
    "url": "https://codeforces.com/problemset/problem/1103/E",
    "history": "Let' s define radix sum of number a consisting of digits a_ 1, . . . , a_ k and number b consisting of digits b_ 1, . . . , b_ k ( we add leading zeroes to the shorter number to match longer length) as number s( a, b) consisting of digits ( a_ 1+ b_ 1) 10, . . . , ( a_ k+ b_ k) 10 . The radix sum of several integers is defined as follows: s( t_ 1, . . . , t_ n) = s( t_ 1, s( t_ 2, . . . , t_ n) ) You are given an array x_ 1, . . . , x_ n . The task is to compute for each integer i ( 0 \u2264 i < n) number of ways to consequently choose one of the integers from the array n times, so that the radix sum of these integers is equal to i . Calculate these values modulo 2^ 58 .",
    "input": "The first line contains integer n \u2014 the length of the array( 1 \u2264 n \u2264 100000 ) . The second line contains n integers x_ 1, . . . x_ n \u2014 array elements( 0 \u2264 x_ i < 100000 ) .",
    "output": "Output n integers y_ 0, . . . , y_ n- 1 \u2014 y_ i should be equal to corresponding number of ways modulo 2^ 58 .",
    "note": "In the first example there exist sequences: sequence ( 5, 5) with radix sum 0 , sequence ( 5, 6) with radix sum 1 , sequence ( 6, 5) with radix sum 1 , sequence ( 6, 6) with radix sum 2 .",
    "topics": [
      "fft",
      "math",
      "number theory"
    ],
    "id": "1103E"
  },
  {
    "title": "GCD Counting",
    "url": "https://codeforces.com/problemset/problem/1101/D",
    "history": "You are given a tree consisting of n vertices. A number is written on each vertex; the number on vertex i is equal to a_ i . Let' s denote the function g( x, y) as the greatest common divisor of the numbers written on the vertices belonging to the simple path from vertex x to vertex y ( including these two vertices) . Also let' s denote dist( x, y) as the number of vertices on the simple path between vertices x and y , including the endpoints. dist( x, x) = 1 for every vertex x . Your task is calculate the maximum value of dist( x, y) among such pairs of vertices that g( x, y) > 1 .",
    "input": "The first line contains one integer n \u2014 the number of vertices ( 1 \u2264 n \u2264 2 \u00b7 10^ 5) . The second line contains n integers a_ 1 , a_ 2 , . . . , a_ n ( 1 \u2264 a_ i \u2264 2 \u00b7 10^ 5) \u2014 the numbers written on vertices. Then n - 1 lines follow, each containing two integers x and y ( 1 \u2264 x, y \u2264 n, x y) denoting an edge connecting vertex x with vertex y . It is guaranteed that these edges form a tree.",
    "output": "If there is no pair of vertices x, y such that g( x, y) > 1 , print 0 . Otherwise print the maximum value of dist( x, y) among such pairs.",
    "note": "",
    "topics": [
      "data structures",
      "dfs and similar",
      "dp",
      "number theory",
      "trees"
    ],
    "id": "1101D"
  },
  {
    "title": "Fedya the Potter",
    "url": "https://codeforces.com/problemset/problem/1098/E",
    "history": "Fedya loves problems involving data structures. Especially ones about different queries on subsegments. Fedya had a nice array a_ 1, a_ 2, . . . a_ n and a beautiful data structure. This data structure, given l and r , 1 \u2264 l \u2264 r \u2264 n , could find the greatest integer d , such that d divides each of a_ l , a_ l+ 1 , . . . , a_ r . Fedya really likes this data structure, so he applied it to every non- empty contiguous subarray of array a , put all answers into the array and sorted it. He called this array b . It' s easy to see that array b contains n( n+ 1) / 2 elements. After that, Fedya implemented another cool data structure, that allowed him to find sum b_ l + b_ l+ 1 + . . . + b_ r for given l and r , 1 \u2264 l \u2264 r \u2264 n( n+ 1) / 2 . Surely, Fedya applied this data structure to every contiguous subarray of array b , called the result c and sorted it. Help Fedya find the lower median of array c . Recall that for a sorted array of length k the lower median is an element at position \u230ak + 1/ 2\u230b , if elements of the array are enumerated starting from 1 . For example, the lower median of array ( 1, 1, 2, 3, 6) is 2 , and the lower median of ( 0, 17, 23, 96) is 17 .",
    "input": "First line contains a single integer n \u2014 number of elements in array a ( 1 \u2264 n \u2264 50 000 ) . Second line contains n integers a_ 1, a_ 2, . . . , a_ n \u2014 elements of the array ( 1 \u2264 a_ i \u2264 100 000 ) .",
    "output": "Print a single integer \u2014 the lower median of array c .",
    "note": "In the first sample array b is equal to 3, 3, 6 , then array c is equal to 3, 3, 6, 6, 9, 12 , so the lower median is 6 . In the second sample b is 8, 8, 8 , c is 8, 8, 8, 16, 16, 24 , so the lower median is 8 .",
    "topics": [
      "binary search",
      "implementation",
      "math",
      "number theory"
    ],
    "id": "1098E"
  },
  {
    "title": "Alex and a TV Show",
    "url": "https://codeforces.com/problemset/problem/1097/F",
    "history": "Alex decided to try his luck in TV shows. He once went to the quiz named \" What' s That Word? ! \" . After perfectly answering the questions \" How is a pseudonym commonly referred to in the Internet? \" ( \" Um. . . a nick? \" ) , \" After which famous inventor we name the unit of the magnetic field strength? \" ( \" Um. . . Nikola Tesla? \" ) and \" Which rock band performs \" How You Remind Me\" ? \" ( \" Um. . . Nickelback? \" ) , he decided to apply to a little bit more difficult TV show: \" What' s in This Multiset? ! \" . The rules of this TV show are as follows: there are n multisets numbered from 1 to n . Each of them is initially empty. Then, q events happen; each of them is in one of the four possible types: 1 x v \u2014 set the x - th multiset to a singleton { v} . 2 x y z \u2014 set the x - th multiset to a union of the y - th and the z - th multiset. For example: { 1, 3} \u222a{ 1, 4, 4} = { 1, 1, 3, 4, 4} . 3 x y z \u2014 set the x - th multiset to a product of the y - th and the z - th multiset. The product A \u00d7 B of two multisets A , B is defined as { ( a, b) | a \u2208 A, b \u2208 B } , where ( p, q) is the greatest common divisor of p and q . For example: { 2, 2, 3} \u00d7{ 1, 4, 6} = { 1, 2, 2, 1, 2, 2, 1, 1, 3} . 4 x v \u2014 the participant is asked how many times number v occurs in the x - th multiset. As the quiz turned out to be too hard in the past, participants should now give the answers modulo 2 only. Note, that x , y and z described above are not necessarily different. In events of types 2 and 3 , the sum or the product is computed first, and then the assignment is performed. Alex is confused by the complicated rules of the show. Can you help him answer the requests of the 4 - th type?",
    "input": "The first line contains two integers n and q ( 1 \u2264 n \u2264 10^ 5 , 1 \u2264 q \u2264 10^ 6 ) \u2014 the number of multisets and the number of events. Each of the following q lines describes next event in the format given in statement. It' s guaranteed that 1 \u2264 x, y, z \u2264 n and 1 \u2264 v \u2264 7000 always holds. It' s guaranteed that there will be at least one event of the 4 - th type.",
    "output": "Print a string which consists of digits 0 and 1 only, and has length equal to the number of events of the 4 - th type. The i - th digit of the string should be equal to the answer for the i - th query of the 4 - th type.",
    "note": "Here is how the multisets look in the example test after each of the events; i is the number of queries processed so far:",
    "topics": [
      "bitmasks",
      "combinatorics",
      "number theory"
    ],
    "id": "1097F"
  },
  {
    "title": "Makoto and a Blackboard",
    "url": "https://codeforces.com/problemset/problem/1097/D",
    "history": "Makoto has a big blackboard with a positive integer n written on it. He will perform the following action exactly k times: Suppose the number currently written on the blackboard is v . He will randomly pick one of the divisors of v ( possibly 1 and v ) and replace v with this divisor. As Makoto uses his famous random number generator ( RNG) and as he always uses 58 as his generator seed, each divisor is guaranteed to be chosen with equal probability. He now wonders what is the expected value of the number written on the blackboard after k steps. It can be shown that this value can be represented as P/ Q where P and Q are coprime integers and Q \u2261\u03380 10^ 9+ 7 . Print the value of P \u00b7 Q^ - 1 modulo 10^ 9+ 7 .",
    "input": "The only line of the input contains two integers n and k ( 1 \u2264 n \u2264 10^ 15 , 1 \u2264 k \u2264 10^ 4 ) .",
    "output": "Print a single integer \u2014 the expected value of the number on the blackboard after k steps as P \u00b7 Q^ - 110^ 9+ 7 for P , Q defined above.",
    "note": "In the first example, after one step, the number written on the blackboard is 1 , 2 , 3 or 6 \u2014 each occurring with equal probability. Hence, the answer is 1+ 2+ 3+ 6/ 4= 3 . In the second example, the answer is equal to 1 \u00b79/ 16+ 2 \u00b73/ 16+ 3 \u00b73/ 16+ 6 \u00b71/ 16= 15/ 8 .",
    "topics": [
      "dp",
      "math",
      "number theory",
      "probabilities"
    ],
    "id": "1097D"
  },
  {
    "title": "New Year and the Factorisation Collaboration",
    "url": "https://codeforces.com/problemset/problem/1091/G",
    "history": "Integer factorisation is hard. The RSA Factoring Challenge offered 100 000 for factoring RSA- 1024 , a 1024 - bit long product of two prime numbers. To this date, nobody was able to claim the prize. We want you to factorise a 1024 - bit number. Since your programming language of choice might not offer facilities for handling large integers, we will provide you with a very simple calculator. To use this calculator, you can print queries on the standard output and retrieve the results from the standard input. The operations are as follows: + x y where x and y are integers between 0 and n- 1 . Returns ( x+ y) n . - x y where x and y are integers between 0 and n- 1 . Returns ( x- y) n . * x y where x and y are integers between 0 and n- 1 . Returns ( x \u00b7y) n . / x y where x and y are integers between 0 and n- 1 and y is coprime with n . Returns ( x \u00b7y^ - 1) n where y^ - 1 is multiplicative inverse of y modulo n . If y is not coprime with n , then - 1 is returned instead. sqrt x where x is integer between 0 and n- 1 coprime with n . Returns y such that y^ 2 n = x . If there are multiple such integers, only one of them is returned. If there are none, - 1 is returned instead. ^ x y where x and y are integers between 0 and n- 1 . Returns x^ y n . Find the factorisation of n that is a product of between 2 and 10 distinct prime numbers, all of form 4x + 3 for some integer x . Because of technical issues, we restrict number of requests to 100 . InteractionAfter printing a query do not forget to output end of line and flush the output. Otherwise you will get Idleness limit exceeded. To do this, use: fflush( stdout) or cout. flush( ) in C+ + ; System. out. flush( ) in Java; flush( output) in Pascal; stdout. flush( ) in Python; see documentation for other languages. The number of queries is not limited. However, your program must ( as always) fit in the time limit. The run time of the interactor is also counted towards the time limit. The maximum runtime of each query is given below. + x y \u2014 up to 1 ms. - x y \u2014 up to 1 ms. * x y \u2014 up to 1 ms. / x y \u2014 up to 350 ms. sqrt x \u2014 up to 80 ms. ^ x y \u2014 up to 350 ms. Note that the sample input contains extra empty lines so that it easier to read. The real input will not contain any empty lines and you do not need to output extra empty lines.",
    "input": "The only line contains a single integer n ( 21 \u2264 n \u2264 2^ 1024 ) . It is guaranteed that n is a product of between 2 and 10 distinct prime numbers, all of form 4x + 3 for some integer x .",
    "output": "You can print as many queries as you wish, adhering to the time limit ( see the Interaction section for more details) . When you think you know the answer, output a single line of form ! k p_ 1 p_ 2 . . . p_ k, where k is the number of prime factors of n , and p_ i are the distinct prime factors. You may print the factors in any order. Hacks inputFor hacks, use the following format: . The first should contain k ( 2 \u2264 k \u2264 10 ) \u2014 the number of prime factors of n . The second should contain k space separated integers p_ 1, p_ 2, . . . , p_ k ( 21 \u2264 n \u2264 2^ 1024 ) \u2014 the prime factors of n . All prime factors have to be of form 4x + 3 for some integer x . They all have to be distinct.",
    "note": "We start by reading the first line containing the integer n = 21 . Then, we ask for: ( 12 + 16) 21 = 28 21 = 7 . ( 6 - 10) 21 = - 4 21 = 17 . ( 8 \u00b7 15) 21 = 120 21 = 15 . ( 5 \u00b7 4^ - 1) 21 = ( 5 \u00b7 16) 21 = 80 21 = 17 . Square root of 16 . The answer is 11 , as ( 11 \u00b7 11) 21 = 121 21 = 16 . Note that the answer may as well be 10 . Square root of 5 . There is no x such that x^ 2 21 = 5 , so the output is - 1 . ( 6^ 12) 21 = 2176782336 21 = 15 . We conclude that our calculator is working, stop fooling around and realise that 21 = 3 \u00b7 7 .",
    "topics": [
      "interactive",
      "math",
      "number theory"
    ],
    "id": "1091G"
  },
  {
    "title": "New Year and the Sphere Transmission",
    "url": "https://codeforces.com/problemset/problem/1091/C",
    "history": "There are n people sitting in a circle, numbered from 1 to n in the order in which they are seated. That is, for all i from 1 to n- 1 , the people with id i and i+ 1 are adjacent. People with id n and 1 are adjacent as well. The person with id 1 initially has a ball. He picks a positive integer k at most n , and passes the ball to his k - th neighbour in the direction of increasing ids, that person passes the ball to his k - th neighbour in the same direction, and so on until the person with the id 1 gets the ball back. When he gets it back, people do not pass the ball any more. For instance, if n = 6 and k = 4 , the ball is passed in order [ 1, 5, 3, 1] . Consider the set of all people that touched the ball. The fun value of the game is the sum of the ids of people that touched it. In the above example, the fun value would be 1 + 5 + 3 = 9 . Find and report the set of possible fun values for all choices of positive integer k . It can be shown that under the constraints of the problem, the ball always gets back to the 1 - st player after finitely many steps, and there are no more than 10^ 5 possible fun values for given n .",
    "input": "The only line consists of a single integer n ( 2 \u2264 n \u2264 10^ 9 ) \u2014 the number of people playing with the ball.",
    "output": "Suppose the set of all fun values is f_ 1, f_ 2, . . . , f_ m . Output a single line containing m space separated integers f_ 1 through f_ m in increasing order.",
    "note": "In the first sample, we' ve already shown that picking k = 4 yields fun value 9 , as does k = 2 . Picking k = 6 results in fun value of 1 . For k = 3 we get fun value 5 and with k = 1 or k = 5 we get 21 . In the second sample, the values 1 , 10 , 28 , 64 and 136 are achieved for instance for k = 16 , 8 , 4 , 10 and 11 , respectively.",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "1091C"
  },
  {
    "title": "Missing Numbers",
    "url": "https://codeforces.com/problemset/problem/1081/E",
    "history": "Chouti is working on a strange math problem. There was a sequence of n positive integers x_ 1, x_ 2, . . . , x_ n , where n is even. The sequence was very special, namely for every integer t from 1 to n , x_ 1+ x_ 2+ . . . + x_ t is a square of some integer number ( that is, a perfect square) . Somehow, the numbers with odd indexes turned to be missing, so he is only aware of numbers on even positions, i. e. x_ 2, x_ 4, x_ 6, . . . , x_ n . The task for him is to restore the original sequence. Again, it' s your turn to help him. The problem setter might make mistakes, so there can be no possible sequence at all. If there are several possible sequences, you can output any.",
    "input": "The first line contains an even number n ( 2 \u2264 n \u2264 10^ 5 ) . The second line contains n/ 2 positive integers x_ 2, x_ 4, . . . , x_ n ( 1 \u2264 x_ i \u2264 2 \u00b7 10^ 5 ) .",
    "output": "If there are no possible sequence, print \" No\" . Otherwise, print \" Yes\" and then n positive integers x_ 1, x_ 2, . . . , x_ n ( 1 \u2264 x_ i \u2264 10^ 13 ) , where x_ 2, x_ 4, . . . , x_ n should be same as in input data. If there are multiple answers, print any. Note, that the limit for x_ i is larger than for input data. It can be proved that in case there is an answer, there must be a possible sequence satisfying 1 \u2264 x_ i \u2264 10^ 13 .",
    "note": "In the first example x_ 1= 4 x_ 1+ x_ 2= 9 x_ 1+ x_ 2+ x_ 3= 25 x_ 1+ x_ 2+ x_ 3+ x_ 4= 36 x_ 1+ x_ 2+ x_ 3+ x_ 4+ x_ 5= 100 x_ 1+ x_ 2+ x_ 3+ x_ 4+ x_ 5+ x_ 6= 144 All these numbers are perfect squares. In the second example, x_ 1= 100 , x_ 1+ x_ 2= 10000 . They are all perfect squares. There' re other answers possible. For example, x_ 1= 22500 is another answer. In the third example, it is possible to show, that no such sequence exists.",
    "topics": [
      "binary search",
      "constructive algorithms",
      "greedy",
      "math",
      "number theory"
    ],
    "id": "1081E"
  },
  {
    "title": "Divisor Subtraction",
    "url": "https://codeforces.com/problemset/problem/1076/B",
    "history": "You are given an integer number n . The following algorithm is applied to it: if n = 0 , then end algorithm; find the smallest prime divisor d of n ; subtract d from n and go to step 1 . Determine the number of subtrations the algorithm will make.",
    "input": "The only line contains a single integer n ( 2 \u2264 n \u2264 10^ 10 ) .",
    "output": "Print a single integer \u2014 the number of subtractions the algorithm will make.",
    "note": "In the first example 5 is the smallest prime divisor, thus it gets subtracted right away to make a 0 . In the second example 2 is the smallest prime divisor at both steps.",
    "topics": [
      "implementation",
      "math",
      "number theory"
    ],
    "id": "1076B"
  },
  {
    "title": "Find a Number",
    "url": "https://codeforces.com/problemset/problem/1070/A",
    "history": "You are given two positive integers d and s . Find minimal positive integer n which is divisible by d and has sum of digits equal to s .",
    "input": "The first line contains two positive integers d and s ( 1 \u2264 d \u2264 500, 1 \u2264 s \u2264 5000 ) separated by space.",
    "output": "Print the required number or - 1 if it doesn' t exist.",
    "note": "",
    "topics": [
      "dp",
      "graphs",
      "number theory",
      "shortest paths"
    ],
    "id": "1070A"
  },
  {
    "title": "LCM",
    "url": "https://codeforces.com/problemset/problem/1068/B",
    "history": "Ivan has number b . He is sorting through the numbers a from 1 to 10^ 18 , and for every a writes [ a, b] / a on blackboard. Here [ a, b] stands for least common multiple of a and b . Ivan is very lazy, that' s why this task bored him soon. But he is interested in how many different numbers he would write on the board if he would finish the task. Help him to find the quantity of different numbers he would write on the board.",
    "input": "The only line contains one integer \u2014 b ( 1 \u2264 b \u2264 10^ 10) .",
    "output": "Print one number \u2014 answer for the problem.",
    "note": "In the first example [ a, 1] = a , therefore [ a, b] / a is always equal to 1 . In the second example [ a, 2] can be equal to a or 2 \u00b7 a depending on parity of a . [ a, b] / a can be equal to 1 and 2 .",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "1068B"
  },
  {
    "title": "Math",
    "url": "https://codeforces.com/problemset/problem/1062/B",
    "history": "JATC' s math teacher always gives the class some interesting math problems so that they don' t get bored. Today the problem is as follows. Given an integer n , you can perform the following operations zero or more times: mul x : multiplies n by x ( where x is an arbitrary positive integer) . sqrt: replaces n with \u221a( n) ( to apply this operation, \u221a( n) must be an integer) . You can perform these operations as many times as you like. What is the minimum value of n , that can be achieved and what is the minimum number of operations, to achieve that minimum value? Apparently, no one in the class knows the answer to this problem, maybe you can help them?",
    "input": "The only line of the input contains a single integer n ( 1 \u2264 n \u2264 10^ 6 ) \u2014 the initial number.",
    "output": "Print two integers: the minimum integer n that can be achieved using the described operations and the minimum number of operations required.",
    "note": "In the first example, you can apply the operation mul 5 to get 100 and then sqrt to get 10 . In the second example, you can first apply sqrt to get 72 , then mul 18 to get 1296 and finally two more sqrt and you get 6 . Note, that even if the initial value of n is less or equal 10^ 6 , it can still become greater than 10^ 6 after applying one or more operations.",
    "topics": [
      "greedy",
      "math",
      "number theory"
    ],
    "id": "1062B"
  },
  {
    "title": "Multiplicity",
    "url": "https://codeforces.com/problemset/problem/1061/C",
    "history": "You are given an integer array a_ 1, a_ 2, . . . , a_ n . The array b is called to be a subsequence of a if it is possible to remove some elements from a to get b . Array b_ 1, b_ 2, . . . , b_ k is called to be good if it is not empty and for every i ( 1 \u2264 i \u2264 k ) b_ i is divisible by i . Find the number of good subsequences in a modulo 10^ 9 + 7 . Two subsequences are considered different if index sets of numbers included in them are different. That is, the values \u200bof the elements \u200bdo not matter in the comparison of subsequences. In particular, the array a has exactly 2^ n - 1 different subsequences ( excluding an empty subsequence) .",
    "input": "The first line contains an integer n ( 1 \u2264 n \u2264 100 000 ) \u2014 the length of the array a . The next line contains integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 6 ) .",
    "output": "Print exactly one integer \u2014 the number of good subsequences taken modulo 10^ 9 + 7 .",
    "note": "In the first example, all three non- empty possible subsequences are good: { 1} , { 1, 2} , { 2} In the second example, the possible good subsequences are: { 2} , { 2, 2} , { 2, 22} , { 2, 14} , { 2} , { 2, 22} , { 2, 14} , { 1} , { 1, 22} , { 1, 14} , { 22} , { 22, 14} , { 14} . Note, that some subsequences are listed more than once, since they occur in the original array multiple times.",
    "topics": [
      "data structures",
      "dp",
      "implementation",
      "math",
      "number theory"
    ],
    "id": "1061C"
  },
  {
    "title": "Divide Candies",
    "url": "https://codeforces.com/problemset/problem/1056/B",
    "history": "Arkady and his friends love playing checkers on an n \u00d7 n field. The rows and the columns of the field are enumerated from 1 to n . The friends have recently won a championship, so Arkady wants to please them with some candies. Remembering an old parable ( but not its moral) , Arkady wants to give to his friends one set of candies per each cell of the field: the set of candies for cell ( i, j) will have exactly ( i^ 2 + j^ 2) candies of unique type. There are m friends who deserve the present. How many of these n \u00d7 n sets of candies can be split equally into m parts without cutting a candy into pieces? Note that each set has to be split independently since the types of candies in different sets are different.",
    "input": "The only line contains two integers n and m ( 1 \u2264 n \u2264 10^ 9 , 1 \u2264 m \u2264 1000 ) \u2014 the size of the field and the number of parts to split the sets into.",
    "output": "Print a single integer \u2014 the number of sets that can be split equally.",
    "note": "In the first example, only the set for cell ( 3, 3) can be split equally ( 3^ 2 + 3^ 2 = 18 , which is divisible by m= 3 ) . In the second example, the sets for the following cells can be divided equally: ( 1, 2) and ( 2, 1) , since 1^ 2 + 2^ 2 = 5 , which is divisible by 5 ; ( 1, 3) and ( 3, 1) ; ( 2, 4) and ( 4, 2) ; ( 2, 6) and ( 6, 2) ; ( 3, 4) and ( 4, 3) ; ( 3, 6) and ( 6, 3) ; ( 5, 5) . In the third example, sets in all cells can be divided equally, since m = 1 .",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "1056B"
  },
  {
    "title": "Lucky Days",
    "url": "https://codeforces.com/problemset/problem/1055/C",
    "history": "Bob and Alice are often participating in various programming competitions. Like many competitive programmers, Alice and Bob have good and bad days. They noticed, that their lucky and unlucky days are repeating with some period. For example, for Alice days [ l_ a; r_ a] are lucky, then there are some unlucky days: [ r_ a + 1; l_ a + t_ a - 1] , and then there are lucky days again: [ l_ a + t_ a; r_ a + t_ a] and so on. In other words, the day is lucky for Alice if it lies in the segment [ l_ a + k t_ a; r_ a + k t_ a] for some non- negative integer k . The Bob' s lucky day have similar structure, however the parameters of his sequence are different: l_ b , r_ b , t_ b . So a day is a lucky for Bob if it lies in a segment [ l_ b + k t_ b; r_ b + k t_ b] , for some non- negative integer k . Alice and Bob want to participate in team competitions together and so they want to find out what is the largest possible number of consecutive days, which are lucky for both Alice and Bob.",
    "input": "The first line contains three integers l_ a , r_ a , t_ a ( 0 \u2264 l_ a \u2264 r_ a \u2264 t_ a - 1, 2 \u2264 t_ a \u2264 10^ 9 ) and describes Alice' s lucky days. The second line contains three integers l_ b , r_ b , t_ b ( 0 \u2264 l_ b \u2264 r_ b \u2264 t_ b - 1, 2 \u2264 t_ b \u2264 10^ 9 ) and describes Bob' s lucky days. It is guaranteed that both Alice and Bob have some unlucky days.",
    "output": "Print one integer: the maximum number of days in the row that are lucky for both Alice and Bob.",
    "note": "The graphs below correspond to the two sample tests and show the lucky and unlucky days of Alice and Bob as well as the possible solutions for these tests.",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "1055C"
  },
  {
    "title": "Epic Convolution",
    "url": "https://codeforces.com/problemset/problem/1054/H",
    "history": "You are given two arrays a_ 0, a_ 1, . . . , a_ n - 1 and b_ 0, b_ 1, . . . , b_ m- 1 , and an integer c . Compute the following sum: \u2211_ i= 0^ n- 1\u2211_ j= 0^ m- 1 a_ i b_ j c^ i^ 2 j^ 3 Since it' s value can be really large, print it modulo 490019 .",
    "input": "First line contains three integers n , m and c ( 1 \u2264 n, m \u2264 100 000 , 1 \u2264 c < 490019 ) . Next line contains exactly n integers a_ i and defines the array a ( 0 \u2264 a_ i \u2264 1000 ) . Last line contains exactly m integers b_ i and defines the array b ( 0 \u2264 b_ i \u2264 1000 ) .",
    "output": "Print one integer \u2014 value of the sum modulo 490019 .",
    "note": "In the first example, the only non- zero summand corresponds to i = 1 , j = 1 and is equal to 1 \u00b7 1 \u00b7 3^ 1 = 3 . In the second example, all summands are equal to 1 .",
    "topics": [
      "chinese remainder theorem",
      "fft",
      "math",
      "number theory"
    ],
    "id": "1054H"
  },
  {
    "title": "Relatively Prime Pairs",
    "url": "https://codeforces.com/problemset/problem/1051/B",
    "history": "You are given a set of all integers from l to r inclusive, l < r , ( r - l + 1) \u2264 3 \u00b7 10^ 5 and ( r - l) is always odd. You want to split these numbers into exactly r - l + 1/ 2 pairs in such a way that for each pair ( i, j) the greatest common divisor of i and j is equal to 1 . Each number should appear in exactly one of the pairs. Print the resulting pairs or output that no solution exists. If there are multiple solutions, print any of them.",
    "input": "The only line contains two integers l and r ( 1 \u2264 l < r \u2264 10^ 18 , r - l + 1 \u2264 3 \u00b7 10^ 5 , ( r - l) is odd) .",
    "output": "If any solution exists, print \" YES\" in the first line. Each of the next r - l + 1/ 2 lines should contain some pair of integers. GCD of numbers in each pair should be equal to 1 . All ( r - l + 1) numbers should be pairwise distinct and should have values from l to r inclusive. If there are multiple solutions, print any of them. If there exists no solution, print \" NO\" .",
    "note": "",
    "topics": [
      "greedy",
      "math",
      "number theory"
    ],
    "id": "1051B"
  },
  {
    "title": "Space Isaac",
    "url": "https://codeforces.com/problemset/problem/1045/B",
    "history": "Everybody seems to think that the Martians are green, but it turns out they are metallic pink and fat. Ajs has two bags of distinct nonnegative integers. The bags are disjoint, and the union of the sets of numbers in the bags is { 0, 1, . . . , M- 1} , for some positive integer M . Ajs draws a number from the first bag and a number from the second bag, and then sums them modulo M . What are the residues modulo M that Ajs cannot obtain with this action?",
    "input": "The first line contains two positive integer N ( 1 \u2264 N \u2264 200 000 ) and M ( N+ 1 \u2264 M \u2264 10^ 9 ) , denoting the number of the elements in the first bag and the modulus, respectively. The second line contains N nonnegative integers a_ 1, a_ 2, . . . , a_ N ( 0 \u2264 a_ 1< a_ 2< . . . < a_ N< M ) , the contents of the first bag.",
    "output": "In the first line, output the cardinality K of the set of residues modulo M which Ajs cannot obtain. In the second line of the output, print K space- separated integers greater or equal than zero and less than M , which represent the residues Ajs cannot obtain. The outputs should be sorted in increasing order of magnitude. If K = 0, do not output the second line.",
    "note": "In the first sample, the first bag and the second bag contain { 3, 4} and { 0, 1, 2} , respectively. Ajs can obtain every residue modulo 5 except the residue 2 : 4+ 1 \u2261 0, 4+ 2 \u2261 1, 3+ 0 \u2261 3, 3+ 1 \u2261 4 modulo 5 . One can check that there is no choice of elements from the first and the second bag which sum to 2 modulo 5 . In the second sample, the contents of the first bag are { 5, 25, 125, 625} , while the second bag contains all other nonnegative integers with at most 9 decimal digits. Every residue modulo 1 000 000 000 can be obtained as a sum of an element in the first bag and an element in the second bag.",
    "topics": [
      "hashing",
      "number theory"
    ],
    "id": "1045B"
  },
  {
    "title": "Make It One",
    "url": "https://codeforces.com/problemset/problem/1043/F",
    "history": "Janusz is a businessman. He owns a company \" Januszex\" , which produces games for teenagers. Last hit of Januszex was a cool one- person game \" Make it one\" . The player is given a sequence of n integers a_ i . It is allowed to select any subset of them, and the score is equal to the greatest common divisor of selected elements. The goal is to take as little elements as it is possible, getting the score 1 . Now Janusz wonders, for given sequence, how much elements should the player choose?",
    "input": "The first line contains an only integer n ( 1 \u2264 n \u2264 300 000 ) \u2014 the number of integers in the sequence. The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 300 000 ) .",
    "output": "If there is no subset of the given sequence with gcd equal to 1 , output - 1. Otherwise, output exactly one integer \u2014 the size of the smallest subset with gcd equal to 1 .",
    "note": "In the first example, selecting a subset of all numbers gives a gcd of 1 and for all smaller subsets the gcd is greater than 1 . In the second example, for all subsets of numbers the gcd is at least 2 .",
    "topics": [
      "bitmasks",
      "combinatorics",
      "dp",
      "math",
      "number theory",
      "shortest paths"
    ],
    "id": "1043F"
  },
  {
    "title": "Relatively Prime Powers",
    "url": "https://codeforces.com/problemset/problem/1036/F",
    "history": "Consider some positive integer x . Its prime factorization will be of form x = 2^ k_ 1\u00b7 3^ k_ 2\u00b7 5^ k_ 3\u00b7. . . Let' s call x elegant if the greatest common divisor of the sequence k_ 1, k_ 2, . . . is equal to 1 . For example, numbers 5 = 5^ 1 , 12 = 2^ 2 \u00b7 3 , 72 = 2^ 3 \u00b7 3^ 2 are elegant and numbers 8 = 2^ 3 ( GCD = 3 ) , 2500 = 2^ 2 \u00b7 5^ 4 ( GCD = 2 ) are not. Count the number of elegant integers from 2 to n . Each testcase contains several values of n , for each of them you are required to solve the problem separately.",
    "input": "The first line contains a single integer T ( 1 \u2264 T \u2264 10^ 5 ) \u2014 the number of values of n in the testcase. Each of the next T lines contains a single integer n_ i ( 2 \u2264 n_ i \u2264 10^ 18 ) .",
    "output": "Print T lines \u2014 the i - th line should contain the number of elegant numbers from 2 to n_ i .",
    "note": "Here is the list of non- elegant numbers up to 10 : 4 = 2^ 2, GCD = 2 ; 8 = 2^ 3, GCD = 3 ; 9 = 3^ 2, GCD = 2 . The rest have GCD = 1 .",
    "topics": [
      "combinatorics",
      "math",
      "number theory"
    ],
    "id": "1036F"
  },
  {
    "title": "Covered Points",
    "url": "https://codeforces.com/problemset/problem/1036/E",
    "history": "You are given n segments on a Cartesian plane. Each segment' s endpoints have integer coordinates. Segments can intersect with each other. No two segments lie on the same line. Count the number of distinct points with integer coordinates, which are covered by at least one segment.",
    "input": "The first line contains a single integer n ( 1 \u2264 n \u2264 1000 ) \u2014 the number of segments. Each of the next n lines contains four integers Ax_ i, Ay_ i, Bx_ i, By_ i ( - 10^ 6 \u2264 Ax_ i, Ay_ i, Bx_ i, By_ i \u2264 10^ 6 ) \u2014 the coordinates of the endpoints A , B ( A B ) of the i - th segment. It is guaranteed that no two segments lie on the same line.",
    "output": "Print a single integer \u2014 the number of distinct points with integer coordinates, which are covered by at least one segment.",
    "note": "The image for the first example: Several key points are marked blue, the answer contains some non- marked points as well. The image for the second example:",
    "topics": [
      "fft",
      "geometry",
      "number theory"
    ],
    "id": "1036E"
  },
  {
    "title": "Region Separation",
    "url": "https://codeforces.com/problemset/problem/1034/C",
    "history": "There are n cities in the Kingdom of Autumn, numbered from 1 to n . People can travel between any two cities using n- 1 two- directional roads. This year, the government decides to separate the kingdom. There will be regions of different levels. The whole kingdom will be the region of level 1 . Each region of i - th level should be separated into several ( at least two) regions of i+ 1 - th level, unless i - th level is the last level. Each city should belong to exactly one region of each level and for any two cities in the same region, it should be possible to travel between them passing the cities in the same region only. According to research, for each city i , there is a value a_ i , which describes the importance of this city. All regions of the same level should have an equal sum of city importances. Your task is to find how many plans there are to determine the separation of the regions that all the conditions are satisfied. Two plans are considered different if and only if their numbers of levels are different or there exist two cities in the same region of one level in one plan but in different regions of this level in the other plan. Since the answer may be very large, output it modulo 10^ 9+ 7 .",
    "input": "The first line contains one integer n ( 1 \u2264 n \u2264 10^ 6 ) \u2014 the number of the cities. The second line contains n integers, the i - th of which is a_ i ( 1 \u2264 a_ i \u2264 10^ 9 ) \u2014 the value of each city. The third line contains n- 1 integers, p_ 1, p_ 2, . . . , p_ n- 1 ; p_ i ( p_ i \u2264 i ) describes a road between cities p_ i and i+ 1 .",
    "output": "Print one integer \u2014 the number of different plans modulo 10^ 9+ 7 .",
    "note": "For the first example, there are 4 different plans: Plan 1 : Level- 1 : { 1, 2, 3, 4} . Plan 2 : Level- 1 : { 1, 2, 3, 4} , Level- 2 : { 1, 2} , { 3, 4} . Plan 3 : Level- 1 : { 1, 2, 3, 4} , Level- 2 : { 1} , { 2} , { 3} , { 4} . Plan 4 : Level- 1 : { 1, 2, 3, 4} , Level- 2 : { 1, 2} , { 3, 4} , Level- 3 : { 1} , { 2} , { 3} , { 4} . For the second example, there are 2 different plans: Plan 1 : Level- 1 : { 1, 2, 3, 4} . Plan 2 : Level- 1 : { 1, 2, 3, 4} , Level- 2 : { 1} , { 2} , { 3} , { 4} . For the third example, there are 3 different plans: Plan 1 : Level- 1 : { 1, 2, 3, 4} . Plan 2 : Level- 1 : { 1, 2, 3, 4} , Level- 2 : { 1, 2} , { 3, 4} . Plan 3 : Level- 1 : { 1, 2, 3, 4} , Level- 2 : { 1, 3} , { 2} , { 4} .",
    "topics": [
      "combinatorics",
      "dp",
      "number theory",
      "trees"
    ],
    "id": "1034C"
  },
  {
    "title": "Enlarge GCD",
    "url": "https://codeforces.com/problemset/problem/1034/A",
    "history": "Mr. F has n positive integers, a_ 1, a_ 2, . . . , a_ n . He thinks the greatest common divisor of these integers is too small. So he wants to enlarge it by removing some of the integers. But this problem is too simple for him, so he does not want to do it by himself. If you help him, he will give you some scores in reward. Your task is to calculate the minimum number of integers you need to remove so that the greatest common divisor of the remaining integers is bigger than that of all integers.",
    "input": "The first line contains an integer n ( 2 \u2264 n \u2264 3 \u00b7 10^ 5 ) \u2014 the number of integers Mr. F has. The second line contains n integers, a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 1. 5 \u00b7 10^ 7 ) .",
    "output": "Print an integer \u2014 the minimum number of integers you need to remove so that the greatest common divisor of the remaining integers is bigger than that of all integers. You should not remove all of the integers. If there is no solution, print \u00ab- 1\u00bb ( without quotes) .",
    "note": "In the first example, the greatest common divisor is 1 in the beginning. You can remove 1 so that the greatest common divisor is enlarged to 2 . The answer is 1 . In the second example, the greatest common divisor is 3 in the beginning. You can remove 6 and 9 so that the greatest common divisor is enlarged to 15 . There is no solution which removes only one integer. So the answer is 2 . In the third example, there is no solution to enlarge the greatest common divisor. So the answer is - 1 .",
    "topics": [
      "number theory"
    ],
    "id": "1034A"
  },
  {
    "title": "Divisors",
    "url": "https://codeforces.com/problemset/problem/1033/D",
    "history": "You are given n integers a_ 1, a_ 2, . . . , a_ n . Each of a_ i has between 3 and 5 divisors. Consider a = \u220f a_ i \u2014 the product of all input integers. Find the number of divisors of a . As this number may be very large, print it modulo prime number 998244353 . InteractionFrom the technical side, this problem is interactive. Therefore, do not forget to output end of line and flush the output. Also, do not read more than you need. To flush the output, use: fflush( stdout) or cout. flush( ) in C+ + ; System. out. flush( ) in Java; flush( output) in Pascal; stdout. flush( ) in Python; see documentation for other languages.",
    "input": "The first line contains a single integer n ( 1 \u2264 n \u2264 500 ) \u2014 the number of numbers. Each of the next n lines contains an integer a_ i ( 1 \u2264 a_ i \u2264 2\u00b7 10^ 18 ) . It is guaranteed that the number of divisors of each a_ i is between 3 and 5 .",
    "output": "Print a single integer d \u2014 the number of divisors of the product a_ 1 \u00b7 a_ 2 \u00b7. . . \u00b7 a_ n modulo 998244353 . Hacks inputFor hacks, the input needs to be provided in a special format. The first line contains an integer n ( 1 \u2264 n \u2264 500 ) \u2014 the number of numbers. Each of the next n lines contains a prime factorization of a_ i . The line contains an integer k_ i ( 2 \u2264 k_ i \u2264 4 ) \u2014 the number of prime factors of a_ i and k_ i integers p_ i, j ( 2 \u2264 p_ i, j\u2264 2 \u00b7 10^ 18 ) where p_ i, j is the j - th prime factor of a_ i . Before supplying the input to the contestant, a_ i = \u220f p_ i, j are calculated. Note that each p_ i, j must be prime, each computed a_ i must satisfy a_ i \u2264 2\u00b710^ 18 and must have between 3 and 5 divisors. The contestant will be given only a_ i , and not its prime factorization. For example, you need to use this test to get the first sample: 32 3 32 3 52 11 13",
    "note": "In the first case, a = 19305 . Its divisors are 1, 3, 5, 9, 11, 13, 15, 27, 33, 39, 45, 55, 65, 99, 117, 135, 143, 165, 195, 297, 351, 429, 495, 585, 715, 1287, 1485, 1755, 2145, 3861, 6435, 19305 \u2014 a total of 32 . In the second case, a has four divisors: 1 , 86028121 , 86028157 , and 7400840699802997 . In the third case a = 202600445671925364698739061629083877981962069703140268516570564888699 375209477214045102253766023072401557491054453690213483547 . In the fourth case, a= 512= 2^ 9 , so answer equals to 10 .",
    "topics": [
      "interactive",
      "math",
      "number theory"
    ],
    "id": "1033D"
  },
  {
    "title": "Square Difference",
    "url": "https://codeforces.com/problemset/problem/1033/B",
    "history": "Alice has a lovely piece of cloth. It has the shape of a square with a side of length a centimeters. Bob also wants such piece of cloth. He would prefer a square with a side of length b centimeters ( where b < a ) . Alice wanted to make Bob happy, so she cut the needed square out of the corner of her piece and gave it to Bob. Now she is left with an ugly L shaped cloth ( see pictures below) . Alice would like to know whether the area of her cloth expressed in square centimeters is prime. Could you help her to determine it?",
    "input": "The first line contains a number t ( 1 \u2264 t \u2264 5 ) \u2014 the number of test cases. Each of the next t lines describes the i - th test case. It contains two integers a and b ( 1 \u2264 b < a \u2264 10^ 11) \u2014 the side length of Alice' s square and the side length of the square that Bob wants.",
    "output": "Print t lines, where the i - th line is the answer to the i - th test case. Print \" YES\" ( without quotes) if the area of the remaining piece of cloth is prime, otherwise print \" NO\" . You can print each letter in an arbitrary case ( upper or lower) .",
    "note": "The figure below depicts the first test case. The blue part corresponds to the piece which belongs to Bob, and the red part is the piece that Alice keeps for herself. The area of the red part is 6^ 2 - 5^ 2 = 36 - 25 = 11 , which is prime, so the answer is \" YES\" . In the second case, the area is 16^ 2 - 13^ 2 = 87 , which is divisible by 3 . In the third case, the area of the remaining piece is 61690850361^ 2 - 24777622630^ 2 = 3191830435068605713421 . This number is not prime because 3191830435068605713421 = 36913227731 \u00b7 86468472991 . In the last case, the area is 34^ 2 - 33^ 2 = 67 .",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "1033B"
  },
  {
    "title": "Linear Congruential Generator",
    "url": "https://codeforces.com/problemset/problem/1030/G",
    "history": "You are given a tuple generator f^ ( k) = ( f_ 1^ ( k) , f_ 2^ ( k) , . . . , f_ n^ ( k) ) , where f_ i^ ( k) = ( a_ i \u00b7 f_ i^ ( k - 1) + b_ i) p_ i and f^ ( 0) = ( x_ 1, x_ 2, . . . , x_ n) . Here x y denotes the remainder of x when divided by y . All p_ i are primes. One can see that with fixed sequences x_ i , y_ i , a_ i the tuples f^ ( k) starting from some index will repeat tuples with smaller indices. Calculate the maximum number of different tuples ( from all f^ ( k) for k \u2265 0 ) that can be produced by this generator, if x_ i , a_ i , b_ i are integers in the range [ 0, p_ i - 1] and can be chosen arbitrary. The answer can be large, so print the remainder it gives when divided by 10^ 9 + 7",
    "input": "The first line contains one integer n ( 1 \u2264 n \u2264 2 \u00b7 10^ 5 ) \u2014 the number of elements in the tuple. The second line contains n space separated prime numbers \u2014 the modules p_ 1, p_ 2, . . . , p_ n ( 2 \u2264 p_ i \u2264 2 \u00b7 10^ 6 ) .",
    "output": "Print one integer \u2014 the maximum number of different tuples modulo 10^ 9 + 7 .",
    "note": "In the first example we can choose next parameters: a = [ 1, 1, 1, 1] , b = [ 1, 1, 1, 1] , x = [ 0, 0, 0, 0] , then f_ i^ ( k) = k p_ i . In the second example we can choose next parameters: a = [ 1, 1, 2] , b = [ 1, 1, 0] , x = [ 0, 0, 1] .",
    "topics": [
      "number theory"
    ],
    "id": "1030G"
  },
  {
    "title": "Vasya and Triangle",
    "url": "https://codeforces.com/problemset/problem/1030/D",
    "history": "Vasya has got three integers n , m and k . He' d like to find three integer points ( x_ 1, y_ 1) , ( x_ 2, y_ 2) , ( x_ 3, y_ 3) , such that 0 \u2264 x_ 1, x_ 2, x_ 3 \u2264 n , 0 \u2264 y_ 1, y_ 2, y_ 3 \u2264 m and the area of the triangle formed by these points is equal to nm/ k . Help Vasya! Find such points ( if it' s possible) . If there are multiple solutions, print any of them.",
    "input": "The single line contains three integers n , m , k ( 1\u2264 n, m \u2264 10^ 9 , 2 \u2264 k \u2264 10^ 9 ) .",
    "output": "If there are no such points, print \" NO\" . Otherwise print \" YES\" in the first line. The next three lines should contain integers x_ i, y_ i \u2014 coordinates of the points, one point per line. If there are multiple solutions, print any of them. You can print each letter in any case ( upper or lower) .",
    "note": "In the first example area of the triangle should be equal to nm/ k = 4 . The triangle mentioned in the output is pictured below: In the second example there is no triangle with area nm/ k = 16/ 7 .",
    "topics": [
      "geometry",
      "number theory"
    ],
    "id": "1030D"
  },
  {
    "title": "Multicolored Markers",
    "url": "https://codeforces.com/problemset/problem/1029/F",
    "history": "There is an infinite board of square tiles. Initially all tiles are white. Vova has a red marker and a blue marker. Red marker can color a tiles. Blue marker can color b tiles. If some tile isn' t white then you can' t use marker of any color on it. Each marker must be drained completely, so at the end there should be exactly a red tiles and exactly b blue tiles across the board. Vova wants to color such a set of tiles that: they would form a rectangle, consisting of exactly a+ b colored tiles; all tiles of at least one color would also form a rectangle. Here are some examples of correct colorings: Here are some examples of incorrect colorings: Among all correct colorings Vova wants to choose the one with the minimal perimeter. What is the minimal perimeter Vova can obtain? It is guaranteed that there exists at least one correct coloring.",
    "input": "A single line contains two integers a and b ( 1 \u2264 a, b \u2264 10^ 14 ) \u2014 the number of tiles red marker should color and the number of tiles blue marker should color, respectively.",
    "output": "Print a single integer \u2014 the minimal perimeter of a colored rectangle Vova can obtain by coloring exactly a tiles red and exactly b tiles blue. It is guaranteed that there exists at least one correct coloring.",
    "note": "The first four examples correspond to the first picture of the statement. Note that for there exist multiple correct colorings for all of the examples. In the first example you can also make a rectangle with sides 1 and 8 , though its perimeter will be 18 which is greater than 8 . In the second example you can make the same resulting rectangle with sides 3 and 4 , but red tiles will form the rectangle with sides 1 and 3 and blue tiles will form the rectangle with sides 3 and 3 .",
    "topics": [
      "binary search",
      "brute force",
      "math",
      "number theory"
    ],
    "id": "1029F"
  },
  {
    "title": "X-mouse in the Campus",
    "url": "https://codeforces.com/problemset/problem/1027/G",
    "history": "The campus has m rooms numbered from 0 to m - 1 . Also the x - mouse lives in the campus. The x - mouse is not just a mouse: each second x - mouse moves from room i to the room i \u00b7 x m ( in fact, it teleports from one room to another since it doesn' t visit any intermediate room) . Starting position of the x - mouse is unknown. You are responsible to catch the x - mouse in the campus, so you are guessing about minimum possible number of traps ( one trap in one room) you need to place. You are sure that if the x - mouse enters a trapped room, it immediately gets caught. And the only observation you made is GCD ( x, m) = 1 .",
    "input": "The only line contains two integers m and x ( 2 \u2264 m \u2264 10^ 14 , 1 \u2264 x < m , GCD ( x, m) = 1 ) \u2014 the number of rooms and the parameter of x - mouse.",
    "output": "Print the only integer \u2014 minimum number of traps you need to install to catch the x - mouse.",
    "note": "In the first example you can, for example, put traps in rooms 0 , 2 , 3 . If the x - mouse starts in one of this rooms it will be caught immediately. If x - mouse starts in the 1 - st rooms then it will move to the room 3 , where it will be caught. In the second example you can put one trap in room 0 and one trap in any other room since x - mouse will visit all rooms 1. . m- 1 if it will start in any of these rooms.",
    "topics": [
      "bitmasks",
      "math",
      "number theory"
    ],
    "id": "1027G"
  },
  {
    "title": "Recovering BST",
    "url": "https://codeforces.com/problemset/problem/1025/D",
    "history": "Dima the hamster enjoys nibbling different things: cages, sticks, bad problemsetters and even trees! Recently he found a binary search tree and instinctively nibbled all of its edges, hence messing up the vertices. Dima knows that if Andrew, who has been thoroughly assembling the tree for a long time, comes home and sees his creation demolished, he' ll get extremely upset. To not let that happen, Dima has to recover the binary search tree. Luckily, he noticed that any two vertices connected by a direct edge had their greatest common divisor value exceed 1 . Help Dima construct such a binary search tree or determine that it' s impossible. The definition and properties of a binary search tree can be found here.",
    "input": "The first line contains the number of vertices n ( 2 \u2264 n \u2264 700 ) . The second line features n distinct integers a_ i ( 2 \u2264 a_ i \u2264 10^ 9 ) \u2014 the values of vertices in ascending order.",
    "output": "If it is possible to reassemble the binary search tree, such that the greatest common divisor of any two vertices connected by the edge is greater than 1 , print \" Yes\" ( quotes for clarity) . Otherwise, print \" No\" ( quotes for clarity) .",
    "note": "The picture below illustrates one of the possible trees for the first example. The picture below illustrates one of the possible trees for the third example.",
    "topics": [
      "brute force",
      "dp",
      "math",
      "number theory",
      "trees"
    ],
    "id": "1025D"
  },
  {
    "title": "Weakened Common Divisor",
    "url": "https://codeforces.com/problemset/problem/1025/B",
    "history": "During the research on properties of the greatest common divisor ( GCD) of a set of numbers, Ildar, a famous mathematician, introduced a brand new concept of the weakened common divisor ( WCD) of a list of pairs of integers. For a given list of pairs of integers ( a_ 1, b_ 1) , ( a_ 2, b_ 2) , . . . , ( a_ n, b_ n) their WCD is arbitrary integer greater than 1 , such that it divides at least one element in each pair. WCD may not exist for some lists. For example, if the list looks like [ ( 12, 15) , ( 25, 18) , ( 10, 24) ] , then their WCD can be equal to 2 , 3 , 5 or 6 ( each of these numbers is strictly greater than 1 and divides at least one number in each pair) . You' re currently pursuing your PhD degree under Ildar' s mentorship, and that' s why this problem was delegated to you. Your task is to calculate WCD efficiently.",
    "input": "The first line contains a single integer n ( 1 \u2264 n \u2264 150 000 ) \u2014 the number of pairs. Each of the next n lines contains two integer values a_ i , b_ i ( 2 \u2264 a_ i, b_ i \u2264 2 \u00b7 10^ 9 ) .",
    "output": "Print a single integer \u2014 the WCD of the set of pairs. If there are multiple possible answers, output any; if there is no answer, print - 1 .",
    "note": "In the first example the answer is 6 since it divides 18 from the first pair, 24 from the second and 12 from the third ones. Note that other valid answers will also be accepted. In the second example there are no integers greater than 1 satisfying the conditions. In the third example one of the possible answers is 5 . Note that, for example, 15 is also allowed, but it' s not necessary to maximize the output.",
    "topics": [
      "brute force",
      "greedy",
      "number theory"
    ],
    "id": "1025B"
  },
  {
    "title": "Appropriate Team",
    "url": "https://codeforces.com/problemset/problem/1016/G",
    "history": "Since next season are coming, you' d like to form a team from two or three participants. There are n candidates, the i - th candidate has rank a_ i . But you have weird requirements for your teammates: if you have rank v and have chosen the i - th and j - th candidate, then GCD( v, a_ i) = X and LCM( v, a_ j) = Y must be met. You are very experienced, so you can change your rank to any non- negative integer but X and Y are tied with your birthdate, so they are fixed. Now you want to know, how many are there pairs ( i, j) such that there exists an integer v meeting the following constraints: GCD( v, a_ i) = X and LCM( v, a_ j) = Y . It' s possible that i = j and you form a team of two. GCD is the greatest common divisor of two number, LCM \u2014 the least common multiple.",
    "input": "First line contains three integers n , X and Y ( 1 \u2264 n \u2264 2 \u00b7 10^ 5 , 1 \u2264 X \u2264 Y \u2264 10^ 18 ) \u2014 the number of candidates and corresponding constants. Second line contains n space separated integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 18 ) \u2014 ranks of candidates.",
    "output": "Print the only integer \u2014 the number of pairs ( i, j) such that there exists an integer v meeting the following constraints: GCD( v, a_ i) = X and LCM( v, a_ j) = Y . It' s possible that i = j .",
    "note": "In the first example next pairs are valid: a_ j = 1 and a_ i = [ 2, 4, 6, 8, 10, 12] or a_ j = 2 and a_ i = [ 2, 4, 6, 8, 10, 12] . The v in both cases can be equal to 2 . In the second example next pairs are valid: a_ j = 1 and a_ i = [ 1, 5, 7, 11] ; a_ j = 2 and a_ i = [ 1, 5, 7, 11, 10, 8, 4, 2] ; a_ j = 3 and a_ i = [ 1, 3, 5, 7, 9, 11] ; a_ j = 6 and a_ i = [ 1, 3, 5, 7, 9, 11, 12, 10, 8, 6, 4, 2] .",
    "topics": [
      "bitmasks",
      "math",
      "number theory"
    ],
    "id": "1016G"
  },
  {
    "title": "Border",
    "url": "https://codeforces.com/problemset/problem/1010/C",
    "history": "Astronaut Natasha arrived on Mars. She knows that the Martians are very poor aliens. To ensure a better life for the Mars citizens, their emperor decided to take tax from every tourist who visited the planet. Natasha is the inhabitant of Earth, therefore she had to pay the tax to enter the territory of Mars. There are n banknote denominations on Mars: the value of i - th banknote is a_ i . Natasha has an infinite number of banknotes of each denomination. Martians have k fingers on their hands, so they use a number system with base k . In addition, the Martians consider the digit d ( in the number system with base k ) divine. Thus, if the last digit in Natasha' s tax amount written in the number system with the base k is d , the Martians will be happy. Unfortunately, Natasha does not know the Martians' divine digit yet. Determine for which values d Natasha can make the Martians happy. Natasha can use only her banknotes. Martians don' t give her change.",
    "input": "The first line contains two integers n and k ( 1 \u2264 n \u2264 100 000 , 2 \u2264 k \u2264 100 000 ) \u2014 the number of denominations of banknotes and the base of the number system on Mars. The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 9 ) \u2014 denominations of banknotes on Mars. All numbers are given in decimal notation.",
    "output": "On the first line output the number of values d for which Natasha can make the Martians happy. In the second line, output all these values in increasing order. Print all numbers in decimal notation.",
    "note": "Consider the first test case. It uses the octal number system. If you take one banknote with the value of 12 , you will get 14_ 8 in octal system. The last digit is 4_ 8 . If you take one banknote with the value of 12 and one banknote with the value of 20 , the total value will be 32 . In the octal system, it is 40_ 8 . The last digit is 0_ 8 . If you take two banknotes with the value of 20 , the total value will be 40 , this is 50_ 8 in the octal system. The last digit is 0_ 8 . No other digits other than 0_ 8 and 4_ 8 can be obtained. Digits 0_ 8 and 4_ 8 could also be obtained in other ways. The second test case uses the decimal number system. The nominals of all banknotes end with zero, so Natasha can give the Martians only the amount whose decimal notation also ends with zero.",
    "topics": [
      "number theory"
    ],
    "id": "1010C"
  },
  {
    "title": "Pave the Parallelepiped",
    "url": "https://codeforces.com/problemset/problem/1007/B",
    "history": "You are given a rectangular parallelepiped with sides of positive integer lengths A , B and C . Find the number of different groups of three integers ( a , b , c ) such that 1\u2264 a\u2264 b\u2264 c and parallelepiped A\u00d7 B\u00d7 C can be paved with parallelepipeds a\u00d7 b\u00d7 c . Note, that all small parallelepipeds have to be rotated in the same direction. For example, parallelepiped 1\u00d7 5\u00d7 6 can be divided into parallelepipeds 1\u00d7 3\u00d7 5 , but can not be divided into parallelepipeds 1\u00d7 2\u00d7 3 .",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 5 ) \u2014 the number of test cases. Each of the next t lines contains three integers A , B and C ( 1 \u2264 A, B, C \u2264 10^ 5 ) \u2014 the sizes of the parallelepiped.",
    "output": "For each test case, print the number of different groups of three points that satisfy all given conditions.",
    "note": "In the first test case, rectangular parallelepiped ( 1, 1, 1) can be only divided into rectangular parallelepiped with sizes ( 1, 1, 1) . In the second test case, rectangular parallelepiped ( 1, 6, 1) can be divided into rectangular parallelepipeds with sizes ( 1, 1, 1) , ( 1, 1, 2) , ( 1, 1, 3) and ( 1, 1, 6) . In the third test case, rectangular parallelepiped ( 2, 2, 2) can be divided into rectangular parallelepipeds with sizes ( 1, 1, 1) , ( 1, 1, 2) , ( 1, 2, 2) and ( 2, 2, 2) .",
    "topics": [
      "bitmasks",
      "brute force",
      "combinatorics",
      "math",
      "number theory"
    ],
    "id": "1007B"
  },
  {
    "title": "Polycarp and Div 3",
    "url": "https://codeforces.com/problemset/problem/1005/D",
    "history": "Polycarp likes numbers that are divisible by 3. He has a huge number s . Polycarp wants to cut from it the maximum number of numbers that are divisible by 3 . To do this, he makes an arbitrary number of vertical cuts between pairs of adjacent digits. As a result, after m such cuts, there will be m+ 1 parts in total. Polycarp analyzes each of the obtained numbers and finds the number of those that are divisible by 3 . For example, if the original number is s= 3121 , then Polycarp can cut it into three parts with two cuts: 3| 1| 21 . As a result, he will get two numbers that are divisible by 3 . Polycarp can make an arbitrary number of vertical cuts, where each cut is made between a pair of adjacent digits. The resulting numbers cannot contain extra leading zeroes ( that is, the number can begin with 0 if and only if this number is exactly one character ' 0' ) . For example, 007, 01 and 00099 are not valid numbers, but 90, 0 and 10001 are valid. What is the maximum number of numbers divisible by 3 that Polycarp can obtain?",
    "input": "The first line of the input contains a positive integer s . The number of digits of the number s is between 1 and 2\u00b710^ 5 , inclusive. The first ( leftmost) digit is not equal to 0.",
    "output": "Print the maximum number of numbers divisible by 3 that Polycarp can get by making vertical cuts in the given number s .",
    "note": "In the first example, an example set of optimal cuts on the number is 3| 1| 21. In the second example, you do not need to make any cuts. The specified number 6 forms one number that is divisible by 3 . In the third example, cuts must be made between each pair of digits. As a result, Polycarp gets one digit 1 and 33 digits 0. Each of the 33 digits 0 forms a number that is divisible by 3 . In the fourth example, an example set of optimal cuts is 2| 0| 1| 9| 201| 81. The numbers 0 , 9 , 201 and 81 are divisible by 3 .",
    "topics": [
      "dp",
      "greedy",
      "number theory"
    ],
    "id": "1005D"
  },
  {
    "title": "Number Clicker",
    "url": "https://codeforces.com/problemset/problem/995/E",
    "history": "Allen is playing Number Clicker on his phone. He starts with an integer u on the screen. Every second, he can press one of 3 buttons. Turn u \u2192 u+ 1 p . Turn u \u2192 u+ p- 1 p . Turn u \u2192 u^ p- 2p . Allen wants to press at most 200 buttons and end up with v on the screen. Help him!",
    "input": "The first line of the input contains 3 positive integers: u, v, p ( 0 \u2264 u, v \u2264 p- 1 , 3 \u2264 p \u2264 10^ 9 + 9 ) . p is guaranteed to be prime.",
    "output": "On the first line, print a single integer l , the number of button presses. On the second line, print integers c_ 1, . . . , c_ l , the button presses. For 1 \u2264 i \u2264l , 1 \u2264 c_ i \u2264 3 . We can show that the answer always exists.",
    "note": "In the first example the integer on the screen changes as 1 \u2192 2 \u2192 3 . In the second example the integer on the screen changes as 3 \u2192 2 .",
    "topics": [
      "divide and conquer",
      "graphs",
      "meet-in-the-middle",
      "number theory"
    ],
    "id": "995E"
  },
  {
    "title": "Nastya Studies Informatics",
    "url": "https://codeforces.com/problemset/problem/992/B",
    "history": "Today on Informatics class Nastya learned about GCD and LCM ( see links below) . Nastya is very intelligent, so she solved all the tasks momentarily and now suggests you to solve one of them as well. We define a pair of integers ( a, b) good, if GCD( a, b) = x and LCM( a, b) = y, where GCD( a, b) denotes the greatest common divisor of a and b, and LCM( a, b) denotes the least common multiple of a and b. You are given two integers x and y. You are to find the number of good pairs of integers ( a, b) such that l \u2264 a, b \u2264 r. Note that pairs ( a, b) and ( b, a) are considered different if a = \u0338 b.",
    "input": "The only line contains four integers l, r, x, y ( 1 \u2264 l \u2264 r \u2264 109, 1 \u2264 x \u2264 y \u2264 109) .",
    "output": "In the only line print the only integer \u2014 the answer for the problem.",
    "note": "In the first example there are two suitable good pairs of integers ( a, b) : ( 1, 2) and ( 2, 1) . In the second example there are four suitable good pairs of integers ( a, b) : ( 1, 12) , ( 12, 1) , ( 3, 4) and ( 4, 3) . In the third example there are good pairs of integers, for example, ( 3, 30) , but none of them fits the condition l \u2264 a, b \u2264 r.",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "992B"
  },
  {
    "title": "GCD Counting",
    "url": "https://codeforces.com/problemset/problem/990/G",
    "history": "You are given a tree consisting of n vertices. A number is written on each vertex; the number on vertex i is equal to a_ i . Let' s denote the function g( x, y) as the greatest common divisor of the numbers written on the vertices belonging to the simple path from vertex x to vertex y ( including these two vertices) . For every integer from 1 to 2 \u00b7 10^ 5 you have to count the number of pairs ( x, y) ( 1 \u2264 x \u2264 y \u2264 n) such that g( x, y) is equal to this number.",
    "input": "The first line contains one integer n \u2014 the number of vertices ( 1 \u2264 n \u2264 2 \u00b7 10^ 5) . The second line contains n integers a_ 1 , a_ 2 , . . . , a_ n ( 1 \u2264 a_ i \u2264 2 \u00b7 10^ 5) \u2014 the numbers written on vertices. Then n - 1 lines follow, each containing two integers x and y ( 1 \u2264 x, y \u2264 n, x y) denoting an edge connecting vertex x with vertex y . It is guaranteed that these edges form a tree.",
    "output": "For every integer i from 1 to 2 \u00b7 10^ 5 do the following: if there is no pair ( x, y) such that x \u2264 y and g( x, y) = i , don' t output anything. Otherwise output two integers: i and the number of aforementioned pairs. You have to consider the values of i in ascending order. See the examples for better understanding.",
    "note": "",
    "topics": [
      "divide and conquer",
      "dp",
      "dsu",
      "number theory",
      "trees"
    ],
    "id": "990G"
  },
  {
    "title": "Oppa Funcan Style Remastered",
    "url": "https://codeforces.com/problemset/problem/986/F",
    "history": "Surely you have seen insane videos by South Korean rapper PSY, such as \" Gangnam Style\" , \" Gentleman\" and \" Daddy\" . You might also hear that PSY has been recording video \" Oppa Funcan Style\" two years ago ( unfortunately we couldn' t find it on the internet) . We will remind you what this hit looked like ( you can find original description here) : On the ground there are n platforms, which are numbered with integers from 1 to n , on i - th platform there is a dancer with number i . Further, every second all the dancers standing on the platform with number i jump to the platform with the number f( i) . The moving rule f is selected in advance and is not changed throughout the clip. The duration of the clip was k seconds and the rule f was chosen in such a way that after k seconds all dancers were in their initial positions ( i. e. the i - th dancer stood on the platform with the number i ) . That allowed to loop the clip and collect even more likes. PSY knows that enhanced versions of old artworks become more and more popular every day. So he decided to release a remastered- version of his video. In his case \" enhanced version\" means even more insanity, so the number of platforms can be up to 10^ 18 ! But the video director said that if some dancer stays on the same platform all the time, then the viewer will get bored and will turn off the video immediately. Therefore, for all x from 1 to n f( x) = \u0338 x must hold. Big part of classic video' s success was in that looping, so in the remastered version all dancers should return to their initial positions in the end of the clip as well. PSY hasn' t decided on the exact number of platforms and video duration yet, so he asks you to check if there is a good rule f for different options.",
    "input": "In the first line of input there is one integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of options for n and k to check. In the next t lines the options are given: each option is described with two integers n and k ( 1 \u2264 n \u2264 10^ 18 , 1 \u2264 k \u2264 10^ 15 ) \u2014 the number of dancers and the duration in seconds. It is guaranteed that the number of different values of k in one test is not greater than 50 .",
    "output": "Print t lines. If the i - th option of the video is feasible, print \" YES\" ( without quotes) in i - th line, otherwise print \" NO\" ( without quotes) .",
    "note": "",
    "topics": [
      "graphs",
      "math",
      "number theory",
      "shortest paths"
    ],
    "id": "986F"
  },
  {
    "title": "Prince's Problem",
    "url": "https://codeforces.com/problemset/problem/986/E",
    "history": "Let the main characters of this problem be personages from some recent movie. New Avengers seem to make a lot of buzz. I didn' t watch any part of the franchise and don' t know its heroes well, but it won' t stop me from using them in this problem statement. So, Thanos and Dr. Strange are doing their superhero and supervillain stuff, but then suddenly they stumble across a regular competitive programming problem. You are given a tree with n vertices. In each vertex v there is positive integer a_ v . You have to answer q queries. Each query has a from u v x . You have to calculate \u220f_ w \u2208 P gcd( x, a_ w) ( 10^ 9 + 7) , where P is a set of vertices on path from u to v . In other words, you are to calculate the product of gcd( x, a_ w) for all vertices w on the path from u to v . As it might be large, compute it modulo 10^ 9+ 7 . Here gcd( s, t) denotes the greatest common divisor of s and t . Note that the numbers in vertices do not change after queries. I suppose that you are more interested in superhero business of Thanos and Dr. Strange than in them solving the problem. So you are invited to solve this problem instead of them.",
    "input": "In the first line of input there is one integer n ( 1 \u2264 n \u2264 10^ 5 ) \u2014 the size of the tree. In the next n- 1 lines the edges of the tree are described. The i - th edge is described with two integers u_ i and v_ i ( 1 \u2264 u_ i, v_ i\u2264 n ) and it connects the vertices u_ i and v_ i . It is guaranteed that graph with these edges is a tree. In the next line there are n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ v\u2264 10^ 7 ) . In the next line there is one integer q ( 1 \u2264 q \u2264 10^ 5 ) \u2014 the number of queries. And in the next q lines the queries are described. Each query is described with three integers u_ i , v_ i and x_ i ( 1 \u2264 u_ i, v_ i\u2264 n , 1 \u2264 x_ i\u2264 10^ 7 ) .",
    "output": "Print q numbers \u2014 the answers to the queries in the order they are given in the input. Print each answer modulo 10^ 9+ 7 = 1000000007 . Print each number on a separate line.",
    "note": "",
    "topics": [
      "brute force",
      "data structures",
      "math",
      "number theory",
      "trees"
    ],
    "id": "986E"
  },
  {
    "title": "Fair",
    "url": "https://codeforces.com/problemset/problem/986/A",
    "history": "Some company is going to hold a fair in Byteland. There are n towns in Byteland and m two- way roads between towns. Of course, you can reach any town from any other town using roads. There are k types of goods produced in Byteland and every town produces only one type. To hold a fair you have to bring at least s different types of goods. It costs d( u, v) coins to bring goods from town u to town v where d( u, v) is the length of the shortest path from u to v . Length of a path is the number of roads in this path. The organizers will cover all travel expenses but they can choose the towns to bring goods from. Now they want to calculate minimum expenses to hold a fair in each of n towns.",
    "input": "There are 4 integers n , m , k , s in the first line of input ( 1 \u2264 n \u2264 10^ 5 , 0 \u2264 m \u2264 10^ 5 , 1 \u2264 s \u2264 k \u2264 min( n, 100) ) \u2014 the number of towns, the number of roads, the number of different types of goods, the number of different types of goods necessary to hold a fair. In the next line there are n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i\u2264 k ) , where a_ i is the type of goods produced in the i - th town. It is guaranteed that all integers between 1 and k occur at least once among integers a_ i . In the next m lines roads are described. Each road is described by two integers u v ( 1 \u2264 u, v \u2264 n , u v ) \u2014 the towns connected by this road. It is guaranteed that there is no more than one road between every two towns. It is guaranteed that you can go from any town to any other town via roads.",
    "output": "Print n numbers, the i - th of them is the minimum number of coins you need to spend on travel expenses to hold a fair in town i . Separate numbers with spaces.",
    "note": "Let' s look at the first sample. To hold a fair in town 1 you can bring goods from towns 1 ( 0 coins) , 2 ( 1 coin) and 4 ( 1 coin) . Total numbers of coins is 2 . Town 2 : Goods from towns 2 ( 0 ) , 1 ( 1 ) , 3 ( 1 ) . Sum equals 2 . Town 3 : Goods from towns 3 ( 0 ) , 2 ( 1 ) , 4 ( 1 ) . Sum equals 2 . Town 4 : Goods from towns 4 ( 0 ) , 1 ( 1 ) , 5 ( 1 ) . Sum equals 2 . Town 5 : Goods from towns 5 ( 0 ) , 4 ( 1 ) , 3 ( 2 ) . Sum equals 3 .",
    "topics": [
      "graphs",
      "greedy",
      "number theory",
      "shortest paths"
    ],
    "id": "986A"
  },
  {
    "title": "Billiard",
    "url": "https://codeforces.com/problemset/problem/982/E",
    "history": "Consider a billiard table of rectangular size n \u00d7 m with four pockets. Let' s introduce a coordinate system with the origin at the lower left corner ( see the picture) . There is one ball at the point ( x, y) currently. Max comes to the table and strikes the ball. The ball starts moving along a line that is parallel to one of the axes or that makes a 45^ \u2218 angle with them. We will assume that: the angles between the directions of the ball before and after a collision with a side are equal, the ball moves indefinitely long, it only stops when it falls into a pocket, the ball can be considered as a point, it falls into a pocket if and only if its coordinates coincide with one of the pockets, initially the ball is not in a pocket. Note that the ball can move along some side, in this case the ball will just fall into the pocket at the end of the side. Your task is to determine whether the ball will fall into a pocket eventually, and if yes, which of the four pockets it will be.",
    "input": "The only line contains 6 integers n , m , x , y , v_ x , v_ y ( 1 \u2264 n, m \u2264 10^ 9 , 0 \u2264 x \u2264 n ; 0 \u2264 y \u2264 m ; - 1 \u2264 v_ x, v_ y \u2264 1 ; ( v_ x, v_ y) = \u0338 ( 0, 0) ) \u2014 the width of the table, the length of the table, the x - coordinate of the initial position of the ball, the y - coordinate of the initial position of the ball, the x - component of its initial speed and the y - component of its initial speed, respectively. It is guaranteed that the ball is not initially in a pocket.",
    "output": "Print the coordinates of the pocket the ball will fall into, or - 1 if the ball will move indefinitely.",
    "note": "The first sample: The second sample: In the third sample the ball will never change its y coordinate, so the ball will never fall into a pocket.",
    "topics": [
      "geometry",
      "number theory"
    ],
    "id": "982E"
  },
  {
    "title": "Perfect Groups",
    "url": "https://codeforces.com/problemset/problem/980/D",
    "history": "SaMer has written the greatest test case of all time for one of his problems. For a given array of integers, the problem asks to find the minimum number of groups the array can be divided into, such that the product of any pair of integers in the same group is a perfect square. Each integer must be in exactly one group. However, integers in a group do not necessarily have to be contiguous in the array. SaMer wishes to create more cases from the test case he already has. His test case has an array A of n integers, and he needs to find the number of contiguous subarrays of A that have an answer to the problem equal to k for each integer k between 1 and n ( inclusive) .",
    "input": "The first line of input contains a single integer n ( 1 \u2264 n \u2264 5000 ) , the size of the array. The second line contains n integers a_ 1 , a_ 2 , . . . , a_ n ( - 10^ 8 \u2264 a_ i \u2264 10^ 8 ) , the values of the array.",
    "output": "Output n space- separated integers, the k - th integer should be the number of contiguous subarrays of A that have an answer to the problem equal to k .",
    "note": "",
    "topics": [
      "dp",
      "math",
      "number theory"
    ],
    "id": "980D"
  },
  {
    "title": "Kuro and GCD and XOR and SUM",
    "url": "https://codeforces.com/problemset/problem/979/D",
    "history": "Kuro is currently playing an educational game about numbers. The game focuses on the greatest common divisor ( GCD) , the XOR value, and the sum of two numbers. Kuro loves the game so much that he solves levels by levels day by day. Sadly, he' s going on a vacation for a day, and he isn' t able to continue his solving streak on his own. As Katie is a reliable person, Kuro kindly asked her to come to his house on this day to play the game for him. Initally, there is an empty array a . The game consists of q tasks of two types. The first type asks Katie to add a number u_ i to a . The second type asks Katie to find a number v existing in a such that k_ i | GCD( x_ i, v) , x_ i + v \u2264 s_ i , and x_ i \u2295 v is maximized, where \u2295 denotes the bitwise XOR operation, GCD( c, d) denotes the greatest common divisor of integers c and d , and y | x means x is divisible by y , or report - 1 if no such numbers are found. Since you are a programmer, Katie needs you to automatically and accurately perform the tasks in the game to satisfy her dear friend Kuro. Let' s help her!",
    "input": "The first line contains one integer q ( 2 \u2264 q \u2264 10^ 5 ) \u2014 the number of tasks the game wants you to perform. q lines follow, each line begins with an integer t_ i \u2014 the type of the task: If t_ i = 1 , an integer u_ i follow ( 1 \u2264 u_ i \u2264 10^ 5 ) \u2014 you have to add u_ i to the array a . If t_ i = 2 , three integers x_ i , k_ i , and s_ i follow ( 1 \u2264 x_ i, k_ i, s_ i \u2264 10^ 5 ) \u2014 you must find a number v existing in the array a such that k_ i | GCD( x_ i, v) , x_ i + v \u2264 s_ i , and x_ i \u2295 v is maximized, where \u2295 denotes the XOR operation, or report - 1 if no such numbers are found. It is guaranteed that the type of the first task is type 1 , and there exists at least one task of type 2 .",
    "output": "For each task of type 2 , output on one line the desired number v , or - 1 if no such numbers are found.",
    "note": "In the first example, there are 5 tasks: The first task requires you to add 1 into a . a is now { 1} . The second task requires you to add 2 into a . a is now { 1, 2} . The third task asks you a question with x = 1 , k = 1 and s = 3 . Taking both 1 and 2 as v satisfies 1 | GCD( 1, v) and 1 + v \u2264 3 . Because 2 \u2295 1 = 3 > 1 \u2295 1 = 0 , 2 is the answer to this task. The fourth task asks you a question with x = 1 , k = 1 and s = 2 . Only v = 1 satisfies 1 | GCD( 1, v) and 1 + v \u2264 2 , so 1 is the answer to this task. The fifth task asks you a question with x = 1 , k = 1 and s = 1 . There are no elements in a that satisfy the conditions, so we report - 1 as the answer to this task.",
    "topics": [
      "binary search",
      "bitmasks",
      "brute force",
      "data structures",
      "dp",
      "dsu",
      "greedy",
      "math",
      "number theory",
      "strings",
      "trees"
    ],
    "id": "979D"
  },
  {
    "title": "Cutting Rectangle",
    "url": "https://codeforces.com/problemset/problem/963/C",
    "history": "A rectangle with sides A and B is cut into rectangles with cuts parallel to its sides. For example, if p horizontal and q vertical cuts were made, ( p + 1) \u00b7 ( q + 1) rectangles were left after the cutting. After the cutting, rectangles were of n different types. Two rectangles are different if at least one side of one rectangle isn' t equal to the corresponding side of the other. Note that the rectangle can' t be rotated, this means that rectangles a \u00d7 b and b \u00d7 a are considered different if a = \u0338 b . For each type of rectangles, lengths of the sides of rectangles are given along with the amount of the rectangles of this type that were left after cutting the initial rectangle. Calculate the amount of pairs ( A; B) such as the given rectangles could be created by cutting the rectangle with sides of lengths A and B . Note that pairs ( A; B) and ( B; A) are considered different when A = \u0338 B .",
    "input": "The first line consists of a single integer n ( 1 \u2264 n \u2264 2 \u00b7 10^ 5 ) \u2014 amount of different types of rectangles left after cutting the initial rectangle. The next n lines each consist of three integers w_ i, h_ i, c_ i ( 1 \u2264 w_ i, h_ i, c_ i\u2264 10^ 12) \u2014 the lengths of the sides of the rectangles of this type and the amount of the rectangles of this type. It is guaranteed that the rectangles of the different types are different.",
    "output": "Output one integer \u2014 the answer to the problem.",
    "note": "In the first sample there are three suitable pairs: ( 1; 9) , ( 3; 3) and ( 9; 1) . In the second sample case there are 6 suitable pairs: ( 2; 220) , ( 4; 110) , ( 8; 55) , ( 10; 44) , ( 20; 22) and ( 40; 11) . Here the sample of cut for ( 20; 22) . The third sample has no suitable pairs.",
    "topics": [
      "brute force",
      "math",
      "number theory"
    ],
    "id": "963C"
  },
  {
    "title": "Alternating Sum",
    "url": "https://codeforces.com/problemset/problem/963/A",
    "history": "You are given two integers a and b . Moreover, you are given a sequence s_ 0, s_ 1, . . . , s_ n . All values in s are integers 1 or - 1 . It' s known that sequence is k - periodic and k divides n+ 1 . In other words, for each k \u2264 i \u2264 n it' s satisfied that s_ i = s_ i - k . Find out the non- negative remainder of division of \u2211_ i= 0^ n s_ i a^ n - i b^ i by 10^ 9 + 9 . Note that the modulo is unusual!",
    "input": "The first line contains four integers n, a, b and k ( 1 \u2264 n \u2264 10^ 9, 1 \u2264 a, b \u2264 10^ 9, 1 \u2264 k \u2264 10^ 5) . The second line contains a sequence of length k consisting of characters ' + ' and ' - ' . If the i - th character ( 0- indexed) is ' + ' , then s_ i = 1 , otherwise s_ i = - 1 . Note that only the first k members of the sequence are given, the rest can be obtained using the periodicity property.",
    "output": "Output a single integer \u2014 value of given expression modulo 10^ 9 + 9 .",
    "note": "In the first example: ( \u2211_ i= 0^ n s_ i a^ n - i b^ i) = 2^ 2 3^ 0 - 2^ 1 3^ 1 + 2^ 0 3^ 2 = 7In the second example: ( \u2211_ i= 0^ n s_ i a^ n - i b^ i) = - 1^ 4 5^ 0 - 1^ 3 5^ 1 - 1^ 2 5^ 2 - 1^ 1 5^ 3 - 1^ 0 5^ 4 = - 781 \u2261 999999228 10^ 9 + 9 .",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "963A"
  },
  {
    "title": "Partitions",
    "url": "https://codeforces.com/problemset/problem/961/G",
    "history": "You are given a set of n elements indexed from 1 to n. The weight of i- th element is wi. The weight of some subset of a given set is denoted as . The weight of some partition R of a given set into k subsets is ( recall that a partition of a given set is a set of its subsets such that every element of the given set belongs to exactly one subset in partition) . Calculate the sum of weights of all partitions of a given set into exactly k non- empty subsets, and print it modulo 109 + 7. Two partitions are considered different iff there exist two elements x and y such that they belong to the same set in one of the partitions, and to different sets in another partition.",
    "input": "The first line contains two integers n and k ( 1 \u2264 k \u2264 n \u2264 2\u00b7105) \u2014 the number of elements and the number of subsets in each partition, respectively. The second line contains n integers wi ( 1 \u2264 wi \u2264 109) \u2014 weights of elements of the set.",
    "output": "Print one integer \u2014 the sum of weights of all partitions of a given set into k non- empty subsets, taken modulo 109 + 7.",
    "note": "Possible partitions in the first sample: 1, 2, 3, 4, W( R) = 3\u00b7( w1 + w2 + w3) + 1\u00b7w4 = 24; 1, 2, 4, 3, W( R) = 26; 1, 3, 4, 2, W( R) = 24; 1, 2, 3, 4, W( R) = 2\u00b7( w1 + w2) + 2\u00b7( w3 + w4) = 20; 1, 3, 2, 4, W( R) = 20; 1, 4, 2, 3, W( R) = 20; 1, 2, 3, 4, W( R) = 26; Possible partitions in the second sample: 1, 2, 3, 4, 5, W( R) = 45; 1, 2, 3, 5, 4, W( R) = 48; 1, 2, 4, 5, 3, W( R) = 51; 1, 3, 4, 5, 2, W( R) = 54; 2, 3, 4, 5, 1, W( R) = 57; 1, 2, 3, 4, 5, W( R) = 36; 1, 2, 4, 3, 5, W( R) = 37; 1, 2, 5, 3, 4, W( R) = 38; 1, 3, 4, 2, 5, W( R) = 38; 1, 3, 5, 2, 4, W( R) = 39; 1, 4, 5, 2, 3, W( R) = 40; 2, 3, 4, 1, 5, W( R) = 39; 2, 3, 5, 1, 4, W( R) = 40; 2, 4, 5, 1, 3, W( R) = 41; 3, 4, 5, 1, 2, W( R) = 42.",
    "topics": [
      "combinatorics",
      "math",
      "number theory"
    ],
    "id": "961G"
  },
  {
    "title": "Mahmoud and Ehab and another array construction task",
    "url": "https://codeforces.com/problemset/problem/959/D",
    "history": "Mahmoud has an array a consisting of n integers. He asked Ehab to find another array b of the same length such that: b is lexicographically greater than or equal to a. bi \u2265 2. b is pairwise coprime: for every 1 \u2264 i < j \u2264 n, bi and bj are coprime, i. e. GCD( bi, bj) = 1, where GCD( w, z) is the greatest common divisor of w and z. Ehab wants to choose a special array so he wants the lexicographically minimal array between all the variants. Can you find it? An array x is lexicographically greater than an array y if there exists an index i such than xi > yi and xj = yj for all 1 \u2264 j < i. An array x is equal to an array y if xi = yi for all 1 \u2264 i \u2264 n.",
    "input": "The first line contains an integer n ( 1 \u2264 n \u2264 105) , the number of elements in a and b. The second line contains n integers a1, a2, . . . , an ( 2 \u2264 ai \u2264 105) , the elements of a.",
    "output": "Output n space- separated integers, the i- th of them representing bi.",
    "note": "Note that in the second sample, the array is already pairwise coprime so we printed it.",
    "topics": [
      "constructive algorithms",
      "greedy",
      "math",
      "number theory"
    ],
    "id": "959D"
  },
  {
    "title": "Sad powers",
    "url": "https://codeforces.com/problemset/problem/955/C",
    "history": "You' re given Q queries of the form ( L, R) . For each query you have to find the number of such x that L \u2264 x \u2264 R and there exist integer numbers a > 0, p > 1 such that x = ap.",
    "input": "The first line contains the number of queries Q ( 1 \u2264 Q \u2264 105) . The next Q lines contains two integers L, R each ( 1 \u2264 L \u2264 R \u2264 1018) .",
    "output": "Output Q lines \u2014 the answers to the queries.",
    "note": "In query one the suitable numbers are 1 and 4.",
    "topics": [
      "binary search",
      "math",
      "number theory"
    ],
    "id": "955C"
  },
  {
    "title": "Weird Subtraction Process",
    "url": "https://codeforces.com/problemset/problem/946/B",
    "history": "You have two variables a and b. Consider the following sequence of actions performed with these variables: If a = 0 or b = 0, end the process. Otherwise, go to step 2; If a \u2265 2\u00b7b, then set the value of a to a - 2\u00b7b, and repeat step 1. Otherwise, go to step 3; If b \u2265 2\u00b7a, then set the value of b to b - 2\u00b7a, and repeat step 1. Otherwise, end the process. Initially the values of a and b are positive integers, and so the process will be finite. You have to determine the values of a and b after the process ends.",
    "input": "The only line of the input contains two integers n and m ( 1 \u2264 n, m \u2264 1018) . n is the initial value of variable a, and m is the initial value of variable b.",
    "output": "Print two integers \u2014 the values of a and b after the end of the process.",
    "note": "Explanations to the samples: a = 12, b = 5 a = 2, b = 5 a = 2, b = 1 a = 0, b = 1; a = 31, b = 12 a = 7, b = 12.",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "946B"
  },
  {
    "title": "Vile Grasshoppers",
    "url": "https://codeforces.com/problemset/problem/937/B",
    "history": "The weather is fine today and hence it' s high time to climb the nearby pine and enjoy the landscape. The pine' s trunk includes several branches, located one above another and numbered from 2 to y. Some of them ( more precise, from 2 to p) are occupied by tiny vile grasshoppers which you' re at war with. These grasshoppers are known for their awesome jumping skills: the grasshopper at branch x can jump to branches . Keeping this in mind, you wisely decided to choose such a branch that none of the grasshoppers could interrupt you. At the same time you wanna settle as high as possible since the view from up there is simply breathtaking. In other words, your goal is to find the highest branch that cannot be reached by any of the grasshoppers or report that it' s impossible.",
    "input": "The only line contains two integers p and y ( 2 \u2264 p \u2264 y \u2264 109) .",
    "output": "Output the number of the highest suitable branch. If there are none, print - 1 instead.",
    "note": "In the first sample case grasshopper from branch 2 reaches branches 2, 4 and 6 while branch 3 is initially settled by another grasshopper. Therefore the answer is 5. It immediately follows that there are no valid branches in second sample case.",
    "topics": [
      "brute force",
      "math",
      "number theory"
    ],
    "id": "937B"
  },
  {
    "title": "Primal Sport",
    "url": "https://codeforces.com/problemset/problem/923/A",
    "history": "Alice and Bob begin their day with a quick game. They first choose a starting number X0 \u2265 3 and try to reach one million by the process described below. Alice goes first and then they take alternating turns. In the i- th turn, the player whose turn it is selects a prime number smaller than the current number, and announces the smallest multiple of this prime number that is not smaller than the current number. Formally, he or she selects a prime p < Xi - 1 and then finds the minimum Xi \u2265 Xi - 1 such that p divides Xi. Note that if the selected prime p already divides Xi - 1, then the number does not change. Eve has witnessed the state of the game after two turns. Given X2, help her determine what is the smallest possible starting number X0. Note that the players don' t necessarily play optimally. You should consider all possible game evolutions.",
    "input": "The input contains a single integer X2 ( 4 \u2264 X2 \u2264 106) . It is guaranteed that the integer X2 is composite, that is, is not prime.",
    "output": "Output a single integer \u2014 the minimum possible X0.",
    "note": "In the first test, the smallest possible starting number is X0 = 6. One possible course of the game is as follows: Alice picks prime 5 and announces X1 = 10 Bob picks prime 7 and announces X2 = 14. In the second case, let X0 = 15. Alice picks prime 2 and announces X1 = 16 Bob picks prime 5 and announces X2 = 20.",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "923A"
  },
  {
    "title": "Divisibility",
    "url": "https://codeforces.com/problemset/problem/922/F",
    "history": "Imp is really pleased that you helped him. But it you solve the last problem, his gladness would raise even more. Let' s define for some set of integers as the number of pairs a, b in , such that: a is strictly less than b; a divides b without a remainder. You are to find such a set , which is a subset of 1, 2, . . . , n ( the set that contains all positive integers not greater than n) , that .",
    "input": "The only line contains two integers n and k .",
    "output": "If there is no answer, print \" No\" . Otherwise, in the first line print \" Yes\" , in the second \u2014 an integer m that denotes the size of the set you have found, in the second line print m integers \u2014 the elements of the set , in any order. If there are multiple answers, print any of them.",
    "note": "In the second sample, the valid pairs in the output set are ( 1, 2) , ( 1, 4) , ( 1, 5) , ( 1, 6) , ( 2, 4) , ( 2, 6) . Thus, . In the third example, the valid pairs in the output set are ( 2, 4) , ( 4, 8) , ( 2, 8) . Thus, .",
    "topics": [
      "constructive algorithms",
      "dp",
      "greedy",
      "number theory"
    ],
    "id": "922F"
  },
  {
    "title": "Cave Painting",
    "url": "https://codeforces.com/problemset/problem/922/C",
    "history": "Imp is watching a documentary about cave painting. Some numbers, carved in chaotic order, immediately attracted his attention. Imp rapidly proposed a guess that they are the remainders of division of a number n by all integers i from 1 to k. Unfortunately, there are too many integers to analyze for Imp. Imp wants you to check whether all these remainders are distinct. Formally, he wants to check, if all , 1 \u2264 i \u2264 k, are distinct, i. e. there is no such pair ( i, j) that: 1 \u2264 i < j \u2264 k, , where is the remainder of division x by y.",
    "input": "The only line contains two integers n, k ( 1 \u2264 n, k \u2264 1018) .",
    "output": "Print \" Yes\" , if all the remainders are distinct, and \" No\" otherwise. You can print each letter in arbitrary case ( lower or upper) .",
    "note": "In the first sample remainders modulo 1 and 4 coincide.",
    "topics": [
      "brute force",
      "number theory"
    ],
    "id": "922C"
  },
  {
    "title": "List Of Integers",
    "url": "https://codeforces.com/problemset/problem/920/G",
    "history": "Let' s denote as L( x, p) an infinite sequence of integers y such that gcd( p, y) = 1 and y > x ( where gcd is the greatest common divisor of two integer numbers) , sorted in ascending order. The elements of L( x, p) are 1- indexed; for example, 9, 13 and 15 are the first, the second and the third elements of L( 7, 22) , respectively. You have to process t queries. Each query is denoted by three integers x, p and k, and the answer to this query is k- th element of L( x, p) .",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 30000) \u2014 the number of queries to process. Then t lines follow. i- th line contains three integers x, p and k for i- th query ( 1 \u2264 x, p, k \u2264 106) .",
    "output": "Print t integers, where i- th integer is the answer to i- th query.",
    "note": "",
    "topics": [
      "binary search",
      "bitmasks",
      "brute force",
      "combinatorics",
      "math",
      "number theory"
    ],
    "id": "920G"
  },
  {
    "title": "SUM and REPLACE",
    "url": "https://codeforces.com/problemset/problem/920/F",
    "history": "Let D( x) be the number of positive divisors of a positive integer x. For example, D( 2) = 2 ( 2 is divisible by 1 and 2) , D( 6) = 4 ( 6 is divisible by 1, 2, 3 and 6) . You are given an array a of n integers. You have to process two types of queries: REPLACE l r \u2014 for every replace ai with D( ai) ; SUM l r \u2014 calculate . Print the answer for each SUM query.",
    "input": "The first line contains two integers n and m ( 1 \u2264 n, m \u2264 3\u00b7105) \u2014 the number of elements in the array and the number of queries to process, respectively. The second line contains n integers a1, a2, . . . , an ( 1 \u2264 ai \u2264 106) \u2014 the elements of the array. Then m lines follow, each containing 3 integers ti, li, ri denoting i- th query. If ti = 1, then i- th query is REPLACE li ri, otherwise it' s SUM li ri ( 1 \u2264 ti \u2264 2, 1 \u2264 li \u2264 ri \u2264 n) . There is at least one SUM query.",
    "output": "For each SUM query print the answer to it.",
    "note": "",
    "topics": [
      "brute force",
      "data structures",
      "dsu",
      "number theory"
    ],
    "id": "920F"
  },
  {
    "title": "Congruence Equation",
    "url": "https://codeforces.com/problemset/problem/919/E",
    "history": "Given an integer x . Your task is to find out how many positive integers n ( 1 \u2264 n \u2264 x ) satisfy n \u00b7 a^ n \u2261 b ( mod p) , where a, b, p are all known constants.",
    "input": "The only line contains four integers a, b, p, x ( 2 \u2264 p \u2264 10^ 6+ 3 , 1 \u2264 a, b < p , 1 \u2264 x \u2264 10^ 12 ) . It is guaranteed that p is a prime.",
    "output": "Print a single integer: the number of possible answers n .",
    "note": "In the first sample, we can see that n= 2 and n= 8 are possible answers.",
    "topics": [
      "chinese remainder theorem",
      "math",
      "number theory"
    ],
    "id": "919E"
  },
  {
    "title": "Perfect Number",
    "url": "https://codeforces.com/problemset/problem/919/B",
    "history": "We consider a positive integer perfect, if and only if the sum of its digits is exactly 10 . Given a positive integer k , your task is to find the k - th smallest perfect positive integer.",
    "input": "A single line with a positive integer k ( 1 \u2264 k \u2264 10 000 ) .",
    "output": "A single number, denoting the k - th smallest perfect integer.",
    "note": "The first perfect integer is 19 and the second one is 28 .",
    "topics": [
      "binary search",
      "brute force",
      "dp",
      "implementation",
      "number theory"
    ],
    "id": "919B"
  },
  {
    "title": "Coprime Arrays",
    "url": "https://codeforces.com/problemset/problem/915/G",
    "history": "Let' s call an array a of size n coprime iff gcd( a1, a2, . . . , an) = 1, where gcd is the greatest common divisor of the arguments. You are given two numbers n and k. For each i ( 1 \u2264 i \u2264 k) you have to determine the number of coprime arrays a of size n such that for every j ( 1 \u2264 j \u2264 n) 1 \u2264 aj \u2264 i. Since the answers can be very large, you have to calculate them modulo 109 + 7.",
    "input": "The first line contains two integers n and k ( 1 \u2264 n, k \u2264 2\u00b7106) \u2014 the size of the desired arrays and the maximum upper bound on elements, respectively.",
    "output": "Since printing 2\u00b7106 numbers may take a lot of time, you have to output the answer in such a way: Let bi be the number of coprime arrays with elements in range [ 1, i] , taken modulo 109 + 7. You have to print , taken modulo 109 + 7. Here denotes bitwise xor operation ( ^ in C+ + or Java, xor in Pascal) .",
    "note": "Explanation of the example: Since the number of coprime arrays is large, we will list the arrays that are non- coprime, but contain only elements in range [ 1, i] : For i = 1, the only array is coprime. b1 = 1. For i = 2, array [ 2, 2, 2] is not coprime. b2 = 7. For i = 3, arrays [ 2, 2, 2] and [ 3, 3, 3] are not coprime. b3 = 25. For i = 4, arrays [ 2, 2, 2] , [ 3, 3, 3] , [ 2, 2, 4] , [ 2, 4, 2] , [ 2, 4, 4] , [ 4, 2, 2] , [ 4, 2, 4] , [ 4, 4, 2] and [ 4, 4, 4] are not coprime. b4 = 55.",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "915G"
  },
  {
    "title": "Bash and a Tough Math Puzzle",
    "url": "https://codeforces.com/problemset/problem/914/D",
    "history": "Bash likes playing with arrays. He has an array a1, a2, . . . an of n integers. He likes to guess the greatest common divisor ( gcd) of different segments of the array. Of course, sometimes the guess is not correct. However, Bash will be satisfied if his guess is almost correct. Suppose he guesses that the gcd of the elements in the range [ l, r] of a is x. He considers the guess to be almost correct if he can change at most one element in the segment such that the gcd of the segment is x after making the change. Note that when he guesses, he doesn' t actually change the array \u2014 he just wonders if the gcd of the segment can be made x. Apart from this, he also sometimes makes changes to the array itself. Since he can' t figure it out himself, Bash wants you to tell him which of his guesses are almost correct. Formally, you have to process q queries of one of the following forms: 1 l r x \u2014 Bash guesses that the gcd of the range [ l, r] is x. Report if this guess is almost correct. 2 i y \u2014 Bash sets ai to y. Note: The array is 1- indexed.",
    "input": "The first line contains an integer n ( 1 \u2264 n \u2264 5\u00b7105) \u2014 the size of the array. The second line contains n integers a1, a2, . . . , an ( 1 \u2264 ai \u2264 109) \u2014 the elements of the array. The third line contains an integer q ( 1 \u2264 q \u2264 4\u00b7105) \u2014 the number of queries. The next q lines describe the queries and may have one of the following forms: 1 l r x ( 1 \u2264 l \u2264 r \u2264 n, 1 \u2264 x \u2264 109) . 2 i y ( 1 \u2264 i \u2264 n, 1 \u2264 y \u2264 109) . Guaranteed, that there is at least one query of first type.",
    "output": "For each query of first type, output \" YES\" ( without quotes) if Bash' s guess is almost correct and \" NO\" ( without quotes) otherwise.",
    "note": "In the first sample, the array initially is 2, 6, 3. For query 1, the first two numbers already have their gcd as 2. For query 2, we can achieve a gcd of 3 by changing the first element of the array to 3. Note that the changes made during queries of type 1 are temporary and do not get reflected in the array. After query 3, the array is now 9, 6, 3. For query 4, no matter which element you change, you cannot get the gcd of the range to be 2.",
    "topics": [
      "data structures",
      "number theory"
    ],
    "id": "914D"
  },
  {
    "title": "Power Substring",
    "url": "https://codeforces.com/problemset/problem/913/G",
    "history": "You are given n positive integers a1, a2, . . . , an. For every ai you need to find a positive integer ki such that the decimal notation of 2ki contains the decimal notation of ai as a substring among its last min( 100, length( 2ki) ) digits. Here length( m) is the length of the decimal notation of m. Note that you don' t have to minimize ki. The decimal notations in this problem do not contain leading zeros.",
    "input": "The first line contains a single integer n ( 1 \u2264 n \u2264 2 000) \u2014 the number of integers ai. Each of the next n lines contains a positive integer ai ( 1 \u2264 ai < 1011) .",
    "output": "Print n lines. The i- th of them should contain a positive integer ki such that the last min( 100, length( 2ki) ) digits of 2ki contain the decimal notation of ai as a substring. Integers ki must satisfy 1 \u2264 ki \u2264 1050. It can be shown that the answer always exists under the given constraints. If there are multiple answers, print any of them.",
    "note": "",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "913G"
  },
  {
    "title": "Prime Gift",
    "url": "https://codeforces.com/problemset/problem/912/E",
    "history": "Opposite to Grisha' s nice behavior, Oleg, though he has an entire year at his disposal, didn' t manage to learn how to solve number theory problems in the past year. That' s why instead of Ded Moroz he was visited by his teammate Andrew, who solemnly presented him with a set of n distinct prime numbers alongside with a simple task: Oleg is to find the k- th smallest integer, such that all its prime divisors are in this set.",
    "input": "The first line contains a single integer n ( 1 \u2264 n \u2264 16) . The next line lists n distinct prime numbers p1, p2, . . . , pn ( 2 \u2264 pi \u2264 100) in ascending order. The last line gives a single integer k ( 1 \u2264 k) . It is guaranteed that the k- th smallest integer such that all its prime divisors are in this set does not exceed 1018.",
    "output": "Print a single line featuring the k- th smallest integer. It' s guaranteed that the answer doesn' t exceed 1018.",
    "note": "The list of numbers with all prime divisors inside 2, 3, 5 begins as follows: ( 1, 2, 3, 4, 5, 6, 8, . . . ) The seventh number in this list ( 1- indexed) is eight.",
    "topics": [
      "binary search",
      "dfs and similar",
      "math",
      "meet-in-the-middle",
      "number theory",
      "two pointers"
    ],
    "id": "912E"
  },
  {
    "title": "New Year's Eve",
    "url": "https://codeforces.com/problemset/problem/912/B",
    "history": "Since Grisha behaved well last year, at New Year' s Eve he was visited by Ded Moroz who brought an enormous bag of gifts with him! The bag contains n sweet candies from the good ol' bakery, each labeled from 1 to n corresponding to its tastiness. No two candies have the same tastiness. The choice of candies has a direct effect on Grisha' s happiness. One can assume that he should take the tastiest ones \u2014 but no, the holiday magic turns things upside down. It is the xor- sum of tastinesses that matters, not the ordinary sum! A xor- sum of a sequence of integers a1, a2, . . . , am is defined as the bitwise XOR of all its elements: , here denotes the bitwise XOR operation; more about bitwise XOR can be found here. Ded Moroz warned Grisha he has more houses to visit, so Grisha can take no more than k candies from the bag. Help Grisha determine the largest xor- sum ( largest xor- sum means maximum happiness! ) he can obtain.",
    "input": "The sole string contains two integers n and k ( 1 \u2264 k \u2264 n \u2264 1018) .",
    "output": "Output one number \u2014 the largest possible xor- sum.",
    "note": "In the first sample case, one optimal answer is 1, 2 and 4, giving the xor- sum of 7. In the second sample case, one can, for example, take all six candies and obtain the xor- sum of 7.",
    "topics": [
      "bitmasks",
      "constructive algorithms",
      "number theory"
    ],
    "id": "912B"
  },
  {
    "title": "Power Tower",
    "url": "https://codeforces.com/problemset/problem/906/D",
    "history": "Priests of the Quetzalcoatl cult want to build a tower to represent a power of their god. Tower is usually made of power- charged rocks. It is built with the help of rare magic by levitating the current top of tower and adding rocks at its bottom. If top, which is built from k - 1 rocks, possesses power p and we want to add the rock charged with power wk then value of power of a new tower will be wkp. Rocks are added from the last to the first. That is for sequence w1, . . . , wm value of power will beAfter tower is built, its power may be extremely large. But still priests want to get some information about it, namely they want to know a number called cumulative power which is the true value of power taken modulo m. Priests have n rocks numbered from 1 to n. They ask you to calculate which value of cumulative power will the tower possess if they will build it from rocks numbered l, l + 1, . . . , r.",
    "input": "First line of input contains two integers n ( 1 \u2264 n \u2264 105) and m ( 1 \u2264 m \u2264 109) . Second line of input contains n integers wk ( 1 \u2264 wk \u2264 109) which is the power of rocks that priests have. Third line of input contains single integer q ( 1 \u2264 q \u2264 105) which is amount of queries from priests to you. kth of next q lines contains two integers lk and rk ( 1 \u2264 lk \u2264 rk \u2264 n) .",
    "output": "Output q integers. k- th of them must be the amount of cumulative power the tower will have if is built from rocks lk, lk + 1, . . . , rk.",
    "note": "327 = 7625597484987",
    "topics": [
      "chinese remainder theorem",
      "math",
      "number theory"
    ],
    "id": "906D"
  },
  {
    "title": "Unusual Sequences",
    "url": "https://codeforces.com/problemset/problem/900/D",
    "history": "Count the number of distinct sequences a1, a2, . . . , an ( 1 \u2264 ai) consisting of positive integers such that gcd( a1, a2, . . . , an) = x and . As this number could be large, print the answer modulo 109 + 7. gcd here means the greatest common divisor.",
    "input": "The only line contains two positive integers x and y ( 1 \u2264 x, y \u2264 109) .",
    "output": "Print the number of such sequences modulo 109 + 7.",
    "note": "There are three suitable sequences in the first test: ( 3, 3, 3) , ( 3, 6) , ( 6, 3) . There are no suitable sequences in the second test.",
    "topics": [
      "bitmasks",
      "combinatorics",
      "dp",
      "math",
      "number theory"
    ],
    "id": "900D"
  },
  {
    "title": "Position in Fraction",
    "url": "https://codeforces.com/problemset/problem/900/B",
    "history": "You have a fraction . You need to find the first occurrence of digit c into decimal notation of the fraction after decimal point.",
    "input": "The first contains three single positive integers a, b, c ( 1 \u2264 a < b \u2264 105, 0 \u2264 c \u2264 9) .",
    "output": "Print position of the first occurrence of digit c into the fraction. Positions are numbered from 1 after decimal point. It there is no such position, print - 1.",
    "note": "The fraction in the first example has the following decimal notation: . The first zero stands on second position. The fraction in the second example has the following decimal notation: . There is no digit 7 in decimal notation of the fraction.",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "900B"
  },
  {
    "title": "Proper Nutrition",
    "url": "https://codeforces.com/problemset/problem/898/B",
    "history": "Vasya has n burles. One bottle of Ber- Cola costs a burles and one Bars bar costs b burles. He can buy any non- negative integer number of bottles of Ber- Cola and any non- negative integer number of Bars bars. Find out if it' s possible to buy some amount of bottles of Ber- Cola and Bars bars and spend exactly n burles. In other words, you should find two non- negative integers x and y such that Vasya can buy x bottles of Ber- Cola and y Bars bars and x\u00b7a + y\u00b7b = n or tell that it' s impossible.",
    "input": "First line contains single integer n ( 1 \u2264 n \u2264 10 000 000) \u2014 amount of money, that Vasya has. Second line contains single integer a ( 1 \u2264 a \u2264 10 000 000) \u2014 cost of one bottle of Ber- Cola. Third line contains single integer b ( 1 \u2264 b \u2264 10 000 000) \u2014 cost of one Bars bar.",
    "output": "If Vasya can' t buy Bars and Ber- Cola in such a way to spend exactly n burles print \u00abNO\u00bb ( without quotes) . Otherwise in first line print \u00abYES\u00bb ( without quotes) . In second line print two non- negative integers x and y \u2014 number of bottles of Ber- Cola and number of Bars bars Vasya should buy in order to spend exactly n burles, i. e. x\u00b7a + y\u00b7b = n. If there are multiple answers print any of them. Any of numbers x and y can be equal 0.",
    "note": "In first example Vasya can buy two bottles of Ber- Cola and one Bars bar. He will spend exactly 2\u00b72 + 1\u00b73 = 7 burles. In second example Vasya can spend exactly n burles multiple ways: buy two bottles of Ber- Cola and five Bars bars; buy four bottles of Ber- Cola and don' t buy Bars bars; don' t buy Ber- Cola and buy 10 Bars bars. In third example it' s impossible to but Ber- Cola and Bars bars in order to spend exactly n burles.",
    "topics": [
      "brute force",
      "implementation",
      "number theory"
    ],
    "id": "898B"
  },
  {
    "title": "Nephren Runs a Cinema",
    "url": "https://codeforces.com/problemset/problem/896/D",
    "history": "Lakhesh loves to make movies, so Nephren helps her run a cinema. We may call it No. 68 Cinema. However, one day, the No. 68 Cinema runs out of changes ( they don' t have 50- yuan notes currently) , but Nephren still wants to start their business. ( Assume that yuan is a kind of currency in Regulu Ere. ) There are three types of customers: some of them bring exactly a 50- yuan note; some of them bring a 100- yuan note and Nephren needs to give a 50- yuan note back to him/ her; some of them bring VIP cards so that they don' t need to pay for the ticket. Now n customers are waiting outside in queue. Nephren wants to know how many possible queues are there that they are able to run smoothly ( i. e. every customer can receive his/ her change) , and that the number of 50- yuan notes they have after selling tickets to all these customers is between l and r, inclusive. Two queues are considered different if there exists a customer whose type is different in two queues. As the number can be large, please output the answer modulo p.",
    "input": "One line containing four integers n ( 1 \u2264 n \u2264 105) , p ( 1 \u2264 p \u2264 2\u00b7109) , l and r ( 0 \u2264 l \u2264 r \u2264 n) .",
    "output": "One line indicating the answer modulo p.",
    "note": "We use A, B and C to indicate customers with 50- yuan notes, customers with 100- yuan notes and customers with VIP cards respectively. For the first sample, the different possible queues that there are 2 50- yuan notes left are AAAB, AABA, ABAA, AACC, ACAC, ACCA, CAAC, CACA and CCAA, and the different possible queues that there are 3 50- yuan notes left are AAAC, AACA, ACAA and CAAA. So there are 13 different queues satisfying the first sample. Similarly, there are 35 different queues satisfying the second sample.",
    "topics": [
      "chinese remainder theorem",
      "combinatorics",
      "math",
      "number theory"
    ],
    "id": "896D"
  },
  {
    "title": "Ralph And His Magic Field",
    "url": "https://codeforces.com/problemset/problem/894/B",
    "history": "Ralph has a magic field which is divided into n \u00d7 m blocks. That is to say, there are n rows and m columns on the field. Ralph can put an integer in each block. However, the magic field doesn' t always work properly. It works only if the product of integers in each row and each column equals to k, where k is either 1 or - 1. Now Ralph wants you to figure out the number of ways to put numbers in each block in such a way that the magic field works properly. Two ways are considered different if and only if there exists at least one block where the numbers in the first way and in the second way are different. You are asked to output the answer modulo 1000000007 = 109 + 7. Note that there is no range of the numbers to put in the blocks, but we can prove that the answer is not infinity.",
    "input": "The only line contains three integers n, m and k ( 1 \u2264 n, m \u2264 1018, k is either 1 or - 1) .",
    "output": "Print a single number denoting the answer modulo 1000000007.",
    "note": "In the first example the only way is to put - 1 into the only block. In the second example the only way is to put 1 into every block.",
    "topics": [
      "combinatorics",
      "constructive algorithms",
      "math",
      "number theory"
    ],
    "id": "894B"
  },
  {
    "title": "Counting Arrays",
    "url": "https://codeforces.com/problemset/problem/893/E",
    "history": "You are given two positive integer numbers x and y. An array F is called an y- factorization of x iff the following conditions are met: There are y elements in F, and all of them are integer numbers; . You have to count the number of pairwise distinct arrays that are y- factorizations of x. Two arrays A and B are considered different iff there exists at least one index i ( 1 \u2264 i \u2264 y) such that Ai = \u0338 Bi. Since the answer can be very large, print it modulo 109 + 7.",
    "input": "The first line contains one integer q ( 1 \u2264 q \u2264 105) \u2014 the number of testcases to solve. Then q lines follow, each containing two integers xi and yi ( 1 \u2264 xi, yi \u2264 106) . Each of these lines represents a testcase.",
    "output": "Print q integers. i- th integer has to be equal to the number of yi- factorizations of xi modulo 109 + 7.",
    "note": "In the second testcase of the example there are six y- factorizations: - 4, - 1; - 2, - 2; - 1, - 4; 1, 4; 2, 2; 4, 1.",
    "topics": [
      "combinatorics",
      "dp",
      "math",
      "number theory"
    ],
    "id": "893E"
  },
  {
    "title": "Pride",
    "url": "https://codeforces.com/problemset/problem/891/A",
    "history": "You have an array a with length n, you can perform operations. Each operation is like this: choose two adjacent elements from a, say x and y, and replace one of them with gcd( x, y) , where gcd denotes the greatest common divisor. What is the minimum number of operations you need to make all of the elements equal to 1?",
    "input": "The first line of the input contains one integer n ( 1 \u2264 n \u2264 2000) \u2014 the number of elements in the array. The second line contains n space separated integers a1, a2, . . . , an ( 1 \u2264 ai \u2264 109) \u2014 the elements of the array.",
    "output": "Print - 1, if it is impossible to turn all numbers to 1. Otherwise, print the minimum number of operations needed to make all numbers equal to 1.",
    "note": "In the first sample you can turn all numbers to 1 using the following 5 moves: [ 2, 2, 3, 4, 6] . [ 2, 1, 3, 4, 6] [ 2, 1, 3, 1, 6] [ 2, 1, 1, 1, 6] [ 1, 1, 1, 1, 6] [ 1, 1, 1, 1, 1] We can prove that in this case it is not possible to make all numbers one using less than 5 moves.",
    "topics": [
      "brute force",
      "dp",
      "greedy",
      "math",
      "number theory"
    ],
    "id": "891A"
  },
  {
    "title": "Divisiblity of Differences",
    "url": "https://codeforces.com/problemset/problem/876/B",
    "history": "You are given a multiset of n integers. You should select exactly k of them in a such way that the difference between any two of them is divisible by m, or tell that it is impossible. Numbers can be repeated in the original multiset and in the multiset of selected numbers, but number of occurrences of any number in multiset of selected numbers should not exceed the number of its occurrences in the original multiset.",
    "input": "First line contains three integers n, k and m ( 2 \u2264 k \u2264 n \u2264 100 000, 1 \u2264 m \u2264 100 000) \u2014 number of integers in the multiset, number of integers you should select and the required divisor of any pair of selected integers. Second line contains n integers a1, a2, . . . , an ( 0 \u2264 ai \u2264 109) \u2014 the numbers in the multiset.",
    "output": "If it is not possible to select k numbers in the desired way, output \u00abNo\u00bb ( without the quotes) . Otherwise, in the first line of output print \u00abYes\u00bb ( without the quotes) . In the second line print k integers b1, b2, . . . , bk \u2014 the selected numbers. If there are multiple possible solutions, print any of them.",
    "note": "",
    "topics": [
      "implementation",
      "math",
      "number theory"
    ],
    "id": "876B"
  },
  {
    "title": "Paths",
    "url": "https://codeforces.com/problemset/problem/870/F",
    "history": "You are given a positive integer n. Let' s build a graph on vertices 1, 2, . . . , n in such a way that there is an edge between vertices u and v if and only if . Let d( u, v) be the shortest distance between u and v, or 0 if there is no path between them. Compute the sum of values d( u, v) over all 1 \u2264 u < v \u2264 n. The gcd ( greatest common divisor) of two positive integers is the maximum positive integer that divides both of the integers.",
    "input": "Single integer n ( 1 \u2264 n \u2264 107) .",
    "output": "Print the sum of d( u, v) over all 1 \u2264 u < v \u2264 n.",
    "note": "All shortest paths in the first example: There are no paths between other pairs of vertices. The total distance is 2 + 1 + 1 + 2 + 1 + 1 = 8.",
    "topics": [
      "data structures",
      "number theory"
    ],
    "id": "870F"
  },
  {
    "title": "Maximum splitting",
    "url": "https://codeforces.com/problemset/problem/870/C",
    "history": "You are given several queries. In the i- th query you are given a single positive integer ni. You are to represent ni as a sum of maximum possible number of composite summands and print this maximum number, or print - 1, if there are no such splittings. An integer greater than 1 is composite, if it is not prime, i. e. if it has positive divisors not equal to 1 and the integer itself.",
    "input": "The first line contains single integer q ( 1 \u2264 q \u2264 105) \u2014 the number of queries. q lines follow. The ( i + 1) - th line contains single integer ni ( 1 \u2264 ni \u2264 109) \u2014 the i- th query.",
    "output": "For each query print the maximum possible number of summands in a valid splitting to composite summands, or - 1, if there are no such splittings.",
    "note": "12 = 4 + 4 + 4 = 4 + 8 = 6 + 6 = 12, but the first splitting has the maximum possible number of summands. 8 = 4 + 4, 6 can' t be split into several composite summands. 1, 2, 3 are less than any composite number, so they do not have valid splittings.",
    "topics": [
      "dp",
      "greedy",
      "math",
      "number theory"
    ],
    "id": "870C"
  },
  {
    "title": "k-rounding",
    "url": "https://codeforces.com/problemset/problem/858/A",
    "history": "For a given positive integer n denote its k- rounding as the minimum positive integer x, such that x ends with k or more zeros in base 10 and is divisible by n. For example, 4- rounding of 375 is 375\u00b780 = 30000. 30000 is the minimum integer such that it ends with 4 or more zeros and is divisible by 375. Write a program that will perform the k- rounding of n.",
    "input": "The only line contains two integers n and k ( 1 \u2264 n \u2264 109, 0 \u2264 k \u2264 8) .",
    "output": "Print the k- rounding of n.",
    "note": "",
    "topics": [
      "brute force",
      "math",
      "number theory"
    ],
    "id": "858A"
  },
  {
    "title": "Product transformation",
    "url": "https://codeforces.com/problemset/problem/852/F",
    "history": "Consider an array A with N elements, all being the same integer a. Define the product transformation as a simultaneous update Ai = Ai\u00b7Ai + 1, that is multiplying each element to the element right to it for , with the last number AN remaining the same. For example, if we start with an array A with a = 2 and N = 4, then after one product transformation A = [ 4, 4, 4, 2] , and after two product transformations A = [ 16, 16, 8, 2] . Your simple task is to calculate the array A after M product transformations. Since the numbers can get quite big you should output them modulo Q.",
    "input": "The first and only line of input contains four integers N, M, a, Q ( 7 \u2264 Q \u2264 109 + 123, 2 \u2264 a \u2264 106 + 123, , is prime) , where is the multiplicative order of the integer a modulo Q, see notes for definition.",
    "output": "You should output the array A from left to right.",
    "note": "The multiplicative order of a number a modulo Q , is the smallest natural number x such that ax mod Q = 1. For example, .",
    "topics": [
      "combinatorics",
      "math",
      "number theory"
    ],
    "id": "852F"
  },
  {
    "title": "Arpa and a list of numbers",
    "url": "https://codeforces.com/problemset/problem/850/B",
    "history": "Arpa has found a list containing n numbers. He calls a list bad if and only if it is not empty and gcd ( see notes section for more information) of numbers in the list is 1. Arpa can perform two types of operations: Choose a number and delete it with cost x. Choose a number and increase it by 1 with cost y. Arpa can apply these operations to as many numbers as he wishes, and he is allowed to apply the second operation arbitrarily many times on the same number. Help Arpa to find the minimum possible cost to make the list good.",
    "input": "First line contains three integers n, x and y ( 1 \u2264 n \u2264 5\u00b7105, 1 \u2264 x, y \u2264 109) \u2014 the number of elements in the list and the integers x and y. Second line contains n integers a1, a2, . . . , an ( 1 \u2264 ai \u2264 106) \u2014 the elements of the list.",
    "output": "Print a single integer: the minimum possible cost to make the list good.",
    "note": "In example, number 1 must be deleted ( with cost 23) and number 16 must increased by 1 ( with cost 17) . A gcd ( greatest common divisor) of a set of numbers is the maximum integer that divides all integers in the set. Read more about gcd here.",
    "topics": [
      "implementation",
      "number theory"
    ],
    "id": "850B"
  },
  {
    "title": "Ilya And The Tree",
    "url": "https://codeforces.com/problemset/problem/842/C",
    "history": "Ilya is very fond of graphs, especially trees. During his last trip to the forest Ilya found a very interesting tree rooted at vertex 1. There is an integer number written on each vertex of the tree; the number written on vertex i is equal to ai. Ilya believes that the beauty of the vertex x is the greatest common divisor of all numbers written on the vertices on the path from the root to x, including this vertex itself. In addition, Ilya can change the number in one arbitrary vertex to 0 or leave all vertices unchanged. Now for each vertex Ilya wants to know the maximum possible beauty it can have. For each vertex the answer must be considered independently. The beauty of the root equals to number written on it.",
    "input": "First line contains one integer number n \u2014 the number of vertices in tree ( 1 \u2264 n \u2264 2\u00b7105) . Next line contains n integer numbers ai ( 1 \u2264 i \u2264 n, 1 \u2264 ai \u2264 2\u00b7105) . Each of next n - 1 lines contains two integer numbers x and y ( 1 \u2264 x, y \u2264 n, x = \u0338 y) , which means that there is an edge ( x, y) in the tree.",
    "output": "Output n numbers separated by spaces, where i- th number equals to maximum possible beauty of vertex i.",
    "note": "",
    "topics": [
      "dfs and similar",
      "graphs",
      "math",
      "number theory",
      "trees"
    ],
    "id": "842C"
  },
  {
    "title": "Leha and Function",
    "url": "https://codeforces.com/problemset/problem/840/A",
    "history": "Leha like all kinds of strange things. Recently he liked the function F( n, k) . Consider all possible k- element subsets of the set [ 1, 2, . . . , n] . For subset find minimal element in it. F( n, k) \u2014 mathematical expectation of the minimal element among all k- element subsets. But only function does not interest him. He wants to do interesting things with it. Mom brought him two arrays A and B, each consists of m integers. For all i, j such that 1 \u2264 i, j \u2264 m the condition Ai \u2265 Bj holds. Help Leha rearrange the numbers in the array A so that the sum is maximally possible, where A' is already rearranged array.",
    "input": "First line of input data contains single integer m ( 1 \u2264 m \u2264 2\u00b7105) \u2014 length of arrays A and B. Next line contains m integers a1, a2, . . . , am ( 1 \u2264 ai \u2264 109) \u2014 array A. Next line contains m integers b1, b2, . . . , bm ( 1 \u2264 bi \u2264 109) \u2014 array B.",
    "output": "Output m integers a' 1, a' 2, . . . , a' m \u2014 array A' which is permutation of the array A.",
    "note": "",
    "topics": [
      "combinatorics",
      "greedy",
      "math",
      "number theory",
      "sortings"
    ],
    "id": "840A"
  },
  {
    "title": "Winter is here",
    "url": "https://codeforces.com/problemset/problem/839/D",
    "history": "Winter is here at the North and the White Walkers are close. John Snow has an army consisting of n soldiers. While the rest of the world is fighting for the Iron Throne, he is going to get ready for the attack of the White Walkers. He has created a method to know how strong his army is. Let the i- th soldier\u2019s strength be ai. For some k he calls i1, i2, . . . , ik a clan if i1 < i2 < i3 < . . . < ik and gcd( ai1, ai2, . . . , aik) > 1 . He calls the strength of that clan k\u00b7gcd( ai1, ai2, . . . , aik) . Then he defines the strength of his army by the sum of strengths of all possible clans. Your task is to find the strength of his army. As the number may be very large, you have to print it modulo 1000000007 ( 109 + 7) . Greatest common divisor ( gcd) of a sequence of integers is the maximum possible integer so that each element of the sequence is divisible by it.",
    "input": "The first line contains integer n ( 1 \u2264 n \u2264 200000) \u2014 the size of the army. The second line contains n integers a1, a2, . . . , an ( 1 \u2264 ai \u2264 1000000) \u2014 denoting the strengths of his soldiers.",
    "output": "Print one integer \u2014 the strength of John Snow' s army modulo 1000000007 ( 109 + 7) .",
    "note": "In the first sample the clans are 1, 2, 1, 2 so the answer will be 1\u00b73 + 1\u00b73 + 2\u00b73 = 12",
    "topics": [
      "combinatorics",
      "dp",
      "math",
      "number theory"
    ],
    "id": "839D"
  },
  {
    "title": "Airplane Arrangements",
    "url": "https://codeforces.com/problemset/problem/838/D",
    "history": "There is an airplane which has n rows from front to back. There will be m people boarding this airplane. This airplane has an entrance at the very front and very back of the plane. Each person has some assigned seat. It is possible for multiple people to have the same assigned seat. The people will then board the plane one by one starting with person 1. Each person can independently choose either the front entrance or back entrance to enter the plane. When a person walks into the plane, they walk directly to their assigned seat and will try to sit in it. If it is occupied, they will continue walking in the direction they walked in until they are at empty seat - they will take the earliest empty seat that they can find. If they get to the end of the row without finding a seat, they will be angry. Find the number of ways to assign tickets to the passengers and board the plane without anyone getting angry. Two ways are different if there exists a passenger who chose a different entrance in both ways, or the assigned seat is different. Print this count modulo 109 + 7.",
    "input": "The first line of input will contain two integers n, m ( 1 \u2264 m \u2264 n \u2264 1 000 000) , the number of seats, and the number of passengers, respectively.",
    "output": "Print a single number, the number of ways, modulo 109 + 7.",
    "note": "Here, we will denote a passenger by which seat they were assigned, and which side they came from ( either \" F\" or \" B\" for front or back, respectively) . For example, one valid way is 3B, 3B, 3B ( i. e. all passengers were assigned seat 3 and came from the back entrance) . Another valid way would be 2F, 1B, 3F. One invalid way would be 2B, 2B, 2B, since the third passenger would get to the front without finding a seat.",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "838D"
  },
  {
    "title": "The Meaningless Game",
    "url": "https://codeforces.com/problemset/problem/833/A",
    "history": "Slastyona and her loyal dog Pushok are playing a meaningless game that is indeed very interesting. The game consists of multiple rounds. Its rules are very simple: in each round, a natural number k is chosen. Then, the one who says ( or barks) it faster than the other wins the round. After that, the winner' s score is multiplied by k2, and the loser' s score is multiplied by k. In the beginning of the game, both Slastyona and Pushok have scores equal to one. Unfortunately, Slastyona had lost her notepad where the history of all n games was recorded. She managed to recall the final results for each games, though, but all of her memories of them are vague. Help Slastyona verify their correctness, or, to put it another way, for each given pair of scores determine whether it was possible for a game to finish with such result or not.",
    "input": "In the first string, the number of games n ( 1 \u2264 n \u2264 350000) is given. Each game is represented by a pair of scores a, b ( 1 \u2264 a, b \u2264 109) \u2013 the results of Slastyona and Pushok, correspondingly.",
    "output": "For each pair of scores, answer \" Yes\" if it' s possible for a game to finish with given score, and \" No\" otherwise. You can output each letter in arbitrary case ( upper or lower) .",
    "note": "First game might have been consisted of one round, in which the number 2 would have been chosen and Pushok would have won. The second game needs exactly two rounds to finish with such result: in the first one, Slastyona would have said the number 5, and in the second one, Pushok would have barked the number 3.",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "833A"
  },
  {
    "title": "Bamboo Partition",
    "url": "https://codeforces.com/problemset/problem/830/C",
    "history": "Vladimir wants to modernize partitions in his office. To make the office more comfortable he decided to remove a partition and plant several bamboos in a row. He thinks it would be nice if there are n bamboos in a row, and the i- th from the left is ai meters high. Vladimir has just planted n bamboos in a row, each of which has height 0 meters right now, but they grow 1 meter each day. In order to make the partition nice Vladimir can cut each bamboo once at any height ( no greater that the height of the bamboo) , and then the bamboo will stop growing. Vladimir wants to check the bamboos each d days ( i. e. d days after he planted, then after 2d days and so on) , and cut the bamboos that reached the required height. Vladimir wants the total length of bamboo parts he will cut off to be no greater than k meters. What is the maximum value d he can choose so that he can achieve what he wants without cutting off more than k meters of bamboo?",
    "input": "The first line contains two integers n and k ( 1 \u2264 n \u2264 100, 1 \u2264 k \u2264 1011) \u2014 the number of bamboos and the maximum total length of cut parts, in meters. The second line contains n integers a1, a2, . . . , an ( 1 \u2264 ai \u2264 109) \u2014 the required heights of bamboos, in meters.",
    "output": "Print a single integer \u2014 the maximum value of d such that Vladimir can reach his goal.",
    "note": "In the first example Vladimir can check bamboos each 3 days. Then he will cut the first and the second bamboos after 3 days, and the third bamboo after 6 days. The total length of cut parts is 2 + 0 + 1 = 3 meters.",
    "topics": [
      "brute force",
      "data structures",
      "implementation",
      "math",
      "number theory",
      "sortings",
      "two pointers"
    ],
    "id": "830C"
  },
  {
    "title": "My pretty girl Noora",
    "url": "https://codeforces.com/problemset/problem/822/D",
    "history": "In Pavlopolis University where Noora studies it was decided to hold beauty contest \" Miss Pavlopolis University\" . Let' s describe the process of choosing the most beautiful girl in the university in more detail. The contest is held in several stages. Suppose that exactly n girls participate in the competition initially. All the participants are divided into equal groups, x participants in each group. Furthermore the number x is chosen arbitrarily, i. e. on every stage number x can be different. Within each group the jury of the contest compares beauty of the girls in the format \" each with each\" . In this way, if group consists of x girls, then comparisons occur. Then, from each group, the most beautiful participant is selected. Selected girls enter the next stage of the competition. Thus if n girls were divided into groups, x participants in each group, then exactly participants will enter the next stage. The contest continues until there is exactly one girl left who will be \" Miss Pavlopolis University\" But for the jury this contest is a very tedious task. They would like to divide the girls into groups in each stage so that the total number of pairwise comparisons of the girls is as few as possible. Let f( n) be the minimal total number of comparisons that should be made to select the most beautiful participant, if we admit n girls to the first stage. The organizers of the competition are insane. They give Noora three integers t, l and r and ask the poor girl to calculate the value of the following expression: t0\u00b7f( l) + t1\u00b7f( l + 1) + . . . + tr - l\u00b7f( r) . However, since the value of this expression can be quite large the organizers ask her to calculate it modulo 109 + 7. If Noora can calculate the value of this expression the organizers promise her to help during the beauty contest. But the poor girl is not strong in mathematics, so she turned for help to Leha and he turned to you.",
    "input": "The first and single line contains three integers t, l and r ( 1 \u2264 t < 109 + 7, 2 \u2264 l \u2264 r \u2264 5\u00b7106) .",
    "output": "In the first line print single integer \u2014 the value of the expression modulo 109 + 7.",
    "note": "Consider the sample. It is necessary to find the value of . f( 2) = 1. From two girls you can form only one group of two people, in which there will be one comparison. f( 3) = 3. From three girls you can form only one group of three people, in which there will be three comparisons. f( 4) = 3. From four girls you can form two groups of two girls each. Then at the first stage there will be two comparisons, one in each of the two groups. In the second stage there will be two girls and there will be one comparison between them. Total 2 + 1 = 3 comparisons. You can also leave all girls in same group in the first stage. Then comparisons will occur. Obviously, it' s better to split girls into groups in the first way. Then the value of the expression is .",
    "topics": [
      "brute force",
      "dp",
      "greedy",
      "math",
      "number theory"
    ],
    "id": "822D"
  },
  {
    "title": "I'm bored with life",
    "url": "https://codeforces.com/problemset/problem/822/A",
    "history": "Holidays have finished. Thanks to the help of the hacker Leha, Noora managed to enter the university of her dreams which is located in a town Pavlopolis. It' s well known that universities provide students with dormitory for the period of university studies. Consequently Noora had to leave Vic\u030ckopolis and move to Pavlopolis. Thus Leha was left completely alone in a quiet town Vic\u030ckopolis. He almost even fell into a depression from boredom! Leha came up with a task for himself to relax a little. He chooses two integers A and B and then calculates the greatest common divisor of integers \" A factorial\" and \" B factorial\" . Formally the hacker wants to find out GCD( A! , B! ) . It' s well known that the factorial of an integer x is a product of all positive integers less than or equal to x. Thus x! = 1\u00b72\u00b73\u00b7. . . \u00b7( x - 1) \u00b7x. For example 4! = 1\u00b72\u00b73\u00b74 = 24. Recall that GCD( x, y) is the largest positive integer q that divides ( without a remainder) both x and y. Leha has learned how to solve this task very effective. You are able to cope with it not worse, aren' t you?",
    "input": "The first and single line contains two integers A and B ( 1 \u2264 A, B \u2264 109, min( A, B) \u2264 12) .",
    "output": "Print a single integer denoting the greatest common divisor of integers A! and B! .",
    "note": "Consider the sample. 4! = 1\u00b72\u00b73\u00b74 = 24. 3! = 1\u00b72\u00b73 = 6. The greatest common divisor of integers 24 and 6 is exactly 6.",
    "topics": [
      "implementation",
      "math",
      "number theory"
    ],
    "id": "822A"
  },
  {
    "title": "Mister B and Astronomers",
    "url": "https://codeforces.com/problemset/problem/819/D",
    "history": "After studying the beacons Mister B decided to visit alien' s planet, because he learned that they live in a system of flickering star Moon. Moreover, Mister B learned that the star shines once in exactly T seconds. The problem is that the star is yet to be discovered by scientists. There are n astronomers numerated from 1 to n trying to detect the star. They try to detect the star by sending requests to record the sky for 1 second. The astronomers send requests in cycle: the i- th astronomer sends a request exactly ai second after the ( i - 1) - th ( i. e. if the previous request was sent at moment t, then the next request is sent at moment t + ai) ; the 1- st astronomer sends requests a1 seconds later than the n- th. The first astronomer sends his first request at moment 0. Mister B doesn' t know the first moment the star is going to shine, but it' s obvious that all moments at which the star will shine are determined by the time of its shine moment in the interval [ 0, T) . Moreover, this interval can be split into T parts of 1 second length each of form [ t, t + 1) , where t = 0, 1, 2, . . . , ( T - 1) . Mister B wants to know how lucky each astronomer can be in discovering the star first. For each astronomer compute how many segments of form [ t, t + 1) ( t = 0, 1, 2, . . . , ( T - 1) ) there are in the interval [ 0, T) so that this astronomer is the first to discover the star if the first shine of the star happens in this time interval.",
    "input": "The first line contains two integers T and n ( 1 \u2264 T \u2264 109, 2 \u2264 n \u2264 2\u00b7105) . The second line contains n integers a1, a2, . . . , an ( 1 \u2264 ai \u2264 109) .",
    "output": "Print n integers: for each astronomer print the number of time segments describer earlier.",
    "note": "In the first sample test the first astronomer will send requests at moments t1 = 0, 5, 10, . . . , the second \u2014 at moments t2 = 3, 8, 13, . . . . That' s why interval [ 0, 1) the first astronomer will discover first at moment t1 = 0, [ 1, 2) \u2014 the first astronomer at moment t1 = 5, [ 2, 3) \u2014 the first astronomer at moment t1 = 10, and [ 3, 4) \u2014 the second astronomer at moment t2 = 3. In the second sample test interval [ 0, 1) \u2014 the first astronomer will discover first, [ 1, 2) \u2014 the second astronomer, [ 2, 3) \u2014 the third astronomer, [ 3, 4) \u2014 the fourth astronomer, [ 4, 5) \u2014 the first astronomer.",
    "topics": [
      "number theory"
    ],
    "id": "819D"
  },
  {
    "title": "Mister B and Beacons on Field",
    "url": "https://codeforces.com/problemset/problem/819/C",
    "history": "Mister B has a house in the middle of a giant plain field, which attracted aliens life. For convenience, aliens specified the Cartesian coordinate system on the field in such a way that Mister B' s house has coordinates ( 0, 0) . After that they sent three beacons to the field, but something went wrong. One beacon was completely destroyed, while the other two landed in positions with coordinates ( m, 0) and ( 0, n) , respectively, but shut down. Mister B was interested in this devices, so he decided to take them home. He came to the first beacon, placed at ( m, 0) , lifted it up and carried the beacon home choosing the shortest path. After that he came to the other beacon, placed at ( 0, n) , and also carried it home choosing the shortest path. When first beacon was lifted up, the navigation system of the beacons was activated. Partially destroyed navigation system started to work in following way. At time moments when both survived beacons are at points with integer coordinates the system tries to find a location for the third beacon. It succeeds if and only if there is a point with integer coordinates such that the area of the triangle formed by the two survived beacons and this point is equal to s. In this case the system sends a packet of information with beacon positions to aliens, otherwise it doesn' t. Compute how many packets of information system sent while Mister B was moving the beacons.",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 1000) \u2014 the number of test cases. The next 3\u00b7t lines describe t test cases. Every test case is described in three lines as follows. Note that each parameter is given as a product of three factors. The first line of a test case contains three space- separated integers: n1, n2, n3 ( 1 \u2264 ni \u2264 106) such that n = n1\u00b7n2\u00b7n3. The second line contains three space- separated integers: m1, m2, m3 ( 1 \u2264 mi \u2264 106) such that m = m1\u00b7m2\u00b7m3. The third line contains three space- separated integers: s1, s2, s3 ( 1 \u2264 si \u2264 106) such that s = s1\u00b7s2\u00b7s3. Note that for hacks only tests with t = 1 allowed.",
    "output": "Print t integers one per line \u2014 the answers for each test.",
    "note": "First test case contains the following beacon positions: ( 2, 0) and ( 0, 2) , s = 3. The following packets could be sent: ( ( 2, 0) , ( 0, 2) , ( - 1, 0) ) , ( ( 1, 0) , ( 0, 2) , ( 4, 0) ) , ( ( 0, 0) , ( 0, 2) , ( 3, 1) ) , ( ( 0, 0) , ( 0, 1) , ( - 6, 0) ) , where ( b1, b2, p) has next description: b1 \u2014 first beacon position, b2 \u2014 second beacon position, p \u2014 some generated point. Second test case contains the following beacon initial positions: ( 4, 0) and ( 0, 5) , s = 2. The following packets could be sent: ( ( 4, 0) , ( 0, 5) , ( 0, 4) ) , ( ( 3, 0) , ( 0, 5) , ( 2, 3) ) , ( ( 2, 0) , ( 0, 5) , ( 2, 2) ) , ( ( 1, 0) , ( 0, 5) , ( 1, 4) ) , ( ( 0, 0) , ( 0, 4) , ( 0, - 1) ) , ( ( 0, 0) , ( 0, 2) , ( 2, 0) ) , ( ( 0, 0) , ( 0, 1) , ( 4, 0) ) .",
    "topics": [
      "number theory"
    ],
    "id": "819C"
  },
  {
    "title": "Card Game Again",
    "url": "https://codeforces.com/problemset/problem/818/E",
    "history": "Vova again tries to play some computer card game. The rules of deck creation in this game are simple. Vova is given an existing deck of n cards and a magic number k. The order of the cards in the deck is fixed. Each card has a number written on it; number ai is written on the i- th card in the deck. After receiving the deck and the magic number, Vova removes x ( possibly x = 0) cards from the top of the deck, y ( possibly y = 0) cards from the bottom of the deck, and the rest of the deck is his new deck ( Vova has to leave at least one card in the deck after removing cards) . So Vova' s new deck actually contains cards x + 1, x + 2, . . . n - y - 1, n - y from the original deck. Vova' s new deck is considered valid iff the product of all numbers written on the cards in his new deck is divisible by k. So Vova received a deck ( possibly not a valid one) and a number k, and now he wonders, how many ways are there to choose x and y so the deck he will get after removing x cards from the top and y cards from the bottom is valid?",
    "input": "The first line contains two integers n and k ( 1 \u2264 n \u2264 100 000, 1 \u2264 k \u2264 109) . The second line contains n integers a1, a2, . . . , an ( 1 \u2264 ai \u2264 109) \u2014 the numbers written on the cards.",
    "output": "Print the number of ways to choose x and y so the resulting deck is valid.",
    "note": "In the first example the possible values of x and y are: x = 0, y = 0; x = 1, y = 0; x = 2, y = 0; x = 0, y = 1.",
    "topics": [
      "binary search",
      "data structures",
      "number theory",
      "two pointers"
    ],
    "id": "818E"
  },
  {
    "title": "Treasure Hunt",
    "url": "https://codeforces.com/problemset/problem/817/A",
    "history": "Captain Bill the Hummingbird and his crew recieved an interesting challenge offer. Some stranger gave them a map, potion of teleportation and said that only this potion might help them to reach the treasure. Bottle with potion has two values x and y written on it. These values define four moves which can be performed using the potion: Map shows that the position of Captain Bill the Hummingbird is ( x1, y1) and the position of the treasure is ( x2, y2) . You task is to tell Captain Bill the Hummingbird whether he should accept this challenge or decline. If it is possible for Captain to reach the treasure using the potion then output \" YES\" , otherwise \" NO\" ( without quotes) . The potion can be used infinite amount of times.",
    "input": "The first line contains four integer numbers x1, y1, x2, y2 ( - 105 \u2264 x1, y1, x2, y2 \u2264 105) \u2014 positions of Captain Bill the Hummingbird and treasure respectively. The second line contains two integer numbers x, y ( 1 \u2264 x, y \u2264 105) \u2014 values on the potion bottle.",
    "output": "Print \" YES\" if it is possible for Captain to reach the treasure using the potion, otherwise print \" NO\" ( without quotes) .",
    "note": "In the first example there exists such sequence of moves: \u2014 the first type of move \u2014 the third type of move",
    "topics": [
      "implementation",
      "math",
      "number theory"
    ],
    "id": "817A"
  },
  {
    "title": "Surprise me!",
    "url": "https://codeforces.com/problemset/problem/809/E",
    "history": "Tired of boring dates, Leha and Noora decided to play a game. Leha found a tree with n vertices numbered from 1 to n. We remind you that tree is an undirected graph without cycles. Each vertex v of a tree has a number av written on it. Quite by accident it turned out that all values written on vertices are distinct and are natural numbers between 1 and n. The game goes in the following way. Noora chooses some vertex u of a tree uniformly at random and passes a move to Leha. Leha, in his turn, chooses ( also uniformly at random) some vertex v from remaining vertices of a tree ( v = \u0338 u) . As you could guess there are n( n - 1) variants of choosing vertices by players. After that players calculate the value of a function f( u, v) = \u03c6( au\u00b7av) \u00b7 d( u, v) of the chosen vertices where \u03c6( x) is Euler' s totient function and d( x, y) is the shortest distance between vertices x and y in a tree. Soon the game became boring for Noora, so Leha decided to defuse the situation and calculate expected value of function f over all variants of choosing vertices u and v, hoping of at least somehow surprise the girl. Leha asks for your help in calculating this expected value. Let this value be representable in the form of an irreducible fraction . To further surprise Noora, he wants to name her the value . Help Leha!",
    "input": "The first line of input contains one integer number n ( 2 \u2264 n \u2264 2\u00b7105) \u2014 number of vertices in a tree. The second line contains n different numbers a1, a2, . . . , an ( 1 \u2264 ai \u2264 n) separated by spaces, denoting the values written on a tree vertices. Each of the next n - 1 lines contains two integer numbers x and y ( 1 \u2264 x, y \u2264 n) , describing the next edge of a tree. It is guaranteed that this set of edges describes a tree.",
    "output": "In a single line print a number equal to P\u00b7Q - 1 modulo 109 + 7.",
    "note": "Euler' s totient function \u03c6( n) is the number of such i that 1 \u2264 i \u2264 n, and gcd( i, n) = 1, where gcd( x, y) is the greatest common divisor of numbers x and y. There are 6 variants of choosing vertices by Leha and Noora in the first testcase: u = 1, v = 2, f( 1, 2) = \u03c6( a1\u00b7a2) \u00b7d( 1, 2) = \u03c6( 1\u00b72) \u00b71 = \u03c6( 2) = 1 u = 2, v = 1, f( 2, 1) = f( 1, 2) = 1 u = 1, v = 3, f( 1, 3) = \u03c6( a1\u00b7a3) \u00b7d( 1, 3) = \u03c6( 1\u00b73) \u00b72 = 2\u03c6( 3) = 4 u = 3, v = 1, f( 3, 1) = f( 1, 3) = 4 u = 2, v = 3, f( 2, 3) = \u03c6( a2\u00b7a3) \u00b7d( 2, 3) = \u03c6( 2\u00b73) \u00b71 = \u03c6( 6) = 2 u = 3, v = 2, f( 3, 2) = f( 2, 3) = 2 Expected value equals to . The value Leha wants to name Noora is 7\u00b73 - 1 = 7\u00b7333333336 = 333333338 . In the second testcase expected value equals to , so Leha will have to surprise Hoora by number 8\u00b71 - 1 = 8 .",
    "topics": [
      "divide and conquer",
      "math",
      "number theory",
      "trees"
    ],
    "id": "809E"
  },
  {
    "title": "Fake bullions",
    "url": "https://codeforces.com/problemset/problem/804/F",
    "history": "In Isart people don' t die. There are n gangs of criminals. The i- th gang contains si evil people numerated from 0 to si - 1. Some of these people took part in a big mine robbery and picked one gold bullion each ( these people are given in the input) . That happened 10100 years ago and then all of the gangs escaped to a remote area, far from towns. During the years, they were copying some gold bullions according to an organized plan in order to not get arrested. They constructed a tournament directed graph ( a graph where there is exactly one directed edge between every pair of vertices) of gangs ( the graph is given in the input) . In this graph an edge from u to v means that in the i- th hour the person of the gang u can send a fake gold bullion to person of gang v. He sends it if he has some bullion ( real or fake) , while the receiver doesn' t have any. Thus, at any moment each of the gangsters has zero or one gold bullion. Some of them have real bullions, and some of them have fake ones. In the beginning of this year, the police has finally found the gangs, but they couldn' t catch them, as usual. The police decided to open a jewelry store so that the gangsters would sell the bullions. Thus, every gangster that has a bullion ( fake or real) will try to sell it. If he has a real gold bullion, he sells it without problems, but if he has a fake one, there is a choice of two events that can happen: The person sells the gold bullion successfully. The person is arrested by police. The power of a gang is the number of people in it that successfully sold their bullion. After all selling is done, the police arrests b gangs out of top gangs. Sort the gangs by powers, we call the first a gang top gangs( you can sort the equal powers in each order) . Consider all possible results of selling fake gold bullions and all possible choice of b gangs among the top gangs. Count the number of different sets of these b gangs modulo 109 + 7. Two sets X and Y are considered different if some gang is in X and isn' t in Y.",
    "input": "The first line contains four integers n, a and b ( 1 \u2264 b \u2264 a \u2264 n \u2264 5\u00b7103) \u2014 the number of gangs, the constants a and b from the statement. Then n lines follow, each line contains a string of size n consisting of zeros and ones. The j- th character in the i- th of these lines is equal to 1, then the vertex i have a directed edge to the vertex j. It is guaranteed that aii = 0 and aij + aji = 1 if i = \u0338 j. Then n lines follow, each line starts with the integer si ( 1 \u2264 si \u2264 2\u00b7106) \u2014 the number of gangsters in the i- th gang, and then contains a string of zeros and ones with length si. The j- th character is 0 if the j- th person of the i- th gang had a real gold bullion initially, otherwise it is 1. It is guaranteed that the sum of si does not exceed 2\u00b7106.",
    "output": "Print single integer: the number of different sets of b gangs the police can arrest modulo 109 + 7.",
    "note": "",
    "topics": [
      "combinatorics",
      "dfs and similar",
      "dp",
      "graphs",
      "number theory"
    ],
    "id": "804F"
  },
  {
    "title": "Coprime Subsequences",
    "url": "https://codeforces.com/problemset/problem/803/F",
    "history": "Let' s call a non- empty sequence of positive integers a1, a2. . . ak coprime if the greatest common divisor of all elements of this sequence is equal to 1. Given an array a consisting of n positive integers, find the number of its coprime subsequences. Since the answer may be very large, print it modulo 109 + 7. Note that two subsequences are considered different if chosen indices are different. For example, in the array [ 1, 1] there are 3 different subsequences: [ 1] , [ 1] and [ 1, 1] .",
    "input": "The first line contains one integer number n ( 1 \u2264 n \u2264 100000) . The second line contains n integer numbers a1, a2. . . an ( 1 \u2264 ai \u2264 100000) .",
    "output": "Print the number of coprime subsequences of a modulo 109 + 7.",
    "note": "In the first example coprime subsequences are: 1 1, 2 1, 3 1, 2, 3 2, 3 In the second example all subsequences are coprime.",
    "topics": [
      "bitmasks",
      "combinatorics",
      "number theory"
    ],
    "id": "803F"
  },
  {
    "title": "Mike and gcd problem",
    "url": "https://codeforces.com/problemset/problem/798/C",
    "history": "Mike has a sequence A = [ a1, a2, . . . , an] of length n. He considers the sequence B = [ b1, b2, . . . , bn] beautiful if the gcd of all its elements is bigger than 1, i. e. . Mike wants to change his sequence in order to make it beautiful. In one move he can choose an index i ( 1 \u2264 i < n) , delete numbers ai, ai + 1 and put numbers ai - ai + 1, ai + ai + 1 in their place instead, in this order. He wants perform as few operations as possible. Find the minimal number of operations to make sequence A beautiful if it' s possible, or tell him that it is impossible to do so. is the biggest non- negative number d such that d divides bi for every i ( 1 \u2264 i \u2264 n) .",
    "input": "The first line contains a single integer n ( 2 \u2264 n \u2264 100 000) \u2014 length of sequence A. The second line contains n space- separated integers a1, a2, . . . , an ( 1 \u2264 ai \u2264 109) \u2014 elements of sequence A.",
    "output": "Output on the first line \" YES\" ( without quotes) if it is possible to make sequence A beautiful by performing operations described above, and \" NO\" ( without quotes) otherwise. If the answer was \" YES\" , output the minimal number of moves needed to make sequence A beautiful.",
    "note": "In the first example you can simply make one move to obtain sequence [ 0, 2] with . In the second example the gcd of the sequence is already greater than 1.",
    "topics": [
      "dp",
      "greedy",
      "number theory"
    ],
    "id": "798C"
  },
  {
    "title": "k-Factorization",
    "url": "https://codeforces.com/problemset/problem/797/A",
    "history": "Given a positive integer n, find k integers ( not necessary distinct) such that all these integers are strictly greater than 1, and their product is equal to n.",
    "input": "The first line contains two integers n and k ( 2 \u2264 n \u2264 100000, 1 \u2264 k \u2264 20) .",
    "output": "If it' s impossible to find the representation of n as a product of k numbers, print - 1. Otherwise, print k integers in any order. Their product must be equal to n. If there are multiple answers, print any of them.",
    "note": "",
    "topics": [
      "implementation",
      "math",
      "number theory"
    ],
    "id": "797A"
  },
  {
    "title": "Colored Balls",
    "url": "https://codeforces.com/problemset/problem/792/E",
    "history": "There are n boxes with colored balls on the table. Colors are numbered from 1 to n. i- th box contains ai balls, all of which have color i. You have to write a program that will divide all balls into sets such that: each ball belongs to exactly one of the sets, there are no empty sets, there is no set containing two ( or more) balls of different colors ( each set contains only balls of one color) , there are no two sets such that the difference between their sizes is greater than 1. Print the minimum possible number of sets.",
    "input": "The first line contains one integer number n ( 1 \u2264 n \u2264 500) . The second line contains n integer numbers a1, a2, . . . , an ( 1 \u2264 ai \u2264 109) .",
    "output": "Print one integer number \u2014 the minimum possible number of sets.",
    "note": "In the first example the balls can be divided into sets like that: one set with 4 balls of the first color, two sets with 3 and 4 balls, respectively, of the second color, and two sets with 4 balls of the third color.",
    "topics": [
      "greedy",
      "math",
      "number theory"
    ],
    "id": "792E"
  },
  {
    "title": "Divide by Three",
    "url": "https://codeforces.com/problemset/problem/792/C",
    "history": "A positive integer number n is written on a blackboard. It consists of not more than 105 digits. You have to transform it into a beautiful number by erasing some of the digits, and you want to erase as few digits as possible. The number is called beautiful if it consists of at least one digit, doesn' t have leading zeroes and is a multiple of 3. For example, 0, 99, 10110 are beautiful numbers, and 00, 03, 122 are not. Write a program which for the given n will find a beautiful number such that n can be transformed into this number by erasing as few digits as possible. You can erase an arbitraty set of digits. For example, they don' t have to go one after another in the number n. If it' s impossible to obtain a beautiful number, print - 1. If there are multiple answers, print any of them.",
    "input": "The first line of input contains n \u2014 a positive integer number without leading zeroes ( 1 \u2264 n < 10100000) .",
    "output": "Print one number \u2014 any beautiful number obtained by erasing as few as possible digits. If there is no answer, print - 1.",
    "note": "In the first example it is enough to erase only the first digit to obtain a multiple of 3. But if we erase the first digit, then we obtain a number with a leading zero. So the minimum number of digits to be erased is two.",
    "topics": [
      "dp",
      "greedy",
      "math",
      "number theory"
    ],
    "id": "792C"
  },
  {
    "title": "The Monster",
    "url": "https://codeforces.com/problemset/problem/787/A",
    "history": "A monster is chasing after Rick and Morty on another planet. They' re so frightened that sometimes they scream. More accurately, Rick screams at times b, b + a, b + 2a, b + 3a, . . . and Morty screams at times d, d + c, d + 2c, d + 3c, . . . . The Monster will catch them if at any point they scream at the same time, so it wants to know when it will catch them ( the first time they scream at the same time) or that they will never scream at the same time.",
    "input": "The first line of input contains two integers a and b ( 1 \u2264 a, b \u2264 100) . The second line contains two integers c and d ( 1 \u2264 c, d \u2264 100) .",
    "output": "Print the first time Rick and Morty will scream at the same time, or - 1 if they will never scream at the same time.",
    "note": "In the first sample testcase, Rick' s 5th scream and Morty' s 8th time are at time 82. In the second sample testcase, all Rick' s screams will be at odd times and Morty' s will be at even times, so they will never scream at the same time.",
    "topics": [
      "brute force",
      "math",
      "number theory"
    ],
    "id": "787A"
  },
  {
    "title": "Anton and School - 2",
    "url": "https://codeforces.com/problemset/problem/785/D",
    "history": "As you probably know, Anton goes to school. One of the school subjects that Anton studies is Bracketology. On the Bracketology lessons students usually learn different sequences that consist of round brackets ( characters \" ( \" and \" ) \" ( without quotes) ) . On the last lesson Anton learned about the regular simple bracket sequences ( RSBS) . A bracket sequence s of length n is an RSBS if the following conditions are met: It is not empty ( that is n = \u0338 0) . The length of the sequence is even. First charactes of the sequence are equal to \" ( \" . Last charactes of the sequence are equal to \" ) \" . For example, the sequence \" ( ( ( ) ) ) \" is an RSBS but the sequences \" ( ( ( ) ) \" and \" ( ( ) ( ) ) \" are not RSBS. Elena Ivanovna, Anton' s teacher, gave him the following task as a homework. Given a bracket sequence s. Find the number of its distinct subsequences such that they are RSBS. Note that a subsequence of s is a string that can be obtained from s by deleting some of its elements. Two subsequences are considered distinct if distinct sets of positions are deleted. Because the answer can be very big and Anton' s teacher doesn' t like big numbers, she asks Anton to find the answer modulo 109 + 7. Anton thought of this task for a very long time, but he still doesn' t know how to solve it. Help Anton to solve this task and write a program that finds the answer for it!",
    "input": "The only line of the input contains a string s \u2014 the bracket sequence given in Anton' s homework. The string consists only of characters \" ( \" and \" ) \" ( without quotes) . It' s guaranteed that the string is not empty and its length doesn' t exceed 200 000.",
    "output": "Output one number \u2014 the answer for the task modulo 109 + 7.",
    "note": "In the first sample the following subsequences are possible: If we delete characters at the positions 1 and 5 ( numbering starts with one) , we will get the subsequence \" ( ( ) ) \" . If we delete characters at the positions 1, 2, 3 and 4, we will get the subsequence \" ( ) \" . If we delete characters at the positions 1, 2, 4 and 5, we will get the subsequence \" ( ) \" . If we delete characters at the positions 1, 2, 5 and 6, we will get the subsequence \" ( ) \" . If we delete characters at the positions 1, 3, 4 and 5, we will get the subsequence \" ( ) \" . If we delete characters at the positions 1, 3, 5 and 6, we will get the subsequence \" ( ) \" . The rest of the subsequnces are not RSBS. So we got 6 distinct subsequences that are RSBS, so the answer is 6.",
    "topics": [
      "combinatorics",
      "dp",
      "math",
      "number theory"
    ],
    "id": "785D"
  },
  {
    "title": "The Holmes Children",
    "url": "https://codeforces.com/problemset/problem/776/E",
    "history": "The Holmes children are fighting over who amongst them is the cleverest. Mycroft asked Sherlock and Eurus to find value of f( n) , where f( 1) = 1 and for n \u2265 2, f( n) is the number of distinct ordered positive integer pairs ( x, y) that satisfy x + y = n and gcd( x, y) = 1. The integer gcd( a, b) is the greatest common divisor of a and b. Sherlock said that solving this was child' s play and asked Mycroft to instead get the value of . Summation is done over all positive integers d that divide n. Eurus was quietly observing all this and finally came up with her problem to astonish both Sherlock and Mycroft. She defined a k- composite function Fk( n) recursively as follows: She wants them to tell the value of Fk( n) modulo 1000000007.",
    "input": "A single line of input contains two space separated integers n ( 1 \u2264 n \u2264 1012) and k ( 1 \u2264 k \u2264 1012) indicating that Eurus asks Sherlock and Mycroft to find the value of Fk( n) modulo 1000000007.",
    "output": "Output a single integer \u2014 the value of Fk( n) modulo 1000000007.",
    "note": "In the first case, there are 6 distinct ordered pairs ( 1, 6) , ( 2, 5) , ( 3, 4) , ( 4, 3) , ( 5, 2) and ( 6, 1) satisfying x + y = 7 and gcd( x, y) = 1. Hence, f( 7) = 6. So, F1( 7) = f( g( 7) ) = f( f( 7) + f( 1) ) = f( 6 + 1) = f( 7) = 6.",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "776E"
  },
  {
    "title": "Sherlock and his girlfriend",
    "url": "https://codeforces.com/problemset/problem/776/B",
    "history": "Sherlock has a new girlfriend ( so unlike him! ) . Valentine' s day is coming and he wants to gift her some jewelry. He bought n pieces of jewelry. The i- th piece has price equal to i + 1, that is, the prices of the jewelry are 2, 3, 4, . . . n + 1. Watson gave Sherlock a challenge to color these jewelry pieces such that two pieces don' t have the same color if the price of one piece is a prime divisor of the price of the other piece. Also, Watson asked him to minimize the number of different colors used. Help Sherlock complete this trivial task.",
    "input": "The only line contains single integer n ( 1 \u2264 n \u2264 100000) \u2014 the number of jewelry pieces.",
    "output": "The first line of output should contain a single integer k, the minimum number of colors that can be used to color the pieces of jewelry with the given constraints. The next line should consist of n space- separated integers ( between 1 and k) that specify the color of each piece in the order of increasing price. If there are multiple ways to color the pieces using k colors, you can output any of them.",
    "note": "In the first input, the colors for first, second and third pieces of jewelry having respective prices 2, 3 and 4 are 1, 1 and 2 respectively. In this case, as 2 is a prime divisor of 4, colors of jewelry having prices 2 and 4 must be distinct.",
    "topics": [
      "constructive algorithms",
      "number theory"
    ],
    "id": "776B"
  },
  {
    "title": "Perfectionist Arkadiy",
    "url": "https://codeforces.com/problemset/problem/774/G",
    "history": "Arkadiy has lots square photos with size a \u00d7 a. He wants to put some of them on a rectangular wall with size h \u00d7 w. The photos which Arkadiy will put on the wall must form a rectangular grid and the distances between neighboring vertically and horizontally photos and also the distances between outside rows and columns of photos to the nearest bound of the wall must be equal to x, where x is some non- negative real number. Look on the picture below for better understanding of the statement. Arkadiy haven' t chosen yet how many photos he would put on the wall, however, he want to put at least one photo. Your task is to determine the minimum value of x which can be obtained after putting photos, or report that there is no way to put positive number of photos and satisfy all the constraints. Suppose that Arkadiy has enough photos to make any valid arrangement according to the constraints. Note that Arkadiy wants to put at least one photo on the wall. The photos should not overlap, should completely lie inside the wall bounds and should have sides parallel to the wall sides.",
    "input": "The first line contains three integers a, h and w ( 1 \u2264 a, h, w \u2264 109) \u2014 the size of photos and the height and the width of the wall.",
    "output": "Print one non- negative real number \u2014 the minimum value of x which can be obtained after putting the photos on the wall. The absolute or the relative error of the answer must not exceed 10 - 6. Print - 1 if there is no way to put positive number of photos and satisfy the constraints.",
    "note": "In the first example Arkadiy can put 7 rows of photos with 5 photos in each row, so the minimum value of x equals to 0. 5. In the second example Arkadiy can put only 1 photo which will take the whole wall, so the minimum value of x equals to 0. In the third example there is no way to put positive number of photos and satisfy the constraints described in the statement, so the answer is - 1.",
    "topics": [
      "*special",
      "number theory"
    ],
    "id": "774G"
  },
  {
    "title": "Pens And Days Of Week",
    "url": "https://codeforces.com/problemset/problem/774/F",
    "history": "Stepan has n pens. Every day he uses them, and on the i- th day he uses the pen number i. On the ( n + 1) - th day again he uses the pen number 1, on the ( n + 2) - th \u2014 he uses the pen number 2 and so on. On every working day ( from Monday to Saturday, inclusive) Stepan spends exactly 1 milliliter of ink of the pen he uses that day. On Sunday Stepan has a day of rest, he does not stend the ink of the pen he uses that day. Stepan knows the current volume of ink in each of his pens. Now it' s the Monday morning and Stepan is going to use the pen number 1 today. Your task is to determine which pen will run out of ink before all the rest ( that is, there will be no ink left in it) , if Stepan will use the pens according to the conditions described above.",
    "input": "The first line contains the integer n ( 1 \u2264 n \u2264 50 000) \u2014 the number of pens Stepan has. The second line contains the sequence of integers a1, a2, . . . , an ( 1 \u2264 ai \u2264 109) , where ai is equal to the number of milliliters of ink which the pen number i currently has.",
    "output": "Print the index of the pen which will run out of ink before all ( it means that there will be no ink left in it) , if Stepan will use pens according to the conditions described above. Pens are numbered in the order they are given in input data. The numeration begins from one. Note that the answer is always unambiguous, since several pens can not end at the same time.",
    "note": "In the first test Stepan uses ink of pens as follows: on the day number 1 ( Monday) Stepan will use the pen number 1, after that there will be 2 milliliters of ink in it; on the day number 2 ( Tuesday) Stepan will use the pen number 2, after that there will be 2 milliliters of ink in it; on the day number 3 ( Wednesday) Stepan will use the pen number 3, after that there will be 2 milliliters of ink in it; on the day number 4 ( Thursday) Stepan will use the pen number 1, after that there will be 1 milliliters of ink in it; on the day number 5 ( Friday) Stepan will use the pen number 2, after that there will be 1 milliliters of ink in it; on the day number 6 ( Saturday) Stepan will use the pen number 3, after that there will be 1 milliliters of ink in it; on the day number 7 ( Sunday) Stepan will use the pen number 1, but it is a day of rest so he will not waste ink of this pen in it; on the day number 8 ( Monday) Stepan will use the pen number 2, after that this pen will run out of ink. So, the first pen which will not have ink is the pen number 2.",
    "topics": [
      "*special",
      "binary search",
      "number theory"
    ],
    "id": "774F"
  },
  {
    "title": "Big Number and Remainder",
    "url": "https://codeforces.com/problemset/problem/774/E",
    "history": "Stepan has a very big positive integer. Let' s consider all cyclic shifts of Stepan' s integer ( if we look at his integer like at a string) which are also integers ( i. e. they do not have leading zeros) . Let' s call such shifts as good shifts. For example, for the integer 10203 the good shifts are the integer itself 10203 and integers 20310 and 31020. Stepan wants to know the minimum remainder of the division by the given number m among all good shifts. Your task is to determine the minimum remainder of the division by m.",
    "input": "The first line contains the integer which Stepan has. The length of Stepan' s integer is between 2 and 200 000 digits, inclusive. It is guaranteed that Stepan' s integer does not contain leading zeros. The second line contains the integer m ( 2 \u2264 m \u2264 108) \u2014 the number by which Stepan divides good shifts of his integer.",
    "output": "Print the minimum remainder which Stepan can get if he divides all good shifts of his integer by the given number m.",
    "note": "In the first example all good shifts of the integer 521 ( good shifts are equal to 521, 215 and 152) has same remainder 2 when dividing by 3. In the second example there are only two good shifts: the Stepan' s integer itself and the shift by one position to the right. The integer itself is 1001 and the remainder after dividing it by 5 equals 1. The shift by one position to the right equals to 1100 and the remainder after dividing it by 5 equals 0, which is the minimum possible remainder.",
    "topics": [
      "*special",
      "math",
      "number theory"
    ],
    "id": "774E"
  },
  {
    "title": "Test Data Generation",
    "url": "https://codeforces.com/problemset/problem/773/F",
    "history": "Test data generation is not an easy task! Often, generating big random test cases is not enough to ensure thorough testing of solutions for correctness. For example, consider a problem from an old Codeforces round. Its input format looks roughly as follows: The first line contains a single integer n ( 1 \u2264 n \u2264 maxn) \u2014 the size of the set. The second line contains n distinct integers a1, a2, . . . , an ( 1 \u2264 ai \u2264 maxa) \u2014 the elements of the set in increasing order. If you don' t pay attention to the problem solution, it looks fairly easy to generate a good test case for this problem. Let n = maxn, take random distinct ai from 1 to maxa, sort them. . . Soon you understand that it' s not that easy. Here is the actual problem solution. Let g be the greatest common divisor of a1, a2, . . . , an. Let x = an / g - n. Then the correct solution outputs \" Alice\" if x is odd, and \" Bob\" if x is even. Consider two wrong solutions to this problem which differ from the correct one only in the formula for calculating x. The first wrong solution calculates x as x = an / g ( without subtracting n) . The second wrong solution calculates x as x = an - n ( without dividing by g) . A test case is interesting if it makes both wrong solutions output an incorrect answer. Given maxn, maxa and q, find the number of interesting test cases satisfying the constraints, and output it modulo q.",
    "input": "The only line contains three integers maxn, maxa and q ( 1 \u2264 maxn \u2264 30 000; maxn \u2264 maxa \u2264 109; 104 \u2264 q \u2264 105 + 129) .",
    "output": "Output a single integer \u2014 the number of test cases which satisfy the constraints and make both wrong solutions output an incorrect answer, modulo q.",
    "note": "In the first example, interesting test cases look as follows: 1 1 1 32 4 6 2 4 6",
    "topics": [
      "combinatorics",
      "divide and conquer",
      "dp",
      "fft",
      "math",
      "number theory"
    ],
    "id": "773F"
  },
  {
    "title": "Vulnerable Kerbals",
    "url": "https://codeforces.com/problemset/problem/772/C",
    "history": "You are given an integer m, and a list of n distinct integers between 0 and m - 1. You would like to construct a sequence satisfying the properties: Each element is an integer between 0 and m - 1, inclusive. All prefix products of the sequence modulo m are distinct. No prefix product modulo m appears as an element of the input list. The length of the sequence is maximized. Construct any sequence satisfying the properties above.",
    "input": "The first line of input contains two integers n and m ( 0 \u2264 n < m \u2264 200 000) \u2014 the number of forbidden prefix products and the modulus. If n is non- zero, the next line of input contains n distinct integers between 0 and m - 1, the forbidden prefix products. If n is zero, this line doesn' t exist.",
    "output": "On the first line, print the number k, denoting the length of your sequence. On the second line, print k space separated integers, denoting your sequence.",
    "note": "For the first case, the prefix products of this sequence modulo m are [ 1, 2, 3, 4, 0] . For the second case, the prefix products of this sequence modulo m are [ 3, 7, 4, 6, 8, 0] .",
    "topics": [
      "constructive algorithms",
      "dp",
      "graphs",
      "math",
      "number theory"
    ],
    "id": "772C"
  },
  {
    "title": "Barrels and boxes",
    "url": "https://codeforces.com/problemset/problem/768/F",
    "history": "Tarly has two different type of items, food boxes and wine barrels. There are f food boxes and w wine barrels. Tarly stores them in various stacks and each stack can consist of either food boxes or wine barrels but not both. The stacks are placed in a line such that no two stacks of food boxes are together and no two stacks of wine barrels are together. The height of a stack is defined as the number of items in the stack. Two stacks are considered different if either their heights are different or one of them contains food and other contains wine. Jon Snow doesn' t like an arrangement if any stack of wine barrels has height less than or equal to h. What is the probability that Jon Snow will like the arrangement if all arrangement are equiprobably? Two arrangement of stacks are considered different if exists such i, that i- th stack of one arrangement is different from the i- th stack of the other arrangement.",
    "input": "The first line of input contains three integers f, w, h ( 0 \u2264 f, w, h \u2264 105) \u2014 number of food boxes, number of wine barrels and h is as described above. It is guaranteed that he has at least one food box or at least one wine barrel.",
    "output": "Output the probability that Jon Snow will like the arrangement. The probability is of the form , then you need to output a single integer p\u00b7q - 1 mod ( 109 + 7) .",
    "note": "In the first example f = 1, w = 1 and h = 1, there are only two possible arrangement of stacks and Jon Snow doesn' t like any of them. In the second example f = 1, w = 2 and h = 1, there are three arrangements. Jon Snow likes the ( 1) and ( 3) arrangement. So the probabilty is .",
    "topics": [
      "brute force",
      "combinatorics",
      "math",
      "number theory",
      "probabilities"
    ],
    "id": "768F"
  },
  {
    "title": "Mahmoud and a Triangle",
    "url": "https://codeforces.com/problemset/problem/766/B",
    "history": "Mahmoud has n line segments, the i- th of them has length ai. Ehab challenged him to use exactly 3 line segments to form a non- degenerate triangle. Mahmoud doesn' t accept challenges unless he is sure he can win, so he asked you to tell him if he should accept the challenge. Given the lengths of the line segments, check if he can choose exactly 3 of them to form a non- degenerate triangle. Mahmoud should use exactly 3 line segments, he can' t concatenate two line segments or change any length. A non- degenerate triangle is a triangle with positive area.",
    "input": "The first line contains single integer n ( 3 \u2264 n \u2264 105) \u2014 the number of line segments Mahmoud has. The second line contains n integers a1, a2, . . . , an ( 1 \u2264 ai \u2264 109) \u2014 the lengths of line segments Mahmoud has.",
    "output": "In the only line print \" YES\" if he can choose exactly three line segments and form a non- degenerate triangle with them, and \" NO\" otherwise.",
    "note": "For the first example, he can use line segments with lengths 2, 4 and 5 to form a non- degenerate triangle.",
    "topics": [
      "constructive algorithms",
      "geometry",
      "greedy",
      "math",
      "number theory",
      "sortings"
    ],
    "id": "766B"
  },
  {
    "title": "Math, math everywhere",
    "url": "https://codeforces.com/problemset/problem/765/G",
    "history": "If you have gone that far, you' ll probably skip unnecessary legends anyway. . . You are given a binary string and an integer . Find the number of integers k, 0 \u2264 k < N, such that for all i = 0, 1, . . . , m - 1 Print the answer modulo 109 + 7.",
    "input": "In the first line of input there is a string s consisting of 0' s and 1' s ( 1 \u2264 | s| \u2264 40) . In the next line of input there is an integer n ( 1 \u2264 n \u2264 5\u00b7105) . Each of the next n lines contains two space- separated integers pi, \u03b1i ( 1 \u2264 pi, \u03b1i \u2264 109, pi is prime) . All pi are distinct.",
    "output": "A single integer \u2014 the answer to the problem.",
    "note": "",
    "topics": [
      "brute force",
      "dp",
      "math",
      "meet-in-the-middle",
      "number theory"
    ],
    "id": "765G"
  },
  {
    "title": "Timofey and remoduling",
    "url": "https://codeforces.com/problemset/problem/763/C",
    "history": "Little Timofey likes integers a lot. Unfortunately, he is very young and can' t work with very big integers, so he does all the operations modulo his favorite prime m. Also, Timofey likes to look for arithmetical progressions everywhere. One of his birthday presents was a sequence of distinct integers a1, a2, . . . , an. Timofey wants to know whether he can rearrange the elements of the sequence so that is will be an arithmetical progression modulo m, or not. Arithmetical progression modulo m of length n with first element x and difference d is sequence of integers x, x + d, x + 2d, . . . , x + ( n - 1) \u00b7d, each taken modulo m.",
    "input": "The first line contains two integers m and n ( 2 \u2264 m \u2264 109 + 7, 1 \u2264 n \u2264 105, m is prime) \u2014 Timofey' s favorite prime module and the length of the sequence. The second line contains n distinct integers a1, a2, . . . , an ( 0 \u2264 ai < m) \u2014 the elements of the sequence.",
    "output": "Print - 1 if it is not possible to rearrange the elements of the sequence so that is will be an arithmetical progression modulo m. Otherwise, print two integers \u2014 the first element of the obtained progression x ( 0 \u2264 x < m) and its difference d ( 0 \u2264 d < m) . If there are multiple answers, print any of them.",
    "note": "",
    "topics": [
      "brute force",
      "implementation",
      "math",
      "number theory"
    ],
    "id": "763C"
  },
  {
    "title": "k-th divisor",
    "url": "https://codeforces.com/problemset/problem/762/A",
    "history": "You are given two integers n and k. Find k- th smallest divisor of n, or report that it doesn' t exist. Divisor of n is any such natural number, that n can be divided by it without remainder.",
    "input": "The first line contains two integers n and k ( 1 \u2264 n \u2264 1015, 1 \u2264 k \u2264 109) .",
    "output": "If n has less than k divisors, output - 1. Otherwise, output the k- th smallest divisor of n.",
    "note": "In the first example, number 4 has three divisors: 1, 2 and 4. The second one is 2. In the second example, number 5 has only two divisors: 1 and 5. The third divisor doesn' t exist, so the answer is - 1.",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "762A"
  },
  {
    "title": "Geometrical Progression",
    "url": "https://codeforces.com/problemset/problem/758/F",
    "history": "For given n, l and r find the number of distinct geometrical progression, each of which contains n distinct integers not less than l and not greater than r. In other words, for each progression the following must hold: l \u2264 ai \u2264 r and ai = \u0338 aj , where a1, a2, . . . , an is the geometrical progression, 1 \u2264 i, j \u2264 n and i = \u0338 j. Geometrical progression is a sequence of numbers a1, a2, . . . , an where each term after first is found by multiplying the previous one by a fixed non- zero number d called the common ratio. Note that in our task d may be non- integer. For example in progression 4, 6, 9, common ratio is . Two progressions a1, a2, . . . , an and b1, b2, . . . , bn are considered different, if there is such i ( 1 \u2264 i \u2264 n) that ai = \u0338 bi.",
    "input": "The first and the only line cotains three integers n, l and r ( 1 \u2264 n \u2264 107, 1 \u2264 l \u2264 r \u2264 107) .",
    "output": "Print the integer K \u2014 is the answer to the problem.",
    "note": "These are possible progressions for the first test of examples: 1; 2; 3; 4; 5; 6; 7; 8; 9; 10. These are possible progressions for the second test of examples: 6, 7; 6, 8; 6, 9; 7, 6; 7, 8; 7, 9; 8, 6; 8, 7; 8, 9; 9, 6; 9, 7; 9, 8. These are possible progressions for the third test of examples: 1, 2, 4; 1, 3, 9; 2, 4, 8; 4, 2, 1; 4, 6, 9; 8, 4, 2; 9, 3, 1; 9, 6, 4. These are possible progressions for the fourth test of examples: 4, 6, 9; 9, 6, 4.",
    "topics": [
      "brute force",
      "math",
      "number theory"
    ],
    "id": "758F"
  },
  {
    "title": "Blown Garland",
    "url": "https://codeforces.com/problemset/problem/758/B",
    "history": "Nothing is eternal in the world, Kostya understood it on the 7- th of January when he saw partially dead four- color garland. Now he has a goal to replace dead light bulbs, however he doesn' t know how many light bulbs for each color are required. It is guaranteed that for each of four colors at least one light is working. It is known that the garland contains light bulbs of four colors: red, blue, yellow and green. The garland is made as follows: if you take any four consecutive light bulbs then there will not be light bulbs with the same color among them. For example, the garland can look like \" RYBGRYBGRY\" , \" YBGRYBGRYBG\" , \" BGRYB\" , but can not look like \" BGRYG\" , \" YBGRYBYGR\" or \" BGYBGY\" . Letters denote colors: ' R' \u2014 red, ' B' \u2014 blue, ' Y' \u2014 yellow, ' G' \u2014 green. Using the information that for each color at least one light bulb still works count the number of dead light bulbs of each four colors.",
    "input": "The first and the only line contains the string s ( 4 \u2264 | s| \u2264 100) , which describes the garland, the i- th symbol of which describes the color of the i- th light bulb in the order from the beginning of garland: ' R' \u2014 the light bulb is red, ' B' \u2014 the light bulb is blue, ' Y' \u2014 the light bulb is yellow, ' G' \u2014 the light bulb is green, ' ! ' \u2014 the light bulb is dead. The string s can not contain other symbols except those five which were described. It is guaranteed that in the given string at least once there is each of four letters ' R' , ' B' , ' Y' and ' G' . It is guaranteed that the string s is correct garland with some blown light bulbs, it means that for example the line \" GRBY! ! ! B\" can not be in the input data.",
    "output": "In the only line print four integers kr, kb, ky, kg \u2014 the number of dead light bulbs of red, blue, yellow and green colors accordingly.",
    "note": "In the first example there are no dead light bulbs. In the second example it is obvious that one blue bulb is blown, because it could not be light bulbs of other colors on its place according to the statements.",
    "topics": [
      "brute force",
      "implementation",
      "number theory"
    ],
    "id": "758B"
  },
  {
    "title": "Bash Plays with Functions",
    "url": "https://codeforces.com/problemset/problem/757/E",
    "history": "Bash got tired on his journey to become the greatest Pokemon master. So he decides to take a break and play with functions. Bash defines a function f0( n) , which denotes the number of ways of factoring n into two factors p and q such that gcd( p, q) = 1. In other words, f0( n) is the number of ordered pairs of positive integers ( p, q) such that p\u00b7q = n and gcd( p, q) = 1. But Bash felt that it was too easy to calculate this function. So he defined a series of functions, where fr + 1 is defined as: Where ( u, v) is any ordered pair of positive integers, they need not to be co- prime. Now Bash wants to know the value of fr( n) for different r and n. Since the value could be huge, he would like to know the value modulo 109 + 7. Help him!",
    "input": "The first line contains an integer q ( 1 \u2264 q \u2264 106) \u2014 the number of values Bash wants to know. Each of the next q lines contain two integers r and n ( 0 \u2264 r \u2264 106, 1 \u2264 n \u2264 106) , which denote Bash wants to know the value fr( n) .",
    "output": "Print q integers. For each pair of r and n given, print fr( n) modulo 109 + 7 on a separate line.",
    "note": "",
    "topics": [
      "brute force",
      "combinatorics",
      "dp",
      "number theory"
    ],
    "id": "757E"
  },
  {
    "title": "Bash's Big Day",
    "url": "https://codeforces.com/problemset/problem/757/B",
    "history": "Bash has set out on a journey to become the greatest Pokemon master. To get his first Pokemon, he went to Professor Zulu' s Lab. Since Bash is Professor Zulu' s favourite student, Zulu allows him to take as many Pokemon from his lab as he pleases. But Zulu warns him that a group of k > 1 Pokemon with strengths s1, s2, s3, . . . , sk tend to fight among each other if gcd( s1, s2, s3, . . . , sk) = 1 ( see notes for gcd definition) . Bash, being smart, does not want his Pokemon to fight among each other. However, he also wants to maximize the number of Pokemon he takes from the lab. Can you help Bash find out the maximum number of Pokemon he can take? Note: A Pokemon cannot fight with itself.",
    "input": "The input consists of two lines. The first line contains an integer n ( 1 \u2264 n \u2264 105) , the number of Pokemon in the lab. The next line contains n space separated integers, where the i- th of them denotes si ( 1 \u2264 si \u2264 105) , the strength of the i- th Pokemon.",
    "output": "Print single integer \u2014 the maximum number of Pokemons Bash can take.",
    "note": "gcd ( greatest common divisor) of positive integers set a1, a2, . . . , an is the maximum positive integer that divides all the integers a1, a2, . . . , an. In the first sample, we can take Pokemons with strengths 2, 4 since gcd( 2, 4) = 2. In the second sample, we can take Pokemons with strengths 2, 4, 6, and there is no larger group with gcd = \u0338 1.",
    "topics": [
      "greedy",
      "math",
      "number theory"
    ],
    "id": "757B"
  },
  {
    "title": "Long number",
    "url": "https://codeforces.com/problemset/problem/756/F",
    "history": "Consider the following grammar: < expression> : : = < term> | < expression> ' + ' < term> < term> : : = < number> | < number> ' - ' < number> | < number> ' ( ' < expression> ' ) ' < number> : : = < pos_ digit> | < number> < digit> < digit> : : = ' 0' | < pos_ digit> < pos_ digit> : : = ' 1' | ' 2' | ' 3' | ' 4' | ' 5' | ' 6' | ' 7' | ' 8' | ' 9' This grammar describes a number in decimal system using the following rules: < number> describes itself, < number> - < number> ( l- r, l \u2264 r) describes integer which is concatenation of all integers from l to r, written without leading zeros. For example, 8- 11 describes 891011, < number> ( < expression> ) describes integer which is concatenation of < number> copies of integer described by < expression> , < expression> + < term> describes integer which is concatenation of integers described by < expression> and < term> . For example, 2( 2- 4+ 1) + 2( 2( 17) ) describes the integer 2341234117171717. You are given an expression in the given grammar. Print the integer described by it modulo 109 + 7.",
    "input": "The only line contains a non- empty string at most 105 characters long which is valid according to the given grammar. In particular, it means that in terms l- r l \u2264 r holds.",
    "output": "Print single integer \u2014 the number described by the expression modulo 109 + 7.",
    "note": "",
    "topics": [
      "expression parsing",
      "math",
      "number theory"
    ],
    "id": "756F"
  },
  {
    "title": "PolandBall and Many Other Balls",
    "url": "https://codeforces.com/problemset/problem/755/G",
    "history": "PolandBall is standing in a row with Many Other Balls. More precisely, there are exactly n Balls. Balls are proud of their home land \u2014 and they want to prove that it' s strong. The Balls decided to start with selecting exactly m groups of Balls, each consisting either of single Ball or two neighboring Balls. Each Ball can join no more than one group. The Balls really want to impress their Enemies. They kindly asked you to calculate number of such divisions for all m where 1 \u2264 m \u2264 k. Output all these values modulo 998244353, the Enemies will be impressed anyway.",
    "input": "There are exactly two numbers n and k ( 1 \u2264 n \u2264 109, 1 \u2264 k < 215) , denoting the number of Balls and the maximim number of groups, respectively.",
    "output": "You should output a sequence of k values. The i- th of them should represent the sought number of divisions into exactly i groups, according to PolandBall' s rules.",
    "note": "In the first sample case we can divide Balls into groups as follows: 1, 2, 3, 12, 23. 123, 123, 12, 13, 23. 123. Therefore, output is: 5 5 1.",
    "topics": [
      "combinatorics",
      "divide and conquer",
      "dp",
      "fft",
      "math",
      "number theory"
    ],
    "id": "755G"
  },
  {
    "title": "PolandBall and Hypothesis",
    "url": "https://codeforces.com/problemset/problem/755/A",
    "history": "PolandBall is a young, clever Ball. He is interested in prime numbers. He has stated a following hypothesis: \" There exists such a positive integer n that for each positive integer m number n\u00b7m + 1 is a prime number\" . Unfortunately, PolandBall is not experienced yet and doesn' t know that his hypothesis is incorrect. Could you prove it wrong? Write a program that finds a counterexample for any n.",
    "input": "The only number in the input is n ( 1 \u2264 n \u2264 1000) \u2014 number from the PolandBall' s hypothesis.",
    "output": "Output such m that n\u00b7m + 1 is not a prime number. Your answer will be considered correct if you output any suitable m such that 1 \u2264 m \u2264 103. It is guaranteed the the answer exists.",
    "note": "A prime number ( or a prime) is a natural number greater than 1 that has no positive divisors other than 1 and itself. For the first sample testcase, 3\u00b71 + 1 = 4. We can output 1. In the second sample testcase, 4\u00b71 + 1 = 5. We cannot output 1 because 5 is prime. However, m = 2 is okay since 4\u00b72 + 1 = 9, which is not a prime number.",
    "topics": [
      "brute force",
      "graphs",
      "math",
      "number theory"
    ],
    "id": "755A"
  },
  {
    "title": "Bachgold Problem",
    "url": "https://codeforces.com/problemset/problem/749/A",
    "history": "Bachgold problem is very easy to formulate. Given a positive integer n represent it as a sum of maximum possible number of prime numbers. One can prove that such representation exists for any integer greater than 1. Recall that integer k is called prime if it is greater than 1 and has exactly two positive integer divisors \u2014 1 and k.",
    "input": "The only line of the input contains a single integer n ( 2 \u2264 n \u2264 100 000) .",
    "output": "The first line of the output contains a single integer k \u2014 maximum possible number of primes in representation. The second line should contain k primes with their sum equal to n. You can print them in any order. If there are several optimal solution, print any of them.",
    "note": "",
    "topics": [
      "greedy",
      "implementation",
      "math",
      "number theory"
    ],
    "id": "749A"
  },
  {
    "title": "Vladik and fractions",
    "url": "https://codeforces.com/problemset/problem/743/C",
    "history": "Vladik and Chloe decided to determine who of them is better at math. Vladik claimed that for any positive integer n he can represent fraction as a sum of three distinct positive fractions in form . Help Vladik with that, i. e for a given n find three distinct positive integers x, y and z such that . Because Chloe can' t check Vladik' s answer if the numbers are large, he asks you to print numbers not exceeding 109. If there is no such answer, print - 1.",
    "input": "The single line contains single integer n ( 1 \u2264 n \u2264 104) .",
    "output": "If the answer exists, print 3 distinct numbers x, y and z ( 1 \u2264 x, y, z \u2264 109, x = \u0338 y, x = \u0338 z, y = \u0338 z) . Otherwise print - 1. If there are multiple answers, print any of them.",
    "note": "",
    "topics": [
      "brute force",
      "constructive algorithms",
      "math",
      "number theory"
    ],
    "id": "743C"
  },
  {
    "title": "Arpa\u2019s obvious problem and Mehrdad\u2019s terrible solution",
    "url": "https://codeforces.com/problemset/problem/742/B",
    "history": "There are some beautiful girls in Arpa\u2019s land as mentioned before. Once Arpa came up with an obvious problem: Given an array and a number x, count the number of pairs of indices i, j ( 1 \u2264 i < j \u2264 n) such that , where is bitwise xor operation ( see notes for explanation) . Immediately, Mehrdad discovered a terrible solution that nobody trusted. Now Arpa needs your help to implement the solution to that problem.",
    "input": "First line contains two integers n and x ( 1 \u2264 n \u2264 105, 0 \u2264 x \u2264 105) \u2014 the number of elements in the array and the integer x. Second line contains n integers a1, a2, . . . , an ( 1 \u2264 ai \u2264 105) \u2014 the elements of the array.",
    "output": "Print a single integer: the answer to the problem.",
    "note": "In the first sample there is only one pair of i = 1 and j = 2. so the answer is 1. In the second sample the only two pairs are i = 3, j = 4 ( since ) and i = 1, j = 5 ( since ) . A bitwise xor takes two bit integers of equal length and performs the logical xor operation on each pair of corresponding bits. The result in each position is 1 if only the first bit is 1 or only the second bit is 1, but will be 0 if both are 0 or both are 1. You can read more about bitwise xor operation here: https: / / en. wikipedia. org/ wiki/ Bitwise_ operation# XOR.",
    "topics": [
      "brute force",
      "math",
      "number theory"
    ],
    "id": "742B"
  },
  {
    "title": "Arpa\u2019s hard exam and Mehrdad\u2019s naive cheat",
    "url": "https://codeforces.com/problemset/problem/742/A",
    "history": "There exists an island called Arpa\u2019s land, some beautiful girls live there, as ugly ones do. Mehrdad wants to become minister of Arpa\u2019s land. Arpa has prepared an exam. Exam has only one question, given n, print the last digit of 1378n. Mehrdad has become quite confused and wants you to help him. Please help, although it' s a naive cheat.",
    "input": "The single line of input contains one integer n ( 0 \u2264 n \u2264 109) .",
    "output": "Print single integer \u2014 the last digit of 1378n.",
    "note": "In the first example, last digit of 13781 = 1378 is 8. In the second example, last digit of 13782 = 1378\u00b71378 = 1898884 is 4.",
    "topics": [
      "implementation",
      "math",
      "number theory"
    ],
    "id": "742A"
  },
  {
    "title": "Taxes",
    "url": "https://codeforces.com/problemset/problem/735/D",
    "history": "Mr. Funt now lives in a country with a very specific tax laws. The total income of mr. Funt during this year is equal to n ( n \u2265 2) burles and the amount of tax he has to pay is calculated as the maximum divisor of n ( not equal to n, of course) . For example, if n = 6 then Funt has to pay 3 burles, while for n = 25 he needs to pay 5 and if n = 2 he pays only 1 burle. As mr. Funt is a very opportunistic person he wants to cheat a bit. In particular, he wants to split the initial n in several parts n1 + n2 + . . . + nk = n ( here k is arbitrary, even k = 1 is allowed) and pay the taxes for each part separately. He can' t make some part equal to 1 because it will reveal him. So, the condition ni \u2265 2 should hold for all i from 1 to k. Ostap Bender wonders, how many money Funt has to pay ( i. e. minimal) if he chooses and optimal way to split n in parts.",
    "input": "The first line of the input contains a single integer n ( 2 \u2264 n \u2264 2\u00b7109) \u2014 the total year income of mr. Funt.",
    "output": "Print one integer \u2014 minimum possible number of burles that mr. Funt has to pay as a tax.",
    "note": "",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "735D"
  },
  {
    "title": "Urbanization",
    "url": "https://codeforces.com/problemset/problem/735/B",
    "history": "Local authorities have heard a lot about combinatorial abilities of Ostap Bender so they decided to ask his help in the question of urbanization. There are n people who plan to move to the cities. The wealth of the i of them is equal to ai. Authorities plan to build two cities, first for n1 people and second for n2 people. Of course, each of n candidates can settle in only one of the cities. Thus, first some subset of candidates of size n1 settle in the first city and then some subset of size n2 is chosen among the remaining candidates and the move to the second city. All other candidates receive an official refuse and go back home. To make the statistic of local region look better in the eyes of their bosses, local authorities decided to pick subsets of candidates in such a way that the sum of arithmetic mean of wealth of people in each of the cities is as large as possible. Arithmetic mean of wealth in one city is the sum of wealth ai among all its residents divided by the number of them ( n1 or n2 depending on the city) . The division should be done in real numbers without any rounding. Please, help authorities find the optimal way to pick residents for two cities.",
    "input": "The first line of the input contains three integers n, n1 and n2 ( 1 \u2264 n, n1, n2 \u2264 100 000, n1 + n2 \u2264 n) \u2014 the number of candidates who want to move to the cities, the planned number of residents of the first city and the planned number of residents of the second city. The second line contains n integers a1, a2, . . . , an ( 1 \u2264 ai \u2264 100 000) , the i- th of them is equal to the wealth of the i- th candidate.",
    "output": "Print one real value \u2014 the maximum possible sum of arithmetic means of wealth of cities' residents. You answer will be considered correct if its absolute or relative error does not exceed 10 - 6. Namely: let' s assume that your answer is a, and the answer of the jury is b. The checker program will consider your answer correct, if .",
    "note": "In the first sample, one of the optimal solutions is to move candidate 1 to the first city and candidate 2 to the second. In the second sample, the optimal solution is to pick candidates 3 and 4 for the first city, and candidate 2 for the second one. Thus we obtain ( a3 + a4) / 2 + a2 = ( 3 + 2) / 2 + 4 = 6. 5",
    "topics": [
      "greedy",
      "number theory",
      "sortings"
    ],
    "id": "735B"
  },
  {
    "title": "Video Cards",
    "url": "https://codeforces.com/problemset/problem/731/F",
    "history": "Little Vlad is fond of popular computer game Bota- 2. Recently, the developers announced the new add- on named Bota- 3. Of course, Vlad immediately bought only to find out his computer is too old for the new game and needs to be updated. There are n video cards in the shop, the power of the i- th video card is equal to integer value ai. As Vlad wants to be sure the new game will work he wants to buy not one, but several video cards and unite their powers using the cutting- edge technology. To use this technology one of the cards is chosen as the leading one and other video cards are attached to it as secondary. For this new technology to work it' s required that the power of each of the secondary video cards is divisible by the power of the leading video card. In order to achieve that the power of any secondary video card can be reduced to any integer value less or equal than the current power. However, the power of the leading video card should remain unchanged, i. e. it can' t be reduced. Vlad has an infinite amount of money so he can buy any set of video cards. Help him determine which video cards he should buy such that after picking the leading video card and may be reducing some powers of others to make them work together he will get the maximum total value of video power.",
    "input": "The first line of the input contains a single integer n ( 1 \u2264 n \u2264 200 000) \u2014 the number of video cards in the shop. The second line contains n integers a1, a2, . . . , an ( 1 \u2264 ai \u2264 200 000) \u2014 powers of video cards.",
    "output": "The only line of the output should contain one integer value \u2014 the maximum possible total power of video cards working together.",
    "note": "In the first sample, it would be optimal to buy video cards with powers 3, 15 and 9. The video card with power 3 should be chosen as the leading one and all other video cards will be compatible with it. Thus, the total power would be 3 + 15 + 9 = 27. If he buys all the video cards and pick the one with the power 2 as the leading, the powers of all other video cards should be reduced by 1, thus the total power would be 2 + 2 + 14 + 8 = 26, that is less than 27. Please note, that it' s not allowed to reduce the power of the leading video card, i. e. one can' t get the total power 3 + 1 + 15 + 9 = 28. In the second sample, the optimal answer is to buy all video cards and pick the one with the power 2 as the leading. The video card with the power 7 needs it power to be reduced down to 6. The total power would be 8 + 2 + 2 + 6 = 18.",
    "topics": [
      "brute force",
      "data structures",
      "implementation",
      "math",
      "number theory"
    ],
    "id": "731F"
  },
  {
    "title": "Xor-matic Number of the Graph",
    "url": "https://codeforces.com/problemset/problem/724/G",
    "history": "You are given an undirected graph, constisting of n vertices and m edges. Each edge of the graph has some non- negative integer written on it. Let' s call a triple ( u, v, s) interesting, if 1 \u2264 u < v \u2264 n and there is a path ( possibly non- simple, i. e. it can visit the same vertices and edges multiple times) between vertices u and v such that xor of all numbers written on the edges of this path is equal to s. When we compute the value s for some path, each edge is counted in xor as many times, as it appear on this path. It' s not hard to prove that there are finite number of such triples. Calculate the sum over modulo 109 + 7 of the values of s over all interesting triples.",
    "input": "The first line of the input contains two integers n and m ( 1 \u2264 n \u2264 100 000, 0 \u2264 m \u2264 200 000) \u2014 numbers of vertices and edges in the given graph. The follow m lines contain three integers ui, vi and ti ( 1 \u2264 ui, vi \u2264 n, 0 \u2264 ti \u2264 1018, ui = \u0338 vi) \u2014 vertices connected by the edge and integer written on it. It is guaranteed that graph doesn' t contain self- loops and multiple edges.",
    "output": "Print the single integer, equal to the described sum over modulo 109 + 7.",
    "note": "In the first example the are 6 interesting triples: ( 1, 2, 1) ( 1, 3, 2) ( 1, 4, 3) ( 2, 3, 3) ( 2, 4, 2) ( 3, 4, 1) The sum is equal to 1 + 2 + 3 + 3 + 2 + 1 = 12. In the second example the are 12 interesting triples: ( 1, 2, 1) ( 2, 3, 2) ( 1, 3, 3) ( 3, 4, 4) ( 2, 4, 6) ( 1, 4, 7) ( 1, 4, 8) ( 2, 4, 9) ( 3, 4, 11) ( 1, 3, 12) ( 2, 3, 13) ( 1, 2, 14) The sum is equal to 1 + 2 + 3 + 4 + 6 + 7 + 8 + 9 + 11 + 12 + 13 + 14 = 90.",
    "topics": [
      "bitmasks",
      "graphs",
      "math",
      "number theory",
      "trees"
    ],
    "id": "724G"
  },
  {
    "title": "Ray Tracing",
    "url": "https://codeforces.com/problemset/problem/724/C",
    "history": "There are k sensors located in the rectangular room of size n \u00d7 m meters. The i- th sensor is located at point ( xi, yi) . All sensors are located at distinct points strictly inside the rectangle. Opposite corners of the room are located at points ( 0, 0) and ( n, m) . Walls of the room are parallel to coordinate axes. At the moment 0, from the point ( 0, 0) the laser ray is released in the direction of point ( 1, 1) . The ray travels with a speed of meters per second. Thus, the ray will reach the point ( 1, 1) in exactly one second after the start. When the ray meets the wall it' s reflected by the rule that the angle of incidence is equal to the angle of reflection. If the ray reaches any of the four corners, it immediately stops. For each sensor you have to determine the first moment of time when the ray will pass through the point where this sensor is located. If the ray will never pass through this point, print - 1 for such sensors.",
    "input": "The first line of the input contains three integers n, m and k ( 2 \u2264 n, m \u2264 100 000, 1 \u2264 k \u2264 100 000) \u2014 lengths of the room' s walls and the number of sensors. Each of the following k lines contains two integers xi and yi ( 1 \u2264 xi \u2264 n - 1, 1 \u2264 yi \u2264 m - 1) \u2014 coordinates of the sensors. It' s guaranteed that no two sensors are located at the same point.",
    "output": "Print k integers. The i- th of them should be equal to the number of seconds when the ray first passes through the point where the i- th sensor is located, or - 1 if this will never happen.",
    "note": "In the first sample, the ray will consequently pass through the points ( 0, 0) , ( 1, 1) , ( 2, 2) , ( 3, 3) . Thus, it will stop at the point ( 3, 3) after 3 seconds. In the second sample, the ray will consequently pass through the following points: ( 0, 0) , ( 1, 1) , ( 2, 2) , ( 3, 3) , ( 2, 4) , ( 1, 3) , ( 0, 2) , ( 1, 1) , ( 2, 0) , ( 3, 1) , ( 2, 2) , ( 1, 3) , ( 0, 4) . The ray will stop at the point ( 0, 4) after 12 seconds. It will reflect at the points ( 3, 3) , ( 2, 4) , ( 0, 2) , ( 2, 0) and ( 3, 1) .",
    "topics": [
      "greedy",
      "hashing",
      "implementation",
      "math",
      "number theory",
      "sortings"
    ],
    "id": "724C"
  },
  {
    "title": "Cyclic Cipher",
    "url": "https://codeforces.com/problemset/problem/722/F",
    "history": "You are given n sequences. Each sequence consists of positive integers, not exceeding m. All integers in one sequence are distinct, but the same integer may appear in multiple sequences. The length of the i- th sequence is ki. Each second integers in each of the sequences are shifted by one to the left, i. e. integers at positions i > 1 go to positions i - 1, while the first integers becomes the last. Each second we take the first integer of each sequence and write it down to a new array. Then, for each value x from 1 to m we compute the longest segment of the array consisting of element x only. The above operation is performed for 10100 seconds. For each integer from 1 to m find out the longest segment found at this time.",
    "input": "The first line of the input contains two integers n and m ( 1 \u2264 n, m \u2264 100 000) \u2014 the number of sequences and the maximum integer that can appear in the sequences. Then follow n lines providing the sequences. Each of them starts with an integer ki ( 1 \u2264 ki \u2264 40) \u2014 the number of integers in the sequence, proceeded by ki positive integers \u2014 elements of the sequence. It' s guaranteed that all integers in each sequence are pairwise distinct and do not exceed m. The total length of all sequences doesn' t exceed 200 000.",
    "output": "Print m integers, the i- th of them should be equal to the length of the longest segment of the array with all its values equal to i during the first 10100 seconds.",
    "note": "",
    "topics": [
      "chinese remainder theorem",
      "data structures",
      "implementation",
      "number theory",
      "two pointers"
    ],
    "id": "722F"
  },
  {
    "title": "Festival Organization",
    "url": "https://codeforces.com/problemset/problem/717/A",
    "history": "The Prodiggers are quite a cool band and for this reason, they have been the surprise guest at the ENTER festival for the past 80 years. At the beginning of their careers, they weren\u2019t so successful, so they had to spend time digging channels to earn money; hence the name. Anyway, they like to tour a lot and have surprising amounts of energy to do extremely long tours. However, they hate spending two consecutive days without having a concert, so they would like to avoid it. A tour is defined by a sequence of concerts and days- off. You need to count in how many ways The Prodiggers can select k different tours of the same length between l and r. For example if k = 2, l = 1 and r = 2, if we define concert day as 1 and day- off as 0, here are all possible tours: 0, 1, 00, 01, 10, 11. But tour 00 can not be selected because it has 2 days- off in a row. Now, we need to count in how many ways we can select k = 2 tours of the same length in range [ 1; 2] . Here they are: 0, 1; 01, 10; 01, 11; 10, 11. Since their schedule is quite busy, they want you to tell them in how many ways can do that, modulo 1 000 000 007 ( 109 + 7) .",
    "input": "The first line of the input contains three integers k, l and r ( 1 \u2264 k \u2264 200, 1 \u2264 l \u2264 r \u2264 1018) .",
    "output": "Output a single number: the number of ways to select k different tours of the same length, modulo 1 000 000 007.",
    "note": "",
    "topics": [
      "combinatorics",
      "math",
      "number theory"
    ],
    "id": "717A"
  },
  {
    "title": "ZS and The Birthday Paradox",
    "url": "https://codeforces.com/problemset/problem/711/E",
    "history": "ZS the Coder has recently found an interesting concept called the Birthday Paradox. It states that given a random set of 23 people, there is around 50",
    "input": "The first and only line of the input contains two integers n and k ( 1 \u2264 n \u2264 1018, 2 \u2264 k \u2264 1018) , meaning that there are 2n days in a year and that ZS the Coder wants to interview exactly k people.",
    "output": "If the probability of at least two k people having the same birthday in 2n days long year equals ( A \u2265 0, B \u2265 1, ) , print the A and B in a single line. Since these numbers may be too large, print them modulo 106 + 3. Note that A and B must be coprime before their remainders modulo 106 + 3 are taken.",
    "note": "In the first sample case, there are 23 = 8 days in Udayland. The probability that 2 people have the same birthday among 2 people is clearly , so A = 1, B = 8. In the second sample case, there are only 21 = 2 days in Udayland, but there are 3 people, so it is guaranteed that two of them have the same birthday. Thus, the probability is 1 and A = B = 1.",
    "topics": [
      "math",
      "number theory",
      "probabilities"
    ],
    "id": "711E"
  },
  {
    "title": "Two Arithmetic Progressions",
    "url": "https://codeforces.com/problemset/problem/710/D",
    "history": "You are given two arithmetic progressions: a1k + b1 and a2l + b2. Find the number of integers x such that L \u2264 x \u2264 R and x = a1k' + b1 = a2l' + b2, for some integers k' , l' \u2265 0.",
    "input": "The only line contains six integers a1, b1, a2, b2, L, R ( 0 < a1, a2 \u2264 2\u00b7109, - 2\u00b7109 \u2264 b1, b2, L, R \u2264 2\u00b7109, L \u2264 R) .",
    "output": "Print the desired number of integers x.",
    "note": "",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "710D"
  },
  {
    "title": "Pythagorean Triples",
    "url": "https://codeforces.com/problemset/problem/707/C",
    "history": "Katya studies in a fifth grade. Recently her class studied right triangles and the Pythagorean theorem. It appeared, that there are triples of positive integers such that you can construct a right triangle with segments of lengths corresponding to triple. Such triples are called Pythagorean triples. For example, triples ( 3, 4, 5) , ( 5, 12, 13) and ( 6, 8, 10) are Pythagorean triples. Here Katya wondered if she can specify the length of some side of right triangle and find any Pythagorean triple corresponding to such length? Note that the side which length is specified can be a cathetus as well as hypotenuse. Katya had no problems with completing this task. Will you do the same?",
    "input": "The only line of the input contains single integer n ( 1 \u2264 n \u2264 109) \u2014 the length of some side of a right triangle.",
    "output": "Print two integers m and k ( 1 \u2264 m, k \u2264 1018) , such that n, m and k form a Pythagorean triple, in the only line. In case if there is no any Pythagorean triple containing integer n, print - 1 in the only line. If there are many answers, print any of them.",
    "note": "Illustration for the first sample.",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "707C"
  },
  {
    "title": "Mishka and Divisors",
    "url": "https://codeforces.com/problemset/problem/703/E",
    "history": "After playing with her beautiful array, Mishka decided to learn some math. After learning how to multiply, divide and what is divisibility, she is now interested in solving the following problem. You are given integer k and array a1, a2, . . . , an of n integers. You are to find non- empty subsequence of array elements such that the product of its elements is divisible by k and it contains minimum possible number of elements. Formally, you are to find a sequence of indices 1 \u2264 i1 < i2 < . . . < im \u2264 n such that is divisible by k while m is minimum possible among all such variants. If there are more than one such subsequences, you should choose one among them, such that sum of its elements is minimum possible. Mishka quickly solved this problem. Will you do so?",
    "input": "The first line of the input contains two integers n and k ( 1 \u2264 n \u2264 1 000, 1 \u2264 k \u2264 1012) . The second line of the input contains n integers a1, a2, . . . , an ( 1 \u2264 ai \u2264 1012) \u2014 array elements.",
    "output": "Print single positive integer m in the first line \u2014 the number of elements in desired sequence. In the second line print m distinct integers \u2014 the sequence of indices of given array elements, which should be taken into the desired sequence. If there are more than one such subsequence ( e. g. subsequence of minimum possible number of elements and with minimum possible sum of elements) , you can print any of them. If there are no such subsequences, print - 1 in the only line.",
    "note": "",
    "topics": [
      "dp",
      "number theory"
    ],
    "id": "703E"
  },
  {
    "title": "Coprime Permutation",
    "url": "https://codeforces.com/problemset/problem/698/F",
    "history": "Two positive integers are coprime if and only if they don' t have a common divisor greater than 1. Some bear doesn' t want to tell Radewoosh how to solve some algorithmic problem. So, Radewoosh is going to break into that bear' s safe with solutions. To pass through the door, he must enter a permutation of numbers 1 through n. The door opens if and only if an entered permutation p1, p2, . . . , pn satisfies: In other words, two different elements are coprime if and only if their indices are coprime. Some elements of a permutation may be already fixed. In how many ways can Radewoosh fill the remaining gaps so that the door will open? Print the answer modulo 109 + 7.",
    "input": "The first line of the input contains one integer n ( 2 \u2264 n \u2264 1 000 000) . The second line contains n integers p1, p2, . . . , pn ( 0 \u2264 pi \u2264 n) where pi = 0 means a gap to fill, and pi \u2265 1 means a fixed number. It' s guaranteed that if i = \u0338 j and pi, pj \u2265 1 then pi = \u0338 pj.",
    "output": "Print the number of ways to fill the gaps modulo 109 + 7 ( i. e. modulo 1000000007) .",
    "note": "In the first sample test, none of four element is fixed. There are four permutations satisfying the given conditions: ( 1, 2, 3, 4) , ( 1, 4, 3, 2) , ( 3, 2, 1, 4) , ( 3, 4, 1, 2) . In the second sample test, there must be p3 = 1 and p4 = 2. The two permutations satisfying the conditions are: ( 3, 4, 1, 2, 5) , ( 5, 4, 1, 2, 3) .",
    "topics": [
      "combinatorics",
      "number theory"
    ],
    "id": "698F"
  },
  {
    "title": "Couple Cover",
    "url": "https://codeforces.com/problemset/problem/691/F",
    "history": "Couple Cover, a wildly popular luck- based game, is about to begin! Two players must work together to construct a rectangle. A bag with n balls, each with an integer written on it, is placed on the table. The first player reaches in and grabs a ball randomly ( all balls have equal probability of being chosen) \u2014 the number written on this ball is the rectangle' s width in meters. This ball is not returned to the bag, and the second player reaches into the bag and grabs another ball \u2014 the number written on this ball is the rectangle' s height in meters. If the area of the rectangle is greater than or equal some threshold p square meters, the players win. Otherwise, they lose. The organizers of the game are trying to select an appropriate value for p so that the probability of a couple winning is not too high and not too low, but they are slow at counting, so they have hired you to answer some questions for them. You are given a list of the numbers written on the balls, the organizers would like to know how many winning pairs of balls exist for different values of p. Note that two pairs are different if either the first or the second ball is different between the two in pair, and two different balls with the same number are considered different.",
    "input": "The input begins with a single positive integer n in its own line ( 1 \u2264 n \u2264 106) . The second line contains n positive integers \u2014 the i- th number in this line is equal to ai ( 1 \u2264 ai \u2264 3\u00b7106) , the number written on the i- th ball. The next line contains an integer m ( 1 \u2264 m \u2264 106) , the number of questions you are being asked. Then, the following line contains m positive integers \u2014 the j- th number in this line is equal to the value of p ( 1 \u2264 p \u2264 3\u00b7106) in the j- th question you are being asked.",
    "output": "For each question, print the number of winning pairs of balls that exist for the given value of p in the separate line.",
    "note": "",
    "topics": [
      "brute force",
      "dp",
      "number theory"
    ],
    "id": "691F"
  },
  {
    "title": "Remainders Game",
    "url": "https://codeforces.com/problemset/problem/687/B",
    "history": "Today Pari and Arya are playing a game called Remainders. Pari chooses two positive integer x and k, and tells Arya k but not x. Arya have to find the value . There are n ancient numbers c1, c2, . . . , cn and Pari has to tell Arya if Arya wants. Given k and the ancient values, tell us if Arya has a winning strategy independent of value of x or not. Formally, is it true that Arya can understand the value for any positive integer x? Note, that means the remainder of x after dividing it by y.",
    "input": "The first line of the input contains two integers n and k ( 1 \u2264 n, k \u2264 1 000 000) \u2014 the number of ancient integers and value k that is chosen by Pari. The second line contains n integers c1, c2, . . . , cn ( 1 \u2264 ci \u2264 1 000 000) .",
    "output": "Print \" Yes\" ( without quotes) if Arya has a winning strategy independent of value of x, or \" No\" ( without quotes) otherwise.",
    "note": "In the first sample, Arya can understand because 5 is one of the ancient numbers. In the second sample, Arya can' t be sure what is. For example 1 and 7 have the same remainders after dividing by 2 and 3, but they differ in remainders after dividing by 7.",
    "topics": [
      "chinese remainder theorem",
      "math",
      "number theory"
    ],
    "id": "687B"
  },
  {
    "title": "Alyona and Numbers",
    "url": "https://codeforces.com/problemset/problem/682/A",
    "history": "After finishing eating her bun, Alyona came up with two integers n and m. She decided to write down two columns of integers \u2014 the first column containing integers from 1 to n and the second containing integers from 1 to m. Now the girl wants to count how many pairs of integers she can choose, one from the first column and the other from the second column, such that their sum is divisible by 5. Formally, Alyona wants to count the number of pairs of integers ( x, y) such that 1 \u2264 x \u2264 n, 1 \u2264 y \u2264 m and equals 0. As usual, Alyona has some troubles and asks you to help.",
    "input": "The only line of the input contains two integers n and m ( 1 \u2264 n, m \u2264 1 000 000) .",
    "output": "Print the only integer \u2014 the number of pairs of integers ( x, y) such that 1 \u2264 x \u2264 n, 1 \u2264 y \u2264 m and ( x + y) is divisible by 5.",
    "note": "Following pairs are suitable in the first sample case: for x = 1 fits y equal to 4 or 9; for x = 2 fits y equal to 3 or 8; for x = 3 fits y equal to 2, 7 or 12; for x = 4 fits y equal to 1, 6 or 11; for x = 5 fits y equal to 5 or 10; for x = 6 fits y equal to 4 or 9. Only the pair ( 1, 4) is suitable in the third sample case.",
    "topics": [
      "constructive algorithms",
      "math",
      "number theory"
    ],
    "id": "682A"
  },
  {
    "title": "Iterated Linear Function",
    "url": "https://codeforces.com/problemset/problem/678/D",
    "history": "Consider a linear function f( x) = Ax + B. Let' s define g( 0) ( x) = x and g( n) ( x) = f( g( n - 1) ( x) ) for n > 0. For the given integer values A, B, n and x find the value of g( n) ( x) modulo 109 + 7.",
    "input": "The only line contains four integers A, B, n and x ( 1 \u2264 A, B, x \u2264 109, 1 \u2264 n \u2264 1018) \u2014 the parameters from the problem statement. Note that the given value n can be too large, so you should use 64- bit integer type to store it. In C+ + you can use the long long integer type and in Java you can use long integer type.",
    "output": "Print the only integer s \u2014 the value g( n) ( x) modulo 109 + 7.",
    "note": "",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "678D"
  },
  {
    "title": "Joty and Chocolate",
    "url": "https://codeforces.com/problemset/problem/678/C",
    "history": "Little Joty has got a task to do. She has a line of n tiles indexed from 1 to n. She has to paint them in a strange pattern. An unpainted tile should be painted Red if it' s index is divisible by a and an unpainted tile should be painted Blue if it' s index is divisible by b. So the tile with the number divisible by a and b can be either painted Red or Blue. After her painting is done, she will get p chocolates for each tile that is painted Red and q chocolates for each tile that is painted Blue. Note that she can paint tiles in any order she wants. Given the required information, find the maximum number of chocolates Joty can get.",
    "input": "The only line contains five integers n, a, b, p and q ( 1 \u2264 n, a, b, p, q \u2264 109) .",
    "output": "Print the only integer s \u2014 the maximum number of chocolates Joty can get. Note that the answer can be too large, so you should use 64- bit integer type to store it. In C+ + you can use the long long integer type and in Java you can use long integer type.",
    "note": "",
    "topics": [
      "implementation",
      "math",
      "number theory"
    ],
    "id": "678C"
  },
  {
    "title": "Ultimate Weirdness of an Array",
    "url": "https://codeforces.com/problemset/problem/671/C",
    "history": "Yasin has an array a containing n integers. Yasin is a 5 year old, so he loves ultimate weird things. Yasin denotes weirdness of an array as maximum gcd( ai, aj) value among all 1 \u2264 i < j \u2264 n. For n \u2264 1 weirdness is equal to 0, gcd( x, y) is the greatest common divisor of integers x and y. He also defines the ultimate weirdness of an array. Ultimate weirdness is where f( i, j) is weirdness of the new array a obtained by removing all elements between i and j inclusive, so new array is [ a1. . . ai - 1, aj + 1. . . an] . Since 5 year old boys can' t code, Yasin asks for your help to find the value of ultimate weirdness of the given array a!",
    "input": "The first line of the input contains a single integer n ( 1 \u2264 n \u2264 200 000) \u2014 the number of elements in a. The next line contains n integers ai ( 1 \u2264 ai \u2264 200 000) , where the i- th number is equal to the i- th element of the array a. It is guaranteed that all ai are distinct.",
    "output": "Print a single line containing the value of ultimate weirdness of the array a.",
    "note": "Consider the first sample. f( 1, 1) is equal to 3. f( 2, 2) is equal to 1. f( 3, 3) is equal to 2. f( 1, 2) , f( 1, 3) and f( 2, 3) are equal to 0. Thus the answer is 3 + 0 + 0 + 1 + 0 + 2 = 6.",
    "topics": [
      "data structures",
      "number theory"
    ],
    "id": "671C"
  },
  {
    "title": "Four Divisors",
    "url": "https://codeforces.com/problemset/problem/665/F",
    "history": "If an integer a is divisible by another integer b, then b is called the divisor of a. For example: 12 has positive 6 divisors. They are 1, 2, 3, 4, 6 and 12. Let\u2019s define a function D( n) \u2014 number of integers between 1 and n ( inclusive) which has exactly four positive divisors. Between 1 and 10 only the integers 6, 8 and 10 has exactly four positive divisors. So, D( 10) = 3. You are given an integer n. You have to calculate D( n) .",
    "input": "The only line contains integer n ( 1 \u2264 n \u2264 1011) \u2014 the parameter from the problem statement.",
    "output": "Print the only integer c \u2014 the number of integers between 1 and n with exactly four divisors.",
    "note": "",
    "topics": [
      "data structures",
      "dp",
      "math",
      "number theory",
      "sortings",
      "two pointers"
    ],
    "id": "665F"
  },
  {
    "title": "Simple Subset",
    "url": "https://codeforces.com/problemset/problem/665/D",
    "history": "A tuple of positive integers x1, x2, . . . , xk is called simple if for all pairs of positive integers ( i, j) ( 1 \u2264 i < j \u2264 k) , xi + xj is a prime. You are given an array a with n positive integers a1, a2, . . . , an ( not necessary distinct) . You want to find a simple subset of the array a with the maximum size. A prime number ( or a prime) is a natural number greater than 1 that has no positive divisors other than 1 and itself. Let' s define a subset of the array a as a tuple that can be obtained from a by removing some ( possibly all) elements of it.",
    "input": "The first line contains integer n ( 1 \u2264 n \u2264 1000) \u2014 the number of integers in the array a. The second line contains n integers ai ( 1 \u2264 ai \u2264 106) \u2014 the elements of the array a.",
    "output": "On the first line print integer m \u2014 the maximum possible size of simple subset of a. On the second line print m integers bl \u2014 the elements of the simple subset of the array a with the maximum size. If there is more than one solution you can print any of them. You can print the elements of the subset in any order.",
    "note": "",
    "topics": [
      "constructive algorithms",
      "greedy",
      "number theory"
    ],
    "id": "665D"
  },
  {
    "title": "Complicated GCD",
    "url": "https://codeforces.com/problemset/problem/664/A",
    "history": "Greatest common divisor GCD( a, b) of two positive integers a and b is equal to the biggest integer d such that both integers a and b are divisible by d. There are many efficient algorithms to find greatest common divisor GCD( a, b) , for example, Euclid algorithm. Formally, find the biggest integer d, such that all integers a, a + 1, a + 2, . . . , b are divisible by d. To make the problem even more complicated we allow a and b to be up to googol, 10100 \u2014 such number do not fit even in 64- bit integer type!",
    "input": "The only line of the input contains two integers a and b ( 1 \u2264 a \u2264 b \u2264 10100) .",
    "output": "Output one integer \u2014 greatest common divisor of all integers from a to b inclusive.",
    "note": "",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "664A"
  },
  {
    "title": "Co-prime Array",
    "url": "https://codeforces.com/problemset/problem/660/A",
    "history": "You are given an array of n elements, you must make it a co- prime array in as few moves as possible. In each move you can insert any positive integral number you want not greater than 109 in any place in the array. An array is co- prime if any two adjacent numbers of it are co- prime. In the number theory, two integers a and b are said to be co- prime if the only positive integer that divides both of them is 1.",
    "input": "The first line contains integer n ( 1 \u2264 n \u2264 1000) \u2014 the number of elements in the given array. The second line contains n integers ai ( 1 \u2264 ai \u2264 109) \u2014 the elements of the array a.",
    "output": "Print integer k on the first line \u2014 the least number of elements needed to add to the array a to make it co- prime. The second line should contain n + k integers aj \u2014 the elements of the array a after adding k elements to it. Note that the new array should be co- prime, so any two adjacent values should be co- prime. Also the new array should be got from the original array a by adding k elements to it. If there are multiple answers you can print any one of them.",
    "note": "",
    "topics": [
      "greedy",
      "implementation",
      "math",
      "number theory"
    ],
    "id": "660A"
  },
  {
    "title": "Fence Divercity",
    "url": "https://codeforces.com/problemset/problem/659/G",
    "history": "Long ago, Vasily built a good fence at his country house. Vasily calls a fence good, if it is a series of n consecutively fastened vertical boards of centimeter width, the height of each in centimeters is a positive integer. The house owner remembers that the height of the i- th board to the left is hi. Today Vasily decided to change the design of the fence he had built, by cutting his top connected part so that the fence remained good. The cut part should consist of only the upper parts of the boards, while the adjacent parts must be interconnected ( share a non- zero length before cutting out of the fence) . You, as Vasily' s curious neighbor, will count the number of possible ways to cut exactly one part as is described above. Two ways to cut a part are called distinct, if for the remaining fences there is such i, that the height of the i- th boards vary. As Vasily' s fence can be very high and long, get the remainder after dividing the required number of ways by 1 000 000 007 ( 109 + 7) .",
    "input": "The first line contains integer n ( 1 \u2264 n \u2264 1 000 000) \u2014 the number of boards in Vasily' s fence. The second line contains n space- separated numbers h1, h2, . . . , hn ( 1 \u2264 hi \u2264 109) , where hi equals the height of the i- th board to the left.",
    "output": "Print the remainder after dividing r by 1 000 000 007, where r is the number of ways to cut exactly one connected part so that the part consisted of the upper parts of the boards and the remaining fence was good.",
    "note": "From the fence from the first example it is impossible to cut exactly one piece so as the remaining fence was good. All the possible variants of the resulting fence from the second sample look as follows ( the grey shows the cut out part) :",
    "topics": [
      "combinatorics",
      "dp",
      "number theory"
    ],
    "id": "659G"
  },
  {
    "title": "Move by Prime",
    "url": "https://codeforces.com/problemset/problem/653/G",
    "history": "Pussycat Sonya has an array consisting of n positive integers. There are 2n possible subsequences of the array. For each subsequence she counts the minimum number of operations to make all its elements equal. Each operation must be one of two: Choose some element of the subsequence and multiply it by some prime number. Choose some element of the subsequence and divide it by some prime number. The chosen element must be divisible by the chosen prime number. What is the sum of minimum number of operations for all 2n possible subsequences? Find and print this sum modulo 109 + 7.",
    "input": "The first line of the input contains a single integer n ( 1 \u2264 n \u2264 300 000) \u2014 the size of the array. The second line contains n integers t1, t2, . . . , tn ( 1 \u2264 ti \u2264 300 000) \u2014 elements of the array.",
    "output": "Print the sum of minimum number of operation for all possible subsequences of the given array modulo 109 + 7.",
    "note": "In the first sample, there are 8 possible subsequences: ( 60, 60, 40) , ( 60, 60) , ( 60, 40) , ( 60, 40) , ( 60) , ( 60) , ( 40) and ( ) ( empty subsequence) . For a subsequence ( 60, 60, 40) we can make all elements equal by two operations \u2014 divide 40 by 2 to get 20, and then multiply 20 by 3 to get 60. It' s impossible to achieve the goal using less operations and thus we add 2 to the answer. There are two subsequences equal to ( 60, 40) and for each of them the also need to make at least 2 operations. In each of other subsequences all numbers are already equal, so we need 0 operations for each of them. The sum is equal to 2 + 2 + 2 = 6.",
    "topics": [
      "combinatorics",
      "math",
      "number theory"
    ],
    "id": "653G"
  },
  {
    "title": "Cowslip Collections",
    "url": "https://codeforces.com/problemset/problem/645/F",
    "history": "In an attempt to make peace with the Mischievious Mess Makers, Bessie and Farmer John are planning to plant some flower gardens to complement the lush, grassy fields of Bovinia. As any good horticulturist knows, each garden they plant must have the exact same arrangement of flowers. Initially, Farmer John has n different species of flowers he can plant, with ai flowers of the i- th species. On each of the next q days, Farmer John will receive a batch of flowers of a new species. On day j, he will receive cj flowers of the same species, but of a different species from those Farmer John already has. Farmer John, knowing the right balance between extravagance and minimalism, wants exactly k species of flowers to be used. Furthermore, to reduce waste, each flower of the k species Farmer John chooses must be planted in some garden. And each of the gardens must be identical; that is to say that each of the k chosen species should have an equal number of flowers in each garden. As Farmer John is a proponent of national equality, he would like to create the greatest number of gardens possible. After receiving flowers on each of these q days, Farmer John would like to know the sum, over all possible choices of k species, of the maximum number of gardens he could create. Since this could be a large number, you should output your result modulo 109 + 7.",
    "input": "The first line of the input contains three integers n, k and q ( 1 \u2264 k \u2264 n \u2264 100 000, 1 \u2264 q \u2264 100 000) . The i- th ( 1 \u2264 i \u2264 n) of the next n lines of the input contains an integer ai ( 1 \u2264 ai \u2264 1 000 000) , the number of flowers of species i Farmer John has initially. The j- th ( 1 \u2264 j \u2264 q) of the next q lines of the input contains an integer cj ( 1 \u2264 cj \u2264 1 000 000) , the number of flowers of a new species Farmer John receives on day j.",
    "output": "After each of the q days, output the sum of the maximum possible number of gardens, where the sum is taken over all possible choices of k species, modulo 109 + 7.",
    "note": "In the first sample case, after the first day Farmer John has ( 4, 6, 9, 8) of each type of flower, and k = 3. Choosing ( 4, 6, 8) lets him make 2 gardens, each with ( 2, 3, 4) of each flower, respectively. Choosing ( 4, 6, 9) , ( 4, 9, 8) and ( 6, 9, 8) each only let him make one garden, since there is no number of gardens that each species can be evenly split into. So the sum over all choices of k = 3 flowers is 2 + 1 + 1 + 1 = 5. After the second day, Farmer John has ( 4, 6, 9, 8, 6) of each flower. The sum over all choices is 1 + 2 + 2 + 1 + 1 + 2 + 2 + 3 + 1 + 1 = 16. In the second sample case, k = 1. With x flowers Farmer John can make x gardens. So the answers to the queries are 6 + 5 + 4 + 3 + 2 = 20 and 6 + 5 + 4 + 3 + 2 + 1 = 21.",
    "topics": [
      "combinatorics",
      "math",
      "number theory"
    ],
    "id": "645F"
  },
  {
    "title": "Yash And Trees",
    "url": "https://codeforces.com/problemset/problem/633/G",
    "history": "Yash loves playing with trees and gets especially excited when they have something to do with prime numbers. On his 20th birthday he was granted with a rooted tree of n nodes to answer queries on. Hearing of prime numbers on trees, Yash gets too intoxicated with excitement and asks you to help out and answer queries on trees for him. Tree is rooted at node 1. Each node i has some value ai associated with it. Also, integer m is given. There are queries of two types: for given node v and integer value x, increase all ai in the subtree of node v by value x for given node v, find the number of prime numbers p less than m, for which there exists a node u in the subtree of v and a non- negative integer value k, such that au = p + m\u00b7k.",
    "input": "The first of the input contains two integers n and m ( 1 \u2264 n \u2264 100 000, 1 \u2264 m \u2264 1000) \u2014 the number of nodes in the tree and value m from the problem statement, respectively. The second line consists of n integers ai ( 0 \u2264 ai \u2264 109) \u2014 initial values of the nodes. Then follow n - 1 lines that describe the tree. Each of them contains two integers ui and vi ( 1 \u2264 ui, vi \u2264 n) \u2014 indices of nodes connected by the i- th edge. Next line contains a single integer q ( 1 \u2264 q \u2264 100 000) \u2014 the number of queries to proceed. Each of the last q lines is either 1 v x or 2 v ( 1 \u2264 v \u2264 n, 0 \u2264 x \u2264 109) , giving the query of the first or the second type, respectively. It' s guaranteed that there will be at least one query of the second type.",
    "output": "For each of the queries of the second type print the number of suitable prime numbers.",
    "note": "",
    "topics": [
      "bitmasks",
      "data structures",
      "dfs and similar",
      "math",
      "number theory"
    ],
    "id": "633G"
  },
  {
    "title": "A Trivial Problem",
    "url": "https://codeforces.com/problemset/problem/633/B",
    "history": "Mr. Santa asks all the great programmers of the world to solve a trivial problem. He gives them an integer m and asks for the number of positive integers n, such that the factorial of n ends with exactly m zeroes. Are you among those great programmers who can solve this problem?",
    "input": "The only line of input contains an integer m ( 1 \u2264 m \u2264 100 000) \u2014 the required number of trailing zeroes in factorial.",
    "output": "First print k \u2014 the number of values of n such that the factorial of n ends with m zeroes. Then print these k integers in increasing order.",
    "note": "The factorial of n is equal to the product of all integers from 1 to n inclusive, that is n! = 1\u00b72\u00b73\u00b7. . . \u00b7n. In the first sample, 5! = 120, 6! = 720, 7! = 5040, 8! = 40320 and 9! = 362880.",
    "topics": [
      "brute force",
      "constructive algorithms",
      "math",
      "number theory"
    ],
    "id": "633B"
  },
  {
    "title": "Ebony and Ivory",
    "url": "https://codeforces.com/problemset/problem/633/A",
    "history": "Dante is engaged in a fight with \" The Savior\" . Before he can fight it with his sword, he needs to break its shields. He has two guns, Ebony and Ivory, each of them is able to perform any non- negative number of shots. For every bullet that hits the shield, Ebony deals a units of damage while Ivory deals b units of damage. In order to break the shield Dante has to deal exactly c units of damage. Find out if this is possible.",
    "input": "The first line of the input contains three integers a, b, c ( 1 \u2264 a, b \u2264 100, 1 \u2264 c \u2264 10 000) \u2014 the number of units of damage dealt by Ebony gun and Ivory gun, and the total number of damage required to break the shield, respectively.",
    "output": "Print \" Yes\" ( without quotes) if Dante can deal exactly c damage to the shield and \" No\" ( without quotes) otherwise.",
    "note": "In the second sample, Dante can fire 1 bullet from Ebony and 2 from Ivory to deal exactly 1\u00b73 + 2\u00b72 = 7 damage. In the third sample, Dante can fire 1 bullet from ebony and no bullets from ivory to do 1\u00b76 + 0\u00b711 = 6 damage.",
    "topics": [
      "brute force",
      "math",
      "number theory"
    ],
    "id": "633A"
  },
  {
    "title": "Longest Subsequence",
    "url": "https://codeforces.com/problemset/problem/632/D",
    "history": "You are given array a with n elements and the number m. Consider some subsequence of a and the value of least common multiple ( LCM) of its elements. Denote LCM as l. Find any longest subsequence of a with the value l \u2264 m. A subsequence of a is an array we can get by erasing some elements of a. It is allowed to erase zero or all elements. The LCM of an empty array equals 1.",
    "input": "The first line contains two integers n and m ( 1 \u2264 n, m \u2264 106) \u2014 the size of the array a and the parameter from the problem statement. The second line contains n integers ai ( 1 \u2264 ai \u2264 109) \u2014 the elements of a.",
    "output": "In the first line print two integers l and kmax ( 1 \u2264 l \u2264 m, 0 \u2264 kmax \u2264 n) \u2014 the value of LCM and the number of elements in optimal subsequence. In the second line print kmax integers \u2014 the positions of the elements from the optimal subsequence in the ascending order. Note that you can find and print any subsequence with the maximum length.",
    "note": "",
    "topics": [
      "brute force",
      "math",
      "number theory"
    ],
    "id": "632D"
  },
  {
    "title": "Indivisibility",
    "url": "https://codeforces.com/problemset/problem/630/K",
    "history": "IT City company developing computer games decided to upgrade its way to reward its employees. Now it looks the following way. After a new game release users start buying it actively, and the company tracks the number of sales with precision to each transaction. Every time when the next number of sales is not divisible by any number from 2 to 10 every developer of this game gets a small bonus. A game designer Petya knows that the company is just about to release a new game that was partly developed by him. On the basis of his experience he predicts that n people will buy the game during the first month. Now Petya wants to determine how many times he will get the bonus. Help him to know it.",
    "input": "The only line of the input contains one integer n ( 1 \u2264 n \u2264 1018) \u2014 the prediction on the number of people who will buy the game.",
    "output": "Output one integer showing how many numbers from 1 to n are not divisible by any number from 2 to 10.",
    "note": "",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "630K"
  },
  {
    "title": "Divisibility",
    "url": "https://codeforces.com/problemset/problem/630/J",
    "history": "IT City company developing computer games invented a new way to reward its employees. After a new game release users start buying it actively, and the company tracks the number of sales with precision to each transaction. Every time when the next number of sales is divisible by all numbers from 2 to 10 every developer of this game gets a small bonus. A game designer Petya knows that the company is just about to release a new game that was partly developed by him. On the basis of his experience he predicts that n people will buy the game during the first month. Now Petya wants to determine how many times he will get the bonus. Help him to know it.",
    "input": "The only line of the input contains one integer n ( 1 \u2264 n \u2264 1018) \u2014 the prediction on the number of people who will buy the game.",
    "output": "Output one integer showing how many numbers from 1 to n are divisible by all numbers from 2 to 10.",
    "note": "",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "630J"
  },
  {
    "title": "Again Twenty Five!",
    "url": "https://codeforces.com/problemset/problem/630/A",
    "history": "The HR manager was disappointed again. The last applicant failed the interview the same way as 24 previous ones. \" Do I give such a hard task? \" \u2014 the HR manager thought. \" Just raise number 5 to the power of n and get last two digits of the number. Yes, of course, n can be rather big, and one cannot find the power using a calculator, but we need people who are able to think, not just follow the instructions. \" Could you pass the interview in the machine vision company in IT City?",
    "input": "The only line of the input contains a single integer n ( 2 \u2264 n \u2264 2\u00b71018) \u2014 the power in which you need to raise number 5.",
    "output": "Output the last two digits of 5n without spaces between them.",
    "note": "",
    "topics": [
      "number theory"
    ],
    "id": "630A"
  },
  {
    "title": "Block Towers",
    "url": "https://codeforces.com/problemset/problem/626/C",
    "history": "Students in a class are making towers of blocks. Each student makes a ( non- zero) tower by stacking pieces lengthwise on top of each other. n of the students use pieces made of two blocks and m of the students use pieces made of three blocks. The students don\u2019t want to use too many blocks, but they also want to be unique, so no two students\u2019 towers may contain the same number of blocks. Find the minimum height necessary for the tallest of the students' towers.",
    "input": "The first line of the input contains two space- separated integers n and m ( 0 \u2264 n, m \u2264 1 000 000, n + m > 0) \u2014 the number of students using two- block pieces and the number of students using three- block pieces, respectively.",
    "output": "Print a single integer, denoting the minimum possible height of the tallest tower.",
    "note": "In the first case, the student using two- block pieces can make a tower of height 4, and the students using three- block pieces can make towers of height 3, 6, and 9 blocks. The tallest tower has a height of 9 blocks. In the second case, the students can make towers of heights 2, 4, and 8 with two- block pieces and towers of heights 3 and 6 with three- block pieces, for a maximum height of 8 blocks.",
    "topics": [
      "brute force",
      "greedy",
      "math",
      "number theory"
    ],
    "id": "626C"
  },
  {
    "title": "Array GCD",
    "url": "https://codeforces.com/problemset/problem/623/B",
    "history": "You are given array ai of length n. You may consecutively apply two operations to this array: remove some subsegment ( continuous subsequence) of length m < n and pay for it m\u00b7a coins; change some elements of the array by at most 1, and pay b coins for each change. Please note that each of operations may be applied at most once ( and may be not applied at all) so you can remove only one segment and each number may be changed ( increased or decreased) by at most 1. Also note, that you are not allowed to delete the whole array. Your goal is to calculate the minimum number of coins that you need to spend in order to make the greatest common divisor of the elements of the resulting array be greater than 1.",
    "input": "The first line of the input contains integers n, a and b ( 1 \u2264 n \u2264 1 000 000, 0 \u2264 a, b \u2264 109) \u2014 the length of the array, the cost of removing a single element in the first operation and the cost of changing an element, respectively. The second line contains n integers ai ( 2 \u2264 ai \u2264 109) \u2014 elements of the array.",
    "output": "Print a single number \u2014 the minimum cost of changes needed to obtain an array, such that the greatest common divisor of all its elements is greater than 1.",
    "note": "In the first sample the optimal way is to remove number 3 and pay 1 coin for it. In the second sample you need to remove a segment [ 17, 13] and then decrease number 6. The cost of these changes is equal to 2\u00b73 + 2 = 8 coins.",
    "topics": [
      "dp",
      "greedy",
      "number theory"
    ],
    "id": "623B"
  },
  {
    "title": "Wet Shark and Flowers",
    "url": "https://codeforces.com/problemset/problem/621/C",
    "history": "There are n sharks who grow flowers for Wet Shark. They are all sitting around the table, such that sharks i and i + 1 are neighbours for all i from 1 to n - 1. Sharks n and 1 are neighbours too. Each shark will grow some number of flowers si. For i- th shark value si is random integer equiprobably chosen in range from li to ri. Wet Shark has it' s favourite prime number p, and he really likes it! If for any pair of neighbouring sharks i and j the product si\u00b7sj is divisible by p, then Wet Shark becomes happy and gives 1000 dollars to each of these sharks. At the end of the day sharks sum all the money Wet Shark granted to them. Find the expectation of this value.",
    "input": "The first line of the input contains two space- separated integers n and p ( 3 \u2264 n \u2264 100 000, 2 \u2264 p \u2264 109) \u2014 the number of sharks and Wet Shark' s favourite prime number. It is guaranteed that p is prime. The i- th of the following n lines contains information about i- th shark \u2014 two space- separated integers li and ri ( 1 \u2264 li \u2264 ri \u2264 109) , the range of flowers shark i can produce. Remember that si is chosen equiprobably among all integers from li to ri, inclusive.",
    "output": "Print a single real number \u2014 the expected number of dollars that the sharks receive in total. You answer will be considered correct if its absolute or relative error does not exceed 10 - 6. Namely: let' s assume that your answer is a, and the answer of the jury is b. The checker program will consider your answer correct, if .",
    "note": "A prime number is a positive integer number that is divisible only by 1 and itself. 1 is not considered to be prime. Consider the first sample. First shark grows some number of flowers from 1 to 2, second sharks grows from 420 to 421 flowers and third from 420420 to 420421. There are eight cases for the quantities of flowers ( s0, s1, s2) each shark grows: ( 1, 420, 420420) : note that s0\u00b7s1 = 420, s1\u00b7s2 = 176576400, and s2\u00b7s0 = 420420. For each pair, 1000 dollars will be awarded to each shark. Therefore, each shark will be awarded 2000 dollars, for a total of 6000 dollars. ( 1, 420, 420421) : now, the product s2\u00b7s0 is not divisible by 2. Therefore, sharks s0 and s2 will receive 1000 dollars, while shark s1 will receive 2000. The total is 4000. ( 1, 421, 420420) : total is 4000 ( 1, 421, 420421) : total is 0. ( 2, 420, 420420) : total is 6000. ( 2, 420, 420421) : total is 6000. ( 2, 421, 420420) : total is 6000. ( 2, 421, 420421) : total is 4000. The expected value is . In the second sample, no combination of quantities will garner the sharks any money.",
    "topics": [
      "combinatorics",
      "math",
      "number theory",
      "probabilities"
    ],
    "id": "621C"
  },
  {
    "title": "Sum of Remainders",
    "url": "https://codeforces.com/problemset/problem/616/E",
    "history": "Calculate the value of the sum: n mod 1 + n mod 2 + n mod 3 + . . . + n mod m. As the result can be very large, you should print the value modulo 109 + 7 ( the remainder when divided by 109 + 7) . The modulo operator a mod b stands for the remainder after dividing a by b. For example 10 mod 3 = 1.",
    "input": "The only line contains two integers n, m ( 1 \u2264 n, m \u2264 1013) \u2014 the parameters of the sum.",
    "output": "Print integer s \u2014 the value of the required sum modulo 109 + 7.",
    "note": "",
    "topics": [
      "implementation",
      "math",
      "number theory"
    ],
    "id": "616E"
  },
  {
    "title": "Multipliers",
    "url": "https://codeforces.com/problemset/problem/615/D",
    "history": "Ayrat has number n, represented as it' s prime factorization pi of size m, i. e. n = p1\u00b7p2\u00b7. . . \u00b7pm. Ayrat got secret information that that the product of all divisors of n taken modulo 109 + 7 is the password to the secret data base. Now he wants to calculate this value.",
    "input": "The first line of the input contains a single integer m ( 1 \u2264 m \u2264 200 000) \u2014 the number of primes in factorization of n. The second line contains m primes numbers pi ( 2 \u2264 pi \u2264 200 000) .",
    "output": "Print one integer \u2014 the product of all divisors of n modulo 109 + 7.",
    "note": "In the first sample n = 2\u00b73 = 6. The divisors of 6 are 1, 2, 3 and 6, their product is equal to 1\u00b72\u00b73\u00b76 = 36. In the second sample 2\u00b73\u00b72 = 12. The divisors of 12 are 1, 2, 3, 4, 6 and 12. 1\u00b72\u00b73\u00b74\u00b76\u00b712 = 1728.",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "615D"
  },
  {
    "title": "Moodular Arithmetic",
    "url": "https://codeforces.com/problemset/problem/603/B",
    "history": "As behooves any intelligent schoolboy, Kevin Sun is studying psycowlogy, cowculus, and cryptcowgraphy at the Bovinia State University ( BGU) under Farmer Ivan. During his Mathematics of Olympiads ( MoO) class, Kevin was confronted with a weird functional equation and needs your help. For two fixed integers k and p, where p is an odd prime number, the functional equation states that for some function . ( This equation should hold for any integer x in the range 0 to p - 1, inclusive. ) It turns out that f can actually be many different functions. Instead of finding a solution, Kevin wants you to count the number of distinct functions f that satisfy this equation. Since the answer may be very large, you should print your result modulo 109 + 7.",
    "input": "The input consists of two space- separated integers p and k ( 3 \u2264 p \u2264 1 000 000, 0 \u2264 k \u2264 p - 1) on a single line. It is guaranteed that p is an odd prime number.",
    "output": "Print a single integer, the number of distinct functions f modulo 109 + 7.",
    "note": "In the first sample, p = 3 and k = 2. The following functions work: f( 0) = 0, f( 1) = 1, f( 2) = 2. f( 0) = 0, f( 1) = 2, f( 2) = 1. f( 0) = f( 1) = f( 2) = 0.",
    "topics": [
      "combinatorics",
      "dfs and similar",
      "dsu",
      "math",
      "number theory"
    ],
    "id": "603B"
  },
  {
    "title": "REQ",
    "url": "https://codeforces.com/problemset/problem/594/D",
    "history": "Today on a math lesson the teacher told Vovochka that the Euler function of a positive integer \u03c6( n) is an arithmetic function that counts the positive integers less than or equal to n that are relatively prime to n. The number 1 is coprime to all the positive integers and \u03c6( 1) = 1. Now the teacher gave Vovochka an array of n positive integers a1, a2, . . . , an and a task to process q queries li ri \u2014 to calculate and print modulo 109 + 7. As it is too hard for a second grade school student, you' ve decided to help Vovochka.",
    "input": "The first line of the input contains number n ( 1 \u2264 n \u2264 200 000) \u2014 the length of the array given to Vovochka. The second line contains n integers a1, a2, . . . , an ( 1 \u2264 ai \u2264 106) . The third line contains integer q ( 1 \u2264 q \u2264 200 000) \u2014 the number of queries. Next q lines contain the queries, one per line. Each query is defined by the boundaries of the segment li and ri ( 1 \u2264 li \u2264 ri \u2264 n) .",
    "output": "Print q numbers \u2014 the value of the Euler function for each query, calculated modulo 109 + 7.",
    "note": "In the second sample the values are calculated like that: \u03c6( 13\u00b752\u00b76) = \u03c6( 4056) = 1248 \u03c6( 52\u00b76\u00b710\u00b71) = \u03c6( 3120) = 768 \u03c6( 24\u00b763\u00b713\u00b752\u00b76\u00b710\u00b71) = \u03c6( 61326720) = 12939264 \u03c6( 63\u00b713\u00b752) = \u03c6( 42588) = 11232 \u03c6( 13\u00b752\u00b76\u00b710) = \u03c6( 40560) = 9984 \u03c6( 63\u00b713\u00b752\u00b76\u00b710) = \u03c6( 2555280) = 539136",
    "topics": [
      "data structures",
      "number theory"
    ],
    "id": "594D"
  },
  {
    "title": "Present for Vitalik the Philatelist ",
    "url": "https://codeforces.com/problemset/problem/585/E",
    "history": "Vitalik the philatelist has a birthday today! As he is a regular customer in a stamp store called ' Robin Bobin' , the store management decided to make him a gift. Vitalik wants to buy one stamp and the store will give him a non- empty set of the remaining stamps, such that the greatest common divisor ( GCD) of the price of the stamps they give to him is more than one. If the GCD of prices of the purchased stamp and prices of present stamps set will be equal to 1, then Vitalik will leave the store completely happy. The store management asks you to count the number of different situations in which Vitalik will leave the store completely happy. Since the required number of situations can be very large, you need to find the remainder of this number modulo 109 + 7. The situations are different if the stamps purchased by Vitalik are different, or if one of the present sets contains a stamp that the other present does not contain.",
    "input": "The first line of the input contains integer n ( 2 \u2264 n \u2264 5\u00b7105) \u2014 the number of distinct stamps, available for sale in the ' Robin Bobin' store. The second line contains a sequence of integers a1, a2, . . . , an ( 2 \u2264 ai \u2264 107) , where ai is the price of the i- th stamp.",
    "output": "Print a single integer \u2014 the remainder of the sought number of situations modulo 109 + 7.",
    "note": "In the first sample the following situations are possible: Vitalik buys the 1- st stamp, the store gives him the 2- nd stamp as a present; Vitalik buys the 3- rd stamp, the store gives him the 2- nd stamp as a present; Vitalik buys the 2- nd stamp, the store gives him the 1- st stamp as a present; Vitalik buys the 2- nd stamp, the store gives him the 3- rd stamp as a present; Vitalik buys the 2- nd stamp, the store gives him the 1- st and 3- rd stamps as a present.",
    "topics": [
      "combinatorics",
      "math",
      "number theory"
    ],
    "id": "585E"
  },
  {
    "title": "Alice, Bob, Oranges and Apples",
    "url": "https://codeforces.com/problemset/problem/585/C",
    "history": "Alice and Bob decided to eat some fruit. In the kitchen they found a large bag of oranges and apples. Alice immediately took an orange for herself, Bob took an apple. To make the process of sharing the remaining fruit more fun, the friends decided to play a game. They put multiple cards and on each one they wrote a letter, either ' A' , or the letter ' B' . Then they began to remove the cards one by one from left to right, every time they removed a card with the letter ' A' , Alice gave Bob all the fruits she had at that moment and took out of the bag as many apples and as many oranges as she had before. Thus the number of oranges and apples Alice had, did not change. If the card had written letter ' B' , then Bob did the same, that is, he gave Alice all the fruit that he had, and took from the bag the same set of fruit. After the last card way removed, all the fruit in the bag were over. You know how many oranges and apples was in the bag at first. Your task is to find any sequence of cards that Alice and Bob could have played with.",
    "input": "The first line of the input contains two integers, x, y ( 1 \u2264 x, y \u2264 1018, xy > 1) \u2014 the number of oranges and apples that were initially in the bag.",
    "output": "Print any sequence of cards that would meet the problem conditions as a compressed string of characters ' A' and ' B. That means that you need to replace the segments of identical consecutive characters by the number of repetitions of the characters and the actual character. For example, string AAABAABBB should be replaced by string 3A1B2A3B, but cannot be replaced by 2A1A1B2A3B or by 3AB2A3B. See the samples for clarifications of the output format. The string that you print should consist of at most 106 characters. It is guaranteed that if the answer exists, its compressed representation exists, consisting of at most 106 characters. If there are several possible answers, you are allowed to print any of them. If the sequence of cards that meet the problem statement does not not exist, print a single word Impossible.",
    "note": "In the first sample, if the row contained three cards with letter ' B' , then Bob should give one apple to Alice three times. So, in the end of the game Alice has one orange and three apples, and Bob has one apple, in total it is one orange and four apples. In second sample, there is no answer since one card is not enough for game to finish, and two cards will produce at least three apples or three oranges. In the third sample, cards contain letters ' AB' , so after removing the first card Bob has one orange and one apple, and after removal of second card Alice has two oranges and one apple. So, in total it is three oranges and two apples.",
    "topics": [
      "number theory"
    ],
    "id": "585C"
  },
  {
    "title": "Dima and Lisa",
    "url": "https://codeforces.com/problemset/problem/584/D",
    "history": "Dima loves representing an odd number as the sum of multiple primes, and Lisa loves it when there are at most three primes. Help them to represent the given number as the sum of at most than three primes. More formally, you are given an odd numer n. Find a set of numbers pi ( 1 \u2264 i \u2264 k) , such that 1 \u2264 k \u2264 3 pi is a prime The numbers pi do not necessarily have to be distinct. It is guaranteed that at least one possible solution exists.",
    "input": "The single line contains an odd number n ( 3 \u2264 n < 109) .",
    "output": "In the first line print k ( 1 \u2264 k \u2264 3) , showing how many numbers are in the representation you found. In the second line print numbers pi in any order. If there are multiple possible solutions, you can print any of them.",
    "note": "A prime is an integer strictly larger than one that is divisible only by one and by itself.",
    "topics": [
      "brute force",
      "math",
      "number theory"
    ],
    "id": "584D"
  },
  {
    "title": "Number of Binominal Coefficients",
    "url": "https://codeforces.com/problemset/problem/582/D",
    "history": "For a given prime integer p and integers \u03b1, A calculate the number of pairs of integers ( n, k) , such that 0 \u2264 k \u2264 n \u2264 A and is divisible by p\u03b1. As the answer can be rather large, print the remainder of the answer moduly 109 + 7. Let us remind you that is the number of ways k objects can be chosen from the set of n objects.",
    "input": "The first line contains two integers, p and \u03b1 ( 1 \u2264 p, \u03b1 \u2264 109, p is prime) . The second line contains the decimal record of integer A ( 0 \u2264 A < 101000) without leading zeroes.",
    "output": "In the single line print the answer to the problem.",
    "note": "In the first sample three binominal coefficients divisible by 4 are , and .",
    "topics": [
      "dp",
      "math",
      "number theory"
    ],
    "id": "582D"
  },
  {
    "title": "Superior Periodic Subarrays",
    "url": "https://codeforces.com/problemset/problem/582/C",
    "history": "You are given an infinite periodic array a0, a1, . . . , an - 1, . . . with the period of length n. Formally, . A periodic subarray ( l, s) ( 0 \u2264 l < n, 1 \u2264 s < n) of array a is an infinite periodic array with a period of length s that is a subsegment of array a, starting with position l. A periodic subarray ( l, s) is superior, if when attaching it to the array a, starting from index l, any element of the subarray is larger than or equal to the corresponding element of array a. An example of attaching is given on the figure ( top \u2014 infinite array a, bottom \u2014 its periodic subarray ( l, s) ) : Find the number of distinct pairs ( l, s) , corresponding to the superior periodic arrays.",
    "input": "The first line contains number n ( 1 \u2264 n \u2264 2\u00b7105) . The second line contains n numbers a0, a1, . . . , an - 1 ( 1 \u2264 ai \u2264 106) , separated by a space.",
    "output": "Print a single integer \u2014 the sought number of pairs.",
    "note": "In the first sample the superior subarrays are ( 0, 1) and ( 3, 2) . Subarray ( 0, 1) is superior, as a0 \u2265 a0, a0 \u2265 a1, a0 \u2265 a2, a0 \u2265 a3, a0 \u2265 a0, . . . Subarray ( 3, 2) is superior a3 \u2265 a3, a0 \u2265 a0, a3 \u2265 a1, a0 \u2265 a2, a3 \u2265 a3, . . . In the third sample any pair of ( l, s) corresponds to a superior subarray as all the elements of an array are distinct.",
    "topics": [
      "number theory"
    ],
    "id": "582C"
  },
  {
    "title": "GCD Table",
    "url": "https://codeforces.com/problemset/problem/582/A",
    "history": "The GCD table G of size n \u00d7 n for an array of positive integers a of length n is defined by formula Let us remind you that the greatest common divisor ( GCD) of two positive integers x and y is the greatest integer that is divisor of both x and y, it is denoted as . For example, for array a = 4, 3, 6, 2 of length 4 the GCD table will look as follows: Given all the numbers of the GCD table G, restore array a.",
    "input": "The first line contains number n ( 1 \u2264 n \u2264 500) \u2014 the length of array a. The second line contains n2 space- separated numbers \u2014 the elements of the GCD table of G for array a. All the numbers in the table are positive integers, not exceeding 109. Note that the elements are given in an arbitrary order. It is guaranteed that the set of the input data corresponds to some array a.",
    "output": "In the single line print n positive integers \u2014 the elements of array a. If there are multiple possible solutions, you are allowed to print any of them.",
    "note": "",
    "topics": [
      "constructive algorithms",
      "greedy",
      "number theory"
    ],
    "id": "582A"
  },
  {
    "title": "Multiplication Table",
    "url": "https://codeforces.com/problemset/problem/577/A",
    "history": "Let' s consider a table consisting of n rows and n columns. The cell located at the intersection of i- th row and j- th column contains number i \u00d7 j. The rows and columns are numbered starting from 1. You are given a positive integer x. Your task is to count the number of cells in a table that contain number x.",
    "input": "The single line contains numbers n and x ( 1 \u2264 n \u2264 105, 1 \u2264 x \u2264 109) \u2014 the size of the table and the number that we are looking for in the table.",
    "output": "Print a single number: the number of times x occurs in the table.",
    "note": "A table for the second sample test is given below. The occurrences of number 12 are marked bold.",
    "topics": [
      "implementation",
      "number theory"
    ],
    "id": "577A"
  },
  {
    "title": "Vasya and Petya's Game",
    "url": "https://codeforces.com/problemset/problem/576/A",
    "history": "Vasya and Petya are playing a simple game. Vasya thought of number x between 1 and n, and Petya tries to guess the number. Petya can ask questions like: \" Is the unknown number divisible by number y? \" . The game is played by the following rules: first Petya asks all the questions that interest him ( also, he can ask no questions) , and then Vasya responds to each question with a ' yes' or a ' no' . After receiving all the answers Petya should determine the number that Vasya thought of. Unfortunately, Petya is not familiar with the number theory. Help him find the minimum number of questions he should ask to make a guaranteed guess of Vasya' s number, and the numbers yi, he should ask the questions about.",
    "input": "A single line contains number n ( 1 \u2264 n \u2264 103) .",
    "output": "Print the length of the sequence of questions k ( 0 \u2264 k \u2264 n) , followed by k numbers \u2014 the questions yi ( 1 \u2264 yi \u2264 n) . If there are several correct sequences of questions of the minimum length, you are allowed to print any of them.",
    "note": "The sequence from the answer to the first sample test is actually correct. If the unknown number is not divisible by one of the sequence numbers, it is equal to 1. If the unknown number is divisible by 4, it is 4. If the unknown number is divisible by 3, then the unknown number is 3. Otherwise, it is equal to 2. Therefore, the sequence of questions allows you to guess the unknown number. It can be shown that there is no correct sequence of questions of length 2 or shorter.",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "576A"
  },
  {
    "title": "Bots",
    "url": "https://codeforces.com/problemset/problem/575/H",
    "history": "Sasha and Ira are two best friends. But they aren\u2019t just friends, they are software engineers and experts in artificial intelligence. They are developing an algorithm for two bots playing a two- player game. The game is cooperative and turn based. In each turn, one of the players makes a move ( it doesn\u2019t matter which player, it' s possible that players turns do not alternate) . Algorithm for bots that Sasha and Ira are developing works by keeping track of the state the game is in. Each time either bot makes a move, the state changes. And, since the game is very dynamic, it will never go back to the state it was already in at any point in the past. Sasha and Ira are perfectionists and want their algorithm to have an optimal winning strategy. They have noticed that in the optimal winning strategy, both bots make exactly N moves each. But, in order to find the optimal strategy, their algorithm needs to analyze all possible states of the game ( they haven\u2019t learned about alpha- beta pruning yet) and pick the best sequence of moves. They are worried about the efficiency of their algorithm and are wondering what is the total number of states of the game that need to be analyzed?",
    "input": "The first and only line contains integer N. 1 \u2264 N \u2264 106",
    "output": "Output should contain a single integer \u2013 number of possible states modulo 109 + 7.",
    "note": "Start: Game is in state A. Turn 1: Either bot can make a move ( first bot is red and second bot is blue) , so there are two possible states after the first turn \u2013 B and C. Turn 2: In both states B and C, either bot can again make a turn, so the list of possible states is expanded to include D, E, F and G. Turn 3: Red bot already did N= 2 moves when in state D, so it cannot make any more moves there. It can make moves when in state E, F and G, so states I, K and M are added to the list. Similarly, blue bot cannot make a move when in state G, but can when in D, E and F, so states H, J and L are added. Turn 4: Red bot already did N= 2 moves when in states H, I and K, so it can only make moves when in J, L and M, so states P, R and S are added. Blue bot cannot make a move when in states J, L and M, but only when in H, I and K, so states N, O and Q are added. Overall, there are 19 possible states of the game their algorithm needs to analyze.",
    "topics": [
      "combinatorics",
      "dp",
      "math",
      "number theory"
    ],
    "id": "575H"
  },
  {
    "title": "Bear and Poker",
    "url": "https://codeforces.com/problemset/problem/573/A",
    "history": "Limak is an old brown bear. He often plays poker with his friends. Today they went to a casino. There are n players ( including Limak himself) and right now all of them have bids on the table. i- th of them has bid with size ai dollars. Each player can double his bid any number of times and triple his bid any number of times. The casino has a great jackpot for making all bids equal. Is it possible that Limak and his friends will win a jackpot?",
    "input": "First line of input contains an integer n ( 2 \u2264 n \u2264 105) , the number of players. The second line contains n integer numbers a1, a2, . . . , an ( 1 \u2264 ai \u2264 109) \u2014 the bids of players.",
    "output": "Print \" Yes\" ( without the quotes) if players can make their bids become equal, or \" No\" otherwise.",
    "note": "In the first sample test first and third players should double their bids twice, second player should double his bid once and fourth player should both double and triple his bid. It can be shown that in the second sample test there is no way to make all bids equal.",
    "topics": [
      "implementation",
      "math",
      "number theory"
    ],
    "id": "573A"
  },
  {
    "title": "Primes or Palindromes?",
    "url": "https://codeforces.com/problemset/problem/568/A",
    "history": "Rikhail Mubinchik believes that the current definition of prime numbers is obsolete as they are too complex and unpredictable. A palindromic number is another matter. It is aesthetically pleasing, and it has a number of remarkable properties. Help Rikhail to convince the scientific community in this! Let us remind you that a number is called prime if it is integer larger than one, and is not divisible by any positive integer other than itself and one. Rikhail calls a number a palindromic if it is integer, positive, and its decimal representation without leading zeros is a palindrome, i. e. reads the same from left to right and right to left. One problem with prime numbers is that there are too many of them. Let' s introduce the following notation: \u03c0( n) \u2014 the number of primes no larger than n, rub( n) \u2014 the number of palindromic numbers no larger than n. Rikhail wants to prove that there are a lot more primes than palindromic ones. He asked you to solve the following problem: for a given value of the coefficient A find the maximum n, such that \u03c0( n) \u2264 A\u00b7rub( n) .",
    "input": "The input consists of two positive integers p, q, the numerator and denominator of the fraction that is the value of A ( , ) .",
    "output": "If such maximum number exists, then print it. Otherwise, print \" Palindromic tree is better than splay tree\" ( without the quotes) .",
    "note": "",
    "topics": [
      "brute force",
      "implementation",
      "math",
      "number theory"
    ],
    "id": "568A"
  },
  {
    "title": "Clique in the Divisibility Graph",
    "url": "https://codeforces.com/problemset/problem/566/F",
    "history": "As you must know, the maximum clique problem in an arbitrary graph is NP- hard. Nevertheless, for some graphs of specific kinds it can be solved effectively. Just in case, let us remind you that a clique in a non- directed graph is a subset of the vertices of a graph, such that any two vertices of this subset are connected by an edge. In particular, an empty set of vertexes and a set consisting of a single vertex, are cliques. Let' s define a divisibility graph for a set of positive integers A = a1, a2, . . . , an as follows. The vertices of the given graph are numbers from set A, and two numbers ai and aj ( i = \u0338 j) are connected by an edge if and only if either ai is divisible by aj, or aj is divisible by ai. You are given a set of non- negative integers A. Determine the size of a maximum clique in a divisibility graph for set A.",
    "input": "The first line contains integer n ( 1 \u2264 n \u2264 106) , that sets the size of set A. The second line contains n distinct positive integers a1, a2, . . . , an ( 1 \u2264 ai \u2264 106) \u2014 elements of subset A. The numbers in the line follow in the ascending order.",
    "output": "Print a single number \u2014 the maximum size of a clique in a divisibility graph for set A.",
    "note": "In the first sample test a clique of size 3 is, for example, a subset of vertexes 3, 6, 18. A clique of a larger size doesn' t exist in this graph.",
    "topics": [
      "dp",
      "math",
      "number theory"
    ],
    "id": "566F"
  },
  {
    "title": "Gerald and Giant Chess",
    "url": "https://codeforces.com/problemset/problem/559/C",
    "history": "Giant chess is quite common in Geraldion. We will not delve into the rules of the game, we' ll just say that the game takes place on an h \u00d7 w field, and it is painted in two colors, but not like in chess. Almost all cells of the field are white and only some of them are black. Currently Gerald is finishing a game of giant chess against his friend Pollard. Gerald has almost won, and the only thing he needs to win is to bring the pawn from the upper left corner of the board, where it is now standing, to the lower right corner. Gerald is so confident of victory that he became interested, in how many ways can he win? The pawn, which Gerald has got left can go in two ways: one cell down or one cell to the right. In addition, it can not go to the black cells, otherwise the Gerald still loses. There are no other pawns or pieces left on the field, so that, according to the rules of giant chess Gerald moves his pawn until the game is over, and Pollard is just watching this process.",
    "input": "The first line of the input contains three integers: h, w, n \u2014 the sides of the board and the number of black cells ( 1 \u2264 h, w \u2264 105, 1 \u2264 n \u2264 2000) . Next n lines contain the description of black cells. The i- th of these lines contains numbers ri, ci ( 1 \u2264 ri \u2264 h, 1 \u2264 ci \u2264 w) \u2014 the number of the row and column of the i- th cell. It is guaranteed that the upper left and lower right cell are white and all cells in the description are distinct.",
    "output": "Print a single line \u2014 the remainder of the number of ways to move Gerald' s pawn from the upper left to the lower right corner modulo 109 + 7.",
    "note": "",
    "topics": [
      "combinatorics",
      "dp",
      "math",
      "number theory"
    ],
    "id": "559C"
  },
  {
    "title": "Vanya and Scales",
    "url": "https://codeforces.com/problemset/problem/552/C",
    "history": "Vanya has a scales for weighing loads and weights of masses w0, w1, w2, . . . , w100 grams where w is some integer not less than 2 ( exactly one weight of each nominal value) . Vanya wonders whether he can weight an item with mass m using the given weights, if the weights can be put on both pans of the scales. Formally speaking, your task is to determine whether it is possible to place an item of mass m and some weights on the left pan of the scales, and some weights on the right pan of the scales so that the pans of the scales were in balance.",
    "input": "The first line contains two integers w, m ( 2 \u2264 w \u2264 109, 1 \u2264 m \u2264 109) \u2014 the number defining the masses of the weights and the mass of the item.",
    "output": "Print word ' YES' if the item can be weighted and ' NO' if it cannot.",
    "note": "Note to the first sample test. One pan can have an item of mass 7 and a weight of mass 3, and the second pan can have two weights of masses 9 and 1, correspondingly. Then 7 + 3 = 9 + 1. Note to the second sample test. One pan of the scales can have an item of mass 99 and the weight of mass 1, and the second pan can have the weight of mass 100. Note to the third sample test. It is impossible to measure the weight of the item in the manner described in the input.",
    "topics": [
      "brute force",
      "dp",
      "greedy",
      "math",
      "meet-in-the-middle",
      "number theory"
    ],
    "id": "552C"
  },
  {
    "title": "GukiZ and Binary Operations",
    "url": "https://codeforces.com/problemset/problem/551/D",
    "history": "We all know that GukiZ often plays with arrays. Now he is thinking about this problem: how many arrays a, of length n, with non- negative elements strictly less then 2l meet the following condition: ? Here operation means bitwise AND ( in Pascal it is equivalent to and, in C/ C+ + / Java/ Python it is equivalent to ) , operation means bitwise OR ( in Pascal it is equivalent to , in C/ C+ + / Java/ Python it is equivalent to | ) . Because the answer can be quite large, calculate it modulo m. This time GukiZ hasn' t come up with solution, and needs you to help him!",
    "input": "First and the only line of input contains four integers n, k, l, m ( 2 \u2264 n \u2264 1018, 0 \u2264 k \u2264 1018, 0 \u2264 l \u2264 64, 1 \u2264 m \u2264 109 + 7) .",
    "output": "In the single line print the number of arrays satisfying the condition above modulo m.",
    "note": "In the first sample, satisfying arrays are 1, 1, 3, 1, 1, 3. In the second sample, only satisfying array is 1, 1. In the third sample, satisfying arrays are 0, 3, 3, 1, 3, 2, 1, 3, 3, 2, 3, 1, 2, 3, 3, 3, 3, 0, 3, 3, 1, 3, 3, 2, 3, 3, 3.",
    "topics": [
      "combinatorics",
      "implementation",
      "math",
      "matrices",
      "number theory"
    ],
    "id": "551D"
  },
  {
    "title": "Mike and Foam",
    "url": "https://codeforces.com/problemset/problem/547/C",
    "history": "Mike is a bartender at Rico' s bar. At Rico' s, they put beer glasses in a special shelf. There are n kinds of beer at Rico' s numbered from 1 to n. i- th kind of beer has ai milliliters of foam on it. Maxim is Mike' s boss. Today he told Mike to perform q queries. Initially the shelf is empty. In each request, Maxim gives him a number x. If beer number x is already in the shelf, then Mike should remove it from the shelf, otherwise he should put it in the shelf. After each query, Mike should tell him the score of the shelf. Bears are geeks. So they think that the score of a shelf is the number of pairs ( i, j) of glasses in the shelf such that i < j and where is the greatest common divisor of numbers a and b. Mike is tired. So he asked you to help him in performing these requests.",
    "input": "The first line of input contains numbers n and q ( 1 \u2264 n, q \u2264 2 \u00d7 105) , the number of different kinds of beer and number of queries. The next line contains n space separated integers, a1, a2, . . . , an ( 1 \u2264 ai \u2264 5 \u00d7 105) , the height of foam in top of each kind of beer. The next q lines contain the queries. Each query consists of a single integer integer x ( 1 \u2264 x \u2264 n) , the index of a beer that should be added or removed from the shelf.",
    "output": "For each query, print the answer for that query in one line.",
    "note": "",
    "topics": [
      "bitmasks",
      "combinatorics",
      "dp",
      "math",
      "number theory"
    ],
    "id": "547C"
  },
  {
    "title": "Soldier and Number Game",
    "url": "https://codeforces.com/problemset/problem/546/D",
    "history": "Two soldiers are playing a game. At the beginning first of them chooses a positive integer n and gives it to the second soldier. Then the second one tries to make maximum possible number of rounds. Each round consists of choosing a positive integer x > 1, such that n is divisible by x and replacing n with n / x. When n becomes equal to 1 and there is no more possible valid moves the game is over and the score of the second soldier is equal to the number of rounds he performed. To make the game more interesting, first soldier chooses n of form a! / b! for some positive integer a and b ( a \u2265 b) . Here by k! we denote the factorial of k that is defined as a product of all positive integers not large than k. What is the maximum possible score of the second soldier?",
    "input": "First line of input consists of single integer t ( 1 \u2264 t \u2264 1 000 000) denoting number of games soldiers play. Then follow t lines, each contains pair of integers a and b ( 1 \u2264 b \u2264 a \u2264 5 000 000) defining the value of n for a game.",
    "output": "For each game output a maximum score that the second soldier can get.",
    "note": "",
    "topics": [
      "constructive algorithms",
      "dp",
      "math",
      "number theory"
    ],
    "id": "546D"
  },
  {
    "title": "Superhero's Job",
    "url": "https://codeforces.com/problemset/problem/542/D",
    "history": "It' s tough to be a superhero. And it' s twice as tough to resist the supervillain who is cool at math. Suppose that you' re an ordinary Batman in an ordinary city of Gotham. Your enemy Joker mined the building of the city administration and you only have several minutes to neutralize the charge. To do that you should enter the cancel code on the bomb control panel. However, that mad man decided to give you a hint. This morning the mayor found a playing card under his pillow. There was a line written on the card: The bomb has a note saying \" J( x) = A\" , where A is some positive integer. You suspect that the cancel code is some integer x that meets the equation J( x) = A. Now in order to decide whether you should neutralize the bomb or run for your life, you' ve got to count how many distinct positive integers x meet this equation.",
    "input": "The single line of the input contains a single integer A ( 1 \u2264 A \u2264 1012) .",
    "output": "Print the number of solutions of the equation J( x) = A.",
    "note": "Record x| n means that number n divides number x. is defined as the largest positive integer that divides both a and b. In the first sample test the only suitable value of x is 2. Then J( 2) = 1 + 2. In the second sample test the following values of x match: x = 14, J( 14) = 1 + 2 + 7 + 14 = 24 x = 15, J( 15) = 1 + 3 + 5 + 15 = 24 x = 23, J( 23) = 1 + 23 = 24",
    "topics": [
      "dfs and similar",
      "dp",
      "hashing",
      "math",
      "number theory"
    ],
    "id": "542D"
  },
  {
    "title": "Pluses everywhere",
    "url": "https://codeforces.com/problemset/problem/520/E",
    "history": "Vasya is sitting on an extremely boring math class. To have fun, he took a piece of paper and wrote out n numbers on a single line. After that, Vasya began to write out different ways to put pluses ( \" + \" ) in the line between certain digits in the line so that the result was a correct arithmetic expression; formally, no two pluses in such a partition can stand together ( between any two adjacent pluses there must be at least one digit) , and no plus can stand at the beginning or the end of a line. For example, in the string 100500, ways 100500 ( add no pluses) , 1+ 00+ 500 or 10050+ 0 are correct, and ways 100+ + 500, + 1+ 0+ 0+ 5+ 0+ 0 or 100500+ are incorrect. The lesson was long, and Vasya has written all the correct ways to place exactly k pluses in a string of digits. At this point, he got caught having fun by a teacher and he was given the task to calculate the sum of all the resulting arithmetic expressions by the end of the lesson ( when calculating the value of an expression the leading zeros should be ignored) . As the answer can be large, Vasya is allowed to get only its remainder modulo 109 + 7. Help him!",
    "input": "The first line contains two integers, n and k ( 0 \u2264 k < n \u2264 105) . The second line contains a string consisting of n digits.",
    "output": "Print the answer to the problem modulo 109 + 7.",
    "note": "In the first sample the result equals ( 1 + 08) + ( 10 + 8) = 27. In the second sample the result equals 1 + 0 + 8 = 9.",
    "topics": [
      "combinatorics",
      "dp",
      "math",
      "number theory"
    ],
    "id": "520E"
  },
  {
    "title": "A and B and Team Training",
    "url": "https://codeforces.com/problemset/problem/519/C",
    "history": "A and B are preparing themselves for programming contests. An important part of preparing for a competition is sharing programming knowledge from the experienced members to those who are just beginning to deal with the contests. Therefore, during the next team training A decided to make teams so that newbies are solving problems together with experienced participants. A believes that the optimal team of three people should consist of one experienced participant and two newbies. Thus, each experienced participant can share the experience with a large number of people. However, B believes that the optimal team should have two experienced members plus one newbie. Thus, each newbie can gain more knowledge and experience. As a result, A and B have decided that all the teams during the training session should belong to one of the two types described above. Furthermore, they agree that the total number of teams should be as much as possible. There are n experienced members and m newbies on the training session. Can you calculate what maximum number of teams can be formed?",
    "input": "The first line contains two integers n and m ( 0 \u2264 n, m \u2264 5\u00b7105) \u2014 the number of experienced participants and newbies that are present at the training session.",
    "output": "Print the maximum number of teams that can be formed.",
    "note": "Let' s represent the experienced players as XP and newbies as NB. In the first test the teams look as follows: ( XP, NB, NB) , ( XP, NB, NB) . In the second test sample the teams look as follows: ( XP, NB, NB) , ( XP, NB, NB) , ( XP, XP, NB) .",
    "topics": [
      "greedy",
      "implementation",
      "math",
      "number theory"
    ],
    "id": "519C"
  },
  {
    "title": "Drazil and His Happy Friends",
    "url": "https://codeforces.com/problemset/problem/516/E",
    "history": "Drazil has many friends. Some of them are happy and some of them are unhappy. Drazil wants to make all his friends become happy. So he invented the following plan. There are n boys and m girls among his friends. Let' s number them from 0 to n - 1 and 0 to m - 1 separately. In i- th day, Drazil invites - th boy and - th girl to have dinner together ( as Drazil is programmer, i starts from 0) . If one of those two people is happy, the other one will also become happy. Otherwise, those two people remain in their states. Once a person becomes happy ( or if it is happy originally) , he stays happy forever. Drazil wants to know on which day all his friends become happy or to determine if they won' t become all happy at all.",
    "input": "The first line contains two integer n and m ( 1 \u2264 n, m \u2264 109) . The second line contains integer b ( 0 \u2264 b \u2264 min( n, 105) ) , denoting the number of happy boys among friends of Drazil, and then follow b distinct integers x1, x2, . . . , xb ( 0 \u2264 xi < n) , denoting the list of indices of happy boys. The third line conatins integer g ( 0 \u2264 g \u2264 min( m, 105) ) , denoting the number of happy girls among friends of Drazil, and then follow g distinct integers y1, y2, . . . , yg ( 0 \u2264 yj < m) , denoting the list of indices of happy girls. It is guaranteed that there is at least one person that is unhappy among his friends.",
    "output": "Print the number of the first day that all friends of Drazil become happy. If this day won' t come at all, you print - 1.",
    "note": "By we define the remainder of integer division of i by k. In first sample case: On the 0- th day, Drazil invites 0- th boy and 0- th girl. Because 0- th girl is happy at the beginning, 0- th boy become happy at this day. On the 1- st day, Drazil invites 1- st boy and 1- st girl. They are both unhappy, so nothing changes at this day. On the 2- nd day, Drazil invites 0- th boy and 2- nd girl. Because 0- th boy is already happy he makes 2- nd girl become happy at this day. On the 3- rd day, Drazil invites 1- st boy and 0- th girl. 0- th girl is happy, so she makes 1- st boy happy. On the 4- th day, Drazil invites 0- th boy and 1- st girl. 0- th boy is happy, so he makes the 1- st girl happy. So, all friends become happy at this moment.",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "516E"
  },
  {
    "title": "Drazil and His Happy Friends",
    "url": "https://codeforces.com/problemset/problem/515/B",
    "history": "Drazil has many friends. Some of them are happy and some of them are unhappy. Drazil wants to make all his friends become happy. So he invented the following plan. There are n boys and m girls among his friends. Let' s number them from 0 to n - 1 and 0 to m - 1 separately. In i- th day, Drazil invites - th boy and - th girl to have dinner together ( as Drazil is programmer, i starts from 0) . If one of those two people is happy, the other one will also become happy. Otherwise, those two people remain in their states. Once a person becomes happy ( or if he/ she was happy originally) , he stays happy forever. Drazil wants to know whether he can use this plan to make all his friends become happy at some moment.",
    "input": "The first line contains two integer n and m ( 1 \u2264 n, m \u2264 100) . The second line contains integer b ( 0 \u2264 b \u2264 n) , denoting the number of happy boys among friends of Drazil, and then follow b distinct integers x1, x2, . . . , xb ( 0 \u2264 xi < n) , denoting the list of indices of happy boys. The third line conatins integer g ( 0 \u2264 g \u2264 m) , denoting the number of happy girls among friends of Drazil, and then follow g distinct integers y1, y2, . . . , yg ( 0 \u2264 yj < m) , denoting the list of indices of happy girls. It is guaranteed that there is at least one person that is unhappy among his friends.",
    "output": "If Drazil can make all his friends become happy by this plan, print \" Yes\" . Otherwise, print \" No\" .",
    "note": "By we define the remainder of integer division of i by k. In first sample case: On the 0- th day, Drazil invites 0- th boy and 0- th girl. Because 0- th girl is happy at the beginning, 0- th boy become happy at this day. On the 1- st day, Drazil invites 1- st boy and 1- st girl. They are both unhappy, so nothing changes at this day. On the 2- nd day, Drazil invites 0- th boy and 2- nd girl. Because 0- th boy is already happy he makes 2- nd girl become happy at this day. On the 3- rd day, Drazil invites 1- st boy and 0- th girl. 0- th girl is happy, so she makes 1- st boy happy. On the 4- th day, Drazil invites 0- th boy and 1- st girl. 0- th boy is happy, so he makes the 1- st girl happy. So, all friends become happy at this moment.",
    "topics": [
      "brute force",
      "dsu",
      "meet-in-the-middle",
      "number theory"
    ],
    "id": "515B"
  },
  {
    "title": "New Year Running",
    "url": "https://codeforces.com/problemset/problem/500/G",
    "history": "New Year is coming in Tree Island! In this island, as the name implies, there are n cities connected by n - 1 roads, and for any two distinct cities there always exists exactly one path between them. For every person in Tree Island, it takes exactly one minute to pass by exactly one road. There is a weird New Year tradition for runnners in Tree Island, which is called \" extreme run\" . This tradition can be done as follows. A runner chooses two distinct cities a and b. For simplicity, let' s denote the shortest path from city a to city b as p1, p2, . . . , pl ( here, p1 = a and pl = b holds) . Then following happens: The runner starts at city a. The runner runs from city a to b, following the shortest path from city a to city b. When the runner arrives at city b, he turns his direction immediately ( it takes no time) , and runs towards city a, following the shortest path from city b to city a. When the runner arrives at city a, he turns his direction immediately ( it takes no time) , and runs towards city b, following the shortest path from city a to city b. Repeat step 3 and step 4 forever. In short, the course of the runner can be denoted as: Two runners JH and JY decided to run \" extremely\" in order to celebrate the New Year. JH has chosen two cities u and v, and JY has chosen two cities x and y. They decided to start running at the same moment, and run until they meet at the same city for the first time. Meeting on a road doesn' t matter for them. Before running, they want to know the amount of time they will run. It is too hard for JH and JY to calculate this, so they ask you for help.",
    "input": "The first line contains a single positive integer n ( 5 \u2264 n \u2264 2 \u00d7 105) \u2014 the number of cities in Tree Island. Next n - 1 lines describe the roads of Tree Island. The i- th line ( 1 \u2264 i \u2264 n - 1) of them contains two space- separated integers ai and bi ( 1 \u2264 ai, bi \u2264 n, ai = \u0338 bi) \u2014 the vertices connected by a single road of the tree. The next line contains an integer t ( 1 \u2264 t \u2264 2 \u00d7 105) \u2014 the number of test cases. Next t lines describes the test cases. The j- th line ( 1 \u2264 j \u2264 t) of them contains four space- separated integers uj, vj, xj, yj ( 1 \u2264 uj, vj, xj, yj \u2264 n, uj = \u0338 vj, xj = \u0338 yj) . It means that in this test case, JH has chosen two cities uj and vj, JY has chosen two cities xj and yj. JH starts running at city uj, and JY starts running at city xj.",
    "output": "For each test case, print an integer describing the amount of time they should run in minutes. If they have to run for an infinitely long time ( in other words, if they never meet at the same city) , print - 1 instead. If they meet at the beginning of their run, print 0.",
    "note": "The example looks like:",
    "topics": [
      "number theory",
      "trees"
    ],
    "id": "500G"
  },
  {
    "title": "Traffic Jams in the Land",
    "url": "https://codeforces.com/problemset/problem/498/D",
    "history": "Some country consists of ( n + 1) cities, located along a straight highway. Let' s number the cities with consecutive integers from 1 to n + 1 in the order they occur along the highway. Thus, the cities are connected by n segments of the highway, the i- th segment connects cities number i and i + 1. Every segment of the highway is associated with a positive integer ai > 1 \u2014 the period of traffic jams appearance on it. In order to get from city x to city y ( x < y) , some drivers use the following tactics. Initially the driver is in city x and the current time t equals zero. Until the driver arrives in city y, he perfors the following actions: if the current time t is a multiple of ax, then the segment of the highway number x is now having traffic problems and the driver stays in the current city for one unit of time ( formally speaking, we assign t = t + 1) ; if the current time t is not a multiple of ax, then the segment of the highway number x is now clear and that' s why the driver uses one unit of time to move to city x + 1 ( formally, we assign t = t + 1 and x = x + 1) . You are developing a new traffic control system. You want to consecutively process q queries of two types: determine the final value of time t after the ride from city x to city y ( x < y) assuming that we apply the tactics that is described above. Note that for each query t is being reset to 0. replace the period of traffic jams appearing on the segment number x by value y ( formally, assign ax = y) . Write a code that will effectively process the queries given above.",
    "input": "The first line contains a single integer n ( 1 \u2264 n \u2264 105) \u2014 the number of highway segments that connect the n + 1 cities. The second line contains n integers a1, a2, . . . , an ( 2 \u2264 ai \u2264 6) \u2014 the periods of traffic jams appearance on segments of the highway. The next line contains a single integer q ( 1 \u2264 q \u2264 105) \u2014 the number of queries to process. The next q lines contain the descriptions of the queries in the format c, x, y ( c \u2014 the query type) . If c is character ' A' , then your task is to process a query of the first type. In this case the following constraints are satisfied: 1 \u2264 x < y \u2264 n + 1. If c is character ' C' , then you need to process a query of the second type. In such case, the following constraints are satisfied: 1 \u2264 x \u2264 n, 2 \u2264 y \u2264 6.",
    "output": "For each query of the first type output a single integer \u2014 the final value of time t after driving from city x to city y. Process the queries in the order in which they are given in the input.",
    "note": "",
    "topics": [
      "data structures",
      "dp",
      "number theory"
    ],
    "id": "498D"
  },
  {
    "title": "Array and Operations",
    "url": "https://codeforces.com/problemset/problem/498/C",
    "history": "You have written on a piece of paper an array of n positive integers a[ 1] , a[ 2] , . . . , a[ n] and m good pairs of integers ( i1, j1) , ( i2, j2) , . . . , ( im, jm) . Each good pair ( ik, jk) meets the following conditions: ik + jk is an odd number and 1 \u2264 ik < jk \u2264 n. In one operation you can perform a sequence of actions: take one of the good pairs ( ik, jk) and some integer v ( v > 1) , which divides both numbers a[ ik] and a[ jk] ; divide both numbers by v, i. e. perform the assignments: and . Determine the maximum number of operations you can sequentially perform on the given array. Note that one pair may be used several times in the described operations.",
    "input": "The first line contains two space- separated integers n, m ( 2 \u2264 n \u2264 100, 1 \u2264 m \u2264 100) . The second line contains n space- separated integers a[ 1] , a[ 2] , . . . , a[ n] ( 1 \u2264 a[ i] \u2264 109) \u2014 the description of the array. The following m lines contain the description of good pairs. The k- th line contains two space- separated integers ik, jk ( 1 \u2264 ik < jk \u2264 n, ik + jk is an odd number) . It is guaranteed that all the good pairs are distinct.",
    "output": "Output the answer for the problem.",
    "note": "",
    "topics": [
      "flows",
      "graph matchings",
      "number theory"
    ],
    "id": "498C"
  },
  {
    "title": "Modular Equations",
    "url": "https://codeforces.com/problemset/problem/495/B",
    "history": "Last week, Hamed learned about a new type of equations in his math class called Modular Equations. Lets define i modulo j as the remainder of division of i by j and denote it by . A Modular Equation, as Hamed' s teacher described, is an equation of the form in which a and b are two non- negative integers and x is a variable. We call a positive integer x for which a solution of our equation. Hamed didn' t pay much attention to the class since he was watching a movie. He only managed to understand the definitions of these equations. Now he wants to write his math exercises but since he has no idea how to do that, he asked you for help. He has told you all he knows about Modular Equations and asked you to write a program which given two numbers a and b determines how many answers the Modular Equation has.",
    "input": "In the only line of the input two space- separated integers a and b ( 0 \u2264 a, b \u2264 109) are given.",
    "output": "If there is an infinite number of answers to our equation, print \" infinity\" ( without the quotes) . Otherwise print the number of solutions of the Modular Equation .",
    "note": "In the first sample the answers of the Modular Equation are 8 and 16 since",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "495B"
  },
  {
    "title": "Chocolate",
    "url": "https://codeforces.com/problemset/problem/490/D",
    "history": "Polycarpus likes giving presents to Paraskevi. He has bought two chocolate bars, each of them has the shape of a segmented rectangle. The first bar is a1 \u00d7 b1 segments large and the second one is a2 \u00d7 b2 segments large. Polycarpus wants to give Paraskevi one of the bars at the lunch break and eat the other one himself. Besides, he wants to show that Polycarpus' s mind and Paraskevi' s beauty are equally matched, so the two bars must have the same number of squares. To make the bars have the same number of squares, Polycarpus eats a little piece of chocolate each minute. Each minute he does the following: he either breaks one bar exactly in half ( vertically or horizontally) and eats exactly a half of the bar, or he chips of exactly one third of a bar ( vertically or horizontally) and eats exactly a third of the bar. In the first case he is left with a half, of the bar and in the second case he is left with two thirds of the bar. Both variants aren' t always possible, and sometimes Polycarpus cannot chip off a half nor a third. For example, if the bar is 16 \u00d7 23, then Polycarpus can chip off a half, but not a third. If the bar is 20 \u00d7 18, then Polycarpus can chip off both a half and a third. If the bar is 5 \u00d7 7, then Polycarpus cannot chip off a half nor a third. What is the minimum number of minutes Polycarpus needs to make two bars consist of the same number of squares? Find not only the required minimum number of minutes, but also the possible sizes of the bars after the process.",
    "input": "The first line of the input contains integers a1, b1 ( 1 \u2264 a1, b1 \u2264 109) \u2014 the initial sizes of the first chocolate bar. The second line of the input contains integers a2, b2 ( 1 \u2264 a2, b2 \u2264 109) \u2014 the initial sizes of the second bar. You can use the data of type int64 ( in Pascal) , long long ( in \u0421+ + ) , long ( in Java) to process large integers ( exceeding 231 - 1) .",
    "output": "In the first line print m \u2014 the sought minimum number of minutes. In the second and third line print the possible sizes of the bars after they are leveled in m minutes. Print the sizes using the format identical to the input format. Print the sizes ( the numbers in the printed pairs) in any order. The second line must correspond to the first bar and the third line must correspond to the second bar. If there are multiple solutions, print any of them. If there is no solution, print a single line with integer - 1.",
    "note": "",
    "topics": [
      "brute force",
      "dfs and similar",
      "math",
      "meet-in-the-middle",
      "number theory"
    ],
    "id": "490D"
  },
  {
    "title": "Hacking Cypher",
    "url": "https://codeforces.com/problemset/problem/490/C",
    "history": "Polycarpus participates in a competition for hacking into a new secure messenger. He' s almost won. Having carefully studied the interaction protocol, Polycarpus came to the conclusion that the secret key can be obtained if he properly cuts the public key of the application into two parts. The public key is a long integer which may consist of even a million digits! Polycarpus needs to find such a way to cut the public key into two nonempty parts, that the first ( left) part is divisible by a as a separate number, and the second ( right) part is divisible by b as a separate number. Both parts should be positive integers that have no leading zeros. Polycarpus knows values a and b. Help Polycarpus and find any suitable method to cut the public key.",
    "input": "The first line of the input contains the public key of the messenger \u2014 an integer without leading zeroes, its length is in range from 1 to 106 digits. The second line contains a pair of space- separated positive integers a, b ( 1 \u2264 a, b \u2264 108) .",
    "output": "In the first line print \" YES\" ( without the quotes) , if the method satisfying conditions above exists. In this case, next print two lines \u2014 the left and right parts after the cut. These two parts, being concatenated, must be exactly identical to the public key. The left part must be divisible by a, and the right part must be divisible by b. The two parts must be positive integers having no leading zeros. If there are several answers, print any of them. If there is no answer, print in a single line \" NO\" ( without the quotes) .",
    "note": "",
    "topics": [
      "brute force",
      "math",
      "number theory",
      "strings"
    ],
    "id": "490C"
  },
  {
    "title": "Prefix Product Sequence",
    "url": "https://codeforces.com/problemset/problem/487/C",
    "history": "Consider a sequence [ a1, a2, . . . , an] . Define its prefix product sequence . Now given n, find a permutation of [ 1, 2, . . . , n] , such that its prefix product sequence is a permutation of [ 0, 1, . . . , n - 1] .",
    "input": "The only input line contains an integer n ( 1 \u2264 n \u2264 105) .",
    "output": "In the first output line, print \" YES\" if such sequence exists, or print \" NO\" if no such sequence exists. If any solution exists, you should output n more lines. i- th line contains only an integer ai. The elements of the sequence should be different positive integers no larger than n. If there are multiple solutions, you are allowed to print any of them.",
    "note": "For the second sample, there are no valid sequences.",
    "topics": [
      "constructive algorithms",
      "math",
      "number theory"
    ],
    "id": "487C"
  },
  {
    "title": "Counterexample ",
    "url": "https://codeforces.com/problemset/problem/483/A",
    "history": "Your friend has recently learned about coprime numbers. A pair of numbers a, b is called coprime if the maximum number that divides both a and b is equal to one. Your friend often comes up with different statements. He has recently supposed that if the pair ( a, b) is coprime and the pair ( b, c) is coprime, then the pair ( a, c) is coprime. You want to find a counterexample for your friend' s statement. Therefore, your task is to find three distinct numbers ( a, b, c) , for which the statement is false, and the numbers meet the condition l \u2264 a < b < c \u2264 r. More specifically, you need to find three numbers ( a, b, c) , such that l \u2264 a < b < c \u2264 r, pairs ( a, b) and ( b, c) are coprime, and pair ( a, c) is not coprime.",
    "input": "The single line contains two positive space- separated integers l, r ( 1 \u2264 l \u2264 r \u2264 1018; r - l \u2264 50) .",
    "output": "Print three positive space- separated integers a, b, c \u2014 three distinct numbers ( a, b, c) that form the counterexample. If there are several solutions, you are allowed to print any of them. The numbers must be printed in ascending order. If the counterexample does not exist, print the single number - 1.",
    "note": "In the first sample pair ( 2, 4) is not coprime and pairs ( 2, 3) and ( 3, 4) are. In the second sample you cannot form a group of three distinct integers, so the answer is - 1. In the third sample it is easy to see that numbers 900000000000000009 and 900000000000000021 are divisible by three.",
    "topics": [
      "brute force",
      "implementation",
      "math",
      "number theory"
    ],
    "id": "483A"
  },
  {
    "title": "Ant colony",
    "url": "https://codeforces.com/problemset/problem/474/F",
    "history": "Mole is hungry again. He found one ant colony, consisting of n ants, ordered in a row. Each ant i ( 1 \u2264 i \u2264 n) has a strength si. In order to make his dinner more interesting, Mole organizes a version of \u00abHunger Games\u00bb for the ants. He chooses two numbers l and r ( 1 \u2264 l \u2264 r \u2264 n) and each pair of ants with indices between l and r ( inclusively) will fight. When two ants i and j fight, ant i gets one battle point only if si divides sj ( also, ant j gets one battle point only if sj divides si) . After all fights have been finished, Mole makes the ranking. An ant i, with vi battle points obtained, is going to be freed only if vi = r - l, or in other words only if it took a point in every fight it participated. After that, Mole eats the rest of the ants. Note that there can be many ants freed or even none. In order to choose the best sequence, Mole gives you t segments [ li, ri] and asks for each of them how many ants is he going to eat if those ants fight.",
    "input": "The first line contains one integer n ( 1 \u2264 n \u2264 105) , the size of the ant colony. The second line contains n integers s1, s2, . . . , sn ( 1 \u2264 si \u2264 109) , the strengths of the ants. The third line contains one integer t ( 1 \u2264 t \u2264 105) , the number of test cases. Each of the next t lines contains two integers li and ri ( 1 \u2264 li \u2264 ri \u2264 n) , describing one query.",
    "output": "Print to the standard output t lines. The i- th line contains number of ants that Mole eats from the segment [ li, ri] .",
    "note": "In the first test battle points for each ant are v = [ 4, 0, 2, 0, 2] , so ant number 1 is freed. Mole eats the ants 2, 3, 4, 5. In the second test case battle points are v = [ 0, 2, 0, 2] , so no ant is freed and all of them are eaten by Mole. In the third test case battle points are v = [ 2, 0, 2] , so ants number 3 and 5 are freed. Mole eats only the ant 4. In the fourth test case battle points are v = [ 0, 1] , so ant number 5 is freed. Mole eats the ant 4.",
    "topics": [
      "data structures",
      "math",
      "number theory"
    ],
    "id": "474F"
  },
  {
    "title": "Design Tutorial: Learn from Math",
    "url": "https://codeforces.com/problemset/problem/472/A",
    "history": "One way to create a task is to learn from math. You can generate some random math statement or modify some theorems to get something new and build a new task from that. For example, there is a statement called the \" Goldbach' s conjecture\" . It says: \" each even number no less than four can be expressed as the sum of two primes\" . Let' s modify it. How about a statement like that: \" each integer no less than 12 can be expressed as the sum of two composite numbers. \" Not like the Goldbach' s conjecture, I can prove this theorem. You are given an integer n no less than 12, express it as a sum of two composite numbers.",
    "input": "The only line contains an integer n ( 12 \u2264 n \u2264 106) .",
    "output": "Output two composite integers x and y ( 1 < x, y < n) such that x + y = n. If there are multiple solutions, you can output any of them.",
    "note": "In the first example, 12 = 4 + 8 and both 4, 8 are composite numbers. You can output \" 6 6\" or \" 8 4\" as well. In the second example, 15 = 6 + 9. Note that you can' t output \" 1 14\" because 1 is not a composite number.",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "472A"
  },
  {
    "title": "Caisa and Tree",
    "url": "https://codeforces.com/problemset/problem/463/E",
    "history": "Caisa is now at home and his son has a simple task for him. Given a rooted tree with n vertices, numbered from 1 to n ( vertex 1 is the root) . Each vertex of the tree has a value. You should answer q queries. Each query is one of the following: Format of the query is \" 1 v\" . Let' s write out the sequence of vertices along the path from the root to vertex v: u1, u2, . . . , uk ( u1 = 1; uk = v) . You need to output such a vertex ui that gcd( value of ui, value of v) > 1 and i < k. If there are several possible vertices ui pick the one with maximum value of i. If there is no such vertex output - 1. Format of the query is \" 2 v w\" . You must change the value of vertex v to w. You are given all the queries, help Caisa to solve the problem.",
    "input": "The first line contains two space- separated integers n, q ( 1 \u2264 n, q \u2264 105) . The second line contains n integers a1, a2, . . . , an ( 1 \u2264 ai \u2264 2\u00b7106) , where ai represent the value of node i. Each of the next n - 1 lines contains two integers xi and yi ( 1 \u2264 xi, yi \u2264 n; xi = \u0338 yi) , denoting the edge of the tree between vertices xi and yi. Each of the next q lines contains a query in the format that is given above. For each query the following inequalities hold: 1 \u2264 v \u2264 n and 1 \u2264 w \u2264 2\u00b7106. Note that: there are no more than 50 queries that changes the value of a vertex.",
    "output": "For each query of the first type output the result of the query.",
    "note": "gcd( x, y) is greatest common divisor of two integers x and y.",
    "topics": [
      "brute force",
      "dfs and similar",
      "math",
      "number theory",
      "trees"
    ],
    "id": "463E"
  },
  {
    "title": "Little Dima and Equation",
    "url": "https://codeforces.com/problemset/problem/460/B",
    "history": "Little Dima misbehaved during a math lesson a lot and the nasty teacher Mr. Pickles gave him the following problem as a punishment. Find all integer solutions x ( 0 < x < 109) of the equation: x = b\u00b7s( x) a + c, where a, b, c are some predetermined constant values and function s( x) determines the sum of all digits in the decimal representation of number x. The teacher gives this problem to Dima for each lesson. He changes only the parameters of the equation: a, b, c. Dima got sick of getting bad marks and he asks you to help him solve this challenging problem.",
    "input": "The first line contains three space- separated integers: a, b, c ( 1 \u2264 a \u2264 5; 1 \u2264 b \u2264 10000; - 10000 \u2264 c \u2264 10000) .",
    "output": "Print integer n \u2014 the number of the solutions that you' ve found. Next print n integers in the increasing order \u2014 the solutions of the given equation. Print only integer solutions that are larger than zero and strictly less than 109.",
    "note": "",
    "topics": [
      "brute force",
      "implementation",
      "math",
      "number theory"
    ],
    "id": "460B"
  },
  {
    "title": "Fedya and Maths",
    "url": "https://codeforces.com/problemset/problem/456/B",
    "history": "Fedya studies in a gymnasium. Fedya' s maths hometask is to calculate the following expression: ( 1n + 2n + 3n + 4n) mod 5for given value of n. Fedya managed to complete the task. Can you? Note that given number n can be extremely large ( e. g. it can exceed any integer type of your programming language) .",
    "input": "The single line contains a single integer n ( 0 \u2264 n \u2264 10105) . The number doesn' t contain any leading zeroes.",
    "output": "Print the value of the expression without leading zeros.",
    "note": "Operation x mod y means taking remainder after division x by y. Note to the first sample:",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "456B"
  },
  {
    "title": "Devu and Flowers",
    "url": "https://codeforces.com/problemset/problem/451/E",
    "history": "Devu wants to decorate his garden with flowers. He has purchased n boxes, where the i- th box contains fi flowers. All flowers in a single box are of the same color ( hence they are indistinguishable) . Also, no two boxes have flowers of the same color. Now Devu wants to select exactly s flowers from the boxes to decorate his garden. Devu would like to know, in how many different ways can he select the flowers from each box? Since this number may be very large, he asks you to find the number modulo ( 109 + 7) . Devu considers two ways different if there is at least one box from which different number of flowers are selected in these two ways.",
    "input": "The first line of input contains two space- separated integers n and s ( 1 \u2264 n \u2264 20, 0 \u2264 s \u2264 1014) . The second line contains n space- separated integers f1, f2, . . . fn ( 0 \u2264 fi \u2264 1012) .",
    "output": "Output a single integer \u2014 the number of ways in which Devu can select the flowers modulo ( 109 + 7) .",
    "note": "Sample 1. There are two ways of selecting 3 flowers: 1, 2 and 0, 3. Sample 2. There is only one way of selecting 4 flowers: 2, 2. Sample 3. There are three ways of selecting 5 flowers: 1, 2, 2, 0, 3, 2, and 1, 3, 1.",
    "topics": [
      "bitmasks",
      "combinatorics",
      "number theory"
    ],
    "id": "451E"
  },
  {
    "title": "Jzzhu and Squares",
    "url": "https://codeforces.com/problemset/problem/449/E",
    "history": "Jzzhu has two integers, n and m. He calls an integer point ( x, y) of a plane special if 0 \u2264 x \u2264 n and 0 \u2264 y \u2264 m. Jzzhu defines a unit square as a square with corners at points ( x, y) , ( x + 1, y) , ( x + 1, y + 1) , ( x, y + 1) , where x and y are some integers. Let' s look at all the squares ( their sides not necessarily parallel to the coordinate axes) with corners at the special points. For each such square Jzzhu paints a dot in every unit square that is fully inside it. After that some unit squares can contain several dots. Now Jzzhu wonders, how many dots he has painted on the plane. Find this number modulo 1000000007 ( 109 + 7) .",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 105) \u2014 the number of tests. Each of the next t lines contains the description of the test: two integers n and m ( 1 \u2264 n, m \u2264 106) \u2014 the value of variables for the current test.",
    "output": "For each test output the total number of dots modulo 1000000007 ( 109 + 7) .",
    "note": "",
    "topics": [
      "dp",
      "math",
      "number theory"
    ],
    "id": "449E"
  },
  {
    "title": "Jzzhu and Apples",
    "url": "https://codeforces.com/problemset/problem/449/C",
    "history": "Jzzhu has picked n apples from his big apple tree. All the apples are numbered from 1 to n. Now he wants to sell them to an apple store. Jzzhu will pack his apples into groups and then sell them. Each group must contain two apples, and the greatest common divisor of numbers of the apples in each group must be greater than 1. Of course, each apple can be part of at most one group. Jzzhu wonders how to get the maximum possible number of groups. Can you help him?",
    "input": "A single integer n ( 1 \u2264 n \u2264 105) , the number of the apples.",
    "output": "The first line must contain a single integer m, representing the maximum number of groups he can get. Each of the next m lines must contain two integers \u2014 the numbers of apples in the current group. If there are several optimal answers you can print any of them.",
    "note": "",
    "topics": [
      "constructive algorithms",
      "number theory"
    ],
    "id": "449C"
  },
  {
    "title": "Divisors",
    "url": "https://codeforces.com/problemset/problem/448/E",
    "history": "Bizon the Champion isn' t just friendly, he also is a rigorous coder. Let' s define function f( a) , where a is a sequence of integers. Function f( a) returns the following sequence: first all divisors of a1 go in the increasing order, then all divisors of a2 go in the increasing order, and so on till the last element of sequence a. For example, f( [ 2, 9, 1] ) = [ 1, 2, 1, 3, 9, 1] . Let' s determine the sequence Xi, for integer i ( i \u2265 0) : X0 = [ X] ( [ X] is a sequence consisting of a single number X) , Xi = f( Xi - 1) ( i > 0) . For example, at X = 6 we get X0 = [ 6] , X1 = [ 1, 2, 3, 6] , X2 = [ 1, 1, 2, 1, 3, 1, 2, 3, 6] . Given the numbers X and k, find the sequence Xk. As the answer can be rather large, find only the first 105 elements of this sequence.",
    "input": "A single line contains two space- separated integers \u2014 X ( 1 \u2264 X \u2264 1012) and k ( 0 \u2264 k \u2264 1018) .",
    "output": "Print the elements of the sequence Xk in a single line, separated by a space. If the number of elements exceeds 105, then print only the first 105 elements.",
    "note": "",
    "topics": [
      "brute force",
      "dfs and similar",
      "implementation",
      "number theory"
    ],
    "id": "448E"
  },
  {
    "title": "DZY Loves Fibonacci Numbers",
    "url": "https://codeforces.com/problemset/problem/446/C",
    "history": "In mathematical terms, the sequence Fn of Fibonacci numbers is defined by the recurrence relation F1 = 1; F2 = 1; Fn = Fn - 1 + Fn - 2 ( n > 2) . DZY loves Fibonacci numbers very much. Today DZY gives you an array consisting of n integers: a1, a2, . . . , an. Moreover, there are m queries, each query has one of the two types: Format of the query \" 1 l r\" . In reply to the query, you need to add Fi - l + 1 to each element ai, where l \u2264 i \u2264 r. Format of the query \" 2 l r\" . In reply to the query you should output the value of modulo 1000000009 ( 109 + 9) . Help DZY reply to all the queries.",
    "input": "The first line of the input contains two integers n and m ( 1 \u2264 n, m \u2264 300000) . The second line contains n integers a1, a2, . . . , an ( 1 \u2264 ai \u2264 109) \u2014 initial array a. Then, m lines follow. A single line describes a single query in the format given in the statement. It is guaranteed that for each query inequality 1 \u2264 l \u2264 r \u2264 n holds.",
    "output": "For each query of the second type, print the value of the sum on a single line.",
    "note": "After the first query, a = [ 2, 3, 5, 7] . For the second query, sum = 2 + 3 + 5 + 7 = 17. After the third query, a = [ 2, 4, 6, 9] . For the fourth query, sum = 2 + 4 + 6 = 12.",
    "topics": [
      "data structures",
      "math",
      "number theory"
    ],
    "id": "446C"
  },
  {
    "title": "Devu and Partitioning of the Array",
    "url": "https://codeforces.com/problemset/problem/439/C",
    "history": "Devu being a small kid, likes to play a lot, but he only likes to play with arrays. While playing he came up with an interesting question which he could not solve, can you please solve it for him? Given an array consisting of distinct integers. Is it possible to partition the whole array into k disjoint non- empty parts such that p of the parts have even sum ( each of them must have even sum) and remaining k - p have odd sum? ( note that parts need not to be continuous) . If it is possible to partition the array, also give any possible way of valid partitioning.",
    "input": "The first line will contain three space separated integers n, k, p ( 1 \u2264 k \u2264 n \u2264 105; 0 \u2264 p \u2264 k) . The next line will contain n space- separated distinct integers representing the content of array a: a1, a2, . . . , an ( 1 \u2264 ai \u2264 109) .",
    "output": "In the first line print \" YES\" ( without the quotes) if it is possible to partition the array in the required way. Otherwise print \" NO\" ( without the quotes) . If the required partition exists, print k lines after the first line. The ith of them should contain the content of the ith part. Print the content of the part in the line in the following way: firstly print the number of elements of the part, then print all the elements of the part in arbitrary order. There must be exactly p parts with even sum, each of the remaining k - p parts must have odd sum. As there can be multiple partitions, you are allowed to print any valid partition.",
    "note": "",
    "topics": [
      "brute force",
      "constructive algorithms",
      "implementation",
      "number theory"
    ],
    "id": "439C"
  },
  {
    "title": "The Child and Binary Tree",
    "url": "https://codeforces.com/problemset/problem/438/E",
    "history": "Our child likes computer science very much, especially he likes binary trees. Consider the sequence of n distinct positive integers: c1, c2, . . . , cn. The child calls a vertex- weighted rooted binary tree good if and only if for every vertex v, the weight of v is in the set c1, c2, . . . , cn. Also our child thinks that the weight of a vertex- weighted tree is the sum of all vertices' weights. Given an integer m, can you for all s ( 1 \u2264 s \u2264 m) calculate the number of good vertex- weighted rooted binary trees with weight s? Please, check the samples for better understanding what trees are considered different. We only want to know the answer modulo 998244353 ( 7 \u00d7 17 \u00d7 223 + 1, a prime number) .",
    "input": "The first line contains two integers n, m ( 1 \u2264 n \u2264 105; 1 \u2264 m \u2264 105) . The second line contains n space- separated pairwise distinct integers c1, c2, . . . , cn. ( 1 \u2264 ci \u2264 105) .",
    "output": "Print m lines, each line containing a single integer. The i- th line must contain the number of good vertex- weighted rooted binary trees whose weight exactly equal to i. Print the answers modulo 998244353 ( 7 \u00d7 17 \u00d7 223 + 1, a prime number) .",
    "note": "In the first example, there are 9 good vertex- weighted rooted binary trees whose weight exactly equal to 3:",
    "topics": [
      "combinatorics",
      "divide and conquer",
      "fft",
      "number theory"
    ],
    "id": "438E"
  },
  {
    "title": "Mashmokh and ACM",
    "url": "https://codeforces.com/problemset/problem/414/B",
    "history": "Mashmokh' s boss, Bimokh, didn' t like Mashmokh. So he fired him. Mashmokh decided to go to university and participate in ACM instead of finding a new job. He wants to become a member of Bamokh' s team. In order to join he was given some programming tasks and one week to solve them. Mashmokh is not a very experienced programmer. Actually he is not a programmer at all. So he wasn' t able to solve them. That' s why he asked you to help him with these tasks. One of these tasks is the following. A sequence of l integers b1, b2, . . . , bl ( 1 \u2264 b1 \u2264 b2 \u2264 . . . \u2264 bl \u2264 n) is called good if each number divides ( without a remainder) by the next number in the sequence. More formally for all i ( 1 \u2264 i \u2264 l - 1) . Given n and k find the number of good sequences of length k. As the answer can be rather large print it modulo 1000000007 ( 109 + 7) .",
    "input": "The first line of input contains two space- separated integers n, k ( 1 \u2264 n, k \u2264 2000) .",
    "output": "Output a single integer \u2014 the number of good sequences of length k modulo 1000000007 ( 109 + 7) .",
    "note": "In the first sample the good sequences are: [ 1, 1] , [ 2, 2] , [ 3, 3] , [ 1, 2] , [ 1, 3] .",
    "topics": [
      "combinatorics",
      "dp",
      "number theory"
    ],
    "id": "414B"
  },
  {
    "title": "Mashmokh and Numbers",
    "url": "https://codeforces.com/problemset/problem/414/A",
    "history": "It' s holiday. Mashmokh and his boss, Bimokh, are playing a game invented by Mashmokh. In this game Mashmokh writes sequence of n distinct integers on the board. Then Bimokh makes several ( possibly zero) moves. On the first move he removes the first and the second integer from from the board, on the second move he removes the first and the second integer of the remaining sequence from the board, and so on. Bimokh stops when the board contains less than two numbers. When Bimokh removes numbers x and y from the board, he gets gcd( x, y) points. At the beginning of the game Bimokh has zero points. Mashmokh wants to win in the game. For this reason he wants his boss to get exactly k points in total. But the guy doesn' t know how choose the initial sequence in the right way. Please, help him. Find n distinct integers a1, a2, . . . , an such that his boss will score exactly k points. Also Mashmokh can' t memorize too huge numbers. Therefore each of these integers must be at most 109.",
    "input": "The first line of input contains two space- separated integers n, k ( 1 \u2264 n \u2264 105; 0 \u2264 k \u2264 108) .",
    "output": "If such sequence doesn' t exist output - 1 otherwise output n distinct space- separated integers a1, a2, . . . , an ( 1 \u2264 ai \u2264 109) .",
    "note": "gcd( x, y) is greatest common divisor of x and y.",
    "topics": [
      "constructive algorithms",
      "number theory"
    ],
    "id": "414A"
  },
  {
    "title": "Upgrading Array",
    "url": "https://codeforces.com/problemset/problem/402/D",
    "history": "You have an array of positive integers a[ 1] , a[ 2] , . . . , a[ n] and a set of bad prime numbers b1, b2, . . . , bm. The prime numbers that do not occur in the set b are considered good. The beauty of array a is the sum , where function f( s) is determined as follows: f( 1) = 0; Let' s assume that p is the minimum prime divisor of s. If p is a good prime, then , otherwise . You are allowed to perform an arbitrary ( probably zero) number of operations to improve array a. The operation of improvement is the following sequence of actions: Choose some number r ( 1 \u2264 r \u2264 n) and calculate the value g = GCD( a[ 1] , a[ 2] , . . . , a[ r] ) . Apply the assignments: , , . . . , . What is the maximum beauty of the array you can get?",
    "input": "The first line contains two integers n and m ( 1 \u2264 n, m \u2264 5000) showing how many numbers are in the array and how many bad prime numbers there are. The second line contains n space- separated integers a[ 1] , a[ 2] , . . . , a[ n] ( 1 \u2264 a[ i] \u2264 109) \u2014 array a. The third line contains m space- separated integers b1, b2, . . . , bm ( 2 \u2264 b1 < b2 < . . . < bm \u2264 109) \u2014 the set of bad prime numbers.",
    "output": "Print a single integer \u2014 the answer to the problem.",
    "note": "Note that the answer to the problem can be negative. The GCD( x1, x2, . . . , xk) is the maximum positive integer that divides each xi.",
    "topics": [
      "dp",
      "greedy",
      "math",
      "number theory"
    ],
    "id": "402D"
  },
  {
    "title": "Roman and Numbers",
    "url": "https://codeforces.com/problemset/problem/401/D",
    "history": "Roman is a young mathematician, very famous in Uzhland. Unfortunately, Sereja doesn' t think so. To make Sereja change his mind, Roman is ready to solve any mathematical problem. After some thought, Sereja asked Roma to find, how many numbers are close to number n, modulo m. Number x is considered close to number n modulo m, if: it can be obtained by rearranging the digits of number n, it doesn' t have any leading zeroes, the remainder after dividing number x by m equals 0. Roman is a good mathematician, but the number of such numbers is too huge for him. So he asks you to help him.",
    "input": "The first line contains two integers: n ( 1 \u2264 n < 1018) and m ( 1 \u2264 m \u2264 100) .",
    "output": "In a single line print a single integer \u2014 the number of numbers close to number n modulo m.",
    "note": "In the first sample the required numbers are: 104, 140, 410. In the second sample the required number is 232.",
    "topics": [
      "bitmasks",
      "brute force",
      "combinatorics",
      "dp",
      "number theory"
    ],
    "id": "401D"
  },
  {
    "title": "On Sum of Fractions",
    "url": "https://codeforces.com/problemset/problem/396/B",
    "history": "Let' s assume that v( n) is the largest prime number, that does not exceed n; u( n) is the smallest prime number strictly greater than n. Find .",
    "input": "The first line contains integer t ( 1 \u2264 t \u2264 500) \u2014 the number of testscases. Each of the following t lines of the input contains integer n ( 2 \u2264 n \u2264 109) .",
    "output": "Print t lines: the i- th of them must contain the answer to the i- th test as an irreducible fraction \" p/ q\" , where p, q are integers, q > 0.",
    "note": "",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "396B"
  },
  {
    "title": "On Number of Decompositions into Multipliers",
    "url": "https://codeforces.com/problemset/problem/396/A",
    "history": "You are given an integer m as a product of integers a1, a2, . . . an . Your task is to find the number of distinct decompositions of number m into the product of n ordered positive integers. Decomposition into n products, given in the input, must also be considered in the answer. As the answer can be very large, print it modulo 1000000007 ( 109 + 7) .",
    "input": "The first line contains positive integer n ( 1 \u2264 n \u2264 500) . The second line contains space- separated integers a1, a2, . . . , an ( 1 \u2264 ai \u2264 109) .",
    "output": "In a single line print a single number k \u2014 the number of distinct decompositions of number m into n ordered multipliers modulo 1000000007 ( 109 + 7) .",
    "note": "In the second sample, the get a decomposition of number 2, you need any one number out of three to equal 2, and the rest to equal 1. In the third sample, the possible ways of decomposing into ordered multipliers are [ 7, 5] , [ 5, 7] , [ 1, 35] , [ 35, 1] . A decomposition of positive integer m into n ordered multipliers is a cortege of positive integers b = b1, b2, . . . bn such that . Two decompositions b and c are considered different, if there exists index i such that bi = \u0338 ci.",
    "topics": [
      "combinatorics",
      "math",
      "number theory"
    ],
    "id": "396A"
  },
  {
    "title": "Bear and Prime Numbers",
    "url": "https://codeforces.com/problemset/problem/385/C",
    "history": "Recently, the bear started studying data structures and faced the following problem. You are given a sequence of integers x1, x2, . . . , xn of length n and m queries, each of them is characterized by two integers li, ri. Let' s introduce f( p) to represent the number of such indexes k, that xk is divisible by p. The answer to the query li, ri is the sum: , where S( li, ri) is a set of prime numbers from segment [ li, ri] ( both borders are included in the segment) . Help the bear cope with the problem.",
    "input": "The first line contains integer n ( 1 \u2264 n \u2264 106) . The second line contains n integers x1, x2, . . . , xn ( 2 \u2264 xi \u2264 107) . The numbers are not necessarily distinct. The third line contains integer m ( 1 \u2264 m \u2264 50000) . Each of the following m lines contains a pair of space- separated integers, li and ri ( 2 \u2264 li \u2264 ri \u2264 2\u00b7109) \u2014 the numbers that characterize the current query.",
    "output": "Print m integers \u2014 the answers to the queries on the order the queries appear in the input.",
    "note": "Consider the first sample. Overall, the first sample has 3 queries. The first query l = 2, r = 11 comes. You need to count f( 2) + f( 3) + f( 5) + f( 7) + f( 11) = 2 + 1 + 4 + 2 + 0 = 9. The second query comes l = 3, r = 12. You need to count f( 3) + f( 5) + f( 7) + f( 11) = 1 + 4 + 2 + 0 = 7. The third query comes l = 4, r = 4. As this interval has no prime numbers, then the sum equals 0.",
    "topics": [
      "binary search",
      "brute force",
      "data structures",
      "dp",
      "implementation",
      "math",
      "number theory"
    ],
    "id": "385C"
  },
  {
    "title": "Divisible by Seven",
    "url": "https://codeforces.com/problemset/problem/375/A",
    "history": "You have number a, whose decimal representation quite luckily contains digits 1, 6, 8, 9. Rearrange the digits in its decimal representation so that the resulting number will be divisible by 7. Number a doesn' t contain any leading zeroes and contains digits 1, 6, 8, 9 ( it also can contain another digits) . The resulting number also mustn' t contain any leading zeroes.",
    "input": "The first line contains positive integer a in the decimal record. It is guaranteed that the record of number a contains digits: 1, 6, 8, 9. Number a doesn' t contain any leading zeroes. The decimal representation of number a contains at least 4 and at most 106 characters.",
    "output": "Print a number in the decimal notation without leading zeroes \u2014 the result of the permutation. If it is impossible to rearrange the digits of the number a in the required manner, print 0.",
    "note": "",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "375A"
  },
  {
    "title": "Fox Dividing Cheese",
    "url": "https://codeforces.com/problemset/problem/371/B",
    "history": "Two little greedy bears have found two pieces of cheese in the forest of weight a and b grams, correspondingly. The bears are so greedy that they are ready to fight for the larger piece. That' s where the fox comes in and starts the dialog: \" Little bears, wait a little, I want to make your pieces equal\" \" Come off it fox, how are you going to do that? \" , the curious bears asked. \" It' s easy\" , said the fox. \" If the mass of a certain piece is divisible by two, then I can eat exactly a half of the piece. If the mass of a certain piece is divisible by three, then I can eat exactly two- thirds, and if the mass is divisible by five, then I can eat four- fifths. I' ll eat a little here and there and make the pieces equal\" . The little bears realize that the fox' s proposal contains a catch. But at the same time they realize that they can not make the two pieces equal themselves. So they agreed to her proposal, but on one condition: the fox should make the pieces equal as quickly as possible. Find the minimum number of operations the fox needs to make pieces equal.",
    "input": "The first line contains two space- separated integers a and b ( 1 \u2264 a, b \u2264 109) .",
    "output": "If the fox is lying to the little bears and it is impossible to make the pieces equal, print - 1. Otherwise, print the required minimum number of operations. If the pieces of the cheese are initially equal, the required number is 0.",
    "note": "",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "371B"
  },
  {
    "title": "Beautiful Set",
    "url": "https://codeforces.com/problemset/problem/364/C",
    "history": "We' ll call a set of positive integers a beautiful if the following condition fulfills: for any prime p, if , then . In other words, if one number from the set is divisible by prime p, then at least half of numbers from the set is divisible by p. Your task is to find any beautiful set, where the number of elements is equal to k and each element doesn' t exceed 2k2.",
    "input": "The first line contains integer k ( 10 \u2264 k \u2264 5000) that shows how many numbers the required beautiful set should have.",
    "output": "In the first line print k space- separated integers that are a beautiful set. If there are multiple such sets, you are allowed to print any of them.",
    "note": "",
    "topics": [
      "brute force",
      "number theory"
    ],
    "id": "364C"
  },
  {
    "title": "Levko and Permutation",
    "url": "https://codeforces.com/problemset/problem/361/B",
    "history": "Levko loves permutations very much. A permutation of length n is a sequence of distinct positive integers, each is at most n. Let\u2019s assume that value gcd( a, b) shows the greatest common divisor of numbers a and b. Levko assumes that element pi of permutation p1, p2, . . . , pn is good if gcd( i, pi) > 1. Levko considers a permutation beautiful, if it has exactly k good elements. Unfortunately, he doesn\u2019t know any beautiful permutation. Your task is to help him to find at least one of them.",
    "input": "The single line contains two integers n and k ( 1 \u2264 n \u2264 105, 0 \u2264 k \u2264 n) .",
    "output": "In a single line print either any beautiful permutation or - 1, if such permutation doesn\u2019t exist. If there are multiple suitable permutations, you are allowed to print any of them.",
    "note": "In the first sample elements 4 and 3 are good because gcd( 2, 4) = 2 > 1 and gcd( 3, 3) = 3 > 1. Elements 2 and 1 are not good because gcd( 1, 2) = 1 and gcd( 4, 1) = 1. As there are exactly 2 good elements, the permutation is beautiful. The second sample has no beautiful permutations.",
    "topics": [
      "constructive algorithms",
      "math",
      "number theory"
    ],
    "id": "361B"
  },
  {
    "title": "Levko and Sets",
    "url": "https://codeforces.com/problemset/problem/360/D",
    "history": "Levko loves all sorts of sets very much. Levko has two arrays of integers a1, a2, . . . , an and b1, b2, . . . , bm and a prime number p. Today he generates n sets. Let' s describe the generation process for the i- th set: First it has a single number 1. Let' s take any element c from this set. For all j ( 1 \u2264 j \u2264 m) if number ( c\u00b7aibj) mod p doesn' t occur in the set, then add it to the set. Repeat step 2 as long as we can add at least one element to our set. Levko wonders, how many numbers belong to at least one set. That is, he wants to know what size is the union of n generated sets.",
    "input": "The first line contains three integers n, m and p ( 1 \u2264 n \u2264 104, 1 \u2264 m \u2264 105, 2 \u2264 p \u2264 109) , p is prime. The second line contains space- separated integers a1, a2, . . . , an ( 1 \u2264 ai < p) . The third line contains space- separated integers b1, b2, . . . , bm ( 1 \u2264 bi \u2264 109) .",
    "output": "The single number \u2014 the size of the union of the sets.",
    "note": "",
    "topics": [
      "number theory"
    ],
    "id": "360D"
  },
  {
    "title": "Prime Number",
    "url": "https://codeforces.com/problemset/problem/359/C",
    "history": "Simon has a prime number x and an array of non- negative integers a1, a2, . . . , an. Simon loves fractions very much. Today he wrote out number on a piece of paper. After Simon led all fractions to a common denominator and summed them up, he got a fraction: , where number t equals xa1 + a2 + . . . + an. Now Simon wants to reduce the resulting fraction. Help him, find the greatest common divisor of numbers s and t. As GCD can be rather large, print it as a remainder after dividing it by number 1000000007 ( 109 + 7) .",
    "input": "The first line contains two positive integers n and x ( 1 \u2264 n \u2264 105, 2 \u2264 x \u2264 109) \u2014 the size of the array and the prime number. The second line contains n space- separated integers a1, a2, . . . , an ( 0 \u2264 a1 \u2264 a2 \u2264 . . . \u2264 an \u2264 109) .",
    "output": "Print a single number \u2014 the answer to the problem modulo 1000000007 ( 109 + 7) .",
    "note": "In the first sample . Thus, the answer to the problem is 8. In the second sample, . The answer to the problem is 27, as 351 = 13\u00b727, 729 = 27\u00b727. In the third sample the answer to the problem is 1073741824 mod 1000000007 = 73741817. In the fourth sample . Thus, the answer to the problem is 1.",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "359C"
  },
  {
    "title": "Vasya and Beautiful Arrays",
    "url": "https://codeforces.com/problemset/problem/354/C",
    "history": "Vasya' s got a birthday coming up and his mom decided to give him an array of positive integers a of length n. Vasya thinks that an array' s beauty is the greatest common divisor of all its elements. His mom, of course, wants to give him as beautiful an array as possible ( with largest possible beauty) . Unfortunately, the shop has only one array a left. On the plus side, the seller said that he could decrease some numbers in the array ( no more than by k for each number) . The seller can obtain array b from array a if the following conditions hold: bi > 0; 0 \u2264 ai - bi \u2264 k for all 1 \u2264 i \u2264 n. Help mom find the maximum possible beauty of the array she will give to Vasya ( that seller can obtain) .",
    "input": "The first line contains two integers n and k ( 1 \u2264 n \u2264 3\u00b7105; 1 \u2264 k \u2264 106) . The second line contains n integers ai ( 1 \u2264 ai \u2264 106) \u2014 array a.",
    "output": "In the single line print a single number \u2014 the maximum possible beauty of the resulting array.",
    "note": "In the first sample we can obtain the array: 3 6 9 12 12 15In the second sample we can obtain the next array: 7 21 49 14 77",
    "topics": [
      "brute force",
      "dp",
      "number theory"
    ],
    "id": "354C"
  },
  {
    "title": "Find Maximum",
    "url": "https://codeforces.com/problemset/problem/353/C",
    "history": "Valera has array a, consisting of n integers a0, a1, . . . , an - 1, and function f( x) , taking an integer from 0 to 2n - 1 as its single argument. Value f( x) is calculated by formula , where value bit( i) equals one if the binary representation of number x contains a 1 on the i- th position, and zero otherwise. For example, if n = 4 and x = 11 ( 11 = 20 + 21 + 23) , then f( x) = a0 + a1 + a3. Help Valera find the maximum of function f( x) among all x, for which an inequality holds: 0 \u2264 x \u2264 m.",
    "input": "The first line contains integer n ( 1 \u2264 n \u2264 105) \u2014 the number of array elements. The next line contains n space- separated integers a0, a1, . . . , an - 1 ( 0 \u2264 ai \u2264 104) \u2014 elements of array a. The third line contains a sequence of digits zero and one without spaces s0s1. . . sn - 1 \u2014 the binary representation of number m. Number m equals .",
    "output": "Print a single integer \u2014 the maximum value of function f( x) for all .",
    "note": "In the first test case m = 20 = 1, f( 0) = 0, f( 1) = a0 = 3. In the second sample m = 20 + 21 + 23 = 11, the maximum value of function equals f( 5) = a0 + a2 = 17 + 10 = 27.",
    "topics": [
      "implementation",
      "math",
      "number theory"
    ],
    "id": "353C"
  },
  {
    "title": "Apple Tree",
    "url": "https://codeforces.com/problemset/problem/348/B",
    "history": "You are given a rooted tree with n vertices. In each leaf vertex there' s a single integer \u2014 the number of apples in this vertex. The weight of a subtree is the sum of all numbers in this subtree leaves. For instance, the weight of a subtree that corresponds to some leaf is the number written in the leaf. A tree is balanced if for every vertex v of the tree all its subtrees, corresponding to the children of vertex v, are of equal weight. Count the minimum number of apples that you need to remove from the tree ( specifically, from some of its leaves) in order to make the tree balanced. Notice that you can always achieve the goal by just removing all apples.",
    "input": "The first line contains integer n ( 2 \u2264 n \u2264 105) , showing the number of vertices in the tree. The next line contains n integers a1, a2, . . . , an ( 0 \u2264 ai \u2264 108) , ai is the number of apples in the vertex number i. The number of apples in non- leaf vertices is guaranteed to be zero. Then follow n - 1 lines, describing the tree edges. Each line contains a pair of integers xi, yi ( 1 \u2264 xi, yi \u2264 n, xi = \u0338 yi) \u2014 the vertices connected by an edge. The vertices are indexed from 1 to n. Vertex 1 is the root.",
    "output": "Print a single integer \u2014 the minimum number of apples to remove in order to make the tree balanced. Please, do not write the",
    "note": "",
    "topics": [
      "dfs and similar",
      "number theory",
      "trees"
    ],
    "id": "348B"
  },
  {
    "title": "Doodle Jump",
    "url": "https://codeforces.com/problemset/problem/346/E",
    "history": "In Doodle Jump the aim is to guide a four- legged creature called \" The Doodler\" up a never- ending series of platforms without falling. \u2014 Wikipedia. It is a very popular game and xiaodao likes it very much. One day when playing the game she wondered whether there exists a platform that the doodler couldn' t reach due to the limits of its jumping ability. Consider the following problem. There are n platforms. The height of the x- th ( 1 \u2264 x \u2264 n) platform is a\u00b7x mod p, where a and p are positive co- prime integers. The maximum possible height of a Doodler' s jump is h. That is, it can jump from height h1 to height h2 ( h1 < h2) if h2 - h1 \u2264 h. Initially, the Doodler is on the ground, the height of which is 0. The question is whether it can reach the highest platform or not. For example, when a = 7, n = 4, p = 12, h = 2, the heights of the platforms are 7, 2, 9, 4 as in the picture below. With the first jump the Doodler can jump to the platform at height 2, with the second one the Doodler can jump to the platform at height 4, but then it can' t jump to any of the higher platforms. So, it can' t reach the highest platform. User xiaodao thought about the problem for a long time but didn' t solve it, so she asks you for help. Also, she has a lot of instances of the problem. Your task is solve all of these instances.",
    "input": "The first line contains an integer t ( 1 \u2264 t \u2264 104) \u2014 the number of problem instances. Each of the next t lines contains four integers a, n, p and h ( 1 \u2264 a \u2264 109, 1 \u2264 n < p \u2264 109, 0 \u2264 h \u2264 109) . It' s guaranteed that a and p are co- prime.",
    "output": "For each problem instance, if the Doodler can reach the highest platform, output \" YES\" , otherwise output \" NO\" .",
    "note": "",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "346E"
  },
  {
    "title": "Alice and Bob",
    "url": "https://codeforces.com/problemset/problem/346/A",
    "history": "It is so boring in the summer holiday, isn' t it? So Alice and Bob have invented a new game to play. The rules are as follows. First, they get a set of n distinct integers. And then they take turns to make the following moves. During each move, either Alice or Bob ( the player whose turn is the current) can choose two distinct integers x and y from the set, such that the set doesn' t contain their absolute difference | x - y| . Then this player adds integer | x - y| to the set ( so, the size of the set increases by one) . If the current player has no valid move, he ( or she) loses the game. The question is who will finally win the game if both players play optimally. Remember that Alice always moves first.",
    "input": "The first line contains an integer n ( 2 \u2264 n \u2264 100) \u2014 the initial number of elements in the set. The second line contains n distinct space- separated integers a1, a2, . . . , an ( 1 \u2264 ai \u2264 109) \u2014 the elements of the set.",
    "output": "Print a single line with the winner' s name. If Alice wins print \" Alice\" , otherwise print \" Bob\" ( without quotes) .",
    "note": "Consider the first test sample. Alice moves first, and the only move she can do is to choose 2 and 3, then to add 1 to the set. Next Bob moves, there is no valid move anymore, so the winner is Alice.",
    "topics": [
      "games",
      "math",
      "number theory"
    ],
    "id": "346A"
  },
  {
    "title": "Rational Resistance",
    "url": "https://codeforces.com/problemset/problem/343/A",
    "history": "Mad scientist Mike is building a time machine in his spare time. To finish the work, he needs a resistor with a certain resistance value. However, all Mike has is lots of identical resistors with unit resistance R0 = 1. Elements with other resistance can be constructed from these resistors. In this problem, we will consider the following as elements: one resistor; an element and one resistor plugged in sequence; an element and one resistor plugged in parallel. With the consecutive connection the resistance of the new element equals R = Re + R0. With the parallel connection the resistance of the new element equals . In this case Re equals the resistance of the element being connected. Mike needs to assemble an element with a resistance equal to the fraction . Determine the smallest possible number of resistors he needs to make such an element.",
    "input": "The single input line contains two space- separated integers a and b ( 1 \u2264 a, b \u2264 1018) . It is guaranteed that the fraction is irreducible. It is guaranteed that a solution always exists.",
    "output": "Print a single number \u2014 the answer to the problem. Please do not use the",
    "note": "In the first sample, one resistor is enough. In the second sample one can connect the resistors in parallel, take the resulting element and connect it to a third resistor consecutively. Then, we get an element with resistance . We cannot make this element using two resistors.",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "343A"
  },
  {
    "title": "GCD Table",
    "url": "https://codeforces.com/problemset/problem/338/D",
    "history": "Consider a table G of size n \u00d7 m such that G( i, j) = GCD( i, j) for all 1 \u2264 i \u2264 n, 1 \u2264 j \u2264 m. GCD( a, b) is the greatest common divisor of numbers a and b. You have a sequence of positive integer numbers a1, a2, . . . , ak. We say that this sequence occurs in table G if it coincides with consecutive elements in some row, starting from some position. More formally, such numbers 1 \u2264 i \u2264 n and 1 \u2264 j \u2264 m - k + 1 should exist that G( i, j + l - 1) = al for all 1 \u2264 l \u2264 k. Determine if the sequence a occurs in table G.",
    "input": "The first line contains three space- separated integers n, m and k ( 1 \u2264 n, m \u2264 1012; 1 \u2264 k \u2264 10000) . The second line contains k space- separated integers a1, a2, . . . , ak ( 1 \u2264 ai \u2264 1012) .",
    "output": "Print a single word \" YES\" , if the given sequence occurs in table G, otherwise print \" NO\" .",
    "note": "Sample 1. The tenth row of table G starts from sequence 1, 2, 1, 2, 5, 2, 1, 2, 1, 10. As you can see, elements from fifth to ninth coincide with sequence a. Sample 2. This time the width of table G equals 8. Sequence a doesn' t occur there.",
    "topics": [
      "chinese remainder theorem",
      "math",
      "number theory"
    ],
    "id": "338D"
  },
  {
    "title": "Divisor Tree",
    "url": "https://codeforces.com/problemset/problem/337/E",
    "history": "A divisor tree is a rooted tree that meets the following conditions: Each vertex of the tree contains a positive integer number. The numbers written in the leaves of the tree are prime numbers. For any inner vertex, the number within it is equal to the product of the numbers written in its children. Manao has n distinct integers a1, a2, . . . , an. He tries to build a divisor tree which contains each of these numbers. That is, for each ai, there should be at least one vertex in the tree which contains ai. Manao loves compact style, but his trees are too large. Help Manao determine the minimum possible number of vertices in the divisor tree sought.",
    "input": "The first line contains a single integer n ( 1 \u2264 n \u2264 8) . The second line contains n distinct space- separated integers ai ( 2 \u2264 ai \u2264 1012) .",
    "output": "Print a single integer \u2014 the minimum number of vertices in the divisor tree that contains each of the numbers ai.",
    "note": "Sample 1. The smallest divisor tree looks this way: Sample 2. In this case you can build the following divisor tree: Sample 3. Note that the tree can consist of a single vertex.",
    "topics": [
      "brute force",
      "number theory",
      "trees"
    ],
    "id": "337E"
  },
  {
    "title": "Quiz",
    "url": "https://codeforces.com/problemset/problem/337/C",
    "history": "Manao is taking part in a quiz. The quiz consists of n consecutive questions. A correct answer gives one point to the player. The game also has a counter of consecutive correct answers. When the player answers a question correctly, the number on this counter increases by 1. If the player answers a question incorrectly, the counter is reset, that is, the number on it reduces to 0. If after an answer the counter reaches the number k, then it is reset, and the player' s score is doubled. Note that in this case, first 1 point is added to the player' s score, and then the total score is doubled. At the beginning of the game, both the player' s score and the counter of consecutive correct answers are set to zero. Manao remembers that he has answered exactly m questions correctly. But he does not remember the order in which the questions came. He' s trying to figure out what his minimum score may be. Help him and compute the remainder of the corresponding number after division by 1000000009 ( 109 + 9) .",
    "input": "The single line contains three space- separated integers n, m and k ( 2 \u2264 k \u2264 n \u2264 109; 0 \u2264 m \u2264 n) .",
    "output": "Print a single integer \u2014 the remainder from division of Manao' s minimum possible score in the quiz by 1000000009 ( 109 + 9) .",
    "note": "Sample 1. Manao answered 3 questions out of 5, and his score would double for each two consecutive correct answers. If Manao had answered the first, third and fifth questions, he would have scored as much as 3 points. Sample 2. Now Manao answered 4 questions. The minimum possible score is obtained when the only wrong answer is to the question 4. Also note that you are asked to minimize the score and not the remainder of the score modulo 1000000009. For example, if Manao could obtain either 2000000000 or 2000000020 points, the answer is 2000000000 mod 1000000009, even though 2000000020 mod 1000000009 is a smaller number.",
    "topics": [
      "binary search",
      "greedy",
      "math",
      "matrices",
      "number theory"
    ],
    "id": "337C"
  },
  {
    "title": "Routine Problem",
    "url": "https://codeforces.com/problemset/problem/337/B",
    "history": "Manao has a monitor. The screen of the monitor has horizontal to vertical length ratio a: b. Now he is going to watch a movie. The movie' s frame has horizontal to vertical length ratio c: d. Manao adjusts the view in such a way that the movie preserves the original frame ratio, but also occupies as much space on the screen as possible and fits within it completely. Thus, he may have to zoom the movie in or out, but Manao will always change the frame proportionally in both dimensions. Calculate the ratio of empty screen ( the part of the screen not occupied by the movie) to the total screen size. Print the answer as an irreducible fraction p / q.",
    "input": "A single line contains four space- separated integers a, b, c, d ( 1 \u2264 a, b, c, d \u2264 1000) .",
    "output": "Print the answer to the problem as \" p/ q\" , where p is a non- negative integer, q is a positive integer and numbers p and q don' t have a common divisor larger than 1.",
    "note": "Sample 1. Manao' s monitor has a square screen. The movie has 3: 2 horizontal to vertical length ratio. Obviously, the movie occupies most of the screen if the width of the picture coincides with the width of the screen. In this case, only 2/ 3 of the monitor will project the movie in the horizontal dimension: Sample 2. This time the monitor' s width is 4/ 3 times larger than its height and the movie' s frame is square. In this case, the picture must take up the whole monitor in the vertical dimension and only 3/ 4 in the horizontal dimension:",
    "topics": [
      "greedy",
      "math",
      "number theory"
    ],
    "id": "337B"
  },
  {
    "title": "Vasily the Bear and Beautiful Strings",
    "url": "https://codeforces.com/problemset/problem/336/D",
    "history": "Vasily the Bear loves beautiful strings. String s is beautiful if it meets the following criteria: String s only consists of characters 0 and 1, at that character 0 must occur in string s exactly n times, and character 1 must occur exactly m times. We can obtain character g from string s with some ( possibly, zero) number of modifications. The character g equals either zero or one. A modification of string with length at least two is the following operation: we replace two last characters from the string by exactly one other character. This character equals one if it replaces two zeros, otherwise it equals zero. For example, one modification transforms string \" 01010\" into string \" 0100\" , two modifications transform it to \" 011\" . It is forbidden to modify a string with length less than two. Help the Bear, count the number of beautiful strings. As the number of beautiful strings can be rather large, print the remainder after dividing the number by 1000000007 ( 109 + 7) .",
    "input": "The first line of the input contains three space- separated integers n, m, g ( 0 \u2264 n, m \u2264 105, n + m \u2265 1, 0 \u2264 g \u2264 1) .",
    "output": "Print a single integer \u2014 the answer to the problem modulo 1000000007 ( 109 + 7) .",
    "note": "In the first sample the beautiful strings are: \" 01\" , \" 10\" . In the second sample the beautiful strings are: \" 0011\" , \" 1001\" , \" 1010\" , \" 1100\" . In the third sample there are no beautiful strings.",
    "topics": [
      "combinatorics",
      "math",
      "number theory"
    ],
    "id": "336D"
  },
  {
    "title": "Vasily the Bear and Sequence",
    "url": "https://codeforces.com/problemset/problem/336/C",
    "history": "Vasily the bear has got a sequence of positive integers a1, a2, . . . , an. Vasily the Bear wants to write out several numbers on a piece of paper so that the beauty of the numbers he wrote out was maximum. The beauty of the written out numbers b1, b2, . . . , bk is such maximum non- negative integer v, that number b1 and b2 and . . . and bk is divisible by number 2v without a remainder. If such number v doesn' t exist ( that is, for any non- negative integer v, number b1 and b2 and . . . and bk is divisible by 2v without a remainder) , the beauty of the written out numbers equals - 1. Tell the bear which numbers he should write out so that the beauty of the written out numbers is maximum. If there are multiple ways to write out the numbers, you need to choose the one where the bear writes out as many numbers as possible. Here expression x and y means applying the bitwise AND operation to numbers x and y. In programming languages C+ + and Java this operation is represented by \" \" , in Pascal \u2014 by \" and\" .",
    "input": "The first line contains integer n ( 1 \u2264 n \u2264 105) . The second line contains n space- separated integers a1, a2, . . . , an ( 1 \u2264 a1 < a2 < . . . < an \u2264 109) .",
    "output": "In the first line print a single integer k ( k > 0) , showing how many numbers to write out. In the second line print k integers b1, b2, . . . , bk \u2014 the numbers to write out. You are allowed to print numbers b1, b2, . . . , bk in any order, but all of them must be distinct. If there are multiple ways to write out the numbers, choose the one with the maximum number of numbers to write out. If there still are multiple ways, you are allowed to print any of them.",
    "note": "",
    "topics": [
      "brute force",
      "greedy",
      "implementation",
      "number theory"
    ],
    "id": "336C"
  },
  {
    "title": "Ilya and Bank Account",
    "url": "https://codeforces.com/problemset/problem/313/A",
    "history": "Ilya is a very clever lion, he lives in an unusual city ZooVille. In this city all the animals have their rights and obligations. Moreover, they even have their own bank accounts. The state of a bank account is an integer. The state of a bank account can be a negative number. This means that the owner of the account owes the bank money. Ilya the Lion has recently had a birthday, so he got a lot of gifts. One of them ( the gift of the main ZooVille bank) is the opportunity to delete the last digit or the digit before last from the state of his bank account no more than once. For example, if the state of Ilya' s bank account is - 123, then Ilya can delete the last digit and get his account balance equal to - 12, also he can remove its digit before last and get the account balance equal to - 13. Of course, Ilya is permitted not to use the opportunity to delete a digit from the balance. Ilya is not very good at math, and that' s why he asks you to help him maximize his bank account. Find the maximum state of the bank account that can be obtained using the bank' s gift.",
    "input": "The single line contains integer n ( 10 \u2264 | n| \u2264 109) \u2014 the state of Ilya' s bank account.",
    "output": "In a single line print an integer \u2014 the maximum state of the bank account that Ilya can get.",
    "note": "In the first test sample Ilya doesn' t profit from using the present. In the second test sample you can delete digit 1 and get the state of the account equal to 0.",
    "topics": [
      "implementation",
      "number theory"
    ],
    "id": "313A"
  },
  {
    "title": "White, Black and White Again",
    "url": "https://codeforces.com/problemset/problem/306/C",
    "history": "Polycarpus is sure that his life fits the description: \" first there is a white stripe, then a black one, then a white one again\" . So, Polycarpus is sure that this rule is going to fulfill during the next n days. Polycarpus knows that he is in for w good events and b not- so- good events. At least one event is going to take place during each day. As each day is unequivocally characterizes as a part of a white or a black stripe, then each day is going to have events of the same type only ( ether good or not- so- good) . What is the number of distinct ways this scenario can develop over the next n days if Polycarpus is in for a white stripe ( a stripe that has good events only, the stripe' s length is at least 1 day) , the a black stripe ( a stripe that has not- so- good events only, the stripe' s length is at least 1 day) and a white stripe again ( a stripe that has good events only, the stripe' s length is at least 1 day) . Each of n days will belong to one of the three stripes only. Note that even the events of the same type are distinct from each other. Even if some events occur on the same day, they go in some order ( there are no simultaneous events) . Write a code that prints the number of possible configurations to sort the events into days. See the samples for clarifications on which scenarios should be considered distinct. Print the answer modulo 1000000009 ( 109 + 9) .",
    "input": "The single line of the input contains integers n, w and b ( 3 \u2264 n \u2264 4000, 2 \u2264 w \u2264 4000, 1 \u2264 b \u2264 4000) \u2014 the number of days, the number of good events and the number of not- so- good events. It is guaranteed that w + b \u2265 n.",
    "output": "Print the required number of ways modulo 1000000009 ( 109 + 9) .",
    "note": "We' ll represent the good events by numbers starting from 1 and the not- so- good events \u2014 by letters starting from ' a' . Vertical lines separate days. In the first sample the possible ways are: \" 1| a| 2\" and \" 2| a| 1\" . In the second sample the possible ways are: \" 1| a| b| 2\" , \" 2| a| b| 1\" , \" 1| b| a| 2\" and \" 2| b| a| 1\" . In the third sample the possible ways are: \" 1| ab| 2\" , \" 2| ab| 1\" , \" 1| ba| 2\" and \" 2| ba| 1\" .",
    "topics": [
      "combinatorics",
      "number theory"
    ],
    "id": "306C"
  },
  {
    "title": "Rotatable Number",
    "url": "https://codeforces.com/problemset/problem/303/D",
    "history": "Bike is a smart boy who loves math very much. He invented a number called \" Rotatable Number\" inspired by 142857. As you can see, 142857 is a magic number because any of its rotatings can be got by multiplying that number by 1, 2, . . . , 6 ( numbers from one to number' s length) . Rotating a number means putting its last several digit into first. For example, by rotating number 12345 you can obtain any numbers: 12345, 51234, 45123, 34512, 23451. It' s worth mentioning that leading- zeroes are allowed. So both 4500123 and 0123450 can be obtained by rotating 0012345. You can see why 142857 satisfies the condition. All of the 6 equations are under base 10. 142857\u00b71 = 142857; 142857\u00b72 = 285714; 142857\u00b73 = 428571; 142857\u00b74 = 571428; 142857\u00b75 = 714285; 142857\u00b76 = 857142. Now, Bike has a problem. He extends \" Rotatable Number\" under any base b. As is mentioned above, 142857 is a \" Rotatable Number\" under base 10. Another example is 0011 under base 2. All of the 4 equations are under base 2. 0011\u00b71 = 0011; 0011\u00b710 = 0110; 0011\u00b711 = 1001; 0011\u00b7100 = 1100. So, he wants to find the largest b ( 1 < b < x) so that there is a positive \" Rotatable Number\" ( leading- zeroes allowed) of length n under base b. Note that any time you multiply a rotatable number by numbers from 1 to its length you should get a rotating of that number.",
    "input": "The only line contains two space- separated integers n, x ( 1 \u2264 n \u2264 5\u00b7106, 2 \u2264 x \u2264 109) .",
    "output": "Print a single integer \u2014 the largest b you found. If no such b exists, print - 1 instead.",
    "note": "",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "303D"
  },
  {
    "title": "Minimum Modular",
    "url": "https://codeforces.com/problemset/problem/303/C",
    "history": "You have been given n distinct integers a1, a2, . . . , an. You can remove at most k of them. Find the minimum modular m ( m > 0) , so that for every pair of the remaining integers ( ai, aj) , the following unequality holds: .",
    "input": "The first line contains two integers n and k ( 1 \u2264 n \u2264 5000, 0 \u2264 k \u2264 4) , which we have mentioned above. The second line contains n distinct integers a1, a2, . . . , an ( 0 \u2264 ai \u2264 106) .",
    "output": "Print a single positive integer \u2014 the minimum m.",
    "note": "",
    "topics": [
      "brute force",
      "graphs",
      "math",
      "number theory"
    ],
    "id": "303C"
  },
  {
    "title": "Empire Strikes Back",
    "url": "https://codeforces.com/problemset/problem/300/E",
    "history": "In a far away galaxy there is war again. The treacherous Republic made k precision strikes of power ai on the Empire possessions. To cope with the republican threat, the Supreme Council decided to deal a decisive blow to the enemy forces. To successfully complete the conflict, the confrontation balance after the blow should be a positive integer. The balance of confrontation is a number that looks like , where p = n! ( n is the power of the Imperial strike) , . After many years of war the Empire' s resources are low. So to reduce the costs, n should be a minimum positive integer that is approved by the commanders. Help the Empire, find the minimum positive integer n, where the described fraction is a positive integer.",
    "input": "The first line contains integer k ( 1 \u2264 k \u2264 106) . The second line contains k integers a1, a2, . . . , ak ( 1 \u2264 ai \u2264 107) .",
    "output": "Print the minimum positive integer n, needed for the Empire to win. Please, do not use the",
    "note": "",
    "topics": [
      "binary search",
      "math",
      "number theory"
    ],
    "id": "300E"
  },
  {
    "title": "Ksusha and Array",
    "url": "https://codeforces.com/problemset/problem/299/A",
    "history": "Ksusha is a beginner coder. Today she starts studying arrays. She has array a1, a2, . . . , an, consisting of n positive integers. Her university teacher gave her a task. Find such number in the array, that all array elements are divisible by it. Help her and find the number!",
    "input": "The first line contains integer n ( 1 \u2264 n \u2264 105) , showing how many numbers the array has. The next line contains integers a1, a2, . . . , an ( 1 \u2264 ai \u2264 109) \u2014 the array elements.",
    "output": "Print a single integer \u2014 the number from the array, such that all array elements are divisible by it. If such number doesn' t exist, print - 1. If there are multiple answers, you are allowed to print any of them.",
    "note": "",
    "topics": [
      "brute force",
      "number theory",
      "sortings"
    ],
    "id": "299A"
  },
  {
    "title": "Shaass and Painter Robot",
    "url": "https://codeforces.com/problemset/problem/294/D",
    "history": "Shaass thinks a kitchen with all white floor tiles is so boring. His kitchen floor is made of n\u00b7m square tiles forming a n \u00d7 m rectangle. Therefore he' s decided to color some of the tiles in black so that the floor looks like a checkerboard, which is no two side- adjacent tiles should have the same color. Shaass wants to use a painter robot to color the tiles. In the beginning the robot is standing in a border tile ( xs, ys) facing a diagonal direction ( i. e. upper- left, upper- right, down- left or down- right) . As the robot walks in the kitchen he paints every tile he passes even if it' s painted before. Painting each tile consumes one unit of black paint. If at any moment the robot hits a wall of the kitchen he changes his direction according the reflection rules. Note that a tile gets painted when the robot enters the tile from another tile, in other words changing direction in the same tile doesn' t lead to any painting. The first tile the robot is standing on, is also painted. The robot stops painting the first moment the floor is checkered. Given the dimensions of the kitchen and the position of the robot, find out the amount of paint the robot consumes before it stops painting the floor. Let' s consider an examples depicted below. If the robot starts at tile number 1 ( the tile ( 1, 1) ) of the left grid heading to down- right it' ll pass tiles 1354236 and consumes 7 units of black paint on his way until he stops at tile number 6. But if it starts at tile number 1 in the right grid heading to down- right it will get stuck in a loop painting tiles 1, 2, and 3.",
    "input": "The first line of the input contains two integers n and m, ( 2 \u2264 n, m \u2264 105) . The second line contains two integers xs and ys ( 1 \u2264 xs \u2264 n, 1 \u2264 ys \u2264 m) and the direction robot is facing initially. Direction is one of the strings: \" UL\" ( upper- left direction) , \" UR\" ( upper- right) , \" DL\" ( down- left) or \" DR\" ( down- right) . Note, that record ( xs, ys) denotes the tile that is located at the xs- th row from the top and at the ys- th column from the left of the kitchen. It' s guaranteed that the starting position will be a border tile ( a tile with less than four side- adjacent tiles) .",
    "output": "Print the amount of paint the robot consumes to obtain a checkered kitchen floor. Or print - 1 if it never happens. Please do not use the",
    "note": "",
    "topics": [
      "brute force",
      "implementation",
      "number theory"
    ],
    "id": "294D"
  },
  {
    "title": "Shaass and Lights",
    "url": "https://codeforces.com/problemset/problem/294/C",
    "history": "There are n lights aligned in a row. These lights are numbered 1 to n from left to right. Initially some of the lights are switched on. Shaass wants to switch all the lights on. At each step he can switch a light on ( this light should be switched off at that moment) if there' s at least one adjacent light which is already switched on. He knows the initial state of lights and he' s wondering how many different ways there exist to switch all the lights on. Please find the required number of ways modulo 1000000007 ( 109 + 7) .",
    "input": "The first line of the input contains two integers n and m where n is the number of lights in the sequence and m is the number of lights which are initially switched on, ( 1 \u2264 n \u2264 1000, 1 \u2264 m \u2264 n) . The second line contains m distinct integers, each between 1 to n inclusive, denoting the indices of lights which are initially switched on.",
    "output": "In the only line of the output print the number of different possible ways to switch on all the lights modulo 1000000007 ( 109 + 7) .",
    "note": "",
    "topics": [
      "combinatorics",
      "number theory"
    ],
    "id": "294C"
  },
  {
    "title": "Cube Problem",
    "url": "https://codeforces.com/problemset/problem/293/C",
    "history": "Yaroslav, Andrey and Roman love playing cubes. Sometimes they get together and play cubes for hours and hours! Today they got together again and they are playing cubes. Yaroslav took unit cubes and composed them into an a \u00d7 a \u00d7 a cube, Andrey made a b \u00d7 b \u00d7 b cube and Roman made a c \u00d7 c \u00d7 c cube. After that the game was finished and the guys left. But later, Vitaly entered the room. He saw the cubes and wanted to make a cube as well. But what size should the cube be? Of course it should be a large cube with the side of length a + b + c. Besides, Vitaly decided to decompose the cubes built by Yaroslav, Andrey and Roman and compose his own large cube out of them. However, it turned out that the unit cubes he got from destroying the three cubes just weren' t enough to make a large cube. We know that Vitaly was short of exactly n cubes. Vitaly got upset, demolished everything and left. As he was leaving, he met Petya and told him that there had been three cubes in the room and that he needed another n unit cubes to make his own large cube. Petya entered the room and saw the messily scattered cubes. He wanted to make it neat and orderly again. But he only knows that there had been three cubes, made of small unit cubes and that Vitaly needed n more unit cubes to make a large one! Help Petya understand, how many ways of sizes a, b, c are there to restore Yaroslav' s, Andrey' s and Roman' s cubes.",
    "input": "The single line of the input contains integer n ( 1 \u2264 n \u2264 1014) . We know that all numbers a, b, c are positive integers. Please, do not use the",
    "output": "In the single line print the required number of ways. If it turns out that there isn' t a single way of suitable sizes of a, b, c, print 0.",
    "note": "",
    "topics": [
      "brute force",
      "math",
      "number theory"
    ],
    "id": "293C"
  },
  {
    "title": "Cows and Primitive Roots",
    "url": "https://codeforces.com/problemset/problem/284/A",
    "history": "The cows have just learned what a primitive root is! Given a prime p, a primitive root is an integer x ( 1 \u2264 x < p) such that none of integers x - 1, x2 - 1, . . . , xp - 2 - 1 are divisible by p, but xp - 1 - 1 is. Unfortunately, computing primitive roots can be time consuming, so the cows need your help. Given a prime p, help the cows find the number of primitive roots .",
    "input": "The input contains a single line containing an integer p ( 2 \u2264 p < 2000) . It is guaranteed that p is a prime.",
    "output": "Output on a single line the number of primitive roots .",
    "note": "The only primitive root is 2. The primitive roots are 2 and 3.",
    "topics": [
      "implementation",
      "math",
      "number theory"
    ],
    "id": "284A"
  },
  {
    "title": "Cows and Cool Sequences",
    "url": "https://codeforces.com/problemset/problem/283/D",
    "history": "Bessie and the cows have recently been playing with \" cool\" sequences and are trying to construct some. Unfortunately they are bad at arithmetic, so they need your help! A pair ( x, y) of positive integers is \" cool\" if x can be expressed as the sum of y consecutive integers ( not necessarily positive) . A sequence ( a1, a2, . . . , an) is \" cool\" if the pairs ( a1, a2) , ( a2, a3) , . . . , ( an - 1, an) are all cool. The cows have a sequence of n positive integers, a1, a2, . . . , an. In one move, they may replace some ai with any other positive integer ( there are no other limits on the new value of ai) . Determine the smallest number of moves needed to make the resulting sequence cool.",
    "input": "The first line contains a single integer, n ( 2 \u2264 n \u2264 5000) . The next line contains n space- separated integers, a1, a2, . . . , an ( 1 \u2264 ai \u2264 1015) . Please do not use the",
    "output": "A single integer, the minimum number of ai that must be changed to make the sequence cool.",
    "note": "In the first sample, the sequence is already cool, so we don' t need to change any elements. In the second sample, we can change a2 to 5 and a3 to 10 to make ( 20, 5, 10, 4) which is cool. This changes 2 elements.",
    "topics": [
      "dp",
      "math",
      "number theory"
    ],
    "id": "283D"
  },
  {
    "title": "Beautiful Decomposition",
    "url": "https://codeforces.com/problemset/problem/279/E",
    "history": "Valera considers a number beautiful, if it equals 2k or - 2k for some integer k ( k \u2265 0) . Recently, the math teacher asked Valera to represent number n as the sum of beautiful numbers. As Valera is really greedy, he wants to complete the task using as few beautiful numbers as possible. Help Valera and find, how many numbers he is going to need. In other words, if you look at all decompositions of the number n into beautiful summands, you need to find the size of the decomposition which has the fewest summands.",
    "input": "The first line contains string s ( 1 \u2264 | s| \u2264 106) , that is the binary representation of number n without leading zeroes ( n > 0) .",
    "output": "Print a single integer \u2014 the minimum amount of beautiful numbers that give a total of n.",
    "note": "In the first sample n = 2 is a beautiful number. In the second sample n = 7 and Valera can decompose it into sum 23 + ( - 20) . In the third sample n = 109 can be decomposed into the sum of four summands as follows: 27 + ( - 24) + ( - 22) + 20.",
    "topics": [
      "dp",
      "games",
      "greedy",
      "number theory"
    ],
    "id": "279E"
  },
  {
    "title": "Three Horses",
    "url": "https://codeforces.com/problemset/problem/271/E",
    "history": "There are three horses living in a horse land: one gray, one white and one gray- and- white. The horses are really amusing animals, which is why they adore special cards. Each of those cards must contain two integers, the first one on top, the second one in the bottom of the card. Let' s denote a card with a on the top and b in the bottom as ( a, b) . Each of the three horses can paint the special cards. If you show an ( a, b) card to the gray horse, then the horse can paint a new ( a + 1, b + 1) card. If you show an ( a, b) card, such that a and b are even integers, to the white horse, then the horse can paint a new card. If you show two cards ( a, b) and ( b, c) to the gray- and- white horse, then he can paint a new ( a, c) card. Polycarpus really wants to get n special cards ( 1, a1) , ( 1, a2) , . . . , ( 1, an) . For that he is going to the horse land. He can take exactly one ( x, y) card to the horse land, such that 1 \u2264 x < y \u2264 m. How many ways are there to choose the card so that he can perform some actions in the horse land and get the required cards? Polycarpus can get cards from the horses only as a result of the actions that are described above. Polycarpus is allowed to get additional cards besides the cards that he requires.",
    "input": "The first line contains two integers n, m ( 1 \u2264 n \u2264 105, 2 \u2264 m \u2264 109) . The second line contains the sequence of integers a1, a2, . . . , an ( 2 \u2264 ai \u2264 109) . Note, that the numbers in the sequence can coincide. The numbers in the lines are separated by single spaces.",
    "output": "Print a single integer \u2014 the answer to the problem. Please, do not use the",
    "note": "",
    "topics": [
      "constructive algorithms",
      "math",
      "number theory"
    ],
    "id": "271E"
  },
  {
    "title": "Prime Matrix",
    "url": "https://codeforces.com/problemset/problem/271/B",
    "history": "You' ve got an n \u00d7 m matrix. The matrix consists of integers. In one move, you can apply a single transformation to the matrix: choose an arbitrary element of the matrix and increase it by 1. Each element can be increased an arbitrary number of times. You are really curious about prime numbers. Let us remind you that a prime number is a positive integer that has exactly two distinct positive integer divisors: itself and number one. For example, numbers 2, 3, 5 are prime and numbers 1, 4, 6 are not. A matrix is prime if at least one of the two following conditions fulfills: the matrix has a row with prime numbers only; the matrix has a column with prime numbers only; Your task is to count the minimum number of moves needed to get a prime matrix from the one you' ve got.",
    "input": "The first line contains two integers n, m ( 1 \u2264 n, m \u2264 500) \u2014 the number of rows and columns in the matrix, correspondingly. Each of the following n lines contains m integers \u2014 the initial matrix. All matrix elements are positive integers. All numbers in the initial matrix do not exceed 105. The numbers in the lines are separated by single spaces.",
    "output": "Print a single integer \u2014 the minimum number of moves needed to get a prime matrix from the one you' ve got. If you' ve got a prime matrix, print 0.",
    "note": "In the first sample you need to increase number 1 in cell ( 1, 1) . Thus, the first row will consist of prime numbers: 2, 2, 3. In the second sample you need to increase number 8 in cell ( 1, 2) three times. Thus, the second column will consist of prime numbers: 11, 2. In the third sample you don' t have to do anything as the second column already consists of prime numbers: 3, 2.",
    "topics": [
      "binary search",
      "brute force",
      "math",
      "number theory"
    ],
    "id": "271B"
  },
  {
    "title": "Subtractions",
    "url": "https://codeforces.com/problemset/problem/267/A",
    "history": "You' ve got two numbers. As long as they are both larger than zero, they go through the same operation: subtract the lesser number from the larger one. If they equal substract one number from the another. For example, one operation transforms pair ( 4, 17) to pair ( 4, 13) , it transforms ( 5, 5) to ( 0, 5) . You' ve got some number of pairs ( ai, bi) . How many operations will be performed for each of them?",
    "input": "The first line contains the number of pairs n ( 1 \u2264 n \u2264 1000) . Then follow n lines, each line contains a pair of positive integers ai, bi ( 1 \u2264 ai, bi \u2264 109) .",
    "output": "Print the sought number of operations for each pair on a single line.",
    "note": "",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "267A"
  },
  {
    "title": "Good Sequences",
    "url": "https://codeforces.com/problemset/problem/264/B",
    "history": "Squirrel Liss is interested in sequences. She also has preferences of integers. She thinks n integers a1, a2, . . . , an are good. Now she is interested in good sequences. A sequence x1, x2, . . . , xk is called good if it satisfies the following three conditions: The sequence is strictly increasing, i. e. xi < xi + 1 for each i ( 1 \u2264 i \u2264 k - 1) . No two adjacent elements are coprime, i. e. gcd( xi, xi + 1) > 1 for each i ( 1 \u2264 i \u2264 k - 1) ( where gcd( p, q) denotes the greatest common divisor of the integers p and q) . All elements of the sequence are good integers. Find the length of the longest good sequence.",
    "input": "The input consists of two lines. The first line contains a single integer n ( 1 \u2264 n \u2264 105) \u2014 the number of good integers. The second line contains a single- space separated list of good integers a1, a2, . . . , an in strictly increasing order ( 1 \u2264 ai \u2264 105; ai < ai + 1) .",
    "output": "Print a single integer \u2014 the length of the longest good sequence.",
    "note": "In the first example, the following sequences are examples of good sequences: [ 2; 4; 6; 9] , [ 2; 4; 6] , [ 3; 9] , [ 6] . The length of the longest good sequence is 4.",
    "topics": [
      "dp",
      "number theory"
    ],
    "id": "264B"
  },
  {
    "title": "Number Transformation",
    "url": "https://codeforces.com/problemset/problem/251/C",
    "history": "Little Petya likes positive integers a lot. Recently his mom has presented him a positive integer a. There' s only one thing Petya likes more than numbers: playing with little Masha. It turned out that Masha already has a positive integer b. Petya decided to turn his number a into the number b consecutively performing the operations of the following two types: Subtract 1 from his number. Choose any integer x from 2 to k, inclusive. Then subtract number ( a mod x) from his number a. Operation a mod x means taking the remainder from division of number a by number x. Petya performs one operation per second. Each time he chooses an operation to perform during the current move, no matter what kind of operations he has performed by that moment. In particular, this implies that he can perform the same operation any number of times in a row. Now he wonders in what minimum number of seconds he could transform his number a into number b. Please note that numbers x in the operations of the second type are selected anew each time, independently of each other.",
    "input": "The only line contains three integers a, b ( 1 \u2264 b \u2264 a \u2264 1018) and k ( 2 \u2264 k \u2264 15) . Please do not use the",
    "output": "Print a single integer \u2014 the required minimum number of seconds needed to transform number a into number b.",
    "note": "In the first sample the sequence of numbers that Petya gets as he tries to obtain number b is as follows: 10 \u2192 8 \u2192 6 \u2192 4 \u2192 3 \u2192 2 \u2192 1. In the second sample one of the possible sequences is as follows: 6 \u2192 4 \u2192 3.",
    "topics": [
      "dp",
      "greedy",
      "number theory"
    ],
    "id": "251C"
  },
  {
    "title": "Chilly Willy",
    "url": "https://codeforces.com/problemset/problem/248/B",
    "history": "Chilly Willy loves playing with numbers. He only knows prime numbers that are digits yet. These numbers are 2, 3, 5 and 7. But Willy grew rather bored of such numbers, so he came up with a few games that were connected with them. Chilly Willy wants to find the minimum number of length n, such that it is simultaneously divisible by all numbers Willy already knows ( 2, 3, 5 and 7) . Help him with that. A number' s length is the number of digits in its decimal representation without leading zeros.",
    "input": "A single input line contains a single integer n ( 1 \u2264 n \u2264 105) .",
    "output": "Print a single integer \u2014 the answer to the problem without leading zeroes, or \" - 1\" ( without the quotes) , if the number that meet the problem condition does not exist.",
    "note": "",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "248B"
  },
  {
    "title": "Primes on Interval",
    "url": "https://codeforces.com/problemset/problem/237/C",
    "history": "You' ve decided to carry out a survey in the theory of prime numbers. Let us remind you that a prime number is a positive integer that has exactly two distinct positive integer divisors. Consider positive integers a, a + 1, . . . , b ( a \u2264 b) . You want to find the minimum integer l ( 1 \u2264 l \u2264 b - a + 1) such that for any integer x ( a \u2264 x \u2264 b - l + 1) among l integers x, x + 1, . . . , x + l - 1 there are at least k prime numbers. Find and print the required minimum l. If no value l meets the described limitations, print - 1.",
    "input": "A single line contains three space- separated integers a, b, k ( 1 \u2264 a, b, k \u2264 106; a \u2264 b) .",
    "output": "In a single line print a single integer \u2014 the required minimum l. If there' s no solution, print - 1.",
    "note": "",
    "topics": [
      "binary search",
      "number theory",
      "two pointers"
    ],
    "id": "237C"
  },
  {
    "title": "Easy Number Challenge",
    "url": "https://codeforces.com/problemset/problem/236/B",
    "history": "Let' s denote d( n) as the number of divisors of a positive integer n. You are given three integers a, b and c. Your task is to calculate the following sum: Find the sum modulo 1073741824 ( 230) .",
    "input": "The first line contains three space- separated integers a, b and c ( 1 \u2264 a, b, c \u2264 100) .",
    "output": "Print a single integer \u2014 the required sum modulo 1073741824 ( 230) .",
    "note": "For the first example. d( 1\u00b71\u00b71) = d( 1) = 1; d( 1\u00b71\u00b72) = d( 2) = 2; d( 1\u00b72\u00b71) = d( 2) = 2; d( 1\u00b72\u00b72) = d( 4) = 3; d( 2\u00b71\u00b71) = d( 2) = 2; d( 2\u00b71\u00b72) = d( 4) = 3; d( 2\u00b72\u00b71) = d( 4) = 3; d( 2\u00b72\u00b72) = d( 8) = 4. So the result is 1 + 2 + 2 + 3 + 2 + 3 + 3 + 4 = 20.",
    "topics": [
      "implementation",
      "number theory"
    ],
    "id": "236B"
  },
  {
    "title": "Number Challenge",
    "url": "https://codeforces.com/problemset/problem/235/E",
    "history": "Let' s denote d( n) as the number of divisors of a positive integer n. You are given three integers a, b and c. Your task is to calculate the following sum: Find the sum modulo 1073741824 ( 230) .",
    "input": "The first line contains three space- separated integers a, b and c ( 1 \u2264 a, b, c \u2264 2000) .",
    "output": "Print a single integer \u2014 the required sum modulo 1073741824 ( 230) .",
    "note": "For the first example. d( 1\u00b71\u00b71) = d( 1) = 1; d( 1\u00b71\u00b72) = d( 2) = 2; d( 1\u00b72\u00b71) = d( 2) = 2; d( 1\u00b72\u00b72) = d( 4) = 3; d( 2\u00b71\u00b71) = d( 2) = 2; d( 2\u00b71\u00b72) = d( 4) = 3; d( 2\u00b72\u00b71) = d( 4) = 3; d( 2\u00b72\u00b72) = d( 8) = 4. So the result is 1 + 2 + 2 + 3 + 2 + 3 + 3 + 4 = 20.",
    "topics": [
      "combinatorics",
      "dp",
      "implementation",
      "math",
      "number theory"
    ],
    "id": "235E"
  },
  {
    "title": "LCM Challenge",
    "url": "https://codeforces.com/problemset/problem/235/A",
    "history": "Some days ago, I learned the concept of LCM ( least common multiple) . I' ve played with it for several times and I want to make a big number with it. But I also don' t want to use many numbers, so I' ll choose three positive integers ( they don' t have to be distinct) which are not greater than n. Can you help me to find the maximum possible least common multiple of these three integers?",
    "input": "The first line contains an integer n ( 1 \u2264 n \u2264 106) \u2014 the n mentioned in the statement.",
    "output": "Print a single integer \u2014 the maximum possible LCM of three not necessarily distinct positive integers that are not greater than n.",
    "note": "The least common multiple of some positive integers is the least positive integer which is multiple for each of them. The result may become very large, 32- bit integer won' t be enough. So using 64- bit integers is recommended. For the last example, we can chose numbers 7, 6, 5 and the LCM of them is 7\u00b76\u00b75 = 210. It is the maximum value we can get.",
    "topics": [
      "number theory"
    ],
    "id": "235A"
  },
  {
    "title": "T-primes",
    "url": "https://codeforces.com/problemset/problem/230/B",
    "history": "We know that prime numbers are positive integers that have exactly two distinct positive divisors. Similarly, we' ll call a positive integer t \u0422- prime, if t has exactly three distinct positive divisors. You are given an array of n positive integers. For each of them determine whether it is \u0422- prime or not.",
    "input": "The first line contains a single positive integer, n ( 1 \u2264 n \u2264 105) , showing how many numbers are in the array. The next line contains n space- separated integers xi ( 1 \u2264 xi \u2264 1012) . Please, do not use the",
    "output": "Print n lines: the i- th line should contain \" YES\" ( without the quotes) , if number xi is \u0422- prime, and \" NO\" ( without the quotes) , if it isn' t.",
    "note": "The given test has three numbers. The first number 4 has exactly three divisors \u2014 1, 2 and 4, thus the answer for this number is \" YES\" . The second number 5 has two divisors ( 1 and 5) , and the third number 6 has four divisors ( 1, 2, 3, 6) , hence the answer for them is \" NO\" .",
    "topics": [
      "binary search",
      "implementation",
      "math",
      "number theory"
    ],
    "id": "230B"
  },
  {
    "title": "Anniversary",
    "url": "https://codeforces.com/problemset/problem/226/C",
    "history": "There are less than 60 years left till the 900- th birthday anniversary of a famous Italian mathematician Leonardo Fibonacci. Of course, such important anniversary needs much preparations. Dima is sure that it' ll be great to learn to solve the following problem by the Big Day: You' re given a set A, consisting of numbers l, l + 1, l + 2, . . . , r; let' s consider all its k- element subsets; for each such subset let' s find the largest common divisor of Fibonacci numbers with indexes, determined by the subset elements. Among all found common divisors, Dima is interested in the largest one. Dima asked to remind you that Fibonacci numbers are elements of a numeric sequence, where F1 = 1, F2 = 1, Fn = Fn - 1 + Fn - 2 for n \u2265 3. Dima has more than half a century ahead to solve the given task, but you only have two hours. Count the residue from dividing the sought largest common divisor by m.",
    "input": "The first line contains four space- separated integers m, l, r and k ( 1 \u2264 m \u2264 109; 1 \u2264 l < r \u2264 1012; 2 \u2264 k \u2264 r - l + 1) . Please, do not use the",
    "output": "Print a single integer \u2014 the residue from dividing the sought greatest common divisor by m.",
    "note": "",
    "topics": [
      "data structures",
      "implementation",
      "math",
      "matrices",
      "number theory"
    ],
    "id": "226C"
  },
  {
    "title": "Unsolvable",
    "url": "https://codeforces.com/problemset/problem/225/E",
    "history": "Consider the following equation: where sign [ a] represents the integer part of number a. Let' s find all integer z ( z > 0) , for which this equation is unsolvable in positive integers. The phrase \" unsolvable in positive integers\" means that there are no such positive integers x and y ( x, y > 0) , for which the given above equation holds. Let' s write out all such z in the increasing order: z1, z2, z3, and so on ( zi < zi + 1) . Your task is: given the number n, find the number zn.",
    "input": "The first line contains a single integer n ( 1 \u2264 n \u2264 40) .",
    "output": "Print a single integer \u2014 the number zn modulo 1000000007 ( 109 + 7) . It is guaranteed that the answer exists.",
    "note": "",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "225E"
  },
  {
    "title": "Well-known Numbers",
    "url": "https://codeforces.com/problemset/problem/225/B",
    "history": "Numbers k- bonacci ( k is integer, k > 1) are a generalization of Fibonacci numbers and are determined as follows: F( k, n) = 0, for integer n, 1 \u2264 n < k; F( k, k) = 1; F( k, n) = F( k, n - 1) + F( k, n - 2) + . . . + F( k, n - k) , for integer n, n > k. Note that we determine the k- bonacci numbers, F( k, n) , only for integer values of n and k. You' ve got a number s, represent it as a sum of several ( at least two) distinct k- bonacci numbers.",
    "input": "The first line contains two integers s and k ( 1 \u2264 s, k \u2264 109; k > 1) .",
    "output": "In the first line print an integer m ( m \u2265 2) that shows how many numbers are in the found representation. In the second line print m distinct integers a1, a2, . . . , am. Each printed integer should be a k- bonacci number. The sum of printed integers must equal s. It is guaranteed that the answer exists. If there are several possible answers, print any of them.",
    "note": "",
    "topics": [
      "binary search",
      "greedy",
      "number theory"
    ],
    "id": "225B"
  },
  {
    "title": "Partial Sums",
    "url": "https://codeforces.com/problemset/problem/223/C",
    "history": "You' ve got an array a, consisting of n integers. The array elements are indexed from 1 to n. Let' s determine a two step operation like that: First we build by the array a an array s of partial sums, consisting of n elements. Element number i ( 1 \u2264 i \u2264 n) of array s equals . The operation x mod y means that we take the remainder of the division of number x by number y. Then we write the contents of the array s to the array a. Element number i ( 1 \u2264 i \u2264 n) of the array s becomes the i- th element of the array a ( ai = si) . You task is to find array a after exactly k described operations are applied.",
    "input": "The first line contains two space- separated integers n and k ( 1 \u2264 n \u2264 2000, 0 \u2264 k \u2264 109) . The next line contains n space- separated integers a1, a2, . . . , an \u2014 elements of the array a ( 0 \u2264 ai \u2264 109) .",
    "output": "Print n integers \u2014 elements of the array a after the operations are applied to it. Print the elements in the order of increasing of their indexes in the array a. Separate the printed numbers by spaces.",
    "note": "",
    "topics": [
      "combinatorics",
      "math",
      "number theory"
    ],
    "id": "223C"
  },
  {
    "title": "Reducing Fractions",
    "url": "https://codeforces.com/problemset/problem/222/C",
    "history": "To confuse the opponents, the Galactic Empire represents fractions in an unusual format. The fractions are represented as two sets of integers. The product of numbers from the first set gives the fraction numerator, the product of numbers from the second set gives the fraction denominator. However, it turned out that the programs that work with fractions in this representations aren' t complete, they lack supporting the operation of reducing fractions. Implement this operation and the Empire won' t forget you.",
    "input": "The first input line contains two space- separated integers n, m ( 1 \u2264 n, m \u2264 105) that show how many numbers the first set ( the numerator) and the second set ( the denominator) contain, correspondingly. The second line contains n space- separated integers: a1, a2, . . . , an ( 1 \u2264 ai \u2264 107) \u2014 the numbers that are multiplied to produce the numerator. The third line contains m space- separated integers: b1, b2, . . . , bm ( 1 \u2264 bi \u2264 107) \u2014 the numbers that are multiplied to produce the denominator.",
    "output": "Print the answer to the problem in the form, similar to the form of the input data. The number of values in the sets you print nout, mout must satisfy the inequality 1 \u2264 nout, mout \u2264 105, and the actual values in the sets aout, i and bout, i must satisfy the inequality 1 \u2264 aout, i, bout, i \u2264 107. Separate the values in the lines by spaces. The printed fraction must be reduced, that is, there mustn' t be such integer x ( x > 1) , that the numerator and the denominator of the printed fraction are divisible by x. If there are several matching answers, print any of them.",
    "note": "In the first test sample the numerator equals 1000, the denominator equals 500. If we reduce fraction 1000/ 500 by the greatest common divisor of the numerator and the denominator ( by 500) , we obtain fraction 2/ 1. In the second test sample the numerator equals 2000, the denominator equals 300. If we reduce fraction 2000/ 300 by the greatest common divisor of the numerator and the denominator ( by 100) , we obtain fraction 20/ 3.",
    "topics": [
      "implementation",
      "math",
      "number theory",
      "sortings"
    ],
    "id": "222C"
  },
  {
    "title": "Martian Luck",
    "url": "https://codeforces.com/problemset/problem/216/E",
    "history": "You know that the Martians use a number system with base k. Digit b ( 0 \u2264 b < k) is considered lucky, as the first contact between the Martians and the Earthlings occurred in year b ( by Martian chronology) . A digital root d( x) of number x is a number that consists of a single digit, resulting after cascading summing of all digits of number x. Word \" cascading\" means that if the first summing gives us a number that consists of several digits, then we sum up all digits again, and again, until we get a one digit number. For example, d( 35047) = d( ( 3 + 5 + 0 + 4) 7) = d( 157) = d( ( 1 + 5) 7) = d( 67) = 67. In this sample the calculations are performed in the 7- base notation. If a number' s digital root equals b, the Martians also call this number lucky. You have string s, which consists of n digits in the k- base notation system. Your task is to find, how many distinct substrings of the given string are lucky numbers. Leading zeroes are permitted in the numbers. Note that substring s[ i. . . j] of the string s = a1a2. . . an ( 1 \u2264 i \u2264 j \u2264 n) is the string aiai + 1. . . aj. Two substrings s[ i1. . . j1] and s[ i2. . . j2] of the string s are different if either i1 = \u0338 i2 or j1 = \u0338 j2.",
    "input": "The first line contains three integers k, b and n ( 2 \u2264 k \u2264 109, 0 \u2264 b < k, 1 \u2264 n \u2264 105) . The second line contains string s as a sequence of n integers, representing digits in the k- base notation: the i- th integer equals ai ( 0 \u2264 ai < k) \u2014 the i- th digit of string s. The numbers in the lines are space- separated.",
    "output": "Print a single integer \u2014 the number of substrings that are lucky numbers. Please, do not use the",
    "note": "In the first sample the following substrings have the sought digital root: s[ 1. . . 2] = \" 3 2\" , s[ 1. . . 3] = \" 3 2 0\" , s[ 3. . . 4] = \" 0 5\" , s[ 4. . . 4] = \" 5\" and s[ 2. . . 6] = \" 2 0 5 6 1\" .",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "216E"
  },
  {
    "title": "Periodical Numbers",
    "url": "https://codeforces.com/problemset/problem/215/E",
    "history": "A non- empty string s is called binary, if it consists only of characters \" 0\" and \" 1\" . Let' s number the characters of binary string s from 1 to the string' s length and let' s denote the i- th character in string s as si. Binary string s with length n is periodical, if there is an integer 1 \u2264 k < n such that: k is a divisor of number n for all 1 \u2264 i \u2264 n - k, the following condition fulfills: si = si + k For example, binary strings \" 101010\" and \" 11\" are periodical and \" 10\" and \" 10010\" are not. A positive integer x is periodical, if its binary representation ( without leading zeroes) is a periodic string. Your task is to calculate, how many periodic numbers are in the interval from l to r ( both ends are included) .",
    "input": "The single input line contains two integers l and r ( 1 \u2264 l \u2264 r \u2264 1018) . The numbers are separated by a space. Please, do not use the",
    "output": "Print a single integer, showing how many periodic numbers are in the interval from l to r ( both ends are included) .",
    "note": "In the first sample periodic numbers are 3, 7 and 10. In the second sample periodic numbers are 31 and 36.",
    "topics": [
      "combinatorics",
      "dp",
      "number theory"
    ],
    "id": "215E"
  },
  {
    "title": "Tractor College",
    "url": "https://codeforces.com/problemset/problem/200/E",
    "history": "While most students still sit their exams, the tractor college has completed the summer exam session. In fact, students study only one subject at this college \u2014 the Art of Operating a Tractor. Therefore, at the end of a term a student gets only one mark, a three ( satisfactory) , a four ( good) or a five ( excellent) . Those who score lower marks are unfortunately expelled. The college has n students, and oddly enough, each of them can be on scholarship. The size of the scholarships varies each term. Since the end- of- the- term exam has just ended, it' s time to determine the size of the scholarship to the end of next term. The monthly budget for the scholarships of the Tractor college is s rubles. To distribute the budget optimally, you must follow these rules: The students who received the same mark for the exam, should receive the same scholarship; Let us denote the size of the scholarship ( in roubles) for students who have received marks 3, 4 and 5 for the exam, as k3, k4 and k5, respectively. The values k3, k4 and k5 must be integers and satisfy the inequalities 0 \u2264 k3 \u2264 k4 \u2264 k5; Let' s assume that c3, c4, c5 show how many students received marks 3, 4 and 5 for the exam, respectively. The budget of the scholarship should be fully spent on them, that is, c3\u00b7k3 + c4\u00b7k4 + c5\u00b7k5 = s; Let' s introduce function \u2014 the value that shows how well the scholarships are distributed between students. In the optimal distribution function f( k3, k4, k5) takes the minimum possible value. Given the results of the exam, and the budget size s, you have to find the optimal distribution of the scholarship.",
    "input": "The first line has two integers n, s ( 3 \u2264 n \u2264 300, 1 \u2264 s \u2264 3\u00b7105) \u2014 the number of students and the budget size for the scholarship, respectively. The second line contains n integers, where the i- th number represents the mark that the i- th student got for the exam. It is guaranteed that at each mark was given to at least one student.",
    "output": "On a single line print three integers k3, k4 and k5 \u2014 the sought values that represent the optimal distribution of the scholarships. If there are multiple optimal answers, print any of them. If there is no answer, print - 1.",
    "note": "",
    "topics": [
      "implementation",
      "math",
      "number theory",
      "ternary search"
    ],
    "id": "200E"
  },
  {
    "title": "Hexadecimal's theorem",
    "url": "https://codeforces.com/problemset/problem/199/A",
    "history": "Recently, a chaotic virus Hexadecimal advanced a new theorem which will shake the Universe. She thinks that each Fibonacci number can be represented as sum of three not necessary different Fibonacci numbers. Let' s remember how Fibonacci numbers can be calculated. F0 = 0, F1 = 1, and all the next numbers are Fi = Fi - 2 + Fi - 1. So, Fibonacci numbers make a sequence of numbers: 0, 1, 1, 2, 3, 5, 8, 13, . . . If you haven' t run away from the PC in fear, you have to help the virus. Your task is to divide given Fibonacci number n by three not necessary different Fibonacci numbers or say that it is impossible.",
    "input": "The input contains of a single integer n ( 0 \u2264 n < 109) \u2014 the number that should be represented by the rules described above. It is guaranteed that n is a Fibonacci number.",
    "output": "Output three required numbers: a, b and c. If there is no answer for the test you have to print \" I' m too stupid to solve this problem\" without the quotes. If there are multiple answers, print any of them.",
    "note": "",
    "topics": [
      "brute force",
      "constructive algorithms",
      "implementation",
      "number theory"
    ],
    "id": "199A"
  },
  {
    "title": "Visit of the Great",
    "url": "https://codeforces.com/problemset/problem/185/D",
    "history": "The Great Mushroom King descended to the dwarves, but not everyone managed to see him. Only the few chosen ones could see the King. We know that only LCM( k2l + 1, k2l + 1 + 1, . . . , k2r + 1) dwarves can see the Great Mushroom King. Numbers k, l, r are chosen by the Great Mushroom King himself in some complicated manner which is unclear to common dwarves. The dwarven historians decided to document all visits of the Great Mushroom King. For each visit the dwarven historians know three integers ki, li, ri, chosen by the Great Mushroom King for this visit. They also know a prime number pi. Help them to count the remainder of dividing the number of dwarves who can see the King, by number pi, for each visit.",
    "input": "The first line contains the single integer t ( 1 \u2264 t \u2264 105) \u2014 the number of the King' s visits. Each of the following t input lines contains four space- separated integers ki, li, ri and pi ( 1 \u2264 ki \u2264 106; 0 \u2264 li \u2264 ri \u2264 1018; 2 \u2264 pi \u2264 109) \u2014 the numbers, chosen by the Great Mushroom King and the prime module, correspondingly. It is guaranteed that for all visits number pi is prime. Please do not use the",
    "output": "For each visit print the answer on a single line \u2014 the remainder of dividing the number of the dwarves who can see the King this time, by number pi. Print the answers for the visits in the order, in which the visits are described in the input.",
    "note": "We consider that LCM( a1, a2, . . . , an) represents the least common multiple of numbers a1, a2, . . . , an. We consider that x0 = 1, for any x.",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "185D"
  },
  {
    "title": "Divisibility Rules",
    "url": "https://codeforces.com/problemset/problem/180/B",
    "history": "Vasya studies divisibility rules at school. Here are some of them: Divisibility by 2. A number is divisible by 2 if and only if its last digit is divisible by 2 or in other words, is even. Divisibility by 3. A number is divisible by 3 if and only if the sum of its digits is divisible by 3. Divisibility by 4. A number is divisible by 4 if and only if its last two digits form a number that is divisible by 4. Divisibility by 5. A number is divisible by 5 if and only if its last digit equals 5 or 0. Divisibility by 6. A number is divisible by 6 if and only if it is divisible by 2 and 3 simultaneously ( that is, if the last digit is even and the sum of all digits is divisible by 3) . Divisibility by 7. Vasya doesn' t know such divisibility rule. Divisibility by 8. A number is divisible by 8 if and only if its last three digits form a number that is divisible by 8. Divisibility by 9. A number is divisible by 9 if and only if the sum of its digits is divisible by 9. Divisibility by 10. A number is divisible by 10 if and only if its last digit is a zero. Divisibility by 11. A number is divisible by 11 if and only if the sum of digits on its odd positions either equals to the sum of digits on the even positions, or they differ in a number that is divisible by 11. Vasya got interested by the fact that some divisibility rules resemble each other. In fact, to check a number' s divisibility by 2, 4, 5, 8 and 10 it is enough to check fulfiling some condition for one or several last digits. Vasya calls such rules the 2- type rules. If checking divisibility means finding a sum of digits and checking whether the sum is divisible by the given number, then Vasya calls this rule the 3- type rule ( because it works for numbers 3 and 9) . If we need to find the difference between the sum of digits on odd and even positions and check whether the difference is divisible by the given divisor, this rule is called the 11- type rule ( it works for number 11) . In some cases we should divide the divisor into several factors and check whether rules of different types ( 2- type, 3- type or 11- type) work there. For example, for number 6 we check 2- type and 3- type rules, for number 66 we check all three types. Such mixed divisibility rules are called 6- type rules. And finally, there are some numbers for which no rule works: neither 2- type, nor 3- type, nor 11- type, nor 6- type. The least such number is number 7, so we' ll say that in such cases the mysterious 7- type rule works, the one that Vasya hasn' t discovered yet. Vasya' s dream is finding divisibility rules for all possible numbers. He isn' t going to stop on the decimal numbers only. As there are quite many numbers, ha can' t do it all by himself. Vasya asked you to write a program that determines the divisibility rule type in the b- based notation for the given divisor d.",
    "input": "The first input line contains two integers b and d ( 2 \u2264 b, d \u2264 100) \u2014 the notation system base and the divisor. Both numbers are given in the decimal notation.",
    "output": "On the first output line print the type of the rule in the b- based notation system, where the divisor is d: \" 2- type\" , \" 3- type\" , \" 11- type\" , \" 6- type\" or \" 7- type\" . If there are several such types, print the one that goes earlier in the given sequence. If a number belongs to the 2- type, print on the second line the least number of the last b- based digits that we will need to use to check the divisibility.",
    "note": "The divisibility rule for number 3 in binary notation looks as follows: \" A number is divisible by 3 if and only if the sum of its digits that occupy the even places differs from the sum of digits that occupy the odd places, in a number that is divisible by 3\" . That' s an 11- type rule. For example, 2110 = 101012. For it the sum of digits on odd positions equals 1 + 1 + 1 = 3, an on even positions \u2014 0 + 0 = 0. The rule works and the number is divisible by 3. In some notations a number can fit into the 3- type rule and the 11- type rule. In this case the correct answer is \" 3- type\" .",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "180B"
  },
  {
    "title": "Rectangular Game",
    "url": "https://codeforces.com/problemset/problem/177/B2",
    "history": "The Smart Beaver from ABBYY decided to have a day off. But doing nothing the whole day turned out to be too boring, and he decided to play a game with pebbles. Initially, the Beaver has n pebbles. He arranges them in a equal rows, each row has b pebbles ( a > 1) . Note that the Beaver must use all the pebbles he has, i. e. n = a\u00b7b. 10 pebbles are arranged in two rows, each row has 5 pebbles Once the Smart Beaver has arranged the pebbles, he takes back any of the resulting rows ( that is, b pebbles) and discards all other pebbles. Then he arranges all his pebbles again ( possibly choosing other values of a and b) and takes back one row, and so on. The game continues until at some point the Beaver ends up with exactly one pebble. The game process can be represented as a finite sequence of integers c1, . . . , ck, where: c1 = n ci + 1 is the number of pebbles that the Beaver ends up with after the i- th move, that is, the number of pebbles in a row after some arrangement of ci pebbles ( 1 \u2264 i < k) . Note that ci > ci + 1. ck = 1 The result of the game is the sum of numbers ci. You are given n. Find the maximum possible result of the game.",
    "input": "The single line of the input contains a single integer n \u2014 the initial number of pebbles the Smart Beaver has. The input limitations for getting 30 points are: 2 \u2264 n \u2264 50 The input limitations for getting 100 points are: 2 \u2264 n \u2264 109",
    "output": "Print a single number \u2014 the maximum possible result of the game.",
    "note": "Consider the first example ( c1 = 10) . The possible options for the game development are: Arrange the pebbles in 10 rows, one pebble per row. Then c2 = 1, and the game ends after the first move with the result of 11. Arrange the pebbles in 5 rows, two pebbles per row. Then c2 = 2, and the game continues. During the second move we have two pebbles which can be arranged in a unique way ( remember that you are not allowed to put all the pebbles in the same row! ) \u2014 2 rows, one pebble per row. c3 = 1, and the game ends with the result of 13. Finally, arrange the pebbles in two rows, five pebbles per row. The same logic leads us to c2 = 5, c3 = 1, and the game ends with the result of 16 \u2014 the maximum possible result.",
    "topics": [
      "number theory"
    ],
    "id": "177B2"
  },
  {
    "title": "Rectangular Game",
    "url": "https://codeforces.com/problemset/problem/177/B1",
    "history": "The Smart Beaver from ABBYY decided to have a day off. But doing nothing the whole day turned out to be too boring, and he decided to play a game with pebbles. Initially, the Beaver has n pebbles. He arranges them in a equal rows, each row has b pebbles ( a > 1) . Note that the Beaver must use all the pebbles he has, i. e. n = a\u00b7b. 10 pebbles are arranged in two rows, each row has 5 pebbles Once the Smart Beaver has arranged the pebbles, he takes back any of the resulting rows ( that is, b pebbles) and discards all other pebbles. Then he arranges all his pebbles again ( possibly choosing other values of a and b) and takes back one row, and so on. The game continues until at some point the Beaver ends up with exactly one pebble. The game process can be represented as a finite sequence of integers c1, . . . , ck, where: c1 = n ci + 1 is the number of pebbles that the Beaver ends up with after the i- th move, that is, the number of pebbles in a row after some arrangement of ci pebbles ( 1 \u2264 i < k) . Note that ci > ci + 1. ck = 1 The result of the game is the sum of numbers ci. You are given n. Find the maximum possible result of the game.",
    "input": "The single line of the input contains a single integer n \u2014 the initial number of pebbles the Smart Beaver has. The input limitations for getting 30 points are: 2 \u2264 n \u2264 50 The input limitations for getting 100 points are: 2 \u2264 n \u2264 109",
    "output": "Print a single number \u2014 the maximum possible result of the game.",
    "note": "Consider the first example ( c1 = 10) . The possible options for the game development are: Arrange the pebbles in 10 rows, one pebble per row. Then c2 = 1, and the game ends after the first move with the result of 11. Arrange the pebbles in 5 rows, two pebbles per row. Then c2 = 2, and the game continues. During the second move we have two pebbles which can be arranged in a unique way ( remember that you are not allowed to put all the pebbles in the same row! ) \u2014 2 rows, one pebble per row. c3 = 1, and the game ends with the result of 13. Finally, arrange the pebbles in two rows, five pebbles per row. The same logic leads us to c2 = 5, c3 = 1, and the game ends with the result of 16 \u2014 the maximum possible result.",
    "topics": [
      "number theory"
    ],
    "id": "177B1"
  },
  {
    "title": "Calendar Reform",
    "url": "https://codeforces.com/problemset/problem/172/D",
    "history": "Reforms have started in Berland again! At this time, the Parliament is discussing the reform of the calendar. To make the lives of citizens of Berland more varied, it was decided to change the calendar. As more and more people are complaining that \" the years fly by. . . \" , it was decided that starting from the next year the number of days per year will begin to grow. So the coming year will have exactly a days, the next after coming year will have a + 1 days, the next one will have a + 2 days and so on. This schedule is planned for the coming n years ( in the n- th year the length of the year will be equal a + n - 1 day) . No one has yet decided what will become of months. An MP Palevny made the following proposal. The calendar for each month is comfortable to be printed on a square sheet of paper. We are proposed to make the number of days in each month be the square of some integer. The number of days per month should be the same for each month of any year, but may be different for different years. The number of days in each year must be divisible by the number of days per month in this year. This rule ensures that the number of months in each year is an integer. The number of days per month for each year must be chosen so as to save the maximum amount of paper to print the calendars. In other words, the number of days per month should be as much as possible. These rules provide an unambiguous method for choosing the number of days in each month for any given year length. For example, according to Palevny' s proposition, a year that consists of 108 days will have three months, 36 days each. The year that consists of 99 days will have 11 months, 9 days each, and a year of 365 days will have 365 months, one day each. The proposal provoked heated discussion in the community, the famous mathematician Perelmanov quickly calculated that if the proposal is supported, then in a period of n years, beginning with the year that has a days, the country will spend p sheets of paper to print a set of calendars for these years. Perelmanov' s calculations take into account the fact that the set will contain one calendar for each year and each month will be printed on a separate sheet. Repeat Perelmanov' s achievement and print the required number p. You are given positive integers a and n. Perelmanov warns you that your program should not work longer than four seconds at the maximum test.",
    "input": "The only input line contains a pair of integers a, n ( 1 \u2264 a, n \u2264 107; a + n - 1 \u2264 107) .",
    "output": "Print the required number p. Please, do not use the",
    "note": "A note to the first sample test. A year of 25 days will consist of one month containing 25 days. A year of 26 days will consist of 26 months, one day each. A year of 27 days will have three months, 9 days each.",
    "topics": [
      "*special",
      "number theory"
    ],
    "id": "172D"
  },
  {
    "title": "Pseudorandom Sequence Period",
    "url": "https://codeforces.com/problemset/problem/172/B",
    "history": "Polycarpus has recently got interested in sequences of pseudorandom numbers. He learned that many programming languages generate such sequences in a similar way: ( for i \u2265 1) . Here a, b, m are constants, fixed for the given realization of the pseudorandom numbers generator, r0 is the so- called randseed ( this value can be set from the program using functions like RandSeed( r) or srand( n) ) , and denotes the operation of taking the remainder of division. For example, if a = 2, b = 6, m = 12, r0 = 11, the generated sequence will be: 4, 2, 10, 2, 10, 2, 10, 2, 10, 2, 10, . . . . Polycarpus realized that any such sequence will sooner or later form a cycle, but the cycle may occur not in the beginning, so there exist a preperiod and a period. The example above shows a preperiod equal to 1 and a period equal to 2. Your task is to find the period of a sequence defined by the given values of a, b, m and r0. Formally, you have to find such minimum positive integer t, for which exists such positive integer k, that for any i \u2265 k: ri = ri + t.",
    "input": "The single line of the input contains four integers a, b, m and r0 ( 1 \u2264 m \u2264 105, 0 \u2264 a, b \u2264 1000, 0 \u2264 r0 < m) , separated by single spaces.",
    "output": "Print a single integer \u2014 the period of the sequence.",
    "note": "The first sample is described above. In the second sample the sequence is ( starting from the first element) : 0, 3, 4, 1, 0, 3, 4, 1, 0, . . . In the third sample the sequence is ( starting from the first element) : 33, 24, 78, 78, 78, 78, . . .",
    "topics": [
      "*special",
      "implementation",
      "number theory"
    ],
    "id": "172B"
  },
  {
    "title": "ucyhf",
    "url": "https://codeforces.com/problemset/problem/171/F",
    "history": "qd ucyhf yi q fhycu dkcruh mxeiu huluhiu yi q tyvvuhudj fhycu dkcruh. oekh jqia yi je vydt jxu djx ucyhf.",
    "input": "jxu ydfkj sediyiji ev q iydwbu ydjuwuh d ( 1 \u2264 d \u2264 11184) \u2014 jxu edu- rqiut ydtun ev jxu ucyhf je vydt.",
    "output": "ekjfkj q iydwbu dkcruh.",
    "note": "",
    "topics": [
      "*special",
      "brute force",
      "implementation",
      "number theory"
    ],
    "id": "171F"
  },
  {
    "title": "Ice Sculptures",
    "url": "https://codeforces.com/problemset/problem/158/D",
    "history": "The Berland University is preparing to celebrate the 256- th anniversary of its founding! A specially appointed Vice Rector for the celebration prepares to decorate the campus. In the center of the campus n ice sculptures were erected. The sculptures are arranged in a circle at equal distances from each other, so they form a regular n- gon. They are numbered in clockwise order with numbers from 1 to n. The site of the University has already conducted a voting that estimated each sculpture' s characteristic of ti \u2014 the degree of the sculpture' s attractiveness. The values of ti can be positive, negative or zero. When the university rector came to evaluate the work, he said that this might be not the perfect arrangement. He suggested to melt some of the sculptures so that: the remaining sculptures form a regular polygon ( the number of vertices should be between 3 and n) , the sum of the ti values of the remaining sculptures is maximized. Help the Vice Rector to analyze the criticism \u2014 find the maximum value of ti sum which can be obtained in this way. It is allowed not to melt any sculptures at all. The sculptures can not be moved.",
    "input": "The first input line contains an integer n ( 3 \u2264 n \u2264 20000) \u2014 the initial number of sculptures. The second line contains a sequence of integers t1, t2, . . . , tn, ti \u2014 the degree of the i- th sculpture' s attractiveness ( - 1000 \u2264 ti \u2264 1000) . The numbers on the line are separated by spaces.",
    "output": "Print the required maximum sum of the sculptures' attractiveness.",
    "note": "In the first sample it is best to leave every second sculpture, that is, leave sculptures with attractivenesses: 2, 4, 5 \u0438 3.",
    "topics": [
      "*special",
      "brute force",
      "number theory"
    ],
    "id": "158D"
  },
  {
    "title": "Colliders",
    "url": "https://codeforces.com/problemset/problem/154/B",
    "history": "By 2312 there were n Large Hadron Colliders in the inhabited part of the universe. Each of them corresponded to a single natural number from 1 to n. However, scientists did not know what activating several colliders simultaneously could cause, so the colliders were deactivated. In 2312 there was a startling discovery: a collider' s activity is safe if and only if all numbers of activated colliders are pairwise relatively prime to each other ( two numbers are relatively prime if their greatest common divisor equals 1) ! If two colliders with relatively nonprime numbers are activated, it will cause a global collapse. Upon learning this, physicists rushed to turn the colliders on and off and carry out all sorts of experiments. To make sure than the scientists' quickness doesn' t end with big trouble, the Large Hadron Colliders' Large Remote Control was created. You are commissioned to write the software for the remote ( well, you do not expect anybody to operate it manually, do you? ) . Initially, all colliders are deactivated. Your program receives multiple requests of the form \" activate/ deactivate the i- th collider\" . The program should handle requests in the order of receiving them. The program should print the processed results in the format described below. To the request of \" + i\" ( that is, to activate the i- th collider) , the program should print exactly one of the following responses: \" Success\" if the activation was successful. \" Already on\" , if the i- th collider was already activated before the request. \" Conflict with j\" , if there is a conflict with the j- th collider ( that is, the j- th collider is on, and numbers i and j are not relatively prime) . In this case, the i- th collider shouldn' t be activated. If a conflict occurs with several colliders simultaneously, you should print the number of any of them. The request of \" - i\" ( that is, to deactivate the i- th collider) , should receive one of the following responses from the program: \" Success\" , if the deactivation was successful. \" Already off\" , if the i- th collider was already deactivated before the request. You don' t need to print quotes in the output of the responses to the requests.",
    "input": "The first line contains two space- separated integers n and m ( 1 \u2264 n, m \u2264 105) \u2014 the number of colliders and the number of requests, correspondingly. Next m lines contain numbers of requests, one per line, in the form of either \" + i\" ( without the quotes) \u2014 activate the i- th collider, or \" - i\" ( without the quotes) \u2014 deactivate the i- th collider ( 1 \u2264 i \u2264 n) .",
    "output": "Print m lines \u2014 the results of executing requests in the above given format. The requests should be processed in the order, in which they are given in the input. Don' t forget that the responses to the requests should be printed without quotes.",
    "note": "Note that in the sample the colliders don' t turn on after the second and ninth requests. The ninth request could also receive response \" Conflict with 3\" .",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "154B"
  },
  {
    "title": "Win or Freeze",
    "url": "https://codeforces.com/problemset/problem/150/A",
    "history": "You can' t possibly imagine how cold our friends are this winter in Nvodsk! Two of them play the following game to warm up: initially a piece of paper has an integer q. During a move a player should write any integer number that is a non- trivial divisor of the last written number. Then he should run this number of circles around the hotel. Let us remind you that a number' s divisor is called non- trivial if it is different from one and from the divided number itself. The first person who can' t make a move wins as he continues to lie in his warm bed under three blankets while the other one keeps running. Determine which player wins considering that both players play optimally. If the first player wins, print any winning first move.",
    "input": "The first line contains the only integer q ( 1 \u2264 q \u2264 1013) . Please do not use the",
    "output": "In the first line print the number of the winning player ( 1 or 2) . If the first player wins then the second line should contain another integer \u2014 his first move ( if the first player can' t even make the first move, print 0) . If there are multiple solutions, print any of them.",
    "note": "Number 6 has only two non- trivial divisors: 2 and 3. It is impossible to make a move after the numbers 2 and 3 are written, so both of them are winning, thus, number 6 is the losing number. A player can make a move and write number 6 after number 30; 6, as we know, is a losing number. Thus, this move will bring us the victory.",
    "topics": [
      "games",
      "math",
      "number theory"
    ],
    "id": "150A"
  },
  {
    "title": "Pairs of Numbers",
    "url": "https://codeforces.com/problemset/problem/134/B",
    "history": "Let' s assume that we have a pair of numbers ( a, b) . We can get a new pair ( a + b, b) or ( a, a + b) from the given pair in a single step. Let the initial pair of numbers be ( 1, 1) . Your task is to find number k, that is, the least number of steps needed to transform ( 1, 1) into the pair where at least one number equals n.",
    "input": "The input contains the only integer n ( 1 \u2264 n \u2264 106) .",
    "output": "Print the only integer k.",
    "note": "The pair ( 1, 1) can be transformed into a pair containing 5 in three moves: ( 1, 1) \u2192 ( 1, 2) \u2192 ( 3, 2) \u2192 ( 5, 2) .",
    "topics": [
      "brute force",
      "dfs and similar",
      "math",
      "number theory"
    ],
    "id": "134B"
  },
  {
    "title": "Prime Permutation",
    "url": "https://codeforces.com/problemset/problem/123/A",
    "history": "You are given a string s, consisting of small Latin letters. Let' s denote the length of the string as | s| . The characters in the string are numbered starting from 1. Your task is to find out if it is possible to rearrange characters in string s so that for any prime number p \u2264 | s| and for any integer i ranging from 1 to | s| / p ( inclusive) the following condition was fulfilled sp = sp \u00d7 i. If the answer is positive, find one way to rearrange the characters.",
    "input": "The only line contains the initial string s, consisting of small Latin letters ( 1 \u2264 | s| \u2264 1000) .",
    "output": "If it is possible to rearrange the characters in the string so that the above- mentioned conditions were fulfilled, then print in the first line \" YES\" ( without the quotes) and print on the second line one of the possible resulting strings. If such permutation is impossible to perform, then print the single string \" NO\" .",
    "note": "In the first sample any of the six possible strings will do: \" abc\" , \" acb\" , \" bac\" , \" bca\" , \" cab\" or \" cba\" . In the second sample no letter permutation will satisfy the condition at p = 2 ( s2 = s4) . In the third test any string where character \" y\" doesn' t occupy positions 2, 3, 4, 6 will be valid.",
    "topics": [
      "implementation",
      "number theory",
      "strings"
    ],
    "id": "123A"
  },
  {
    "title": "Lucky Division",
    "url": "https://codeforces.com/problemset/problem/122/A",
    "history": "Petya loves lucky numbers. Everybody knows that lucky numbers are positive integers whose decimal representation contains only the lucky digits 4 and 7. For example, numbers 47, 744, 4 are lucky and 5, 17, 467 are not. Petya calls a number almost lucky if it could be evenly divided by some lucky number. Help him find out if the given number n is almost lucky.",
    "input": "The single line contains an integer n ( 1 \u2264 n \u2264 1000) \u2014 the number that needs to be checked.",
    "output": "In the only line print \" YES\" ( without the quotes) , if number n is almost lucky. Otherwise, print \" NO\" ( without the quotes) .",
    "note": "Note that all lucky numbers are almost lucky as any number is evenly divisible by itself. In the first sample 47 is a lucky number. In the second sample 16 is divisible by 4.",
    "topics": [
      "brute force",
      "number theory"
    ],
    "id": "122A"
  },
  {
    "title": "Lucky Permutation",
    "url": "https://codeforces.com/problemset/problem/121/C",
    "history": "Petya loves lucky numbers. Everybody knows that lucky numbers are positive integers whose decimal representation contains only the lucky digits 4 and 7. For example, numbers 47, 744, 4 are lucky and 5, 17, 467 are not. One day Petya dreamt of a lexicographically k- th permutation of integers from 1 to n. Determine how many lucky numbers in the permutation are located on the positions whose indexes are also lucky numbers.",
    "input": "The first line contains two integers n and k ( 1 \u2264 n, k \u2264 109) \u2014 the number of elements in the permutation and the lexicographical number of the permutation.",
    "output": "If the k- th permutation of numbers from 1 to n does not exist, print the single number \" - 1\" ( without the quotes) . Otherwise, print the answer to the problem: the number of such indexes i, that i and ai are both lucky numbers.",
    "note": "A permutation is an ordered set of n elements, where each integer from 1 to n occurs exactly once. The element of permutation in position with index i is denoted as ai ( 1 \u2264 i \u2264 n) . Permutation a is lexicographically smaller that permutation b if there is such a i ( 1 \u2264 i \u2264 n) , that ai < bi, and for any j ( 1 \u2264 j < i) aj = bj. Let' s make a list of all possible permutations of n elements and sort it in the order of lexicographical increasing. Then the lexicographically k- th permutation is the k- th element of this list of permutations. In the first sample the permutation looks like that: 1 2 3 4 6 7 5The only suitable position is 4. In the second sample the permutation looks like that: 2 1 3 4The only suitable position is 4.",
    "topics": [
      "brute force",
      "combinatorics",
      "number theory"
    ],
    "id": "121C"
  },
  {
    "title": "Very Interesting Game",
    "url": "https://codeforces.com/problemset/problem/117/B",
    "history": "In a very ancient country the following game was popular. Two people play the game. Initially first player writes a string s1, consisting of exactly nine digits and representing a number that does not exceed a. After that second player looks at s1 and writes a string s2, consisting of exactly nine digits and representing a number that does not exceed b. Here a and b are some given constants, s1 and s2 are chosen by the players. The strings are allowed to contain leading zeroes. If a number obtained by the concatenation ( joining together) of strings s1 and s2 is divisible by mod, then the second player wins. Otherwise the first player wins. You are given numbers a, b, mod. Your task is to determine who wins if both players play in the optimal manner. If the first player wins, you are also required to find the lexicographically minimum winning move.",
    "input": "The first line contains three integers a, b, mod ( 0 \u2264 a, b \u2264 109, 1 \u2264 mod \u2264 107) .",
    "output": "If the first player wins, print \" 1\" and the lexicographically minimum string s1 he has to write to win. If the second player wins, print the single number \" 2\" .",
    "note": "The lexical comparison of strings is performed by the < operator in modern programming languages. String x is lexicographically less than string y if exists such i ( 1 \u2264 i \u2264 9) , that xi < yi, and for any j ( 1 \u2264 j < i) xj = yj. These strings always have length 9.",
    "topics": [
      "brute force",
      "number theory"
    ],
    "id": "117B"
  },
  {
    "title": "Double Happiness",
    "url": "https://codeforces.com/problemset/problem/113/C",
    "history": "On the math lesson a teacher asked each pupil to come up with his own lucky numbers. As a fan of number theory Peter chose prime numbers. Bob was more original. He said that number t is his lucky number, if it can be represented as: t = a2 + b2, where a, b are arbitrary positive integers. Now, the boys decided to find out how many days of the interval [ l, r] ( l \u2264 r) are suitable for pair programming. They decided that the day i ( l \u2264 i \u2264 r) is suitable for pair programming if and only if the number i is lucky for Peter and lucky for Bob at the same time. Help the boys to find the number of such days.",
    "input": "The first line of the input contains integer numbers l, r ( 1 \u2264 l, r \u2264 3\u00b7108) .",
    "output": "In the only line print the number of days on the segment [ l, r] , which are lucky for Peter and Bob at the same time.",
    "note": "",
    "topics": [
      "brute force",
      "math",
      "number theory"
    ],
    "id": "113C"
  },
  {
    "title": "Petya and Divisors",
    "url": "https://codeforces.com/problemset/problem/111/B",
    "history": "Little Petya loves looking for numbers' divisors. One day Petya came across the following problem: You are given n queries in the form \" xi yi\" . For each query Petya should count how many divisors of number xi divide none of the numbers xi - yi, xi - yi + 1, . . . , xi - 1. Help him.",
    "input": "The first line contains an integer n ( 1 \u2264 n \u2264 105) . Each of the following n lines contain two space- separated integers xi and yi ( 1 \u2264 xi \u2264 105, 0 \u2264 yi \u2264 i - 1, where i is the query' s ordinal number; the numeration starts with 1) . If yi = 0 for the query, then the answer to the query will be the number of divisors of the number xi. In this case you do not need to take the previous numbers x into consideration.",
    "output": "For each query print the answer on a single line: the number of positive integers k such that",
    "note": "Let' s write out the divisors that give answers for the first 5 queries: 1) 1, 2, 4 2) 33) 54) 2, 65) 9, 18",
    "topics": [
      "binary search",
      "data structures",
      "number theory"
    ],
    "id": "111B"
  },
  {
    "title": "Lostborn",
    "url": "https://codeforces.com/problemset/problem/93/E",
    "history": "Igor K. very much likes a multiplayer role playing game WineAge II. Who knows, perhaps, that might be the reason for his poor performance at the university. As any person who plays the game, he is interested in equipping his hero with as good weapon and outfit as possible. One day, as he was reading the game' s forum yet again, he discovered a very interesting fact. As it turns out, each weapon in the game is characterised with k different numbers: a1, . . . , ak. They are called hit indicators and according to the game developers' plan they are pairwise coprime. The damage that is inflicted during a hit depends not only on the weapon' s characteristics, but also on the hero' s strength parameter. Thus, if the hero' s strength equals n, than the inflicted damage will be calculated as the number of numbers on the segment , that aren' t divisible by any hit indicator ai. Recently, having fulfilled another quest, Igor K. found a new Lostborn sword. He wants to know how much damage he will inflict upon his enemies if he uses it.",
    "input": "The first line contains two integers: n and k ( 1 \u2264 n \u2264 1013, 1 \u2264 k \u2264 100) . They are the indicator of Igor K' s hero' s strength and the number of hit indicators. The next line contains space- separated k integers ai ( 1 \u2264 ai \u2264 1000) . They are Lostborn sword' s hit indicators. The given k numbers are pairwise coprime.",
    "output": "Print the single number \u2014 the damage that will be inflicted by Igor K. ' s hero when he uses his new weapon. Please, do not use the",
    "note": "",
    "topics": [
      "dp",
      "math",
      "number theory"
    ],
    "id": "93E"
  },
  {
    "title": "Toy Army",
    "url": "https://codeforces.com/problemset/problem/84/A",
    "history": "The hero of our story, Valera, and his best friend Arcady are still in school, and therefore they spend all the free time playing turn- based strategy \" GAGA: Go And Go Again\" . The gameplay is as follows. There are two armies on the playing field each of which consists of n men ( n is always even) . The current player specifies for each of her soldiers an enemy' s soldier he will shoot ( a target) and then all the player' s soldiers shot simultaneously. This is a game world, and so each soldier shoots perfectly, that is he absolutely always hits the specified target. If an enemy soldier is hit, he will surely die. It may happen that several soldiers had been indicated the same target. Killed soldiers do not participate in the game anymore. The game \" GAGA\" consists of three steps: first Valera makes a move, then Arcady, then Valera again and the game ends. You are asked to calculate the maximum total number of soldiers that may be killed during the game.",
    "input": "The input data consist of a single integer n ( 2 \u2264 n \u2264 108, n is even) . Please note that before the game starts there are 2n soldiers on the fields.",
    "output": "Print a single number \u2014 a maximum total number of soldiers that could be killed in the course of the game in three turns.",
    "note": "The first sample test: 1) Valera' s soldiers 1 and 2 shoot at Arcady' s soldier 1. 2) Arcady' s soldier 2 shoots at Valera' s soldier 1. 3) Valera' s soldier 1 shoots at Arcady' s soldier 2. There are 3 soldiers killed in total: Valera' s soldier 1 and Arcady' s soldiers 1 and 2.",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "84A"
  },
  {
    "title": "Numbers",
    "url": "https://codeforces.com/problemset/problem/83/D",
    "history": "One quite ordinary day Valera went to school ( there' s nowhere else he should go on a week day) . In a maths lesson his favorite teacher Ms. Evans told students about divisors. Despite the fact that Valera loved math, he didn' t find this particular topic interesting. Even more, it seemed so boring that he fell asleep in the middle of a lesson. And only a loud ringing of a school bell could interrupt his sweet dream. Of course, the valuable material and the teacher' s explanations were lost. However, Valera will one way or another have to do the homework. As he does not know the new material absolutely, he cannot do the job himself. That' s why he asked you to help. You' re his best friend after all, you just cannot refuse to help. Valera' s home task has only one problem, which, though formulated in a very simple way, has not a trivial solution. Its statement looks as follows: if we consider all positive integers in the interval [ a; b] then it is required to count the amount of such numbers in this interval that their smallest divisor will be a certain integer k ( you do not have to consider divisor equal to one) . In other words, you should count the amount of such numbers from the interval [ a; b] , that are not divisible by any number between 2 and k - 1 and yet are divisible by k.",
    "input": "The first and only line contains three positive integers a, b, k ( 1 \u2264 a \u2264 b \u2264 2\u00b7109, 2 \u2264 k \u2264 2\u00b7109) .",
    "output": "Print on a single line the answer to the given problem.",
    "note": "Comments to the samples from the statement: In the first sample the answer is numbers 2, 4, 6, 8, 10. In the second one \u2014 15, 21In the third one there are no such numbers.",
    "topics": [
      "dp",
      "math",
      "number theory"
    ],
    "id": "83D"
  },
  {
    "title": "Beaver Game",
    "url": "https://codeforces.com/problemset/problem/78/C",
    "history": "Two beavers, Timur and Marsel, play the following game. There are n logs, each of exactly m meters in length. The beavers move in turns. For each move a beaver chooses a log and gnaws it into some number ( more than one) of equal parts, the length of each one is expressed by an integer and is no less than k meters. Each resulting part is also a log which can be gnawed in future by any beaver. The beaver that can' t make a move loses. Thus, the other beaver wins. Timur makes the first move. The players play in the optimal way. Determine the winner.",
    "input": "The first line contains three integers n, m, k ( 1 \u2264 n, m, k \u2264 109) .",
    "output": "Print \" Timur\" , if Timur wins, or \" Marsel\" , if Marsel wins. You should print everything without the quotes.",
    "note": "In the first sample the beavers only have one log, of 15 meters in length. Timur moves first. The only move he can do is to split the log into 3 parts each 5 meters in length. Then Marsel moves but he can' t split any of the resulting logs, as k = 4. Thus, the winner is Timur. In the second example the beavers have 4 logs 9 meters in length. Timur can' t split any of them, so that the resulting parts possessed the length of not less than 5 meters, that' s why he loses instantly.",
    "topics": [
      "dp",
      "games",
      "number theory"
    ],
    "id": "78C"
  },
  {
    "title": "Modified GCD",
    "url": "https://codeforces.com/problemset/problem/75/C",
    "history": "Well, here is another math class task. In mathematics, GCD is the greatest common divisor, and it' s an easy task to calculate the GCD between two positive integers. A common divisor for two positive numbers is a number which both numbers are divisible by. But your teacher wants to give you a harder task, in this task you have to find the greatest common divisor d between two integers a and b that is in a given range from low to high ( inclusive) , i. e. low \u2264 d \u2264 high. It is possible that there is no common divisor in the given range. You will be given the two integers a and b, then n queries. Each query is a range from low to high and you have to answer each query.",
    "input": "The first line contains two integers a and b, the two integers as described above ( 1 \u2264 a, b \u2264 109) . The second line contains one integer n, the number of queries ( 1 \u2264 n \u2264 104) . Then n lines follow, each line contains one query consisting of two integers, low and high ( 1 \u2264 low \u2264 high \u2264 109) .",
    "output": "Print n lines. The i- th of them should contain the result of the i- th query in the input. If there is no common divisor in the given range for any query, you should print - 1 as a result for this query.",
    "note": "",
    "topics": [
      "binary search",
      "number theory"
    ],
    "id": "75C"
  },
  {
    "title": "Chessboard Billiard",
    "url": "https://codeforces.com/problemset/problem/74/C",
    "history": "Let' s imagine: there is a chess piece billiard ball. Its movements resemble the ones of a bishop chess piece. The only difference is that when a billiard ball hits the board' s border, it can reflect from it and continue moving. More formally, first one of four diagonal directions is chosen and the billiard ball moves in that direction. When it reaches the square located on the board' s edge, the billiard ball reflects from it; it changes the direction of its movement by 90 degrees and continues moving. Specifically, having reached a corner square, the billiard ball is reflected twice and starts to move the opposite way. While it moves, the billiard ball can make an infinite number of reflections. At any square of its trajectory the billiard ball can stop and on that the move is considered completed. It is considered that one billiard ball a beats another billiard ball b if a can reach a point where b is located. You are suggested to find the maximal number of billiard balls, that pairwise do not beat each other and that can be positioned on a chessboard n \u00d7 m in size.",
    "input": "The first line contains two integers n and m ( 2 \u2264 n, m \u2264 106) .",
    "output": "Print a single number, the maximum possible number of billiard balls that do not pairwise beat each other. Please do not use the",
    "note": "",
    "topics": [
      "dfs and similar",
      "dsu",
      "graphs",
      "number theory"
    ],
    "id": "74C"
  },
  {
    "title": "Morrowindows",
    "url": "https://codeforces.com/problemset/problem/73/E",
    "history": "Vasya plays The Elder Trolls III: Morrowindows. He has a huge list of items in the inventory, however, there is no limits on the size of things. Vasya does not know the total amount of items but he is sure that are not more than x and not less than 2 items in his inventory. A new patch for the game appeared to view inventory in n different modes. Displaying in mode i is a partition of all inventory items on pages, each of which ( except for maybe the last one) shows exactly ai items. In addition, each mode shows how many pages bi is in a complete list. Great! Perhaps this information will be enough for Vasya to find the required number. Moreover, it is very interesting, what is the fewest number of modes in which Vasya can see inventory to determine the number of items in it? Vasya cannot use the information that was received while looking on inventory in some mode for selection of next actions. I. e. Vasya chooses some set of modes first, and then sees all the results and determines the size. Knowing the number of ai, x and assuming that Vasya is very smart, check whether he can uniquely determine the number of items in his inventory, and how many modes he will need to do that if he knows numbers ai, x and he is able to know number bi after viewing items in mode i.",
    "input": "The first line contains two integers n and x ( 0 \u2264 n \u2264 105, 2 \u2264 x \u2264 109) . The second line contains integers ai ( 1 \u2264 ai \u2264 109) . Some numbers among all ai may be equal.",
    "output": "Output the fewest amount of modes required to uniquely determine amount of items in the inventory. If there is no solution output - 1.",
    "note": "In the second example Vasya is not able to determine items count uniquely because 3 items, as well as 4 items, can be displayed on two pages.",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "73E"
  },
  {
    "title": "Round Table Knights",
    "url": "https://codeforces.com/problemset/problem/71/C",
    "history": "There are n knights sitting at the Round Table at an equal distance from each other. Each of them is either in a good or in a bad mood. Merlin, the wizard predicted to King Arthur that the next month will turn out to be particularly fortunate if the regular polygon can be found. On all vertices of the polygon knights in a good mood should be located. Otherwise, the next month will bring misfortunes. A convex polygon is regular if all its sides have same length and all his angles are equal. In this problem we consider only regular polygons with at least 3 vertices, i. e. only nondegenerated. On a picture below some examples of such polygons are present. Green points mean knights in a good mood. Red points mean ones in a bad mood. King Arthur knows the knights' moods. Help him find out if the next month will be fortunate or not.",
    "input": "The first line contains number n, which is the number of knights at the round table ( 3 \u2264 n \u2264 105) . The second line contains space- separated moods of all the n knights in the order of passing them around the table. \" 1\" means that the knight is in a good mood an \" 0\" means that he is in a bad mood.",
    "output": "Print \" YES\" without the quotes if the following month will turn out to be lucky. Otherwise, print \" NO\" .",
    "note": "",
    "topics": [
      "dp",
      "math",
      "number theory"
    ],
    "id": "71C"
  },
  {
    "title": "Irrational problem",
    "url": "https://codeforces.com/problemset/problem/68/A",
    "history": "Little Petya was given this problem for homework: You are given function ( here represents the operation of taking the remainder) . His task is to count the number of integers x in range [ a; b] with property f( x) = x. It is a pity that Petya forgot the order in which the remainders should be taken and wrote down only 4 numbers. Each of 24 possible orders of taking the remainder has equal probability of being chosen. For example, if Petya has numbers 1, 2, 3, 4 then he can take remainders in that order or first take remainder modulo 4, then modulo 2, 3, 1. There also are 22 other permutations of these numbers that represent orders in which remainder can be taken. In this problem 4 numbers wrote down by Petya will be pairwise distinct. Now it is impossible for Petya to complete the task given by teacher but just for fun he decided to find the number of integers with property that probability that f( x) = x is not less than 31. 4159265352718281828459045",
    "input": "First line of the input will contain 6 integers, separated by spaces: p1, p2, p3, p4, a, b ( 1 \u2264 p1, p2, p3, p4 \u2264 1000, 0 \u2264 a \u2264 b \u2264 31415) . It is guaranteed that numbers p1, p2, p3, p4 will be pairwise distinct.",
    "output": "Output the number of integers in the given range that have the given property.",
    "note": "",
    "topics": [
      "implementation",
      "number theory"
    ],
    "id": "68A"
  },
  {
    "title": "Petya and His Friends",
    "url": "https://codeforces.com/problemset/problem/66/D",
    "history": "Little Petya has a birthday soon. Due this wonderful event, Petya' s friends decided to give him sweets. The total number of Petya' s friends equals to n. Let us remind you the definition of the greatest common divisor: GCD( a1, . . . , ak) = d, where d represents such a maximal positive number that each ai ( 1 \u2264 i \u2264 k) is evenly divisible by d. At that, we assume that all ai' s are greater than zero. Knowing that Petya is keen on programming, his friends has agreed beforehand that the 1- st friend gives a1 sweets, the 2- nd one gives a2 sweets, . . . , the n- th one gives an sweets. At the same time, for any i and j ( 1 \u2264 i, j \u2264 n) they want the GCD( ai, aj) not to be equal to 1. However, they also want the following condition to be satisfied: GCD( a1, a2, . . . , an) = 1. One more: all the ai should be distinct. Help the friends to choose the suitable numbers a1, . . . , an.",
    "input": "The first line contains an integer n ( 2 \u2264 n \u2264 50) .",
    "output": "If there is no answer, print \" - 1\" without quotes. Otherwise print a set of n distinct positive numbers a1, a2, . . . , an. Each line must contain one number. Each number must consist of not more than 100 digits, and must not contain any leading zeros. If there are several solutions to that problem, print any of them. Do not forget, please, that all of the following conditions must be true: For every i and j ( 1 \u2264 i, j \u2264 n) : GCD( ai, aj) = \u0338 1 GCD( a1, a2, . . . , an) = 1 For every i and j ( 1 \u2264 i, j \u2264 n, i = \u0338 j) : ai = \u0338 aj Please, do not use",
    "note": "",
    "topics": [
      "constructive algorithms",
      "math",
      "number theory"
    ],
    "id": "66D"
  },
  {
    "title": "Prime Segment",
    "url": "https://codeforces.com/problemset/problem/64/E",
    "history": "Positive integer number x is called prime, if it has exactly two positive integer divisors. For example, 2, 3, 17, 97 are primes, but 1, 10, 120 are not. You are given an integer number n, find the shortest segment [ a, b] , which contains n ( i. e. a \u2264 n \u2264 b) and a, b are primes.",
    "input": "The only given line contains an integer number n ( 2 \u2264 n \u2264 10000) .",
    "output": "Print the space separated pair of the required numbers a, b.",
    "note": "",
    "topics": [
      "*special",
      "brute force",
      "math",
      "number theory"
    ],
    "id": "64E"
  },
  {
    "title": "Fortune Telling",
    "url": "https://codeforces.com/problemset/problem/59/B",
    "history": "Marina loves Sasha. But she keeps wondering whether Sasha loves her. Of course, the best way to know it is fortune telling. There are many ways of telling fortune, but Marina has picked the easiest one. She takes in her hand one or several camomiles and tears off the petals one by one. After each petal she pronounces alternatively \" Loves\" and \" Doesn' t love\" , at that Marina always starts with \" Loves\" . There are n camomiles growing in the field, possessing the numbers of petals equal to a1, a2, . . . an. Marina wants to pick a bouquet with the maximal possible total number of petals so that the result would still be \" Loves\" . Help her do that; find the maximal number of petals possible in the bouquet.",
    "input": "The first line contains an integer n ( 1 \u2264 n \u2264 100) , which is the number of flowers growing in the field. The second line contains n integers ai ( 1 \u2264 ai \u2264 100) which represent the number of petals on a given i- th camomile.",
    "output": "Print a single number which is the maximal number of petals in the bouquet, the fortune telling on which would result in \" Loves\" . If there are no such bouquet, print 0 instead. The bouquet may consist of a single flower.",
    "note": "",
    "topics": [
      "implementation",
      "number theory"
    ],
    "id": "59B"
  },
  {
    "title": "Beautiful numbers",
    "url": "https://codeforces.com/problemset/problem/55/D",
    "history": "Volodya is an odd boy and his taste is strange as well. It seems to him that a positive integer number is beautiful if and only if it is divisible by each of its nonzero digits. We will not argue with this and just count the quantity of beautiful numbers in given ranges.",
    "input": "The first line of the input contains the number of cases t ( 1 \u2264 t \u2264 10) . Each of the next t lines contains two natural numbers li and ri ( 1 \u2264 li \u2264 ri \u2264 9 \u00b71018) . Please, do not use",
    "output": "Output should contain t numbers \u2014 answers to the queries, one number per line \u2014 quantities of beautiful numbers in given intervals ( from li to ri, inclusively) .",
    "note": "",
    "topics": [
      "dp",
      "number theory"
    ],
    "id": "55D"
  },
  {
    "title": "Prime Problem",
    "url": "https://codeforces.com/problemset/problem/45/G",
    "history": "In Berland prime numbers are fashionable \u2014 the respectable citizens dwell only on the floors with numbers that are prime numbers. The numismatists value particularly high the coins with prime nominal values. All the prime days are announced holidays! Yet even this is not enough to make the Berland people happy. On the main street of the capital stand n houses, numbered from 1 to n. The government decided to paint every house a color so that the sum of the numbers of the houses painted every color is a prime number. However it turned out that not all the citizens approve of this decision \u2014 many of them protest because they don' t want many colored houses on the capital' s main street. That' s why it is decided to use the minimal possible number of colors. The houses don' t have to be painted consecutively, but every one of n houses should be painted some color. The one- colored houses should not stand consecutively, any way of painting is acceptable. There are no more than 5 hours left before the start of painting, help the government find the way when the sum of house numbers for every color is a prime number and the number of used colors is minimal.",
    "input": "The single input line contains an integer n ( 2 \u2264 n \u2264 6000) \u2014 the number of houses on the main streets of the capital.",
    "output": "Print the sequence of n numbers, where the i- th number stands for the number of color for house number i. Number the colors consecutively starting from 1. Any painting order is allowed. If there are several solutions to that problem, print any of them. If there' s no such way of painting print the single number - 1.",
    "note": "",
    "topics": [
      "number theory"
    ],
    "id": "45G"
  },
  {
    "title": "Number With The Given Amount Of Divisors",
    "url": "https://codeforces.com/problemset/problem/27/E",
    "history": "Given the number n, find the smallest positive integer which has exactly n divisors. It is guaranteed that for the given n the answer will not exceed 1018.",
    "input": "The first line of the input contains integer n ( 1 \u2264 n \u2264 1000) .",
    "output": "Output the smallest positive integer with exactly n divisors.",
    "note": "",
    "topics": [
      "brute force",
      "dp",
      "number theory"
    ],
    "id": "27E"
  },
  {
    "title": "Almost Prime",
    "url": "https://codeforces.com/problemset/problem/26/A",
    "history": "A number is called almost prime if it has exactly two distinct prime divisors. For example, numbers 6, 18, 24 are almost prime, while 4, 8, 9, 42 are not. Find the amount of almost prime numbers which are between 1 and n, inclusive.",
    "input": "Input contains one integer number n ( 1 \u2264 n \u2264 3000) .",
    "output": "Output the amount of almost prime numbers between 1 and n, inclusive.",
    "note": "",
    "topics": [
      "number theory"
    ],
    "id": "26A"
  },
  {
    "title": "Notepad",
    "url": "https://codeforces.com/problemset/problem/17/D",
    "history": "Nick is attracted by everything unconventional. He doesn' t like decimal number system any more, and he decided to study other number systems. A number system with base b caught his attention. Before he starts studying it, he wants to write in his notepad all the numbers of length n without leading zeros in this number system. Each page in Nick' s notepad has enough space for c numbers exactly. Nick writes every suitable number only once, starting with the first clean page and leaving no clean spaces. Nick never writes number 0 as he has unpleasant memories about zero divide. Would you help Nick find out how many numbers will be written on the last page.",
    "input": "The only input line contains three space- separated integers b, n and c ( 2 \u2264 b < 10106, 1 \u2264 n < 10106, 1 \u2264 c \u2264 109) . You may consider that Nick has infinite patience, endless amount of paper and representations of digits as characters. The numbers doesn' t contain leading zeros.",
    "output": "In the only line output the amount of numbers written on the same page as the last number.",
    "note": "In both samples there are exactly 4 numbers of length 3 in binary number system. In the first sample Nick writes 3 numbers on the first page and 1 on the second page. In the second sample all the 4 numbers can be written on the first page.",
    "topics": [
      "number theory"
    ],
    "id": "17D"
  },
  {
    "title": "Noldbach problem",
    "url": "https://codeforces.com/problemset/problem/17/A",
    "history": "Nick is interested in prime numbers. Once he read about Goldbach problem. It states that every even integer greater than 2 can be expressed as the sum of two primes. That got Nick' s attention and he decided to invent a problem of his own and call it Noldbach problem. Since Nick is interested only in prime numbers, Noldbach problem states that at least k prime numbers from 2 to n inclusively can be expressed as the sum of three integer numbers: two neighboring prime numbers and 1. For example, 19 = 7 + 11 + 1, or 13 = 5 + 7 + 1. Two prime numbers are called neighboring if there are no other prime numbers between them. You are to help Nick, and find out if he is right or wrong.",
    "input": "The first line of the input contains two integers n ( 2 \u2264 n \u2264 1000) and k ( 0 \u2264 k \u2264 1000) .",
    "output": "Output YES if at least k prime numbers from 2 to n inclusively can be expressed as it was described above. Otherwise output NO.",
    "note": "In the first sample the answer is YES since at least two numbers can be expressed as it was described ( for example, 13 and 19) . In the second sample the answer is NO since it is impossible to express 7 prime numbers from 2 to 45 in the desired form.",
    "topics": [
      "brute force",
      "math",
      "number theory"
    ],
    "id": "17A"
  },
  {
    "title": "Monitor",
    "url": "https://codeforces.com/problemset/problem/16/C",
    "history": "Reca company makes monitors, the most popular of their models is AB999 with the screen size a \u00d7 b centimeters. Because of some production peculiarities a screen parameters are integer numbers. Recently the screen sides ratio x: y became popular with users. That' s why the company wants to reduce monitor AB999 size so that its screen sides ratio becomes x: y, at the same time they want its total area to be maximal of all possible variants. Your task is to find the screen parameters of the reduced size model, or find out that such a reduction can' t be performed.",
    "input": "The first line of the input contains 4 integers \u2014 a, b, x and y ( 1 \u2264 a, b, x, y \u2264 2\u00b7109) .",
    "output": "If the answer exists, output 2 positive integers \u2014 screen parameters of the reduced size model. Output 0 0 otherwise.",
    "note": "",
    "topics": [
      "binary search",
      "number theory"
    ],
    "id": "16C"
  },
  {
    "title": "Digital Root",
    "url": "https://codeforces.com/problemset/problem/10/C",
    "history": "Not long ago Billy came across such a problem, where there were given three natural numbers A, B and C from the range [ 1, N] , and it was asked to check whether the equation AB = C is correct. Recently Billy studied the concept of a digital root of a number. We should remind you that a digital root d( x) of the number x is the sum s( x) of all the digits of this number, if s( x) \u2264 9, otherwise it is d( s( x) ) . For example, a digital root of the number 6543 is calculated as follows: d( 6543) = d( 6 + 5 + 4 + 3) = d( 18) = 9. Billy has counted that the digital root of a product of numbers is equal to the digital root of the product of the factors' digital roots, i. e. d( xy) = d( d( x) d( y) ) . And the following solution to the problem came to his mind: to calculate the digital roots and check if this condition is met. However, Billy has doubts that this condition is sufficient. That' s why he asks you to find out the amount of test examples for the given problem such that the algorithm proposed by Billy makes mistakes.",
    "input": "The first line contains the only number N ( 1 \u2264 N \u2264 106) .",
    "output": "Output one number \u2014 the amount of required A, B and C from the range [ 1, N] .",
    "note": "For the first sample the required triples are ( 3, 4, 3) and ( 4, 3, 3) .",
    "topics": [
      "number theory"
    ],
    "id": "10C"
  },
  {
    "title": "Line",
    "url": "https://codeforces.com/problemset/problem/7/C",
    "history": "A line on the plane is described by an equation Ax + By + C = 0. You are to find any point on this line, whose coordinates are integer numbers from - 5\u00b71018 to 5\u00b71018 inclusive, or to find out that such points do not exist.",
    "input": "The first line contains three integers A, B and C ( - 2\u00b7109 \u2264 A, B, C \u2264 2\u00b7109) \u2014 corresponding coefficients of the line equation. It is guaranteed that A2 + B2 > 0.",
    "output": "If the required point exists, output its coordinates, otherwise output - 1.",
    "note": "",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "7C"
  }
]