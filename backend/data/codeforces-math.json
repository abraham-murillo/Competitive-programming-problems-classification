[
  {
    "title": "Game of the Year",
    "url": "https://codeforces.com/problemset/problem/1783/E",
    "history": "Monocarp and Polycarp are playing a computer game. This game features n bosses for the playing to kill, numbered from 1 to n . They will fight each boss the following way: Monocarp makes k attempts to kill the boss; Polycarp makes k attempts to kill the boss; Monocarp makes k attempts to kill the boss; Polycarp makes k attempts to kill the boss; . . . Monocarp kills the i - th boss on his a_ i - th attempt. Polycarp kills the i - th boss on his b_ i - th attempt. After one of them kills the i - th boss, they move on to the ( i+ 1) - st boss. The attempt counters reset for both of them. Once one of them kills the n - th boss, the game ends. Find all values of k from 1 to n such that Monocarp kills all bosses.",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of testcases. The first line of each testcase contains a single integer n ( 1 \u2264 n \u2264 2 \u00b7 10^ 5 ) \u2014 the number of bosses. The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 n ) \u2014 the index of attempt Monocarp kills each boss on. The third line contains n integers b_ 1, b_ 2, . . . , b_ n ( 1 \u2264 b_ i \u2264 n ) \u2014 the index of attempt Polycarp kills each boss on. The sum of n over all testcases doesn' t exceed 2 \u00b7 10^ 5 .",
    "output": "For each testcase, print two lines. The first line should contain a single integer cnt \u2014 the number of values of k from 1 to n such that Monocarp kills all bosses. The second line should contain cnt distinct integers \u2014 the values of k themselves.",
    "note": "Consider the last testcase of the example. Let k = 1 . First, Monocarp makes one attempt to kill the first boss. It' s successful, since a_ 1 = 1 . Then, Monocarp makes one attempt to kill the second boss. It' s unsuccessful, since a_ 2 > 1 . So, Polycarp makes an attempt then. It' s also unsuccessful, since b_ 2 > 1 . Then, Monocarp makes another attempt. It' s still unsuccessful, since a_ 2 > 2 . This goes on until Polycarp finally kills the boss on his third attempt. Monocarp didn' t kill this boss, thus, k = 1 isn' t the answer. Let k = 2 . Monocarp still kills the first boss on his first attempt. Then, he makes two unsuccessful attempts for the second boss. Then, Polycarp makes two unsuccessful attempts. Then, Monocarp makes two more attempts and kills the boss on his fourth attempt. The third boss is similar. First, two unsuccessful attempts by Monocarp. Then, two unsuccessful attempts by Polycarp. Then, Monocarp has two more attempts, but even his first one is successful, since a_ 3 = 3 . The fourth boss is also killed by Monocarp. Thus, k = 2 is the answer.",
    "topics": [
      "brute force",
      "data structures",
      "math",
      "number theory"
    ],
    "id": "1783E"
  },
  {
    "title": "Matrix of Differences",
    "url": "https://codeforces.com/problemset/problem/1783/B",
    "history": "For a square matrix of integers of size n \u00d7 n , let' s define its beauty as follows: for each pair of side- adjacent elements x and y , write out the number | x- y| , and then find the number of different numbers among them. For example, for the matrix [ 1 3; 4 2 ] the numbers we consider are | 1- 3| = 2 , | 1- 4| = 3 , | 3- 2| = 1 and | 4- 2| = 2 ; there are 3 different numbers among them ( 2 , 3 and 1 ) , which means that its beauty is equal to 3 . You are given an integer n . You have to find a matrix of size n \u00d7 n , where each integer from 1 to n^ 2 occurs exactly once, such that its beauty is the maximum possible among all such matrices.",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 49 ) \u2013 the number of test cases. The first ( and only) line of each test case contains a single integer n ( 2 \u2264 n \u2264 50 ) .",
    "output": "For each test case, print n rows of n integers \u2014 a matrix of integers of size n \u00d7 n , where each number from 1 to n^ 2 occurs exactly once, such that its beauty is the maximum possible among all such matrices. If there are multiple answers, print any of them.",
    "note": "",
    "topics": [
      "constructive algorithms",
      "math"
    ],
    "id": "1783B"
  },
  {
    "title": "Make it Beautiful",
    "url": "https://codeforces.com/problemset/problem/1783/A",
    "history": "An array a is called ugly if it contains at least one element which is equal to the sum of all elements before it. If the array is not ugly, it is beautiful. For example: the array [ 6, 3, 9, 6] is ugly: the element 9 is equal to 6 + 3 ; the array [ 5, 5, 7] is ugly: the element 5 ( the second one) is equal to 5 ; the array [ 8, 4, 10, 14] is beautiful: 8 0 , 4 8 , 10 8 + 4 , 14 8 + 4 + 10 , so there is no element which is equal to the sum of all elements before it. You are given an array a such that 1 \u2264 a_ 1 \u2264 a_ 2 \u2264. . . \u2264 a_ n \u2264 100 . You have to reorder the elements of a in such a way that the resulting array is beautiful. Note that you are not allowed to insert new elements or erase existing ones, you can only change the order of elements of a . You are allowed to keep the array a unchanged, if it is beautiful.",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 2000 ) \u2014 the number of test cases. Each test case consists of two lines. The first line contains one integer n ( 2 \u2264 n \u2264 50 ) . The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ 1 \u2264 a_ 2 \u2264. . . \u2264 a_ n \u2264 100 ) .",
    "output": "For each test case, print the answer as follows: if it is impossible to reorder the elements of a in such a way that it becomes beautiful, print NO; otherwise, in the first line, print YES. In the second line, print n integers \u2014 any beautiful array which can be obtained from a by reordering its elements. If there are multiple such arrays, print any of them.",
    "note": "",
    "topics": [
      "constructive algorithms",
      "math",
      "sortings"
    ],
    "id": "1783A"
  },
  {
    "title": "Bracket Insertion",
    "url": "https://codeforces.com/problemset/problem/1781/F",
    "history": "Vika likes playing with bracket sequences. Today she wants to create a new bracket sequence using the following algorithm. Initially, Vika' s sequence is an empty string, and then she will repeat the following actions n times: Choose a place in the current bracket sequence to insert new brackets uniformly at random. If the length of the current sequence is k , then there are k+ 1 such places: before the first bracket, between the first and the second brackets, . . . , after the k - th bracket. In particular, there is one such place in an empty bracket sequence. Choose string \" ( ) \" with probability p or string \" ) ( \" with probability 1 - p and insert it into the chosen place. The length of the bracket sequence will increase by 2 . A bracket sequence is called regular if it is possible to obtain a correct arithmetic expression by inserting characters ' + ' and ' 1' into it. For example, sequences \" ( ( ) ) ( ) \" , \" ( ) \" , and \" ( ( ) ( ( ) ) ) \" are regular, while \" ) ( \" , \" ( ( ) \" , and \" ( ( ) ) ) ( \" are not. Vika wants to know the probability that her bracket sequence will be a regular one at the end. Help her and find this probability modulo 998 244 353 ( see Output section) .",
    "input": "The only line contains two integers n and q ( 1 \u2264 n \u2264 500 ; 0 \u2264 q \u2264 10^ 4 ) . Here n is equal to the number of bracket insertion operations, and the probability that Vika chooses string \" ( ) \" on every step of the algorithm is equal to p = q \u00b7 10^ - 4 .",
    "output": "Print the probability that Vika' s final bracket sequence will be regular, modulo 998 244 353 . Formally, let M = 998 244 353 . It can be shown that the answer can be expressed as an irreducible fraction p/ q , where p and q are integers and q \u2261\u03380 M . Output the integer equal to p \u00b7 q^ - 1 M . In other words, output such an integer x that 0 \u2264 x < M and x \u00b7 q \u2261 p M .",
    "note": "In the first example, Vika will get a regular bracket sequence ( ) with probability p = 3/ 4 , and she will get an irregular bracket sequence ) ( with probability 1 - p = 1/ 4 . The sought probability is 3/ 4 , and 249 561 089 \u00b7 4 \u2261 3 998 244 353 . In the second example, the sought probability is 11/ 25 .",
    "topics": [
      "combinatorics",
      "dp",
      "math",
      "trees"
    ],
    "id": "1781F"
  },
  {
    "title": "Many Perfect Squares",
    "url": "https://codeforces.com/problemset/problem/1781/D",
    "history": "You are given a set a_ 1, a_ 2, . . . , a_ n of distinct positive integers. We define the squareness of an integer x as the number of perfect squares among the numbers a_ 1 + x, a_ 2 + x, . . . , a_ n + x . Find the maximum squareness among all integers x between 0 and 10^ 18 , inclusive. Perfect squares are integers of the form t^ 2 , where t is a non- negative integer. The smallest perfect squares are 0, 1, 4, 9, 16, . . . .",
    "input": "Each test contains multiple test cases. The first line contains the number of test cases t ( 1 \u2264 t \u2264 50 ) . The description of the test cases follows. The first line of each test case contains a single integer n ( 1 \u2264 n \u2264 50 ) \u2014 the size of the set. The second line contains n distinct integers a_ 1, a_ 2, . . . , a_ n in increasing order ( 1 \u2264 a_ 1 < a_ 2 < . . . < a_ n \u2264 10^ 9 ) \u2014 the set itself. It is guaranteed that the sum of n over all test cases does not exceed 50 .",
    "output": "For each test case, print a single integer \u2014 the largest possible number of perfect squares among a_ 1 + x, a_ 2 + x, . . . , a_ n + x , for some 0 \u2264 x \u2264 10^ 18 .",
    "note": "In the first test case, for x = 0 the set contains two perfect squares: 1 and 4 . It is impossible to obtain more than two perfect squares. In the second test case, for x = 3 the set looks like 4, 9, 16, 25, 100 , that is, all its elements are perfect squares.",
    "topics": [
      "brute force",
      "math",
      "number theory"
    ],
    "id": "1781D"
  },
  {
    "title": "Parallel Projection",
    "url": "https://codeforces.com/problemset/problem/1781/A",
    "history": "Vika' s house has a room in a shape of a rectangular parallelepiped ( also known as a rectangular cuboid) . Its floor is a rectangle of size w \u00d7 d , and the ceiling is right above at the constant height of h . Let' s introduce a coordinate system on the floor so that its corners are at points ( 0, 0) , ( w, 0) , ( w, d) , and ( 0, d) . A laptop is standing on the floor at point ( a, b) . A projector is hanging on the ceiling right above point ( f, g) . Vika wants to connect the laptop and the projector with a cable in such a way that the cable always goes along the walls, ceiling, or floor ( i. e. does not go inside the cuboid) . Additionally, the cable should always run parallel to one of the cuboid' s edges ( i. e. it can not go diagonally) . What is the minimum length of a cable that can connect the laptop to the projector? Illustration for the first test case. One of the optimal ways to put the cable is shown in green.",
    "input": "Each test contains multiple test cases. The first line contains the number of test cases t ( 1 \u2264 t \u2264 10^ 4 ) . The description of the test cases follows. The first line of each test case contains three integers w , d , and h ( 2 \u2264 w, d, h \u2264 1000 ) \u2014 the size of the room. The second line contains four integers a , b , f , g ( 0 < a, f < w ; 0 < b, g < d ) : the laptop is located on the floor at point ( a, b) , while the projector is hanging on the ceiling right above point ( f, g) .",
    "output": "For each test case, print a single integer \u2014 the minimum length of the cable connecting the laptop and the projector that runs only along the walls, floor, and ceiling parallel to cuboid' s edges.",
    "note": "The picture in the statement illustrates the first test case.",
    "topics": [
      "geometry",
      "math"
    ],
    "id": "1781A"
  },
  {
    "title": "MKnez's ConstructiveForces Task",
    "url": "https://codeforces.com/problemset/problem/1779/B",
    "history": "MKnez wants to construct an array s_ 1, s_ 2, . . . , s_ n satisfying the following conditions: Each element is an integer number different from 0 ; For each pair of adjacent elements their sum is equal to the sum of the whole array. More formally, s_ i = \u0338 0 must hold for each 1 \u2264 i \u2264 n . Moreover, it must hold that s_ 1 + s_ 2 + \u22ef + s_ n = s_ i + s_ i+ 1 for each 1 \u2264 i < n . Help MKnez to construct an array with these properties or determine that it does not exist.",
    "input": "Each test contains multiple test cases. The first line contains the number of test cases t ( 1 \u2264 t \u2264 100 ) . The description of the test cases follows. The only line of each test case contains a single integer n ( 2 \u2264 n \u2264 1000 ) \u2014 the length of the array.",
    "output": "For each test case, print \" YES\" if an array of length n satisfying the conditions exists. Otherwise, print \" NO\" . If the answer is \" YES\" , on the next line print a sequence s_ 1, s_ 2, . . . , s_ n satisfying the conditions. Each element should be a non- zero integer in the range [ - 5000, 5000] , i. e. - 5000 \u2264 s_ i \u2264 5000 and s_ i = \u0338 0 should hold for each 1 \u2264 i \u2264 n . It can be proved that if a solution exists then there also exists one which satisfies the additional constraints on the range. If there are several correct answers, print any of them.",
    "note": "In the first test case, [ 9, 5] is a valid answer since 9+ 5 ( the sum of the two adjacent elements s_ 1+ s_ 2 ) is equal to 9+ 5 ( the sum of all elements) . Other solutions include [ 6, - 9] , [ - 1, - 2] , [ - 5000, 5000] , . . . For the second test case, let us show why some arrays do not satisfy the constraints: [ 1, 1, 1] \u2014 s_ 1+ s_ 2 = 1+ 1 = 2 and s_ 1+ s_ 2+ s_ 3= 1+ 1+ 1 = 3 differ; [ 1, - 1, 1] \u2014 s_ 1+ s_ 2= 1+ ( - 1) = 0 and s_ 1+ s_ 2+ s_ 3= 1+ ( - 1) + 1 = 1 differ; [ 0, 0, 0] \u2014 The array s cannot contain a 0 . This is not a proof, but it can be shown that the answer is \" NO\" .",
    "topics": [
      "constructive algorithms",
      "math"
    ],
    "id": "1779B"
  },
  {
    "title": "Laboratory on Pluto",
    "url": "https://codeforces.com/problemset/problem/1775/F",
    "history": "As you know, Martian scientists are actively engaged in space research. One of the highest priorities is Pluto. In order to study this planet in more detail, it was decided to build a laboratory on Pluto. It is known that the lab will be built of n square blocks of equal size. For convenience, we will assume that Pluto' s surface is a plane divided by vertical and horizontal lines into unit squares. Each square is either occupied by a lab block or not, and only n squares are occupied. Since each block is square, it has four walls. If a wall is adjacent to another block, it is considered inside, otherwise \u2014 outside. Pluto is famous for its extremely cold temperatures, so the outside walls of the lab must be insulated. One unit of insulation per exterior wall would be required. Thus, the greater the total length of the outside walls of the lab ( i. e. , its perimeter) , the more insulation will be needed. Consider the lab layout in the figure below. It shows that the lab consists of n = 33 blocks, and all the blocks have a total of 24 outside walls, i. e. 24 units of insulation will be needed. You should build the lab optimally, i. e. , minimize the amount of insulation. On the other hand, there may be many optimal options, so scientists may be interested in the number of ways to build the lab using the minimum amount of insulation, modulo a prime number m . Two ways are considered the same if they are the same when overlapping without turning. Thus, if a lab plan is rotated by 90^ \u2218 , such a new plan can be considered a separate way. To help scientists explore Pluto, you need to write a program that solves these difficult problems.",
    "input": "The first line contains two integers t and u ( 1 \u2264 t \u2264 2\u00b7 10^ 5 , 1 \u2264 u \u2264 2 ) \u2014 the number of test cases and the test type. If u= 1 , you need to find any way to build the lab in an optimal way, and if u= 2 , you need to calculate the number of ways to do it. If u= 2 , then in the following line of input there is a prime integer m ( 10^ 8 \u2264 m \u2264 10^ 9 + 9 ) , modulo which you need to calculate the number of ways. Each of the following t lines of input contains a description of a test case consisting of one integer n ( 1 \u2264 n \u2264 4\u00b7 10^ 5 ) \u2014 the number of blocks the lab should consist of. It is guaranteed that if u= 1 , then the sum of n on all test cases does not exceed 8\u00b710^ 5 .",
    "output": "For each test case, output the answers in the format below, separating them with a newline. The output format depends on u in the input data. If u= 1 , in the first line you need to print two integers h and w \u2014the height and width of the area in which the lab should be built. Then, in each of the following h lines, you must output a line s_ i consisting of w characters \" # \" and \" . \" . If the j - th character of the row s_ i is \" # \" , then the corresponding square must contain a block of laboratory, otherwise, it is considered empty. Thus, we get a matrix of symbols. The condition must also be met that the first and last rows of the matrix, as well as the first and last columns, must have at least one character \" # \" , otherwise we could output the same lab layout, but with smaller h and w . If there are many options to build an optimal lab, you can print any of them. If u= 2 , you need to print two integers p and c \u2014 the number of outside walls in an optimal lab, and the remainder of the number of ways by prime modulo m .",
    "note": "Consider the second example. If n= 1 , the only way to build a lab is to place a single block. In this case, the perimeter will be equal to four. When n= 2 , you must place two blocks side by side. This can be done either vertically or horizontally, so there are two ways. It is easy to see that the lab has six outside walls in this case. For n= 7 , all the 22 optimal plans are shown in the picture below.",
    "topics": [
      "constructive algorithms",
      "dp",
      "greedy",
      "math"
    ],
    "id": "1775F"
  },
  {
    "title": "Friendly Spiders",
    "url": "https://codeforces.com/problemset/problem/1775/D",
    "history": "Mars is home to an unusual species of spiders \u2014 Binary spiders. Right now, Martian scientists are observing a colony of n spiders, the i - th of which has a_ i legs. Some of the spiders are friends with each other. Namely, the i - th and j - th spiders are friends if ( a_ i, a_ j) 1 , i. e. , there is some integer k \u2265 2 such that a_ i and a_ j are simultaneously divided by k without a remainder. Here ( x, y) denotes the greatest common divisor ( GCD) of integers x and y . Scientists have discovered that spiders can send messages. If two spiders are friends, then they can transmit a message directly in one second. Otherwise, the spider must pass the message to his friend, who in turn must pass the message to his friend, and so on until the message reaches the recipient. Let' s look at an example. Suppose a spider with eight legs wants to send a message to a spider with 15 legs. He can' t do it directly, because ( 8, 15) = 1 . But he can send a message through the spider with six legs because ( 8, 6) = 2 and ( 6, 15) = 3 . Thus, the message will arrive in two seconds. Right now, scientists are observing how the s - th spider wants to send a message to the t - th spider. The researchers have a hypothesis that spiders always transmit messages optimally. For this reason, scientists would need a program that could calculate the minimum time to send a message and also deduce one of the optimal routes.",
    "input": "The first line of input contains an integer n ( 2 \u2264 n \u2264 3\u00b710^ 5 ) \u2014 the number of spiders in the colony. The second line of input contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 3\u00b710^ 5 ) \u2014 the number of legs the spiders have. The third line of input contains two integers s and t ( 1 \u2264 s, t \u2264 n ) \u2014the spiders between which the message must be sent.",
    "output": "If it is impossible to transmit a message between the given pair of spiders, print - 1 . Otherwise, in the first line of the output print the integer t ( t \u2265 1 ) \u2014 the number of spiders that participate in the message transmission ( i. e. the minimum time of message delivery in seconds plus one) . In the second line, print t different integers b_ 1, b_ 2, . . . , b_ t ( 1 \u2264 b_ i \u2264 n ) \u2014 the ids of the spiders through which the message should follow, in order from sender to receiver. If there are several optimal routes for the message, output any of them.",
    "note": "The first example is shown above. It shows that the message from the 5 - th spider ( with eight legs) to the 6 - th spider ( with 15 legs) is optimal to pass through the 4 - th spider ( with six legs) . In the second example, the spider number 7 ( with 11 legs) is not friends with anyone, so it is impossible to send him a message.",
    "topics": [
      "dfs and similar",
      "graphs",
      "math",
      "number theory",
      "shortest paths"
    ],
    "id": "1775D"
  },
  {
    "title": "Interesting Sequence",
    "url": "https://codeforces.com/problemset/problem/1775/C",
    "history": "Petya and his friend, robot Petya+ + , like to solve exciting math problems. One day Petya+ + came up with the numbers n and x and wrote the following equality on the board: n & ( n+ 1) & . . . & m = x, where & denotes the bitwise AND operation. Then he suggested his friend Petya find such a minimal m ( m \u2265 n ) that the equality on the board holds. Unfortunately, Petya couldn' t solve this problem in his head and decided to ask for computer help. He quickly wrote a program and found the answer. Can you solve this difficult problem?",
    "input": "Each test contains multiple test cases. The first line contains the number of test cases t ( 1 \u2264 t \u2264 2000 ) . The description of the test cases follows. The only line of each test case contains two integers n , x ( 0\u2264 n, x \u2264 10^ 18 ) .",
    "output": "For every test case, output the smallest possible value of m such that equality holds. If the equality does not hold for any m , print - 1 instead. We can show that if the required m exists, it does not exceed 5 \u00b7 10^ 18 .",
    "note": "In the first example, 10 & 11 = 10 , but 10 & 11 & 12 = 8 , so the answer is 12 . In the second example, 10 = 10 , so the answer is 10 . In the third example, we can see that the required m does not exist, so we have to print - 1 .",
    "topics": [
      "bitmasks",
      "math"
    ],
    "id": "1775C"
  },
  {
    "title": "Coloring",
    "url": "https://codeforces.com/problemset/problem/1774/B",
    "history": "Cirno_ 9baka has a paper tape with n cells in a row on it. As he thinks that the blank paper tape is too dull, he wants to paint these cells with m kinds of colors. For some aesthetic reasons, he thinks that the i - th color must be used exactly a_ i times, and for every k consecutive cells, their colors have to be distinct. Help Cirno_ 9baka to figure out if there is such a way to paint the cells.",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 10 000 ) \u2014 the number of test cases. The description of test cases follows. The first line of each test case contains three integers n , m , k ( 1 \u2264 k \u2264 n \u2264 10^ 9 , 1 \u2264 m \u2264 10^ 5 , m \u2264 n ) . Here n denotes the number of cells, m denotes the number of colors, and k means that for every k consecutive cells, their colors have to be distinct. The second line of each test case contains m integers a_ 1, a_ 2, \u22ef , a_ m ( 1 \u2264 a_ i \u2264 n ) \u2014 the numbers of times that colors have to be used. It' s guaranteed that a_ 1 + a_ 2 + . . . + a_ m = n . It is guaranteed that the sum of m over all test cases does not exceed 10^ 5 .",
    "output": "For each test case, output \" YES\" if there is at least one possible coloring scheme; otherwise, output \" NO\" . You may print each letter in any case ( for example, \" YES\" , \" Yes\" , \" yes\" , and \" yEs\" will all be recognized as positive answers) .",
    "note": "In the first test case, there is no way to color the cells satisfying all the conditions. In the second test case, we can color the cells as follows: ( 1, 2, 1, 2, 3, 4, 3, 4, 5, 6, 5, 6) . For any 2 consecutive cells, their colors are distinct.",
    "topics": [
      "constructive algorithms",
      "greedy",
      "math"
    ],
    "id": "1774B"
  },
  {
    "title": "Add Plus Minus Sign",
    "url": "https://codeforces.com/problemset/problem/1774/A",
    "history": "AquaMoon has a string a consisting of only 0 and 1 . She wants to add + and - between all pairs of consecutive positions to make the absolute value of the resulting expression as small as possible. Can you help her?",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 2 000 ) \u2013 the number of test cases. The description of test cases follows. The first line of each test case contains a single integer n ( 2 \u2264 n \u2264 100 ) \u2014 the length of a . The second line of each test case contains a string a of length n , consisting of only 0 and 1 .",
    "output": "For each test case, output a string of length n - 1 consisting of - and + on a separate line. If there is more than one assignment of signs that produces the smallest possible absolute value, any of them is accepted.",
    "note": "In the first test case, we can get the expression 1 - 1 = 0 , with absolute value 0 . In the second test case, we can get the expression 0 + 1 - 1 + 0 + 1 = 1 , with absolute value 1 . In the third test case, we can get the expression 1 + 0 + 0 + 0 - 1 = 0 , with absolute value 0 .",
    "topics": [
      "constructive algorithms",
      "math"
    ],
    "id": "1774A"
  },
  {
    "title": "Jumbled Trees",
    "url": "https://codeforces.com/problemset/problem/1773/J",
    "history": "You are given an undirected connected graph with n vertices and m edges. Each edge has an associated counter, initially equal to 0 . In one operation, you can choose an arbitrary spanning tree and add any value v to all edges of this spanning tree. Determine if it' s possible to make every counter equal to its target value x_ i modulo prime p , and provide a sequence of operations that achieves it.",
    "input": "The first line contains three integers n , m , and p \u2014 the number of vertices, the number of edges, and the prime modulus ( 1 \u2264 n \u2264 500 ; 1 \u2264 m \u2264 1000 ; 2 \u2264 p \u2264 10^ 9 , p is prime) . Next m lines contain three integers u_ i , v_ i , x_ i each \u2014 the two endpoints of the i - th edge and the target value of that edge' s counter ( 1 \u2264 u_ i, v_ i \u2264 n ; 0 \u2264 x_ i < p ; u_ i = \u0338 v_ i ) . The graph is connected. There are no loops, but there may be multiple edges between the same two vertices.",
    "output": "If the target values on counters cannot be achieved, print - 1. Otherwise, print t \u2014 the number of operations, followed by t lines, describing the sequence of operations. Each line starts with integer v ( 0 \u2264 v < p ) \u2014 the counter increment for this operation. Then, in the same line, followed by n - 1 integers e_ 1 , e_ 2 , . . . e_ n - 1 ( 1 \u2264 e_ i \u2264 m ) \u2014 the edges of the spanning tree. The number of operations t should not exceed 2m . You don' t need to minimize t . Any correct answer within the 2m bound is accepted. You are allowed to repeat spanning trees.",
    "note": "",
    "topics": [
      "constructive algorithms",
      "math"
    ],
    "id": "1773J"
  },
  {
    "title": "Game of Questions",
    "url": "https://codeforces.com/problemset/problem/1773/G",
    "history": "Genie is taking part in an intellectual game. The game consists of n questions, and there are m participants numbered from 1 to m . Genie is the participant number 1 . For each question i and participant j , it is known whether the participant will answer the question correctly or not. The goal of the game is to be the last participant staying in the game. The game is conducted as follows. First, all n questions get shuffled uniformly at random ( all n! permutations are equally likely) . Then, the questions are asked one by one. Each participant answers the question. If all participants still in the game answer the question correctly, or if all of them answer the question incorrectly, nothing happens. Otherwise, those participants who answer the question incorrectly lose and leave the game. After all n questions are asked, all participants who are still in the game are declared to be the winners. What is the probability that Genie will win the game?",
    "input": "The first line contains two integers n and m \u2014 the number of questions and the number of participants ( 1 \u2264 n \u2264 2 \u00b7 10^ 5 ; 2 \u2264 m \u2264 17 ) . The i - th of the next n lines contains m characters s_ i, 1, s_ i, 2, . . . , s_ i, m . Character s_ i, j is ' 1' if participant j answers question i correctly or ' 0' otherwise.",
    "output": "Print the probability that Genie will win the game. Your answer will be considered correct if its absolute or relative error does not exceed 10^ - 9 .",
    "note": "In the first example, there is a single question and Genie will answer it correctly, thus winning the game ( along with participants 2 and 4 ) . In the second example, one participant will leave after the first asked question, and another participant will leave after the second asked question. Each participant will win with probability 1/ 3 .",
    "topics": [
      "bitmasks",
      "combinatorics",
      "dp",
      "fft",
      "math",
      "probabilities"
    ],
    "id": "1773G"
  },
  {
    "title": "Amazing Trick",
    "url": "https://codeforces.com/problemset/problem/1773/A",
    "history": "Alice is a magician and she creates a new trick. She has n cards with different numbers from 1 to n written on them. First, she asks an audience member to shuffle the deck and put cards in a row. Let' s say the i - th card from the left has the number a_ i on it. Then Alice picks two permutations p and q . There is a restriction on p and q \u2014 permutations can' t have fixed points. Which means \u2200 i: p_ i i and q_ i i . After permutations are chosen, Alice shuffles the cards according to them. Now the i - th card from the left is the card a[ p[ q[ i] ] . The trick is considered successful if i - th card from the left has the number i on it after the shuffles. Help Alice pick the permutations p and q or say it is not possible for the specific starting permutation a .",
    "input": "The first line of the input contains the number of tests t ( 1 \u2264 t \u2264 10^ 5 ) . Each test is described in two lines. The first line contains one integer n \u2014 the number of cards ( 1 \u2264 n \u2264 10^ 5 ) . The second line contains n integers a_ i \u2014 the initial permutation of the cards ( 1 \u2264 a_ i \u2264 n ; \u2200 i = \u0338 j: a_ i = \u0338 a_ j ) . It is guaranteed that the sum of n over all tests does not exceed 10^ 5 .",
    "output": "Print the answer for each test case in the same order the cases appear in the input. For each test case, print \" Impossible\" in a single line, if no solution exists. Otherwise, print \" Possible\" in the first line, and in the following two lines print permutations p and q .",
    "note": "",
    "topics": [
      "constructive algorithms",
      "graph matchings",
      "math",
      "probabilities"
    ],
    "id": "1773A"
  },
  {
    "title": "Gaining Rating",
    "url": "https://codeforces.com/problemset/problem/1772/G",
    "history": "Monocarp is playing chess on one popular website. He has n opponents he can play with. The i - th opponent has rating equal to a_ i . Monocarp' s initial rating is x . Monocarp wants to raise his rating to the value y ( y > x ) . When Monocarp is playing against one of the opponents, he will win if his current rating is bigger or equal to the opponent' s rating. If Monocarp wins, his rating is increased by 1 , otherwise it is decreased by 1 . The rating of his opponent does not change. Monocarp wants to gain rating y playing as few games as possible. But he can' t just grind it, playing against weak opponents. The website has a rule that you should play against all opponents as evenly as possible. Speaking formally, if Monocarp wants to play against an opponent i , there should be no other opponent j such that Monocarp has played more games against i than against j . Calculate the minimum possible number of games Monocarp needs to gain rating y or say it' s impossible. Note that ratings of Monocarp' s opponents don' t change, while Monocarp' s rating does change.",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. The first line of each test case contains three integers n , x and y ( 1 \u2264 n \u2264 2 \u00b7 10^ 5 ; 1 \u2264 x < y \u2264 10^ 12 ) \u2014 the number of Monocarp' s opponents, his initial and desired ratings. The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 12 ) \u2014 ratings of Monocarp' s opponents. Additional constraint on the input: the total sum of n over all t test cases doesn' t exceed 2 \u00b7 10^ 5 .",
    "output": "For each test case, print a single integer \u2014 the minimum number of games Monocarp needs to play to gain rating y , or - 1 if it' s impossible.",
    "note": "In the first test case, Monocarp can use the following strategy: Monocarp plays against the 2 - nd opponent to increase rating ( 2 \u2192 3 ) ; Monocarp plays against the 1 - st opponent to increase rating ( 3 \u2192 4 ) ; Monocarp plays against the 4 - th opponent to increase rating ( 4 \u2192 5 ) ; Monocarp plays against the 5 - th opponent to increase rating ( 5 \u2192 6 ) ; Now Monocarp have to play with remaining three opponents. So, he will lose 3 times and get rating 3 ( 6 \u2192 5 \u2192 4 \u2192 3 ) ; After that, Monocarp will repeat steps 1- 5 again. After 14 games, he has played twice with each opponent and get final rating 4 . Monocarp plays against the 1 - st opponent to increase rating ( 4 \u2192 5 ) ; Monocarp plays against the 2 - nd opponent to increase rating ( 5 \u2192 6 ) ; Monocarp plays against the 4 - th opponent to increase rating ( 6 \u2192 7 ) ; Monocarp plays against the 5 - th opponent to increase rating ( 7 \u2192 8 ) ; Monocarp plays against the 7 - th opponent to increase rating ( 8 \u2192 9 ) ; Monocarp plays against the 3 - rd opponent to increase rating ( 9 \u2192 10 ) ; In total, Monocarp, played twice against the 6 - th opponent and three times against other opponents and got rating 10 in 14 + 6 = 20 games. In the second test case, it can be proven that whichever games Monocarp plays, he can' t get his rating higher than 4 .",
    "topics": [
      "binary search",
      "greedy",
      "implementation",
      "math",
      "sortings",
      "two pointers"
    ],
    "id": "1772G"
  },
  {
    "title": "Absolute Sorting",
    "url": "https://codeforces.com/problemset/problem/1772/D",
    "history": "You are given an array a consisting of n integers. The array is sorted if a_ 1 \u2264 a_ 2 \u2264. . . \u2264 a_ n . You want to make the array a sorted by applying the following operation exactly once: choose an integer x , then for every i \u2208 [ 1, n] , replace a_ i by | a_ i - x| . Find any value of x that will make the array sorted, or report that there is no such value.",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 2 \u00b7 10^ 4 ) \u2014 the number of test cases. Each test case consists of two lines. The first line contains one integer n ( 2 \u2264 n \u2264 2 \u00b7 10^ 5 ) . The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 8 ) . Additional constraint on the input: the sum of n over all test cases does not exceed 2 \u00b7 10^ 5 .",
    "output": "For each test case, print any integer x ( 0 \u2264 x \u2264 10^ 9 ) that makes the array sorted. It can be shown that if such an integer x exists, there is at least one such integer between 0 and 10^ 9 . If there is no such integer, then print - 1 . If there are multiple suitable values of x , print any of them.",
    "note": "In the first test case, after using x = 4 , the array becomes [ 1, 1, 1, 1, 1] . In the third test case, after using x = 0 , the array becomes [ 1, 2, 3, 4, 5, 6, 7, 8] . In the fourth test case, after using x = 42 , the array becomes [ 32, 37, 38, 39, 40, 41] .",
    "topics": [
      "constructive algorithms",
      "math"
    ],
    "id": "1772D"
  },
  {
    "title": "Different Differences",
    "url": "https://codeforces.com/problemset/problem/1772/C",
    "history": "An array a consisting of k integers is strictly increasing if a_ 1 < a_ 2 < . . . < a_ k . For example, the arrays [ 1, 3, 5] , [ 1, 2, 3, 4] , [ 3, 5, 6] are strictly increasing; the arrays [ 2, 2] , [ 3, 7, 5] , [ 7, 4, 3] , [ 1, 2, 2, 3] are not. For a strictly increasing array a of k elements, let' s denote the characteristic as the number of different elements in the array [ a_ 2 - a_ 1, a_ 3 - a_ 2, . . . , a_ k - a_ k- 1] . For example, the characteristic of the array [ 1, 3, 4, 7, 8] is 3 since the array [ 2, 1, 3, 1] contains 3 different elements: 2 , 1 and 3 . You are given two integers k and n ( k \u2264 n ) . Construct an increasing array of k integers from 1 to n with maximum possible characteristic.",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 819 ) \u2014 the number of test cases. Each test case consists of one line containing two integers k and n ( 2 \u2264 k \u2264 n \u2264 40 ) .",
    "output": "For each test case, print k integers \u2014 the elements of the strictly increasing array a with the maximum possible characteristic. If there are multiple answers, print any of them.",
    "note": "",
    "topics": [
      "constructive algorithms",
      "greedy",
      "math"
    ],
    "id": "1772C"
  },
  {
    "title": "Hossam and Trainees",
    "url": "https://codeforces.com/problemset/problem/1771/C",
    "history": "Hossam has n trainees. He assigned a number a_ i for the i - th trainee. A pair of the i - th and j - th ( i = \u0338 j ) trainees is called successful if there is an integer x ( x \u2265 2 ) , such that x divides a_ i , and x divides a_ j . Hossam wants to know if there is a successful pair of trainees. Hossam is very tired now, so he asks you for your help!",
    "input": "The input consists of multiple test cases. The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 5 ) , the number of test cases. A description of the test cases follows. The first line of each test case contains an integer number n ( 2 \u2264 n \u2264 10^ 5 ) . The second line of each test case contains n integers, the number of each trainee a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 9 ) . It is guaranteed that the sum of n over all test cases does not exceed 10^ 5 .",
    "output": "Print the answer \u2014 \" YES\" ( without quotes) if there is a successful pair of trainees and \" NO\" otherwise. You can print each letter in any case.",
    "note": "In the first example, the first trainee and the second trainee make up a successful pair: a_ 1 = 32, a_ 2 = 48 , you can choose x = 4 .",
    "topics": [
      "greedy",
      "math",
      "number theory"
    ],
    "id": "1771C"
  },
  {
    "title": "Hossam and Combinatorics",
    "url": "https://codeforces.com/problemset/problem/1771/A",
    "history": "Hossam woke up bored, so he decided to create an interesting array with his friend Hazem. Now, they have an array a of n positive integers, Hossam will choose a number a_ i and Hazem will choose a number a_ j . Count the number of interesting pairs ( a_ i, a_ j) that meet all the following conditions: 1 \u2264 i, j \u2264 n ; i = \u0338 j ; The absolute difference | a_ i - a_ j| must be equal to the maximum absolute difference over all the pairs in the array. More formally, | a_ i - a_ j| = max_ 1 \u2264 p, q \u2264 n | a_ p - a_ q| .",
    "input": "The input consists of multiple test cases. The first line contains a single integer t ( 1 \u2264 t \u2264 100 ) , which denotes the number of test cases. Description of the test cases follows. The first line of each test case contains an integer n ( 2 \u2264 n \u2264 10^ 5 ) . The second line of each test case contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 5 ) . It is guaranteed that the sum of n over all test cases does not exceed 10^ 5 .",
    "output": "For each test case print an integer \u2014 the number of interesting pairs ( a_ i, a_ j) .",
    "note": "In the first example, the two ways are: Hossam chooses the fourth number 8 and Hazem chooses the fifth number 1 . Hossam chooses the fifth number 1 and Hazem chooses the fourth number 8 . In the second example, the four ways are: Hossam chooses the second number 2 and Hazem chooses the sixth number 10 . Hossam chooses the sixth number 10 and Hazem chooses the second number 2 . Hossam chooses the fifth number 2 and Hazem chooses the sixth number 10 . Hossam chooses the sixth number 10 and Hazem chooses the fifth number 2 .",
    "topics": [
      "combinatorics",
      "math",
      "sortings"
    ],
    "id": "1771A"
  },
  {
    "title": "Koxia and Bracket",
    "url": "https://codeforces.com/problemset/problem/1770/G",
    "history": "Chiyuu has a bracket sequence ^ \u2020 s of length n . Let k be the minimum number of characters that Chiyuu has to remove from s to make s balanced ^ . Now, Koxia wants you to count the number of ways to remove k characters from s so that s becomes balanced, modulo 998 244 353 . Note that two ways of removing characters are considered distinct if and only if the set of indices removed is different. ^ \u2020 A bracket sequence is a string containing only the characters \" ( \" and \" ) \" . ^ A bracket sequence is called balanced if one can turn it into a valid math expression by adding characters + and 1. For example, sequences ( ( ) ) ( ) , ( ) , ( ( ) ( ( ) ) ) and the empty string are balanced, while ) ( , ( ( ) , and ( ( ) ) ) ( are not.",
    "input": "The first line of input contains a string s ( 1 \u2264 | s| \u2264 5 \u00b710^ 5 ) \u2014 the bracket sequence. It is guaranteed that s only contains the characters \" ( \" and \" ) \" .",
    "output": "Output a single integer \u2014 the number of ways to remove k characters from s so that s becomes balanced, modulo 998 244 353 .",
    "note": "In the first test case, it can be proved that the minimum number of characters that Chiyuu has to remove is 2 . There are 4 ways to remove 2 characters to make s balanced as follows. Deleted characters are noted as red. , , , . In the second test case, the only way to make s balanced is by deleting the only character to get an empty bracket sequence, which is considered balanced.",
    "topics": [
      "divide and conquer",
      "fft",
      "math"
    ],
    "id": "1770G"
  },
  {
    "title": "Koxia and Sequence",
    "url": "https://codeforces.com/problemset/problem/1770/F",
    "history": "Mari has three integers n , x , and y . Call an array a of n non- negative integers good if it satisfies the following conditions: a_ 1+ a_ 2+ . . . + a_ n= x , and a_ 1 | a_ 2 | . . . | a_ n= y , where | denotes the bitwise OR operation. The score of a good array is the value of a_ 1 \u2295 a_ 2 \u2295. . . \u2295 a_ n , where \u2295 denotes the bitwise XOR operation. Koxia wants you to find the total bitwise XOR of the scores of all good arrays. If there are no good arrays, output 0 instead.",
    "input": "The first line of input contains three integers n , x and y ( 1 \u2264 n < 2^ 40 , 0 \u2264 x < 2^ 60 , 0 \u2264 y < 2^ 20 ) .",
    "output": "Output a single integer \u2014 the total bitwise XOR of the scores of all good arrays.",
    "note": "In the first test case, there are 12 good arrays totally as follows. [ 0, 2, 3] , [ 0, 3, 2] , [ 2, 0, 3] , [ 2, 3, 0] , [ 3, 0, 2] and [ 3, 2, 0] \u2014 the score is 0 \u2295 2 \u2295 3 = 1 ; [ 1, 2, 2] , [ 2, 1, 2] and [ 2, 2, 1] \u2014 the score is 1 \u2295 2 \u2295 2 = 1 ; [ 1, 1, 3] , [ 1, 3, 1] and [ 3, 1, 1] \u2014 the score is 1 \u2295 1 \u2295 3 = 3 . Therefore, the total bitwise xor of the scores is 1 \u2295. . . \u2295 1_ 9 times\u2295 3 \u2295 3 \u2295 3 = 2 . In the second test case, there are no good sequences. The output should be 0 .",
    "topics": [
      "bitmasks",
      "combinatorics",
      "dp",
      "math",
      "number theory"
    ],
    "id": "1770F"
  },
  {
    "title": "Koxia and Tree",
    "url": "https://codeforces.com/problemset/problem/1770/E",
    "history": "Imi has an undirected tree with n vertices where edges are numbered from 1 to n- 1 . The i - th edge connects vertices u_ i and v_ i . There are also k butterflies on the tree. Initially, the i - th butterfly is on vertex a_ i . All values of a are pairwise distinct. Koxia plays a game as follows: For i = 1, 2, . . . , n - 1 , Koxia set the direction of the i - th edge as u_ i \u2192 v_ i or v_ i \u2192 u_ i with equal probability. For i = 1, 2, . . . , n - 1 , if a butterfly is on the initial vertex of i - th edge and there is no butterfly on the terminal vertex, then this butterfly flies to the terminal vertex. Note that operations are sequentially in order of 1, 2, . . . , n - 1 instead of simultaneously. Koxia chooses two butterflies from the k butterflies with equal probability from all possible k( k- 1) / 2 ways to select two butterflies, then she takes the distance ^ \u2020 between the two chosen vertices as her score. Now, Koxia wants you to find the expected value of her score, modulo 998 244 353^ . ^ \u2020 The distance between two vertices on a tree is the number of edges on the ( unique) simple path between them. ^ Formally, let M = 998 244 353 . It can be shown that the answer can be expressed as an irreducible fraction p/ q , where p and q are integers and q \u2261\u03380 M . Output the integer equal to p \u00b7 q^ - 1 M . In other words, output such an integer x that 0 \u2264 x < M and x \u00b7 q \u2261 p M .",
    "input": "The first line contains two integers n , k ( 2 \u2264 k \u2264 n \u2264 3 \u00b710^ 5 ) \u2014 the size of the tree and the number of butterflies. The second line contains k integers a_ 1, a_ 2, . . . , a_ k ( 1 \u2264 a_ i \u2264 n ) \u2014 the initial position of butterflies. It' s guaranteed that all positions are distinct. The i - th line in following n \u2212 1 lines contains two integers u_ i , v_ i ( 1 \u2264 u_ i, v_ i \u2264 n , u_ i = \u0338 v_ i ) \u2014 the vertices the i - th edge connects. It is guaranteed that the given edges form a tree.",
    "output": "Output a single integer \u2014 the expected value of Koxia' s score, modulo 998 244 353 .",
    "note": "In the first test case, the tree is shown below. Vertices containing butterflies are noted as bold. There are only 2 butterflies so the choice of butterflies is fixed. Let' s consider the following 4 cases: Edges are 1 \u2192 2 and 2 \u2192 3 : butterfly on vertex 1 moves to vertex 2 , but butterfly on vertex 3 doesn' t move. The distance between vertices 2 and 3 is 1 . Edges are 1 \u2192 2 and 3 \u2192 2 : butterfly on vertex 1 moves to vertex 2 , but butterfly on vertex 3 can' t move to vertex 2 because it' s occupied. The distance between vertices 2 and 3 is 1 . Edges are 2 \u2192 1 and 2 \u2192 3 : butterflies on both vertex 1 and vertex 3 don' t move. The distance between vertices 1 and 3 is 2 . Edges are 2 \u2192 1 and 3 \u2192 2 : butterfly on vertex 1 doesn' t move, but butterfly on vertex 3 move to vertex 2 . The distance between vertices 1 and 2 is 1 . Therefore, the expected value of Koxia' s score is 1+ 1+ 2+ 1/ 4 = 5/ 4 , which is 748 683 266 after modulo 998 244 353 . In the second test case, the tree is shown below. Vertices containing butterflies are noted as bold. The expected value of Koxia' s score is 11/ 6 , which is 831 870 296 after modulo 998 244 353 .",
    "topics": [
      "combinatorics",
      "dfs and similar",
      "dp",
      "dsu",
      "math",
      "probabilities",
      "trees"
    ],
    "id": "1770E"
  },
  {
    "title": "Koxia and Number Theory",
    "url": "https://codeforces.com/problemset/problem/1770/C",
    "history": "Joi has an array a of n positive integers. Koxia wants you to determine whether there exists a positive integer x > 0 such that ( a_ i+ x, a_ j+ x) = 1 for all 1 \u2264 i < j \u2264 n . Here ( y, z) denotes the greatest common divisor ( GCD) of integers y and z .",
    "input": "Each test consists of multiple test cases. The first line contains a single integer t ( 1 \u2264 t \u2264 100 ) \u2014 the number of test cases. The description of test cases follows. The first line of each test case contains an integer n ( 2 \u2264 n \u2264 100 ) \u2014 the size of the array. The second line of each test case contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u226410^ 18 ) . It is guaranteed that the sum of n over all test cases does not exceed 1000 .",
    "output": "For each test case, output \" YES\" ( without quotes) if there exists a positive integer x such that ( a_ i+ x, a_ j+ x) = 1 for all 1 \u2264 i < j \u2264 n , and \" NO\" ( without quotes) otherwise. You can output the answer in any case ( upper or lower) . For example, the strings \" yEs\" , \" yes\" , \" Yes\" , and \" YES\" will be recognized as positive responses.",
    "note": "In the first test case, we can set x = 4 . This is valid because: When i= 1 and j= 2 , ( a_ i+ x, a_ j+ x) = ( 5+ 4, 7+ 4) = ( 9, 11) = 1 . When i= 1 and j= 3 , ( a_ i+ x, a_ j+ x) = ( 5+ 4, 10+ 4) = ( 9, 14) = 1 . When i= 2 and j= 3 , ( a_ i+ x, a_ j+ x) = ( 7+ 4, 10+ 4) = ( 11, 14) = 1 . In the second test case, any choice of x makes ( a_ 1 + x, a_ 2 + x) = ( 3+ x, 3+ x) = 3+ x . Therefore, no such x exists.",
    "topics": [
      "brute force",
      "chinese remainder theorem",
      "math",
      "number theory"
    ],
    "id": "1770C"
  },
  {
    "title": "\u041a\u043e\u043f\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0444\u0430\u0439\u043b\u043e\u0432 II",
    "url": "https://codeforces.com/problemset/problem/1769/B2",
    "history": "\u0412 \u044d\u0442\u043e\u0438\u0306 \u0432\u0435\u0440\u0441\u0438\u0438 \u0437\u0430\u0434\u0430\u0447\u0438 \u0440\u0430\u0437\u043c\u0435\u0440\u044b \u043a\u043e\u043f\u0438\u0440\u0443\u0435\u043c\u044b\u0445 \u0444\u0430\u0438\u0306\u043b\u043e\u0432 \u043d\u0435 \u043f\u0440\u0435\u0432\u044b\u0448\u0430\u044e\u0442 10^ 10 \u0431\u0430\u0438\u0306\u0442. \u0412\u044b \u043a\u043e\u043f\u0438\u0440\u0443\u0435\u0442\u0435 \u0441 \u043e\u0434\u043d\u043e\u0433\u043e \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u043d\u0430 \u0434\u0440\u0443\u0433\u043e\u0438\u0306 n \u0444\u0430\u0438\u0306\u043b\u043e\u0432 \u0440\u0430\u0437\u043c\u0435\u0440\u043e\u043c a_ 1, a_ 2, . . . , a_ n \u0431\u0430\u0438\u0306\u0442. \u0424\u0430\u0438\u0306\u043b\u044b \u043a\u043e\u043f\u0438\u0440\u0443\u044e\u0442\u0441\u044f \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0432 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u043c \u043f\u043e\u0440\u044f\u0434\u043a\u0435. \u041f\u0440\u0438 \u043a\u043e\u043f\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0438 \u0432\u044b \u0432\u0438\u0434\u0438\u0442\u0435 \u0434\u0432\u0430 \u043f\u0440\u043e\u0433\u0440\u0435\u0441\u0441- \u0431\u0430\u0440\u0430: \u043f\u0435\u0440\u0432\u044b\u0438\u0306 \u043f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442 \u043f\u0440\u043e\u0446\u0435\u043d\u0442 \u0441\u043a\u043e\u043f\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445 \u0432 \u0442\u0435\u043a\u0443\u0449\u0435\u043c \u0444\u0430\u0438\u0306\u043b\u0435, \u0430 \u0432\u0442\u043e\u0440\u043e\u0438\u0306 \u2014 \u043e\u0431\u0449\u0438\u0438\u0306 \u043f\u0440\u043e\u0446\u0435\u043d\u0442 \u0441\u043a\u043e\u043f\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445 \u043f\u043e \u0432\u0441\u0435\u043c n \u0444\u0430\u0438\u0306\u043b\u0430\u043c. \u041e\u0431\u0430 \u043f\u0440\u043e\u0446\u0435\u043d\u0442\u0430 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u044e\u0442\u0441\u044f \u043e\u043a\u0440\u0443\u0433\u043b\u0435\u0308\u043d\u043d\u044b\u043c\u0438 \u0432\u043d\u0438\u0437 \u0434\u043e \u0446\u0435\u043b\u043e\u0433\u043e \u0447\u0438\u0441\u043b\u0430. \u0417\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043d\u0430 \u043f\u0440\u043e\u0433\u0440\u0435\u0441\u0441- \u0431\u0430\u0440\u0430\u0445 \u043e\u0431\u043d\u043e\u0432\u043b\u044f\u044e\u0442\u0441\u044f \u043f\u043e\u0441\u043b\u0435 \u043a\u043e\u043f\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0431\u0430\u0438\u0306\u0442\u0430. \u0424\u043e\u0440\u043c\u0430\u043b\u044c\u043d\u043e, \u043f\u043e\u0441\u043b\u0435 \u043a\u043e\u043f\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0431\u0430\u0438\u0306\u0442\u0430 \u043d\u043e\u043c\u0435\u0440 x \u0438\u0437 \u0444\u0430\u0438\u0306\u043b\u0430 \u043d\u043e\u043c\u0435\u0440 i \u043f\u0435\u0440\u0432\u044b\u0438\u0306 \u043f\u0440\u043e\u0433\u0440\u0435\u0441\u0441- \u0431\u0430\u0440 \u043f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442 \u230a100 \u00b7 x/ a_ i\u230b \u043f\u0440\u043e\u0446\u0435\u043d\u0442\u043e\u0432, \u0430 \u0432\u0442\u043e\u0440\u043e\u0438\u0306 \u2014 \u230a100 \u00b7 ( a_ 1 + a_ 2 + . . . + a_ i - 1 + x) / a_ 1 + a_ 2 + . . . + a_ n\u230b \u043f\u0440\u043e\u0446\u0435\u043d\u0442\u043e\u0432. \u0412 \u0441\u0430\u043c\u043e\u043c \u043d\u0430\u0447\u0430\u043b\u0435 \u043a\u043e\u043f\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u043e\u0431\u0430 \u043f\u0440\u043e\u0433\u0440\u0435\u0441\u0441- \u0431\u0430\u0440\u0430 \u043f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u044e\u0442 0 \u043f\u0440\u043e\u0446\u0435\u043d\u0442\u043e\u0432. \u041d\u0430\u0438\u0306\u0434\u0438\u0442\u0435 \u0432\u0441\u0435 \u0442\u0430\u043a\u0438\u0435 \u0446\u0435\u043b\u044b\u0435 \u0447\u0438\u0441\u043b\u0430 \u043e\u0442 0 \u0434\u043e 100 \u0432\u043a\u043b\u044e\u0447\u0438\u0442\u0435\u043b\u044c\u043d\u043e, \u0447\u0442\u043e \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442 \u043c\u043e\u043c\u0435\u043d\u0442 \u0432\u0440\u0435\u043c\u0435\u043d\u0438, \u0432 \u043a\u043e\u0442\u043e\u0440\u044b\u0438\u0306 \u043e\u0431\u0430 \u043f\u0440\u043e\u0433\u0440\u0435\u0441\u0441- \u0431\u0430\u0440\u0430 \u043e\u0434\u043d\u043e\u0432\u0440\u0435\u043c\u0435\u043d\u043d\u043e \u043f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u044e\u0442 \u044d\u0442\u043e \u0447\u0438\u0441\u043b\u043e. \u0412\u044b\u0432\u0435\u0434\u0438\u0442\u0435 \u044d\u0442\u0438 \u0447\u0438\u0441\u043b\u0430 \u0432 \u043f\u043e\u0440\u044f\u0434\u043a\u0435 \u0432\u043e\u0437\u0440\u0430\u0441\u0442\u0430\u043d\u0438\u044f.",
    "input": "\u0412 \u043f\u0435\u0440\u0432\u043e\u0438\u0306 \u0441\u0442\u0440\u043e\u043a\u0435 \u0437\u0430\u0434\u0430\u043d\u043e \u043e\u0434\u043d\u043e \u0446\u0435\u043b\u043e\u0435 \u0447\u0438\u0441\u043b\u043e n ( 1 \u2264 n \u2264 100 ) \u2014 \u0447\u0438\u0441\u043b\u043e \u043a\u043e\u043f\u0438\u0440\u0443\u0435\u043c\u044b\u0445 \u0444\u0430\u0438\u0306\u043b\u043e\u0432. \u0412\u043e \u0432\u0442\u043e\u0440\u043e\u0438\u0306 \u0441\u0442\u0440\u043e\u043a\u0435 \u0437\u0430\u0434\u0430\u043d\u044b n \u0446\u0435\u043b\u044b\u0445 \u0447\u0438\u0441\u0435\u043b a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 10 ) \u2014 \u0440\u0430\u0437\u043c\u0435\u0440\u044b \u0444\u0430\u0438\u0306\u043b\u043e\u0432 \u0432 \u0431\u0430\u0438\u0306\u0442\u0430\u0445 \u0432 \u0442\u043e\u043c \u043f\u043e\u0440\u044f\u0434\u043a\u0435, \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u043c \u043e\u043d\u0438 \u0431\u0443\u0434\u0443\u0442 \u043a\u043e\u043f\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0441\u044f.",
    "output": "\u0412\u044b\u0432\u0435\u0434\u0438\u0442\u0435 \u0432 \u0432\u043e\u0437\u0440\u0430\u0441\u0442\u0430\u044e\u0449\u0435\u043c \u043f\u043e\u0440\u044f\u0434\u043a\u0435 \u0432\u0441\u0435 \u0447\u0438\u0441\u043b\u0430 \u043e\u0442 0 \u0434\u043e 100 \u0432\u043a\u043b\u044e\u0447\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u0442\u0430\u043a\u0438\u0435, \u0447\u0442\u043e \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442 \u043c\u043e\u043c\u0435\u043d\u0442 \u0432\u0440\u0435\u043c\u0435\u043d\u0438, \u0432 \u043a\u043e\u0442\u043e\u0440\u044b\u0438\u0306 \u043d\u0430 \u043e\u0431\u043e\u0438\u0445 \u043f\u0440\u043e\u0433\u0440\u0435\u0441\u0441- \u0431\u0430\u0440\u0430\u0445 \u043e\u0434\u043d\u043e\u0432\u0440\u0435\u043c\u0435\u043d\u043d\u043e \u043f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u044d\u0442\u043e \u0447\u0438\u0441\u043b\u043e.",
    "note": "\u0412 \u043f\u0435\u0440\u0432\u043e\u043c \u0442\u0435\u0441\u0442\u0435 \u043a\u043e\u043f\u0438\u0440\u0443\u0435\u0442\u0441\u044f \u0432\u0441\u0435\u0433\u043e \u043e\u0434\u0438\u043d \u0444\u0430\u0438\u0306\u043b, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u043e\u0431\u0430 \u043f\u0440\u043e\u0433\u0440\u0435\u0441\u0441- \u0431\u0430\u0440\u0430 \u0432\u0441\u0435\u0433\u0434\u0430 \u043f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u044e\u0442 \u043e\u0434\u0438\u043d\u0430\u043a\u043e\u0432\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f. \u0412\u043e \u0432\u0442\u043e\u0440\u043e\u043c \u0442\u0435\u0441\u0442\u0435 \u043f\u0435\u0440\u0432\u044b\u0438\u0306 \u043f\u0440\u043e\u0433\u0440\u0435\u0441\u0441- \u0431\u0430\u0440 \u0441\u0440\u0430\u0437\u0443 \u0436\u0435 \u0443\u0438\u0306\u0434\u0435\u0308\u0442 \u0432\u043f\u0435\u0440\u0435\u0308\u0434, \u043f\u043e\u0442\u043e\u043c \u0441\u0431\u0440\u043e\u0441\u0438\u0442\u0441\u044f \u0432 \u043d\u043e\u043b\u044c \u0438 \u043d\u0430\u0447\u043d\u0435\u0308\u0442 \u0434\u043e\u0433\u043e\u043d\u044f\u0442\u044c \u0432\u0442\u043e\u0440\u043e\u0438\u0306 \u043f\u0440\u043e\u0433\u0440\u0435\u0441\u0441- \u0431\u0430\u0440 \u0437\u0430\u043d\u043e\u0432\u043e. \u0412 \u043a\u043e\u043d\u0446\u0435 \u043a\u043e\u043f\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u043f\u0440\u043e\u0433\u0440\u0435\u0441\u0441- \u0431\u0430\u0440\u044b \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0432\u0440\u0435\u043c\u044f \u0431\u0443\u0434\u0443\u0442 \u043f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u0442\u044c \u043e\u0434\u043d\u043e \u0438 \u0442\u043e \u0436\u0435 \u0447\u0438\u0441\u043b\u043e. \u041e\u0431\u0440\u0430\u0442\u0438\u0442\u0435 \u0432\u043d\u0438\u043c\u0430\u043d\u0438\u0435, \u0447\u0442\u043e \u0442\u0440\u0435\u0442\u0438\u0438\u0306 \u0442\u0435\u0441\u0442 \u0432 \u044d\u0442\u043e\u0438\u0306 \u0432\u0435\u0440\u0441\u0438\u0438 \u0437\u0430\u0434\u0430\u0447\u0438 \u043e\u0442\u043b\u0438\u0447\u0430\u0435\u0442\u0441\u044f \u043e\u0442 \u0442\u0440\u0435\u0442\u044c\u0435\u0433\u043e \u0442\u0435\u0441\u0442\u0430 \u0432 \u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0435\u0438\u0306 \u0432\u0435\u0440\u0441\u0438\u0438 \u0437\u0430\u0434\u0430\u0447\u0438.",
    "topics": [
      "*special",
      "binary search",
      "brute force",
      "math"
    ],
    "id": "1769B2"
  },
  {
    "title": "\u041a\u043e\u043f\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0444\u0430\u0439\u043b\u043e\u0432 I",
    "url": "https://codeforces.com/problemset/problem/1769/B1",
    "history": "\u0412 \u044d\u0442\u043e\u0438\u0306 \u0432\u0435\u0440\u0441\u0438\u0438 \u0437\u0430\u0434\u0430\u0447\u0438 \u0440\u0430\u0437\u043c\u0435\u0440\u044b \u043a\u043e\u043f\u0438\u0440\u0443\u0435\u043c\u044b\u0445 \u0444\u0430\u0438\u0306\u043b\u043e\u0432 \u043d\u0435 \u043f\u0440\u0435\u0432\u044b\u0448\u0430\u044e\u0442 1000 \u0431\u0430\u0438\u0306\u0442. \u0412\u044b \u043a\u043e\u043f\u0438\u0440\u0443\u0435\u0442\u0435 \u0441 \u043e\u0434\u043d\u043e\u0433\u043e \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u043d\u0430 \u0434\u0440\u0443\u0433\u043e\u0438\u0306 n \u0444\u0430\u0438\u0306\u043b\u043e\u0432 \u0440\u0430\u0437\u043c\u0435\u0440\u043e\u043c a_ 1, a_ 2, . . . , a_ n \u0431\u0430\u0438\u0306\u0442. \u0424\u0430\u0438\u0306\u043b\u044b \u043a\u043e\u043f\u0438\u0440\u0443\u044e\u0442\u0441\u044f \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0432 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u043c \u043f\u043e\u0440\u044f\u0434\u043a\u0435. \u041f\u0440\u0438 \u043a\u043e\u043f\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0438 \u0432\u044b \u0432\u0438\u0434\u0438\u0442\u0435 \u0434\u0432\u0430 \u043f\u0440\u043e\u0433\u0440\u0435\u0441\u0441- \u0431\u0430\u0440\u0430: \u043f\u0435\u0440\u0432\u044b\u0438\u0306 \u043f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442 \u043f\u0440\u043e\u0446\u0435\u043d\u0442 \u0441\u043a\u043e\u043f\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445 \u0432 \u0442\u0435\u043a\u0443\u0449\u0435\u043c \u0444\u0430\u0438\u0306\u043b\u0435, \u0430 \u0432\u0442\u043e\u0440\u043e\u0438\u0306 \u2014 \u043e\u0431\u0449\u0438\u0438\u0306 \u043f\u0440\u043e\u0446\u0435\u043d\u0442 \u0441\u043a\u043e\u043f\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445 \u043f\u043e \u0432\u0441\u0435\u043c n \u0444\u0430\u0438\u0306\u043b\u0430\u043c. \u041e\u0431\u0430 \u043f\u0440\u043e\u0446\u0435\u043d\u0442\u0430 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u044e\u0442\u0441\u044f \u043e\u043a\u0440\u0443\u0433\u043b\u0435\u0308\u043d\u043d\u044b\u043c\u0438 \u0432\u043d\u0438\u0437 \u0434\u043e \u0446\u0435\u043b\u043e\u0433\u043e \u0447\u0438\u0441\u043b\u0430. \u0417\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043d\u0430 \u043f\u0440\u043e\u0433\u0440\u0435\u0441\u0441- \u0431\u0430\u0440\u0430\u0445 \u043e\u0431\u043d\u043e\u0432\u043b\u044f\u044e\u0442\u0441\u044f \u043f\u043e\u0441\u043b\u0435 \u043a\u043e\u043f\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0431\u0430\u0438\u0306\u0442\u0430. \u0424\u043e\u0440\u043c\u0430\u043b\u044c\u043d\u043e, \u043f\u043e\u0441\u043b\u0435 \u043a\u043e\u043f\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0431\u0430\u0438\u0306\u0442\u0430 \u043d\u043e\u043c\u0435\u0440 x \u0438\u0437 \u0444\u0430\u0438\u0306\u043b\u0430 \u043d\u043e\u043c\u0435\u0440 i \u043f\u0435\u0440\u0432\u044b\u0438\u0306 \u043f\u0440\u043e\u0433\u0440\u0435\u0441\u0441- \u0431\u0430\u0440 \u043f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442 \u230a100 \u00b7 x/ a_ i\u230b \u043f\u0440\u043e\u0446\u0435\u043d\u0442\u043e\u0432, \u0430 \u0432\u0442\u043e\u0440\u043e\u0438\u0306 \u2014 \u230a100 \u00b7 ( a_ 1 + a_ 2 + . . . + a_ i - 1 + x) / a_ 1 + a_ 2 + . . . + a_ n\u230b \u043f\u0440\u043e\u0446\u0435\u043d\u0442\u043e\u0432. \u0412 \u0441\u0430\u043c\u043e\u043c \u043d\u0430\u0447\u0430\u043b\u0435 \u043a\u043e\u043f\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u043e\u0431\u0430 \u043f\u0440\u043e\u0433\u0440\u0435\u0441\u0441- \u0431\u0430\u0440\u0430 \u043f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u044e\u0442 0 \u043f\u0440\u043e\u0446\u0435\u043d\u0442\u043e\u0432. \u041d\u0430\u0438\u0306\u0434\u0438\u0442\u0435 \u0432\u0441\u0435 \u0442\u0430\u043a\u0438\u0435 \u0446\u0435\u043b\u044b\u0435 \u0447\u0438\u0441\u043b\u0430 \u043e\u0442 0 \u0434\u043e 100 \u0432\u043a\u043b\u044e\u0447\u0438\u0442\u0435\u043b\u044c\u043d\u043e, \u0447\u0442\u043e \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442 \u043c\u043e\u043c\u0435\u043d\u0442 \u0432\u0440\u0435\u043c\u0435\u043d\u0438, \u0432 \u043a\u043e\u0442\u043e\u0440\u044b\u0438\u0306 \u043e\u0431\u0430 \u043f\u0440\u043e\u0433\u0440\u0435\u0441\u0441- \u0431\u0430\u0440\u0430 \u043e\u0434\u043d\u043e\u0432\u0440\u0435\u043c\u0435\u043d\u043d\u043e \u043f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u044e\u0442 \u044d\u0442\u043e \u0447\u0438\u0441\u043b\u043e. \u0412\u044b\u0432\u0435\u0434\u0438\u0442\u0435 \u044d\u0442\u0438 \u0447\u0438\u0441\u043b\u0430 \u0432 \u043f\u043e\u0440\u044f\u0434\u043a\u0435 \u0432\u043e\u0437\u0440\u0430\u0441\u0442\u0430\u043d\u0438\u044f.",
    "input": "\u0412 \u043f\u0435\u0440\u0432\u043e\u0438\u0306 \u0441\u0442\u0440\u043e\u043a\u0435 \u0437\u0430\u0434\u0430\u043d\u043e \u043e\u0434\u043d\u043e \u0446\u0435\u043b\u043e\u0435 \u0447\u0438\u0441\u043b\u043e n ( 1 \u2264 n \u2264 100 ) \u2014 \u0447\u0438\u0441\u043b\u043e \u043a\u043e\u043f\u0438\u0440\u0443\u0435\u043c\u044b\u0445 \u0444\u0430\u0438\u0306\u043b\u043e\u0432. \u0412\u043e \u0432\u0442\u043e\u0440\u043e\u0438\u0306 \u0441\u0442\u0440\u043e\u043a\u0435 \u0437\u0430\u0434\u0430\u043d\u044b n \u0446\u0435\u043b\u044b\u0445 \u0447\u0438\u0441\u0435\u043b a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 1000 ) \u2014 \u0440\u0430\u0437\u043c\u0435\u0440\u044b \u0444\u0430\u0438\u0306\u043b\u043e\u0432 \u0432 \u0431\u0430\u0438\u0306\u0442\u0430\u0445 \u0432 \u0442\u043e\u043c \u043f\u043e\u0440\u044f\u0434\u043a\u0435, \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u043c \u043e\u043d\u0438 \u0431\u0443\u0434\u0443\u0442 \u043a\u043e\u043f\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0441\u044f.",
    "output": "\u0412\u044b\u0432\u0435\u0434\u0438\u0442\u0435 \u0432 \u0432\u043e\u0437\u0440\u0430\u0441\u0442\u0430\u044e\u0449\u0435\u043c \u043f\u043e\u0440\u044f\u0434\u043a\u0435 \u0432\u0441\u0435 \u0447\u0438\u0441\u043b\u0430 \u043e\u0442 0 \u0434\u043e 100 \u0432\u043a\u043b\u044e\u0447\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u0442\u0430\u043a\u0438\u0435, \u0447\u0442\u043e \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442 \u043c\u043e\u043c\u0435\u043d\u0442 \u0432\u0440\u0435\u043c\u0435\u043d\u0438, \u0432 \u043a\u043e\u0442\u043e\u0440\u044b\u0438\u0306 \u043d\u0430 \u043e\u0431\u043e\u0438\u0445 \u043f\u0440\u043e\u0433\u0440\u0435\u0441\u0441- \u0431\u0430\u0440\u0430\u0445 \u043e\u0434\u043d\u043e\u0432\u0440\u0435\u043c\u0435\u043d\u043d\u043e \u043f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u044d\u0442\u043e \u0447\u0438\u0441\u043b\u043e.",
    "note": "\u0412 \u043f\u0435\u0440\u0432\u043e\u043c \u0442\u0435\u0441\u0442\u0435 \u043a\u043e\u043f\u0438\u0440\u0443\u0435\u0442\u0441\u044f \u0432\u0441\u0435\u0433\u043e \u043e\u0434\u0438\u043d \u0444\u0430\u0438\u0306\u043b, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u043e\u0431\u0430 \u043f\u0440\u043e\u0433\u0440\u0435\u0441\u0441- \u0431\u0430\u0440\u0430 \u0432\u0441\u0435\u0433\u0434\u0430 \u043f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u044e\u0442 \u043e\u0434\u0438\u043d\u0430\u043a\u043e\u0432\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f. \u0412\u043e \u0432\u0442\u043e\u0440\u043e\u043c \u0442\u0435\u0441\u0442\u0435 \u043f\u0435\u0440\u0432\u044b\u0438\u0306 \u043f\u0440\u043e\u0433\u0440\u0435\u0441\u0441- \u0431\u0430\u0440 \u0441\u0440\u0430\u0437\u0443 \u0436\u0435 \u0443\u0438\u0306\u0434\u0435\u0308\u0442 \u0432\u043f\u0435\u0440\u0435\u0308\u0434, \u043f\u043e\u0442\u043e\u043c \u0441\u0431\u0440\u043e\u0441\u0438\u0442\u0441\u044f \u0432 \u043d\u043e\u043b\u044c \u0438 \u043d\u0430\u0447\u043d\u0435\u0308\u0442 \u0434\u043e\u0433\u043e\u043d\u044f\u0442\u044c \u0432\u0442\u043e\u0440\u043e\u0438\u0306 \u043f\u0440\u043e\u0433\u0440\u0435\u0441\u0441- \u0431\u0430\u0440 \u0437\u0430\u043d\u043e\u0432\u043e. \u0412 \u043a\u043e\u043d\u0446\u0435 \u043a\u043e\u043f\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u043f\u0440\u043e\u0433\u0440\u0435\u0441\u0441- \u0431\u0430\u0440\u044b \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0432\u0440\u0435\u043c\u044f \u0431\u0443\u0434\u0443\u0442 \u043f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u0442\u044c \u043e\u0434\u043d\u043e \u0438 \u0442\u043e \u0436\u0435 \u0447\u0438\u0441\u043b\u043e.",
    "topics": [
      "*special",
      "brute force",
      "implementation",
      "math"
    ],
    "id": "1769B1"
  },
  {
    "title": "\u0423\u0437\u043a\u0430\u044f \u0434\u043e\u0440\u043e\u0433\u0430",
    "url": "https://codeforces.com/problemset/problem/1769/A",
    "history": "\u041a\u043e\u043b\u043e\u043d\u043d\u0430 \u0438\u0437 n \u0441\u0430\u043c\u043e\u043a\u0430\u0442\u043e\u0432 \u0435\u0434\u0435\u0442 \u043f\u043e \u0443\u0437\u043a\u043e\u0438\u0306 \u043e\u0434\u043d\u043e\u0441\u0442\u043e\u0440\u043e\u043d\u043d\u0435\u0438\u0306 \u0434\u043e\u0440\u043e\u0433\u0435 \u0432 \u043f\u0443\u043d\u043a\u0442 \u0411. \u0421\u0430\u043c\u043e\u043a\u0430\u0442\u044b \u043f\u0440\u043e\u043d\u0443\u043c\u0435\u0440\u043e\u0432\u0430\u043d\u044b \u043e\u0442 1 \u0434\u043e n . \u0414\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0441\u0430\u043c\u043e\u043a\u0430\u0442\u0430 i \u0438\u0437\u0432\u0435\u0441\u0442\u043d\u043e, \u0447\u0442\u043e \u0442\u0435\u043a\u0443\u0449\u0435\u0435 \u0440\u0430\u0441\u0441\u0442\u043e\u044f\u043d\u0438\u0435 \u043e\u0442 \u043d\u0435\u0433\u043e \u0434\u043e \u043f\u0443\u043d\u043a\u0442\u0430 \u0411 \u0440\u0430\u0432\u043d\u043e a_ i \u043c\u0435\u0442\u0440\u043e\u0432. \u041f\u0440\u0438 \u044d\u0442\u043e\u043c a_ 1 < a_ 2 < . . . < a_ n , \u0432 \u0447\u0430\u0441\u0442\u043d\u043e\u0441\u0442\u0438, \u0441\u0430\u043c\u043e\u043a\u0430\u0442 1 \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u0441\u044f \u0431\u043b\u0438\u0436\u0435 \u0432\u0441\u0435\u0433\u043e \u043a \u043f\u0443\u043d\u043a\u0442\u0443 \u0411, \u0430 \u0441\u0430\u043c\u043e\u043a\u0430\u0442 n \u2014 \u0434\u0430\u043b\u044c\u0448\u0435 \u0432\u0441\u0435\u0433\u043e. \u0421\u0430\u043c\u043e\u043a\u0430\u0442 \u0441 \u043d\u043e\u043c\u0435\u0440\u043e\u043c i \u0434\u0432\u0438\u0436\u0435\u0442\u0441\u044f \u0432 \u0441\u0442\u043e\u0440\u043e\u043d\u0443 \u043f\u0443\u043d\u043a\u0442\u0430 \u0411 \u0441\u043e \u0441\u043a\u043e\u0440\u043e\u0441\u0442\u044c\u044e i \u043c\u0435\u0442\u0440\u043e\u0432 \u0432 \u0441\u0435\u043a\u0443\u043d\u0434\u0443 ( \u0442\u043e \u0435\u0441\u0442\u044c \u0447\u0435\u043c \u0431\u043b\u0438\u0436\u0435 \u0441\u0430\u043c\u043e\u043a\u0430\u0442 \u0432 \u043a\u043e\u043b\u043e\u043d\u043d\u0435 \u043a \u043f\u0443\u043d\u043a\u0442\u0443 \u0411, \u0442\u0435\u043c \u043c\u0435\u0434\u043b\u0435\u043d\u043d\u0435\u0435 \u043e\u043d \u0435\u0434\u0435\u0442) . \u0422\u0430\u043a \u043a\u0430\u043a \u0434\u043e\u0440\u043e\u0433\u0430 \u0443\u0437\u043a\u0430\u044f, \u0441\u0430\u043c\u043e\u043a\u0430\u0442\u044b \u043d\u0435 \u043c\u043e\u0433\u0443\u0442 \u043e\u0431\u0433\u043e\u043d\u044f\u0442\u044c \u0434\u0440\u0443\u0433 \u0434\u0440\u0443\u0433\u0430. \u0411\u043e\u043b\u0435\u0435 \u0442\u043e\u0433\u043e, \u0441\u043e\u0441\u0435\u0434\u043d\u0438\u0435 \u0441\u0430\u043c\u043e\u043a\u0430\u0442\u044b \u0432 \u043a\u043e\u043b\u043e\u043d\u043d\u0435 \u0434\u043e\u043b\u0436\u043d\u044b \u0441\u043e\u0431\u043b\u044e\u0434\u0430\u0442\u044c \u0434\u0438\u0441\u0442\u0430\u043d\u0446\u0438\u044e \u0445\u043e\u0442\u044f \u0431\u044b \u0432 1 \u043c\u0435\u0442\u0440. \u041f\u043e\u044d\u0442\u043e\u043c\u0443 \u043a\u043e\u0433\u0434\u0430 \u0431\u043e\u043b\u0435\u0435 \u0431\u044b\u0441\u0442\u0440\u044b\u0438\u0306 \u0441\u0430\u043c\u043e\u043a\u0430\u0442 \u0434\u043e\u0433\u043e\u043d\u044f\u0435\u0442 \u0431\u043e\u043b\u0435\u0435 \u043c\u0435\u0434\u043b\u0435\u043d\u043d\u044b\u0438\u0306, \u0431\u043e\u043b\u0435\u0435 \u0431\u044b\u0441\u0442\u0440\u043e\u043c\u0443 \u043f\u0440\u0438\u0445\u043e\u0434\u0438\u0442\u0441\u044f \u0434\u0430\u043b\u044c\u0448\u0435 \u0435\u0445\u0430\u0442\u044c \u0441\u043e \u0441\u043a\u043e\u0440\u043e\u0441\u0442\u044c\u044e \u0431\u043e\u043b\u0435\u0435 \u043c\u0435\u0434\u043b\u0435\u043d\u043d\u043e\u0433\u043e, \u043f\u0440\u0438\u0447\u0435\u0308\u043c \u043d\u0430 \u0440\u0430\u0441\u0441\u0442\u043e\u044f\u043d\u0438\u0438 \u0432 1 \u043c\u0435\u0442\u0440 \u043e\u0442 \u043d\u0435\u0433\u043e. \u041e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u0442\u0435, \u043d\u0430 \u043a\u0430\u043a\u043e\u043c \u0440\u0430\u0441\u0441\u0442\u043e\u044f\u043d\u0438\u0438 \u0434\u043e \u043f\u0443\u043d\u043a\u0442\u0430 \u0411 \u0431\u0443\u0434\u0435\u0442 \u043a\u0430\u0436\u0434\u044b\u0438\u0306 \u0441\u0430\u043c\u043e\u043a\u0430\u0442 \u0440\u043e\u0432\u043d\u043e \u0447\u0435\u0440\u0435\u0437 \u043e\u0434\u043d\u0443 \u0441\u0435\u043a\u0443\u043d\u0434\u0443.",
    "input": "\u0412 \u043f\u0435\u0440\u0432\u043e\u0438\u0306 \u0441\u0442\u0440\u043e\u043a\u0435 \u0437\u0430\u0434\u0430\u043d\u043e \u043e\u0434\u043d\u043e \u0446\u0435\u043b\u043e\u0435 \u0447\u0438\u0441\u043b\u043e n ( 1 \u2264 n \u2264 100 ) \u2014 \u0447\u0438\u0441\u043b\u043e \u0441\u0430\u043c\u043e\u043a\u0430\u0442\u043e\u0432 \u0432 \u043a\u043e\u043b\u043e\u043d\u043d\u0435. \u0412 i - \u0438\u0306 \u0438\u0437 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0445 n \u0441\u0442\u0440\u043e\u043a \u0437\u0430\u0434\u0430\u043d\u043e \u043e\u0434\u043d\u043e \u0446\u0435\u043b\u043e\u0435 \u0447\u0438\u0441\u043b\u043e a_ i ( 1 \u2264 a_ i \u2264 1000 ; a_ 1 < a_ 2 < . . . < a_ n ) \u2014 \u0442\u0435\u043a\u0443\u0449\u0435\u0435 \u0440\u0430\u0441\u0441\u0442\u043e\u044f\u043d\u0438\u0435 \u043e\u0442 \u0441\u0430\u043c\u043e\u043a\u0430\u0442\u0430 i \u0434\u043e \u043f\u0443\u043d\u043a\u0442\u0430 \u0411 \u0432 \u043c\u0435\u0442\u0440\u0430\u0445.",
    "output": "\u0412\u044b\u0432\u0435\u0434\u0438\u0442\u0435 n \u0446\u0435\u043b\u044b\u0445 \u0447\u0438\u0441\u0435\u043b \u2014 \u0440\u0430\u0441\u0441\u0442\u043e\u044f\u043d\u0438\u044f \u043e\u0442 \u0441\u0430\u043c\u043e\u043a\u0430\u0442\u043e\u0432 1, 2, . . . , n \u0434\u043e \u043f\u0443\u043d\u043a\u0442\u0430 \u0411 \u0432 \u043c\u0435\u0442\u0440\u0430\u0445 \u0447\u0435\u0440\u0435\u0437 \u043e\u0434\u043d\u0443 \u0441\u0435\u043a\u0443\u043d\u0434\u0443.",
    "note": "\u0412 \u043f\u0435\u0440\u0432\u043e\u043c \u0442\u0435\u0441\u0442\u0435 \u0441\u0430\u043c\u043e\u043a\u0430\u0442\u044b \u043f\u043e\u043a\u0430 \u043d\u0435 \u043c\u0435\u0448\u0430\u044e\u0442 \u0434\u0440\u0443\u0433 \u0434\u0440\u0443\u0433\u0443 \u0435\u0445\u0430\u0442\u044c, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u043a\u0430\u0436\u0434\u044b\u0438\u0306 \u0441\u0430\u043c\u043e\u043a\u0430\u0442 i \u043f\u0440\u043e\u0434\u0432\u0438\u0433\u0430\u0435\u0442\u0441\u044f \u043d\u0430 i \u043c\u0435\u0442\u0440\u043e\u0432 \u0432 \u0441\u0442\u043e\u0440\u043e\u043d\u0443 \u043f\u0443\u043d\u043a\u0442\u0430 \u0411. \u0412\u043e \u0432\u0442\u043e\u0440\u043e\u043c \u0442\u0435\u0441\u0442\u0435 \u0441\u0430\u043c\u043e\u043a\u0430\u0442\u044b \u0443\u0436\u0435 \u0432\u044b\u0441\u0442\u0440\u043e\u0438\u043b\u0438\u0441\u044c \u0432 \u043a\u043e\u043b\u043e\u043d\u043d\u0435 \u043d\u0430 \u0440\u0430\u0441\u0441\u0442\u043e\u044f\u043d\u0438\u0438 1 \u043c\u0435\u0442\u0440 \u0434\u0440\u0443\u0433 \u043e\u0442 \u0434\u0440\u0443\u0433\u0430 \u0438 \u0432\u044b\u043d\u0443\u0436\u0434\u0435\u043d\u044b \u0435\u0445\u0430\u0442\u044c \u0441\u043e \u0441\u043a\u043e\u0440\u043e\u0441\u0442\u044c\u044e \u0441\u0430\u043c\u043e\u0433\u043e \u043c\u0435\u0434\u043b\u0435\u043d\u043d\u043e\u0433\u043e \u0441\u0430\u043c\u043e\u043a\u0430\u0442\u0430 \u0441 \u043d\u043e\u043c\u0435\u0440\u043e\u043c 1 .",
    "topics": [
      "*special",
      "math"
    ],
    "id": "1769A"
  },
  {
    "title": "Partial Sorting",
    "url": "https://codeforces.com/problemset/problem/1768/E",
    "history": "Consider a permutation ^ \u2020 p of length 3n . Each time you can do one of the following operations: Sort the first 2n elements in increasing order. Sort the last 2n elements in increasing order. We can show that every permutation can be made sorted in increasing order using only these operations. Let' s call f( p) the minimum number of these operations needed to make the permutation p sorted in increasing order. Given n , find the sum of f( p) over all ( 3n) ! permutations p of size 3n . Since the answer could be very large, output it modulo a prime M . ^ \u2020 A permutation of length n is an array consisting of n distinct integers from 1 to n in arbitrary order. For example, [ 2, 3, 1, 5, 4] is a permutation, but [ 1, 2, 2] is not a permutation ( 2 appears twice in the array) , and [ 1, 3, 4] is also not a permutation ( n= 3 but there is 4 in the array) .",
    "input": "The only line of input contains two numbers n and M ( 1 \u2264 n \u2264 10^ 6 , 10^ 8 \u2264 M \u2264 10^ 9 ) . It is guaranteed that M is a prime number.",
    "output": "Output the answer modulo M .",
    "note": "In the first test case, all the permutations are: [ 1, 2, 3] , which requires 0 operations; [ 1, 3, 2] , which requires 1 operation; [ 2, 1, 3] , which requires 1 operation; [ 2, 3, 1] , which requires 2 operations; [ 3, 1, 2] , which requires 2 operations; [ 3, 2, 1] , which requires 3 operations. Therefore, the answer is 0+ 1+ 1+ 2+ 2+ 3= 9 .",
    "topics": [
      "combinatorics",
      "math",
      "number theory"
    ],
    "id": "1768E"
  },
  {
    "title": "Quick Sort",
    "url": "https://codeforces.com/problemset/problem/1768/B",
    "history": "You are given a permutation ^ \u2020 p of length n and a positive integer k \u2264 n . In one operation, you: Choose k distinct elements p_ i_ 1, p_ i_ 2, . . . , p_ i_ k . Remove them and then add them sorted in increasing order to the end of the permutation. For example, if p = [ 2, 5, 1, 3, 4] and k = 2 and you choose 5 and 3 as the elements for the operation, then [ 2, 5, 1, 3, 4] \u2192 [ 2, 1, 4, 3, 5] . Find the minimum number of operations needed to sort the permutation in increasing order. It can be proven that it is always possible to do so. ^ \u2020 A permutation of length n is an array consisting of n distinct integers from 1 to n in arbitrary order. For example, [ 2, 3, 1, 5, 4] is a permutation, but [ 1, 2, 2] is not a permutation ( 2 appears twice in the array) , and [ 1, 3, 4] is also not a permutation ( n= 3 but there is 4 in the array) .",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. The description of test cases follows. The first line of each test case contains two integers n and k ( 2 \u2264 n \u2264 10^ 5 , 1 \u2264 k \u2264 n ) . The second line of each test case contains n integers p_ 1, p_ 2, . . . , p_ n ( 1 \u2264 p_ i \u2264 n ) . It is guaranteed that p is a permutation. It is guaranteed that the sum of n over all test cases does not exceed 10^ 5 .",
    "output": "For each test case output a single integer \u2014 the minimum number of operations needed to sort the permutation. It can be proven that it is always possible to do so.",
    "note": "In the first test case, the permutation is already sorted. In the second test case, you can choose element 3 , and the permutation will become sorted as follows: [ 3, 1, 2] \u2192 [ 1, 2, 3] . In the third test case, you can choose elements 3 and 4 , and the permutation will become sorted as follows: [ 1, 3, 2, 4] \u2192 [ 1, 2, 3, 4] . In the fourth test case, it can be shown that it is impossible to sort the permutation in 1 operation. However, if you choose elements 2 and 1 in the first operation, and choose elements 3 and 4 in the second operation, the permutation will become sorted as follows: [ 2, 3, 1, 4] \u2192 [ 3, 4, 1, 2] \u2192 [ 1, 2, 3, 4] .",
    "topics": [
      "greedy",
      "math"
    ],
    "id": "1768B"
  },
  {
    "title": "Greatest Convex",
    "url": "https://codeforces.com/problemset/problem/1768/A",
    "history": "You are given an integer k . Find the largest integer x , where 1 \u2264 x < k , such that x! + ( x - 1) ! ^ \u2020 is a multiple of ^ k , or determine that no such x exists. ^ \u2020 y! denotes the factorial of y , which is defined recursively as y! = y \u00b7 ( y- 1) ! for y \u2265 1 with the base case of 0! = 1 . For example, 5! = 5 \u00b7 4 \u00b7 3 \u00b7 2 \u00b7 1 \u00b7 0! = 120 . ^ If a and b are integers, then a is a multiple of b if there exists an integer c such that a = b \u00b7 c . For example, 10 is a multiple of 5 but 9 is not a multiple of 6 .",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. The description of test cases follows. The only line of each test case contains a single integer k ( 2 \u2264 k \u2264 10^ 9 ) .",
    "output": "For each test case output a single integer \u2014 the largest possible integer x that satisfies the conditions above. If no such x exists, output - 1 .",
    "note": "In the first test case, 2! + 1! = 2 + 1 = 3 , which is a multiple of 3 . In the third test case, 7! + 6! = 5040 + 720 = 5760 , which is a multiple of 8 .",
    "topics": [
      "greedy",
      "math",
      "number theory"
    ],
    "id": "1768A"
  },
  {
    "title": "Algebra Flash",
    "url": "https://codeforces.com/problemset/problem/1767/E",
    "history": "Algebra Flash 2. 2 has just been released! Changelog: New gamemode! Thank you for the continued support of the game! Huh, is that it? Slightly disappointed, you boot up the game and click on the new gamemode. It says \" Colored platforms\" . There are n platforms, numbered from 1 to n , placed one after another. There are m colors available in the game, numbered from 1 to m . The i - th platform is colored c_ i . You start on the platform 1 and want to reach platform n . In one move, you can jump from some platform i to platforms i + 1 or i + 2 . All platforms are initially deactivated ( including platforms 1 and n ) . For each color j , you can pay x_ j coins to activate all platforms of that color. You want to activate some platforms so that you could start on an activated platform 1 , jump through some activated platforms and reach an activated platform n . What' s the smallest amount of coins you can spend to achieve that?",
    "input": "The first line contains two integers n and m ( 2 \u2264 n \u2264 3 \u00b7 10^ 5 ; 1 \u2264 m \u2264 40 ) \u2014 the number of platforms and the number of colors, respectively. The second line contains n integers c_ 1, c_ 2, . . . , c_ n ( 1 \u2264 c_ i \u2264 m ) \u2014 the colors of the platforms. The third line contains m integers x_ 1, x_ 2, . . . , x_ m ( 1 \u2264 x_ i \u2264 10^ 7 ) \u2014 the cost of activating all platforms of each color.",
    "output": "Print the smallest amount of coins you can spend to activate some platforms so that you could start on an activated platform 1 , jump through some activated platforms and reach an activated platform n .",
    "note": "",
    "topics": [
      "bitmasks",
      "brute force",
      "dp",
      "graphs",
      "math",
      "meet-in-the-middle",
      "trees"
    ],
    "id": "1767E"
  },
  {
    "title": "Playoff",
    "url": "https://codeforces.com/problemset/problem/1767/D",
    "history": "2^ n teams participate in a playoff tournament. The tournament consists of 2^ n - 1 games. They are held as follows: in the first phase of the tournament, the teams are split into pairs: team 1 plays against team 2 , team 3 plays against team 4 , and so on ( so, 2^ n- 1 games are played in that phase) . When a team loses a game, it is eliminated, and each game results in elimination of one team ( there are no ties) . After that, only 2^ n- 1 teams remain. If only one team remains, it is declared the champion; otherwise, the second phase begins, where 2^ n- 2 games are played: in the first one of them, the winner of the game \" 1 vs 2 \" plays against the winner of the game \" 3 vs 4 \" , then the winner of the game \" 5 vs 6 \" plays against the winner of the game \" 7 vs 8 \" , and so on. This process repeats until only one team remains. The skill level of the i - th team is p_ i , where p is a permutation of integers 1 , 2 , . . . , 2^ n ( a permutation is an array where each element from 1 to 2^ n occurs exactly once) . You are given a string s which consists of n characters. These characters denote the results of games in each phase of the tournament as follows: if s_ i is equal to 0, then during the i - th phase ( the phase with 2^ n- i games) , in each match, the team with the lower skill level wins; if s_ i is equal to 1, then during the i - th phase ( the phase with 2^ n- i games) , in each match, the team with the higher skill level wins. Let' s say that an integer x is winning if it is possible to find a permutation p such that the team with skill x wins the tournament. Find all winning integers.",
    "input": "The first line contains one integer n ( 1 \u2264 n \u2264 18 ) . The second line contains the string s of length n consisting of the characters 0 and/ or 1.",
    "output": "Print all the winning integers x in ascending order.",
    "note": "",
    "topics": [
      "combinatorics",
      "constructive algorithms",
      "dp",
      "greedy",
      "math"
    ],
    "id": "1767D"
  },
  {
    "title": "Lucky Chains",
    "url": "https://codeforces.com/problemset/problem/1766/D",
    "history": "Let' s name a pair of positive integers ( x, y) lucky if the greatest common divisor of them is equal to 1 ( ( x, y) = 1 ) . Let' s define a chain induced by ( x, y) as a sequence of pairs ( x, y) , ( x + 1, y + 1) , ( x + 2, y + 2) , . . . , ( x + k, y + k) for some integer k \u2265 0 . The length of the chain is the number of pairs it consists of, or ( k + 1) . Let' s name such chain lucky if all pairs in the chain are lucky. You are given n pairs ( x_ i, y_ i) . Calculate for each pair the length of the longest lucky chain induced by this pair. Note that if ( x_ i, y_ i) is not lucky itself, the chain will have the length 0 .",
    "input": "The first line contains a single integer n ( 1 \u2264 n \u2264 10^ 6 ) \u2014 the number of pairs. Next n lines contains n pairs \u2014 one per line. The i - th line contains two integers x_ i and y_ i ( 1 \u2264 x_ i < y_ i \u2264 10^ 7 ) \u2014 the corresponding pair.",
    "output": "Print n integers, where the i - th integer is the length of the longest lucky chain induced by ( x_ i, y_ i) or - 1 if the chain can be infinitely long.",
    "note": "In the first test case, ( 5, 15) = 5 > 1 , so it' s already not lucky, so the length of the lucky chain is 0 . In the second test case, ( 13 + 1, 37 + 1) = ( 14, 38) = 2 . So, the lucky chain consists of the single pair ( 13, 37) .",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "1766D"
  },
  {
    "title": "Minimum LCM",
    "url": "https://codeforces.com/problemset/problem/1765/M",
    "history": "You are given an integer n . Your task is to find two positive ( greater than 0 ) integers a and b such that a+ b= n and the least common multiple ( LCM) of a and b is the minimum among all possible values of a and b . If there are multiple answers, you can print any of them.",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 100 ) \u2014 the number of test cases. The first line of each test case contains a single integer n ( 2 \u2264 n \u2264 10^ 9 ) .",
    "output": "For each test case, print two positive integers a and b \u2014 the answer to the problem. If there are multiple answers, you can print any of them.",
    "note": "In the second example, there are 8 possible pairs of a and b : a = 1 , b = 8 , LCM( 1, 8) = 8 ; a = 2 , b = 7 , LCM( 2, 7) = 14 ; a = 3 , b = 6 , LCM( 3, 6) = 6 ; a = 4 , b = 5 , LCM( 4, 5) = 20 ; a = 5 , b = 4 , LCM( 5, 4) = 20 ; a = 6 , b = 3 , LCM( 6, 3) = 6 ; a = 7 , b = 2 , LCM( 7, 2) = 14 ; a = 8 , b = 1 , LCM( 8, 1) = 8 . In the third example, there are 5 possible pairs of a and b : a = 1 , b = 4 , LCM( 1, 4) = 4 ; a = 2 , b = 3 , LCM( 2, 3) = 6 ; a = 3 , b = 2 , LCM( 3, 2) = 6 ; a = 4 , b = 1 , LCM( 4, 1) = 4 .",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "1765M"
  },
  {
    "title": "Torus Path",
    "url": "https://codeforces.com/problemset/problem/1765/K",
    "history": "You are given a square grid with n rows and n columns, where each cell has a non- negative integer written in it. There is a chip initially placed at the top left cell ( the cell with coordinates ( 1, 1) ) . You need to move the chip to the bottom right cell ( the cell with coordinates ( n, n) ) . In one step, you can move the chip to the neighboring cell, but: you can move only right or down. In other words, if the current cell is ( x, y) , you can move either to ( x, y + 1) or to ( x + 1, y) . There are two special cases: if the chip is in the last column ( cell ( x, n) ) and you' re moving right, you' ll teleport to the first column ( to the cell ( x, 1) ) ; if the chip is in the last row ( cell ( n, y) ) and you' re moving down, you' ll teleport to the first row ( to the cell ( 1, y) ) . you cannot visit the same cell twice. The starting cell is counted visited from the beginning ( so you cannot enter it again) , and you can' t leave the finishing cell once you visit it. Your total score is counted as the sum of numbers in all cells you have visited. What is the maximum possible score you can achieve?",
    "input": "The first line contains the single integer n ( 2 \u2264 n \u2264 200 ) \u2014 the number of rows and columns in the grid. Next n lines contains the description of each row of the grid. The i - th line contains n integers a_ i, 1, a_ i, 2, . . . , a_ i, n ( 0 \u2264 a_ i, j\u2264 10^ 9 ) where a_ i, j is the number written in the cell ( i, j) .",
    "output": "Print one integer \u2014 the maximum possible score you can achieve.",
    "note": "",
    "topics": [
      "greedy",
      "math"
    ],
    "id": "1765K"
  },
  {
    "title": "Hero to Zero",
    "url": "https://codeforces.com/problemset/problem/1765/J",
    "history": "There are no heroes in this problem. I guess we should have named it \" To Zero\" . You are given two arrays a and b , each of these arrays contains n non- negative integers. Let c be a matrix of size n \u00d7 n such that c_ i, j = | a_ i - b_ j| for every i \u2208 [ 1, n] and every j \u2208 [ 1, n] . Your goal is to transform the matrix c so that it becomes the zero matrix, i. e. a matrix where every element is exactly 0 . In order to do so, you may perform the following operations any number of times, in any order: choose an integer i , then decrease c_ i, j by 1 for every j \u2208 [ 1, n] ( i. e. decrease all elements in the i - th row by 1 ) . In order to perform this operation, you pay 1 coin; choose an integer j , then decrease c_ i, j by 1 for every i \u2208 [ 1, n] ( i. e. decrease all elements in the j - th column by 1 ) . In order to perform this operation, you pay 1 coin; choose two integers i and j , then decrease c_ i, j by 1 . In order to perform this operation, you pay 1 coin; choose an integer i , then increase c_ i, j by 1 for every j \u2208 [ 1, n] ( i. e. increase all elements in the i - th row by 1 ) . When you perform this operation, you receive 1 coin; choose an integer j , then increase c_ i, j by 1 for every i \u2208 [ 1, n] ( i. e. increase all elements in the j - th column by 1 ) . When you perform this operation, you receive 1 coin. You have to calculate the minimum number of coins required to transform the matrix c into the zero matrix. Note that all elements of c should be equal to 0 simultaneously after the operations.",
    "input": "The first line contains one integer n ( 2 \u2264 n \u2264 2 \u00b7 10^ 5 ) . The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 0 \u2264 a_ i \u2264 10^ 8 ) . The third line contains n integers b_ 1, b_ 2, . . . , b_ n ( 0 \u2264 b_ j \u2264 10^ 8 ) .",
    "output": "Print one integer \u2014 the minimum number of coins required to transform the matrix c into the zero matrix.",
    "note": "In the first example, the matrix looks as follows: 111000111 You can turn it into a zero matrix using 2 coins as follows: subtract 1 from the first row, paying 1 coin; subtract 1 from the third row, paying 1 coin. In the second example, the matrix looks as follows: 221001221 You can turn it into a zero matrix using 5 coins as follows: subtract 1 from the first row, paying 1 coin; subtract 1 from the third row, paying 1 coin; subtract 1 from the third row, paying 1 coin; subtract 1 from a_ 2, 3 , paying 1 coin; add 1 to the third column, receiving 1 coin; subtract 1 from the first row, paying 1 coin; subtract 1 from a_ 2, 3 , paying 1 coin.",
    "topics": [
      "graph matchings",
      "math"
    ],
    "id": "1765J"
  },
  {
    "title": "Exchange",
    "url": "https://codeforces.com/problemset/problem/1765/E",
    "history": "Monocarp is playing a MMORPG. There are two commonly used types of currency in this MMORPG \u2014 gold coins and silver coins. Monocarp wants to buy a new weapon for his character, and that weapon costs n silver coins. Unfortunately, right now, Monocarp has no coins at all. Monocarp can earn gold coins by completing quests in the game. Each quest yields exactly one gold coin. Monocarp can also exchange coins via the in- game trading system. Monocarp has spent days analyzing the in- game economy; he came to the following conclusion: it is possible to sell one gold coin for a silver coins ( i. e. Monocarp can lose one gold coin to gain a silver coins) , or buy one gold coin for b silver coins ( i. e. Monocarp can lose b silver coins to gain one gold coin) . Now Monocarp wants to calculate the minimum number of quests that he has to complete in order to have at least n silver coins after some abuse of the in- game economy. Note that Monocarp can perform exchanges of both types ( selling and buying gold coins for silver coins) any number of times.",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. Each test case consists of one line containing three integers n , a and b ( 1 \u2264 n \u2264 10^ 7 ; 1 \u2264 a, b \u2264 50 ) .",
    "output": "For each test case, print one integer \u2014 the minimum possible number of quests Monocarp has to complete.",
    "note": "In the first test case of the example, Monocarp should complete 4 quests, and then sell 4 gold coins for 100 silver coins. In the second test case, Monocarp should complete 400000 quests, and then sell 400000 gold coins for 10 million silver coins. In the third test case, Monocarp should complete 1 quest, sell the gold coin for 50 silver coins, buy a gold coin for 48 silver coins, and then sell it again for 50 coins. So, he will have 52 silver coins. In the fourth test case, Monocarp should complete 1 quest and then sell the gold coin he has obtained for 50 silver coins.",
    "topics": [
      "brute force",
      "math"
    ],
    "id": "1765E"
  },
  {
    "title": "Doremy's Pegging Game",
    "url": "https://codeforces.com/problemset/problem/1764/D",
    "history": "Doremy has n+ 1 pegs. There are n red pegs arranged as vertices of a regular n - sided polygon, numbered from 1 to n in anti- clockwise order. There is also a blue peg of slightly smaller diameter in the middle of the polygon. A rubber band is stretched around the red pegs. Doremy is very bored today and has decided to play a game. Initially, she has an empty array a . While the rubber band does not touch the blue peg, she will: choose i ( 1 \u2264 i \u2264 n ) such that the red peg i has not been removed; remove the red peg i ; append i to the back of a . Doremy wonders how many possible different arrays a can be produced by the following process. Since the answer can be big, you are only required to output it modulo p . p is guaranteed to be a prime number. game with n= 9 and a= [ 7, 5, 2, 8, 3, 9, 4] and another game with n= 8 and a= [ 3, 4, 7, 1, 8, 5, 2]",
    "input": "The first line contains two integers n and p ( 3 \u2264 n \u2264 5000 , 10^ 8 \u2264 p \u2264 10^ 9 ) \u2014 the number of red pegs and the modulo respectively. p is guaranteed to be a prime number.",
    "output": "Output a single integer, the number of different arrays a that can be produced by the process described above modulo p .",
    "note": "In the first test case, n= 4 , some possible arrays a that can be produced are [ 4, 2, 3] and [ 1, 4] . However, it is not possible for a to be [ 1] or [ 1, 4, 3] .",
    "topics": [
      "combinatorics",
      "dp",
      "math"
    ],
    "id": "1764D"
  },
  {
    "title": "Doremy's Perfect Math Class",
    "url": "https://codeforces.com/problemset/problem/1764/B",
    "history": "\" Everybody! Doremy' s Perfect Math Class is about to start! Come and do your best if you want to have as much IQ as me! \" In today' s math class, Doremy is teaching everyone subtraction. Now she gives you a quiz to prove that you are paying attention in class. You are given a set S containing positive integers. You may perform the following operation some ( possibly zero) number of times: choose two integers x and y from the set S such that x > y and x - y is not in the set S . add x- y into the set S . You need to tell Doremy the maximum possible number of integers in S if the operations are performed optimally. It can be proven that this number is finite.",
    "input": "The input consists of multiple test cases. The first line contains a single integer t ( 1\u2264 t\u2264 10^ 4 ) \u2014 the number of test cases. The description of the test cases follows. The first line contains an integer n ( 2 \u2264 n\u2264 10^ 5 ) \u2014 the size of the set S . The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 1\u2264 a_ 1 < a_ 2 < \u22ef < a_ n \u2264 10^ 9 ) \u2014 the positive integers in S . It is guaranteed that the sum of n over all test cases does not exceed 2\u00b7 10^ 5 .",
    "output": "For each test case, you need to output the maximum possible number of integers in S . It can be proven that this value is finite.",
    "note": "In the first test case, no such x and y exist. The maximum possible number of integers in S is 2 . In the second test case, S= { 5, 10, 25} at first. You can choose x= 25 , y= 10 , then add x- y= 15 to the set. S= { 5, 10, 15, 25} now. You can choose x= 25 , y= 5 , then add x- y= 20 to the set. S= { 5, 10, 15, 20, 25} now. You can not perform any operation now. After performing all operations, the number of integers in S is 5 . It can be proven that no other sequence of operations allows S to contain more than 5 integers.",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "1764B"
  },
  {
    "title": "Node Pairs",
    "url": "https://codeforces.com/problemset/problem/1763/E",
    "history": "Let' s call an ordered pair of nodes ( u, v) in a directed graph unidirectional if u = \u0338 v , there exists a path from u to v , and there are no paths from v to u . A directed graph is called p - reachable if it contains exactly p ordered pairs of nodes ( u, v) such that u < v and u and v are reachable from each other. Find the minimum number of nodes required to create a p - reachable directed graph. Also, among all such p - reachable directed graphs with the minimum number of nodes, let G denote a graph which maximizes the number of unidirectional pairs of nodes. Find this number.",
    "input": "The first and only line contains a single integer p ( 0 \u2264 p \u2264 2 \u00b7 10^ 5 ) \u2014 the number of ordered pairs of nodes.",
    "output": "Print a single line containing two integers \u2014 the minimum number of nodes required to create a p - reachable directed graph, and the maximum number of unidirectional pairs of nodes among all such p - reachable directed graphs with the minimum number of nodes.",
    "note": "In the first test case, the minimum number of nodes required to create a 3 - reachable directed graph is 3 . Among all 3 - reachable directed graphs with 3 nodes, the following graph G is one of the graphs with the maximum number of unidirectional pairs of nodes, which is 0 .",
    "topics": [
      "dp",
      "graphs",
      "math",
      "number theory"
    ],
    "id": "1763E"
  },
  {
    "title": "Valid Bitonic Permutations",
    "url": "https://codeforces.com/problemset/problem/1763/D",
    "history": "You are given five integers n , i , j , x , and y . Find the number of bitonic permutations B , of the numbers 1 to n , such that B_ i= x , and B_ j= y . Since the answer can be large, compute it modulo 10^ 9+ 7 . A bitonic permutation is a permutation of numbers, such that the elements of the permutation first increase till a certain index k , 2 \u2264 k \u2264 n- 1 , and then decrease till the end. Refer to notes for further clarification.",
    "input": "Each test contains multiple test cases. The first line contains a single integer t ( 1 \u2264 t \u2264 100 ) \u2014 the number of test cases. The description of test cases follows. The only line of each test case contains five integers, n , i , j , x , and y ( 3 \u2264 n \u2264 100 and 1 \u2264 i, j, x, y \u2264 n ) . It is guaranteed that i < j and x y .",
    "output": "For each test case, output a single line containing the number of bitonic permutations satisfying the above conditions modulo 10^ 9+ 7 .",
    "note": "A permutation is an array consisting of n distinct integers from 1 to n in arbitrary order. For example, [ 2, 3, 1, 5, 4] is a permutation, but [ 1, 2, 2] is not a permutation ( 2 appears twice in the array) and [ 1, 3, 4] is also not a permutation ( n= 3 but there is 4 in the array) . An array of n \u2265 3 elements is bitonic if its elements are first increasing till an index k , 2 \u2264 k \u2264 n- 1 , and then decreasing till the end. For example, [ 2, 5, 8, 6, 1] is a bitonic array with k= 3 , but [ 2, 5, 8, 1, 6] is not a bitonic array ( elements first increase till k= 3 , then decrease, and then increase again) . A bitonic permutation is a permutation in which the elements follow the above- mentioned bitonic property. For example, [ 2, 3, 5, 4, 1] is a bitonic permutation, but [ 2, 3, 5, 1, 4] is not a bitonic permutation ( since it is not a bitonic array) and [ 2, 3, 4, 4, 1] is also not a bitonic permutation ( since it is not a permutation) . Sample Test Case DescriptionFor n= 3 , possible permutations are [ 1, 2, 3] , [ 1, 3, 2] , [ 2, 1, 3] , [ 2, 3, 1] , [ 3, 1, 2] , and [ 3, 2, 1] . Among the given permutations, the bitonic permutations are [ 1, 3, 2] and [ 2, 3, 1] . In the first test case, the expected permutation must be of the form [ 2, ? , 3] , which does not satisfy either of the two bitonic permutations with n= 3 , therefore the answer is 0. In the second test case, the expected permutation must be of the form [ ? , 3, 2] , which only satisfies the bitonic permutation [ 1, 3, 2] , therefore, the answer is 1.",
    "topics": [
      "combinatorics",
      "dp",
      "implementation",
      "math",
      "number theory"
    ],
    "id": "1763D"
  },
  {
    "title": "Incinerate",
    "url": "https://codeforces.com/problemset/problem/1763/B",
    "history": "To destroy humanity, The Monster Association sent n monsters to Earth' s surface. The i - th monster has health h_ i and power p_ i . With his last resort attack, True Spiral Incineration Cannon, Genos can deal k damage to all monsters alive. In other words, Genos can reduce the health of all monsters by k ( if k > 0 ) with a single attack. However, after every attack Genos makes, the monsters advance. With their combined efforts, they reduce Genos' attack damage by the power of the ^ \u2020 weakest monster ^ alive. In other words, the minimum p_ i among all currently living monsters is subtracted from the value of k after each attack. ^ \u2020 The Weakest monster is the one with the least power. ^ A monster is alive if its health is strictly greater than 0 . Will Genos be successful in killing all the monsters?",
    "input": "The first line of the input contains a single integer t ( 1 \u2264 t \u2264 100 ) \u2014 the number of test cases. The description of test cases follows. The first line of each test case contains two integers, n and k ( 1 \u2264 n, k \u2264 10^ 5 ) \u2014 the number of monsters and Genos' initial attack damage. Then two lines follow, each containing n integers describing the arrays h and p ( 1 \u2264 h_ i, p_ i \u2264 10^ 9 ) . It' s guaranteed that the sum of n over all test cases does not exceed 2 \u00b7 10^ 5 .",
    "output": "For each test case, print the answer \u2014 \" YES\" ( without quotes) if Genos could kill all monsters and \" NO\" otherwise.",
    "note": "In the first example, after Genos' first attack, h and k will update to: h: [ 11, 0, 6, 2, 3, 0] k: 7- 1 = 6 After second attack: h: [ 5, 0, 0, 0, 0, 0] k: 6- 2 = 4 After third attack: h: [ 1, 0, 0, 0, 0, 0] k: 4- 2 = 2 After fourth attack: h: [ 0, 0, 0, 0, 0, 0] As Genos could kill all monsters, the answer is YES.",
    "topics": [
      "binary search",
      "brute force",
      "data structures",
      "implementation",
      "math",
      "sortings"
    ],
    "id": "1763B"
  },
  {
    "title": "Absolute Maximization",
    "url": "https://codeforces.com/problemset/problem/1763/A",
    "history": "You are given an array a of length n . You can perform the following operation several ( possibly, zero) times: Choose i , j , b : Swap the b - th digit in the binary representation of a_ i and a_ j . Find the maximum possible value of max( a) - min( a) . In a binary representation, bits are numbered from right ( least significant) to left ( most significant) . Consider that there are an infinite number of leading zero bits at the beginning of any binary representation. For example, swap the 0 - th bit for 4= 100_ 2 and 3= 11_ 2 will result 101_ 2= 5 and 10_ 2= 2 . Swap the 2 - nd bit for 4= 100_ 2 and 3= 11_ 2 will result 000_ 2= 0_ 2= 0 and 111_ 2= 7 . Here, max( a) denotes the maximum element of array a and min( a) denotes the minimum element of array a . The binary representation of x is x written in base 2 . For example, 9 and 6 written in base 2 are 1001 and 110 , respectively.",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 128 ) \u2014 the number of testcases. The first line of each test case contains a single integer n ( 3 \u2264 n \u2264 512 ) \u2014 the length of array a . The second line of each test case contains n integers a_ 1, a_ 2, . . . , a_ n ( 0 \u2264 a_ i < 1024 ) \u2014 the elements of array a . It' s guaranteed that the sum of n over all testcases does not exceed 512 .",
    "output": "For each testcase, print one integer \u2014 the maximum possible value of max( a) - min( a) .",
    "note": "In the first example, it can be shown that we do not need to perform any operations \u2014 the maximum value of max( a) - min( a) is 1 - 0 = 1 . In the second example, no operation can change the array \u2014 the maximum value of max( a) - min( a) is 5 - 5 = 0 . In the third example, initially a = [ 1, 2, 3, 4, 5] , we can perform one operation taking i = 2 , j = 5 , b = 1 . The array now becomes a = [ 1, 0, 3, 4, 7] . It can be shown that any further operations do not lead to a better answer \u2014 therefore the answer is max( a) - min( a) = 7 - 0 = 7 .",
    "topics": [
      "bitmasks",
      "constructive algorithms",
      "greedy",
      "math"
    ],
    "id": "1763A"
  },
  {
    "title": "Tree Sum",
    "url": "https://codeforces.com/problemset/problem/1762/E",
    "history": "Let us call an edge- weighted tree with n vertices numbered from 1 to n good if the weight of each edge is either 1 or - 1 and for each vertex i , the product of the edge weights of all edges having i as one endpoint is - 1 . You are given a positive integer n . There are n^ n- 2\u00b7 2^ n- 1 distinct ^ \u2020 edge- weighted trees with n vertices numbered from 1 to n such that each edge is either 1 or - 1 . Your task is to find the sum of d( 1, n) ^ of all such trees that are good. Since the answer can be quite large, you only need to find it modulo 998 244 353 . ^ \u2020 Two trees are considered to be distinct if either: there exists two vertices such that there is an edge between them in one of the trees, and not in the other. there exists two vertices such that there is an edge between them in both trees but the weight of the edge between them in one tree is different from the one in the other tree. Note that by Cayley' s formula, the number of trees on n labeled vertices is n^ n- 2 . Since we have n- 1 edges, there are 2^ n- 1 possible assignment of weights( weight can either be 1 or - 1 ) . That is why total number of distinct edge- weighted tree is n^ n- 2\u00b7 2^ n- 1 . ^ d( u, v) denotes the sum of the weight of all edges on the unique simple path from u to v .",
    "input": "The first and only line of input contains a single integer n ( 1 \u2264 n \u2264 5 \u00b7 10^ 5 ) .",
    "output": "The only line of output should contain a single integer, the required answer, modulo 998 244 353 .",
    "note": "In the first test case, there is only 1 distinct good tree. The value of d( 1, 2) for that tree is - 1 , which is 998 244 352 under modulo 998 244 353 . In the second test case, the value of d( 1, 1) for any tree is 0 , so the answer is 0 . In the third test case, there are 16 distinct good trees. The value of d( 1, 4) is: - 2 for 2 trees; - 1 for 8 trees; 0 for 4 trees; 1 for 2 trees. The sum of d( 1, 4) over all trees is 2 \u00b7 ( - 2) + 8 \u00b7 ( - 1) + 4 \u00b7 ( 0) + 2 \u00b7 ( 1) = - 10 , which is 998 244 343 under modulo 998 244 353 .",
    "topics": [
      "combinatorics",
      "math",
      "trees"
    ],
    "id": "1762E"
  },
  {
    "title": "Binary Strings are Fun",
    "url": "https://codeforces.com/problemset/problem/1762/C",
    "history": "A binary string ^ \u2020 b of odd length m is good if b_ i is the median ^ of b[ 1, i] ^ for all odd indices i ( 1 \u2264 i \u2264 m ) . For a binary string a of length k , a binary string b of length 2k- 1 is an extension of a if b_ 2i- 1= a_ i for all i such that 1 \u2264 i \u2264 k . For example, 1001011 and 1101001 are extensions of the string 1001. String x= 1011011 is not an extension of string y= 1001 because x_ 3 = \u0338 y_ 2 . Note that there are 2^ k- 1 different extensions of a . You are given a binary string s of length n . Find the sum of the number of good extensions over all prefixes of s . In other words, find \u2211_ i= 1^ n f( s[ 1, i] ) , where f( x) gives number of good extensions of string x . Since the answer can be quite large, you only need to find it modulo 998 244 353 . ^ \u2020 A binary string is a string whose elements are either 0 or 1 . ^ For a binary string a of length 2m- 1 , the median of a is the ( unique) element that occurs at least m times in a . ^ a[ l, r] denotes the string of length r- l+ 1 which is formed by the concatenation of a_ l, a_ l+ 1, . . . , a_ r in that order.",
    "input": "Each test contains multiple test cases. The first line contains the number of test cases t ( 1 \u2264 t \u2264 10^ 4 ) . The description of the test cases follows. The first line of each test case contains a single integer n ( 1 \u2264 n \u2264 2 \u00b7 10^ 5 ) , where n is the length of the binary string s . The second line of each test case contains the binary string s of length n . It is guaranteed that the sum of n over all test cases does not exceed 2 \u00b7 10^ 5 .",
    "output": "For each test case, print the answer modulo 998 244 353 .",
    "note": "In the first and second test cases, f( s[ 1, 1] ) = 1 . In the third test case, the answer is f( s[ 1, 1] ) + f( s[ 1, 2] ) = 1+ 2= 3 . In the fourth test case, the answer is f( s[ 1, 1] ) + f( s[ 1, 2] ) + f( s[ 1, 3] ) = 1+ 1+ 1= 3 . f( 11) = 2 because two good extensions are possible: 101 and 111. f( 01) = 1 because only one good extension is possible: 011.",
    "topics": [
      "combinatorics",
      "math"
    ],
    "id": "1762C"
  },
  {
    "title": "Divide and Conquer",
    "url": "https://codeforces.com/problemset/problem/1762/A",
    "history": "An array b is good if the sum of elements of b is even. You are given an array a consisting of n positive integers. In one operation, you can select an index i and change a_ i : = \u230aa_ i/ 2\u230b . ^ \u2020 Find the minimum number of operations ( possibly 0 ) needed to make a good. It can be proven that it is always possible to make a good. ^ \u2020 \u230a x \u230b denotes the floor function \u2014 the largest integer less than or equal to x . For example, \u230a 2. 7 \u230b = 2 , \u230a\u03c0\u230b = 3 and \u230a 5 \u230b = 5 .",
    "input": "Each test contains multiple test cases. The first line contains a single integer t ( 1 \u2264 t \u2264 1000 ) \u2014 the number of test cases. The description of the test cases follows. The first line of each test case contains a single integer n ( 1 \u2264 n \u2264 50 ) \u2014 the length of the array a . The second line of each test case contains n space- separated integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 6 ) \u2014 representing the array a . Do note that the sum of n over all test cases is not bounded.",
    "output": "For each test case, output the minimum number of operations needed to make a good.",
    "note": "In the first test case, array a is already good. In the second test case, we can perform on index 2 twice. After the first operation, array a becomes [ 7, 2] . After performing on index 2 again, a becomes [ 7, 1] , which is good. It can be proved that it is not possible to make a good in less number of operations. In the third test case, a becomes [ 0, 2, 4] if we perform the operation on index 1 once. As [ 0, 2, 4] is good, answer is 1 . In the fourth test case, we need to perform the operation on index 1 four times. After all operations, a becomes [ 0] . It can be proved that it is not possible to make a good in less number of operations.",
    "topics": [
      "greedy",
      "math",
      "number theory"
    ],
    "id": "1762A"
  },
  {
    "title": "Anti-median (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1761/F2",
    "history": "This is the hard version of the problem. The only difference between the two versions is the constraint on n . You can make hacks only if all versions of the problem are solved. Let' s call an array a of odd length 2m+ 1 ( with m \u2265 1 ) bad, if element a_ m+ 1 is equal to the median of this array. In other words, the array is bad if, after sorting it, the element at m+ 1 - st position remains the same. Let' s call a permutation p of integers from 1 to n anti- median, if every its subarray of odd length \u2265 3 is not bad. You are already given values of some elements of the permutation. Find the number of ways to set unknown values to obtain an anti- median permutation. As this number can be very large, find it modulo 10^ 9+ 7 .",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. The description of test cases follows. The first line of each test case contains a single integer n ( 2 \u2264 n \u2264 10^ 6) \u2014 the length of the permutation. The second line of each test case contains n integers p_ 1, p_ 2, . . . , p_ n ( 1 \u2264 p_ i \u2264 n , or p_ i = - 1 ) \u2014 the elements of the permutation. If p_ i = \u0338 - 1 , it' s given, else it' s unknown. It' s guaranteed that if for some i = \u0338 j holds p_ i = \u0338 - 1, p_ j = \u0338 - 1 , then p_ i = \u0338 p_ j . It is guaranteed that the sum of n over all test cases does not exceed 10^ 6 .",
    "output": "For each test case, output a single integer \u2014 the number of ways to set unknown values to obtain an anti- median permutation, modulo 10^ 9+ 7 .",
    "note": "In the first test case, both [ 1, 2] and [ 2, 1] are anti- median. In the second test case, permutations [ 1, 3, 2] , [ 2, 1, 3] , [ 2, 3, 1] , [ 3, 1, 2] are anti- median. The remaining two permutations, [ 1, 2, 3] , [ 3, 2, 1] , are bad arrays on their own, as their median, 2 , is in their middle. In the third test case, [ 1, 2, 3, 4] isn' t anti- median, as it contains bad subarray [ 1, 2, 3] . In the fourth test case, the only anti- median array you can get is [ 5, 6, 3, 4, 1, 2] .",
    "topics": [
      "combinatorics",
      "dp",
      "math"
    ],
    "id": "1761F2"
  },
  {
    "title": "Anti-median (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1761/F1",
    "history": "This is the easy version of the problem. The only difference between the two versions is the constraint on n . You can make hacks only if all versions of the problem are solved. Let' s call an array a of odd length 2m+ 1 ( with m \u2265 1 ) bad, if element a_ m+ 1 is equal to the median of this array. In other words, the array is bad if, after sorting it, the element at m+ 1 - st position remains the same. Let' s call a permutation p of integers from 1 to n anti- median, if every its subarray of odd length \u2265 3 is not bad. You are already given values of some elements of the permutation. Find the number of ways to set unknown values to obtain an anti- median permutation. As this number can be very large, find it modulo 10^ 9+ 7 .",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. The description of test cases follows. The first line of each test case contains a single integer n ( 2 \u2264 n \u2264 1000) \u2014 the length of the permutation. The second line of each test case contains n integers p_ 1, p_ 2, . . . , p_ n ( 1 \u2264 p_ i \u2264 n , or p_ i = - 1 ) \u2014 the elements of the permutation. If p_ i = \u0338 - 1 , it' s given, else it' s unknown. It' s guaranteed that if for some i = \u0338 j holds p_ i = \u0338 - 1, p_ j = \u0338 - 1 , then p_ i = \u0338 p_ j . It is guaranteed that the sum of n^ 2 over all test cases does not exceed 10^ 6 .",
    "output": "For each test case, output a single integer \u2014 the number of ways to set unknown values to obtain an anti- median permutation, modulo 10^ 9+ 7 .",
    "note": "In the first test case, both [ 1, 2] and [ 2, 1] are anti- median. In the second test case, permutations [ 1, 3, 2] , [ 2, 1, 3] , [ 2, 3, 1] , [ 3, 1, 2] are anti- median. The remaining two permutations, [ 1, 2, 3] , [ 3, 2, 1] , are bad arrays on their own, as their median, 2 , is in their middle. In the third test case, [ 1, 2, 3, 4] isn' t anti- median, as it contains bad subarray [ 1, 2, 3] . In the fourth test case, the only anti- median array you can get is [ 5, 6, 3, 4, 1, 2] .",
    "topics": [
      "dp",
      "math"
    ],
    "id": "1761F1"
  },
  {
    "title": "Carry Bit",
    "url": "https://codeforces.com/problemset/problem/1761/D",
    "history": "Let f( x, y) be the number of carries of x+ y in binary ( i. e. f( x, y) = g( x) + g( y) - g( x+ y) , where g( x) is the number of ones in the binary representation of x ) . Given two integers n and k , find the number of ordered pairs ( a, b) such that 0 \u2264 a, b < 2^ n , and f( a, b) equals k . Note that for a b , ( a, b) and ( b, a) are considered as two different pairs. As this number may be large, output it modulo 10^ 9+ 7 .",
    "input": "The only line of each test contains two integers n and k ( 0\u2264 k< n\u2264 10^ 6 ) .",
    "output": "Output a single integer \u2014 the answer modulo 10^ 9+ 7 .",
    "note": "Here are some examples for understanding carries: [ 1_ 1_ 1; + _ 11_ 0_ 0; 1_ 0_ 1_ 1 ] [ 1_ 0_ 1; + _ 0_ 0_ 11; 0_ 1_ 1_ 0 ] [ 1_ 0_ 1; + _ 10_ 11_ 11; 1_ 0_ 0_ 0 ] So f( 7, 4) = 1 , f( 5, 1) = 1 and f( 5, 3) = 3 . In the first test case, all the pairs meeting the constraints are ( 1, 1) , ( 1, 5) , ( 2, 2) , ( 2, 3) , ( 3, 2) , ( 4, 4) , ( 4, 5) , ( 4, 6) , ( 4, 7) , ( 5, 1) , ( 5, 4) , ( 5, 6) , ( 6, 4) , ( 6, 5) , ( 7, 4) .",
    "topics": [
      "combinatorics",
      "math"
    ],
    "id": "1761D"
  },
  {
    "title": "Binary Inversions",
    "url": "https://codeforces.com/problemset/problem/1760/E",
    "history": "You are given a binary array ^ \u2020 of length n . You are allowed to perform one operation on it at most once. In an operation, you can choose any element and flip it: turn a 0 into a 1 or vice- versa. What is the maximum number of inversions ^ the array can have after performing at most one operation? ^ \u2020 A binary array is an array that contains only zeroes and ones. ^ The number of inversions in an array is the number of pairs of indices i, j such that i< j and a_ i > a_ j .",
    "input": "The input consists of multiple test cases. The first line contains an integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. The description of the test cases follows. The first line of each test case contains an integer n ( 1 \u2264 n \u2264 2\u00b710^ 5 ) \u2014 the length of the array. The following line contains n space- separated positive integers a_ 1 , a_ 2 , . . . , a_ n ( 0 \u2264 a_ i \u2264 1 ) \u2014 the elements of the array. It is guaranteed that the sum of n over all test cases does not exceed 2\u00b710^ 5 .",
    "output": "For each test case, output a single integer \u2014 the maximum number of inversions the array can have after performing at most one operation.",
    "note": "For the first test case, the inversions are initially formed by the pairs of indices ( 1, 2 ) , ( 1, 4 ) , ( 3, 4 ) , being a total of 3 , which already is the maximum possible. For the second test case, the inversions are initially formed by the pairs of indices ( 2, 3 ) , ( 2, 4 ) , ( 2, 6 ) , ( 5, 6 ) , being a total of four. But, by flipping the first element, the array becomes 1, 1, 0, 0, 1, 0 , which has the inversions formed by the pairs of indices ( 1, 3 ) , ( 1, 4 ) , ( 1, 6 ) , ( 2, 3 ) , ( 2, 4 ) , ( 2, 6 ) , ( 5, 6 ) which total to 7 inversions which is the maximum possible.",
    "topics": [
      "data structures",
      "greedy",
      "math"
    ],
    "id": "1760E"
  },
  {
    "title": "Restore the Permutation",
    "url": "https://codeforces.com/problemset/problem/1759/G",
    "history": "A sequence of n numbers is called permutation if it contains all numbers from 1 to n exactly once. For example, the sequences [ 3, 1, 4, 2 ] , [ 1 ] and [ 2, 1 ] are permutations, but [ 1, 2, 1 ] , [ 0, 1 ] and [ 1, 3, 4 ] \u2014 are not. For a permutation p of even length n you can make an array b of length n/ 2 such that: b_ i = max( p_ 2i - 1, p_ 2i) for 1 \u2264 i \u2264n/ 2 For example, if p = [ 2, 4, 3, 1, 5, 6 ] , then: b_ 1 = max( p_ 1, p_ 2) = max( 2, 4) = 4 b_ 2 = max( p_ 3, p_ 4) = max( 3, 1) = 3 b_ 3 = max( p_ 5, p_ 6) = max( 5, 6) = 6 As a result, we made b = [ 4, 3, 6] . For a given array b , find the lexicographically minimal permutation p such that you can make the given array b from it. If b = [ 4, 3, 6 ] , then the lexicographically minimal permutation from which it can be made is p = [ 1, 4, 2, 3, 5, 6 ] , since: b_ 1 = max( p_ 1, p_ 2) = max( 1, 4) = 4 b_ 2 = max( p_ 3, p_ 4) = max( 2, 3) = 3 b_ 3 = max( p_ 5, p_ 6) = max( 5, 6) = 6 A permutation x_ 1, x_ 2, . . . , x_ n is lexicographically smaller than a permutation y_ 1, y_ 2 . . . , y_ n if and only if there exists such i ( 1 \u2264 i \u2264 n ) that x_ 1= y_ 1, x_ 2= y_ 2, . . . , x_ i- 1= y_ i- 1 and x_ i< y_ i .",
    "input": "The first line of input data contains a single integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. The description of the test cases follows. The first line of each test case contains one even integer n ( 2 \u2264 n \u2264 2 \u00b7 10^ 5 ) . The second line of each test case contains exactly n/ 2 integers b_ i ( 1 \u2264 b_ i \u2264 n ) \u2014 elements of array b . It is guaranteed that the sum of n values over all test cases does not exceed 2 \u00b7 10^ 5 .",
    "output": "For each test case, print on a separate line: lexicographically minimal permutation p such that you can make an array b from it; or a number - 1 if the permutation you are looking for does not exist.",
    "note": "The first test case is parsed in the problem statement.",
    "topics": [
      "binary search",
      "constructive algorithms",
      "data structures",
      "greedy",
      "math"
    ],
    "id": "1759G"
  },
  {
    "title": "All Possible Digits",
    "url": "https://codeforces.com/problemset/problem/1759/F",
    "history": "A positive number x of length n in base p ( 2 \u2264 p \u2264 10^ 9 ) is written on the blackboard. The number x is given as a sequence a_ 1, a_ 2, . . . , a_ n ( 0 \u2264 a_ i < p ) \u2014 the digits of x in order from left to right ( most significant to least significant) . Dmitry is very fond of all the digits of this number system, so he wants to see each of them at least once. In one operation, he can: take any number x written on the board, increase it by 1 , and write the new value x + 1 on the board. For example, p= 5 and x= 234_ 5 . Initially, the board contains the digits 2 , 3 and 4 ; Dmitry increases the number 234_ 5 by 1 and writes down the number 240_ 5 . On the board there are digits 0, 2, 3, 4 ; Dmitry increases the number 240_ 5 by 1 and writes down the number 241_ 5 . Now the board contains all the digits from 0 to 4 . Your task is to determine the minimum number of operations required to make all the digits from 0 to p- 1 appear on the board at least once.",
    "input": "The first line of the input contains a single integer t ( 1 \u2264 t \u2264 2 \u00b7 10^ 3 ) \u2014 the number of test cases. The descriptions of the input test cases follow. The first line of description of each test case contains two integers n ( 1 \u2264 n \u2264 100 ) and p ( 2 \u2264 p \u2264 10^ 9 ) \u2014 the length of the number and the base of the number system. The second line of the description of each test case contains n integers a_ 1, a_ 2, . . . , a_ n ( 0 \u2264 a_ i < p ) \u2014 digits of x in number system with base p It is guaranteed that the number x does not contain leading zeros ( that is, a_ 1> 0 ) .",
    "output": "For each test case print a single integer \u2014 the minimum number of operations required for Dmitry to get all the digits on the board from 0 to p- 1 . It can be shown that this always requires a finite number of operations.",
    "note": "",
    "topics": [
      "binary search",
      "data structures",
      "greedy",
      "math",
      "number theory"
    ],
    "id": "1759F"
  },
  {
    "title": "Thermostat",
    "url": "https://codeforces.com/problemset/problem/1759/C",
    "history": "Vlad came home and found out that someone had reconfigured the old thermostat to the temperature of a . The thermostat can only be set to a temperature from l to r inclusive, the temperature cannot change by less than x . Formally, in one operation you can reconfigure the thermostat from temperature a to temperature b if | a - b| \u2265 x and l \u2264 b \u2264 r . You are given l , r , x , a and b . Find the minimum number of operations required to get temperature b from temperature a , or say that it is impossible.",
    "input": "The first line of input data contains the single integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases in the test. The descriptions of the test cases follow. The first line of each case contains three integers l , r and x ( - 10^ 9 \u2264 l \u2264 r \u2264 10^ 9 , 1 \u2264 x \u2264 10^ 9 ) \u2014 range of temperature and minimum temperature change. The second line of each case contains two integers a and b ( l \u2264 a, b \u2264 r ) \u2014 the initial and final temperatures.",
    "output": "Output t numbers, each of which is the answer to the corresponding test case. If it is impossible to achieve the temperature b , output - 1, otherwise output the minimum number of operations.",
    "note": "In the first example, the thermostat is already set up correctly. In the second example, you can achieve the desired temperature as follows: 4 \u2192 10 \u2192 5 . In the third example, you can achieve the desired temperature as follows: 3 \u2192 8 \u2192 2 \u2192 7 . In the fourth test, it is impossible to make any operation.",
    "topics": [
      "greedy",
      "math",
      "shortest paths"
    ],
    "id": "1759C"
  },
  {
    "title": "Lost Permutation",
    "url": "https://codeforces.com/problemset/problem/1759/B",
    "history": "A sequence of n numbers is called a permutation if it contains all integers from 1 to n exactly once. For example, the sequences [ 3, 1, 4, 2 ] , [ 1 ] and [ 2, 1 ] are permutations, but [ 1, 2, 1 ] , [ 0, 1 ] and [ 1, 3, 4 ] \u2014 are not. Polycarp lost his favorite permutation and found only some of its elements \u2014 the numbers b_ 1, b_ 2, . . . b_ m . He is sure that the sum of the lost elements equals s . Determine whether one or more numbers can be appended to the given sequence b_ 1, b_ 2, . . . b_ m such that the sum of the added numbers equals s , and the resulting new array is a permutation?",
    "input": "The first line of input contains a single integer t ( 1 \u2264 t \u2264 100 ) \u2014the number of test cases. Then the descriptions of the test cases follow. The first line of each test set contains two integers m and s ( 1 \u2264 m \u2264 50 , 1 \u2264 s \u2264 1000 ) \u2014- the number of found elements and the sum of forgotten numbers. The second line of each test set contains m different integers b_ 1, b_ 2 . . . b_ m ( 1 \u2264 b_ i \u2264 50 ) \u2014 the elements Polycarp managed to find.",
    "output": "Print t lines, each of which is the answer to the corresponding test set. Print as the answer YES if you can append several elements to the array b , that their sum equals s and the result will be a permutation. Output NO otherwise. You can output the answer in any case ( for example, yEs, yes, Yes and YES will be recognized as positive answer) .",
    "note": "In the test case of the example, m= 3, s= 13, b= [ 3, 1, 4] . You can append to b the numbers 6, 2, 5 , the sum of which is 6+ 2+ 5= 13 . Note that the final array will become [ 3, 1, 4, 6, 2, 5] , which is a permutation. In the second test case of the example, m= 1, s= 1, b= [ 1] . You cannot append one or more numbers to [ 1] such that their sum equals 1 and the result is a permutation. In the third test case of the example, m= 3, s= 3, b= [ 1, 4, 2] . You can append the number 3 to b . Note that the resulting array will be [ 1, 4, 2, 3] , which is a permutation.",
    "topics": [
      "math"
    ],
    "id": "1759B"
  },
  {
    "title": "Range = \u221aSum",
    "url": "https://codeforces.com/problemset/problem/1758/D",
    "history": "You are given an integer n . Find a sequence of n distinct integers a_ 1, a_ 2, . . . , a_ n such that 1 \u2264 a_ i \u2264 10^ 9 for all i and max( a_ 1, a_ 2, . . . , a_ n) - min( a_ 1, a_ 2, . . . , a_ n) = \u221a( a_ 1 + a_ 2 + . . . + a_ n) . It can be proven that there exists a sequence of distinct integers that satisfies all the conditions above.",
    "input": "The first line of input contains t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. The first and only line of each test case contains one integer n ( 2 \u2264 n \u2264 3 \u00b7 10^ 5 ) \u2014 the length of the sequence you have to find. The sum of n over all test cases does not exceed 3 \u00b7 10^ 5 .",
    "output": "For each test case, output n space- separated distinct integers a_ 1, a_ 2, . . . , a_ n satisfying the conditions in the statement. If there are several possible answers, you can output any of them. Please remember that your integers must be distinct!",
    "note": "In the first test case, the maximum is 3 , the minimum is 1 , the sum is 4 , and 3 - 1 = \u221a( 4) . In the second test case, the maximum is 29 , the minimum is 18 , the sum is 121 , and 29- 18 = \u221a( 121) . For each test case, the integers are all distinct.",
    "topics": [
      "binary search",
      "brute force",
      "constructive algorithms",
      "math",
      "two pointers"
    ],
    "id": "1758D"
  },
  {
    "title": "Kevin and Permutation",
    "url": "https://codeforces.com/problemset/problem/1754/B",
    "history": "For his birthday, Kevin received the set of pairwise distinct numbers 1, 2, 3, . . . , n as a gift. He is going to arrange these numbers in a way such that the minimum absolute difference between two consecutive numbers be maximum possible. More formally, if he arranges numbers in order p_ 1, p_ 2, . . . , p_ n , he wants to maximize the value min_ i= 1^ n - 1| p_ i + 1 - p_ i | , where | x| denotes the absolute value of x . Help Kevin to do that.",
    "input": "Each test consists of multiple test cases. The first line contains a single integer t ( 1 \u2264 t \u2264 100 ) \u2014 the number of test cases. Description of the test cases follows. The only line of each test case contains an integer n ( 2 \u2264 n \u2264 1 000 ) \u2014 the size of the set.",
    "output": "For each test case print a single line containing n distinct integers p_ 1, p_ 2, . . . , p_ n ( 1 \u2264 p_ i \u2264 n ) describing the arrangement that maximizes the minimum absolute difference of consecutive elements. Formally, you have to print a permutation p which maximizes the value min_ i= 1^ n - 1| p_ i + 1 - p_ i | . If there are multiple optimal solutions, print any of them.",
    "note": "In the first test case the minimum absolute difference of consecutive elements equals min{ | 4 - 2 | , | 1 - 4 | , | 3 - 1 | } = min{ 2, 3, 2} = 2 . It' s easy to prove that this answer is optimal. In the second test case each permutation of numbers 1, 2, 3 is an optimal answer. The minimum absolute difference of consecutive elements equals to 1 .",
    "topics": [
      "constructive algorithms",
      "greedy",
      "math"
    ],
    "id": "1754B"
  },
  {
    "title": "Wish I Knew How to Sort",
    "url": "https://codeforces.com/problemset/problem/1753/C",
    "history": "You are given a binary array a ( all elements of the array are 0 or 1 ) of length n . You wish to sort this array, but unfortunately, your algorithms teacher forgot to teach you sorting algorithms. You perform the following operations until a is sorted: Choose two random indices i and j such that i < j . Indices are chosen equally probable among all pairs of indices ( i, j) such that 1 \u2264 i < j \u2264 n . If a_ i > a_ j , then swap elements a_ i and a_ j . What is the expected number of such operations you will perform before the array becomes sorted? It can be shown that the answer can be expressed as an irreducible fraction p/ q , where p and q are integers and q \u2261\u03380 998 244 353 . Output the integer equal to p \u00b7 q^ - 1 998 244 353 . In other words, output such an integer x that 0 \u2264 x < 998 244 353 and x \u00b7 q \u2261 p 998 244 353 .",
    "input": "Each test contains multiple test cases. The first line contains the number of test cases t ( 1 \u2264 t \u2264 10^ 5 ) . Description of the test cases follows. The first line of each test case contains an integer n ( 1 \u2264 n \u2264 200 000 ) \u2014 the number of elements in the binary array. The second line of each test case contains n integers a_ 1, a_ 2, . . . , a_ n ( a_ i \u2208{ 0, 1} ) \u2014 elements of the array. It' s guaranteed that sum of n over all test cases does not exceed 200 000 .",
    "output": "For each test case print one integer \u2014 the value p \u00b7 q^ - 1 998 244 353 .",
    "note": "Consider the first test case. If the pair of indices ( 2, 3) will be chosen, these elements will be swapped and array will become sorted. Otherwise, if one of pairs ( 1, 2) or ( 1, 3) will be selected, nothing will happen. So, the probability that the array will become sorted after one operation is 1/ 3 , the probability that the array will become sorted after two operations is 2/ 3\u00b71/ 3 , the probability that the array will become sorted after three operations is 2/ 3\u00b72/ 3\u00b71/ 3 and so on. The expected number of operations is \u2211_ i= 1^ \u221e( 2/ 3) ^ i - 1\u00b71/ 3\u00b7 i = 3 . In the second test case the array is already sorted so the expected number of operations is zero. In the third test case the expected number of operations equals to 75/ 4 so the answer is 75 \u00b7 4^ - 1\u2261 249 561 107 998 244 353 .",
    "topics": [
      "dp",
      "math",
      "probabilities"
    ],
    "id": "1753C"
  },
  {
    "title": "Factorial Divisibility",
    "url": "https://codeforces.com/problemset/problem/1753/B",
    "history": "You are given an integer x and an array of integers a_ 1, a_ 2, . . . , a_ n . You have to determine if the number a_ 1! + a_ 2! + . . . + a_ n! is divisible by x! . Here k! is a factorial of k \u2014 the product of all positive integers less than or equal to k . For example, 3! = 1 \u00b7 2 \u00b7 3 = 6 , and 5! = 1 \u00b7 2 \u00b7 3 \u00b7 4 \u00b7 5 = 120 .",
    "input": "The first line contains two integers n and x ( 1 \u2264 n \u2264 500 000 , 1 \u2264 x \u2264 500 000 ) . The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 x ) \u2014 elements of given array.",
    "output": "In the only line print \" Yes\" ( without quotes) if a_ 1! + a_ 2! + . . . + a_ n! is divisible by x! , and \" No\" ( without quotes) otherwise.",
    "note": "In the first example 3! + 2! + 2! + 2! + 3! + 3! = 6 + 2 + 2 + 2 + 6 + 6 = 24 . Number 24 is divisible by 4! = 24 . In the second example 3! + 2! + 2! + 2! + 2! + 2! + 1! + 1! = 18 , is divisible by 3! = 6 . In the third example 7! + 7! + 7! + 7! + 7! + 7! + 7! = 7 \u00b7 7! . It is easy to prove that this number is not divisible by 8! .",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "1753B"
  },
  {
    "title": "Doping",
    "url": "https://codeforces.com/problemset/problem/1750/G",
    "history": "We call an array a of length n fancy if for each 1 < i \u2264 n it holds that a_ i = a_ i- 1 + 1 . Let' s call f( p) applied to a permutation ^ \u2020 of length n as the minimum number of subarrays it can be partitioned such that each one of them is fancy. For example f( [ 1, 2, 3] ) = 1 , while f( [ 3, 1, 2] ) = 2 and f( [ 3, 2, 1] ) = 3 . Given n and a permutation p of length n , we define a permutation p' of length n to be k - special if and only if: p' is lexicographically smaller ^ than p , and f( p' ) = k . Your task is to count for each 1 \u2264 k \u2264 n the number of k - special permutations modulo m . ^ \u2020 A permutation is an array consisting of n distinct integers from 1 to n in arbitrary order. For example, [ 2, 3, 1, 5, 4] is a permutation, but [ 1, 2, 2] is not a permutation ( 2 appears twice in the array) and [ 1, 3, 4] is also not a permutation ( n= 3 but there is 4 in the array) . ^ A permutation a of length n is lexicographically smaller than a permutation b of length n if and only if the following holds: in the first position where a and b differ, the permutation a has a smaller element than the corresponding element in b .",
    "input": "The first line contains two integers n and m ( 1 \u2264 n \u2264 2000 , 10 \u2264 m \u2264 10^ 9 ) \u2014 the length of the permutation and the required modulo. The second line contains n distinct integers p_ 1, p_ 2, . . . , p_ n ( 1 \u2264 p_ i \u2264 n ) \u2014 the permutation p .",
    "output": "Print n integers, where the k - th integer is the number of k - special permutations modulo m .",
    "note": "In the first example, the permutations that are lexicographically smaller than [ 1, 3, 4, 2] are: [ 1, 2, 3, 4] , f( [ 1, 2, 3, 4] ) = 1 ; [ 1, 2, 4, 3] , f( [ 1, 2, 4, 3] ) = 3 ; [ 1, 3, 2, 4] , f( [ 1, 3, 2, 4] ) = 4 . Thus our answer is [ 1, 0, 1, 1] . In the second example, the permutations that are lexicographically smaller than [ 3, 2, 1] are: [ 1, 2, 3] , f( [ 1, 2, 3] ) = 1 ; [ 1, 3, 2] , f( [ 1, 3, 2] ) = 3 ; [ 2, 1, 3] , f( [ 2, 1, 3] ) = 3 ; [ 2, 3, 1] , f( [ 2, 3, 1] ) = 2 ; [ 3, 1, 2] , f( [ 3, 1, 2] ) = 2 . Thus our answer is [ 1, 2, 2] .",
    "topics": [
      "combinatorics",
      "dp",
      "math"
    ],
    "id": "1750G"
  },
  {
    "title": "Majority",
    "url": "https://codeforces.com/problemset/problem/1750/F",
    "history": "Everyone was happy coding, until suddenly a power shortage happened and the best competitive programming site went down. Fortunately, a system administrator bought some new equipment recently, including some UPSs. Thus there are some servers that are still online, but we need all of them to be working in order to keep the round rated. Imagine the servers being a binary string s of length n . If the i - th server is online, then s_ i = 1 , and s_ i = 0 otherwise. A system administrator can do the following operation called electricity spread, that consists of the following phases: Select two servers at positions 1 \u2264 i < j \u2264 n such that both are online ( i. e. s_ i= s_ j= 1 ) . The spread starts only from online servers. Check if we have enough power to make the spread. We consider having enough power if the number of turned on servers in range [ i, j] is at least the number of turned off servers in range [ i, j] . More formally, check whether 2 \u00b7 ( s_ i + s_ i+ 1 + . . . + s_ j) \u2265 j - i + 1 . If the check is positive, turn on all the offline servers in range [ i, j] . More formally, make s_ k : = 1 for all k from i to j . We call a binary string s of length n rated if we can turn on all servers ( i. e. make s_ i = 1 for 1 \u2264 i \u2264 n ) using the electricity spread operation any number of times ( possibly, 0 ) . Your task is to find the number of rated strings of length n modulo m .",
    "input": "The first and only line contains two integers n and m ( 1 \u2264 n \u2264 5000 , 10 \u2264 m \u2264 10^ 9 ) \u2014 the length of the string and the required module.",
    "output": "Print a single integer \u2014 the number of rated binary strings of length n . Since this number can be large, print it modulo m .",
    "note": "In the first example, the only rated string is 11. So the answer is 1 . In the second example, the rated strings are: 111; 101, because we can perform an operation with i = 1 and j = 3 . So the answer is 2 . In the third sample, the rated strings are: 1001; 1111; 1011; 1101. So the answer is 4 .",
    "topics": [
      "combinatorics",
      "dp",
      "math",
      "strings"
    ],
    "id": "1750F"
  },
  {
    "title": "Count GCD",
    "url": "https://codeforces.com/problemset/problem/1750/D",
    "history": "You are given two integers n and m and an array a of n integers. For each 1 \u2264 i \u2264 n it holds that 1 \u2264 a_ i \u2264 m . Your task is to count the number of different arrays b of length n such that: 1 \u2264 b_ i \u2264 m for each 1 \u2264 i \u2264 n , and ( b_ 1, b_ 2, b_ 3, . . . , b_ i) = a_ i for each 1 \u2264 i \u2264 n . Here ( a_ 1, a_ 2, . . . , a_ i) denotes the greatest common divisor ( GCD) of integers a_ 1, a_ 2, . . . , a_ i . Since this number can be too large, print it modulo 998 244 353 .",
    "input": "Each test consist of multiple test cases. The first line contains a single integer t ( 1 \u2264 t \u2264 100 ) \u2014 the number of test cases. The description of test cases follows. The first line of each test case contains two integers n and m ( 1 \u2264 n \u2264 2 \u00b7 10^ 5 , 1 \u2264 m \u2264 10^ 9 ) \u2014 the length of the array a and the maximum possible value of the element. The second line of each test case contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 m ) \u2014 the elements of the array a . It is guaranteed that the sum of n across all test cases doesn' t exceed 2 \u00b7 10^ 5 .",
    "output": "For each test case, print a single integer \u2014 the number of different arrays satisfying the conditions above. Since this number can be large, print it modulo 998 244 353 .",
    "note": "In the first test case, the possible arrays b are: [ 4, 2, 1] ; [ 4, 2, 3] ; [ 4, 2, 5] . In the second test case, the only array satisfying the demands is [ 1, 1] . In the third test case, it can be proven no such array exists.",
    "topics": [
      "combinatorics",
      "math",
      "number theory"
    ],
    "id": "1750D"
  },
  {
    "title": "Indirect Sort",
    "url": "https://codeforces.com/problemset/problem/1750/A",
    "history": "You are given a permutation a_ 1, a_ 2, . . . , a_ n of size n , where each integer from 1 to n appears exactly once. You can do the following operation any number of times ( possibly, zero) : Choose any three indices i, j, k ( 1 \u2264 i < j < k \u2264 n ) . If a_ i > a_ k , replace a_ i with a_ i + a_ j . Otherwise, swap a_ j and a_ k . Determine whether you can make the array a sorted in non- descending order.",
    "input": "Each test consists of multiple test cases. The first line contains a single integer t ( 1 \u2264 t \u2264 5000 ) \u2014 the number of test cases. The description of test cases follows. The first line of each test case contains a single integer n ( 3 \u2264 n \u2264 10 ) \u2014 the length of the array a . The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 n , a_ i = \u0338 a_ j if i = \u0338 j ) \u2014 the elements of the array a .",
    "output": "For each test case, output \" Yes\" ( without quotes) if the array can be sorted in non- descending order, and \" No\" ( without quotes) otherwise. You can output \" Yes\" and \" No\" in any case ( for example, strings \" YES\" , \" yEs\" and \" yes\" will be recognized as a positive response) .",
    "note": "In the first test case, [ 1, 2, 3] is already sorted in non- descending order. In the second test case, we can choose i = 1, j = 2, k = 3 . Since a_ 1 \u2264 a_ 3 , swap a_ 2 and a_ 3 , the array then becomes [ 1, 2, 3] , which is sorted in non- descending order. In the seventh test case, we can do the following operations successively: Choose i = 5, j = 6, k = 7 . Since a_ 5 \u2264 a_ 7 , swap a_ 6 and a_ 7 , the array then becomes [ 1, 2, 6, 7, 4, 5, 3] . Choose i = 5, j = 6, k = 7 . Since a_ 5 > a_ 7 , replace a_ 5 with a_ 5+ a_ 6= 9 , the array then becomes [ 1, 2, 6, 7, 9, 5, 3] . Choose i = 2, j = 5, k = 7 . Since a_ 2 \u2264 a_ 7 , swap a_ 5 and a_ 7 , the array then becomes [ 1, 2, 6, 7, 3, 5, 9] . Choose i = 2, j = 4, k = 6 . Since a_ 2 \u2264 a_ 6 , swap a_ 4 and a_ 6 , the array then becomes [ 1, 2, 6, 5, 3, 7, 9] . Choose i = 1, j = 3, k = 5 . Since a_ 1 \u2264 a_ 5 , swap a_ 3 and a_ 5 , the array then becomes [ 1, 2, 3, 5, 6, 7, 9] , which is sorted in non- descending order. In the third, the fourth, the fifth and the sixth test cases, it can be shown that the array cannot be sorted in non- descending order.",
    "topics": [
      "constructive algorithms",
      "implementation",
      "math"
    ],
    "id": "1750A"
  },
  {
    "title": "Counting Arrays",
    "url": "https://codeforces.com/problemset/problem/1749/D",
    "history": "Consider an array a of length n with elements numbered from 1 to n . It is possible to remove the i - th element of a if gcd( a_ i, i) = 1 , where gcd denotes the greatest common divisor. After an element is removed, the elements to the right are shifted to the left by one position. An array b with n integers such that 1 \u2264 b_ i \u2264 n - i + 1 is a removal sequence for the array a if it is possible to remove all elements of a , if you remove the b_ 1 - th element, then the b_ 2 - th, . . . , then the b_ n - th element. For example, let a = [ 42, 314] : [ 1, 1] is a removal sequence: when you remove the 1 - st element of the array, the condition gcd( 42, 1) = 1 holds, and the array becomes [ 314] ; when you remove the 1 - st element again, the condition gcd( 314, 1) = 1 holds, and the array becomes empty. [ 2, 1] is not a removal sequence: when you try to remove the 2 - nd element, the condition gcd( 314, 2) = 1 is false. An array is ambiguous if it has at least two removal sequences. For example, the array [ 1, 2, 5] is ambiguous: it has removal sequences [ 3, 1, 1] and [ 1, 2, 1] . The array [ 42, 314] is not ambiguous: the only removal sequence it has is [ 1, 1] . You are given two integers n and m . You have to calculate the number of ambiguous arrays a such that the length of a is from 1 to n and each a_ i is an integer from 1 to m .",
    "input": "The only line of the input contains two integers n and m ( 2 \u2264 n \u2264 3 \u00b7 10^ 5 ; 1 \u2264 m \u2264 10^ 12 ) .",
    "output": "Print one integer \u2014 the number of ambiguous arrays a such that the length of a is from 1 to n and each a_ i is an integer from 1 to m . Since the answer can be very large, print it modulo 998244353 .",
    "note": "",
    "topics": [
      "combinatorics",
      "dp",
      "math",
      "number theory"
    ],
    "id": "1749D"
  },
  {
    "title": "Yet Another Array Counting Problem",
    "url": "https://codeforces.com/problemset/problem/1748/E",
    "history": "The position of the leftmost maximum on the segment [ l; r] of array x = [ x_ 1, x_ 2, . . . , x_ n] is the smallest integer i such that l \u2264 i \u2264 r and x_ i = max( x_ l, x_ l+ 1, . . . , x_ r) . You are given an array a = [ a_ 1, a_ 2, . . . , a_ n] of length n . Find the number of integer arrays b = [ b_ 1, b_ 2, . . . , b_ n] of length n that satisfy the following conditions: 1 \u2264 b_ i \u2264 m for all 1 \u2264 i \u2264 n ; for all pairs of integers 1 \u2264 l \u2264 r \u2264 n , the position of the leftmost maximum on the segment [ l; r] of the array b is equal to the position of the leftmost maximum on the segment [ l; r] of the array a . Since the answer might be very large, print its remainder modulo 10^ 9+ 7 .",
    "input": "Each test contains multiple test cases. The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 3 ) \u2014 the number of test cases. The first line of each test case contains two integers n and m ( 2 \u2264 n, m \u2264 2 \u00b7 10^ 5 , n \u00b7 m \u2264 10^ 6 ) . The second line of each test case contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 m ) \u2014 the array a . It is guaranteed that the sum of n \u00b7 m over all test cases doesn' t exceed 10^ 6 .",
    "output": "For each test case print one integer \u2014 the number of arrays b that satisfy the conditions from the statement, modulo 10^ 9+ 7 .",
    "note": "In the first test case, the following 8 arrays satisfy the conditions from the statement: [ 1, 2, 1] ; [ 1, 2, 2] ; [ 1, 3, 1] ; [ 1, 3, 2] ; [ 1, 3, 3] ; [ 2, 3, 1] ; [ 2, 3, 2] ; [ 2, 3, 3] . In the second test case, the following 5 arrays satisfy the conditions from the statement: [ 1, 1, 1, 1] ; [ 2, 1, 1, 1] ; [ 2, 2, 1, 1] ; [ 2, 2, 2, 1] ; [ 2, 2, 2, 2] .",
    "topics": [
      "binary search",
      "data structures",
      "divide and conquer",
      "dp",
      "flows",
      "math",
      "trees"
    ],
    "id": "1748E"
  },
  {
    "title": "ConstructOR ",
    "url": "https://codeforces.com/problemset/problem/1748/D",
    "history": "You are given three integers a , b , and d . Your task is to find any integer x which satisfies all of the following conditions, or determine that no such integers exist: 0 \u2264 x 2^ 60 ; a| x is divisible by d ; b| x is divisible by d . Here, | denotes the bitwise OR operation.",
    "input": "Each test contains multiple test cases. The first line of input contains one integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. Each test case consists of one line, containing three integers a , b , and d ( 1 \u2264 a, b, d 2^ 30 ) .",
    "output": "For each test case print one integer. If there exists an integer x which satisfies all of the conditions from the statement, print x . Otherwise, print - 1 . If there are multiple solutions, you may print any of them.",
    "note": "In the first test case, x= 18 is one of the possible solutions, since 39| 18= 55 and 12| 18= 30 , both of which are multiples of d= 5 . In the second test case, x= 14 is one of the possible solutions, since 8| 14= 6| 14= 14 , which is a multiple of d= 14 . In the third and fourth test cases, we can show that there are no solutions.",
    "topics": [
      "bitmasks",
      "chinese remainder theorem",
      "combinatorics",
      "constructive algorithms",
      "math",
      "number theory"
    ],
    "id": "1748D"
  },
  {
    "title": "The Ultimate Square",
    "url": "https://codeforces.com/problemset/problem/1748/A",
    "history": "You have n rectangular wooden blocks, which are numbered from 1 to n . The i - th block is 1 unit high and \u2308i/ 2\u2309 units long. Here, \u2308x/ 2\u2309 denotes the result of division of x by 2 , rounded up. For example, \u23084/ 2\u2309 = 2 and \u23085/ 2\u2309 = \u2308 2. 5 \u2309 = 3 . For example, if n= 5 , then the blocks have the following sizes: 1 \u00d7 1 , 1 \u00d7 1 , 1 \u00d7 2 , 1 \u00d7 2 , 1 \u00d7 3 . The available blocks for n= 5 Find the maximum possible side length of a square you can create using these blocks, without rotating any of them. Note that you don' t have to use all of the blocks. One of the ways to create 3 \u00d7 3 square using blocks 1 through 5",
    "input": "Each test contains multiple test cases. The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. The first line of each test case contains a single integer n ( 1 \u2264 n \u2264 10^ 9 ) \u2014 the number of blocks.",
    "output": "For each test case, print one integer \u2014 the maximum possible side length of a square you can create.",
    "note": "In the first test case, you can create a 1 \u00d7 1 square using only one of the blocks. In the second test case, one of the possible ways to create a 3 \u00d7 3 square is shown in the statement. It is impossible to create a 4 \u00d7 4 or larger square, so the answer is 3 .",
    "topics": [
      "math"
    ],
    "id": "1748A"
  },
  {
    "title": "List Generation",
    "url": "https://codeforces.com/problemset/problem/1747/E",
    "history": "For given integers n and m , let' s call a pair of arrays a and b of integers good, if they satisfy the following conditions: a and b have the same length, let their length be k . k \u2265 2 and a_ 1 = 0, a_ k = n, b_ 1 = 0, b_ k = m . For each 1 < i \u2264 k the following holds: a_ i \u2265 a_ i - 1 , b_ i \u2265 b_ i - 1 , and a_ i + b_ i = \u0338 a_ i - 1 + b_ i - 1 . Find the sum of | a| over all good pairs of arrays ( a, b) . Since the answer can be very large, output it modulo 10^ 9 + 7 .",
    "input": "The input consists of multiple test cases. The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 4) \u2014 the number of test cases. The description of the test cases follows. The only line of each test case contains two integers n and m ( 1 \u2264 n, m \u2264 5 \u00b7 10^ 6) . It is guaranteed that the sum of n over all test cases does not exceed 5 \u00b7 10^ 6 and the sum of m over all test cases does not exceed 5 \u00b7 10^ 6 .",
    "output": "For each test case, output a single integer \u2014 the sum of | a| over all good pairs of arrays ( a, b) modulo 10^ 9 + 7 .",
    "note": "In the first testcase, the good pairs of arrays are ( [ 0, 1] , [ 0, 1] ) , length = 2 . ( [ 0, 1, 1] , [ 0, 0, 1] ) , length = 3 . ( [ 0, 0, 1] , [ 0, 1, 1] ) , length = 3 . Hence the sum of the lengths would be 2 + 3 + 3 = 8 .",
    "topics": [
      "combinatorics",
      "dp",
      "math"
    ],
    "id": "1747E"
  },
  {
    "title": "Permutation Operations",
    "url": "https://codeforces.com/problemset/problem/1746/C",
    "history": "You are given a permutation a of size n and you should perform n operations on it. In the i - th operation, you can choose a non- empty suffix of a and increase all of its elements by i . How can we perform the operations to minimize the number of inversions in the final array? Note that you can perform operations on the same suffix any number of times you want. A permutation of size n is an array of size n such that each integer from 1 to n occurs exactly once in this array. A suffix is several consecutive elements of an array that include the last element of the array. An inversion in an array a is a pair of indices ( i, j) such that i > j and a_ i < a_ j .",
    "input": "Each test contains multiple test cases. The first line contains the number of test cases t ( 1 \u2264 t \u2264 10^ 4 ) . The description of the test cases follows. The first line of each test case contains a single integer n ( 1 \u2264 n \u2264 10^ 5 ) \u2014 the size of the array. The second line contains n distinct integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 n ) , the initial permutation a . It' s guaranteed that the sum of n over all test cases does not exceed 2 \u00b7 10^ 5 .",
    "output": "For each test case, print n integers x_ 1, x_ 2, . . . , x_ n ( 1 \u2264 x_ i\u2264 n for each 1 \u2264 i \u2264 n ) indicating that the i - th operation must be applied to the suffix starting at index x_ i . If there are multiple answers, print any of them.",
    "note": "In the first test case one of the optimal solutions is to increase the whole array on each operation ( that is, choose the suffix starting at index 1 ) . The final array [ 11, 12, 13, 14] contains 0 inversions. In the second test case, a will be equal to [ 2, 4, 3, 5, 6] , [ 2, 4, 3, 7, 8] , [ 2, 4, 6, 10, 11] , [ 2, 8, 10, 14, 15] and [ 7, 13, 15, 19, 20] after the first, second, third, fourth, and fifth operations, respectively. So the final array a has zero inversions.",
    "topics": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "math"
    ],
    "id": "1746C"
  },
  {
    "title": "MEX vs MED",
    "url": "https://codeforces.com/problemset/problem/1744/F",
    "history": "You are given a permutation p_ 1, p_ 2, . . . , p_ n of length n of numbers 0, . . . , n - 1 . Count the number of subsegments 1 \u2264 l \u2264 r \u2264 n of this permutation such that mex( p_ l, p_ l+ 1, . . . , p_ r) > med( p_ l, p_ l+ 1, . . . , p_ r) . mex of S is the smallest non- negative integer that does not occur in S . For example: mex( 0, 1, 2, 3) = 4 mex( 0, 4, 1, 3) = 2 mex( 5, 4, 0, 1, 2) = 3 med of the set S is the median of the set, i. e. the element that, after sorting the elements in non- decreasing order, will be at position number \u230a| S| + 1/ 2\u230b ( array elements are numbered starting from 1 and here \u230av\u230b denotes rounding v down. ) . For example: med( 0, 1, 2, 3) = 1 med( 0, 4, 1, 3) = 1 med( 5, 4, 0, 1, 2) = 2 A sequence of n numbers is called a permutation if it contains all the numbers from 0 to n - 1 exactly once.",
    "input": "The first line of the input contains a single integer t ( 1 \u2264 t \u2264 10^ 4 ) , the number of test cases. The descriptions of the test cases follow. The first line of each test case contains a single integer n ( 1 \u2264 n \u2264 2 \u00b7 10^ 5 ) , the length of the permutation p . The second line of each test case contains exactly n integers: p_ 1, p_ 2, . . . , p_ n ( 0 \u2264 p_ i \u2264 n - 1 ) , elements of permutation p . It is guaranteed that the sum of n over all test cases does not exceed 2 \u00b7 10^ 5 .",
    "output": "For each test case print the answer in a single line: the number of subsegments 1 \u2264 l \u2264 r \u2264 n of this permutation such that mex( p_ l, p_ l+ 1, . . . , p_ r) > med( p_ l, p_ l+ 1, . . . , p_ r) .",
    "note": "The first test case contains exactly one subsegment and mex( 0) = 1 > med( 0) = 0 on it. In the third test case, on the following subsegments: [ 1, 0] , [ 0] , [ 1, 0, 2] and [ 0, 2] , mex is greater than med . In the fourth test case, on the following subsegments: [ 0, 2] , [ 0] , [ 0, 2, 1] and [ 0, 2, 1, 3] , mex greater than med .",
    "topics": [
      "math",
      "two pointers"
    ],
    "id": "1744F"
  },
  {
    "title": "Divisible Numbers (hard version)",
    "url": "https://codeforces.com/problemset/problem/1744/E2",
    "history": "This is an hard version of the problem. The only difference between an easy and a hard version is the constraints on a , b , c and d . You are given 4 positive integers a , b , c , d with a < c and b < d . Find any pair of numbers x and y that satisfies the following conditions: a < x \u2264 c , b < y \u2264 d , x \u00b7 y is divisible by a \u00b7 b . Note that required x and y may not exist.",
    "input": "The first line of the input contains a single integer t ( 1 \u2264 t \u2264 10 ) , the number of test cases. The descriptions of the test cases follow. The only line of each test case contains four integers a , b , c and d ( 1 \u2264 a < c \u2264 10^ 9 , 1 \u2264 b < d \u2264 10^ 9 ) .",
    "output": "For each test case print a pair of numbers a < x \u2264 c and b < y \u2264 d such that x \u00b7 y is divisible by a \u00b7 b . If there are multiple answers, print any of them. If there is no such pair of numbers, then print - 1 - 1.",
    "note": "",
    "topics": [
      "brute force",
      "math",
      "number theory"
    ],
    "id": "1744E2"
  },
  {
    "title": "Divisible Numbers (easy version)",
    "url": "https://codeforces.com/problemset/problem/1744/E1",
    "history": "This is an easy version of the problem. The only difference between an easy and a hard version is the constraints on a , b , c and d . You are given 4 positive integers a , b , c , d with a < c and b < d . Find any pair of numbers x and y that satisfies the following conditions: a < x \u2264 c , b < y \u2264 d , x \u00b7 y is divisible by a \u00b7 b . Note that required x and y may not exist.",
    "input": "The first line of the input contains a single integer t ( 1 \u2264 t \u2264 10 ) , the number of test cases. The descriptions of the test cases follow. The only line of each test case contains four integers a , b , c and d ( 1 \u2264 a < c \u2264 10^ 5 , 1 \u2264 b < d \u2264 10^ 5 ) .",
    "output": "For each test case print a pair of numbers a < x \u2264 c and b < y \u2264 d such that x \u00b7 y is divisible by a \u00b7 b . If there are multiple answers, print any of them. If there is no such pair of numbers, then print - 1 - 1.",
    "note": "",
    "topics": [
      "brute force",
      "math",
      "number theory"
    ],
    "id": "1744E1"
  },
  {
    "title": "Divisibility by 2^n",
    "url": "https://codeforces.com/problemset/problem/1744/D",
    "history": "You are given an array of positive integers a_ 1, a_ 2, . . . , a_ n . Make the product of all the numbers in the array ( that is, a_ 1 \u00b7 a_ 2 \u00b7. . . \u00b7 a_ n ) divisible by 2^ n . You can perform the following operation as many times as you like: select an arbitrary index i ( 1 \u2264 i \u2264 n ) and replace the value a_ i with a_ i= a_ i \u00b7 i . You cannot apply the operation repeatedly to a single index. In other words, all selected values of i must be different. Find the smallest number of operations you need to perform to make the product of all the elements in the array divisible by 2^ n . Note that such a set of operations does not always exist.",
    "input": "The first line of the input contains a single integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number test cases. Then the descriptions of the input data sets follow. The first line of each test case contains a single integer n ( 1 \u2264 n \u2264 2 \u00b7 10^ 5 ) \u2014 the length of array a . The second line of each test case contains exactly n integers: a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 9 ) . It is guaranteed that the sum of n values over all test cases in a test does not exceed 2 \u00b7 10^ 5 .",
    "output": "For each test case, print the least number of operations to make the product of all numbers in the array divisible by 2^ n . If the answer does not exist, print - 1.",
    "note": "In the first test case, the product of all elements is initially 2 , so no operations needed. In the second test case, the product of elements initially equals 6 . We can apply the operation for i = 2 , and then a_ 2 becomes 2\u00b72= 4 , and the product of numbers becomes 3\u00b74= 12 , and this product of numbers is divided by 2^ n= 2^ 2= 4 . In the fourth test case, even if we apply all possible operations, we still cannot make the product of numbers divisible by 2^ n \u2014 it will be ( 13\u00b71) \u00b7( 17\u00b72) \u00b7( 1\u00b73) \u00b7( 1\u00b74) = 5304 , which does not divide by 2^ n= 2^ 4= 16 . In the fifth test case, we can apply operations for i = 2 and i = 4 .",
    "topics": [
      "greedy",
      "math",
      "sortings"
    ],
    "id": "1744D"
  },
  {
    "title": "Even-Odd Increments ",
    "url": "https://codeforces.com/problemset/problem/1744/B",
    "history": "You are given n of integers a_ 1, a_ 2, . . . , a_ n . Process q queries of two types: query of the form \" 0 x_ j \" : add the value x_ j to all even elements of the array a , query of the form \" 1 x_ j \" : add the value x_ j to all odd elements of the array a . Note that when processing the query, we look specifically at the odd/ even value of a_ i , not its index. After processing each query, print the sum of the elements of the array a . Please note that the answer for some test cases won' t fit into 32- bit integer type, so you should use at least 64- bit integer type in your programming language ( like long long for C+ + ) .",
    "input": "The first line of the input contains an integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. The descriptions of the test cases follow. The first line of each test case contains two integers n and q ( 1 \u2264 n , q \u2264 10^ 5 ) \u2014 the length of array a and the number of queries. The second line of each test case contains exactly n integers: a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 9 ) \u2014 elements of the array a . The following q lines contain queries as two integers type_ j and x_ j ( 0 \u2264 type_ j \u2264 1 , 1 \u2264 x_ j \u2264 10^ 4 ) . It is guaranteed that the sum of values n over all test cases in a test does not exceed 10^ 5 . Similarly, the sum of values q over all test cases does not exceed 10^ 5 .",
    "output": "For each test case, print q numbers: the sum of the elements of the array a after processing a query.",
    "note": "In the first test case, the array a = [ 2] after the first query. In the third test case, the array a is modified as follows: [ 1, 3, 2, 4, 10, 48] \u2192 [ 7, 9, 2, 4, 10, 48] \u2192 [ 7, 9, 7, 9, 15, 53] \u2192 [ 7, 9, 7, 9, 15, 53] \u2192 [ 10, 12, 10, 12, 18, 56] \u2192 [ 22, 24, 22, 24, 30, 68] \u2192 [ 23, 25, 23, 25, 31, 69] .",
    "topics": [
      "implementation",
      "math"
    ],
    "id": "1744B"
  },
  {
    "title": "Antifibonacci Cut",
    "url": "https://codeforces.com/problemset/problem/1743/G",
    "history": "Note that the memory limit is unusual. Let' s define the sequence of Fibonacci strings as follows: f_ 0 is 0, f_ 1 is 1, f_ i is f_ i- 1 + f_ i- 2 for i> 1 ( + denotes the concatenation of two strings) . So, for example, f_ 2 is 10, f_ 3 is 101, f_ 4 is 10110. For a given string s , let' s define g( s) as the number of ways to cut it into several ( any number, possibly even just one) strings such that none of these strings are Fibonacci strings. For example, if s is 10110101, g( s) = 3 since there are three ways to cut it: 101101 + 01; 1011 + 0101; 1011 + 01 + 01. You are given a sequence of strings s_ 1, s_ 2, . . . , s_ n . Calculate g( s_ 1) , g( s_ 1 + s_ 2) , . . . , g( s_ 1 + s_ 2 + . . . + s_ n) . Since these values can be huge, print them modulo 998244353 .",
    "input": "The first line of the input contains one integer n ( 1 \u2264 n \u2264 3 \u00b7 10^ 3 ) . Then, n lines follow. The i - th line contains the string s_ i ( 1 \u2264 | s_ i| \u2264 10^ 3 ) , consisting of characters 0 and/ or 1.",
    "output": "Print n integers, where the i - th integer is g( s_ 1 + s_ 2 + . . . + s_ i) 998244353 .",
    "note": "",
    "topics": [
      "bitmasks",
      "combinatorics",
      "constructive algorithms",
      "data structures",
      "dp",
      "hashing",
      "math"
    ],
    "id": "1743G"
  },
  {
    "title": "Password",
    "url": "https://codeforces.com/problemset/problem/1743/A",
    "history": "Monocarp has forgotten the password to his mobile phone. The password consists of 4 digits from 0 to 9 ( note that it can start with the digit 0 ) . Monocarp remembers that his password had exactly two different digits, and each of these digits appeared exactly two times in the password. Monocarp also remembers some digits which were definitely not used in the password. You have to calculate the number of different sequences of 4 digits that could be the password for Monocarp' s mobile phone ( i. e. these sequences should meet all constraints on Monocarp' s password) .",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 200 ) \u2014 the number of testcases. The first line of each testcase contains a single integer n ( 1 \u2264 n \u2264 8 ) \u2014 the number of digits for which Monocarp remembers that they were not used in the password. The second line contains n different integers a_ 1, a_ 2, . . . a_ n ( 0 \u2264 a_ i \u2264 9 ) representing the digits that were not used in the password. Note that the digits a_ 1, a_ 2, . . . , a_ n are given in ascending order.",
    "output": "For each testcase, print one integer \u2014 the number of different 4 - digit sequences that meet the constraints.",
    "note": "In the first example, all possible passwords are: \" 3377\" , \" 3737\" , \" 3773\" , \" 7337\" , \" 7373\" , \" 7733\" .",
    "topics": [
      "brute force",
      "combinatorics",
      "implementation",
      "math"
    ],
    "id": "1743A"
  },
  {
    "title": "Orray",
    "url": "https://codeforces.com/problemset/problem/1742/G",
    "history": "You are given an array a consisting of n nonnegative integers. Let' s define the prefix OR array b as the array b_ i = a_ 1 OR a_ 2 OR . . . OR a_ i , where OR represents the bitwise OR operation. In other words, the array b is formed by computing the OR of every prefix of a . You are asked to rearrange the elements of the array a in such a way that its prefix OR array is lexicographically maximum. An array x is lexicographically greater than an array y if in the first position where x and y differ, x_ i > y_ i .",
    "input": "The first line of the input contains a single integer t ( 1 \u2264 t \u2264 100 ) \u2014 the number of test cases. The description of test cases follows. The first line of each test case contains a single integer n ( 1 \u2264 n \u2264 2 \u00b7 10^ 5 ) \u2014 the length of the array a . The second line of each test case contains n nonnegative integers a_ 1, . . . , a_ n ( 0 \u2264 a_ i \u2264 10^ 9 ) . It is guaranteed that the sum of n over all test cases does not exceed 2 \u00b7 10^ 5 .",
    "output": "For each test case print n integers \u2014 any rearrangement of the array a that obtains the lexicographically maximum prefix OR array.",
    "note": "",
    "topics": [
      "bitmasks",
      "brute force",
      "greedy",
      "math",
      "sortings"
    ],
    "id": "1742G"
  },
  {
    "title": "Scuza",
    "url": "https://codeforces.com/problemset/problem/1742/E",
    "history": "Timur has a stairway with n steps. The i - th step is a_ i meters higher than its predecessor. The first step is a_ 1 meters higher than the ground, and the ground starts at 0 meters. The stairs for the first test case. Timur has q questions, each denoted by an integer k_ 1, . . . , k_ q . For each question k_ i , you have to print the maximum possible height Timur can achieve by climbing the steps if his legs are of length k_ i . Timur can only climb the j - th step if his legs are of length at least a_ j . In other words, k_ i \u2265 a_ j for each step j climbed. Note that you should answer each question independently.",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 100 ) \u2014 the number of test cases. The first line of each test case contains two integers n, q ( 1 \u2264 n, q \u2264 2\u00b710^ 5 ) \u2014 the number of steps and the number of questions, respectively. The second line of each test case contains n integers ( 1 \u2264 a_ i \u2264 10^ 9 ) \u2014 the height of the steps. The third line of each test case contains q integers ( 0 \u2264 k_ i \u2264 10^ 9 ) \u2014 the numbers for each question. It is guaranteed that the sum of n does not exceed 2\u00b710^ 5 , and the sum of q does not exceed 2\u00b710^ 5 .",
    "output": "For each test case, output a single line containing q integers, the answer for each question. Please note, that the answer for some questions won' t fit into 32- bit integer type, so you should use at least 64- bit integer type in your programming language ( like long long for C+ + ) .",
    "note": "Consider the first test case, pictured in the statement. If Timur' s legs have length 1 , then he can only climb stair 1 , so the highest he can reach is 1 meter. If Timur' s legs have length 2 or 4 , then he can only climb stairs 1 , 2 , and 3 , so the highest he can reach is 1+ 2+ 1= 4 meters. If Timur' s legs have length 9 or 10 , then he can climb the whole staircase, so the highest he can reach is 1+ 2+ 1+ 5= 9 meters. In the first question of the second test case, Timur has no legs, so he cannot go up even a single step. : (",
    "topics": [
      "binary search",
      "greedy",
      "math"
    ],
    "id": "1742E"
  },
  {
    "title": "Multi-Colored Segments",
    "url": "https://codeforces.com/problemset/problem/1741/F",
    "history": "Dmitry has n segments of different colors on the coordinate axis Ox . Each segment is characterized by three integers l_ i , r_ i and c_ i ( 1 \u2264 l_ i \u2264 r_ i \u2264 10^ 9, 1 \u2264 c_ i \u2264 n ) , where l_ i and r_ i are are the coordinates of the ends of the i - th segment, and c_ i is its color. Dmitry likes to find the minimum distances between segments. However, he considers pairs of segments of the same color uninteresting. Therefore, he wants to know for each segment the distance from this segment to the nearest differently colored segment. The distance between two segments is the minimum of the distances between a point of the first segment and a point of the second segment. In particular, if the segments intersect, then the distance between them is equal to 0 . For example, Dmitry has 5 segments: The first segment intersects with the second ( and these are segments of different colors) , so the answers for them are equal to 0 . For the 3 - rd segment, the nearest segment of a different color is the 2 - nd segment, the distance to which is equal to 2 . For the 4 - th segment, the nearest segment of a different color is the 5 - th segment, the distance to which is equal to 1 . The 5 - th segment lies inside the 2 - nd segment ( and these are segments of different colors) , so the answers for them are equal to 0 .",
    "input": "The first line of the input contains an integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases in the test. The descriptions of the test cases follow. The first line of description of each test case contains one integer n ( 2 \u2264 n \u2264 2 \u00b7 10^ 5 ) \u2014 the number of segments. The next n lines contain descriptions of the segments. Each segment is described by three integers l_ i , r_ i and c_ i ( 1 \u2264 l_ i \u2264 r_ i \u2264 10^ 9, 1 \u2264 c_ i \u2264 n ) \u2014 coordinates of the left and right ends of i - th segment, as well as the color of this segment. It is guaranteed that there are at least 2 segments of different colors. It is guaranteed that the sum of n over all test cases does not exceed 2 \u00b7 10^ 5 .",
    "output": "For each test case, on a separate line print n integers, where the i - th number is equal to the distance from the i - th segment to the nearest segment of a different color.",
    "note": "In the first test case of the first sample there is only one segment of color 2 , and all other segments have color 1 . Therefore, for segments of color 1 , the answer is equal to the distance to the 3 rd segment, and for 3 rd one, the answer is equal to the minimum of the distances to segments of color 1 . In the second test case of the first sample there are only 2 segments, and for both of them the answer is equal to the distance between them. In the third test case of the first sample, each segment intersects at least one of its ends with a segment of a different color, so all answers are equal to 0 . The fourth test case of the first sample is described in the problem statement. In the fifth test case of the first sample, one segment lies completely inside the other, and for both of them the answer is 0 . In the sixth test case of the first sample, all segments are points of different colors.",
    "topics": [
      "binary search",
      "data structures",
      "math",
      "sortings"
    ],
    "id": "1741F"
  },
  {
    "title": "Minimize the Thickness",
    "url": "https://codeforces.com/problemset/problem/1741/C",
    "history": "You are given a sequence a= [ a_ 1, a_ 2, . . . , a_ n] consisting of n positive integers. Let' s call a group of consecutive elements a segment. Each segment is characterized by two indices: the index of its left end and the index of its right end. Denote by a[ l, r] a segment of the sequence a with the left end in l and the right end in r , i. e. a[ l, r] = [ a_ l, a_ l+ 1, . . . , a_ r] . For example, if a= [ 31, 4, 15, 92, 6, 5] , then a[ 2, 5] = [ 4, 15, 92, 6] , a[ 5, 5] = [ 6] , a[ 1, 6] = [ 31, 4, 15, 92, 6, 5] are segments. We split the given sequence a into segments so that: each element is in exactly one segment; the sums of elements for all segments are equal. For example, if a = [ 55, 45, 30, 30, 40, 100 ] , then such a sequence can be split into three segments: a[ 1, 2] = [ 55, 45] , a[ 3, 5] = [ 30, 30, 40] , a[ 6, 6] = [ 100] . Each element belongs to exactly segment, the sum of the elements of each segment is 100 . Let' s define thickness of split as the length of the longest segment. For example, the thickness of the split from the example above is 3 . Find the minimum thickness among all possible splits of the given sequence of a into segments in the required way.",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 100 ) \u2014 the number of test cases. Each test case is described by two lines. The first line of each test case contains a single integer n ( 1 \u2264 n \u2264 2000 ) \u2014 the length of the sequence a . The second line of each test case contains exactly n integers: a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 6 ) \u2014 elements of the sequence a . It is guaranteed that the sum of n for all test cases does not exceed 2000 .",
    "output": "For each test case, output one integer \u2014 the minimum possible thickness of a split of the sequence a into segments. Note that there always exist a split, you can always consider whole sequence as one segment.",
    "note": "The split in the first test case is explained in the statement, it can be shown that it is optimal. In the second test case, it is possible to split into segments only by leaving a single segment. Then the thickness of this split is equal to the length of the entire sequence, that is, 4 . In the third test case, the optimal split will be [ 10, 55] , [ 35, 30] , [ 65] . The thickness of the split equals to 2 . In the fourth test case possible splits are: [ 4] + [ 1, 1, 1, 1] + [ 4] ; [ 4, 1, 1] + [ 1, 1, 4] .",
    "topics": [
      "brute force",
      "greedy",
      "math",
      "two pointers"
    ],
    "id": "1741C"
  },
  {
    "title": "Funny Permutation",
    "url": "https://codeforces.com/problemset/problem/1741/B",
    "history": "A sequence of n numbers is called permutation if it contains all numbers from 1 to n exactly once. For example, the sequences [ 3, 1, 4, 2] , [ 1 ] and [ 2, 1] are permutations, but [ 1, 2, 1] , [ 0, 1] and [ 1, 3, 4] are not. For a given number n you need to make a permutation p such that two requirements are satisfied at the same time: For each element p_ i , at least one of its neighbors has a value that differs from the value of p_ i by one. That is, for each element p_ i ( 1 \u2264 i \u2264 n ) , at least one of its neighboring elements ( standing to the left or right of p_ i ) must be p_ i + 1 , or p_ i - 1 . the permutation must have no fixed points. That is, for every i ( 1 \u2264 i \u2264 n ) , p_ i = \u0338 i must be satisfied. Let' s call the permutation that satisfies these requirements funny. For example, let n = 4 . Then [ 4, 3, 1, 2 ] is a funny permutation, since: to the right of p_ 1= 4 is p_ 2= p_ 1- 1= 4- 1= 3 ; to the left of p_ 2= 3 is p_ 1= p_ 2+ 1= 3+ 1= 4 ; to the right of p_ 3= 1 is p_ 4= p_ 3+ 1= 1+ 1= 2 ; to the left of p_ 4= 2 is p_ 3= p_ 4- 1= 2- 1= 1 . for all i is p_ i i . For a given positive integer n , output any funny permutation of length n , or output - 1 if funny permutation of length n does not exist.",
    "input": "The first line of input data contains a single integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. The description of the test cases follows. Each test case consists of f single line containing one integer n ( 2 \u2264 n \u2264 2 \u00b7 10^ 5 ) . It is guaranteed that the sum of n over all test cases does not exceed 2 \u00b7 10^ 5 .",
    "output": "For each test case, print on a separate line: any funny permutation p of length n ; or the number - 1 if the permutation you are looking for does not exist.",
    "note": "The first test case is explained in the problem statement. In the second test case, it is not possible to make the required permutation: permutations [ 1, 2, 3] , [ 1, 3, 2] , [ 2, 1, 3] , [ 3, 2, 1] have fixed points, and in [ 2, 3, 1] and [ 3, 1, 2] the first condition is met not for all positions.",
    "topics": [
      "constructive algorithms",
      "math"
    ],
    "id": "1741B"
  },
  {
    "title": "Conditional Mix",
    "url": "https://codeforces.com/problemset/problem/1740/F",
    "history": "Pak Chanek is given an array a of n integers. For each i ( 1 \u2264 i \u2264 n ) , Pak Chanek will write the one- element set { a_ i} on a whiteboard. After that, in one operation, Pak Chanek may do the following: Choose two different sets S and T on the whiteboard such that S \u2229 T = \u2205 ( S and T do not have any common elements) . Erase S and T from the whiteboard and write S \u222a T ( the union of S and T ) onto the whiteboard. After performing zero or more operations, Pak Chanek will construct a multiset M containing the sizes of all sets written on the whiteboard. In other words, each element in M corresponds to the size of a set after the operations. How many distinct ^ \u2020 multisets M can be created by this process? Since the answer may be large, output it modulo 998 244 353 . ^ \u2020 Multisets B and C are different if and only if there exists a value k such that the number of elements with value k in B is different than the number of elements with value k in C .",
    "input": "The first line contains a single integer n ( 1 \u2264 n \u2264 2000 ) . The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 n ) .",
    "output": "Output the number of distinct multisets M modulo 998 244 353 .",
    "note": "In the first example, the possible multisets M are { 1, 1, 1, 1, 1, 1} , { 1, 1, 1, 1, 2} , { 1, 1, 1, 3} , { 1, 1, 2, 2} , { 1, 1, 4} , { 1, 2, 3} , and { 2, 2, 2} . As an example, let' s consider a possible sequence of operations. In the beginning, the sets are { 1} , { 1} , { 2} , { 1} , { 4} , and { 3} . Do an operation on sets { 1} and { 3} . Now, the sets are { 1} , { 1} , { 2} , { 4} , and { 1, 3} . Do an operation on sets { 2} and { 4} . Now, the sets are { 1} , { 1} , { 1, 3} , and { 2, 4} . Do an operation on sets { 1, 3} and { 2, 4} . Now, the sets are { 1} , { 1} , and { 1, 2, 3, 4} . The multiset M that is constructed is { 1, 1, 4} .",
    "topics": [
      "combinatorics",
      "dp",
      "math"
    ],
    "id": "1740F"
  },
  {
    "title": "Array Recovery",
    "url": "https://codeforces.com/problemset/problem/1739/B",
    "history": "For an array of non- negative integers a of size n , we construct another array d as follows: d_ 1 = a_ 1 , d_ i = | a_ i - a_ i - 1| for 2 \u2264 i \u2264 n . Your task is to restore the array a from a given array d , or to report that there are multiple possible arrays.",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 100 ) \u2014 the number of test cases. The first line of each test case contains one integer n ( 1 \u2264 n \u2264 100 ) \u2014 the size of the arrays a and d . The second line contains n integers d_ 1, d_ 2, . . . , d_ n ( 0 \u2264 d_ i \u2264 100 ) \u2014 the elements of the array d . It can be shown that there always exists at least one suitable array a under these constraints.",
    "output": "For each test case, print the elements of the array a , if there is only one possible array a . Otherwise, print - 1 .",
    "note": "In the second example, there are two suitable arrays: [ 2, 8, 5] and [ 2, 8, 11] .",
    "topics": [
      "constructive algorithms",
      "greedy",
      "math"
    ],
    "id": "1739B"
  },
  {
    "title": "Anti-Increasing Addicts",
    "url": "https://codeforces.com/problemset/problem/1738/G",
    "history": "You are given an n \u00d7 n grid. We write ( i, j) to denote the cell in the i - th row and j - th column. For each cell, you are told whether yon can delete it or not. Given an integer k , you are asked to delete exactly ( n- k+ 1) ^ 2 cells from the grid such that the following condition holds. You cannot find k not deleted cells ( x_ 1, y_ 1) , ( x_ 2, y_ 2) , . . . , ( x_ k, y_ k) that are strictly increasing, i. e. , x_ i < x_ i+ 1 and y_ i < y_ i+ 1 for all 1 \u2264 i < k . Your task is to find a solution, or report that it is impossible.",
    "input": "Each test contains multiple test cases. The first line contains an integer t ( 1 \u2264 t \u2264 10^ 5 ) \u2014 the number of test cases. The following lines contain the description of each test case. The first line of each test case contains two integers n and k ( 2 \u2264 k \u2264 n \u2264 1000 ) . Then n lines follow. The i - th line contains a binary string s_ i of length n . The j - th character of s_ i is 1 if you can delete cell ( i, j) , and 0 otherwise. It' s guaranteed that the sum of n^ 2 over all test cases does not exceed 10^ 6 .",
    "output": "For each test case, if there is no way to delete exactly ( n- k+ 1) ^ 2 cells to meet the condition, output \" NO\" ( without quotes) . Otherwise, output \" YES\" ( without quotes) . Then, output n lines. The i - th line should contain a binary string t_ i of length n . The j - th character of t_ i is 0 if cell ( i, j) is deleted, and 1 otherwise. If there are multiple solutions, you can output any of them. You can output \" YES\" and \" NO\" in any case ( for example, strings \" yEs\" , \" yes\" and \" Yes\" will be recognized as a positive response) .",
    "note": "For the first test case, you only have to delete cell ( 1, 1) . For the second test case, you could choose to delete cells ( 1, 1) , ( 1, 2) , ( 4, 3) and ( 4, 4) . For the third test case, it is no solution because the cells in the diagonal will always form a strictly increasing sequence of length 5 .",
    "topics": [
      "constructive algorithms",
      "dp",
      "greedy",
      "math"
    ],
    "id": "1738G"
  },
  {
    "title": "Balance Addicts",
    "url": "https://codeforces.com/problemset/problem/1738/E",
    "history": "Given an integer sequence a_ 1, a_ 2, . . . , a_ n of length n , your task is to compute the number, modulo 998244353 , of ways to partition it into several non- empty continuous subsequences such that the sums of elements in the subsequences form a balanced sequence. A sequence s_ 1, s_ 2, . . . , s_ k of length k is said to be balanced, if s_ i = s_ k- i+ 1 for every 1 \u2264 i \u2264 k . For example, [ 1, 2, 3, 2, 1] and [ 1, 3, 3, 1] are balanced, but [ 1, 5, 15] is not. Formally, every partition can be described by a sequence of indexes i_ 1, i_ 2, . . . , i_ k of length k with 1 = i_ 1 < i_ 2 < . . . < i_ k \u2264 n such that k is the number of non- empty continuous subsequences in the partition; For every 1 \u2264 j \u2264 k , the j - th continuous subsequence starts with a_ i_ j , and ends exactly before a_ i_ j+ 1 , where i_ k+ 1 = n + 1 . That is, the j - th subsequence is a_ i_ j, a_ i_ j+ 1, . . . , a_ i_ j+ 1- 1 . There are 2^ n- 1 different partitions in total. Let s_ 1, s_ 2, . . . , s_ k denote the sums of elements in the subsequences with respect to the partition i_ 1, i_ 2, . . . , i_ k . Formally, for every 1 \u2264 j \u2264 k , s_ j = \u2211_ i= i_ j^ i_ j+ 1- 1 a_ i = a_ i_ j + a_ i_ j+ 1 + . . . + a_ i_ j+ 1- 1. For example, the partition [ 1 | 2, 3 | 4, 5, 6] of sequence [ 1, 2, 3, 4, 5, 6] is described by the sequence [ 1, 2, 4] of indexes, and the sums of elements in the subsequences with respect to the partition is [ 1, 5, 15] . Two partitions i_ 1, i_ 2, . . . , i_ k and i' _ 1, i' _ 2, . . . , i' _ k' ( described by sequences of indexes) are considered to be different, if at least one of the following holds. k = \u0338 k' , i_ j = \u0338 i' _ j for some 1 \u2264 j \u2264min{ k, k' } .",
    "input": "Each test contains multiple test cases. The first line contains an integer t ( 1 \u2264 t \u2264 10^ 5 ) \u2014 the number of test cases. The following lines contain the description of each test case. The first line of each test case contains an integer n ( 1 \u2264 n \u2264 10^ 5 ) , indicating the length of the sequence a . The second line of each test case contains n integers a_ 1, a_ 2, . . . , a_ n ( 0 \u2264 a_ i \u2264 10^ 9 ) , indicating the elements of the sequence a . It is guaranteed that the sum of n over all test cases does not exceed 10^ 5 .",
    "output": "For each test case, output the number of partitions with respect to which the sum of elements in each subsequence is balanced, modulo 998244353 .",
    "note": "For the first test case, there is only one way to partition a sequence of length 1 , which is itself and is, of course, balanced. For the second test case, there are 2 ways to partition it: The sequence [ 1, 1] itself, then s = [ 2] is balanced; Partition into two subsequences [ 1 | 1] , then s = [ 1, 1] is balanced. For the third test case, there are 3 ways to partition it: The sequence [ 0, 0, 1, 0] itself, then s = [ 1] is balanced; [ 0 | 0, 1 | 0] , then s = [ 0, 1, 0] is balanced; [ 0, 0 | 1 | 0] , then s = [ 0, 1, 0] is balanced. For the fourth test case, there are 4 ways to partition it: The sequence [ 1, 2, 3, 2, 1] itself, then s = [ 9] is balanced; [ 1, 2 | 3 | 2, 1] , then s = [ 3, 3, 3] is balanced; [ 1 | 2, 3, 2 | 1] , then s = [ 1, 7, 1] is balanced; [ 1 | 2 | 3 | 2 | 1] , then s = [ 1, 2, 3, 2, 1] is balanced. For the fifth test case, there are 2 ways to partition it: The sequence [ 1, 3, 5, 7, 9] itself, then s = [ 25] is balanced; [ 1, 3, 5 | 7 | 9] , then s = [ 9, 7, 9] is balanced. For the sixth test case, every possible partition should be counted. So the answer is 2^ 32- 1\u2261 150994942 998244353 .",
    "topics": [
      "combinatorics",
      "dp",
      "math",
      "two pointers"
    ],
    "id": "1738E"
  },
  {
    "title": "Even Number Addicts",
    "url": "https://codeforces.com/problemset/problem/1738/C",
    "history": "Alice and Bob are playing a game on a sequence a_ 1, a_ 2, . . . , a_ n of length n . They move in turns and Alice moves first. In the turn of each player, he or she should select an integer and remove it from the sequence. The game ends when there is no integer left in the sequence. Alice wins if the sum of her selected integers is even; otherwise, Bob wins. Your task is to determine who will win the game, if both players play optimally.",
    "input": "Each test contains multiple test cases. The first line contains an integer t ( 1 \u2264 t \u2264 100 ) \u2014 the number of test cases. The following lines contain the description of each test case. The first line of each test case contains an integer n ( 1 \u2264 n \u2264 100 ) , indicating the length of the sequence. The second line of each test case contains n integers a_ 1, a_ 2, . . . , a_ n ( - 10^ 9 \u2264 a_ i \u2264 10^ 9 ) , indicating the elements of the sequence.",
    "output": "For each test case, output \" Alice\" ( without quotes) if Alice wins and \" Bob\" ( without quotes) otherwise.",
    "note": "In the first and second test cases, Alice always selects two odd numbers, so the sum of her selected numbers is always even. Therefore, Alice always wins. In the third test case, Bob has a winning strategy that he always selects a number with the same parity as Alice selects in her last turn. Therefore, Bob always wins. In the fourth test case, Alice always selects two even numbers, so the sum of her selected numbers is always even. Therefore, Alice always wins.",
    "topics": [
      "dp",
      "games",
      "greedy",
      "math"
    ],
    "id": "1738C"
  },
  {
    "title": "Prefix Sum Addicts",
    "url": "https://codeforces.com/problemset/problem/1738/B",
    "history": "Suppose a_ 1, a_ 2, . . . , a_ n is a sorted integer sequence of length n such that a_ 1 \u2264 a_ 2 \u2264. . . \u2264 a_ n . For every 1 \u2264 i \u2264 n , the prefix sum s_ i of the first i terms a_ 1, a_ 2, . . . , a_ i is defined by s_ i = \u2211_ k= 1^ i a_ k = a_ 1 + a_ 2 + . . . + a_ i. Now you are given the last k terms of the prefix sums, which are s_ n- k+ 1, . . . , s_ n- 1, s_ n . Your task is to determine whether this is possible. Formally, given k integers s_ n- k+ 1, . . . , s_ n- 1, s_ n , the task is to check whether there is a sequence a_ 1, a_ 2, . . . , a_ n such that a_ 1 \u2264 a_ 2 \u2264. . . \u2264 a_ n , and s_ i = a_ 1 + a_ 2 + . . . + a_ i for all n- k+ 1 \u2264 i \u2264 n .",
    "input": "Each test contains multiple test cases. The first line contains an integer t ( 1 \u2264 t \u2264 10^ 5 ) \u2014 the number of test cases. The following lines contain the description of each test case. The first line of each test case contains two integers n ( 1 \u2264 n \u2264 10^ 5 ) and k ( 1 \u2264 k \u2264 n ) , indicating the length of the sequence a and the number of terms of prefix sums, respectively. The second line of each test case contains k integers s_ n- k+ 1, . . . , s_ n- 1, s_ n ( - 10^ 9 \u2264 s_ i \u2264 10^ 9 for every n- k+ 1 \u2264 i \u2264 n ) . It is guaranteed that the sum of n over all test cases does not exceed 10^ 5 .",
    "output": "For each test case, output \" YES\" ( without quotes) if it is possible and \" NO\" ( without quotes) otherwise. You can output \" YES\" and \" NO\" in any case ( for example, strings \" yEs\" , \" yes\" and \" Yes\" will be recognized as a positive response) .",
    "note": "In the first test case, we have the only sequence a = [ 1, 1, 1, 1, 1] . In the second test case, we can choose, for example, a = [ - 3, - 2, - 1, 0, 1, 2, 3] . In the third test case, the prefix sums define the only sequence a = [ 2, 1, 1] , but it is not sorted. In the fourth test case, it can be shown that there is no sequence with the given prefix sums.",
    "topics": [
      "constructive algorithms",
      "greedy",
      "math",
      "sortings"
    ],
    "id": "1738B"
  },
  {
    "title": "Ela and Prime GCD",
    "url": "https://codeforces.com/problemset/problem/1737/F",
    "history": "After a long, tough, but fruitful day at DTL, Ela goes home happily. She entertains herself by solving Competitive Programming problems. She prefers short statements, because she already read too many long papers and documentation at work. The problem of the day reads: You are given an integer c . Suppose that c has n divisors. You have to find a sequence with n - 1 integers [ a_ 1, a_ 2, . . . a_ n - 1] , which satisfies the following conditions: Each element is strictly greater than 1 . Each element is a divisor of c . All elements are distinct. For all 1 \u2264 i < n - 1 , ( a_ i, a_ i + 1) is a prime number. In this problem, because c can be too big, the result of prime factorization of c is given instead. Note that ( x, y) denotes the greatest common divisor ( GCD) of integers x and y and a prime number is a positive integer which has exactly 2 divisors.",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 10^ 4 ) - the number of test cases. The first line of each test case contains one integer m ( 1 \u2264 m \u2264 16 ) - the number of prime factor of c . The second line of each test case contains m integers b_ 1, b_ 2, . . . , b_ m ( 1 \u2264 b_ i < 2^ 20 ) \u2014 exponents of corresponding prime factors of c , so that c = p_ 1^ b_ 1\u00b7 p_ 2^ b_ 2\u00b7. . . \u00b7 p_ m^ b_ m and n = ( b_ 1 + 1) ( b_ 2 + 1) . . . ( b_ m + 1) hold. p_ i is the i - th smallest prime number. It is guaranteed that the sum of n \u00b7 m over all test cases does not exceed 2^ 20 .",
    "output": "Print the answer for each test case, one per line. If there is no sequence for the given c , print - 1 . Otherwise, print n - 1 lines. In i - th line, print m space- separated integers. The j - th integer of i - th line is equal to the exponent of j - th prime number from a_ i . If there are multiple answers, print any of them.",
    "note": "In each test case, the values of c are 6 , 2 , 30 , 16 , and 12 in that order. In the first test case, 1 , 2 , 3 , 6 are divisors of 6 . Here, sequences [ 2, 6, 3] and [ 3, 6, 2] can be answer. Permutation [ 3, 2, 6] is invalid because ( a_ 1, a_ 2) = 1 is not a prime number. In the forth test case, 1 , 2 , 4 , 8 , 16 are divisors of 16 . Among the permutation of sequence [ 2, 4, 8, 16] , no valid answer exist.",
    "topics": [
      "constructive algorithms",
      "math",
      "number theory"
    ],
    "id": "1737F"
  },
  {
    "title": "Ela Goes Hiking",
    "url": "https://codeforces.com/problemset/problem/1737/E",
    "history": "Ela likes to go hiking a lot. She loves nature and exploring the various creatures it offers. One day, she saw a strange type of ant, with a cannibalistic feature. More specifically, an ant would eat any ants that it sees which is smaller than it. Curious about this feature from a new creature, Ela ain' t furious. She conducts a long, non- dubious, sentimental experiment. She puts n cannibalistic ants in a line on a long wooden stick. Initially, the ants have the same weight of 1 . The distance between any two consecutive ants is the same. The distance between the first ant in the line to the left end and the last ant in the line to the right end is also the same as the distance between the ants. Each ant starts moving towards the left- end or the right- end randomly and equiprobably, at the same constant pace throughout the experiment. Two ants will crash if they are standing next to each other in the line and moving in opposite directions, and ants will change direction immediately when they reach the end of the stick. Ela can' t determine the moving direction of each ant, but she understands very well their behavior when crashes happen. If a crash happens between two ants of different weights, the heavier one will eat the lighter one, and gain the weight of the lighter one. After that, the heavier and will continue walking in the same direction. In other words, if the heavier one has weight x and walking to the right, the lighter one has weight y and walking to the left ( x > y ) , then after the crash, the lighter one will diminish, and the heavier one will have weight x + y and continue walking to the right. If a crash happens between two ants with the same weight, the one walking to the left end of the stick will eat the one walking to the right, and then continue walking in the same direction. In other words, if one ant of weight x walking to the left, crashes with another ant of weight x walking to the right, the one walking to the right will disappear, and the one walking to the left will have to weight 2x and continue walking to the left. Please, check the example in the \" Note\" section, which will demonstrate the ants' behavior as above. We can prove that after a definite amount of time, there will be only one last ant standing. Initially, each ant can randomly and equiprobably move to the left or the right, which generates 2^ n different cases of initial movements for the whole pack. For each position in the line, calculate the probability that the ant begins in that position and survives. Output it modulo 10^ 9 + 7 . Formally, let M = 10^ 9 + 7 . It can be shown that the answer can be expressed as an irreducible fraction p/ q , where p and q are integers and q \u2261\u03380 M . Output the integer equal to p \u00b7 q^ - 1 M . In other words, output such an integer x that 0 \u2264 x < M and x \u00b7 q \u2261 p M .",
    "input": "Each test contains multiple test cases. The first line contains the number of test cases t ( 1 \u2264 t \u2264 10^ 3 ) . The description of the test cases follows. The only line of each test contains an integer n ( 1 \u2264 n \u2264 10^ 6 ) \u2014 the number of ants in the experiment. It is guaranteed that the sum of n in all tests will not exceed 10^ 6 .",
    "output": "For each test, print n lines. i - th line contains a single number that denotes the survival probability of the i - th ant in the line modulo 10^ 9 + 7 .",
    "note": "Here is the example of 6 ants moving on the branch. An ant' s movement will be denoted by either a character L or R . Initially, the pack of ants on the branch will move as RLRRLR . Here' s how the behavior of the pack demonstrated: Initially, the ants are positioned as above. After a while, the ant with index 2 ( walking to the left) will crash with the ant with index 1 ( walking to the right) . The two ants have the same weight, therefore, ant 2 will eat ant 1 and gain its weight to 2 . The same thing happens with ant 5 and ant 4 . The ant 6 will walk to the end of the stick, therefore changing its direction. After that, the ant with index 5 will crash with the ant with index 3 . Since ant 5 is more heavy ( weight= 2 ) than ant 3 ( weight= 1 ) , ant 5 will eat ant 3 and gain its weight to 3 . Ant 2 will walk to the end of the stick, therefore changing its direction. After that, the ant with index 5 will crash with the ant with index 2 . Since ant 5 is more heavy ( weight= 3 ) than ant 2 ( weight= 2 ) , ant 5 will eat ant 2 and gain its weight to 5 . Lastly, after ant 5 walk to the end of the branch and changes its direction, ant 5 will eat ant 6 and be the last ant standing.",
    "topics": [
      "combinatorics",
      "dp",
      "math",
      "probabilities"
    ],
    "id": "1737E"
  },
  {
    "title": "Ela and Crickets",
    "url": "https://codeforces.com/problemset/problem/1737/C",
    "history": "Ela likes Chess a lot. During breaks, she usually challenges her co- worker in DTL to some chess games. She' s not an expert at classic chess, but she' s very interested in Chess variants, where she has to adapt to new rules and test her tactical mindset to win the game. The problem, which involves a non- standard chess pieces type that is described below, reads: given 3 white crickets on a n \u00b7 n board, arranged in an \" L\" shape next to each other, there are no other pieces on the board. Ela wants to know with a finite number of moves, can she put any white cricket on the square on row x , column y ? An \" L\" - shape piece arrangement can only be one of the below: For simplicity, we describe the rules for crickets on the board where only three white crickets are. It can move horizontally, vertically, or diagonally, but only to a square in some direction that is immediately after another cricket piece ( so that it must jump over it) . If the square immediately behind the piece is unoccupied, the cricket will occupy the square. Otherwise ( when the square is occupied by another cricket, or does not exist) , the cricket isn' t allowed to make such a move. See an example of valid crickets' moves on the pictures in the Note section.",
    "input": "Each test contains multiple test cases. The first line contains the number of test cases t ( 1 \u2264 t \u2264 10^ 4 ) . The description of the test cases follows. The first line of each test case contains n ( 4 \u2264 n \u2264 10^ 5 ) \u2014 denotes the size of the chessboard. The second line of each test case contains 6 numbers: r_ 1 , c_ 1 , r_ 2 , c_ 2 , r_ 3 , c_ 3 ( 1 \u2264 r_ 1, c_ 1, r_ 2, c_ 2, r_ 3, c_ 3 \u2264 n ) \u2014 coordinates of the crickets. The input ensures that the three crickets are arranged in an \" L\" shape that the legend stated. The third line of each test case contains 2 numbers: x , y ( 1 \u2264 x, y \u2264 n ) \u2014 coordinates of the target square.",
    "output": "For each test case, print \" YES\" or \" NO\" to denotes whether Ela can put a cricket on the target square.",
    "note": "Here' s the solution for the first test case. The red square denotes where the crickets need to reach. Note that in chess horizontals are counted from bottom to top, as well as on this picture.",
    "topics": [
      "constructive algorithms",
      "games",
      "implementation",
      "math"
    ],
    "id": "1737C"
  },
  {
    "title": "Ela's Fitness and the Luxury Number",
    "url": "https://codeforces.com/problemset/problem/1737/B",
    "history": "While working at DTL, Ela is very aware of her physical and mental health. She started to practice various sports, such as Archery, Yoga, and Football. Since she started engaging in sports activities, Ela switches to trying a new sport on days she considers being \" Luxury\" days. She counts the days since she started these activities, in which the day she starts is numbered as day 1 . A \" Luxury\" day is the day in which the number of this day is a luxurious number. An integer x is called a luxurious number if it is divisible by \u230a\u221a( x) \u230b . Here \u230a r \u230b denotes the \" floor\" of a real number r . In other words, it' s the largest integer not greater than r . For example: 8 , 56 , 100 are luxurious numbers, since 8 is divisible by \u230a\u221a( 8) \u230b = \u230a 2. 8284 \u230b = 2 , 56 is divisible \u230a\u221a( 56) \u230b = \u230a 7. 4833 \u230b = 7 , and 100 is divisible by \u230a\u221a( 100) \u230b = \u230a 10 \u230b = 10 , respectively. On the other hand 5 , 40 are not, since 5 are not divisible by \u230a\u221a( 5) \u230b = \u230a 2. 2361 \u230b = 2 , and 40 are not divisible by \u230a\u221a( 40) \u230b = \u230a 6. 3246 \u230b = 6 . Being a friend of Ela, you want to engage in these fitness activities with her to keep her and yourself accompanied ( and have fun together, of course) . Between day l and day r , you want to know how many times she changes the activities.",
    "input": "Each test contains multiple test cases. The first line has the number of test cases t ( 1 \u2264 t \u2264 10 000 ) . The description of the test cases follows. The only line of each test case contains two integers l and r ( 1 \u2264 l \u2264 r \u2264 10^ 18 ) \u2014 the intervals at which you want to know how many times Ela changes her sports.",
    "output": "For each test case, output an integer that denotes the answer.",
    "note": "In the first test case, 5 luxury numbers in range [ 8, 19] are: 8, 9, 12, 15, 16 .",
    "topics": [
      "binary search",
      "implementation",
      "math"
    ],
    "id": "1737B"
  },
  {
    "title": "Playing with GCD",
    "url": "https://codeforces.com/problemset/problem/1736/B",
    "history": "You are given an integer array a of length n . Does there exist an array b consisting of n+ 1 positive integers such that a_ i= ( b_ i, b_ i+ 1) for all i ( 1 \u2264 i \u2264 n ) ? Note that ( x, y) denotes the greatest common divisor ( GCD) of integers x and y .",
    "input": "Each test contains multiple test cases. The first line contains the number of test cases t ( 1 \u2264 t \u2264 10^ 5 ) . Description of the test cases follows. The first line of each test case contains an integer n ( 1 \u2264 n \u2264 10^ 5 ) \u2014 the length of the array a . The second line of each test case contains n space- separated integers a_ 1, a_ 2, . . . , a_ n representing the array a ( 1 \u2264 a_ i \u2264 10^ 4 ) . It is guaranteed that the sum of n over all test cases does not exceed 10^ 5 .",
    "output": "For each test case, output \" YES\" if such b exists, otherwise output \" NO\" . You can print each letter in any case ( upper or lower) .",
    "note": "In the first test case, we can take b= [ 343, 343] . In the second test case, one possibility for b is b= [ 12, 8, 6] . In the third test case, it can be proved that there does not exist any array b that fulfills all the conditions.",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "1736B"
  },
  {
    "title": "Meta-set",
    "url": "https://codeforces.com/problemset/problem/1735/D",
    "history": "You like the card board game \" Set\" . Each card contains k features, each of which is equal to a value from the set { 0, 1, 2} . The deck contains all possible variants of cards, that is, there are 3^ k different cards in total. A feature for three cards is called good if it is the same for these cards or pairwise distinct. Three cards are called a set if all k features are good for them. For example, the cards ( 0, 0, 0) , ( 0, 2, 1) , and ( 0, 1, 2) form a set, but the cards ( 0, 2, 2) , ( 2, 1, 2) , and ( 1, 2, 0) do not, as, for example, the last feature is not good. A group of five cards is called a meta- set, if there is strictly more than one set among them. How many meta- sets there are among given n distinct cards?",
    "input": "The first line of the input contains two integers n and k ( 1 \u2264 n \u2264 10^ 3 , 1 \u2264 k \u2264 20 ) \u2014 the number of cards on a table and the number of card features. The description of the cards follows in the next n lines. Each line describing a card contains k integers c_ i, 1, c_ i, 2, . . . , c_ i, k ( 0 \u2264 c_ i, j\u2264 2 ) \u2014 card features. It is guaranteed that all cards are distinct.",
    "output": "Output one integer \u2014 the number of meta- sets.",
    "note": "Let' s draw the cards indicating the first four features. The first feature will indicate the number of objects on a card: 1 , 2 , 3 . The second one is the color: red, green, purple. The third is the shape: oval, diamond, squiggle. The fourth is filling: open, striped, solid. You can see the first three tests below. For the first two tests, the meta- sets are highlighted. In the first test, the only meta- set is the five cards ( 0000, 0001, 0002, 0010, 0020) . The sets in it are the triples ( 0000, 0001, 0002) and ( 0000, 0010, 0020) . Also, a set is the triple ( 0100, 1000, 2200) which does not belong to any meta- set. In the second test, the following groups of five cards are meta- sets: ( 0000, 0001, 0002, 0010, 0020) , ( 0000, 0001, 0002, 0100, 0200) , ( 0000, 0010, 0020, 0100, 0200) . In there third test, there are 54 meta- sets.",
    "topics": [
      "brute force",
      "combinatorics",
      "data structures",
      "hashing",
      "math"
    ],
    "id": "1735D"
  },
  {
    "title": "Tea with Tangerines",
    "url": "https://codeforces.com/problemset/problem/1735/B",
    "history": "There are n pieces of tangerine peel, the i - th of them has size a_ i . In one step it is possible to divide one piece of size x into two pieces of positive integer sizes y and z so that y + z = x . You want that for each pair of pieces, their sizes differ strictly less than twice. In other words, there should not be two pieces of size x and y , such that 2x \u2264 y . What is the minimum possible number of steps needed to satisfy the condition?",
    "input": "The first line of the input contains a single integer t ( 1 \u2264 t \u2264 100 ) \u2014 the number of test cases. The description of test cases follows. The first line of each test case contains the integer n ( 1 \u2264 n \u2264 100 ) . Then one line follows, containing n integers a_ 1 \u2264 a_ 2 \u2264. . . \u2264 a_ n ( 1 \u2264 a_ i \u2264 10^ 7 ) .",
    "output": "For each test case, output a single line containing the minimum number of steps.",
    "note": "In the first test case, we initially have a piece of size 1 , so all final pieces must have size 1 . The total number of steps is: 0 + 1 + 2 + 3 + 4 = 10 . In the second test case, we have just one piece, so we don' t need to do anything, and the answer is 0 steps. In the third test case, one of the possible cut options is: 600, 900, ( 600 | 700) , ( 1000 | 1000) , ( 1000 | 1000 | 550) . You can see this option in the picture below. The maximum piece has size 1000 , and it is less than 2 times bigger than the minimum piece of size 550 . 4 steps are done. We can show that it is the minimum possible number of steps.",
    "topics": [
      "greedy",
      "math"
    ],
    "id": "1735B"
  },
  {
    "title": "Working Week",
    "url": "https://codeforces.com/problemset/problem/1735/A",
    "history": "Your working week consists of n days numbered from 1 to n , after day n goes day 1 again. And 3 of them are days off. One of the days off is the last day, day n . You have to decide when the other two are. Choosing days off, you pursue two goals: No two days should go one after the other. Note that you can' t make day 1 a day off because it follows day n . Working segments framed by days off should be as dissimilar as possible in duration. More specifically, if the segments are of size l_ 1 , l_ 2 , and l_ 3 days long, you want to maximize min( | l_ 1 - l_ 2| , | l_ 2 - l_ 3| , | l_ 3 - l_ 1| ) . Output the maximum value of min( | l_ 1 - l_ 2| , | l_ 2 - l_ 3| , | l_ 3 - l_ 1| ) that can be obtained.",
    "input": "The first line of the input contains a single integer t ( 1 \u2264 t \u2264 1000 ) \u2014 the number of test cases. The description of test cases follows. The only line of each test case contains the integer n ( 6 \u2264 n \u2264 10^ 9 ) .",
    "output": "For each test case, output one integer \u2014 the maximum possible obtained value.",
    "note": "In the image below you can see the example solutions for the first two test cases. Chosen days off are shown in purple. Working segments are underlined in green. In test case 1 , the only options for days off are days 2 , 3 , and 4 ( because 1 and 5 are next to day n ) . So the only way to place them without selecting neighboring days is to choose days 2 and 4 . Thus, l_ 1 = l_ 2 = l_ 3 = 1 , and the answer min( | l_ 1 - l_ 2| , | l_ 2 - l_ 3| , | l_ 3 - l_ 1| ) = 0 . For test case 2 , one possible way to choose days off is shown. The working segments have the lengths of 2 , 1 , and 4 days. So the minimum difference is 1 = min( 1, 3, 2) = min( | 2 - 1| , | 1 - 4| , | 4 - 2| ) . It can be shown that there is no way to make it larger.",
    "topics": [
      "constructive algorithms",
      "greedy",
      "math"
    ],
    "id": "1735A"
  },
  {
    "title": "Zeros and Ones",
    "url": "https://codeforces.com/problemset/problem/1734/F",
    "history": "Let S be the Thue- Morse sequence. In other words, S is the 0 - indexed binary string with infinite length that can be constructed as follows: Initially, let S be \" 0\" . Then, we perform the following operation infinitely many times: concatenate S with a copy of itself with flipped bits. For example, here are the first four iterations: Iteration S before iteration S before iteration with flipped bitsConcatenated S 1010120110011030110100101101001401101001100101100110100110010110 . . . . . . . . . . . . You are given two positive integers n and m . Find the number of positions where the strings S_ 0 S_ 1 . . . S_ m- 1 and S_ n S_ n + 1. . . S_ n + m - 1 are different.",
    "input": "Each test contains multiple test cases. The first line of the input contains a single integer t ( 1 \u2264 t \u2264 100 ) \u2014 the number of test cases. The description of the test cases follows. The first and only line of each test case contains two positive integers, n and m respectively ( 1 \u2264 n, m \u2264 10^ 18 ) .",
    "output": "For each testcase, output a non- negative integer \u2014 the Hamming distance between the two required strings.",
    "note": "The string S is equal to 0110100110010110. . . . In the first test case, S_ 0 is \" 0\" , and S_ 1 is \" 1\" . The Hamming distance between the two strings is 1 . In the second test case, S_ 0 S_ 1 . . . S_ 9 is \" 0110100110\" , and S_ 5 S_ 6 . . . S_ 14 is \" 0011001011\" . The Hamming distance between the two strings is 6 .",
    "topics": [
      "bitmasks",
      "divide and conquer",
      "dp",
      "math"
    ],
    "id": "1734F"
  },
  {
    "title": "Removing Smallest Multiples",
    "url": "https://codeforces.com/problemset/problem/1734/C",
    "history": "You are given a set S , which contains the first n positive integers: 1, 2, . . . , n . You can perform the following operation on S any number of times ( possibly zero) : Choose a positive integer k where 1 \u2264 k \u2264 n , such that there exists a multiple of k in S . Then, delete the smallest multiple of k from S . This operation requires a cost of k . You are given a set T , which is a subset of S . Find the minimum possible total cost of operations such that S would be transformed into T . We can show that such a transformation is always possible.",
    "input": "The first line of the input contains a single integer t ( 1 \u2264 t \u2264 10 000 ) \u2014 the number of test cases. The description of the test cases follows. The first line contains a single positive integer n ( 1 \u2264 n \u2264 10^ 6 ) . The second line of each test case contains a binary string of length n , describing the set T . The i - th character of the string is ' 1' if and only if i is an element of T , and ' 0' otherwise. It is guaranteed that the sum of n over all test cases does not exceed 10^ 6 .",
    "output": "For each test case, output one non- negative integer \u2014 the minimum possible total cost of operations such that S would be transformed into T .",
    "note": "In the first test case, we shall not perform any operations as S is already equal to T , which is the set { 1, 2, 3, 4, 5, 6} . In the second test case, initially, S = { 1, 2, 3, 4, 5, 6, 7} , and T = { 1, 2, 4, 7} . We shall perform the following operations: Choose k= 3 , then delete 3 from S . Choose k= 3 , then delete 6 from S . Choose k= 5 , then delete 5 from S . The total cost is 3+ 3+ 5 = 11 . It can be shown that this is the smallest cost possible. In the third test case, initially, S = { 1, 2, 3, 4} and T = { } ( empty set) . We shall perform 4 operations of k= 1 to delete 1 , 2 , 3 , and 4 . In the fourth test case, initially, S = { 1, 2, 3, 4} and T = { 3} . We shall perform two operations with k= 1 to delete 1 and 2 , then perform one operation with k= 2 to delete 4 .",
    "topics": [
      "greedy",
      "math"
    ],
    "id": "1734C"
  },
  {
    "title": "Conveyor",
    "url": "https://codeforces.com/problemset/problem/1733/E",
    "history": "There is a conveyor with 120 rows and 120 columns. Each row and column is numbered from 0 to 119 , and the cell in i - th row and j - th column is denoted as ( i, j) . The top leftmost cell is ( 0, 0) . Each cell has a belt, and all belts are initially facing to the right. Initially, a slime ball is on the belt of ( 0, 0) , and other belts are empty. Every second, the state of the conveyor changes as follows: All slime balls on the conveyor move one cell in the direction of the belt at the same time. If there is no cell in the moved position, the slime gets out of the conveyor, and if two slime balls move to the same cell, they merge into one. All belts with slime ball in the previous second change direction at the same time: belts facing to the right become facing to the down, and vice versa. A new slime ball is placed on cell ( 0, 0) . There are q queries, each being three integers t , x , and y . You have to find out if there is a slime at the cell ( x, y) after t seconds from the start. Can you do it?",
    "input": "The first line contains one integer q ( 1 \u2264 q \u2264 10^ 4 ) \u2014 the number of queries. The only line of each query contains three integers t , x , and y ( 0 \u2264 t \u2264 10^ 18 , 0 \u2264 x, y < 120 ) .",
    "output": "Print the answer for each test case, one per line. If there is a slime ball in the cell ( x, y) after t seconds from the initial state, print \" YES\" . Otherwise, print \" NO\" .",
    "note": "The state of conveyor with t = 0 . Red arrow represents the direction of each belt, and blue figure represents slime. The state of conveyor with t = 1 . The state of conveyor with t = 2 .",
    "topics": [
      "constructive algorithms",
      "dp",
      "math"
    ],
    "id": "1733E"
  },
  {
    "title": "Zero-One (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1733/D1",
    "history": "This is the easy version of the problem. In this version, n \u2264 3000 , x \u2265 y holds. You can make hacks only if both versions of the problem are solved. You are given two binary strings a and b , both of length n . You can do the following operation any number of times ( possibly zero) . Select two indices l and r ( l < r ) . Change a_ l to ( 1 - a_ l) , and a_ r to ( 1 - a_ r) . If l + 1 = r , the cost of the operation is x . Otherwise, the cost is y . You have to find the minimum cost needed to make a equal to b or say there is no way to do so.",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 600 ) \u2014 the number of test cases. Each test case consists of three lines. The first line of each test case contains three integers n , x , and y ( 5 \u2264 n \u2264 3000 , 1 \u2264 y \u2264 x \u2264 10^ 9 ) \u2014 the length of the strings, and the costs per operation. The second line of each test case contains the string a of length n . The string only consists of digits 0 and 1 . The third line of each test case contains the string b of length n . The string only consists of digits 0 and 1 . It is guaranteed that the sum of n over all test cases doesn' t exceed 3000 .",
    "output": "For each test case, if there is no way to make a equal to b , print - 1 . Otherwise, print the minimum cost needed to make a equal to b .",
    "note": "In the first test case, selecting indices 2 and 3 costs 8 , which is the minimum possible cost. In the second test case, we cannot make a equal to b using any number of operations. In the third test case, we can perform the following operations: Select indices 3 and 6 . It costs 3 , and a is 0101011 now. Select indices 4 and 6 . It costs 3 , and a is 0100001 now. The total cost is 6 . In the fourth test case, we don' t have to perform any operations.",
    "topics": [
      "constructive algorithms",
      "greedy",
      "math"
    ],
    "id": "1733D1"
  },
  {
    "title": "Rule of League",
    "url": "https://codeforces.com/problemset/problem/1733/B",
    "history": "There is a badminton championship in which n players take part. The players are numbered from 1 to n . The championship proceeds as follows: player 1 and player 2 play a game, then the winner and player 3 play a game, and then the winner and player 4 play a game, and so on. So, n- 1 games are played, and the winner of the last game becomes the champion. There are no draws in the games. You want to find out the result of championship. Currently, you only know the following information: Each player has either won x games or y games in the championship. Given n , x , and y , find out if there is a result that matches this information.",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 10^ 5 ) \u2014 the number of test cases. The only line of each test case contains three integers n , x , y ( 2 \u2264 n \u2264 10^ 5 , 0 \u2264 x, y < n ) . It is guaranteed that the sum of n over all test cases doesn' t exceed 2 \u00b7 10^ 5 .",
    "output": "Print the answer for each test case, one per line. If there is no result that matches the given information about n , x , y , print - 1 . Otherwise, print n- 1 space separated integers, where the i - th integer is the player number of the winner of the i - th game. If there are multiple valid results, print any.",
    "note": "In the first test case, player 1 and player 4 won x times, player 2 and player 3 won y times. In the second, third, and fifth test cases, no valid result exists.",
    "topics": [
      "constructive algorithms",
      "math"
    ],
    "id": "1733B"
  },
  {
    "title": "Location",
    "url": "https://codeforces.com/problemset/problem/1732/E",
    "history": "You are given two arrays of integers a_ 1, a_ 2, . . . , a_ n and b_ 1, b_ 2, . . . , b_ n . You need to handle q queries of the following two types: 1 l r x : assign a_ i : = x for all l \u2264 i \u2264 r ; 2 l r : find the minimum value of the following expression among all l \u2264 i \u2264 r : lcm( a_ i, b_ i) / ( a_ i, b_ i) . In this problem ( x, y) denotes the greatest common divisor of x and y , and lcm( x, y) denotes the least common multiple of x and y .",
    "input": "The first line contains two integers n and q ( 1 \u2264 n, q \u2264 5 \u00b7 10^ 4 ) \u2014 the number of numbers in the arrays a and b and the number of queries. The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 5 \u00b7 10^ 4 ) \u2014 the elements of the array a . The third line contains n integers b_ 1, b_ 2, . . . , b_ n ( 1 \u2264 b_ i \u2264 5 \u00b7 10^ 4 ) \u2014 the elements of the array b . Then q lines follow, j - th of which starts with an integer t_ j ( 1 \u2264 t_ j \u2264 2 ) and means that the j - th query has type t_ j . If t_ j = 1 , it is followed by three integers l_ j , r_ j , and x_ j ( 1 \u2264 l_ j \u2264 r_ j \u2264 n , 1 \u2264 x_ j \u2264 5 \u00b7 10^ 4 ) . If t_ j = 2 , it is followed by two integers l_ j and r_ j ( 1 \u2264 l_ j \u2264 r_ j \u2264 n ) . It is guaranteed that there is at least one query of type 2 .",
    "output": "For each query of the second type, output the minimum value of the expression.",
    "note": "In the first example: For the first query we can choose i = 4 . So the value is lcm( 4, 4) / ( 4, 4) = 4/ 4 = 1 . After the second query the array a = [ 6, 10, 15, 4, 9, 25, 9, 9, 9, 9] . For the third query we can choose i = 9 . So the value is lcm( 9, 18) / ( 9, 18) = 18/ 9 = 2 . In the second: For the first query we can choose i = 4 . So the value is lcm( 1, 5) / ( 1, 5) = 5/ 1 = 5 . After the second query the array a = [ 10, 18, 18, 5] . After the third query the array a = [ 10, 10, 18, 5] . For the fourth query we can choose i = 2 . So the value is lcm( 10, 12) / ( 10, 12) = 60/ 2 = 30 .",
    "topics": [
      "data structures",
      "dp",
      "math",
      "number theory"
    ],
    "id": "1732E"
  },
  {
    "title": "Bestie",
    "url": "https://codeforces.com/problemset/problem/1732/A",
    "history": "You are given an array a consisting of n integers a_ 1, a_ 2, . . . , a_ n . Friends asked you to make the greatest common divisor ( GCD) of all numbers in the array equal to 1 . In one operation, you can do the following: Select an arbitrary index in the array 1 \u2264 i \u2264 n ; Make a_ i = ( a_ i, i) , where ( x, y) denotes the GCD of integers x and y . The cost of such an operation is n - i + 1 . You need to find the minimum total cost of operations we need to perform so that the GCD of the all array numbers becomes equal to 1 .",
    "input": "Each test consists of multiple test cases. The first line contains an integer t ( 1 \u2264 t \u2264 5 000 ) \u2014 the number of test cases. The description of test cases follows. The first line of each test case contains a single integer n ( 1 \u2264 n \u2264 20 ) \u2014 the length of the array. The second line of each test case contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 9 ) \u2014 the elements of the array.",
    "output": "For each test case, output a single integer \u2014 the minimum total cost of operations that will need to be performed so that the GCD of all numbers in the array becomes equal to 1 . We can show that it' s always possible to do so.",
    "note": "In the first test case, the GCD of the entire array is already equal to 1 , so there is no need to perform operations. In the second test case, select i = 1 . After this operation, a_ 1 = ( 2, 1) = 1 . The cost of this operation is 1 . In the third test case, you can select i = 1 , after that the array a will be equal to [ 1, 4] . The GCD of this array is 1 , and the total cost is 2 . In the fourth test case, you can select i = 2 , after that the array a will be equal to [ 3, 2, 9] . The GCD of this array is 1 , and the total cost is 2 . In the sixth test case, you can select i = 4 and i = 5 , after that the array a will be equal to [ 120, 60, 80, 4, 5] . The GCD of this array is 1 , and the total cost is 3 .",
    "topics": [
      "brute force",
      "combinatorics",
      "constructive algorithms",
      "implementation",
      "math",
      "number theory"
    ],
    "id": "1732A"
  },
  {
    "title": "Function Sum",
    "url": "https://codeforces.com/problemset/problem/1731/F",
    "history": "Suppose you have an integer array a_ 1, a_ 2, . . . , a_ n . Let lsl( i) be the number of indices j ( 1 \u2264 j < i ) such that a_ j < a_ i . Analogically, let grr( i) be the number of indices j ( i < j \u2264 n ) such that a_ j > a_ i . Let' s name position i good in the array a if lsl( i) < grr( i) . Finally, let' s define a function f on array a f( a) as the sum of all a_ i such that i is good in a . Given two integers n and k , find the sum of f( a) over all arrays a of size n such that 1 \u2264 a_ i \u2264 k for all 1 \u2264 i \u2264 n modulo 998 244 353 .",
    "input": "The first and only line contains two integers n and k ( 1 \u2264 n \u2264 50 ; 2 \u2264 k < 998 244 353 ) .",
    "output": "Output a single integer \u2014 the sum of f over all arrays a of size n modulo 998 244 353 .",
    "note": "In the first test case: f( [ 1, 1, 1] ) = 0 f( [ 2, 2, 3] ) = 2 + 2 = 4 f( [ 1, 1, 2] ) = 1 + 1 = 2 f( [ 2, 3, 1] ) = 2 f( [ 1, 1, 3] ) = 1 + 1 = 2 f( [ 2, 3, 2] ) = 2 f( [ 1, 2, 1] ) = 1 f( [ 2, 3, 3] ) = 2 f( [ 1, 2, 2] ) = 1 f( [ 3, 1, 1] ) = 0 f( [ 1, 2, 3] ) = 1 f( [ 3, 1, 2] ) = 1 f( [ 1, 3, 1] ) = 1 f( [ 3, 1, 3] ) = 1 f( [ 1, 3, 2] ) = 1 f( [ 3, 2, 1] ) = 0 f( [ 1, 3, 3] ) = 1 f( [ 3, 2, 2] ) = 0 f( [ 2, 1, 1] ) = 0 f( [ 3, 2, 3] ) = 2 f( [ 2, 1, 2] ) = 1 f( [ 3, 3, 1] ) = 0 f( [ 2, 1, 3] ) = 2 + 1 = 3 f( [ 3, 3, 2] ) = 0 f( [ 2, 2, 1] ) = 0 f( [ 3, 3, 3] ) = 0 f( [ 2, 2, 2] ) = 0 Adding up all of these values, we get 28 as the answer.",
    "topics": [
      "brute force",
      "combinatorics",
      "dp",
      "fft",
      "math"
    ],
    "id": "1731F"
  },
  {
    "title": "Graph Cost",
    "url": "https://codeforces.com/problemset/problem/1731/E",
    "history": "You are given an initially empty undirected graph with n nodes, numbered from 1 to n ( i. e. n nodes and 0 edges) . You want to add m edges to the graph, so the graph won' t contain any self- loop or multiple edges. If an edge connecting two nodes u and v is added, its weight must be equal to the greatest common divisor of u and v , i. e. ( u, v) . In order to add edges to the graph, you can repeat the following process any number of times ( possibly zero) : choose an integer k \u2265 1 ; add exactly k edges to the graph, each having a weight equal to k + 1 . Adding these k edges costs k + 1 in total. Note that you can' t create self- loops or multiple edges. Also, if you can' t add k edges of weight k + 1 , you can' t choose such k . For example, if you can add 5 more edges to the graph of weight 6 , you may add them, and it will cost 6 for the whole pack of 5 edges. But if you can only add 4 edges of weight 6 to the graph, you can' t perform this operation for k = 5 . Given two integers n and m , find the minimum total cost to form a graph of n vertices and exactly m edges using the operation above. If such a graph can' t be constructed, output - 1 . Note that the final graph may consist of several connected components.",
    "input": "Each test contains multiple test cases. The first line contains the number of test cases t ( 1 \u2264 t \u2264 10^ 4 ) . Description of the test cases follows. The first line of each test case contains two integers n and m ( 2 \u2264 n \u2264 10^ 6 ; 1 \u2264 m \u2264n( n- 1) / 2 ) . It is guaranteed that the sum of n over all test cases does not exceed 10^ 6 .",
    "output": "For each test case, print the minimum cost to build the graph, or - 1 if you can' t build such a graph.",
    "note": "In the first test case, we can add an edge between the vertices 2 and 4 with = 2 . This is the only possible way to add 1 edge that will cost 2 . In the second test case, there is no way to add 10 edges, so the answer is - 1 . In the third test case, we can add the following edges: k = 1 : edge of weight 2 between vertices 2 and 4 ( ( 2, 4) = 2 ) . Cost: 2 ; k = 1 : edge of weight 2 between vertices 4 and 6 ( ( 4, 6) = 2 ) . Cost: 2 ; k = 2 : edges of weight 3 : ( 3, 6) and ( 3, 9) ( ( 3, 6) = ( 3, 9) = 3 ) . Cost: 3 . As a result, we added 1 + 1 + 2 = 4 edges with total cost 2 + 2 + 3 = 7 , which is the minimal possible cost.",
    "topics": [
      "dp",
      "greedy",
      "math",
      "number theory"
    ],
    "id": "1731E"
  },
  {
    "title": "Even Subarrays",
    "url": "https://codeforces.com/problemset/problem/1731/C",
    "history": "You are given an integer array a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 n ) . Find the number of subarrays of a whose XOR has an even number of divisors. In other words, find all pairs of indices ( i, j) ( i \u2264 j ) such that a_ i \u2295 a_ i + 1\u2295. . . \u2295 a_ j has an even number of divisors. For example, numbers 2 , 3 , 5 or 6 have an even number of divisors, while 1 and 4 \u2014 odd. Consider that 0 has an odd number of divisors in this task. Here XOR ( or \u2295 ) denotes the bitwise XOR operation. Print the number of subarrays but multiplied by 2022. . . Okay, let' s stop. Just print the actual answer.",
    "input": "Each test contains multiple test cases. The first line contains the number of test cases t ( 1 \u2264 t \u2264 10^ 4 ) . Description of the test cases follows. The first line of each test case contains a single integer n ( 2 \u2264 n \u2264 2 \u00b7 10^ 5 ) \u2014 the length of the array a . The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 n ) . It is guaranteed that the sum of n over all test cases does not exceed 2 \u00b7 10^ 5 .",
    "output": "For each test case, print the number of subarrays, whose XOR has an even number of divisors.",
    "note": "In the first test case, there are 4 subarrays whose XOR has an even number of divisors: [ 3] , [ 3, 1] , [ 1, 2] , [ 2] . In the second test case, there are 11 subarrays whose XOR has an even number of divisors: [ 4, 2] , [ 4, 2, 1] , [ 4, 2, 1, 5] , [ 2] , [ 2, 1] , [ 2, 1, 5] , [ 2, 1, 5, 3] , [ 1, 5, 3] , [ 5] , [ 5, 3] , [ 3] . In the third test case, there is no subarray whose XOR has an even number of divisors since XOR of any subarray is either 4 or 0 .",
    "topics": [
      "bitmasks",
      "brute force",
      "hashing",
      "math",
      "number theory"
    ],
    "id": "1731C"
  },
  {
    "title": "Kill Demodogs",
    "url": "https://codeforces.com/problemset/problem/1731/B",
    "history": "Demodogs from the Upside- down have attacked Hawkins again. El wants to reach Mike and also kill as many Demodogs in the way as possible. Hawkins can be represented as an n \u00d7 n grid. The number of Demodogs in a cell at the i - th row and the j - th column is i \u00b7 j . El is at position ( 1, 1) of the grid, and she has to reach ( n, n) where she can find Mike. The only directions she can move are the right ( from ( i, j) to ( i, j + 1) ) and the down ( from ( i, j) to ( i + 1, j) ) . She can' t go out of the grid, as there are doors to the Upside- down at the boundaries. Calculate the maximum possible number of Demodogs ans she can kill on the way, considering that she kills all Demodogs in cells she visits ( including starting and finishing cells) . Print 2022 \u00b7ans modulo 10^ 9 + 7 . Modulo 10^ 9 + 7 because the result can be too large and multiplied by 2022 because we are never gonna see it again! ( Note, you firstly multiply by 2022 and only after that take the remainder. )",
    "input": "Each test contains multiple test cases. The first line contains the number of test cases t ( 1 \u2264 t \u2264 10^ 4 ) . Description of the test cases follows. The first line of each test case contains one integer n ( 2 \u2264 n \u2264 10^ 9 ) \u2014 the size of the grid.",
    "output": "For each test case, print a single integer \u2014 the maximum number of Demodogs that can be killed multiplied by 2022 , modulo 10^ 9 + 7 .",
    "note": "In the first test case, for any path chosen by her the number of Demodogs to be killed would be 7 , so the answer would be 2022 \u00b7 7 = 14154 .",
    "topics": [
      "greedy",
      "math"
    ],
    "id": "1731B"
  },
  {
    "title": "Joey Takes Money",
    "url": "https://codeforces.com/problemset/problem/1731/A",
    "history": "Joey is low on money. His friend Chandler wants to lend Joey some money, but can' t give him directly, as Joey is too proud of himself to accept it. So, in order to trick him, Chandler asks Joey to play a game. In this game, Chandler gives Joey an array a_ 1, a_ 2, . . . , a_ n ( n \u2265 2 ) of positive integers ( a_ i \u2265 1 ) . Joey can perform the following operation on the array any number of times: Take two indices i and j ( 1 \u2264 i < j \u2264 n) . Choose two integers x and y ( x, y \u2265 1 ) such that x \u00b7 y = a_ i \u00b7 a_ j . Replace a_ i by x and a_ j by y . In the end, Joey will get the money equal to the sum of elements of the final array. Find the maximum amount of money ans Joey can get but print 2022 \u00b7ans . Why multiplied by 2022 ? Because we are never gonna see it again! It is guaranteed that the product of all the elements of the array a doesn' t exceed 10^ 12 .",
    "input": "Each test contains multiple test cases. The first line contains the number of test cases t ( 1 \u2264 t \u2264 4000 ) . Description of the test cases follows. The first line of each test case contains a single integer n ( 2 \u2264 n \u2264 50 ) \u2014 the length of the array a . The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 6 ) \u2014 the array itself. It' s guaranteed that the product of all a_ i doesn' t exceed 10^ 12 ( i. e. a_ 1 \u00b7 a_ 2 \u00b7. . . \u00b7 a_ n \u2264 10^ 12 ) .",
    "output": "For each test case, print the maximum money Joey can get multiplied by 2022 .",
    "note": "In the first test case, Joey can do the following: He chooses i = 1 and j = 2 ( so he has a[ i] \u00b7 a[ j] = 6 ) , chooses x = 6 and y = 1 and makes a[ i] = 6 and a[ j] = 1 . [ 2, 3, 2] [ 6, 1, 2] He chooses i = 1 and j = 3 ( so he has a[ i] \u00b7 a[ j] = 12 ) , chooses x = 12 and y = 1 and makes a[ i] = 12 and a[ j] = 1 . [ 6, 1, 2] [ 12, 1, 1] The sum is 14 which is the maximum of all possible sums. The answer is 2022 \u00b7 14 = 28308 .",
    "topics": [
      "greedy",
      "math"
    ],
    "id": "1731A"
  },
  {
    "title": "Minimum Notation",
    "url": "https://codeforces.com/problemset/problem/1730/C",
    "history": "You have a string s consisting of digits from 0 to 9 inclusive. You can perform the following operation any ( possibly zero) number of times: You can choose a position i and delete a digit d on the i - th position. Then insert the digit min( d + 1, 9) on any position ( at the beginning, at the end or in between any two adjacent digits) . What is the lexicographically smallest string you can get by performing these operations? A string a is lexicographically smaller than a string b of the same length if and only if the following holds: in the first position where a and b differ, the string a has a smaller digit than the corresponding digit in b .",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. Then the test cases follow. Each test case consists of a single line that contains one string s ( 1 \u2264 | s| \u2264 2 \u00b7 10^ 5 ) \u2014 the string consisting of digits. Please note that s is just a string consisting of digits, so leading zeros are allowed. It is guaranteed that the sum of lengths of s over all test cases does not exceed 2 \u00b7 10^ 5 .",
    "output": "Print a single string \u2014 the minimum string that is possible to obtain.",
    "note": "In the first test case: Delete 8 and insert 9 at the end of the notation. The resulting notation is 04299 . Delete 4 and insert 5 in the 3 - rd position of the notation. The resulting notation is 02599 . Nothing needs to be done in the second and third test cases.",
    "topics": [
      "data structures",
      "greedy",
      "math",
      "sortings"
    ],
    "id": "1730C"
  },
  {
    "title": "Meeting on the Line",
    "url": "https://codeforces.com/problemset/problem/1730/B",
    "history": "n people live on the coordinate line, the i - th one lives at the point x_ i ( 1 \u2264 i \u2264 n ) . They want to choose a position x_ 0 to meet. The i - th person will spend | x_ i - x_ 0| minutes to get to the meeting place. Also, the i - th person needs t_ i minutes to get dressed, so in total he or she needs t_ i + | x_ i - x_ 0| minutes. Here | y| denotes the absolute value of y . These people ask you to find a position x_ 0 that minimizes the time in which all n people can gather at the meeting place.",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 3 ) \u2014 the number of test cases. Then the test cases follow. Each test case consists of three lines. The first line contains a single integer n ( 1 \u2264 n \u2264 10^ 5 ) \u2014 the number of people. The second line contains n integers x_ 1, x_ 2, . . . , x_ n ( 0 \u2264 x_ i \u2264 10^ 8 ) \u2014 the positions of the people. The third line contains n integers t_ 1, t_ 2, . . . , t_ n ( 0 \u2264 t_ i \u2264 10^ 8 ) , where t_ i is the time i - th person needs to get dressed. It is guaranteed that the sum of n over all test cases does not exceed 2 \u00b7 10^ 5 .",
    "output": "For each test case, print a single real number \u2014 the optimum position x_ 0 . It can be shown that the optimal position x_ 0 is unique. Your answer will be considered correct if its absolute or relative error does not exceed 10^ \u22126 . Formally, let your answer be a , the jury' s answer be b . Your answer will be considered correct if | a\u2212b| / max( 1, | b| ) \u2264 10^ \u22126 .",
    "note": "In the 1 - st test case there is one person, so it is efficient to choose his or her position for the meeting place. Then he or she will get to it in 3 minutes, that he or she need to get dressed. In the 2 - nd test case there are 2 people who don' t need time to get dressed. Each of them needs one minute to get to position 2 . In the 5 - th test case the 1 - st person needs 4 minutes to get to position 1 ( 4 minutes to get dressed and 0 minutes on the way) ; the 2 - nd person needs 2 minutes to get to position 1 ( 1 minute to get dressed and 1 minute on the way) ; the 3 - rd person needs 4 minutes to get to position 1 ( 2 minutes to get dressed and 2 minutes on the way) .",
    "topics": [
      "binary search",
      "geometry",
      "greedy",
      "implementation",
      "math",
      "ternary search"
    ],
    "id": "1730B"
  },
  {
    "title": "Kirei and the Linear Function",
    "url": "https://codeforces.com/problemset/problem/1729/F",
    "history": "Given the string s of decimal digits ( 0- 9) of length n . A substring is a sequence of consecutive characters of a string. The substring of this string is defined by a pair of indexes \u2014 with its left and right ends. So, each pair of indexes ( l, r ) , where 1 \u2264 l \u2264 r \u2264 n , corresponds to a substring of the string s . We will define as v( l, r) the numeric value of the corresponding substring ( leading zeros are allowed in it) . For example, if n= 7 , s= \" 1003004\" , then v( 1, 3) = 100 , v( 2, 3) = 0 and v( 2, 7) = 3004 . You are given n , s and an integer w ( 1 \u2264 w < n ) . You need to process m queries, each of which is characterized by 3 numbers l_ i, r_ i, k_ i ( 1 \u2264 l_ i \u2264 r_ i \u2264 n; 0 \u2264 k_ i \u2264 8 ) . The answer to the i th query is such a pair of substrings of length w that if we denote them as ( L_ 1, L_ 1+ w- 1) and ( L_ 2, L_ 2+ w- 1) , then: L_ 1 L_ 2 , that is, the substrings are different; the remainder of dividing a number v( L_ 1, L_ 1+ w- 1) \u00b7 v( l_ i, r_ i) + v( L_ 2, L_ 2 + w - 1) by 9 is equal to k_ i . If there are many matching substring pairs, then find a pair where L_ 1 is as small as possible. If there are many matching pairs in this case, then minimize L_ 2 . Note that the answer may not exist.",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 number of input test cases. The first line of each test case contains a string s , which contains only the characters 0- 9 and has a length n ( 2 \u2264 n \u2264 2 \u00b7 10^ 5 ) . The second line contains two integers w, m ( 1 \u2264 w < n, 1 \u2264 m \u2264 2 \u00b7 10^ 5 ) , where n \u2014 is the length of the given string s . The number w denotes the lengths of the substrings being searched for, and m is the number of queries to be processed. The following m lines contain integers l_ i, r_ i, k_ i ( 1 \u2264 l_ i \u2264 r_ i \u2264 n , 0 \u2264 k_ i \u2264 8 ) \u2014 i th query parameters. It is guaranteed that the sum of n over all test cases does not exceed 2 \u00b7 10^ 5 . It is also guaranteed that the sum of m over all test cases does not exceed 2 \u00b7 10^ 5 .",
    "output": "For each request, print in a separate line: left borders of the required substrings: L_ 1 and L_ 2 ; - 1 - 1 otherwise, if there is no solution. If there are several solutions, minimize L_ 1 first, and minimize L_ 2 second.",
    "note": "Consider the first test case of example inputs. In this test case n= 7 , s= \" 1003004\" , w= 4 and one query l_ 1= 1 , r_ 1= 2 , k_ 1= 1 . Note that v( 1, 2) = 10 . We need to find a pair of substrings of length 4 such that v( L_ 1, L_ 1+ 3) \u00b710+ v( L_ 2, L_ 2+ 3) has a remainder of k_ 1= 1 when divided by 9 . The values L_ 1= 2, L_ 2= 4 actually satisfy all the requirements: v( L_ 1, L_ 1+ w- 1) = v( 2, 5) = 30 , v( L_ 2, L_ 2+ w- 1) = v( 4, 7) = 3004 . Indeed, 30\u00b710+ 3004= 3304 , which has a remainder of 1 when divided by 9 . It can be shown that L_ 1= 2 is the minimum possible value, and L_ 2= 4 is the minimum possible with L_ 1= 2 .",
    "topics": [
      "hashing",
      "math"
    ],
    "id": "1729F"
  },
  {
    "title": "Two Elevators",
    "url": "https://codeforces.com/problemset/problem/1729/A",
    "history": "Vlad went into his appartment house entrance, now he is on the 1 - th floor. He was going to call the elevator to go up to his apartment. There are only two elevators in his house. Vlad knows for sure that: the first elevator is currently on the floor a ( it is currently motionless) , the second elevator is located on floor b and goes to floor c ( b c ) . Please note, if b= 1 , then the elevator is already leaving the floor 1 and Vlad does not have time to enter it. If you call the first elevator, it will immediately start to go to the floor 1 . If you call the second one, then first it will reach the floor c and only then it will go to the floor 1 . It takes | x - y| seconds for each elevator to move from floor x to floor y . Vlad wants to call an elevator that will come to him faster. Help him choose such an elevator.",
    "input": "The first line of the input contains the only t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. This is followed by t lines, three integers each a , b and c ( 1 \u2264 a, b, c \u2264 10^ 8 , b c ) \u2014 floor numbers described in the statement.",
    "output": "Output t numbers, each of which is the answer to the corresponding test case. As an answer, output: 1 , if it is better to call the first elevator; 2 , if it is better to call the second one; 3 , if it doesn' t matter which elevator to call ( both elevators will arrive in the same time) .",
    "note": "In the first test case of the example, the first elevator is already on the floor of 1 . In the second test case of the example, when called, the elevators would move as follows: At the time of the call, the first elevator is on the floor of 3 , and the second one is on the floor of 1 , but is already going to another floor; in 1 second after the call, the first elevator would be on the floor 2 , the second one would also reach the floor 2 and now can go to the floor 1 ; in 2 seconds, any elevator would reach the floor 1 . In the third test case of the example, the first elevator will arrive in 2 seconds, and the second in 1 .",
    "topics": [
      "math"
    ],
    "id": "1729A"
  },
  {
    "title": "Illumination",
    "url": "https://codeforces.com/problemset/problem/1728/G",
    "history": "Consider a segment [ 0, d] of the coordinate line. There are n lanterns and m points of interest in this segment. For each lantern, you can choose its power \u2014 an integer between 0 and d ( inclusive) . A lantern with coordinate x illuminates the point of interest with coordinate y if | x - y| is less than or equal to the power of the lantern. A way to choose the power values for all lanterns is considered valid if every point of interest is illuminated by at least one lantern. You have to process q queries. Each query is represented by one integer f_ i . To answer the i - th query, you have to: add a lantern on coordinate f_ i ; calculate the number of valid ways to assign power values to all lanterns, and print it modulo 998244353 ; remove the lantern you just added.",
    "input": "The first line contains three integers d , n and m ( 4 \u2264 d \u2264 3 \u00b7 10^ 5 ; 1 \u2264 n \u2264 2 \u00b7 10^ 5 ; 1 \u2264 m \u2264 16 ) \u2014 the size of the segment, the number of lanterns and the number of points of interest, respectively. The second line contains n integers l_ 1, l_ 2, . . . , l_ n ( 1 \u2264 l_ i \u2264 d - 1 ) , where l_ i is the coordinate of the i - th lantern. The third line contains m integers p_ 1, p_ 2, . . . , p_ m ( 1 \u2264 p_ i \u2264 d - 1 ) , where p_ i is the coordinate of the i - th point of interest. The fourth line contains one integer q ( 1 \u2264 q \u2264 5 \u00b7 10^ 5 ) \u2014 the number of queries. The fifth line contains q integers f_ 1, f_ 2, . . . , f_ q ( 1 \u2264 f_ i \u2264 d - 1 ) , where f_ i is the integer representing the i - th query. Additional constraint on the input: during the processing of each query, no coordinate contains more than one object ( i. e. there cannot be two or more lanterns with the same coordinate, two or more points of interest with the same coordinate, or a lantern and a point of interest with the same coordinate) .",
    "output": "For each query, print one integer \u2014 the answer to it, taken modulo 998244353 .",
    "note": "",
    "topics": [
      "binary search",
      "bitmasks",
      "brute force",
      "combinatorics",
      "dp",
      "math",
      "two pointers"
    ],
    "id": "1728G"
  },
  {
    "title": "Red-Black Pepper",
    "url": "https://codeforces.com/problemset/problem/1728/E",
    "history": "Monocarp is going to host a party for his friends. He prepared n dishes and is about to serve them. First, he has to add some powdered pepper to each of them \u2014 otherwise, the dishes will be pretty tasteless. The i - th dish has two values a_ i and b_ i \u2014 its tastiness with red pepper added or black pepper added, respectively. Monocarp won' t add both peppers to any dish, won' t add any pepper multiple times, and won' t leave any dish without the pepper added. Before adding the pepper, Monocarp should first purchase the said pepper in some shop. There are m shops in his local area. The j - th of them has packages of red pepper sufficient for x_ j servings and packages of black pepper sufficient for y_ j servings. Monocarp goes to exactly one shop, purchases multiple ( possibly, zero) packages of each pepper in such a way that each dish will get the pepper added once, and no pepper is left. More formally, if he purchases x red pepper packages and y black pepper packages, then x and y should be non- negative and x \u00b7 x_ j + y \u00b7 y_ j should be equal to n . For each shop, determine the maximum total tastiness of the dishes after Monocarp buys pepper packages only in this shop and adds the pepper to the dishes. If it' s impossible to purchase the packages in the said way, print - 1.",
    "input": "The first line contains a single integer n ( 1 \u2264 n \u2264 3 \u00b7 10^ 5 ) \u2014 the number of dishes. The i - th of the next n lines contains two integers a_ i and b_ i ( 1 \u2264 a_ i, b_ i \u2264 10^ 9 ) \u2014 the tastiness of the i - th dish with red pepper added or black pepper added, respectively. The next line contains a single integer m ( 1 \u2264 m \u2264 3 \u00b7 10^ 5 ) \u2014 the number of shops. The j - th of the next m lines contains two integers x_ j and y_ j ( 1 \u2264 x_ j, y_ j \u2264 n ) \u2014 the number of servings the red and the black pepper packages are sufficient for in the j - th shop, respectively.",
    "output": "Print m integers. For each shop, print the maximum total tastiness of the dishes after Monocarp buys pepper packages only in this shop and adds the pepper to the dishes. If it' s impossible to purchase the packages so that each dish will get the pepper added once and no pepper is left, print - 1.",
    "note": "Consider the first example. In the first shop, Monocarp can only buy 0 red pepper packages and 1 black pepper package. Black pepper added to all dishes will sum up to 10 + 50 + 2 = 62 . In the second shop, Monocarp can buy any number of red and black pepper packages: 0 and 3 , 1 and 2 , 2 and 1 or 3 and 0 . The optimal choice turns out to be either 1 and 2 or 2 and 1 . Monocarp can add black pepper to the first dish, red pepper to the second dish and any pepper to the third dish, the total is 10 + 100 + 2 = 112 . In the third shop, Monocarp can only buy 1 red pepper package and 0 black pepper packages. Red pepper added to all dishes will sum up to 5 + 100 + 2 = 107 . In the fourth shop, Monocarp can only buy an even total number of packages. Since n is odd, it' s impossible to get exactly n packages. Thus, the answer is - 1 .",
    "topics": [
      "brute force",
      "data structures",
      "greedy",
      "math",
      "number theory"
    ],
    "id": "1728E"
  },
  {
    "title": "Mainak and the Bleeding Polygon",
    "url": "https://codeforces.com/problemset/problem/1726/H",
    "history": "Mainak has a convex polygon P with n vertices labelled as A_ 1, A_ 2, . . . , A_ n in a counter- clockwise fashion. The coordinates of the i - th point A_ i are given by ( x_ i, y_ i) , where x_ i and y_ i are both integers. Further, it is known that the interior angle at A_ i is either a right angle or a proper obtuse angle. Formally it is known that: 90 ^ \u2218\u2264\u2220 A_ i - 1A_ iA_ i + 1 < 180 ^ \u2218 , \u2200 i \u2208{ 1, 2, . . . , n} where we conventionally consider A_ 0 = A_ n and A_ n + 1 = A_ 1 . Mainak' s friend insisted that all points Q such that there exists a chord of the polygon P passing through Q with length not exceeding 1 , must be coloured red . Mainak wants you to find the area of the coloured region formed by the red points. Formally, determine the area of the region S = { Q \u2208P | Q is coloured red} . Recall that a chord of a polygon is a line segment between two points lying on the boundary ( i. e. vertices or points on edges) of the polygon.",
    "input": "The first line contains an integer n ( 4 \u2264 n \u2264 5000 ) \u2014 the number of vertices of a polygon P . The i - th line of the next n lines contain two integers x_ i and y_ i ( - 10^ 9 \u2264 x_ i, y_ i \u2264 10^ 9 ) \u2014 the coordinates of A_ i . Additional constraint on the input: The vertices form a convex polygon and are listed in counter- clockwise order. It is also guaranteed that all interior angles are in the range [ 90^ \u2218 ; 180^ \u2218 ) .",
    "output": "Print the area of the region coloured in red . Your answer is considered correct if its absolute or relative error does not exceed 10^ - 4 . Formally, let your answer be a , and the jury' s answer be b . Your answer is accepted if and only if | a - b| / max( 1, | b| ) \u2264 10^ - 4 .",
    "note": "In the first example, the polygon P can be visualised on the Cartesian Plane as:",
    "topics": [
      "binary search",
      "geometry",
      "implementation",
      "math"
    ],
    "id": "1726H"
  },
  {
    "title": "Almost Perfect",
    "url": "https://codeforces.com/problemset/problem/1726/E",
    "history": "A permutation p of length n is called almost perfect if for all integer 1 \u2264 i \u2264 n , it holds that | p_ i - p^ - 1_ i | \u2264 1 , where p^ - 1 is the inverse permutation of p ( i. e. p^ - 1_ k_ 1 = k_ 2 if and only if p_ k_ 2 = k_ 1 ) . Count the number of almost perfect permutations of length n modulo 998244353 .",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 1000 ) \u2014 the number of test cases. The description of each test case follows. The first and only line of each test case contains a single integer n ( 1 \u2264 n \u2264 3 \u00b7 10^ 5 ) \u2014 the length of the permutation. It is guaranteed that the sum of n over all test cases does not exceed 3 \u00b7 10^ 5 .",
    "output": "For each test case, output a single integer \u2014 the number of almost perfect permutations of length n modulo 998244353 .",
    "note": "For n = 2 , both permutations [ 1, 2] , and [ 2, 1] are almost perfect. For n = 3 , there are only 6 permutations. Having a look at all of them gives us: [ 1, 2, 3] is an almost perfect permutation. [ 1, 3, 2] is an almost perfect permutation. [ 2, 1, 3] is an almost perfect permutation. [ 2, 3, 1] is NOT an almost perfect permutation ( | p_ 2 - p^ - 1_ 2 | = | 3 - 1 | = 2 ) . [ 3, 1, 2] is NOT an almost perfect permutation ( | p_ 2 - p^ - 1_ 2 | = | 1 - 3 | = 2 ) . [ 3, 2, 1] is an almost perfect permutation. So we get 4 almost perfect permutations.",
    "topics": [
      "combinatorics",
      "fft",
      "math"
    ],
    "id": "1726E"
  },
  {
    "title": "Mainak and Interesting Sequence",
    "url": "https://codeforces.com/problemset/problem/1726/B",
    "history": "Mainak has two positive integers n and m . Mainak finds a sequence a_ 1, a_ 2, . . . , a_ n of n positive integers interesting, if for all integers i ( 1 \u2264 i \u2264 n ) , the bitwise XOR of all elements in a which are strictly less than a_ i is 0 . Formally if p_ i is the bitwise XOR of all elements in a which are strictly less than a_ i , then a is an interesting sequence if p_ 1 = p_ 2 = . . . = p_ n = 0 . For example, sequences [ 1, 3, 2, 3, 1, 2, 3] , [ 4, 4, 4, 4] , [ 25] are interesting, whereas [ 1, 2, 3, 4] ( p_ 2 = 1 0 ) , [ 4, 1, 1, 2, 4] ( p_ 1 = 1 \u2295 1 \u2295 2 = 2 0 ) , [ 29, 30, 30] ( p_ 2 = 29 0 ) aren' t interesting. Here a \u2295 b denotes bitwise XOR of integers a and b . Find any interesting sequence a_ 1, a_ 2, . . . , a_ n ( or report that there exists no such sequence) such that the sum of the elements in the sequence a is equal to m , i. e. a_ 1 + a_ 2 . . . + a_ n = m . As a reminder, the bitwise XOR of an empty sequence is considered to be 0 .",
    "input": "Each test contains multiple test cases. The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 5 ) \u2014 the number of test cases. Description of the test cases follows. The first line and the only line of each test case contains two integers n and m ( 1 \u2264 n \u2264 10^ 5 , 1 \u2264 m \u2264 10^ 9 ) \u2014 the length of the sequence and the sum of the elements. It is guaranteed that the sum of n over all test cases does not exceed 10^ 5 .",
    "output": "For each test case, if there exists some interesting sequence, output \" Yes\" on the first line, otherwise output \" No\" . You may print each letter in any case ( for example, \" YES\" , \" Yes\" , \" yes\" , \" yEs\" will all be recognized as positive answer) . If the answer is \" Yes\" , output n positive integers a_ 1, a_ 2, . . . , a_ n ( a_ i \u2265 1 ) , forming an interesting sequence such that a_ 1 + a_ 2 . . . + a_ n = m . If there are multiple solutions, output any.",
    "note": "In the first test case, [ 3] is the only interesting sequence of length 1 having sum 3 . In the third test case, there is no sequence of length 2 having sum of elements equal to 1 , so there is no such interesting sequence. In the fourth test case, p_ 1 = p_ 2 = p_ 3 = 0 , because bitwise XOR of an empty sequence is 0 .",
    "topics": [
      "bitmasks",
      "constructive algorithms",
      "math"
    ],
    "id": "1726B"
  },
  {
    "title": "Mainak and Array",
    "url": "https://codeforces.com/problemset/problem/1726/A",
    "history": "Mainak has an array a_ 1, a_ 2, . . . , a_ n of n positive integers. He will do the following operation to this array exactly once: Pick a subsegment of this array and cyclically rotate it by any amount. Formally, he can do the following exactly once: Pick two integers l and r , such that 1 \u2264 l \u2264 r \u2264 n , and any positive integer k . Repeat this k times: set a_ l= a_ l+ 1, a_ l+ 1= a_ l+ 2, . . . , a_ r- 1= a_ r, a_ r= a_ l ( all changes happen at the same time) . Mainak wants to maximize the value of ( a_ n - a_ 1) after exactly one such operation. Determine the maximum value of ( a_ n - a_ 1) that he can obtain.",
    "input": "Each test contains multiple test cases. The first line contains a single integer t ( 1 \u2264 t \u2264 50 ) \u2014 the number of test cases. Description of the test cases follows. The first line of each test case contains a single integer n ( 1 \u2264 n \u2264 2000 ) . The second line of each test case contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 999 ) . It is guaranteed that the sum of n over all test cases does not exceed 2000 .",
    "output": "For each test case, output a single integer \u2014 the maximum value of ( a_ n - a_ 1) that Mainak can obtain by doing the operation exactly once.",
    "note": "In the first test case, we can rotate the subarray from index 3 to index 6 by an amount of 2 ( i. e. choose l = 3 , r = 6 and k = 2 ) to get the optimal array: [ 1, 3, 9, 11, 5, 7] \u27f6 [ 1, 3, 5, 7, 9, 11] So the answer is a_ n - a_ 1 = 11 - 1 = 10 . In the second testcase, it is optimal to rotate the subarray starting and ending at index 1 and rotating it by an amount of 2 . In the fourth testcase, it is optimal to rotate the subarray starting from index 1 to index 4 and rotating it by an amount of 3 . So the answer is 8 - 1 = 7 .",
    "topics": [
      "greedy",
      "math"
    ],
    "id": "1726A"
  },
  {
    "title": "Hot Black Hot White",
    "url": "https://codeforces.com/problemset/problem/1725/H",
    "history": "One day, you are accepted as being Dr. Chanek' s assistant. The first task given by Dr. Chanek to you is to take care and store his magical stones. Dr. Chanek has N magical stones with N being an even number. Those magical stones are numbered from 1 to N . Magical stone i has a strength of A_ i . A magical stone can be painted with two colours, namely the colour black or the colour white. You are tasked to paint the magical stones with the colour black or white and store the magical stones into a magic box with a magic coefficient Z ( 0 \u2264 Z \u2264 2 ) . The painting of the magical stones must be done in a way such that there are N/ 2 black magical stones and N/ 2 white magical stones. Define concat( x, y) for two integers x and y as the result of concatenating the digits of x to the left of y in their decimal representation without changing the order. As an example, concat( 10, 24) will result in 1024 . For a magic box with a magic coefficient Z , magical stone i will react with magical stone j if the colours of both stones are different and concat( A_ i, A_ j) \u00d7concat( A_ j, A_ i) + A_ i \u00d7 A_ j \u2261 Z 3 . A magical stone that is reacting will be very hot and dangerous. Because of that, you must colour the magical stones and determine the magic coefficient Z of the magic box in a way such that there is no magical stone that reacts, or report if it is impossible.",
    "input": "The first line contains a single even integer N ( 2 \u2264 N \u2264 10^ 5 ) \u2014 the number of magical stones Dr. Chanek has. The second line contains N integer A_ 1, A_ 2, . . . , A_ N ( 1 \u2264 A_ i \u2264 10^ 9 ) \u2014 the strengths of all magical stones.",
    "output": "If it is not possible to satisfy the condition of the problem, output - 1 . Otherwise, output two lines. The first line contains an integer Z denoting the magic coefficient of the magic box. The second line contains a string S of length N . S_ i is 0 if magical stone i is coloured black or 1 if magical stone i is coloured white. If there are more than one possibilities of colouring and choosing the magic coefficient Z , output any of them.",
    "note": "By giving the above colouring, it can be seen that: i= 1, j= 2 \u27f6concat( 4, 10) \u00d7concat( 10, 4) + 10 \u00d7 4 = 410 \u00d7 104 + 40 = 42680 \u2261 2 3 i= 1, j= 3 \u27f6concat( 4, 9) \u00d7concat( 9, 4) + 4 \u00d7 9 = 49 \u00d7 94 + 36 = 4642 \u2261 1 3 i= 4, j= 2 \u27f6concat( 14, 10) \u00d7concat( 10, 14) + 10 \u00d7 14 = 1410 \u00d7 1014 + 140 = 1429880 \u2261 2 3 i= 4, j= 3 \u27f6concat( 14, 9) \u00d7concat( 9, 14) + 14 \u00d7 9 = 149 \u00d7 914 + 126 = 136312 \u2261 1 3 Because of that, by choosing Z = 0 , it can be guaranteed that there is no magical stone that reacts.",
    "topics": [
      "constructive algorithms",
      "math"
    ],
    "id": "1725H"
  },
  {
    "title": "Garage",
    "url": "https://codeforces.com/problemset/problem/1725/G",
    "history": "Pak Chanek plans to build a garage. He wants the garage to consist of a square and a right triangle that are arranged like the following illustration. Define a and b as the lengths of two of the sides in the right triangle as shown in the illustration. An integer x is suitable if and only if we can construct a garage with assigning positive integer values for the lengths a and b ( a< b ) so that the area of the square at the bottom is exactly x . As a good friend of Pak Chanek, you are asked to help him find the N - th smallest suitable number.",
    "input": "The only line contains a single integer N ( 1 \u2264 N \u2264 10^ 9 ) .",
    "output": "An integer that represents the N - th smallest suitable number.",
    "note": "The 3 - rd smallest suitable number is 7 . A square area of 7 can be obtained by assigning a= 3 and b= 4 .",
    "topics": [
      "binary search",
      "geometry",
      "math"
    ],
    "id": "1725G"
  },
  {
    "title": "Electrical Efficiency",
    "url": "https://codeforces.com/problemset/problem/1725/E",
    "history": "In the country of Dengkleknesia, there are N factories numbered from 1 to N . Factory i has an electrical coefficient of A_ i . There are also N- 1 power lines with the j - th power line connecting factory U_ j and factory V_ j . It can be guaranteed that each factory in Dengkleknesia is connected to all other factories in Dengkleknesia through one or more power lines. In other words, the collection of factories forms a tree. Each pair of different factories in Dengkleknesia can use one or more existing power lines to transfer electricity to each other. However, each power line needs to be turned on first so that electricity can pass through it. Define f( x, y, z) as the minimum number of power lines that need to be turned on so that factory x can make electrical transfers to factory y and factory z . Also define g( x, y, z) as the number of distinct prime factors of GCD( A_ x, A_ y, A_ z) . To measure the electrical efficiency, you must find the sum of f( x, y, z) \u00d7 g( x, y, z) for all combinations of ( x, y, z) such that 1 \u2264 x < y < z \u2264 N . Because the answer can be very large, you just need to output the answer modulo 998 244 353 . Note: GCD( k_ 1, k_ 2, k_ 3) is the greatest common divisor of k_ 1 , k_ 2 , and k_ 3 , which is the biggest integer that simultaneously divides k_ 1 , k_ 2 , and k_ 3 .",
    "input": "The first line contains a single integer N ( 1 \u2264 N \u2264 2 \u00b7 10^ 5 ) \u2014 the number of factories in Dengkleknesia. The second line contains N integers A_ 1, A_ 2, . . . , A_ N ( 1 \u2264 A_ i \u2264 2 \u00b7 10^ 5 ) \u2014 the electrical coefficients of the factories. The j - th of the next N- 1 lines contains two integers U_ j and V_ j ( 1 \u2264 U_ j, V_ j \u2264 N ) \u2014 a power line that connects cities U_ j and V_ j . The collection of factories forms a tree.",
    "output": "An integer representing the sum of f( x, y, z) \u00d7 g( x, y, z) for all combinations of ( x, y, z) such that 1 \u2264 x < y < z \u2264 N , modulo 998 244 353",
    "note": "In the first example, the only ( x, y, z) possible is ( 1, 2, 3) . Because GCD( A_ 1, A_ 2, A_ 3) = GCD( 1, 2, 3) = 1 has 0 distinct prime factors, therefore f( x, y, z) \u00d7 g( x, y, z) = 2 \u00d7 0 = 0 . In the second example, all triples ( x, y, z) that satisfy the condition are as follows: ( 1, 2, 3) \u2192 f( 1, 2, 3) \u00d7 g( 1, 2, 3) = 2 \u00d7 1 = 2 ( 1, 2, 4) \u2192 f( 1, 2, 4) \u00d7 g( 1, 2, 4) = 2 \u00d7 1 = 2 ( 1, 3, 4) \u2192 f( 1, 3, 4) \u00d7 g( 1, 3, 4) = 3 \u00d7 2 = 6 ( 2, 3, 4) \u2192 f( 2, 3, 4) \u00d7 g( 2, 3, 4) = 2 \u00d7 1 = 2 So the electrical efficiency is 2 + 2 + 6 + 2 = 12 .",
    "topics": [
      "combinatorics",
      "data structures",
      "dp",
      "math",
      "number theory",
      "trees"
    ],
    "id": "1725E"
  },
  {
    "title": "Deducing Sortability",
    "url": "https://codeforces.com/problemset/problem/1725/D",
    "history": "Let' s say Pak Chanek has an array A consisting of N positive integers. Pak Chanek will do a number of operations. In each operation, Pak Chanek will do the following: Choose an index p ( 1 \u2264 p \u2264 N ) . Let c be the number of operations that have been done on index p before this operation. Decrease the value of A_ p by 2^ c . Multiply the value of A_ p by 2 . After each operation, all elements of A must be positive integers. An array A is said to be sortable if and only if Pak Chanek can do zero or more operations so that A_ 1 < A_ 2 < A_ 3 < A_ 4 < . . . < A_ N . Pak Chanek must find an array A that is sortable with length N such that A_ 1 + A_ 2 + A_ 3 + A_ 4 + . . . + A_ N is the minimum possible. If there are more than one possibilities, Pak Chanek must choose the array that is lexicographically minimum among them. Pak Chanek must solve the following things: Pak Chanek must print the value of A_ 1 + A_ 2 + A_ 3 + A_ 4 + . . . + A_ N for that array. Q questions will be given. For the i - th question, an integer P_ i is given. Pak Chanek must print the value of A_ P_ i . Help Pak Chanek solve the problem. Note: an array B of size N is said to be lexicographically smaller than an array C that is also of size N if and only if there exists an index i such that B_ i < C_ i and for each j < i , B_ j = C_ j .",
    "input": "The first line contains two integers N and Q ( 1 \u2264 N \u2264 10^ 9 , 0 \u2264 Q \u2264min( N, 10^ 5) ) \u2014 the required length of array A and the number of questions. The i - th of the next Q lines contains a single integer P_ i ( 1 \u2264 P_ 1 < P_ 2 < . . . < P_ Q \u2264 N ) \u2014 the index asked in the i - th question.",
    "output": "Print Q+ 1 lines. The 1 - st line contains an integer representing A_ 1 + A_ 2 + A_ 3 + A_ 4 + . . . + A_ N . For each 1 \u2264 i \u2264 Q , the ( i+ 1) - th line contains an integer representing A_ P_ i .",
    "note": "In the first example, the array A obtained is [ 1, 2, 3, 3, 4, 4] . We can see that the array is sortable by doing the following operations: Choose index 5 , then A = [ 1, 2, 3, 3, 6, 4] . Choose index 6 , then A = [ 1, 2, 3, 3, 6, 6] . Choose index 4 , then A = [ 1, 2, 3, 4, 6, 6] . Choose index 6 , then A = [ 1, 2, 3, 4, 6, 8] .",
    "topics": [
      "binary search",
      "bitmasks",
      "math"
    ],
    "id": "1725D"
  },
  {
    "title": "Circular Mirror",
    "url": "https://codeforces.com/problemset/problem/1725/C",
    "history": "Pak Chanek has a mirror in the shape of a circle. There are N lamps on the circumference numbered from 1 to N in clockwise order. The length of the arc from lamp i to lamp i+ 1 is D_ i for 1 \u2264 i \u2264 N- 1 . Meanwhile, the length of the arc between lamp N and lamp 1 is D_ N . Pak Chanek wants to colour the lamps with M different colours. Each lamp can be coloured with one of the M colours. However, there cannot be three different lamps such that the colours of the three lamps are the same and the triangle made by considering the three lamps as vertices is a right triangle ( triangle with one of its angles being exactly 90 degrees) . The following are examples of lamp colouring configurations on the circular mirror. Figure 1. an example of an incorrect colouring because lamps 1 , 2 , and 3 form a right triangleFigure 2. an example of a correct colouringFigure 3. an example of a correct colouring Before colouring the lamps, Pak Chanek wants to know the number of distinct colouring configurations he can make. Count the number of distinct possible lamp colouring configurations, modulo 998 244 353 .",
    "input": "The first line contains two integers N and M ( 1 \u2264 N \u2264 3 \u00b7 10^ 5 , 2 \u2264 M \u2264 3 \u00b7 10^ 5 ) \u2014 the number of lamps in the mirror and the number of different colours used. The second line contains N integers D_ 1, D_ 2, . . . , D_ N ( 1 \u2264 D_ i \u2264 10^ 9 ) \u2014 the lengths of the arcs between the lamps in the mirror.",
    "output": "An integer representing the number of possible lamp colouring configurations, modulo 998 244 353 .",
    "note": "In the first example, all correct lamp colouring configurations are [ 1, 1, 2, 1] , [ 1, 1, 2, 2] , [ 1, 2, 1, 2] , [ 1, 2, 2, 1] , [ 1, 2, 2, 2] , [ 2, 1, 1, 1] , [ 2, 1, 1, 2] , [ 2, 1, 2, 1] , [ 2, 2, 1, 1] , and [ 2, 2, 1, 2] .",
    "topics": [
      "binary search",
      "combinatorics",
      "geometry",
      "math",
      "two pointers"
    ],
    "id": "1725C"
  },
  {
    "title": "Accumulation of Dominoes",
    "url": "https://codeforces.com/problemset/problem/1725/A",
    "history": "Pak Chanek has a grid that has N rows and M columns. Each row is numbered from 1 to N from top to bottom. Each column is numbered from 1 to M from left to right. Each tile in the grid contains a number. The numbers are arranged as follows: Row 1 contains integers from 1 to M from left to right. Row 2 contains integers from M+ 1 to 2 \u00d7 M from left to right. Row 3 contains integers from 2 \u00d7 M+ 1 to 3 \u00d7 M from left to right. And so on until row N . A domino is defined as two different tiles in the grid that touch by their sides. A domino is said to be tight if and only if the two numbers in the domino have a difference of exactly 1 . Count the number of distinct tight dominoes in the grid. Two dominoes are said to be distinct if and only if there exists at least one tile that is in one domino, but not in the other.",
    "input": "The only line contains two integers N and M ( 1 \u2264 N, M \u2264 10^ 9 ) \u2014 the number of rows and columns in the grid.",
    "output": "An integer representing the number of distinct tight dominoes in the grid.",
    "note": "The picture below is the grid that Pak Chanek has in the first example. The picture below is an example of a tight domino in the grid.",
    "topics": [
      "math"
    ],
    "id": "1725A"
  },
  {
    "title": "Misha and Paintings",
    "url": "https://codeforces.com/problemset/problem/1720/E",
    "history": "Misha has a square n \u00d7 n matrix, where the number in row i and column j is equal to a_ i, j . Misha wants to modify the matrix to contain exactly k distinct integers. To achieve this goal, Misha can perform the following operation zero or more times: choose any square submatrix of the matrix ( you choose ( x_ 1, y_ 1) , ( x_ 2, y_ 2) , such that x_ 1 \u2264 x_ 2 , y_ 1 \u2264 y_ 2 , x_ 2 - x_ 1 = y_ 2 - y_ 1 , then submatrix is a set of cells with coordinates ( x, y) , such that x_ 1 \u2264 x \u2264 x_ 2 , y_ 1 \u2264 y \u2264 y_ 2 ) , choose an integer k , where 1 \u2264 k \u2264 n^ 2 , replace all integers in the submatrix with k . Please find the minimum number of operations that Misha needs to achieve his goal.",
    "input": "The first input line contains two integers n and k ( 1 \u2264 n \u2264 500, 1 \u2264 k \u2264 n^ 2 ) \u2014 the size of the matrix and the desired amount of distinct elements in the matrix. Then n lines follows. The i - th of them contains n integers a_ i, 1, a_ i, 2, . . . , a_ i, n ( 1 \u2264 a_ i, j\u2264 n^ 2 ) \u2014 the elements of the i - th row of the matrix.",
    "output": "Output one integer \u2014 the minimum number of operations required.",
    "note": "In the first test case the answer is 1 , because one can change the value in the bottom right corner of the matrix to 1 . The resulting matrix can be found below: 111112341 In the second test case the answer is 2 . First, one can change the entire matrix to contain only 1 s, and the change the value of any single cell to 2 . One of the possible resulting matrices is displayed below: 111111112",
    "topics": [
      "constructive algorithms",
      "data structures",
      "greedy",
      "implementation",
      "math"
    ],
    "id": "1720E"
  },
  {
    "title": "Interesting Sum",
    "url": "https://codeforces.com/problemset/problem/1720/B",
    "history": "You are given an array a that contains n integers. You can choose any proper subsegment a_ l, a_ l + 1, . . . , a_ r of this array, meaning you can choose any two integers 1 \u2264 l \u2264 r \u2264 n , where r - l + 1 < n . We define the beauty of a given subsegment as the value of the following expression: max( a_ 1, a_ 2, . . . , a_ l- 1, a_ r+ 1, a_ r+ 2, . . . , a_ n) - min( a_ 1, a_ 2, . . . , a_ l- 1, a_ r+ 1, a_ r+ 2, . . . , a_ n) + max( a_ l, . . . , a_ r) - min( a_ l, . . . , a_ r) . Please find the maximum beauty among all proper subsegments.",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 1000 ) \u2014 the number of test cases. Then follow the descriptions of each test case. The first line of each test case contains a single integer n ( 4 \u2264 n \u2264 10^ 5) \u2014 the length of the array. The second line of each test case contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i\u2264 10^ 9 ) \u2014 the elements of the given array. It is guaranteed that the sum of n over all test cases does not exceed 10^ 5 .",
    "output": "For each testcase print a single integer \u2014 the maximum beauty of a proper subsegment.",
    "note": "In the first test case, the optimal segment is l = 7 , r = 8 . The beauty of this segment equals to ( 6 - 1) + ( 5 - 1) = 9 . In the second test case, the optimal segment is l = 2 , r = 4 . The beauty of this segment equals ( 100 - 2) + ( 200 - 1) = 297 .",
    "topics": [
      "brute force",
      "data structures",
      "greedy",
      "math",
      "sortings"
    ],
    "id": "1720B"
  },
  {
    "title": "Burenka Plays with Fractions",
    "url": "https://codeforces.com/problemset/problem/1720/A",
    "history": "Burenka came to kindergarden. This kindergarten is quite strange, so each kid there receives two fractions ( a/ b and c/ d ) with integer numerators and denominators. Then children are commanded to play with their fractions. Burenka is a clever kid, so she noticed that when she claps once, she can multiply numerator or denominator of one of her two fractions by any integer of her choice ( but she can' t multiply denominators by 0 ) . Now she wants know the minimal number of claps to make her fractions equal ( by value) . Please help her and find the required number of claps!",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. Then follow the descriptions of each test case. The only line of each test case contains four integers a , b , c and d ( 0 \u2264 a, c \u2264 10^ 9 , 1 \u2264 b, d \u2264 10^ 9 ) \u2014 numerators and denominators of the fractions given to Burenka initially.",
    "output": "For each test case print a single integer \u2014 the minimal number of claps Burenka needs to make her fractions equal.",
    "note": "In the first case, Burenka can multiply c by 2 , then the fractions will be equal. In the second case, fractions are already equal. In the third case, Burenka can multiply a by 4 , then b by 3 . Then the fractions will be equal ( 1 \u00b7 4/ 2 \u00b7 3 = 2/ 3 ) .",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "1720A"
  },
  {
    "title": "Mathematical Circus",
    "url": "https://codeforces.com/problemset/problem/1719/B",
    "history": "A new entertainment has appeared in Buryatia \u2014 a mathematical circus! The magician shows two numbers to the audience \u2014 n and k , where n is even. Next, he takes all the integers from 1 to n , and splits them all into pairs ( a, b) ( each integer must be in exactly one pair) so that for each pair the integer ( a + k) \u00b7 b is divisible by 4 ( note that the order of the numbers in the pair matters) , or reports that, unfortunately for viewers, such a split is impossible. Burenka really likes such performances, so she asked her friend Tonya to be a magician, and also gave him the numbers n and k . Tonya is a wolf, and as you know, wolves do not perform in the circus, even in a mathematical one. Therefore, he asks you to help him. Let him know if a suitable splitting into pairs is possible, and if possible, then tell it.",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. The following is a description of the input data sets. The single line of each test case contains two integers n and k ( 2 \u2264 n \u2264 2 \u00b7 10^ 5 , 0 \u2264 k \u2264 10^ 9 , n is even) \u2014 the number of integers and the number being added k . It is guaranteed that the sum of n over all test cases does not exceed 2 \u00b7 10^ 5 .",
    "output": "For each test case, first output the string \" YES\" if there is a split into pairs, and \" NO\" if there is none. If there is a split, then in the following n/ 2 lines output pairs of the split, in each line print 2 numbers \u2014 first the integer a , then the integer b .",
    "note": "In the first test case, splitting into pairs ( 1, 2) and ( 3, 4) is suitable, same as splitting into ( 1, 4) and ( 3, 2) . In the second test case, ( 1 + 0) \u00b7 2 = 1 \u00b7 ( 2 + 0) = 2 is not divisible by 4 , so there is no partition.",
    "topics": [
      "constructive algorithms",
      "math"
    ],
    "id": "1719B"
  },
  {
    "title": "Chip Game",
    "url": "https://codeforces.com/problemset/problem/1719/A",
    "history": "Burenka and Tonya are playing an old Buryat game with a chip on a board of n \u00d7 m cells. At the beginning of the game, the chip is located in the lower left corner of the board. In one move, the player can move the chip to the right or up by any odd number of cells ( but you cannot move the chip both to the right and up in one move) . The one who cannot make a move loses. Burenka makes the first move, the players take turns. Burenka really wants to win the game, but she is too lazy to come up with a strategy, so you are invited to solve the difficult task of finding it. Name the winner of the game ( it is believed that Burenka and Tonya are masters of playing with chips, so they always move in the optimal way) . Chip' s starting cell is green, the only cell from which chip can' t move is red. if the chip is in the yellow cell, then blue cells are all options to move the chip in one move.",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. The following is a description of the input data sets. The only line of each test case contains two integers n and m ( 1 \u2264 n, m \u2264 10^ 9 ) \u2014 the dimensions of the game board.",
    "output": "For each test case print a single line \u2014 the name of the winner of the game ( \" Burenka\" or \" Tonya\" ) .",
    "note": "In the first case, Burenka has no move, so Tonya wins. In the second case, Burenka can move 3 cells to the right, after which Tony will not be able to make a move, which means that Burenka wins. In the third case, Burenka can move 5 squares to the right. Then we can say that we have a game on a board of 1 \u00d7 5 cells, and Tonya is the first player. In such game the second player wins, so in the original one Burenka will win.",
    "topics": [
      "games",
      "math"
    ],
    "id": "1719A"
  },
  {
    "title": "Burenka, an Array and Queries",
    "url": "https://codeforces.com/problemset/problem/1718/F",
    "history": "Eugene got Burenka an array a of length n of integers from 1 to m for her birthday. Burenka knows that Eugene really likes coprime integers ( integers x and y such that they have only one common factor ( equal to 1 ) ) so she wants to to ask Eugene q questions about the present. Each time Burenka will choose a subsegment a_ l, a_ l + 1, . . . , a_ r of array a , and compute the product of these numbers p = a_ l \u00b7 a_ l + 1\u00b7. . . \u00b7 a_ r . Then she will ask Eugene to count the number of integers between 1 and C inclusive which are coprime with p . Help Eugene answer all the questions!",
    "input": "In the first line of input there are four integers n , m , C , q ( 1 \u2264 n, q \u2264 10^ 5 , 1 \u2264 m \u2264 2\u00b7 10^ 4 , 1 \u2264 C \u2264 10^ 5 ) \u2014 the length of the array a , the maximum possible value of a_ i , the value C , and the number of queries. The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i\u2264 m ) \u2014 the array a . In the next q lines the queries are given. Each query consists of two integers l and r ( 1 \u2264 l \u2264 r \u2264 n ) .",
    "output": "Print q integers \u2014 the answers to Burenka' s queries.",
    "note": "Here' s an explanation for the example: in the first query, the product is equal to 1 , which is coprime with 1, 2, 3, 4, 5 . in the second query, the product is equal to 12 , which is coprime with 1 and 5 . in the third query, the product is equal to 10 , which is coprime with 1 and 3 .",
    "topics": [
      "data structures",
      "math",
      "number theory"
    ],
    "id": "1718F"
  },
  {
    "title": "Impressionism",
    "url": "https://codeforces.com/problemset/problem/1718/E",
    "history": "Burenka has two pictures a and b , which are tables of the same size n \u00d7 m . Each cell of each painting has a color \u2014 a number from 0 to 2 \u00b7 10^ 5 , and there are no repeating colors in any row or column of each of the two paintings, except color 0 . Burenka wants to get a picture b from the picture a . To achieve her goal, Burenka can perform one of 2 operations: swap any two rows of a or any two of its columns. Tell Burenka if she can fulfill what she wants, and if so, tell her the sequence of actions. The rows are numbered from 1 to n from top to bottom, the columns are numbered from 1 to m from left to right.",
    "input": "The first line contains two integers n and m ( 1 \u2264 n \u00b7 m \u2264 2 \u00b7 10^ 5 ) \u2014 the sizes of the table. The i - th of the next n lines contains m integers a_ i, 1, a_ i, 2, . . . , a_ i, m ( 0 \u2264 a_ i, j\u2264 2 \u00b7 10^ 5 ) \u2014 the colors of the i - th row of picture a . It is guaranteed that there are no identical colors in the same row or column, except color 0 . The i - th of the following n lines contains m integers b_ i, 1, b_ i, 2, . . . , b_ i, m ( 0 \u2264 b_ i, j\u2264 2 \u00b7 10^ 5 ) \u2014 the colors of the i - th row of picture b . It is guaranteed that there are no identical colors in the same row or column, except color 0 .",
    "output": "In the first line print the number - 1 if it is impossible to achieve what Burenka wants, otherwise print the number of actions in your solution k ( 0 \u2264 k \u2264 2 \u00b7 10^ 5 ) . It can be proved that if a solution exists, then there exists a solution where k \u2264 2 \u00b7 10^ 5 . In the next k lines print the operations. First print the type of the operation ( 1 \u2014 swap rows, 2 \u2014 columns) , and then print the two indices of rows or columns to which the operation is applied. Note that you don' t have to minimize the number of operations.",
    "note": "",
    "topics": [
      "constructive algorithms",
      "graphs",
      "implementation",
      "math"
    ],
    "id": "1718E"
  },
  {
    "title": "Permutation for Burenka",
    "url": "https://codeforces.com/problemset/problem/1718/D",
    "history": "We call an array a pure if all elements in it are pairwise distinct. For example, an array [ 1, 7, 9] is pure, [ 1, 3, 3, 7] isn' t, because 3 occurs twice in it. A pure array b is similar to a pure array c if their lengths n are the same and for all pairs of indices l , r , such that 1 \u2264 l \u2264 r \u2264 n , it' s true that argmax( [ b_ l, b_ l + 1, . . . , b_ r] ) = argmax( [ c_ l, c_ l + 1, . . . , c_ r] ) , where argmax( x) is defined as the index of the largest element in x ( which is unique for pure arrays) . For example, argmax( [ 3, 4, 2] ) = 2 , argmax( [ 1337, 179, 57] ) = 1 . Recently, Tonya found out that Burenka really likes a permutation p of length n . Tonya decided to please her and give her an array a similar to p . He already fixed some elements of a , but exactly k elements are missing ( in these positions temporarily a_ i = 0 ) . It is guaranteed that k \u2265 2 . Also, he has a set S of k - 1 numbers. Tonya realized that he was missing one number to fill the empty places of a , so he decided to buy it. He has q options to buy. Tonya thinks that the number d suits him, if it is possible to replace all zeros in a with numbers from S and the number d , so that a becomes a pure array similar to p . For each option of d , output whether this number is suitable for him or not.",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 4 ) is the number of test cases. The description of the test cases follows. The first line of each test case contains a couple of integers n and q ( 1 \u2264 n, q \u2264 3 \u00b7 10^ 5 ) . The second line of each input test case contains n integers p_ 1, p_ 2, . . . , p_ n ( 1 \u2264 p_ i \u2264 n ) \u2014 the permutation Burenka likes. The third line of each test case contains n integers a_ 1, a_ 2, . . . , a_ n ( 0 \u2264 a_ i \u2264 10^ 6 ) \u2014 elements of Tonya' s array, where 0 denotes a missing element. It is guaranteed that there are two indexes i, j ( 1 \u2264 i, j \u2264 n, i j) such that a_ i = 0, a_ j = 0 , which implies that k \u2265 2 . The fourth line of each test case contains k - 1 distinct integers s_ 1, s_ 2, . . . , s_ k- 1 ( 1 \u2264 s_ i \u2264 10^ 6 ) \u2014 elements of Tonya' s set S . Each of the next q lines contains a single integer d ( 1 \u2264 d \u2264 10^ 6 ) \u2014 the number that Tonya plans to buy. It is guaranteed that for each given d it' s possible to fill in the gaps in a with numbers from S and the number d to get a pure array. It is guaranteed that the sum of n and the sum of q in all tests does not exceed 3 \u00b7 10^ 5 .",
    "output": "Output q lines. For each value d , print \" YES\" if there is a way to fill the array a to make it similar to p , and \" NO\" otherwise.",
    "note": "In the first test case for d = 9 , you can get a = [ 5, 9, 7, 6] , it can be proved that a is similar to p , for d= 1 and d= 4 it can be proved that there is no answer. In the second test case for d = 1 , you can get a = [ 1, 5, 10, 9, 3] , for d = 8 , you can get a = [ 3, 5, 10, 9, 8] , it can be proved that for d = 11 there is no answer.",
    "topics": [
      "data structures",
      "graph matchings",
      "greedy",
      "math",
      "trees"
    ],
    "id": "1718D"
  },
  {
    "title": "Tonya and Burenka-179",
    "url": "https://codeforces.com/problemset/problem/1718/C",
    "history": "Tonya was given an array of a of length n written on a postcard for his birthday. For some reason, the postcard turned out to be a cyclic array, so the index of the element located strictly to the right of the n - th is 1 . Tonya wanted to study it better, so he bought a robot \" Burenka- 179\" . A program for Burenka is a pair of numbers ( s, k) , where 1 \u2264 s \u2264 n , 1 \u2264 k \u2264 n- 1 . Note that k cannot be equal to n . Initially, Tonya puts the robot in the position of the array s . After that, Burenka makes exactly n steps through the array. If at the beginning of a step Burenka stands in the position i , then the following happens: The number a_ i is added to the usefulness of the program. \" Burenka\" moves k positions to the right ( i : = i + k is executed, if i becomes greater than n , then i : = i - n ) . Help Tonya find the maximum possible usefulness of a program for \" Burenka\" if the initial usefulness of any program is 0 . Also, Tony' s friend Ilyusha asks him to change the array q times. Each time he wants to assign a_ p : = x for a given index p and a value x . You need to find the maximum possible usefulness of the program after each of these changes.",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 4 ) is the number of test cases. The description of the test cases follows. The first line of each test case contains two integers n and q ( 2 \u2264 n \u2264 2 \u00b7 10^ 5 , 0 \u2264 q \u2264 2 \u00b7 10^ 5 ) . The second line of each test case contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 9 ) \u2014 elements of the array. The following q lines contain changes, each of them contains two integers p and x ( 1 \u2264 p \u2264 n , 1 \u2264 x \u2264 10^ 9 ) , meaning you should assign a_ p : = x . It is guaranteed that the sum of n and the sum of q over all test cases do not exceed 2 \u00b7 10^ 5 .",
    "output": "For each test case, output q+ 1 numbers \u2014 the maximum usefulness of a program initially and after each of the changes.",
    "note": "In the first test case, initially and after each request, the answer is achieved at s = 1 , k = 1 or s = 2 , k = 1 . In the second test case, initially, the answer is achieved when s = 1 , k = 2 or s = 3 , k = 2 . After the first request, the answer is achieved at s = 2 , k = 2 or s = 4 , k = 2 .",
    "topics": [
      "data structures",
      "greedy",
      "math",
      "number theory"
    ],
    "id": "1718C"
  },
  {
    "title": "Fibonacci Strings",
    "url": "https://codeforces.com/problemset/problem/1718/B",
    "history": "In all schools in Buryatia, in the 1 class, everyone is told the theory of Fibonacci strings. \" A block is a subsegment of a string where all the letters are the same and are bounded on the left and right by the ends of the string or by letters other than the letters in the block. A string is called a Fibonacci string if, when it is divided into blocks, their lengths in the order they appear in the string form the Fibonacci sequence ( f_ 0 = f_ 1 = 1 , f_ i = f_ i- 2 + f_ i- 1 ) , starting from the zeroth member of this sequence. A string is called semi- Fibonacci if it possible to reorder its letters to get a Fibonacci string. \" Burenka decided to enter the Buryat State University, but at the entrance exam she was given a difficult task. She was given a string consisting of the letters of the Buryat alphabet ( which contains exactly k letters) , and was asked if the given string is semi- Fibonacci. The string can be very long, so instead of the string, she was given the number of appearances of each letter ( c_ i for the i - th letter) in that string. Unfortunately, Burenka no longer remembers the theory of Fibonacci strings, so without your help she will not pass the exam.",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. The following is a description of the input data sets. The first line of each test case contains one integer k ( 1 \u2264 k \u2264 100 ) \u2014 the number of letters in the alphabet. The second line of each test case contains k integers c_ 1, c_ 2, . . . , c_ k ( 1 \u2264 c_ i \u2264 10^ 9 ) \u2014 the number of occurrences of each letter in the string.",
    "output": "For each test case print the string \" YES\" if the corresponding string is semi- Fibonacci, and \" NO\" if it is not. You can print \" YES\" and \" NO\" in any case ( for example, the strings \" yEs\" , \" yes\" , \" Yes\" will be recognized as a positive answer) .",
    "note": "In the first test case, a one- character string is semi- Fibonacci, being itself a Fibonacci string. In the second test case, a string of two different characters is Fibonacci. In the third test case, the string \" abb\" ( let the first of the alphabet letter be a, the second letter b) is not a semi- Fibonacci string, since no permutation of its letters ( \" abb\" , \" bab\" , and \" bba\" ) is a Fibonacci string. In the fourth test case, two permutations of the letters of the string \" abaccac\" ( the first letter is a, the second letter is b, the third letter is c) are Fibonacci strings \u2014 \" abaaccc\" and \" cbccaaa\" .",
    "topics": [
      "greedy",
      "implementation",
      "math",
      "number theory"
    ],
    "id": "1718B"
  },
  {
    "title": "Madoka and The Best University",
    "url": "https://codeforces.com/problemset/problem/1717/E",
    "history": "Madoka wants to enter to \" Novosibirsk State University\" , but in the entrance exam she came across a very difficult task: Given an integer n , it is required to calculate \u2211lcm( c, ( a, b) ) , for all triples of positive integers ( a, b, c) , where a + b + c = n . In this problem ( x, y) denotes the greatest common divisor of x and y , and lcm( x, y) denotes the least common multiple of x and y . Solve this problem for Madoka and help her to enter to the best university!",
    "input": "The first and the only line contains a single integer n ( 3 \u2264 n \u2264 10^ 5 ) .",
    "output": "Print exactly one interger \u2014 \u2211lcm( c, ( a, b) ) . Since the answer can be very large, then output it modulo 10^ 9 + 7 .",
    "note": "In the first example, there is only one suitable triple ( 1, 1, 1) . So the answer is lcm( 1, ( 1, 1) ) = lcm( 1, 1) = 1 . In the second example, lcm( 1, ( 3, 1) ) + lcm( 1, ( 2, 2) ) + lcm( 1, ( 1, 3) ) + lcm( 2, ( 2, 1) ) + lcm( 2, ( 1, 2) ) + lcm( 3, ( 1, 1) ) = lcm( 1, 1) + lcm( 1, 2) + lcm( 1, 1) + lcm( 2, 1) + lcm( 2, 1) + lcm( 3, 1) = 1 + 2 + 1 + 2 + 2 + 3 = 11",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "1717E"
  },
  {
    "title": "Madoka and The Corruption Scheme",
    "url": "https://codeforces.com/problemset/problem/1717/D",
    "history": "Madoka decided to entrust the organization of a major computer game tournament \" OSU\" ! In this tournament, matches are held according to the \" Olympic system\" . In other words, there are 2^ n participants in the tournament, numbered with integers from 1 to 2^ n . There are n rounds in total in the tournament. In the i - th round there are 2^ n - i matches between two players ( one of whom is right, the other is left) , after which the winners go further along the tournament grid, and the losing participants are eliminated from the tournament. Herewith, the relative order in the next round does not change. And the winner of the tournament \u2014 is the last remaining participant. But the smaller the participant' s number, the more he will pay Madoka if he wins, so Madoka wants the participant with the lowest number to win. To do this, she can arrange the participants in the first round as she likes, and also determine for each match who will win \u2014 the participant on the left or right. But Madoka knows that tournament sponsors can change the winner in matches no more than k times. ( That is, if the participant on the left won before the change, then the participant on the right will win after the change, and if the participant on the right won, then the participant on the left will win after the change) . So, the first image shows the tournament grid that Madoka made, where the red lines denote who should win the match. And the second one shows the tournament grid, after one change in the outcome of the match by sponsors ( a match between 1 and 3 players) . Print the minimum possible number of the winner in the tournament, which Madoka can get regardless of changes in sponsors. But since the answer can be very large, output it modulo 10^ 9 + 7 . Note that we need to minimize the answer, and only then take it modulo.",
    "input": "The first and the only line contains two integers n and k ( 1 \u2264 n \u2264 10^ 5, 1 \u2264 k \u2264min( 2^ n - 1, 10^ 9) ) \u2014 the number of rounds in the tournament and the number of outcomes that sponsors can change.",
    "output": "Print exactly one integer \u2014 the minimum number of the winner modulo 10^ 9 + 7",
    "note": "In the first example, there is only one match between players 1 and 2 , so the sponsors can always make player 2 wins. The tournament grid from the second example is shown in the picture in the statement.",
    "topics": [
      "combinatorics",
      "constructive algorithms",
      "greedy",
      "math"
    ],
    "id": "1717D"
  },
  {
    "title": "Madoka and Strange Thoughts",
    "url": "https://codeforces.com/problemset/problem/1717/A",
    "history": "Madoka is a very strange girl, and therefore she suddenly wondered how many pairs of integers ( a, b) exist, where 1 \u2264 a, b \u2264 n , for which lcm( a, b) / gcd( a, b) \u2264 3 . In this problem, gcd( a, b) denotes the greatest common divisor of the numbers a and b , and lcm( a, b) denotes the smallest common multiple of the numbers a and b .",
    "input": "The input consists of multiple test cases. The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. Description of the test cases follows. The first and the only line of each test case contains the integer n ( 1 \u2264 n \u2264 10^ 8 ) .",
    "output": "For each test case output a single integer \u2014 the number of pairs of integers satisfying the condition.",
    "note": "For n = 1 there is exactly one pair of numbers \u2014 ( 1, 1) and it fits. For n = 2 , there are only 4 pairs \u2014 ( 1, 1) , ( 1, 2) , ( 2, 1) , ( 2, 2) and they all fit. For n = 3 , all 9 pair are suitable, except ( 2, 3) and ( 3, 2) , since their lcm is 6 , and gcd is 1 , which doesn' t fit the condition.",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "1717A"
  },
  {
    "title": "Bags with Balls",
    "url": "https://codeforces.com/problemset/problem/1716/F",
    "history": "There are n bags, each bag contains m balls with numbers from 1 to m . For every i \u2208 [ 1, m] , there is exactly one ball with number i in each bag. You have to take exactly one ball from each bag ( all bags are different, so, for example, taking the ball 1 from the first bag and the ball 2 from the second bag is not the same as taking the ball 2 from the first bag and the ball 1 from the second bag) . After that, you calculate the number of balls with odd numbers among the ones you have taken. Let the number of these balls be F . Your task is to calculate the sum of F^ k over all possible ways to take n balls, one from each bag.",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 5000 ) \u2014 the number of test cases. Each test case consists of one line containing three integers n , m and k ( 1 \u2264 n, m \u2264 998244352 ; 1 \u2264 k \u2264 2000 ) .",
    "output": "For each test case, print one integer \u2014 the sum of F^ k over all possible ways to take n balls, one from each bag. Since it can be huge, print it modulo 998244353 .",
    "note": "",
    "topics": [
      "combinatorics",
      "dp",
      "math",
      "number theory"
    ],
    "id": "1716F"
  },
  {
    "title": "Chip Move",
    "url": "https://codeforces.com/problemset/problem/1716/D",
    "history": "There is a chip on the coordinate line. Initially, the chip is located at the point 0 . You can perform any number of moves; each move increases the coordinate of the chip by some positive integer ( which is called the length of the move) . The length of the first move you make should be divisible by k , the length of the second move \u2014 by k+ 1 , the third \u2014 by k+ 2 , and so on. For example, if k= 2 , then the sequence of moves may look like this: 0 \u2192 4 \u2192 7 \u2192 19 \u2192 44 , because 4 - 0 = 4 is divisible by 2 = k , 7 - 4 = 3 is divisible by 3 = k + 1 , 19 - 7 = 12 is divisible by 4 = k + 2 , 44 - 19 = 25 is divisible by 5 = k + 3 . You are given two positive integers n and k . Your task is to count the number of ways to reach the point x , starting from 0 , for every x \u2208 [ 1, n] . The number of ways can be very large, so print it modulo 998244353 . Two ways are considered different if they differ as sets of visited positions.",
    "input": "The first ( and only) line of the input contains two integers n and k ( 1 \u2264 k \u2264 n \u2264 2 \u00b7 10^ 5 ) .",
    "output": "Print n integers \u2014 the number of ways to reach the point x , starting from 0 , for every x \u2208 [ 1, n] , taken modulo 998244353 .",
    "note": "Let' s look at the first example: Ways to reach the point 1 : [ 0, 1] ; Ways to reach the point 2 : [ 0, 2] ; Ways to reach the point 3 : [ 0, 1, 3] , [ 0, 3] ; Ways to reach the point 4 : [ 0, 2, 4] , [ 0, 4] ; Ways to reach the point 5 : [ 0, 1, 5] , [ 0, 3, 5] , [ 0, 5] ; Ways to reach the point 6 : [ 0, 1, 3, 6] , [ 0, 2, 6] , [ 0, 4, 6] , [ 0, 6] ; Ways to reach the point 7 : [ 0, 2, 4, 7] , [ 0, 1, 7] , [ 0, 3, 7] , [ 0, 5, 7] , [ 0, 7] ; Ways to reach the point 8 : [ 0, 3, 5, 8] , [ 0, 1, 5, 8] , [ 0, 2, 8] , [ 0, 4, 8] , [ 0, 6, 8] , [ 0, 8] .",
    "topics": [
      "brute force",
      "dp",
      "math"
    ],
    "id": "1716D"
  },
  {
    "title": "Permutation Chain",
    "url": "https://codeforces.com/problemset/problem/1716/B",
    "history": "A permutation of length n is a sequence of integers from 1 to n such that each integer appears in it exactly once. Let the fixedness of a permutation p be the number of fixed points in it \u2014 the number of positions j such that p_ j = j , where p_ j is the j - th element of the permutation p . You are asked to build a sequence of permutations a_ 1, a_ 2, . . . , starting from the identity permutation ( permutation a_ 1 = [ 1, 2, . . . , n] ) . Let' s call it a permutation chain. Thus, a_ i is the i - th permutation of length n . For every i from 2 onwards, the permutation a_ i should be obtained from the permutation a_ i- 1 by swapping any two elements in it ( not necessarily neighboring) . The fixedness of the permutation a_ i should be strictly lower than the fixedness of the permutation a_ i- 1 . Consider some chains for n = 3 : a_ 1 = [ 1, 2, 3] , a_ 2 = [ 1, 3, 2] \u2014 that is a valid chain of length 2 . From a_ 1 to a_ 2 , the elements on positions 2 and 3 get swapped, the fixedness decrease from 3 to 1 . a_ 1 = [ 2, 1, 3] , a_ 2 = [ 3, 1, 2] \u2014 that is not a valid chain. The first permutation should always be [ 1, 2, 3] for n = 3 . a_ 1 = [ 1, 2, 3] , a_ 2 = [ 1, 3, 2] , a_ 3 = [ 1, 2, 3] \u2014 that is not a valid chain. From a_ 2 to a_ 3 , the elements on positions 2 and 3 get swapped but the fixedness increase from 1 to 3 . a_ 1 = [ 1, 2, 3] , a_ 2 = [ 3, 2, 1] , a_ 3 = [ 3, 1, 2] \u2014 that is a valid chain of length 3 . From a_ 1 to a_ 2 , the elements on positions 1 and 3 get swapped, the fixedness decrease from 3 to 1 . From a_ 2 to a_ 3 , the elements on positions 2 and 3 get swapped, the fixedness decrease from 1 to 0 . Find the longest permutation chain. If there are multiple longest answers, print any of them.",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 99 ) \u2014 the number of testcases. The only line of each testcase contains a single integer n ( 2 \u2264 n \u2264 100 ) \u2014 the required length of permutations in the chain.",
    "output": "For each testcase, first, print the length of a permutation chain k . Then print k permutations a_ 1, a_ 2, . . . , a_ k . a_ 1 should be an identity permutation of length n ( [ 1, 2, . . . , n] ) . For each i from 2 to k , a_ i should be obtained by swapping two elements in a_ i- 1 . It should also have a strictly lower fixedness than a_ i- 1 .",
    "note": "",
    "topics": [
      "constructive algorithms",
      "math"
    ],
    "id": "1716B"
  },
  {
    "title": "2-3 Moves",
    "url": "https://codeforces.com/problemset/problem/1716/A",
    "history": "You are standing at the point 0 on a coordinate line. Your goal is to reach the point n . In one minute, you can move by 2 or by 3 to the left or to the right ( i. e. , if your current coordinate is x , it can become x- 3 , x- 2 , x+ 2 or x+ 3 ) . Note that the new coordinate can become negative. Your task is to find the minimum number of minutes required to get from the point 0 to the point n . You have to answer t independent test cases.",
    "input": "The first line of the input contains one integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. Then t lines describing the test cases follow. The i - th of these lines contains one integer n ( 1 \u2264 n \u2264 10^ 9 ) \u2014 the goal of the i - th test case.",
    "output": "For each test case, print one integer \u2014 the minimum number of minutes required to get from the point 0 to the point n for the corresponding test case.",
    "note": "",
    "topics": [
      "greedy",
      "math"
    ],
    "id": "1716A"
  },
  {
    "title": "Crop Squares",
    "url": "https://codeforces.com/problemset/problem/1715/F",
    "history": "This is an interactive problem. Farmer Stanley grows corn on a rectangular field of size n \u00d7 m meters with corners in points ( 0, 0) , ( 0, m) , ( n, 0) , ( n, m) . This year the harvest was plentiful and corn covered the whole field. The night before harvest aliens arrived and poisoned the corn in a single 1 \u00d7 1 square with sides parallel to field borders. The corn inside the square must not be eaten, but you cannot distinguish it from ordinary corn by sight. Stanley can only collect a sample of corn from an arbitrary polygon and bring it to the laboratory, where it will be analyzed and Stanley will be told the amount of corn in the sample that was poisoned. Since the harvest will soon deteriorate, such a study can be carried out no more than 5 times. More formally, it is allowed to make no more than 5 queries, each of them calculates the area of intersection of a chosen polygon with a square of poisoned corn. It is necessary to find out the coordinates of the lower- left corner of the drawn square ( the vertex of the square with the smallest x and y coordinates) . InteractionIn order to query the area of intersection of a polygon with k ( 3 \u2264 k \u2264 1000 ) vertices at points with coordinates ( x_ 1, y_ 1) , . . . , ( x_ k, y_ k) with a square of poisoned corn print k+ 1 lines. In the first of these lines print \" ? k\" . In the i - th of the next k lines print two real numbers x_ i and y_ i ( | x_ i| , | y_ i| \u2264 10^ 4 ) with at most 15 digits after decimal place. The polygon must have strictly positive area and contain no self- intersections. In response to this query you will receive a real number s ( 0 \u2264 s \u2264 1 ) with 15 digits after decimal place \u2014 the area of intersection of the square with the given polygon. If the polygon is invalid, there is no guarantee on the valid response. When you have identified the drawn square, print on a separate line \" ! x y\" , where x and y are real numbers with at most 15 digits after decimal place representing the coordinates of its lower- left corner ( 0 \u2264 x \u2264 n - 1 , 0 \u2264 y \u2264 m - 1 ) , and then you have to terminate your program. Your answer will be considered correct if its absolute or relative error on both coordinates does not exceed 10^ - 6 . Formally let your answer be a , jury answer be b . Your answer will be considered correct if | a- b| / max( 1, | b| ) \u2264 10^ - 6 . After printing a query do not forget to output end of line and flush the output. Otherwise, you will get Idleness limit exceeded. To do this, use: fflush( stdout) or cout. flush( ) in C+ + ; System. out. flush( ) in Java; flush( output) in Pascal; stdout. flush( ) in Python; see documentation for other languages. HacksTo make a hack, use the following test format. The first line of the input should contain two integers n and m ( 1 \u2264 n, m \u2264 100 ) \u2014 field sizes. The second line should contain two real numbers x ( 0 \u2264 x \u2264 n - 1 ) and y ( 0 \u2264 y \u2264 m - 1 ) \u2014 coordinates of the lower- left corner of the square of poisoned corn.",
    "input": "First line contains two integers n and m ( 1 \u2264 n, m \u2264 100 ) \u2014 field sizes.",
    "output": "",
    "note": "In the first test from the statement, the aliens poisoned a square of corn with vertices at points with coordinates ( 1. 5, 0. 5) , ( 1. 5, 1. 5) , ( 2. 5, 1. 5) , ( 2. 5, 0. 5) . In the picture, it is red, the polygon selected in the query is blue, and their intersection is green. Picture for the first query: Picture for the second query:",
    "topics": [
      "constructive algorithms",
      "geometry",
      "interactive",
      "math"
    ],
    "id": "1715F"
  },
  {
    "title": "Monoblock",
    "url": "https://codeforces.com/problemset/problem/1715/C",
    "history": "Stanley has decided to buy a new desktop PC made by the company \" Monoblock\" , and to solve captcha on their website, he needs to solve the following task. The awesomeness of an array is the minimum number of blocks of consecutive identical numbers in which the array could be split. For example, the awesomeness of an array [ 1, 1, 1] is 1 ; [ 5, 7] is 2 , as it could be split into blocks [ 5] and [ 7] ; [ 1, 7, 7, 7, 7, 7, 7, 7, 9, 9, 9, 9, 9, 9, 9, 9, 9] is 3, as it could be split into blocks [ 1] , [ 7, 7, 7, 7, 7, 7, 7] , and [ 9, 9, 9, 9, 9, 9, 9, 9, 9] . You are given an array a of length n . There are m queries of two integers i , x . A query i , x means that from now on the i - th element of the array a is equal to x . After each query print the sum of awesomeness values among all subsegments of array a . In other words, after each query you need to calculate \u2211_ l = 1^ n \u2211_ r = l^ n g( l, r) , where g( l, r) is the awesomeness of the array b = [ a_ l, a_ l + 1, . . . , a_ r] .",
    "input": "In the first line you are given with two integers n and m ( 1 \u2264 n, m \u2264 10^ 5 ) . The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 9 ) \u2014 the array a . In the next m lines you are given the descriptions of queries. Each line contains two integers i and x ( 1 \u2264 i \u2264 n , 1 \u2264 x \u2264 10^ 9 ) .",
    "output": "Print the answer to each query on a new line.",
    "note": "After the first query a is equal to [ 1, 2, 2, 4, 5] , and the answer is 29 because we can split each of the subsegments the following way: [ 1; 1] : [ 1] , 1 block; [ 1; 2] : [ 1] + [ 2] , 2 blocks; [ 1; 3] : [ 1] + [ 2, 2] , 2 blocks; [ 1; 4] : [ 1] + [ 2, 2] + [ 4] , 3 blocks; [ 1; 5] : [ 1] + [ 2, 2] + [ 4] + [ 5] , 4 blocks; [ 2; 2] : [ 2] , 1 block; [ 2; 3] : [ 2, 2] , 1 block; [ 2; 4] : [ 2, 2] + [ 4] , 2 blocks; [ 2; 5] : [ 2, 2] + [ 4] + [ 5] , 3 blocks; [ 3; 3] : [ 2] , 1 block; [ 3; 4] : [ 2] + [ 4] , 2 blocks; [ 3; 5] : [ 2] + [ 4] + [ 5] , 3 blocks; [ 4; 4] : [ 4] , 1 block; [ 4; 5] : [ 4] + [ 5] , 2 blocks; [ 5; 5] : [ 5] , 1 block; which is 1 + 2 + 2 + 3 + 4 + 1 + 1 + 2 + 3 + 1 + 2 + 3 + 1 + 2 + 1 = 29 in total.",
    "topics": [
      "combinatorics",
      "data structures",
      "implementation",
      "math"
    ],
    "id": "1715C"
  },
  {
    "title": "Beautiful Array",
    "url": "https://codeforces.com/problemset/problem/1715/B",
    "history": "Stanley defines the beauty of an array a of length n , which contains non- negative integers, as follows: \u2211_ i = 1^ n\u230aa_ i/ k\u230b, which means that we divide each element by k , round it down, and sum up the resulting values. Stanley told Sam the integer k and asked him to find an array a of n non- negative integers, such that the beauty is equal to b and the sum of elements is equal to s . Help Sam \u2014 find any of the arrays satisfying the conditions above.",
    "input": "Each test contains multiple test cases. The first line contains the number of test cases t ( 1 \u2264 t \u2264 1000 ) . Description of the test cases follows. The first line of each test case contains integers n , k , b , s ( 1 \u2264 n \u2264 10^ 5 , 1 \u2264 k \u2264 10^ 9 , 0 \u2264 b \u2264 10^ 9 , 0 \u2264 s \u2264 10^ 18 ) . It is guaranteed that the sum of n over all test cases does not exceed 10^ 5 .",
    "output": "For each test case print - 1 if such array a does not exist. Otherwise print n non- negative integers a_ 1, a_ 2, . . . , a_ n ( 0 \u2264 a_ i\u2264 10^ 18 ) \u2014 the answer.",
    "note": "In the first, the second, the fifth and the sixth test cases of the example it is possible to show that such array does not exist. In the third testcase of the example a = [ 0, 0, 19] . The sum of elements in it is equal to 19, the beauty of it is equal to ( \u230a0/ 6\u230b + \u230a0/ 6\u230b + \u230a19/ 6\u230b ) = ( 0 + 0 + 3) = 3 . In the fourth testcase of the example a = [ 0, 3, 3, 3, 29] . The sum of elements in it is equal to 38 , the beauty of it is equal to ( 0 + 0 + 0 + 0 + 7) = 7 .",
    "topics": [
      "constructive algorithms",
      "greedy",
      "math"
    ],
    "id": "1715B"
  },
  {
    "title": "Crossmarket",
    "url": "https://codeforces.com/problemset/problem/1715/A",
    "history": "Stanley and Megan decided to shop in the \" Crossmarket\" grocery store, which can be represented as a matrix with n rows and m columns. Stanley and Megan can move to an adjacent cell using 1 unit of power. Two cells are considered adjacent if they share an edge. To speed up the shopping process, Megan brought her portals with her, and she leaves one in each cell she visits ( if there is no portal yet) . If a person ( Stanley or Megan) is in a cell with a portal, that person can use 1 unit of power to teleport to any other cell with a portal, including Megan' s starting cell. They decided to split up: Stanley will go from the upper- left cell ( cell with coordinates ( 1, 1) ) to the lower- right cell ( cell with coordinates ( n, m) ) , whilst Megan needs to get from the lower- left cell ( cell with coordinates ( n, 1) ) to the upper- right cell ( cell with coordinates ( 1, m) ) . What is the minimum total energy needed for them both to do that? Note that they can choose the time they move. Time does not affect energy.",
    "input": "Each test contains multiple test cases. The first line contains the number of test cases t ( 1 \u2264 t \u2264 1000 ) . Description of the test cases follows. The only line in the test case contains two integers n and m ( 1 \u2264 n, m \u2264 10^ 5 ) .",
    "output": "For each test case print a single integer on a new line \u2013 the answer.",
    "note": "In the first test case they can stick to the following plan: Megan ( red circle) moves to the cell ( 7, 3) . Then she goes to the cell ( 1, 3) , and Stanley ( blue circle) does the same. Stanley uses the portal in that cell ( cells with portals are grey) to get to the cell ( 7, 3) . Then he moves to his destination \u2014 cell ( 7, 5) . Megan also finishes her route and goes to the cell ( 1, 5) . The total energy spent is ( 2 + 6) + ( 2 + 1 + 2) + ( 2) = 15 , which is our final answer.",
    "topics": [
      "constructive algorithms",
      "greedy",
      "math"
    ],
    "id": "1715A"
  },
  {
    "title": "Add Modulo 10",
    "url": "https://codeforces.com/problemset/problem/1714/E",
    "history": "You are given an array of n integers a_ 1, a_ 2, . . . , a_ n You can apply the following operation an arbitrary number of times: select an index i ( 1 \u2264 i \u2264 n ) and replace the value of the element a_ i with the value a_ i + ( a_ i 10) , where a_ i 10 is the remainder of the integer dividing a_ i by 10 . For a single index ( value i ) , this operation can be applied multiple times. If the operation is applied repeatedly to the same index, then the current value of a_ i is taken into account each time. For example, if a_ i= 47 then after the first operation we get a_ i= 47+ 7= 54 , and after the second operation we get a_ i= 54+ 4= 58 . Check if it is possible to make all array elements equal by applying multiple ( possibly zero) operations. For example, you have an array [ 6, 11] . Let' s apply this operation to the first element of the array. Let' s replace a_ 1 = 6 with a_ 1 + ( a_ 1 10) = 6 + ( 6 10) = 6 + 6 = 12 . We get the array [ 12, 11] . Then apply this operation to the second element of the array. Let' s replace a_ 2 = 11 with a_ 2 + ( a_ 2 10) = 11 + ( 11 10) = 11 + 1 = 12 . We get the array [ 12, 12] . Thus, by applying 2 operations, you can make all elements of an array equal.",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. What follows is a description of each test case. The first line of each test case contains one integer n ( 1 \u2264 n \u2264 2 \u00b7 10^ 5 ) \u2014 the size of the array. The second line of each test case contains n integers a_ i ( 0 \u2264 a_ i \u2264 10^ 9 ) \u2014 array elements. It is guaranteed that the sum of n over all test cases does not exceed 2 \u00b7 10^ 5 .",
    "output": "For each test case print: YES if it is possible to make all array elements equal; NO otherwise. You can print YES and NO in any case ( for example, the strings yEs, yes, Yes and YES will be recognized as a positive answer) .",
    "note": "The first test case is clarified above. In the second test case, it is impossible to make all array elements equal. In the third test case, you need to apply this operation once to all elements equal to 5 . In the fourth test case, you need to apply this operation to all elements until they become equal to 8 . In the fifth test case, it is impossible to make all array elements equal. In the sixth test case, you need to apply this operation to all elements until they become equal to 102 .",
    "topics": [
      "brute force",
      "math",
      "number theory"
    ],
    "id": "1714E"
  },
  {
    "title": "Everyone Loves to Sleep",
    "url": "https://codeforces.com/problemset/problem/1714/A",
    "history": "Vlad, like everyone else, loves to sleep very much. Every day Vlad has to do n things, each at a certain time. For each of these things, he has an alarm clock set, the i - th of them is triggered on h_ i hours m_ i minutes every day ( 0 \u2264 h_ i < 24, 0 \u2264 m_ i < 60 ) . Vlad uses the 24 - hour time format, so after h= 12, m= 59 comes h= 13, m= 0 and after h= 23, m= 59 comes h= 0, m= 0 . This time Vlad went to bed at H hours M minutes ( 0 \u2264 H < 24, 0 \u2264 M < 60 ) and asks you to answer: how much he will be able to sleep until the next alarm clock. If any alarm clock rings at the time when he went to bed, then he will sleep for a period of time of length 0 .",
    "input": "The first line of input data contains an integer t ( 1 \u2264 t \u2264 100 ) \u2014 the number of test cases in the test. The first line of the case contains three integers n , H and M ( 1 \u2264 n \u2264 10, 0 \u2264 H < 24, 0 \u2264 M < 60 ) \u2014 the number of alarms and the time Vlad went to bed. The following n lines contain two numbers each h_ i and m_ i ( 0 \u2264 h_ i < 24, 0 \u2264 m_ i < 60 ) \u2014 the time of the i alarm. It is acceptable that two or more alarms will trigger at the same time. Numbers describing time do not contain leading zeros.",
    "output": "Output t lines, each containing the answer to the corresponding test case. As an answer, output two numbers \u2014 the number of hours and minutes that Vlad will sleep, respectively. If any alarm clock rings at the time when he went to bed, the answer will be 0 0.",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": "1714A"
  },
  {
    "title": "Lost Array",
    "url": "https://codeforces.com/problemset/problem/1713/F",
    "history": "My orzlers, we can optimize this problem from O( S^ 3) to O( T^ 5/ 9) ! \u2014 Spyofgame, founder of Orzlim religionA long time ago, Spyofgame invented the famous array a ( 1 - indexed) of length n that contains information about the world and life. After that, he decided to convert it into the matrix b ( 0 - indexed) of size ( n + 1) \u00d7 ( n + 1) which contains information about the world, life and beyond. Spyofgame converted a into b with the following rules. b_ i, 0 = 0 if 0 \u2264 i \u2264 n ; b_ 0, i = a_ i if 1 \u2264 i \u2264 n ; b_ i, j = b_ i, j- 1\u2295 b_ i- 1, j if 1 \u2264 i, j \u2264 n . Here \u2295 denotes the bitwise XOR operation. Today, archaeologists have discovered the famous matrix b . However, many elements of the matrix has been lost. They only know the values of b_ i, n for 1 \u2264 i \u2264 n ( note that these are some elements of the last column, not the last row) . The archaeologists want to know what a possible array of a is. Can you help them reconstruct any array that could be a ?",
    "input": "The first line contains a single integer n ( 1 \u2264 n \u2264 5 \u00b7 10^ 5 ) . The second line contains n integers b_ 1, n, b_ 2, n, . . . , b_ n, n ( 0 \u2264 b_ i, n < 2^ 30 ) .",
    "output": "If some array a is consistent with the information, print a line containing n integers a_ 1, a_ 2, . . . , a_ n . If there are multiple solutions, output any. If such an array does not exist, output - 1 instead.",
    "note": "If we let a = [ 1, 2, 3] , then b will be: 0 1 2 3 0 1 3 0 0 1 2 2 0 1 3 1 The values of b_ 1, n, b_ 2, n, . . . , b_ n, n generated are [ 0, 2, 1] which is consistent with what the archaeologists have discovered.",
    "topics": [
      "bitmasks",
      "combinatorics",
      "constructive algorithms",
      "dp",
      "math"
    ],
    "id": "1713F"
  },
  {
    "title": "Build Permutation",
    "url": "https://codeforces.com/problemset/problem/1713/C",
    "history": "A 0 - indexed array a of size n is called good if for all valid indices i ( 0 \u2264 i \u2264 n- 1 ) , a_ i + i is a perfect square ^ \u2020 . Given an integer n . Find a permutation ^ p of [ 0, 1, 2, . . . , n- 1] that is good or determine that no such permutation exists. ^ \u2020 An integer x is said to be a perfect square if there exists an integer y such that x = y^ 2 . ^ An array b is a permutation of an array a if b consists of the elements of a in arbitrary order. For example, [ 4, 2, 3, 4] is a permutation of [ 3, 2, 4, 4] while [ 1, 2, 2] is not a permutation of [ 1, 2, 3] .",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. The only line of each test case contains a single integer n ( 1 \u2264 n \u2264 10^ 5 ) \u2014 the length of the permutation p . It is guaranteed that the sum of n over all test cases does not exceed 10^ 5 .",
    "output": "For each test case, output n distinct integers p_ 0, p_ 1, . . . , p_ n- 1 ( 0 \u2264 p_ i \u2264 n- 1 ) \u2014 the permutation p \u2014 if the answer exists, and - 1 otherwise.",
    "note": "In the first test case, we have n= 3 . The array p = [ 1, 0, 2] is good since 1 + 0 = 1^ 2 , 0 + 1 = 1^ 2 , and 2 + 2 = 2^ 2 In the second test case, we have n= 4 . The array p = [ 0, 3, 2, 1] is good since 0 + 0 = 0^ 2 , 3 + 1 = 2^ 2 , 2+ 2 = 2^ 2 , and 1+ 3 = 2^ 2 .",
    "topics": [
      "constructive algorithms",
      "dp",
      "math"
    ],
    "id": "1713C"
  },
  {
    "title": "LCM Sum (hard version)",
    "url": "https://codeforces.com/problemset/problem/1712/E2",
    "history": "We are sum for we are manySome NumberThis version of the problem differs from the previous one only in the constraint on t . You can make hacks only if both versions of the problem are solved. You are given two positive integers l and r . Count the number of distinct triplets of integers ( i, j, k) such that l \u2264 i < j < k \u2264 r and lcm( i, j, k) \u2265 i + j + k . Here lcm( i, j, k) denotes the least common multiple ( LCM) of integers i , j , and k .",
    "input": "Each test contains multiple test cases. The first line contains the number of test cases t ( 1 \u2264 t \u2264 10^ 5 ) . Description of the test cases follows. The only line for each test case contains two integers l and r ( 1 \u2264 l \u2264 r \u2264 2 \u00b7 10^ 5 , l + 2 \u2264 r ) .",
    "output": "For each test case print one integer \u2014 the number of suitable triplets.",
    "note": "In the first test case, there are 3 suitable triplets: ( 1, 2, 3) , ( 1, 3, 4) , ( 2, 3, 4) . In the second test case, there is 1 suitable triplet: ( 3, 4, 5) .",
    "topics": [
      "brute force",
      "data structures",
      "math",
      "number theory",
      "two pointers"
    ],
    "id": "1712E2"
  },
  {
    "title": "LCM Sum (easy version)",
    "url": "https://codeforces.com/problemset/problem/1712/E1",
    "history": "We are sum for we are manySome NumberThis version of the problem differs from the next one only in the constraint on t . You can make hacks only if both versions of the problem are solved. You are given two positive integers l and r . Count the number of distinct triplets of integers ( i, j, k) such that l \u2264 i < j < k \u2264 r and lcm( i, j, k) \u2265 i + j + k . Here lcm( i, j, k) denotes the least common multiple ( LCM) of integers i , j , and k .",
    "input": "Each test contains multiple test cases. The first line contains the number of test cases t ( 1 \u2264 t \u2264 5 ) . Description of the test cases follows. The only line for each test case contains two integers l and r ( 1 \u2264 l \u2264 r \u2264 2 \u00b7 10^ 5 , l + 2 \u2264 r ) .",
    "output": "For each test case print one integer \u2014 the number of suitable triplets.",
    "note": "In the first test case, there are 3 suitable triplets: ( 1, 2, 3) , ( 1, 3, 4) , ( 2, 3, 4) . In the second test case, there is 1 suitable triplet: ( 3, 4, 5) .",
    "topics": [
      "binary search",
      "brute force",
      "combinatorics",
      "math",
      "number theory",
      "two pointers"
    ],
    "id": "1712E1"
  },
  {
    "title": "XOR Triangle",
    "url": "https://codeforces.com/problemset/problem/1710/C",
    "history": "You are given a positive integer n . Since n may be very large, you are given its binary representation. You should compute the number of triples ( a, b, c) with 0 \u2264 a, b, c \u2264 n such that a \u2295 b , b \u2295 c , and a \u2295 c are the sides of a non- degenerate triangle. Here, \u2295 denotes the bitwise XOR operation. You should output the answer modulo 998 244 353 . Three positive values x , y , and z are the sides of a non- degenerate triangle if and only if x+ y> z , x+ z> y , and y+ z> x .",
    "input": "The first and only line contains the binary representation of an integer n ( 0 < n < 2^ 200 000 ) without leading zeros. For example, the string 10 is the binary representation of the number 2 , while the string 1010 represents the number 10 .",
    "output": "Print one integer \u2014 the number of triples ( a, b, c) satisfying the conditions described in the statement modulo 998 244 353 .",
    "note": "In the first test case, 101_ 2= 5 . The triple ( a, b, c) = ( 0, 3, 5) is valid because ( a\u2295 b, b\u2295 c, c\u2295 a) = ( 3, 6, 5) are the sides of a non- degenerate triangle. The triple ( a, b, c) = ( 1, 2, 4) is valid because ( a\u2295 b, b\u2295 c, c\u2295 a) = ( 3, 6, 5) are the sides of a non- degenerate triangle. The 6 permutations of each of these two triples are all the valid triples, thus the answer is 12 . In the third test case, 11 011 111 101 010 010_ 2= 114 514 . The full answer ( before taking the modulo) is 1 466 408 118 808 164 .",
    "topics": [
      "bitmasks",
      "brute force",
      "constructive algorithms",
      "dp",
      "greedy",
      "math"
    ],
    "id": "1710C"
  },
  {
    "title": "Rain",
    "url": "https://codeforces.com/problemset/problem/1710/B",
    "history": "You are the owner of a harvesting field which can be modeled as an infinite line, whose positions are identified by integers. It will rain for the next n days. On the i - th day, the rain will be centered at position x_ i and it will have intensity p_ i . Due to these rains, some rainfall will accumulate; let a_ j be the amount of rainfall accumulated at integer position j . Initially a_ j is 0 , and it will increase by max( 0, p_ i- | x_ i- j| ) after the i - th day' s rain. A flood will hit your field if, at any moment, there is a position j with accumulated rainfall a_ j> m . You can use a magical spell to erase exactly one day' s rain, i. e. , setting p_ i= 0 . For each i from 1 to n , check whether in case of erasing the i - th day' s rain there is no flood.",
    "input": "Each test contains multiple test cases. The first line contains the number of test cases t ( 1 \u2264 t \u2264 10^ 4 ) . The description of the test cases follows. The first line of each test case contains two integers n and m ( 1 \u2264 n \u2264 2 \u00b7 10^ 5 , 1 \u2264 m \u2264 10^ 9 ) \u2014 the number of rainy days and the maximal accumulated rainfall with no flood occurring. Then n lines follow. The i - th of these lines contains two integers x_ i and p_ i ( 1 \u2264 x_ i, p_ i \u2264 10^ 9 ) \u2014 the position and intensity of the i - th day' s rain. The sum of n over all test cases does not exceed 2 \u00b7 10^ 5 .",
    "output": "For each test case, output a binary string s length of n . The i - th character of s is 1 if after erasing the i - th day' s rain there is no flood, while it is 0, if after erasing the i - th day' s rain the flood still happens.",
    "note": "In the first test case, if we do not use the spell, the accumulated rainfall distribution will be like this: If we erase the third day' s rain, the flood is avoided and the accumulated rainfall distribution looks like this: In the second test case, since initially the flood will not happen, we can erase any day' s rain. In the third test case, there is no way to avoid the flood.",
    "topics": [
      "binary search",
      "brute force",
      "data structures",
      "geometry",
      "greedy",
      "implementation",
      "math"
    ],
    "id": "1710B"
  },
  {
    "title": "Color the Picture",
    "url": "https://codeforces.com/problemset/problem/1710/A",
    "history": "A picture can be represented as an n\u00d7 m grid ( n rows and m columns) so that each of the n \u00b7 m cells is colored with one color. You have k pigments of different colors. You have a limited amount of each pigment, more precisely you can color at most a_ i cells with the i - th pigment. A picture is considered beautiful if each cell has at least 3 toroidal neighbors with the same color as itself. Two cells are considered toroidal neighbors if they toroidally share an edge. In other words, for some integers 1 \u2264 x_ 1, x_ 2 \u2264 n and 1 \u2264 y_ 1, y_ 2 \u2264 m , the cell in the x_ 1 - th row and y_ 1 - th column is a toroidal neighbor of the cell in the x_ 2 - th row and y_ 2 - th column if one of following two conditions holds: x_ 1- x_ 2 \u2261\u00b11 n and y_ 1= y_ 2 , or y_ 1- y_ 2 \u2261\u00b11 m and x_ 1= x_ 2 . Notice that each cell has exactly 4 toroidal neighbors. For example, if n= 3 and m= 4 , the toroidal neighbors of the cell ( 1, 2) ( the cell on the first row and second column) are: ( 3, 2) , ( 2, 2) , ( 1, 3) , ( 1, 1) . They are shown in gray on the image below: The gray cells show toroidal neighbors of ( 1, 2) . Is it possible to color all cells with the pigments provided and create a beautiful picture?",
    "input": "Each test contains multiple test cases. The first line contains the number of test cases t ( 1 \u2264 t \u2264 10^ 4 ) . The description of the test cases follows. The first line of each test case contains three integers n , m , and k ( 3 \u2264 n, m \u2264 10^ 9 , 1 \u2264 k \u2264 10^ 5 ) \u2014 the number of rows and columns of the picture and the number of pigments. The next line contains k integers a_ 1, a_ 2, . . . , a_ k ( 1 \u2264 a_ i \u2264 10^ 9 ) \u2014 a_ i is the maximum number of cells that can be colored with the i - th pigment. It is guaranteed that the sum of k over all test cases does not exceed 10^ 5 .",
    "output": "For each test case, print \" Yes\" ( without quotes) if it is possible to color a beautiful picture. Otherwise, print \" No\" ( without quotes) .",
    "note": "In the first test case, one possible solution is as follows: In the third test case, we can color all cells with pigment 1 .",
    "topics": [
      "constructive algorithms",
      "greedy",
      "math"
    ],
    "id": "1710A"
  },
  {
    "title": "Multiset of Strings",
    "url": "https://codeforces.com/problemset/problem/1709/F",
    "history": "You are given three integers n , k and f . Consider all binary strings ( i. e. all strings consisting of characters 0 and/ or 1 ) of length from 1 to n . For every such string s , you need to choose an integer c_ s from 0 to k . A multiset of binary strings of length exactly n is considered beautiful if for every binary string s with length from 1 to n , the number of strings in the multiset such that s is their prefix is not exceeding c_ s . For example, let n = 2 , c_ 0 = 3 , c_ 00 = 1 , c_ 01 = 2 , c_ 1 = 1 , c_ 10 = 2 , and c_ 11 = 3 . The multiset of strings { 11, 01, 00, 01} is beautiful, since: for the string 0 , there are 3 strings in the multiset such that 0 is their prefix, and 3 \u2264 c_ 0 ; for the string 00 , there is one string in the multiset such that 00 is its prefix, and 1 \u2264 c_ 00 ; for the string 01 , there are 2 strings in the multiset such that 01 is their prefix, and 2 \u2264 c_ 01 ; for the string 1 , there is one string in the multiset such that 1 is its prefix, and 1 \u2264 c_ 1 ; for the string 10 , there are 0 strings in the multiset such that 10 is their prefix, and 0 \u2264 c_ 10 ; for the string 11 , there is one string in the multiset such that 11 is its prefix, and 1 \u2264 c_ 11 . Now, for the problem itself. You have to calculate the number of ways to choose the integer c_ s for every binary string s of length from 1 to n in such a way that the maximum possible size of a beautiful multiset is exactly f .",
    "input": "The only line of input contains three integers n , k and f ( 1 \u2264 n \u2264 15 ; 1 \u2264 k, f \u2264 2 \u00b7 10^ 5 ) .",
    "output": "Print one integer \u2014 the number of ways to choose the integer c_ s for every binary string s of length from 1 to n in such a way that the maximum possible size of a beautiful multiset is exactly f . Since it can be huge, print it modulo 998244353 .",
    "note": "In the first example, the three ways to choose the integers c_ s are: c_ 0 = 0 , c_ 1 = 2 , then the maximum beautiful multiset is { 1, 1} ; c_ 0 = 1 , c_ 1 = 1 , then the maximum beautiful multiset is { 0, 1} ; c_ 0 = 2 , c_ 1 = 0 , then the maximum beautiful multiset is { 0, 0} .",
    "topics": [
      "bitmasks",
      "brute force",
      "dp",
      "fft",
      "flows",
      "graphs",
      "math",
      "meet-in-the-middle",
      "trees"
    ],
    "id": "1709F"
  },
  {
    "title": "Rorororobot",
    "url": "https://codeforces.com/problemset/problem/1709/D",
    "history": "There is a grid, consisting of n rows and m columns. The rows are numbered from 1 to n from bottom to top. The columns are numbered from 1 to m from left to right. The i - th column has the bottom a_ i cells blocked ( the cells in rows 1, 2, . . . , a_ i ) , the remaining n - a_ i cells are unblocked. A robot is travelling across this grid. You can send it commands \u2014 move up, right, down or left. If a robot attempts to move into a blocked cell or outside the grid, it explodes. However, the robot is broken \u2014 it executes each received command k times. So if you tell it to move up, for example, it will move up k times ( k cells) . You can' t send it commands while the robot executes the current one. You are asked q queries about the robot. Each query has a start cell, a finish cell and a value k . Can you send the robot an arbitrary number of commands ( possibly, zero) so that it reaches the finish cell from the start cell, given that it executes each command k times? The robot must stop in the finish cell. If it visits the finish cell while still executing commands, it doesn' t count.",
    "input": "The first line contains two integers n and m ( 1 \u2264 n \u2264 10^ 9 ; 1 \u2264 m \u2264 2 \u00b7 10^ 5 ) \u2014 the number of rows and columns of the grid. The second line contains m integers a_ 1, a_ 2, . . . , a_ m ( 0 \u2264 a_ i \u2264 n ) \u2014 the number of blocked cells on the bottom of the i - th column. The third line contains a single integer q ( 1 \u2264 q \u2264 2 \u00b7 10^ 5 ) \u2014 the number of queries. Each of the next q lines contain five integers x_ s, y_ s, x_ f, y_ f and k ( a[ y_ s] < x_ s \u2264 n ; 1 \u2264 y_ s \u2264 m ; a[ y_ f] < x_ f \u2264 n ; 1 \u2264 y_ f \u2264 m ; 1 \u2264 k \u2264 10^ 9 ) \u2014 the row and the column of the start cell, the row and the column of the finish cell and the number of times each your command is executed. The start and the finish cell of each query are unblocked.",
    "output": "For each query, print \" YES\" if you can send the robot an arbitrary number of commands ( possibly, zero) so that it reaches the finish cell from the start cell, given that it executes each command k times. Otherwise, print \" NO\" .",
    "note": "",
    "topics": [
      "binary search",
      "data structures",
      "greedy",
      "math"
    ],
    "id": "1709D"
  },
  {
    "title": "Three Doors",
    "url": "https://codeforces.com/problemset/problem/1709/A",
    "history": "There are three doors in front of you, numbered from 1 to 3 from left to right. Each door has a lock on it, which can only be opened with a key with the same number on it as the number on the door. There are three keys \u2014 one for each door. Two of them are hidden behind the doors, so that there is no more than one key behind each door. So two doors have one key behind them, one door doesn' t have a key behind it. To obtain a key hidden behind a door, you should first unlock that door. The remaining key is in your hands. Can you open all the doors?",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 18 ) \u2014 the number of testcases. The first line of each testcase contains a single integer x ( 1 \u2264 x \u2264 3 ) \u2014 the number on the key in your hands. The second line contains three integers a, b and c ( 0 \u2264 a, b, c \u2264 3 ) \u2014 the number on the key behind each of the doors. If there is no key behind the door, the number is equal to 0 . Values 1, 2 and 3 appear exactly once among x, a, b and c .",
    "output": "For each testcase, print \" YES\" if you can open all the doors. Otherwise, print \" NO\" .",
    "note": "",
    "topics": [
      "brute force",
      "greedy",
      "implementation",
      "math"
    ],
    "id": "1709A"
  },
  {
    "title": "Difference of GCDs",
    "url": "https://codeforces.com/problemset/problem/1708/B",
    "history": "You are given three integers n , l , and r . You need to construct an array a_ 1, a_ 2, . . . , a_ n ( l\u2264 a_ i\u2264 r ) such that ( i, a_ i) are all distinct or report there' s no solution. Here ( x, y) denotes the greatest common divisor ( GCD) of integers x and y .",
    "input": "The input consists of multiple test cases. The first line contains a single integer t ( 1\u2264 t\u2264 10^ 4 ) \u2014 the number of test cases. The description of the test cases follows. The first line contains three integers n , l , r ( 1 \u2264 n \u2264 10^ 5 , 1\u2264 l\u2264 r\u2264 10^ 9 ) . It is guaranteed that the sum of n over all test cases does not exceed 10^ 5 .",
    "output": "For each test case, if there is no solution, print \" NO\" ( without quotes) . You can print letters in any case ( upper or lower) . Otherwise, print \" YES\" ( without quotes) . In the next line, print n integers a_ 1, a_ 2, . . . , a_ n \u2014 the array you construct. If there are multiple solutions, you may output any.",
    "note": "In the first test case, ( 1, a_ 1) , ( 2, a_ 2) , . . . , ( 5, a_ 5) are equal to 1 , 2 , 3 , 4 , 5 , respectively.",
    "topics": [
      "constructive algorithms",
      "math"
    ],
    "id": "1708B"
  },
  {
    "title": "Difference Operations",
    "url": "https://codeforces.com/problemset/problem/1708/A",
    "history": "You are given an array a consisting of n positive integers. You are allowed to perform this operation any number of times ( possibly, zero) : choose an index i ( 2 \u2264 i \u2264 n ) , and change a_ i to a_ i - a_ i- 1 . Is it possible to make a_ i= 0 for all 2\u2264 i\u2264 n ?",
    "input": "The input consists of multiple test cases. The first line contains a single integer t ( 1\u2264 t\u2264 100 ) \u2014 the number of test cases. The description of the test cases follows. The first line contains one integer n ( 2 \u2264 n \u2264 100 ) \u2014 the length of array a . The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 9 ) .",
    "output": "For each test case, print \" YES\" ( without quotes) , if it is possible to change a_ i to 0 for all 2 \u2264 i \u2264 n , and \" NO\" ( without quotes) otherwise. You can print letters in any case ( upper or lower) .",
    "note": "In the first test case, the initial array is [ 5, 10] . You can perform 2 operations to reach the goal: Choose i= 2 , and the array becomes [ 5, 5] . Choose i= 2 , and the array becomes [ 5, 0] . In the second test case, the initial array is [ 1, 2, 3] . You can perform 4 operations to reach the goal: Choose i= 3 , and the array becomes [ 1, 2, 1] . Choose i= 2 , and the array becomes [ 1, 1, 1] . Choose i= 3 , and the array becomes [ 1, 1, 0] . Choose i= 2 , and the array becomes [ 1, 0, 0] . In the third test case, you can choose indices in the order 4 , 3 , 2 .",
    "topics": [
      "greedy",
      "math"
    ],
    "id": "1708A"
  },
  {
    "title": "Partial Virtual Trees",
    "url": "https://codeforces.com/problemset/problem/1707/D",
    "history": "Kawashiro Nitori is a girl who loves competitive programming. One day she found a rooted tree consisting of n vertices. The root is vertex 1 . As an advanced problem setter, she quickly thought of a problem. Kawashiro Nitori has a vertex set U= { 1, 2, . . . , n} . She' s going to play a game with the tree and the set. In each operation, she will choose a vertex set T , where T is a partial virtual tree of U , and change U into T . A vertex set S_ 1 is a partial virtual tree of a vertex set S_ 2 , if S_ 1 is a subset of S_ 2 , S_ 1 = \u0338 S_ 2 , and for all pairs of vertices i and j in S_ 1 , LCA( i, j) is in S_ 1 , where LCA( x, y) denotes the lowest common ancestor of vertices x and y on the tree. Note that a vertex set can have many different partial virtual trees. Kawashiro Nitori wants to know for each possible k , if she performs the operation exactly k times, in how many ways she can make U= { 1} in the end? Two ways are considered different if there exists an integer z ( 1 \u2264 z \u2264 k ) such that after z operations the sets U are different. Since the answer could be very large, you need to find it modulo p . It' s guaranteed that p is a prime number.",
    "input": "The first line contains two integers n and p ( 2 \u2264 n \u2264 2000 , 10^ 8 + 7 \u2264 p \u2264 10^ 9+ 9 ) . It' s guaranteed that p is a prime number. Each of the next n- 1 lines contains two integers u_ i , v_ i ( 1 \u2264 u_ i, v_ i \u2264 n ) , representing an edge between u_ i and v_ i . It is guaranteed that the given edges form a tree.",
    "output": "The only line contains n- 1 integers \u2014 the answer modulo p for k= 1, 2, . . . , n- 1 .",
    "note": "In the first test case, when k= 1 , the only possible way is: { 1, 2, 3, 4} \u2192{ 1} . When k= 2 , there are 6 possible ways: { 1, 2, 3, 4} \u2192{ 1, 2} \u2192{ 1} ; { 1, 2, 3, 4} \u2192{ 1, 2, 3} \u2192{ 1} ; { 1, 2, 3, 4} \u2192{ 1, 2, 4} \u2192{ 1} ; { 1, 2, 3, 4} \u2192{ 1, 3} \u2192{ 1} ; { 1, 2, 3, 4} \u2192{ 1, 3, 4} \u2192{ 1} ; { 1, 2, 3, 4} \u2192{ 1, 4} \u2192{ 1} . When k= 3 , there are 6 possible ways: { 1, 2, 3, 4} \u2192{ 1, 2, 3} \u2192{ 1, 2} \u2192{ 1} ; { 1, 2, 3, 4} \u2192{ 1, 2, 3} \u2192{ 1, 3} \u2192{ 1} ; { 1, 2, 3, 4} \u2192{ 1, 2, 4} \u2192{ 1, 2} \u2192{ 1} ; { 1, 2, 3, 4} \u2192{ 1, 2, 4} \u2192{ 1, 4} \u2192{ 1} ; { 1, 2, 3, 4} \u2192{ 1, 3, 4} \u2192{ 1, 3} \u2192{ 1} ; { 1, 2, 3, 4} \u2192{ 1, 3, 4} \u2192{ 1, 4} \u2192{ 1} .",
    "topics": [
      "combinatorics",
      "dfs and similar",
      "dp",
      "math",
      "trees"
    ],
    "id": "1707D"
  },
  {
    "title": "Chopping Carrots (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1706/D2",
    "history": "This is the hard version of the problem. The only difference between the versions is the constraints on n , k , a_ i , and the sum of n over all test cases. You can make hacks only if both versions of the problem are solved. Note the unusual memory limit. You are given an array of integers a_ 1, a_ 2, . . . , a_ n of length n , and an integer k . The cost of an array of integers p_ 1, p_ 2, . . . , p_ n of length n is max_ 1 \u2264 i \u2264 n( \u230aa_ i/ p_ i\u230b) - min_ 1 \u2264 i \u2264 n( \u230aa_ i/ p_ i\u230b) . Here, \u230ax/ y\u230b denotes the integer part of the division of x by y . Find the minimum cost of an array p such that 1 \u2264 p_ i \u2264 k for all 1 \u2264 i \u2264 n .",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 100 ) \u2014 the number of test cases. The first line of each test case contains two integers n and k ( 1 \u2264 n, k \u2264 10^ 5 ) . The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ 1 \u2264 a_ 2 \u2264. . . \u2264 a_ n \u2264 10^ 5 ) . It is guaranteed that the sum of n over all test cases does not exceed 10^ 5 .",
    "output": "For each test case, print a single integer \u2014 the minimum possible cost of an array p satisfying the condition above.",
    "note": "In the first test case, the optimal array is p = [ 1, 1, 1, 2, 2] . The resulting array of values of \u230aa_ i/ p_ i\u230b is [ 4, 5, 6, 4, 5] . The cost of p is max_ 1 \u2264 i \u2264 n( \u230aa_ i/ p_ i\u230b) - min_ 1 \u2264 i \u2264 n( \u230aa_ i/ p_ i\u230b) = 6 - 4 = 2 . We can show that there is no array ( satisfying the condition from the statement) with a smaller cost. In the second test case, one of the optimal arrays is p = [ 12, 12, 12, 12, 12] , which results in all \u230aa_ i/ p_ i\u230b being 0 . In the third test case, the only possible array is p = [ 1, 1, 1] .",
    "topics": [
      "brute force",
      "constructive algorithms",
      "data structures",
      "dp",
      "greedy",
      "math",
      "number theory",
      "two pointers"
    ],
    "id": "1706D2"
  },
  {
    "title": "Making Towers",
    "url": "https://codeforces.com/problemset/problem/1706/B",
    "history": "You have a sequence of n colored blocks. The color of the i - th block is c_ i , an integer between 1 and n . You will place the blocks down in sequence on an infinite coordinate grid in the following way. Initially, you place block 1 at ( 0, 0) . For 2 \u2264 i \u2264 n , if the ( i - 1) - th block is placed at position ( x, y) , then the i - th block can be placed at one of positions ( x + 1, y) , ( x - 1, y) , ( x, y + 1) ( but not at position ( x, y - 1) ) , as long no previous block was placed at that position. A tower is formed by s blocks such that they are placed at positions ( x, y) , ( x, y + 1) , . . . , ( x, y + s - 1) for some position ( x, y) and integer s . The size of the tower is s , the number of blocks in it. A tower of color r is a tower such that all blocks in it have the color r . For each color r from 1 to n , solve the following problem independently: Find the maximum size of a tower of color r that you can form by placing down the blocks according to the rules.",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. The first line of each test case contains a single integer n ( 1 \u2264 n \u2264 10^ 5 ) . The second line of each test case contains n integers c_ 1, c_ 2, . . . , c_ n ( 1 \u2264 c_ i \u2264 n ) . It is guaranteed that the sum of n over all test cases does not exceed 2 \u00b7 10^ 5 .",
    "output": "For each test case, output n integers. The r - th of them should be the maximum size of an tower of color r you can form by following the given rules. If you cannot form any tower of color r , the r - th integer should be 0 .",
    "note": "In the first test case, one of the possible ways to form a tower of color 1 and size 3 is: place block 1 at position ( 0, 0) ; place block 2 to the right of block 1 , at position ( 1, 0) ; place block 3 above block 2 , at position ( 1, 1) ; place block 4 to the left of block 3 , at position ( 0, 1) ; place block 5 to the left of block 4 , at position ( - 1, 1) ; place block 6 above block 5 , at position ( - 1, 2) ; place block 7 to the right of block 6 , at position ( 0, 2) . The blocks at positions ( 0, 0) , ( 0, 1) , and ( 0, 2) all have color 1 , forming an tower of size 3 . In the second test case, note that the following placement is not valid, since you are not allowed to place block 6 under block 5 : It can be shown that it is impossible to form a tower of color 4 and size 3 .",
    "topics": [
      "dp",
      "greedy",
      "math"
    ],
    "id": "1706B"
  },
  {
    "title": "Mark and Lightbulbs",
    "url": "https://codeforces.com/problemset/problem/1705/D",
    "history": "Mark has just purchased a rack of n lightbulbs. The state of the lightbulbs can be described with binary string s = s_ 1s_ 2. . . s_ n , where s_ i= means that the i - th lightbulb is turned on, while s_ i= means that the i - th lightbulb is turned off. Unfortunately, the lightbulbs are broken, and the only operation he can perform to change the state of the lightbulbs is the following: Select an index i from 2, 3, . . . , n- 1 such that s_ i- 1 s_ i+ 1 . Toggle s_ i . Namely, if s_ i is , set s_ i to or vice versa. Mark wants the state of the lightbulbs to be another binary string t . Help Mark determine the minimum number of operations to do so.",
    "input": "The first line of the input contains a single integer q ( 1\u2264 q\u2264 10^ 4 ) \u2014 the number of test cases. The first line of each test case contains a single integer n ( 3\u2264 n\u2264 2\u00b7 10^ 5 ) \u2014 the number of lightbulbs. The second line of each test case contains a binary string s of length n \u2014 the initial state of the lightbulbs. The third line of each test case contains a binary string t of length n \u2014 the final state of the lightbulbs. It is guaranteed that the sum of n across all test cases does not exceed 2\u00b7 10^ 5 .",
    "output": "For each test case, print a line containing the minimum number of operations Mark needs to perform to transform s to t . If there is no such sequence of operations, print - 1 .",
    "note": "In the first test case, one sequence of operations that achieves the minimum number of operations is the following. Select i= 3 , changing to . Select i= 2 , changing to . In the second test case, there is no sequence of operations because one cannot change the first digit or the last digit of s . In the third test case, even though the first digits of s and t are the same and the last digits of s and t are the same, it can be shown that there is no sequence of operations that satisfies the condition. In the fourth test case, one sequence that achieves the minimum number of operations is the following: Select i= 3 , changing to . Select i= 2 , changing to . Select i= 4 , changing to . Select i= 5 , changing to . Select i= 3 , changing to .",
    "topics": [
      "combinatorics",
      "constructive algorithms",
      "greedy",
      "math",
      "sortings"
    ],
    "id": "1705D"
  },
  {
    "title": "Game of AI (hard version)",
    "url": "https://codeforces.com/problemset/problem/1704/H2",
    "history": "This is the hard version of this problem. The difference between easy and hard versions is the constraint on k and the time limit. Notice that you need to calculate the answer for all positive integers n \u2208 [ 1, k] in this version. You can make hacks only if both versions of the problem are solved. Cirno is playing a war simulator game with n towers ( numbered from 1 to n ) and n bots ( numbered from 1 to n ) . The i - th tower is initially occupied by the i - th bot for 1 \u2264 i \u2264 n . Before the game, Cirno first chooses a permutation p = [ p_ 1, p_ 2, . . . , p_ n] of length n ( A permutation of length n is an array of length n where each integer between 1 and n appears exactly once) . After that, she can choose a sequence a = [ a_ 1, a_ 2, . . . , a_ n] ( 1 \u2264 a_ i \u2264 n and a_ i i for all 1 \u2264 i \u2264 n ) . The game has n rounds of attacks. In the i - th round, if the p_ i - th bot is still in the game, it will begin its attack, and as the result the a_ p_ i - th tower becomes occupied by the p_ i - th bot; the bot that previously occupied the a_ p_ i - th tower will no longer occupy it. If the p_ i - th bot is not in the game, nothing will happen in this round. After each round, if a bot doesn' t occupy any towers, it will be eliminated and leave the game. Please note that no tower can be occupied by more than one bot, but one bot can occupy more than one tower during the game. At the end of the game, Cirno will record the result as a sequence b = [ b_ 1, b_ 2, . . . , b_ n] , where b_ i is the number of the bot that occupies the i - th tower at the end of the game. However, as a mathematics master, she wants you to solve the following counting problem instead of playing games: Count the number of different pairs of sequences a , b from all possible choices of sequence a and permutation p . Calculate the answers for all n such that 1 \u2264 n \u2264 k . Since these numbers may be large, output them modulo M .",
    "input": "The only line contains two positive integers k and M ( 1\u2264 k\u2264 10^ 5 , 2\u2264 M\u2264 10^ 9 ) . It is guaranteed that 2^ 18 is a divisor of M- 1 and M is a prime number.",
    "output": "Output k lines, where the i - th line contains a non- negative integer, which is the answer for n= i modulo M .",
    "note": "For n= 1 , no valid sequence a exists. We regard the answer as 0 . For n= 2 , there is only one possible array a : [ 2, 1] . For array a is [ 2, 1] and permutation p is [ 1, 2] , the sequence b will be [ 1, 1] after all rounds have finished. The details for each rounds: In the first round, the first bot will begin its attack and successfully capture the tower 2 . After this round, the second bot will be eliminated and leave the game as all of its towers are occupied by other bots. In the second round, the second bot is not in the game. For array a is [ 2, 1] and permutation p is [ 2, 1] , the sequence b will be [ 2, 2] after all rounds have finished. The details for each rounds: In the first round, the second bot will begin its attack and successfully capture the tower 1 . After this round, the first bot will be eliminated and leave the game as all of its towers are occupied by other bots. In the second round, the first bot is not in the game. So the number of different pairs of sequences ( a, b) is 2 ( [ 2, 1] , [ 1, 1] and [ 2, 1] , [ 2, 2] ) for n= 2 .",
    "topics": [
      "combinatorics",
      "fft",
      "math"
    ],
    "id": "1704H2"
  },
  {
    "title": "Game of AI (easy version)",
    "url": "https://codeforces.com/problemset/problem/1704/H1",
    "history": "This is the easy version of this problem. The difference between easy and hard versions is the constraint on k and the time limit. Also, in this version of the problem, you only need to calculate the answer when n= k . You can make hacks only if both versions of the problem are solved. Cirno is playing a war simulator game with n towers ( numbered from 1 to n ) and n bots ( numbered from 1 to n ) . The i - th tower is initially occupied by the i - th bot for 1 \u2264 i \u2264 n . Before the game, Cirno first chooses a permutation p = [ p_ 1, p_ 2, . . . , p_ n] of length n ( A permutation of length n is an array of length n where each integer between 1 and n appears exactly once) . After that, she can choose a sequence a = [ a_ 1, a_ 2, . . . , a_ n] ( 1 \u2264 a_ i \u2264 n and a_ i i for all 1 \u2264 i \u2264 n ) . The game has n rounds of attacks. In the i - th round, if the p_ i - th bot is still in the game, it will begin its attack, and as the result the a_ p_ i - th tower becomes occupied by the p_ i - th bot; the bot that previously occupied the a_ p_ i - th tower will no longer occupy it. If the p_ i - th bot is not in the game, nothing will happen in this round. After each round, if a bot doesn' t occupy any towers, it will be eliminated and leave the game. Please note that no tower can be occupied by more than one bot, but one bot can occupy more than one tower during the game. At the end of the game, Cirno will record the result as a sequence b = [ b_ 1, b_ 2, . . . , b_ n] , where b_ i is the number of the bot that occupies the i - th tower at the end of the game. However, as a mathematics master, she wants you to solve the following counting problem instead of playing games: Count the number of different pairs of sequences a and b that we can get from all possible choices of sequence a and permutation p . Since this number may be large, output it modulo M .",
    "input": "The only line contains two positive integers k and M ( 1\u2264 k\u2264 5000 , 2\u2264 M\u2264 10^ 9 ) . It is guaranteed that 2^ 18 is a divisor of M- 1 and M is a prime number. You need to calculate the answer for n= k .",
    "output": "Output a single integer \u2014 the number of different pairs of sequences for n= k modulo M .",
    "note": "For n= 1 , no valid sequence a exists. We regard the answer as 0 . For n= 2 , there is only one possible array a : [ 2, 1] . For array a is [ 2, 1] and permutation p is [ 1, 2] , the sequence b will be [ 1, 1] after all rounds have finished. The details for each rounds: In the first round, the first bot will begin its attack and successfully capture the tower 2 . After this round, the second bot will be eliminated and leave the game as all of its towers are occupied by other bots. In the second round, the second bot is not in the game. For array a is [ 2, 1] and permutation p is [ 2, 1] , the sequence b will be [ 2, 2] after all rounds have finished. The details for each rounds: In the first round, the second bot will begin its attack and successfully capture the tower 1 . After this round, the first bot will be eliminated and leave the game as all of its towers are occupied by other bots. In the second round, the first bot is not in the game. So the number of different pairs of sequences ( a, b) is 2 ( [ 2, 1] , [ 1, 1] and [ 2, 1] , [ 2, 2] ) for n= 2 .",
    "topics": [
      "combinatorics",
      "constructive algorithms",
      "dp",
      "fft",
      "math"
    ],
    "id": "1704H1"
  },
  {
    "title": "Mio and Lucky Array",
    "url": "https://codeforces.com/problemset/problem/1704/G",
    "history": "Mio has an array a consisting of n integers, and an array b consisting of m integers. Mio can do the following operation to a : Choose an integer i ( 1 \u2264 i \u2264 n ) that has not been chosen before, then add 1 to a_ i , subtract 2 from a_ i+ 1 , add 3 to a_ i+ 2 an so on. Formally, the operation is to add ( - 1) ^ j- i\u00b7 ( j- i+ 1) to a_ j for i \u2264 j \u2264 n . Mio wants to transform a so that it will contain b as a subarray. Could you answer her question, and provide a sequence of operations to do so, if it is possible? An array b is a subarray of an array a if b can be obtained from a by deletion of several ( possibly, zero or all) elements from the beginning and several ( possibly, zero or all) elements from the end.",
    "input": "The input consists of multiple test cases. The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. The description of test cases follows. The first line of each test case contains one integer n ( 2 \u2264 n \u2264 2 \u00b7 10^ 5 ) \u2014 the number of elements in a . The second line of the test case contains n integers a_ 1, a_ 2, \u22ef, a_ n ( - 10^ 5 \u2264 a_ i \u2264 10^ 5 ) , where a_ i is the i - th element of a . The third line of the test case contains one integer m ( 2 \u2264 m \u2264 n ) \u2014 the number of elements in b . The fourth line of the test case contains m integers b_ 1, b_ 2, \u22ef, b_ m ( - 10^ 12\u2264 b_ i \u2264 10^ 12 ) , where b_ i is the i - th element of b . It is guaranteed that the sum of n over all test cases does not exceed 2 \u00b7 10^ 5 .",
    "output": "If it is impossible to transform a so that it contains b as a subarray, output - 1 . Otherwise, the first line of output should contain an integer k ( 0 \u2264 k \u2264 n ) , the number of operations to be done. The second line should contain k distinct integers, representing the operations done in order. If there are multiple solutions, you can output any. Notice that you do not need to minimize the number of operations.",
    "note": "In the first test case, the sequence a = [ 1, 2, 3, 4, 5] . One of the possible solutions is doing one operation at i = 1 ( add 1 to a_ 1 , subtract 2 from a_ 2 , add 3 to a_ 3 , subtract 4 from a_ 4 , add 5 to a_ 5 ) . Then array a is transformed to a = [ 2, 0, 6, 0, 10] , which contains b = [ 2, 0, 6, 0, 10] as a subarray. In the second test case, the sequence a = [ 1, 2, 3, 4, 5] . One of the possible solutions is doing one operation at i = 4 ( add 1 to a_ 4 , subtract 2 from a_ 5 ) . Then array a is transformed to a = [ 1, 2, 3, 5, 3] , which contains b = [ 3, 5, 3] as a subarray. In the third test case, the sequence a = [ - 3, 2, - 3, - 4, 4, 0, 1, - 2] . One of the possible solutions is the following. Choose an integer i= 8 to do the operation. Then array a is transformed to a = [ - 3, 2, - 3, - 4, 4, 0, 1, - 1] . Choose an integer i= 6 to do the operation. Then array a is transformed to a = [ - 3, 2, - 3, - 4, 4, 1, - 1, 2] . Choose an integer i= 4 to do the operation. Then array a is transformed to a = [ - 3, 2, - 3, - 3, 2, 4, - 5, 7] . Choose an integer i= 3 to do the operation. Then array a is transformed to a = [ - 3, 2, - 2, - 5, 5, 0, 0, 1] . Choose an integer i= 1 to do the operation. Then array a is transformed to a = [ - 2, 0, 1, - 9, 10, - 6, 7, - 7] . The resulting a is [ - 2, 0, 1, - 9, 10, - 6, 7, - 7] , which contains b = [ 10, - 6, 7, - 7] as a subarray. In the fourth test case, it is impossible to transform a so that it contains b as a subarray. In the fifth test case, it is impossible to transform a so that it contains b as a subarray.",
    "topics": [
      "constructive algorithms",
      "fft",
      "math",
      "strings"
    ],
    "id": "1704G"
  },
  {
    "title": "Count Seconds",
    "url": "https://codeforces.com/problemset/problem/1704/E",
    "history": "Cirno has a DAG ( Directed Acyclic Graph) with n nodes and m edges. The graph has exactly one node that has no out edges. The i - th node has an integer a_ i on it. Every second the following happens: Let S be the set of nodes x that have a_ x > 0 . For all x \u2208 S , 1 is subtracted from a_ x , and then for each node y , such that there is an edge from x to y , 1 is added to a_ y . Find the first moment of time when all a_ i become 0 . Since the answer can be very large, output it modulo 998 244 353 .",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 1000 ) \u2014 the number of test cases. Description of test cases follows. The first line of each test case contains two integers n, m ( 1 \u2264 n, m \u2264 1000 ) \u2014 the number of vertices and edges in the graph. The second line of each test case contains n integers a_ 1, a_ 2, . . . , a_ n ( 0 \u2264 a_ i \u2264 10^ 9 ) \u2014 the integer on vertices. Each line of the following m lines contains two integers x, y ( 1 \u2264 x, y \u2264 n ) , represent a directed edge from x to y . It is guaranteed that the graph is a DAG with no multi- edges, and there is exactly one node that has no out edges. It is guaranteed that both sum of n and sum of m over all test cases are less than or equal to 10 000 .",
    "output": "For each test case, print an integer in a separate line \u2014 the first moment of time when all a_ i become 0 , modulo 998 244 353 .",
    "note": "In the first test case: At time 0 , the values of the nodes are [ 1, 1, 1] . At time 1 , the values of the nodes are [ 0, 1, 1] . At time 2 , the values of the nodes are [ 0, 0, 1] . At time 3 , the values of the nodes are [ 0, 0, 0] . So the answer is 3 . In the second test case: At time 0 , the values of the nodes are [ 1, 0, 0, 0, 0] . At time 1 , the values of the nodes are [ 0, 1, 0, 0, 1] . At time 2 , the values of the nodes are [ 0, 0, 1, 0, 0] . At time 3 , the values of the nodes are [ 0, 0, 0, 1, 0] . At time 4 , the values of the nodes are [ 0, 0, 0, 0, 1] . At time 5 , the values of the nodes are [ 0, 0, 0, 0, 0] . So the answer is 5 . In the third test case: The first moment of time when all a_ i become 0 is 6\u00b7 998244353 + 4 .",
    "topics": [
      "brute force",
      "constructive algorithms",
      "dp",
      "graphs",
      "implementation",
      "math"
    ],
    "id": "1704E"
  },
  {
    "title": "Magical Array",
    "url": "https://codeforces.com/problemset/problem/1704/D",
    "history": "Eric has an array b of length m , then he generates n additional arrays c_ 1, c_ 2, . . . , c_ n , each of length m , from the array b , by the following way: Initially, c_ i = b for every 1 \u2264 i \u2264 n . Eric secretly chooses an integer k ( 1 \u2264 k \u2264 n) and chooses c_ k to be the special array. There are two operations that Eric can perform on an array c_ t : Operation 1: Choose two integers i and j ( 2 \u2264 i < j \u2264 m- 1 ) , subtract 1 from both c_ t[ i] and c_ t[ j] , and add 1 to both c_ t[ i- 1] and c_ t[ j+ 1] . That operation can only be used on a non- special array, that is when t = \u0338 k . ; Operation 2: Choose two integers i and j ( 2 \u2264 i < j \u2264 m- 2 ) , subtract 1 from both c_ t[ i] and c_ t[ j] , and add 1 to both c_ t[ i- 1] and c_ t[ j+ 2] . That operation can only be used on a special array, that is when t = k . Note that Eric can' t perform an operation if any element of the array will become less than 0 after that operation. Now, Eric does the following: For every non- special array c_ i ( i = \u0338 k ) , Eric uses only operation 1 on it at least once. For the special array c_ k , Eric uses only operation 2 on it at least once. Lastly, Eric discards the array b . For given arrays c_ 1, c_ 2, . . . , c_ n , your task is to find out the special array, i. e. the value k . Also, you need to find the number of times of operation 2 was used on it.",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. Description of test cases follows. The first line of each test case contains two integers n and m ( 3 \u2264 n \u2264 10^ 5 , 7 \u2264 m \u2264 3 \u00b7 10^ 5 ) \u2014 the number of arrays given to you, and the length of each array. The next n lines contains m integers each, c_ i, 1, c_ i, 2, . . . , c_ i, m . It is guaranteed that each element of the discarded array b is in the range [ 0, 10^ 6] , and therefore 0 \u2264 c_ i, j\u2264 3 \u00b7 10^ 11 for all possible pairs of ( i, j) . It is guaranteed that the sum of n \u00b7 m over all test cases does not exceed 10^ 6 . It is guaranteed that the input is generated according to the procedure above.",
    "output": "For each test case, output one line containing two integers \u2014 the index of the special array, and the number of times that Operation 2 was performed on it. It can be shown that under the constraints given in the problem, this value is unique and won' t exceed 10^ 18 , so you can represent it as a 64 - bit integer. It can also be shown that the index of the special array is uniquely determined. In this problem, hacks are disabled.",
    "note": "In the first test case, the secret array b is [ 0, 1, 1, 1, 1, 1, 1, 1, 0] . Array c_ 1 and array c_ 2 are generated by using operation 1. Array c_ 3 is generated by using operation 2. For Array c_ 1 , you can choose i= 4 and j= 5 perform Operation 1 one time to generate it. For Array c_ 2 , you can choose i= 6 and j= 7 perform Operation 1 one time to generate it. For Array c_ 3 , you can choose i= 4 and j= 5 perform Operation 2 one time to generate it. In the second test case, the secret array b is [ 20, 20, 20, 20, 20, 20, 20] . You can also find that array c_ 1 and array c_ 2 are generated by using Operation 1. Array c_ 3 is generated by using Operation 2. In the third test case, the secret array b is [ 20, 20, 20, 20, 20, 20, 20, 20, 20] . You can also find that array c_ 1 and array c_ 2 are generated by using Operation 1. Array c_ 3 is generated by using Operation 2.",
    "topics": [
      "constructive algorithms",
      "hashing",
      "implementation",
      "math"
    ],
    "id": "1704D"
  },
  {
    "title": "Good Key, Bad Key",
    "url": "https://codeforces.com/problemset/problem/1703/G",
    "history": "There are n chests. The i - th chest contains a_ i coins. You need to open all n chests in order from chest 1 to chest n . There are two types of keys you can use to open a chest: a good key, which costs k coins to use; a bad key, which does not cost any coins, but will halve all the coins in each unopened chest, including the chest it is about to open. The halving operation will round down to the nearest integer for each chest halved. In other words using a bad key to open chest i will do a_ i = \u230aa_ i/ 2\u230b , a_ i+ 1 = \u230aa_ i+ 1/ 2\u230b, . . . , a_ n = \u230aa_ n/ 2\u230b ; any key ( both good and bad) breaks after a usage, that is, it is a one- time use. You need to use in total n keys, one for each chest. Initially, you have no coins and no keys. If you want to use a good key, then you need to buy it. During the process, you are allowed to go into debt; for example, if you have 1 coin, you are allowed to buy a good key worth k= 3 coins, and your balance will become - 2 coins. Find the maximum number of coins you can have after opening all n chests in order from chest 1 to chest n .",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. The first line of each test case contains two integers n and k ( 1 \u2264 n \u2264 10^ 5 ; 0 \u2264 k \u2264 10^ 9 ) \u2014 the number of chests and the cost of a good key respectively. The second line of each test case contains n integers a_ i ( 0 \u2264 a_ i \u2264 10^ 9 ) \u2014 the amount of coins in each chest. The sum of n over all test cases does not exceed 10^ 5 .",
    "output": "For each test case output a single integer \u2014 the maximum number of coins you can obtain after opening the chests in order from chest 1 to chest n . Please note, that the answer for some test cases won' t fit into 32- bit integer type, so you should use at least 64- bit integer type in your programming language ( like long long for C+ + ) .",
    "note": "In the first test case, one possible strategy is as follows: Buy a good key for 5 coins, and open chest 1 , receiving 10 coins. Your current balance is 0 + 10 - 5 = 5 coins. Buy a good key for 5 coins, and open chest 2 , receiving 10 coins. Your current balance is 5 + 10 - 5 = 10 coins. Use a bad key and open chest 3 . As a result of using a bad key, the number of coins in chest 3 becomes \u230a3/ 2\u230b = 1 , and the number of coins in chest 4 becomes \u230a1/ 2\u230b = 0 . Your current balance is 10 + 1 = 11 . Use a bad key and open chest 4 . As a result of using a bad key, the number of coins in chest 4 becomes \u230a0/ 2\u230b = 0 . Your current balance is 11 + 0 = 11 . At the end of the process, you have 11 coins, which can be proven to be maximal.",
    "topics": [
      "bitmasks",
      "brute force",
      "dp",
      "greedy",
      "math"
    ],
    "id": "1703G"
  },
  {
    "title": "Equate Multisets",
    "url": "https://codeforces.com/problemset/problem/1702/F",
    "history": "Multiset \u2014is a set of numbers in which there can be equal elements, and the order of the numbers does not matter. Two multisets are equal when each value occurs the same number of times. For example, the multisets { 2, 2, 4} and { 2, 4, 2} are equal, but the multisets { 1, 2, 2} and { 1, 1, 2} \u2014 are not. You are given two multisets a and b , each consisting of n integers. In a single operation, any element of the b multiset can be doubled or halved ( rounded down) . In other words, you have one of the following operations available for an element x of the b multiset: replace x with x \u00b7 2 , or replace x with \u230ax/ 2\u230b ( round down) . Note that you cannot change the elements of the a multiset. See if you can make the multiset b become equal to the multiset a in an arbitrary number of operations ( maybe 0 ) . For example, if n = 4 , a = { 4, 24, 5, 2} , b = { 4, 1, 6, 11} , then the answer is yes. We can proceed as follows: Replace 1 with 1 \u00b7 2 = 2 . We get b = { 4, 2, 6, 11} . Replace 11 with \u230a11/ 2\u230b = 5 . We get b = { 4, 2, 6, 5} . Replace 6 with 6 \u00b7 2 = 12 . We get b = { 4, 2, 12, 5} . Replace 12 with 12 \u00b7 2 = 24 . We get b = { 4, 2, 24, 5} . Got equal multisets a = { 4, 24, 5, 2} and b = { 4, 2, 24, 5} .",
    "input": "The first line of input data contains a single integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014the number of test cases. Each test case consists of three lines. The first line of the test case contains an integer n ( 1 \u2264 n \u2264 2 \u00b7 10^ 5 ) \u2014the number of elements in the multisets a and b . The second line gives n integers: a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ 1 \u2264 a_ 2 \u2264. . . \u2264 a_ n \u2264 10^ 9 ) \u2014the elements of the multiset a . Note that the elements may be equal. The third line contains n integers: b_ 1, b_ 2, . . . , b_ n ( 1 \u2264 b_ 1 \u2264 b_ 2 \u2264. . . \u2264 b_ n \u2264 10^ 9 ) \u2014 elements of the multiset b . Note that the elements may be equal. It is guaranteed that the sum of n values over all test cases does not exceed 2 \u00b7 10^ 5 .",
    "output": "For each test case, print on a separate line: YES if you can make the multiset b become equal to a , NO otherwise. You can output YES and NO in any case ( for example, strings yEs, yes, Yes and YES will be recognized as positive answer) .",
    "note": "The first example is explained in the statement. In the second example, it is impossible to get the value 31 from the numbers of the multiset b by available operations. In the third example, we can proceed as follows: Replace 2 with 2 \u00b7 2 = 4 . We get b = { 4, 14, 14, 26, 42} . Replace 14 with \u230a14/ 2\u230b = 7 . We get b = { 4, 7, 14, 26, 42} . Replace 26 with \u230a26/ 2\u230b = 13 . We get b = { 4, 7, 14, 13, 42} . Replace 42 with \u230a42/ 2\u230b = 21 . We get b = { 4, 7, 14, 13, 21} . Replace 21 with \u230a21/ 2\u230b = 10 . We get b = { 4, 7, 14, 13, 10} . Got equal multisets a = { 4, 7, 10, 13, 14} and b = { 4, 7, 14, 13, 10} .",
    "topics": [
      "constructive algorithms",
      "data structures",
      "greedy",
      "math",
      "number theory"
    ],
    "id": "1702F"
  },
  {
    "title": "Points",
    "url": "https://codeforces.com/problemset/problem/1701/F",
    "history": "A triple of points i , j and k on a coordinate line is called beautiful if i < j < k and k - i \u2264 d . You are given a set of points on a coordinate line, initially empty. You have to process queries of three types: add a point; remove a point; calculate the number of beautiful triples consisting of points belonging to the set.",
    "input": "The first line contains two integers q and d ( 1 \u2264 q, d \u2264 2 \u00b7 10^ 5 ) \u2014 the number of queries and the parameter for defining if a triple is beautiful, respectively. The second line contains q integers a_ 1, a_ 2, . . . , a_ q ( 1 \u2264 a_ i \u2264 2 \u00b7 10^ 5 ) denoting the queries. The integer a_ i denotes the i - th query in the following way: if the point a_ i belongs to the set, remove it; otherwise, add it; after adding or removing the point, print the number of beautiful triples.",
    "output": "For each query, print one integer \u2014 the number of beautiful triples after processing the respective query.",
    "note": "",
    "topics": [
      "combinatorics",
      "data structures",
      "implementation",
      "math",
      "matrices"
    ],
    "id": "1701F"
  },
  {
    "title": "Permutation Restoration",
    "url": "https://codeforces.com/problemset/problem/1701/D",
    "history": "Monocarp had a permutation a of n integers 1 , 2 , . . . , n ( a permutation is an array where each element from 1 to n occurs exactly once) . Then Monocarp calculated an array of integers b of size n , where b_ i = \u230ai/ a_ i\u230b . For example, if the permutation a is [ 2, 1, 4, 3] , then the array b is equal to [ \u230a1/ 2\u230b, \u230a2/ 1\u230b, \u230a3/ 4\u230b, \u230a4/ 3\u230b] = [ 0, 2, 0, 1] . Unfortunately, the Monocarp has lost his permutation, so he wants to restore it. Your task is to find a permutation a that corresponds to the given array b . If there are multiple possible permutations, then print any of them. The tests are constructed in such a way that least one suitable permutation exists.",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 5 ) \u2014 number of test cases. The first line of each test case contains a single integer n ( 1 \u2264 n \u2264 5 \u00b7 10^ 5 ) . The second line contains n integers b_ 1, b_ 2, . . . , b_ n ( 0 \u2264 b_ i \u2264 n ) . Additional constrains on the input: the sum of n over test cases does not exceed 5 \u00b7 10^ 5 ; there exists at least one permutation a that would yield this array b .",
    "output": "For each test case, print n integers \u2014 a permutation a that corresponds to the given array b . If there are multiple possible permutations, then print any of them.",
    "note": "",
    "topics": [
      "binary search",
      "data structures",
      "greedy",
      "math",
      "sortings",
      "two pointers"
    ],
    "id": "1701D"
  },
  {
    "title": "River Locks",
    "url": "https://codeforces.com/problemset/problem/1700/D",
    "history": "Recently in Divanovo, a huge river locks system was built. There are now n locks, the i - th of them has the volume of v_ i liters, so that it can contain any amount of water between 0 and v_ i liters. Each lock has a pipe attached to it. When the pipe is open, 1 liter of water enters the lock every second. The locks system is built in a way to immediately transfer all water exceeding the volume of the lock i to the lock i + 1 . If the lock i + 1 is also full, water will be transferred further. Water exceeding the volume of the last lock pours out to the river. The picture illustrates 5 locks with two open pipes at locks 1 and 3 . Because locks 1 , 3 , and 4 are already filled, effectively the water goes to locks 2 and 5 . Note that the volume of the i - th lock may be greater than the volume of the i + 1 - th lock. To make all locks work, you need to completely fill each one of them. The mayor of Divanovo is interested in q independent queries. For each query, suppose that initially all locks are empty and all pipes are closed. Then, some pipes are opened simultaneously. For the j - th query the mayor asks you to calculate the minimum number of pipes to open so that all locks are filled no later than after t_ j seconds. Please help the mayor to solve this tricky problem and answer his queries.",
    "input": "The first lines contains one integer n ( 1 \u2264 n \u2264 200 000 ) \u2014 the number of locks. The second lines contains n integers v_ 1, v_ 2, . . . , v_ n ( 1 \u2264 v_ i \u2264 10^ 9 ) ) \u2014 volumes of the locks. The third line contains one integer q ( 1 \u2264 q \u2264 200 000 ) \u2014 the number of queries. Each of the next q lines contains one integer t_ j ( 1 \u2264 t_ j \u2264 10^ 9 ) \u2014 the number of seconds you have to fill all the locks in the query j .",
    "output": "Print q integers. The j - th of them should be equal to the minimum number of pipes to turn on so that after t_ j seconds all of the locks are filled. If it is impossible to fill all of the locks in given time, print - 1 .",
    "note": "There are 6 queries in the first example test. In the queries 1, 3, 4 the answer is - 1 . We need to wait 4 seconds to fill the first lock even if we open all the pipes. In the sixth query we can open pipes in locks 1 , 3 , and 4 . After 4 seconds the locks 1 and 4 are full. In the following 1 second 1 liter of water is transferred to the locks 2 and 5 . The lock 3 is filled by its own pipe. Similarly, in the second query one can open pipes in locks 1 , 3 , and 4 . In the fifth query one can open pipes 1, 2, 3, 4 .",
    "topics": [
      "binary search",
      "dp",
      "greedy",
      "math"
    ],
    "id": "1700D"
  },
  {
    "title": "Palindromic Numbers ",
    "url": "https://codeforces.com/problemset/problem/1700/B",
    "history": "During a daily walk Alina noticed a long number written on the ground. Now Alina wants to find some positive number of same length without leading zeroes, such that the sum of these two numbers is a palindrome. Recall that a number is called a palindrome, if it reads the same right to left and left to right. For example, numbers 121, 66, 98989 are palindromes, and 103, 239, 1241 are not palindromes. Alina understands that a valid number always exist. Help her find one!",
    "input": "The first line of input data contains an integer t ( 1 \u2264 t \u2264 100 ) \u2014 the number of test cases. Next, descriptions of t test cases follow. The first line of each test case contains a single integer n ( 2 \u2264 n \u2264 100 000 ) \u2014 the length of the number that is written on the ground. The second line of contains the positive n - digit integer without leading zeroes \u2014 the number itself. It is guaranteed that the sum of the values n over all test cases does not exceed 100 000 .",
    "output": "For each of t test cases print an answer \u2014 a positive n - digit integer without leading zeros, such that the sum of the input integer and this number is a palindrome. We can show that at least one number satisfying the constraints exists. If there are multiple solutions, you can output any of them.",
    "note": "In the first test case 99 + 32 = 131 is a palindrome. Note that another answer is 12 , because 99 + 12 = 111 is also a palindrome. In the second test case 1023 + 8646 = 9669 . In the third test case 385 + 604 = 989 .",
    "topics": [
      "constructive algorithms",
      "implementation",
      "math"
    ],
    "id": "1700B"
  },
  {
    "title": "Optimal Path",
    "url": "https://codeforces.com/problemset/problem/1700/A",
    "history": "You are given a table a of size n \u00d7 m . We will consider the table rows numbered from top to bottom from 1 to n , and the columns numbered from left to right from 1 to m . We will denote a cell that is in the i - th row and in the j - th column as ( i, j) . In the cell ( i, j) there is written a number ( i - 1) \u00b7 m + j , that is a_ ij = ( i - 1) \u00b7 m + j . A turtle initially stands in the cell ( 1, 1) and it wants to come to the cell ( n, m) . From the cell ( i, j) it can in one step go to one of the cells ( i + 1, j) or ( i, j + 1) , if it exists. A path is a sequence of cells in which for every two adjacent in the sequence cells the following satisfies: the turtle can reach from the first cell to the second cell in one step. A cost of a path is the sum of numbers that are written in the cells of the path. For example, with n = 2 and m = 3 the table will look as shown above. The turtle can take the following path: ( 1, 1) \u2192 ( 1, 2) \u2192 ( 1, 3) \u2192 ( 2, 3) . The cost of such way is equal to a_ 11 + a_ 12 + a_ 13 + a_ 23 = 12 . On the other hand, the paths ( 1, 1) \u2192 ( 1, 2) \u2192 ( 2, 2) \u2192 ( 2, 1) and ( 1, 1) \u2192 ( 1, 3) are incorrect, because in the first path the turtle can' t make a step ( 2, 2) \u2192 ( 2, 1) , and in the second path it can' t make a step ( 1, 1) \u2192 ( 1, 3) . You are asked to tell the turtle a minimal possible cost of a path from the cell ( 1, 1) to the cell ( n, m) . Please note that the cells ( 1, 1) and ( n, m) are a part of the way.",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 1000 ) \u2014 the number of test cases. The description of test cases follows. A single line of each test case contains two integers n and m ( 1 \u2264 n, m \u2264 10^ 4 ) \u2014 the number of rows and columns of the table a respectively.",
    "output": "For each test case output a single integer \u2014 a minimal possible cost of a path from the cell ( 1, 1) to the cell ( n, m) .",
    "note": "In the first test case the only possible path consists of a single cell ( 1, 1) . The path with the minimal cost in the second test case is shown in the statement. In the fourth and the fifth test cases there is only one path from ( 1, 1) to ( n, m) . Both paths visit every cell in the table.",
    "topics": [
      "constructive algorithms",
      "greedy",
      "math"
    ],
    "id": "1700A"
  },
  {
    "title": "Three Days Grace",
    "url": "https://codeforces.com/problemset/problem/1699/E",
    "history": "Ibti was thinking about a good title for this problem that would fit the round theme ( numerus ternarium) . He immediately thought about the third derivative, but that was pretty lame so he decided to include the best band in the world \u2014 Three Days Grace. You are given a multiset A with initial size n , whose elements are integers between 1 and m . In one operation, do the following: select a value x from the multiset A , then select two integers p and q such that p, q > 1 and p \u00b7 q = x . Insert p and q to A , delete x from A . Note that the size of the multiset A increases by 1 after each operation. We define the balance of the multiset A as max( a_ i) - min( a_ i) . Find the minimum possible balance after performing any number ( possible zero) of operations.",
    "input": "The first line of the input contains a single integer t ( 1 \u2264 t \u2264 10^ 5 ) \u2014 the number of test cases. The second line of each test case contains two integers n and m ( 1 \u2264 n \u2264 10^ 6 , 1 \u2264 m \u2264 5 \u00b7 10^ 6 ) \u2014 the initial size of the multiset, and the maximum value of an element. The third line of each test case contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 m ) \u2014 the elements in the initial multiset. It is guaranteed that the sum of n across all test cases does not exceed 10^ 6 and the sum of m across all test cases does not exceed 5 \u00b7 10^ 6 .",
    "output": "For each test case, print a single integer \u2014 the minimum possible balance.",
    "note": "In the first test case, we can apply the operation on each of the 4 s with ( p, q) = ( 2, 2) and make the multiset { 2, 2, 2, 2, 2, 2, 2} with balance max( { 2, 2, 2, 2, 2, 2, 2} ) - min( { 2, 2, 2, 2, 2, 2, 2} ) = 0 . It is obvious we cannot make this balance less than 0 . In the second test case, we can apply an operation on 12 with ( p, q) = ( 3, 4) . After this our multiset will be { 3, 4, 2, 3} . We can make one more operation on 4 with ( p, q) = ( 2, 2) , making the multiset { 3, 2, 2, 2, 3} with balance equal to 1 . In the third test case, we can apply an operation on 35 with ( p, q) = ( 5, 7) . The final multiset is { 6, 5, 7} and has a balance equal to 7- 5 = 2 . In the forth test case, we cannot apply any operation, so the balance is 5 - 1 = 4 .",
    "topics": [
      "data structures",
      "dp",
      "greedy",
      "math",
      "number theory",
      "two pointers"
    ],
    "id": "1699E"
  },
  {
    "title": "The Third Problem",
    "url": "https://codeforces.com/problemset/problem/1699/C",
    "history": "You are given a permutation a_ 1, a_ 2, . . . , a_ n of integers from 0 to n - 1 . Your task is to find how many permutations b_ 1, b_ 2, . . . , b_ n are similar to permutation a . Two permutations a and b of size n are considered similar if for all intervals [ l, r] ( 1 \u2264 l \u2264 r \u2264 n ) , the following condition is satisfied: MEX( [ a_ l, a_ l+ 1, . . . , a_ r] ) = MEX( [ b_ l, b_ l+ 1, . . . , b_ r] ) , where the MEX of a collection of integers c_ 1, c_ 2, . . . , c_ k is defined as the smallest non- negative integer x which does not occur in collection c . For example, MEX( [ 1, 2, 3, 4, 5] ) = 0 , and MEX( [ 0, 1, 2, 4, 5] ) = 3 . Since the total number of such permutations can be very large, you will have to print its remainder modulo 10^ 9+ 7 . In this problem, a permutation of size n is an array consisting of n distinct integers from 0 to n- 1 in arbitrary order. For example, [ 1, 0, 2, 4, 3] is a permutation, while [ 0, 1, 1] is not, since 1 appears twice in the array. [ 0, 1, 3] is also not a permutation, since n= 3 and there is a 3 in the array.",
    "input": "Each test contains multiple test cases. The first line of input contains one integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. The following lines contain the descriptions of the test cases. The first line of each test case contains a single integer n ( 1 \u2264 n \u2264 10^ 5 ) \u2014 the size of permutation a . The second line of each test case contains n distinct integers a_ 1, a_ 2, . . . , a_ n ( 0 \u2264 a_ i n ) \u2014 the elements of permutation a . It is guaranteed that the sum of n across all test cases does not exceed 10^ 5 .",
    "output": "For each test case, print a single integer, the number of permutations similar to permutation a , taken modulo 10^ 9+ 7 .",
    "note": "For the first test case, the only permutations similar to a= [ 4, 0, 3, 2, 1] are [ 4, 0, 3, 2, 1] and [ 4, 0, 2, 3, 1] . For the second and third test cases, the given permutations are only similar to themselves. For the fourth test case, there are 4 permutations similar to a= [ 1, 2, 4, 0, 5, 3] : [ 1, 2, 4, 0, 5, 3] ; [ 1, 2, 5, 0, 4, 3] ; [ 1, 4, 2, 0, 5, 3] ; [ 1, 5, 2, 0, 4, 3] .",
    "topics": [
      "combinatorics",
      "constructive algorithms",
      "math"
    ],
    "id": "1699C"
  },
  {
    "title": "The Third Three Number Problem",
    "url": "https://codeforces.com/problemset/problem/1699/A",
    "history": "You are given a positive integer n . Your task is to find any three integers a , b and c ( 0 \u2264 a, b, c \u2264 10^ 9 ) for which ( a\u2295 b) + ( b\u2295 c) + ( a\u2295 c) = n , or determine that there are no such integers. Here a \u2295 b denotes the bitwise XOR of a and b . For example, 2 \u2295 4 = 6 and 3 \u2295 1= 2 .",
    "input": "Each test contains multiple test cases. The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. The following lines contain the descriptions of the test cases. The only line of each test case contains a single integer n ( 1 \u2264 n \u2264 10^ 9 ) .",
    "output": "For each test case, print any three integers a , b and c ( 0 \u2264 a, b, c \u2264 10^ 9 ) for which ( a\u2295 b) + ( b\u2295 c) + ( a\u2295 c) = n . If no such integers exist, print - 1 .",
    "note": "In the first test case, a= 3 , b= 3 , c= 1 , so ( 3 \u2295 3) + ( 3 \u2295 1) + ( 3 \u2295 1) = 0+ 2+ 2= 4 . In the second test case, there are no solutions. In the third test case, ( 2 \u2295 4) + ( 4 \u2295 6) + ( 2 \u2295 6) = 6+ 2+ 4= 12 .",
    "topics": [
      "constructive algorithms",
      "math"
    ],
    "id": "1699A"
  },
  {
    "title": "Long Binary String",
    "url": "https://codeforces.com/problemset/problem/1698/G",
    "history": "There is a binary string t of length 10^ 100 , and initally all of its bits are . You are given a binary string s , and perform the following operation some times: Select some substring of t , and replace it with its XOR with s . ^ \u2020 After several operations, the string t has exactly two bits ; that is, there are exactly two distinct indices p and q such that the p - th and q - th bits of t are , and the rest of the bits are . Find the lexicographically largest ^ string t satisfying these constraints, or report that no such string exists. ^ \u2020 Formally, choose an index i such that 0 \u2264 i \u2264 10^ 100- | s| . For all 1 \u2264 j \u2264 | s| , if s_ j = , then toggle t_ i+ j . That is, if t_ i+ j= , set t_ i+ j= . Otherwise if t_ i+ j= , set t_ i+ j= . ^ A binary string a is lexicographically larger than a binary string b of the same length if in the first position where a and b differ, the string a has a bit and the corresponding bit in b is .",
    "input": "The only line of each test contains a single binary string s ( 1 \u2264 | s| \u2264 35 ) .",
    "output": "If no string t exists as described in the statement, output - 1. Otherwise, output the integers p and q ( 1 \u2264 p < q \u2264 10^ 100 ) such that the p - th and q - th bits of the lexicographically maximal t are .",
    "note": "In the first test, you can perform the following operations. . . . \u2192. . . \u2192. . . In the second test, you can perform the following operations. . . . \u2192. . . \u2192. . . In the third test, you can perform the following operations. . . . \u2192. . . \u2192. . . It can be proven that these strings t are the lexicographically largest ones. In the fourth test, you can' t make a single bit , so it is impossible.",
    "topics": [
      "bitmasks",
      "math",
      "matrices",
      "meet-in-the-middle",
      "number theory"
    ],
    "id": "1698G"
  },
  {
    "title": "Equal Reversal",
    "url": "https://codeforces.com/problemset/problem/1698/F",
    "history": "There is an array a of length n . You may perform the following operation on it: Choose two indices l and r where 1 \u2264 l \u2264 r \u2264 n and a_ l = a_ r . Then, reverse the subsegment from the l - th to the r - th element, i. e. set [ a_ l, a_ l + 1, . . . , a_ r - 1, a_ r] to [ a_ r, a_ r- 1, . . . , a_ l+ 1, a_ l] . You are also given another array b of length n which is a permutation of a . Find a sequence of at most n^ 2 operations that transforms array a into b , or report that no such sequence exists.",
    "input": "Each test contains multiple test cases. The first line contains a single integer t ( 1 \u2264 t \u2264 100 ) \u2014 the number of test cases. The description of the test cases follows. The first line of each test case contains an integer n ( 1 \u2264 n \u2264 500 ) \u2014 the length of array a and b . The second line of each test case contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 n ) \u2014 elements of the array a . The third line of each test case contains n integers b_ 1, b_ 2, . . . , b_ n ( 1 \u2264 b_ i \u2264 n ) \u2014 elements of the array b . It is guaranteed that b is a permutation of a . It is guaranteed that the sum of n over all test cases does not exceed 500 .",
    "output": "For each test case, output \" NO\" ( without quotes) if it is impossible to turn a into b using at most n^ 2 operations. Otherwise, output \" YES\" ( without quotes) . Then output an integer k ( 0 \u2264 k \u2264 n^ 2 ) denoting the number of operations you will perform. Note that you don' t have to minimize the number of operations. Afterwards, output k lines. The i - th line should contain two integers l_ i and r_ i ( 1 \u2264 l_ i \u2264 r_ i \u2264 n ) \u2014 the left and right indices for the i - th operation. You can output \" YES\" and \" NO\" in any case ( for example, strings \" yEs\" , \" yes\" and \" Yes\" will be recognized as a positive response) . If there are multiple possible sequences of operations, you may output any of them.",
    "note": "In the first test case, we can perform the following operations: [ 1, 2, 4, 3, 1, 2, 1, 1] [ 1, 2, 4, 3, 1, 1, 2, 1] [ 1, 1, 3, 4, 2, 1, 2, 1] . In the second test case, we can perform the following operations: [ 1, 2, 3, 1, 3, 2, 3] [ 1, 3, 2, 1, 3, 2, 3] [ 1, 3, 2, 3, 1, 2, 3] . It can be proven that it is impossible to turn a into b in the third and fourth test cases.",
    "topics": [
      "constructive algorithms",
      "graphs",
      "implementation",
      "math"
    ],
    "id": "1698F"
  },
  {
    "title": "Coloring",
    "url": "https://codeforces.com/problemset/problem/1697/E",
    "history": "You are given n points on the plane, the coordinates of the i - th point are ( x_ i, y_ i) . No two points have the same coordinates. The distance between points i and j is defined as d( i, j) = | x_ i - x_ j| + | y_ i - y_ j| . For each point, you have to choose a color, represented by an integer from 1 to n . For every ordered triple of different points ( a, b, c) , the following constraints should be met: if a , b and c have the same color, then d( a, b) = d( a, c) = d( b, c) ; if a and b have the same color, and the color of c is different from the color of a , then d( a, b) < d( a, c) and d( a, b) < d( b, c) . Calculate the number of different ways to choose the colors that meet these constraints.",
    "input": "The first line contains one integer n ( 2 \u2264 n \u2264 100 ) \u2014 the number of points. Then n lines follow. The i - th of them contains two integers x_ i and y_ i ( 0 \u2264 x_ i, y_ i \u2264 10^ 8 ) . No two points have the same coordinates ( i. e. if i j , then either x_ i x_ j or y_ i y_ j ) .",
    "output": "Print one integer \u2014 the number of ways to choose the colors for the points. Since it can be large, print it modulo 998244353 .",
    "note": "In the first test, the following ways to choose the colors are suitable: [ 1, 1, 1] ; [ 2, 2, 2] ; [ 3, 3, 3] ; [ 1, 2, 3] ; [ 1, 3, 2] ; [ 2, 1, 3] ; [ 2, 3, 1] ; [ 3, 1, 2] ; [ 3, 2, 1] .",
    "topics": [
      "brute force",
      "combinatorics",
      "constructive algorithms",
      "dp",
      "geometry",
      "graphs",
      "greedy",
      "implementation",
      "math"
    ],
    "id": "1697E"
  },
  {
    "title": "Maximum Product?",
    "url": "https://codeforces.com/problemset/problem/1696/H",
    "history": "You are given a positive integer k . For a multiset of integers S , define f( S) as the following. If the number of elements in S is less than k , f( S) = 0 . Otherwise, define f( S) as the maximum product you can get by choosing exactly k integers from S . More formally, let | S| denote the number of elements in S . Then, If | S| < k , f( S) = 0 . Otherwise, f( S) = max_ T\u2286 S, | T| = k( \u220f_ i\u2208 Ti) . You are given a multiset of integers, A . Compute \u2211_ B\u2286 A f( B) modulo 10^ 9+ 7 . Note that in this problem, we distinguish the elements by indices instead of values. That is, a multiset consisting of n elements always has 2^ n distinct subsets regardless of whether some of its elements are equal.",
    "input": "The first line of input contains two integers n and k , where n is the number of elements in A ( 1\u2264 k\u2264 n\u2264 600 ) . The second line of input contains n integers a_ 1, a_ 2, . . . , a_ n , describing the elements in A ( - 10^ 9\u2264 a_ i\u2264 10^ 9 ) .",
    "output": "Output \u2211_ B\u2286 A f( B) modulo 10^ 9+ 7 .",
    "note": "Consider the first sample. From the definitions we know that f( \u2205) = 0 f( { - 1} ) = 0 f( { 2} ) = 0 f( { 4} ) = 0 f( { - 1, 2} ) = - 2 f( { - 1, 4} ) = - 4 f( { 2, 4} ) = 8 f( { - 1, 2, 4} ) = 8 So we should print ( 0+ 0+ 0+ 0- 2- 4+ 8+ 8) ( 10^ 9+ 7) = 10 . In the second example, note that although the multiset consists of three same values, it still has 8 distinct subsets: \u2205, { 1} , { 1} , { 1} , { 1, 1} , { 1, 1} , { 1, 1} , { 1, 1, 1} .",
    "topics": [
      "brute force",
      "combinatorics",
      "dp",
      "greedy",
      "implementation",
      "math",
      "two pointers"
    ],
    "id": "1696H"
  },
  {
    "title": "Fishingprince Plays With Array Again",
    "url": "https://codeforces.com/problemset/problem/1696/G",
    "history": "Suppose you are given a 1- indexed sequence a of non- negative integers, whose length is n , and two integers x , y . In consecutive t seconds ( t can be any positive real number) , you can do one of the following operations: Select 1\u2264 i< n , decrease a_ i by x\u00b7 t , and decrease a_ i+ 1 by y\u00b7 t . Select 1\u2264 i< n , decrease a_ i by y\u00b7 t , and decrease a_ i+ 1 by x\u00b7 t . Define the minimum amount of time ( it might be a real number) required to make all elements in the sequence less than or equal to 0 as f( a) . For example, when x= 1 , y= 2 , it takes 3 seconds to deal with the array [ 3, 1, 1, 3] . We can: In the first 1. 5 seconds do the second operation with i= 1 . In the next 1. 5 seconds do the first operation with i= 3 . We can prove that it' s not possible to make all elements less than or equal to 0 in less than 3 seconds, so f( [ 3, 1, 1, 3] ) = 3 . Now you are given a 1- indexed sequence b of positive integers, whose length is n . You are also given positive integers x , y . Process q queries of the following two types: 1 k v: change b_ k to v . 2 l r: print f( [ b_ l, b_ l+ 1, . . . , b_ r] ) .",
    "input": "The first line of input contains two integers n and q ( 2\u2264 n\u2264 2\u00b7 10^ 5 , 1\u2264 q\u2264 2\u00b7 10^ 5 ) . The second line of input contains two integers x and y ( 1\u2264 x, y\u2264 10^ 6 ) . The third line of input contains n integers b_ 1, b_ 2, . . . , b_ n ( 1\u2264 b_ i\u2264 10^ 6 ) . This is followed by q lines. Each of these q lines contains three integers. The first integer op is either 1 or 2 . If it is 1 , it is followed by two integers k , v ( 1\u2264 k\u2264 n , 1\u2264 v\u2264 10^ 6 ) . It means that you should change b_ k to v . If it is 2 , it is followed by two integers l , r ( 1\u2264 l< r\u2264 n ) . It means that you should print f( [ b_ l, b_ l+ 1, . . . , b_ r] ) .",
    "output": "For each query of type 2 , print one real number \u2014 the answer to the query. Your answer is considered correct if its absolute error or relative error does not exceed 10^ - 9 .",
    "note": "Let' s analyse the sample. In the first query, we are asked to compute f( [ 3, 1, 1, 4] ) . The answer is 3. 5 . One optimal sequence of operations is: In the first 1. 5 seconds do the second operation with i= 1 . In the next 2 seconds do the first operation with i= 3 . In the third query, we are asked to compute f( [ 1, 1, 1] ) . The answer is 1 . One optimal sequence of operations is: In the first 0. 5 seconds do the second operation with i= 1 . In the next 0. 5 seconds do the first operation with i= 2 .",
    "topics": [
      "brute force",
      "data structures",
      "geometry",
      "math"
    ],
    "id": "1696G"
  },
  {
    "title": "Placing Jinas",
    "url": "https://codeforces.com/problemset/problem/1696/E",
    "history": "We say an infinite sequence a_ 0, a_ 1, a_ 2, . . . is non- increasing if and only if for all i\u2265 0 , a_ i \u2265 a_ i+ 1 . There is an infinite right and down grid. The upper- left cell has coordinates ( 0, 0) . Rows are numbered 0 to infinity from top to bottom, columns are numbered from 0 to infinity from left to right. There is also a non- increasing infinite sequence a_ 0, a_ 1, a_ 2, . . . . You are given a_ 0 , a_ 1 , . . . , a_ n ; for all i> n , a_ i= 0 . For every pair of x , y , the cell with coordinates ( x, y) ( which is located at the intersection of x - th row and y - th column) is white if y< a_ x and black otherwise. Initially there is one doll named Jina on ( 0, 0) . You can do the following operation. Select one doll on ( x, y) . Remove it and place a doll on ( x, y+ 1) and place a doll on ( x+ 1, y) . Note that multiple dolls can be present at a cell at the same time; in one operation, you remove only one. Your goal is to make all white cells contain 0 dolls. What' s the minimum number of operations needed to achieve the goal? Print the answer modulo 10^ 9+ 7 .",
    "input": "The first line of input contains one integer n ( 1\u2264 n\u2264 2\u00b7 10^ 5 ) . The second line of input contains n+ 1 integers a_ 0, a_ 1, . . . , a_ n ( 0\u2264 a_ i\u2264 2\u00b7 10^ 5 ) . It is guaranteed that the sequence a is non- increasing.",
    "output": "Print one integer \u2014 the answer to the problem, modulo 10^ 9+ 7 .",
    "note": "Consider the first example. In the given grid, cells ( 0, 0) , ( 0, 1) , ( 1, 0) , ( 1, 1) are white, and all other cells are black. Let us use triples to describe the grid: triple ( x, y, z) means that there are z dolls placed on cell ( x, y) . Initially the state of the grid is ( 0, 0, 1) . One of the optimal sequence of operations is as follows: Do the operation with ( 0, 0) . Now the state of the grid is ( 1, 0, 1) , ( 0, 1, 1) . Do the operation with ( 0, 1) . Now the state of the grid is ( 1, 0, 1) , ( 1, 1, 1) , ( 0, 2, 1) . Do the operation with ( 1, 0) . Now the state of the grid is ( 1, 1, 2) , ( 0, 2, 1) , ( 2, 0, 1) . Do the operation with ( 1, 1) . Now the state of the grid is ( 1, 1, 1) , ( 0, 2, 1) , ( 2, 0, 1) , ( 1, 2, 1) , ( 2, 1, 1) . Do the operation with ( 1, 1) . Now the state of the grid is ( 0, 2, 1) , ( 2, 0, 1) , ( 1, 2, 2) , ( 2, 1, 2) . Now all white cells contain 0 dolls, so we have achieved the goal with 5 operations.",
    "topics": [
      "combinatorics",
      "math"
    ],
    "id": "1696E"
  },
  {
    "title": "Fishingprince Plays With Array",
    "url": "https://codeforces.com/problemset/problem/1696/C",
    "history": "Fishingprince is playing with an array [ a_ 1, a_ 2, . . . , a_ n] . He also has a magic number m . He can do the following two operations on it: Select 1\u2264 i\u2264 n such that a_ i is divisible by m ( that is, there exists an integer t such that m \u00b7 t = a_ i ) . Replace a_ i with m copies of a_ i/ m . The order of the other elements doesn' t change. For example, when m= 2 and a= [ 2, 3] and i= 1 , a changes into [ 1, 1, 3] . Select 1\u2264 i\u2264 n- m+ 1 such that a_ i= a_ i+ 1= . . . = a_ i+ m- 1 . Replace these m elements with a single m \u00b7 a_ i . The order of the other elements doesn' t change. For example, when m= 2 and a= [ 3, 2, 2, 3] and i= 2 , a changes into [ 3, 4, 3] . Note that the array length might change during the process. The value of n above is defined as the current length of the array ( might differ from the n in the input) . Fishingprince has another array [ b_ 1, b_ 2, . . . , b_ k] . Please determine if he can turn a into b using any number ( possibly zero) of operations.",
    "input": "Each test contains multiple test cases. The first line contains the number of test cases t ( 1 \u2264 t \u2264 10^ 4 ) . Description of the test cases follows. The first line of each test case contains two integers n and m ( 1\u2264 n\u2264 5\u00b7 10^ 4 , 2\u2264 m\u2264 10^ 9 ) . The second line of each test case contains n integers a_ 1, a_ 2, . . . , a_ n ( 1\u2264 a_ i\u2264 10^ 9 ) . The third line of each test case contains one integer k ( 1\u2264 k\u2264 5\u00b7 10^ 4 ) . The fourth line of each test case contains k integers b_ 1, b_ 2, . . . , b_ k ( 1\u2264 b_ i\u2264 10^ 9 ) . It is guaranteed that the sum of n+ k over all test cases does not exceed 2\u00b7 10^ 5 .",
    "output": "For each testcase, print Yes if it is possible to turn a into b , and No otherwise. You can print each letter in any case ( upper or lower) .",
    "note": "In the first test case of the sample, we can do the second operation with i= 2 : [ 1, 2, 2, 4, 2] \u2192 [ 1, 4, 4, 2] . In the second testcase of the sample, we can: do the second operation with i= 2 : [ 1, 2, 2, 8, 2, 2] \u2192 [ 1, 4, 8, 2, 2] . do the second operation with i= 4 : [ 1, 4, 8, 2, 2] \u2192 [ 1, 4, 8, 4] . do the first operation with i= 3 : [ 1, 4, 8, 4] \u2192 [ 1, 4, 4, 4, 4] . do the second operation with i= 2 : [ 1, 4, 4, 4, 4] \u2192 [ 1, 8, 4, 4] . do the second operation with i= 3 : [ 1, 8, 4, 4] \u2192 [ 1, 8, 8] . do the second operation with i= 2 : [ 1, 8, 8] \u2192 [ 1, 16] .",
    "topics": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "math"
    ],
    "id": "1696C"
  },
  {
    "title": "Gambling",
    "url": "https://codeforces.com/problemset/problem/1692/H",
    "history": "Marian is at a casino. The game at the casino works like this. Before each round, the player selects a number between 1 and 10^ 9 . After that, a dice with 10^ 9 faces is rolled so that a random number between 1 and 10^ 9 appears. If the player guesses the number correctly their total money is doubled, else their total money is halved. Marian predicted the future and knows all the numbers x_ 1, x_ 2, . . . , x_ n that the dice will show in the next n rounds. He will pick three integers a , l and r ( l \u2264 r ) . He will play r- l+ 1 rounds ( rounds between l and r inclusive) . In each of these rounds, he will guess the same number a . At the start ( before the round l ) he has 1 dollar. Marian asks you to determine the integers a , l and r ( 1 \u2264 a \u2264 10^ 9 , 1 \u2264 l \u2264 r \u2264 n ) such that he makes the most money at the end. Note that during halving and multiplying there is no rounding and there are no precision errors. So, for example during a game, Marian could have money equal to 11024 , 1128 , 12 , 1 , 2 , 4 , etc. ( any value of 2^ t , where t is an integer of any sign) .",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 100 ) \u2014 the number of test cases. The first line of each test case contains a single integer n ( 1 \u2264 n \u2264 2\u00b7 10^ 5 ) \u2014 the number of rounds. The second line of each test case contains n integers x_ 1, x_ 2, . . . , x_ n ( 1 \u2264 x_ i \u2264 10^ 9 ) , where x_ i is the number that will fall on the dice in the i - th round. It is guaranteed that the sum of n over all test cases does not exceed 2\u00b710^ 5 .",
    "output": "For each test case, output three integers a , l , and r such that Marian makes the most amount of money gambling with his strategy. If there are multiple answers, you may output any of them.",
    "note": "For the first test case, the best choice is a= 4 , l= 1 , r= 5 , and the game would go as follows. Marian starts with one dollar. After the first round, he ends up with 2 dollars because the numbers coincide with the chosen one. After the second round, he ends up with 4 dollars because the numbers coincide again. After the third round, he ends up with 2 dollars because he guesses 4 even though 3 is the correct choice. After the fourth round, he ends up with 4 dollars again. In the final round, he ends up 8 dollars because he again guessed correctly. There are many possible answers for the second test case, but it can be proven that Marian will not end up with more than 2 dollars, so any choice with l = r with the appropriate a is acceptable.",
    "topics": [
      "data structures",
      "dp",
      "greedy",
      "math"
    ],
    "id": "1692H"
  },
  {
    "title": "3SUM",
    "url": "https://codeforces.com/problemset/problem/1692/F",
    "history": "Given an array a of positive integers with length n , determine if there exist three distinct indices i , j , k such that a_ i + a_ j + a_ k ends in the digit 3 .",
    "input": "The first line contains an integer t ( 1 \u2264 t \u2264 1000 ) \u2014 the number of test cases. The first line of each test case contains an integer n ( 3 \u2264 n \u2264 2 \u00b7 10^ 5 ) \u2014 the length of the array. The second line of each test case contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 9 ) \u2014 the elements of the array. The sum of n across all test cases does not exceed 2 \u00b7 10^ 5 .",
    "output": "Output t lines, each of which contains the answer to the corresponding test case. Output \" YES\" if there exist three distinct indices i , j , k satisfying the constraints in the statement, and \" NO\" otherwise. You can output the answer in any case ( for example, the strings \" yEs\" , \" yes\" , \" Yes\" and \" YES\" will be recognized as a positive answer) .",
    "note": "In the first test case, you can select i= 1 , j= 4 , k= 3 . Then a_ 1 + a_ 4 + a_ 3 = 20 + 84 + 19 = 123 , which ends in the digit 3 . In the second test case, you can select i= 1 , j= 2 , k= 3 . Then a_ 1 + a_ 2 + a_ 3 = 1 + 11 + 1 = 13 , which ends in the digit 3 . In the third test case, it can be proven that no such i , j , k exist. Note that i= 4 , j= 4 , k= 4 is not a valid solution, since although a_ 4 + a_ 4 + a_ 4 = 1111 + 1111 + 1111 = 3333 , which ends in the digit 3 , the indices need to be distinct. In the fourth test case, it can be proven that no such i , j , k exist. In the fifth test case, you can select i= 4 , j= 3 , k= 1 . Then a_ 4 + a_ 3 + a_ 1 = 4 + 8 + 1 = 13 , which ends in the digit 3 . In the sixth test case, you can select i= 1 , j= 2 , k= 6 . Then a_ 1 + a_ 2 + a_ 6 = 16 + 38 + 99 = 153 , which ends in the digit 3 .",
    "topics": [
      "brute force",
      "math"
    ],
    "id": "1692F"
  },
  {
    "title": "K-Set Tree",
    "url": "https://codeforces.com/problemset/problem/1691/F",
    "history": "You are given a tree G with n vertices and an integer k . The vertices of the tree are numbered from 1 to n . For a vertex r and a subset S of vertices of G , such that | S| = k , we define f( r, S) as the size of the smallest rooted subtree containing all vertices in S when the tree is rooted at r . A set of vertices T is called a rooted subtree, if all the vertices in T are connected, and for each vertex in T , all its descendants belong to T . You need to calculate the sum of f( r, S) over all possible distinct combinations of vertices r and subsets S , where | S| = k . Formally, compute the following: \u2211_ r \u2208 V\u2211_ S \u2286 V, | S| = k f( r, S) , where V is the set of vertices in G . Output the answer modulo 10^ 9 + 7 .",
    "input": "The first line contains two integers n and k ( 3 \u2264 n \u2264 2 \u00b7 10^ 5 , 1 \u2264 k \u2264 n ) . Each of the following n - 1 lines contains two integers x and y ( 1 \u2264 x, y \u2264 n ) , denoting an edge between vertex x and y . It is guaranteed that the given edges form a tree.",
    "output": "Print the answer modulo 10^ 9 + 7 .",
    "note": "The tree in the second example is given below: We have 21 subsets of size 2 in the given tree. Hence, S \u2208{ { 1, 2} , { 1, 3} , { 1, 4} , { 1, 5} , { 1, 6} , { 1, 7} , { 2, 3} , { 2, 4} , { 2, 5} , { 2, 6} , { 2, 7} , { 3, 4} , { 3, 5} , { 3, 6} , { 3, 7} , { 4, 5} , { 4, 6} , { 4, 7} , { 5, 6} , { 5, 7} , { 6, 7} } . And since we have 7 vertices, 1 \u2264 r \u2264 7 . We need to find the sum of f( r, S) over all possible pairs of r and S . Below we have listed the value of f( r, S) for some combinations of r and S . r = 1 , S = { 3, 7} . The value of f( r, S) is 5 and the corresponding subtree is { 2, 3, 4, 6, 7} . r = 1 , S = { 5, 4} . The value of f( r, S) is 7 and the corresponding subtree is { 1, 2, 3, 4, 5, 6, 7} . r = 1 , S = { 4, 6} . The value of f( r, S) is 3 and the corresponding subtree is { 4, 6, 7} .",
    "topics": [
      "combinatorics",
      "dfs and similar",
      "dp",
      "math",
      "trees"
    ],
    "id": "1691F"
  },
  {
    "title": "Sum of Substrings",
    "url": "https://codeforces.com/problemset/problem/1691/C",
    "history": "You are given a binary string s of length n . Let' s define d_ i as the number whose decimal representation is s_ i s_ i+ 1 ( possibly, with a leading zero) . We define f( s) to be the sum of all the valid d_ i . In other words, f( s) = \u2211_ i= 1^ n- 1 d_ i . For example, for the string s = 1011 : d_ 1 = 10 ( ten) ; d_ 2 = 01 ( one) d_ 3 = 11 ( eleven) ; f( s) = 10 + 01 + 11 = 22 . In one operation you can swap any two adjacent elements of the string. Find the minimum value of f( s) that can be achieved if at most k operations are allowed.",
    "input": "Each test contains multiple test cases. The first line contains the number of test cases t ( 1 \u2264 t \u2264 10^ 5 ) . Description of the test cases follows. First line of each test case contains two integers n and k ( 2 \u2264 n \u2264 10^ 5 , 0 \u2264 k \u2264 10^ 9 ) \u2014 the length of the string and the maximum number of operations allowed. The second line of each test case contains the binary string s of length n , consisting of only zeros and ones. It is also given that sum of n over all the test cases doesn' t exceed 10^ 5 .",
    "output": "For each test case, print the minimum value of f( s) you can obtain with at most k operations.",
    "note": "For the first example, you can' t do any operation so the optimal string is s itself. f( s) = f( 1010) = 10 + 01 + 10 = 21 . For the second example, one of the optimal strings you can obtain is \" 0011000\" . The string has an f value of 22 . For the third example, one of the optimal strings you can obtain is \" 00011\" . The string has an f value of 12 .",
    "topics": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "math",
      "strings"
    ],
    "id": "1691C"
  },
  {
    "title": "Beat The Odds",
    "url": "https://codeforces.com/problemset/problem/1691/A",
    "history": "Given a sequence a_ 1, a_ 2, . . . , a_ n , find the minimum number of elements to remove from the sequence such that after the removal, the sum of every 2 consecutive elements is even.",
    "input": "Each test contains multiple test cases. The first line contains a single integer t ( 1 \u2264 t \u2264 100 ) \u2014 the number of test cases. Description of the test cases follows. The first line of each test case contains a single integer n ( 3 \u2264 n \u2264 10^ 5 ) . The second line of each test case contains n integers a_ 1, a_ 2, . . . , a_ n ( 1\u2264 a_ i\u226410^ 9 ) \u2014 elements of the sequence. It is guaranteed that the sum of n over all test cases does not exceed 10^ 5 .",
    "output": "For each test case, print a single integer \u2014 the minimum number of elements to remove from the sequence such that the sum of every 2 consecutive elements is even.",
    "note": "In the first test case, after removing 3 , the sequence becomes [ 2, 4, 6, 8] . The pairs of consecutive elements are { [ 2, 4] , [ 4, 6] , [ 6, 8] } . Each consecutive pair has an even sum now. Hence, we only need to remove 1 element to satisfy the condition asked. In the second test case, each consecutive pair already has an even sum so we need not remove any element.",
    "topics": [
      "brute force",
      "greedy",
      "math"
    ],
    "id": "1691A"
  },
  {
    "title": "Shifting String",
    "url": "https://codeforces.com/problemset/problem/1690/F",
    "history": "Polycarp found the string s and the permutation p . Their lengths turned out to be the same and equal to n . A permutation of n elements \u2014 is an array of length n , in which every integer from 1 to n occurs exactly once. For example, [ 1, 2, 3] and [ 4, 3, 5, 1, 2] are permutations, but [ 1, 2, 4] , [ 4, 3, 2, 1, 2] and [ 0, 1, 2] are not. In one operation he can multiply s by p , so he replaces s with string new , in which for any i from 1 to n it is true that new_ i = s_ p_ i . For example, with s= wmbe and p = [ 3, 1, 4, 2] , after operation the string will turn to s= s_ 3 s_ 1 s_ 4 s_ 2= bwem . Polycarp wondered after how many operations the string would become equal to its initial value for the first time. Since it may take too long, he asks for your help in this matter. It can be proved that the required number of operations always exists. It can be very large, so use a 64- bit integer type.",
    "input": "The first line of input contains one integer t ( 1 \u2264 t \u2264 5000 ) \u2014 the number of test cases in input. The first line of each case contains single integer n ( 1 \u2264 n \u2264 200 ) \u2014 the length of string and permutation. The second line of each case contains a string s of length n , containing lowercase Latin letters. The third line of each case contains n integers \u2014 permutation p ( 1 \u2264 p_ i \u2264 n ) , all p_ i are different.",
    "output": "Output t lines, each of which contains the answer to the corresponding test case of input. As an answer output single integer \u2014 the minimum number of operations, after which the string s will become the same as it was before operations.",
    "note": "In the first sample operation doesn' t change the string, so it will become the same as it was after 1 operations. In the second sample the string will change as follows: s = babaa s = abaab s = baaba s = abbaa s = baaab s = ababa",
    "topics": [
      "graphs",
      "math",
      "number theory",
      "strings"
    ],
    "id": "1690F"
  },
  {
    "title": "Price Maximization",
    "url": "https://codeforces.com/problemset/problem/1690/E",
    "history": "A batch of n goods ( n \u2014 an even number) is brought to the store, i - th of which has weight a_ i . Before selling the goods, they must be packed into packages. After packing, the following will be done: There will be n/ 2 packages, each package contains exactly two goods; The weight of the package that contains goods with indices i and j ( 1 \u2264 i, j \u2264 n ) is a_ i + a_ j . With this, the cost of a package of weight x is always \u230ax/ k\u230b burles ( rounded down) , where k \u2014 a fixed and given value. Pack the goods to the packages so that the revenue from their sale is maximized. In other words, make such n/ 2 pairs of given goods that the sum of the values \u230ax_ i/ k\u230b , where x_ i is the weight of the package number i ( 1 \u2264 i \u2264n/ 2 ) , is maximal. For example, let n = 6, k = 3 , weights of goods a = [ 3, 2, 7, 1, 4, 8] . Let' s pack them into the following packages. In the first package we will put the third and sixth goods. Its weight will be a_ 3 + a_ 6 = 7 + 8 = 15 . The cost of the package will be \u230a15/ 3\u230b = 5 burles. In the second package put the first and fifth goods, the weight is a_ 1 + a_ 5 = 3 + 4 = 7 . The cost of the package is \u230a7/ 3\u230b = 2 burles. In the third package put the second and fourth goods, the weight is a_ 2 + a_ 4 = 2 + 1 = 3 . The cost of the package is \u230a3/ 3\u230b = 1 burle. With this packing, the total cost of all packs would be 5 + 2 + 1 = 8 burles.",
    "input": "The first line of the input contains an integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014the number of test cases in the test. The descriptions of the test cases follow. The first line of each test case contains two integers n ( 2 \u2264 n \u2264 2\u00b710^ 5 ) and k ( 1 \u2264 k \u2264 1000 ) . The number n \u2014 is even. The second line of each test case contains exactly n integers a_ 1, a_ 2, . . . , a_ n ( 0 \u2264 a_ i \u2264 10^ 9 ) . It is guaranteed that the sum of n over all the test cases does not exceed 2\u00b710^ 5 .",
    "output": "For each test case, print on a separate line a single number \u2014 the maximum possible total cost of all the packages.",
    "note": "The first test case is analyzed in the statement. In the second test case, you can get a total value equal to 4 if you put the first and second goods in the first package and the third and fourth goods in the second package. In the third test case, the cost of each item is 0 , so the total cost will also be 0 .",
    "topics": [
      "binary search",
      "greedy",
      "math",
      "two pointers"
    ],
    "id": "1690E"
  },
  {
    "title": "Koishi's Unconscious Permutation",
    "url": "https://codeforces.com/problemset/problem/1687/F",
    "history": "As she closed the Satori' s eye that could read minds, Koishi gained the ability to live in unconsciousness. Even she herself does not know what she is up to. \u2014 Subterranean AnimismKoishi is unconsciously permuting n numbers: 1, 2, . . . , n . She thinks the permutation p is beautiful if s= \u2211_ i= 1^ n- 1 [ p_ i+ 1= p_ i+ 1] . [ x] equals to 1 if x holds, or 0 otherwise. For each k\u2208[ 0, n- 1] , she wants to know the number of beautiful permutations of length n satisfying k= \u2211_ i= 1^ n- 1[ p_ i< p_ i+ 1] .",
    "input": "There is one line containing two intergers n ( 1 \u2264 n \u2264 250 000 ) and s ( 0 \u2264 s < n ) .",
    "output": "Print one line with n intergers. The i - th integers represents the answer of k= i- 1 , modulo 998244353 .",
    "note": "Let f( p) = \u2211_ i= 1^ n- 1[ p_ i< p_ i+ 1] . Testcase 1: [ 2, 1] is the only beautiful permutation. And f( [ 2, 1] ) = 0 . Testcase 2: Beautiful permutations: [ 1, 2, 4, 3] , [ 1, 3, 4, 2] , [ 1, 4, 2, 3] , [ 2, 1, 3, 4] , [ 2, 3, 1, 4] , [ 3, 1, 2, 4] , [ 3, 4, 2, 1] , [ 4, 2, 3, 1] , [ 4, 3, 1, 2] . The first six of them satisfy f( p) = 2 , while others satisfy f( p) = 1 .",
    "topics": [
      "fft",
      "math"
    ],
    "id": "1687F"
  },
  {
    "title": "Become Big For Me",
    "url": "https://codeforces.com/problemset/problem/1687/E",
    "history": "Come, let' s build a world where even the weak are not forgotten! \u2014Kijin Seija, Double Dealing CharactersShinmyoumaru has a mallet that can turn objects bigger or smaller. She is testing it out on a sequence a and a number v whose initial value is 1 . She wants to make v = _ i j{ a_ i\u00b7 a_ j} by no more than 10^ 5 operations ( _ i j{ a_ i\u00b7 a_ j} denotes the of all products of two distinct elements of the sequence a ) . In each operation, she picks a subsequence b of a , and does one of the followings: Enlarge: v = v \u00b7lcm( b) Reduce: v = v/ lcm( b) Note that she does not need to guarantee that v is an integer, that is, v does not need to be a multiple of lcm( b) when performing Reduce. Moreover, she wants to guarantee that the total length of b chosen over the operations does not exceed 10^ 6 . Fine a possible operation sequence for her. You don' t need to minimize anything.",
    "input": "The first line contains a single integer n ( 2\u2264 n\u2264 10^ 5 ) \u2014 the size of sequence a . The second line contains n integers a_ 1, a_ 2, \u22ef, a_ n ( 1\u2264 a_ i\u2264 10^ 6 ) \u2014 the sequence a . It can be shown that the answer exists.",
    "output": "The first line contains a non- negative integer k ( 0\u2264 k\u2264 10^ 5 ) \u2014 the number of operations. The following k lines contains several integers. For each line, the first two integers f ( f\u2208{ 0, 1} ) and p ( 1\u2264 p\u2264 n ) stand for the option you choose ( 0 for Enlarge and 1 for Reduce) and the length of b . The other p integers of the line i_ 1, i_ 2, . . . , i_ p ( 1\u2264 i_ 1< i_ 2< . . . < i_ p\u2264 n ) represents the indexes of the subsequence. Formally, b_ j= a_ i_ j .",
    "note": "Test case 1: _ i j{ a_ i\u00b7 a_ j} = { 60, 90, 150} = 30 . Perform v = v\u00b7lcm{ a_ 1, a_ 2, a_ 3} = 30 . Test case 2: _ i j{ a_ i\u00b7 a_ j} = 8 . Perform v = v\u00b7lcm{ a_ 4} = 16 . Perform v = v/ lcm{ a_ 1} = 8 .",
    "topics": [
      "combinatorics",
      "constructive algorithms",
      "greedy",
      "math",
      "number theory"
    ],
    "id": "1687E"
  },
  {
    "title": "Cute number",
    "url": "https://codeforces.com/problemset/problem/1687/D",
    "history": "Ran is especially skilled in computation and mathematics. It is said that she can do unimaginable calculation work in an instant. \u2014Perfect Memento in Strict SenseRan Yakumo is a cute girl who loves creating cute Maths problems. Let f( x) be the minimal square number strictly greater than x , and g( x) be the maximal square number less than or equal to x . For example, f( 1) = f( 2) = g( 4) = g( 8) = 4 . A positive integer x is cute if x- g( x) < f( x) - x . For example, 1, 5, 11 are cute integers, while 3, 8, 15 are not. Ran gives you an array a of length n . She wants you to find the smallest non- negative integer k such that a_ i + k is a cute number for any element of a .",
    "input": "The first line contains one integer n ( 1 \u2264 n \u2264 10^ 6 ) \u2014 the length of a . The second line contains n intergers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ 1 \u2264 a_ 2 \u2264. . . \u2264 a_ n \u2264 2\u00b7 10^ 6 ) \u2014 the array a .",
    "output": "Print a single interger k \u2014 the answer.",
    "note": "Test case 1: 3 is not cute integer, so k 0 . 2, 4, 9, 11 are cute integers, so k= 1 .",
    "topics": [
      "binary search",
      "brute force",
      "data structures",
      "dsu",
      "implementation",
      "math"
    ],
    "id": "1687D"
  },
  {
    "title": "Hard Cut",
    "url": "https://codeforces.com/problemset/problem/1684/H",
    "history": "You are given a binary string s . You have to cut it into any number of non- intersecting substrings, so that the sum of binary integers denoted by these substrings is a power of 2. Each element of s should be in exactly one substring.",
    "input": "Each test contains multiple test cases. The first line contains the number of test cases t ( 1 \u2264 t \u2264 10^ 5 ) . Description of the test cases follows. Each test case contains a binary string s ( 1 \u2264 | s| \u2264 10^ 6 ) . It is guaranteed that the sum of | s| over all test cases does not exceed 10^ 6 .",
    "output": "For each test case output the answer to the problem as follows: If the answer does not exist, output - 1 . If the answer exists, firstly output an integer k \u2014 the number of substrings in the answer. After that output k non- intersecting substrings, for i - th substring output two integers l_ i, r_ i ( 1 \u2264 l_ i, r_ i \u2264 | s| ) \u2014 the description of i - th substring. If there are multiple valid solutions, you can output any of them.",
    "note": "In the first test case it is impossible to cut the string into substrings, so that the sum is a power of 2. In the second test case such cut is valid: 011_ 2 = 3_ 10 , 0_ 2 = 0_ 10 , 1_ 2 = 1_ 10 . 3 + 0 + 1 = 4 , 4 is a power of 2.",
    "topics": [
      "constructive algorithms",
      "dfs and similar",
      "divide and conquer",
      "math"
    ],
    "id": "1684H"
  },
  {
    "title": "Euclid Guess",
    "url": "https://codeforces.com/problemset/problem/1684/G",
    "history": "Let' s consider Euclid' s algorithm for finding the greatest common divisor, where t is a list: function Euclid( a, b) : if a < b: swap( a, b) if b = = 0: return a r = reminder from dividing a by b if r > 0: append r to the back of t return Euclid( b, r) There is an array p of pairs of positive integers that are not greater than m . Initially, the list t is empty. Then the function is run on each pair in p . After that the list t is shuffled and given to you. You have to find an array p of any size not greater than 2 \u00b7 10^ 4 that produces the given list t , or tell that no such array exists.",
    "input": "The first line contains two integers n and m ( 1 \u2264 n \u2264 10^ 3 , 1 \u2264 m \u2264 10^ 9 ) \u2014 the length of the array t and the constraint for integers in pairs. The second line contains n integers t_ 1, t_ 2, . . . , t_ n ( 1 \u2264 t_ i \u2264 m ) \u2014 the elements of the array t .",
    "output": "If the answer does not exist, output - 1 . If the answer exists, in the first line output k ( 1 \u2264 k \u2264 2 \u00b7 10^ 4 ) \u2014 the size of your array p , i. e. the number of pairs in the answer. The i - th of the next k lines should contain two integers a_ i and b_ i ( 1 \u2264 a_ i, b_ i \u2264 m ) \u2014 the i - th pair in p . If there are multiple valid answers you can output any of them.",
    "note": "In the first sample let' s consider the array t for each pair: ( 19, 11) : t = [ 8, 3, 2, 1] ; ( 15, 9) : t = [ 6, 3] ; ( 3, 7) : t = [ 1] . So in total t = [ 8, 3, 2, 1, 6, 3, 1] , which is the same as the input t ( up to a permutation) . In the second test case it is impossible to find such array p of pairs that all integers are not greater than 10 and t = [ 7, 1] In the third test case for the pair ( 15, 8) array t will be [ 7, 1] .",
    "topics": [
      "constructive algorithms",
      "flows",
      "graph matchings",
      "math",
      "number theory"
    ],
    "id": "1684G"
  },
  {
    "title": "Z mod X = C",
    "url": "https://codeforces.com/problemset/problem/1684/B",
    "history": "You are given three positive integers a , b , c ( a < b < c ) . You have to find three positive integers x , y , z such that: x y = a, y z = b, z x = c. Here p q denotes the remainder from dividing p by q . It is possible to show that for such constraints the answer always exists.",
    "input": "The input consists of multiple test cases. The first line contains a single integer t ( 1 \u2264 t \u2264 10 000 ) \u2014 the number of test cases. Description of the test cases follows. Each test case contains a single line with three integers a , b , c ( 1 \u2264 a < b < c \u2264 10^ 8 ) .",
    "output": "For each test case output three positive integers x , y , z ( 1 \u2264 x, y, z \u2264 10^ 18 ) such that x y = a , y z = b , z x = c . You can output any correct answer.",
    "note": "In the first test case: x y = 12 11 = 1; y z = 11 4 = 3; z x = 4 12 = 4.",
    "topics": [
      "constructive algorithms",
      "math"
    ],
    "id": "1684B"
  },
  {
    "title": "Digit Minimization",
    "url": "https://codeforces.com/problemset/problem/1684/A",
    "history": "There is an integer n without zeros in its decimal representation. Alice and Bob are playing a game with this integer. Alice starts first. They play the game in turns. On her turn, Alice must swap any two digits of the integer that are on different positions. Bob on his turn always removes the last digit of the integer. The game ends when there is only one digit left. You have to find the smallest integer Alice can get in the end, if she plays optimally.",
    "input": "The input consists of multiple test cases. The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. Description of the test cases follows. The first and the only line of each test case contains the integer n ( 10 \u2264 n \u2264 10^ 9 ) \u2014 the integer for the game. n does not have zeros in its decimal representation.",
    "output": "For each test case output a single integer \u2014 the smallest integer Alice can get in the end of the game.",
    "note": "In the first test case Alice has to swap 1 and 2 . After that Bob removes the last digit, 1 , so the answer is 2 . In the second test case Alice can swap 3 and 1 : 312 . After that Bob deletes the last digit: 31 . Then Alice swaps 3 and 1 : 13 and Bob deletes 3 , so the answer is 1 .",
    "topics": [
      "constructive algorithms",
      "games",
      "math",
      "strings"
    ],
    "id": "1684A"
  },
  {
    "title": "Unordered Swaps",
    "url": "https://codeforces.com/problemset/problem/1682/E",
    "history": "Alice had a permutation p of numbers from 1 to n . Alice can swap a pair ( x, y) which means swapping elements at positions x and y in p ( i. e. swap p_ x and p_ y ) . Alice recently learned her first sorting algorithm, so she decided to sort her permutation in the minimum number of swaps possible. She wrote down all the swaps in the order in which she performed them to sort the permutation on a piece of paper. For example, [ ( 2, 3) , ( 1, 3) ] is a valid swap sequence by Alice for permutation p = [ 3, 1, 2] whereas [ ( 1, 3) , ( 2, 3) ] is not because it doesn' t sort the permutation. Note that we cannot sort the permutation in less than 2 swaps. [ ( 1, 2) , ( 2, 3) , ( 2, 4) , ( 2, 3) ] cannot be a sequence of swaps by Alice for p = [ 2, 1, 4, 3] even if it sorts the permutation because p can be sorted in 2 swaps, for example using the sequence [ ( 4, 3) , ( 1, 2) ] . Unfortunately, Bob shuffled the sequence of swaps written by Alice. You are given Alice' s permutation p and the swaps performed by Alice in arbitrary order. Can you restore the correct sequence of swaps that sorts the permutation p ? Since Alice wrote correct swaps before Bob shuffled them up, it is guaranteed that there exists some order of swaps that sorts the permutation.",
    "input": "The first line contains 2 integers n and m ( 2 \u2264 n \u2264 2 \u00b7 10^ 5, 1 \u2264 m \u2264 n - 1) \u2014 the size of permutation and the minimum number of swaps required to sort the permutation. The next line contains n integers p_ 1, p_ 2, . . . , p_ n ( 1 \u2264 p_ i \u2264 n , all p_ i are distinct) \u2014 the elements of p . It is guaranteed that p forms a permutation. Then m lines follow. The i - th of the next m lines contains two integers x_ i and y_ i \u2014 the i - th swap ( x_ i, y_ i) . It is guaranteed that it is possible to sort p with these m swaps and that there is no way to sort p with less than m swaps.",
    "output": "Print a permutation of m integers \u2014 a valid order of swaps written by Alice that sorts the permutation p . See sample explanation for better understanding. In case of multiple possible answers, output any.",
    "note": "In the first example, p = [ 2, 3, 4, 1] , m = 3 and given swaps are [ ( 1, 4) , ( 2, 1) , ( 1, 3) ] . There is only one correct order of swaps i. e [ 2, 3, 1] . First we perform the swap 2 from the input i. e ( 2, 1) , p becomes [ 3, 2, 4, 1] . Then we perform the swap 3 from the input i. e ( 1, 3) , p becomes [ 4, 2, 3, 1] . Finally we perform the swap 1 from the input i. e ( 1, 4) and p becomes [ 1, 2, 3, 4] which is sorted. In the second example, p = [ 6, 5, 1, 3, 2, 4] , m = 4 and the given swaps are [ ( 3, 1) , ( 2, 5) , ( 6, 3) , ( 6, 4) ] . One possible correct order of swaps is [ 4, 2, 1, 3] . Perform the swap 4 from the input i. e ( 6, 4) , p becomes [ 6, 5, 1, 4, 2, 3] . Perform the swap 2 from the input i. e ( 2, 5) , p becomes [ 6, 2, 1, 4, 5, 3] . Perform the swap 1 from the input i. e ( 3, 1) , p becomes [ 1, 2, 6, 4, 5, 3] . Perform the swap 3 from the input i. e ( 6, 3) and p becomes [ 1, 2, 3, 4, 5, 6] which is sorted. There can be other possible answers such as [ 1, 2, 4, 3] .",
    "topics": [
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "greedy",
      "math",
      "sortings",
      "trees"
    ],
    "id": "1682E"
  },
  {
    "title": "LIS or Reverse LIS?",
    "url": "https://codeforces.com/problemset/problem/1682/C",
    "history": "You are given an array a of n positive integers. Let LIS( a) denote the length of longest strictly increasing subsequence of a . For example, LIS( [ 2, 1, 1, 3] ) = 2 . LIS( [ 3, 5, 10, 20] ) = 4 . LIS( [ 3, 1, 2, 4] ) = 3 . We define array a' as the array obtained after reversing the array a i. e. a' = [ a_ n, a_ n- 1, . . . , a_ 1] . The beauty of array a is defined as min( LIS( a) , LIS( a' ) ) . Your task is to determine the maximum possible beauty of the array a if you can rearrange the array a arbitrarily.",
    "input": "The input consists of multiple test cases. The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 4) \u2014 the number of test cases. Description of the test cases follows. The first line of each test case contains a single integer n ( 1 \u2264 n \u2264 2\u00b7 10^ 5) \u2014 the length of array a . The second line of each test case contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 9) \u2014 the elements of the array a . It is guaranteed that the sum of n over all test cases does not exceed 2\u00b7 10^ 5 .",
    "output": "For each test case, output a single integer \u2014 the maximum possible beauty of a after rearranging its elements arbitrarily.",
    "note": "In the first test case, a = [ 6, 6, 6] and a' = [ 6, 6, 6] . LIS( a) = LIS( a' ) = 1 . Hence the beauty is min( 1, 1) = 1 . In the second test case, a can be rearranged to [ 2, 5, 4, 5, 4, 2] . Then a' = [ 2, 4, 5, 4, 5, 2] . LIS( a) = LIS( a' ) = 3 . Hence the beauty is 3 and it can be shown that this is the maximum possible beauty. In the third test case, a can be rearranged to [ 1, 2, 3, 2] . Then a' = [ 2, 3, 2, 1] . LIS( a) = 3 , LIS( a' ) = 2 . Hence the beauty is min( 3, 2) = 2 and it can be shown that 2 is the maximum possible beauty.",
    "topics": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "math"
    ],
    "id": "1682C"
  },
  {
    "title": "Card Trick",
    "url": "https://codeforces.com/problemset/problem/1681/B",
    "history": "Monocarp has just learned a new card trick, and can' t wait to present it to you. He shows you the entire deck of n cards. You see that the values of cards from the topmost to the bottommost are integers a_ 1, a_ 2, . . . , a_ n , and all values are different. Then he asks you to shuffle the deck m times. With the j - th shuffle, you should take b_ j topmost cards and move them under the remaining ( n - b_ j) cards without changing the order. And then, using some magic, Monocarp tells you the topmost card of the deck. However, you are not really buying that magic. You tell him that you know the topmost card yourself. Can you surprise Monocarp and tell him the topmost card before he shows it?",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of testcases. The first line of each testcase contains a single integer n ( 2 \u2264 n \u2264 2 \u00b7 10^ 5 ) \u2014 the number of cards in the deck. The second line contains n pairwise distinct integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 n ) \u2014 the values of the cards. The third line contains a single integer m ( 1 \u2264 m \u2264 2 \u00b7 10^ 5 ) \u2014 the number of shuffles. The fourth line contains m integers b_ 1, b_ 2, . . . , b_ m ( 1 \u2264 b_ j \u2264 n - 1 ) \u2014 the amount of cards that are moved on the j - th shuffle. The sum of n over all testcases doesn' t exceed 2 \u00b7 10^ 5 . The sum of m over all testcases doesn' t exceed 2 \u00b7 10^ 5 .",
    "output": "For each testcase, print a single integer \u2014 the value of the card on the top of the deck after the deck is shuffled m times.",
    "note": "In the first testcase, each shuffle effectively swaps two cards. After three swaps, the deck will be [ 2, 1] . In the second testcase, the second shuffle cancels what the first shuffle did. First, three topmost cards went underneath the last card, then that card went back below the remaining three cards. So the deck remained unchanged from the initial one \u2014 the topmost card has value 3 .",
    "topics": [
      "implementation",
      "math"
    ],
    "id": "1681B"
  },
  {
    "title": "Dog Walking",
    "url": "https://codeforces.com/problemset/problem/1680/D",
    "history": "You are walking with your dog, and now you are at the promenade. The promenade can be represented as an infinite line. Initially, you are in the point 0 with your dog. You decided to give some freedom to your dog, so you untied her and let her run for a while. Also, you watched what your dog is doing, so you have some writings about how she ran. During the i - th minute, the dog position changed from her previous position by the value a_ i ( it means, that the dog ran for a_ i meters during the i - th minute) . If a_ i is positive, the dog ran a_ i meters to the right, otherwise ( if a_ i is negative) she ran a_ i meters to the left. During some minutes, you were chatting with your friend, so you don' t have writings about your dog movement during these minutes. These values a_ i equal zero. You want your dog to return to you after the end of the walk, so the destination point of the dog after n minutes should be 0 . Now you are wondering: what is the maximum possible number of different integer points of the line your dog could visit on her way, if you replace every 0 with some integer from - k to k ( and your dog should return to 0 after the walk) ? The dog visits an integer point if she runs through that point or reaches in it at the end of any minute. Point 0 is always visited by the dog, since she is initially there. If the dog cannot return to the point 0 after n minutes regardless of the integers you place, print - 1.",
    "input": "The first line of the input contains two integers n and k ( 1 \u2264 n \u2264 3000; 1 \u2264 k \u2264 10^ 9 ) \u2014 the number of minutes and the maximum possible speed of your dog during the minutes without records. The second line of the input contains n integers a_ 1, a_ 2, . . . , a_ n ( - 10^ 9 \u2264 a_ i \u2264 10^ 9 ) , where a_ i is the number of meters your dog ran during the i - th minutes ( to the left if a_ i is negative, to the right otherwise) . If a_ i = 0 then this value is unknown and can be replaced with any integer from the range [ - k; k] .",
    "output": "If the dog cannot return to the point 0 after n minutes regardless of the set of integers you place, print - 1. Otherwise, print one integer \u2014 the maximum number of different integer points your dog could visit if you fill all the unknown values optimally and the dog will return to the point 0 at the end of the walk.",
    "note": "",
    "topics": [
      "brute force",
      "greedy",
      "math"
    ],
    "id": "1680D"
  },
  {
    "title": "Minimums and Maximums",
    "url": "https://codeforces.com/problemset/problem/1680/A",
    "history": "An array is beautiful if both of the following two conditions meet: there are at least l_ 1 and at most r_ 1 elements in the array equal to its minimum; there are at least l_ 2 and at most r_ 2 elements in the array equal to its maximum. For example, the array [ 2, 3, 2, 4, 4, 3, 2] has 3 elements equal to its minimum ( 1 - st, 3 - rd and 7 - th) and 2 elements equal to its maximum ( 4 - th and 5 - th) . Another example: the array [ 42, 42, 42] has 3 elements equal to its minimum and 3 elements equal to its maximum. Your task is to calculate the minimum possible number of elements in a beautiful array.",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 5000 ) \u2014 the number of test cases. Each test case consists of one line containing four integers l_ 1 , r_ 1 , l_ 2 and r_ 2 ( 1 \u2264 l_ 1 \u2264 r_ 1 \u2264 50 ; 1 \u2264 l_ 2 \u2264 r_ 2 \u2264 50 ) .",
    "output": "For each test case, print one integer \u2014 the minimum possible number of elements in a beautiful array.",
    "note": "Optimal arrays in the test cases of the example: [ 1, 1, 1, 1] , it has 4 minimums and 4 maximums; [ 4, 4, 4, 4, 4] , it has 5 minimums and 5 maximums; [ 1, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2] , it has 3 minimums and 10 maximums; [ 8, 8, 8] , it has 3 minimums and 3 maximums; [ 4, 6, 6] , it has 1 minimum and 2 maximums; [ 3, 4, 3] , it has 2 minimums and 1 maximum; [ 5, 5, 5, 5, 5, 5] , it has 6 minimums and 6 maximums.",
    "topics": [
      "brute force",
      "math"
    ],
    "id": "1680A"
  },
  {
    "title": "Formalism for Formalism",
    "url": "https://codeforces.com/problemset/problem/1679/F",
    "history": "Yura is a mathematician, and his cognition of the world is so absolute as if he have been solving formal problems a hundred of trillions of billions of years. This problem is just that! Consider all non- negative integers from the interval [ 0, 10^ n) . For convenience we complement all numbers with leading zeros in such way that each number from the given interval consists of exactly n decimal digits. You are given a set of pairs ( u_ i, v_ i) , where u_ i and v_ i are distinct decimal digits from 0 to 9 . Consider a number x consisting of n digits. We will enumerate all digits from left to right and denote them as d_ 1, d_ 2, . . . , d_ n . In one operation you can swap digits d_ i and d_ i + 1 if and only if there is a pair ( u_ j, v_ j) in the set such that at least one of the following conditions is satisfied: d_ i = u_ j and d_ i + 1 = v_ j , d_ i = v_ j and d_ i + 1 = u_ j . We will call the numbers x and y , consisting of n digits, equivalent if the number x can be transformed into the number y using some number of operations described above. In particular, every number is considered equivalent to itself. You are given an integer n and a set of m pairs of digits ( u_ i, v_ i) . You have to find the maximum integer k such that there exists a set of integers x_ 1, x_ 2, . . . , x_ k ( 0 \u2264 x_ i < 10^ n ) such that for each 1 \u2264 i < j \u2264 k the number x_ i is not equivalent to the number x_ j .",
    "input": "The first line contains an integer n ( 1 \u2264 n \u2264 50 000 ) \u2014 the number of digits in considered numbers. The second line contains an integer m ( 0 \u2264 m \u2264 45 ) \u2014 the number of pairs of digits in the set. Each of the following m lines contains two digits u_ i and v_ i , separated with a space ( 0 \u2264 u_ i < v_ i \u2264 9 ) . It' s guaranteed that all described pairs are pairwise distinct.",
    "output": "Print one integer \u2014 the maximum value k such that there exists a set of integers x_ 1, x_ 2, . . . , x_ k ( 0 \u2264 x_ i < 10^ n ) such that for each 1 \u2264 i < j \u2264 k the number x_ i is not equivalent to the number x_ j . As the answer can be big enough, print the number k modulo 998 244 353 .",
    "note": "In the first example we can construct a set that contains all integers from 0 to 9 . It' s easy to see that there are no two equivalent numbers in the set. In the second example there exists a unique pair of equivalent numbers: 01 and 10 . We can construct a set that contains all integers from 0 to 99 despite number 1 .",
    "topics": [
      "bitmasks",
      "dp",
      "math"
    ],
    "id": "1679F"
  },
  {
    "title": "AvtoBus",
    "url": "https://codeforces.com/problemset/problem/1679/A",
    "history": "Spring has come, and the management of the AvtoBus bus fleet has given the order to replace winter tires with summer tires on all buses. You own a small bus service business and you have just received an order to replace n tires. You know that the bus fleet owns two types of buses: with two axles ( these buses have 4 wheels) and with three axles ( these buses have 6 wheels) . You don' t know how many buses of which type the AvtoBus bus fleet owns, so you wonder how many buses the fleet might have. You have to determine the minimum and the maximum number of buses that can be in the fleet if you know that the total number of wheels for all buses is n .",
    "input": "The first line contains an integer t ( 1 \u2264 t \u2264 1 000 ) \u2014 the number of test cases. The following lines contain description of test cases. The only line of each test case contains one integer n ( 1 \u2264 n \u2264 10^ 18 ) \u2014 the total number of wheels for all buses.",
    "output": "For each test case print the answer in a single line using the following format. Print two integers x and y ( 1 \u2264 x \u2264 y ) \u2014 the minimum and the maximum possible number of buses that can be in the bus fleet. If there is no suitable number of buses for the given n , print the number - 1 as the answer.",
    "note": "In the first test case the total number of wheels is 4 . It means that there is the only one bus with two axles in the bus fleet. In the second test case it' s easy to show that there is no suitable number of buses with 7 wheels in total. In the third test case the total number of wheels is 24 . The following options are possible: Four buses with three axles. Three buses with two axles and two buses with three axles. Six buses with two axles. So the minimum number of buses is 4 and the maximum number of buses is 6 .",
    "topics": [
      "brute force",
      "greedy",
      "math",
      "number theory"
    ],
    "id": "1679A"
  },
  {
    "title": "Tokitsukaze and Gems",
    "url": "https://codeforces.com/problemset/problem/1677/F",
    "history": "Tokitsukaze has a sequence with length of n . She likes gems very much. There are n kinds of gems. The gems of the i - th kind are on the i - th position, and there are a_ i gems of the same kind on that position. Define G( l, r) as the multiset containing all gems on the segment [ l, r] ( inclusive) . A multiset of gems can be represented as S= [ s_ 1, s_ 2, . . . , s_ n] , which is a non- negative integer sequence of length n and means that S contains s_ i gems of the i - th kind in the multiset. A multiset T= [ t_ 1, t_ 2, . . . , t_ n] is a multisubset of S= [ s_ 1, s_ 2, . . . , s_ n] if and only if t_ i\u2264 s_ i for any i satisfying 1\u2264 i\u2264 n . Now, given two positive integers k and p , you need to calculate the result of \u2211_ l= 1^ n \u2211_ r= l^ n\u2211_ [ t_ 1, t_ 2, \u22ef, t_ n] \u2286 G( l, r) ( ( \u2211_ i= 1^ n p^ t_ it_ i^ k) ( \u2211_ i= 1^ n[ t_ i> 0] ) ) , where [ t_ i> 0] = 1 if t_ i> 0 and [ t_ i> 0] = 0 if t_ i= 0 . Since the answer can be quite large, print it modulo 998 244 353 .",
    "input": "The first line contains three integers n , k and p ( 1\u2264 n \u2264 10^ 5 ; 1\u2264 k\u2264 10^ 5 ; 2\u2264 p\u2264 998 244 351 ) \u2014 the length of the sequence, the numbers k and p . The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 1\u2264 a_ i\u2264 998 244 351 ) \u2014 the number of gems on the i - th position.",
    "output": "Print a single integers \u2014 the result modulo 998 244 353 .",
    "note": "",
    "topics": [
      "dp",
      "math"
    ],
    "id": "1677F"
  },
  {
    "title": "Tokitsukaze and Permutations",
    "url": "https://codeforces.com/problemset/problem/1677/D",
    "history": "Tokitsukaze has a permutation p . She performed the following operation to p exactly k times: in one operation, for each i from 1 to n - 1 in order, if p_ i > p_ i+ 1 , swap p_ i , p_ i+ 1 . After exactly k times of operations, Tokitsukaze got a new sequence a , obviously the sequence a is also a permutation. After that, Tokitsukaze wrote down the value sequence v of a on paper. Denote the value sequence v of the permutation a of length n as v_ i= \u2211_ j= 1^ i- 1[ a_ i < a_ j] , where the value of [ a_ i < a_ j] define as if a_ i < a_ j , the value is 1 , otherwise is 0 ( in other words, v_ i is equal to the number of elements greater than a_ i that are to the left of position i ) . Then Tokitsukaze went out to work. There are three naughty cats in Tokitsukaze' s house. When she came home, she found the paper with the value sequence v to be bitten out by the cats, leaving several holes, so that the value of some positions could not be seen clearly. She forgot what the original permutation p was. She wants to know how many different permutations p there are, so that the value sequence v of the new permutation a after exactly k operations is the same as the v written on the paper ( not taking into account the unclear positions) . Since the answer may be too large, print it modulo 998 244 353 .",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 1000 ) \u2014 the number of test cases. Each test case consists of two lines. The first line contains two integers n and k ( 1 \u2264 n \u2264 10^ 6 ; 0 \u2264 k \u2264 n- 1 ) \u2014 the length of the permutation and the exactly number of operations. The second line contains n integers v_ 1, v_ 2, . . . , v_ n ( - 1 \u2264 v_ i \u2264 i- 1 ) \u2014 the value sequence v . v_ i = - 1 means the i - th position of v can' t be seen clearly. It is guaranteed that the sum of n over all test cases does not exceed 10^ 6 .",
    "output": "For each test case, print a single integer \u2014 the number of different permutations modulo 998 244 353 .",
    "note": "In the first test case, only permutation p= [ 5, 4, 3, 2, 1] satisfies the constraint condition. In the second test case, there are 6 permutations satisfying the constraint condition, which are: [ 3, 4, 5, 2, 1] \u2192 [ 3, 4, 2, 1, 5] \u2192 [ 3, 2, 1, 4, 5] [ 3, 5, 4, 2, 1] \u2192 [ 3, 4, 2, 1, 5] \u2192 [ 3, 2, 1, 4, 5] [ 4, 3, 5, 2, 1] \u2192 [ 3, 4, 2, 1, 5] \u2192 [ 3, 2, 1, 4, 5] [ 4, 5, 3, 2, 1] \u2192 [ 4, 3, 2, 1, 5] \u2192 [ 3, 2, 1, 4, 5] [ 5, 3, 4, 2, 1] \u2192 [ 3, 4, 2, 1, 5] \u2192 [ 3, 2, 1, 4, 5] [ 5, 4, 3, 2, 1] \u2192 [ 4, 3, 2, 1, 5] \u2192 [ 3, 2, 1, 4, 5] So after exactly 2 times of swap they will all become a= [ 3, 2, 1, 4, 5] , whose value sequence is v= [ 0, 1, 2, 0, 0] .",
    "topics": [
      "dp",
      "math"
    ],
    "id": "1677D"
  },
  {
    "title": "Tokitsukaze and Meeting",
    "url": "https://codeforces.com/problemset/problem/1677/B",
    "history": "Tokitsukaze is arranging a meeting. There are n rows and m columns of seats in the meeting hall. There are exactly n \u00b7 m students attending the meeting, including several naughty students and several serious students. The students are numerated from 1 to n\u00b7 m . The students will enter the meeting hall in order. When the i - th student enters the meeting hall, he will sit in the 1 - st column of the 1 - st row, and the students who are already seated will move back one seat. Specifically, the student sitting in the j - th ( 1\u2264 j \u2264 m- 1 ) column of the i - th row will move to the ( j+ 1) - th column of the i - th row, and the student sitting in m - th column of the i - th row will move to the 1 - st column of the ( i+ 1) - th row. For example, there is a meeting hall with 2 rows and 2 columns of seats shown as below: There will be 4 students entering the meeting hall in order, represented as a binary string \" 1100\" , of which ' 0' represents naughty students and ' 1' represents serious students. The changes of seats in the meeting hall are as follows: Denote a row or a column good if and only if there is at least one serious student in this row or column. Please predict the number of good rows and columns just after the i - th student enters the meeting hall, for all i .",
    "input": "The first contains a single positive integer t ( 1 \u2264 t \u2264 10 000 ) \u2014 the number of test cases. For each test case, the first line contains two integers n , m ( 1 \u2264 n, m \u2264 10^ 6 ; 1 \u2264 n \u00b7 m \u2264 10^ 6 ) , denoting there are n rows and m columns of seats in the meeting hall. The second line contains a binary string s of length n \u00b7 m , consisting only of zeros and ones. If s_ i equal to ' 0' represents the i - th student is a naughty student, and s_ i equal to ' 1' represents the i - th student is a serious student. It is guaranteed that the sum of n \u00b7 m over all test cases does not exceed 10^ 6 .",
    "output": "For each test case, print a single line with n \u00b7 m integers \u2014 the number of good rows and columns just after the i - th student enters the meeting hall.",
    "note": "The first test case is shown in the statement. After the 1 - st student enters the meeting hall, there are 2 good rows and columns: the 1 - st row and the 1 - st column. After the 2 - nd student enters the meeting hall, there are 3 good rows and columns: the 1 - st row, the 1 - st column and the 2 - nd column. After the 3 - rd student enters the meeting hall, the 4 rows and columns are all good. After the 4 - th student enters the meeting hall, there are 3 good rows and columns: the 2 - nd row, the 1 - st column and the 2 - nd column.",
    "topics": [
      "data structures",
      "implementation",
      "math"
    ],
    "id": "1677B"
  },
  {
    "title": "Most Similar Words",
    "url": "https://codeforces.com/problemset/problem/1676/C",
    "history": "You are given n words of equal length m , consisting of lowercase Latin alphabet letters. The i - th word is denoted s_ i . In one move you can choose any position in any single word and change the letter at that position to the previous or next letter in alphabetical order. For example: you can change ' e' to ' d' or to ' f' ; ' a' can only be changed to ' b' ; ' z' can only be changed to ' y' . The difference between two words is the minimum number of moves required to make them equal. For example, the difference between \" best\" and \" cost\" is 1 + 10 + 0 + 0 = 11 . Find the minimum difference of s_ i and s_ j such that ( i < j) . In other words, find the minimum difference over all possible pairs of the n words.",
    "input": "The first line of the input contains a single integer t ( 1 \u2264 t \u2264 100 ) \u2014 the number of test cases. The description of test cases follows. The first line of each test case contains 2 integers n and m ( 2 \u2264 n \u2264 50 , 1 \u2264 m \u2264 8 ) \u2014 the number of strings and their length respectively. Then follows n lines, the i - th of which containing a single string s_ i of length m , consisting of lowercase Latin letters.",
    "output": "For each test case, print a single integer \u2014 the minimum difference over all possible pairs of the given strings.",
    "note": "For the second test case, one can show that the best pair is ( \" abb\" , \" bef\" ) , which has difference equal to 8 , which can be obtained in the following way: change the first character of the first string to ' b' in one move, change the second character of the second string to ' b' in 3 moves and change the third character of the second string to ' b' in 4 moves, thus making in total 1 + 3 + 4 = 8 moves. For the third test case, there is only one possible pair and it can be shown that the minimum amount of moves necessary to make the strings equal is 35 . For the fourth test case, there is a pair of strings which is already equal, so the answer is 0 .",
    "topics": [
      "brute force",
      "greedy",
      "implementation",
      "implementation",
      "math",
      "strings"
    ],
    "id": "1676C"
  },
  {
    "title": "Equal Candies",
    "url": "https://codeforces.com/problemset/problem/1676/B",
    "history": "There are n boxes with different quantities of candies in each of them. The i - th box has a_ i candies inside. You also have n friends that you want to give the candies to, so you decided to give each friend a box of candies. But, you don' t want any friends to get upset so you decided to eat some ( possibly none) candies from each box so that all boxes have the same quantity of candies in them. Note that you may eat a different number of candies from different boxes and you cannot add candies to any of the boxes. What' s the minimum total number of candies you have to eat to satisfy the requirements?",
    "input": "The first line contains an integer t ( 1 \u2264 t \u2264 1000 ) \u2014 the number of test cases. The first line of each test case contains an integer n ( 1 \u2264 n \u2264 50 ) \u2014 the number of boxes you have. The second line of each test case contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 7 ) \u2014 the quantity of candies in each box.",
    "output": "For each test case, print a single integer denoting the minimum number of candies you have to eat to satisfy the requirements.",
    "note": "For the first test case, you can eat 1 candy from the second box, 2 candies from the third box, 3 candies from the fourth box and 4 candies from the fifth box. Now the boxes have [ 1, 1, 1, 1, 1] candies in them and you ate 0 + 1 + 2 + 3 + 4 = 10 candies in total so the answer is 10 . For the second test case, the best answer is obtained by making all boxes contain 5 candies in them, thus eating 995 + 995 + 0 + 995 + 995 + 995 = 4975 candies in total.",
    "topics": [
      "greedy",
      "math",
      "sortings"
    ],
    "id": "1676B"
  },
  {
    "title": "Food for Animals",
    "url": "https://codeforces.com/problemset/problem/1675/A",
    "history": "In the pet store on sale there are: a packs of dog food; b packs of cat food; c packs of universal food ( such food is suitable for both dogs and cats) . Polycarp has x dogs and y cats. Is it possible that he will be able to buy food for all his animals in the store? Each of his dogs and each of his cats should receive one pack of suitable food for it.",
    "input": "The first line of input contains an integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases in the input. Then t lines are given, each containing a description of one test case. Each description consists of five integers a, b, c, x and y ( 0 \u2264 a, b, c, x, y \u2264 10^ 8 ) .",
    "output": "For each test case in a separate line, output: YES, if suitable food can be bought for each of x dogs and for each of y cats; NO else. You can output YES and NO in any case ( for example, strings yEs, yes, Yes and YES will be recognized as a positive response) .",
    "note": "",
    "topics": [
      "greedy",
      "math"
    ],
    "id": "1675A"
  },
  {
    "title": "Breaking the Wall",
    "url": "https://codeforces.com/problemset/problem/1674/E",
    "history": "Monocarp plays \" Rage of Empires II: Definitive Edition\" \u2014 a strategic computer game. Right now he' s planning to attack his opponent in the game, but Monocarp' s forces cannot enter the opponent' s territory since the opponent has built a wall. The wall consists of n sections, aligned in a row. The i - th section initially has durability a_ i . If durability of some section becomes 0 or less, this section is considered broken. To attack the opponent, Monocarp needs to break at least two sections of the wall ( any two sections: possibly adjacent, possibly not) . To do this, he plans to use an onager \u2014 a special siege weapon. The onager can be used to shoot any section of the wall; the shot deals 2 damage to the target section and 1 damage to adjacent sections. In other words, if the onager shoots at the section x , then the durability of the section x decreases by 2 , and the durability of the sections x - 1 and x + 1 ( if they exist) decreases by 1 each. Monocarp can shoot at any sections any number of times, he can even shoot at broken sections. Monocarp wants to calculate the minimum number of onager shots needed to break at least two sections. Help him!",
    "input": "The first line contains one integer n ( 2 \u2264 n \u2264 2 \u00b7 10^ 5 ) \u2014 the number of sections. The second line contains the sequence of integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 6 ) , where a_ i is the initial durability of the i - th section.",
    "output": "Print one integer \u2014 the minimum number of onager shots needed to break at least two sections of the wall.",
    "note": "In the first example, it is possible to break the 2 - nd and the 4 - th section in 10 shots, for example, by shooting the third section 10 times. After that, the durabilities become [ 20, 0, 10, 0, 20] . Another way of doing it is firing 5 shots at the 2 - nd section, and another 5 shots at the 4 - th section. After that, the durabilities become [ 15, 0, 20, 0, 15] . In the second example, it is enough to shoot the 2 - nd section once. Then the 1 - st and the 3 - rd section will be broken. In the third example, it is enough to shoot the 2 - nd section twice ( then the durabilities become [ 5, 2, 4, 8, 5, 8] ) , and then shoot the 3 - rd section twice ( then the durabilities become [ 5, 0, 0, 6, 5, 8] ) . So, four shots are enough to break the 2 - nd and the 3 - rd section.",
    "topics": [
      "binary search",
      "brute force",
      "constructive algorithms",
      "greedy",
      "math"
    ],
    "id": "1674E"
  },
  {
    "title": "Dictionary",
    "url": "https://codeforces.com/problemset/problem/1674/B",
    "history": "The Berland language consists of words having exactly two letters. Moreover, the first letter of a word is different from the second letter. Any combination of two different Berland letters ( which, by the way, are the same as the lowercase letters of Latin alphabet) is a correct word in Berland language. The Berland dictionary contains all words of this language. The words are listed in a way they are usually ordered in dictionaries. Formally, word a comes earlier than word b in the dictionary if one of the following conditions hold: the first letter of a is less than the first letter of b ; the first letters of a and b are the same, and the second letter of a is less than the second letter of b . So, the dictionary looks like that: Word 1 : ab Word 2 : ac . . . Word 25 : az Word 26 : ba Word 27 : bc . . . Word 649 : zx Word 650 : zy You are given a word s from the Berland language. Your task is to find its index in the dictionary.",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 650 ) \u2014 the number of test cases. Each test case consists of one line containing s \u2014 a string consisting of exactly two different lowercase Latin letters ( i. e. a correct word of the Berland language) .",
    "output": "For each test case, print one integer \u2014 the index of the word s in the dictionary.",
    "note": "",
    "topics": [
      "combinatorics",
      "math"
    ],
    "id": "1674B"
  },
  {
    "title": "Number Transformation",
    "url": "https://codeforces.com/problemset/problem/1674/A",
    "history": "You are given two integers x and y . You want to choose two strictly positive ( greater than zero) integers a and b , and then apply the following operation to x exactly a times: replace x with b \u00b7 x . You want to find two positive integers a and b such that x becomes equal to y after this process. If there are multiple possible pairs, you can choose any of them. If there is no such pair, report it. For example: if x = 3 and y = 75 , you may choose a = 2 and b = 5 , so that x becomes equal to 3 \u00b7 5 \u00b7 5 = 75 ; if x = 100 and y = 100 , you may choose a = 3 and b = 1 , so that x becomes equal to 100 \u00b7 1 \u00b7 1 \u00b7 1 = 100 ; if x = 42 and y = 13 , there is no answer since you cannot decrease x with the given operations.",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. Each test case consists of one line containing two integers x and y ( 1 \u2264 x, y \u2264 100 ) .",
    "output": "If it is possible to choose a pair of positive integers a and b so that x becomes y after the aforementioned process, print these two integers. The integers you print should be not less than 1 and not greater than 10^ 9 ( it can be shown that if the answer exists, there is a pair of integers a and b meeting these constraints) . If there are multiple such pairs, print any of them. If it is impossible to choose a pair of integers a and b so that x becomes y , print the integer 0 twice.",
    "note": "",
    "topics": [
      "constructive algorithms",
      "math"
    ],
    "id": "1674A"
  },
  {
    "title": "Anti-Theft Road Planning",
    "url": "https://codeforces.com/problemset/problem/1673/F",
    "history": "This is an interactive problem. A city has n^ 2 buildings divided into a grid of n rows and n columns. You need to build a road of some length D( A, B) of your choice between each pair of adjacent by side buildings A and B . Due to budget limitations and legal restrictions, the length of each road must be a positive integer and the total length of all roads should not exceed 48 000 . There is a thief in the city who will start from the topmost, leftmost building ( in the first row and the first column) and roam around the city, occasionally stealing artifacts from some of the buildings. He can move from one building to another adjacent building by travelling through the road which connects them. You are unable to track down what buildings he visits and what path he follows to reach them. But there is one tracking mechanism in the city. The tracker is capable of storing a single integer x which is initially 0 . Each time the thief travels from a building A to another adjacent building B through a road of length D( A, B) , the tracker changes x to x\u2295 D( A, B) . Each time the thief steals from a building, the tracker reports the value x stored in it and resets it back to 0 . It is known beforehand that the thief will steal in exactly k buildings but you will know the values returned by the tracker only after the thefts actually happen. Your task is to choose the lengths of roads in such a way that no matter what strategy or routes the thief follows, you will be able to exactly tell the location of all the buildings where the thefts occurred from the values returned by the tracker. InteractionFirst read a single line containing two integers n ( 2\u2264 n\u2264 32) and k ( 1\u2264 k\u2264 1024) denoting the number of rows and number of thefts respectively. Let' s denote the j - th building in the i - th row by B_ i, j . Then print n lines each containing n- 1 integers. The j - th integer of the i - th line must be the value of D( B_ i, j, B_ i, j+ 1) . Then print n- 1 lines each containing n integers. The j - th integer of the i - th line must be the value of D( B_ i, j, B_ i+ 1, j) . Remember that the total length of the roads must not exceed 48 000 . Then answer k queries. First read the value x returned by the tracker. Then print two integers denoting the row number and column number of the building where the theft occurred. After that you will be able to answer the next query ( if such exists) . After printing the answers do not forget to output end of line and flush the output buffer. Otherwise you will get the verdict Idleness limit exceeded. To flush the buffer, use: fflush( stdout) or cout. flush( ) in C+ + ; System. out. flush( ) in Java; flush( output) in Pascal; stdout. flush( ) in Python; Read documentation for other languages. HacksYou cannot make hacks in this problem.",
    "input": "",
    "output": "",
    "note": "For the sample test, n= 2 and k= 4 . You choose to build the roads of the following lengths: The thief follows the following strategy: Start at B_ 1, 1 . Move Right to B_ 1, 2 . Move Down to B_ 2, 2 . Move Left to B_ 2, 1 . Move Up to B_ 1, 1 . Move Right to B_ 1, 2 . Steal from B_ 1, 2 . Move Left to B_ 1, 1 . Steal from B_ 1, 1 . Move Down to B_ 2, 1 . Move Right to B_ 2, 2 . Move Up to B_ 1, 2 . Steal from B_ 1, 2 . Move Left to B_ 1, 1 . Move Down to B_ 2, 1 . Steal from B_ 2, 1 . The tracker responds in the following way: Initialize x= 0 . Change x to x\u2295 1= 0\u22951= 1 . Change x to x\u2295 4= 1\u22954= 5 . Change x to x\u2295 8= 5\u22958= 13 . Change x to x\u2295 2= 13\u22952= 15 . Change x to x\u2295 1= 15\u22951= 14 . Return x= 14 and re- initialize x= 0 . Change x to x\u2295 1= 0\u22951= 1 . Return x= 1 and re- initialize x= 0 . Change x to x\u2295 2= 0\u22952= 2 . Change x to x\u2295 8= 2\u22958= 10 . Change x to x\u2295 4= 10\u22954= 14 . Return x= 14 and re- initialize x= 0 . Change x to x\u2295 1= 0\u22951= 1 . Change x to x\u2295 2= 1\u22952= 3 . Return x= 3 and re- initialize x= 0 .",
    "topics": [
      "bitmasks",
      "constructive algorithms",
      "divide and conquer",
      "greedy",
      "interactive",
      "math"
    ],
    "id": "1673F"
  },
  {
    "title": "Power or XOR?",
    "url": "https://codeforces.com/problemset/problem/1673/E",
    "history": "The symbol \u2227 is quite ambiguous, especially when used without context. Sometimes it is used to denote a power ( a\u2227 b = a^ b ) and sometimes it is used to denote the XOR operation ( a\u2227 b= a\u2295 b ) . You have an ambiguous expression E= A_ 1\u2227 A_ 2\u2227 A_ 3\u2227. . . \u2227 A_ n . You can replace each \u2227 symbol with either a operation or a operation to get an unambiguous expression E' . The value of this expression E' is determined according to the following rules: All operations are performed before any operation. In other words, the operation takes precedence over operation. For example, 4 6 2= 4\u2295 ( 6^ 2) = 4\u2295 36= 32 . Consecutive powers are calculated from left to right. For example, 2 3 4 = ( 2^ 3) ^ 4 = 8^ 4 = 4096 . You are given an array B of length n and an integer k . The array A is given by A_ i= 2^ B_ i and the expression E is given by E= A_ 1\u2227 A_ 2\u2227 A_ 3\u2227. . . \u2227 A_ n . You need to find the XOR of the values of all possible unambiguous expressions E' which can be obtained from E and has at least k \u2227 symbols used as operation. Since the answer can be very large, you need to find it modulo 2^ 2^ 20 . Since this number can also be very large, you need to print its binary representation without leading zeroes. If the answer is equal to 0 , print 0 .",
    "input": "The first line of input contains two integers n and k ( 1\u2264 n\u2264 2^ 20, 0\u2264 k < n) . The second line of input contains n integers B_ 1, B_ 2, . . . , B_ n ( 1\u2264 B_ i < 2^ 20) .",
    "output": "Print a single line containing a binary string without leading zeroes denoting the answer to the problem. If the answer is equal to 0 , print 0 .",
    "note": "For each of the testcases 1 to 3 , A = { 2^ 3, 2^ 1, 2^ 2} = { 8, 2, 4} and E= 8\u2227 2\u2227 4 . For the first testcase, there is only one possible valid unambiguous expression E' = 8\u2295 2\u2295 4 = 14 = ( 1110) _ 2 . For the second testcase, there are three possible valid unambiguous expressions E' : 8\u2295 2\u2295 4 = 14 8^ 2\u2295 4 = 64\u2295 4= 68 8\u2295 2^ 4 = 8\u2295 16= 24 XOR of the values of all of these is 14\u2295 68\u2295 24 = 82 = ( 1010010) _ 2 . For the third testcase, there are four possible valid unambiguous expressions E' : 8\u2295 2\u2295 4 = 14 8^ 2\u2295 4 = 64\u2295 4= 68 8\u2295 2^ 4 = 8\u2295 16= 24 ( 8^ 2) ^ 4 = 64^ 4 = 2^ 24 = 16777216 XOR of the values of all of these is 14\u2295 68\u2295 24\u2295 16777216 = 16777298 = ( 1000000000000000001010010) _ 2 . For the fourth testcase, A= { 2, 2} and E= 2\u2227 2 . The only possible valid unambiguous expression E' = 2\u2295 2 = 0 = ( 0) _ 2 .",
    "topics": [
      "bitmasks",
      "combinatorics",
      "math",
      "number theory"
    ],
    "id": "1673E"
  },
  {
    "title": "Lost Arithmetic Progression",
    "url": "https://codeforces.com/problemset/problem/1673/D",
    "history": "Long ago, you thought of two finite arithmetic progressions A and B . Then you found out another sequence C containing all elements common to both A and B . It is not hard to see that C is also a finite arithmetic progression. After many years, you forgot what A was but remember B and C . You are, for some reason, determined to find this lost arithmetic progression. Before you begin this eternal search, you want to know how many different finite arithmetic progressions exist which can be your lost progression A . Two arithmetic progressions are considered different if they differ in their first term, common difference or number of terms. It may be possible that there are infinitely many such progressions, in which case you won' t even try to look for them! Print - 1 in all such cases. Even if there are finite number of them, the answer might be very large. So, you are only interested to find the answer modulo 10^ 9+ 7 .",
    "input": "The first line of input contains a single integer t ( 1\u2264 t\u2264 100 ) denoting the number of testcases. The first line of each testcase contains three integers b , q and y ( - 10^ 9\u2264 b\u2264 10^ 9 , 1\u2264 q\u2264 10^ 9 , 2\u2264 y\u2264 10^ 9 ) denoting the first term, common difference and number of terms of B respectively. The second line of each testcase contains three integers c , r and z ( - 10^ 9\u2264 c\u2264 10^ 9 , 1\u2264 r\u2264 10^ 9 , 2\u2264 z\u2264 10^ 9 ) denoting the first term, common difference and number of terms of C respectively.",
    "output": "For each testcase, print a single line containing a single integer. If there are infinitely many finite arithmetic progressions which could be your lost progression A , print - 1 . Otherwise, print the number of finite arithmetic progressions which could be your lost progression A modulo 10^ 9+ 7 . In particular, if there are no such finite arithmetic progressions, print 0 .",
    "note": "For the first testcase, B= { - 3, - 2, - 1, 0, 1, 2, 3} and C= { - 1, 1, 3, 5} . There is no such arithmetic progression which can be equal to A because 5 is not present in B and for any A , 5 should not be present in C also. For the second testcase, B= { - 9, - 6, - 3, 0, 3, 6, 9, 12, 15, 18, 21} and C= { 0, 6, 12} . There are 10 possible arithmetic progressions which can be A : { 0, 6, 12} { 0, 2, 4, 6, 8, 10, 12} { 0, 2, 4, 6, 8, 10, 12, 14} { 0, 2, 4, 6, 8, 10, 12, 14, 16} { - 2, 0, 2, 4, 6, 8, 10, 12} { - 2, 0, 2, 4, 6, 8, 10, 12, 14} { - 2, 0, 2, 4, 6, 8, 10, 12, 14, 16} { - 4, - 2, 0, 2, 4, 6, 8, 10, 12} { - 4, - 2, 0, 2, 4, 6, 8, 10, 12, 14} { - 4, - 2, 0, 2, 4, 6, 8, 10, 12, 14, 16} For the third testcase, B= { 2, 7, 12, 17, 22} and C= { 7, 12, 17, 22} . There are infinitely many arithmetic progressions which can be A like: { 7, 12, 17, 22} { 7, 12, 17, 22, 27} { 7, 12, 17, 22, 27, 32} { 7, 12, 17, 22, 27, 32, 37} { 7, 12, 17, 22, 27, 32, 37, 42} . . .",
    "topics": [
      "combinatorics",
      "math",
      "number theory"
    ],
    "id": "1673D"
  },
  {
    "title": "Palindrome Basis",
    "url": "https://codeforces.com/problemset/problem/1673/C",
    "history": "You are given a positive integer n . Let' s call some positive integer a without leading zeroes palindromic if it remains the same after reversing the order of its digits. Find the number of distinct ways to express n as a sum of positive palindromic integers. Two ways are considered different if the frequency of at least one palindromic integer is different in them. For example, 5= 4+ 1 and 5= 3+ 1+ 1 are considered different but 5= 3+ 1+ 1 and 5= 1+ 3+ 1 are considered the same. Formally, you need to find the number of distinct multisets of positive palindromic integers the sum of which is equal to n . Since the answer can be quite large, print it modulo 10^ 9+ 7 .",
    "input": "The first line of input contains a single integer t ( 1\u2264 t\u2264 10^ 4 ) denoting the number of testcases. Each testcase contains a single line of input containing a single integer n ( 1\u2264 n\u2264 4\u00b7 10^ 4 ) \u2014 the required sum of palindromic integers.",
    "output": "For each testcase, print a single integer denoting the required answer modulo 10^ 9+ 7 .",
    "note": "For the first testcase, there are 7 ways to partition 5 as a sum of positive palindromic integers: 5= 1+ 1+ 1+ 1+ 1 5= 1+ 1+ 1+ 2 5= 1+ 2+ 2 5= 1+ 1+ 3 5= 2+ 3 5= 1+ 4 5= 5 For the second testcase, there are total 77 ways to partition 12 as a sum of positive integers but among them, the partitions 12= 2+ 10 , 12= 1+ 1+ 10 and 12= 12 are not valid partitions of 12 as a sum of positive palindromic integers because 10 and 12 are not palindromic. So, there are 74 ways to partition 12 as a sum of positive palindromic integers.",
    "topics": [
      "brute force",
      "dp",
      "math",
      "number theory"
    ],
    "id": "1673C"
  },
  {
    "title": "Cross Xor",
    "url": "https://codeforces.com/problemset/problem/1672/G",
    "history": "There is a grid with r rows and c columns, where the square on the i - th row and j - th column has an integer a_ i, j written on it. Initially, all elements are set to 0 . We are allowed to do the following operation: Choose indices 1 \u2264 i \u2264 r and 1 \u2264 j \u2264 c , then replace all values on the same row or column as ( i, j) with the value xor 1 . In other words, for all a_ x, y where x= i or y= j or both, replace a_ x, y with a_ x, y xor 1 . You want to form grid b by doing the above operations a finite number of times. However, some elements of b are missing and are replaced with ' ? ' instead. Let k be the number of ' ? ' characters. Among all the 2^ k ways of filling up the grid b by replacing each ' ? ' with ' 0' or ' 1' , count the number of grids, that can be formed by doing the above operation a finite number of times, starting from the grid filled with 0 . As this number can be large, output it modulo 998244353 .",
    "input": "The first line contains two integers r and c ( 1 \u2264 r, c \u2264 2000 ) \u2014 the number of rows and columns of the grid respectively. The i - th of the next r lines contain c characters b_ i, 1, b_ i, 2, . . . , b_ i, c ( b_ i, j\u2208{ 0, 1, ? } ) .",
    "output": "Print a single integer representing the number of ways to fill up grid b modulo 998244353 .",
    "note": "In the first test case, the only way to fill in the s is to fill it in as such: 010111010 This can be accomplished by doing a single operation by choosing ( i, j) = ( 2, 2) . In the second test case, it can be shown that there is no sequence of operations that can produce that grid.",
    "topics": [
      "constructive algorithms",
      "graphs",
      "math",
      "matrices"
    ],
    "id": "1672G"
  },
  {
    "title": "Log Chopping",
    "url": "https://codeforces.com/problemset/problem/1672/A",
    "history": "There are n logs, the i - th log has a length of a_ i meters. Since chopping logs is tiring work, errorgorn and maomao90 have decided to play a game. errorgorn and maomao90 will take turns chopping the logs with errorgorn chopping first. On his turn, the player will pick a log and chop it into 2 pieces. If the length of the chosen log is x , and the lengths of the resulting pieces are y and z , then y and z have to be positive integers, and x= y+ z must hold. For example, you can chop a log of length 3 into logs of lengths 2 and 1 , but not into logs of lengths 3 and 0 , 2 and 2 , or 1. 5 and 1. 5 . The player who is unable to make a chop will be the loser. Assuming that both errorgorn and maomao90 play optimally, who will be the winner?",
    "input": "Each test contains multiple test cases. The first line contains a single integer t ( 1 \u2264 t \u2264 100 ) \u2014 the number of test cases. The description of the test cases follows. The first line of each test case contains a single integer n ( 1 \u2264 n \u2264 50 ) \u2014 the number of logs. The second line of each test case contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 50 ) \u2014 the lengths of the logs. Note that there is no bound on the sum of n over all test cases.",
    "output": "For each test case, print \" errorgorn\" if errorgorn wins or \" maomao90\" if maomao90 wins. ( Output without quotes) .",
    "note": "In the first test case, errorgorn will be the winner. An optimal move is to chop the log of length 4 into 2 logs of length 2 . After this there will only be 4 logs of length 2 and 1 log of length 1 . After this, the only move any player can do is to chop any log of length 2 into 2 logs of length 1 . After 4 moves, it will be maomao90' s turn and he will not be able to make a move. Therefore errorgorn will be the winner. In the second test case, errorgorn will not be able to make a move on his first turn and will immediately lose, making maomao90 the winner.",
    "topics": [
      "games",
      "implementation",
      "math"
    ],
    "id": "1672A"
  },
  {
    "title": "Permutation Counting",
    "url": "https://codeforces.com/problemset/problem/1671/F",
    "history": "Calculate the number of permutations p of size n with exactly k inversions ( pairs of indices ( i, j) such that i < j and p_ i > p_ j ) and exactly x indices i such that p_ i > p_ i+ 1 . Yep, that' s the whole problem. Good luck!",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 3 \u00b7 10^ 4 ) \u2014 the number of test cases. Each test case consists of one line which contains three integers n , k and x ( 1 \u2264 n \u2264 998244352 ; 1 \u2264 k \u2264 11 ; 1 \u2264 x \u2264 11 ) .",
    "output": "For each test case, print one integer \u2014 the answer to the problem, taken modulo 998244353 .",
    "note": "",
    "topics": [
      "brute force",
      "combinatorics",
      "dp",
      "fft",
      "math"
    ],
    "id": "1671F"
  },
  {
    "title": "Dolce Vita",
    "url": "https://codeforces.com/problemset/problem/1671/C",
    "history": "Turbulent times are coming, so you decided to buy sugar in advance. There are n shops around that sell sugar: the i - th shop sells one pack of sugar for a_ i coins, but only one pack to one customer each day. So in order to buy several packs, you need to visit several shops. Another problem is that prices are increasing each day: during the first day the cost is a_ i , during the second day cost is a_ i + 1 , during the third day \u2014 a_ i + 2 and so on for each shop i . On the contrary, your everyday budget is only x coins. In other words, each day you go and buy as many packs as possible with total cost not exceeding x . Note that if you don' t spend some amount of coins during a day, you can' t use these coins during the next days. Eventually, the cost for each pack will exceed x , and you won' t be able to buy even a single pack. So, how many packs will you be able to buy till that moment in total?",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 1000 ) \u2014 the number of test cases. Next t cases follow. The first line of each test case contains two integers n and x ( 1 \u2264 n \u2264 2 \u00b7 10^ 5 ; 1 \u2264 x \u2264 10^ 9 ) \u2014 the number of shops and your everyday budget. The second line of each test case contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 9 ) \u2014 the initial cost of one pack in each shop. It' s guaranteed that the total sum of n doesn' t exceed 2 \u00b7 10^ 5 .",
    "output": "For each test case, print one integer \u2014 the total number of packs you will be able to buy until prices exceed your everyday budget.",
    "note": "In the first test case, Day 1: prices are [ 2, 1, 2] . You can buy all 3 packs, since 2 + 1 + 2 \u2264 7 . Day 2: prices are [ 3, 2, 3] . You can' t buy all 3 packs, since 3 + 2 + 3 > 7 , so you buy only 2 packs. Day 3: prices are [ 4, 3, 4] . You can buy 2 packs with prices 4 and 3 . Day 4: prices are [ 5, 4, 5] . You can' t buy 2 packs anymore, so you buy only 1 pack. Day 5: prices are [ 6, 5, 6] . You can buy 1 pack. Day 6: prices are [ 7, 6, 7] . You can buy 1 pack. Day 7: prices are [ 8, 7, 8] . You still can buy 1 pack of cost 7 . Day 8: prices are [ 9, 8, 9] . Prices are too high, so you can' t buy anything. In total, you bought 3 + 2 + 2 + 1 + 1 + 1 + 1 = 11 packs. In the second test case, prices are too high even at the first day, so you can' t buy anything. In the third test case, you can buy only one pack at day one. In the fourth test case, you can buy 2 packs first 500 days. At day 501 prices are [ 501, 501] , so you can buy only 1 pack the next 500 days. At day 1001 prices are [ 1001, 1001] so can' t buy anymore. In total, you bought 500 \u00b7 2 + 500 \u00b7 1 = 1500 packs.",
    "topics": [
      "binary search",
      "brute force",
      "greedy",
      "math"
    ],
    "id": "1671C"
  },
  {
    "title": "Consecutive Points Segment",
    "url": "https://codeforces.com/problemset/problem/1671/B",
    "history": "You are given n points with integer coordinates on a coordinate axis OX . The coordinate of the i - th point is x_ i . All points' coordinates are distinct and given in strictly increasing order. For each point i , you can do the following operation no more than once: take this point and move it by 1 to the left or to the right ( i. . e. , you can change its coordinate x_ i to x_ i - 1 or to x_ i + 1 ) . In other words, for each point, you choose ( separately) its new coordinate. For the i - th point, it can be either x_ i - 1 , x_ i or x_ i + 1 . Your task is to determine if you can move some points as described above in such a way that the new set of points forms a consecutive segment of integers, i. e. for some integer l the coordinates of points should be equal to l, l + 1, . . . , l + n - 1 . Note that the resulting points should have distinct coordinates. You have to answer t independent test cases.",
    "input": "The first line of the input contains one integer t ( 1 \u2264 t \u2264 2 \u00b7 10^ 4 ) \u2014 the number of test cases. Then t test cases follow. The first line of the test case contains one integer n ( 1 \u2264 n \u2264 2 \u00b7 10^ 5 ) \u2014 the number of points in the set x . The second line of the test case contains n integers x_ 1 < x_ 2 < . . . < x_ n ( 1 \u2264 x_ i \u2264 10^ 6 ) , where x_ i is the coordinate of the i - th point. It is guaranteed that the points are given in strictly increasing order ( this also means that all coordinates are distinct) . It is also guaranteed that the sum of n does not exceed 2 \u00b7 10^ 5 ( \u2211 n \u2264 2 \u00b7 10^ 5 ) .",
    "output": "For each test case, print the answer \u2014 if the set of points from the test case can be moved to form a consecutive segment of integers, print YES, otherwise print NO.",
    "note": "",
    "topics": [
      "brute force",
      "math",
      "sortings"
    ],
    "id": "1671B"
  },
  {
    "title": "Very Suspicious",
    "url": "https://codeforces.com/problemset/problem/1670/D",
    "history": "Sehr Sus is an infinite hexagonal grid as pictured below, controlled by MennaFadali, ZerooCool and Hosssam. They love equilateral triangles and want to create n equilateral triangles on the grid by adding some straight lines. The triangles must all be empty from the inside ( in other words, no straight line or hexagon edge should pass through any of the triangles) . You are allowed to add straight lines parallel to the edges of the hexagons. Given n , what is the minimum number of lines you need to add to create at least n equilateral triangles as described? Adding two red lines results in two new yellow equilateral triangles.",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 5 ) \u2014 the number of test cases. Then t test cases follow. Each test case contains a single integer n ( 1 \u2264 n \u2264 10^ 9 ) \u2014 the required number of equilateral triangles.",
    "output": "For each test case, print the minimum number of lines needed to have n or more equilateral triangles.",
    "note": "In the first and second test cases only 2 lines are needed. After adding the first line, no equilateral triangles will be created no matter where it is added. But after adding the second line, two more triangles will be created at once. In the third test case, the minimum needed is 3 lines as shown below.",
    "topics": [
      "binary search",
      "brute force",
      "geometry",
      "greedy",
      "implementation",
      "math"
    ],
    "id": "1670D"
  },
  {
    "title": "Where is the Pizza?",
    "url": "https://codeforces.com/problemset/problem/1670/C",
    "history": "While searching for the pizza, baby Hosssam came across two permutations a and b of length n . Recall that a permutation is an array consisting of n distinct integers from 1 to n in arbitrary order. For example, [ 2, 3, 1, 5, 4] is a permutation, but [ 1, 2, 2] is not a permutation ( 2 appears twice in the array) and [ 1, 3, 4] is also not a permutation ( n= 3 but there is 4 in the array) . Baby Hosssam forgot about the pizza and started playing around with the two permutations. While he was playing with them, some elements of the first permutation got mixed up with some elements of the second permutation, and to his surprise those elements also formed a permutation of size n . Specifically, he mixed up the permutations to form a new array c in the following way. For each i ( 1\u2264 i\u2264 n ) , he either made c_ i= a_ i or c_ i= b_ i . The array c is a permutation. You know permutations a , b , and values at some positions in c . Please count the number different permutations c that are consistent with the described process and the given values. Since the answer can be large, print it modulo 10^ 9+ 7 . It is guaranteed that there exists at least one permutation c that satisfies all the requirements.",
    "input": "The first line contains an integer t ( 1 \u2264 t \u2264 10^ 5 ) \u2014 the number of test cases. The first line of each test case contains a single integer n ( 1\u2264 n\u2264 10^ 5 ) \u2014 the length of the permutations. The next line contains n distinct integers a_ 1, a_ 2, . . . , a_ n ( 1\u2264 a_ i\u2264 n ) \u2014 the first permutation. The next line contains n distinct integers b_ 1, b_ 2, . . . , b_ n ( 1\u2264 b_ i\u2264 n ) \u2014 the second permutation. The next line contains n distinct integers d_ 1, d_ 2, . . . , d_ n ( d_ i is either 0 , a_ i , or b_ i ) \u2014 the description of the known values of c . If d_ i= 0 , then there are no requirements on the value of c_ i . Otherwise, it is required that c_ i= d_ i . It is guaranteed that there exists at least one permutation c that satisfies all the requirements. It is guaranteed that the sum of n over all test cases does not exceed 5 \u00b7 10^ 5 .",
    "output": "For each test case, print the number of possible permutations c , modulo 10^ 9+ 7 .",
    "note": "In the first test case, there are 4 distinct permutation that can be made using the process: [ 2, 3, 1, 4, 5, 6, 7] , [ 2, 3, 1, 7, 6, 5, 4] , [ 2, 3, 1, 4, 6, 5, 7] , [ 2, 3, 1, 7, 5, 6, 4] . In the second test case, there is only one distinct permutation that can be made using the process: [ 1] . In the third test case, there are 2 distinct permutation that can be made using the process: [ 6, 5, 2, 1, 4, 3] , [ 6, 5, 3, 1, 4, 2] . In the fourth test case, there are 2 distinct permutation that can be made using the process: [ 1, 2, 8, 7, 4, 3, 6, 5] , [ 1, 6, 4, 7, 2, 3, 8, 5] . In the fifth test case, there is only one distinct permutation that can be made using the process: [ 1, 9, 2, 3, 4, 10, 8, 6, 7, 5] .",
    "topics": [
      "data structures",
      "dfs and similar",
      "dsu",
      "graphs",
      "implementation",
      "math"
    ],
    "id": "1670C"
  },
  {
    "title": "Maximal AND",
    "url": "https://codeforces.com/problemset/problem/1669/H",
    "history": "Let AND denote the bitwise AND operation, and OR denote the bitwise OR operation. You are given an array a of length n and a non- negative integer k . You can perform at most k operations on the array of the following type: Select an index i ( 1 \u2264 i \u2264 n ) and replace a_ i with a_ i OR 2^ j where j is any integer between 0 and 30 inclusive. In other words, in an operation you can choose an index i ( 1 \u2264 i \u2264 n ) and set the j - th bit of a_ i to 1 ( 0 \u2264 j \u2264 30 ) . Output the maximum possible value of a_ 1 AND a_ 2 AND . . . AND a_ n after performing at most k operations.",
    "input": "The first line of the input contains a single integer t ( 1 \u2264 t \u2264 100 ) \u2014 the number of test cases. The description of test cases follows. The first line of each test case contains the integers n and k ( 1 \u2264 n \u2264 2 \u00b7 10^ 5 , 0 \u2264 k \u2264 10^ 9 ) . Then a single line follows, containing n integers describing the arrays a ( 0 \u2264 a_ i < 2^ 31 ) . It is guaranteed that the sum of n over all test cases does not exceed 2 \u00b7 10^ 5 .",
    "output": "For each test case, output a single line containing the maximum possible AND value of a_ 1 AND a_ 2 AND . . . AND a_ n after performing at most k operations.",
    "note": "For the first test case, we can set the bit 1 ( 2^ 1 ) of the last 2 elements using the 2 operations, thus obtaining the array [ 2 , 3 , 3 ] , which has AND value equal to 2 . For the second test case, we can' t perform any operations so the answer is just the AND of the whole array which is 4 .",
    "topics": [
      "bitmasks",
      "greedy",
      "math"
    ],
    "id": "1669H"
  },
  {
    "title": "2-Letter Strings",
    "url": "https://codeforces.com/problemset/problem/1669/E",
    "history": "Given n strings, each of length 2 , consisting of lowercase Latin alphabet letters from ' a' to ' k' , output the number of pairs of indices ( i, j) such that i < j and the i - th string and the j - th string differ in exactly one position. In other words, count the number of pairs ( i, j) ( i < j ) such that the i - th string and the j - th string have exactly one position p ( 1 \u2264 p \u2264 2 ) such that s_ i_ p= \u0338s_ j_ p . The answer may not fit into 32- bit integer type, so you should use 64- bit integers like long long in C+ + to avoid integer overflow.",
    "input": "The first line of the input contains a single integer t ( 1 \u2264 t \u2264 100 ) \u2014 the number of test cases. The description of test cases follows. The first line of each test case contains a single integer n ( 1 \u2264 n \u2264 10^ 5 ) \u2014 the number of strings. Then follows n lines, the i - th of which containing a single string s_ i of length 2 , consisting of lowercase Latin letters from ' a' to ' k' . It is guaranteed that the sum of n over all test cases does not exceed 10^ 5 .",
    "output": "For each test case, print a single integer \u2014 the number of pairs ( i, j) ( i < j ) such that the i - th string and the j - th string have exactly one position p ( 1 \u2264 p \u2264 2 ) such that s_ i_ p= \u0338s_ j_ p . Please note, that the answer for some test cases won' t fit into 32- bit integer type, so you should use at least 64- bit integer type in your programming language ( like long long for C+ + ) .",
    "note": "For the first test case the pairs that differ in exactly one position are: ( \" ab\" , \" cb\" ) , ( \" ab\" , \" db\" ) , ( \" ab\" , \" aa\" ) , ( \" cb\" , \" db\" ) and ( \" cb\" , \" cc\" ) . For the second test case the pairs that differ in exactly one position are: ( \" aa\" , \" ac\" ) , ( \" aa\" , \" ca\" ) , ( \" cc\" , \" ac\" ) , ( \" cc\" , \" ca\" ) , ( \" ac\" , \" aa\" ) and ( \" ca\" , \" aa\" ) . For the third test case, the are no pairs satisfying the conditions.",
    "topics": [
      "data structures",
      "math",
      "strings"
    ],
    "id": "1669E"
  },
  {
    "title": "Odd/Even Increments",
    "url": "https://codeforces.com/problemset/problem/1669/C",
    "history": "Given an array a= [ a_ 1, a_ 2, . . . , a_ n] of n positive integers, you can do operations of two types on it: Add 1 to every element with an odd index. In other words change the array as follows: a_ 1 : = a_ 1 + 1, a_ 3 : = a_ 3 + 1, a_ 5 : = a_ 5+ 1, . . . . Add 1 to every element with an even index. In other words change the array as follows: a_ 2 : = a_ 2 + 1, a_ 4 : = a_ 4 + 1, a_ 6 : = a_ 6+ 1, . . . . Determine if after any number of operations it is possible to make the final array contain only even numbers or only odd numbers. In other words, determine if you can make all elements of the array have the same parity after any number of operations. Note that you can do operations of both types any number of times ( even none) . Operations of different types can be performed a different number of times.",
    "input": "The first line contains an integer t ( 1 \u2264 t \u2264 100 ) \u2014 the number of test cases. The first line of each test case contains an integer n ( 2 \u2264 n \u2264 50 ) \u2014 the length of the array. The second line of each test case contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 3 ) \u2014 the elements of the array. Note that after the performed operations the elements in the array can become greater than 10^ 3 .",
    "output": "Output t lines, each of which contains the answer to the corresponding test case. As an answer, output \" YES\" if after any number of operations it is possible to make the final array contain only even numbers or only odd numbers, and \" NO\" otherwise. You can output the answer in any case ( for example, the strings \" yEs\" , \" yes\" , \" Yes\" and \" YES\" will be recognized as a positive answer) .",
    "note": "For the first test case, we can increment the elements with an even index, obtaining the array [ 1, 3, 1] , which contains only odd numbers, so the answer is \" YES\" . For the second test case, we can show that after performing any number of operations we won' t be able to make all elements have the same parity, so the answer is \" NO\" . For the third test case, all elements already have the same parity so the answer is \" YES\" . For the fourth test case, we can perform one operation and increase all elements at odd positions by 1 , thus obtaining the array [ 1001, 1, 1001, 1, 1001] , and all elements become odd so the answer is \" YES\" .",
    "topics": [
      "greedy",
      "greedy",
      "implementation",
      "math"
    ],
    "id": "1669C"
  },
  {
    "title": "Social Distance",
    "url": "https://codeforces.com/problemset/problem/1668/B",
    "history": "m chairs are arranged in a circle sequentially. The chairs are numbered from 0 to m- 1 . n people want to sit in these chairs. The i - th of them wants at least a[ i] empty chairs both on his right and left side. More formally, if the i - th person sits in the j - th chair, then no one else should sit in the following chairs: ( j- a[ i] ) m , ( j- a[ i] + 1) m , . . . ( j+ a[ i] - 1) m , ( j+ a[ i] ) m . Decide if it is possible to sit down for all of them, under the given limitations.",
    "input": "The input consists of multiple test cases. The first line contains a single integer t ( 1 \u2264 t \u2264 5 \u00b7 10^ 4 ) \u2014 the number of test cases. The description of the test cases follows. The first line of each test case contains two integers n and m ( 2 \u2264 n \u2264 10^ 5 , 1 \u2264 m \u2264 10^ 9 ) \u2014 the number of people and the number of chairs. The next line contains n integers, a_ 1 , a_ 2 , . . . a_ n ( 1 \u2264 a_ i \u2264 10^ 9 ) \u2014 the minimum number of empty chairs, on both sides of the i - th person. It is guaranteed that the sum of n over all test cases will not exceed 10^ 5 .",
    "output": "For each test case print \" YES\" ( without quotes) if it is possible for everyone to sit down and fulfil the restrictions, and \" NO\" ( without quotes) otherwise. You may print every letter in any case you want ( so, for example, the strings \" yEs\" , \" yes\" , \" Yes\" and \" YES\" will all be recognized as positive answers) .",
    "note": "Test case 1 : n> m , so they can not sit down. Test case 2 : the first person can sit 2 - nd and the second person can sit in the 0 - th chair. Both of them want at least 1 empty chair on both sides, chairs 1 and 3 are free, so this is a good solution. Test case 3 : if the second person sits down somewhere, he needs 2 empty chairs, both on his right and on his left side, so it is impossible to find a place for the first person, because there are only 5 chairs. Test case 4 : they can sit in the 1 - st, 4 - th, 7 - th chairs respectively.",
    "topics": [
      "greedy",
      "math",
      "sortings"
    ],
    "id": "1668B"
  },
  {
    "title": "Direction Change",
    "url": "https://codeforces.com/problemset/problem/1668/A",
    "history": "You are given a grid with n rows and m columns. Rows and columns are numbered from 1 to n , and from 1 to m . The intersection of the a - th row and b - th column is denoted by ( a, b) . Initially, you are standing in the top left corner ( 1, 1) . Your goal is to reach the bottom right corner ( n, m) . You can move in four directions from ( a, b) : up to ( a- 1, b) , down to ( a+ 1, b) , left to ( a, b- 1) or right to ( a, b+ 1) . You cannot move in the same direction in two consecutive moves, and you cannot leave the grid. What is the minimum number of moves to reach ( n, m) ?",
    "input": "The input consists of multiple test cases. The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 3 ) \u2014 the number of the test cases. The description of the test cases follows. The first line of each test case contains two integers n and m ( 1 \u2264 n, m \u2264 10^ 9 ) \u2014 the size of the grid.",
    "output": "For each test case, print a single integer: - 1 if it is impossible to reach ( n, m) under the given conditions, otherwise the minimum number of moves.",
    "note": "Test case 1 : n= 1 , m= 1 , and initially you are standing in ( 1, 1) so 0 move is required to reach ( n, m) = ( 1, 1) . Test case 2 : you should go down to reach ( 2, 1) . Test case 3 : it is impossible to reach ( 1, 3) without moving right two consecutive times, or without leaving the grid. Test case 4 : an optimal moving sequence could be: ( 1, 1) \u2192 ( 1, 2) \u2192 ( 2, 2) \u2192 ( 2, 1) \u2192 ( 3, 1) \u2192 ( 3, 2) \u2192 ( 4, 2) . It can be proved that this is the optimal solution. So the answer is 6 .",
    "topics": [
      "implementation",
      "math"
    ],
    "id": "1668A"
  },
  {
    "title": "Centroid Probabilities",
    "url": "https://codeforces.com/problemset/problem/1667/E",
    "history": "Consider every tree ( connected undirected acyclic graph) with n vertices ( n is odd, vertices numbered from 1 to n ) , and for each 2 \u2264 i \u2264 n the i - th vertex is adjacent to exactly one vertex with a smaller index. For each i ( 1 \u2264 i \u2264 n ) calculate the number of trees for which the i - th vertex will be the centroid. The answer can be huge, output it modulo 998 244 353 . A vertex is called a centroid if its removal splits the tree into subtrees with at most ( n- 1) / 2 vertices each.",
    "input": "The first line contains an odd integer n ( 3 \u2264 n < 2 \u00b7 10^ 5 , n is odd) \u2014 the number of the vertices in the tree.",
    "output": "Print n integers in a single line, the i - th integer is the answer for the i - th vertex ( modulo 998 244 353 ) .",
    "note": "Example 1 : there are two possible trees: with edges ( 1- 2) , and ( 1- 3) \u2014 here the centroid is 1 ; and with edges ( 1- 2) , and ( 2- 3) \u2014 here the centroid is 2 . So the answer is 1, 1, 0 . Example 2 : there are 24 possible trees, for example with edges ( 1- 2) , ( 2- 3) , ( 3- 4) , and ( 4- 5) . Here the centroid is 3 .",
    "topics": [
      "combinatorics",
      "dp",
      "fft",
      "math"
    ],
    "id": "1667E"
  },
  {
    "title": "Half Queen Cover",
    "url": "https://codeforces.com/problemset/problem/1667/C",
    "history": "You are given a board with n rows and n columns, numbered from 1 to n . The intersection of the a - th row and b - th column is denoted by ( a, b) . A half- queen attacks cells in the same row, same column, and on one diagonal. More formally, a half- queen on ( a, b) attacks the cell ( c, d) if a= c or b= d or a- b= c- d . The blue cells are under attack. What is the minimum number of half- queens that can be placed on that board so as to ensure that each square is attacked by at least one half- queen? Construct an optimal solution.",
    "input": "The first line contains a single integer n ( 1 \u2264 n \u2264 10^ 5 ) \u2014 the size of the board.",
    "output": "In the first line print a single integer k \u2014 the minimum number of half- queens. In each of the next k lines print two integers a_ i , b_ i ( 1 \u2264 a_ i, b_ i \u2264 n ) \u2014 the position of the i - th half- queen. If there are multiple solutions, print any.",
    "note": "Example 1 : one half- queen is enough. Note: a half- queen on ( 1, 1) attacks ( 1, 1) . Example 2 : one half- queen is enough too. ( 1, 2) or ( 2, 1) would be wrong solutions, because a half- queen on ( 1, 2) does not attack the cell ( 2, 1) and vice versa. ( 2, 2) is also a valid solution. Example 3 : it is impossible to cover the board with one half queen. There are multiple solutions for 2 half- queens; you can print any of them.",
    "topics": [
      "constructive algorithms",
      "math"
    ],
    "id": "1667C"
  },
  {
    "title": "Make it Increasing",
    "url": "https://codeforces.com/problemset/problem/1667/A",
    "history": "You are given an array a consisting of n positive integers, and an array b , with length n . Initially b_ i= 0 for each 1 \u2264 i \u2264 n . In one move you can choose an integer i ( 1 \u2264 i \u2264 n ) , and add a_ i to b_ i or subtract a_ i from b_ i . What is the minimum number of moves needed to make b increasing ( that is, every element is strictly greater than every element before it) ?",
    "input": "The first line contains a single integer n ( 2 \u2264 n \u2264 5000 ) . The second line contains n integers, a_ 1 , a_ 2 , . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 9 ) \u2014 the elements of the array a .",
    "output": "Print a single integer, the minimum number of moves to make b increasing.",
    "note": "Example 1 : you can subtract a_ 1 from b_ 1 , and add a_ 3 , a_ 4 , and a_ 5 to b_ 3 , b_ 4 , and b_ 5 respectively. The final array will be [ - 1 , 0 , 3 , 4 , 5 ] after 4 moves. Example 2 : you can reach [ - 3 , - 2 , - 1 , 0 , 1 , 2 , 3 ] in 10 moves.",
    "topics": [
      "brute force",
      "greedy",
      "math"
    ],
    "id": "1667A"
  },
  {
    "title": "Interactive Treasure Hunt",
    "url": "https://codeforces.com/problemset/problem/1666/I",
    "history": "This is an interactive problem. There is a grid of n\u00d7 m cells. Two treasure chests are buried in two different cells of the grid. Your task is to find both of them. You can make two types of operations: DIG r c : try to find the treasure in the cell ( r, c) . The interactor will tell you if you found the treasure or not. SCAN r c : scan from the cell ( r, c) . The result of this operation is the sum of Manhattan distances from the cell ( r, c) to the cells where the treasures are hidden. Manhattan distance from a cell ( r_ 1, c_ 1) to a cell ( r_ 2, c_ 2) is calculated as | r_ 1 - r_ 2| + | c_ 1 - c_ 2| . You need to find the treasures in at most 7 operations. This includes both DIG and SCAN operations in total. To solve the test you need to call DIG operation at least once in both of the cells where the treasures are hidden. InteractionYour program has to process multiple test cases in a single run. First, the testing system writes t \u2014 the number of test cases ( 1\u2264 t \u2264 100 ) . Then, t test cases should be processed one by one. In each test case, your program should start by reading the integers n and m ( 2 \u2264 n, m \u2264 16 ) . Then, your program can make queries of two types: DIG r c ( 1\u2264 r\u2264 n ; 1\u2264 c\u2264 m ) . The interactor responds with integer 1 , if you found the treasure, and 0 if not. If you try to find the treasure in the same cell multiple times, the result will be 0 since the treasure is already found. SCAN r c ( 1\u2264 r\u2264 n ; 1\u2264 c\u2264 m ) . The interactor responds with an integer that is the sum of Manhattan distances from the cell ( r, c) to the cells where the treasures were hidden. The sum is calculated for both cells with treasures, even if you already found one of them. After you found both treasures, i. e. you received 1 for two DIG operations, your program should continue to the next test case or exit if that test case was the last one.",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "brute force",
      "constructive algorithms",
      "geometry",
      "interactive",
      "math"
    ],
    "id": "1666I"
  },
  {
    "title": "Even Split",
    "url": "https://codeforces.com/problemset/problem/1666/E",
    "history": "A revolution has recently happened in Segmentland. The new government is committed to equality, and they hired you to help with land redistribution in the country. Segmentland is a segment of length l kilometers, with the capital in one of its ends. There are n citizens in Segmentland, the home of i - th citizen is located at the point a_ i kilometers from the capital. No two homes are located at the same point. Each citizen should receive a segment of positive length with ends at integer distances from the capital that contains her home. The union of these segments should be the whole of Segmentland, and they should not have common points besides their ends. To ensure equality, the difference between the lengths of the longest and the shortest segments should be as small as possible.",
    "input": "The first line of the input contains two integers l and n ( 2 \u2264 l \u2264 10^ 9; 1 \u2264 n \u2264 10^ 5 ) . The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 0 < a_ 1 < a_ 2 < . . . < a_ n < l ) .",
    "output": "Output n pairs of numbers s_ i, f_ i ( 0 \u2264 s_ i < f_ i \u2264 l ) , one pair per line. The pair on i - th line denotes the ends of the [ s_ i, f_ i] segment that i - th citizen receives. If there are many possible arrangements with the same difference between the lengths of the longest and the shortest segments, you can output any of them.",
    "note": "In the first example, it is possible to make all segments equal. Viva la revolucion! In the second example, citizens live close to the capital, so the length of the shortest segment is 2 and the length of the longest segment is 8.",
    "topics": [
      "binary search",
      "constructive algorithms",
      "greedy",
      "math"
    ],
    "id": "1666E"
  },
  {
    "title": "GCD Guess",
    "url": "https://codeforces.com/problemset/problem/1665/D",
    "history": "This is an interactive problem. There is a positive integer 1 \u2264 x \u2264 10^ 9 that you have to guess. In one query you can choose two positive integers a = \u0338 b . As an answer to this query you will get ( x + a, x + b) , where ( n, m) is the greatest common divisor of the numbers n and m . To guess one hidden number x you are allowed to make no more than 30 queries. InteractionThe hidden number x is fixed before the start of the interaction and does not depend on your queries. To guess each x you can make no more than 30 queries in the following way: \" ? a b\" ( 1 \u2264 a, b \u2264 2 \u00b7 10^ 9 , a = \u0338 b ) . For this query you will get ( x + a, x + b) . When you know x , print a single line in the following format. \" ! x\" ( 1 \u2264 x \u2264 10^ 9 ) . After that continue to solve the next test case. If you ask more than 30 queries for one x or make an invalid query, the interactor will terminate immediately and your program will receive verdict Wrong Answer. After printing each query do not forget to output end of line and flush the output buffer. Otherwise, you will get the Idleness limit exceeded verdict. To do flush use: fflush( stdout) or cout. flush( ) in C+ + ; System. out. flush( ) in Java; flush( output) in Pascal; stdout. flush( ) in Python; Read documentation for other languages. HacksTo use hacks, use the following format of tests: The first line should contain a single integer t ( 1 \u2264 t \u2264 1000 ) \u2014 the number of test cases. The first and only line of each test case should contain a single integer x ( 1 \u2264 x \u2264 10^ 9 ) denoting the integer x that should be guessed.",
    "input": "The first line of input contains a single integer t ( 1 \u2264 t \u2264 1000 ) denoting the number of test cases. The integer x that you have to guess satisfies the constraints: ( 1 \u2264 x \u2264 10^ 9 ) .",
    "output": "",
    "note": "The first hidden number is 4 , that' s why the answers for the queries are: \" ? 1 2\" \u2014 ( 4 + 1, 4 + 2) = ( 5, 6) = 1 . \" ? 12 4\" \u2014 ( 4 + 12, 4 + 4) = ( 16, 8) = 8 . The second hidden number is 10^ 9 , that' s why the answer for the query is: \" ? 2000000000 1999999999\" \u2014 ( 3 \u00b7 10^ 9, 3 \u00b7 10^ 9 - 1) = 1 . These queries are made only for understanding the interaction and are not enough for finding the true x .",
    "topics": [
      "bitmasks",
      "chinese remainder theorem",
      "constructive algorithms",
      "games",
      "interactive",
      "math",
      "number theory"
    ],
    "id": "1665D"
  },
  {
    "title": "GCD vs LCM",
    "url": "https://codeforces.com/problemset/problem/1665/A",
    "history": "You are given a positive integer n . You have to find 4 positive integers a, b, c, d such that a + b + c + d = n , and ( a, b) = lcm( c, d) . If there are several possible answers you can output any of them. It is possible to show that the answer always exists. In this problem ( a, b) denotes the greatest common divisor of a and b , and lcm( c, d) denotes the least common multiple of c and d .",
    "input": "The input consists of multiple test cases. The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. Description of the test cases follows. Each test case contains a single line with integer n ( 4 \u2264 n \u2264 10^ 9 ) \u2014 the sum of a , b , c , and d .",
    "output": "For each test case output 4 positive integers a , b , c , d such that a + b + c + d = n and ( a, b) = lcm( c, d) .",
    "note": "In the first test case ( 1, 1) = lcm( 1, 1) = 1 , 1 + 1 + 1 + 1 = 4 . In the second test case ( 2, 2) = lcm( 2, 1) = 2 , 2 + 2 + 2 + 1 = 7 . In the third test case ( 2, 2) = lcm( 2, 2) = 2 , 2 + 2 + 2 + 2 = 8 . In the fourth test case ( 2, 4) = lcm( 2, 1) = 2 , 2 + 4 + 2 + 1 = 9 . In the fifth test case ( 3, 5) = lcm( 1, 1) = 1 , 3 + 5 + 1 + 1 = 10 .",
    "topics": [
      "constructive algorithms",
      "math"
    ],
    "id": "1665A"
  },
  {
    "title": "Is it rated - 3",
    "url": "https://codeforces.com/problemset/problem/1663/D",
    "history": "",
    "input": "The first line contains a string S . The second line contains an integer X . Constraints | S| = 3 0 \u2264 X \u2264 10^ 9 The input is guaranteed to be valid.",
    "output": "",
    "note": "",
    "topics": [
      "*special",
      "combinatorics",
      "dp",
      "math"
    ],
    "id": "1663D"
  },
  {
    "title": "P\u014dja Verdon",
    "url": "https://codeforces.com/problemset/problem/1663/C",
    "history": "Aenar has an array a consisting of n integers.",
    "input": "The first line is the integer n ( 1 \u2264 n \u2264 100 ) . The second line contains n integers a_ i ( 0 \u2264 a_ i \u2264 3979 ) \u2014 the contents of the array.",
    "output": "Output a single number.",
    "note": "",
    "topics": [
      "*special",
      "implementation",
      "math"
    ],
    "id": "1663C"
  },
  {
    "title": "Mike's Sequence",
    "url": "https://codeforces.com/problemset/problem/1663/B",
    "history": "You won' t find this sequence on OEIS.",
    "input": "One integer r ( - 45 \u2264 r \u2264 2999 ) .",
    "output": "One integer.",
    "note": "",
    "topics": [
      "*special",
      "divide and conquer",
      "implementation",
      "math"
    ],
    "id": "1663B"
  },
  {
    "title": "Drone Photo",
    "url": "https://codeforces.com/problemset/problem/1662/N",
    "history": "Today, like every year at SWERC, the n^ 2 contestants have gathered outside the venue to take a drone photo. Jennifer, the social media manager for the event, has arranged them into an n\u00d7 n square. Being very good at her job, she knows that the contestant standing on the intersection of the i - th row with the j - th column is a_ i, j years old. Coincidentally, she notices that no two contestants have the same age, and that everyone is between 1 and n^ 2 years old. Jennifer is planning to have some contestants hold a banner with the ICPC logo parallel to the ground, so that it is clearly visible in the aerial picture. Here are the steps that she is going to follow in order to take the perfect SWERC drone photo. First of all, Jennifer is going to select four contestants standing on the vertices of an axis- aligned rectangle. Then, she will have the two younger contestants hold one of the poles, while the two older contestants will hold the other pole. Finally, she will unfold the banner, using the poles to support its two ends. Obviously, this can only be done if the two poles are parallel and do not cross, as shown in the pictures below. Being very indecisive, Jennifer would like to try out all possible arrangements for the banner, but she is worried that this may cause the contestants to be late for the competition. How many different ways are there to choose the four contestants holding the poles in order to take a perfect photo? Two choices are considered different if at least one contestant is included in one but not the other.",
    "input": "The first line contains a single integer n ( 2\u2264 n \u2264 1500 ) . The next n lines describe the ages of the contestants. Specifically, the i - th line contains the integers a_ i, 1, a_ i, 2, . . . , a_ i, n ( 1\u2264 a_ i, j\u2264 n^ 2 ) . It is guaranteed that a_ i, j= \u0338 a_ k, l if i= \u0338 k or j= \u0338 l .",
    "output": "Print the number of ways for Jennifer to choose the four contestants holding the poles.",
    "note": "In the first sample, there are 4 contestants, arranged as follows. There is only one way to choose four contestants, with one pole held by contestants aged 1 and 2 and the other one by contestants aged 3 and 4 . But then, as we can see in the picture, the poles cross. Since there is no valid way to choose four contestants, the answer is 0 . In the second sample, the 4 contestants are arranged as follows. Once again, there is only one way to choose four contestants, but this time the poles don' t cross. Therefore, the answer is 1 . In the third sample, the 9 contestants are arranged as follows. There are 6 ways of choosing four contestants so that the poles don' t cross, as shown in the following pictures.",
    "topics": [
      "combinatorics",
      "math",
      "sortings"
    ],
    "id": "1662N"
  },
  {
    "title": "Boundary",
    "url": "https://codeforces.com/problemset/problem/1662/H",
    "history": "Bethany would like to tile her bathroom. The bathroom has width w centimeters and length l centimeters. If Bethany simply used the basic tiles of size 1 \u00d7 1 centimeters, she would use w \u00b7 l of them. However, she has something different in mind. On the interior of the floor she wants to use the 1 \u00d7 1 tiles. She needs exactly ( w- 2) \u00b7 ( l- 2) of these. On the floor boundary she wants to use tiles of size 1 \u00d7 a for some positive integer a . The tiles can also be rotated by 90 degrees. For which values of a can Bethany tile the bathroom floor as described? Note that a can also be 1 .",
    "input": "Each test contains multiple test cases. The first line contains an integer t ( 1\u2264 t\u2264 100 ) \u2014 the number of test cases. The descriptions of the t test cases follow. Each test case consist of a single line, which contains two integers w , l ( 3 \u2264 w, l \u2264 10^ 9 ) \u2014 the dimensions of the bathroom.",
    "output": "For each test case, print an integer k ( 0\u2264 k ) \u2014 the number of valid values of a for the given test case \u2014 followed by k integers a_ 1, a_ 2, . . . , a_ k ( 1\u2264 a_ i ) \u2014 the valid values of a . The values a_ 1, a_ 2, . . . , a_ k have to be sorted from smallest to largest. It is guaranteed that under the problem constraints, the output contains at most 200 000 integers.",
    "note": "In the first test case, the bathroom is 3 centimeters wide and 5 centimeters long. There are three values of a such that Bethany can tile the floor as described in the statement, namely a= 1 , a= 2 and a= 3 . The three tilings are represented in the following pictures.",
    "topics": [
      "brute force",
      "math"
    ],
    "id": "1662H"
  },
  {
    "title": "Round Table",
    "url": "https://codeforces.com/problemset/problem/1662/E",
    "history": "There are n people, numbered from 1 to n , sitting at a round table. Person i+ 1 is sitting to the right of person i ( with person 1 sitting to the right of person n ) . You have come up with a better seating arrangement, which is given as a permutation p_ 1, p_ 2, . . . , p_ n . More specifically, you want to change the seats of the people so that at the end person p_ i+ 1 is sitting to the right of person p_ i ( with person p_ 1 sitting to the right of person p_ n ) . Notice that for each seating arrangement there are n permutations that describe it ( which can be obtained by rotations) . In order to achieve that, you can swap two people sitting at adjacent places; but there is a catch: for all 1 \u2264 x \u2264 n- 1 you cannot swap person x and person x+ 1 ( notice that you can swap person n and person 1 ) . What is the minimum number of swaps necessary? It can be proven that any arrangement can be achieved.",
    "input": "Each test contains multiple test cases. The first line contains an integer t ( 1\u2264 t\u2264 10 000 ) \u2014 the number of test cases. The descriptions of the t test cases follow. The first line of each test case contains a single integer n ( 3 \u2264 n \u2264 200 000 ) \u2014 the number of people sitting at the table. The second line contains n distinct integers p_ 1, p_ 2, . . . , p_ n ( 1 \u2264 p_ i \u2264 n , p_ i p_ j for i j ) \u2014 the desired final order of the people around the table. The sum of the values of n over all test cases does not exceed 200 000 .",
    "output": "For each test case, print the minimum number of swaps necessary to achieve the desired order.",
    "note": "In the first test case, we can swap person 4 and person 1 ( who are adjacent) in the initial configuration and get the order [ 4, 2, 3, 1] which is equivalent to the desired one. Hence in this case a single swap is sufficient.",
    "topics": [
      "math"
    ],
    "id": "1662E"
  },
  {
    "title": "European Trip",
    "url": "https://codeforces.com/problemset/problem/1662/C",
    "history": "The map of Europe can be represented by a set of n cities, numbered from 1 through n , which are connected by m bidirectional roads, each of which connects two distinct cities. A trip of length k is a sequence of k+ 1 cities v_ 1, v_ 2, . . . , v_ k+ 1 such that there is a road connecting each consecutive pair v_ i , v_ i+ 1 of cities, for all 1 \u2264 i \u2264 k . A special trip is a trip that does not use the same road twice in a row, i. e. , a sequence of k+ 1 cities v_ 1, v_ 2, . . . , v_ k+ 1 such that it forms a trip and v_ i = \u0338 v_ i + 2 , for all 1 \u2264 i \u2264 k - 1 . Given an integer k , compute the number of distinct special trips of length k which begin and end in the same city. Since the answer might be large, give the answer modulo 998 244 353 .",
    "input": "The first line contains three integers n , m and k ( 3 \u2264 n \u2264 100 , 1 \u2264 m \u2264 n( n - 1) / 2 , 1 \u2264 k \u2264 10^ 4 ) \u2014 the number of cities, the number of roads and the length of trips to consider. Each of the following m lines contains a pair of distinct integers a and b ( 1 \u2264 a, b \u2264 n ) \u2014 each pair represents a road connecting cities a and b . It is guaranteed that the roads are distinct ( i. e. , each pair of cities is connected by at most one road) .",
    "output": "Print the number of special trips of length k which begin and end in the same city, modulo 998 244 353 .",
    "note": "In the first sample, we are looking for special trips of length 2 , but since we cannot use the same road twice once we step away from a city we cannot go back, so the answer is 0 . In the second sample, we have the following 12 special trips of length 3 which begin and end in the same city: ( 1, 2, 4, 1) , ( 1, 3, 4, 1) , ( 1, 4, 2, 1) , ( 1, 4, 3, 1) , ( 2, 1, 4, 2) , ( 2, 4, 1, 2) , ( 3, 1, 4, 3) , ( 3, 4, 1, 3) , ( 4, 1, 3, 4) , ( 4, 3, 1, 4) , ( 4, 1, 2, 4) , and ( 4, 2, 1, 4) .",
    "topics": [
      "dp",
      "graphs",
      "math",
      "matrices"
    ],
    "id": "1662C"
  },
  {
    "title": "Narrow Components",
    "url": "https://codeforces.com/problemset/problem/1661/E",
    "history": "You are given a matrix a , consisting of 3 rows and n columns. Each cell of the matrix is either free or taken. A free cell y is reachable from a free cell x if at least one of these conditions hold: x and y share a side; there exists a free cell z such that z is reachable from x and y is reachable from z . A connected component is a set of free cells of the matrix such that all cells in it are reachable from one another, but adding any other free cell to the set violates this rule. You are asked q queries about the matrix. Each query is the following: l r \u2014 count the number of connected components of the matrix, consisting of columns from l to r of the matrix a , inclusive. Print the answers to all queries.",
    "input": "The first line contains an integer n ( 1 \u2264 n \u2264 5 \u00b7 10^ 5 ) \u2014 the number of columns of matrix a . The i - th of the next three lines contains a description of the i - th row of the matrix a \u2014 a string, consisting of n characters. Each character is either 1 ( denoting a free cell) or 0 ( denoting a taken cell) . The next line contains an integer q ( 1 \u2264 q \u2264 3 \u00b7 10^ 5 ) \u2014 the number of queries. The j - th of the next q lines contains two integers l_ j and r_ j ( 1 \u2264 l_ j \u2264 r_ j \u2264 n ) \u2014 the description of the j - th query.",
    "output": "Print q integers \u2014 the j - th value should be equal to the number of the connected components of the matrix, consisting of columns from l_ j to r_ j of the matrix a , inclusive.",
    "note": "",
    "topics": [
      "brute force",
      "data structures",
      "dp",
      "dsu",
      "math",
      "trees"
    ],
    "id": "1661E"
  },
  {
    "title": "Water the Trees",
    "url": "https://codeforces.com/problemset/problem/1661/C",
    "history": "There are n trees in a park, numbered from 1 to n . The initial height of the i - th tree is h_ i . You want to water these trees, so they all grow to the same height. The watering process goes as follows. You start watering trees at day 1 . During the j - th day you can: Choose a tree and water it. If the day is odd ( e. g. 1, 3, 5, 7, . . . ) , then the height of the tree increases by 1 . If the day is even ( e. g. 2, 4, 6, 8, . . . ) , then the height of the tree increases by 2 . Or skip a day without watering any tree. Note that you can' t water more than one tree in a day. Your task is to determine the minimum number of days required to water the trees so they grow to the same height. You have to answer t independent test cases.",
    "input": "The first line of the input contains one integer t ( 1 \u2264 t \u2264 2 \u00b7 10^ 4 ) \u2014 the number of test cases. The first line of the test case contains one integer n ( 1 \u2264 n \u2264 3 \u00b7 10^ 5 ) \u2014 the number of trees. The second line of the test case contains n integers h_ 1, h_ 2, . . . , h_ n ( 1 \u2264 h_ i \u2264 10^ 9 ) , where h_ i is the height of the i - th tree. It is guaranteed that the sum of n over all test cases does not exceed 3 \u00b7 10^ 5 ( \u2211 n \u2264 3 \u00b7 10^ 5 ) .",
    "output": "For each test case, print one integer \u2014 the minimum number of days required to water the trees, so they grow to the same height.",
    "note": "Consider the first test case of the example. The initial state of the trees is [ 1, 2, 4] . During the first day, let' s water the first tree, so the sequence of heights becomes [ 2, 2, 4] ; during the second day, let' s water the second tree, so the sequence of heights becomes [ 2, 4, 4] ; let' s skip the third day; during the fourth day, let' s water the first tree, so the sequence of heights becomes [ 4, 4, 4] . Thus, the answer is 4 .",
    "topics": [
      "binary search",
      "greedy",
      "math"
    ],
    "id": "1661C"
  },
  {
    "title": "Array Balancing",
    "url": "https://codeforces.com/problemset/problem/1661/A",
    "history": "You are given two arrays of length n : a_ 1, a_ 2, . . . , a_ n and b_ 1, b_ 2, . . . , b_ n . You can perform the following operation any number of times: Choose integer index i ( 1 \u2264 i \u2264 n ) ; Swap a_ i and b_ i . What is the minimum possible sum | a_ 1 - a_ 2| + | a_ 2 - a_ 3| + . . . + | a_ n- 1 - a_ n| + | b_ 1 - b_ 2| + | b_ 2 - b_ 3| + . . . + | b_ n- 1 - b_ n| ( in other words, \u2211_ i= 1^ n - 1( | a_ i - a_ i+ 1| + | b_ i - b_ i+ 1| ) ) you can achieve after performing several ( possibly, zero) operations?",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 4000 ) \u2014 the number of test cases. Then, t test cases follow. The first line of each test case contains the single integer n ( 2 \u2264 n \u2264 25 ) \u2014 the length of arrays a and b . The second line of each test case contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 9 ) \u2014 the array a . The third line of each test case contains n integers b_ 1, b_ 2, . . . , b_ n ( 1 \u2264 b_ i \u2264 10^ 9 ) \u2014 the array b .",
    "output": "For each test case, print one integer \u2014 the minimum possible sum \u2211_ i= 1^ n- 1( | a_ i - a_ i+ 1| + | b_ i - b_ i+ 1| ) .",
    "note": "In the first test case, we can, for example, swap a_ 3 with b_ 3 and a_ 4 with b_ 4 . We' ll get arrays a = [ 3, 3, 3, 3] and b = [ 10, 10, 10, 10] with sum 3 \u00b7 | 3 - 3| + 3 \u00b7 | 10 - 10| = 0 . In the second test case, arrays already have minimum sum ( described above) equal to | 1 - 2| + . . . + | 4 - 5| + | 6 - 7| + . . . + | 9 - 10| = 4 + 4 = 8 . In the third test case, we can, for example, swap a_ 5 and b_ 5 .",
    "topics": [
      "greedy",
      "math"
    ],
    "id": "1661A"
  },
  {
    "title": "Promising String (hard version)",
    "url": "https://codeforces.com/problemset/problem/1660/F2",
    "history": "This is the hard version of Problem F. The only difference between the easy version and the hard version is the constraints. We will call a non- empty string balanced if it contains the same number of plus and minus signs. For example: strings \" + \u2013+ \" and \" + + - + \u2013\" are balanced, and strings \" + \u2013\" , \" \u2013\" and \" \" are not balanced. We will call a string promising if the string can be made balanced by several ( possibly zero) uses of the following operation: replace two adjacent minus signs with one plus sign. In particular, every balanced string is promising. However, the converse is not true: not every promising string is balanced. For example, the string \" - + \u2014\" is promising, because you can replace two adjacent minuses with plus and get a balanced string \" - + + - \" , or get another balanced string \" - + - + \" . How many non- empty substrings of the given string s are promising? Each non- empty promising substring must be counted in the answer as many times as it occurs in string s . Recall that a substring is a sequence of consecutive characters of the string. For example, for string \" + - + \" its substring are: \" + - \" , \" - + \" , \" + \" , \" + - + \" ( the string is a substring of itself) and some others. But the following strings are not its substring: \" \u2013\" , \" + + \" , \" - + + \" .",
    "input": "The first line of the input contains an integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014the number of test cases in the test. Then the descriptions of test cases follow. Each test case of input data consists of two lines. The first line consists of the number n ( 1 \u2264 n \u2264 2 \u00b7 10^ 5 ) : the length of s . The second line of the test case contains the string s of length n , consisting only of characters \" + \" and \" - \" . It is guaranteed that the sum of values n over all test cases does not exceed 2 \u00b7 10^ 5 .",
    "output": "For each test case, print a single number: the number of the promising non- empty substrings of string s . Each non- empty promising substring must be counted in the answer as many times as it occurs in string s .",
    "note": "The following are the promising substrings for the first three test cases in the example: s[ 1 . . . 2] = \" + - \" , s[ 2 . . . 3] = \" - + \" ; s[ 1 . . . 2] = \" - + \" , s[ 2 . . . 3] = \" + - \" , s[ 1 . . . 5] = \" - + \u2014\" , s[ 3 . . . 5] = \" \u2014\" ; s[ 1 . . . 3] = \" \u2014\" , s[ 2 . . . 4] = \" \u2014\" .",
    "topics": [
      "data structures",
      "implementation",
      "math",
      "strings"
    ],
    "id": "1660F2"
  },
  {
    "title": "Promising String (easy version)",
    "url": "https://codeforces.com/problemset/problem/1660/F1",
    "history": "This is the easy version of Problem F. The only difference between the easy version and the hard version is the constraints. We will call a non- empty string balanced if it contains the same number of plus and minus signs. For example: strings \" + \u2013+ \" and \" + + - + \u2013\" are balanced, and strings \" + \u2013\" , \" \u2013\" and \" \" are not balanced. We will call a string promising if the string can be made balanced by several ( possibly zero) uses of the following operation: replace two adjacent minus signs with one plus sign. In particular, every balanced string is promising. However, the converse is not true: not every promising string is balanced. For example, the string \" - + \u2014\" is promising, because you can replace two adjacent minuses with plus and get a balanced string \" - + + - \" , or get another balanced string \" - + - + \" . How many non- empty substrings of the given string s are promising? Each non- empty promising substring must be counted in the answer as many times as it occurs in string s . Recall that a substring is a sequence of consecutive characters of the string. For example, for string \" + - + \" its substring are: \" + - \" , \" - + \" , \" + \" , \" + - + \" ( the string is a substring of itself) and some others. But the following strings are not its substring: \" \u2013\" , \" + + \" , \" - + + \" .",
    "input": "The first line of the input contains an integer t ( 1 \u2264 t \u2264 500 ) \u2014the number of test cases in the test. Then the descriptions of test cases follow. Each test case of input data consists of two lines. The first line consists of the number n ( 1 \u2264 n \u2264 3000 ) : the length of s . The second line of the test case contains the string s of length n , consisting only of characters \" + \" and \" - \" . It is guaranteed that the sum of values n over all test cases does not exceed 3000 .",
    "output": "For each test case, print a single number: the number of the promising non- empty substrings of string s . Each non- empty promising substring must be counted in the answer as many times as it occurs in string s .",
    "note": "The following are the promising substrings for the first three test cases in the example: s[ 1 . . . 2] = \" + - \" , s[ 2 . . . 3] = \" - + \" ; s[ 1 . . . 2] = \" - + \" , s[ 2 . . . 3] = \" + - \" , s[ 1 . . . 5] = \" - + \u2014\" , s[ 3 . . . 5] = \" \u2014\" ; s[ 1 . . . 3] = \" \u2014\" , s[ 2 . . . 4] = \" \u2014\" .",
    "topics": [
      "brute force",
      "implementation",
      "math",
      "strings"
    ],
    "id": "1660F1"
  },
  {
    "title": "Maximum Product Strikes Back",
    "url": "https://codeforces.com/problemset/problem/1660/D",
    "history": "You are given an array a consisting of n integers. For each i ( 1 \u2264 i \u2264 n ) the following inequality is true: - 2 \u2264 a_ i \u2264 2 . You can remove any number ( possibly 0 ) of elements from the beginning of the array and any number ( possibly 0 ) of elements from the end of the array. You are allowed to delete the whole array. You need to answer the question: how many elements should be removed from the beginning of the array, and how many elements should be removed from the end of the array, so that the result will be an array whose product ( multiplication) of elements is maximal. If there is more than one way to get an array with the maximum product of elements on it, you are allowed to output any of them. The product of elements of an empty array ( array of length 0 ) should be assumed to be 1 .",
    "input": "The first line of input data contains an integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014the number of test cases in the test. Then the descriptions of the input test cases follow. The first line of each test case description contains an integer n ( 1 \u2264 n \u2264 2 \u00b7 10^ 5 ) \u2014the length of array a . The next line contains n integers a_ 1, a_ 2, . . . , a_ n ( | a_ i| \u2264 2 ) \u2014 elements of array a . It is guaranteed that the sum of n over all test cases does not exceed 2 \u00b7 10^ 5 .",
    "output": "For each test case, output two non- negative numbers x and y ( 0 \u2264 x + y \u2264 n ) \u2014 such that the product ( multiplication) of the array numbers, after removing x elements from the beginning and y elements from the end, is maximal. If there is more than one way to get the maximal product, it is allowed to output any of them. Consider the product of numbers on empty array to be 1 .",
    "note": "In the first case, the maximal value of the product is 2 . Thus, we can either delete the first three elements ( obtain array [ 2] ) , or the last two and one first element ( also obtain array [ 2] ) , or the last two elements ( obtain array [ 1, 2] ) . Thus, in the first case, the answers fit: \" 3 0\" , or \" 1 2\" , or \" 0 2\" . In the second case, the maximum value of the product is 1 . Then we can remove all elements from the array because the value of the product on the empty array will be 1 . So the answer is \" 3 0\" , but there are other possible answers. In the third case, we can remove the first two elements of the array. Then we get the array: [ - 2, 2, - 1] . The product of the elements of the resulting array is ( - 2) \u00b7 2 \u00b7 ( - 1) = 4 . This value is the maximum possible value that can be obtained. Thus, for this case the answer is: \" 2 0\" .",
    "topics": [
      "brute force",
      "implementation",
      "math",
      "two pointers"
    ],
    "id": "1660D"
  },
  {
    "title": "Vlad and Candies",
    "url": "https://codeforces.com/problemset/problem/1660/B",
    "history": "Not so long ago, Vlad had a birthday, for which he was presented with a package of candies. There were n types of candies, there are a_ i candies of the type i ( 1 \u2264 i \u2264 n ) . Vlad decided to eat exactly one candy every time, choosing any of the candies of a type that is currently the most frequent ( if there are several such types, he can choose any of them) . To get the maximum pleasure from eating, Vlad does not want to eat two candies of the same type in a row. Help him figure out if he can eat all the candies without eating two identical candies in a row.",
    "input": "The first line of input data contains an integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of input test cases. The following is a description of t test cases of input, two lines for each. The first line of the case contains the single number n ( 1 \u2264 n \u2264 2 \u00b7 10^ 5 ) \u2014 the number of types of candies in the package. The second line of the case contains n integers a_ i ( 1 \u2264 a_ i \u2264 10^ 9 ) \u2014 the number of candies of the type i . It is guaranteed that the sum of n for all cases does not exceed 2 \u00b7 10^ 5 .",
    "output": "Output t lines, each of which contains the answer to the corresponding test case of input. As an answer, output \" YES\" if Vlad can eat candy as planned, and \" NO\" otherwise. You can output the answer in any case ( for example, the strings \" yEs\" , \" yes\" , \" Yes\" and \" YES\" will be recognized as a positive answer) .",
    "note": "In the first example, it is necessary to eat sweets in this order: a candy of the type 2 , it is the most frequent, now a = [ 2, 2] ; a candy of the type 1 , there are the same number of candies of the type 2 , but we just ate one, now a = [ 1, 2] ; a candy of the type 2 , it is the most frequent, now a = [ 1, 1] ; a candy of the type 1 , now a = [ 0, 1] ; a candy of the type 2 , now a = [ 0, 0] and the candy has run out. In the second example, all the candies are of the same type and it is impossible to eat them without eating two identical ones in a row. In the third example, first of all, a candy of the type 2 will be eaten, after which this kind will remain the only kind that is the most frequent, and you will have to eat a candy of the type 2 again.",
    "topics": [
      "math"
    ],
    "id": "1660B"
  },
  {
    "title": "Vasya and Coins",
    "url": "https://codeforces.com/problemset/problem/1660/A",
    "history": "Vasya decided to go to the grocery store. He found in his wallet a coins of 1 burle and b coins of 2 burles. He does not yet know the total cost of all goods, so help him find out s ( s > 0 ) : the minimum positive integer amount of money he cannot pay without change or pay at all using only his coins. For example, if a= 1 and b= 1 ( he has one 1 - burle coin and one 2 - burle coin) , then: he can pay 1 burle without change, paying with one 1 - burle coin, he can pay 2 burle without change, paying with one 2 - burle coin, he can pay 3 burle without change by paying with one 1 - burle coin and one 2 - burle coin, he cannot pay 4 burle without change ( moreover, he cannot pay this amount at all) . So for a= 1 and b= 1 the answer is s= 4 .",
    "input": "The first line of the input contains an integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases in the test. The description of each test case consists of one line containing two integers a_ i and b_ i ( 0 \u2264 a_ i, b_ i \u2264 10^ 8 ) \u2014 the number of 1 - burle coins and 2 - burles coins Vasya has respectively.",
    "output": "For each test case, on a separate line print one integer s ( s > 0 ) : the minimum positive integer amount of money that Vasya cannot pay without change or pay at all.",
    "note": "The first test case of the example is clarified into the main part of the statement. In the second test case, Vasya has only 1 burle coins, and he can collect either any amount from 1 to 4 , but 5 can' t. In the second test case, Vasya has only 2 burle coins, and he cannot pay 1 burle without change. In the fourth test case you don' t have any coins, and he can' t even pay 1 burle.",
    "topics": [
      "greedy",
      "math"
    ],
    "id": "1660A"
  },
  {
    "title": "Reverse Sort Sum",
    "url": "https://codeforces.com/problemset/problem/1659/D",
    "history": "Suppose you had an array A of n elements, each of which is 0 or 1 . Let us define a function f( k, A) which returns another array B , the result of sorting the first k elements of A in non- decreasing order. For example, f( 4, [ 0, 1, 1, 0, 0, 1, 0] ) = [ 0, 0, 1, 1, 0, 1, 0] . Note that the first 4 elements were sorted. Now consider the arrays B_ 1, B_ 2, . . . , B_ n generated by f( 1, A) , f( 2, A) , . . . , f( n, A) . Let C be the array obtained by taking the element- wise sum of B_ 1, B_ 2, . . . , B_ n . For example, let A= [ 0, 1, 0, 1] . Then we have B_ 1= [ 0, 1, 0, 1] , B_ 2= [ 0, 1, 0, 1] , B_ 3= [ 0, 0, 1, 1] , B_ 4= [ 0, 0, 1, 1] . Then C= B_ 1+ B_ 2+ B_ 3+ B_ 4= [ 0, 1, 0, 1] + [ 0, 1, 0, 1] + [ 0, 0, 1, 1] + [ 0, 0, 1, 1] = [ 0, 2, 2, 4] . You are given C . Determine a binary array A that would give C when processed as above. It is guaranteed that an array A exists for given C in the input.",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 1000 ) \u2014 the number of test cases. Each test case has two lines. The first line contains a single integer n ( 1 \u2264 n \u2264 2 \u00b7 10^ 5 ) . The second line contains n integers c_ 1, c_ 2, . . . , c_ n ( 0 \u2264 c_ i \u2264 n ) . It is guaranteed that a valid array A exists for the given C . The sum of n over all test cases does not exceed 2 \u00b7 10^ 5 .",
    "output": "For each test case, output a single line containing n integers a_ 1, a_ 2, . . . , a_ n ( a_ i is 0 or 1 ) . If there are multiple answers, you may output any of them.",
    "note": "Here' s the explanation for the first test case. Given that A= [ 1, 1, 0, 1] , we can construct each B_ i : B_ 1= [ 1, 1, 0, 1] ; B_ 2= [ 1, 1, 0, 1] ; B_ 3= [ 0, 1, 1, 1] ; B_ 4= [ 0, 1, 1, 1] And then, we can sum up each column above to get C= [ 1+ 1+ 0+ 0, 1+ 1+ 1+ 1, 0+ 0+ 1+ 1, 1+ 1+ 1+ 1] = [ 2, 4, 2, 4] .",
    "topics": [
      "constructive algorithms",
      "data structures",
      "greedy",
      "implementation",
      "math",
      "two pointers"
    ],
    "id": "1659D"
  },
  {
    "title": "Line Empire",
    "url": "https://codeforces.com/problemset/problem/1659/C",
    "history": "You are an ambitious king who wants to be the Emperor of The Reals. But to do that, you must first become Emperor of The Integers. Consider a number axis. The capital of your empire is initially at 0 . There are n unconquered kingdoms at positions 0< x_ 1< x_ 2< . . . < x_ n . You want to conquer all other kingdoms. There are two actions available to you: You can change the location of your capital ( let its current position be c_ 1 ) to any other conquered kingdom ( let its position be c_ 2 ) at a cost of a\u00b7 | c_ 1- c_ 2| . From the current capital ( let its current position be c_ 1 ) you can conquer an unconquered kingdom ( let its position be c_ 2 ) at a cost of b\u00b7 | c_ 1- c_ 2| . You cannot conquer a kingdom if there is an unconquered kingdom between the target and your capital. Note that you cannot place the capital at a point without a kingdom. In other words, at any point, your capital can only be at 0 or one of x_ 1, x_ 2, . . . , x_ n . Also note that conquering a kingdom does not change the position of your capital. Find the minimum total cost to conquer all kingdoms. Your capital can be anywhere at the end.",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 1000 ) \u2014 the number of test cases. The description of each test case follows. The first line of each test case contains 3 integers n , a , and b ( 1 \u2264 n \u2264 2 \u00b7 10^ 5 ; 1 \u2264 a, b \u2264 10^ 5 ) . The second line of each test case contains n integers x_ 1, x_ 2, . . . , x_ n ( 1 \u2264 x_ 1 < x_ 2 < . . . < x_ n \u2264 10^ 8 ) . The sum of n over all test cases does not exceed 2 \u00b7 10^ 5 .",
    "output": "For each test case, output a single integer \u2014 the minimum cost to conquer all kingdoms.",
    "note": "Here is an optimal sequence of moves for the second test case: Conquer the kingdom at position 1 with cost 3\u00b7( 1- 0) = 3 . Move the capital to the kingdom at position 1 with cost 6\u00b7( 1- 0) = 6 . Conquer the kingdom at position 5 with cost 3\u00b7( 5- 1) = 12 . Move the capital to the kingdom at position 5 with cost 6\u00b7( 5- 1) = 24 . Conquer the kingdom at position 6 with cost 3\u00b7( 6- 5) = 3 . Conquer the kingdom at position 21 with cost 3\u00b7( 21- 5) = 48 . Conquer the kingdom at position 30 with cost 3\u00b7( 30- 5) = 75 . The total cost is 3+ 6+ 12+ 24+ 3+ 48+ 75= 171 . You cannot get a lower cost than this.",
    "topics": [
      "binary search",
      "brute force",
      "dp",
      "greedy",
      "implementation",
      "math"
    ],
    "id": "1659C"
  },
  {
    "title": "Red Versus Blue",
    "url": "https://codeforces.com/problemset/problem/1659/A",
    "history": "Team Red and Team Blue competed in a competitive FPS. Their match was streamed around the world. They played a series of n matches. In the end, it turned out Team Red won r times and Team Blue won b times. Team Blue was less skilled than Team Red, so b was strictly less than r . You missed the stream since you overslept, but you think that the match must have been neck and neck since so many people watched it. So you imagine a string of length n where the i - th character denotes who won the i - th match \u2014 it is R if Team Red won or B if Team Blue won. You imagine the string was such that the maximum number of times a team won in a row was as small as possible. For example, in the series of matches RBBRRRB, Team Red won 3 times in a row, which is the maximum. You must find a string satisfying the above conditions. If there are multiple answers, print any.",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 1000 ) \u2014 the number of test cases. Each test case has a single line containing three integers n , r , and b ( 3 \u2264 n \u2264 100 ; 1 \u2264 b < r \u2264 n , r+ b= n ) .",
    "output": "For each test case, output a single line containing a string satisfying the given conditions. If there are multiple answers, print any.",
    "note": "The first test case of the first example gives the optimal answer for the example in the statement. The maximum number of times a team wins in a row in RBRBRBR is 1 . We cannot minimize it any further. The answer for the second test case of the second example is RRBRBRBRBR. The maximum number of times a team wins in a row is 2 , given by RR at the beginning. We cannot minimize the answer any further.",
    "topics": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "math"
    ],
    "id": "1659A"
  },
  {
    "title": "Gojou and Matrix Game",
    "url": "https://codeforces.com/problemset/problem/1658/E",
    "history": "Marin feels exhausted after a long day of cosplay, so Gojou invites her to play a game! Marin and Gojou take turns to place one of their tokens on an n \u00d7 n grid with Marin starting first. There are some restrictions and allowances on where to place tokens: Apart from the first move, the token placed by a player must be more than Manhattan distance k away from the previous token placed on the matrix. In other words, if a player places a token at ( x_ 1, y_ 1) , then the token placed by the other player in the next move must be in a cell ( x_ 2, y_ 2) satisfying | x_ 2 - x_ 1| + | y_ 2 - y_ 1| > k . Apart from the previous restriction, a token can be placed anywhere on the matrix, including cells where tokens were previously placed by any player. Whenever a player places a token on cell ( x, y) , that player gets v_ x, y points. All values of v on the grid are distinct. You still get points from a cell even if tokens were already placed onto the cell. The game finishes when each player makes 10^ 100 moves. Marin and Gojou will play n^ 2 games. For each cell of the grid, there will be exactly one game where Marin places a token on that cell on her first move. Please answer for each game, if Marin and Gojou play optimally ( after Marin' s first move) , who will have more points at the end? Or will the game end in a draw ( both players have the same points at the end) ?",
    "input": "The first line contains two integers n , k ( 3 \u2264 n \u2264 2000 , 1 \u2264 k \u2264 n - 2 ) . Note that under these constraints it is always possible to make a move. The following n lines contains n integers each. The j - th integer in the i - th line is v_ i, j ( 1 \u2264 v_ i, j\u2264 n^ 2 ) . All elements in v are distinct.",
    "output": "You should print n lines. In the i - th line, print n characters, where the j - th character is the result of the game in which Marin places her first token in the cell ( i, j) . Print ' M' if Marin wins, ' G' if Gojou wins, and ' D' if the game ends in a draw. Do not print spaces between the characters in one line.",
    "note": "",
    "topics": [
      "data structures",
      "dp",
      "games",
      "hashing",
      "implementation",
      "math",
      "number theory",
      "sortings"
    ],
    "id": "1658E"
  },
  {
    "title": "388535 (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1658/D2",
    "history": "This is the hard version of the problem. The difference in the constraints between both versions are colored below in red. You can make hacks only if all versions of the problem are solved. Marin and Gojou are playing hide- and- seek with an array. Gojou initially perform the following steps: First, Gojou chooses 2 integers l and r such that l \u2264 r . Then, Gojou will make an array a of length r- l+ 1 which is a permutation of the array [ l, l+ 1, . . . , r] . Finally, Gojou chooses a secret integer x and sets a_ i to a_ i \u2295 x for all i ( where \u2295 denotes the bitwise XOR operation) . Marin is then given the values of l, r and the final array a . She needs to find the secret integer x to win. Can you help her? Note that there may be multiple possible x that Gojou could have chosen. Marin can find any possible x that could have resulted in the final value of a .",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 5 ) \u2014 the number of test cases. In the first line of each test case contains two integers l and r ( 0\u2264l\u2264 r < 2^ 17 ) . The second line contains r - l + 1 space- seperated integers of a_ 1, a_ 2, . . . , a_ r- l+ 1 ( 0 \u2264 a_ i < 2^ 17 ) . It is guaranteed that array a is valid. It is guaranteed that the sum of r - l + 1 over all test cases does not exceed 2^ 17 .",
    "output": "For each test case print an integer x . If there are multiple answers, print any.",
    "note": "In the first test case, the original array is [ 7, 6, 5, 4] . In the second test case, the original array is [ 4, 7, 6, 5] . In the third test case, the original array is [ 3, 1, 2] .",
    "topics": [
      "bitmasks",
      "brute force",
      "data structures",
      "math"
    ],
    "id": "1658D2"
  },
  {
    "title": "388535 (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1658/D1",
    "history": "This is the easy version of the problem. The difference in the constraints between both versions is colored below in red. You can make hacks only if all versions of the problem are solved. Marin and Gojou are playing hide- and- seek with an array. Gojou initially performs the following steps: First, Gojou chooses 2 integers l and r such that l \u2264 r . Then, Gojou makes an array a of length r- l+ 1 which is a permutation of the array [ l, l+ 1, . . . , r] . Finally, Gojou chooses a secret integer x and sets a_ i to a_ i \u2295 x for all i ( where \u2295 denotes the bitwise XOR operation) . Marin is then given the values of l, r and the final array a . She needs to find the secret integer x to win. Can you help her? Note that there may be multiple possible x that Gojou could have chosen. Marin can find any possible x that could have resulted in the final value of a .",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 5 ) \u2014 the number of test cases. In the first line of each test case contains two integers l and r ( 0= l\u2264 r < 2^ 17 ) . The second line contains r - l + 1 integers of a_ 1, a_ 2, . . . , a_ r- l+ 1 ( 0 \u2264 a_ i < 2^ 17 ) . It is guaranteed that a can be generated using the steps performed by Gojou. It is guaranteed that the sum of r - l + 1 over all test cases does not exceed 2^ 17 .",
    "output": "For each test case print an integer x . If there are multiple answers, print any.",
    "note": "In the first test case, the original array is [ 3, 2, 1, 0] . In the second test case, the original array is [ 0, 3, 2, 1] . In the third test case, the original array is [ 2, 1, 0] .",
    "topics": [
      "bitmasks",
      "math"
    ],
    "id": "1658D1"
  },
  {
    "title": "Shinju and the Lost Permutation",
    "url": "https://codeforces.com/problemset/problem/1658/C",
    "history": "Shinju loves permutations very much! Today, she has borrowed a permutation p from Juju to play with. The i - th cyclic shift of a permutation p is a transformation on the permutation such that p = [ p_ 1, p_ 2, . . . , p_ n] will now become p = [ p_ n- i+ 1, . . . , p_ n, p_ 1, p_ 2, . . . , p_ n- i] . Let' s define the power of permutation p as the number of distinct elements in the prefix maximums array b of the permutation. The prefix maximums array b is the array of length n such that b_ i = max( p_ 1, p_ 2, . . . , p_ i) . For example, the power of [ 1, 2, 5, 4, 6, 3] is 4 since b= [ 1, 2, 5, 5, 6, 6] and there are 4 distinct elements in b . Unfortunately, Shinju has lost the permutation p ! The only information she remembers is an array c , where c_ i is the power of the ( i- 1) - th cyclic shift of the permutation p . She' s also not confident that she remembers it correctly, so she wants to know if her memory is good enough. Given the array c , determine if there exists a permutation p that is consistent with c . You do not have to construct the permutation p . A permutation is an array consisting of n distinct integers from 1 to n in arbitrary order. For example, [ 2, 3, 1, 5, 4] is a permutation, but [ 1, 2, 2] is not a permutation ( 2 appears twice in the array) and [ 1, 3, 4] is also not a permutation ( n= 3 but there is 4 in the array) .",
    "input": "The input consists of multiple test cases. The first line contains a single integer t ( 1 \u2264 t \u2264 5 \u00b7 10^ 3 ) \u2014 the number of test cases. The first line of each test case contains an integer n ( 1 \u2264 n \u2264 10^ 5 ) . The second line of each test case contains n integers c_ 1, c_ 2, . . . , c_ n ( 1 \u2264 c_ i \u2264 n ) . It is guaranteed that the sum of n over all test cases does not exceed 10^ 5 .",
    "output": "For each test case, print \" YES\" if there is a permutation p exists that satisfies the array c , and \" NO\" otherwise. You can output \" YES\" and \" NO\" in any case ( for example, strings \" yEs\" , \" yes\" , \" Yes\" and \" YES\" will be recognized as a positive response) .",
    "note": "In the first test case, the permutation [ 1] satisfies the array c . In the second test case, the permutation [ 2, 1] satisfies the array c . In the fifth test case, the permutation [ 5, 1, 2, 4, 6, 3] satisfies the array c . Let' s see why this is true. The zeroth cyclic shift of p is [ 5, 1, 2, 4, 6, 3] . Its power is 2 since b = [ 5, 5, 5, 5, 6, 6] and there are 2 distinct elements \u2014 5 and 6 . The first cyclic shift of p is [ 3, 5, 1, 2, 4, 6] . Its power is 3 since b= [ 3, 5, 5, 5, 5, 6] . The second cyclic shift of p is [ 6, 3, 5, 1, 2, 4] . Its power is 1 since b= [ 6, 6, 6, 6, 6, 6] . The third cyclic shift of p is [ 4, 6, 3, 5, 1, 2] . Its power is 2 since b= [ 4, 6, 6, 6, 6, 6] . The fourth cyclic shift of p is [ 2, 4, 6, 3, 5, 1] . Its power is 3 since b = [ 2, 4, 6, 6, 6, 6] . The fifth cyclic shift of p is [ 1, 2, 4, 6, 3, 5] . Its power is 4 since b = [ 1, 2, 4, 6, 6, 6] . Therefore, c = [ 2, 3, 1, 2, 3, 4] . In the third, fourth, and sixth testcases, we can show that there is no permutation that satisfies array c .",
    "topics": [
      "constructive algorithms",
      "math"
    ],
    "id": "1658C"
  },
  {
    "title": "Il Derby della Madonnina",
    "url": "https://codeforces.com/problemset/problem/1662/L",
    "history": "The derby between Milan and Inter is happening soon, and you have been chosen as the assistant referee for the match, also known as linesman. Your task is to move along the touch- line, namely the side of the field, always looking very carefully at the match to check for offside positions and other offences. Football is an extremely serious matter in Italy, and thus it is fundamental that you keep very close track of the ball for as much time as possible. This means that you want to maximise the number of kicks which you monitor closely. You are able to monitor closely a kick if, when it happens, you are in the position along the touch- line with minimum distance from the place where the kick happens. Fortunately, expert analysts have been able to accurately predict all the kicks which will occur during the game. That is, you have been given two lists of integers, t_ 1, . . . , t_ n and a_ 1, . . . , a_ n , indicating that t_ i seconds after the beginning of the match the ball will be kicked and you can monitor closely such kick if you are at the position a_ i along the touch- line. At the beginning of the game you start at position 0 and the maximum speed at which you can walk along the touch- line is v units per second ( i. e. , you can change your position by at most v each second) . What is the maximum number of kicks that you can monitor closely?",
    "input": "The first line contains two integers n and v ( 1 \u2264 n \u2264 2 \u00b7 10^ 5 , 1 \u2264 v \u2264 10^ 6 ) \u2014 the number of kicks that will take place and your maximum speed. The second line contains n integers t_ 1, . . . , t_ n ( 1 \u2264 t_ i \u2264 10^ 9 ) \u2014 the times of the kicks in the match. The sequence of times is guaranteed to be strictly increasing, i. e. , t_ 1 < t_ 2 < \u22ef < t_ n . The third line contains n integers a_ 1, . . . , a_ n ( - 10^ 9 \u2264 a_ i \u2264 10^ 9 ) \u2014 the positions along the touch- line where you have to be to monitor closely each kick.",
    "output": "Print the maximum number of kicks that you can monitor closely.",
    "note": "In the first sample, it is possible to move to the right at maximum speed for the first 3. 5 seconds and stay at position 7 until the first kick happens, and then immediately move right also at maximum speed to watch the second kick at position 17 . There is no way to monitor closely the third kick after the second kick, so at most 2 kicks can be seen.",
    "topics": [
      "data structures",
      "dp",
      "math"
    ],
    "id": "1662L"
  },
  {
    "title": "Juju and Binary String",
    "url": "https://codeforces.com/problemset/problem/1658/F",
    "history": "The cuteness of a binary string is the number of s divided by the length of the string. For example, the cuteness of is 3/ 5 . Juju has a binary string s of length n . She wants to choose some non- intersecting subsegments of s such that their concatenation has length m and it has the same cuteness as the string s . More specifically, she wants to find two arrays l and r of equal length k such that 1 \u2264 l_ 1 \u2264 r_ 1 < l_ 2 \u2264 r_ 2 < . . . < l_ k \u2264 r_ k \u2264 n , and also: \u2211_ i= 1^ k ( r_ i - l_ i + 1) = m ; The cuteness of s[ l_ 1, r_ 1] + s[ l_ 2, r_ 2] + . . . + s[ l_ k, r_ k] is equal to the cuteness of s , where s[ x, y] denotes the subsegment s_ x s_ x+ 1. . . s_ y , and + denotes string concatenation. Juju does not like splitting the string into many parts, so she also wants to minimize the value of k . Find the minimum value of k such that there exist l and r that satisfy the constraints above or determine that it is impossible to find such l and r for any k .",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. The first line of each test case contains two integers n and m ( 1 \u2264 m \u2264 n \u2264 2 \u00b7 10^ 5 ) . The second line of each test case contains a binary string s of length n . It is guaranteed that the sum of n over all test cases does not exceed 2 \u00b7 10^ 5 .",
    "output": "For each test case, if there is no valid pair of l and r , print - 1 . Otherwise, print k + 1 lines. In the first line, print a number k ( 1 \u2264 k \u2264 m ) \u2014 the minimum number of subsegments required. Then print k lines, the i - th should contain l_ i and r_ i ( 1 \u2264 l_ i \u2264 r_ i \u2264 n ) \u2014 the range of the i - th subsegment. Note that you should output the subsegments such that the inequality l_ 1 \u2264 r_ 1 < l_ 2 \u2264 r_ 2 < . . . < l_ k \u2264 r_ k is true.",
    "note": "In the first example, the cuteness of is the same as the cuteness of . In the second example, the cuteness of is 1/ 2 and there is no subsegment of size 6 with the same cuteness. So we must use 2 disjoint subsegments and . In the third example, there are 8 ways to split the string such that \u2211_ i= 1^ k ( r_ i - l_ i + 1) = 3 but none of them has the same cuteness as . In the last example, we don' t have to split the string.",
    "topics": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "math"
    ],
    "id": "1658F"
  },
  {
    "title": "Marin and Anti-coprime Permutation",
    "url": "https://codeforces.com/problemset/problem/1658/B",
    "history": "Marin wants you to count number of permutations that are beautiful. A beautiful permutation of length n is a permutation that has the following property: ( 1 \u00b7 p_ 1, 2 \u00b7 p_ 2, . . . , n \u00b7 p_ n) > 1, where is the greatest common divisor. A permutation is an array consisting of n distinct integers from 1 to n in arbitrary order. For example, [ 2, 3, 1, 5, 4] is a permutation, but [ 1, 2, 2] is not a permutation ( 2 appears twice in the array) and [ 1, 3, 4] is also not a permutation ( n= 3 but there is 4 in the array) .",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 10^ 3 ) \u2014 the number of test cases. Each test case consists of one line containing one integer n ( 1 \u2264 n \u2264 10^ 3 ) .",
    "output": "For each test case, print one integer \u2014 number of beautiful permutations. Because the answer can be very big, please print the answer modulo 998 244 353 .",
    "note": "In first test case, we only have one permutation which is [ 1] but it is not beautiful because ( 1 \u00b7 1) = 1 . In second test case, we only have one beautiful permutation which is [ 2, 1] because ( 1 \u00b7 2, 2 \u00b7 1) = 2 .",
    "topics": [
      "combinatorics",
      "math",
      "number theory"
    ],
    "id": "1658B"
  },
  {
    "title": "Marin and Photoshoot",
    "url": "https://codeforces.com/problemset/problem/1658/A",
    "history": "Today, Marin is at a cosplay exhibition and is preparing for a group photoshoot! For the group picture, the cosplayers form a horizontal line. A group picture is considered beautiful if for every contiguous segment of at least 2 cosplayers, the number of males does not exceed the number of females ( obviously) . Currently, the line has n cosplayers which can be described by a binary string s . The i - th cosplayer is male if s_ i = 0 and female if s_ i = 1 . To ensure that the line is beautiful, you can invite some additional cosplayers ( possibly zero) to join the line at any position. You can' t remove any cosplayer from the line. Marin wants to know the minimum number of cosplayers you need to invite so that the group picture of all the cosplayers is beautiful. She can' t do this on her own, so she' s asking you for help. Can you help her?",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 3 ) \u2014 the number of test cases. The first line of each test case contains a positive integer n ( 1 \u2264 n \u2264 100 ) \u2014 the number of cosplayers in the initial line. The second line of each test case contains a binary string s of length n \u2014 describing the cosplayers already in line. Each character of the string is either 0 describing a male, or 1 describing a female. Note that there is no limit on the sum of n .",
    "output": "For each test case, print the minimum number of cosplayers you need to invite so that the group picture of all the cosplayers is beautiful.",
    "note": "In the first test case, for each pair of adjacent cosplayers, you can invite two female cosplayers to stand in between them. Then, 000 \u2192 0110110 . In the third test case, you can invite one female cosplayer to stand next to the second cosplayer. Then, 010 \u2192 0110 .",
    "topics": [
      "constructive algorithms",
      "implementation",
      "math"
    ],
    "id": "1658A"
  },
  {
    "title": "Star MST",
    "url": "https://codeforces.com/problemset/problem/1657/E",
    "history": "In this problem, we will consider complete undirected graphs consisting of n vertices with weighted edges. The weight of each edge is an integer from 1 to k . An undirected graph is considered beautiful if the sum of weights of all edges incident to vertex 1 is equal to the weight of MST in the graph. MST is the minimum spanning tree \u2014 a tree consisting of n- 1 edges of the graph, which connects all n vertices and has the minimum sum of weights among all such trees; the weight of MST is the sum of weights of all edges in it. Calculate the number of complete beautiful graphs having exactly n vertices and the weights of edges from 1 to k . Since the answer might be large, print it modulo 998244353 .",
    "input": "The only line contains two integers n and k ( 2 \u2264 n \u2264 250 ; 1 \u2264 k \u2264 250 ) .",
    "output": "Print one integer \u2014 the number of complete beautiful graphs having exactly n vertices and the weights of edges from 1 to k . Since the answer might be large, print it modulo 998244353 .",
    "note": "",
    "topics": [
      "combinatorics",
      "dp",
      "graph matchings",
      "math"
    ],
    "id": "1657E"
  },
  {
    "title": "For Gamers. By Gamers.",
    "url": "https://codeforces.com/problemset/problem/1657/D",
    "history": "Monocarp is playing a strategy game. In the game, he recruits a squad to fight monsters. Before each battle, Monocarp has C coins to spend on his squad. Before each battle starts, his squad is empty. Monocarp chooses one type of units and recruits no more units of that type than he can recruit with C coins. There are n types of units. Every unit type has three parameters: c_ i \u2014 the cost of recruiting one unit of the i - th type; d_ i \u2014 the damage that one unit of the i - th type deals in a second; h_ i \u2014 the amount of health of one unit of the i - th type. Monocarp has to face m monsters. Every monster has two parameters: D_ j \u2014 the damage that the j - th monster deals in a second; H_ j \u2014 the amount of health the j - th monster has. Monocarp has to fight only the j - th monster during the j - th battle. He wants all his recruited units to stay alive. Both Monocarp' s squad and the monster attack continuously ( not once per second) and at the same time. Thus, Monocarp wins the battle if and only if his squad kills the monster strictly faster than the monster kills one of his units. The time is compared with no rounding. For each monster, Monocarp wants to know the minimum amount of coins he has to spend to kill that monster. If this amount is greater than C , then report that it' s impossible to kill that monster.",
    "input": "The first line contains two integers n and C ( 1 \u2264 n \u2264 3 \u00b7 10^ 5 ; 1 \u2264 C \u2264 10^ 6 ) \u2014 the number of types of units and the amount of coins Monocarp has before each battle. The i - th of the next n lines contains three integers c_ i, d_ i and h_ i ( 1 \u2264 c_ i \u2264 C ; 1 \u2264 d_ i, h_ i \u2264 10^ 6 ) . The next line contains a single integer m ( 1 \u2264 m \u2264 3 \u00b7 10^ 5 ) \u2014 the number of monsters that Monocarp has to face. The j - th of the next m lines contains two integers D_ j and H_ j ( 1 \u2264 D_ j \u2264 10^ 6 ; 1 \u2264 H_ j \u2264 10^ 12 ) .",
    "output": "Print m integers. For each monster, print the minimum amount of coins Monocarp has to spend to kill that monster. If this amount is greater than C , then print - 1 .",
    "note": "Consider the first monster of the first example. Monocarp can' t recruit one unit of the first type, because it will take both him and the monster 0. 75 seconds to kill each other. He can recruit two units for the cost of 6 coins and kill the monster in 0. 375 second. Monocarp can recruit one unit of the second type, because he kills the monster in 0. 6 seconds, and the monster kills him in 0. 625 seconds. The unit is faster. Thus, 5 coins is enough. Monocarp will need at least three units of the third type to kill the first monster, that will cost 30 coins. Monocarp will spend the least coins if he chooses the second type of units and recruits one unit of that type.",
    "topics": [
      "binary search",
      "brute force",
      "greedy",
      "math",
      "sortings"
    ],
    "id": "1657D"
  },
  {
    "title": "Integer Moves",
    "url": "https://codeforces.com/problemset/problem/1657/A",
    "history": "There' s a chip in the point ( 0, 0) of the coordinate plane. In one operation, you can move the chip from some point ( x_ 1, y_ 1) to some point ( x_ 2, y_ 2) if the Euclidean distance between these two points is an integer ( i. e. \u221a( ( x_ 1- x_ 2) ^ 2+ ( y_ 1- y_ 2) ^ 2) is integer) . Your task is to determine the minimum number of operations required to move the chip from the point ( 0, 0) to the point ( x, y) .",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 3000 ) \u2014 number of test cases. The single line of each test case contains two integers x and y ( 0 \u2264 x, y \u2264 50 ) \u2014 the coordinates of the destination point.",
    "output": "For each test case, print one integer \u2014 the minimum number of operations required to move the chip from the point ( 0, 0) to the point ( x, y) .",
    "note": "In the first example, one operation ( 0, 0) \u2192 ( 8, 6) is enough. \u221a( ( 0- 8) ^ 2+ ( 0- 6) ^ 2) = \u221a( 64+ 36) = \u221a( 100) = 10 is an integer. In the second example, the chip is already at the destination point. In the third example, the chip can be moved as follows: ( 0, 0) \u2192 ( 5, 12) \u2192 ( 9, 15) . \u221a( ( 0- 5) ^ 2+ ( 0- 12) ^ 2) = \u221a( 25+ 144) = \u221a( 169) = 13 and \u221a( ( 5- 9) ^ 2+ ( 12- 15) ^ 2) = \u221a( 16+ 9) = \u221a( 25) = 5 are integers.",
    "topics": [
      "brute force",
      "math"
    ],
    "id": "1657A"
  },
  {
    "title": "Equal LCM Subsets",
    "url": "https://codeforces.com/problemset/problem/1656/H",
    "history": "You are given two sets of positive integers A and B . You have to find two non- empty subsets S_ A \u2286 A , S_ B \u2286 B so that the least common multiple ( LCM) of the elements of S_ A is equal to the least common multiple ( LCM) of the elements of S_ B .",
    "input": "The input consists of multiple test cases. The first line of the input contains one integer t ( 1 \u2264 t \u2264 200 ) , the number of test cases. For each test case, there is one line containing two integers n, m ( 1 \u2264 n, m \u2264 1000 ) , the sizes of the sets A and B , respectively. The next line contains n distinct integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 4 \u00b7 10^ 36 ) , the elements of A . The next line contains m distinct integers b_ 1, b_ 2, . . . , b_ m ( 1 \u2264 b_ i \u2264 4 \u00b7 10^ 36 ) , the elements of B . The sum of n for all test cases and the sum of m for all test cases is at most 1000 .",
    "output": "For each test case, if there do not exist two subsets with equal least common multiple, output one line with NO. Otherwise, output one line with YES, followed by a line with two integers | S_ A| , | S_ B| ( 1 \u2264 | S_ A| \u2264 n , 1 \u2264 | S_ B| \u2264 m ) , the sizes of the subsets S_ A and S_ B The next line should contain | S_ A| integers x_ 1, x_ 2, . . . , x_ | S_ A| , the elements of S_ A , followed by a line with | S_ B| integers y_ 1, y_ 2, . . . , y_ | S_ B| , the elements of S_ B . If there are multiple possible pairs of subsets, you can print any.",
    "note": "",
    "topics": [
      "data structures",
      "math",
      "number theory"
    ],
    "id": "1656H"
  },
  {
    "title": "Cycle Palindrome",
    "url": "https://codeforces.com/problemset/problem/1656/G",
    "history": "We say that a sequence of n integers a_ 1, a_ 2, . . . , a_ n is a palindrome if for all 1 \u2264 i \u2264 n , a_ i = a_ n- i+ 1 . You are given a sequence of n integers a_ 1, a_ 2, . . . , a_ n and you have to find, if it exists, a cycle permutation \u03c3 so that the sequence a_ \u03c3( 1) , a_ \u03c3( 2) , . . . , a_ \u03c3( n) is a palindrome. A permutation of 1, 2, . . . , n is a bijective function from { 1, 2, . . . , n} to { 1, 2, . . . , n} . We say that a permutation \u03c3 is a cycle permutation if 1, \u03c3( 1) , \u03c3^ 2( 1) , . . . , \u03c3^ n- 1( 1) are pairwise different numbers. Here \u03c3^ m( 1) denotes \u03c3( \u03c3( . . . \u03c3_ m times( 1) . . . ) ) .",
    "input": "The input consists of multiple test cases. The first line contains a single integer t ( 1 \u2264 t \u2264 3 \u00b7 10^ 4 ) \u2014 the number of test cases. Description of the test cases follows. The first line of each test case contains an integer n ( 2 \u2264 n \u2264 2 \u00b7 10^ 5 ) \u2014 the size of the sequence. The second line of each test case contains n integers a_ 1, . . . , a_ n ( 1 \u2264 a_ i \u2264 n ) . The sum of n for all test cases is at most 2 \u00b7 10^ 5 .",
    "output": "For each test case, output one line with YES if a cycle permutation exists, otherwise output one line with NO. If the answer is YES, output one additional line with n integers \u03c3( 1) , \u03c3( 2) , . . . , \u03c3( n) , the permutation. If there is more than one permutation, you may print any.",
    "note": "",
    "topics": [
      "constructive algorithms",
      "graphs",
      "math"
    ],
    "id": "1656G"
  },
  {
    "title": "Parametric MST",
    "url": "https://codeforces.com/problemset/problem/1656/F",
    "history": "You are given n integers a_ 1, a_ 2, . . . , a_ n . For any real number t , consider the complete weighted graph on n vertices K_ n( t) with weight of the edge between vertices i and j equal to w_ ij( t) = a_ i \u00b7 a_ j + t \u00b7 ( a_ i + a_ j) . Let f( t) be the cost of the minimum spanning tree of K_ n( t) . Determine whether f( t) is bounded above and, if so, output the maximum value it attains.",
    "input": "The input consists of multiple test cases. The first line contains a single integer T ( 1 \u2264 T \u2264 10^ 4 ) \u2014 the number of test cases. Description of the test cases follows. The first line of each test case contains an integer n ( 2 \u2264 n \u2264 2 \u00b7 10^ 5 ) \u2014 the number of vertices of the graph. The second line of each test case contains n integers a_ 1, a_ 2, . . . , a_ n ( - 10^ 6 \u2264 a_ i \u2264 10^ 6 ) . The sum of n for all test cases is at most 2 \u00b7 10^ 5 .",
    "output": "For each test case, print a single line with the maximum value of f( t) ( it can be shown that it is an integer) , or INF if f( t) is not bounded above.",
    "note": "",
    "topics": [
      "binary search",
      "constructive algorithms",
      "graphs",
      "greedy",
      "math",
      "sortings"
    ],
    "id": "1656F"
  },
  {
    "title": "Equal Tree Sums",
    "url": "https://codeforces.com/problemset/problem/1656/E",
    "history": "You are given an undirected unrooted tree, i. e. a connected undirected graph without cycles. You must assign a nonzero integer weight to each vertex so that the following is satisfied: if any vertex of the tree is removed, then each of the remaining connected components has the same sum of weights in its vertices.",
    "input": "The input consists of multiple test cases. The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. Description of the test cases follows. The first line of each test case contains an integer n ( 3 \u2264 n \u2264 10^ 5 ) \u2014 the number of vertices of the tree. The next n- 1 lines of each case contain each two integers u, v ( 1 \u2264 u, v \u2264 n ) denoting that there is an edge between vertices u and v . It is guaranteed that the given edges form a tree. The sum of n for all test cases is at most 10^ 5 .",
    "output": "For each test case, you must output one line with n space separated integers a_ 1, a_ 2, . . . , a_ n , where a_ i is the weight assigned to vertex i . The weights must satisfy - 10^ 5 \u2264 a_ i \u2264 10^ 5 and a_ i = \u0338 0 . It can be shown that there always exists a solution satisfying these constraints. If there are multiple possible solutions, output any of them.",
    "note": "In the first case, when removing vertex 1 all remaining connected components have sum 5 and when removing vertex 3 all remaining connected components have sum 2 . When removing other vertices, there is only one remaining connected component so all remaining connected components have the same sum.",
    "topics": [
      "constructive algorithms",
      "dfs and similar",
      "math",
      "trees"
    ],
    "id": "1656E"
  },
  {
    "title": "K-good",
    "url": "https://codeforces.com/problemset/problem/1656/D",
    "history": "We say that a positive integer n is k - good for some positive integer k if n can be expressed as a sum of k positive integers which give k distinct remainders when divided by k . Given a positive integer n , find some k \u2265 2 so that n is k - good or tell that such a k does not exist.",
    "input": "The input consists of multiple test cases. The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 5 ) \u2014 the number of test cases. Each test case consists of one line with an integer n ( 2 \u2264 n \u2264 10^ 18 ) .",
    "output": "For each test case, print a line with a value of k such that n is k - good ( k \u2265 2 ) , or - 1 if n is not k - good for any k . If there are multiple valid values of k , you can print any of them.",
    "note": "6 is a 3 - good number since it can be expressed as a sum of 3 numbers which give different remainders when divided by 3 : 6 = 1 + 2 + 3 . 15 is also a 3 - good number since 15 = 1 + 5 + 9 and 1, 5, 9 give different remainders when divided by 3 . 20 is a 5 - good number since 20 = 2 + 3 + 4 + 5 + 6 and 2, 3, 4, 5, 6 give different remainders when divided by 5 .",
    "topics": [
      "constructive algorithms",
      "math",
      "number theory"
    ],
    "id": "1656D"
  },
  {
    "title": "Make Equal With Mod",
    "url": "https://codeforces.com/problemset/problem/1656/C",
    "history": "You are given an array of n non- negative integers a_ 1, a_ 2, . . . , a_ n . You can make the following operation: choose an integer x \u2265 2 and replace each number of the array by the remainder when dividing that number by x , that is, for all 1 \u2264 i \u2264 n set a_ i to a_ i x . Determine if it is possible to make all the elements of the array equal by applying the operation zero or more times.",
    "input": "The input consists of multiple test cases. The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. Description of the test cases follows. The first line of each test case contains an integer n ( 1 \u2264 n \u2264 10^ 5 ) \u2014 the length of the array. The second line of each test case contains n integers a_ 1, a_ 2, . . . , a_ n ( 0 \u2264 a_ i \u2264 10^ 9 ) where a_ i is the i - th element of the array. The sum of n for all test cases is at most 2 \u00b7 10^ 5 .",
    "output": "For each test case, print a line with YES if you can make all elements of the list equal by applying the operation. Otherwise, print NO. You may print each letter in any case ( for example, \" YES\" , \" Yes\" , \" yes\" , \" yEs\" will all be recognized as a positive answer) .",
    "note": "In the first test case, one can apply the operation with x = 3 to obtain the array [ 2, 2, 0, 2] , and then apply the operation with x = 2 to obtain [ 0, 0, 0, 0] . In the second test case, all numbers are already equal. In the fourth test case, applying the operation with x = 4 results in the array [ 1, 1, 1, 1] .",
    "topics": [
      "constructive algorithms",
      "math",
      "number theory",
      "sortings"
    ],
    "id": "1656C"
  },
  {
    "title": "Subtract Operation",
    "url": "https://codeforces.com/problemset/problem/1656/B",
    "history": "You are given a list of n integers. You can perform the following operation: you choose an element x from the list, erase x from the list, and subtract the value of x from all the remaining elements. Thus, in one operation, the length of the list is decreased by exactly 1 . Given an integer k ( k> 0 ) , find if there is some sequence of n- 1 operations such that, after applying the operations, the only remaining element of the list is equal to k .",
    "input": "The input consists of multiple test cases. The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. Description of the test cases follows. The first line of each test case contains two integers n and k ( 2 \u2264 n \u2264 2\u00b7 10^ 5 , 1 \u2264 k \u2264 10^ 9 ) , the number of integers in the list, and the target value, respectively. The second line of each test case contains the n integers of the list a_ 1, a_ 2, . . . , a_ n ( - 10^ 9 \u2264 a_ i \u2264 10^ 9 ) . It is guaranteed that the sum of n over all test cases is not greater that 2 \u00b7 10^ 5 .",
    "output": "For each test case, print YES if you can achieve k with a sequence of n- 1 operations. Otherwise, print NO. You may print each letter in any case ( for example, \" YES\" , \" Yes\" , \" yes\" , \" yEs\" will all be recognized as a positive answer) .",
    "note": "In the first example we have the list { 4, 2, 2, 7} , and we have the target k = 5 . One way to achieve it is the following: first we choose the third element, obtaining the list { 2, 0, 5} . Next we choose the first element, obtaining the list { - 2, 3} . Finally, we choose the first element, obtaining the list { 5} .",
    "topics": [
      "data structures",
      "greedy",
      "math",
      "two pointers"
    ],
    "id": "1656B"
  },
  {
    "title": "Good Pairs",
    "url": "https://codeforces.com/problemset/problem/1656/A",
    "history": "You are given an array a_ 1, a_ 2, . . . , a_ n of positive integers. A good pair is a pair of indices ( i, j) with 1 \u2264 i, j \u2264 n such that, for all 1 \u2264 k \u2264 n , the following equality holds: | a_ i - a_ k| + | a_ k - a_ j| = | a_ i - a_ j| , where | x| denotes the absolute value of x . Find a good pair. Note that i can be equal to j .",
    "input": "The input consists of multiple test cases. The first line contains a single integer t ( 1 \u2264 t \u2264 1000 ) \u2014 the number of test cases. Description of the test cases follows. The first line of each test case contains an integer n ( 1 \u2264 n \u2264 10^ 5 ) \u2014 the length of the array. The second line of each test case contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 9 ) where a_ i is the i - th element of the array. The sum of n for all test cases is at most 2 \u00b7 10^ 5 .",
    "output": "For each test case, print a single line with two space- separated indices i and j which form a good pair of the array. The case i= j is allowed. It can be shown that such a pair always exists. If there are multiple good pairs, print any of them.",
    "note": "In the first case, for i = 2 and j = 3 the equality holds true for all k : k = 1 : | a_ 2 - a_ 1| + | a_ 1 - a_ 3| = | 2 - 5| + | 5 - 7| = 5 = | 2 - 7| = | a_ 2- a_ 3| , k = 2 : | a_ 2 - a_ 2| + | a_ 2 - a_ 3| = | 2 - 2| + | 2 - 7| = 5 = | 2 - 7| = | a_ 2- a_ 3| , k = 3 : | a_ 2 - a_ 3| + | a_ 3 - a_ 3| = | 2 - 7| + | 7 - 7| = 5 = | 2 - 7| = | a_ 2- a_ 3| .",
    "topics": [
      "math",
      "sortings"
    ],
    "id": "1656A"
  },
  {
    "title": "Three Minimums",
    "url": "https://codeforces.com/problemset/problem/1654/H",
    "history": "Given a list of distinct values, we denote with first minimum, second minimum, and third minimum the three smallest values ( in increasing order) . A permutation p_ 1, p_ 2, . . . , p_ n is good if the following statement holds for all pairs ( l, r) with 1\u2264 l < l+ 2 \u2264 r\u2264 n . If { p_ l, p_ r} are ( not necessarily in this order) the first and second minimum of p_ l, p_ l+ 1, . . . , p_ r then the third minimum of p_ l, p_ l+ 1, . . . , p_ r is either p_ l+ 1 or p_ r- 1 . You are given an integer n and a string s of length m consisting of characters \" < \" and \" > \" . Count the number of good permutations p_ 1, p_ 2, . . . , p_ n such that, for all 1\u2264 i\u2264 m , p_ i < p_ i+ 1 if s_ i = \" < \" ; p_ i > p_ i+ 1 if s_ i = \" > \" . As the result can be very large, you should print it modulo 998 244 353 .",
    "input": "The first line contains two integers n and m ( 2 \u2264 n \u2264 2 \u00b7 10^ 5 , 1 \u2264 m \u2264min( 100, n- 1) ) . The second line contains a string s of length m , consisting of characters \" < \" and \" > \" .",
    "output": "Print a single integer: the number of good permutations satisfying the constraints described in the statement, modulo 998 244 353 .",
    "note": "In the first test, there are 5 good permutations satisfying the constraints given by the string s : [ 4, 3, 2, 1, 5] , [ 5, 3, 2, 1, 4] , [ 5, 4, 2, 1, 3] , [ 5, 4, 3, 1, 2] , [ 5, 4, 3, 2, 1] . Each of them is good; satisfies p_ 1 > p_ 2 ; satisfies p_ 2 > p_ 3 ; satisfies p_ 3 > p_ 4 . In the second test, there are 60 permutations such that p_ 1 < p_ 2 . Only 56 of them are good: the permutations [ 1, 4, 3, 5, 2] , [ 1, 5, 3, 4, 2] , [ 2, 4, 3, 5, 1] , [ 2, 5, 3, 4, 1] are not good because the required condition doesn' t hold for ( l, r) = ( 1, 5) . For example, for the permutation [ 2, 4, 3, 5, 1] , the first minimum and the second minimum are p_ 5 and p_ 1 , respectively ( so they are { p_ l, p_ r} up to reordering) ; the third minimum is p_ 3 ( neither p_ l+ 1 nor p_ r- 1 ) . In the third test, there are 23 good permutations satisfying the constraints given by the string s : [ 1, 2, 4, 3, 6, 5] , [ 1, 2, 5, 3, 6, 4] , [ 1, 2, 6, 3, 5, 4] , [ 1, 3, 4, 2, 6, 5] , [ 1, 3, 5, 2, 6, 4] , [ 1, 3, 6, 2, 5, 4] , [ 1, 4, 5, 2, 6, 3] , [ 1, 4, 6, 2, 5, 3] , [ 1, 5, 6, 2, 4, 3] , [ 2, 3, 4, 1, 6, 5] , [ 2, 3, 5, 1, 6, 4] , [ 2, 3, 6, 1, 5, 4] , [ 2, 4, 5, 1, 6, 3] , [ 2, 4, 6, 1, 5, 3] , [ 2, 5, 6, 1, 4, 3] , [ 3, 4, 5, 1, 6, 2] , [ 3, 4, 5, 2, 6, 1] , [ 3, 4, 6, 1, 5, 2] , [ 3, 4, 6, 2, 5, 1] , [ 3, 5, 6, 1, 4, 2] , [ 3, 5, 6, 2, 4, 1] , [ 4, 5, 6, 1, 3, 2] , [ 4, 5, 6, 2, 3, 1] .",
    "topics": [
      "combinatorics",
      "constructive algorithms",
      "divide and conquer",
      "dp",
      "fft",
      "math"
    ],
    "id": "1654H"
  },
  {
    "title": "Arithmetic Operations",
    "url": "https://codeforces.com/problemset/problem/1654/E",
    "history": "You are given an array of integers a_ 1, a_ 2, . . . , a_ n . You can do the following operation any number of times ( possibly zero) : Choose any index i and set a_ i to any integer ( positive, negative or 0 ) . What is the minimum number of operations needed to turn a into an arithmetic progression? The array a is an arithmetic progression if a_ i+ 1- a_ i= a_ i- a_ i- 1 for any 2 \u2264 i \u2264 n- 1 .",
    "input": "The first line contains a single integer n ( 1 \u2264 n \u2264 10^ 5 ) . The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 5 ) .",
    "output": "Print a single integer: the minimum number of operations needed to turn a into an arithmetic progression.",
    "note": "In the first test, you can get the array a = [ 11, 10, 9, 8, 7, 6, 5, 4, 3] by performing 6 operations: Set a_ 3 to 9 : the array becomes [ 3, 2, 9, 8, 6, 9, 5, 4, 1] ; Set a_ 2 to 10 : the array becomes [ 3, 10, 9, 8, 6, 9, 5, 4, 1] ; Set a_ 6 to 6 : the array becomes [ 3, 10, 9, 8, 6, 6, 5, 4, 1] ; Set a_ 9 to 3 : the array becomes [ 3, 10, 9, 8, 6, 6, 5, 4, 3] ; Set a_ 5 to 7 : the array becomes [ 3, 10, 9, 8, 7, 6, 5, 4, 3] ; Set a_ 1 to 11 : the array becomes [ 11, 10, 9, 8, 7, 6, 5, 4, 3] . a is an arithmetic progression: in fact, a_ i+ 1- a_ i= a_ i- a_ i- 1= - 1 for any 2 \u2264 i \u2264 n- 1 . There is no sequence of less than 6 operations that makes a an arithmetic progression. In the second test, you can get the array a = [ - 1, 2, 5, 8, 11, 14, 17, 20, 23, 26, 29, 32, 35, 38] by performing 10 operations. In the third test, you can get the array a = [ 100000, 80000, 60000, 40000, 20000, 0, - 20000, - 40000, - 60000, - 80000] by performing 7 operations.",
    "topics": [
      "brute force",
      "data structures",
      "graphs",
      "math"
    ],
    "id": "1654E"
  },
  {
    "title": "Potion Brewing Class",
    "url": "https://codeforces.com/problemset/problem/1654/D",
    "history": "Alice' s potion making professor gave the following assignment to his students: brew a potion using n ingredients, such that the proportion of ingredient i in the final potion is r_ i > 0 ( and r_ 1 + r_ 2 + \u22ef + r_ n = 1 ) . He forgot the recipe, and now all he remembers is a set of n- 1 facts of the form, \" ingredients i and j should have a ratio of x to y \" ( i. e. , if a_ i and a_ j are the amounts of ingredient i and j in the potion respectively, then it must hold a_ i/ a_ j = x/ y ) , where x and y are positive integers. However, it is guaranteed that the set of facts he remembers is sufficient to uniquely determine the original values r_ i . He decided that he will allow the students to pass the class as long as they submit a potion which satisfies all of the n- 1 requirements ( there may be many such satisfactory potions) , and contains a positive integer amount of each ingredient. Find the minimum total amount of ingredients needed to make a potion which passes the class. As the result can be very large, you should print the answer modulo 998 244 353 .",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. The first line of each test case contains a single integer n ( 2 \u2264 n \u2264 2 \u00b7 10^ 5 ) . Each of the next n- 1 lines contains four integers i, j, x, y ( 1 \u2264 i, j \u2264 n , i= \u0338j , 1\u2264 x, y \u2264 n ) \u2014 ingredients i and j should have a ratio of x to y . It is guaranteed that the set of facts is sufficient to uniquely determine the original values r_ i . It is also guaranteed that the sum of n for all test cases does not exceed 2 \u00b7 10^ 5 .",
    "output": "For each test case, print the minimum total amount of ingredients needed to make a potion which passes the class, modulo 998 244 353 .",
    "note": "In the first test case, the minimum total amount of ingredients is 69 . In fact, the amounts of ingredients 1, 2, 3, 4 of a valid potion are 16, 12, 9, 32 , respectively. The potion is valid because Ingredients 3 and 2 have a ratio of 9 : 12 = 3 : 4 ; Ingredients 1 and 2 have a ratio of 16 : 12 = 4 : 3 ; Ingredients 1 and 4 have a ratio of 16 : 32 = 2 : 4 . In the second test case, the amounts of ingredients 1, 2, 3, 4, 5, 6, 7, 8 in the potion that minimizes the total amount of ingredients are 60, 60, 24, 48, 32, 60, 45, 30 .",
    "topics": [
      "dfs and similar",
      "math",
      "number theory",
      "trees"
    ],
    "id": "1654D"
  },
  {
    "title": "Sum of Matchings",
    "url": "https://codeforces.com/problemset/problem/1651/E",
    "history": "Let' s denote the size of the maximum matching in a graph G as MM( G) . You are given a bipartite graph. The vertices of the first part are numbered from 1 to n , the vertices of the second part are numbered from n+ 1 to 2n . Each vertex' s degree is 2 . For a tuple of four integers ( l, r, L, R) , where 1 \u2264 l \u2264 r \u2264 n and n+ 1 \u2264 L \u2264 R \u2264 2n , let' s define G' ( l, r, L, R) as the graph which consists of all vertices of the given graph that are included in the segment [ l, r] or in the segment [ L, R] , and all edges of the given graph such that each of their endpoints belongs to one of these segments. In other words, to obtain G' ( l, r, L, R) from the original graph, you have to remove all vertices i such that i \u2208\u0338 [ l, r] and i \u2208\u0338 [ L, R] , and all edges incident to these vertices. Calculate the sum of MM( G( l, r, L, R) ) over all tuples of integers ( l, r, L, R) having 1 \u2264 l \u2264 r \u2264 n and n+ 1 \u2264 L \u2264 R \u2264 2n .",
    "input": "The first line contains one integer n ( 2 \u2264 n \u2264 1500 ) \u2014 the number of vertices in each part. Then 2n lines follow, each denoting an edge of the graph. The i - th line contains two integers x_ i and y_ i ( 1 \u2264 x_ i \u2264 n ; n + 1 \u2264 y_ i \u2264 2n ) \u2014 the endpoints of the i - th edge. There are no multiple edges in the given graph, and each vertex has exactly two incident edges.",
    "output": "Print one integer \u2014 the sum of MM( G( l, r, L, R) ) over all tuples of integers ( l, r, L, R) having 1 \u2264 l \u2264 r \u2264 n and n+ 1 \u2264 L \u2264 R \u2264 2n .",
    "note": "",
    "topics": [
      "brute force",
      "combinatorics",
      "constructive algorithms",
      "dfs and similar",
      "graph matchings",
      "greedy",
      "math"
    ],
    "id": "1651E"
  },
  {
    "title": "Rescheduling the Exam",
    "url": "https://codeforces.com/problemset/problem/1650/E",
    "history": "Now Dmitry has a session, and he has to pass n exams. The session starts on day 1 and lasts d days. The i th exam will take place on the day of a_ i ( 1 \u2264 a_ i \u2264 d ) , all a_ i \u2014 are different. Sample, where n= 3 , d= 12 , a= [ 3, 5, 9] . Orange \u2014 exam days. Before the first exam Dmitry will rest 2 days, before the second he will rest 1 day and before the third he will rest 3 days. For the session schedule, Dmitry considers a special value \u03bc \u2014 the smallest of the rest times before the exam for all exams. For example, for the image above, \u03bc= 1 . In other words, for the schedule, he counts exactly n numbers \u2014 how many days he rests between the exam i- 1 and i ( for i= 0 between the start of the session and the exam i ) . Then it finds \u03bc \u2014 the minimum among these n numbers. Dmitry believes that he can improve the schedule of the session. He may ask to change the date of one exam ( change one arbitrary value of a_ i ) . Help him change the date so that all a_ i remain different, and the value of \u03bc is as large as possible. For example, for the schedule above, it is most advantageous for Dmitry to move the second exam to the very end of the session. The new schedule will take the form: Now the rest periods before exams are equal to [ 2, 2, 5] . So, \u03bc= 2 . Dmitry can leave the proposed schedule unchanged ( if there is no way to move one exam so that it will lead to an improvement in the situation) .",
    "input": "The first line of input data contains an integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of input test cases. The descriptions of test cases follow. An empty line is written in the test before each case. The first line of each test case contains two integers n and d ( 2 \u2264 n \u2264 2 \u00b7 10^ 5, 1 \u2264 d \u2264 10^ 9 ) \u2014 the number of exams and the length of the session, respectively. The second line of each test case contains n integers a_ i ( 1 \u2264 a_ i \u2264 d, a_ i < a_ i+ 1 ) , where the i - th number means the date of the i - th exam. It is guaranteed that the sum of n for all test cases does not exceed 2 \u00b7 10^ 5 .",
    "output": "For each test case, output the maximum possible value of \u03bc if Dmitry can move any one exam to an arbitrary day. All values of a_ i should remain distinct.",
    "note": "The first sample is parsed in statement. One of the optimal schedule changes for the second sample: Initial schedule. New schedule. In the third sample, we need to move the exam from day 1 to any day from 4 to 100 . In the fourth sample, any change in the schedule will only reduce \u03bc , so the schedule should be left as it is. In the fifth sample, we need to move the exam from day 1 to any day from 100000000 to 300000000 . One of the optimal schedule changes for the sixth sample: Initial schedule. New schedule. In the seventh sample, every day is exam day, and it is impossible to rearrange the schedule.",
    "topics": [
      "binary search",
      "data structures",
      "greedy",
      "implementation",
      "math",
      "sortings"
    ],
    "id": "1650E"
  },
  {
    "title": "Twist the Permutation",
    "url": "https://codeforces.com/problemset/problem/1650/D",
    "history": "Petya got an array a of numbers from 1 to n , where a[ i] = i . He performed n operations sequentially. In the end, he received a new state of the a array. At the i - th operation, Petya chose the first i elements of the array and cyclically shifted them to the right an arbitrary number of times ( elements with indexes i+ 1 and more remain in their places) . One cyclic shift to the right is such a transformation that the array a= [ a_ 1, a_ 2, . . . , a_ n] becomes equal to the array a = [ a_ i, a_ 1, a_ 2, . . . , a_ i- 2, a_ i- 1, a_ i+ 1, a_ i+ 2, . . . , a_ n] . For example, if a = [ 5, 4, 2, 1, 3] and i= 3 ( that is, this is the third operation) , then as a result of this operation, he could get any of these three arrays: a = [ 5, 4, 2, 1, 3] ( makes 0 cyclic shifts, or any number that is divisible by 3 ) ; a = [ 2, 5, 4, 1, 3] ( makes 1 cyclic shift, or any number that has a remainder of 1 when divided by 3 ) ; a = [ 4, 2, 5, 1, 3] ( makes 2 cyclic shifts, or any number that has a remainder of 2 when divided by 3 ) . Let' s look at an example. Let n= 6 , i. e. initially a= [ 1, 2, 3, 4, 5, 6] . A possible scenario is described below. i= 1 : no matter how many cyclic shifts Petya makes, the array a does not change. i= 2 : let' s say Petya decided to make a 1 cyclic shift, then the array will look like a = [ 2, 1, 3, 4, 5, 6] . i= 3 : let' s say Petya decided to make 1 cyclic shift, then the array will look like a = [ 3, 2, 1, 4, 5, 6] . i= 4 : let' s say Petya decided to make 2 cyclic shifts, the original array will look like a = [ 1, 4, 3, 2, 5, 6] . i= 5 : let' s say Petya decided to make 0 cyclic shifts, then the array won' t change. i= 6 : let' s say Petya decided to make 4 cyclic shifts, the array will look like a = [ 3, 2, 5, 6, 1, 4] . You are given a final array state a after all n operations. Determine if there is a way to perform the operation that produces this result. In this case, if an answer exists, print the numbers of cyclical shifts that occurred during each of the n operations.",
    "input": "The first line of the input contains an integer t ( 1 \u2264 t \u2264 500 ) \u2014 the number of test cases in the test. The descriptions of the test cases follow. The first line of the description of each test case contains one integer n ( 2 \u2264 n \u2264 2\u00b710^ 3 ) \u2014 the length of the array a . The next line contains the final state of the array a : n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 n ) are written. All a_ i are distinct. It is guaranteed that the sum of n values over all test cases does not exceed 2\u00b710^ 3 .",
    "output": "For each test case, print the answer on a separate line. Print - 1 if the given final value a cannot be obtained by performing an arbitrary number of cyclic shifts on each operation. Otherwise, print n non- negative integers d_ 1, d_ 2, . . . , d_ n ( d_ i \u2265 0 ) , where d_ i means that during the i - th operation the first i elements of the array were cyclic shifted to the right d_ i times. If there are several possible answers, print the one where the total number of shifts is minimal ( that is, the sum of d_ i values is the smallest) . If there are several such answers, print any of them.",
    "note": "The first test case matches the example from the statement. The second set of input data is simple. Note that the answer [ 3, 2, 1] also gives the same permutation, but since the total number of shifts 3+ 2+ 1 is greater than 0+ 0+ 1 , this answer is not correct.",
    "topics": [
      "brute force",
      "constructive algorithms",
      "implementation",
      "math"
    ],
    "id": "1650D"
  },
  {
    "title": "DIV + MOD",
    "url": "https://codeforces.com/problemset/problem/1650/B",
    "history": "Not so long ago, Vlad came up with an interesting function: f_ a( x) = \u230ax/ a\u230b + x a , where \u230ax/ a\u230b is x/ a , rounded down, x a \u2014 the remainder of the integer division of x by a . For example, with a= 3 and x= 11 , the value f_ 3( 11) = \u230a11/ 3\u230b + 11 3 = 3 + 2 = 5 . The number a is fixed and known to Vlad. Help Vlad find the maximum value of f_ a( x) if x can take any integer value from l to r inclusive ( l \u2264 x \u2264 r ) .",
    "input": "The first line of input data contains an integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of input test cases. This is followed by t lines, each of which contains three integers l_ i , r_ i and a_ i ( 1 \u2264 l_ i \u2264 r_ i \u2264 10^ 9, 1 \u2264 a_ i \u2264 10^ 9 ) \u2014 the left and right boundaries of the segment and the fixed value of a .",
    "output": "For each test case, output one number on a separate line \u2014 the maximum value of the function on a given segment for a given a .",
    "note": "In the first sample: f_ 3( 1) = \u230a1/ 3\u230b + 1 3 = 0 + 1 = 1 , f_ 3( 2) = \u230a2/ 3\u230b + 2 3 = 0 + 2 = 2 , f_ 3( 3) = \u230a3/ 3\u230b + 3 3 = 1 + 0 = 1 , f_ 3( 4) = \u230a4/ 3\u230b + 4 3 = 1 + 1 = 2 As an answer, obviously, f_ 3( 2) and f_ 3( 4) are suitable.",
    "topics": [
      "math"
    ],
    "id": "1650B"
  },
  {
    "title": "Integral Array",
    "url": "https://codeforces.com/problemset/problem/1648/B",
    "history": "You are given an array a of n positive integers numbered from 1 to n . Let' s call an array integral if for any two, not necessarily different, numbers x and y from this array, x \u2265 y , the number \u230ax/ y\u230b ( x divided by y with rounding down) is also in this array. You are guaranteed that all numbers in a do not exceed c . Your task is to check whether this array is integral.",
    "input": "The input consists of multiple test cases. The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. Description of the test cases follows. The first line of each test case contains two integers n and c ( 1 \u2264 n \u2264 10^ 6 , 1 \u2264 c \u2264 10^ 6 ) \u2014 the size of a and the limit for the numbers in the array. The second line of each test case contains n integers a_ 1 , a_ 2 , . . . , a_ n ( 1 \u2264 a_ i \u2264 c ) \u2014 the array a . Let N be the sum of n over all test cases and C be the sum of c over all test cases. It is guaranteed that N \u2264 10^ 6 and C \u2264 10^ 6 .",
    "output": "For each test case print Yes if the array is integral and No otherwise.",
    "note": "In the first test case it is easy to see that the array is integral: \u230a1/ 1\u230b = 1 , a_ 1 = 1 , this number occurs in the arry \u230a2/ 2\u230b = 1 \u230a5/ 5\u230b = 1 \u230a2/ 1\u230b = 2 , a_ 2 = 2 , this number occurs in the array \u230a5/ 1\u230b = 5 , a_ 3 = 5 , this number occurs in the array \u230a5/ 2\u230b = 2 , a_ 2 = 2 , this number occurs in the array Thus, the condition is met and the array is integral. In the second test case it is enough to see that \u230a7/ 3\u230b = \u230a 21/ 3\u230b = 2 , this number is not in a , that' s why it is not integral. In the third test case \u230a2/ 2\u230b = 1 , but there is only 2 in the array, that' s why it is not integral.",
    "topics": [
      "brute force",
      "constructive algorithms",
      "data structures",
      "math"
    ],
    "id": "1648B"
  },
  {
    "title": "Weird Sum",
    "url": "https://codeforces.com/problemset/problem/1648/A",
    "history": "Egor has a table of size n \u00d7 m , with lines numbered from 1 to n and columns numbered from 1 to m . Each cell has a color that can be presented as an integer from 1 to 10^ 5 . Let us denote the cell that lies in the intersection of the r - th row and the c - th column as ( r, c) . We define the manhattan distance between two cells ( r_ 1, c_ 1) and ( r_ 2, c_ 2) as the length of a shortest path between them where each consecutive cells in the path must have a common side. The path can go through cells of any color. For example, in the table 3 \u00d7 4 the manhattan distance between ( 1, 2) and ( 3, 3) is 3 , one of the shortest paths is the following: ( 1, 2) \u2192 ( 2, 2) \u2192 ( 2, 3) \u2192 ( 3, 3) . Egor decided to calculate the sum of manhattan distances between each pair of cells of the same color. Help him to calculate this sum.",
    "input": "The first line contains two integers n and m ( 1 \u2264 n \u2264 m , n \u00b7 m \u2264 100 000 ) \u2014 number of rows and columns in the table. Each of next n lines describes a row of the table. The i - th line contains m integers c_ i1, c_ i2, . . . , c_ im ( 1 \u2264 c_ ij\u2264 100 000 ) \u2014 colors of cells in the i - th row.",
    "output": "Print one integer \u2014 the the sum of manhattan distances between each pair of cells of the same color.",
    "note": "In the first sample there are three pairs of cells of same color: in cells ( 1, 1) and ( 2, 3) , in cells ( 1, 2) and ( 2, 2) , in cells ( 1, 3) and ( 2, 1) . The manhattan distances between them are 3 , 1 and 3 , the sum is 7 .",
    "topics": [
      "combinatorics",
      "data structures",
      "geometry",
      "math",
      "matrices",
      "sortings"
    ],
    "id": "1648A"
  },
  {
    "title": "Madoka and the Best School in Russia",
    "url": "https://codeforces.com/problemset/problem/1647/D",
    "history": "Madoka is going to enroll in \" TSUNS PTU\" . But she stumbled upon a difficult task during the entrance computer science exam: A number is called good if it is a multiple of d . A number is called beatiful if it is good and it cannot be represented as a product of two good numbers. Notice that a beautiful number must be good. Given a good number x , determine whether it can be represented in at least two different ways as a product of several ( possibly, one) beautiful numbers. Two ways are different if the sets of numbers used are different. Solve this problem for Madoka and help her to enroll in the best school in Russia!",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 100 ) \u2014 number of test cases. Below comes their description. Each test case consists of two integers x and d , separated by a space ( 2 \u2264 x, d \u2264 10^ 9 ) . It is guaranteed that x is a multiple of d .",
    "output": "For each set of input data, output \" NO\" if the number cannot be represented in at least two ways. Otherwise, output \" YES\" . You can output each letter in any case ( for example, \" YES\" , \" Yes\" , \" yes\" , \" yEs\" , \" yEs\" will be recognized as a positive answer) .",
    "note": "In the first example, 6 can be represented as 6 , 1 \u00b7 6 , 2 \u00b7 3 . But 3 and 1 are not a good numbers because they are not divisible by 2 , so there is only one way. In the second example, 12 can be represented as 6 \u00b7 2 , 12 , 3 \u00b7 4 , or 3 \u00b7 2 \u00b7 2 . The first option is suitable. The second is\u2014 no, because 12 is not beautiful number ( 12 = 6 \u00b7 2 ) . The third and fourth are also not suitable, because 3 is not good number. In the third example, 36 can be represented as 18 \u00b7 2 and 6 \u00b7 6 . Therefore it can be decomposed in at least two ways.",
    "topics": [
      "constructive algorithms",
      "dp",
      "math",
      "number theory"
    ],
    "id": "1647D"
  },
  {
    "title": "Madoka and Math Dad",
    "url": "https://codeforces.com/problemset/problem/1647/A",
    "history": "Madoka finally found the administrator password for her computer. Her father is a well- known popularizer of mathematics, so the password is the answer to the following problem. Find the maximum decimal number without zeroes and with no equal digits in a row, such that the sum of its digits is n . Madoka is too tired of math to solve it herself, so help her to solve this problem!",
    "input": "Each test contains multiple test cases. The first line contains a single integer t ( 1 \u2264 t \u2264 1000 ) \u2014 the number of test cases. Description of the test cases follows. The only line of each test case contains an integer n ( 1 \u2264 n \u2264 1000 ) \u2014 the required sum of the digits.",
    "output": "For each test case print the maximum number you can obtain.",
    "note": "The only numbers with the sum of digits equal to 2 without zeros are 2 and 11 . But the last one has two ones in a row, so it' s not valid. That' s why the answer is 2 . The only numbers with the sum of digits equal to 3 without zeros are 111 , 12 , 21 , and 3 . The first one has 2 ones in a row, so it' s not valid. So the maximum valid number is 21 . The only numbers with the sum of digits equals to 4 without zeros are 1111 , 211 , 121 , 112 , 13 , 31 , 22 , and 4 . Numbers 1111 , 211 , 112 , 22 aren' t valid, because they have some identical digits in a row. So the maximum valid number is 121 .",
    "topics": [
      "implementation",
      "math"
    ],
    "id": "1647A"
  },
  {
    "title": "Power Board",
    "url": "https://codeforces.com/problemset/problem/1646/E",
    "history": "You have a rectangular board of size n\u00d7 m ( n rows, m columns) . The n rows are numbered from 1 to n from top to bottom, and the m columns are numbered from 1 to m from left to right. The cell at the intersection of row i and column j contains the number i^ j ( i raised to the power of j ) . For example, if n= 3 and m= 3 the board is as follows: Find the number of distinct integers written on the board.",
    "input": "The only line contains two integers n and m ( 1\u2264 n, m\u2264 10^ 6 ) \u2014 the number of rows and columns of the board.",
    "output": "Print one integer, the number of distinct integers on the board.",
    "note": "The statement shows the board for the first test case. In this case there are 7 distinct integers: 1 , 2 , 3 , 4 , 8 , 9 , and 27 . In the second test case, the board is as follows: There are 5 distinct numbers: 1 , 2 , 4 , 8 and 16 . In the third test case, the board is as follows: There are 6 distinct numbers: 1 , 2 , 3 , 4 , 9 and 16 .",
    "topics": [
      "brute force",
      "dp",
      "math",
      "number theory"
    ],
    "id": "1646E"
  },
  {
    "title": "Factorials and Powers of Two",
    "url": "https://codeforces.com/problemset/problem/1646/C",
    "history": "A number is called powerful if it is a power of two or a factorial. In other words, the number m is powerful if there exists a non- negative integer d such that m= 2^ d or m= d! , where d! = 1\u00b7 2\u00b7. . . \u00b7 d ( in particular, 0! = 1 ) . For example 1 , 4 , and 6 are powerful numbers, because 1= 1! , 4= 2^ 2 , and 6= 3! but 7 , 10 , or 18 are not. You are given a positive integer n . Find the minimum number k such that n can be represented as the sum of k distinct powerful numbers, or say that there is no such k .",
    "input": "Each test contains multiple test cases. The first line contains the number of test cases t ( 1 \u2264 t \u2264 100 ) . Description of the test cases follows. A test case consists of only one line, containing one integer n ( 1\u2264 n\u2264 10^ 12 ) .",
    "output": "For each test case print the answer on a separate line. If n can not be represented as the sum of distinct powerful numbers, print - 1 . Otherwise, print a single positive integer \u2014 the minimum possible value of k .",
    "note": "In the first test case, 7 can be represented as 7= 1+ 6 , where 1 and 6 are powerful numbers. Because 7 is not a powerful number, we know that the minimum possible value of k in this case is k= 2 . In the second test case, a possible way to represent 11 as the sum of three powerful numbers is 11= 1+ 4+ 6 . We can show that there is no way to represent 11 as the sum of two or less powerful numbers. In the third test case, 240 can be represented as 240= 24+ 32+ 64+ 120 . Observe that 240= 120+ 120 is not a valid representation, because the powerful numbers have to be distinct. In the fourth test case, 17179869184= 2^ 34 , so 17179869184 is a powerful number and the minimum k in this case is k= 1 .",
    "topics": [
      "bitmasks",
      "brute force",
      "constructive algorithms",
      "dp",
      "math"
    ],
    "id": "1646C"
  },
  {
    "title": "Square Counting",
    "url": "https://codeforces.com/problemset/problem/1646/A",
    "history": "Luis has a sequence of n+ 1 integers a_ 1, a_ 2, . . . , a_ n+ 1 . For each i = 1, 2, . . . , n+ 1 it is guaranteed that 0\u2264 a_ i < n , or a_ i= n^ 2 . He has calculated the sum of all the elements of the sequence, and called this value s . Luis has lost his sequence, but he remembers the values of n and s . Can you find the number of elements in the sequence that are equal to n^ 2 ? We can show that the answer is unique under the given constraints.",
    "input": "Each test contains multiple test cases. The first line contains the number of test cases t ( 1 \u2264 t \u2264 2\u00b7 10^ 4 ) . Description of the test cases follows. The only line of each test case contains two integers n and s ( 1\u2264 n< 10^ 6 , 0\u2264 s \u2264 10^ 18 ) . It is guaranteed that the value of s is a valid sum for some sequence satisfying the above constraints.",
    "output": "For each test case, print one integer \u2014 the number of elements in the sequence which are equal to n^ 2 .",
    "note": "In the first test case, we have s= 0 so all numbers are equal to 0 and there isn' t any number equal to 49 . In the second test case, we have s= 1 . There are two possible sequences: [ 0, 1] or [ 1, 0] . In both cases, the number 1 appears just once. In the third test case, we have s= 12 , which is the maximum possible value of s for this case. Thus, the number 4 appears 3 times in the sequence.",
    "topics": [
      "math"
    ],
    "id": "1646A"
  },
  {
    "title": "Basis",
    "url": "https://codeforces.com/problemset/problem/1644/F",
    "history": "For an array of integers a , let' s define | a| as the number of elements in it. Let' s denote two functions: F( a, k) is a function that takes an array of integers a and a positive integer k . The result of this function is the array containing | a| first elements of the array that you get by replacing each element of a with exactly k copies of that element. For example, F( [ 2, 2, 1, 3, 5, 6, 8] , 2) is calculated as follows: first, you replace each element of the array with 2 copies of it, so you obtain [ 2, 2, 2, 2, 1, 1, 3, 3, 5, 5, 6, 6, 8, 8] . Then, you take the first 7 elements of the array you obtained, so the result of the function is [ 2, 2, 2, 2, 1, 1, 3] . G( a, x, y) is a function that takes an array of integers a and two different integers x and y . The result of this function is the array a with every element equal to x replaced by y , and every element equal to y replaced by x . For example, G( [ 1, 1, 2, 3, 5] , 3, 1) = [ 3, 3, 2, 1, 5] . An array a is a parent of the array b if: either there exists a positive integer k such that F( a, k) = b ; or there exist two different integers x and y such that G( a, x, y) = b . An array a is an ancestor of the array b if there exists a finite sequence of arrays c_ 0, c_ 1, . . . , c_ m ( m \u2265 0 ) such that c_ 0 is a , c_ m is b , and for every i \u2208 [ 1, m] , c_ i- 1 is a parent of c_ i . And now, the problem itself. You are given two integers n and k . Your goal is to construct a sequence of arrays s_ 1, s_ 2, . . . , s_ m in such a way that: every array s_ i contains exactly n elements, and all elements are integers from 1 to k ; for every array a consisting of exactly n integers from 1 to k , the sequence contains at least one array s_ i such that s_ i is an ancestor of a . Print the minimum number of arrays in such sequence.",
    "input": "The only line contains two integers n and k ( 1 \u2264 n, k \u2264 2 \u00b7 10^ 5 ) .",
    "output": "Print one integer \u2014 the minimum number of elements in a sequence of arrays meeting the constraints. Since the answer can be large, output it modulo 998244353 .",
    "note": "Let' s analyze the first example. One of the possible answers for the first example is the sequence [ [ 2, 1, 2] , [ 1, 2, 2] ] . Every array of size 3 consisting of elements from 1 to 2 has an ancestor in this sequence: for the array [ 1, 1, 1] , the ancestor is [ 1, 2, 2] : F( [ 1, 2, 2] , 13) = [ 1, 1, 1] ; for the array [ 1, 1, 2] , the ancestor is [ 1, 2, 2] : F( [ 1, 2, 2] , 2) = [ 1, 1, 2] ; for the array [ 1, 2, 1] , the ancestor is [ 2, 1, 2] : G( [ 2, 1, 2] , 1, 2) = [ 1, 2, 1] ; for the array [ 1, 2, 2] , the ancestor is [ 1, 2, 2] ; for the array [ 2, 1, 1] , the ancestor is [ 1, 2, 2] : G( [ 1, 2, 2] , 1, 2) = [ 2, 1, 1] ; for the array [ 2, 1, 2] , the ancestor is [ 2, 1, 2] ; for the array [ 2, 2, 1] , the ancestor is [ 2, 1, 2] : F( [ 2, 1, 2] , 2) = [ 2, 2, 1] ; for the array [ 2, 2, 2] , the ancestor is [ 1, 2, 2] : G( F( [ 1, 2, 2] , 4) , 1, 2) = G( [ 1, 1, 1] , 1, 2) = [ 2, 2, 2] .",
    "topics": [
      "combinatorics",
      "fft",
      "math",
      "number theory"
    ],
    "id": "1644F"
  },
  {
    "title": "Expand the Path",
    "url": "https://codeforces.com/problemset/problem/1644/E",
    "history": "Consider a grid of size n \u00d7 n . The rows are numbered top to bottom from 1 to n , the columns are numbered left to right from 1 to n . The robot is positioned in a cell ( 1, 1) . It can perform two types of moves: D \u2014 move one cell down; R \u2014 move one cell right. The robot is not allowed to move outside the grid. You are given a sequence of moves s \u2014 the initial path of the robot. This path doesn' t lead the robot outside the grid. You are allowed to perform an arbitrary number of modifications to it ( possibly, zero) . With one modification, you can duplicate one move in the sequence. That is, replace a single occurrence of D with DD or a single occurrence of R with RR. Count the number of cells such that there exists at least one sequence of modifications that the robot visits this cell on the modified path and doesn' t move outside the grid.",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of testcases. The first line of each testcase contains the single integer n ( 2 \u2264 n \u2264 10^ 8 ) \u2014 the number of rows and columns in the grid. The second line of each testcase contains a non- empty string s , consisting only of characters D and R, \u2014 the initial path of the robot. This path doesn' t lead the robot outside the grid. The total length of strings s over all testcases doesn' t exceed 2 \u00b7 10^ 5 .",
    "output": "For each testcase, print a single integer \u2014 the number of cells such that there exists at least one sequence of modifications that the robot visits this cell on the modified path and doesn' t move outside the grid.",
    "note": "In the first testcase, it' s enough to consider the following modified paths: RD \u2192 RRD \u2192 RRRD \u2192 RRRDD \u2192 RRRDDD \u2014 this path visits cells ( 1, 1) , ( 1, 2) , ( 1, 3) , ( 1, 4) , ( 2, 4) , ( 3, 4) and ( 4, 4) ; RD \u2192 RRD \u2192 RRDD \u2192 RRDDD \u2014 this path visits cells ( 1, 1) , ( 1, 2) , ( 1, 3) , ( 2, 3) , ( 3, 3) and ( 4, 3) ; RD \u2192 RDD \u2192 RDDD \u2014 this path visits cells ( 1, 1) , ( 1, 2) , ( 2, 2) , ( 3, 2) and ( 4, 2) . Thus, the cells that are visited on at least one modified path are: ( 1, 1) , ( 1, 2) , ( 1, 3) , ( 1, 4) , ( 2, 2) , ( 2, 3) , ( 2, 4) , ( 3, 2) , ( 3, 3) , ( 3, 4) , ( 4, 2) , ( 4, 3) and ( 4, 4) . In the second testcase, there is no way to modify the sequence without moving the robot outside the grid. So the only visited cells are the ones that are visited on the path DRDRDRDR. In the third testcase, the cells that are visited on at least one modified path are: ( 1, 1) , ( 2, 1) and ( 3, 1) . Here are the cells for all testcases:",
    "topics": [
      "brute force",
      "combinatorics",
      "data structures",
      "implementation",
      "math"
    ],
    "id": "1644E"
  },
  {
    "title": "Cross Coloring",
    "url": "https://codeforces.com/problemset/problem/1644/D",
    "history": "There is a sheet of paper that can be represented with a grid of size n \u00d7 m : n rows and m columns of cells. All cells are colored in white initially. q operations have been applied to the sheet. The i - th of them can be described as follows: x_ i y_ i \u2014 choose one of k non- white colors and color the entire row x_ i and the entire column y_ i in it. The new color is applied to each cell, regardless of whether the cell was colored before the operation. The sheet after applying all q operations is called a coloring. Two colorings are different if there exists at least one cell that is colored in different colors. How many different colorings are there? Print the number modulo 998 244 353 .",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of testcases. The first line of the testcase contains four integers n, m, k and q ( 1 \u2264 n, m, k, q \u2264 2 \u00b7 10^ 5 ) \u2014 the size of the sheet, the number of non- white colors and the number of operations. The i - th of the following q lines contains a description of the i - th operation \u2014 two integers x_ i and y_ i ( 1 \u2264 x_ i \u2264 n ; 1 \u2264 y_ i \u2264 m ) \u2014 the row and the column the operation is applied to. The sum of q over all testcases doesn' t exceed 2 \u00b7 10^ 5 .",
    "output": "For each testcase, print a single integer \u2014 the number of different colorings modulo 998 244 353 .",
    "note": "",
    "topics": [
      "data structures",
      "implementation",
      "math"
    ],
    "id": "1644D"
  },
  {
    "title": "Special Positions",
    "url": "https://codeforces.com/problemset/problem/1641/E",
    "history": "You are given an array a of length n . Also you are given m distinct positions p_ 1, p_ 2, . . . , p_ m ( 1 \u2264 p_ i \u2264 n ) . A non- empty subset of these positions T is randomly selected with equal probability and the following value is calculated: \u2211_ i= 1^ n ( a_ i \u00b7min_ j \u2208 T| i - j| ) . In other word, for each index of the array, a_ i and the distance to the closest chosen position are multiplied, and then these values are summed up. Find the expected value of this sum. This value must be found modulo 998 244 353 . More formally, let M = 998 244 353 . It can be shown that the answer can be represented as an irreducible fraction p/ q , where p and q are integers and q = \u0338 0 ( mod M ) . Output the integer equal to p \u00b7 q^ - 1 ( mod M ) . In other words, output such integer x that 0 \u2264 x < M and x \u00b7 q = p ( mod M ) .",
    "input": "The first line contains two integers n and m ( 1 \u2264 m \u2264 n \u2264 10^ 5 ) . The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 0 \u2264 a_ i < 998 244 353 ) . The third line contains m distinct integers p_ 1, p_ 2, . . . , p_ m ( 1 \u2264 p_ i \u2264 n ) . For every 1 \u2264 i < m it is guaranteed that p_ i < p_ i+ 1 .",
    "output": "Print a single integer \u2014 the answer to the problem.",
    "note": "In the first test: If only 1 is choosen, than the value equals to 1 \u00b7 0 + 2 \u00b7 1 + 3 \u00b7 2 + 4 \u00b7 3 = 20 . If only 4 is choosen, than the value equals to 1 \u00b7 3 + 2 \u00b7 2 + 3 \u00b7 1 + 4 \u00b7 0 = 10 . If both positions are chosen, than the value equals to 1 \u00b7 0 + 2 \u00b7 1 + 3 \u00b7 1 + 4 \u00b7 0 = 5 . The answer to the problem is 20 + 10 + 5/ 3 = 35/ 3 = 665 496 247 ( modulo 998 244 353 ) .",
    "topics": [
      "combinatorics",
      "divide and conquer",
      "fft",
      "math"
    ],
    "id": "1641E"
  },
  {
    "title": "Two Arrays",
    "url": "https://codeforces.com/problemset/problem/1641/D",
    "history": "Sam changed his school and on the first biology lesson he got a very interesting task about genes. You are given n arrays, the i - th of them contains m different integers \u2014 a_ i, 1, a_ i, 2, . . . , a_ i, m . Also you are given an array of integers w of length n . Find the minimum value of w_ i + w_ j among all pairs of integers ( i, j) ( 1 \u2264 i, j \u2264 n ) , such that the numbers a_ i, 1, a_ i, 2, . . . , a_ i, m, a_ j, 1, a_ j, 2, . . . , a_ j, m are distinct.",
    "input": "The first line contains two integers n , m ( 2 \u2264 n \u2264 10^ 5 , 1 \u2264 m \u2264 5 ) . The i - th of the next n lines starts with m distinct integers a_ i, 1, a_ i, 2, . . . , a_ i, m and then w_ i follows ( 1\u2264 a_ i, j\u2264 10^ 9 , 1 \u2264 w_ i\u2264 10^ 9 ) .",
    "output": "Print a single number \u2014 the answer to the problem. If there are no suitable pairs ( i, j) , print - 1 .",
    "note": "In the first test the minimum value is 5 = w_ 3 + w_ 4 , because numbers { 2, 3, 4, 5} are distinct. In the second test case, there are no suitable pair ( i, j) .",
    "topics": [
      "bitmasks",
      "brute force",
      "combinatorics",
      "greedy",
      "hashing",
      "math",
      "two pointers"
    ],
    "id": "1641D"
  },
  {
    "title": "Inversion Graph",
    "url": "https://codeforces.com/problemset/problem/1638/C",
    "history": "You are given a permutation p_ 1, p_ 2, . . . , p_ n . Then, an undirected graph is constructed in the following way: add an edge between vertices i , j such that i < j if and only if p_ i > p_ j . Your task is to count the number of connected components in this graph. Two vertices u and v belong to the same connected component if and only if there is at least one path along edges connecting u and v . A permutation is an array consisting of n distinct integers from 1 to n in arbitrary order. For example, [ 2, 3, 1, 5, 4] is a permutation, but [ 1, 2, 2] is not a permutation ( 2 appears twice in the array) and [ 1, 3, 4] is also not a permutation ( n= 3 but there is 4 in the array) .",
    "input": "Each test contains multiple test cases. The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 5 ) \u2014 the number of test cases. Description of the test cases follows. The first line of each test case contains a single integer n ( 1 \u2264 n \u2264 10^ 5 ) \u2014 the length of the permutation. The second line of each test case contains n integers p_ 1, p_ 2, . . . , p_ n ( 1 \u2264 p_ i \u2264 n ) \u2014 the elements of the permutation. It is guaranteed that the sum of n over all test cases does not exceed 2 \u00b7 10^ 5 .",
    "output": "For each test case, print one integer k \u2014 the number of connected components.",
    "note": "Each separate test case is depicted in the image below. The colored squares represent the elements of the permutation. For one permutation, each color represents some connected component. The number of distinct colors is the answer.",
    "topics": [
      "data structures",
      "dsu",
      "graphs",
      "math"
    ],
    "id": "1638C"
  },
  {
    "title": "Odd Swap Sort",
    "url": "https://codeforces.com/problemset/problem/1638/B",
    "history": "You are given an array a_ 1, a_ 2, . . . , a_ n . You can perform operations on the array. In each operation you can choose an integer i ( 1 \u2264 i < n ) , and swap elements a_ i and a_ i+ 1 of the array, if a_ i + a_ i+ 1 is odd. Determine whether it can be sorted in non- decreasing order using this operation any number of times.",
    "input": "Each test contains multiple test cases. The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 5 ) \u2014 the number of test cases. Description of the test cases follows. The first line of each test case contains a single integer n ( 1 \u2264 n \u2264 10^ 5 ) \u2014 the length of the array. The second line of each test case contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 9 ) \u2014 the elements of the array. It is guaranteed that the sum of n over all test cases does not exceed 2 \u00b7 10^ 5 .",
    "output": "For each test case, print \" Yes\" or \" No\" depending on whether you can or can not sort the given array. You may print each letter in any case ( for example, \" YES\" , \" Yes\" , \" yes\" , \" yEs\" will all be recognized as positive answer) .",
    "note": "In the first test case, we can simply swap 31 and 14 ( 31 + 14 = 45 which is odd) and obtain the non- decreasing array [ 1, 6, 14, 31] . In the second test case, the only way we could sort the array is by swapping 4 and 2 , but this is impossible, since their sum 4 + 2 = 6 is even. In the third test case, there is no way to make the array non- decreasing. In the fourth test case, the array is already non- decreasing.",
    "topics": [
      "data structures",
      "math",
      "sortings"
    ],
    "id": "1638B"
  },
  {
    "title": "Reverse",
    "url": "https://codeforces.com/problemset/problem/1638/A",
    "history": "You are given a permutation p_ 1, p_ 2, . . . , p_ n of length n . You have to choose two integers l, r ( 1 \u2264 l \u2264 r \u2264 n ) and reverse the subsegment [ l, r] of the permutation. The permutation will become p_ 1, p_ 2, . . . , p_ l- 1, p_ r, p_ r- 1, . . . , p_ l, p_ r+ 1, p_ r+ 2, . . . , p_ n . Find the lexicographically smallest permutation that can be obtained by performing exactly one reverse operation on the initial permutation. Note that for two distinct permutations of equal length a and b , a is lexicographically smaller than b if at the first position they differ, a has the smaller element. A permutation is an array consisting of n distinct integers from 1 to n in arbitrary order. For example, [ 2, 3, 1, 5, 4] is a permutation, but [ 1, 2, 2] is not a permutation ( 2 appears twice in the array) and [ 1, 3, 4] is also not a permutation ( n= 3 but there is 4 in the array) .",
    "input": "Each test contains multiple test cases. The first line contains a single integer t ( 1 \u2264 t \u2264 500 ) \u2014 the number of test cases. Description of the test cases follows. The first line of each test case contains a single integer n ( 1 \u2264 n \u2264 500 ) \u2014 the length of the permutation. The second line of each test case contains n integers p_ 1, p_ 2, . . . , p_ n ( 1 \u2264 p_ i \u2264 n ) \u2014 the elements of the permutation.",
    "output": "For each test case print the lexicographically smallest permutation you can obtain.",
    "note": "In the first test case, the permutation has length 1 , so the only possible segment is [ 1, 1] . The resulting permutation is [ 1] . In the second test case, we can obtain the identity permutation by reversing the segment [ 1, 2] . The resulting permutation is [ 1, 2, 3] . In the third test case, the best possible segment is [ 2, 3] . The resulting permutation is [ 1, 2, 4, 3] . In the fourth test case, there is no lexicographically smaller permutation, so we can leave it unchanged by choosing the segment [ 1, 1] . The resulting permutation is [ 1, 2, 3, 4, 5] .",
    "topics": [
      "constructive algorithms",
      "greedy",
      "math"
    ],
    "id": "1638A"
  },
  {
    "title": "Minimize Inversions Number",
    "url": "https://codeforces.com/problemset/problem/1637/H",
    "history": "You are given a permutation p of length n . You can choose any subsequence, remove it from the permutation, and insert it at the beginning of the permutation keeping the same order. For every k from 0 to n , find the minimal possible number of inversions in the permutation after you choose a subsequence of length exactly k .",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 50 000 ) \u2014 the number of test cases. The first line of each test case contains one integer n ( 1 \u2264 n \u2264 5 \u00b7 10^ 5 ) \u2014 the length of the permutation. The second line of each test case contains the permutation p_ 1, p_ 2, . . . , p_ n ( 1 \u2264 p_ i \u2264 n ) . It is guaranteed that the total sum of n doesn' t exceed 5 \u00b7 10^ 5 .",
    "output": "For each test case output n + 1 integers. The i - th of them must be the answer for the subsequence length of i - 1 .",
    "note": "In the second test case: For the length 0 : [ 4, 2, 1, 3] \u2192 [ 4, 2, 1, 3] : 4 inversions. For the length 1 : [ 4, 2, 1, 3] \u2192 [ 1, 4, 2, 3] : 2 inversions. For the length 2 : [ 4, 2, 1, 3] \u2192 [ 2, 1, 4, 3] , or [ 4, 2, 1, 3] \u2192 [ 1, 3, 4, 2] : 2 inversions. For the length 3 : [ 4, 2, 1, 3] \u2192 [ 2, 1, 3, 4] : 1 inversion. For the length 4 : [ 4, 2, 1, 3] \u2192 [ 4, 2, 1, 3] : 4 inversions.",
    "topics": [
      "data structures",
      "greedy",
      "math",
      "sortings"
    ],
    "id": "1637H"
  },
  {
    "title": "Birthday",
    "url": "https://codeforces.com/problemset/problem/1637/G",
    "history": "Vitaly gave Maxim n numbers 1, 2, . . . , n for his 16 - th birthday. Maxim was tired of playing board games during the celebration, so he decided to play with these numbers. In one step Maxim can choose two numbers x and y from the numbers he has, throw them away, and add two numbers x + y and | x - y| instead. He wants all his numbers to be equal after several steps and the sum of the numbers to be minimal. Help Maxim to find a solution. Maxim' s friends don' t want to wait long, so the number of steps in the solution should not exceed 20n . It is guaranteed that under the given constraints, if a solution exists, then there exists a solution that makes all numbers equal, minimizes their sum, and spends no more than 20n moves.",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 25 000 ) \u2014 the number of test cases. Each test case contains a single integer n ( 2 \u2264 n \u2264 5 \u00b7 10^ 4 ) \u2014 the number of integers given to Maxim. It is guaranteed that the total sum of n doesn' t exceed 5 \u00b7 10^ 4 .",
    "output": "For each test case print - 1 if it' s impossible to make all numbers equal. Otherwise print a single integer s ( 0 \u2264 s \u2264 20n ) \u2014 the number of steps. Then print s lines. The i - th line must contain two integers x_ i and y_ i \u2014 numbers that Maxim chooses on the i - th step. The numbers must become equal after all operations. Don' t forget that you not only need to make all numbers equal, but also minimize their sum. It is guaranteed that under the given constraints, if a solution exists, then there exists a solution that makes all numbers equal, minimizes their sum, and spends no more than 20n moves.",
    "note": "",
    "topics": [
      "constructive algorithms",
      "greedy",
      "math"
    ],
    "id": "1637G"
  },
  {
    "title": "Yet Another Minimization Problem",
    "url": "https://codeforces.com/problemset/problem/1637/D",
    "history": "You are given two arrays a and b , both of length n . You can perform the following operation any number of times ( possibly zero) : select an index i ( 1 \u2264 i \u2264 n ) and swap a_ i and b_ i . Let' s define the cost of the array a as \u2211_ i= 1^ n\u2211_ j= i + 1^ n ( a_ i + a_ j) ^ 2 . Similarly, the cost of the array b is \u2211_ i= 1^ n\u2211_ j= i + 1^ n ( b_ i + b_ j) ^ 2 . Your task is to minimize the total cost of two arrays.",
    "input": "Each test case consists of several test cases. The first line contains a single integer t ( 1 \u2264 t \u2264 40 ) \u2014 the number of test cases. The following is a description of the input data sets. The first line of each test case contains an integer n ( 1 \u2264 n \u2264 100 ) \u2014 the length of both arrays. The second line of each test case contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 100 ) \u2014 elements of the first array. The third line of each test case contains n integers b_ 1, b_ 2, . . . , b_ n ( 1 \u2264 b_ i \u2264 100 ) \u2014 elements of the second array. It is guaranteed that the sum of n over all test cases does not exceed 100 .",
    "output": "For each test case, print the minimum possible total cost.",
    "note": "In the second test case, in one of the optimal answers after all operations a = [ 2, 6, 4, 6] , b = [ 3, 7, 6, 1] . The cost of the array a equals to ( 2 + 6) ^ 2 + ( 2 + 4) ^ 2 + ( 2 + 6) ^ 2 + ( 6 + 4) ^ 2 + ( 6 + 6) ^ 2 + ( 4 + 6) ^ 2 = 508 . The cost of the array b equals to ( 3 + 7) ^ 2 + ( 3 + 6) ^ 2 + ( 3 + 1) ^ 2 + ( 7 + 6) ^ 2 + ( 7 + 1) ^ 2 + ( 6 + 1) ^ 2 = 479 . The total cost of two arrays equals to 508 + 479 = 987 .",
    "topics": [
      "dp",
      "greedy",
      "math"
    ],
    "id": "1637D"
  },
  {
    "title": "MEX and Array",
    "url": "https://codeforces.com/problemset/problem/1637/B",
    "history": "Let there be an array b_ 1, b_ 2, . . . , b_ k . Let there be a partition of this array into segments [ l_ 1; r_ 1] , [ l_ 2; r_ 2] , . . . , [ l_ c; r_ c] , where l_ 1 = 1 , r_ c = k , and for any 2 \u2264 i \u2264 c holds that r_ i- 1 + 1 = l_ i . In other words, each element of the array belongs to exactly one segment. Let' s define the cost of a partition as c + \u2211_ i = 1^ cmex( { b_ l_ i, b_ l_ i + 1, . . . , b_ r_ i} ) , where mex of a set of numbers S is the smallest non- negative integer that does not occur in the set S . In other words, the cost of a partition is the number of segments plus the sum of MEX over all segments. Let' s define the value of an array b_ 1, b_ 2, . . . , b_ k as the maximum possible cost over all partitions of this array. You are given an array a of size n . Find the sum of values of all its subsegments. An array x is a subsegment of an array y if x can be obtained from y by deletion of several ( possibly, zero or all) elements from the beginning and several ( possibly, zero or all) elements from the end.",
    "input": "The input contains several test cases. The first line contains one integer t ( 1 \u2264 t \u2264 30 ) \u2014 the number of test cases. The first line for each test case contains one integer n ( 1 \u2264 n \u2264 100 ) \u2014 the length of the array. The second line contains a sequence of integers a_ 1, a_ 2, . . . , a_ n ( 0 \u2264 a_ i \u2264 10^ 9 ) \u2014 the array elements. It is guaranteed that the sum of the values n over all test cases does not exceed 100 .",
    "output": "For each test case print a single integer \u2014 the answer to the problem.",
    "note": "In the second test case: The best partition for the subsegment [ 2, 0, 1] : [ 2] , [ 0, 1] . The cost of this partition equals to 2 + mex( { 2} ) + mex( { 0, 1} ) = 2 + 0 + 2 = 4 . The best partition for the subsegment [ 2, 0] : [ 2] , [ 0] . The cost of this partition equals to 2 + mex( { 2} ) + mex( { 0} ) = 2 + 0 + 1 = 3 The best partition for the subsegment [ 2] : [ 2] . The cost of this partition equals to 1 + mex( { 2} ) = 1 + 0 = 1 . The best partition for the subsegment [ 0, 1] : [ 0, 1] . The cost of this partition equals to 1 + mex( { 0, 1} ) = 1 + 2 = 3 . The best partition for the subsegment [ 0] : [ 0] . The cost of this partition equals to 1 + mex( { 0} ) = 1 + 1 = 2 . The best partition for the subsegment [ 1] : [ 1] . The cost of this partition equals to 1 + mex( { 1} ) = 1 + 0 = 1 . The sum of values over all subsegments equals to 4 + 3 + 1 + 3 + 2 + 1 = 14 .",
    "topics": [
      "brute force",
      "dp",
      "greedy",
      "math"
    ],
    "id": "1637B"
  },
  {
    "title": "Infinite Set",
    "url": "https://codeforces.com/problemset/problem/1635/D",
    "history": "You are given an array a consisting of n distinct positive integers. Let' s consider an infinite integer set S which contains all integers x that satisfy at least one of the following conditions: x = a_ i for some 1 \u2264 i \u2264 n . x = 2y + 1 and y is in S . x = 4y and y is in S . For example, if a = [ 1, 2] then the 10 smallest elements in S will be { 1, 2, 3, 4, 5, 7, 8, 9, 11, 12} . Find the number of elements in S that are strictly smaller than 2^ p . Since this number may be too large, print it modulo 10^ 9 + 7 .",
    "input": "The first line contains two integers n and p ( 1 \u2264 n, p \u2264 2 \u00b7 10^ 5) . The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 9) . It is guaranteed that all the numbers in a are distinct.",
    "output": "Print a single integer, the number of elements in S that are strictly smaller than 2^ p . Remember to print it modulo 10^ 9 + 7 .",
    "note": "In the first example, the elements smaller than 2^ 4 are { 1, 3, 4, 6, 7, 9, 12, 13, 15} . In the second example, the elements smaller than 2^ 7 are { 5, 11, 20, 23, 39, 41, 44, 47, 79, 80, 83, 89, 92, 95} .",
    "topics": [
      "bitmasks",
      "dp",
      "math",
      "matrices",
      "number theory",
      "strings"
    ],
    "id": "1635D"
  },
  {
    "title": "Fibonacci Additions",
    "url": "https://codeforces.com/problemset/problem/1634/F",
    "history": "One of my most productive days was throwing away 1, 000 lines of code. \u2014 Ken ThompsonFibonacci addition is an operation on an array X of integers, parametrized by indices l and r . Fibonacci addition increases X_ l by F_ 1 , increases X_ l + 1 by F_ 2 , and so on up to X_ r which is increased by F_ r - l + 1 . F_ i denotes the i - th Fibonacci number ( F_ 1 = 1 , F_ 2 = 1 , F_ i = F_ i - 1 + F_ i - 2 for i > 2 ) , and all operations are performed modulo MOD . You are given two arrays A and B of the same length. We will ask you to perform several Fibonacci additions on these arrays with different parameters, and after each operation you have to report whether arrays A and B are equal modulo MOD .",
    "input": "The first line contains 3 numbers n , q and MOD ( 1 \u2264 n, q \u2264 3\u00b7 10^ 5, 1 \u2264 MOD \u2264 10^ 9+ 7 ) \u2014 the length of the arrays, the number of operations, and the number modulo which all operations are performed. The second line contains n numbers \u2014 array A ( 0 \u2264 A_ i < MOD ) . The third line also contains n numbers \u2014 array B ( 0 \u2264 B_ i < MOD ) . The next q lines contain character c and two numbers l and r ( 1 \u2264 l \u2264 r \u2264 n ) \u2014 operation parameters. If c is \" A\" , Fibonacci addition is to be performed on array A , and if it is is \" B\" , the operation is to be performed on B .",
    "output": "After each operation, print \" YES\" ( without quotes) if the arrays are equal and \" NO\" otherwise. Letter case does not matter.",
    "note": "Explanation of the test from the condition: Initially A= [ 2, 2, 1] , B= [ 0, 0, 0] . After operation \" A 1 3\" : A= [ 0, 0, 0] , B= [ 0, 0, 0] ( addition is modulo 3) . After operation \" A 1 3\" : A= [ 1, 1, 2] , B= [ 0, 0, 0] . After operation \" B 1 1\" : A= [ 1, 1, 2] , B= [ 1, 0, 0] . After operation \" B 2 2\" : A= [ 1, 1, 2] , B= [ 1, 1, 0] . After operation \" A 3 3\" : A= [ 1, 1, 0] , B= [ 1, 1, 0] .",
    "topics": [
      "brute force",
      "data structures",
      "hashing",
      "implementation",
      "math"
    ],
    "id": "1634F"
  },
  {
    "title": "Finding Zero",
    "url": "https://codeforces.com/problemset/problem/1634/D",
    "history": "This is an interactive problem. We picked an array of whole numbers a_ 1, a_ 2, . . . , a_ n ( 0 \u2264 a_ i \u2264 10^ 9 ) and concealed exactly one zero in it! Your goal is to find the location of this zero, that is, to find i such that a_ i = 0 . You are allowed to make several queries to guess the answer. For each query, you can think up three distinct indices i, j, k , and we will tell you the value of max( a_ i, a_ j, a_ k) - min( a_ i, a_ j, a_ k) . In other words, we will tell you the difference between the maximum and the minimum number among a_ i , a_ j and a_ k . You are allowed to make no more than 2 \u00b7 n - 2 queries, and after that you have two tries to guess where the zero is. That is, you have to tell us two numbers i and j and you win if a_ i = 0 or a_ j = 0 . Can you guess where we hid the zero? Note that the array in each test case is fixed beforehand and will not change during the game. In other words, the interactor is not adaptive. InteractionFor each test case, the interaction starts with reading n . To make a query, print \" ? i j k \" ( without quotes, 1 \u2264 i, j, k \u2264 n , indices must be distinct) . Then you should read our response from standard input, that is, max( a_ i, a_ j, a_ k) - min( a_ i, a_ j, a_ k) . If the response is - 1 , it means your program has made an invalid query or has run out of tries. Your program must terminate immediately after reading - 1 , and you will get a verdict Wrong answer. Otherwise you may get any verdict, because the program will continue reading from the closed stream. Note that if the query is correct, the answer will never be - 1 because max( a_ i, a_ j, a_ k) - min( a_ i, a_ j, a_ k) \u2265 0 . To give the final answer, print \" ! i j \" ( without the quotes) . Printing the same number twice ( that is, i = j ) is allowed. Note that giving this answer is not counted towards the limit of 2 \u00b7 n - 2 queries. After that, your program must continue to solve the remaining test cases, or exit if all test cases have been solved. After printing a query, don' t forget to output line feed and flush the output buffer. Otherwise you will get the verdict Idleness limit exceeded. To flush the buffer, use: fflush( stdout) or cout. flush( ) in C+ + ; System. out. flush( ) in Java; flush( output) in Pascal; stdout. flush( ) in Python; Read documentation for other languages. HacksThe first line must contain an integer t ( 1 \u2264 t \u2264 500 ) \u2014 the count of test cases. The first line of each test case must contain an integer n ( 4 \u2264 n \u2264 1000 ) \u2014 the length of the hidden array. The second line of each test case must contain n integers separated by spaces \u2014 a_ 1, a_ 2, . . . , a_ n ( 0 \u2264 a_ i \u2264 10^ 9 ) . There must also be exactly one zero in this array. The sum of n over all test cases must not exceed 3000 .",
    "input": "Each test contains multiple test cases. The first line contains the number of test cases t ( 1 \u2264 t \u2264 500 ) . Description of the test cases follows. The first and only line of each test case contains an integer n ( 4 \u2264 n \u2264 1000 ) \u2014 the length of the array that we picked. It is guaranteed that the sum of n over all test cases does not exceed 3000 .",
    "output": "",
    "note": "Array from sample: [ 1, 2, 0, 3] .",
    "topics": [
      "constructive algorithms",
      "interactive",
      "math"
    ],
    "id": "1634D"
  },
  {
    "title": "Fortune Telling",
    "url": "https://codeforces.com/problemset/problem/1634/B",
    "history": "Haha, try to solve this, SelectorUnlimited! \u2014 antontrygubO_ oYour friends Alice and Bob practice fortune telling. Fortune telling is performed as follows. There is a well- known array a of n non- negative integers indexed from 1 to n . The tellee starts with some non- negative number d and performs one of the two operations for each i = 1, 2, . . . , n , in the increasing order of i . The possible operations are: replace their current number d with d + a_ i replace their current number d with d \u2295 a_ i ( hereinafter \u2295 denotes the bitwise XOR operation) Notice that the chosen operation may be different for different i and for different tellees. One time, Alice decided to start with d = x and Bob started with d = x + 3 . Each of them performed fortune telling and got a particular number in the end. Notice that the friends chose operations independently of each other, that is, they could apply different operations for the same i . You learnt that either Alice or Bob ended up with number y in the end, but you don' t know whose of the two it was. Given the numbers Alice and Bob started with and y , find out who ( Alice or Bob) could get the number y after performing the operations. It is guaranteed that on the jury tests, exactly one of your friends could have actually gotten that number. HacksYou cannot make hacks in this problem.",
    "input": "On the first line of the input, you are given one number t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. The following 2 \u00b7 t lines contain test cases. The first line of each test case contains three numbers n , x , y ( 1 \u2264 n \u2264 10^ 5 , 0 \u2264 x \u2264 10^ 9 , 0 \u2264 y \u2264 10^ 15 ) \u2014 the length of array a , Alice' s initial number ( Bob' s initial number is therefore x+ 3 ) , and the number that one of the two friends got in the end. The second line of each test case contains n numbers \u2014 the array a ( 0 \u2264 a_ i \u2264 10^ 9 ) . It is guaranteed that the sum of n over all test cases does not exceed 10^ 5 .",
    "output": "For each test case, print the name of the friend who could get the number y : \" Alice\" or \" Bob\" .",
    "note": "In the first test case, Alice could get 9 using the following operations: 7 + 2 = 9 . In the second test case, Alice could get 2 using this operations: ( 0 + 1) \u2295 3 = 2 . In the third test case, Bob started with x+ 3 = 0+ 3= 3 and could get 1 this way: ( ( ( 3 + 1) + 2) \u2295 3) \u2295 4 = 1 .",
    "topics": [
      "bitmasks",
      "math"
    ],
    "id": "1634B"
  },
  {
    "title": "Spanning Tree Queries",
    "url": "https://codeforces.com/problemset/problem/1633/E",
    "history": "You are given a connected weighted undirected graph, consisting of n vertices and m edges. You are asked k queries about it. Each query consists of a single integer x . For each query, you select a spanning tree in the graph. Let the weights of its edges be w_ 1, w_ 2, . . . , w_ n- 1 . The cost of a spanning tree is \u2211_ i= 1^ n- 1 | w_ i - x| ( the sum of absolute differences between the weights and x ) . The answer to a query is the lowest cost of a spanning tree. The queries are given in a compressed format. The first p ( 1 \u2264 p \u2264 k) queries q_ 1, q_ 2, . . . , q_ p are provided explicitly. For queries from p+ 1 to k , q_ j = ( q_ j- 1\u00b7 a + b) c . Print the xor of answers to all queries.",
    "input": "The first line contains two integers n and m ( 2 \u2264 n \u2264 50 ; n - 1 \u2264 m \u2264 300 ) \u2014 the number of vertices and the number of edges in the graph. Each of the next m lines contains a description of an undirected edge: three integers v , u and w ( 1 \u2264 v, u \u2264 n ; v = \u0338 u ; 0 \u2264 w \u2264 10^ 8 ) \u2014 the vertices the edge connects and its weight. Note that there might be multiple edges between a pair of vertices. The edges form a connected graph. The next line contains five integers p, k, a, b and c ( 1 \u2264 p \u2264 10^ 5 ; p \u2264 k \u2264 10^ 7 ; 0 \u2264 a, b \u2264 10^ 8 ; 1 \u2264 c \u2264 10^ 8 ) \u2014 the number of queries provided explicitly, the total number of queries and parameters to generate the queries. The next line contains p integers q_ 1, q_ 2, . . . , q_ p ( 0 \u2264 q_ j < c ) \u2014 the first p queries.",
    "output": "Print a single integer \u2014 the xor of answers to all queries.",
    "note": "The queries in the first example are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0 . The answers are 11, 9, 7, 3, 1, 5, 8, 7, 5, 7, 11 . The queries in the second example are 3, 0, 2, 1, 6, 0, 3, 5, 4, 1 . The answers are 14, 19, 15, 16, 11, 19, 14, 12, 13, 16 . The queries in the third example are 75, 0, 0, . . . . The answers are 50, 150, 150, . . . .",
    "topics": [
      "binary search",
      "data structures",
      "dfs and similar",
      "dsu",
      "graphs",
      "greedy",
      "math",
      "sortings",
      "trees"
    ],
    "id": "1633E"
  },
  {
    "title": "Kill the Monster",
    "url": "https://codeforces.com/problemset/problem/1633/C",
    "history": "Monocarp is playing a computer game. In this game, his character fights different monsters. A fight between a character and a monster goes as follows. Suppose the character initially has health h_ C and attack d_ C ; the monster initially has health h_ M and attack d_ M . The fight consists of several steps: the character attacks the monster, decreasing the monster' s health by d_ C ; the monster attacks the character, decreasing the character' s health by d_ M ; the character attacks the monster, decreasing the monster' s health by d_ C ; the monster attacks the character, decreasing the character' s health by d_ M ; and so on, until the end of the fight. The fight ends when someone' s health becomes non- positive ( i. e. 0 or less) . If the monster' s health becomes non- positive, the character wins, otherwise the monster wins. Monocarp' s character currently has health equal to h_ C and attack equal to d_ C . He wants to slay a monster with health equal to h_ M and attack equal to d_ M . Before the fight, Monocarp can spend up to k coins to upgrade his character' s weapon and/ or armor; each upgrade costs exactly one coin, each weapon upgrade increases the character' s attack by w , and each armor upgrade increases the character' s health by a . Can Monocarp' s character slay the monster if Monocarp spends coins on upgrades optimally?",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 5 \u00b7 10^ 4 ) \u2014 the number of test cases. Each test case consists of three lines: The first line contains two integers h_ C and d_ C ( 1 \u2264 h_ C \u2264 10^ 15 ; 1 \u2264 d_ C \u2264 10^ 9 ) \u2014 the character' s health and attack; The second line contains two integers h_ M and d_ M ( 1 \u2264 h_ M \u2264 10^ 15 ; 1 \u2264 d_ M \u2264 10^ 9 ) \u2014 the monster' s health and attack; The third line contains three integers k , w and a ( 0 \u2264 k \u2264 2 \u00b7 10^ 5 ; 0 \u2264 w \u2264 10^ 4 ; 0 \u2264 a \u2264 10^ 10 ) \u2014 the maximum number of coins that Monocarp can spend, the amount added to the character' s attack with each weapon upgrade, and the amount added to the character' s health with each armor upgrade, respectively. The sum of k over all test cases does not exceed 2 \u00b7 10^ 5 .",
    "output": "For each test case, print YES if it is possible to slay the monster by optimally choosing the upgrades. Otherwise, print NO.",
    "note": "In the first example, Monocarp can spend one coin to upgrade weapon ( damage will be equal to 5 ) , then health during battle will change as follows: ( h_ C, h_ M) = ( 25, 9) \u2192 ( 25, 4) \u2192 ( 5, 4) \u2192 ( 5, - 1) . The battle ended with Monocarp' s victory. In the second example, Monocarp has no way to defeat the monster. In the third example, Monocarp has no coins, so he can' t buy upgrades. However, the initial characteristics are enough for Monocarp to win. In the fourth example, Monocarp has 4 coins. To defeat the monster, he has to spend 2 coins to upgrade weapon and 2 coins to upgrade armor.",
    "topics": [
      "brute force",
      "math"
    ],
    "id": "1633C"
  },
  {
    "title": "New Year Concert",
    "url": "https://codeforces.com/problemset/problem/1632/D",
    "history": "New Year is just around the corner, which means that in School 179, preparations for the concert are in full swing. There are n classes in the school, numbered from 1 to n , the i - th class has prepared a scene of length a_ i minutes. As the main one responsible for holding the concert, Idnar knows that if a concert has k scenes of lengths b_ 1 , b_ 2 , . . . , b_ k minutes, then the audience will get bored if there exist two integers l and r such that 1 \u2264 l \u2264 r \u2264 k and ( b_ l, b_ l + 1, . . . , b_ r - 1, b_ r) = r - l + 1 , where ( b_ l, b_ l + 1, . . . , b_ r - 1, b_ r) is equal to the greatest common divisor ( GCD) of the numbers b_ l , b_ l + 1 , . . . , b_ r - 1 , b_ r . To avoid boring the audience, Idnar can ask any number of times ( possibly zero) for the t - th class ( 1 \u2264 t \u2264 k ) to make a new scene d minutes in length, where d can be any positive integer. Thus, after this operation, b_ t is equal to d . Note that t and d can be different for each operation. For a sequence of scene lengths b_ 1 , b_ 2 , . . . , b_ k , let f( b) be the minimum number of classes Idnar has to ask to change their scene if he wants to avoid boring the audience. Idnar hasn' t decided which scenes will be allowed for the concert, so he wants to know the value of f for each non- empty prefix of a . In other words, Idnar wants to know the values of f( a_ 1) , f( a_ 1 , a_ 2) , . . . , f( a_ 1 , a_ 2 , . . . , a_ n) .",
    "input": "The first line contains a single integer n ( 1 \u2264 n \u2264 2 \u00b7 10^ 5 ) \u2014 the number of classes in the school. The second line contains n positive integers a_ 1 , a_ 2 , . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 9 ) \u2014 the lengths of the class scenes.",
    "output": "Print a sequence of n integers in a single line \u2014 f( a_ 1) , f( a_ 1 , a_ 2) , . . . , f( a_ 1 , a_ 2 , . . . , a_ n) .",
    "note": "In the first test we can change 1 to 2 , so the answer is 1 . In the second test: [ 1] can be changed into [ 2] , [ 1, 4] can be changed into [ 3, 4] , [ 1, 4, 2] can be changed into [ 2, 3, 2] .",
    "topics": [
      "binary search",
      "data structures",
      "greedy",
      "math",
      "number theory",
      "two pointers"
    ],
    "id": "1632D"
  },
  {
    "title": "Strange Test",
    "url": "https://codeforces.com/problemset/problem/1632/C",
    "history": "Igor is in 11th grade. Tomorrow he will have to write an informatics test by the strictest teacher in the school, Pavel Denisovich. Igor knows how the test will be conducted: first of all, the teacher will give each student two positive integers a and b ( a < b ) . After that, the student can apply any of the following operations any number of times: a : = a + 1 ( increase a by 1 ) , b : = b + 1 ( increase b by 1 ) , a : = a | b ( replace a with the bitwise OR of a and b ) . To get full marks on the test, the student has to tell the teacher the minimum required number of operations to make a and b equal. Igor already knows which numbers the teacher will give him. Help him figure out what is the minimum number of operations needed to make a equal to b .",
    "input": "Each test contains multiple test cases. The first line contains the number of test cases t ( 1 \u2264 t \u2264 10^ 4 ) . Description of the test cases follows. The only line for each test case contains two integers a and b ( 1 \u2264 a < b \u2264 10^ 6 ) . It is guaranteed that the sum of b over all test cases does not exceed 10^ 6 .",
    "output": "For each test case print one integer \u2014 the minimum required number of operations to make a and b equal.",
    "note": "In the first test case, it is optimal to apply the third operation. In the second test case, it is optimal to apply the first operation three times. In the third test case, it is optimal to apply the second operation and then the third operation.",
    "topics": [
      "binary search",
      "bitmasks",
      "brute force",
      "dp",
      "math"
    ],
    "id": "1632C"
  },
  {
    "title": "Expected Components",
    "url": "https://codeforces.com/problemset/problem/1630/E",
    "history": "Given a cyclic array a of size n , where a_ i is the value of a in the i - th position, there may be repeated values. Let us define that a permutation of a is equal to another permutation of a if and only if their values are the same for each position i or we can transform them to each other by performing some cyclic rotation. Let us define for a cyclic array b its number of components as the number of connected components in a graph, where the vertices are the positions of b and we add an edge between each pair of adjacent positions of b with equal values ( note that in a cyclic array the first and last position are also adjacents) . Find the expected value of components of a permutation of a if we select it equiprobably over the set of all the different permutations of a .",
    "input": "The input consists of multiple test cases. The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 5 ) \u2014 the number of test cases. Description of the test cases follows. The first line of each test case contains a single integer n ( 1 \u2264 n \u2264 10^ 6 ) \u2014 the size of the cyclic array a . The second line of each test case contains n integers, the i - th of them is the value a_ i ( 1 \u2264 a_ i \u2264 n ) . It is guaranteed that the sum of n over all test cases does not exceed 10^ 6 . It is guaranteed that the total number of different permutations of a is not divisible by M",
    "output": "For each test case print a single integer \u2014 the expected value of components of a permutation of a if we select it equiprobably over the set of all the different permutations of a modulo 998 244 353 . Formally, let M = 998 244 353 . It can be shown that the answer can be expressed as an irreducible fraction p/ q , where p and q are integers and q \u2261\u03380 M . Output the integer equal to p \u00b7 q^ - 1 M . In other words, output such an integer x that 0 \u2264 x < M and x \u00b7 q \u2261 p M .",
    "note": "In the first test case there is only 1 different permutation of a : [ 1, 1, 1, 1] has 1 component. Therefore the expected value of components is 1/ 1 = 1 In the second test case there are 4 ways to permute the cyclic array a , but there is only 1 different permutation of a : [ 1, 1, 1, 2] , [ 1, 1, 2, 1] , [ 1, 2, 1, 1] and [ 2, 1, 1, 1] are the same permutation and have 2 components. Therefore the expected value of components is 2/ 1 = 2 In the third test case there are 6 ways to permute the cyclic array a , but there are only 2 different permutations of a : [ 1, 1, 2, 2] , [ 2, 1, 1, 2] , [ 2, 2, 1, 1] and [ 1, 2, 2, 1] are the same permutation and have 2 components. [ 1, 2, 1, 2] and [ 2, 1, 2, 1] are the same permutation and have 4 components. Therefore the expected value of components is 2+ 4/ 2 = 6/ 2 = 3 In the fourth test case there are 120 ways to permute the cyclic array a , but there are only 24 different permutations of a : Any permutation of a has 5 components. Therefore the expected value of components is 24\u00b7 5/ 24 = 120/ 24 = 5",
    "topics": [
      "combinatorics",
      "math",
      "number theory",
      "probabilities"
    ],
    "id": "1630E"
  },
  {
    "title": "GCD Arrays",
    "url": "https://codeforces.com/problemset/problem/1629/B",
    "history": "Consider the array a composed of all the integers in the range [ l, r] . For example, if l = 3 and r = 7 , then a = [ 3, 4, 5, 6, 7] . Given l , r , and k , is it possible for ( a) to be greater than 1 after doing the following operation at most k times? Choose 2 numbers from a . Permanently remove one occurrence of each of them from the array. Insert their product back into a . ( b) denotes the greatest common divisor ( GCD) of the integers in b .",
    "input": "The first line of the input contains a single integer t ( 1 \u2264 t \u2264 10^ 5 ) \u2014 the number of test cases. The description of test cases follows. The input for each test case consists of a single line containing 3 non- negative integers l , r , and k ( 1 \u2264 l \u2264 r \u2264 10^ 9, 0 \u2264 k \u2264 r - l ) .",
    "output": "For each test case, print \" YES\" if it is possible to have the GCD of the corresponding array greater than 1 by performing at most k operations, and \" NO\" otherwise ( case insensitive) .",
    "note": "For the first test case, a = [ 1] , so the answer is \" NO\" , since the only element in the array is 1 . For the second test case the array is a = [ 3, 4, 5] and we have 1 operation. After the first operation the array can change to: [ 3, 20] , [ 4, 15] or [ 5, 12] all of which having their greatest common divisor equal to 1 so the answer is \" NO\" . For the third test case, a = [ 13] , so the answer is \" YES\" , since the only element in the array is 13 . For the fourth test case, a = [ 4] , so the answer is \" YES\" , since the only element in the array is 4 .",
    "topics": [
      "greedy",
      "math",
      "number theory"
    ],
    "id": "1629B"
  },
  {
    "title": "Game on Sum (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1628/D2",
    "history": "This is the hard version of the problem. The difference is the constraints on n , m and t . You can make hacks only if all versions of the problem are solved. Alice and Bob are given the numbers n , m and k , and play a game as follows: The game has a score that Alice tries to maximize, and Bob tries to minimize. The score is initially 0 . The game consists of n turns. Each turn, Alice picks a real number from 0 to k ( inclusive) which Bob either adds to or subtracts from the score of the game. But throughout the game, Bob has to choose to add at least m out of the n turns. Bob gets to know which number Alice picked before deciding whether to add or subtract the number from the score, and Alice gets to know whether Bob added or subtracted the number for the previous turn before picking the number for the current turn ( except on the first turn since there was no previous turn) . If Alice and Bob play optimally, what will the final score of the game be?",
    "input": "The first line of the input contains a single integer t ( 1 \u2264 t \u2264 10^ 5 ) \u2014 the number of test cases. The description of test cases follows. Each test case consists of a single line containing the three integers, n , m , and k ( 1 \u2264 m \u2264 n \u2264 10^ 6, 0 \u2264 k < 10^ 9 + 7 ) \u2014 the number of turns, how many of those turns Bob has to add, and the biggest number Alice can choose, respectively. It is guaranteed that the sum of n over all test cases does not exceed 10^ 6 .",
    "output": "For each test case output a single integer number \u2014 the score of the optimal game modulo 10^ 9 + 7 . Formally, let M = 10^ 9 + 7 . It can be shown that the answer can be expressed as an irreducible fraction p/ q , where p and q are integers and q \u2261\u03380 M . Output the integer equal to p \u00b7 q^ - 1 M . In other words, output such an integer x that 0 \u2264 x < M and x \u00b7 q \u2261 p M .",
    "note": "In the first test case, the entire game has 3 turns, and since m = 3 , Bob has to add in each of them. Therefore Alice should pick the biggest number she can, which is k = 2 , every turn. In the third test case, Alice has a strategy to guarantee a score of 75/ 8\u2261 375000012 10^ 9 + 7 . In the fourth test case, Alice has a strategy to guarantee a score of 45/ 2\u2261 500000026 10^ 9 + 7 .",
    "topics": [
      "combinatorics",
      "dp",
      "games",
      "math"
    ],
    "id": "1628D2"
  },
  {
    "title": "Game on Sum (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1628/D1",
    "history": "This is the easy version of the problem. The difference is the constraints on n , m and t . You can make hacks only if all versions of the problem are solved. Alice and Bob are given the numbers n , m and k , and play a game as follows: The game has a score that Alice tries to maximize, and Bob tries to minimize. The score is initially 0 . The game consists of n turns. Each turn, Alice picks a real number from 0 to k ( inclusive) which Bob either adds to or subtracts from the score of the game. But throughout the game, Bob has to choose to add at least m out of the n turns. Bob gets to know which number Alice picked before deciding whether to add or subtract the number from the score, and Alice gets to know whether Bob added or subtracted the number for the previous turn before picking the number for the current turn ( except on the first turn since there was no previous turn) . If Alice and Bob play optimally, what will the final score of the game be?",
    "input": "The first line of the input contains a single integer t ( 1 \u2264 t \u2264 1000 ) \u2014 the number of test cases. The description of test cases follows. Each test case consists of a single line containing the three integers, n , m , and k ( 1 \u2264 m \u2264 n \u2264 2000, 0 \u2264 k < 10^ 9 + 7 ) \u2014 the number of turns, how many of those turns Bob has to add, and the biggest number Alice can choose, respectively. It is guaranteed that the sum of n over all test cases does not exceed 2000 .",
    "output": "For each test case output a single integer number \u2014 the score of the optimal game modulo 10^ 9 + 7 . Formally, let M = 10^ 9 + 7 . It can be shown that the answer can be expressed as an irreducible fraction p/ q , where p and q are integers and q \u2261\u03380 M . Output the integer equal to p \u00b7 q^ - 1 M . In other words, output such an integer x that 0 \u2264 x < M and x \u00b7 q \u2261 p M .",
    "note": "In the first test case, the entire game has 3 turns, and since m = 3 , Bob has to add in each of them. Therefore Alice should pick the biggest number she can, which is k = 2 , every turn. In the third test case, Alice has a strategy to guarantee a score of 75/ 8\u2261 375000012 10^ 9 + 7 . In the fourth test case, Alice has a strategy to guarantee a score of 45/ 2\u2261 500000026 10^ 9 + 7 .",
    "topics": [
      "combinatorics",
      "dp",
      "games",
      "math"
    ],
    "id": "1628D1"
  },
  {
    "title": "Grid Xor",
    "url": "https://codeforces.com/problemset/problem/1628/C",
    "history": "Note: The XOR- sum of set { s_ 1, s_ 2, . . . , s_ m} is defined as s_ 1 \u2295 s_ 2 \u2295. . . \u2295 s_ m , where \u2295 denotes the bitwise XOR operation. After almost winning IOI, Victor bought himself an n\u00d7 n grid containing integers in each cell. n is an even integer. The integer in the cell in the i - th row and j - th column is a_ i, j . Sadly, Mihai stole the grid from Victor and told him he would return it with only one condition: Victor has to tell Mihai the XOR- sum of all the integers in the whole grid. Victor doesn' t remember all the elements of the grid, but he remembers some information about it: For each cell, Victor remembers the XOR- sum of all its neighboring cells. Two cells are considered neighbors if they share an edge \u2014 in other words, for some integers 1 \u2264 i, j, k, l \u2264 n , the cell in the i - th row and j - th column is a neighbor of the cell in the k - th row and l - th column if | i - k| = 1 and j = l , or if i = k and | j - l| = 1 . To get his grid back, Victor is asking you for your help. Can you use the information Victor remembers to find the XOR- sum of the whole grid? It can be proven that the answer is unique.",
    "input": "The first line of the input contains a single integer t ( 1 \u2264 t \u2264 100 ) \u2014 the number of test cases. The description of test cases follows. The first line of each test case contains a single even integer n ( 2 \u2264 n \u2264 1000 ) \u2014 the size of the grid. Then follows n lines, each containing n integers. The j - th integer in the i - th of these lines represents the XOR- sum of the integers in all the neighbors of the cell in the i - th row and j - th column. It is guaranteed that the sum of n over all test cases doesn' t exceed 1000 and in the original grid 0 \u2264 a_ i, j\u2264 2^ 30 - 1 . Hack FormatTo hack a solution, use the following format: The first line should contain a single integer t ( 1 \u2264 t \u2264 100 ) \u2014 the number of test cases. The first line of each test case should contain a single even integer n ( 2 \u2264 n \u2264 1000 ) \u2014 the size of the grid. Then n lines should follow, each containing n integers. The j - th integer in the i - th of these lines is a_ i, j in Victor' s original grid. The values in the grid should be integers in the range [ 0, 2^ 30- 1] The sum of n over all test cases must not exceed 1000 .",
    "output": "For each test case, output a single integer \u2014 the XOR- sum of the whole grid.",
    "note": "For the first test case, one possibility for Victor' s original grid is: 1 3 2 4 For the second test case, one possibility for Victor' s original grid is: 3 8 8 5 9 5 5 1 5 5 9 9 8 4 2 9 For the third test case, one possibility for Victor' s original grid is: 4 3 2 1 1 2 3 4 5 6 7 8 8 9 9 1",
    "topics": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "interactive",
      "math"
    ],
    "id": "1628C"
  },
  {
    "title": "Meximum Array",
    "url": "https://codeforces.com/problemset/problem/1628/A",
    "history": "Mihai has just learned about the MEX concept and since he liked it so much, he decided to use it right away. Given an array a of n non- negative integers, Mihai wants to create a new array b that is formed in the following way: While a is not empty: Choose an integer k ( 1 \u2264 k \u2264 | a| ) . Append the MEX of the first k numbers of the array a to the end of array b and erase them from the array a , shifting the positions of the remaining numbers in a . But, since Mihai loves big arrays as much as the MEX concept, he wants the new array b to be the lexicographically maximum. So, Mihai asks you to tell him what the maximum array b that can be created by constructing the array optimally is. An array x is lexicographically greater than an array y if in the first position where x and y differ x_ i > y_ i or if | x| > | y| and y is a prefix of x ( where | x| denotes the size of the array x ) . The MEX of a set of non- negative integers is the minimal non- negative integer such that it is not in the set. For example, MEX( 1, 2, 3 ) = 0 and MEX( 0, 1, 2, 4, 5 ) = 3 .",
    "input": "The first line of the input contains a single integer t ( 1 \u2264 t \u2264 100 ) \u2014 the number of test cases. The description of test cases follows. The first line of each test case contains a single integer n ( 1 \u2264 n \u2264 2 \u00b7 10^ 5 ) \u2014 the number of elements in the array a . The second line of each test case contains n non- negative integers a_ 1, . . . , a_ n ( 0 \u2264 a_ i \u2264 n ) , where a_ i is the i - th integer from the array a . It is guaranteed that the sum of n over all test cases does not exceed 2 \u00b7 10^ 5 .",
    "output": "For each test case print m \u2014 the length of the maximum array b Mihai can create, followed by m integers denoting the elements of the array b .",
    "note": "In the first test case, the lexicographically maximum array b is obtained by selecting k= 5 , resulting in the MEX of the whole array a . It is lexicographically maximum because an array starting with a smaller number than 4 is lexicographically smaller, and choosing a k< 5 would result in an array starting with a number smaller than 4 . In the second test case, there are two ways to obtain the maximum array: first selecting k= 6 , then k= 2 , or first selecting k= 7 and then k= 1 .",
    "topics": [
      "binary search",
      "constructive algorithms",
      "greedy",
      "implementation",
      "math",
      "two pointers"
    ],
    "id": "1628A"
  },
  {
    "title": "Not Adding",
    "url": "https://codeforces.com/problemset/problem/1627/D",
    "history": "You have an array a_ 1, a_ 2, . . . , a_ n consisting of n distinct integers. You are allowed to perform the following operation on it: Choose two elements from the array a_ i and a_ j ( i j ) such that ( a_ i, a_ j) is not present in the array, and add ( a_ i, a_ j) to the end of the array. Here ( x, y) denotes greatest common divisor ( GCD) of integers x and y . Note that the array changes after each operation, and the subsequent operations are performed on the new array. What is the maximum number of times you can perform the operation on the array?",
    "input": "The first line consists of a single integer n ( 2 \u2264 n \u2264 10^ 6 ) . The second line consists of n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 6 ) . All a_ i are distinct.",
    "output": "Output a single line containing one integer \u2014 the maximum number of times the operation can be performed on the given array.",
    "note": "In the first example, one of the ways to perform maximum number of operations on the array is: Pick i = 1, j= 5 and add ( a_ 1, a_ 5) = ( 4, 30) = 2 to the array. Pick i = 2, j= 4 and add ( a_ 2, a_ 4) = ( 20, 25) = 5 to the array. Pick i = 2, j= 5 and add ( a_ 2, a_ 5) = ( 20, 30) = 10 to the array. It can be proved that there is no way to perform more than 3 operations on the original array. In the second example one can add 3 , then 1 , then 5 , and 2 .",
    "topics": [
      "brute force",
      "dp",
      "math",
      "number theory"
    ],
    "id": "1627D"
  },
  {
    "title": "A Random Code Problem",
    "url": "https://codeforces.com/problemset/problem/1626/F",
    "history": "You are given an integer array a_ 0, a_ 1, . . . , a_ n - 1 , and an integer k . You perform the following code with it: long long ans = 0; / / create a 64- bit signed variable which is initially equal to 0for( int i = 1; i < = k; i+ + ) int idx = rnd. next( 0, n - 1) ; / / generate a random integer between 0 and n - 1, both inclusive / / each integer from 0 to n - 1 has the same probability of being chosen ans + = a[ idx] ; a[ idx] - = ( a[ idx]",
    "input": "The only line contains six integers n , a_ 0 , x , y , k and M ( 1 \u2264 n \u2264 10^ 7 ; 1 \u2264 a_ 0, x, y < M \u2264 998244353 ; 1 \u2264 k \u2264 17 ) . The array a in the input is constructed as follows: a_ 0 is given in the input; for every i from 1 to n - 1 , the value of a_ i can be calculated as a_ i = ( a_ i - 1\u00b7 x + y) M .",
    "output": "Let the expected value of the variable ans after performing the code be E . It can be shown that E \u00b7 n^ k is an integer. You have to output this integer modulo 998244353 .",
    "note": "The array in the first example test is [ 10, 35, 22] . In the second example, it is [ 15363, 1418543] .",
    "topics": [
      "combinatorics",
      "dp",
      "math",
      "number theory",
      "probabilities"
    ],
    "id": "1626F"
  },
  {
    "title": "Martial Arts Tournament",
    "url": "https://codeforces.com/problemset/problem/1626/D",
    "history": "Monocarp is planning to host a martial arts tournament. There will be three divisions based on weight: lightweight, middleweight and heavyweight. The winner of each division will be determined by a single elimination system. In particular, that implies that the number of participants in each division should be a power of two. Additionally, each division should have a non- zero amount of participants. n participants have registered for the tournament so far, the i - th of them weighs a_ i . To split participants into divisions, Monocarp is going to establish two integer weight boundaries x and y ( x < y ) . All participants who weigh strictly less than x will be considered lightweight. All participants who weigh greater or equal to y will be considered heavyweight. The remaining participants will be considered middleweight. It' s possible that the distribution doesn' t make the number of participants in each division a power of two. It can also lead to empty divisions. To fix the issues, Monocarp can invite an arbitrary number of participants to each division. Note that Monocarp can' t kick out any of the n participants who have already registered for the tournament. However, he wants to invite as little extra participants as possible. Help Monocarp to choose x and y in such a way that the total amount of extra participants required is as small as possible. Output that amount.",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of testcases. The first line of each testcase contains a single integer n ( 1 \u2264 n \u2264 2 \u00b7 10^ 5 ) \u2014 the number of the registered participants. The second line of each testcase contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 n ) \u2014 the weights of the registered participants. The sum of n over all testcases doesn' t exceed 2 \u00b7 10^ 5 .",
    "output": "For each testcase, print a single integer \u2014 the smallest number of extra participants Monocarp is required to invite after he chooses the weight boundaries x and y .",
    "note": "In the first testcase of the example, Monocarp can choose x= 2 and y= 3 . Lightweight, middleweight and heavyweight divisions will have 2 , 1 and 1 participants, respectively. They all are powers of two, so no extra participants are required. In the second testcase of the example, regardless of the choice of x and y , one division will have 1 participant, the rest will have 0 . Thus, Monocarp will have to invite 1 participant into both of the remaining divisions. In the third testcase of the example, Monocarp can choose x= 1 and y= 2 . Lightweight, middleweight and heavyweight divisions will have 0 , 3 and 3 participants, respectively. So an extra participant is needed in each division. In the fourth testcase of the example, Monocarp can choose x= 8 and y= 9 . Lightweight, middleweight and heavyweight divisions will have 8 , 0 and 0 participants, respectively. Middleweight and heavyweight division need an extra participant each.",
    "topics": [
      "binary search",
      "brute force",
      "greedy",
      "math"
    ],
    "id": "1626D"
  },
  {
    "title": "Monsters And Spells",
    "url": "https://codeforces.com/problemset/problem/1626/C",
    "history": "Monocarp is playing a computer game once again. He is a wizard apprentice, who only knows a single spell. Luckily, this spell can damage the monsters. The level he' s currently on contains n monsters. The i - th of them appears k_ i seconds after the start of the level and has h_ i health points. As an additional constraint, h_ i \u2264 k_ i for all 1 \u2264 i \u2264 n . All k_ i are different. Monocarp can cast the spell at moments which are positive integer amounts of second after the start of the level: 1, 2, 3, . . . The damage of the spell is calculated as follows. If he didn' t cast the spell at the previous second, the damage is 1 . Otherwise, let the damage at the previous second be x . Then he can choose the damage to be either x + 1 or 1 . A spell uses mana: casting a spell with damage x uses x mana. Mana doesn' t regenerate. To kill the i - th monster, Monocarp has to cast a spell with damage at least h_ i at the exact moment the monster appears, which is k_ i . Note that Monocarp can cast the spell even when there is no monster at the current second. The mana amount required to cast the spells is the sum of mana usages for all cast spells. Calculate the least amount of mana required for Monocarp to kill all monsters. It can be shown that it' s always possible to kill all monsters under the constraints of the problem.",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of testcases. The first line of the testcase contains a single integer n ( 1 \u2264 n \u2264 100 ) \u2014 the number of monsters in the level. The second line of the testcase contains n integers k_ 1 < k_ 2 < . . . < k_ n ( 1 \u2264 k_ i \u2264 10^ 9 ) \u2014 the number of second from the start the i - th monster appears at. All k_ i are different, k_ i are provided in the increasing order. The third line of the testcase contains n integers h_ 1, h_ 2, . . . , h_ n ( 1 \u2264 h_ i \u2264 k_ i \u2264 10^ 9 ) \u2014 the health of the i - th monster. The sum of n over all testcases doesn' t exceed 10^ 4 .",
    "output": "For each testcase, print a single integer \u2014 the least amount of mana required for Monocarp to kill all monsters.",
    "note": "In the first testcase of the example, Monocarp can cast spells 3, 4, 5 and 6 seconds from the start with damages 1, 2, 3 and 4 , respectively. The damage dealt at 6 seconds is 4 , which is indeed greater than or equal to the health of the monster that appears. In the second testcase of the example, Monocarp can cast spells 3, 4 and 5 seconds from the start with damages 1, 2 and 3 , respectively. In the third testcase of the example, Monocarp can cast spells 4, 5, 7, 8 and 9 seconds from the start with damages 1, 2, 1, 1 and 2 , respectively.",
    "topics": [
      "binary search",
      "data structures",
      "dp",
      "greedy",
      "implementation",
      "math",
      "two pointers"
    ],
    "id": "1626C"
  },
  {
    "title": "Binary Spiders",
    "url": "https://codeforces.com/problemset/problem/1625/D",
    "history": "Binary Spiders are species of spiders that live on Mars. These spiders weave their webs to defend themselves from enemies. To weave a web, spiders join in pairs. If the first spider in pair has x legs, and the second spider has y legs, then they weave a web with durability x \u2295 y . Here, \u2295 means bitwise XOR. Binary Spiders live in large groups. You observe a group of n spiders, and the i - th spider has a_ i legs. When the group is threatened, some of the spiders become defenders. Defenders are chosen in the following way. First, there must be at least two defenders. Second, any pair of defenders must be able to weave a web with durability at least k . Third, there must be as much defenders as possible. Scientists have researched the behaviour of Binary Spiders for a long time, and now they have a hypothesis that they can always choose the defenders in an optimal way, satisfying the conditions above. You need to verify this hypothesis on your group of spiders. So, you need to understand how many spiders must become defenders. You are not a Binary Spider, so you decided to use a computer to solve this problem.",
    "input": "The first line contains two integers n and k ( 2 \u2264 n \u2264 3\u00b710^ 5 , 0 \u2264 k \u2264 2^ 30 - 1 ) , the amount of spiders in the group and the minimal allowed durability of a web. The second line contains n integers a_ i ( 0 \u2264 a_ i \u2264 2^ 30- 1 ) \u2014 the number of legs the i - th spider has.",
    "output": "In the first line, print a single integer l ( 2 \u2264l\u2264 n ) , the maximum possible amount of defenders. In the second line, print l integers b_ i , separated by a single space ( 1 \u2264 b_ i \u2264 n ) \u2014 indices of spiders that will become defenders. If there exists more than one way to choose the defenders, print any of them. Unfortunately, it may appear that it' s impossible to choose the defenders. In this case, print a single integer - 1 .",
    "note": "Consider the examples above. In the first example, the group of spiders is illustrated on the picture below: We choose the two- legged, the ten- legged and the 16 - legged spiders. It' s not hard to see that each pair may weave a web with enough durability, as 2 \u2295 10 = 8 \u2265 8 , 2 \u2295 16 = 18 \u2265 8 and 10 \u2295 16 = 26 \u2265 8 . This is not the only way, as you can also choose, for example, the spiders with indices 3 , 4 , and 6 . In the second example, no pair of spiders can weave the web with durability 1024 or more, so the answer is - 1 .",
    "topics": [
      "bitmasks",
      "data structures",
      "implementation",
      "math",
      "sortings",
      "trees"
    ],
    "id": "1625D"
  },
  {
    "title": "Ancient Civilization",
    "url": "https://codeforces.com/problemset/problem/1625/A",
    "history": "Martian scientists explore Ganymede, one of Jupiter' s numerous moons. Recently, they have found ruins of an ancient civilization. The scientists brought to Mars some tablets with writings in a language unknown to science. They found out that the inhabitants of Ganymede used an alphabet consisting of two letters, and each word was exactly l letters long. So, the scientists decided to write each word of this language as an integer from 0 to 2^ l - 1 inclusively. The first letter of the alphabet corresponds to zero bit in this integer, and the second letter corresponds to one bit. The same word may have various forms in this language. Then, you need to restore the initial form. The process of doing it is described below. Denote the distance between two words as the amount of positions, in which these words differ. For example, the distance between 1001_ 2 and 1100_ 2 ( in binary) is equal to two, as these words have different letters in the second and the fourth positions, counting from left to right. Further, denote the distance between words x and y as d( x, y) . Let the word have n forms, the i - th of which is described with an integer x_ i . All the x_ i are not necessarily different, as two various forms of the word can be written the same. Consider some word y . Then, closeness of the word y is equal to the sum of distances to each of the word forms, i. e. the sum d( x_ i, y) over all 1 \u2264 i \u2264 n . The initial form is the word y with minimal possible nearness. You need to help the scientists and write the program which finds the initial form of the word given all its known forms. Note that the initial form is not necessarily equal to any of the n given forms.",
    "input": "The first line contains an integer t ( 1 \u2264 t \u2264 100 ) \u2014 the number of test cases. The following are descriptions of the test cases. The first line contains two integers n and l ( 1 \u2264 n \u2264 100 , 1 \u2264l\u2264 30 ) \u2014 the amount of word forms, and the number of letters in one word. The second line contains n integers x_ i ( 0 \u2264 x_ i \u2264 2^ l - 1 ) \u2014 word forms. The integers are not necessarily different.",
    "output": "For each test, print a single integer, the initial form of the word, i. e. such y ( 0 \u2264 y \u2264 2^ l - 1 ) that the sum d( x_ i, y) over all 1 \u2264 i \u2264 n is minimal possible. Note that y can differ from all the integers x_ i . If there are multiple ways to restore the initial form, print any.",
    "note": "In the first test case, the words can be written as x_ 1 = 10010_ 2 , x_ 2 = 01001_ 2 and x_ 3 = 10101_ 2 in binary. Let y = 10001_ 2 . Then, d( x_ 1, y) = 2 ( the difference is in the fourth and the fifth positions) , d( x_ 2, y) = 2 ( the difference is in the first and the second positions) , d( x_ 3, y) = 1 ( the difference is in the third position) . So, the closeness is 2 + 2 + 1 = 5 . It can be shown that you cannot achieve smaller closeness. In the second test case, all the forms are equal to 18 ( 10010_ 2 in binary) , so the initial form is also 18 . It' s easy to see that closeness is equal to zero in this case.",
    "topics": [
      "bitmasks",
      "greedy",
      "math"
    ],
    "id": "1625A"
  },
  {
    "title": "Division by Two and Permutation",
    "url": "https://codeforces.com/problemset/problem/1624/C",
    "history": "You are given an array a consisting of n positive integers. You can perform operations on it. In one operation you can replace any element of the array a_ i with \u230aa_ i/ 2\u230b , that is, by an integer part of dividing a_ i by 2 ( rounding down) . See if you can apply the operation some number of times ( possible 0 ) to make the array a become a permutation of numbers from 1 to n \u2014that is, so that it contains all numbers from 1 to n , each exactly once. For example, if a = [ 1, 8, 25, 2] , n = 4 , then the answer is yes. You could do the following: Replace 8 with \u230a8/ 2\u230b = 4 , then a = [ 1, 4, 25, 2] . Replace 25 with \u230a25/ 2\u230b = 12 , then a = [ 1, 4, 12, 2] . Replace 12 with \u230a12/ 2\u230b = 6 , then a = [ 1, 4, 6, 2] . Replace 6 with \u230a6/ 2\u230b = 3 , then a = [ 1, 4, 3, 2] .",
    "input": "The first line of input data contains an integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014the number of test cases. Each test case contains exactly two lines. The first one contains an integer n ( 1 \u2264 n \u2264 50 ) , the second one contains integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 9 ) .",
    "output": "For each test case, output on a separate line: YES if you can make the array a become a permutation of numbers from 1 to n , NO otherwise. You can output YES and NO in any case ( for example, strings yEs, yes, Yes and YES will be recognized as a positive response) .",
    "note": "The first test case is explained in the text of the problem statement. In the second test case, it is not possible to get a permutation.",
    "topics": [
      "constructive algorithms",
      "flows",
      "graph matchings",
      "greedy",
      "math"
    ],
    "id": "1624C"
  },
  {
    "title": "Make AP",
    "url": "https://codeforces.com/problemset/problem/1624/B",
    "history": "Polycarp has 3 positive integers a , b and c . He can perform the following operation exactly once. Choose a positive integer m and multiply exactly one of the integers a , b or c by m . Can Polycarp make it so that after performing the operation, the sequence of three numbers a , b , c ( in this order) forms an arithmetic progression? Note that you cannot change the order of a , b and c . Formally, a sequence x_ 1, x_ 2, . . . , x_ n is called an arithmetic progression ( AP) if there exists a number d ( called \" common difference\" ) such that x_ i+ 1= x_ i+ d for all i from 1 to n- 1 . In this problem, n= 3 . For example, the following sequences are AP: [ 5, 10, 15] , [ 3, 2, 1] , [ 1, 1, 1] , and [ 13, 10, 7] . The following sequences are not AP: [ 1, 2, 4] , [ 0, 1, 0] and [ 1, 3, 2] . You need to answer t independent test cases.",
    "input": "The first line contains the number t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. Each of the following t lines contains 3 integers a , b , c ( 1 \u2264 a, b, c \u2264 10^ 8 ) .",
    "output": "For each test case print \" YES\" ( without quotes) if Polycarp can choose a positive integer m and multiply exactly one of the integers a , b or c by m to make [ a, b, c] be an arithmetic progression. Print \" NO\" ( without quotes) otherwise. You can print YES and NO in any ( upper or lower) case ( for example, the strings yEs, yes, Yes and YES will be recognized as a positive answer) .",
    "note": "In the first and second test cases, you can choose the number m= 4 and multiply the second number ( b= 5 ) by 4 . In the first test case the resulting sequence will be [ 10, 20, 30] . This is an AP with a difference d= 10 . In the second test case the resulting sequence will be [ 30, 20, 10] . This is an AP with a difference d= - 10 . In the third test case, you can choose m= 1 and multiply any number by 1 . The resulting sequence will be [ 1, 2, 3] . This is an AP with a difference d= 1 . In the fourth test case, you can choose m= 9 and multiply the first number ( a= 1 ) by 9 . The resulting sequence will be [ 9, 6, 3] . This is an AP with a difference d= - 3 . In the fifth test case, it is impossible to make an AP.",
    "topics": [
      "implementation",
      "math"
    ],
    "id": "1624B"
  },
  {
    "title": "Plus One on the Subset",
    "url": "https://codeforces.com/problemset/problem/1624/A",
    "history": "Polycarp got an array of integers a[ 1 . . . n] as a gift. Now he wants to perform a certain number of operations ( possibly zero) so that all elements of the array become the same ( that is, to become a_ 1= a_ 2= . . . = a_ n ) . In one operation, he can take some indices in the array and increase the elements of the array at those indices by 1 . For example, let a= [ 4, 2, 1, 6, 2] . He can perform the following operation: select indices 1, 2, and 4 and increase elements of the array in those indices by 1 . As a result, in one operation, he can get a new state of the array a= [ 5, 3, 1, 7, 2] . What is the minimum number of operations it can take so that all elements of the array become equal to each other ( that is, to become a_ 1= a_ 2= . . . = a_ n ) ?",
    "input": "The first line of the input contains a single integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases in the test. The following are descriptions of the input test cases. The first line of the description of each test case contains one integer n ( 1 \u2264 n \u2264 50 ) \u2014 the array a . The second line of the description of each test case contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 9 ) \u2014 elements of the array a .",
    "output": "For each test case, print one integer \u2014 the minimum number of operations to make all elements of the array a equal.",
    "note": "First test case: a= [ 3, 4, 2, 4, 1, 2] take a_ 3, a_ 5 and perform an operation plus one on them, as a result we get a= [ 3, 4, 3, 4, 2, 2] . a= [ 3, 4, 3, 4, 2, 2] we take a_ 1, a_ 5, a_ 6 and perform an operation on them plus one, as a result we get a= [ 4, 4, 3, 4, 3, 3] . a= [ 4, 4, 3, 4, 3, 3] we take a_ 3, a_ 5, a_ 6 and perform an operation on them plus one, as a result we get a= [ 4, 4, 4, 4, 4, 4] . There are other sequences of 3 operations, after the application of which all elements become equal. Second test case: a= [ 1000, 1002, 998] 2 times we take a_ 1, a_ 3 and perform an operation plus one on them, as a result we get a= [ 1002, 1002, 1000] . a= [ 1002, 1002, 1000] also take a_ 3 2 times and perform an operation plus one on it, as a result we get a= [ 1002, 1002, 1002] . Third test case: a= [ 12, 11] take a_ 2 and perform an operation plus one on it, as a result we get a= [ 12, 12] .",
    "topics": [
      "math"
    ],
    "id": "1624A"
  },
  {
    "title": "Robot Cleaner Revisit",
    "url": "https://codeforces.com/problemset/problem/1623/D",
    "history": "The statement of this problem shares a lot with problem A. The differences are that in this problem, the probability is introduced, and the constraint is different. A robot cleaner is placed on the floor of a rectangle room, surrounded by walls. The floor consists of n rows and m columns. The rows of the floor are numbered from 1 to n from top to bottom, and columns of the floor are numbered from 1 to m from left to right. The cell on the intersection of the r - th row and the c - th column is denoted as ( r, c) . The initial position of the robot is ( r_ b, c_ b) . In one second, the robot moves by dr rows and dc columns, that is, after one second, the robot moves from the cell ( r, c) to ( r + dr, c + dc) . Initially dr = 1 , dc = 1 . If there is a vertical wall ( the left or the right walls) in the movement direction, dc is reflected before the movement, so the new value of dc is - dc . And if there is a horizontal wall ( the upper or lower walls) , dr is reflected before the movement, so the new value of dr is - dr . Each second ( including the moment before the robot starts moving) , the robot cleans every cell lying in the same row or the same column as its position. There is only one dirty cell at ( r_ d, c_ d) . The job of the robot is to clean that dirty cell. After a lot of testings in problem A, the robot is now broken. It cleans the floor as described above, but at each second the cleaning operation is performed with probability p/ 100 only, and not performed with probability 1 - p/ 100 . The cleaning or not cleaning outcomes are independent each second. Given the floor size n and m , the robot' s initial position ( r_ b, c_ b) and the dirty cell' s position ( r_ d, c_ d) , find the expected time for the robot to do its job. It can be shown that the answer can be expressed as an irreducible fraction x/ y , where x and y are integers and y \u2261\u03380 10^ 9 + 7 . Output the integer equal to x \u00b7 y^ - 1 ( 10^ 9 + 7) . In other words, output such an integer a that 0 \u2264 a < 10^ 9 + 7 and a \u00b7 y \u2261 x 10^ 9 + 7 .",
    "input": "Each test contains multiple test cases. The first line contains the number of test cases t ( 1 \u2264 t \u2264 10 ) . Description of the test cases follows. A test case consists of only one line, containing n , m , r_ b , c_ b , r_ d , c_ d , and p ( 4 \u2264 n \u00b7 m \u2264 10^ 5 , n, m \u2265 2 , 1 \u2264 r_ b, r_ d \u2264 n , 1 \u2264 c_ b, c_ d \u2264 m , 1 \u2264 p \u2264 99 ) \u2014 the sizes of the room, the initial position of the robot, the position of the dirt cell and the probability of cleaning in percentage.",
    "output": "For each test case, print a single integer \u2014 the expected time for the robot to clean the dirty cell, modulo 10^ 9 + 7 .",
    "note": "In the first test case, the robot has the opportunity to clean the dirty cell every second. Using the geometric distribution, we can find out that with the success rate of 25% , the expected number of tries to clear the dirty cell is 1/ 0. 25 = 4 . But because the first moment the robot has the opportunity to clean the cell is before the robot starts moving, the answer is 3 . Illustration for the first example. The blue arc is the robot. The red star is the target dirt cell. The purple square is the initial position of the robot. Each second the robot has an opportunity to clean a row and a column, denoted by yellow stripes. In the second test case, the board size and the position are different, but the robot still has the opportunity to clean the dirty cell every second, and it has the same probability of cleaning. Therefore the answer is the same as in the first example. Illustration for the second example. The third and the fourth case are almost the same. The only difference is that the position of the dirty cell and the robot are swapped. But the movements in both cases are identical, hence the same result.",
    "topics": [
      "implementation",
      "math",
      "probabilities"
    ],
    "id": "1623D"
  },
  {
    "title": "Robot Cleaner",
    "url": "https://codeforces.com/problemset/problem/1623/A",
    "history": "A robot cleaner is placed on the floor of a rectangle room, surrounded by walls. The floor consists of n rows and m columns. The rows of the floor are numbered from 1 to n from top to bottom, and columns of the floor are numbered from 1 to m from left to right. The cell on the intersection of the r - th row and the c - th column is denoted as ( r, c) . The initial position of the robot is ( r_ b, c_ b) . In one second, the robot moves by dr rows and dc columns, that is, after one second, the robot moves from the cell ( r, c) to ( r + dr, c + dc) . Initially dr = 1 , dc = 1 . If there is a vertical wall ( the left or the right walls) in the movement direction, dc is reflected before the movement, so the new value of dc is - dc . And if there is a horizontal wall ( the upper or lower walls) , dr is reflected before the movement, so the new value of dr is - dr . Each second ( including the moment before the robot starts moving) , the robot cleans every cell lying in the same row or the same column as its position. There is only one dirty cell at ( r_ d, c_ d) . The job of the robot is to clean that dirty cell. Illustration for the first example. The blue arc is the robot. The red star is the target dirty cell. Each second the robot cleans a row and a column, denoted by yellow stripes. Given the floor size n and m , the robot' s initial position ( r_ b, c_ b) and the dirty cell' s position ( r_ d, c_ d) , find the time for the robot to do its job.",
    "input": "Each test contains multiple test cases. The first line contains the number of test cases t ( 1 \u2264 t \u2264 10^ 4 ) . Description of the test cases follows. A test case consists of only one line, containing six integers n , m , r_ b , c_ b , r_ d , and c_ d ( 1 \u2264 n, m \u2264 100 , 1 \u2264 r_ b, r_ d \u2264 n , 1 \u2264 c_ b, c_ d \u2264 m ) \u2014 the sizes of the room, the initial position of the robot and the position of the dirt cell.",
    "output": "For each test case, print an integer \u2014 the time for the robot to clean the dirty cell. We can show that the robot always cleans the dirty cell eventually.",
    "note": "In the first example, the floor has the size of 10\u00d7 10 . The initial position of the robot is ( 6, 1) and the position of the dirty cell is ( 2, 8) . See the illustration of this example in the problem statement. In the second example, the floor is the same, but the initial position of the robot is now ( 9, 9) , and the position of the dirty cell is ( 1, 1) . In this example, the robot went straight to the dirty cell and clean it. In the third example, the floor has the size 9 \u00d7 8 . The initial position of the robot is ( 5, 6) , and the position of the dirty cell is ( 2, 1) . In the fourth example, the floor has the size 6 \u00d7 9 . The initial position of the robot is ( 2, 2) and the position of the dirty cell is ( 5, 8) . In the last example, the robot was already standing in the same column as the dirty cell, so it can clean the cell right away.",
    "topics": [
      "brute force",
      "implementation",
      "math"
    ],
    "id": "1623A"
  },
  {
    "title": "Quadratic Set",
    "url": "https://codeforces.com/problemset/problem/1622/F",
    "history": "Let' s call a set of positive integers a_ 1, a_ 2, . . . , a_ k quadratic if the product of the factorials of its elements is a square of an integer, i. e. \u220f_ i= 1^ k a_ i! = m^ 2 , for some integer m . You are given a positive integer n . Your task is to find a quadratic subset of a set 1, 2, . . . , n of maximum size. If there are multiple answers, print any of them.",
    "input": "A single line contains a single integer n ( 1 \u2264 n \u2264 10^ 6 ) .",
    "output": "In the first line, print a single integer \u2014 the size of the maximum subset. In the second line, print the subset itself in an arbitrary order.",
    "note": "",
    "topics": [
      "constructive algorithms",
      "hashing",
      "math",
      "number theory"
    ],
    "id": "1622F"
  },
  {
    "title": "Shuffle",
    "url": "https://codeforces.com/problemset/problem/1622/D",
    "history": "You are given a binary string ( i. e. a string consisting of characters 0 and/ or 1) s of length n . You can perform the following operation with the string s at most once: choose a substring ( a contiguous subsequence) of s having exactly k characters 1 in it, and shuffle it ( reorder the characters in the substring as you wish) . Calculate the number of different strings which can be obtained from s by performing this operation at most once.",
    "input": "The first line contains two integers n and k ( 2 \u2264 n \u2264 5000 ; 0 \u2264 k \u2264 n ) . The second line contains the string s of length n , consisting of characters 0 and/ or 1.",
    "output": "Print one integer \u2014 the number of different strings which can be obtained from s by performing the described operation at most once. Since the answer can be large, output it modulo 998244353 .",
    "note": "Some strings you can obtain in the first example: to obtain 0110110, you can take the substring from the 1 - st character to the 4 - th character, which is 1100, and reorder its characters to get 0110; to obtain 1111000, you can take the substring from the 3 - rd character to the 7 - th character, which is 00110, and reorder its characters to get 11000; to obtain 1100101, you can take the substring from the 5 - th character to the 7 - th character, which is 110, and reorder its characters to get 101. In the second example, k = 0 so you can only choose the substrings consisting only of 0 characters. Reordering them doesn' t change the string at all, so the only string you can obtain is 10010.",
    "topics": [
      "combinatorics",
      "math",
      "two pointers"
    ],
    "id": "1622D"
  },
  {
    "title": "Berland Music",
    "url": "https://codeforces.com/problemset/problem/1622/B",
    "history": "Berland Music is a music streaming service built specifically to support Berland local artist. Its developers are currently working on a song recommendation module. So imagine Monocarp got recommended n songs, numbered from 1 to n . The i - th song had its predicted rating equal to p_ i , where 1 \u2264 p_ i \u2264 n and every integer from 1 to n appears exactly once. In other words, p is a permutation. After listening to each of them, Monocarp pressed either a like or a dislike button. Let his vote sequence be represented with a string s , such that s_ i= 0 means that he disliked the i - th song, and s_ i= 1 means that he liked it. Now the service has to re- evaluate the song ratings in such a way that: the new ratings q_ 1, q_ 2, . . . , q_ n still form a permutation ( 1 \u2264 q_ i \u2264 n ; each integer from 1 to n appears exactly once) ; every song that Monocarp liked should have a greater rating than every song that Monocarp disliked ( formally, for all i, j such that s_ i= 1 and s_ j= 0 , q_ i> q_ j should hold) . Among all valid permutations q find the one that has the smallest value of \u2211_ i= 1^ n | p_ i- q_ i| , where | x| is an absolute value of x . Print the permutation q_ 1, q_ 2, . . . , q_ n . If there are multiple answers, you can print any of them.",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of testcases. The first line of each testcase contains a single integer n ( 1 \u2264 n \u2264 2 \u00b7 10^ 5 ) \u2014 the number of songs. The second line of each testcase contains n integers p_ 1, p_ 2, . . . , p_ n ( 1 \u2264 p_ i \u2264 n ) \u2014 the permutation of the predicted ratings. The third line contains a single string s , consisting of n characters. Each character is either a 0 or a 1 . 0 means that Monocarp disliked the song, and 1 means that he liked it. The sum of n over all testcases doesn' t exceed 2 \u00b7 10^ 5 .",
    "output": "For each testcase, print a permutation q \u2014 the re- evaluated ratings of the songs. If there are multiple answers such that \u2211_ i= 1^ n | p_ i- q_ i| is minimum possible, you can print any of them.",
    "note": "In the first testcase, there exists only one permutation q such that each liked song is rating higher than each disliked song: song 1 gets rating 2 and song 2 gets rating 1 . \u2211_ i= 1^ n | p_ i- q_ i| = | 1- 2| + | 2- 1| = 2 . In the second testcase, Monocarp liked all songs, so all permutations could work. The permutation with the minimum sum of absolute differences is the permutation equal to p . Its cost is 0 .",
    "topics": [
      "data structures",
      "greedy",
      "math",
      "sortings"
    ],
    "id": "1622B"
  },
  {
    "title": "Construct a Rectangle",
    "url": "https://codeforces.com/problemset/problem/1622/A",
    "history": "There are three sticks with integer lengths l_ 1, l_ 2 and l_ 3 . You are asked to break exactly one of them into two pieces in such a way that: both pieces have positive ( strictly greater than 0 ) integer length; the total length of the pieces is equal to the original length of the stick; it' s possible to construct a rectangle from the resulting four sticks such that each stick is used as exactly one of its sides. A square is also considered a rectangle. Determine if it' s possible to do that.",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of testcases. The only line of each testcase contains three integers l_ 1, l_ 2, l_ 3 ( 1 \u2264 l_ i \u2264 10^ 8 ) \u2014 the lengths of the sticks.",
    "output": "For each testcase, print \" YES\" if it' s possible to break one of the sticks into two pieces with positive integer length in such a way that it' s possible to construct a rectangle from the resulting four sticks. Otherwise, print \" NO\" . You may print every letter in any case you want ( so, for example, the strings yEs, yes, Yes and YES are all recognized as a positive answer) .",
    "note": "In the first testcase, the first stick can be broken into parts of length 1 and 5 . We can construct a rectangle with opposite sides of length 1 and 5 . In the second testcase, breaking the stick of length 2 can only result in sticks of lengths 1, 1, 2, 5 , which can' t be made into a rectangle. Breaking the stick of length 5 can produce results 2, 3 or 1, 4 but neither of them can' t be put into a rectangle. In the third testcase, the second stick can be broken into parts of length 2 and 2 . The resulting rectangle has opposite sides 2 and 2 ( which is a square) . In the fourth testcase, the third stick can be broken into parts of length 2 and 2 . The resulting rectangle has opposite sides 2 and 5 .",
    "topics": [
      "geometry",
      "math"
    ],
    "id": "1622A"
  },
  {
    "title": "Weighted Increasing Subsequences",
    "url": "https://codeforces.com/problemset/problem/1621/G",
    "history": "You are given the sequence of integers a_ 1, a_ 2, . . . , a_ n of length n . The sequence of indices i_ 1 < i_ 2 < . . . < i_ k of length k denotes the subsequence a_ i_ 1, a_ i_ 2, . . . , a_ i_ k of length k of sequence a . The subsequence a_ i_ 1, a_ i_ 2, . . . , a_ i_ k of length k of sequence a is called increasing subsequence if a_ i_ j < a_ i_ j+ 1 for each 1 \u2264 j < k . The weight of the increasing subsequence a_ i_ 1, a_ i_ 2, . . . , a_ i_ k of length k of sequence a is the number of 1 \u2264 j \u2264 k , such that exists index i_ k < x \u2264 n and a_ x > a_ i_ j . For example, if a = [ 6, 4, 8, 6, 5] , then the sequence of indices i = [ 2, 4] denotes increasing subsequence [ 4, 6] of sequence a . The weight of this increasing subsequence is 1 , because for j = 1 exists x = 5 and a_ 5 = 5 > a_ i_ 1 = 4 , but for j = 2 such x doesn' t exist. Find the sum of weights of all increasing subsequences of a modulo 10^ 9+ 7 .",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 1000 ) \u2014 the number of test cases. The first line of each test case contains the single integer n ( 1 \u2264 n \u2264 2 \u00b7 10^ 5 ) \u2014 the length of the sequence a . The second line of each test case contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 9 ) \u2014 the sequence a . It is guaranteed that the sum of n over all test cases doesn' t exceed 2 \u00b7 10^ 5 .",
    "output": "For each test case, print the sum of weights of all increasing subsequences a modulo 10^ 9+ 7 .",
    "note": "In the first test case the following increasing subsequences of a have not zero weight: The weight of [ a_ 1] = [ 6] is 1 . The weight of [ a_ 2] = [ 4] is 1 . The weight of [ a_ 2, a_ 3] = [ 4, 8] is 1 . The weight of [ a_ 2, a_ 4] = [ 4, 6] is 1 . The sum of weights of increasing subsequences is 4 . In the second test case there are 7 increasing subsequences of a with not zero weight: 3 with weight 1 , 3 with weight 2 and 1 with weight 3 . The sum of weights is 12 .",
    "topics": [
      "data structures",
      "dp",
      "math"
    ],
    "id": "1621G"
  },
  {
    "title": "The Winter Hike",
    "url": "https://codeforces.com/problemset/problem/1621/D",
    "history": "Circular land is an 2n \u00d7 2n grid. Rows of this grid are numbered by integers from 1 to 2n from top to bottom and columns of this grid are numbered by integers from 1 to 2n from left to right. The cell ( x, y) is the cell on the intersection of row x and column y for 1 \u2264 x \u2264 2n and 1 \u2264 y \u2264 2n . There are n^ 2 of your friends in the top left corner of the grid. That is, in each cell ( x, y) with 1 \u2264 x, y \u2264 n there is exactly one friend. Some of the other cells are covered with snow. Your friends want to get to the bottom right corner of the grid. For this in each cell ( x, y) with n+ 1 \u2264 x, y \u2264 2n there should be exactly one friend. It doesn' t matter in what cell each of friends will be. You have decided to help your friends to get to the bottom right corner of the grid. For this, you can give instructions of the following types: You select a row x . All friends in this row should move to the next cell in this row. That is, friend from the cell ( x, y) with 1 \u2264 y < 2n will move to the cell ( x, y + 1) and friend from the cell ( x, 2n) will move to the cell ( x, 1) . You select a row x . All friends in this row should move to the previous cell in this row. That is, friend from the cell ( x, y) with 1 < y \u2264 2n will move to the cell ( x, y - 1) and friend from the cell ( x, 1) will move to the cell ( x, 2n) . You select a column y . All friends in this column should move to the next cell in this column. That is, friend from the cell ( x, y) with 1 \u2264 x < 2n will move to the cell ( x + 1, y) and friend from the cell ( 2n, y) will move to the cell ( 1, y) . You select a column y . All friends in this column should move to the previous cell in this column. That is, friend from the cell ( x, y) with 1 < x \u2264 2n will move to the cell ( x - 1, y) and friend from the cell ( 1, y) will move to the cell ( 2n, y) . Note how friends on the grid border behave in these instructions. Example of applying the third operation to the second column. Here, colorful circles denote your friends and blue cells are covered with snow. You can give such instructions any number of times. You can give instructions of different types. If after any instruction one of your friends is in the cell covered with snow he becomes ill. In order to save your friends you can remove snow from some cells before giving the first instruction: You can select the cell ( x, y) that is covered with snow now and remove snow from this cell for c_ x, y coins. You can do this operation any number of times. You want to spend the minimal number of coins and give some instructions to your friends. After this, all your friends should be in the bottom right corner of the grid and none of them should be ill. Please, find how many coins you will spend.",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 100 ) \u2014 the number of test cases. The first line of each test case contains the single integer n ( 1 \u2264 n \u2264 250 ) . Each of the next 2n lines contains 2n integers c_ i, 1, c_ i, 2, . . . , c_ i, 2n ( 0 \u2264 c_ i, j\u2264 10^ 9 ) \u2014 costs of removing snow from cells. If c_ i, j = 0 for some i, j than there is no snow in cell ( i, j) . Otherwise, cell ( i, j) is covered with snow. It is guaranteed that c_ i, j = 0 for 1 \u2264 i, j \u2264 n . It is guaranteed that the sum of n over all test cases doesn' t exceed 250 .",
    "output": "For each test case output one integer \u2014 the minimal number of coins you should spend.",
    "note": "In the first test case you can remove snow from the cells ( 2, 1) and ( 2, 2) for 100 coins. Then you can give instructions All friends in the first collum should move to the previous cell. After this, your friend will be in the cell ( 2, 1) . All friends in the second row should move to the next cell. After this, your friend will be in the cell ( 2, 2) . In the second test case you can remove all snow from the columns 3 and 4 for 22 coins. Then you can give instructions All friends in the first row should move to the next cell. All friends in the first row should move to the next cell. All friends in the second row should move to the next cell. All friends in the second row should move to the next cell. All friends in the third column should move to the next cell. All friends in the third column should move to the next cell. All friends in the fourth column should move to the next cell. All friends in the fourth column should move to the next cell. It can be shown that none of the friends will become ill and that it is impossible to spend less coins.",
    "topics": [
      "constructive algorithms",
      "greedy",
      "math"
    ],
    "id": "1621D"
  },
  {
    "title": "Hidden Permutations",
    "url": "https://codeforces.com/problemset/problem/1621/C",
    "history": "This is an interactive problem. The jury has a permutation p of length n and wants you to guess it. For this, the jury created another permutation q of length n . Initially, q is an identity permutation ( q_ i = i for all i ) . You can ask queries to get q_ i for any i you want. After each query, the jury will change q in the following way: At first, the jury will create a new permutation q' of length n such that q' _ i = q_ p_ i for all i . Then the jury will replace permutation q with pemutation q' . You can make no more than 2n queries in order to quess p . InteractionInteraction in each test case starts after reading the single integer n ( 1 \u2264 n \u2264 10^ 4 ) \u2014 the length of permutations p and q . To get the value of q_ i , output the query in the format ? i ( 1 \u2264 i \u2264 n ) . After that you will receive the value of q_ i . You can make at most 2n queries. After the incorrect query you will receive 0 and you should exit immediately to get Wrong answer verdict. When you will be ready to determine p , output p in format ! p_ 1 p_ 2 . . . p_ n . After this you should go to the next test case or exit if it was the last test case. Printing the permutation is not counted as one of 2n queries. After printing a query do not forget to output end of line and flush the output. Otherwise, you will get Idleness limit exceeded. To do this, use: fflush( stdout) or cout. flush( ) in C+ + ; System. out. flush( ) in Java; flush( output) in Pascal; stdout. flush( ) in Python; see documentation for other languages. It is guaranteed that the sum of n over all test cases doesn' t exceed 10^ 4 . The interactor is not adaptive in this problem. Hacks: To hack, use the following format: The first line contains the single integer t \u2014 the number of test cases. The first line of each test case contains the single integer n \u2014 the length of the permutations p and q . The second line of each test case contains n integers p_ 1, p_ 2, . . . , p_ n \u2014 the hidden permutation for this test case.",
    "input": "The first line of input contains a single integer t ( 1 \u2264 t \u2264 1000 ) \u2014 the number of test cases.",
    "output": "",
    "note": "In the first test case the hidden permutation p = [ 4, 2, 1, 3] . Before the first query q = [ 1, 2, 3, 4] so answer for the query will be q_ 3 = 3 . Before the second query q = [ 4, 2, 1, 3] so answer for the query will be q_ 2 = 2 . Before the third query q = [ 3, 2, 4, 1] so answer for the query will be q_ 4 = 1 . In the second test case the hidden permutation p = [ 1, 3, 4, 2] . Empty strings are given only for better readability. There will be no empty lines in the testing system.",
    "topics": [
      "dfs and similar",
      "interactive",
      "math"
    ],
    "id": "1621C"
  },
  {
    "title": "BA-String",
    "url": "https://codeforces.com/problemset/problem/1620/C",
    "history": "You are given an integer k and a string s that consists only of characters ' a' ( a lowercase Latin letter) and ' * ' ( an asterisk) . Each asterisk should be replaced with several ( from 0 to k inclusive) lowercase Latin letters ' b' . Different asterisk can be replaced with different counts of letter ' b' . The result of the replacement is called a BA- string. Two strings a and b are different if they either have different lengths or there exists such a position i that a_ i = \u0338 b_ i . A string a is lexicographically smaller than a string b if and only if one of the following holds: a is a prefix of b , but a b ; in the first position where a and b differ, the string a has a letter that appears earlier in the alphabet than the corresponding letter in b . Now consider all different BA- strings and find the x - th lexicographically smallest of them.",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 2000 ) \u2014 the number of testcases. The first line of each testcase contains three integers n , k and x ( 1 \u2264 n \u2264 2000 ; 0 \u2264 k \u2264 2000 ; 1 \u2264 x \u2264 10^ 18 ) . n is the length of string s . The second line of each testcase is a string s . It consists of n characters, each of them is either ' a' ( a lowercase Latin letter) or ' * ' ( an asterisk) . The sum of n over all testcases doesn' t exceed 2000 . For each testcase x doesn' t exceed the total number of different BA- strings. String s contains at least one character ' a' .",
    "output": "For each testcase, print a single string, consisting only of characters ' b' and ' a' ( lowercase Latin letters) \u2014 the x - th lexicographically smallest BA- string.",
    "note": "In the first testcase of the example, BA- strings ordered lexicographically are: a ab abb abbb abbbb In the second testcase of the example, BA- strings ordered lexicographically are: aa aba abba Note that string \" aba\" is only counted once, even though there are two ways to replace asterisks with characters ' b' to get it.",
    "topics": [
      "brute force",
      "dp",
      "greedy",
      "implementation",
      "math"
    ],
    "id": "1620C"
  },
  {
    "title": "Triangles on a Rectangle",
    "url": "https://codeforces.com/problemset/problem/1620/B",
    "history": "A rectangle with its opposite corners in ( 0, 0) and ( w, h) and sides parallel to the axes is drawn on a plane. You are given a list of lattice points such that each point lies on a side of a rectangle but not in its corner. Also, there are at least two points on every side of a rectangle. Your task is to choose three points in such a way that: exactly two of them belong to the same side of a rectangle; the area of a triangle formed by them is maximum possible. Print the doubled area of this triangle. It can be shown that the doubled area of any triangle formed by lattice points is always an integer.",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of testcases. The first line of each testcase contains two integers w and h ( 3 \u2264 w, h \u2264 10^ 6 ) \u2014 the coordinates of the corner of a rectangle. The next two lines contain the description of the points on two horizontal sides. First, an integer k ( 2 \u2264 k \u2264 2 \u00b7 10^ 5 ) \u2014 the number of points. Then, k integers x_ 1 < x_ 2 < . . . < x_ k ( 0 < x_ i < w ) \u2014 the x coordinates of the points in the ascending order. The y coordinate for the first line is 0 and for the second line is h . The next two lines contain the description of the points on two vertical sides. First, an integer k ( 2 \u2264 k \u2264 2 \u00b7 10^ 5 ) \u2014 the number of points. Then, k integers y_ 1 < y_ 2 < . . . < y_ k ( 0 < y_ i < h ) \u2014 the y coordinates of the points in the ascending order. The x coordinate for the first line is 0 and for the second line is w . The total number of points on all sides in all testcases doesn' t exceed 2 \u00b7 10^ 5 .",
    "output": "For each testcase print a single integer \u2014 the doubled maximum area of a triangle formed by such three points that exactly two of them belong to the same side.",
    "note": "The points in the first testcase of the example: ( 1, 0) , ( 2, 0) ; ( 2, 8) , ( 3, 8) , ( 4, 8) ; ( 0, 1) , ( 0, 4) , ( 0, 6) ; ( 5, 4) , ( 5, 5) . The largest triangle is formed by points ( 0, 1) , ( 0, 6) and ( 5, 4) \u2014 its area is 25/ 2 . Thus, the doubled area is 25 . Two points that are on the same side are: ( 0, 1) and ( 0, 6) .",
    "topics": [
      "geometry",
      "greedy",
      "math"
    ],
    "id": "1620B"
  },
  {
    "title": "Let's Play the Hat?",
    "url": "https://codeforces.com/problemset/problem/1619/F",
    "history": "The Hat is a game of speedy explanation/ guessing words ( similar to Alias) . It' s fun. Try it! In this problem, we are talking about a variant of the game when the players are sitting at the table and everyone plays individually ( i. e. not teams, but individual gamers play) . n people gathered in a room with m tables ( n \u2265 2m ) . They want to play the Hat k times. Thus, k games will be played at each table. Each player will play in k games. To do this, they are distributed among the tables for each game. During each game, one player plays at exactly one table. A player can play at different tables. Players want to have the most \" fair\" schedule of games. For this reason, they are looking for a schedule ( table distribution for each game) such that: At any table in each game there are either \u230an/ m\u230b people or \u2308n/ m\u2309 people ( that is, either n/ m rounded down, or n/ m rounded up) . Different numbers of people can play different games at the same table. Let' s calculate for each player the value b_ i \u2014 the number of times the i - th player played at a table with \u2308n/ m\u2309 persons ( n/ m rounded up) . Any two values of b_ i must differ by no more than 1 . In other words, for any two players i and j , it must be true | b_ i - b_ j| \u2264 1 . For example, if n= 5 , m= 2 and k= 2 , then at the request of the first item either two players or three players should play at each table. Consider the following schedules: First game: 1, 2, 3 are played at the first table, and 4, 5 at the second one. The second game: at the first table they play 5, 1 , and at the second \u2014 2, 3, 4 . This schedule is not \" fair\" since b_ 2= 2 ( the second player played twice at a big table) and b_ 5= 0 ( the fifth player did not play at a big table) . First game: 1, 2, 3 are played at the first table, and 4, 5 at the second one. The second game: at the first table they play 4, 5, 2 , and at the second one \u2014 1, 3 . This schedule is \" fair\" : b= [ 1, 2, 1, 1, 1] ( any two values of b_ i differ by no more than 1 ) . Find any \" fair\" game schedule for n people if they play on the m tables of k games.",
    "input": "The first line of the input contains an integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases in the test. Each test case consists of one line that contains three integers n , m and k ( 2 \u2264 n \u2264 2\u00b710^ 5 , 1 \u2264 m \u2264\u230an/ 2\u230b , 1 \u2264 k \u2264 10^ 5 ) \u2014 the number of people, tables and games, respectively. It is guaranteed that the sum of nk ( n multiplied by k ) over all test cases does not exceed 2\u00b710^ 5 .",
    "output": "For each test case print a required schedule \u2014 a sequence of k blocks of m lines. Each block corresponds to one game, a line in a block corresponds to one table. In each line print the number of players at the table and the indices of the players ( numbers from 1 to n ) who should play at this table. If there are several required schedules, then output any of them. We can show that a valid solution always exists. You can output additional blank lines to separate responses to different sets of inputs.",
    "note": "",
    "topics": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "math"
    ],
    "id": "1619F"
  },
  {
    "title": "MEX and Increments",
    "url": "https://codeforces.com/problemset/problem/1619/E",
    "history": "Dmitry has an array of n non- negative integers a_ 1, a_ 2, . . . , a_ n . In one operation, Dmitry can choose any index j ( 1 \u2264 j \u2264 n ) and increase the value of the element a_ j by 1 . He can choose the same index j multiple times. For each i from 0 to n , determine whether Dmitry can make the MEX of the array equal to exactly i . If it is possible, then determine the minimum number of operations to do it. The MEX of the array is equal to the minimum non- negative integer that is not in the array. For example, the MEX of the array [ 3, 1, 0] is equal to 2 , and the array [ 3, 3, 1, 4] is equal to 0 .",
    "input": "The first line of input data contains a single integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases in the input. The descriptions of the test cases follow. The first line of the description of each test case contains a single integer n ( 1 \u2264 n \u2264 2 \u00b7 10^ 5 ) \u2014 the length of the array a . The second line of the description of each test case contains n integers a_ 1, a_ 2, . . . , a_ n ( 0 \u2264 a_ i \u2264 n ) \u2014 elements of the array a . It is guaranteed that the sum of the values n over all test cases in the test does not exceed 2\u00b710^ 5 .",
    "output": "For each test case, output n + 1 integer \u2014 i - th number is equal to the minimum number of operations for which you can make the array MEX equal to i ( 0 \u2264 i \u2264 n ) , or - 1 if this cannot be done.",
    "note": "In the first set of example inputs, n= 3 : to get MEX= 0 , it is enough to perform one increment: a_ 1 + + ; to get MEX= 1 , it is enough to perform one increment: a_ 2 + + ; MEX= 2 for a given array, so there is no need to perform increments; it is impossible to get MEX= 3 by performing increments.",
    "topics": [
      "constructive algorithms",
      "data structures",
      "dp",
      "greedy",
      "implementation",
      "math",
      "sortings"
    ],
    "id": "1619E"
  },
  {
    "title": "Squares and Cubes",
    "url": "https://codeforces.com/problemset/problem/1619/B",
    "history": "Polycarp likes squares and cubes of positive integers. Here is the beginning of the sequence of numbers he likes: 1 , 4 , 8 , 9 , . . . . For a given number n , count the number of integers from 1 to n that Polycarp likes. In other words, find the number of such x that x is a square of a positive integer number or a cube of a positive integer number ( or both a square and a cube simultaneously) .",
    "input": "The first line contains an integer t ( 1 \u2264 t \u2264 20 ) \u2014 the number of test cases. Then t lines contain the test cases, one per line. Each of the lines contains one integer n ( 1 \u2264 n \u2264 10^ 9 ) .",
    "output": "For each test case, print the answer you are looking for \u2014 the number of integers from 1 to n that Polycarp likes.",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": "1619B"
  },
  {
    "title": "Reverse",
    "url": "https://codeforces.com/problemset/problem/1618/F",
    "history": "You are given two positive integers x and y . You can perform the following operation with x : write it in its binary form without leading zeros, add 0 or 1 to the right of it, reverse the binary form and turn it into a decimal number which is assigned as the new value of x . For example: 34 can be turned into 81 via one operation: the binary form of 34 is 100010 , if you add 1 , reverse it and remove leading zeros, you will get 1010001 , which is the binary form of 81 . 34 can be turned into 17 via one operation: the binary form of 34 is 100010 , if you add 0 , reverse it and remove leading zeros, you will get 10001 , which is the binary form of 17 . 81 can be turned into 69 via one operation: the binary form of 81 is 1010001 , if you add 0 , reverse it and remove leading zeros, you will get 1000101 , which is the binary form of 69 . 34 can be turned into 69 via two operations: first you turn 34 into 81 and then 81 into 69 . Your task is to find out whether x can be turned into y after a certain number of operations ( possibly zero) .",
    "input": "The only line of the input contains two integers x and y ( 1 \u2264 x, y \u2264 10^ 18 ) .",
    "output": "Print YES if you can make x equal to y and NO if you can' t.",
    "note": "In the first example, you don' t even need to do anything. The fourth example is described in the statement.",
    "topics": [
      "bitmasks",
      "constructive algorithms",
      "dfs and similar",
      "implementation",
      "math",
      "strings"
    ],
    "id": "1618F"
  },
  {
    "title": "Singers' Tour",
    "url": "https://codeforces.com/problemset/problem/1618/E",
    "history": "n towns are arranged in a circle sequentially. The towns are numbered from 1 to n in clockwise order. In the i - th town, there lives a singer with a repertoire of a_ i minutes for each i \u2208 [ 1, n] . Each singer visited all n towns in clockwise order, starting with the town he lives in, and gave exactly one concert in each town. In addition, in each town, the i - th singer got inspired and came up with a song that lasts a_ i minutes. The song was added to his repertoire so that he could perform it in the rest of the cities. Hence, for the i - th singer, the concert in the i - th town will last a_ i minutes, in the ( i + 1) - th town the concert will last 2 \u00b7 a_ i minutes, . . . , in the ( ( i + k) n + 1) - th town the duration of the concert will be ( k + 2) \u00b7 a_ i , . . . , in the town ( ( i + n - 2) n + 1) \u2014 n \u00b7 a_ i minutes. You are given an array of b integer numbers, where b_ i is the total duration of concerts in the i - th town. Reconstruct any correct sequence of positive integers a or say that it is impossible.",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 10^ 3 ) \u2014 the number of test cases. Then the test cases follow. Each test case consists of two lines. The first line contains a single integer n ( 1 \u2264 n \u2264 4 \u00b7 10^ 4 ) \u2014 the number of cities. The second line contains n integers b_ 1, b_ 2, . . . , b_ n ( 1 \u2264 b_ i \u2264 10^ 9 ) \u2014 the total duration of concerts in i - th city. The sum of n over all test cases does not exceed 2 \u00b7 10^ 5 .",
    "output": "For each test case, print the answer as follows: If there is no suitable sequence a , print NO. Otherwise, on the first line print YES, on the next line print the sequence a_ 1, a_ 2, . . . , a_ n of n integers, where a_ i ( 1 \u2264 a_ i \u2264 10^ 9 ) is the initial duration of repertoire of the i - th singer. If there are multiple answers, print any of them.",
    "note": "Let' s consider the 1 - st test case of the example: the 1 - st singer in the 1 - st city will give a concert for 3 minutes, in the 2 - nd \u2014 for 6 minutes, in the 3 - rd \u2014 for 9 minutes; the 2 - nd singer in the 1 - st city will give a concert for 3 minutes, in the 2 - nd \u2014 for 1 minute, in the 3 - rd - for 2 minutes; the 3 - rd singer in the 1 - st city will give a concert for 6 minutes, in the 2 - nd \u2014 for 9 minutes, in the 3 - rd \u2014 for 3 minutes.",
    "topics": [
      "constructive algorithms",
      "math"
    ],
    "id": "1618E"
  },
  {
    "title": "Array and Operations",
    "url": "https://codeforces.com/problemset/problem/1618/D",
    "history": "You are given an array a of n integers, and another integer k such that 2k \u2264 n . You have to perform exactly k operations with this array. In one operation, you have to choose two elements of the array ( let them be a_ i and a_ j ; they can be equal or different, but their positions in the array must not be the same) , remove them from the array, and add \u230aa_ i/ a_ j\u230b to your score, where \u230ax/ y\u230b is the maximum integer not exceeding x/ y . Initially, your score is 0 . After you perform exactly k operations, you add all the remaining elements of the array to the score. Calculate the minimum possible score you can get.",
    "input": "The first line of the input contains one integer t ( 1 \u2264 t \u2264 500 ) \u2014 the number of test cases. Each test case consists of two lines. The first line contains two integers n and k ( 1 \u2264 n \u2264 100 ; 0 \u2264 k \u2264\u230an/ 2\u230b ) . The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 2 \u00b7 10^ 5 ) .",
    "output": "Print one integer \u2014 the minimum possible score you can get.",
    "note": "Let' s consider the example test. In the first test case, one way to obtain a score of 2 is the following one: choose a_ 7 = 1 and a_ 4 = 2 for the operation; the score becomes 0 + \u230a1/ 2\u230b = 0 , the array becomes [ 1, 1, 1, 1, 3] ; choose a_ 1 = 1 and a_ 5 = 3 for the operation; the score becomes 0 + \u230a1/ 3\u230b = 0 , the array becomes [ 1, 1, 1] ; choose a_ 1 = 1 and a_ 2 = 1 for the operation; the score becomes 0 + \u230a1/ 1\u230b = 1 , the array becomes [ 1] ; add the remaining element 1 to the score, so the resulting score is 2 . In the second test case, no matter which operations you choose, the resulting score is 16 . In the third test case, one way to obtain a score of 0 is the following one: choose a_ 1 = 1 and a_ 2 = 3 for the operation; the score becomes 0 + \u230a1/ 3\u230b = 0 , the array becomes [ 3, 7] ; choose a_ 1 = 3 and a_ 2 = 7 for the operation; the score becomes 0 + \u230a3/ 7\u230b = 0 , the array becomes empty; the array is empty, so the score doesn' t change anymore. In the fourth test case, no operations can be performed, so the score is the sum of the elements of the array: 4 + 2 = 6 .",
    "topics": [
      "dp",
      "greedy",
      "math"
    ],
    "id": "1618D"
  },
  {
    "title": "Paint the Array",
    "url": "https://codeforces.com/problemset/problem/1618/C",
    "history": "You are given an array a consisting of n positive integers. You have to choose a positive integer d and paint all elements into two colors. All elements which are divisible by d will be painted red, and all other elements will be painted blue. The coloring is called beautiful if there are no pairs of adjacent elements with the same color in the array. Your task is to find any value of d which yields a beautiful coloring, or report that it is impossible.",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 1000 ) \u2014 the number of testcases. The first line of each testcase contains one integer n ( 2 \u2264 n \u2264 100 ) \u2014 the number of elements of the array. The second line of each testcase contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 18 ) .",
    "output": "For each testcase print a single integer. If there is no such value of d that yields a beautiful coloring, print 0 . Otherwise, print any suitable value of d ( 1 \u2264 d \u2264 10^ 18 ) .",
    "note": "",
    "topics": [
      "math"
    ],
    "id": "1618C"
  },
  {
    "title": "Polycarp and Sums of Subsequences",
    "url": "https://codeforces.com/problemset/problem/1618/A",
    "history": "Polycarp had an array a of 3 positive integers. He wrote out the sums of all non- empty subsequences of this array, sorted them in non- decreasing order, and got an array b of 7 integers. For example, if a = { 1, 4, 3} , then Polycarp wrote out 1 , 4 , 3 , 1 + 4 = 5 , 1 + 3 = 4 , 4 + 3 = 7 , 1 + 4 + 3 = 8 . After sorting, he got an array b = { 1, 3, 4, 4, 5, 7, 8} . Unfortunately, Polycarp lost the array a . He only has the array b left. Help him to restore the array a .",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 5000 ) \u2014 the number of test cases. Each test case consists of one line which contains 7 integers b_ 1, b_ 2, . . . , b_ 7 ( 1 \u2264 b_ i \u2264 10^ 9 ; b_ i \u2264 b_ i+ 1 ) . Additional constraint on the input: there exists at least one array a which yields this array b as described in the statement.",
    "output": "For each test case, print 3 integers \u2014 a_ 1 , a_ 2 and a_ 3 . If there can be several answers, print any of them.",
    "note": "The subsequence of the array a is a sequence that can be obtained from a by removing zero or more of its elements. Two subsequences are considered different if index sets of elements included in them are different. That is, the values of the elements don' t matter in the comparison of subsequences. In particular, any array of length 3 has exactly 7 different non- empty subsequences.",
    "topics": [
      "math",
      "sortings"
    ],
    "id": "1618A"
  },
  {
    "title": "Christmas Chocolates",
    "url": "https://codeforces.com/problemset/problem/1617/E",
    "history": "Christmas is coming, Icy has just received a box of chocolates from her grandparents! The box contains n chocolates. The i - th chocolate has a non- negative integer type a_ i . Icy believes that good things come in pairs. Unfortunately, all types of chocolates are distinct ( all a_ i are distinct) . Icy wants to make at least one pair of chocolates the same type. As a result, she asks her grandparents to perform some chocolate exchanges. Before performing any chocolate exchanges, Icy chooses two chocolates with indices x and y ( 1 \u2264 x, y \u2264 n , x y ) . In a chocolate exchange, Icy' s grandparents choose a non- negative integer k , such that 2^ k \u2265 a_ x , and change the type of the chocolate x from a_ x to 2^ k - a_ x ( that is, perform a_ x : = 2^ k - a_ x ) . The chocolate exchanges will be stopped only when a_ x = a_ y . Note that other pairs of equal chocolate types do not stop the procedure. Icy' s grandparents are smart, so they would choose the sequence of chocolate exchanges that minimizes the number of exchanges needed. Since Icy likes causing trouble, she wants to maximize the minimum number of exchanges needed by choosing x and y appropriately. She wonders what is the optimal pair ( x, y) such that the minimum number of exchanges needed is maximized across all possible choices of ( x, y) . Since Icy is not good at math, she hopes that you can help her solve the problem.",
    "input": "The first line of the input contains a single integer n ( 2 \u2264 n \u2264 2 \u00b7 10^ 5 ) \u2014 the number of chocolates. The second line of the input contains n integers a_ 1, a_ 2, . . . , a_ n ( 0 \u2264 a_ i \u2264 10^ 9 ) . It is guaranteed that all a_ i are distinct.",
    "output": "Output three integers x , y , and m . x and y are indices of the optimal chocolates to perform exchanges on. Your output must satisfy 1 \u2264 x, y \u2264 n , x y . m is the number of exchanges needed to obtain a_ x = a_ y . We can show that m \u2264 10^ 9 for any pair of chocolates. If there are multiple solutions, output any.",
    "note": "In the first test case, the minimum number of exchanges needed to exchange a chocolate of type 6 to a chocolate of type 9 is 5 . The sequence of exchanges is as follows: 6 \u2192 2 \u2192 0 \u2192 1 \u2192 7 \u2192 9 . In the second test case, the minimum number of exchanges needed to exchange a chocolate of type 4 to a chocolate of type 8 is 2 . The sequence of exchanges is as follows: 4 \u2192 0 \u2192 8 .",
    "topics": [
      "dfs and similar",
      "dp",
      "games",
      "graphs",
      "implementation",
      "math",
      "number theory",
      "shortest paths",
      "trees"
    ],
    "id": "1617E"
  },
  {
    "title": "Too Many Impostors (hard version)",
    "url": "https://codeforces.com/problemset/problem/1617/D2",
    "history": "This is an interactive problem. The only difference between the easy and hard version is the limit on number of questions. There are n players labelled from 1 to n . It is guaranteed that n is a multiple of 3 . Among them, there are k impostors and n- k crewmates. The number of impostors, k , is not given to you. It is guaranteed that n/ 3 < k < 2n/ 3 . In each question, you can choose three distinct integers a , b , c ( 1 \u2264 a, b, c \u2264 n ) and ask: \" Among the players labelled a , b and c , are there more impostors or more crewmates? \" You will be given the integer 0 if there are more impostors than crewmates, and 1 otherwise. Find the number of impostors k and the indices of players that are impostors after asking at most n+ 6 questions. The jury is adaptive, which means the indices of impostors may not be fixed beforehand and can depend on your questions. It is guaranteed that there is at least one set of impostors which fulfills the constraints and the answers to your questions at any time. InteractionFor each test case, the interaction starts with reading n . Then you are allowed to make at most n+ 6 questions in the following way: \" ? a b c\" ( 1 \u2264 a, b, c \u2264 n , a , b and c are pairwise distinct) . After each one, you should read an integer r , which is equal to 0 if there are more impostors than crewmates among players labelled a , b and c , and equal to 1 otherwise. Answer - 1 instead of 0 or 1 means that you made an invalid query. Exit immediately after receiving - 1 and you will see Wrong answer verdict. Otherwise you can get an arbitrary verdict because your solution will continue to read from a closed stream. When you have found the indices of all impostors, print a single line \" ! \" ( without quotes) , followed by the number of impostors k , followed by k integers representing the indices of the impostors. Please note that you must print all this information on the same line. After printing the answer, your program must then continue to solve the remaining test cases, or exit if all test cases have been solved. After printing the queries and answers do not forget to output end of line and flush the output buffer. Otherwise, you will get the Idleness limit exceeded verdict. To do flush use: fflush( stdout) or cout. flush( ) in C+ + ; System. out. flush( ) in Java; flush( output) in Pascal; stdout. flush( ) in Python; Read documentation for other languages. HacksYou cannot make hacks in this problem.",
    "input": "Each test contains multiple test cases. The first line contains the number of test cases t ( 1 \u2264 t \u2264 100 ) . Description of the test cases follows. The first and only line of each test case contains a single integer n ( 6 \u2264 n < 10^ 4 , n is a multiple of 3 ) \u2014 the number of players. It is guaranteed that the sum of n over all test cases does not exceed 2 \u00b7 10^ 4 .",
    "output": "",
    "note": "Explanation for example interaction ( note that this example only exists to demonstrate the interaction procedure and does not provide any hint for the solution) : For the first test case: Question \" ? 1 2 3\" returns 0 , so there are more impostors than crewmates among players 1 , 2 and 3 . Question \" ? 3 4 5\" returns 1 , so there are more crewmates than impostors among players 3 , 4 and 5 . Outputting \" ! 3 4 1 2\" means that one has found all the impostors, by some miracle. There are k = 3 impostors. The players who are impostors are players 4 , 1 and 2 . For the second test case: Question \" ? 7 1 9\" returns 1 , so there are more crewmates than impostors among players 7 , 1 and 9 . Outputting \" ! 4 2 3 6 8\" means that one has found all the impostors, by some miracle. There are k = 4 impostors. The players who are impostors are players 2 , 3 , 6 and 8 .",
    "topics": [
      "constructive algorithms",
      "implementation",
      "interactive",
      "math"
    ],
    "id": "1617D2"
  },
  {
    "title": "Paprika and Permutation",
    "url": "https://codeforces.com/problemset/problem/1617/C",
    "history": "Paprika loves permutations. She has an array a_ 1, a_ 2, . . . , a_ n . She wants to make the array a permutation of integers 1 to n . In order to achieve this goal, she can perform operations on the array. In each operation she can choose two integers i ( 1 \u2264 i \u2264 n ) and x ( x > 0 ) , then perform a_ i : = a_ i x ( that is, replace a_ i by the remainder of a_ i divided by x ) . In different operations, the chosen i and x can be different. Determine the minimum number of operations needed to make the array a permutation of integers 1 to n . If it is impossible, output - 1 . A permutation is an array consisting of n distinct integers from 1 to n in arbitrary order. For example, [ 2, 3, 1, 5, 4] is a permutation, but [ 1, 2, 2] is not a permutation ( 2 appears twice in the array) and [ 1, 3, 4] is also not a permutation ( n= 3 but there is 4 in the array) .",
    "input": "Each test contains multiple test cases. The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. Description of the test cases follows. The first line of each test case contains an integer n ( 1 \u2264 n \u2264 10^ 5 ) . The second line of each test case contains n integers a_ 1, a_ 2, . . . , a_ n . ( 1 \u2264 a_ i \u2264 10^ 9 ) . It is guaranteed that the sum of n over all test cases does not exceed 2 \u00b7 10^ 5 .",
    "output": "For each test case, output the minimum number of operations needed to make the array a permutation of integers 1 to n , or - 1 if it is impossible.",
    "note": "For the first test, the only possible sequence of operations which minimizes the number of operations is: Choose i= 2 , x= 5 . Perform a_ 2 : = a_ 2 5 = 2 . For the second test, it is impossible to obtain a permutation of integers from 1 to n .",
    "topics": [
      "binary search",
      "greedy",
      "math",
      "sortings"
    ],
    "id": "1617C"
  },
  {
    "title": "GCD Problem",
    "url": "https://codeforces.com/problemset/problem/1617/B",
    "history": "Given a positive integer n . Find three distinct positive integers a , b , c such that a + b + c = n and gcd( a, b) = c , where gcd( x, y) denotes the greatest common divisor ( GCD) of integers x and y .",
    "input": "The input consists of multiple test cases. The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 5 ) \u2014 the number of test cases. Description of the test cases follows. The first and only line of each test case contains a single integer n ( 10 \u2264 n \u2264 10^ 9 ) .",
    "output": "For each test case, output three distinct positive integers a , b , c satisfying the requirements. If there are multiple solutions, you can print any. We can show that an answer always exists.",
    "note": "In the first test case, 6 + 9 + 3 = 18 and gcd( 6, 9) = 3 . In the second test case, 21 + 39 + 3 = 63 and gcd( 21, 39) = 3 . In the third test case, 29 + 43 + 1 = 73 and gcd( 29, 43) = 1 .",
    "topics": [
      "brute force",
      "constructive algorithms",
      "math",
      "number theory"
    ],
    "id": "1617B"
  },
  {
    "title": "Keep XOR Low",
    "url": "https://codeforces.com/problemset/problem/1616/H",
    "history": "You are given an array a_ 1, a_ 2, . . . , a_ n and an integer x . Find the number of non- empty subsets of indices of this array 1 \u2264 b_ 1 < b_ 2 < . . . < b_ k \u2264 n , such that for all pairs ( i, j) where 1 \u2264 i < j \u2264 k , the inequality a_ b_ i\u2295 a_ b_ j\u2264 x is held. Here, \u2295 denotes the bitwise XOR operation. As the answer may be very large, output it modulo 998 244 353 .",
    "input": "The first line of the input contains two integers n and x ( 1 \u2264 n \u2264 150 000 , 0 \u2264 x < 2^ 30 ) . Here, n is the size of the array. The next line contains n integers a_ 1, a_ 2, . . . , a_ n ( 0 \u2264 a_ i < 2^ 30 ) : the array itself.",
    "output": "Print one integer: the number of non- empty subsets such that the bitwise XOR of every pair of elements is at most x , modulo 998 244 353 .",
    "note": "",
    "topics": [
      "bitmasks",
      "combinatorics",
      "data structures",
      "divide and conquer",
      "dp",
      "math"
    ],
    "id": "1616H"
  },
  {
    "title": "Tricolor Triangles",
    "url": "https://codeforces.com/problemset/problem/1616/F",
    "history": "You are given a simple undirected graph with n vertices and m edges. Edge i is colored in the color c_ i , which is either 1 , 2 , or 3 , or left uncolored ( in this case, c_ i = - 1 ) . You need to color all of the uncolored edges in such a way that for any three pairwise adjacent vertices 1 \u2264 a < b < c \u2264 n , the colors of the edges a \u2194 b , b \u2194 c , and a \u2194 c are either pairwise different, or all equal. In case no such coloring exists, you need to determine that.",
    "input": "The first line of input contains one integer t ( 1 \u2264 t \u2264 10 ) : the number of test cases. The following lines contain the description of the test cases. In the first line you are given two integers n and m ( 3 \u2264 n \u2264 64 , 0 \u2264 m \u2264min( 256, n( n- 1) / 2) ) : the number of vertices and edges in the graph. Each of the next m lines contains three integers a_ i , b_ i , and c_ i ( 1 \u2264 a_ i, b_ i \u2264 n , a_ i b_ i , c_ i is either - 1 , 1 , 2 , or 3 ) , denoting an edge between a_ i and b_ i with color c_ i . It is guaranteed that no two edges share the same endpoints.",
    "output": "For each test case, print m integers d_ 1, d_ 2, . . . , d_ m , where d_ i is the color of the i - th edge in your final coloring. If there is no valid way to finish the coloring, print - 1 .",
    "note": "",
    "topics": [
      "brute force",
      "graphs",
      "math",
      "matrices"
    ],
    "id": "1616F"
  },
  {
    "title": "Keep the Average High",
    "url": "https://codeforces.com/problemset/problem/1616/D",
    "history": "You are given an array of integers a_ 1, a_ 2, . . . , a_ n and an integer x . You need to select the maximum number of elements in the array, such that for every subsegment a_ l, a_ l + 1, . . . , a_ r containing strictly more than one element ( l < r) , either: At least one element on this subsegment is not selected, or a_ l + a_ l+ 1 + . . . + a_ r \u2265 x \u00b7 ( r - l + 1) .",
    "input": "The first line of input contains one integer t ( 1 \u2264 t \u2264 10 ) : the number of test cases. The descriptions of t test cases follow, three lines per test case. In the first line you are given one integer n ( 1 \u2264 n \u2264 50 000 ) : the number of integers in the array. The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( - 100 000 \u2264 a_ i \u2264 100 000 ) . The third line contains one integer x ( - 100 000 \u2264 x \u2264 100 000 ) .",
    "output": "For each test case, print one integer: the maximum number of elements that you can select.",
    "note": "In the first example, one valid way to select the elements is [ 1, 2, 3, 4, 5] . All subsegments satisfy at least one of the criteria. For example, for the subsegment l = 1 , r = 2 we have that the element 2 is not selected, satisfying the first criterion. For the subsegment l = 3 , r = 5 we have 3 + 4 + 5 = 12 \u2265 2 \u00b7 3 , satisfying the second criterion. We can' t select all elements, because in this case for l = 1 , r = 2 all elements are selected and we have a_ 1 + a_ 2 = 3 < 2 \u00b7 2 . Thus, the maximum number of selected elements is 4 . In the second example, one valid solution is [ 2, 4, 2, 4, 2, 4, 2, 4, 2, 4] . In the third example, one valid solution is [ - 10, - 5, - 10] . In the fourth example, one valid solution is [ 9, 9, - 3] .",
    "topics": [
      "dp",
      "greedy",
      "math"
    ],
    "id": "1616D"
  },
  {
    "title": "Representative Edges",
    "url": "https://codeforces.com/problemset/problem/1616/C",
    "history": "An array a_ 1, a_ 2, . . . , a_ n is good if and only if for every subsegment 1 \u2264 l \u2264 r \u2264 n , the following holds: a_ l + a_ l + 1 + . . . + a_ r = 1/ 2( a_ l + a_ r) \u00b7 ( r - l + 1) . You are given an array of integers a_ 1, a_ 2, . . . , a_ n . In one operation, you can replace any one element of this array with any real number. Find the minimum number of operations you need to make this array good.",
    "input": "The first line of input contains one integer t ( 1 \u2264 t \u2264 100 ) : the number of test cases. Each of the next t lines contains the description of a test case. In the first line you are given one integer n ( 1 \u2264 n \u2264 70 ) : the number of integers in the array. The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( - 100 \u2264 a_ i \u2264 100 ) : the initial array.",
    "output": "For each test case, print one integer: the minimum number of elements that you need to replace to make the given array good.",
    "note": "In the first test case, the array is good already. In the second test case, one of the possible good arrays is [ 1, 1, 1, 1] ( replaced elements are underlined) . In the third test case, the array is good already. In the fourth test case, one of the possible good arrays is [ - 2. 5, - 2, - 1. 5, - 1, - 0. 5, 0] .",
    "topics": [
      "brute force",
      "geometry",
      "implementation",
      "math"
    ],
    "id": "1616C"
  },
  {
    "title": "LEGOndary Grandmaster",
    "url": "https://codeforces.com/problemset/problem/1615/F",
    "history": "After getting bored by playing with crayons, you decided to switch to Legos! Today, you' re working with a long strip, with height 1 and length n , some positions of which are occupied by 1 by 1 Lego pieces. In one second, you can either remove two adjacent Lego pieces from the strip ( if both are present) , or add two Lego pieces to adjacent positions ( if both are absent) . You can only add or remove Lego' s at two adjacent positions at the same time, as otherwise your chubby fingers run into precision issues. You want to know exactly how much time you' ll spend playing with Legos. You value efficiency, so given some starting state and some ending state, you' ll always spend the least number of seconds to transform the starting state into the ending state. If it' s impossible to transform the starting state into the ending state, you just skip it ( so you spend 0 seconds) . The issue is that, for some positions, you don' t remember whether there were Legos there or not ( in either the starting state, the ending state, or both) . Over all pairs of ( starting state, ending state) that are consistent with your memory, find the total amount of time it will take to transform the starting state to the ending state. Print this value modulo 1 000 000 007 ( 10^ 9 + 7 ) .",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 1000 ) \u2014 the number of test cases. Then t cases follow. The first line of each test case contains one integer n ( 2 \u2264 n \u2264 2000 ) \u2014 the size of the Lego strip. The second line of each test case contains a string s of length n , consisting of the characters 0, 1, and ? \u2014 your memory of the starting state: 1 represents a position that definitely has a Lego piece, 0 represents a position that definitely does not have a Lego piece, and ? represents a position that you don' t remember. The third line of each test case contains a string t of length n , consisting of the characters 0, 1, and ? \u2014 your memory of the ending state. It follows a similar format to the starting state. It' s guaranteed that the sum of n over all test cases doesn' t exceed 2000 .",
    "output": "For each test case, output a single integer \u2014 the answer to the problem modulo 1 000 000 007 ( 10^ 9 + 7 ) .",
    "note": "For the first test case, 00 is the only possible starting state, and 11 is the only possible ending state. It takes exactly one operation to change 00 to 11 . For the second test case, some of the possible starting and ending state pairs are: ( 000, 011) \u2014 takes 1 operation. ( 001, 100) \u2014 takes 2 operations. ( 010, 000) \u2014 takes 0 operations, as it' s impossible to achieve the ending state.",
    "topics": [
      "combinatorics",
      "dp",
      "math"
    ],
    "id": "1615F"
  },
  {
    "title": "Purple Crayon",
    "url": "https://codeforces.com/problemset/problem/1615/E",
    "history": "Two players, Red and Blue, are at it again, and this time they' re playing with crayons! The mischievous duo is now vandalizing a rooted tree, by coloring the nodes while playing their favorite game. The game works as follows: there is a tree of size n , rooted at node 1 , where each node is initially white. Red and Blue get one turn each. Red goes first. In Red' s turn, he can do the following operation any number of times: Pick any subtree of the rooted tree, and color every node in the subtree red. However, to make the game fair, Red is only allowed to color k nodes of the tree. In other words, after Red' s turn, at most k of the nodes can be colored red. Then, it' s Blue' s turn. Blue can do the following operation any number of times: Pick any subtree of the rooted tree, and color every node in the subtree blue. However, he' s not allowed to choose a subtree that contains a node already colored red, as that would make the node purple and no one likes purple crayon. Note: there' s no restriction on the number of nodes Blue can color, as long as he doesn' t color a node that Red has already colored. After the two turns, the score of the game is determined as follows: let w be the number of white nodes, r be the number of red nodes, and b be the number of blue nodes. The score of the game is w \u00b7 ( r - b) . Red wants to maximize this score, and Blue wants to minimize it. If both players play optimally, what will the final score of the game be?",
    "input": "The first line contains two integers n and k ( 2 \u2264 n \u2264 2 \u00b7 10^ 5 ; 1 \u2264 k \u2264 n ) \u2014 the number of vertices in the tree and the maximum number of red nodes. Next n - 1 lines contains description of edges. The i - th line contains two space separated integers u_ i and v_ i ( 1 \u2264 u_ i, v_ i \u2264 n ; u_ i = \u0338 v_ i ) \u2014 the i - th edge of the tree. It' s guaranteed that given edges form a tree.",
    "output": "Print one integer \u2014 the resulting score if both Red and Blue play optimally.",
    "note": "In the first test case, the optimal strategy is as follows: Red chooses to color the subtrees of nodes 2 and 3 . Blue chooses to color the subtree of node 4 . At the end of this process, nodes 2 and 3 are red, node 4 is blue, and node 1 is white. The score of the game is 1 \u00b7 ( 2 - 1) = 1 . In the second test case, the optimal strategy is as follows: Red chooses to color the subtree of node 4 . This colors both nodes 4 and 5 . Blue does not have any options, so nothing is colored blue. At the end of this process, nodes 4 and 5 are red, and nodes 1 , 2 and 3 are white. The score of the game is 3 \u00b7 ( 2 - 0) = 6 . For the third test case: The score of the game is 4 \u00b7 ( 2 - 1) = 4 .",
    "topics": [
      "data structures",
      "dfs and similar",
      "games",
      "graphs",
      "greedy",
      "math",
      "sortings",
      "trees"
    ],
    "id": "1615E"
  },
  {
    "title": "Menorah",
    "url": "https://codeforces.com/problemset/problem/1615/C",
    "history": "There are n candles on a Hanukkah menorah, and some of its candles are initially lit. We can describe which candles are lit with a binary string s , where the i - th candle is lit if and only if s_ i= 1 . Initially, the candle lights are described by a string a . In an operation, you select a candle that is currently lit. By doing so, the candle you selected will remain lit, and every other candle will change ( if it was lit, it will become unlit and if it was unlit, it will become lit) . You would like to make the candles look the same as string b . Your task is to determine if it is possible, and if it is, find the minimum number of operations required.",
    "input": "The first line contains an integer t ( 1\u2264 t\u2264 10^ 4 ) \u2014 the number of test cases. Then t cases follow. The first line of each test case contains a single integer n ( 1\u2264 n\u2264 10^ 5 ) \u2014 the number of candles. The second line contains a string a of length n consisting of symbols 0 and 1 \u2014 the initial pattern of lights. The third line contains a string b of length n consisting of symbols 0 and 1 \u2014 the desired pattern of lights. It is guaranteed that the sum of n does not exceed 10^ 5 .",
    "output": "For each test case, output the minimum number of operations required to transform a to b , or - 1 if it' s impossible.",
    "note": "In the first test case, the two strings are already equal, so we don' t have to perform any operations. In the second test case, we can perform a single operation selecting the second candle to transform 01 into 11 . In the third test case, it' s impossible to perform any operations because there are no lit candles to select. In the fourth test case, we can perform the following operations to transform a into b : Select the 7 - th candle: 100010111\u2192 011101 100 . Select the 2 - nd candle: 0 11101100\u2192 1 10010011 . Select the 1 - st candle: 110010011\u2192101101100 . In the fifth test case, we can perform the following operations to transform a into b : Select the 6 - th candle: 001011011\u2192 110101100 Select the 2 - nd candle: 110101100\u2192 011010011 Select the 8 - th candle: 011010011\u2192 100101110 Select the 7 - th candle: 100101110\u2192 011010101",
    "topics": [
      "brute force",
      "graphs",
      "greedy",
      "math"
    ],
    "id": "1615C"
  },
  {
    "title": "And It's Non-Zero",
    "url": "https://codeforces.com/problemset/problem/1615/B",
    "history": "You are given an array consisting of all integers from [ l, r] inclusive. For example, if l = 2 and r = 5 , the array would be [ 2, 3, 4, 5] . What' s the minimum number of elements you can delete to make the bitwise AND of the array non- zero? A bitwise AND is a binary operation that takes two equal- length binary representations and performs the AND operation on each pair of the corresponding bits.",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. Then t cases follow. The first line of each test case contains two integers l and r ( 1 \u2264 l \u2264 r \u2264 2 \u00b7 10^ 5 ) \u2014 the description of the array.",
    "output": "For each test case, output a single integer \u2014 the answer to the problem.",
    "note": "In the first test case, the array is [ 1, 2] . Currently, the bitwise AND is 0 , as 1 & 2 = 0 . However, after deleting 1 ( or 2 ) , the array becomes [ 2] ( or [ 1] ) , and the bitwise AND becomes 2 ( or 1 ) . This can be proven to be the optimal, so the answer is 1 . In the second test case, the array is [ 2, 3, 4, 5, 6, 7, 8] . Currently, the bitwise AND is 0 . However, after deleting 4 , 5 , and 8 , the array becomes [ 2, 3, 6, 7] , and the bitwise AND becomes 2 . This can be proven to be the optimal, so the answer is 3 . Note that there may be other ways to delete 3 elements.",
    "topics": [
      "bitmasks",
      "greedy",
      "math"
    ],
    "id": "1615B"
  },
  {
    "title": "Closing The Gap",
    "url": "https://codeforces.com/problemset/problem/1615/A",
    "history": "There are n block towers in a row, where tower i has a height of a_ i . You' re part of a building crew, and you want to make the buildings look as nice as possible. In a single day, you can perform the following operation: Choose two indices i and j ( 1 \u2264 i, j \u2264 n ; i = \u0338 j ) , and move a block from tower i to tower j . This essentially decreases a_ i by 1 and increases a_ j by 1 . You think the ugliness of the buildings is the height difference between the tallest and shortest buildings. Formally, the ugliness is defined as max( a) - min( a) . What' s the minimum possible ugliness you can achieve, after any number of days?",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 1000 ) \u2014 the number of test cases. Then t cases follow. The first line of each test case contains one integer n ( 2 \u2264 n \u2264 100 ) \u2014 the number of buildings. The second line of each test case contains n space separated integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 7 ) \u2014 the heights of the buildings.",
    "output": "For each test case, output a single integer \u2014 the minimum possible ugliness of the buildings.",
    "note": "In the first test case, the ugliness is already 0 . In the second test case, you should do one operation, with i = 1 and j = 3 . The new heights will now be [ 2, 2, 2, 2] , with an ugliness of 0 . In the third test case, you may do three operations: with i = 3 and j = 1 . The new array will now be [ 2, 2, 2, 1, 5] , with i = 5 and j = 4 . The new array will now be [ 2, 2, 2, 2, 4] , with i = 5 and j = 3 . The new array will now be [ 2, 2, 3, 2, 3] . The resulting ugliness is 1 . It can be proven that this is the minimum possible ugliness for this test.",
    "topics": [
      "greedy",
      "math"
    ],
    "id": "1615A"
  },
  {
    "title": "Divan and bitwise operations",
    "url": "https://codeforces.com/problemset/problem/1614/C",
    "history": "Once Divan analyzed a sequence a_ 1, a_ 2, . . . , a_ n consisting of n non- negative integers as follows. He considered each non- empty subsequence of the sequence a , computed the bitwise XOR of its elements and added up all the XORs, obtaining the coziness of the sequence a . A sequence c is a subsequence of a sequence d if c can be obtained from d by deletion of several ( possibly, zero or all) elements. For example, [ 1, 2, 3, 4] , [ 2, 4] , and [ 2] are subsequences of [ 1, 2, 3, 4] , but [ 4, 3] and [ 0] are not. Divan was very proud of his analysis, but now he lost the sequence a , and also the coziness value! However, Divan remembers the value of bitwise OR on m contiguous subsegments of the sequence a . It turns out that each element of the original sequence is contained in at least one of these m segments. Divan asks you to help find the coziness of the sequence a using the information he remembers. If several coziness values are possible, print any. As the result can be very large, print the value modulo 10^ 9 + 7 .",
    "input": "The first line contains one integer number t ( 1 \u2264 t \u2264 10^ 3 ) \u2014 the number of test cases. The first line of each test case contains two integer numbers n and m ( 1 \u2264 n, m \u2264 2 \u00b7 10^ 5 ) \u2014 the length of the sequence and the number of contiguous segments whose bitwise OR values Divan remembers, respectively. The following m lines describe the segments, one per line. Each segment is described with three integers l , r , and x ( 1 \u2264 l \u2264 r \u2264 n , 0 \u2264 x \u2264 2^ 30 - 1 ) \u2014 the first and last elements of the segment and the bitwise OR of a_ l, a_ l + 1, . . . , a_ r , respectively. It is guaranteed that each element of the sequence is contained in at least one of the segments. It is guaranteed that there exists a sequence that satisfies all constraints. It is guaranteed that the sum of n and the sum of m over all test cases do not exceed 2 \u00b7 10^ 5 .",
    "output": "For each test case print the coziness any suitable sequence a modulo 10^ 9 + 7 .",
    "note": "In first example, one of the sequences that fits the constraints is [ 0, 2] . Consider all its non- empty subsequences: [ 0] : the bitwise XOR of this subsequence is 0 ; [ 2] : the bitwise XOR of this subsequence is 2 ; [ 0, 2] : the bitwise XOR of this subsequence is 2 . The sum of all results is 4 , so it is the answer. In second example, one of the sequences that fits the constraints is [ 0, 5, 5] . In third example, one of the sequences that fits the constraints is [ 5, 6, 7, 0, 2] .",
    "topics": [
      "bitmasks",
      "combinatorics",
      "constructive algorithms",
      "dp",
      "math"
    ],
    "id": "1614C"
  },
  {
    "title": "MEX Sequences",
    "url": "https://codeforces.com/problemset/problem/1613/D",
    "history": "Let' s call a sequence of integers x_ 1, x_ 2, . . . , x_ k MEX- correct if for all i ( 1 \u2264 i \u2264 k ) | x_ i - MEX( x_ 1, x_ 2, . . . , x_ i) | \u2264 1 holds. Where MEX( x_ 1, . . . , x_ k) is the minimum non- negative integer that doesn' t belong to the set x_ 1, . . . , x_ k . For example, MEX( 1, 0, 1, 3) = 2 and MEX( 2, 1, 5) = 0 . You are given an array a consisting of n non- negative integers. Calculate the number of non- empty MEX- correct subsequences of a given array. The number of subsequences can be very large, so print it modulo 998244353 . Note: a subsequence of an array a is a sequence [ a_ i_ 1, a_ i_ 2, . . . , a_ i_ m] meeting the constraints 1 \u2264 i_ 1 < i_ 2 < . . . < i_ m \u2264 n . If two different ways to choose the sequence of indices [ i_ 1, i_ 2, . . . , i_ m] yield the same subsequence, the resulting subsequence should be counted twice ( i. e. two subsequences are different if their sequences of indices [ i_ 1, i_ 2, . . . , i_ m] are not the same) .",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 5 ) \u2014 the number of test cases. The first line of each test case contains a single integer n ( 1 \u2264 n \u2264 5 \u00b7 10^ 5 ) . The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 0 \u2264 a_ i \u2264 n ) . The sum of n over all test cases doesn' t exceed 5 \u00b7 10^ 5 .",
    "output": "For each test case, print a single integer \u2014 the number of non- empty MEX- correct subsequences of a given array, taken modulo 998244353 .",
    "note": "In the first example, the valid subsequences are [ 0] , [ 1] , [ 0, 1] and [ 0, 2] . In the second example, the valid subsequences are [ 0] and [ 1] . In the third example, any non- empty subsequence is valid.",
    "topics": [
      "dp",
      "math"
    ],
    "id": "1613D"
  },
  {
    "title": "Long Comparison",
    "url": "https://codeforces.com/problemset/problem/1613/A",
    "history": "Monocarp wrote down two numbers on a whiteboard. Both numbers follow a specific format: a positive integer x with p zeros appended to its end. Now Monocarp asks you to compare these two numbers. Can you help him?",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of testcases. The first line of each testcase contains two integers x_ 1 and p_ 1 ( 1 \u2264 x_ 1 \u2264 10^ 6; 0 \u2264 p_ 1 \u2264 10^ 6 ) \u2014 the description of the first number. The second line of each testcase contains two integers x_ 2 and p_ 2 ( 1 \u2264 x_ 2 \u2264 10^ 6; 0 \u2264 p_ 2 \u2264 10^ 6 ) \u2014 the description of the second number.",
    "output": "For each testcase print the result of the comparison of the given two numbers. If the first number is smaller than the second one, print ' < ' . If the first number is greater than the second one, print ' > ' . If they are equal, print ' = ' .",
    "note": "The comparisons in the example are: 20 > 19 , 1000 = 1000 , 1999 < 2000 , 1 = 1 , 99 < 100 .",
    "topics": [
      "implementation",
      "math"
    ],
    "id": "1613A"
  },
  {
    "title": "X-Magic Pair",
    "url": "https://codeforces.com/problemset/problem/1612/D",
    "history": "You are given a pair of integers ( a, b) and an integer x . You can change the pair in two different ways: set ( assign) a : = | a - b| ; set ( assign) b : = | a - b| , where | a - b| is the absolute difference between a and b . The pair ( a, b) is called x - magic if x is obtainable either as a or as b using only the given operations ( i. e. the pair ( a, b) is x - magic if a = x or b = x after some number of operations applied) . You can apply the operations any number of times ( even zero) . Your task is to find out if the pair ( a, b) is x - magic or not. You have to answer t independent test cases.",
    "input": "The first line of the input contains one integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. The next t lines describe test cases. The only line of the test case contains three integers a , b and x ( 1 \u2264 a, b, x \u2264 10^ 18 ) .",
    "output": "For the i - th test case, print YES if the corresponding pair ( a, b) is x - magic and NO otherwise.",
    "note": "",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "1612D"
  },
  {
    "title": "Chat Ban",
    "url": "https://codeforces.com/problemset/problem/1612/C",
    "history": "You are a usual chat user on the most famous streaming platform. Of course, there are some moments when you just want to chill and spam something. More precisely, you want to spam the emote triangle of size k . It consists of 2k- 1 messages. The first message consists of one emote, the second one \u2014 of two emotes, . . . , the k - th one \u2014 of k emotes, the k+ 1 - th one \u2014 of k- 1 emotes, . . . , and the last one \u2014 of one emote. For example, the emote triangle for k= 3 consists of 5 messages: Of course, most of the channels have auto moderation. Auto moderator of the current chat will ban you right after you spam at least x emotes in succession ( you can assume you are the only user in the chat) . Now you are interested \u2014 how many messages will you write before getting banned? Or maybe you will not get banned at all ( i. e. will write all 2k- 1 messages and complete your emote triangle successfully) ? Note that if you get banned as a result of writing a message, this message is also counted. You have to answer t independent test cases.",
    "input": "The first line of the input contains one integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. The next t lines describe test cases. The only line of the test case contains integers k and x ( 1 \u2264 k \u2264 10^ 9; 1 \u2264 x \u2264 10^ 18 ) .",
    "output": "For each test case, print the number of messages you will write before getting banned for the corresponding values k and x .",
    "note": "Let' s analyze the test cases of the example. In the first test case, you write three messages containing 1 , 2 and 3 emotes respectively, and since 1 + 2 + 3 \u2265 6 , you get banned after that. In the second test case, you write four messages containing 1 , 2 , 3 and 4 emotes respectively, and since 1 + 2 + 3 + 4 \u2265 7 , you get banned after that. In the third test case, you write one message containing exactly 1 emote. It doesn' t get you banned, since 1 < 2 , but you have already finished posting your emote triangle. So you wrote one message successfully. In the fourth test case, you write four messages containing 1 , 2 , 3 and 2 emotes respectively, and since 1 + 2 + 3 + 2 \u2265 7 , you get banned after that. In the fifth test case, you write three messages containing 1 , 2 and 1 emote respectively. It doesn' t get you banned, since 1 + 2 + 1 < 5 , but you have already finished posting your emote triangle. So you wrote three messages successfully. In the sixth test case, since x = 1 , you get banned as soon as you send your first message. The seventh test case is too large to analyze, so we' ll skip it.",
    "topics": [
      "binary search",
      "math"
    ],
    "id": "1612C"
  },
  {
    "title": "Team Composition: Programmers and Mathematicians",
    "url": "https://codeforces.com/problemset/problem/1611/B",
    "history": "The All- Berland Team Programming Contest will take place very soon. This year, teams of four are allowed to participate. There are a programmers and b mathematicians at Berland State University. How many maximum teams can be made if: each team must consist of exactly 4 students, teams of 4 mathematicians or 4 programmers are unlikely to perform well, so the decision was made not to compose such teams. Thus, each team must have at least one programmer and at least one mathematician. Print the required maximum number of teams. Each person can be a member of no more than one team.",
    "input": "The first line contains an integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014the number of test cases. This is followed by descriptions of t sets, one per line. Each set is given by two integers a and b ( 0 \u2264 a, b \u2264 10^ 9 ) .",
    "output": "Print t lines. Each line must contain the answer to the corresponding set of input data \u2014 the required maximum number of teams.",
    "note": "In the first test case of the example, two teams can be composed. One way to compose two teams is to compose two teams of 2 programmers and 2 mathematicians. In the second test case of the example, only one team can be composed: 3 programmers and 1 mathematician in the team.",
    "topics": [
      "binary search",
      "constructive algorithms",
      "math"
    ],
    "id": "1611B"
  },
  {
    "title": "Make Even",
    "url": "https://codeforces.com/problemset/problem/1611/A",
    "history": "Polycarp has an integer n that doesn' t contain the digit 0. He can do the following operation with his number several ( possibly zero) times: Reverse the prefix of length l ( in other words, l leftmost digits) of n . So, the leftmost digit is swapped with the l - th digit from the left, the second digit from the left swapped with ( l- 1 ) - th left, etc. For example, if n= 123456789 and l= 5 , then the new value of n will be 543216789 . Note that for different operations, the values of l can be different. The number l can be equal to the length of the number n \u2014 in this case, the whole number n is reversed. Polycarp loves even numbers. Therefore, he wants to make his number even. At the same time, Polycarp is very impatient. He wants to do as few operations as possible. Help Polycarp. Determine the minimum number of operations he needs to perform with the number n to make it even or determine that this is impossible. You need to answer t independent test cases.",
    "input": "The first line contains the number t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. Each of the following t lines contains one integer n ( 1 \u2264 n < 10^ 9 ) . It is guaranteed that the given number doesn' t contain the digit 0.",
    "output": "Print t lines. On each line print one integer \u2014 the answer to the corresponding test case. If it is impossible to make an even number, print - 1.",
    "note": "In the first test case, n= 3876 , which is already an even number. Polycarp doesn' t need to do anything, so the answer is 0 . In the second test case, n= 387 . Polycarp needs to do 2 operations: Select l= 2 and reverse the prefix 387 . The number n becomes 837 . This number is odd. Select l= 3 and reverse the prefix 837 . The number n becomes 738 . This number is even. It can be shown that 2 is the minimum possible number of operations that Polycarp needs to do with his number to make it even. In the third test case, n= 4489 . Polycarp can reverse the whole number ( choose a prefix of length l= 4 ) . It will become 9844 and this is an even number. In the fourth test case, n= 3 . No matter how hard Polycarp tried, he would not be able to make an even number.",
    "topics": [
      "constructive algorithms",
      "math"
    ],
    "id": "1611A"
  },
  {
    "title": "AmShZ and G.O.A.T.",
    "url": "https://codeforces.com/problemset/problem/1610/E",
    "history": "Let' s call an array of k integers c_ 1, c_ 2, . . . , c_ k terrible, if the following condition holds: Let AVG be the c_ 1 + c_ 2 + . . . + c_ k/ k ( the average of all the elements of the array, it doesn' t have to be integer) . Then the number of elements of the array which are bigger than AVG should be strictly larger than the number of elements of the array which are smaller than AVG . Note that elements equal to AVG don' t count. For example c = { 1, 4, 4, 5, 6} is terrible because AVG = 4. 0 and 5 - th and 4 - th elements are greater than AVG and 1 - st element is smaller than AVG . Let' s call an array of m integers b_ 1, b_ 2, . . . , b_ m bad, if at least one of its non- empty subsequences is terrible, and good otherwise. You are given an array of n integers a_ 1, a_ 2, . . . , a_ n . Find the minimum number of elements that you have to delete from it to obtain a good array. An array is a subsequence of another array if it can be obtained from it by deletion of several ( possibly, zero or all) elements.",
    "input": "The first line contains an integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. The description of test cases follows. The first line of each test case contains a single integer n ( 2 \u2264 n \u2264 2 \u00b7 10^ 5 ) \u2014 the size of a . The second line of each testcase contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 9 ) \u2014 elements of array a . In each testcase for any 1 \u2264 i n it is guaranteed that a_ i \u2264 a_ i+ 1 . It is guaranteed that the sum of n over all testcases doesn' t exceed 2 \u00b7 10^ 5 .",
    "output": "For each testcase, print the minimum number of elements that you have to delete from it to obtain a good array.",
    "note": "In the first sample, the array a is already good. In the second sample, it' s enough to delete 1 , obtaining array [ 4, 4, 5, 6] , which is good.",
    "topics": [
      "binary search",
      "brute force",
      "greedy",
      "implementation",
      "math"
    ],
    "id": "1610E"
  },
  {
    "title": "Not Quite Lee",
    "url": "https://codeforces.com/problemset/problem/1610/D",
    "history": "Lee couldn' t sleep lately, because he had nightmares. In one of his nightmares ( which was about an unbalanced global round) , he decided to fight back and propose a problem below ( which you should solve) to balance the round, hopefully setting him free from the nightmares. A non- empty array b_ 1, b_ 2, . . . , b_ m is called good, if there exist m integer sequences which satisfy the following properties: The i - th sequence consists of b_ i consecutive integers ( for example if b_ i = 3 then the i - th sequence can be ( - 1, 0, 1) or ( - 5, - 4, - 3) but not ( 0, - 1, 1) or ( 1, 2, 3, 4) ) . Assuming the sum of integers in the i - th sequence is sum_ i , we want sum_ 1 + sum_ 2 + . . . + sum_ m to be equal to 0 . You are given an array a_ 1, a_ 2, . . . , a_ n . It has 2^ n - 1 nonempty subsequences. Find how many of them are good. As this number can be very large, output it modulo 10^ 9 + 7 . An array c is a subsequence of an array d if c can be obtained from d by deletion of several ( possibly, zero or all) elements.",
    "input": "The first line contains a single integer n ( 2 \u2264 n \u2264 2 \u00b7 10^ 5 ) \u2014 the size of array a . The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 9 ) \u2014 elements of the array.",
    "output": "Print a single integer \u2014 the number of nonempty good subsequences of a , modulo 10^ 9 + 7 .",
    "note": "For the first test, two examples of good subsequences are [ 2, 7] and [ 2, 2, 4, 7] : For b = [ 2, 7] we can use ( - 3, - 4) as the first sequence and ( - 2, - 1, . . . , 4) as the second. Note that subsequence [ 2, 7] appears twice in [ 2, 2, 4, 7] , so we have to count it twice. Green circles denote ( - 3, - 4) and orange squares denote ( - 2, - 1, . . . , 4) . For b = [ 2, 2, 4, 7] the following sequences would satisfy the properties: ( - 1, 0) , ( - 3, - 2) , ( 0, 1, 2, 3) and ( - 3, - 2, . . . , 3)",
    "topics": [
      "combinatorics",
      "dp",
      "math",
      "number theory"
    ],
    "id": "1610D"
  },
  {
    "title": "Anti Light's Cell Guessing",
    "url": "https://codeforces.com/problemset/problem/1610/A",
    "history": "You are playing a game on a n \u00d7 m grid, in which the computer has selected some cell ( x, y) of the grid, and you have to determine which one. To do so, you will choose some k and some k cells ( x_ 1, y_ 1) , ( x_ 2, y_ 2) , . . . , ( x_ k, y_ k) , and give them to the computer. In response, you will get k numbers b_ 1, b_ 2, . . . b_ k , where b_ i is the manhattan distance from ( x_ i, y_ i) to the hidden cell ( x, y) ( so you know which distance corresponds to which of k input cells) . After receiving these b_ 1, b_ 2, . . . , b_ k , you have to be able to determine the hidden cell. What is the smallest k for which is it possible to always guess the hidden cell correctly, no matter what cell computer chooses? As a reminder, the manhattan distance between cells ( a_ 1, b_ 1) and ( a_ 2, b_ 2) is equal to | a_ 1- a_ 2| + | b_ 1- b_ 2| .",
    "input": "The first line of the input contains a single integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. The description of test cases follows. The single line of each test case contains two integers n and m ( 1 \u2264 n, m \u2264 10^ 9 ) \u2014 the number of rows and the number of columns in the grid.",
    "output": "For each test case print a single integer \u2014 the minimum k for that test case.",
    "note": "In the first test case, the smallest such k is 2 , for which you can choose, for example, cells ( 1, 1) and ( 2, 1) . Note that you can' t choose cells ( 1, 1) and ( 2, 3) for k = 2 , as both cells ( 1, 2) and ( 2, 1) would give b_ 1 = 1, b_ 2 = 2 , so we wouldn' t be able to determine which cell is hidden if computer selects one of those. In the second test case, you should choose k = 1 , for it you can choose cell ( 3, 1) or ( 1, 1) .",
    "topics": [
      "math"
    ],
    "id": "1610A"
  },
  {
    "title": "A Stroll Around the Matrix",
    "url": "https://codeforces.com/problemset/problem/1609/G",
    "history": "William has two arrays of numbers a_ 1, a_ 2, . . . , a_ n and b_ 1, b_ 2, . . . , b_ m . The arrays satisfy the conditions of being convex. Formally an array c of length k is considered convex if c_ i - c_ i - 1 < c_ i + 1 - c_ i for all i from 2 to k - 1 and c_ 1 < c_ 2 . Throughout William' s life he observed q changes of two types happening to the arrays: Add the arithmetic progression d, d \u00b7 2, d \u00b7 3, . . . , d \u00b7 k to the suffix of the array a of length k . The array after the change looks like this: [ a_ 1, a_ 2, . . . , a_ n - k, a_ n - k + 1 + d, a_ n - k + 2 + d \u00b7 2, . . . , a_ n + d \u00b7 k] . The same operation, but for array b . After each change a matrix d is created from arrays a and b , of size n \u00d7 m , where d_ i, j= a_ i + b_ j . William wants to get from cell ( 1, 1 ) to cell ( n, m ) of this matrix. From cell ( x, y ) he can only move to cells ( x + 1, y ) and ( x, y + 1 ) . The length of a path is calculated as the sum of numbers in cells visited by William, including the first and the last cells. After each change William wants you to help find out the minimal length of the path he could take.",
    "input": "The first line contains three integers n , m and q ( 2 \u2264 n \u2264 100, 2 \u2264 m \u2264 10^ 5 , 1 \u2264 q \u2264 10^ 5 ) , the sizes of the arrays and the number of changes. The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 12 ) , the contents of array a . The third line contains m integers b_ 1, b_ 2, . . . , b_ m ( 1 \u2264 b_ i \u2264 10^ 12 ) , the contents of array b . Each of the next q lines contains three integers type , k and d ( 1 \u2264 type \u2264 2 , if type = 1 , then 1 \u2264 k \u2264 n otherwise 1 \u2264 k \u2264 m , 1 \u2264 d \u2264 10^ 3 ) .",
    "output": "After each change, output one integer, the minimum length of the path in the constructed matrix.",
    "note": "",
    "topics": [
      "data structures",
      "greedy",
      "math"
    ],
    "id": "1609G"
  },
  {
    "title": "Divide and Multiply",
    "url": "https://codeforces.com/problemset/problem/1609/A",
    "history": "William has array of n numbers a_ 1, a_ 2, . . . , a_ n . He can perform the following sequence of operations any number of times: Pick any two items from array a_ i and a_ j , where a_ i must be a multiple of 2 a_ i = a_ i/ 2 a_ j = a_ j \u00b7 2 Help William find the maximal sum of array elements, which he can get by performing the sequence of operations described above.",
    "input": "Each test contains multiple test cases. The first line contains the number of test cases t ( 1 \u2264 t \u2264 10^ 4 ) . Description of the test cases follows. The first line of each test case contains an integer n ( 1 \u2264 n \u2264 15) , the number of elements in William' s array. The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i < 16) , the contents of William' s array.",
    "output": "For each test case output the maximal sum of array elements after performing an optimal sequence of operations.",
    "note": "In the first example test case the optimal sequence would be: Pick i = 2 and j = 1 . After performing a sequence of operations a_ 2 = 4/ 2 = 2 and a_ 1 = 6 \u00b7 2 = 12 , making the array look as: [ 12, 2, 2] . Pick i = 2 and j = 1 . After performing a sequence of operations a_ 2 = 2/ 2 = 1 and a_ 1 = 12 \u00b7 2 = 24 , making the array look as: [ 24, 1, 2] . Pick i = 3 and j = 1 . After performing a sequence of operations a_ 3 = 2/ 2 = 1 and a_ 1 = 24 \u00b7 2 = 48 , making the array look as: [ 48, 1, 1] . The final answer 48 + 1 + 1 = 50 . In the third example test case there is no way to change the sum of elements, so the answer is 10 .",
    "topics": [
      "greedy",
      "implementation",
      "math",
      "number theory"
    ],
    "id": "1609A"
  },
  {
    "title": "Dominoes",
    "url": "https://codeforces.com/problemset/problem/1608/D",
    "history": "You are given n dominoes. Each domino has a left and a right cell. Each cell can be colored either black or white. Some cells are already colored, while some aren' t yet. The coloring is said to be valid if and only if it is possible to rearrange the dominoes in some order such that for each 1 \u2264 i \u2264 n the color of the right cell of the i - th domino is different from the color of the left cell of the ( ( i n) + 1) - st domino. Note that you can' t rotate the dominoes, so the left cell always remains the left cell, and the right cell always remains the right cell. Count the number of valid ways to color the yet uncolored cells of dominoes. Two ways are considered different if there is a cell that is colored white in one way and black in the other. In particular, colorings BW WB and WB BW different ( and both invalid) . As this number can be very big, output it modulo 998 244 353 .",
    "input": "The first line of the input contains a single integer n ( 1 \u2264 n \u2264 10^ 5 ) \u2014 the number of dominoes. The next n lines describe dominoes. Each line contains two characters which represent the left and the right cell. Character B means that the corresponding cell is black, character W means that the corresponding cell is white, and ? means that the cell is yet to be colored.",
    "output": "Print a single integer \u2014 the answer to the problem.",
    "note": "In the first test case, there is only one domino, and we need the color of its right cell to be different from the color of its left cell. There is only one way to achieve this. In the second test case, there are only 2 such colorings: BB WW and WB WB.",
    "topics": [
      "combinatorics",
      "fft",
      "graphs",
      "math",
      "number theory"
    ],
    "id": "1608D"
  },
  {
    "title": "Find Array",
    "url": "https://codeforces.com/problemset/problem/1608/A",
    "history": "Given n , find any array a_ 1, a_ 2, . . . , a_ n of integers such that all of the following conditions hold: 1 \u2264 a_ i \u2264 10^ 9 for every i from 1 to n . a_ 1 < a_ 2 < . . . < a_ n For every i from 2 to n , a_ i isn' t divisible by a_ i- 1 It can be shown that such an array always exists under the constraints of the problem.",
    "input": "The first line contains the number of test cases t ( 1 \u2264 t \u2264 100 ) . Description of the test cases follows. The only line of each test case contains a single integer n ( 1 \u2264 n \u2264 1000 ) . It is guaranteed that the sum of n over all test cases does not exceed 10^ 4 .",
    "output": "For each test case print n integers a_ 1, a_ 2, . . . , a_ n \u2014 the array you found. If there are multiple arrays satisfying all the conditions, print any of them.",
    "note": "In the first test case, array [ 1] satisfies all the conditions. In the second test case, array [ 2, 3] satisfies all the conditions, as 2< 3 and 3 is not divisible by 2 . In the third test case, array [ 111, 1111, 11111, 111111, 1111111, 11111111, 111111111] satisfies all the conditions, as it' s increasing and a_ i isn' t divisible by a_ i- 1 for any i from 2 to 7 .",
    "topics": [
      "constructive algorithms",
      "math"
    ],
    "id": "1608A"
  },
  {
    "title": "Blue-Red Permutation",
    "url": "https://codeforces.com/problemset/problem/1607/D",
    "history": "You are given an array of integers a of length n . The elements of the array can be either different or the same. Each element of the array is colored either blue or red. There are no unpainted elements in the array. One of the two operations described below can be applied to an array in a single step: either you can select any blue element and decrease its value by 1 ; or you can select any red element and increase its value by 1 . Situations in which there are no elements of some color at all are also possible. For example, if the whole array is colored blue or red, one of the operations becomes unavailable. Determine whether it is possible to make 0 or more steps such that the resulting array is a permutation of numbers from 1 to n ? In other words, check whether there exists a sequence of steps ( possibly empty) such that after applying it, the array a contains in some order all numbers from 1 to n ( inclusive) , each exactly once.",
    "input": "The first line contains an integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of input data sets in the test. The description of each set of input data consists of three lines. The first line contains an integer n ( 1 \u2264 n \u2264 2 \u00b7 10^ 5 ) \u2014 the length of the original array a . The second line contains n integers a_ 1 , a_ 2 , . . . , a_ n ( - 10^ 9 \u2264 a_ i \u2264 10^ 9 ) \u2014 the array elements themselves. The third line has length n and consists exclusively of the letters ' B' and/ or ' R' : i th character is ' B' if a_ i is colored blue, and is ' R' if colored red. It is guaranteed that the sum of n over all input sets does not exceed 2 \u00b7 10^ 5 .",
    "output": "Print t lines, each of which contains the answer to the corresponding test case of the input. Print YES as an answer if the corresponding array can be transformed into a permutation, and NO otherwise. You can print the answer in any case ( for example, the strings yEs, yes, Yes, and YES will be recognized as a positive answer) .",
    "note": "In the first test case of the example, the following sequence of moves can be performed: choose i= 3 , element a_ 3= 5 is blue, so we decrease it, we get a= [ 1, 2, 4, 2] ; choose i= 2 , element a_ 2= 2 is red, so we increase it, we get a= [ 1, 3, 4, 2] ; choose i= 3 , element a_ 3= 4 is blue, so we decrease it, we get a= [ 1, 3, 3, 2] ; choose i= 2 , element a_ 2= 2 is red, so we increase it, we get a= [ 1, 4, 3, 2] . We got that a is a permutation. Hence the answer is YES.",
    "topics": [
      "greedy",
      "math",
      "sortings"
    ],
    "id": "1607D"
  },
  {
    "title": "Odd Grasshopper",
    "url": "https://codeforces.com/problemset/problem/1607/B",
    "history": "The grasshopper is located on the numeric axis at the point with coordinate x_ 0 . Having nothing else to do he starts jumping between integer points on the axis. Making a jump from a point with coordinate x with a distance d to the left moves the grasshopper to a point with a coordinate x - d , while jumping to the right moves him to a point with a coordinate x + d . The grasshopper is very fond of positive integers, so for each integer i starting with 1 the following holds: exactly i minutes after the start he makes a jump with a distance of exactly i . So, in the first minutes he jumps by 1 , then by 2 , and so on. The direction of a jump is determined as follows: if the point where the grasshopper was before the jump has an even coordinate, the grasshopper jumps to the left, otherwise he jumps to the right. For example, if after 18 consecutive jumps he arrives at the point with a coordinate 7 , he will jump by a distance of 19 to the right, since 7 is an odd number, and will end up at a point 7 + 19 = 26 . Since 26 is an even number, the next jump the grasshopper will make to the left by a distance of 20 , and it will move him to the point 26 - 20 = 6 . Find exactly which point the grasshopper will be at after exactly n jumps.",
    "input": "The first line of input contains an integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. Each of the following t lines contains two integers x_ 0 ( - 10^ 14\u2264 x_ 0 \u2264 10^ 14 ) and n ( 0 \u2264 n \u2264 10^ 14 ) \u2014 the coordinate of the grasshopper' s initial position and the number of jumps.",
    "output": "Print exactly t lines. On the i - th line print one integer \u2014 the answer to the i - th test case \u2014 the coordinate of the point the grasshopper will be at after making n jumps from the point x_ 0 .",
    "note": "The first two test cases in the example correspond to the first two jumps from the point x_ 0 = 0 . Since 0 is an even number, the first jump of length 1 is made to the left, and the grasshopper ends up at the point 0 - 1 = - 1 . Then, since - 1 is an odd number, a jump of length 2 is made to the right, bringing the grasshopper to the point with coordinate - 1 + 2 = 1 .",
    "topics": [
      "math"
    ],
    "id": "1607B"
  },
  {
    "title": "Arena",
    "url": "https://codeforces.com/problemset/problem/1606/E",
    "history": "There are n heroes fighting in the arena. Initially, the i - th hero has a_ i health points. The fight in the arena takes place in several rounds. At the beginning of each round, each alive hero deals 1 damage to all other heroes. Hits of all heroes occur simultaneously. Heroes whose health is less than 1 at the end of the round are considered killed. If exactly 1 hero remains alive after a certain round, then he is declared the winner. Otherwise, there is no winner. Your task is to calculate the number of ways to choose the initial health points for each hero a_ i , where 1 \u2264 a_ i \u2264 x , so that there is no winner of the fight. The number of ways can be very large, so print it modulo 998244353 . Two ways are considered different if at least one hero has a different amount of health. For example, [ 1, 2, 1] and [ 2, 1, 1] are different.",
    "input": "The only line contains two integers n and x ( 2 \u2264 n \u2264 500; 1 \u2264 x \u2264 500 ) .",
    "output": "Print one integer \u2014 the number of ways to choose the initial health points for each hero a_ i , where 1 \u2264 a_ i \u2264 x , so that there is no winner of the fight, taken modulo 998244353 .",
    "note": "",
    "topics": [
      "combinatorics",
      "dp",
      "math"
    ],
    "id": "1606E"
  },
  {
    "title": "Update Files",
    "url": "https://codeforces.com/problemset/problem/1606/B",
    "history": "Berland State University has received a new update for the operating system. Initially it is installed only on the 1 - st computer. Update files should be copied to all n computers. The computers are not connected to the internet, so the only way to transfer update files from one computer to another is to copy them using a patch cable ( a cable connecting two computers directly) . Only one patch cable can be connected to a computer at a time. Thus, from any computer where the update files are installed, they can be copied to some other computer in exactly one hour. Your task is to find the minimum number of hours required to copy the update files to all n computers if there are only k patch cables in Berland State University.",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 5 ) \u2014 the number of test cases. Each test case consists of a single line that contains two integers n and k ( 1 \u2264 k \u2264 n \u2264 10^ 18 ) \u2014 the number of computers and the number of patch cables.",
    "output": "For each test case print one integer \u2014 the minimum number of hours required to copy the update files to all n computers.",
    "note": "Let' s consider the test cases of the example: n= 8 , k= 3 : during the first hour, we copy the update files from the computer 1 to the computer 2 ; during the second hour, we copy the update files from the computer 1 to the computer 3 , and from the computer 2 to the computer 4 ; during the third hour, we copy the update files from the computer 1 to the computer 5 , from the computer 2 to the computer 6 , and from the computer 3 to the computer 7 ; during the fourth hour, we copy the update files from the computer 2 to the computer 8 . n= 6 , k= 6 : during the first hour, we copy the update files from the computer 1 to the computer 2 ; during the second hour, we copy the update files from the computer 1 to the computer 3 , and from the computer 2 to the computer 4 ; during the third hour, we copy the update files from the computer 1 to the computer 5 , and from the computer 2 to the computer 6 . n= 7 , k= 1 : during the first hour, we copy the update files from the computer 1 to the computer 2 ; during the second hour, we copy the update files from the computer 1 to the computer 3 ; during the third hour, we copy the update files from the computer 1 to the computer 4 ; during the fourth hour, we copy the update files from the computer 4 to the computer 5 ; during the fifth hour, we copy the update files from the computer 4 to the computer 6 ; during the sixth hour, we copy the update files from the computer 3 to the computer 7 .",
    "topics": [
      "greedy",
      "implementation",
      "math"
    ],
    "id": "1606B"
  },
  {
    "title": "Array Equalizer",
    "url": "https://codeforces.com/problemset/problem/1605/E",
    "history": "Jeevan has two arrays a and b of size n . He is fond of performing weird operations on arrays. This time, he comes up with two types of operations: Choose any i ( 1 \u2264 i \u2264 n ) and increment a_ j by 1 for every j which is a multiple of i and 1 \u2264 j \u2264 n . Choose any i ( 1 \u2264 i \u2264 n ) and decrement a_ j by 1 for every j which is a multiple of i and 1 \u2264 j \u2264 n . He wants to convert array a into an array b using the minimum total number of operations. However, Jeevan seems to have forgotten the value of b_ 1 . So he makes some guesses. He will ask you q questions corresponding to his q guesses, the i - th of which is of the form: If b_ 1 = x_ i , what is the minimum number of operations required to convert a to b ? Help him by answering each question.",
    "input": "The first line contains a single integer n ( 1 \u2264 n \u2264 2 \u00b7 10^ 5) \u2014 the size of arrays a and b . The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 6) . The third line contains n integers b_ 1, b_ 2, . . . , b_ n ( 1 \u2264 b_ i \u2264 10^ 6 for i = \u0338 1 ; b_ 1 = - 1 , representing that the value of b_ 1 is unknown ) . The fourth line contains a single integer q ( 1 \u2264 q \u2264 2 \u00b7 10^ 5) \u2014 the number of questions. Each of the following q lines contains a single integer x_ i ( 1 \u2264 x_ i \u2264 10^ 6) \u2014 representing the i - th question.",
    "output": "Output q integers \u2014 the answers to each of his q questions.",
    "note": "Consider the first test case. b_ 1 = 1 : We need to convert [ 3, 7] \u2192 [ 1, 5] . We can perform the following operations: [ 3, 7] [ 2, 6] [ 1, 5] Hence the answer is 2 . b_ 1 = 4 : We need to convert [ 3, 7] \u2192 [ 4, 5] . We can perform the following operations: [ 3, 7] [ 3, 6] [ 3, 5] [ 4, 6] [ 4, 5] Hence the answer is 4 . b_ 1 = 3 : We need to convert [ 3, 7] \u2192 [ 3, 5] . We can perform the following operations: [ 3, 7] [ 3, 6] [ 3, 5] Hence the answer is 2 .",
    "topics": [
      "binary search",
      "greedy",
      "implementation",
      "math",
      "number theory",
      "sortings",
      "two pointers"
    ],
    "id": "1605E"
  },
  {
    "title": "A.M. Deviation",
    "url": "https://codeforces.com/problemset/problem/1605/A",
    "history": "A number a_ 2 is said to be the arithmetic mean of two numbers a_ 1 and a_ 3 , if the following condition holds: a_ 1 + a_ 3 = 2\u00b7 a_ 2 . We define an arithmetic mean deviation of three numbers a_ 1 , a_ 2 and a_ 3 as follows: d( a_ 1, a_ 2, a_ 3) = | a_ 1 + a_ 3 - 2 \u00b7 a_ 2| . Arithmetic means a lot to Jeevan. He has three numbers a_ 1 , a_ 2 and a_ 3 and he wants to minimize the arithmetic mean deviation d( a_ 1, a_ 2, a_ 3) . To do so, he can perform the following operation any number of times ( possibly zero) : Choose i, j from { 1, 2, 3} such that i j and increment a_ i by 1 and decrement a_ j by 1 Help Jeevan find out the minimum value of d( a_ 1, a_ 2, a_ 3) that can be obtained after applying the operation any number of times.",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 5000) \u2014 the number of test cases. The first and only line of each test case contains three integers a_ 1 , a_ 2 and a_ 3 ( 1 \u2264 a_ 1, a_ 2, a_ 3 \u2264 10^ 8) .",
    "output": "For each test case, output the minimum value of d( a_ 1, a_ 2, a_ 3) that can be obtained after applying the operation any number of times.",
    "note": "Note that after applying a few operations, the values of a_ 1 , a_ 2 and a_ 3 may become negative. In the first test case, 4 is already the Arithmetic Mean of 3 and 5 . d( 3, 4, 5) = | 3 + 5 - 2 \u00b7 4| = 0 In the second test case, we can apply the following operation: ( 2, 2, 6) ( 1, 3, 6) d( 1, 3, 6) = | 1 + 6 - 2 \u00b7 3| = 1 It can be proven that answer can not be improved any further. In the third test case, we can apply the following operations: ( 1, 6, 5) ( 1, 5, 6) ( 2, 4, 6) d( 2, 4, 6) = | 2 + 6 - 2 \u00b7 4| = 0",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "1605A"
  },
  {
    "title": "October 18, 2017",
    "url": "https://codeforces.com/problemset/problem/1603/F",
    "history": "It was October 18, 2017. Shohag, a melancholic soul, made a strong determination that he will pursue Competitive Programming seriously, by heart, because he found it fascinating. Fast forward to 4 years, he is happy that he took this road. He is now creating a contest on Codeforces. He found an astounding problem but has no idea how to solve this. Help him to solve the final problem of the round. You are given three integers n , k and x . Find the number, modulo 998 244 353 , of integer sequences a_ 1, a_ 2, . . . , a_ n such that the following conditions are satisfied: 0 \u2264 a_ i 2^ k for each integer i from 1 to n . There is no non- empty subsequence in a such that the bitwise XOR of the elements of the subsequence is x . A sequence b is a subsequence of a sequence c if b can be obtained from c by deletion of several ( possibly, zero or all) elements.",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 5 ) \u2014 the number of test cases. The first and only line of each test case contains three space- separated integers n , k , and x ( 1 \u2264 n \u2264 10^ 9 , 0 \u2264 k \u2264 10^ 7 , 0 \u2264 x 2^ min( 20, k) ) . It is guaranteed that the sum of k over all test cases does not exceed 5 \u00b7 10^ 7 .",
    "output": "For each test case, print a single integer \u2014 the answer to the problem.",
    "note": "In the first test case, the valid sequences are [ 1, 2] , [ 1, 3] , [ 2, 1] , [ 2, 3] , [ 3, 1] and [ 3, 2] . In the second test case, the only valid sequence is [ 0, 0] .",
    "topics": [
      "combinatorics",
      "dp",
      "implementation",
      "math"
    ],
    "id": "1603F"
  },
  {
    "title": "A Perfect Problem",
    "url": "https://codeforces.com/problemset/problem/1603/E",
    "history": "A sequence of integers b_ 1, b_ 2, . . . , b_ m is called good if max( b_ 1, b_ 2, . . . , b_ m) \u00b7 min( b_ 1, b_ 2, . . . , b_ m) \u2265 b_ 1 + b_ 2 + . . . + b_ m . A sequence of integers a_ 1, a_ 2, . . . , a_ n is called perfect if every non- empty subsequence of a is good. YouKn0wWho has two integers n and M , M is prime. Help him find the number, modulo M , of perfect sequences a_ 1, a_ 2, . . . , a_ n such that 1 \u2264 a_ i \u2264 n + 1 for each integer i from 1 to n . A sequence d is a subsequence of a sequence c if d can be obtained from c by deletion of several ( possibly, zero or all) elements.",
    "input": "The first and only line of the input contains two space- separated integers n and M ( 1 \u2264 n \u2264 200 ; 10^ 8 \u2264 M \u2264 10^ 9 ) . It is guaranteed that M is prime.",
    "output": "Print a single integer \u2014 the number of perfect sequences modulo M .",
    "note": "In the first test case, the perfect sequences are [ 2, 2] , [ 2, 3] , [ 3, 2] and [ 3, 3] . In the second test case, some of the perfect sequences are [ 3, 4, 3, 5] , [ 4, 5, 4, 4] , [ 4, 5, 5, 5] etc. One example of a sequence which is not perfect is [ 2, 3, 3, 4] , because, for example, the subsequence [ 2, 3, 4] is not an good as 2 \u00b7 4 < 2 + 3 + 4 .",
    "topics": [
      "combinatorics",
      "dp",
      "math"
    ],
    "id": "1603E"
  },
  {
    "title": "Extreme Extension",
    "url": "https://codeforces.com/problemset/problem/1603/C",
    "history": "For an array b of n integers, the extreme value of this array is the minimum number of times ( possibly, zero) the following operation has to be performed to make b non- decreasing: Select an index i such that 1 \u2264 i \u2264 | b| , where | b| is the current length of b . Replace b_ i with two elements x and y such that x and y both are positive integers and x + y = b_ i . This way, the array b changes and the next operation is performed on this modified array. For example, if b = [ 2, 4, 3] and index 2 gets selected, then the possible arrays after this operation are [ 2, 1, 3, 3] , [ 2, 2, 2, 3] , or [ 2, 3, 1, 3] . And consequently, for this array, this single operation is enough to make it non- decreasing: [ 2, 4, 3] \u2192 [ 2, 2, 2, 3] . It' s easy to see that every array of positive integers can be made non- decreasing this way. YouKn0wWho has an array a of n integers. Help him find the sum of extreme values of all nonempty subarrays of a modulo 998 244 353 . If a subarray appears in a multiple times, its extreme value should be counted the number of times it appears. An array d is a subarray of an array c if d can be obtained from c by deletion of several ( possibly, zero or all) elements from the beginning and several ( possibly, zero or all) elements from the end.",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 10 000 ) \u2014 the number of test cases. The first line of each test case contains a single integer n ( 1 \u2264 n \u2264 10^ 5 ) . The second line of each test case contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 5 ) . It is guaranteed that the sum of n over all test cases doesn' t exceed 10^ 5 .",
    "output": "For each test case, print a single integer \u2014 the sum of extreme values of all subarrays of a modulo 998 244 353 .",
    "note": "Let f( l, r) denote the extreme value of [ a_ l, a_ l+ 1, . . . , a_ r] . In the first test case, f( 1, 3) = 3 , because YouKn0wWho can perform the following operations on the subarray [ 5, 4, 3] ( the newly inserted elements are underlined) : [ 5, 4, 3] \u2192 [ 3, 2, 4, 3] \u2192 [ 3, 2, 2, 2, 3] \u2192 [ 1, 2, 2, 2, 2, 3] ; f( 1, 2) = 1 , because [ 5, 4] \u2192 [ 2, 3, 4] ; f( 2, 3) = 1 , because [ 4, 3] \u2192 [ 1, 3, 3] ; f( 1, 1) = f( 2, 2) = f( 3, 3) = 0 , because they are already non- decreasing. So the total sum of extreme values of all subarrays of a = 3 + 1 + 1 + 0 + 0 + 0 = 5 .",
    "topics": [
      "dp",
      "greedy",
      "math",
      "number theory"
    ],
    "id": "1603C"
  },
  {
    "title": "Moderate Modular Mode",
    "url": "https://codeforces.com/problemset/problem/1603/B",
    "history": "YouKn0wWho has two even integers x and y . Help him to find an integer n such that 1 \u2264 n \u2264 2 \u00b7 10^ 18 and n x = y n . Here, a b denotes the remainder of a after division by b . If there are multiple such integers, output any. It can be shown that such an integer always exists under the given constraints.",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 5 ) \u2014 the number of test cases. The first and only line of each test case contains two integers x and y ( 2 \u2264 x, y \u2264 10^ 9 , both are even) .",
    "output": "For each test case, print a single integer n ( 1 \u2264 n \u2264 2 \u00b7 10^ 18 ) that satisfies the condition mentioned in the statement. If there are multiple such integers, output any. It can be shown that such an integer always exists under the given constraints.",
    "note": "In the first test case, 4 4 = 8 4 = 0 . In the second test case, 10 4 = 2 10 = 2 . In the third test case, 420 420 = 420 420 = 0 .",
    "topics": [
      "constructive algorithms",
      "math",
      "number theory"
    ],
    "id": "1603B"
  },
  {
    "title": "Di-visible Confusion",
    "url": "https://codeforces.com/problemset/problem/1603/A",
    "history": "YouKn0wWho has an integer sequence a_ 1, a_ 2, . . . , a_ n . He will perform the following operation until the sequence becomes empty: select an index i such that 1 \u2264 i \u2264 | a| and a_ i is not divisible by ( i + 1) , and erase this element from the sequence. Here | a| is the length of sequence a at the moment of operation. Note that the sequence a changes and the next operation is performed on this changed sequence. For example, if a= [ 3, 5, 4, 5] , then he can select i = 2 , because a_ 2 = 5 is not divisible by i+ 1 = 3 . After this operation the sequence is [ 3, 4, 5] . Help YouKn0wWho determine if it is possible to erase the whole sequence using the aforementioned operation.",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 10 000 ) \u2014 the number of test cases. The first line of each test case contains a single integer n ( 1 \u2264 n \u2264 10^ 5 ) . The second line of each test case contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 9 ) . It is guaranteed that the sum of n over all test cases doesn' t exceed 3 \u00b7 10^ 5 .",
    "output": "For each test case, print \" YES\" ( without quotes) if it is possible to erase the whole sequence using the aforementioned operation, print \" NO\" ( without quotes) otherwise. You can print each letter in any register ( upper or lower) .",
    "note": "In the first test case, YouKn0wWho can perform the following operations ( the erased elements are underlined) : [ 1, 2, 3] \u2192 [ 1, 3] \u2192 [ 3] \u2192 [ ] . In the second test case, it is impossible to erase the sequence as i can only be 1 , and when i= 1 , a_ 1 = 2 is divisible by i + 1 = 2 .",
    "topics": [
      "constructive algorithms",
      "math",
      "number theory"
    ],
    "id": "1603A"
  },
  {
    "title": "Two Sorts",
    "url": "https://codeforces.com/problemset/problem/1601/F",
    "history": "Integers from 1 to n ( inclusive) were sorted lexicographically ( considering integers as strings) . As a result, array a_ 1, a_ 2, . . . , a_ n was obtained. Calculate value of ( \u2211_ i = 1^ n ( ( i - a_ i) 998244353) ) 10^ 9 + 7 . x y here means the remainder after division x by y . This remainder is always non- negative and doesn' t exceed y - 1 . For example, 5 3 = 2 , ( - 1) 6 = 5 .",
    "input": "The first line contains the single integer n ( 1 \u2264 n \u2264 10^ 12 ) .",
    "output": "Print one integer \u2014 the required sum.",
    "note": "A string a is lexicographically smaller than a string b if and only if one of the following holds: a is a prefix of b , but a b ; in the first position where a and b differ, the string a has a letter that appears earlier in the alphabet than the corresponding letter in b . For example, 42 is lexicographically smaller than 6 , because they differ in the first digit, and 4 < 6 ; 42 < 420 , because 42 is a prefix of 420 . Let' s denote 998244353 as M . In the first example, array a is equal to [ 1, 2, 3] . ( 1 - 1) M = 0 M = 0 ( 2 - 2) M = 0 M = 0 ( 3 - 3) M = 0 M = 0 As a result, ( 0 + 0 + 0) 10^ 9 + 7 = 0 In the second example, array a is equal to [ 1, 10, 11, 12, 2, 3, 4, 5, 6, 7, 8, 9] . ( 1 - 1) M = 0 M = 0 ( 2 - 10) M = ( - 8) M = 998244345 ( 3 - 11) M = ( - 8) M = 998244345 ( 4 - 12) M = ( - 8) M = 998244345 ( 5 - 2) M = 3 M = 3 ( 6 - 3) M = 3 M = 3 ( 7 - 4) M = 3 M = 3 ( 8 - 5) M = 3 M = 3 ( 9 - 6) M = 3 M = 3 ( 10 - 7) M = 3 M = 3 ( 11 - 8) M = 3 M = 3 ( 12 - 9) M = 3 M = 3 As a result, ( 0 + 998244345 + 998244345 + 998244345 + 3 + 3 + 3 + 3 + 3 + 3 + 3 + 3) 10^ 9 + 7 = 2994733059 10^ 9 + 7 = 994733045",
    "topics": [
      "binary search",
      "dfs and similar",
      "math",
      "meet-in-the-middle"
    ],
    "id": "1601F"
  },
  {
    "title": "Array Elimination",
    "url": "https://codeforces.com/problemset/problem/1601/A",
    "history": "You are given array a_ 1, a_ 2, . . . , a_ n , consisting of non- negative integers. Let' s define operation of \" elimination\" with integer parameter k ( 1 \u2264 k \u2264 n ) as follows: Choose k distinct array indices 1 \u2264 i_ 1 < i_ 2 < . . . < i_ k \u2264 n . Calculate x = a_ i_ 1 & a_ i_ 2 & . . . & a_ i_ k , where & denotes the bitwise AND operation ( notes section contains formal definition) . Subtract x from each of a_ i_ 1, a_ i_ 2, . . . , a_ i_ k ; all other elements remain untouched. Find all possible values of k , such that it' s possible to make all elements of array a equal to 0 using a finite number of elimination operations with parameter k . It can be proven that exists at least one possible k for any array a . Note that you firstly choose k and only after that perform elimination operations with value k you' ve chosen initially.",
    "input": "Each test contains multiple test cases. The first line contains the number of test cases t ( 1 \u2264 t \u2264 10^ 4 ) . Description of the test cases follows. The first line of each test case contains one integer n ( 1 \u2264 n \u2264 200 000 ) \u2014 the length of array a . The second line of each test case contains n integers a_ 1, a_ 2, . . . , a_ n ( 0 \u2264 a_ i < 2^ 30 ) \u2014 array a itself. It' s guaranteed that the sum of n over all test cases doesn' t exceed 200 000 .",
    "output": "For each test case, print all values k , such that it' s possible to make all elements of a equal to 0 in a finite number of elimination operations with the given parameter k . Print them in increasing order.",
    "note": "In the first test case: If k = 1 , we can make four elimination operations with sets of indices { 1} , { 2} , { 3} , { 4} . Since & of one element is equal to the element itself, then for each operation x = a_ i , so a_ i - x = a_ i - a_ i = 0 . If k = 2 , we can make two elimination operations with, for example, sets of indices { 1, 3} and { 2, 4} : x = a_ 1 & a_ 3 = a_ 2 & a_ 4 = 4 & 4 = 4 . For both operations x = 4 , so after the first operation a_ 1 - x = 0 and a_ 3 - x = 0 , and after the second operation \u2014 a_ 2 - x = 0 and a_ 4 - x = 0 . If k = 3 , it' s impossible to make all a_ i equal to 0 . After performing the first operation, we' ll get three elements equal to 0 and one equal to 4 . After that, all elimination operations won' t change anything, since at least one chosen element will always be equal to 0 . If k = 4 , we can make one operation with set { 1, 2, 3, 4} , because x = a_ 1 & a_ 2 & a_ 3 & a_ 4 = 4 . In the second test case, if k = 2 then we can make the following elimination operations: Operation with indices { 1, 3} : x = a_ 1 & a_ 3 = 13 & 25 = 9 . a_ 1 - x = 13 - 9 = 4 and a_ 3 - x = 25 - 9 = 16 . Array a will become equal to [ 4, 7, 16, 19] . Operation with indices { 3, 4} : x = a_ 3 & a_ 4 = 16 & 19 = 16 . a_ 3 - x = 16 - 16 = 0 and a_ 4 - x = 19 - 16 = 3 . Array a will become equal to [ 4, 7, 0, 3] . Operation with indices { 2, 4} : x = a_ 2 & a_ 4 = 7 & 3 = 3 . a_ 2 - x = 7 - 3 = 4 and a_ 4 - x = 3 - 3 = 0 . Array a will become equal to [ 4, 4, 0, 0] . Operation with indices { 1, 2} : x = a_ 1 & a_ 2 = 4 & 4 = 4 . a_ 1 - x = 4 - 4 = 0 and a_ 2 - x = 4 - 4 = 0 . Array a will become equal to [ 0, 0, 0, 0] . Formal definition of bitwise AND: Let' s define bitwise AND ( & ) as follows. Suppose we have two non- negative integers x and y , let' s look at their binary representations ( possibly, with leading zeroes) : x_ k . . . x_ 2 x_ 1 x_ 0 and y_ k . . . y_ 2 y_ 1 y_ 0 . Here, x_ i is the i - th bit of number x , and y_ i is the i - th bit of number y . Let r = x & y is a result of operation & on number x and y . Then binary representation of r will be r_ k . . . r_ 2 r_ 1 r_ 0 , where: r_ i = 1, if x_ i = 1 and y_ i = 1 0, if x_ i = 0 or y_ i = 0",
    "topics": [
      "bitmasks",
      "greedy",
      "math",
      "number theory"
    ],
    "id": "1601A"
  },
  {
    "title": "Party Organization",
    "url": "https://codeforces.com/problemset/problem/1600/F",
    "history": "On the great island of Baltia, there live N people, numbered from 1 to N . There are exactly M pairs of people that are friends with each other. The people of Baltia want to organize a successful party, but they have very strict rules on what a party is and when the party is successful. On the island of Baltia, a party is a gathering of exactly 5 people. The party is considered to be successful if either all the people at the party are friends with each other ( so that they can all talk to each other without having to worry about talking to someone they are not friends with) or no two people at the party are friends with each other ( so that everyone can just be on their phones without anyone else bothering them) . Please help the people of Baltia organize a successful party or tell them that it' s impossible to do so.",
    "input": "The first line contains two integer numbers, N ( 5 \u2264 N \u2264 2* 10^ 5 ) and M ( 0 \u2264 M \u2264 2* 10^ 5 ) \u2013 the number of people that live in Baltia, and the number of friendships. The next M lines each contains two integers U_ i and V_ i ( 1 \u2264 U_ i, V_ i \u2264 N ) \u2013 meaning that person U_ i is friends with person V_ i . Two friends can not be in the list of friends twice ( no pairs are repeated) and a person can be friends with themselves ( U_ i V_ i ) .",
    "output": "If it' s possible to organize a successful party, print 5 numbers indicating which 5 people should be invited to the party. If it' s not possible to organize a successful party, print - 1 instead. If there are multiple successful parties possible, print any.",
    "note": "",
    "topics": [
      "brute force",
      "math",
      "probabilities"
    ],
    "id": "1600F"
  },
  {
    "title": "Hidden Fortress",
    "url": "https://codeforces.com/problemset/problem/1599/H",
    "history": "This is an interactive problem! As part of your contribution in the Great Bubble War, you have been tasked with finding the newly built enemy fortress. The world you live in is a giant 10^ 9 \u00d7 10^ 9 grid, with squares having both coordinates between 1 and 10^ 9 . You know that the enemy base has the shape of a rectangle, with the sides parallel to the sides of the grid. The people of your world are extremely scared of being at the edge of the world, so you know that the base doesn' t contain any of the squares on the edges of the grid ( the x or y coordinate being 1 or 10^ 9 ) . To help you locate the base, you have been given a device that you can place in any square of the grid, and it will tell you the manhattan distance to the closest square of the base. The manhattan distance from square ( a, b) to square ( p, q) is calculated as | a\u2212p| + | b\u2212q| . If you try to place the device inside the enemy base, you will be captured by the enemy. Because of this, you need to make sure to never place the device inside the enemy base. Unfortunately, the device is powered by a battery and you can' t recharge it. This means that you can use the device at most 40 times. InteractionYour code is allowed to place the device on any square in the grid by writing \" ? i j \" ( 1 \u2264 i, j \u2264 10^ 9) . In return, it will recieve the manhattan distance to the closest square of the enemy base from square ( i, j) or - 1 if the square you placed the device on is inside the enemy base or outside the grid. If you recieve - 1 instead of a positive number, exit immidiately and you will see the wrong answer verdict. Otherwise, you can get an arbitrary verdict because your solution will continue to read from a closed stream. Your solution should use no more than 40 queries. Once you are sure where the enemy base is located, you should print \" ! x y p q \" ( 1 \u2264 x \u2264 p\u2264 10^ 9, 1 \u2264 y \u2264 q\u2264 10^ 9) , where ( x, y) is the square inside the enemy base with the smallest x and y coordinates, and ( p, q) is the square inside the enemy base with the largest x and y coordinates. Note that answering doesn' t count as one of the 40 queries. After printing a query or printing the answer, do not forget to output end of line and flush the output. Otherwise, you will get idleness limit exceeded. To do this, use: fflush( stdout) or cout. flush( ) in C+ + ; System. out. flush( ) in Java; flush( output) in Pascal; stdout. flush( ) in Python; See the documentation for other languages.",
    "input": "The input contains the answers to your queries.",
    "output": "",
    "note": "",
    "topics": [
      "interactive",
      "math"
    ],
    "id": "1599H"
  },
  {
    "title": "Shortest path",
    "url": "https://codeforces.com/problemset/problem/1599/G",
    "history": "You are given N points on an infinite plane with the Cartesian coordinate system on it. N- 1 points lay on one line, and one point isn' t on that line. You are on point K at the start, and the goal is to visit every point. You can move between any two points in a straight line, and you can revisit points. What is the minimum length of the path?",
    "input": "The first line contains two integers: N ( 3 \u2264 N \u2264 2* 10^ 5 ) - the number of points, and K ( 1 \u2264 K \u2264 N ) - the index of the starting point. Each of the next N lines contain two integers, A_ i , B_ i ( - 10^ 6 \u2264 A_ i, B_ i \u2264 10^ 6 ) - coordinates of the i- th point.",
    "output": "The output contains one number - the shortest path to visit all given points starting from point K . The absolute difference between your solution and the main solution shouldn' t exceed 10^ - 6 ;",
    "note": "The shortest path consists of these moves: 2 - > 5 5 - > 4 4 - > 1 1 - > 3 There isn' t any shorter path possible.",
    "topics": [
      "brute force",
      "geometry",
      "math",
      "shortest paths"
    ],
    "id": "1599G"
  },
  {
    "title": "Bubble Strike",
    "url": "https://codeforces.com/problemset/problem/1599/C",
    "history": "Little Johnny Bubbles enjoys spending hours in front of his computer playing video games. His favorite game is Bubble Strike, fast- paced bubble shooting online game for two players. Each game is set in one of the N maps, each having different terrain configuration. First phase of each game decides on which map the game will be played. The game system randomly selects three maps and shows them to the players. Each player must pick one of those three maps to be discarded. The game system then randomly selects one of the maps that were not picked by any of the players and starts the game. Johnny is deeply enthusiastic about the game and wants to spend some time studying maps, thus increasing chances to win games played on those maps. However, he also needs to do his homework, so he does not have time to study all the maps. That is why he asked himself the following question: \" What is the minimum number of maps I have to study, so that the probability to play one of those maps is at least P \" ? Can you help Johnny find the answer for this question? You can assume Johnny' s opponents do not know him, and they will randomly pick maps.",
    "input": "The first line contains two integers N ( 3 \u2264 N \u2264 10^ 3 ) and P ( 0 \u2264 P \u2264 1 ) \u2013 total number of maps in the game and probability to play map Johnny has studied. P will have at most four digits after the decimal point.",
    "output": "Output contains one integer number \u2013 minimum number of maps Johnny has to study.",
    "note": "",
    "topics": [
      "combinatorics",
      "math",
      "probabilities",
      "ternary search"
    ],
    "id": "1599C"
  },
  {
    "title": "The Sum of Good Numbers",
    "url": "https://codeforces.com/problemset/problem/1598/G",
    "history": "Let' s call a positive integer good if there is no digit 0 in its decimal representation. For an array of a good numbers a , one found out that the sum of some two neighboring elements is equal to x ( i. e. x = a_ i + a_ i + 1 for some i ) . x had turned out to be a good number as well. Then the elements of the array a were written out one after another without separators into one string s . For example, if a = [ 12, 5, 6, 133] , then s = 1256133 . You are given a string s and a number x . Your task is to determine the positions in the string that correspond to the adjacent elements of the array that have sum x . If there are several possible answers, you can print any of them.",
    "input": "The first line contains the string s ( 2 \u2264 | s| \u2264 5 \u00b7 10^ 5 ) . The second line contains an integer x ( 2 \u2264 x < 10^ 200000 ) . An additional constraint on the input: the answer always exists, i. e you can always select two adjacent substrings of the string s so that if you convert these substrings to integers, their sum is equal to x .",
    "output": "In the first line, print two integers l_ 1 , r_ 1 , meaning that the first term of the sum ( a_ i ) is in the string s from position l_ 1 to position r_ 1 . In the second line, print two integers l_ 2 , r_ 2 , meaning that the second term of the sum ( a_ i + 1 ) is in the string s from position l_ 2 to position r_ 2 .",
    "note": "In the first example s[ 1; 2] = 12 and s[ 3; 3] = 5 , 12+ 5= 17 . In the second example s[ 2; 3] = 54 and s[ 4; 6] = 471 , 54+ 471= 525 . In the third example s[ 1; 1] = 2 and s[ 2; 2] = 3 , 2+ 3= 5 . In the fourth example s[ 2; 7] = 218633 and s[ 8; 13] = 757639 , 218633+ 757639= 976272 .",
    "topics": [
      "hashing",
      "math",
      "string suffix structures",
      "strings"
    ],
    "id": "1598G"
  },
  {
    "title": "Staircases",
    "url": "https://codeforces.com/problemset/problem/1598/E",
    "history": "You are given a matrix, consisting of n rows and m columns. The rows are numbered top to bottom, the columns are numbered left to right. Each cell of the matrix can be either free or locked. Let' s call a path in the matrix a staircase if it: starts and ends in the free cell; visits only free cells; has one of the two following structures: the second cell is 1 to the right from the first one, the third cell is 1 to the bottom from the second one, the fourth cell is 1 to the right from the third one, and so on; the second cell is 1 to the bottom from the first one, the third cell is 1 to the right from the second one, the fourth cell is 1 to the bottom from the third one, and so on. In particular, a path, consisting of a single cell, is considered to be a staircase. Here are some examples of staircases: Initially all the cells of the matrix are free. You have to process q queries, each of them flips the state of a single cell. So, if a cell is currently free, it makes it locked, and if a cell is currently locked, it makes it free. Print the number of different staircases after each query. Two staircases are considered different if there exists such a cell that appears in one path and doesn' t appear in the other path.",
    "input": "The first line contains three integers n , m and q ( 1 \u2264 n, m \u2264 1000 ; 1 \u2264 q \u2264 10^ 4 ) \u2014 the sizes of the matrix and the number of queries. Each of the next q lines contains two integers x and y ( 1 \u2264 x \u2264 n ; 1 \u2264 y \u2264 m ) \u2014 the description of each query.",
    "output": "Print q integers \u2014 the i - th value should be equal to the number of different staircases after i queries. Two staircases are considered different if there exists such a cell that appears in one path and doesn' t appear in the other path.",
    "note": "",
    "topics": [
      "brute force",
      "combinatorics",
      "data structures",
      "dfs and similar",
      "dp",
      "implementation",
      "math"
    ],
    "id": "1598E"
  },
  {
    "title": "Training Session",
    "url": "https://codeforces.com/problemset/problem/1598/D",
    "history": "Monocarp is the coach of the Berland State University programming teams. He decided to compose a problemset for a training session for his teams. Monocarp has n problems that none of his students have seen yet. The i - th problem has a topic a_ i ( an integer from 1 to n ) and a difficulty b_ i ( an integer from 1 to n ) . All problems are different, that is, there are no two tasks that have the same topic and difficulty at the same time. Monocarp decided to select exactly 3 problems from n problems for the problemset. The problems should satisfy at least one of two conditions ( possibly, both) : the topics of all three selected problems are different; the difficulties of all three selected problems are different. Your task is to determine the number of ways to select three problems for the problemset.",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 50000 ) \u2014 the number of testcases. The first line of each testcase contains an integer n ( 3 \u2264 n \u2264 2 \u00b7 10^ 5 ) \u2014 the number of problems that Monocarp have. In the i - th of the following n lines, there are two integers a_ i and b_ i ( 1 \u2264 a_ i, b_ i \u2264 n ) \u2014 the topic and the difficulty of the i - th problem. It is guaranteed that there are no two problems that have the same topic and difficulty at the same time. The sum of n over all testcases doesn' t exceed 2 \u00b7 10^ 5 .",
    "output": "Print the number of ways to select three training problems that meet either of the requirements described in the statement.",
    "note": "In the first example, you can take the following sets of three problems: problems 1 , 2 , 4 ; problems 1 , 3 , 4 ; problems 2 , 3 , 4 . Thus, the number of ways is equal to three.",
    "topics": [
      "combinatorics",
      "data structures",
      "geometry",
      "implementation",
      "math"
    ],
    "id": "1598D"
  },
  {
    "title": "Delete Two Elements",
    "url": "https://codeforces.com/problemset/problem/1598/C",
    "history": "Monocarp has got an array a consisting of n integers. Let' s denote k as the mathematic mean of these elements ( note that it' s possible that k is not an integer) . The mathematic mean of an array of n elements is the sum of elements divided by the number of these elements ( i. e. sum divided by n ) . Monocarp wants to delete exactly two elements from a so that the mathematic mean of the remaining ( n - 2) elements is still equal to k . Your task is to calculate the number of pairs of positions [ i, j] ( i < j ) such that if the elements on these positions are deleted, the mathematic mean of ( n - 2) remaining elements is equal to k ( that is, it is equal to the mathematic mean of n elements of the original array a ) .",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of testcases. The first line of each testcase contains one integer n ( 3 \u2264 n \u2264 2 \u00b7 10^ 5 ) \u2014 the number of elements in the array. The second line contains a sequence of integers a_ 1, a_ 2, . . . , a_ n ( 0 \u2264 a_ i \u2264 10^ 9 ) , where a_ i is the i - th element of the array. The sum of n over all testcases doesn' t exceed 2 \u00b7 10^ 5 .",
    "output": "Print one integer \u2014 the number of pairs of positions [ i, j] ( i < j ) such that if the elements on these positions are deleted, the mathematic mean of ( n - 2) remaining elements is equal to k ( that is, it is equal to the mathematic mean of n elements of the original array a ) .",
    "note": "In the first example, any pair of elements can be removed since all of them are equal. In the second example, there is no way to delete two elements so the mathematic mean doesn' t change. In the third example, it is possible to delete the elements on positions 1 and 3 , or the elements on positions 4 and 5 .",
    "topics": [
      "data structures",
      "dp",
      "implementation",
      "math",
      "two pointers"
    ],
    "id": "1598C"
  },
  {
    "title": "Ideal Farm",
    "url": "https://codeforces.com/problemset/problem/1594/F",
    "history": "Theofanis decided to visit his uncle' s farm. There are s animals and n animal pens on the farm. For utility purpose, animal pens are constructed in one row. Uncle told Theofanis that a farm is lucky if you can distribute all animals in all pens in such a way that there are no empty pens and there is at least one continuous segment of pens that has exactly k animals in total. Moreover, a farm is ideal if it' s lucky for any distribution without empty pens. Neither Theofanis nor his uncle knows if their farm is ideal or not. Can you help them to figure it out?",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 5 ) \u2014 the number of test cases. The first and only line of each test case contains three integers s , n , and k ( 1 \u2264 s, n, k \u2264 10^ 18 ; n \u2264 s ) .",
    "output": "For each test case, print YES ( case- insensitive) , if the farm is ideal, or NO ( case- insensitive) otherwise.",
    "note": "For the first and the second test case, the only possible combination is [ 1] so there always will be a subsegment with 1 animal but not with 2 animals.",
    "topics": [
      "constructive algorithms",
      "math"
    ],
    "id": "1594F"
  },
  {
    "title": "Rubik's Cube Coloring (hard version)",
    "url": "https://codeforces.com/problemset/problem/1594/E2",
    "history": "It is the hard version of the problem. The difference is that in this version, there are nodes with already chosen colors. Theofanis is starving, and he wants to eat his favorite food, sheftalia. However, he should first finish his homework. Can you help him with this problem? You have a perfect binary tree of 2^ k - 1 nodes \u2014 a binary tree where all vertices i from 1 to 2^ k - 1 - 1 have exactly two children: vertices 2i and 2i + 1 . Vertices from 2^ k - 1 to 2^ k - 1 don' t have any children. You want to color its vertices with the 6 Rubik' s cube colors ( White, Green, Red, Blue, Orange and Yellow) . Let' s call a coloring good when all edges connect nodes with colors that are neighboring sides in the Rubik' s cube. A picture of Rubik' s cube and its 2D map. More formally: a white node can not be neighboring with white and yellow nodes; a yellow node can not be neighboring with white and yellow nodes; a green node can not be neighboring with green and blue nodes; a blue node can not be neighboring with green and blue nodes; a red node can not be neighboring with red and orange nodes; an orange node can not be neighboring with red and orange nodes; However, there are n special nodes in the tree, colors of which are already chosen. You want to calculate the number of the good colorings of the binary tree. Two colorings are considered different if at least one node is colored with a different color. The answer may be too large, so output the answer modulo 10^ 9+ 7 .",
    "input": "The first line contains the integers k ( 1 \u2264 k \u2264 60 ) \u2014 the number of levels in the perfect binary tree you need to color. The second line contains the integer n ( 1 \u2264 n \u2264min( 2^ k - 1, 2000) ) \u2014 the number of nodes, colors of which are already chosen. The next n lines contains integer v ( 1 \u2264 v \u2264 2^ k - 1 ) and string s \u2014 the index of the node and the color of the node ( s is one of the white, yellow, green, blue, red and orange) . It is guaranteed that each node v appears in the input at most once.",
    "output": "Print one integer \u2014 the number of the different colorings modulo 10^ 9+ 7 .",
    "note": "In the picture below, you can see one of the correct colorings of the first test example.",
    "topics": [
      "brute force",
      "dp",
      "implementation",
      "math",
      "trees"
    ],
    "id": "1594E2"
  },
  {
    "title": "Rubik's Cube Coloring (easy version)",
    "url": "https://codeforces.com/problemset/problem/1594/E1",
    "history": "It is the easy version of the problem. The difference is that in this version, there are no nodes with already chosen colors. Theofanis is starving, and he wants to eat his favorite food, sheftalia. However, he should first finish his homework. Can you help him with this problem? You have a perfect binary tree of 2^ k - 1 nodes \u2014 a binary tree where all vertices i from 1 to 2^ k - 1 - 1 have exactly two children: vertices 2i and 2i + 1 . Vertices from 2^ k - 1 to 2^ k - 1 don' t have any children. You want to color its vertices with the 6 Rubik' s cube colors ( White, Green, Red, Blue, Orange and Yellow) . Let' s call a coloring good when all edges connect nodes with colors that are neighboring sides in the Rubik' s cube. A picture of Rubik' s cube and its 2D map. More formally: a white node can not be neighboring with white and yellow nodes; a yellow node can not be neighboring with white and yellow nodes; a green node can not be neighboring with green and blue nodes; a blue node can not be neighboring with green and blue nodes; a red node can not be neighboring with red and orange nodes; an orange node can not be neighboring with red and orange nodes; You want to calculate the number of the good colorings of the binary tree. Two colorings are considered different if at least one node is colored with a different color. The answer may be too large, so output the answer modulo 10^ 9+ 7 .",
    "input": "The first and only line contains the integers k ( 1 \u2264 k \u2264 60 ) \u2014 the number of levels in the perfect binary tree you need to color.",
    "output": "Print one integer \u2014 the number of the different colorings modulo 10^ 9+ 7 .",
    "note": "In the picture below, you can see one of the correct colorings of the first example.",
    "topics": [
      "combinatorics",
      "math"
    ],
    "id": "1594E1"
  },
  {
    "title": "Make Them Equal",
    "url": "https://codeforces.com/problemset/problem/1594/C",
    "history": "Theofanis has a string s_ 1 s_ 2 . . . s_ n and a character c . He wants to make all characters of the string equal to c using the minimum number of operations. In one operation he can choose a number x ( 1 \u2264 x \u2264 n ) and for every position i , where i is not divisible by x , replace s_ i with c . Find the minimum number of operations required to make all the characters equal to c and the x - s that he should use in his operations.",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. The first line of each test case contains the integer n ( 3 \u2264 n \u2264 3 \u00b7 10^ 5 ) and a lowercase Latin letter c \u2014 the length of the string s and the character the resulting string should consist of. The second line of each test case contains a string s of lowercase Latin letters \u2014 the initial string. It is guaranteed that the sum of n over all test cases does not exceed 3 \u00b7 10^ 5 .",
    "output": "For each test case, firstly print one integer m \u2014 the minimum number of operations required to make all the characters equal to c . Next, print m integers x_ 1, x_ 2, . . . , x_ m ( 1 \u2264 x_ j \u2264 n ) \u2014 the x - s that should be used in the order they are given. It can be proved that under given constraints, an answer always exists. If there are multiple answers, print any.",
    "note": "Let' s describe what happens in the third test case: x_ 1 = 2 : we choose all positions that are not divisible by 2 and replace them, i. e. bzyx \u2192 bzbx; x_ 2 = 3 : we choose all positions that are not divisible by 3 and replace them, i. e. bzbx \u2192 bbbb.",
    "topics": [
      "brute force",
      "greedy",
      "math",
      "strings"
    ],
    "id": "1594C"
  },
  {
    "title": "Special Numbers",
    "url": "https://codeforces.com/problemset/problem/1594/B",
    "history": "Theofanis really likes sequences of positive integers, thus his teacher ( Yeltsa Kcir) gave him a problem about a sequence that consists of only special numbers. Let' s call a positive number special if it can be written as a sum of different non- negative powers of n . For example, for n = 4 number 17 is special, because it can be written as 4^ 0 + 4^ 2 = 1 + 16 = 17 , but 9 is not. Theofanis asks you to help him find the k - th special number if they are sorted in increasing order. Since this number may be too large, output it modulo 10^ 9+ 7 .",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. The first and only line of each test case contains two integers n and k ( 2 \u2264 n \u2264 10^ 9 ; 1 \u2264 k \u2264 10^ 9 ) .",
    "output": "For each test case, print one integer \u2014 the k - th special number in increasing order modulo 10^ 9+ 7 .",
    "note": "For n = 3 the sequence is [ 1, 3, 4, 9. . . ]",
    "topics": [
      "bitmasks",
      "math"
    ],
    "id": "1594B"
  },
  {
    "title": "Consecutive Sum Riddle",
    "url": "https://codeforces.com/problemset/problem/1594/A",
    "history": "Theofanis has a riddle for you and if you manage to solve it, he will give you a Cypriot snack halloumi for free ( Cypriot cheese) . You are given an integer n . You need to find two integers l and r such that - 10^ 18\u2264 l < r \u2264 10^ 18 and l + ( l + 1) + . . . + ( r - 1) + r = n .",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. The first and only line of each test case contains a single integer n ( 1 \u2264 n \u2264 10^ 18 ) .",
    "output": "For each test case, print the two integers l and r such that - 10^ 18\u2264 l < r \u2264 10^ 18 and l + ( l + 1) + . . . + ( r - 1) + r = n . It can be proven that an answer always exists. If there are multiple answers, print any.",
    "note": "In the first test case, 0 + 1 = 1 . In the second test case, ( - 1) + 0 + 1 + 2 = 2 . In the fourth test case, 1 + 2 + 3 = 6 . In the fifth test case, 18 + 19 + 20 + 21 + 22 = 100 . In the sixth test case, ( - 2) + ( - 1) + 0 + 1 + 2 + 3 + 4 + 5 + 6 + 7 = 25 .",
    "topics": [
      "math"
    ],
    "id": "1594A"
  },
  {
    "title": "Red-Black Number",
    "url": "https://codeforces.com/problemset/problem/1593/F",
    "history": "It is given a non- negative integer x , the decimal representation of which contains n digits. You need to color each its digit in red or black, so that the number formed by the red digits is divisible by A , and the number formed by the black digits is divisible by B . At least one digit must be colored in each of two colors. Consider, the count of digits colored in red is r and the count of digits colored in black is b . Among all possible colorings of the given number x , you need to output any such that the value of | r - b| is the minimum possible. Note that the number x and the numbers formed by digits of each color, may contain leading zeros. Example of painting a number for A = 3 and B = 13 The figure above shows an example of painting the number x = 02165 of n = 5 digits for A = 3 and B = 13 . The red digits form the number 015 , which is divisible by 3 , and the black ones \u2014 26 , which is divisible by 13 . Note that the absolute value of the difference between the counts of red and black digits is 1 , it is impossible to achieve a smaller value.",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 10 ) \u2014 the number of test cases. Then t test cases follow. Each test case consists of two lines. The first line contains three integers n , A , B ( 2 \u2264 n \u2264 40 , 1 \u2264 A, B \u2264 40 ) . The second line contains a non- negative integer x containing exactly n digits and probably containing leading zeroes.",
    "output": "For each test case, output in a separate line: - 1 if the desired coloring does not exist; a string s of n characters, each of them is a letter ' R' or ' B' . If the i - th digit of the number x is colored in red, then the i - th character of the string s must be the letter ' R' , otherwise the letter ' B' . The number formed by digits colored red should divisible by A . The number formed by digits colored black should divisible by B . The value | r- b| should be minimal, where r is the count of red digits, b is the count of black digits. If there are many possible answers, print any of them.",
    "note": "The first test case is considered in the statement. In the second test case, there are no even digits, so it is impossible to form a number from its digits that is divisible by 2 . In the third test case, each coloring containing at least one red and one black digit is possible, so you can color 4 digits in red and 4 in black ( | 4 - 4| = 0 , it is impossible to improve the result) . In the fourth test case, there is a single desired coloring.",
    "topics": [
      "dfs and similar",
      "dp",
      "implementation",
      "math",
      "meet-in-the-middle"
    ],
    "id": "1593F"
  },
  {
    "title": "Half of Same",
    "url": "https://codeforces.com/problemset/problem/1593/D2",
    "history": "This problem is a complicated version of D1, but it has significant differences, so read the whole statement. Polycarp has an array of n ( n is even) integers a_ 1, a_ 2, . . . , a_ n . Polycarp conceived of a positive integer k . After that, Polycarp began performing the following operations on the array: take an index i ( 1 \u2264 i \u2264 n ) and reduce the number a_ i by k . After Polycarp performed some ( possibly zero) number of such operations, it turned out that at least half of the numbers in the array became the same. Find the maximum k at which such a situation is possible, or print - 1 if such a number can be arbitrarily large.",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 10 ) \u2014 the number of test cases. Then t test cases follow. Each test case consists of two lines. The first line contains an even integer n ( 4 \u2264 n \u2264 40 ) ( n is even) . The second line contains n integers a_ 1, a_ 2, . . . a_ n ( - 10^ 6 \u2264 a_ i \u2264 10^ 6 ) . It is guaranteed that the sum of all n specified in the given test cases does not exceed 100 .",
    "output": "For each test case output on a separate line an integer k ( k \u2265 1 ) \u2014 the maximum possible number that Polycarp used in operations on the array, or - 1 , if such a number can be arbitrarily large.",
    "note": "",
    "topics": [
      "brute force",
      "math",
      "number theory"
    ],
    "id": "1593D2"
  },
  {
    "title": "All are Same",
    "url": "https://codeforces.com/problemset/problem/1593/D1",
    "history": "This problem is a simplified version of D2, but it has significant differences, so read the whole statement. Polycarp has an array of n ( n is even) integers a_ 1, a_ 2, . . . , a_ n . Polycarp conceived of a positive integer k . After that, Polycarp began performing the following operations on the array: take an index i ( 1 \u2264 i \u2264 n ) and reduce the number a_ i by k . After Polycarp performed some ( possibly zero) number of such operations, it turned out that all numbers in the array became the same. Find the maximum k at which such a situation is possible, or print - 1 if such a number can be arbitrarily large.",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 10 ) \u2014 the number of test cases. Then t test cases follow. Each test case consists of two lines. The first line contains an even integer n ( 4 \u2264 n \u2264 40 ) ( n is even) . The second line contains n integers a_ 1, a_ 2, . . . a_ n ( - 10^ 6 \u2264 a_ i \u2264 10^ 6 ) . It is guaranteed that the sum of all n specified in the given test cases does not exceed 100 .",
    "output": "For each test case output on a separate line an integer k ( k \u2265 1 ) \u2014 the maximum possible number that Polycarp used in operations on the array, or - 1 , if such a number can be arbitrarily large.",
    "note": "",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "1593D1"
  },
  {
    "title": "Make it Divisible by 25",
    "url": "https://codeforces.com/problemset/problem/1593/B",
    "history": "It is given a positive integer n . In 1 move, one can select any single digit and remove it ( i. e. one selects some position in the number and removes the digit located at this position) . The operation cannot be performed if only one digit remains. If the resulting number contains leading zeroes, they are automatically removed. E. g. if one removes from the number 32925 the 3 - rd digit, the resulting number will be 3225 . If one removes from the number 20099050 the first digit, the resulting number will be 99050 ( the 2 zeroes going next to the first digit are automatically removed) . What is the minimum number of steps to get a number such that it is divisible by 25 and positive? It is guaranteed that, for each n occurring in the input, the answer exists. It is guaranteed that the number n has no leading zeros.",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. Then t test cases follow. Each test case consists of one line containing one integer n ( 25 \u2264 n \u2264 10^ 18 ) . It is guaranteed that, for each n occurring in the input, the answer exists. It is guaranteed that the number n has no leading zeros.",
    "output": "For each test case output on a separate line an integer k ( k \u2265 0 ) \u2014 the minimum number of steps to get a number such that it is divisible by 25 and positive.",
    "note": "In the first test case, it is already given a number divisible by 25 . In the second test case, we can remove the digits 1 , 3 , and 4 to get the number 75 . In the third test case, it' s enough to remove the last digit to get the number 325 . In the fourth test case, we can remove the three last digits to get the number 50 . In the fifth test case, it' s enough to remove the digits 4 and 7 .",
    "topics": [
      "dfs and similar",
      "dp",
      "greedy",
      "math",
      "math"
    ],
    "id": "1593B"
  },
  {
    "title": "Elections",
    "url": "https://codeforces.com/problemset/problem/1593/A",
    "history": "The elections in which three candidates participated have recently ended. The first candidate received a votes, the second one received b votes, the third one received c votes. For each candidate, solve the following problem: how many votes should be added to this candidate so that he wins the election ( i. e. the number of votes for this candidate was strictly greater than the number of votes for any other candidate) ? Please note that for each candidate it is necessary to solve this problem independently, i. e. the added votes for any candidate do not affect the calculations when getting the answer for the other two candidates.",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. Then t test cases follow. Each test case consists of one line containing three integers a , b , and c ( 0 \u2264 a, b, c \u2264 10^ 9 ) .",
    "output": "For each test case, output in a separate line three integers A , B , and C ( A, B, C \u2265 0 ) separated by spaces \u2014 the answers to the problem for the first, second, and third candidate, respectively.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": "1593A"
  },
  {
    "title": "Bored Bakry",
    "url": "https://codeforces.com/problemset/problem/1592/E",
    "history": "Bakry got bored of solving problems related to xor, so he asked you to solve this problem for him. You are given an array a of n integers [ a_ 1, a_ 2, . . . , a_ n] . Let' s call a subarray a_ l, a_ l+ 1, a_ l+ 2, . . . , a_ r good if a_ l & a_ l+ 1 & a_ l+ 2 . . . & a_ r > a_ l \u2295 a_ l+ 1\u2295 a_ l+ 2. . . \u2295 a_ r , where \u2295 denotes the bitwise XOR operation and & denotes the bitwise AND operation. Find the length of the longest good subarray of a , or determine that no such subarray exists.",
    "input": "The first line contains a single integer n ( 1 \u2264 n \u2264 10^ 6 ) \u2014 the length of the array. The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 6 ) \u2014 elements of the array.",
    "output": "Print a single integer \u2014 the length of the longest good subarray. If there are no good subarrays, print 0 .",
    "note": "In the first case, the answer is 2 , as the whole array is good: 5 & 6 = 4 > 5 \u2295 6 = 3 . In the third case, the answer is 4 , and one of the longest good subarrays is [ a_ 2, a_ 3, a_ 4, a_ 5] : 1& 3 & 3 & 1 = 1 > 1\u2295 3 \u2295 3\u2295 1 = 0 .",
    "topics": [
      "bitmasks",
      "greedy",
      "math",
      "two pointers"
    ],
    "id": "1592E"
  },
  {
    "title": "Hemose in ICPC ?",
    "url": "https://codeforces.com/problemset/problem/1592/D",
    "history": "This is an interactive problem! In the last regional contest Hemose, ZeyadKhattab and YahiaSherif \u2014 members of the team Carpe Diem \u2014 did not qualify to ICPC because of some unknown reasons. Hemose was very sad and had a bad day after the contest, but ZeyadKhattab is very wise and knows Hemose very well, and does not want to see him sad. Zeyad knows that Hemose loves tree problems, so he gave him a tree problem with a very special device. Hemose has a weighted tree with n nodes and n- 1 edges. Unfortunately, Hemose doesn' t remember the weights of edges. Let' s define Dist( u, v) for u= \u0338 v as the greatest common divisor of the weights of all edges on the path from node u to node v . Hemose has a special device. Hemose can give the device a set of nodes, and the device will return the largest Dist between any two nodes from the set. More formally, if Hemose gives the device a set S of nodes, the device will return the largest value of Dist( u, v) over all pairs ( u, v) with u , v \u2208 S and u = \u0338 v . Hemose can use this Device at most 12 times, and wants to find any two distinct nodes a , b , such that Dist( a, b) is maximum possible. Can you help him? InteractionBegin the interaction from reading a single integer n ( 2 \u2264 n \u2264 10^ 3 ) \u2014 the number of nodes in the tree. Next, read n- 1 lines. The i - th of the next n- 1 lines contains two integers u_ i and v_ i ( 1 \u2264 u_ i, v_ i \u2264 n , u_ i= \u0338 v_ i ) , which means that there' s an edge between nodes u_ i and v_ i . It' s guaranteed that weights of edges were \u2264 10^ 9 . It is guaranteed that the given graph is a tree. Now you may begin asking queries. To ask a query about a set of k nodes v_ 1, v_ 2, . . . , v_ k ( 2 \u2264 k \u2264 n , 1 \u2264 v_ i \u2264 n , all v_ i are distinct) , output: ? k v_ 1 v_ 2 . . . v_ k You will then receive an integer x , the largest Dist( v_ i, v_ j) over 1 \u2264 i, j \u2264 k with i = \u0338 j . When you have found a and b ( 1 \u2264 a, b \u2264 n) , a= \u0338 b ) such that Dist( a, b) is the maximum possible, print the answer in the following format: ! a b Outputting answer doesn' t count towards the limit of 12 queries. If there are several pairs ( a, b) with the same largest Dist( a, b) , you can output any. After printing a query do not forget to output the end of line and flush the output. Otherwise, you will get Idleness limit exceeded. To do this, use: fflush( stdout) or cout. flush( ) in C+ + ; System. out. flush( ) in Java; flush( output) in Pascal; stdout. flush( ) in Python; see the documentation for other languages. HacksTo hack a solution, use the following format. The first line should contain a single integer n ( 2 \u2264 n \u2264 10^ 3) \u2014 the number of nodes. The i - th of the next n- 1 lines should contain three integers u_ i , v_ i , w_ i ( 1 \u2264 u_ i, v_ i \u2264 n , u_ i v_ i , 1 \u2264 w \u2264 10^ 9 ) , which means that there' s an edge between nodes u_ i and v_ i with weight w_ i . These n- 1 edges must form a tree.",
    "input": "",
    "output": "",
    "note": "The tree in the first sample:",
    "topics": [
      "binary search",
      "dfs and similar",
      "implementation",
      "interactive",
      "math",
      "number theory",
      "trees"
    ],
    "id": "1592D"
  },
  {
    "title": "Hemose Shopping",
    "url": "https://codeforces.com/problemset/problem/1592/B",
    "history": "Hemose was shopping with his friends Samez, AhmedZ, AshrafEzz, TheSawan and O_ E in Germany. As you know, Hemose and his friends are problem solvers, so they are very clever. Therefore, they will go to all discount markets in Germany. Hemose has an array of n integers. He wants Samez to sort the array in the non- decreasing order. Since it would be a too easy problem for Samez, Hemose allows Samez to use only the following operation: Choose indices i and j such that 1 \u2264 i, j \u2264 n , and | i - j | \u2265 x . Then, swap elements a_ i and a_ j . Can you tell Samez if there' s a way to sort the array in the non- decreasing order by using the operation written above some finite number of times ( possibly 0 ) ?",
    "input": "Each test contains multiple test cases. The first line contains the number of test cases t ( 1 \u2264 t \u2264 10^ 5) . Description of the test cases follows. The first line of each test case contains two integers n and x ( 1 \u2264 x \u2264 n \u2264 10^ 5) . The second line of each test case contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 9) . It is guaranteed that the sum of n over all test cases doesn' t exceed 2 \u00b7 10^ 5 .",
    "output": "For each test case, you should output a single string. If Samez can sort the array in non- decreasing order using the operation written above, output \" YES\" ( without quotes) . Otherwise, output \" NO\" ( without quotes) . You can print each letter of \" YES\" and \" NO\" in any case ( upper or lower) .",
    "note": "In the first test case, you can' t do any operations. In the second test case, the array is already sorted. In the third test case, you can do the operations as follows: [ 5, 1, 2, 3, 4] , swap( a_ 1, a_ 3) [ 2, 1, 5, 3, 4] , swap( a_ 2, a_ 5) [ 2, 4, 5, 3, 1] , swap( a_ 2, a_ 4) [ 2, 3, 5, 4, 1] , swap( a_ 1, a_ 5) [ 1, 3, 5, 4, 2] , swap( a_ 2, a_ 5) [ 1, 2, 5, 4, 3] , swap( a_ 3, a_ 5) [ 1, 2, 3, 4, 5] ( Here swap( a_ i, a_ j) refers to swapping elements at positions i , j ) .",
    "topics": [
      "constructive algorithms",
      "dsu",
      "math",
      "sortings"
    ],
    "id": "1592B"
  },
  {
    "title": "Gamer Hemose",
    "url": "https://codeforces.com/problemset/problem/1592/A",
    "history": "One day, Ahmed_ Hossam went to Hemose and said \" Let' s solve a gym contest! \" . Hemose didn' t want to do that, as he was playing Valorant, so he came up with a problem and told it to Ahmed to distract him. Sadly, Ahmed can' t solve it. . . Could you help him? There is an Agent in Valorant, and he has n weapons. The i - th weapon has a damage value a_ i , and the Agent will face an enemy whose health value is H . The Agent will perform one or more moves until the enemy dies. In one move, he will choose a weapon and decrease the enemy' s health by its damage value. The enemy will die when his health will become less than or equal to 0 . However, not everything is so easy: the Agent can' t choose the same weapon for 2 times in a row. What is the minimum number of times that the Agent will need to use the weapons to kill the enemy?",
    "input": "Each test contains multiple test cases. The first line contains the number of test cases t ( 1 \u2264 t \u2264 10^ 5) . Description of the test cases follows. The first line of each test case contains two integers n and H ( 2 \u2264 n \u2264 10^ 3, 1 \u2264 H \u2264 10^ 9) \u2014 the number of available weapons and the initial health value of the enemy. The second line of each test case contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 9) \u2014 the damage values of the weapons. It' s guaranteed that the sum of n over all test cases doesn' t exceed 2 \u00b7 10^ 5 .",
    "output": "For each test case, print a single integer \u2014 the minimum number of times that the Agent will have to use the weapons to kill the enemy.",
    "note": "In the first test case, the Agent can use the second weapon, making health value of the enemy equal to 4- 7= - 3 . - 3 \u2264 0 , so the enemy is dead, and using weapon 1 time was enough. In the second test case, the Agent can use the first weapon first, and then the second one. After this, the health of enemy will drop to 6- 4- 2 = 0 , meaning he would be killed after using weapons 2 times. In the third test case, the Agent can use the weapons in order ( third, first, third) , decreasing the health value of enemy to 11 - 7 - 2 - 7 = - 5 after using the weapons 3 times. Note that we can' t kill the enemy by using the third weapon twice, as even though 11- 7- 7< 0 , it' s not allowed to use the same weapon twice in a row.",
    "topics": [
      "binary search",
      "greedy",
      "math",
      "sortings"
    ],
    "id": "1592A"
  },
  {
    "title": "Omkar and Mosaic",
    "url": "https://codeforces.com/problemset/problem/1586/I",
    "history": "Omkar is creating a mosaic using colored square tiles, which he places in an n \u00d7 n grid. When the mosaic is complete, each cell in the grid will have either a glaucous or sinoper tile. However, currently he has only placed tiles in some cells. A completed mosaic will be a mastapeece if and only if each tile is adjacent to exactly 2 tiles of the same color ( 2 tiles are adjacent if they share a side. ) Omkar wants to fill the rest of the tiles so that the mosaic becomes a mastapeece. Now he is wondering, is the way to do this unique, and if it is, what is it?",
    "input": "The first line contains a single integer n ( 1 \u2264 n \u2264 2000 ) . Then follow n lines with n characters in each line. The i - th character in the j - th line corresponds to the cell in row i and column j of the grid, and will be S if Omkar has placed a sinoper tile in this cell, G if Omkar has placed a glaucous tile, . if it' s empty.",
    "output": "On the first line, print UNIQUE if there is a unique way to get a mastapeece, NONE if Omkar cannot create any, and MULTIPLE if there is more than one way to do so. All letters must be uppercase. If you print UNIQUE, then print n additional lines with n characters in each line, such that the i - th character in the j^ th line is S if the tile in row i and column j of the mastapeece is sinoper, and G if it is glaucous.",
    "note": "For the first test case, Omkar can make the mastapeecesSSSSSGGSSGGSSSSSand SSGGSSGGGGSSGGSS. For the second test case, it can be proven that it is impossible for Omkar to add tiles to create a mastapeece. For the third case, it can be proven that the given mastapeece is the only mastapeece Omkar can create by adding tiles. For the fourth test case, it' s clearly impossible for the only tile in any mosaic Omkar creates to be adjacent to two tiles of the same color, as it will be adjacent to 0 tiles total.",
    "topics": [
      "combinatorics",
      "constructive algorithms",
      "math"
    ],
    "id": "1586I"
  },
  {
    "title": "Non-equal Neighbours",
    "url": "https://codeforces.com/problemset/problem/1585/F",
    "history": "You are given an array of n positive integers a_ 1, a_ 2, . . . , a_ n . Your task is to calculate the number of arrays of n positive integers b_ 1, b_ 2, . . . , b_ n such that: 1 \u2264 b_ i \u2264 a_ i for every i ( 1 \u2264 i \u2264 n ) , and b_ i = \u0338 b_ i+ 1 for every i ( 1 \u2264 i \u2264 n - 1 ) . The number of such arrays can be very large, so print it modulo 998 244 353 .",
    "input": "The first line contains a single integer n ( 1 \u2264 n \u2264 2 \u00b7 10^ 5 ) \u2014 the length of the array a . The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 9 ) .",
    "output": "Print the answer modulo 998 244 353 in a single line.",
    "note": "In the first test case possible arrays are [ 1, 2, 1] and [ 2, 1, 2] . In the second test case possible arrays are [ 1, 2] , [ 1, 3] , [ 2, 1] and [ 2, 3] .",
    "topics": [
      "combinatorics",
      "dp",
      "math"
    ],
    "id": "1585F"
  },
  {
    "title": "Yet Another Sorting Problem",
    "url": "https://codeforces.com/problemset/problem/1585/D",
    "history": "Petya has an array of integers a_ 1, a_ 2, . . . , a_ n . He only likes sorted arrays. Unfortunately, the given array could be arbitrary, so Petya wants to sort it. Petya likes to challenge himself, so he wants to sort array using only 3 - cycles. More formally, in one operation he can pick 3 pairwise distinct indices i , j , and k ( 1 \u2264 i, j, k \u2264 n ) and apply i \u2192 j \u2192 k \u2192 i cycle to the array a . It simultaneously places a_ i on position j , a_ j on position k , and a_ k on position i , without changing any other element. For example, if a is [ 10, 50, 20, 30, 40, 60] and he chooses i = 2 , j = 1 , k = 5 , then the array becomes [ 50, 40, 20, 30, 10, 60] . Petya can apply arbitrary number of 3 - cycles ( possibly, zero) . You are to determine if Petya can sort his array a , i. e. make it non- decreasing.",
    "input": "Each test contains multiple test cases. The first line contains the number of test cases t ( 1 \u2264 t \u2264 5 \u00b7 10^ 5 ) . Description of the test cases follows. The first line of each test case contains a single integer n ( 1 \u2264 n \u2264 5 \u00b7 10^ 5 ) \u2014 the length of the array a . The second line of each test case contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 n ) . It is guaranteed that the sum of n over all test cases does not exceed 5 \u00b7 10^ 5 .",
    "output": "For each test case, print \" YES\" ( without quotes) if Petya can sort the array a using 3 - cycles, and \" NO\" ( without quotes) otherwise. You can print each letter in any case ( upper or lower) .",
    "note": "In the 6 - th test case Petya can use the 3 - cycle 1 \u2192 3 \u2192 2 \u2192 1 to sort the array. In the 7 - th test case Petya can apply 1 \u2192 3 \u2192 2 \u2192 1 and make a = [ 1, 4, 2, 3] . Then he can apply 2 \u2192 4 \u2192 3 \u2192 2 and finally sort the array.",
    "topics": [
      "data structures",
      "math"
    ],
    "id": "1585D"
  },
  {
    "title": "Guess the Permutation",
    "url": "https://codeforces.com/problemset/problem/1584/D",
    "history": "This is an interactive problem. Jury initially had a sequence a of length n , such that a_ i = i . The jury chose three integers i , j , k , such that 1 \u2264 i < j < k \u2264 n , j - i > 1 . After that, Jury reversed subsegments [ i, j - 1] and [ j, k] of the sequence a . Reversing a subsegment [ l, r] of the sequence a means reversing the order of elements a_ l, a_ l+ 1, . . . , a_ r in the sequence, i. e. a_ l is swapped with a_ r , a_ l+ 1 is swapped with a_ r- 1 , etc. You are given the number n and you should find i , j , k after asking some questions. In one question you can choose two integers l and r ( 1 \u2264 l \u2264 r \u2264 n ) and ask the number of inversions on the subsegment [ l, r] of the sequence a . You will be given the number of pairs ( i, j) such that l \u2264 i < j \u2264 r , and a_ i > a_ j . Find the chosen numbers i , j , k after at most 40 questions. The numbers i , j , and k are fixed before the start of your program and do not depend on your queries. InteractionTo ask number of inversions on a subsegment [ l, r] , print \" ? l r\" , where ( 1 \u2264 l \u2264 r \u2264 n ) . You can ask at most 40 questions in each test case. As a result you should read a single integer x . If x = - 1 , your program made an invalid question or you exceeded the number of questions for that test case. Your program should terminate immediately ( otherwise it can get any verdict instead of \" Wrong Answer\" ) . Otherwise x is equal to the number of inversions on the subsegment [ l, r] of the sequence a . To give the answer, print \" ! i j k\" , where i , j , k are the numbers you found. You should continue solving the next test cases or terminate the program after that. After printing a question or an answer do not forget to print the end of line and flush the output. Otherwise, you will get an \" Idleness limit exceeded\" verdict. To do this, use: fflush( stdout) or cout. flush( ) in C+ + ; System. out. flush( ) in Java; flush( output) in Pascal; stdout. flush( ) in Python; See the documentation for other languages. HacksTo make a hack, use the following format: The first line contains a single integer t ( 1 \u2264 t \u2264 100 ) \u2014 the number of test cases. Each of the next t lines contains four integers n , i , j , k ( 4 \u2264 n \u2264 10^ 9 , 1 \u2264 i < j < k \u2264 n , j - i > 1 ) .",
    "input": "Each test consists of multiple test cases. The first line contains a single integer t ( 1 \u2264 t \u2264 100 ) \u2014 the number of test cases. Description of the test cases follows. The single line of each test case contains a single integer n ( 4 \u2264 n \u2264 10^ 9 ) . After reading it you should start an interaction process by asking questions for that test case. After giving an answer you should: Terminate your program if that is the last test case. Proceed to the next test case otherwise.",
    "output": "",
    "note": "In the first test case, i = 1 , j = 3 , k = 5 , so the sequence a is [ 2, 1, 5, 4, 3] . In the second test case, i = 2 , j = 4 , k = 5 , so the sequence a is [ 1, 3, 2, 5, 4] .",
    "topics": [
      "binary search",
      "combinatorics",
      "interactive",
      "math"
    ],
    "id": "1584D"
  },
  {
    "title": "Two Arrays",
    "url": "https://codeforces.com/problemset/problem/1584/C",
    "history": "You are given two arrays of integers a_ 1, a_ 2, . . . , a_ n and b_ 1, b_ 2, . . . , b_ n . Let' s define a transformation of the array a : Choose any non- negative integer k such that 0 \u2264 k \u2264 n . Choose k distinct array indices 1 \u2264 i_ 1 < i_ 2 < . . . < i_ k \u2264 n . Add 1 to each of a_ i_ 1, a_ i_ 2, . . . , a_ i_ k , all other elements of array a remain unchanged. Permute the elements of array a in any order. Is it possible to perform some transformation of the array a exactly once, so that the resulting array is equal to b ?",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 100 ) \u2014 the number of test cases. Descriptions of test cases follow. The first line of each test case contains a single integer n ( 1 \u2264 n \u2264 100 ) \u2014 the size of arrays a and b . The second line of each test case contains n integers a_ 1, a_ 2, . . . , a_ n ( - 100 \u2264 a_ i \u2264 100 ) . The third line of each test case contains n integers b_ 1, b_ 2, . . . , b_ n ( - 100 \u2264 b_ i \u2264 100 ) .",
    "output": "For each test case, print \" YES\" ( without quotes) if it is possible to perform a transformation of the array a , so that the resulting array is equal to b . Print \" NO\" ( without quotes) otherwise. You can print each letter in any case ( upper or lower) .",
    "note": "In the first test case, we can make the following transformation: Choose k = 2 . Choose i_ 1 = 1 , i_ 2 = 2 . Add 1 to a_ 1 and a_ 2 . The resulting array is [ 0, 2, 0] . Swap the elements on the second and third positions. In the second test case there is no suitable transformation. In the third test case we choose k = 0 and do not change the order of elements.",
    "topics": [
      "greedy",
      "math",
      "sortings"
    ],
    "id": "1584C"
  },
  {
    "title": "Coloring Rectangles",
    "url": "https://codeforces.com/problemset/problem/1584/B",
    "history": "David was given a red checkered rectangle of size n \u00d7 m . But he doesn' t like it. So David cuts the original or any other rectangle piece obtained during the cutting into two new pieces along the grid lines. He can do this operation as many times as he wants. As a result, he will get a set of rectangles. Rectangles 1 \u00d7 1 are forbidden. David also knows how to paint the cells blue. He wants each rectangle from the resulting set of pieces to be colored such that any pair of adjacent cells by side ( from the same piece) have different colors. What is the minimum number of cells David will have to paint?",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 3 ) \u2014 the number of test cases. The next lines contain descriptions of test cases. The only line of each test case contains two integers n , m ( 1 \u2264 n, m \u2264 3 \u00b7 10^ 4 , n \u00b7 m \u2265 2 ) .",
    "output": "For each test case print a single integer \u2014 the minimum number of cells David will have to paint blue.",
    "note": "The following pictures show how the initial rectangle can be split and cells colored blue. In the first test case: In the second test case: In the third test case: In the fourth test case:",
    "topics": [
      "greedy",
      "math"
    ],
    "id": "1584B"
  },
  {
    "title": "Mathematical Addition",
    "url": "https://codeforces.com/problemset/problem/1584/A",
    "history": "Ivan decided to prepare for the test on solving integer equations. He noticed that all tasks in the test have the following form: You are given two positive integers u and v , find any pair of integers ( not necessarily positive) x , y , such that: x/ u + y/ v = x + y/ u + v. The solution x = 0 , y = 0 is forbidden, so you should find any solution with ( x, y) = \u0338 ( 0, 0) . Please help Ivan to solve some equations of this form.",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 3 ) \u2014 the number of test cases. The next lines contain descriptions of test cases. The only line of each test case contains two integers u and v ( 1 \u2264 u, v \u2264 10^ 9 ) \u2014 the parameters of the equation.",
    "output": "For each test case print two integers x , y \u2014 a possible solution to the equation. It should be satisfied that - 10^ 18\u2264 x, y \u2264 10^ 18 and ( x, y) = \u0338 ( 0, 0) . We can show that an answer always exists. If there are multiple possible solutions you can print any.",
    "note": "In the first test case: - 1/ 1 + 1/ 1 = 0 = - 1 + 1/ 1 + 1 . In the second test case: - 4/ 2 + 9/ 3 = 1 = - 4 + 9/ 2 + 3 . In the third test case: - 18/ 3 + 50/ 5 = 4 = - 18 + 50/ 3 + 5 . In the fourth test case: - 4/ 6 + 9/ 9 = 1/ 3 = - 4 + 9/ 6 + 9 .",
    "topics": [
      "math"
    ],
    "id": "1584A"
  },
  {
    "title": "Omkar and Time Travel",
    "url": "https://codeforces.com/problemset/problem/1583/G",
    "history": "El Psy Kongroo. Omkar is watching Steins; Gate. In Steins; Gate, Okabe Rintarou needs to complete n tasks ( 1 \u2264 n \u2264 2 \u00b7 10^ 5 ) . Unfortunately, he doesn' t know when he needs to complete the tasks. Initially, the time is 0 . Time travel will now happen according to the following rules: For each k = 1, 2, . . . , n , Okabe will realize at time b_ k that he was supposed to complete the k - th task at time a_ k ( a_ k < b_ k ) . When he realizes this, if k - th task was already completed at time a_ k , Okabe keeps the usual flow of time. Otherwise, he time travels to time a_ k then immediately completes the task. If Okabe time travels to time a_ k , all tasks completed after this time will become incomplete again. That is, for every j , if a_ j> a_ k , the j - th task will become incomplete, if it was complete ( if it was incomplete, nothing will change) . Okabe has bad memory, so he can time travel to time a_ k only immediately after getting to time b_ k and learning that he was supposed to complete the k - th task at time a_ k . That is, even if Okabe already had to perform k - th task before, he wouldn' t remember it before stumbling on the info about this task at time b_ k again. Please refer to the notes for an example of time travelling. There is a certain set s of tasks such that the first moment that all of the tasks in s are simultaneously completed ( regardless of whether any other tasks are currently completed) , a funny scene will take place. Omkar loves this scene and wants to know how many times Okabe will time travel before this scene takes place. Find this number modulo 10^ 9 + 7 . It can be proven that eventually all n tasks will be completed and so the answer always exists.",
    "input": "The first line contains an integer n ( 1 \u2264 n \u2264 2 \u00b7 10^ 5 ) \u2014 the number of tasks that Okabe needs to complete. n lines follow. The k - th of these lines contain two integers a_ k and b_ k ( 1 \u2264 a_ k < b_ k \u2264 2n ) \u2014 the time at which Okabe needs to complete the k - th task and the time that he realizes this respectively. All 2n of these times are distinct ( so every time from 1 to 2n inclusive appears exactly once in the input) . The next line contains a single integer t ( 1 \u2264 t \u2264 n ) \u2014 the size of the set s of tasks that lead to the funny scene. The last line contains t integers s_ 1, s_ 2, . . . , s_ t \u2014 ( 1 \u2264 s_ k \u2264 n , the numbers s_ 1, s_ 2, . . . , s_ t are distinct) \u2014 the set s of tasks.",
    "output": "Output a single integer \u2014 the number of times that Okabe time travels until all tasks in the set s are simultaneously completed, modulo 10^ 9 + 7 .",
    "note": "For the first sample, all tasks need to be completed in order for the funny scene to occur. Initially, the time is 0 . Nothing happens until time 3 , when Okabe realizes that he should have done the 2 - nd task at time 2 . He then time travels to time 2 and completes the task. As the task is done now, he does not time travel again when the time is again 3 . However, at time 4 , he travels to time 1 to complete the 1 - st task. This undoes the 2 - nd task. This means that the 2 - nd task is not currently completed, meaning that the funny scene will not occur at this point even though the 1 - st task is currently completed and Okabe had previously completed the 2 - nd task. Once it is again time 3 he travels back to time 2 once more and does the 2 - nd task again. Now all tasks are complete, with Okabe having time travelled 3 times. The second sample has the same tasks for Okabe to complete. However, this time the funny scene only needs the first task to be completed in order to occur. From reading the above sample you can see that this occurs once Okabe has time travelled 2 times.",
    "topics": [
      "data structures",
      "math"
    ],
    "id": "1583G"
  },
  {
    "title": "Windblume Ode",
    "url": "https://codeforces.com/problemset/problem/1583/A",
    "history": "A bow adorned with nameless flowers that bears the earnest hopes of an equally nameless person. You have obtained the elegant bow known as the Windblume Ode. Inscribed in the weapon is an array of n ( n \u2265 3 ) positive distinct integers ( i. e. different, no duplicates are allowed) . Find the largest subset ( i. e. having the maximum number of elements) of this array such that its sum is a composite number. A positive integer x is called composite if there exists a positive integer y such that 1 < y < x and x is divisible by y . If there are multiple subsets with this largest size with the composite sum, you can output any of them. It can be proven that under the constraints of the problem such a non- empty subset always exists.",
    "input": "Each test consists of multiple test cases. The first line contains the number of test cases t ( 1 \u2264 t \u2264 100 ) . Description of the test cases follows. The first line of each test case contains an integer n ( 3 \u2264 n \u2264 100 ) \u2014 the length of the array. The second line of each test case contains n distinct integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i\u2264 200 ) \u2014 the elements of the array.",
    "output": "Each test case should have two lines of output. The first line should contain a single integer x : the size of the largest subset with composite sum. The next line should contain x space separated integers representing the indices of the subset of the initial array.",
    "note": "In the first test case, the subset { a_ 2, a_ 1} has a sum of 9 , which is a composite number. The only subset of size 3 has a prime sum equal to 11 . Note that you could also have selected the subset { a_ 1, a_ 3} with sum 8 + 2 = 10 , which is composite as it' s divisible by 2 . In the second test case, the sum of all elements equals to 21 , which is a composite number. Here we simply take the whole array as our subset.",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "1583A"
  },
  {
    "title": "Pchelyonok and Segments",
    "url": "https://codeforces.com/problemset/problem/1582/E",
    "history": "Pchelyonok decided to give Mila a gift. Pchelenok has already bought an array a of length n , but gifting an array is too common. Instead of that, he decided to gift Mila the segments of that array! Pchelyonok wants his gift to be beautiful, so he decided to choose k non- overlapping segments of the array [ l_ 1, r_ 1] , [ l_ 2, r_ 2] , . . . [ l_ k, r_ k] such that: the length of the first segment [ l_ 1, r_ 1] is k , the length of the second segment [ l_ 2, r_ 2] is k- 1 , . . . , the length of the k - th segment [ l_ k, r_ k] is 1 for each i< j , the i - th segment occurs in the array earlier than the j - th ( i. e. r_ i< l_ j ) the sums in these segments are strictly increasing ( i. e. let sum( l . . . r) = \u2211_ i= l^ r a_ i \u2014 the sum of numbers in the segment [ l, r] of the array, then sum( l_ 1 . . . r_ 1) < sum( l_ 2 . . . r_ 2) < . . . < sum( l_ k . . . r_ k) ) . Pchelenok also wants his gift to be as beautiful as possible, so he asks you to find the maximal value of k such that he can give Mila a gift!",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 100 ) \u2014 the number of test cases. The next 2 \u00b7 t lines contain the descriptions of test cases. The description of each test case consists of two lines. The first line of each test case contains a single integer n ( 1 \u2264 n \u2264 10^ 5 ) \u2014 the length of the array. The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 9 ) \u2014 the elements of the array a . It is guaranteed that the sum of n over all test cases does not exceed 10^ 5 .",
    "output": "For each test case, print the maximum possible value of k .",
    "note": "",
    "topics": [
      "binary search",
      "data structures",
      "dp",
      "greedy",
      "math"
    ],
    "id": "1582E"
  },
  {
    "title": "Vupsen, Pupsen and 0",
    "url": "https://codeforces.com/problemset/problem/1582/D",
    "history": "Vupsen and Pupsen were gifted an integer array. Since Vupsen doesn' t like the number 0 , he threw away all numbers equal to 0 from the array. As a result, he got an array a of length n . Pupsen, on the contrary, likes the number 0 and he got upset when he saw the array without zeroes. To cheer Pupsen up, Vupsen decided to come up with another array b of length n such that \u2211_ i= 1^ na_ i \u00b7 b_ i= 0 . Since Vupsen doesn' t like number 0 , the array b must not contain numbers equal to 0 . Also, the numbers in that array must not be huge, so the sum of their absolute values cannot exceed 10^ 9 . Please help Vupsen to find any such array b !",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 100 ) \u2014 the number of test cases. The next 2 \u00b7 t lines contain the description of test cases. The description of each test case consists of two lines. The first line of each test case contains a single integer n ( 2 \u2264 n \u2264 10^ 5 ) \u2014 the length of the array. The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( - 10^ 4 \u2264 a_ i \u2264 10^ 4 , a_ i = \u0338 0 ) \u2014 the elements of the array a . It is guaranteed that the sum of n over all test cases does not exceed 2 \u00b7 10^ 5 .",
    "output": "For each test case print n integers b_ 1, b_ 2, . . . , b_ n \u2014 elements of the array b ( | b_ 1| + | b_ 2| + . . . + | b_ n| \u2264 10^ 9 , b_ i = \u0338 0 , \u2211_ i= 1^ na_ i \u00b7 b_ i= 0 ) . It can be shown that the answer always exists.",
    "note": "In the first test case, 5 \u00b7 1 + 5 \u00b7 ( - 1) = 5- 5= 0 . You could also print 3 - 3 , for example, since 5 \u00b7 3 + 5 \u00b7 ( - 3) = 15- 15= 0 In the second test case, 5 \u00b7 ( - 1) + ( - 2) \u00b7 5 + 10 \u00b7 1 + ( - 9) \u00b7 ( - 1) + 4 \u00b7 ( - 1) = - 5- 10+ 10+ 9- 4= 0 .",
    "topics": [
      "constructive algorithms",
      "math"
    ],
    "id": "1582D"
  },
  {
    "title": "Luntik and Subsequences",
    "url": "https://codeforces.com/problemset/problem/1582/B",
    "history": "Luntik came out for a morning stroll and found an array a of length n . He calculated the sum s of the elements of the array ( s= \u2211_ i= 1^ n a_ i ) . Luntik calls a subsequence of the array a nearly full if the sum of the numbers in that subsequence is equal to s- 1 . Luntik really wants to know the number of nearly full subsequences of the array a . But he needs to come home so he asks you to solve that problem! A sequence x is a subsequence of a sequence y if x can be obtained from y by deletion of several ( possibly, zero or all) elements.",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 1000 ) \u2014 the number of test cases. The next 2 \u00b7 t lines contain descriptions of test cases. The description of each test case consists of two lines. The first line of each test case contains a single integer n ( 1 \u2264 n \u2264 60 ) \u2014 the length of the array. The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 0 \u2264 a_ i \u2264 10^ 9 ) \u2014 the elements of the array a .",
    "output": "For each test case print the number of nearly full subsequences of the array.",
    "note": "In the first test case, s= 1+ 2+ 3+ 4+ 5= 15 , only ( 2, 3, 4, 5) is a nearly full subsequence among all subsequences, the sum in it is equal to 2+ 3+ 4+ 5= 14= 15- 1 . In the second test case, there are no nearly full subsequences. In the third test case, s= 1+ 0= 1 , the nearly full subsequences are ( 0) and ( ) ( the sum of an empty subsequence is 0 ) .",
    "topics": [
      "combinatorics",
      "math"
    ],
    "id": "1582B"
  },
  {
    "title": "Luntik and Concerts",
    "url": "https://codeforces.com/problemset/problem/1582/A",
    "history": "Luntik has decided to try singing. He has a one- minute songs, b two- minute songs and c three- minute songs. He wants to distribute all songs into two concerts such that every song should be included to exactly one concert. He wants to make the absolute difference of durations of the concerts as small as possible. The duration of the concert is the sum of durations of all songs in that concert. Please help Luntik and find the minimal possible difference in minutes between the concerts durations.",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 1000 ) \u2014 the number of test cases. Each test case consists of one line containing three integers a, b, c ( 1 \u2264 a, b, c \u2264 10^ 9) \u2014 the number of one- minute, two- minute and three- minute songs.",
    "output": "For each test case print the minimal possible difference in minutes between the concerts durations.",
    "note": "In the first test case, Luntik can include a one- minute song and a two- minute song into the first concert, and a three- minute song into the second concert. Then the difference will be equal to 0 . In the second test case, Luntik can include two one- minute songs and a two- minute song and a three- minute song into the first concert, and two three- minute songs into the second concert. The duration of the first concert will be 1 + 1 + 2 + 3 = 7 , the duration of the second concert will be 6 . The difference of them is | 7- 6| = 1 .",
    "topics": [
      "math"
    ],
    "id": "1582A"
  },
  {
    "title": "Diameter of Graph",
    "url": "https://codeforces.com/problemset/problem/1581/B",
    "history": "CQXYM wants to create a connected undirected graph with n nodes and m edges, and the diameter of the graph must be strictly less than k- 1 . Also, CQXYM doesn' t want a graph that contains self- loops or multiple edges ( i. e. each edge connects two different vertices and between each pair of vertices there is at most one edge) . The diameter of a graph is the maximum distance between any two nodes. The distance between two nodes is the minimum number of the edges on the path which endpoints are the two nodes. CQXYM wonders whether it is possible to create such a graph.",
    "input": "The input consists of multiple test cases. The first line contains an integer t ( 1 \u2264 t \u2264 10^ 5) \u2014 the number of test cases. The description of the test cases follows. Only one line of each test case contains three integers n( 1 \u2264 n \u2264 10^ 9) , m , k ( 0 \u2264 m, k \u2264 10^ 9) .",
    "output": "For each test case, print YES if it is possible to create the graph, or print NO if it is impossible. You can print each letter in any case ( upper or lower) .",
    "note": "In the first test case, the graph' s diameter equal to 0. In the second test case, the graph' s diameter can only be 2. In the third test case, the graph' s diameter can only be 1.",
    "topics": [
      "constructive algorithms",
      "graphs",
      "greedy",
      "math"
    ],
    "id": "1581B"
  },
  {
    "title": "CQXYM Count Permutations",
    "url": "https://codeforces.com/problemset/problem/1581/A",
    "history": "CQXYM is counting permutations length of 2n . A permutation is an array consisting of n distinct integers from 1 to n in arbitrary order. For example, [ 2, 3, 1, 5, 4] is a permutation, but [ 1, 2, 2] is not a permutation ( 2 appears twice in the array) and [ 1, 3, 4] is also not a permutation ( n= 3 but there is 4 in the array) . A permutation p ( length of 2n ) will be counted only if the number of i satisfying p_ i< p_ i+ 1 is no less than n . For example: Permutation [ 1, 2, 3, 4] will count, because the number of such i that p_ i< p_ i+ 1 equals 3 ( i = 1 , i = 2 , i = 3 ) . Permutation [ 3, 2, 1, 4] won' t count, because the number of such i that p_ i< p_ i+ 1 equals 1 ( i = 3 ) . CQXYM wants you to help him to count the number of such permutations modulo 1000000007 ( 10^ 9+ 7 ) . In addition, modulo operation is to get the remainder. For example: 7 3= 1 , because 7 = 3 \u00b7 2 + 1 , 15 4= 3 , because 15 = 4 \u00b7 3 + 3 .",
    "input": "The input consists of multiple test cases. The first line contains an integer t ( t \u2265 1) \u2014 the number of test cases. The description of the test cases follows. Only one line of each test case contains an integer n( 1 \u2264 n \u2264 10^ 5) . It is guaranteed that the sum of n over all test cases does not exceed 10^ 5",
    "output": "For each test case, print the answer in a single line.",
    "note": "n= 1 , there is only one permutation that satisfies the condition: [ 1, 2] . In permutation [ 1, 2] , p_ 1< p_ 2 , and there is one i= 1 satisfy the condition. Since 1 \u2265 n , this permutation should be counted. In permutation [ 2, 1] , p_ 1> p_ 2 . Because 0< n , this permutation should not be counted. n= 2 , there are 12 permutations: [ 1, 2, 3, 4] , [ 1, 2, 4, 3] , [ 1, 3, 2, 4] , [ 1, 3, 4, 2] , [ 1, 4, 2, 3] , [ 2, 1, 3, 4] , [ 2, 3, 1, 4] , [ 2, 3, 4, 1] , [ 2, 4, 1, 3] , [ 3, 1, 2, 4] , [ 3, 4, 1, 2] , [ 4, 1, 2, 3] .",
    "topics": [
      "combinatorics",
      "math",
      "number theory"
    ],
    "id": "1581A"
  },
  {
    "title": "Problems for Codeforces",
    "url": "https://codeforces.com/problemset/problem/1580/F",
    "history": "XYMXYM and CQXYM will prepare n problems for Codeforces. The difficulty of the problem i will be an integer a_ i , where a_ i \u2265 0 . The difficulty of the problems must satisfy a_ i+ a_ i+ 1< m ( 1 \u2264 i < n ) , and a_ 1+ a_ n< m , where m is a fixed integer. XYMXYM wants to know how many plans of the difficulty of the problems there are modulo 998 244 353 . Two plans of difficulty a and b are different only if there is an integer i ( 1 \u2264 i \u2264 n ) satisfying a_ i = \u0338 b_ i .",
    "input": "A single line contains two integers n and m ( 2 \u2264 n \u2264 50 000 , 1 \u2264 m \u2264 10^ 9 ) .",
    "output": "Print a single integer \u2014 the number of different plans.",
    "note": "In the first test case, the valid a are: [ 0, 0, 0] , [ 0, 0, 1] , [ 0, 1, 0] , [ 1, 0, 0] . [ 1, 0, 1] is invalid since a_ 1+ a_ n \u2265 m .",
    "topics": [
      "combinatorics",
      "fft",
      "math"
    ],
    "id": "1580F"
  },
  {
    "title": "Array Stabilization (AND version)",
    "url": "https://codeforces.com/problemset/problem/1579/F",
    "history": "You are given an array a[ 0 . . . n - 1] = [ a_ 0, a_ 1, . . . , a_ n - 1] of zeroes and ones only. Note that in this problem, unlike the others, the array indexes are numbered from zero, not from one. In one step, the array a is replaced by another array of length n according to the following rules: First, a new array a^ \u2192 d is defined as a cyclic shift of the array a to the right by d cells. The elements of this array can be defined as a^ \u2192 d_ i = a_ ( i + n - d) n , where ( i + n - d) n is the remainder of integer division of i + n - d by n . It means that the whole array a^ \u2192 d can be represented as a sequence a^ \u2192 d = [ a_ n - d, a_ n - d + 1, . . . , a_ n - 1, a_ 0, a_ 1, . . . , a_ n - d - 1] Then each element of the array a_ i is replaced by a_ i & a^ \u2192 d_ i , where & is a logical \" AND\" operator. For example, if a = [ 0, 0, 1, 1] and d = 1 , then a^ \u2192 d = [ 1, 0, 0, 1] and the value of a after the first step will be [ 0 & 1, 0 & 0, 1 & 0, 1 & 1] , that is [ 0, 0, 0, 1] . The process ends when the array stops changing. For a given array a , determine whether it will consist of only zeros at the end of the process. If yes, also find the number of steps the process will take before it finishes.",
    "input": "The first line contains an integer t ( 1 \u2264 t \u2264 1000 ) \u2014 the number of test cases. The next 2t lines contain descriptions of the test cases. The first line of each test case description contains two integers: n ( 1 \u2264 n \u2264 10^ 6 ) \u2014 array size and d ( 1 \u2264 d \u2264 n ) \u2014 cyclic shift offset. The second line of the description contains n space- separated integers a_ i ( 0 \u2264 a_ i \u2264 1 ) \u2014 elements of the array. It is guaranteed that the sum of n over all test cases does not exceed 10^ 6 .",
    "output": "Print t lines, each line containing the answer to the corresponding test case. The answer to a test case should be a single integer \u2014 the number of steps after which the array will contain only zeros for the first time. If there are still elements equal to 1 in the array after the end of the process, print - 1.",
    "note": "In the third sample test case the array will change as follows: At the beginning a = [ 1, 1, 0, 1, 0] , and a^ \u2192 2 = [ 1, 0, 1, 1, 0] . Their element- by- element \" AND\" is equal to [ 1 & 1, 1 & 0, 0 & 1, 1 & 1, 0 & 0] = [ 1, 0, 0, 1, 0] Now a = [ 1, 0, 0, 1, 0] , then a^ \u2192 2 = [ 1, 0, 1, 0, 0] . Their element- by- element \" AND\" equals to [ 1 & 1, 0 & 0, 0 & 1, 1 & 0, 0 & 0] = [ 1, 0, 0, 0, 0] And finally, when a = [ 1, 0, 0, 0, 0] we get a^ \u2192 2 = [ 0, 0, 1, 0, 0] . Their element- by- element \" AND\" equals to [ 1 & 0, 0 & 0, 0 & 1, 0 & 0, 0 & 0] = [ 0, 0, 0, 0, 0] Thus, the answer is 3 steps. In the fourth sample test case, the array will not change as it shifts by 2 to the right, so each element will be calculated as 0 & 0 or 1 & 1 thus not changing its value. So the answer is - 1, the array will never contain only zeros.",
    "topics": [
      "brute force",
      "graphs",
      "math",
      "number theory",
      "shortest paths"
    ],
    "id": "1579F"
  },
  {
    "title": "Permutation Minimization by Deque",
    "url": "https://codeforces.com/problemset/problem/1579/E1",
    "history": "In fact, the problems E1 and E2 do not have much in common. You should probably think of them as two separate problems. A permutation p of size n is given. A permutation of size n is an array of size n in which each integer from 1 to n occurs exactly once. For example, [ 1, 4, 3, 2] and [ 4, 2, 1, 3] are correct permutations while [ 1, 2, 4] and [ 1, 2, 2] are not. Let us consider an empty deque ( double- ended queue) . A deque is a data structure that supports adding elements to both the beginning and the end. So, if there are elements [ 1, 5, 2] currently in the deque, adding an element 4 to the beginning will produce the sequence [ 4, 1, 5, 2] , and adding same element to the end will produce [ 1, 5, 2, 4] . The elements of the permutation are sequentially added to the initially empty deque, starting with p_ 1 and finishing with p_ n . Before adding each element to the deque, you may choose whether to add it to the beginning or the end. For example, if we consider a permutation p = [ 3, 1, 2, 4] , one of the possible sequences of actions looks like this: 1. add 3 to the end of the deque: deque has a sequence [ 3] in it; 2. add 1 to the beginning of the deque: deque has a sequence [ 1, 3] in it; 3. add 2 to the end of the deque: deque has a sequence [ 1, 3, 2] in it; 4. add 4 to the end of the deque: deque has a sequence [ 1, 3, 2, 4] in it; Find the lexicographically smallest possible sequence of elements in the deque after the entire permutation has been processed. A sequence [ x_ 1, x_ 2, . . . , x_ n] is lexicographically smaller than the sequence [ y_ 1, y_ 2, . . . , y_ n] if there exists such i \u2264 n that x_ 1 = y_ 1 , x_ 2 = y_ 2 , . . . , x_ i - 1 = y_ i - 1 and x_ i < y_ i . In other words, if the sequences x and y have some ( possibly empty) matching prefix, and the next element of the sequence x is strictly smaller than the corresponding element of the sequence y . For example, the sequence [ 1, 3, 2, 4] is smaller than the sequence [ 1, 3, 4, 2] because after the two matching elements [ 1, 3] in the start the first sequence has an element 2 which is smaller than the corresponding element 4 in the second sequence.",
    "input": "The first line contains an integer t ( 1 \u2264 t \u2264 1000 ) \u2014 the number of test cases. The next 2t lines contain descriptions of the test cases. The first line of each test case description contains an integer n ( 1 \u2264 n \u2264 2 \u00b7 10^ 5 ) \u2014 permutation size. The second line of the description contains n space- separated integers p_ i ( 1 \u2264 p_ i \u2264 n ; all p_ i are all unique) \u2014 elements of the permutation. It is guaranteed that the sum of n over all test cases does not exceed 2 \u00b7 10^ 5 .",
    "output": "Print t lines, each line containing the answer to the corresponding test case. The answer to a test case should contain n space- separated integer numbers \u2014 the elements of the lexicographically smallest permutation that is possible to find in the deque after executing the described algorithm.",
    "note": "One of the ways to get a lexicographically smallest permutation [ 1, 3, 2, 4] from the permutation [ 3, 1, 2, 4] ( the first sample test case) is described in the problem statement.",
    "topics": [
      "constructive algorithms",
      "greedy",
      "math"
    ],
    "id": "1579E1"
  },
  {
    "title": "Casimir's String Solitaire",
    "url": "https://codeforces.com/problemset/problem/1579/A",
    "history": "Casimir has a string s which consists of capital Latin letters ' A' , ' B' , and ' C' only. Each turn he can choose to do one of the two following actions: he can either erase exactly one letter ' A' and exactly one letter ' B' from arbitrary places of the string ( these letters don' t have to be adjacent) ; or he can erase exactly one letter ' B' and exactly one letter ' C' from arbitrary places in the string ( these letters don' t have to be adjacent) . Therefore, each turn the length of the string is decreased exactly by 2 . All turns are independent so for each turn, Casimir can choose any of two possible actions. For example, with s = \" ABCABC\" he can obtain a string s = \" ACBC\" in one turn ( by erasing the first occurrence of ' B' and the second occurrence of ' A' ) . There are also many other options for a turn aside from this particular example. For a given string s determine whether there is a sequence of actions leading to an empty string. In other words, Casimir' s goal is to erase all letters from the string. Is there a way to do this?",
    "input": "The first line contains an integer t ( 1 \u2264 t \u2264 1000 ) \u2014 the number of test cases. Each test case is described by one string s , for which you need to determine if it can be fully erased by some sequence of turns. The string s consists of capital letters ' A' , ' B' , ' C' and has a length from 1 to 50 letters, inclusive.",
    "output": "Print t lines, each line containing the answer to the corresponding test case. The answer to a test case should be YES if there is a way to fully erase the corresponding string and NO otherwise. You may print every letter in any case you want ( so, for example, the strings yEs, yes, Yes, and YES will all be recognized as positive answers) .",
    "note": "",
    "topics": [
      "math",
      "strings"
    ],
    "id": "1579A"
  },
  {
    "title": "Game of Chance",
    "url": "https://codeforces.com/problemset/problem/1578/G",
    "history": "The King wants to marry off his daughter, and he wants her husband to have the greatest innate luckiness possible. To find such a person he decided to hold a heads- or- tails tournament. If person A with luckiness x and person B with luckiness y play heads- or- tails against each other, person A wins with probability x/ ( x+ y) . The tournament has several rounds. Each round some participants are split into pairs. Each pair plays against each other, and the loser leaves the tournament. The participants are numbered from 1 to n . During the first round, a number k ( 1 \u2264 k \u2264 n ) is selected such that n- k/ 2 is a power of 2 ( such k always exists and is unique) . Only participants numbered from 1 to k take part in the first round. It ensures that in all other rounds the number of participants is the power of 2 . During other rounds, all the participants who still have not left the tournament take part. If during some round, participants numbered p_ 1 < . . . < p_ 2m take part, then they are split into pairs in the following manner: participant p_ 2i- 1 plays against participant p_ 2i for each i from 1 to m . The rounds are held until only one participant is left. He is declared the winner of the tournament and he will marry the King' s daughter. The princess can' t wait to find out who is her future husband. She asked every participant to tell her his luckiness. Assuming they did not lie, she wants to know the probability of each participant winning the tournament. As you are the best friend of the princess, she asks you to help her.",
    "input": "The first line of the input contains the number of participants, n ( 2 \u2264 n \u2264 3 \u00b7 10^ 5 ) . The second line of the input contains n integer numbers, a_ 1, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 9 ) . The luckiness of the i - th participant equals to a_ i .",
    "output": "Print n numbers p_ i . The i - th number should be the probability of the i - th participant winning the tournament. The absolute error of your answer must not exceed 10^ - 9 .",
    "note": "Here is an example of a tournament bracket, showing the winning probability in each pair.",
    "topics": [
      "math",
      "probabilities"
    ],
    "id": "1578G"
  },
  {
    "title": "Easy Scheduling",
    "url": "https://codeforces.com/problemset/problem/1578/E",
    "history": "Eonathan Eostar decided to learn the magic of multiprocessor systems. He has a full binary tree of tasks with height h . In the beginning, there is only one ready task in the tree \u2014 the task in the root. At each moment of time, p processes choose at most p ready tasks and perform them. After that, tasks whose parents were performed become ready for the next moment of time. Once the task becomes ready, it stays ready until it is performed. You shall calculate the smallest number of time moments the system needs to perform all the tasks.",
    "input": "The first line of the input contains the number of tests t ( 1 \u2264 t \u2264 5\u00b7 10^ 5 ) . Each of the next t lines contains the description of a test. A test is described by two integers h ( 1 \u2264 h \u2264 50 ) and p ( 1 \u2264 p \u2264 10^ 4 ) \u2014 the height of the full binary tree and the number of processes. It is guaranteed that all the tests are different.",
    "output": "For each test output one integer on a separate line \u2014 the smallest number of time moments the system needs to perform all the tasks.",
    "note": "Let us consider the second test from the sample input. There is a full binary tree of height 3 and there are two processes. At the first moment of time, there is only one ready task, 1 , and p_ 1 performs it. At the second moment of time, there are two ready tasks, 2 and 3 , and the processes perform them. At the third moment of time, there are four ready tasks, 4 , 5 , 6 , and 7 , and p_ 1 performs 6 and p_ 2 performs 5 . At the fourth moment of time, there are two ready tasks, 4 and 7 , and the processes perform them. Thus, the system spends 4 moments of time to perform all the tasks.",
    "topics": [
      "implementation",
      "math"
    ],
    "id": "1578E"
  },
  {
    "title": "Knitting Batik",
    "url": "https://codeforces.com/problemset/problem/1575/K",
    "history": "Mr. Chanek wants to knit a batik, a traditional cloth from Indonesia. The cloth forms a grid a with size n \u00d7 m . There are k colors, and each cell in the grid can be one of the k colors. Define a sub- rectangle as an ordered pair of two cells ( ( x_ 1, y_ 1) , ( x_ 2, y_ 2) ) , denoting the top- left cell and bottom- right cell ( inclusively) of a sub- rectangle in a . Two sub- rectangles ( ( x_ 1, y_ 1) , ( x_ 2, y_ 2) ) and ( ( x_ 3, y_ 3) , ( x_ 4, y_ 4) ) have the same pattern if and only if the following holds: they have the same width ( x_ 2 - x_ 1 = x_ 4 - x_ 3 ) ; they have the same height ( y_ 2 - y_ 1 = y_ 4 - y_ 3 ) ; for every pair ( i, j) where 0 \u2264 i \u2264 x_ 2 - x_ 1 and 0 \u2264 j \u2264 y_ 2 - y_ 1 , the color of cells ( x_ 1 + i, y_ 1 + j) and ( x_ 3 + i, y_ 3 + j) are equal. Count the number of possible batik color combinations, such that the subrectangles ( ( a_ x, a_ y) , ( a_ x + r - 1, a_ y + c - 1) ) and ( ( b_ x, b_ y) , ( b_ x + r - 1, b_ y + c - 1) ) have the same pattern. Output the answer modulo 10^ 9 + 7 .",
    "input": "The first line contains five integers n , m , k , r , and c ( 1 \u2264 n, m \u2264 10^ 9 , 1 \u2264 k \u2264 10^ 9 , 1 \u2264 r \u2264min( 10^ 6, n) , 1 \u2264 c \u2264min( 10^ 6, m) ) \u2014 the size of the batik, the number of colors, and size of the sub- rectangle. The second line contains four integers a_ x , a_ y , b_ x , and b_ y ( 1 \u2264 a_ x, b_ x \u2264 n , 1 \u2264 a_ y, b_ y \u2264 m ) \u2014 the top- left corners of the first and second sub- rectangle. Both of the sub- rectangles given are inside the grid ( 1 \u2264 a_ x + r - 1 , b_ x + r - 1 \u2264 n , 1 \u2264 a_ y + c - 1 , b_ y + c - 1 \u2264 m ) .",
    "output": "Output an integer denoting the number of possible batik color combinations modulo 10^ 9 + 7 .",
    "note": "The following are all 32 possible color combinations in the first example.",
    "topics": [
      "implementation",
      "math"
    ],
    "id": "1575K"
  },
  {
    "title": "GCD Festival",
    "url": "https://codeforces.com/problemset/problem/1575/G",
    "history": "Mr. Chanek has an array a of n integers. The prettiness value of a is denoted as: \u2211_ i= 1^ n\u2211_ j= 1^ n( a_ i, a_ j) \u00b7( i, j) where ( x, y) denotes the greatest common divisor ( GCD) of integers x and y . In other words, the prettiness value of an array a is the total sum of ( a_ i, a_ j) \u00b7( i, j) for all pairs ( i, j) . Help Mr. Chanek find the prettiness value of a , and output the result modulo 10^ 9 + 7 !",
    "input": "The first line contains an integer n ( 2 \u2264 n \u2264 10^ 5 ) . The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 5 ) .",
    "output": "Output an integer denoting the prettiness value of a modulo 10^ 9 + 7 .",
    "note": "",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "1575G"
  },
  {
    "title": "Finding Expected Value",
    "url": "https://codeforces.com/problemset/problem/1575/F",
    "history": "Mr. Chanek opened a letter from his fellow, who is currently studying at Singanesia. Here is what it says. Define an array b ( 0 \u2264 b_ i < k ) with n integers. While there exists a pair ( i, j) such that b_ i b_ j , do the following operation: Randomly pick a number i satisfying 0 \u2264 i < n . Note that each number i has a probability of 1/ n to be picked. Randomly Pick a number j satisfying 0 \u2264 j < k . Change the value of b_ i to j . It is possible for b_ i to be changed to the same value. Denote f( b) as the expected number of operations done to b until all elements of b are equal. You are given two integers n and k , and an array a ( - 1 \u2264 a_ i < k ) of n integers. For every index i with a_ i = - 1 , replace a_ i with a random number j satisfying 0 \u2264 j < k . Let c be the number of occurrences of - 1 in a . There are k^ c possibilites of a after the replacement, each with equal probability of being the final array. Find the expected value of f( a) modulo 10^ 9 + 7 . Formally, let M = 10^ 9 + 7 . It can be shown that the answer can be expressed as an irreducible fraction p/ q , where p and q are integers and q \u2261\u03380 M . Output the integer equal to p \u00b7 q^ - 1 M . In other words, output such an integer x that 0 \u2264 x < M and x \u00b7 q \u2261 p M . After reading the letter, Mr. Chanek gave the task to you. Solve it for the sake of their friendship!",
    "input": "The first line contains two integers n and k ( 2 \u2264 n \u2264 10^ 5 , 2 \u2264 k \u2264 10^ 9 ) . The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( - 1 \u2264 a_ i < k ) .",
    "output": "Output an integer denoting the expected value of f( a) modulo 10^ 9 + 7 .",
    "note": "",
    "topics": [
      "math"
    ],
    "id": "1575F"
  },
  {
    "title": "Coloring",
    "url": "https://codeforces.com/problemset/problem/1574/E",
    "history": "A matrix of size n \u00d7 m , such that each cell of it contains either 0 or 1 , is considered beautiful if the sum in every contiguous submatrix of size 2 \u00d7 2 is exactly 2 , i. e. every \" square\" of size 2 \u00d7 2 contains exactly two 1 ' s and exactly two 0 ' s. You are given a matrix of size n \u00d7 m . Initially each cell of this matrix is empty. Let' s denote the cell on the intersection of the x - th row and the y - th column as ( x, y) . You have to process the queries of three types: x y - 1 \u2014 clear the cell ( x, y) , if there was a number in it; x y 0 \u2014 write the number 0 in the cell ( x, y) , overwriting the number that was there previously ( if any) ; x y 1 \u2014 write the number 1 in the cell ( x, y) , overwriting the number that was there previously ( if any) . After each query, print the number of ways to fill the empty cells of the matrix so that the resulting matrix is beautiful. Since the answers can be large, print them modulo 998244353 .",
    "input": "The first line contains three integers n , m and k ( 2 \u2264 n, m \u2264 10^ 6 ; 1 \u2264 k \u2264 3 \u00b7 10^ 5 ) \u2014 the number of rows in the matrix, the number of columns, and the number of queries, respectively. Then k lines follow, the i - th of them contains three integers x_ i , y_ i , t_ i ( 1 \u2264 x_ i \u2264 n ; 1 \u2264 y_ i \u2264 m ; - 1 \u2264 t_ i \u2264 1 ) \u2014 the parameters for the i - th query.",
    "output": "For each query, print one integer \u2014 the number of ways to fill the empty cells of the matrix after the respective query, taken modulo 998244353 .",
    "note": "",
    "topics": [
      "combinatorics",
      "constructive algorithms",
      "implementation",
      "math"
    ],
    "id": "1574E"
  },
  {
    "title": "Combinatorics Homework",
    "url": "https://codeforces.com/problemset/problem/1574/B",
    "history": "You are given four integer values a , b , c and m . Check if there exists a string that contains: a letters ' A' ; b letters ' B' ; c letters ' C' ; no other letters; exactly m pairs of adjacent equal letters ( exactly m such positions i that the i - th letter is equal to the ( i+ 1) - th one) .",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of testcases. Each of the next t lines contains the description of the testcase \u2014 four integers a , b , c and m ( 1 \u2264 a, b, c \u2264 10^ 8 ; 0 \u2264 m \u2264 10^ 8 ) .",
    "output": "For each testcase print \" YES\" if there exists a string that satisfies all the requirements. Print \" NO\" if there are no such strings. You may print every letter in any case you want ( so, for example, the strings yEs, yes, Yes and YES will all be recognized as positive answer) .",
    "note": "In the first testcase strings \" ABCAB\" or \" BCABA\" satisfy the requirements. There exist other possible strings. In the second testcase there' s no way to put adjacent equal letters if there' s no letter that appears at least twice. In the third testcase string \" CABBCC\" satisfies the requirements. There exist other possible strings.",
    "topics": [
      "combinatorics",
      "greedy",
      "math"
    ],
    "id": "1574B"
  },
  {
    "title": "Swaps",
    "url": "https://codeforces.com/problemset/problem/1573/B",
    "history": "You are given two arrays a and b of length n . Array a contains each odd integer from 1 to 2n in an arbitrary order, and array b contains each even integer from 1 to 2n in an arbitrary order. You can perform the following operation on those arrays: choose one of the two arrays pick an index i from 1 to n- 1 swap the i - th and the ( i+ 1) - th elements of the chosen array Compute the minimum number of operations needed to make array a lexicographically smaller than array b . For two different arrays x and y of the same length n , we say that x is lexicographically smaller than y if in the first position where x and y differ, the array x has a smaller element than the corresponding element in y .",
    "input": "Each test contains multiple test cases. The first line contains the number of test cases t ( 1 \u2264 t \u2264 10^ 4 ) . The first line of each test case contains a single integer n ( 1 \u2264 n \u2264 10^ 5 ) \u2014 the length of the arrays. The second line of each test case contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 2n , all a_ i are odd and pairwise distinct) \u2014 array a . The third line of each test case contains n integers b_ 1, b_ 2, . . . , b_ n ( 1 \u2264 b_ i \u2264 2n , all b_ i are even and pairwise distinct) \u2014 array b . It is guaranteed that the sum of n over all test cases does not exceed 10^ 5 .",
    "output": "For each test case, print one integer: the minimum number of operations needed to make array a lexicographically smaller than array b . We can show that an answer always exists.",
    "note": "In the first example, the array a is already lexicographically smaller than array b , so no operations are required. In the second example, we can swap 5 and 3 and then swap 2 and 4 , which results in [ 3, 5, 1] and [ 4, 2, 6] . Another correct way is to swap 3 and 1 and then swap 5 and 1 , which results in [ 1, 5, 3] and [ 2, 4, 6] . Yet another correct way is to swap 4 and 6 and then swap 2 and 6 , which results in [ 5, 3, 1] and [ 6, 2, 4] .",
    "topics": [
      "greedy",
      "math",
      "sortings"
    ],
    "id": "1573B"
  },
  {
    "title": "Sweepstake",
    "url": "https://codeforces.com/problemset/problem/1571/D",
    "history": "Kotlin Heroes competition is nearing completion. This time n programmers took part in the competition. Now organizers are thinking how to entertain spectators as well. One of the possibilities is holding sweepstakes. So for now they decided to conduct a survey among spectators. In total, organizers asked m viewers two questions: Who will take the first place? Who will take the last place? After receiving answers, organizers ranked all spectators based on the number of programmers they guessed right. Suppose, there are c_ 2 viewers who guessed right both first and last place, c_ 1 viewers who guessed either first or last place right and c_ 0 viewers who didn' t guess at all. All c_ 2 viewers will get rank 1 , all viewers with one right answer will get rank c_ 2 + 1 and all remaining viewers \u2014 rank c_ 2 + c_ 1 + 1 . You were one of the interviewed spectators. Also, as one of the organizers, you have access to survey results, but not to competition results. Calculate, what is the worst rank you can possibly get according to organizers' ranking system?",
    "input": "The first line contains two integers n and m ( 2 \u2264 n \u2264 1000 ; 1 \u2264 m \u2264 2 \u00b7 10^ 5 ) \u2014 the number of programmers participating in the competition and the number of surveyed spectators. Next m lines contain answers of spectators. The i - th line contains two integers f_ i and l_ i ( 1 \u2264 f_ i, l_ i \u2264 n ; f_ i l_ i ) \u2014 the indices of programmers who will take the first and last places in opinion of the i - th viewer. For simplicity, you are the first among spectators, so your answers are f_ 1 and l_ 1 .",
    "output": "Print the single integer \u2014 the worst rank among spectators you can possibly get according to organizers' ranking system ( bigger rank \u2014 worse, of course) .",
    "note": "In the first example, if the second programmer takes first place, while the first programmer takes last place, you' ll have 0 right answers while the other two spectators \u2014 2 right answers. That' s why your rank ( in the worst case) will be c_ 2 + c_ 1 + 1 = 2 + 0 + 1 = 3 . In the second example, for example, if the third programmer takes the first place and the second programmer takes the last place, then you' ll have 1 right answer. The spectators 2 , 4 and 5 will have 2 right answers, spectator 6 \u2014 1 right answer and spectator 3 \u2014 0 right answers. As a result, your rank will be equal to c_ 2 + 1 = 3 + 1 = 4 . ( Note that spectator 6 will have the same rank 4 ) .",
    "topics": [
      "*special",
      "brute force",
      "constructive algorithms",
      "implementation",
      "math"
    ],
    "id": "1571D"
  },
  {
    "title": "Epic Novel",
    "url": "https://codeforces.com/problemset/problem/1571/B",
    "history": "Alex has bought a new novel that was published in n volumes. He has read these volumes one by one, and each volume has taken him several ( maybe one) full days to read. So, on the first day, he was reading the first volume, and on each of the following days, he was reading either the same volume he had been reading on the previous day, or the next volume. Let v_ i be the number of the volume Alex was reading on the i - th day. Here are some examples: one of the possible situations is v_ 1 = 1 , v_ 2 = 1 , v_ 3 = 2 , v_ 4 = 3 , v_ 5 = 3 \u2014 this situation means that Alex has spent two days ( 1 - st and 2 - nd) on the first volume, one day ( 3 - rd) on the second volume, and two days ( 4 - th and 5 - th) on the third volume; a situation v_ 1 = 2 , v_ 2 = 2 , v_ 3 = 3 is impossible, since Alex started with the first volume ( so v_ 1 cannot be anything but 1 ) ; a situation v_ 1 = 1 , v_ 2 = 2 , v_ 3 = 3 , v_ 4 = 1 is impossible, since Alex won' t return to the first volume after reading the third one; a situation v_ 1 = 1 , v_ 2 = 3 is impossible, since Alex doesn' t skip volumes. You know that Alex was reading the volume v_ a on the day a , and the volume v_ c on the day c . Now you want to guess which volume was he reading on the day b , which is between the days a and c ( so a < b < c ) . There may be some ambiguity, so you want to make any valid guess ( i. e. choose some volume number v_ b so it' s possible that Alex was reading volume v_ a on day a , volume v_ b on day b , and volume v_ c on day c ) .",
    "input": "Each test contains multiple test cases. The first line contains the number of test cases t ( 1 \u2264 t \u2264 100 ) . Description of the test cases follows. The first line of each test case contains a single integer n ( 1 \u2264 n \u2264 100 ) \u2014 the number of volumes the novel consists of. The second line of each test case contains two integers a and v_ a ( 1 \u2264 a \u2264 98 ; 1 \u2264 v_ a \u2264 a ) denoting that Alex was reading volume v_ a at day a . The third line of each test case contains two integers c and v_ c ( a + 2 \u2264 c \u2264 100 ; v_ a \u2264 v_ c \u2264 c ) denoting that Alex was reading volume v_ c at day c . The fourth line of each test case contains one integer b ( a < b < c ) \u2014 the day you are interested in. It' s guaranteed that the input is not controversial, in other words, Alex could read volume v_ a at day a and volume v_ c at day c .",
    "output": "For each test case, print the possible index of volume Alex could read at day b . If there are multiple answers, print any.",
    "note": "In the first test case, since Alex was reading volume 1 both at day 1 and at day 100 then he was reading volume 1 at any day between them. In the second test case, Alex could read any volume from 1 to 4 at day 16 . For example, he could read volume 1 from day 1 to day 15 , volume 2 at days 16 and 17 , volume 3 at day 18 and volume 4 at days 19 and 20 . In the third test case, there is only one possible situation: Alex read one volume per day, so at day 42 he read volume 42 .",
    "topics": [
      "*special",
      "math"
    ],
    "id": "1571B"
  },
  {
    "title": "Jury Meeting",
    "url": "https://codeforces.com/problemset/problem/1569/C",
    "history": "n people gathered to hold a jury meeting of the upcoming competition, the i - th member of the jury came up with a_ i tasks, which they want to share with each other. First, the jury decides on the order which they will follow while describing the tasks. Let that be a permutation p of numbers from 1 to n ( an array of size n where each integer from 1 to n occurs exactly once) . Then the discussion goes as follows: If a jury member p_ 1 has some tasks left to tell, then they tell one task to others. Otherwise, they are skipped. If a jury member p_ 2 has some tasks left to tell, then they tell one task to others. Otherwise, they are skipped. . . . If a jury member p_ n has some tasks left to tell, then they tell one task to others. Otherwise, they are skipped. If there are still members with tasks left, then the process repeats from the start. Otherwise, the discussion ends. A permutation p is nice if none of the jury members tell two or more of their own tasks in a row. Count the number of nice permutations. The answer may be really large, so print it modulo 998 244 353 .",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. The first line of the test case contains a single integer n ( 2 \u2264 n \u2264 2 \u00b7 10^ 5 ) \u2014 number of jury members. The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 9 ) \u2014 the number of problems that the i - th member of the jury came up with. The sum of n over all test cases does not exceed 2 \u00b7 10^ 5 .",
    "output": "For each test case, print one integer \u2014 the number of nice permutations, taken modulo 998 244 353 .",
    "note": "Explanation of the first test case from the example: There are two possible permutations, p = [ 1, 2] and p = [ 2, 1] . For p = [ 1, 2] , the process is the following: the first jury member tells a task; the second jury member tells a task; the first jury member doesn' t have any tasks left to tell, so they are skipped; the second jury member tells a task. So, the second jury member has told two tasks in a row ( in succession) , so the permutation is not nice. For p = [ 2, 1] , the process is the following: the second jury member tells a task; the first jury member tells a task; the second jury member tells a task. So, this permutation is nice.",
    "topics": [
      "combinatorics",
      "math"
    ],
    "id": "1569C"
  },
  {
    "title": "Non-Decreasing Dilemma",
    "url": "https://codeforces.com/problemset/problem/1567/E",
    "history": "Alice has recently received an array a_ 1, a_ 2, . . . , a_ n for her birthday! She is very proud of her array, and when she showed her friend Bob the array, he was very happy with her present too! However, soon Bob became curious, and as any sane friend would do, asked Alice to perform q operations of two types on her array: 1 x y : update the element a_ x to y ( set a_ x = y ) . 2 l r : calculate how many non- decreasing subarrays exist within the subarray [ a_ l, a_ l+ 1, . . . , a_ r] . More formally, count the number of pairs of integers ( p, q) such that l \u2264 p \u2264 q \u2264 r and a_ p \u2264 a_ p+ 1\u2264. . . \u2264 a_ q- 1\u2264 a_ q . Help Alice answer Bob' s queries!",
    "input": "The first line contains two integers n and q ( 1 \u2264 n, q \u2264 2 \u00b7 10^ 5 ) \u2014 the size of the array, and the number of queries, respectively. The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 9 ) \u2014 the elements of Alice' s array. The next q lines consist of three integers each. The first integer of the i - th line is t_ i , the operation being performed on the i - th step ( t_ i = 1 or t_ i = 2 ) . If t_ i = 1 , the next two integers are x_ i and y_ i ( 1 \u2264 x_ i \u2264 n ; 1 \u2264 y_ i \u2264 10^ 9 ) , updating the element at position x_ i to y_ i ( setting a_ x_ i = y_ i ) . If t_ i = 2 , the next two integers are l_ i and r_ i ( 1 \u2264 l_ i \u2264 r_ i \u2264 n ) , the two indices Bob asks Alice about for the i - th query. It' s guaranteed that there is at least one operation of the second type.",
    "output": "For each query of type 2 , print a single integer, the answer to the query.",
    "note": "For the first query, l = 2 and r = 5 , and the non- decreasing subarrays [ p, q] are [ 2, 2] , [ 3, 3] , [ 4, 4] , [ 5, 5] , [ 2, 3] and [ 4, 5] .",
    "topics": [
      "data structures",
      "divide and conquer",
      "math"
    ],
    "id": "1567E"
  },
  {
    "title": "Expression Evaluation Error",
    "url": "https://codeforces.com/problemset/problem/1567/D",
    "history": "On the board, Bob wrote n positive integers in base 10 with sum s ( i. e. in decimal numeral system) . Alice sees the board, but accidentally interprets the numbers on the board as base- 11 integers and adds them up ( in base 11 ) . What numbers should Bob write on the board, so Alice' s sum is as large as possible?",
    "input": "The input consists of multiple test cases. The first line contains an integer t ( 1 \u2264 t \u2264 100 ) \u2014 the number of test cases. The description of the test cases follows. The only line of each test case contains two integers s and n ( 1 \u2264 s \u2264 10^ 9 ; 1 \u2264 n \u2264min( 100, s) ) \u2014 the sum and amount of numbers on the board, respectively. Numbers s and n are given in decimal notation ( base 10 ) .",
    "output": "For each test case, output n positive integers \u2014 the numbers Bob should write on the board, so Alice' s sum is as large as possible. If there are multiple answers, print any of them.",
    "note": "In the first test case, 70_ 10 + 27_ 10 = 97_ 10 , and Alice' s sum is 70_ 11 + 27_ 11 = 97_ 11 = 9 \u00b7 11 + 7 = 106_ 10. ( Here x_ b represents the number x in base b . ) It can be shown that it is impossible for Alice to get a larger sum than 106_ 10 . In the second test case, Bob can only write a single number on the board, so he must write 17 . In the third test case, 3_ 10 + 4_ 10 + 100_ 10 + 4_ 10 = 111_ 10 , and Alice' s sum is 3_ 11 + 4_ 11 + 100_ 11 + 4_ 11 = 110_ 11 = 1 \u00b7 11^ 2 + 1 \u00b7 11 = 132_ 10. It can be shown that it is impossible for Alice to get a larger sum than 132_ 10 .",
    "topics": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "math"
    ],
    "id": "1567D"
  },
  {
    "title": "Carrying Conundrum",
    "url": "https://codeforces.com/problemset/problem/1567/C",
    "history": "Alice has just learned addition. However, she hasn' t learned the concept of \" carrying\" fully \u2014 instead of carrying to the next column, she carries to the column two columns to the left. For example, the regular way to evaluate the sum 2039 + 2976 would be as shown: However, Alice evaluates it as shown: In particular, this is what she does: add 9 and 6 to make 15 , and carry the 1 to the column two columns to the left, i. e. to the column \" 0 9 \" ; add 3 and 7 to make 10 and carry the 1 to the column two columns to the left, i. e. to the column \" 2 2 \" ; add 1 , 0 , and 9 to make 10 and carry the 1 to the column two columns to the left, i. e. to the column above the plus sign; add 1 , 2 and 2 to make 5 ; add 1 to make 1 . Thus, she ends up with the incorrect result of 15005 . Alice comes up to Bob and says that she has added two numbers to get a result of n . However, Bob knows that Alice adds in her own way. Help Bob find the number of ordered pairs of positive integers such that when Alice adds them, she will get a result of n . Note that pairs ( a, b) and ( b, a) are considered different if a b .",
    "input": "The input consists of multiple test cases. The first line contains an integer t ( 1 \u2264 t \u2264 1000 ) \u2014 the number of test cases. The description of the test cases follows. The only line of each test case contains an integer n ( 2 \u2264 n \u2264 10^ 9 ) \u2014 the number Alice shows Bob.",
    "output": "For each test case, output one integer \u2014 the number of ordered pairs of positive integers such that when Alice adds them, she will get a result of n .",
    "note": "In the first test case, when Alice evaluates any of the sums 1 + 9 , 2 + 8 , 3 + 7 , 4 + 6 , 5 + 5 , 6 + 4 , 7 + 3 , 8 + 2 , or 9 + 1 , she will get a result of 100 . The picture below shows how Alice evaluates 6 + 4 :",
    "topics": [
      "bitmasks",
      "combinatorics",
      "dp",
      "math"
    ],
    "id": "1567C"
  },
  {
    "title": "Xor-quiz",
    "url": "https://codeforces.com/problemset/problem/1566/H",
    "history": "This is an interactive problem. You are given two integers c and n . The jury has a randomly generated set A of distinct positive integers not greater than c ( it is generated from all such possible sets with equal probability) . The size of A is equal to n . Your task is to guess the set A . In order to guess it, you can ask at most \u2308 0. 65 \u00b7 c \u2309 queries. In each query, you choose a single integer 1 \u2264 x \u2264 c . As the answer to this query you will be given the bitwise xor sum of all y , such that y \u2208 A and gcd( x, y) = 1 ( i. e. x and y are coprime) . If there is no such y this xor sum is equal to 0 . You can ask all queries at the beginning and you will receive the answers to all your queries. After that, you won' t have the possibility to ask queries. You should find any set A' , such that | A' | = n and A' and A have the same answers for all c possible queries. InteractionIn the first line you should print an integer q ( 0 \u2264 q \u2264\u2308 0. 65 \u00b7 c \u2309) \u2014 the number of queries you want to ask. After that in the same line print q integers x_ 1, x_ 2, . . . , x_ q ( 1 \u2264 x_ i \u2264 c) \u2014 the queries. For these queries you should read q integers, i - th of them is the answer to the described query for x = x_ i . After that you should print n distinct integers A' _ 1, A' _ 2, . . . , A' _ n \u2014 the set A' you found. If there are different sets A' that have the same answers for all possible queries, print any of them. If you will ask more than \u2308 0. 65 \u00b7 c \u2309 queries or if the queries will be invalid, the interactor will terminate immediately and your program will receive verdict Wrong Answer. After printing the queries and answers do not forget to output end of line and flush the output buffer. Otherwise, you will get the Idleness limit exceeded verdict. To do flush use: fflush( stdout) or cout. flush( ) in C+ + ; System. out. flush( ) in Java; flush( output) in Pascal; stdout. flush( ) in Python; Read documentation for other languages. HacksYou cannot make hacks in this problem.",
    "input": "Firstly you are given two integers c and n ( 100 \u2264 c \u2264 10^ 6 , 0 \u2264 n \u2264 c ) .",
    "output": "",
    "note": "The sample is made only for you to understand the interaction protocol. Your solution will not be tested on the sample. In the sample A = { 1, 4, 5, 6, 8, 10} . 7 queries are made, 7 \u2264\u2308 0. 65 \u00b7 10 \u2309 = 7 , so the query limit is not exceeded. Answers for the queries: For 10 : 1 is the only number in the set A coprime with 10 , so the answer is 1 For 2 : 1_ 10\u2295 5_ 10 = 001_ 2 \u2295 101_ 2 = 4_ 10 , where \u2295 is the bitwise xor For 3 : 1_ 10\u2295 4_ 10\u2295 5_ 10\u2295 8_ 10\u2295 10_ 10 = 0001_ 2 \u2295 0100_ 2 \u2295 0101_ 2 \u2295 1000_ 2 \u2295 1010_ 2 = 2_ 10 For 5 : 1_ 10\u2295 4_ 10\u2295 6_ 10\u2295 8_ 10 = 0001_ 2 \u2295 0100_ 2 \u2295 0110_ 2 \u2295 1000_ 2 = 11_ 10 For 7 : 1_ 10\u2295 4_ 10\u2295 5_ 10\u2295 6_ 10\u2295 8_ 10\u2295 10_ 10 = 0001_ 2 \u2295 0100_ 2 \u2295 0101_ 2 \u2295 0110_ 2 \u2295 1000_ 2 \u2295 1010_ 2 = 4_ 10 For 1 : 1_ 10\u2295 4_ 10\u2295 5_ 10\u2295 6_ 10\u2295 8_ 10\u2295 10_ 10 = 0001_ 2 \u2295 0100_ 2 \u2295 0101_ 2 \u2295 0110_ 2 \u2295 1000_ 2 \u2295 1010_ 2 = 4_ 10 For 6 : 1_ 10\u2295 5_ 10 = 0001_ 2 \u2295 0101_ 2 = 4_ 10",
    "topics": [
      "constructive algorithms",
      "dp",
      "interactive",
      "math",
      "number theory"
    ],
    "id": "1566H"
  },
  {
    "title": "Median Maximization",
    "url": "https://codeforces.com/problemset/problem/1566/A",
    "history": "You are given two positive integers n and s . Find the maximum possible median of an array of n non- negative integers ( not necessarily distinct) , such that the sum of its elements is equal to s . A median of an array of integers of length m is the number standing on the \u2308m/ 2\u2309 - th ( rounding up) position in the non- decreasing ordering of its elements. Positions are numbered starting from 1 . For example, a median of the array [ 20, 40, 20, 50, 50, 30] is the \u2308m/ 2\u2309 - th element of [ 20, 20, 30, 40, 50, 50] , so it is 30 . There exist other definitions of the median, but in this problem we use the described definition.",
    "input": "The input consists of multiple test cases. The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. Description of the test cases follows. Each test case contains a single line with two integers n and s ( 1 \u2264 n, s \u2264 10^ 9 ) \u2014 the length of the array and the required sum of the elements.",
    "output": "For each test case print a single integer \u2014 the maximum possible median.",
    "note": "Possible arrays for the first three test cases ( in each array the median is underlined) : In the first test case [ 5] In the second test case [ 2, 3] In the third test case [ 1, 2, 2]",
    "topics": [
      "binary search",
      "greedy",
      "math"
    ],
    "id": "1566A"
  },
  {
    "title": "Tubular Bells",
    "url": "https://codeforces.com/problemset/problem/1562/F",
    "history": "Do you know what tubular bells are? They are a musical instrument made up of cylindrical metal tubes. In an orchestra, tubular bells are used to mimic the ringing of bells. Mike has tubular bells, too! They consist of n tubes, and each of the tubes has a length that can be expressed by a integer from l to r inclusive. It is clear that the lengths of all the tubes are different ( it makes no sense to make the same tubes) . It is also known that r- l+ 1 = n . Formally, we can say that Mike' s tubular bells are described by a permutation a of length n that contains all numbers from l to r inclusive, with a_ i denoting the length of the i - th tube. You are offered an interesting task: to guess what Mike' s instrument looks like. Simply, you must guess the permutation. Mike won' t tell you l or r . He will only tell you n , and will allow you to ask no more than n + 5000 queries. In each query, you name two positive integers x , y such that 1 \u2264 x, y \u2264 n, x = \u0338 y . In response to this query, the program written by Mike will give you lcm( a_ x, a_ y) , where lcm( c, d) denotes the least common multiple of c and d . Solve Mike' s problem! InteractionFor each set of input data, read one integer n . You are allowed to make no more than n + 5000 queries. If you want to make a query, output it in the format \" ? x y \" , where x and y \u2014 the numbers of tubes for which you learn the lcm ( least common multiple) of their lengths. Note that 1 \u2264 x, y \u2264 n, x = \u0338 y must be satisfied. The interactor will return a single integer \u2014the answer to your query. If you are ready to print the answer, print it in the format \" ! a_ 1 a_ 2 . . . a_ n \" . The output of the answer is not considered a query and is not included in the number of queries. After each query and answer output, don' t forget to output the line translation and reset the output buffer. Otherwise you will get the verdict \" Idleness limit exceeded\" . To reset the buffer use: fflush( stdout) or cout. flush( ) in C+ + ; System. out. flush( ) in Java; flush( output) in Pascal; stdout. flush( ) in Python; see documentation for other languages. Note that the interactor is not adaptive. That is, the original permutation is fixed in the beginning and don' t depend on your queries. Hacks: Use the following format for hacks: The first line contains a single positive integer t ( 1 \u2264 t \u2264 20 ) \u2014 the number of input datasets. A description of the input data sets is given below. The first line of each test case contains one positive integer n ( 3 \u2264 n \u2264 10^ 5 ) \u2014the number of tubes. It is known that 1 \u2264 l \u2264 r \u2264 2 \u00b7 10^ 5 , i. e. the lengths of the tubes do not exceed 2 \u00b7 10^ 5 . The second line of each test case contains an array a of n positive integers \u2014 the lengths of the tubes in each input dataset. Remember that l \u2264 a_ i \u2264 r and r- l+ 1 = n , and that all a_ i are different.",
    "input": "Each test contains multiple test cases. The first line contains one positive integer t ( 1 \u2264 t \u2264 20 ) , denoting the number of test cases. Description of the test cases follows. The single line of each test case contains one positive integer n ( 3 \u2264 n \u2264 10^ 5 ) \u2014 number of tubes in Mike' s tubular bells. Also 1 \u2264 l \u2264 r \u2264 2 \u00b7 10^ 5 , i. e. the lengths of the tubes do not exceed 2 \u00b7 10^ 5 . It is guaranteed that the sum of maximal number of queries ( i. e. n + 5000 ) over all test cases does not exceed 10^ 5 + 5000 . It means that sum of n does not exceed 10^ 5 + 5000 - t \u00b7 5000 .",
    "output": "",
    "note": "",
    "topics": [
      "interactive",
      "math",
      "number theory",
      "probabilities"
    ],
    "id": "1562F"
  },
  {
    "title": "Two Hundred Twenty One (hard version)",
    "url": "https://codeforces.com/problemset/problem/1562/D2",
    "history": "This is the hard version of the problem. The difference between the versions is that the hard version does require you to output the numbers of the rods to be removed. You can make hacks only if all versions of the problem are solved. Stitch likes experimenting with different machines with his friend Sparky. Today they built another machine. The main element of this machine are n rods arranged along one straight line and numbered from 1 to n inclusive. Each of these rods must carry an electric charge quantitatively equal to either 1 or - 1 ( otherwise the machine will not work) . Another condition for this machine to work is that the sign- variable sum of the charge on all rods must be zero. More formally, the rods can be represented as an array of n numbers characterizing the charge: either 1 or - 1 . Then the condition must hold: a_ 1 - a_ 2 + a_ 3 - a_ 4 + . . . = 0 , or \u2211_ i= 1^ n ( - 1) ^ i- 1\u00b7 a_ i = 0 . Sparky charged all n rods with an electric current, but unfortunately it happened that the rods were not charged correctly ( the sign- variable sum of the charge is not zero) . The friends decided to leave only some of the rods in the machine. Sparky has q questions. In the i th question Sparky asks: if the machine consisted only of rods with numbers l_ i to r_ i inclusive, what minimal number of rods could be removed from the machine so that the sign- variable sum of charges on the remaining ones would be zero? Also Sparky wants to know the numbers of these rods. Perhaps the friends got something wrong, and the sign- variable sum is already zero. In that case, you don' t have to remove the rods at all. If the number of rods is zero, we will assume that the sign- variable sum of charges is zero, that is, we can always remove all rods. Help your friends and answer all of Sparky' s questions!",
    "input": "Each test contains multiple test cases. The first line contains one positive integer t ( 1 \u2264 t \u2264 10^ 3 ) , denoting the number of test cases. Description of the test cases follows. The first line of each test case contains two positive integers n and q ( 1 \u2264 n, q \u2264 3 \u00b7 10^ 5 ) \u2014 the number of rods and the number of questions. The second line of each test case contains a non- empty string s of length n , where the charge of the i - th rod is 1 if s_ i is the \" + \" symbol, or - 1 if s_ i is the \" - \" symbol. Each next line from the next q lines contains two positive integers l_ i ans r_ i ( 1 \u2264 l_ i \u2264 r_ i \u2264 n ) \u2014 numbers, describing Sparky' s questions. It is guaranteed that the sum of n over all test cases does not exceed 3 \u00b7 10^ 5 , and the sum of q over all test cases does not exceed 3 \u00b7 10^ 5 . It is guaranteed that the sum of the answers ( minimal number of rods that can be removed) over all test cases does not exceed 10^ 6 .",
    "output": "For each test case, print the answer in the following format: In the first line print a single integer k \u2014 the minimal number of rods that can be removed. In the second line print k numbers separated by a space \u2014 the numbers of rods to be removed. If there is more than one correct answer, you can print any.",
    "note": "In the first test case for the first query you can remove the rods numbered 5 and 8 , then the following set of rods will remain: + \u2013+ \u2013+ + - + + - . It is easy to see that here the sign- variable sum is zero. In the second test case: For the first query, we can remove the rods numbered 1 and 11 , then the following set of rods will remain: \u2013+ + \u2014+ + \u2014. It is easy to see that here the sign- variable sum is zero. For the second query we can remove the rod numbered 9 , then the following set of rods will remain: \u2014+ + - . It is easy to see that here the variable sum is zero. For the third query we can not remove the rods at all.",
    "topics": [
      "data structures",
      "math"
    ],
    "id": "1562D2"
  },
  {
    "title": "Two Hundred Twenty One (easy version)",
    "url": "https://codeforces.com/problemset/problem/1562/D1",
    "history": "This is the easy version of the problem. The difference between the versions is that the easy version does not require you to output the numbers of the rods to be removed. You can make hacks only if all versions of the problem are solved. Stitch likes experimenting with different machines with his friend Sparky. Today they built another machine. The main element of this machine are n rods arranged along one straight line and numbered from 1 to n inclusive. Each of these rods must carry an electric charge quantitatively equal to either 1 or - 1 ( otherwise the machine will not work) . Another condition for this machine to work is that the sign- variable sum of the charge on all rods must be zero. More formally, the rods can be represented as an array of n numbers characterizing the charge: either 1 or - 1 . Then the condition must hold: a_ 1 - a_ 2 + a_ 3 - a_ 4 + . . . = 0 , or \u2211_ i= 1^ n ( - 1) ^ i- 1\u00b7 a_ i = 0 . Sparky charged all n rods with an electric current, but unfortunately it happened that the rods were not charged correctly ( the sign- variable sum of the charge is not zero) . The friends decided to leave only some of the rods in the machine. Sparky has q questions. In the i th question Sparky asks: if the machine consisted only of rods with numbers l_ i to r_ i inclusive, what minimal number of rods could be removed from the machine so that the sign- variable sum of charges on the remaining ones would be zero? Perhaps the friends got something wrong, and the sign- variable sum is already zero. In that case, you don' t have to remove the rods at all. If the number of rods is zero, we will assume that the sign- variable sum of charges is zero, that is, we can always remove all rods. Help your friends and answer all of Sparky' s questions!",
    "input": "Each test contains multiple test cases. The first line contains one positive integer t ( 1 \u2264 t \u2264 10^ 3 ) , denoting the number of test cases. Description of the test cases follows. The first line of each test case contains two positive integers n and q ( 1 \u2264 n, q \u2264 3 \u00b7 10^ 5 ) \u2014 the number of rods and the number of questions. The second line of each test case contains a non- empty string s of length n , where the charge of the i - th rod is 1 if s_ i is the \" + \" symbol, or - 1 if s_ i is the \" - \" symbol. Each next line from the next q lines contains two positive integers l_ i ans r_ i ( 1 \u2264 l_ i \u2264 r_ i \u2264 n ) \u2014 numbers, describing Sparky' s questions. It is guaranteed that the sum of n over all test cases does not exceed 3 \u00b7 10^ 5 , and the sum of q over all test cases does not exceed 3 \u00b7 10^ 5 .",
    "output": "For each test case, print a single integer \u2014 the minimal number of rods that can be removed.",
    "note": "In the first test case for the first query you can remove the rods numbered 5 and 8 , then the following set of rods will remain: + \u2013+ \u2013+ + - + + - . It is easy to see that here the sign- variable sum is zero. In the second test case: For the first query, we can remove the rods numbered 1 and 11 , then the following set of rods will remain: \u2013+ + \u2014+ + \u2014. It is easy to see that here the sign- variable sum is zero. For the second query we can remove the rod numbered 9 , then the following set of rods will remain: \u2014+ + - . It is easy to see that here the variable sum is zero. For the third query we can not remove the rods at all.",
    "topics": [
      "data structures",
      "dp",
      "math"
    ],
    "id": "1562D1"
  },
  {
    "title": "Rings",
    "url": "https://codeforces.com/problemset/problem/1562/C",
    "history": "Frodo was caught by Saruman. He tore a pouch from Frodo' s neck, shook out its contents \u2014there was a pile of different rings: gold and silver. . . \" How am I to tell which is the One? ! \" the mage howled. \" Throw them one by one into the Cracks of Doom and watch when Mordor falls! \" Somewhere in a parallel Middle- earth, when Saruman caught Frodo, he only found n rings. And the i - th ring was either gold or silver. For convenience Saruman wrote down a binary string s of n characters, where the i - th character was 0 if the i - th ring was gold, and 1 if it was silver. Saruman has a magic function f , which takes a binary string and returns a number obtained by converting the string into a binary number and then converting the binary number into a decimal number. For example, f( 001010) = 10, f( 111) = 7, f( 11011101) = 221 . Saruman, however, thinks that the order of the rings plays some important role. He wants to find 2 pairs of integers ( l_ 1, r_ 1) , ( l_ 2, r_ 2) , such that: 1 \u2264 l_ 1 \u2264 n , 1 \u2264 r_ 1 \u2264 n , r_ 1- l_ 1+ 1\u2265\u230an/ 2\u230b 1 \u2264 l_ 2 \u2264 n , 1 \u2264 r_ 2 \u2264 n , r_ 2- l_ 2+ 1\u2265\u230an/ 2\u230b Pairs ( l_ 1, r_ 1) and ( l_ 2, r_ 2) are distinct. That is, at least one of l_ 1 = \u0338 l_ 2 and r_ 1 = \u0338 r_ 2 must hold. Let t be the substring s[ l_ 1: r_ 1] of s , and w be the substring s[ l_ 2: r_ 2] of s . Then there exists non- negative integer k , such that f( t) = f( w) \u00b7 k . Here substring s[ l: r] denotes s_ ls_ l+ 1. . . s_ r- 1s_ r , and \u230a x \u230b denotes rounding the number down to the nearest integer. Help Saruman solve this problem! It is guaranteed that under the constraints of the problem at least one solution exists.",
    "input": "Each test contains multiple test cases. The first line contains one positive integer t ( 1 \u2264 t \u2264 10^ 3 ) , denoting the number of test cases. Description of the test cases follows. The first line of each test case contains one positive integer n ( 2 \u2264 n \u2264 2 \u00b7 10^ 4 ) \u2014 length of the string. The second line of each test case contains a non- empty binary string of length n . It is guaranteed that the sum of n over all test cases does not exceed 10^ 5 .",
    "output": "For every test case print four integers l_ 1 , r_ 1 , l_ 2 , r_ 2 , which denote the beginning of the first substring, the end of the first substring, the beginning of the second substring, and the end of the second substring, respectively. If there are multiple solutions, print any.",
    "note": "In the first testcase f( t) = f( 1111) = 15 , f( w) = f( 101) = 5 . In the second testcase f( t) = f( 111000111) = 455 , f( w) = f( 000111) = 7 . In the third testcase f( t) = f( 0000) = 0 , f( w) = f( 1000) = 8 . In the fourth testcase f( t) = f( 11011) = 27 , f( w) = f( 011) = 3 . In the fifth testcase f( t) = f( 001111) = 15 , f( w) = f( 011) = 3 .",
    "topics": [
      "constructive algorithms",
      "math"
    ],
    "id": "1562C"
  },
  {
    "title": "Scenes From a Memory",
    "url": "https://codeforces.com/problemset/problem/1562/B",
    "history": "During the hypnosis session, Nicholas suddenly remembered a positive integer n , which doesn' t contain zeros in decimal notation. Soon, when he returned home, he got curious: what is the maximum number of digits that can be removed from the number so that the number becomes not prime, that is, either composite or equal to one? For some numbers doing so is impossible: for example, for number 53 it' s impossible to delete some of its digits to obtain a not prime integer. However, for all n in the test cases of this problem, it' s guaranteed that it' s possible to delete some of their digits to obtain a not prime number. Note that you cannot remove all the digits from the number. A prime number is a number that has no divisors except one and itself. A composite is a number that has more than two divisors. 1 is neither a prime nor a composite number.",
    "input": "Each test contains multiple test cases. The first line contains one positive integer t ( 1 \u2264 t \u2264 10^ 3 ) , denoting the number of test cases. Description of the test cases follows. The first line of each test case contains one positive integer k ( 1 \u2264 k \u2264 50 ) \u2014 the number of digits in the number. The second line of each test case contains a positive integer n , which doesn' t contain zeros in decimal notation ( 10^ k- 1\u2264 n < 10^ k ) . It is guaranteed that it is always possible to remove less than k digits to make the number not prime. It is guaranteed that the sum of k over all test cases does not exceed 10^ 4 .",
    "output": "For every test case, print two numbers in two lines. In the first line print the number of digits, that you have left in the number. In the second line print the digits left after all delitions. If there are multiple solutions, print any.",
    "note": "In the first test case, you can' t delete 2 digits from the number 237 , as all the numbers 2 , 3 , and 7 are prime. However, you can delete 1 digit, obtaining a number 27 = 3^ 3 . In the second test case, you can delete all digits except one, as 4 = 2^ 2 is a composite number.",
    "topics": [
      "brute force",
      "constructive algorithms",
      "implementation",
      "math",
      "number theory"
    ],
    "id": "1562B"
  },
  {
    "title": "The Miracle and the Sleeper",
    "url": "https://codeforces.com/problemset/problem/1562/A",
    "history": "You are given two integers l and r , l\u2264 r . Find the largest possible value of a b over all pairs ( a, b) of integers for which r\u2265 a \u2265 b \u2265 l . As a reminder, a b is a remainder we get when dividing a by b . For example, 26 8 = 2 .",
    "input": "Each test contains multiple test cases. The first line contains one positive integer t ( 1\u2264 t\u2264 10^ 4) , denoting the number of test cases. Description of the test cases follows. The only line of each test case contains two integers l , r ( 1\u2264 l \u2264 r \u2264 10^ 9 ) .",
    "output": "For every test case, output the largest possible value of a b over all pairs ( a, b) of integers for which r\u2265 a \u2265 b \u2265 l .",
    "note": "In the first test case, the only allowed pair is ( a, b) = ( 1, 1) , for which a b = 1 1 = 0 . In the second test case, the optimal choice is pair ( a, b) = ( 1000000000, 999999999) , for which a b = 1 .",
    "topics": [
      "greedy",
      "math"
    ],
    "id": "1562A"
  },
  {
    "title": "Up the Strip (simplified version)",
    "url": "https://codeforces.com/problemset/problem/1561/D1",
    "history": "This version of the problem differs from the next one only in the constraint on n . Note that the memory limit in this problem is lower than in others. You have a vertical strip with n cells, numbered consecutively from 1 to n from top to bottom. You also have a token that is initially placed in cell n . You will move the token up until it arrives at cell 1 . Let the token be in cell x > 1 at some moment. One shift of the token can have either of the following kinds: Subtraction: you choose an integer y between 1 and x- 1 , inclusive, and move the token from cell x to cell x - y . Floored division: you choose an integer z between 2 and x , inclusive, and move the token from cell x to cell \u230ax/ z\u230b ( x divided by z rounded down) . Find the number of ways to move the token from cell n to cell 1 using one or more shifts, and print it modulo m . Note that if there are several ways to move the token from one cell to another in one shift, all these ways are considered distinct ( check example explanation for a better understanding) .",
    "input": "The only line contains two integers n and m ( 2 \u2264 n \u2264 2 \u00b7 10^ 5 ; 10^ 8 < m < 10^ 9 ; m is a prime number) \u2014 the length of the strip and the modulo.",
    "output": "Print the number of ways to move the token from cell n to cell 1 , modulo m .",
    "note": "In the first test, there are three ways to move the token from cell 3 to cell 1 in one shift: using subtraction of y = 2 , or using division by z = 2 or z = 3 . There are also two ways to move the token from cell 3 to cell 1 via cell 2 : first subtract y = 1 , and then either subtract y = 1 again or divide by z = 2 . Therefore, there are five ways in total.",
    "topics": [
      "brute force",
      "data structures",
      "dp",
      "math",
      "number theory"
    ],
    "id": "1561D1"
  },
  {
    "title": "Make a Power of Two",
    "url": "https://codeforces.com/problemset/problem/1560/D",
    "history": "You are given an integer n . In 1 move, you can do one of the following actions: erase any digit of the number ( it' s acceptable that the number before the operation has exactly one digit and after the operation, it is \" empty\" ) ; add one digit to the right. The actions may be performed in any order any number of times. Note that if, after deleting some digit from a number, it will contain leading zeroes, they will not be deleted. E. g. if you delete from the number 301 the digit 3 , the result is the number 01 ( not 1 ) . You need to perform the minimum number of actions to make the number any power of 2 ( i. e. there' s an integer k ( k \u2265 0 ) such that the resulting number is equal to 2^ k ) . The resulting number must not have leading zeroes. E. g. consider n= 1052 . The answer is equal to 2 . First, let' s add to the right one digit 4 ( the result will be 10524 ) . Then let' s erase the digit 5 , so the result will be 1024 which is a power of 2 . E. g. consider n= 8888 . The answer is equal to 3 . Let' s erase any of the digits 8 three times. The result will be 8 which is a power of 2 .",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. Then t test cases follow. Each test case consists of one line containing one integer n ( 1 \u2264 n \u2264 10^ 9 ) .",
    "output": "For each test case, output in a separate line one integer m \u2014 the minimum number of moves to transform the number into any power of 2 .",
    "note": "The answer for the first test case was considered above. The answer for the second test case was considered above. In the third test case, it' s enough to add to the right the digit 4 \u2014 the number 6 will turn into 64 . In the fourth test case, let' s add to the right the digit 8 and then erase 7 and 5 \u2014 the taken number will turn into 8 . The numbers of the fifth and the sixth test cases are already powers of two so there' s no need to make any move. In the seventh test case, you can delete first of all the digit 3 ( the result is 01 ) and then the digit 0 ( the result is 1 ) .",
    "topics": [
      "greedy",
      "math",
      "strings"
    ],
    "id": "1560D"
  },
  {
    "title": "Infinity Table",
    "url": "https://codeforces.com/problemset/problem/1560/C",
    "history": "Polycarp has found a table having an infinite number of rows and columns. The rows are numbered from 1 , starting from the topmost one. The columns are numbered from 1 , starting from the leftmost one. Initially, the table hasn' t been filled and Polycarp wants to fix it. He writes integers from 1 and so on to the table as follows. The figure shows the placement of the numbers from 1 to 10 . The following actions are denoted by the arrows. The leftmost topmost cell of the table is filled with the number 1 . Then he writes in the table all positive integers beginning from 2 sequentially using the following algorithm. First, Polycarp selects the leftmost non- filled cell in the first row and fills it. Then, while the left neighbor of the last filled cell is filled, he goes down and fills the next cell. So he goes down until the last filled cell has a non- filled neighbor to the left ( look at the vertical arrow going down in the figure above) . After that, he fills the cells from the right to the left until he stops at the first column ( look at the horizontal row in the figure above) . Then Polycarp selects the leftmost non- filled cell in the first row, goes down, and so on. A friend of Polycarp has a favorite number k . He wants to know which cell will contain the number. Help him to find the indices of the row and the column, such that the intersection of the row and the column is the cell containing the number k .",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 100 ) \u2014 the number of test cases. Then t test cases follow. Each test case consists of one line containing one integer k ( 1 \u2264 k \u2264 10^ 9 ) which location must be found.",
    "output": "For each test case, output in a separate line two integers r and c ( r, c \u2265 1 ) separated by spaces \u2014 the indices of the row and the column containing the cell filled by the number k , respectively.",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": "1560C"
  },
  {
    "title": "Who's Opposite?",
    "url": "https://codeforces.com/problemset/problem/1560/B",
    "history": "Some number of people ( this number is even) have stood in a circle. The people stand in the circle evenly. They are numbered clockwise starting from a person with the number 1 . Each person is looking through the circle' s center at the opposite person. A sample of a circle of 6 persons. The orange arrows indicate who is looking at whom. You don' t know the exact number of people standing in the circle ( but this number is even, no doubt) . It is known that the person with the number a is looking at the person with the number b ( and vice versa, of course) . What is the number associated with a person being looked at by the person with the number c ? If, for the specified a , b , and c , no such circle exists, output - 1.",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. Then t test cases follow. Each test case consists of one line containing three distinct integers a , b , c ( 1 \u2264 a, b, c \u2264 10^ 8 ) .",
    "output": "For each test case output in a separate line a single integer d \u2014 the number of the person being looked at by the person with the number c in a circle such that the person with the number a is looking at the person with the number b . If there are multiple solutions, print any of them. Output - 1 if there' s no circle meeting the given conditions.",
    "note": "In the first test case, there' s a desired circle of 8 people. The person with the number 6 will look at the person with the number 2 and the person with the number 8 will look at the person with the number 4 . In the second test case, there' s no circle meeting the conditions. If the person with the number 2 is looking at the person with the number 3 , the circle consists of 2 people because these persons are neighbors. But, in this case, they must have the numbers 1 and 2 , but it doesn' t meet the problem' s conditions. In the third test case, the only circle with the persons with the numbers 2 and 4 looking at each other consists of 4 people. Therefore, the person with the number 10 doesn' t occur in the circle.",
    "topics": [
      "math"
    ],
    "id": "1560B"
  },
  {
    "title": "Mocha and Stars",
    "url": "https://codeforces.com/problemset/problem/1559/E",
    "history": "Mocha wants to be an astrologer. There are n stars which can be seen in Zhijiang, and the brightness of the i - th star is a_ i . Mocha considers that these n stars form a constellation, and she uses ( a_ 1, a_ 2, . . . , a_ n) to show its state. A state is called mathematical if all of the following three conditions are satisfied: For all i ( 1\u2264 i\u2264 n ) , a_ i is an integer in the range [ l_ i, r_ i] . \u2211 _ i= 1 ^ n a_ i \u2264 m . ( a_ 1, a_ 2, . . . , a_ n) = 1 . Here, ( a_ 1, a_ 2, . . . , a_ n) denotes the greatest common divisor ( GCD) of integers a_ 1, a_ 2, . . . , a_ n . Mocha is wondering how many different mathematical states of this constellation exist. Because the answer may be large, you must find it modulo 998 244 353 . Two states ( a_ 1, a_ 2, . . . , a_ n) and ( b_ 1, b_ 2, . . . , b_ n) are considered different if there exists i ( 1\u2264 i\u2264 n ) such that a_ i b_ i .",
    "input": "The first line contains two integers n and m ( 2 \u2264 n \u2264 50 , 1 \u2264 m \u2264 10^ 5 ) \u2014 the number of stars and the upper bound of the sum of the brightness of stars. Each of the next n lines contains two integers l_ i and r_ i ( 1 \u2264 l_ i \u2264 r_ i \u2264 m ) \u2014 the range of the brightness of the i - th star.",
    "output": "Print a single integer \u2014 the number of different mathematical states of this constellation, modulo 998 244 353 .",
    "note": "In the first example, there are 4 different mathematical states of this constellation: a_ 1= 1 , a_ 2= 1 . a_ 1= 1 , a_ 2= 2 . a_ 1= 2 , a_ 2= 1 . a_ 1= 3 , a_ 2= 1 .",
    "topics": [
      "combinatorics",
      "dp",
      "fft",
      "math",
      "number theory"
    ],
    "id": "1559E"
  },
  {
    "title": "Mocha and Math",
    "url": "https://codeforces.com/problemset/problem/1559/A",
    "history": "Mocha is a young girl from high school. She has learned so much interesting knowledge from her teachers, especially her math teacher. Recently, Mocha is learning about binary system and very interested in bitwise operation. This day, Mocha got a sequence a of length n . In each operation, she can select an arbitrary interval [ l, r] and for all values i ( 0\u2264 i \u2264 r- l ) , replace a_ l+ i with a_ l+ i & a_ r- i at the same time, where & denotes the bitwise AND operation. This operation can be performed any number of times. For example, if n= 5 , the array is [ a_ 1, a_ 2, a_ 3, a_ 4, a_ 5] , and Mocha selects the interval [ 2, 5] , then the new array is [ a_ 1, a_ 2 & a_ 5, a_ 3 & a_ 4, a_ 4 & a_ 3, a_ 5 & a_ 2] . Now Mocha wants to minimize the maximum value in the sequence. As her best friend, can you help her to get the answer?",
    "input": "Each test contains multiple test cases. The first line contains a single integer t ( 1 \u2264 t \u2264 100 ) \u2014 the number of test cases. Each test case consists of two lines. The first line of each test case contains a single integer n ( 1 \u2264 n \u2264 100 ) \u2014 the length of the sequence. The second line of each test case contains n integers a_ 1, a_ 2, . . . , a_ n ( 0 \u2264 a_ i \u2264 10^ 9 ) .",
    "output": "For each test case, print one integer \u2014 the minimal value of the maximum value in the sequence.",
    "note": "In the first test case, Mocha can choose the interval [ 1, 2] , then the sequence becomes [ 0, 0] , where the first element is 1 & 2 , and the second element is 2 & 1 . In the second test case, Mocha can choose the interval [ 1, 3] , then the sequence becomes [ 1, 1, 1] , where the first element is 1 & 3 , the second element is 1 & 1 , and the third element is 3 & 1 .",
    "topics": [
      "bitmasks",
      "constructive algorithms",
      "math"
    ],
    "id": "1559A"
  },
  {
    "title": "Up the Strip",
    "url": "https://codeforces.com/problemset/problem/1558/B",
    "history": "Note that the memory limit in this problem is lower than in others. You have a vertical strip with n cells, numbered consecutively from 1 to n from top to bottom. You also have a token that is initially placed in cell n . You will move the token up until it arrives at cell 1 . Let the token be in cell x > 1 at some moment. One shift of the token can have either of the following kinds: Subtraction: you choose an integer y between 1 and x- 1 , inclusive, and move the token from cell x to cell x - y . Floored division: you choose an integer z between 2 and x , inclusive, and move the token from cell x to cell \u230ax/ z\u230b ( x divided by z rounded down) . Find the number of ways to move the token from cell n to cell 1 using one or more shifts, and print it modulo m . Note that if there are several ways to move the token from one cell to another in one shift, all these ways are considered distinct ( check example explanation for a better understanding) .",
    "input": "The only line contains two integers n and m ( 2 \u2264 n \u2264 4 \u00b7 10^ 6 ; 10^ 8 < m < 10^ 9 ; m is a prime number) \u2014 the length of the strip and the modulo.",
    "output": "Print the number of ways to move the token from cell n to cell 1 , modulo m .",
    "note": "In the first test, there are three ways to move the token from cell 3 to cell 1 in one shift: using subtraction of y = 2 , or using division by z = 2 or z = 3 . There are also two ways to move the token from cell 3 to cell 1 via cell 2 : first subtract y = 1 , and then either subtract y = 1 again or divide by z = 2 . Therefore, there are five ways in total.",
    "topics": [
      "brute force",
      "dp",
      "math",
      "number theory",
      "two pointers"
    ],
    "id": "1558B"
  },
  {
    "title": "Charmed by the Game",
    "url": "https://codeforces.com/problemset/problem/1558/A",
    "history": "Alice and Borys are playing tennis. A tennis match consists of games. In each game, one of the players is serving and the other one is receiving. Players serve in turns: after a game where Alice is serving follows a game where Borys is serving, and vice versa. Each game ends with a victory of one of the players. If a game is won by the serving player, it' s said that this player holds serve. If a game is won by the receiving player, it' s said that this player breaks serve. It is known that Alice won a games and Borys won b games during the match. It is unknown who served first and who won which games. Find all values of k such that exactly k breaks could happen during the match between Alice and Borys in total.",
    "input": "Each test contains multiple test cases. The first line contains the number of test cases t ( 1 \u2264 t \u2264 10^ 3 ) . Description of the test cases follows. Each of the next t lines describes one test case and contains two integers a and b ( 0 \u2264 a, b \u2264 10^ 5 ; a + b > 0 ) \u2014 the number of games won by Alice and Borys, respectively. It is guaranteed that the sum of a + b over all test cases does not exceed 2 \u00b7 10^ 5 .",
    "output": "For each test case print two lines. In the first line, print a single integer m ( 1 \u2264 m \u2264 a + b + 1 ) \u2014 the number of values of k such that exactly k breaks could happen during the match. In the second line, print m distinct integers k_ 1, k_ 2, . . . , k_ m ( 0 \u2264 k_ 1 < k_ 2 < . . . < k_ m \u2264 a + b ) \u2014 the sought values of k in increasing order.",
    "note": "In the first test case, any number of breaks between 0 and 3 could happen during the match: Alice holds serve, Borys holds serve, Alice holds serve: 0 breaks; Borys holds serve, Alice holds serve, Alice breaks serve: 1 break; Borys breaks serve, Alice breaks serve, Alice holds serve: 2 breaks; Alice breaks serve, Borys breaks serve, Alice breaks serve: 3 breaks. In the second test case, the players could either both hold serves ( 0 breaks) or both break serves ( 2 breaks) . In the third test case, either 2 or 3 breaks could happen: Borys holds serve, Borys breaks serve, Borys holds serve, Borys breaks serve, Borys holds serve: 2 breaks; Borys breaks serve, Borys holds serve, Borys breaks serve, Borys holds serve, Borys breaks serve: 3 breaks.",
    "topics": [
      "brute force",
      "math"
    ],
    "id": "1558A"
  },
  {
    "title": "Moamen and XOR",
    "url": "https://codeforces.com/problemset/problem/1557/C",
    "history": "Moamen and Ezzat are playing a game. They create an array a of n non- negative integers where every element is less than 2^ k . Moamen wins if a_ 1 & a_ 2 & a_ 3 & . . . & a_ n \u2265 a_ 1 \u2295 a_ 2 \u2295 a_ 3 \u2295. . . \u2295 a_ n . Here & denotes the bitwise AND operation, and \u2295 denotes the bitwise XOR operation. Please calculate the number of winning for Moamen arrays a . As the result may be very large, print the value modulo 1 000 000 007 ( 10^ 9 + 7 ) .",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 5 ) \u2014 the number of test cases. Each test case consists of one line containing two integers n and k ( 1 \u2264 n\u2264 2\u00b7 10^ 5 , 0 \u2264 k \u2264 2\u00b7 10^ 5 ) .",
    "output": "For each test case, print a single value \u2014 the number of different arrays that Moamen wins with. Print the result modulo 1 000 000 007 ( 10^ 9 + 7 ) .",
    "note": "In the first example, n = 3 , k = 1 . As a result, all the possible arrays are [ 0, 0, 0] , [ 0, 0, 1] , [ 0, 1, 0] , [ 1, 0, 0] , [ 1, 1, 0] , [ 0, 1, 1] , [ 1, 0, 1] , and [ 1, 1, 1] . Moamen wins in only 5 of them: [ 0, 0, 0] , [ 1, 1, 0] , [ 0, 1, 1] , [ 1, 0, 1] , and [ 1, 1, 1] .",
    "topics": [
      "bitmasks",
      "combinatorics",
      "dp",
      "math",
      "matrices"
    ],
    "id": "1557C"
  },
  {
    "title": "Ezzat and Two Subsequences",
    "url": "https://codeforces.com/problemset/problem/1557/A",
    "history": "Ezzat has an array of n integers ( maybe negative) . He wants to split it into two non- empty subsequences a and b , such that every element from the array belongs to exactly one subsequence, and the value of f( a) + f( b) is the maximum possible value, where f( x) is the average of the subsequence x . A sequence x is a subsequence of a sequence y if x can be obtained from y by deletion of several ( possibly, zero or all) elements. The average of a subsequence is the sum of the numbers of this subsequence divided by the size of the subsequence. For example, the average of [ 1, 5, 6] is ( 1+ 5+ 6) / 3 = 12/ 3 = 4 , so f( [ 1, 5, 6] ) = 4 .",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 3 ) \u2014 the number of test cases. Each test case consists of two lines. The first line contains a single integer n ( 2 \u2264 n \u2264 10^ 5 ) . The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( - 10^ 9 \u2264 a_ i \u2264 10^ 9 ) . It is guaranteed that the sum of n over all test cases does not exceed 3\u00b710^ 5 .",
    "output": "For each test case, print a single value \u2014 the maximum value that Ezzat can achieve. Your answer is considered correct if its absolute or relative error does not exceed 10^ - 6 . Formally, let your answer be a , and the jury' s answer be b . Your answer is accepted if and only if | a - b| / max( 1, | b| ) \u2264 10^ - 6 .",
    "note": "In the first test case, the array is [ 3, 1, 2] . These are all the possible ways to split this array: a = [ 3] , b = [ 1, 2] , so the value of f( a) + f( b) = 3 + 1. 5 = 4. 5 . a = [ 3, 1] , b = [ 2] , so the value of f( a) + f( b) = 2 + 2 = 4 . a = [ 3, 2] , b = [ 1] , so the value of f( a) + f( b) = 2. 5 + 1 = 3. 5 . Therefore, the maximum possible value 4. 5 . In the second test case, the array is [ - 7, - 6, - 6] . These are all the possible ways to split this array: a = [ - 7] , b = [ - 6, - 6] , so the value of f( a) + f( b) = ( - 7) + ( - 6) = - 13 . a = [ - 7, - 6] , b = [ - 6] , so the value of f( a) + f( b) = ( - 6. 5) + ( - 6) = - 12. 5 . Therefore, the maximum possible value - 12. 5 .",
    "topics": [
      "brute force",
      "math",
      "sortings"
    ],
    "id": "1557A"
  },
  {
    "title": "DIY Tree",
    "url": "https://codeforces.com/problemset/problem/1556/H",
    "history": "William really likes puzzle kits. For one of his birthdays, his friends gifted him a complete undirected edge- weighted graph consisting of n vertices. He wants to build a spanning tree of this graph, such that for the first k vertices the following condition is satisfied: the degree of a vertex with index i does not exceed d_ i . Vertices from k + 1 to n may have any degree. William wants you to find the minimum weight of a spanning tree that satisfies all the conditions. A spanning tree is a subset of edges of a graph that forms a tree on all n vertices of the graph. The weight of a spanning tree is defined as the sum of weights of all the edges included in a spanning tree.",
    "input": "The first line of input contains two integers n , k ( 2 \u2264 n \u2264 50 , 1 \u2264 k \u2264 min( n - 1, 5) ) . The second line contains k integers d_ 1, d_ 2, . . . , d_ k ( 1 \u2264 d_ i \u2264 n ) . The i - th of the next n - 1 lines contains n - i integers w_ i, i+ 1, w_ i, i+ 2, . . . , w_ i, n ( 1 \u2264 w_ i, j\u2264 100 ) : weights of edges ( i, i+ 1) , ( i, i+ 2) , . . . , ( i, n) .",
    "output": "Print one integer: the minimum weight of a spanning tree under given degree constraints for the first k vertices.",
    "note": "",
    "topics": [
      "graphs",
      "greedy",
      "math",
      "probabilities"
    ],
    "id": "1556H"
  },
  {
    "title": "Sports Betting",
    "url": "https://codeforces.com/problemset/problem/1556/F",
    "history": "William is not only interested in trading but also in betting on sports matches. n teams participate in each match. Each team is characterized by strength a_ i . Each two teams i < j play with each other exactly once. Team i wins with probability a_ i/ a_ i + a_ j and team j wins with probability a_ j/ a_ i + a_ j . The team is called a winner if it directly or indirectly defeated all other teams. Team a defeated ( directly or indirectly) team b if there is a sequence of teams c_ 1 , c_ 2 , . . . c_ k such that c_ 1 = a , c_ k = b and team c_ i defeated team c_ i + 1 for all i from 1 to k - 1 . Note that it is possible that team a defeated team b and in the same time team b defeated team a . William wants you to find the expected value of the number of winners.",
    "input": "The first line contains a single integer n ( 1 \u2264 n \u2264 14 ) , which is the total number of teams participating in a match. The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 6 ) \u2014 the strengths of teams participating in a match.",
    "output": "Output a single integer \u2014 the expected value of the number of winners of the tournament modulo 10^ 9 + 7 . Formally, let M = 10^ 9+ 7 . It can be demonstrated that the answer can be presented as a irreducible fraction p/ q , where p and q are integers and q \u2261\u03380 M . Output a single integer equal to p \u00b7 q^ - 1 M . In other words, output an integer x such that 0 \u2264 x < M and x \u00b7 q \u2261 p M .",
    "note": "To better understand in which situation several winners are possible let' s examine the second test: One possible result of the tournament is as follows ( a \u2192 b means that a defeated b ) : 1 \u2192 2 2 \u2192 3 3 \u2192 1 1 \u2192 4 1 \u2192 5 2 \u2192 4 2 \u2192 5 3 \u2192 4 3 \u2192 5 4 \u2192 5 Or more clearly in the picture: In this case every team from the set { 1, 2, 3 } directly or indirectly defeated everyone. I. e. : 1 st defeated everyone because they can get to everyone else in the following way 1 \u2192 2 , 1 \u2192 2 \u2192 3 , 1 \u2192 4 , 1 \u2192 5 . 2 nd defeated everyone because they can get to everyone else in the following way 2 \u2192 3 , 2 \u2192 3 \u2192 1 , 2 \u2192 4 , 2 \u2192 5 . 3 rd defeated everyone because they can get to everyone else in the following way 3 \u2192 1 , 3 \u2192 1 \u2192 2 , 3 \u2192 4 , 3 \u2192 5 . Therefore the total number of winners is 3 .",
    "topics": [
      "bitmasks",
      "combinatorics",
      "dp",
      "graphs",
      "math",
      "probabilities"
    ],
    "id": "1556F"
  },
  {
    "title": "Take a Guess",
    "url": "https://codeforces.com/problemset/problem/1556/D",
    "history": "This is an interactive taskWilliam has a certain sequence of integers a_ 1, a_ 2, . . . , a_ n in his mind, but due to security concerns, he does not want to reveal it to you completely. William is ready to respond to no more than 2 \u00b7 n of the following questions: What is the result of a bitwise AND of two items with indices i and j ( i = \u0338 j ) What is the result of a bitwise OR of two items with indices i and j ( i = \u0338 j ) You can ask William these questions and you need to find the k - th smallest number of the sequence. Formally the k - th smallest number is equal to the number at the k - th place in a 1- indexed array sorted in non- decreasing order. For example in array [ 5, 3, 3, 10, 1] 4 th smallest number is equal to 5 , and 2 nd and 3 rd are 3 . InteractionIn the first line you will be given two integers n and k ( 3 \u2264 n \u2264 10^ 4, 1 \u2264 k \u2264 n) , which are the number of items in the sequence a and the number k . After that, you can ask no more than 2 \u00b7 n questions ( not including the \" finish\" operation) . Each line of your output may be of one of the following types: \" or i j\" ( 1 \u2264 i, j \u2264 n, i = \u0338 j) , where i and j are indices of items for which you want to calculate the bitwise OR. \" and i j\" ( 1 \u2264 i, j \u2264 n, i = \u0338 j) , where i and j are indices of items for which you want to calculate the bitwise AND. \" finish res\" , where res is the k th smallest number in the sequence. After outputting this line the program execution must conclude. In response to the first two types of queries, you will get an integer x , the result of the operation for the numbers you have selected. After outputting a line do not forget to output a new line character and flush the output buffer. Otherwise you will get the \" Idleness limit exceeded\" . To flush the buffer use: fflush( stdout) in C+ + System. out. flush( ) in Java stdout. flush( ) in Python flush( output) in Pascal for other languages refer to documentation If you perform an incorrect query the response will be - 1 . After receiving response - 1 you must immediately halt your program in order to receive an \" Incorrect answer\" verdict. Hacking To perform a hack you will need to use the following format: The first line must contain two integers n and k ( 3 \u2264 n \u2264 10^ 4, 1 \u2264 k \u2264 n) , which are the number of items in the sequence a and the number k . The second line must contain n integers a_ 1, a_ 2, . . . , a_ n ( 0 \u2264 a_ i \u2264 10^ 9) , the sequence a .",
    "input": "It is guaranteed that for each element in a sequence the condition 0 \u2264 a_ i \u2264 10^ 9 is satisfied.",
    "output": "",
    "note": "In the example, the hidden sequence is [ 1, 6, 4, 2, 3, 5, 4] . Below is the interaction in the example. Query ( contestant' s program) Response ( interactor) Notesand 2 52 a_ 2= 6 , a_ 5= 3 . Interactor returns bitwise AND of the given numbers. or 5 67 a_ 5= 3 , a_ 6= 5 . Interactor returns bitwise OR of the given numbers. finish 5 5 is the correct answer. Note that you must find the value and not the index of the kth smallest number.",
    "topics": [
      "bitmasks",
      "constructive algorithms",
      "interactive",
      "math"
    ],
    "id": "1556D"
  },
  {
    "title": "A Variety of Operations",
    "url": "https://codeforces.com/problemset/problem/1556/A",
    "history": "William has two numbers a and b initially both equal to zero. William mastered performing three different operations with them quickly. Before performing each operation some positive integer k is picked, which is then used to perform one of the following operations: ( note, that for each operation you can choose a new positive integer k ) add number k to both a and b , or add number k to a and subtract k from b , or add number k to b and subtract k from a . Note that after performing operations, numbers a and b may become negative as well. William wants to find out the minimal number of operations he would have to perform to make a equal to his favorite number c and b equal to his second favorite number d .",
    "input": "Each test contains multiple test cases. The first line contains the number of test cases t ( 1 \u2264 t \u2264 10^ 4 ) . Description of the test cases follows. The only line of each test case contains two integers c and d ( 0 \u2264 c, d \u2264 10^ 9) , which are William' s favorite numbers and which he wants a and b to be transformed into.",
    "output": "For each test case output a single number, which is the minimal number of operations which William would have to perform to make a equal to c and b equal to d , or - 1 if it is impossible to achieve this using the described operations.",
    "note": "Let us demonstrate one of the suboptimal ways of getting a pair ( 3, 5) : Using an operation of the first type with k= 1 , the current pair would be equal to ( 1, 1) . Using an operation of the third type with k= 8 , the current pair would be equal to ( - 7, 9) . Using an operation of the second type with k= 7 , the current pair would be equal to ( 0, 2) . Using an operation of the first type with k= 3 , the current pair would be equal to ( 3, 5) .",
    "topics": [
      "math"
    ],
    "id": "1556A"
  },
  {
    "title": "PizzaForces",
    "url": "https://codeforces.com/problemset/problem/1555/A",
    "history": "PizzaForces is Petya' s favorite pizzeria. PizzaForces makes and sells pizzas of three sizes: small pizzas consist of 6 slices, medium ones consist of 8 slices, and large pizzas consist of 10 slices each. Baking them takes 15 , 20 and 25 minutes, respectively. Petya' s birthday is today, and n of his friends will come, so he decided to make an order from his favorite pizzeria. Petya wants to order so much pizza that each of his friends gets at least one slice of pizza. The cooking time of the order is the total baking time of all the pizzas in the order. Your task is to determine the minimum number of minutes that is needed to make pizzas containing at least n slices in total. For example: if 12 friends come to Petya' s birthday, he has to order pizzas containing at least 12 slices in total. He can order two small pizzas, containing exactly 12 slices, and the time to bake them is 30 minutes; if 15 friends come to Petya' s birthday, he has to order pizzas containing at least 15 slices in total. He can order a small pizza and a large pizza, containing 16 slices, and the time to bake them is 40 minutes; if 300 friends come to Petya' s birthday, he has to order pizzas containing at least 300 slices in total. He can order 15 small pizzas, 10 medium pizzas and 13 large pizzas, in total they contain 15 \u00b7 6 + 10 \u00b7 8 + 13 \u00b7 10 = 300 slices, and the total time to bake them is 15 \u00b7 15 + 10 \u00b7 20 + 13 \u00b7 25 = 750 minutes; if only one friend comes to Petya' s birthday, he can order a small pizza, and the time to bake it is 15 minutes.",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of testcases. Each testcase consists of a single line that contains a single integer n ( 1 \u2264 n \u2264 10^ 16 ) \u2014 the number of Petya' s friends.",
    "output": "For each testcase, print one integer \u2014 the minimum number of minutes that is needed to bake pizzas containing at least n slices in total.",
    "note": "",
    "topics": [
      "brute force",
      "math"
    ],
    "id": "1555A"
  },
  {
    "title": "You",
    "url": "https://codeforces.com/problemset/problem/1554/E",
    "history": "You are given a tree with n nodes. As a reminder, a tree is a connected undirected graph without cycles. Let a_ 1, a_ 2, . . . , a_ n be a sequence of integers. Perform the following operation exactly n times: Select an unerased node u . Assign a_ u : = number of unerased nodes adjacent to u . Then, erase the node u along with all edges that have it as an endpoint. For each integer k from 1 to n , find the number, modulo 998 244 353 , of different sequences a_ 1, a_ 2, . . . , a_ n that satisfy the following conditions: it is possible to obtain a by performing the aforementioned operations exactly n times in some order. gcd( a_ 1, a_ 2, . . . , a_ n) = k . Here, gcd means the greatest common divisor of the elements in a .",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 10 000 ) \u2014 the number of test cases. The first line of each test case contains a single integer n ( 2 \u2264 n \u2264 10^ 5 ) . Each of the next n - 1 lines contains two integers u and v ( 1 \u2264 u, v \u2264 n ) indicating there is an edge between vertices u and v . It is guaranteed that the given edges form a tree. It is guaranteed that the sum of n over all test cases doesn' t exceed 3 \u00b7 10^ 5 .",
    "output": "For each test case, print n integers in a single line, where for each k from 1 to n , the k - th integer denotes the answer when gcd equals to k .",
    "note": "In the first test case, If we delete the nodes in order 1 \u2192 2 \u2192 3 or 1 \u2192 3 \u2192 2 , then the obtained sequence will be a = [ 2, 0, 0] which has gcd equals to 2 . If we delete the nodes in order 2 \u2192 1 \u2192 3 , then the obtained sequence will be a = [ 1, 1, 0] which has gcd equals to 1 . If we delete the nodes in order 3 \u2192 1 \u2192 2 , then the obtained sequence will be a = [ 1, 0, 1] which has gcd equals to 1 . If we delete the nodes in order 2 \u2192 3 \u2192 1 or 3 \u2192 2 \u2192 1 , then the obtained sequence will be a = [ 0, 1, 1] which has gcd equals to 1 . Note that here we are counting the number of different sequences, not the number of different orders of deleting nodes.",
    "topics": [
      "dfs and similar",
      "dp",
      "math",
      "number theory"
    ],
    "id": "1554E"
  },
  {
    "title": "Cobb",
    "url": "https://codeforces.com/problemset/problem/1554/B",
    "history": "You are given n integers a_ 1, a_ 2, . . . , a_ n and an integer k . Find the maximum value of i \u00b7 j - k \u00b7 ( a_ i | a_ j) over all pairs ( i, j) of integers with 1 \u2264 i < j \u2264 n . Here, | is the bitwise OR operator.",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 10 000 ) \u2014 the number of test cases. The first line of each test case contains two integers n ( 2 \u2264 n \u2264 10^ 5 ) and k ( 1 \u2264 k \u2264min( n, 100) ) . The second line of each test case contains n integers a_ 1, a_ 2, . . . , a_ n ( 0 \u2264 a_ i \u2264 n ) . It is guaranteed that the sum of n over all test cases doesn' t exceed 3 \u00b7 10^ 5 .",
    "output": "For each test case, print a single integer \u2014 the maximum possible value of i \u00b7 j - k \u00b7 ( a_ i | a_ j) .",
    "note": "Let f( i, j) = i \u00b7 j - k \u00b7 ( a_ i | a_ j) . In the first test case, f( 1, 2) = 1 \u00b7 2 - k \u00b7 ( a_ 1 | a_ 2) = 2 - 3 \u00b7 ( 1 | 1) = - 1 . f( 1, 3) = 1 \u00b7 3 - k \u00b7 ( a_ 1 | a_ 3) = 3 - 3 \u00b7 ( 1 | 3) = - 6 . f( 2, 3) = 2 \u00b7 3 - k \u00b7 ( a_ 2 | a_ 3) = 6 - 3 \u00b7 ( 1 | 3) = - 3 . So the maximum is f( 1, 2) = - 1 . In the fourth test case, the maximum is f( 3, 4) = 12 .",
    "topics": [
      "bitmasks",
      "brute force",
      "greedy",
      "math"
    ],
    "id": "1554B"
  },
  {
    "title": "Stairs",
    "url": "https://codeforces.com/problemset/problem/1553/I",
    "history": "For a permutation p of numbers 1 through n , we define a stair array a as follows: a_ i is length of the longest segment of permutation which contains position i and is made of consecutive values in sorted order: [ x, x+ 1, . . . , y- 1, y] or [ y, y- 1, . . . , x+ 1, x] for some x \u2264 y . For example, for permutation p = [ 4, 1, 2, 3, 7, 6, 5] we have a = [ 1, 3, 3, 3, 3, 3, 3] . You are given the stair array a . Your task is to calculate the number of permutations which have stair array equal to a . Since the number can be big, compute it modulo 998 244 353 . Note that this number can be equal to zero.",
    "input": "The first line of input contains integer n ( 1 \u2264 n \u2264 10^ 5 ) \u2014 the length of a stair array a . The second line of input contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 n ) .",
    "output": "Print the number of permutations which have stair array equal to a . Since the number can be big, compute it modulo 998 244 353 .",
    "note": "",
    "topics": [
      "combinatorics",
      "divide and conquer",
      "dp",
      "fft",
      "math"
    ],
    "id": "1553I"
  },
  {
    "title": "Common Divisor Graph",
    "url": "https://codeforces.com/problemset/problem/1553/G",
    "history": "Consider a sequence of distinct integers a_ 1, . . . , a_ n , each representing one node of a graph. There is an edge between two nodes if the two values are not coprime, i. e. they have a common divisor greater than 1 . There are q queries, in each query, you want to get from one given node a_ s to another a_ t . In order to achieve that, you can choose an existing value a_ i and create new value a_ n+ 1 = a_ i \u00b7 ( 1 + a_ i) , with edges to all values that are not coprime with a_ n+ 1 . Also, n gets increased by 1 . You can repeat that operation multiple times, possibly making the sequence much longer and getting huge or repeated values. What' s the minimum possible number of newly created nodes so that a_ t is reachable from a_ s ? Queries are independent. In each query, you start with the initial sequence a given in the input.",
    "input": "The first line contains two integers n and q ( 2 \u2264 n \u2264 150 000 , 1 \u2264 q \u2264 300 000 ) \u2014 the size of the sequence and the number of queries. The second line contains n distinct integers a_ 1, a_ 2, . . . , a_ n ( 2 \u2264 a_ i \u2264 10^ 6 , a_ i = \u0338 a_ j if i j ) . The j - th of the following q lines contains two distinct integers s_ j and t_ j ( 1 \u2264 s_ j, t_ j \u2264 n , s_ j = \u0338 t_ j ) \u2014 indices of nodes for j - th query.",
    "output": "Print q lines. The j - th line should contain one integer: the minimum number of new nodes you create in order to move from a_ s_ j to a_ t_ j .",
    "note": "In the first example, you can first create new value 2 \u00b7 3 = 6 or 10 \u00b7 11 = 110 or 3 \u00b7 4 = 12 . None of that is needed in the first query because you can already get from a_ 1 = 2 to a_ 2 = 10 . In the second query, it' s optimal to first create 6 or 12 . For example, creating 6 makes it possible to get from a_ 1 = 2 to a_ 3 = 3 with a path ( 2, 6, 3) . In the last query of the second example, we want to get from a_ 3 = 7 to a_ 5 = 25 . One way to achieve that is to first create 6 \u00b7 7 = 42 and then create 25 \u00b7 26 = 650 . The final graph has seven nodes and it contains a path from a_ 3 = 7 to a_ 5 = 25 .",
    "topics": [
      "brute force",
      "constructive algorithms",
      "dsu",
      "graphs",
      "hashing",
      "math",
      "number theory"
    ],
    "id": "1553G"
  },
  {
    "title": "Pairwise Modulo",
    "url": "https://codeforces.com/problemset/problem/1553/F",
    "history": "You have an array a consisting of n distinct positive integers, numbered from 1 to n . Define p_ k as p_ k = \u2211_ 1 \u2264 i, j \u2264 k a_ i a_ j, where x y denotes the remainder when x is divided by y . You have to find and print p_ 1, p_ 2, . . . , p_ n .",
    "input": "The first line contains n \u2014 the length of the array ( 2 \u2264 n \u2264 2 \u00b7 10^ 5 ) . The second line contains n space- separated distinct integers a_ 1, . . . , a_ n ( 1 \u2264 a_ i \u2264 3 \u00b7 10^ 5 , a_ i = \u0338 a_ j if i = \u0338 j ) .",
    "output": "Print n integers p_ 1, p_ 2, . . . , p_ n .",
    "note": "",
    "topics": [
      "data structures",
      "math"
    ],
    "id": "1553F"
  },
  {
    "title": "Permutation Shift",
    "url": "https://codeforces.com/problemset/problem/1553/E",
    "history": "An identity permutation of length n is an array [ 1, 2, 3, . . . , n] . We performed the following operations to an identity permutation of length n : firstly, we cyclically shifted it to the right by k positions, where k is unknown to you ( the only thing you know is that 0 \u2264 k \u2264 n - 1 ) . When an array is cyclically shifted to the right by k positions, the resulting array is formed by taking k last elements of the original array ( without changing their relative order) , and then appending n - k first elements to the right of them ( without changing relative order of the first n - k elements as well) . For example, if we cyclically shift the identity permutation of length 6 by 2 positions, we get the array [ 5, 6, 1, 2, 3, 4] ; secondly, we performed the following operation at most m times: pick any two elements of the array and swap them. You are given the values of n and m , and the resulting array. Your task is to find all possible values of k in the cyclic shift operation.",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 10^ 5 ) \u2014 the number of test cases. Each test case consists of two lines. The first line contains two integers n and m ( 3 \u2264 n \u2264 3 \u00b7 10^ 5 ; 0 \u2264 m \u2264n/ 3 ) . The second line contains n integers p_ 1, p_ 2, . . . , p_ n ( 1 \u2264 p_ i \u2264 n , each integer from 1 to n appears in this sequence exactly once) \u2014 the resulting array. The sum of n over all test cases does not exceed 3 \u00b7 10^ 5 .",
    "output": "For each test case, print the answer in the following way: firstly, print one integer r ( 0 \u2264 r \u2264 n ) \u2014 the number of possible values of k for the cyclic shift operation; secondly, print r integers k_ 1, k_ 2, . . . , k_ r ( 0 \u2264 k_ i \u2264 n - 1 ) \u2014 all possible values of k in increasing order.",
    "note": "Consider the example: in the first test case, the only possible value for the cyclic shift is 3 . If we shift [ 1, 2, 3, 4] by 3 positions, we get [ 2, 3, 4, 1] . Then we can swap the 3 - rd and the 4 - th elements to get the array [ 2, 3, 1, 4] ; in the second test case, the only possible value for the cyclic shift is 0 . If we shift [ 1, 2, 3] by 0 positions, we get [ 1, 2, 3] . Then we don' t change the array at all ( we stated that we made at most 1 swap) , so the resulting array stays [ 1, 2, 3] ; in the third test case, all values from 0 to 2 are possible for the cyclic shift: if we shift [ 1, 2, 3] by 0 positions, we get [ 1, 2, 3] . Then we can swap the 1 - st and the 3 - rd elements to get [ 3, 2, 1] ; if we shift [ 1, 2, 3] by 1 position, we get [ 3, 1, 2] . Then we can swap the 2 - nd and the 3 - rd elements to get [ 3, 2, 1] ; if we shift [ 1, 2, 3] by 2 positions, we get [ 2, 3, 1] . Then we can swap the 1 - st and the 2 - nd elements to get [ 3, 2, 1] ; in the fourth test case, we stated that we didn' t do any swaps after the cyclic shift, but no value of cyclic shift could produce the array [ 1, 2, 3, 4, 6, 5] .",
    "topics": [
      "brute force",
      "combinatorics",
      "constructive algorithms",
      "dfs and similar",
      "dsu",
      "graphs",
      "math"
    ],
    "id": "1553E"
  },
  {
    "title": "Digits Sum",
    "url": "https://codeforces.com/problemset/problem/1553/A",
    "history": "Let' s define S( x) to be the sum of digits of number x written in decimal system. For example, S( 5) = 5 , S( 10) = 1 , S( 322) = 7 . We will call an integer x interesting if S( x + 1) < S( x) . In each test you will be given one integer n . Your task is to calculate the number of integers x such that 1 \u2264 x \u2264 n and x is interesting.",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 1000 ) \u2014 number of test cases. Then t lines follow, the i - th line contains one integer n ( 1 \u2264 n \u2264 10^ 9 ) for the i - th test case.",
    "output": "Print t integers, the i - th should be the answer for the i - th test case.",
    "note": "The first interesting number is equal to 9 .",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "1553A"
  },
  {
    "title": "Organizing a Music Festival",
    "url": "https://codeforces.com/problemset/problem/1552/I",
    "history": "You are the organizer of the famous \" Zurich Music Festival\" . There will be n singers who will perform at the festival, identified by the integers 1 , 2 , . . . , n . You must choose in which order they are going to perform on stage. You have m friends and each of them has a set of favourite singers. More precisely, for each 1\u2264 i\u2264 m , the i - th friend likes singers s_ i, 1, s_ i, 2, . . . , s_ i, q_ i . A friend of yours is happy if the singers he likes perform consecutively ( in an arbitrary order) . An ordering of the singers is valid if it makes all your friends happy. Compute the number of valid orderings modulo 998 244 353 .",
    "input": "The first line contains two integers n and m ( 1\u2264 n, m\u2264 100 ) \u2014 the number of singers and the number of friends correspondingly. The i - th of the next m lines contains the integer q_ i ( 1\u2264 q_ i\u2264 n ) \u2014 the number of favorite singers of the i - th friend \u2013 followed by the q_ i integers s_ i, 1, s_ i, 2, . . . , s_ i, q_ i ( 1\u2264 s_ i, 1< s_ i, 2< \u22ef< s_ i, q_ i\u2264 n ) \u2014 the indexes of his favorite singers.",
    "output": "Print the number of valid orderings of the singers modulo 998 244 353 .",
    "note": "Explanation of the first sample: There are 3 singers and only 1 friend. The friend likes the two singers 1 and 3 . Thus, the 4 valid orderings are: 1 3 2 2 1 3 2 3 1 3 1 2 Explanation of the second sample: There are 5 singers and 5 friends. One can show that no ordering is valid. Explanation of the third sample: There are 100 singers and only 1 friend. The friend likes only singer 50 , hence all the 100! possible orderings are valid. Explanation of the fourth sample: There are 5 singers and only 1 friend. The friend likes all the singers, hence all the 5! = 120 possible orderings are valid.",
    "topics": [
      "dfs and similar",
      "math"
    ],
    "id": "1552I"
  },
  {
    "title": "Array Differentiation",
    "url": "https://codeforces.com/problemset/problem/1552/D",
    "history": "You are given a sequence of n integers a_ 1, a_ 2, . . . , a_ n . Does there exist a sequence of n integers b_ 1, b_ 2, . . . , b_ n such that the following property holds? For each 1 \u2264 i \u2264 n , there exist two ( not necessarily distinct) indices j and k ( 1 \u2264 j, k \u2264 n ) such that a_ i = b_ j - b_ k .",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 20 ) \u2014 the number of test cases. Then t test cases follow. The first line of each test case contains one integer n ( 1 \u2264 n \u2264 10 ) . The second line of each test case contains the n integers a_ 1, . . . , a_ n ( - 10^ 5 \u2264 a_ i \u2264 10^ 5 ) .",
    "output": "For each test case, output a line containing YES if a sequence b_ 1, . . . , b_ n satisfying the required property exists, and NO otherwise.",
    "note": "In the first test case, the sequence b = [ - 9, 2, 1, 3, - 2] satisfies the property. Indeed, the following holds: a_ 1 = 4 = 2 - ( - 2) = b_ 2 - b_ 5 ; a_ 2 = - 7 = - 9 - ( - 2) = b_ 1 - b_ 5 ; a_ 3 = - 1 = 1 - 2 = b_ 3 - b_ 2 ; a_ 4 = 5 = 3 - ( - 2) = b_ 4 - b_ 5 ; a_ 5 = 10 = 1 - ( - 9) = b_ 3 - b_ 1 . In the second test case, it is sufficient to choose b = [ 0] , since a_ 1 = 0 = 0 - 0 = b_ 1 - b_ 1 . In the third test case, it is possible to show that no sequence b of length 3 satisfies the property.",
    "topics": [
      "bitmasks",
      "brute force",
      "constructive algorithms",
      "dfs and similar",
      "dp",
      "graphs",
      "math"
    ],
    "id": "1552D"
  },
  {
    "title": "Domino (hard version)",
    "url": "https://codeforces.com/problemset/problem/1551/D2",
    "history": "The only difference between this problem and D1 is that you don' t have to provide the way to construct the answer in D1, but you have to do it in this problem. There' s a table of n \u00d7 m cells ( n rows and m columns) . The value of n \u00b7 m is even. A domino is a figure that consists of two cells having a common side. It may be horizontal ( one of the cells is to the right of the other) or vertical ( one of the cells is above the other) . You need to place nm/ 2 dominoes on the table so that exactly k of them are horizontal and all the other dominoes are vertical. The dominoes cannot overlap and must fill the whole table.",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 10 ) \u2014 the number of test cases. Then t test cases follow. Each test case consists of a single line. The line contains three integers n , m , k ( 1 \u2264 n, m \u2264 100 , 0 \u2264 k \u2264nm/ 2 , n \u00b7 m is even) \u2014 the count of rows, columns and horizontal dominoes, respectively.",
    "output": "For each test case: print \" NO\" if it' s not possible to place the dominoes on the table in the described way; otherwise, print \" YES\" on a separate line, then print n lines so that each of them contains m lowercase letters of the Latin alphabet \u2014 the layout of the dominoes on the table. Each cell of the table must be marked by the letter so that for every two cells having a common side, they are marked by the same letters if and only if they are occupied by the same domino. I. e. both cells of the same domino must be marked with the same letter, but two dominoes that share a side must be marked with different letters. If there are multiple solutions, print any of them.",
    "note": "",
    "topics": [
      "constructive algorithms",
      "implementation",
      "math"
    ],
    "id": "1551D2"
  },
  {
    "title": "Domino (easy version)",
    "url": "https://codeforces.com/problemset/problem/1551/D1",
    "history": "The only difference between this problem and D2 is that you don' t have to provide the way to construct the answer in this problem, but you have to do it in D2. There' s a table of n \u00d7 m cells ( n rows and m columns) . The value of n \u00b7 m is even. A domino is a figure that consists of two cells having a common side. It may be horizontal ( one of the cells is to the right of the other) or vertical ( one of the cells is above the other) . You need to find out whether it is possible to place nm/ 2 dominoes on the table so that exactly k of them are horizontal and all the other dominoes are vertical. The dominoes cannot overlap and must fill the whole table.",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 10 ) \u2014 the number of test cases. Then t test cases follow. Each test case consists of a single line. The line contains three integers n , m , k ( 1 \u2264 n, m \u2264 100 , 0 \u2264 k \u2264nm/ 2 , n \u00b7 m is even) \u2014 the number of rows, columns and horizontal dominoes, respectively.",
    "output": "For each test case output \" YES\" , if it is possible to place dominoes in the desired way, or \" NO\" otherwise. You may print each letter in any case ( YES, yes, Yes will all be recognized as positive answer, NO, no and nO will all be recognized as negative answer) .",
    "note": "",
    "topics": [
      "constructive algorithms",
      "math"
    ],
    "id": "1551D1"
  },
  {
    "title": "Polycarp and Coins",
    "url": "https://codeforces.com/problemset/problem/1551/A",
    "history": "Polycarp must pay exactly n burles at the checkout. He has coins of two nominal values: 1 burle and 2 burles. Polycarp likes both kinds of coins equally. So he doesn' t want to pay with more coins of one type than with the other. Thus, Polycarp wants to minimize the difference between the count of coins of 1 burle and 2 burles being used. Help him by determining two non- negative integer values c_ 1 and c_ 2 which are the number of coins of 1 burle and 2 burles, respectively, so that the total value of that number of coins is exactly n ( i. e. c_ 1 + 2 \u00b7 c_ 2 = n ) , and the absolute value of the difference between c_ 1 and c_ 2 is as little as possible ( i. e. you must minimize | c_ 1- c_ 2| ) .",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. Then t test cases follow. Each test case consists of one line. This line contains one integer n ( 1 \u2264 n \u2264 10^ 9 ) \u2014 the number of burles to be paid by Polycarp.",
    "output": "For each test case, output a separate line containing two integers c_ 1 and c_ 2 ( c_ 1, c_ 2 \u2265 0 ) separated by a space where c_ 1 is the number of coins of 1 burle and c_ 2 is the number of coins of 2 burles. If there are multiple optimal solutions, print any one.",
    "note": "The answer for the first test case is \" 334 333\" . The sum of the nominal values of all coins is 334 \u00b7 1 + 333 \u00b7 2 = 1000 , whereas | 334 - 333| = 1 . One can' t get the better value because if | c_ 1 - c_ 2| = 0 , then c_ 1 = c_ 2 and c_ 1 \u00b7 1 + c_ 1 \u00b7 2 = 1000 , but then the value of c_ 1 isn' t an integer. The answer for the second test case is \" 10 10\" . The sum of the nominal values is 10 \u00b7 1 + 10 \u00b7 2 = 30 and | 10 - 10| = 0 , whereas there' s no number having an absolute value less than 0 .",
    "topics": [
      "greedy",
      "math"
    ],
    "id": "1551A"
  },
  {
    "title": "Excellent Arrays",
    "url": "https://codeforces.com/problemset/problem/1550/D",
    "history": "Let' s call an integer array a_ 1, a_ 2, . . . , a_ n good if a_ i = \u0338 i for each i . Let F( a) be the number of pairs ( i, j) ( 1 \u2264 i < j \u2264 n ) such that a_ i + a_ j = i + j . Let' s say that an array a_ 1, a_ 2, . . . , a_ n is excellent if: a is good; l \u2264 a_ i \u2264 r for each i ; F( a) is the maximum possible among all good arrays of size n . Given n , l and r , calculate the number of excellent arrays modulo 10^ 9 + 7 .",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 1000 ) \u2014 the number of test cases. The first and only line of each test case contains three integers n , l , and r ( 2 \u2264 n \u2264 2 \u00b7 10^ 5 ; - 10^ 9 \u2264 l \u2264 1 ; n \u2264 r \u2264 10^ 9 ) . It' s guaranteed that the sum of n doesn' t exceed 2 \u00b7 10^ 5 .",
    "output": "For each test case, print the number of excellent arrays modulo 10^ 9 + 7 .",
    "note": "In the first test case, it can be proven that the maximum F( a) among all good arrays a is equal to 2 . The excellent arrays are: [ 2, 1, 2] ; [ 0, 3, 2] ; [ 2, 3, 2] ; [ 3, 0, 1] .",
    "topics": [
      "binary search",
      "combinatorics",
      "constructive algorithms",
      "implementation",
      "math",
      "sortings",
      "two pointers"
    ],
    "id": "1550D"
  },
  {
    "title": "Maximum Cost Deletion",
    "url": "https://codeforces.com/problemset/problem/1550/B",
    "history": "You are given a string s of length n consisting only of the characters 0 and 1. You perform the following operation until the string becomes empty: choose some consecutive substring of equal characters, erase it from the string and glue the remaining two parts together ( any of them can be empty) in the same order. For example, if you erase the substring 111 from the string 111110, you will get the string 110. When you delete a substring of length l , you get a \u00b7 l + b points. Your task is to calculate the maximum number of points that you can score in total, if you have to make the given string empty.",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 2000 ) \u2014 the number of testcases. The first line of each testcase contains three integers n , a and b ( 1 \u2264 n \u2264 100; - 100 \u2264 a, b \u2264 100 ) \u2014 the length of the string s and the parameters a and b . The second line contains the string s . The string s consists only of the characters 0 and 1.",
    "output": "For each testcase, print a single integer \u2014 the maximum number of points that you can score.",
    "note": "In the first example, it is enough to delete the entire string, then we will get 2 \u00b7 3 + 0 = 6 points. In the second example, if we delete characters one by one, then for each deleted character we will get ( - 2) \u00b7 1 + 5 = 3 points, i. e. 15 points in total. In the third example, we can delete the substring 00 from the string 100111, we get 1 \u00b7 2 + ( - 4) = - 2 points, and the string will be equal to 1111, removing it entirely we get 1 \u00b7 4 + ( - 4) = 0 points. In total, we got - 2 points for 2 operations.",
    "topics": [
      "greedy",
      "math"
    ],
    "id": "1550B"
  },
  {
    "title": "Find The Array",
    "url": "https://codeforces.com/problemset/problem/1550/A",
    "history": "Let' s call an array a consisting of n positive ( greater than 0 ) integers beautiful if the following condition is held for every i from 1 to n : either a_ i = 1 , or at least one of the numbers a_ i - 1 and a_ i - 2 exists in the array as well. For example: the array [ 5, 3, 1] is beautiful: for a_ 1 , the number a_ 1 - 2 = 3 exists in the array; for a_ 2 , the number a_ 2 - 2 = 1 exists in the array; for a_ 3 , the condition a_ 3 = 1 holds; the array [ 1, 2, 2, 2, 2] is beautiful: for a_ 1 , the condition a_ 1 = 1 holds; for every other number a_ i , the number a_ i - 1 = 1 exists in the array; the array [ 1, 4] is not beautiful: for a_ 2 , neither a_ 2 - 2 = 2 nor a_ 2 - 1 = 3 exists in the array, and a_ 2 1 ; the array [ 2] is not beautiful: for a_ 1 , neither a_ 1 - 1 = 1 nor a_ 1 - 2 = 0 exists in the array, and a_ 1 1 ; the array [ 2, 1, 3] is beautiful: for a_ 1 , the number a_ 1 - 1 = 1 exists in the array; for a_ 2 , the condition a_ 2 = 1 holds; for a_ 3 , the number a_ 3 - 2 = 1 exists in the array. You are given a positive integer s . Find the minimum possible size of a beautiful array with the sum of elements equal to s .",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 5000 ) \u2014 the number of test cases. Then t lines follow, the i - th line contains one integer s ( 1 \u2264 s \u2264 5000 ) for the i - th test case.",
    "output": "Print t integers, the i - th integer should be the answer for the i - th testcase: the minimum possible size of a beautiful array with the sum of elements equal to s .",
    "note": "Consider the example test: in the first test case, the array [ 1] meets all conditions; in the second test case, the array [ 3, 4, 1] meets all conditions; in the third test case, the array [ 1, 2, 4] meets all conditions; in the fourth test case, the array [ 1, 4, 6, 8, 10, 2, 11] meets all conditions.",
    "topics": [
      "greedy",
      "math"
    ],
    "id": "1550A"
  },
  {
    "title": "Gregor and Cryptography",
    "url": "https://codeforces.com/problemset/problem/1549/A",
    "history": "Gregor is learning about RSA cryptography, and although he doesn' t understand how RSA works, he is now fascinated with prime numbers and factoring them. Gregor' s favorite prime number is P . Gregor wants to find two bases of P . Formally, Gregor is looking for two integers a and b which satisfy both of the following properties. P a = P b , where x y denotes the remainder when x is divided by y , and 2 \u2264 a < b \u2264 P . Help Gregor find two bases of his favorite prime number!",
    "input": "Each test contains multiple test cases. The first line contains the number of test cases t ( 1 \u2264 t \u2264 1000 ) . Each subsequent line contains the integer P ( 5 \u2264 P \u226410^ 9 ) , with P guaranteed to be prime.",
    "output": "Your output should consist of t lines. Each line should consist of two integers a and b ( 2 \u2264 a < b \u2264 P ) . If there are multiple possible solutions, print any.",
    "note": "The first query is P= 17 . a= 3 and b= 5 are valid bases in this case, because 17 3 = 17 5 = 2 . There are other pairs which work as well. In the second query, with P= 5 , the only solution is a= 2 and b= 4 .",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "1549A"
  },
  {
    "title": "Gregor and the Two Painters",
    "url": "https://codeforces.com/problemset/problem/1548/E",
    "history": "Two painters, Amin and Benj, are repainting Gregor' s living room ceiling! The ceiling can be modeled as an n \u00d7 m grid. For each i between 1 and n , inclusive, painter Amin applies a_ i layers of paint to the entire i - th row. For each j between 1 and m , inclusive, painter Benj applies b_ j layers of paint to the entire j - th column. Therefore, the cell ( i, j) ends up with a_ i+ b_ j layers of paint. Gregor considers the cell ( i, j) to be badly painted if a_ i+ b_ j \u2264 x . Define a badly painted region to be a maximal connected component of badly painted cells, i. e. a connected component of badly painted cells such that all adjacent to the component cells are not badly painted. Two cells are considered adjacent if they share a side. Gregor is appalled by the state of the finished ceiling, and wants to know the number of badly painted regions.",
    "input": "The first line contains three integers n , m and x ( 1 \u2264 n, m \u2264 2\u00b7 10^ 5 , 1 \u2264 x \u2264 2\u00b7 10^ 5 ) \u2014 the dimensions of Gregor' s ceiling, and the maximum number of paint layers in a badly painted cell. The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 2\u00b7 10^ 5 ) , the number of paint layers Amin applies to each row. The third line contains m integers b_ 1, b_ 2, . . . , b_ m ( 1 \u2264 b_ j \u2264 2\u00b7 10^ 5 ) , the number of paint layers Benj applies to each column.",
    "output": "Print a single integer, the number of badly painted regions.",
    "note": "The diagram below represents the first example. The numbers to the left of each row represent the list a , and the numbers above each column represent the list b . The numbers inside each cell represent the number of paint layers in that cell. The colored cells correspond to badly painted cells. The red and blue cells respectively form 2 badly painted regions.",
    "topics": [
      "data structures",
      "divide and conquer",
      "graphs",
      "greedy",
      "math"
    ],
    "id": "1548E"
  },
  {
    "title": "Gregor and the Odd Cows (Hard)",
    "url": "https://codeforces.com/problemset/problem/1548/D2",
    "history": "This is the hard version of the problem. The only difference from the easy version is that in this version the coordinates can be both odd and even. There are n fence- posts at distinct coordinates on a plane. It is guaranteed that no three fence posts lie on the same line. There are an infinite number of cows on the plane, one at every point with integer coordinates. Gregor is a member of the Illuminati, and wants to build a triangular fence, connecting 3 distinct existing fence posts. A cow strictly inside the fence is said to be enclosed. If there are an odd number of enclosed cows and the area of the fence is an integer, the fence is said to be interesting. Find the number of interesting fences.",
    "input": "The first line contains the integer n ( 3 \u2264 n \u2264 6000 ) , the number of fence posts which Gregor can choose to form the vertices of a fence. Each of the next n line contains two integers x and y ( 0 \u2264 x, y \u2264 10^ 7 , where ( x, y) is the coordinate of a fence post. All fence posts lie at distinct coordinates. No three fence posts are on the same line.",
    "output": "Print a single integer, the number of interesting fences. Two fences are considered different if they are constructed with a different set of three fence posts.",
    "note": "In the first example, there is only 1 fence. That fence is interesting since its area is 4 and there is 1 enclosed cow, marked in red. In the second example, there are 4 possible fences. Only one of them is interesting however. That fence has an area of 8 and 5 enclosed cows.",
    "topics": [
      "brute force",
      "geometry",
      "math",
      "number theory"
    ],
    "id": "1548D2"
  },
  {
    "title": "Gregor and the Odd Cows (Easy)",
    "url": "https://codeforces.com/problemset/problem/1548/D1",
    "history": "This is the easy version of the problem. The only difference from the hard version is that in this version all coordinates are even. There are n fence- posts at distinct coordinates on a plane. It is guaranteed that no three fence posts lie on the same line. There are an infinite number of cows on the plane, one at every point with integer coordinates. Gregor is a member of the Illuminati, and wants to build a triangular fence, connecting 3 distinct existing fence posts. A cow strictly inside the fence is said to be enclosed. If there are an odd number of enclosed cows and the area of the fence is an integer, the fence is said to be interesting. Find the number of interesting fences.",
    "input": "The first line contains the integer n ( 3 \u2264 n \u2264 6000 ) , the number of fence posts which Gregor can choose to form the vertices of a fence. Each of the next n line contains two integers x and y ( 0 \u2264 x, y \u2264 10^ 7 , x and y are even) , where ( x, y) is the coordinate of a fence post. All fence posts lie at distinct coordinates. No three fence posts are on the same line.",
    "output": "Print a single integer, the number of interesting fences. Two fences are considered different if they are constructed with a different set of three fence posts.",
    "note": "In the first example, there is only 1 fence. That fence is interesting since its area is 4 and there is 1 enclosed cow, marked in red. In the second example, there are 3 interesting fences. ( 0, 0) \u2014 ( 30, 14) \u2014 ( 2, 10) ( 2, 16) \u2014 ( 30, 14) \u2014 ( 2, 10) ( 30, 14) \u2014 ( 4, 6) \u2014 ( 2, 10)",
    "topics": [
      "bitmasks",
      "geometry",
      "math",
      "number theory"
    ],
    "id": "1548D1"
  },
  {
    "title": "The Three Little Pigs",
    "url": "https://codeforces.com/problemset/problem/1548/C",
    "history": "Three little pigs from all over the world are meeting for a convention! Every minute, a triple of 3 new pigs arrives on the convention floor. After the n - th minute, the convention ends. The big bad wolf has learned about this convention, and he has an attack plan. At some minute in the convention, he will arrive and eat exactly x pigs. Then he will get away. The wolf wants Gregor to help him figure out the number of possible attack plans that involve eating exactly x pigs for various values of x ( 1 \u2264 x \u2264 3n ) . Two attack plans are considered different, if they occur at different times or if the sets of little pigs to eat are different. Note that all queries are independent, that is, the wolf does not eat the little pigs, he only makes plans!",
    "input": "The first line of input contains two integers n and q ( 1 \u2264 n \u2264 10^ 6 , 1 \u2264 q \u2264 2\u00b7 10^ 5 ) , the number of minutes the convention lasts and the number of queries the wolf asks. Each of the next q lines contains a single integer x_ i ( 1 \u2264 x_ i \u2264 3n ) , the number of pigs the wolf will eat in the i - th query.",
    "output": "You should print q lines, with line i representing the number of attack plans if the wolf wants to eat x_ i pigs. Since each query answer can be large, output each answer modulo 10^ 9+ 7 .",
    "note": "In the example test, n= 2 . Thus, there are 3 pigs at minute 1 , and 6 pigs at minute 2 . There are three queries: x= 1 , x= 5 , and x= 6 . If the wolf wants to eat 1 pig, he can do so in 3+ 6= 9 possible attack plans, depending on whether he arrives at minute 1 or 2 . If the wolf wants to eat 5 pigs, the wolf cannot arrive at minute 1 , since there aren' t enough pigs at that time. Therefore, the wolf has to arrive at minute 2 , and there are 6 possible attack plans. If the wolf wants to eat 6 pigs, his only plan is to arrive at the end of the convention and devour everybody. Remember to output your answers modulo 10^ 9+ 7 !",
    "topics": [
      "combinatorics",
      "dp",
      "fft",
      "math"
    ],
    "id": "1548C"
  },
  {
    "title": "Integers Have Friends",
    "url": "https://codeforces.com/problemset/problem/1548/B",
    "history": "British mathematician John Littlewood once said about Indian mathematician Srinivasa Ramanujan that \" every positive integer was one of his personal friends. \" It turns out that positive integers can also be friends with each other! You are given an array a of distinct positive integers. Define a subarray a_ i, a_ i+ 1, . . . , a_ j to be a friend group if and only if there exists an integer m \u2265 2 such that a_ i m = a_ i+ 1 m = . . . = a_ j m , where x y denotes the remainder when x is divided by y . Your friend Gregor wants to know the size of the largest friend group in a .",
    "input": "Each test contains multiple test cases. The first line contains the number of test cases t ( 1 \u2264 t \u2264 2\u00b7 10^ 4 ) . Each test case begins with a line containing the integer n ( 1 \u2264 n \u2264 2 \u00b7 10^ 5 ) , the size of the array a . The next line contains n positive integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u226410^ 18 ) , representing the contents of the array a . It is guaranteed that all the numbers in a are distinct. It is guaranteed that the sum of n over all test cases is less than 2\u00b7 10^ 5 .",
    "output": "Your output should consist of t lines. Each line should consist of a single integer, the size of the largest friend group in a .",
    "note": "In the first test case, the array is [ 1, 5, 2, 4, 6] . The largest friend group is [ 2, 4, 6] , since all those numbers are congruent to 0 modulo 2 , so m= 2 . In the second test case, the array is [ 8, 2, 5, 10] . The largest friend group is [ 8, 2, 5] , since all those numbers are congruent to 2 modulo 3 , so m= 3 . In the third case, the largest friend group is [ 1000, 2000] . There are clearly many possible values of m that work.",
    "topics": [
      "binary search",
      "data structures",
      "divide and conquer",
      "math",
      "number theory",
      "two pointers"
    ],
    "id": "1548B"
  },
  {
    "title": "Shortest Path with Obstacle",
    "url": "https://codeforces.com/problemset/problem/1547/A",
    "history": "There are three cells on an infinite 2- dimensional grid, labeled A , B , and F . Find the length of the shortest path from A to B if: in one move you can go to any of the four adjacent cells sharing a side; visiting the cell F is forbidden ( it is an obstacle) .",
    "input": "The first line contains an integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases in the input. Then t test cases follow. Before each test case, there is an empty line. Each test case contains three lines. The first one contains two integers x_ A, y_ A ( 1 \u2264 x_ A, y_ A \u2264 1000 ) \u2014 coordinates of the start cell A . The second one contains two integers x_ B, y_ B ( 1 \u2264 x_ B, y_ B \u2264 1000 ) \u2014 coordinates of the finish cell B . The third one contains two integers x_ F, y_ F ( 1 \u2264 x_ F, y_ F \u2264 1000 ) \u2014 coordinates of the forbidden cell F . All cells are distinct. Coordinate x corresponds to the column number and coordinate y corresponds to the row number ( see the pictures below) .",
    "output": "Output t lines. The i - th line should contain the answer for the i - th test case: the length of the shortest path from the cell A to the cell B if the cell F is not allowed to be visited.",
    "note": "An example of a possible shortest path for the first test case. An example of a possible shortest path for the second test case.",
    "topics": [
      "implementation",
      "math"
    ],
    "id": "1547A"
  },
  {
    "title": "AquaMoon and Stolen String",
    "url": "https://codeforces.com/problemset/problem/1546/B",
    "history": "AquaMoon had n strings of length m each. n is an odd number. When AquaMoon was gone, Cirno tried to pair these n strings together. After making n- 1/ 2 pairs, she found out that there was exactly one string without the pair! In her rage, she disrupted each pair of strings. For each pair, she selected some positions ( at least 1 and at most m ) and swapped the letters in the two strings of this pair at the selected positions. For example, if m = 6 and two strings \" abcdef\" and \" xyzklm\" are in one pair and Cirno selected positions 2 , 3 and 6 she will swap ' b' with ' y' , ' c' with ' z' and ' f' with ' m' . The resulting strings will be \" ayzdem\" and \" xbcklf\" . Cirno then stole away the string without pair and shuffled all remaining strings in arbitrary order. AquaMoon found the remaining n- 1 strings in complete disarray. Also, she remembers the initial n strings. She wants to know which string was stolen, but she is not good at programming. Can you help her?",
    "input": "This problem is made as interactive. It means, that your solution will read the input, given by the interactor. But the interactor will give you the full input at the beginning and after that, you should print the answer. So you should solve the problem, like as you solve the usual, non- interactive problem because you won' t have any interaction process. The only thing you should not forget is to flush the output buffer, after printing the answer. Otherwise, you can get an \" Idleness limit exceeded\" verdict. Refer to the interactive problems guide for the detailed information about flushing the output buffer. The input consists of multiple test cases. The first line contains a single integer t ( 1 \u2264 t \u2264 100 ) \u2014 the number of test cases. The first line of each test case contains two integers n , m ( 1 \u2264 n \u2264 10^ 5 , 1 \u2264 m \u2264 10^ 5 ) \u2014 the number of strings and the length of each string, respectively. The next n lines each contain a string with length m , describing the original n strings. All string consists of lowercase Latin letters. The next n- 1 lines each contain a string with length m , describing the strings after Cirno exchanged and reordered them. It is guaranteed that n is odd and that the sum of n \u00b7 m over all test cases does not exceed 10^ 5 . Hack format: The first line should contain a single integer t . After that t test cases should follow in the following format: The first line should contain two integers n and m . The following n lines should contain n strings of length m , describing the original strings. The following n- 1/ 2 lines should describe the pairs. They should contain, in the following order: the index of the first string i ( 1 \u2264 i \u2264 n ) , the index of the second string j ( 1 \u2264 j \u2264 n , i = \u0338 j ) , the number of exchanged positions k ( 1 \u2264 k \u2264 m ) , and the list of k positions that are exchanged ( k distinct indices from 1 to m in any order) . The final line should contain a permutation of integers from 1 to n , describing the way the strings should be reordered. The strings will be placed in the order indices placed in this permutation, the stolen string index will be ignored.",
    "output": "For each test case print a single line with the stolen string.",
    "note": "In the first test case, \" aaaaa\" and \" bbbbb\" exchanged all positions, and \" ccccc\" is the stolen string. In the second test case, \" aaaa\" and \" bbbb\" exchanged two first positions, and \" cccc\" is the stolen string. This is the first test in the hack format: 33 5aaaaabbbbbccccc1 2 5 1 2 3 4 52 1 33 4aaaabbbbcccc1 2 2 1 22 1 35 6abcdefuuuuuukekekeekekekxyzklm1 5 3 2 3 62 4 3 2 4 65 4 1 2 3",
    "topics": [
      "interactive",
      "math"
    ],
    "id": "1546B"
  },
  {
    "title": "AquaMoon and Wrong Coordinate",
    "url": "https://codeforces.com/problemset/problem/1545/D",
    "history": "Cirno gives AquaMoon a problem. There are m people numbered from 0 to m - 1 . They are standing on a coordinate axis in points with positive integer coordinates. They are facing right ( i. e. in the direction of the coordinate increase) . At this moment everyone will start running with the constant speed in the direction of coordinate increasing. The initial coordinate of the i - th person on the line is x_ i , and the speed of the i - th person is v_ i . So the coordinate of the i - th person at the moment t will be x_ i + t \u00b7 v_ i . Cirno captured the coordinates of m people in k consecutive integer moments from 0 to k - 1 . In every moment, the coordinates of m people were recorded in arbitrary order. To make the problem more funny, Cirno modified one coordinate at the moment y ( 0 < y < k- 1 ) to a different integer. AquaMoon wants to find the moment y and the original coordinate p before the modification. Actually, she is not a programmer at all. So she wasn' t able to solve it. Can you help her?",
    "input": "This problem is made as interactive. It means, that your solution will read the input, given by the interactor. But the interactor will give you the full input at the beginning and after that, you should print the answer. So you should solve the problem, like as you solve the usual, non- interactive problem because you won' t have any interaction process. The only thing you should not forget is to flush the output buffer, after printing the answer. Otherwise, you can get an \" Idleness limit exceeded\" verdict. Refer to the interactive problems guide for the detailed information about flushing the output buffer. The first line contains two integers m and k ( 5 \u2264 m \u2264 1000 , 7 \u2264 k \u2264 1000 ) \u2014 the number of people and the number of recorded moments. The next k lines contain captured positions. i - th of these lines contains m integers between 1 and 10^ 6 ( inclusive) , representing positions captured by Cirno at the moment i- 1 . The input is guaranteed to be valid ( i. e. only one integer was modified to a different value according to the problem statement) . Also, it is guaranteed, that 1 \u2264 v_ i \u2264 1000 for all 1 \u2264 i \u2264 m . Hack format: The first line should contain two integers m and k ( 5 \u2264 m \u2264 1000 , 7 \u2264 k \u2264 1000 ) \u2014 the number of people and the number of moments. In the second line, there should be m integers x_ 0, x_ 1, . . . , x_ m - 1 ( 1 \u2264 x_ i \u2264 10^ 6 ) , where x_ i is the initial coordinate of the i - th person. In the third line, there should be m integers v_ 0, v_ 1, . . . , v_ m - 1 ( 1 \u2264 v_ i \u2264 1000 ) , where v_ i is the speed of the i - th person. It should be true that x_ i + ( k- 1) v_ i \u2264 10^ 6 for each 0 \u2264 i < m . In the next k lines, each line should contain m integers. i - th line should contain m distinct integers p_ 0, p_ 1, . . . , p_ m- 1 ( 0 \u2264 p_ j < m ) . The meaning of these numbers: j - th integer in the input in the i - th moment is the coordinate of the p_ j - th person. In the last line, there should be three integers y , i , c . Cirno modified the coordinate of the i - th person at the moment y to c ( 1 \u2264 y \u2264 k- 2 , 0 \u2264 i \u2264 m - 1 , 1 \u2264 c \u2264 10^ 6 , c = \u0338 x_ i + y \u00b7 v_ i ) .",
    "output": "Print a single line with two integers y , p \u2014 the moment that contains the modified coordinate and the original coordinate.",
    "note": "In the first test the initial coordinates of people are 9 , 6 , 6 , 9 , 9 and their speeds are 1 , 2 , 1 , 1 , 1 . So, it' s easy to see, that at the moment 4 one coordinate was modified from 13 to 12 . This is the first test in the hack format: 5 79 6 6 9 91 2 1 1 12 3 4 1 00 2 3 1 44 3 0 1 21 3 4 0 21 4 0 2 32 4 1 3 02 4 1 3 04 0 12",
    "topics": [
      "constructive algorithms",
      "interactive",
      "math"
    ],
    "id": "1545D"
  },
  {
    "title": "AquaMoon and Chess",
    "url": "https://codeforces.com/problemset/problem/1545/B",
    "history": "Cirno gave AquaMoon a chessboard of size 1 \u00d7 n . Its cells are numbered with integers from 1 to n from left to right. In the beginning, some of the cells are occupied with at most one pawn, and other cells are unoccupied. In each operation, AquaMoon can choose a cell i with a pawn, and do either of the following ( if possible) : Move pawn from it to the ( i+ 2) - th cell, if i+ 2 \u2264 n and the ( i+ 1) - th cell is occupied and the ( i+ 2) - th cell is unoccupied. Move pawn from it to the ( i- 2) - th cell, if i- 2 \u2265 1 and the ( i- 1) - th cell is occupied and the ( i- 2) - th cell is unoccupied. You are given an initial state of the chessboard. AquaMoon wants to count the number of states reachable from the initial state with some sequence of operations. But she is not good at programming. Can you help her? As the answer can be large find it modulo 998 244 353 .",
    "input": "The input consists of multiple test cases. The first line contains a single integer t ( 1 \u2264 t \u2264 10 000 ) \u2014 the number of test cases. The first line contains a single integer n ( 1 \u2264 n \u2264 10^ 5 ) \u2014 the size of the chessboard. The second line contains a string of n characters, consists of characters \" 0\" and \" 1\" . If the i - th character is \" 1\" , the i - th cell is initially occupied; otherwise, the i - th cell is initially unoccupied. It is guaranteed that the sum of n over all test cases does not exceed 10^ 5 .",
    "output": "For each test case, print the number of states that reachable from the initial state with some sequence of operations modulo 998 244 353 .",
    "note": "In the first test case the strings \" 1100\" , \" 0110\" and \" 0011\" are reachable from the initial state with some sequence of operations.",
    "topics": [
      "combinatorics",
      "math"
    ],
    "id": "1545B"
  },
  {
    "title": "The Final Pursuit",
    "url": "https://codeforces.com/problemset/problem/1543/E",
    "history": "Finally, you have defeated Razor and now, you are the Most Wanted street racer. Sergeant Cross has sent the full police force after you in a deadly pursuit. Fortunately, you have found a hiding spot but you fear that Cross and his force will eventually find you. To increase your chances of survival, you want to tune and repaint your BMW M3 GTR. The car can be imagined as a permuted n - dimensional hypercube. A simple n - dimensional hypercube is an undirected unweighted graph built recursively as follows: Take two simple ( n- 1) - dimensional hypercubes one having vertices numbered from 0 to 2^ n- 1- 1 and the other having vertices numbered from 2^ n- 1 to 2^ n- 1 . A simple 0 - dimensional Hypercube is just a single vertex. Add an edge between the vertices i and i+ 2^ n- 1 for each 0\u2264 i < 2^ n- 1 . A permuted n - dimensional hypercube is formed by permuting the vertex numbers of a simple n - dimensional hypercube in any arbitrary manner. Examples of a simple and permuted 3 - dimensional hypercubes are given below: Note that a permuted n - dimensional hypercube has the following properties: There are exactly 2^ n vertices. There are exactly n\u00b7 2^ n- 1 edges. Each vertex is connected to exactly n other vertices. There are no self- loops or duplicate edges. Let' s denote the permutation used to generate the permuted n - dimensional hypercube, representing your car, from a simple n - dimensional hypercube by P . Before messing up the functionalities of the car, you want to find this permutation so that you can restore the car if anything goes wrong. But the job isn' t done yet. You have n different colours numbered from 0 to n- 1 . You want to colour the vertices of this permuted n - dimensional hypercube in such a way that for each and every vertex u satisfying 0\u2264 u < 2^ n and for each and every colour c satisfying 0\u2264 c < n , there is at least one vertex v adjacent to u having a colour c . In other words, from each and every vertex, it must be possible to reach a vertex of any colour by just moving to an adjacent vertex. Given the permuted n - dimensional hypercube, find any valid permutation P and colouring.",
    "input": "The first line of input contains a single integer t ( 1\u2264 t\u2264 4096 ) \u2014 the number of test cases. For each test case, the first line contains a single integer n ( 1\u2264 n\u2264 16 ) . Each of the next n\u00b7 2^ n- 1 lines contain two integers u and v ( 0\u2264 u, v < 2^ n ) denoting that there is an edge between the vertices numbered u and v . It is guaranteed that the graph described in the input is a permuted n - dimensional hypercube. Additionally, it is guaranteed that the sum of 2^ n over all test cases does not exceed 2^ 16= 65 536 .",
    "output": "For each test case, print two lines. In the first line, output any permutation P of length 2^ n that can be used to transform a simple n - dimensional hypercube to the permuted n - dimensional hypercube given in the input. Two permuted hypercubes are considered the same if they have the same set of edges. If there are multiple answers, output any of them. In the second line, print the colouring. If there is no way to colour the vertices satisfying the conditions, output - 1 . Otherwise, output a single line containing 2^ n space separated integers. The i - th integer must be the colour of the vertex numbered ( i- 1) in the permuted n - dimensional hypercube. If there are multiple answers, output any of them.",
    "note": "The colouring and the permuted hypercube for the first test case is shown below: The colouring and the permuted hypercube for the second test case is shown below: The permuted hypercube for the third test case is given in the problem statement. However, it can be shown that there exists no way to colour that cube satifying all the conditions. Note that some other permutations like [ 0, 5, 7, 3, 1, 2, 4, 6] and [ 0, 1, 5, 2, 7, 4, 3, 6] will also give the same permuted hypercube.",
    "topics": [
      "bitmasks",
      "constructive algorithms",
      "divide and conquer",
      "graphs",
      "greedy",
      "math"
    ],
    "id": "1543E"
  },
  {
    "title": "RPD and Rap Sheet (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1543/D2",
    "history": "This is the hard version of the problem. The only difference is that here 2\u2264 k\u2264 100 . You can make hacks only if both the versions of the problem are solved. This is an interactive problem! Every decimal number has a base k equivalent. The individual digits of a base k number are called k - its. Let' s define the k - itwise XOR of two k - its a and b as ( a + b) k . The k - itwise XOR of two base k numbers is equal to the new number formed by taking the k - itwise XOR of their corresponding k - its. The k - itwise XOR of two decimal numbers a and b is denoted by a\u2295_ k b and is equal to the decimal representation of the k - itwise XOR of the base k representations of a and b . All further numbers used in the statement below are in decimal unless specified. You have hacked the criminal database of Rockport Police Department ( RPD) , also known as the Rap Sheet. But in order to access it, you require a password. You don' t know it, but you are quite sure that it lies between 0 and n- 1 inclusive. So, you have decided to guess it. Luckily, you can try at most n times without being blocked by the system. But the system is adaptive. Each time you make an incorrect guess, it changes the password. Specifically, if the password before the guess was x , and you guess a different number y , then the system changes the password to a number z such that x\u2295_ k z= y . Guess the password and break into the system. InteractionFor each test case, first read two integers n and k . Then you may ask up to n queries. For each query, print a single integer y ( 0\u2264 y\u2264 2\u00b7 10^ 7 ) . Let the current password be x . After that, read an integer r . If x= y , you will read r= 1 and the test case is solved. You must then continue solving the remaining test cases. Else, you will read r= 0 . At this moment the password is changed to a number z such that x\u2295_ k z= y . After printing a query, do not forget to output the end of line and flush the output. Otherwise, you will get the Idleness limit exceeded verdict. To do this, use: fflush( stdout) or cout. flush( ) in C+ + ; System. out. flush( ) in Java; flush( output) in Pascal; stdout. flush( ) in Python; see documentation for other languages. If you ask an invalid query or exceed n queries, you will read r= - 1 and you will receive the Wrong Answer verdict. Make sure to exit immediately to avoid unexpected verdicts. Note that the interactor is adaptive. That is, the original password is not fixed in the beginning and may depend on your queries. But it is guaranteed that at any moment there is at least one initial password such that all the answers to the queries are consistent. Hacks: To use hacks, use the following format of tests: The first line should contain a single integer t ( 1\u2264 t\u2264 10 000 ) \u2014 the number of test cases. The first and only line of each test case should contain two integers n ( 1\u2264 n\u2264 2\u00b7 10^ 5 ) and k ( 2\u2264 k\u2264 100 ) denoting the number of queries and the base respectively. The optimal original password is automatically decided by the adaptive interactor. You must ensure that the sum of n over all test cases does not exceed 2\u00b7 10^ 5 .",
    "input": "The first line of input contains a single integer t ( 1\u2264 t\u2264 10 000 ) denoting the number of test cases. t test cases follow. The first line of each test case contains two integers n ( 1\u2264 n\u2264 2\u00b7 10^ 5 ) and k ( 2\u2264 k\u2264 100) . It is guaranteed that the sum of n over all test cases does not exceed 2\u00b7 10^ 5 .",
    "output": "",
    "note": "Test Case 1: In this case, the hidden password is 2 . The first query is 3 . It is not equal to the current password. So, 0 is returned, and the password is changed to 1 since 2\u2295_ 2 1= 3 . The second query is 4 . It is not equal to the current password. So, 0 is returned, and the password is changed to 5 since 1\u2295_ 2 5= 4 . The third query is 5 . It is equal to the current password. So, 1 is returned, and the job is done. Test Case 2: In this case, the hidden password is 3 . The first query is 1 . It is not equal to the current password. So, 0 is returned, and the password is changed to 7 since 3\u2295_ 3 7= 1 . [ 3= ( 10) _ 3 , 7= ( 21) _ 3 , 1= ( 01) _ 3 and ( 10) _ 3\u2295_ 3 ( 21) _ 3 = ( 01) _ 3] . The second query is 4 . It is not equal to the current password. So, 0 is returned, and the password is changed to 6 since 7\u2295_ 3 6= 4 . [ 7= ( 21) _ 3 , 6= ( 20) _ 3 , 4= ( 11) _ 3 and ( 21) _ 3\u2295_ 3 ( 20) _ 3 = ( 11) _ 3] . The third query is 6 . It is equal to the current password. So, 1 is returned, and the job is done. Note that these initial passwords are taken just for the sake of explanation. In reality, the grader might behave differently because it is adaptive.",
    "topics": [
      "brute force",
      "constructive algorithms",
      "interactive",
      "math"
    ],
    "id": "1543D2"
  },
  {
    "title": "RPD and Rap Sheet (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1543/D1",
    "history": "This is the easy version of the problem. The only difference is that here k= 2 . You can make hacks only if both the versions of the problem are solved. This is an interactive problem. Every decimal number has a base k equivalent. The individual digits of a base k number are called k - its. Let' s define the k - itwise XOR of two k - its a and b as ( a + b) k . The k - itwise XOR of two base k numbers is equal to the new number formed by taking the k - itwise XOR of their corresponding k - its. The k - itwise XOR of two decimal numbers a and b is denoted by a\u2295_ k b and is equal to the decimal representation of the k - itwise XOR of the base k representations of a and b . All further numbers used in the statement below are in decimal unless specified. When k = 2 ( it is always true in this version) , the k - itwise XOR is the same as the bitwise XOR. You have hacked the criminal database of Rockport Police Department ( RPD) , also known as the Rap Sheet. But in order to access it, you require a password. You don' t know it, but you are quite sure that it lies between 0 and n- 1 inclusive. So, you have decided to guess it. Luckily, you can try at most n times without being blocked by the system. But the system is adaptive. Each time you make an incorrect guess, it changes the password. Specifically, if the password before the guess was x , and you guess a different number y , then the system changes the password to a number z such that x\u2295_ k z= y . Guess the password and break into the system. InteractionFor each test case, first read two integers n and k . Then you may ask up to n queries. For each query, print a single integer y ( 0\u2264 y\u2264 2\u00b7 10^ 7 ) . Let the current password be x . After that, read an integer r . If x= y , you will read r= 1 and the test case is solved. You must then continue solving the remaining test cases. Else, you will read r= 0 . At this moment the password is changed to a number z such that x\u2295_ k z= y . After printing a query, do not forget to output the end of line and flush the output. Otherwise, you will get the Idleness limit exceeded verdict. To do this, use: fflush( stdout) or cout. flush( ) in C+ + ; System. out. flush( ) in Java; flush( output) in Pascal; stdout. flush( ) in Python; see documentation for other languages. If you ask an invalid query or exceed n queries, you will read r= - 1 and you will receive the Wrong Answer verdict. Make sure to exit immediately to avoid unexpected verdicts. Note that the interactor is adaptive. That is, the original password is not fixed in the beginning and may depend on your queries. But it is guaranteed that at any moment there is at least one initial password such that all the answers to the queries are consistent. Hacks: To use hacks, use the following format of tests: The first line should contain a single integer t ( 1\u2264 t\u2264 10 000 ) \u2014 the number of test cases. The first and only line of each test case should contain two integers n ( 1\u2264 n\u2264 2\u00b7 10^ 5 ) and k ( k= 2 ) denoting the number of queries and the base respectively. The optimal original password is automatically decided by the adaptive interactor. You must ensure that the sum of n over all test cases does not exceed 2\u00b7 10^ 5 .",
    "input": "The first line of input contains a single integer t ( 1\u2264 t\u2264 10 000 ) denoting the number of test cases. t test cases follow. The first line of each test case contains two integers n ( 1\u2264 n\u2264 2\u00b7 10^ 5 ) and k ( k= 2 ) . It is guaranteed that the sum of n over all test cases does not exceed 2\u00b7 10^ 5 .",
    "output": "",
    "note": "In the example test case, the hidden password is 2 . The first query is 3 . It is not equal to the current password. So, 0 is returned, and the password is changed to 1 since 2\u2295_ 2 1= 3 . The second query is 4 . It is not equal to the current password. So, 0 is returned, and the password is changed to 5 since 1\u2295_ 2 5= 4 . The third query is 5 . It is equal to the current password. So, 1 is returned, and the job is done. Note that this initial password is taken just for the sake of explanation. When you submit, the interactor might behave differently because it is adaptive.",
    "topics": [
      "bitmasks",
      "constructive algorithms",
      "interactive",
      "math"
    ],
    "id": "1543D1"
  },
  {
    "title": "Need for Pink Slips",
    "url": "https://codeforces.com/problemset/problem/1543/C",
    "history": "After defeating a Blacklist Rival, you get a chance to draw 1 reward slip out of x hidden valid slips. Initially, x= 3 and these hidden valid slips are Cash Slip, Impound Strike Release Marker and Pink Slip of Rival' s Car. Initially, the probability of drawing these in a random guess are c , m , and p , respectively. There is also a volatility factor v . You can play any number of Rival Races as long as you don' t draw a Pink Slip. Assume that you win each race and get a chance to draw a reward slip. In each draw, you draw one of the x valid items with their respective probabilities. Suppose you draw a particular item and its probability of drawing before the draw was a . Then, If the item was a Pink Slip, the quest is over, and you will not play any more races. Otherwise, If a\u2264 v , the probability of the item drawn becomes 0 and the item is no longer a valid item for all the further draws, reducing x by 1 . Moreover, the reduced probability a is distributed equally among the other remaining valid items. If a > v , the probability of the item drawn reduces by v and the reduced probability is distributed equally among the other valid items. For example, If ( c, m, p) = ( 0. 2, 0. 1, 0. 7) and v= 0. 1 , after drawing Cash, the new probabilities will be ( 0. 1, 0. 15, 0. 75) . If ( c, m, p) = ( 0. 1, 0. 2, 0. 7) and v= 0. 2 , after drawing Cash, the new probabilities will be ( Invalid, 0. 25, 0. 75) . If ( c, m, p) = ( 0. 2, Invalid, 0. 8) and v= 0. 1 , after drawing Cash, the new probabilities will be ( 0. 1, Invalid, 0. 9) . If ( c, m, p) = ( 0. 1, Invalid, 0. 9) and v= 0. 2 , after drawing Cash, the new probabilities will be ( Invalid, Invalid, 1. 0) . You need the cars of Rivals. So, you need to find the expected number of races that you must play in order to draw a pink slip.",
    "input": "The first line of input contains a single integer t ( 1\u2264 t\u2264 10 ) \u2014 the number of test cases. The first and the only line of each test case contains four real numbers c , m , p and v ( 0 < c, m, p < 1 , c+ m+ p= 1 , 0. 1\u2264 v\u2264 0. 9 ) . Additionally, it is guaranteed that each of c , m , p and v have at most 4 decimal places.",
    "output": "For each test case, output a single line containing a single real number \u2014 the expected number of races that you must play in order to draw a Pink Slip. Your answer is considered correct if its absolute or relative error does not exceed 10^ - 6 . Formally, let your answer be a , and the jury' s answer be b . Your answer is accepted if and only if | a - b| / max( 1, | b| ) \u2264 10^ - 6 .",
    "note": "For the first test case, the possible drawing sequences are: P with a probability of 0. 6 ; CP with a probability of 0. 2\u00b7 0. 7 = 0. 14 ; CMP with a probability of 0. 2\u00b7 0. 3\u00b7 0. 9 = 0. 054 ; CMMP with a probability of 0. 2\u00b7 0. 3\u00b7 0. 1\u00b7 1 = 0. 006 ; MP with a probability of 0. 2\u00b7 0. 7 = 0. 14 ; MCP with a probability of 0. 2\u00b7 0. 3\u00b7 0. 9 = 0. 054 ; MCCP with a probability of 0. 2\u00b7 0. 3\u00b7 0. 1\u00b7 1 = 0. 006 . So, the expected number of races is equal to 1\u00b7 0. 6 + 2\u00b7 0. 14 + 3\u00b7 0. 054 + 4\u00b7 0. 006 + 2\u00b7 0. 14 + 3\u00b7 0. 054 + 4\u00b7 0. 006 = 1. 532 . For the second test case, the possible drawing sequences are: P with a probability of 0. 4 ; CP with a probability of 0. 4\u00b7 0. 6 = 0. 24 ; CMP with a probability of 0. 4\u00b7 0. 4\u00b7 1 = 0. 16 ; MP with a probability of 0. 2\u00b7 0. 5 = 0. 1 ; MCP with a probability of 0. 2\u00b7 0. 5\u00b7 1 = 0. 1 . So, the expected number of races is equal to 1\u00b7 0. 4 + 2\u00b7 0. 24 + 3\u00b7 0. 16 + 2\u00b7 0. 1 + 3\u00b7 0. 1 = 1. 86 .",
    "topics": [
      "bitmasks",
      "brute force",
      "dfs and similar",
      "implementation",
      "math",
      "probabilities"
    ],
    "id": "1543C"
  },
  {
    "title": "Customising the Track",
    "url": "https://codeforces.com/problemset/problem/1543/B",
    "history": "Highway 201 is the most busy street in Rockport. Traffic cars cause a lot of hindrances to races, especially when there are a lot of them. The track which passes through this highway can be divided into n sub- tracks. You are given an array a where a_ i represents the number of traffic cars in the i - th sub- track. You define the inconvenience of the track as \u2211_ i= 1^ n\u2211_ j= i+ 1^ n| a_ i- a_ j| , where | x| is the absolute value of x . You can perform the following operation any ( possibly zero) number of times: choose a traffic car and move it from its current sub- track to any other sub- track. Find the minimum inconvenience you can achieve.",
    "input": "The first line of input contains a single integer t ( 1\u2264 t\u2264 10 000 ) \u2014 the number of test cases. The first line of each test case contains a single integer n ( 1\u2264 n\u2264 2\u00b7 10^ 5 ) . The second line of each test case contains n integers a_ 1, a_ 2, . . . , a_ n ( 0\u2264 a_ i\u2264 10^ 9 ) . It is guaranteed that the sum of n over all test cases does not exceed 2\u00b7 10^ 5 .",
    "output": "For each test case, print a single line containing a single integer: the minimum inconvenience you can achieve by applying the given operation any ( possibly zero) number of times.",
    "note": "For the first test case, you can move a car from the 3 - rd sub- track to the 1 - st sub- track to obtain 0 inconvenience. For the second test case, moving any car won' t decrease the inconvenience of the track.",
    "topics": [
      "combinatorics",
      "greedy",
      "math"
    ],
    "id": "1543B"
  },
  {
    "title": "Exciting Bets",
    "url": "https://codeforces.com/problemset/problem/1543/A",
    "history": "Welcome to Rockport City! It is time for your first ever race in the game against Ronnie. To make the race interesting, you have bet a dollars and Ronnie has bet b dollars. But the fans seem to be disappointed. The excitement of the fans is given by gcd( a, b) , where gcd( x, y) denotes the greatest common divisor ( GCD) of integers x and y . To make the race more exciting, you can perform two types of operations: Increase both a and b by 1 . Decrease both a and b by 1 . This operation can only be performed if both a and b are greater than 0 . In one move, you can perform any one of these operations. You can perform arbitrary ( possibly zero) number of moves. Determine the maximum excitement the fans can get and the minimum number of moves required to achieve it. Note that gcd( x, 0) = x for any x \u2265 0 .",
    "input": "The first line of input contains a single integer t ( 1\u2264 t\u2264 5\u00b7 10^ 3 ) \u2014 the number of test cases. The first and the only line of each test case contains two integers a and b ( 0\u2264 a, b\u2264 10^ 18 ) .",
    "output": "For each test case, print a single line containing two integers. If the fans can get infinite excitement, print 0 0. Otherwise, the first integer must be the maximum excitement the fans can get, and the second integer must be the minimum number of moves required to achieve that excitement.",
    "note": "For the first test case, you can apply the first operation 1 time to get a= 9 and b= 6 . It can be shown that 3 is the maximum excitement possible. For the second test case, no matter how many operations you apply, the fans will always have an excitement equal to 1 . Since the initial excitement is also 1 , you don' t need to apply any operation. For the third case, the fans can get infinite excitement by applying the first operation an infinite amount of times. For the fourth test case, you can apply the second operation 3 times to get a= 0 and b= 6 . Since, gcd( 0, 6) = 6 , the fans will get an excitement of 6 .",
    "topics": [
      "greedy",
      "math",
      "number theory"
    ],
    "id": "1543A"
  },
  {
    "title": "Abnormal Permutation Pairs (hard version)",
    "url": "https://codeforces.com/problemset/problem/1542/E2",
    "history": "This is the hard version of the problem. The only difference between the easy version and the hard version is the constraints on n . You can only make hacks if both versions are solved. A permutation of 1, 2, . . . , n is a sequence of n integers, where each integer from 1 to n appears exactly once. For example, [ 2, 3, 1, 4] is a permutation of 1, 2, 3, 4 , but [ 1, 4, 2, 2] isn' t because 2 appears twice in it. Recall that the number of inversions in a permutation a_ 1, a_ 2, . . . , a_ n is the number of pairs of indices ( i, j) such that i < j and a_ i > a_ j . Let p and q be two permutations of 1, 2, . . . , n . Find the number of permutation pairs ( p, q) that satisfy the following conditions: p is lexicographically smaller than q . the number of inversions in p is greater than the number of inversions in q . Print the number of such pairs modulo mod . Note that mod may not be a prime.",
    "input": "The only line contains two integers n and mod ( 1\u2264 n\u2264 500 , 1\u2264 mod\u2264 10^ 9 ) .",
    "output": "Print one integer, which is the answer modulo mod .",
    "note": "The following are all valid pairs ( p, q) when n= 4 . p= [ 1, 3, 4, 2] , q= [ 2, 1, 3, 4] , p= [ 1, 4, 2, 3] , q= [ 2, 1, 3, 4] , p= [ 1, 4, 3, 2] , q= [ 2, 1, 3, 4] , p= [ 1, 4, 3, 2] , q= [ 2, 1, 4, 3] , p= [ 1, 4, 3, 2] , q= [ 2, 3, 1, 4] , p= [ 1, 4, 3, 2] , q= [ 3, 1, 2, 4] , p= [ 2, 3, 4, 1] , q= [ 3, 1, 2, 4] , p= [ 2, 4, 1, 3] , q= [ 3, 1, 2, 4] , p= [ 2, 4, 3, 1] , q= [ 3, 1, 2, 4] , p= [ 2, 4, 3, 1] , q= [ 3, 1, 4, 2] , p= [ 2, 4, 3, 1] , q= [ 3, 2, 1, 4] , p= [ 2, 4, 3, 1] , q= [ 4, 1, 2, 3] , p= [ 3, 2, 4, 1] , q= [ 4, 1, 2, 3] , p= [ 3, 4, 1, 2] , q= [ 4, 1, 2, 3] , p= [ 3, 4, 2, 1] , q= [ 4, 1, 2, 3] , p= [ 3, 4, 2, 1] , q= [ 4, 1, 3, 2] , p= [ 3, 4, 2, 1] , q= [ 4, 2, 1, 3] .",
    "topics": [
      "combinatorics",
      "dp",
      "fft",
      "math"
    ],
    "id": "1542E2"
  },
  {
    "title": "Abnormal Permutation Pairs (easy version)",
    "url": "https://codeforces.com/problemset/problem/1542/E1",
    "history": "This is the easy version of the problem. The only difference between the easy version and the hard version is the constraints on n . You can only make hacks if both versions are solved. A permutation of 1, 2, . . . , n is a sequence of n integers, where each integer from 1 to n appears exactly once. For example, [ 2, 3, 1, 4] is a permutation of 1, 2, 3, 4 , but [ 1, 4, 2, 2] isn' t because 2 appears twice in it. Recall that the number of inversions in a permutation a_ 1, a_ 2, . . . , a_ n is the number of pairs of indices ( i, j) such that i < j and a_ i > a_ j . Let p and q be two permutations of 1, 2, . . . , n . Find the number of permutation pairs ( p, q) that satisfy the following conditions: p is lexicographically smaller than q . the number of inversions in p is greater than the number of inversions in q . Print the number of such pairs modulo mod . Note that mod may not be a prime.",
    "input": "The only line contains two integers n and mod ( 1\u2264 n\u2264 50 , 1\u2264 mod\u2264 10^ 9 ) .",
    "output": "Print one integer, which is the answer modulo mod .",
    "note": "The following are all valid pairs ( p, q) when n= 4 . p= [ 1, 3, 4, 2] , q= [ 2, 1, 3, 4] , p= [ 1, 4, 2, 3] , q= [ 2, 1, 3, 4] , p= [ 1, 4, 3, 2] , q= [ 2, 1, 3, 4] , p= [ 1, 4, 3, 2] , q= [ 2, 1, 4, 3] , p= [ 1, 4, 3, 2] , q= [ 2, 3, 1, 4] , p= [ 1, 4, 3, 2] , q= [ 3, 1, 2, 4] , p= [ 2, 3, 4, 1] , q= [ 3, 1, 2, 4] , p= [ 2, 4, 1, 3] , q= [ 3, 1, 2, 4] , p= [ 2, 4, 3, 1] , q= [ 3, 1, 2, 4] , p= [ 2, 4, 3, 1] , q= [ 3, 1, 4, 2] , p= [ 2, 4, 3, 1] , q= [ 3, 2, 1, 4] , p= [ 2, 4, 3, 1] , q= [ 4, 1, 2, 3] , p= [ 3, 2, 4, 1] , q= [ 4, 1, 2, 3] , p= [ 3, 4, 1, 2] , q= [ 4, 1, 2, 3] , p= [ 3, 4, 2, 1] , q= [ 4, 1, 2, 3] , p= [ 3, 4, 2, 1] , q= [ 4, 1, 3, 2] , p= [ 3, 4, 2, 1] , q= [ 4, 2, 1, 3] .",
    "topics": [
      "combinatorics",
      "dp",
      "fft",
      "math"
    ],
    "id": "1542E1"
  },
  {
    "title": "Priority Queue",
    "url": "https://codeforces.com/problemset/problem/1542/D",
    "history": "You are given a sequence A , where its elements are either in the form + x or - , where x is an integer. For such a sequence S where its elements are either in the form + x or - , define f( S) as follows: iterate through S ' s elements from the first one to the last one, and maintain a multiset T as you iterate through it. for each element, if it' s in the form + x, add x to T ; otherwise, erase the smallest element from T ( if T is empty, do nothing) . after iterating through all S ' s elements, compute the sum of all elements in T . f( S) is defined as the sum. The sequence b is a subsequence of the sequence a if b can be derived from a by removing zero or more elements without changing the order of the remaining elements. For all A ' s subsequences B , compute the sum of f( B) , modulo 998 244 353 .",
    "input": "The first line contains an integer n ( 1\u2264 n\u2264 500 ) \u2014 the length of A . Each of the next n lines begins with an operator + or - . If the operator is + , then it' s followed by an integer x ( 1\u2264 x< 998 244 353 ) . The i - th line of those n lines describes the i - th element in A .",
    "output": "Print one integer, which is the answer to the problem, modulo 998 244 353 .",
    "note": "In the first example, the following are all possible pairs of B and f( B) : B= , f( B) = 0 . B= - , f( B) = 0 . B= + 1, - , f( B) = 0 . B= - , + 1, - , f( B) = 0 . B= + 2, - , f( B) = 0 . B= - , + 2, - , f( B) = 0 . B= - , f( B) = 0 . B= - , - , f( B) = 0 . B= + 1, + 2, f( B) = 3 . B= + 1, + 2, - , f( B) = 2 . B= - , + 1, + 2, f( B) = 3 . B= - , + 1, + 2, - , f( B) = 2 . B= - , + 1, f( B) = 1 . B= + 1, f( B) = 1 . B= - , + 2, f( B) = 2 . B= + 2, f( B) = 2 . The sum of these values is 16 .",
    "topics": [
      "combinatorics",
      "dp",
      "implementation",
      "math",
      "ternary search"
    ],
    "id": "1542D"
  },
  {
    "title": "Strange Function",
    "url": "https://codeforces.com/problemset/problem/1542/C",
    "history": "Let f( i) denote the minimum positive integer x such that x is not a divisor of i . Compute \u2211_ i= 1^ n f( i) modulo 10^ 9+ 7 . In other words, compute f( 1) + f( 2) + . . . + f( n) modulo 10^ 9+ 7 .",
    "input": "The first line contains a single integer t ( 1\u2264 t\u2264 10^ 4 ) , the number of test cases. Then t cases follow. The only line of each test case contains a single integer n ( 1\u2264 n\u2264 10^ 16 ) .",
    "output": "For each test case, output a single integer ans , where ans= \u2211_ i= 1^ n f( i) modulo 10^ 9+ 7 .",
    "note": "In the fourth test case n= 4 , so ans= f( 1) + f( 2) + f( 3) + f( 4) . 1 is a divisor of 1 but 2 isn' t, so 2 is the minimum positive integer that isn' t a divisor of 1 . Thus, f( 1) = 2 . 1 and 2 are divisors of 2 but 3 isn' t, so 3 is the minimum positive integer that isn' t a divisor of 2 . Thus, f( 2) = 3 . 1 is a divisor of 3 but 2 isn' t, so 2 is the minimum positive integer that isn' t a divisor of 3 . Thus, f( 3) = 2 . 1 and 2 are divisors of 4 but 3 isn' t, so 3 is the minimum positive integer that isn' t a divisor of 4 . Thus, f( 4) = 3 . Therefore, ans= f( 1) + f( 2) + f( 3) + f( 4) = 2+ 3+ 2+ 3= 10 .",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "1542C"
  },
  {
    "title": "Plus and Multiply",
    "url": "https://codeforces.com/problemset/problem/1542/B",
    "history": "There is an infinite set generated as follows: 1 is in this set. If x is in this set, x \u00b7 a and x+ b both are in this set. For example, when a= 3 and b= 6 , the five smallest elements of the set are: 1 , 3 ( 1 is in this set, so 1\u00b7 a= 3 is in this set) , 7 ( 1 is in this set, so 1+ b= 7 is in this set) , 9 ( 3 is in this set, so 3\u00b7 a= 9 is in this set) , 13 ( 7 is in this set, so 7+ b= 13 is in this set) . Given positive integers a , b , n , determine if n is in this set.",
    "input": "The input consists of multiple test cases. The first line contains an integer t ( 1\u2264 t\u2264 10^ 5 ) \u2014 the number of test cases. The description of the test cases follows. The only line describing each test case contains three integers n , a , b ( 1\u2264 n, a, b\u2264 10^ 9 ) separated by a single space.",
    "output": "For each test case, print \" Yes\" if n is in this set, and \" No\" otherwise. You can print each letter in any case.",
    "note": "In the first test case, 24 is generated as follows: 1 is in this set, so 3 and 6 are in this set; 3 is in this set, so 9 and 8 are in this set; 8 is in this set, so 24 and 13 are in this set. Thus we can see 24 is in this set. The five smallest elements of the set in the second test case is described in statements. We can see that 10 isn' t among them.",
    "topics": [
      "constructive algorithms",
      "math",
      "number theory"
    ],
    "id": "1542B"
  },
  {
    "title": "Odd Set",
    "url": "https://codeforces.com/problemset/problem/1542/A",
    "history": "You are given a multiset ( i. e. a set that can contain multiple equal integers) containing 2n integers. Determine if you can split it into exactly n pairs ( i. e. each element should be in exactly one pair) so that the sum of the two elements in each pair is odd ( i. e. when divided by 2 , the remainder is 1 ) .",
    "input": "The input consists of multiple test cases. The first line contains an integer t ( 1\u2264 t\u2264 100 ) \u2014 the number of test cases. The description of the test cases follows. The first line of each test case contains an integer n ( 1\u2264 n\u2264 100 ) . The second line of each test case contains 2n integers a_ 1, a_ 2, . . . , a_ 2n ( 0\u2264 a_ i\u2264 100 ) \u2014 the numbers in the set.",
    "output": "For each test case, print \" Yes\" if it can be split into exactly n pairs so that the sum of the two elements in each pair is odd, and \" No\" otherwise. You can print each letter in any case.",
    "note": "In the first test case, a possible way of splitting the set is ( 2, 3) , ( 4, 5) . In the second, third and fifth test case, we can prove that there isn' t any possible way. In the fourth test case, a possible way of splitting the set is ( 2, 3) .",
    "topics": [
      "math"
    ],
    "id": "1542A"
  },
  {
    "title": "Pleasant Pairs",
    "url": "https://codeforces.com/problemset/problem/1541/B",
    "history": "You are given an array a_ 1, a_ 2, . . . , a_ n consisting of n distinct integers. Count the number of pairs of indices ( i, j) such that i < j and a_ i \u00b7 a_ j = i + j .",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. Then t cases follow. The first line of each test case contains one integer n ( 2 \u2264 n \u2264 10^ 5 ) \u2014 the length of array a . The second line of each test case contains n space separated integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 2 \u00b7 n ) \u2014 the array a . It is guaranteed that all elements are distinct. It is guaranteed that the sum of n over all test cases does not exceed 2 \u00b7 10^ 5 .",
    "output": "For each test case, output the number of pairs of indices ( i, j) such that i < j and a_ i \u00b7 a_ j = i + j .",
    "note": "For the first test case, the only pair that satisfies the constraints is ( 1, 2) , as a_ 1 \u00b7 a_ 2 = 1 + 2 = 3 For the second test case, the only pair that satisfies the constraints is ( 2, 3) . For the third test case, the pairs that satisfy the constraints are ( 1, 2) , ( 1, 5) , and ( 2, 3) .",
    "topics": [
      "brute force",
      "implementation",
      "math",
      "number theory"
    ],
    "id": "1541B"
  },
  {
    "title": "Tasty Dishes",
    "url": "https://codeforces.com/problemset/problem/1540/E",
    "history": "Note that the memory limit is unusual. There are n chefs numbered 1, 2, . . . , n that must prepare dishes for a king. Chef i has skill i and initially has a dish of tastiness a_ i where | a_ i| \u2264 i . Each chef has a list of other chefs that he is allowed to copy from. To stop chefs from learning bad habits, the king makes sure that chef i can only copy from chefs of larger skill. There are a sequence of days that pass during which the chefs can work on their dish. During each day, there are two stages during which a chef can change the tastiness of their dish. At the beginning of each day, each chef can choose to work ( or not work) on their own dish, thereby multiplying the tastiness of their dish of their skill ( a_ i : = i \u00b7 a_ i ) ( or doing nothing) . After all chefs ( who wanted) worked on their own dishes, each start observing the other chefs. In particular, for each chef j on chef i ' s list, chef i can choose to copy ( or not copy) j ' s dish, thereby adding the tastiness of the j ' s dish to i ' s dish ( a_ i : = a_ i + a_ j ) ( or doing nothing) . It can be assumed that all copying occurs simultaneously. Namely, if chef i chooses to copy from chef j he will copy the tastiness of chef j ' s dish at the end of stage 1 . All chefs work to maximize the tastiness of their own dish in order to please the king. Finally, you are given q queries. Each query is one of two types. 1 k l r \u2014 find the sum of tastiness a_ l, a_ l+ 1, . . . , a_ r after the k - th day. Because this value can be large, find it modulo 10^ 9 + 7 . 2 i x \u2014 the king adds x tastiness to the i - th chef' s dish before the 1 - st day begins ( a_ i : = a_ i + x ) . Note that, because the king wants to see tastier dishes, he only adds positive tastiness ( x > 0 ) . Note that queries of type 1 are independent of each all other queries. Specifically, each query of type 1 is a scenario and does not change the initial tastiness a_ i of any dish for future queries. Note that queries of type 2 are cumulative and only change the initial tastiness a_ i of a dish. See notes for an example of queries.",
    "input": "The first line contains a single integer n ( 1 \u2264 n \u2264 300 ) \u2014 the number of chefs. The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( - i \u2264 a_ i \u2264 i ) . The next n lines each begin with a integer c_ i ( 0 \u2264 c_ i < n ) , denoting the number of chefs the i - th chef can copy from. This number is followed by c_ i distinct integers d ( i < d \u2264 n ) , signifying that chef i is allowed to copy from chef d during stage 2 of each day. The next line contains a single integer q ( 1 \u2264 q \u2264 2 \u00b7 10^ 5 ) \u2014 the number of queries. Each of the next q lines contains a query of one of two types: 1 k l r ( 1 \u2264 l \u2264 r \u2264 n ; 1 \u2264 k \u2264 1000 ) ; 2 i x ( 1 \u2264 i \u2264 n ; 1 \u2264 x \u2264 1000 ) . It is guaranteed that there is at least one query of the first type.",
    "output": "For each query of the first type, print a single integer \u2014 the answer to the query.",
    "note": "Below is the set of chefs that each chef is allowed to copy from: 1 : { 2, 3, 4, 5} 2 : { 3} 3 : { 4} 4 : { 5} 5 : \u2205 ( no other chefs) Following is a description of the sample. For the first query of type 1 , the initial tastiness values are [ 1, 0, - 2, - 2, 4] . The final result of the first day is shown below: [ 1, 0, - 2, - 2, 20] ( chef 5 works on his dish) . [ 21, 0, - 2, 18, 20] ( chef 1 and chef 4 copy from chef 5 ) . So, the answer for the 1 - st query is 21 + 0 - 2 + 18 + 20 = 57 . For the 5 - th query ( 3 - rd of type 1 ) . The initial tastiness values are now [ 1, 0, 0, 1, 4] . Day 1 [ 1, 0, 0, 4, 20] ( chefs 4 and 5 work on their dishes) . [ 25, 0, 4, 24, 20] ( chef 1 copies from chefs 4 and 5 , chef 3 copies from chef 4 , chef 4 copies from chef 5 ) . Day 2 [ 25, 0, 12, 96, 100] ( all chefs but chef 2 work on their dish) . [ 233, 12, 108, 196, 100] ( chef 1 copies from chefs 3 , 4 and 5 , chef 2 from 3 , chef 3 from 4 , chef 4 from chef 5 ) . So, the answer for the 5 - th query is 12+ 108+ 196= 316 . It can be shown that, in each step we described, all chefs moved optimally.",
    "topics": [
      "math",
      "matrices"
    ],
    "id": "1540E"
  },
  {
    "title": "Converging Array (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1540/C2",
    "history": "This is the hard version of the problem. The only difference is that in this version 1 \u2264 q \u2264 10^ 5 . You can make hacks only if both versions of the problem are solved. There is a process that takes place on arrays a and b of length n and length n- 1 respectively. The process is an infinite sequence of operations. Each operation is as follows: First, choose a random integer i ( 1 \u2264 i \u2264 n- 1 ) . Then, simultaneously set a_ i = min( a_ i, a_ i+ a_ i+ 1- b_ i/ 2) and a_ i+ 1 = max( a_ i+ 1, a_ i+ a_ i+ 1+ b_ i/ 2) without any rounding ( so values may become non- integer) . See notes for an example of an operation. It can be proven that array a converges, i. e. for each i there exists a limit a_ i converges to. Let function F( a, b) return the value a_ 1 converges to after a process on a and b . You are given array b , but not array a . However, you are given a third array c . Array a is good if it contains only integers and satisfies 0 \u2264 a_ i \u2264 c_ i for 1 \u2264 i \u2264 n . Your task is to count the number of good arrays a where F( a, b) \u2265 x for q values of x . Since the number of arrays can be very large, print it modulo 10^ 9+ 7 .",
    "input": "The first line contains a single integer n ( 2 \u2264 n \u2264 100 ) . The second line contains n integers c_ 1, c_ 2 . . . , c_ n ( 0 \u2264 c_ i \u2264 100 ) . The third line contains n- 1 integers b_ 1, b_ 2, . . . , b_ n- 1 ( 0 \u2264 b_ i \u2264 100 ) . The fourth line contains a single integer q ( 1 \u2264 q \u2264 10^ 5 ) . The fifth line contains q space separated integers x_ 1, x_ 2, . . . , x_ q ( - 10^ 5 \u2264 x_ i \u2264 10^ 5 ) .",
    "output": "Output q integers, where the i - th integer is the answer to the i - th query, i. e. the number of good arrays a where F( a, b) \u2265 x_ i modulo 10^ 9+ 7 .",
    "note": "The following explanation assumes b = [ 2, 1] and c= [ 2, 3, 4] ( as in the sample) . Examples of arrays a that are not good: a = [ 3, 2, 3] is not good because a_ 1 > c_ 1 ; a = [ 0, - 1, 3] is not good because a_ 2 < 0 . One possible good array a is [ 0, 2, 4] . We can show that no operation has any effect on this array, so F( a, b) = a_ 1 = 0 . Another possible good array a is [ 0, 1, 4] . In a single operation with i = 1 , we set a_ 1 = min( 0+ 1- 2/ 2, 0) and a_ 2 = max( 0+ 1+ 2/ 2, 1) . So, after a single operation with i = 1 , a becomes equal to [ - 1/ 2, 3/ 2, 4] . We can show that no operation has any effect on this array, so F( a, b) = - 1/ 2 .",
    "topics": [
      "dp",
      "math"
    ],
    "id": "1540C2"
  },
  {
    "title": "Converging Array (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1540/C1",
    "history": "This is the easy version of the problem. The only difference is that in this version q = 1 . You can make hacks only if both versions of the problem are solved. There is a process that takes place on arrays a and b of length n and length n- 1 respectively. The process is an infinite sequence of operations. Each operation is as follows: First, choose a random integer i ( 1 \u2264 i \u2264 n- 1 ) . Then, simultaneously set a_ i = min( a_ i, a_ i+ a_ i+ 1- b_ i/ 2) and a_ i+ 1 = max( a_ i+ 1, a_ i+ a_ i+ 1+ b_ i/ 2) without any rounding ( so values may become non- integer) . See notes for an example of an operation. It can be proven that array a converges, i. e. for each i there exists a limit a_ i converges to. Let function F( a, b) return the value a_ 1 converges to after a process on a and b . You are given array b , but not array a . However, you are given a third array c . Array a is good if it contains only integers and satisfies 0 \u2264 a_ i \u2264 c_ i for 1 \u2264 i \u2264 n . Your task is to count the number of good arrays a where F( a, b) \u2265 x for q values of x . Since the number of arrays can be very large, print it modulo 10^ 9+ 7 .",
    "input": "The first line contains a single integer n ( 2 \u2264 n \u2264 100 ) . The second line contains n integers c_ 1, c_ 2 . . . , c_ n ( 0 \u2264 c_ i \u2264 100 ) . The third line contains n- 1 integers b_ 1, b_ 2, . . . , b_ n- 1 ( 0 \u2264 b_ i \u2264 100 ) . The fourth line contains a single integer q ( q= 1 ) . The fifth line contains q space separated integers x_ 1, x_ 2, . . . , x_ q ( - 10^ 5 \u2264 x_ i \u2264 10^ 5 ) .",
    "output": "Output q integers, where the i - th integer is the answer to the i - th query, i. e. the number of good arrays a where F( a, b) \u2265 x_ i modulo 10^ 9+ 7 .",
    "note": "The following explanation assumes b = [ 2, 1] and c= [ 2, 3, 4] ( as in the sample) . Examples of arrays a that are not good: a = [ 3, 2, 3] is not good because a_ 1 > c_ 1 ; a = [ 0, - 1, 3] is not good because a_ 2 < 0 . One possible good array a is [ 0, 2, 4] . We can show that no operation has any effect on this array, so F( a, b) = a_ 1 = 0 . Another possible good array a is [ 0, 1, 4] . In a single operation with i = 1 , we set a_ 1 = min( 0+ 1- 2/ 2, 0) and a_ 2 = max( 0+ 1+ 2/ 2, 1) . So, after a single operation with i = 1 , a becomes equal to [ - 1/ 2, 3/ 2, 4] . We can show that no operation has any effect on this array, so F( a, b) = - 1/ 2 .",
    "topics": [
      "dp",
      "math"
    ],
    "id": "1540C1"
  },
  {
    "title": "Tree Array",
    "url": "https://codeforces.com/problemset/problem/1540/B",
    "history": "You are given a tree consisting of n nodes. You generate an array from the tree by marking nodes one by one. Initially, when no nodes are marked, a node is equiprobably chosen and marked from the entire tree. After that, until all nodes are marked, a node is equiprobably chosen and marked from the set of unmarked nodes with at least one edge to a marked node. It can be shown that the process marks all nodes in the tree. The final array a is the list of the nodes' labels in order of the time each node was marked. Find the expected number of inversions in the array that is generated by the tree and the aforementioned process. The number of inversions in an array a is the number of pairs of indices ( i, j) such that i < j and a_ i > a_ j . For example, the array [ 4, 1, 3, 2] contains 4 inversions: ( 1, 2) , ( 1, 3) , ( 1, 4) , ( 3, 4) .",
    "input": "The first line contains a single integer n ( 2 \u2264 n \u2264 200 ) \u2014 the number of nodes in the tree. The next n - 1 lines each contains two integers x and y ( 1 \u2264 x, y \u2264 n ; x = \u0338 y ) , denoting an edge between node x and y . It' s guaranteed that the given edges form a tree.",
    "output": "Output the expected number of inversions in the generated array modulo 10^ 9+ 7 . Formally, let M = 10^ 9+ 7 . It can be shown that the answer can be expressed as an irreducible fraction p/ q , where p and q are integers and q \u2261\u03380 M . Output the integer equal to p \u00b7 q^ - 1 M . In other words, output such an integer x that 0 \u2264 x < M and x \u00b7 q \u2261 p M .",
    "note": "This is the tree from the first sample: For the first sample, the arrays are almost fixed. If node 2 is chosen initially, then the only possible array is [ 2, 1, 3] ( 1 inversion) . If node 3 is chosen initially, then the only possible array is [ 3, 1, 2] ( 2 inversions) . If node 1 is chosen initially, the arrays [ 1, 2, 3] ( 0 inversions) and [ 1, 3, 2] ( 1 inversion) are the only possibilities and equiprobable. In total, the expected number of inversions is 1/ 3\u00b7 1 + 1/ 3\u00b7 2 + 1/ 3\u00b7 ( 1/ 2\u00b7 0 + 1/ 2\u00b7 1) = 7/ 6 . 166666669 \u00b7 6 = 7 10^ 9 + 7 , so the answer is 166666669 . This is the tree from the second sample: This is the tree from the third sample:",
    "topics": [
      "brute force",
      "combinatorics",
      "dp",
      "graphs",
      "math",
      "probabilities",
      "trees"
    ],
    "id": "1540B"
  },
  {
    "title": "Contest Start",
    "url": "https://codeforces.com/problemset/problem/1539/A",
    "history": "There are n people participating in some contest, they start participating in x minutes intervals. That means the first participant starts at time 0 , the second participant starts at time x , the third \u2014 at time 2 \u00b7 x , and so on. Duration of contest is t minutes for each participant, so the first participant finishes the contest at time t , the second \u2014 at time t + x , and so on. When a participant finishes the contest, their dissatisfaction equals to the number of participants that started the contest ( or starting it now) , but haven' t yet finished it. Determine the sum of dissatisfaction of all participants.",
    "input": "The first line contains a single integer k ( 1 \u2264 k \u2264 1000 ) \u2014 the number of test cases. Each of the next k lines contains three integers n , x , t ( 1 \u2264 n, x, t \u2264 2 \u00b7 10^ 9 ) \u2014 the number of participants, the start interval and the contest duration.",
    "output": "Print k lines, in the i - th line print the total dissatisfaction of participants in the i - th test case.",
    "note": "In the first example the first participant starts at 0 and finishes at time 5 . By that time the second and the third participants start, so the dissatisfaction of the first participant is 2 . The second participant starts at time 2 and finishes at time 7 . By that time the third the fourth participants start, so the dissatisfaction of the second participant is 2 . The third participant starts at 4 and finishes at 9 . By that time the fourth participant starts, so the dissatisfaction of the third participant is 1 . The fourth participant starts at 6 and finishes at 11 . By time 11 everyone finishes the contest, so the dissatisfaction of the fourth participant is 0 . In the second example the first participant starts at 0 and finishes at time 2 . By that time the second participants starts, and the third starts at exactly time 2 . So the dissatisfaction of the first participant is 2 . The second participant starts at time 1 and finishes at time 3 . At that time the third participant is solving the contest.",
    "topics": [
      "combinatorics",
      "geometry",
      "greedy",
      "math"
    ],
    "id": "1539A"
  },
  {
    "title": "Gift Set",
    "url": "https://codeforces.com/problemset/problem/1538/G",
    "history": "Polycarp has x of red and y of blue candies. Using them, he wants to make gift sets. Each gift set contains either a red candies and b blue candies, or a blue candies and b red candies. Any candy can belong to at most one gift set. Help Polycarp to find the largest number of gift sets he can create. For example, if x = 10 , y = 12 , a = 5 , and b = 2 , then Polycarp can make three gift sets: In the first set there will be 5 red candies and 2 blue candies; In the second set there will be 5 blue candies and 2 red candies; In the third set will be 5 blue candies and 2 red candies. Note that in this example there is one red candy that Polycarp does not use in any gift set.",
    "input": "The first line contains an integer t ( 1 \u2264 t \u2264 10^ 4 ) . Then t test cases follow. Each test case consists of a single string containing four integers x , y , a , and b ( 1 \u2264 x, y, a, b \u2264 10^ 9 ) .",
    "output": "For each test case, output one number \u2014 the maximum number of gift sets that Polycarp can make.",
    "note": "",
    "topics": [
      "binary search",
      "greedy",
      "math",
      "ternary search"
    ],
    "id": "1538G"
  },
  {
    "title": "Interesting Function",
    "url": "https://codeforces.com/problemset/problem/1538/F",
    "history": "You are given two integers l and r , where l < r . We will add 1 to l until the result is equal to r . Thus, there will be exactly r- l additions performed. For each such addition, let' s look at the number of digits that will be changed after it. For example: if l= 909 , then adding one will result in 910 and 2 digits will be changed; if you add one to l= 9 , the result will be 10 and 2 digits will also be changed; if you add one to l= 489999 , the result will be 490000 and 5 digits will be changed. Changed digits always form a suffix of the result written in the decimal system. Output the total number of changed digits, if you want to get r from l , adding 1 each time.",
    "input": "The first line contains an integer t ( 1 \u2264 t \u2264 10^ 4 ) . Then t test cases follow. Each test case is characterized by two integers l and r ( 1 \u2264 l < r \u2264 10^ 9 ) .",
    "output": "For each test case, calculate the total number of changed digits if you want to get r from l , adding one each time.",
    "note": "",
    "topics": [
      "binary search",
      "dp",
      "math",
      "number theory"
    ],
    "id": "1538F"
  },
  {
    "title": "Another Problem About Dividing Numbers",
    "url": "https://codeforces.com/problemset/problem/1538/D",
    "history": "You are given two integers a and b . In one turn, you can do one of the following operations: Take an integer c ( c > 1 and a should be divisible by c ) and replace a with a/ c ; Take an integer c ( c > 1 and b should be divisible by c ) and replace b with b/ c . Your goal is to make a equal to b using exactly k turns. For example, the numbers a= 36 and b= 48 can be made equal in 4 moves: c= 6 , divide b by c \u21d2 a= 36 , b= 8 ; c= 2 , divide a by c \u21d2 a= 18 , b= 8 ; c= 9 , divide a by c \u21d2 a= 2 , b= 8 ; c= 4 , divide b by c \u21d2 a= 2 , b= 2 . For the given numbers a and b , determine whether it is possible to make them equal using exactly k turns.",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 10^ 4 ) . Then t test cases follow. Each test case is contains three integers a , b and k ( 1 \u2264 a, b, k \u2264 10^ 9 ) .",
    "output": "For each test case output: \" Yes\" , if it is possible to make the numbers a and b equal in exactly k turns; \" No\" otherwise. The strings \" Yes\" and \" No\" can be output in any case.",
    "note": "",
    "topics": [
      "constructive algorithms",
      "math",
      "number theory"
    ],
    "id": "1538D"
  },
  {
    "title": "Number of Pairs",
    "url": "https://codeforces.com/problemset/problem/1538/C",
    "history": "You are given an array a of n integers. Find the number of pairs ( i, j) ( 1 \u2264 i < j \u2264 n ) where the sum of a_ i + a_ j is greater than or equal to l and less than or equal to r ( that is, l \u2264 a_ i + a_ j \u2264 r ) . For example, if n = 3 , a = [ 5, 1, 2] , l = 4 and r = 7 , then two pairs are suitable: i= 1 and j= 2 ( 4 \u2264 5 + 1 \u2264 7 ) ; i= 1 and j= 3 ( 4 \u2264 5 + 2 \u2264 7 ) .",
    "input": "The first line contains an integer t ( 1 \u2264 t \u2264 10^ 4 ) . Then t test cases follow. The first line of each test case contains three integers n, l, r ( 1 \u2264 n \u2264 2 \u00b7 10^ 5 , 1 \u2264 l \u2264 r \u2264 10^ 9 ) \u2014 the length of the array and the limits on the sum in the pair. The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 9 ) . It is guaranteed that the sum of n overall test cases does not exceed 2 \u00b7 10^ 5 .",
    "output": "For each test case, output a single integer \u2014 the number of index pairs ( i, j) ( i < j ) , such that l \u2264 a_ i + a_ j \u2264 r .",
    "note": "",
    "topics": [
      "binary search",
      "data structures",
      "math",
      "two pointers"
    ],
    "id": "1538C"
  },
  {
    "title": "Friends and Candies",
    "url": "https://codeforces.com/problemset/problem/1538/B",
    "history": "Polycarp has n friends, the i - th of his friends has a_ i candies. Polycarp' s friends do not like when they have different numbers of candies. In other words they want all a_ i to be the same. To solve this, Polycarp performs the following set of actions exactly once: Polycarp chooses k ( 0 \u2264 k \u2264 n ) arbitrary friends ( let' s say he chooses friends with indices i_ 1, i_ 2, . . . , i_ k ) ; Polycarp distributes their a_ i_ 1 + a_ i_ 2 + . . . + a_ i_ k candies among all n friends. During distribution for each of a_ i_ 1 + a_ i_ 2 + . . . + a_ i_ k candies he chooses new owner. That can be any of n friends. Note, that any candy can be given to the person, who has owned that candy before the distribution process. Note that the number k is not fixed in advance and can be arbitrary. Your task is to find the minimum value of k . For example, if n= 4 and a= [ 4, 5, 2, 5] , then Polycarp could make the following distribution of the candies: Polycarp chooses k= 2 friends with indices i= [ 2, 4] and distributes a_ 2 + a_ 4 = 10 candies to make a= [ 4, 4, 4, 4] ( two candies go to person 3 ) . Note that in this example Polycarp cannot choose k= 1 friend so that he can redistribute candies so that in the end all a_ i are equal. For the data n and a , determine the minimum value k . With this value k , Polycarp should be able to select k friends and redistribute their candies so that everyone will end up with the same number of candies.",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 10^ 4 ) . Then t test cases follow. The first line of each test case contains one integer n ( 1 \u2264 n \u2264 2 \u00b7 10^ 5 ) . The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 0 \u2264 a_ i \u2264 10^ 4 ) . It is guaranteed that the sum of n over all test cases does not exceed 2 \u00b7 10^ 5 .",
    "output": "For each test case output: the minimum value of k , such that Polycarp can choose exactly k friends so that he can redistribute the candies in the desired way; \" - 1\" if no such value k exists.",
    "note": "",
    "topics": [
      "greedy",
      "math"
    ],
    "id": "1538B"
  },
  {
    "title": "Figure Fixing",
    "url": "https://codeforces.com/problemset/problem/1537/F",
    "history": "You have a connected undirected graph made of n nodes and m edges. The i - th node has a value v_ i and a target value t_ i . In an operation, you can choose an edge ( i, j) and add k to both v_ i and v_ j , where k can be any integer. In particular, k can be negative. Your task to determine if it is possible that by doing some finite number of operations ( possibly zero) , you can achieve for every node i , v_ i = t_ i .",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 1000 ) , the number of test cases. Then the test cases follow. The first line of each test case contains two integers n , m ( 2 \u2264 n \u2264 2\u00b7 10^ 5 , n- 1\u2264 m\u2264min( 2\u00b7 10^ 5, n( n- 1) / 2) ) \u2014 the number of nodes and edges respectively. The second line contains n integers v_ 1. . . , v_ n ( - 10^ 9 \u2264 v_ i \u2264 10^ 9 ) \u2014 initial values of nodes. The third line contains n integers t_ 1. . . , t_ n ( - 10^ 9 \u2264 t_ i \u2264 10^ 9 ) \u2014 target values of nodes. Each of the next m lines contains two integers i and j representing an edge between node i and node j ( 1 \u2264 i, j \u2264 n , i j ) . It is guaranteed that the graph is connected and there is at most one edge between the same pair of nodes. It is guaranteed that the sum of n over all testcases does not exceed 2 \u00b7 10^ 5 and the sum of m over all testcases does not exceed 2 \u00b7 10^ 5 .",
    "output": "For each test case, if it is possible for every node to reach its target after some number of operations, print \" YES\" . Otherwise, print \" NO\" .",
    "note": "Here is a visualization of the first test case ( the orange values denote the initial values and the blue ones the desired values) : One possible order of operations to obtain the desired values for each node is the following: Operation 1 : Add 2 to nodes 2 and 3 . Operation 2 : Add - 2 to nodes 1 and 4 . Operation 3 : Add 6 to nodes 3 and 4 . Now we can see that in total we added - 2 to node 1 , 2 to node 2 , 8 to node 3 and 4 to node 4 which brings each node exactly to it' s desired value. For the graph from the second test case it' s impossible to get the target values.",
    "topics": [
      "constructive algorithms",
      "dfs and similar",
      "dsu",
      "graphs",
      "greedy",
      "math"
    ],
    "id": "1537F"
  },
  {
    "title": "Deleting Divisors",
    "url": "https://codeforces.com/problemset/problem/1537/D",
    "history": "Alice and Bob are playing a game. They start with a positive integer n and take alternating turns doing operations on it. Each turn a player can subtract from n one of its divisors that isn' t 1 or n . The player who cannot make a move on his/ her turn loses. Alice always moves first. Note that they subtract a divisor of the current number in each turn. You are asked to find out who will win the game if both players play optimally.",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. Then t test cases follow. Each test case contains a single integer n ( 1 \u2264 n \u2264 10^ 9 ) \u2014 the initial number.",
    "output": "For each test case output \" Alice\" if Alice will win the game or \" Bob\" if Bob will win, if both players play optimally.",
    "note": "In the first test case, the game ends immediately because Alice cannot make a move. In the second test case, Alice can subtract 2 making n = 2 , then Bob cannot make a move so Alice wins. In the third test case, Alice can subtract 3 so that n = 9 . Bob' s only move is to subtract 3 and make n = 6 . Now, Alice can subtract 3 again and n = 3 . Then Bob cannot make a move, so Alice wins.",
    "topics": [
      "games",
      "math",
      "number theory"
    ],
    "id": "1537D"
  },
  {
    "title": "Challenging Cliffs",
    "url": "https://codeforces.com/problemset/problem/1537/C",
    "history": "You are a game designer and want to make an obstacle course. The player will walk from left to right. You have n heights of mountains already selected and want to arrange them so that the absolute difference of the heights of the first and last mountains is as small as possible. In addition, you want to make the game difficult, and since walking uphill or flat is harder than walking downhill, the difficulty of the level will be the number of mountains i ( 1 \u2264 i < n ) such that h_ i \u2264 h_ i+ 1 where h_ i is the height of the i - th mountain. You don' t want to waste any of the mountains you modelled, so you have to use all of them. From all the arrangements that minimize | h_ 1- h_ n| , find one that is the most difficult. If there are multiple orders that satisfy these requirements, you may find any.",
    "input": "The first line will contain a single integer t ( 1 \u2264 t \u2264 100 ) \u2014 the number of test cases. Then t test cases follow. The first line of each test case contains a single integer n ( 2 \u2264 n \u2264 2 \u00b7 10^ 5 ) \u2014 the number of mountains. The second line of each test case contains n integers h_ 1, . . . , h_ n ( 1 \u2264 h_ i \u2264 10^ 9 ) , where h_ i is the height of the i - th mountain. It is guaranteed that the sum of n over all test cases does not exceed 2 \u00b7 10^ 5 .",
    "output": "For each test case, output n integers \u2014 the given heights in an order that maximizes the difficulty score among all orders that minimize | h_ 1- h_ n| . If there are multiple orders that satisfy these requirements, you may output any.",
    "note": "In the first test case: The player begins at height 2 , next going up to height 4 increasing the difficulty by 1 . After that he will go down to height 1 and the difficulty doesn' t change because he is going downhill. Finally the player will go up to height 2 and the difficulty will increase by 1 . The absolute difference between the starting height and the end height is equal to 0 and it' s minimal. The difficulty is maximal. In the second test case: The player begins at height 1 , next going up to height 3 increasing the difficulty by 1 . The absolute difference between the starting height and the end height is equal to 2 and it' s minimal as they are the only heights. The difficulty is maximal.",
    "topics": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "math"
    ],
    "id": "1537C"
  },
  {
    "title": "Bad Boy",
    "url": "https://codeforces.com/problemset/problem/1537/B",
    "history": "Riley is a very bad boy, but at the same time, he is a yo- yo master. So, he decided to use his yo- yo skills to annoy his friend Anton. Anton' s room can be represented as a grid with n rows and m columns. Let ( i, j) denote the cell in row i and column j . Anton is currently standing at position ( i, j) in his room. To annoy Anton, Riley decided to throw exactly two yo- yos in cells of the room ( they can be in the same cell) . Because Anton doesn' t like yo- yos thrown on the floor, he has to pick up both of them and return back to the initial position. The distance travelled by Anton is the shortest path that goes through the positions of both yo- yos and returns back to ( i, j) by travelling only to adjacent by side cells. That is, if he is in cell ( x, y) then he can travel to the cells ( x + 1, y) , ( x - 1, y) , ( x, y + 1) and ( x, y - 1) in one step ( if a cell with those coordinates exists) . Riley is wondering where he should throw these two yo- yos so that the distance travelled by Anton is maximized. But because he is very busy, he asked you to tell him.",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. Then t test cases follow. The only line of each test case contains four integers n , m , i , j ( 1 \u2264 n, m \u2264 10^ 9 , 1\u2264 i\u2264 n , 1\u2264 j\u2264 m ) \u2014 the dimensions of the room, and the cell at which Anton is currently standing.",
    "output": "For each test case, print four integers x_ 1 , y_ 1 , x_ 2 , y_ 2 ( 1 \u2264 x_ 1, x_ 2 \u2264 n , 1\u2264 y_ 1, y_ 2\u2264 m ) \u2014 the coordinates of where the two yo- yos should be thrown. They will be thrown at coordinates ( x_ 1, y_ 1) and ( x_ 2, y_ 2) . If there are multiple answers, you may print any.",
    "note": "Here is a visualization of the first test case.",
    "topics": [
      "constructive algorithms",
      "greedy",
      "math"
    ],
    "id": "1537B"
  },
  {
    "title": "Arithmetic Array",
    "url": "https://codeforces.com/problemset/problem/1537/A",
    "history": "An array b of length k is called good if its arithmetic mean is equal to 1 . More formally, if b_ 1 + \u22ef + b_ k/ k= 1. Note that the value b_ 1+ \u22ef+ b_ k/ k is not rounded up or down. For example, the array [ 1, 1, 1, 2] has an arithmetic mean of 1. 25 , which is not equal to 1 . You are given an integer array a of length n . In an operation, you can append a non- negative integer to the end of the array. What' s the minimum number of operations required to make the array good? We have a proof that it is always possible with finitely many operations.",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 1000 ) \u2014 the number of test cases. Then t test cases follow. The first line of each test case contains a single integer n ( 1 \u2264 n \u2264 50 ) \u2014 the length of the initial array a . The second line of each test case contains n integers a_ 1, . . . , a_ n ( - 10^ 4\u2264 a_ i \u2264 10^ 4 ) , the elements of the array.",
    "output": "For each test case, output a single integer \u2014 the minimum number of non- negative integers you have to append to the array so that the arithmetic mean of the array will be exactly 1 .",
    "note": "In the first test case, we don' t need to add any element because the arithmetic mean of the array is already 1 , so the answer is 0 . In the second test case, the arithmetic mean is not 1 initially so we need to add at least one more number. If we add 0 then the arithmetic mean of the whole array becomes 1 , so the answer is 1 . In the third test case, the minimum number of elements that need to be added is 16 since only non- negative integers can be added. In the fourth test case, we can add a single integer 4 . The arithmetic mean becomes - 2+ 4/ 2 which is equal to 1 .",
    "topics": [
      "greedy",
      "math"
    ],
    "id": "1537A"
  },
  {
    "title": "Omkar and Akmar",
    "url": "https://codeforces.com/problemset/problem/1536/F",
    "history": "Omkar and Akmar are playing a game on a circular board with n ( 2 \u2264 n \u2264 10^ 6 ) cells. The cells are numbered from 1 to n so that for each i ( 1 \u2264 i \u2264 n- 1 ) cell i is adjacent to cell i+ 1 and cell 1 is adjacent to cell n . Initially, each cell is empty. Omkar and Akmar take turns placing either an A or a B on the board, with Akmar going first. The letter must be placed on an empty cell. In addition, the letter cannot be placed adjacent to a cell containing the same letter. A player loses when it is their turn and there are no more valid moves. Output the number of possible distinct games where both players play optimally modulo 10^ 9+ 7 . Note that we only consider games where some player has lost and there are no more valid moves. Two games are considered distinct if the number of turns is different or for some turn, the letter or cell number that the letter is placed on were different. A move is considered optimal if the move maximizes the player' s chance of winning, assuming the other player plays optimally as well. More formally, if the player who has to move has a winning strategy, they have to make a move after which they will still have a winning strategy. If they do not, they can make any move.",
    "input": "The only line will contain an integer n ( 2 \u2264 n \u2264 10^ 6 ) \u2014 the number of cells on the board.",
    "output": "Output a single integer \u2014 the number of possible distinct games where both players play optimally modulo 10^ 9+ 7 .",
    "note": "For the first sample case, the first player has 4 possible moves. No matter what the first player plays, the second player only has 1 possible move, so there are 4 possible games.",
    "topics": [
      "chinese remainder theorem",
      "combinatorics",
      "constructive algorithms",
      "fft",
      "games",
      "geometry",
      "math",
      "meet-in-the-middle",
      "string suffix structures"
    ],
    "id": "1536F"
  },
  {
    "title": "Omkar and Forest",
    "url": "https://codeforces.com/problemset/problem/1536/E",
    "history": "Omkar' s most recent follower, Ajit, has entered the Holy Forest. Ajit realizes that Omkar' s forest is an n by m grid ( 1 \u2264 n, m \u2264 2000 ) of some non- negative integers. Since the forest is blessed by Omkar, it satisfies some special conditions: For any two adjacent ( sharing a side) cells, the absolute value of the difference of numbers in them is at most 1 . If the number in some cell is strictly larger than 0 , it should be strictly greater than the number in at least one of the cells adjacent to it. Unfortunately, Ajit is not fully worthy of Omkar' s powers yet. He sees each cell as a \" 0\" or a \" # \" . If a cell is labeled as \" 0\" , then the number in it must equal 0 . Otherwise, the number in it can be any nonnegative integer. Determine how many different assignments of elements exist such that these special conditions are satisfied. Two assignments are considered different if there exists at least one cell such that the numbers written in it in these assignments are different. Since the answer may be enormous, find the answer modulo 10^ 9+ 7 .",
    "input": "Each test contains multiple test cases. The first line contains the number of test cases t ( 1 \u2264 t \u2264 100 ) . Description of the test cases follows. The first line of each test case contains two integers n and m ( 1 \u2264 n, m \u2264 2000, nm \u2265 2 ) \u2013 the dimensions of the forest. n lines follow, each consisting of one string of m characters. Each of these characters is either a \" 0\" or a \" # \" . It is guaranteed that the sum of n over all test cases does not exceed 2000 and the sum of m over all test cases does not exceed 2000 .",
    "output": "For each test case, print one integer: the number of valid configurations modulo 10^ 9+ 7 .",
    "note": "For the first test case, the two valid assignments are 0000 0000 0000 and 0000 0010 0000",
    "topics": [
      "combinatorics",
      "graphs",
      "math",
      "shortest paths"
    ],
    "id": "1536E"
  },
  {
    "title": "Array Reodering",
    "url": "https://codeforces.com/problemset/problem/1535/B",
    "history": "You are given an array a consisting of n integers. Let' s call a pair of indices i , j good if 1 \u2264 i < j \u2264 n and ( a_ i, 2a_ j) > 1 ( where ( x, y) is the greatest common divisor of x and y ) . Find the maximum number of good index pairs if you can reorder the array a in an arbitrary way.",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 1000 ) \u2014 the number of test cases. The first line of the test case contains a single integer n ( 2 \u2264 n \u2264 2000 ) \u2014 the number of elements in the array. The second line of the test case contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 5 ) . It is guaranteed that the sum of n over all test cases does not exceed 2000 .",
    "output": "For each test case, output a single integer \u2014 the maximum number of good index pairs if you can reorder the array a in an arbitrary way.",
    "note": "In the first example, the array elements can be rearranged as follows: [ 6, 3, 5, 3] . In the third example, the array elements can be rearranged as follows: [ 4, 4, 2, 1, 1] .",
    "topics": [
      "brute force",
      "greedy",
      "math",
      "number theory",
      "sortings"
    ],
    "id": "1535B"
  },
  {
    "title": "Little Alawn's Puzzle",
    "url": "https://codeforces.com/problemset/problem/1534/C",
    "history": "When he' s not training for IOI, Little Alawn enjoys playing with puzzles of various types to stimulate his brain. Today, he' s playing with a puzzle that consists of a 2 \u00d7 n grid where each row is a permutation of the numbers 1, 2, 3, . . . , n . The goal of Little Alawn' s puzzle is to make sure no numbers on the same column or row are the same ( we' ll call this state of the puzzle as solved) , and to achieve this he is able to swap the numbers in any column. However, after solving the puzzle many times, Little Alawn got bored and began wondering about the number of possible solved configurations of the puzzle he could achieve from an initial solved configuration only by swapping numbers in a column. Unfortunately, Little Alawn got stuck while trying to solve this harder problem, so he was wondering if you could help him with it. Find the answer modulo 10^ 9+ 7 .",
    "input": "Each test contains multiple test cases. The first line contains the number of test cases t ( 1 \u2264 t \u2264 10^ 4 ) . Description of the test cases follows. The first line of each test case contains a single integer n ( 2 \u2264 n \u2264 4 \u00b7 10^ 5 ) . The next two lines of each test case describe the initial state of the puzzle grid. Each line will be a permutation of the numbers 1, 2, 3, . . . , n and the numbers in each column and row will be pairwise distinct. It is guaranteed that the sum of n over all test cases does not exceed 4 \u00b7 10^ 5 .",
    "output": "For each test case output a single integer, the number of possible solved configurations of the puzzle Little Alawn can achieve from an initial solved configuration only by swapping numbers in a column. As the answer can be very large, please output it modulo 10^ 9+ 7 . The answer for each test case should be on a separate line.",
    "note": "The two possible puzzle configurations for example 1 are: [ 1, 4, 2, 3] in the first row and [ 3, 2, 1, 4] in the second; [ 3, 2, 1, 4] in the first row and [ 1, 4, 2, 3] in the second.",
    "topics": [
      "combinatorics",
      "dp",
      "dsu",
      "graphs",
      "math"
    ],
    "id": "1534C"
  },
  {
    "title": "Histogram Ugliness",
    "url": "https://codeforces.com/problemset/problem/1534/B",
    "history": "Little Dormi received a histogram with n bars of height a_ 1, a_ 2, . . . , a_ n for Christmas. However, the more he played with his new histogram, the more he realized its imperfections, so today he wanted to modify it to his liking. To modify the histogram, Little Dormi is able to perform the following operation an arbitrary number of times: Select an index i ( 1 \u2264 i \u2264 n ) where a_ i> 0 , and assign a_ i : = a_ i- 1 . Little Dormi defines the ugliness score of his histogram ( after performing some number of operations) as the sum of the vertical length of its outline and the number of operations he performed on it. And to make the histogram as perfect as possible, he would like to minimize the ugliness score after modifying it with some number of operations. However, as his histogram is very large, Little Dormi is having trouble minimizing the ugliness score, so as Little Dormi' s older brother, help him find the minimal ugliness. Consider the following example where the histogram has 4 columns of heights 4, 8, 9, 6 : The blue region represents the histogram, and the red lines represent the vertical portion of the outline. Currently, the vertical length of the outline is 4+ 4+ 1+ 3+ 6 = 18 , so if Little Dormi does not modify the histogram at all, the ugliness would be 18 . However, Little Dormi can apply the operation once on column 2 and twice on column 3 , resulting in a histogram with heights 4, 7, 7, 6 : Now, as the total vertical length of the outline ( red lines) is 4+ 3+ 1+ 6= 14 , the ugliness is 14+ 3= 17 dollars. It can be proven that this is optimal.",
    "input": "Each test contains multiple test cases. The first line contains the number of test cases t ( 1 \u2264 t \u2264 10^ 4 ) . Description of the test cases follows. The first line of each test case contains a single integer n ( 1 \u2264 n \u2264 4 \u00b7 10^ 5 ) . The second line of each test case contains n integers a_ 1, a_ 2, . . . , a_ n ( 0 \u2264 a_ i \u2264 10^ 9 ) . It is guaranteed that the sum of n over all test cases does not exceed 4 \u00b7 10^ 5 .",
    "output": "For each test case output one integer, the minimal ugliness Little Dormi can achieve with the histogram in that test case.",
    "note": "Example 1 is the example described in the statement. The initial histogram for example 2 is given below: The ugliness is currently 2+ 1+ 6+ 3+ 4= 16 . By applying the operation once on column 1 , six times on column 3 , and three times on column 4 , we can end up with a histogram with heights 1, 1, 1, 1, 0, 0 : The vertical length of the outline is now 1+ 1= 2 and Little Dormi made 1+ 6+ 3= 10 operations, so the final ugliness is 2+ 10= 12 , which can be proven to be optimal.",
    "topics": [
      "greedy",
      "implementation",
      "math"
    ],
    "id": "1534B"
  },
  {
    "title": "Travel to Bertown",
    "url": "https://codeforces.com/problemset/problem/1533/A",
    "history": "Vika has decided to go on a trip to Bertown. She comes to Bertown on the k - th day. Vika does not want to spend money on hotels, fortunately she has n friends who live in Bertown and allow Vika to stay at their houses. The i - th friend told Vika that she could stay at their house from the l_ i - th day till the r_ i - th day, inclusive. Vika decided that she would stay at no more than one friend' s house. Help Vika determine the maximum number of days that she will be able to stay in Bertown.",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 500 ) \u2014 the number of test cases. The first line of each test case contains two integers n and k ( 1 \u2264 n, k \u2264 100 ) \u2014 the number of Vika' s friends and the day when Vika comes to Bertown. Then follow n lines, each containing two integers l_ i and r_ i ( 1 \u2264 l_ i \u2264 r_ i \u2264 100 ) denoting the period when Vika can stay at the i - th friend' s house.",
    "output": "For each test case, output a single integer \u2014 the maximum number of days that Vika can stay in Bertown ( or 0 if none of Vika' s friends can host her on day k ) .",
    "note": "In the first example, Vika can stay at the 2 - nd friend' s house from 3 - rd to 6 - th day. In the second example, none of Vika' s friends can host her on the 4 - th day. In the third example, Vika can stay at the 1 - st friend' s house, but only for the 4 - th day.",
    "topics": [
      "*special",
      "implementation",
      "math"
    ],
    "id": "1533A"
  },
  {
    "title": "Frog Jumping",
    "url": "https://codeforces.com/problemset/problem/1532/B",
    "history": "A frog is currently at the point 0 on a coordinate axis Ox . It jumps by the following algorithm: the first jump is a units to the right, the second jump is b units to the left, the third jump is a units to the right, the fourth jump is b units to the left, and so on. Formally: if the frog has jumped an even number of times ( before the current jump) , it jumps from its current position x to position x+ a ; otherwise it jumps from its current position x to position x- b . Your task is to calculate the position of the frog after k jumps. But. . . One more thing. You are watching t different frogs so you have to answer t independent queries.",
    "input": "The first line of the input contains one integer t ( 1 \u2264 t \u2264 1000 ) \u2014 the number of queries. Each of the next t lines contain queries ( one query per line) . The query is described as three space- separated integers a, b, k ( 1 \u2264 a, b, k \u2264 10^ 9 ) \u2014 the lengths of two types of jumps and the number of jumps, respectively.",
    "output": "Print t integers. The i - th integer should be the answer for the i - th query.",
    "note": "In the first query frog jumps 5 to the right, 2 to the left and 5 to the right so the answer is 5 - 2 + 5 = 8 . In the second query frog jumps 100 to the right, 1 to the left, 100 to the right and 1 to the left so the answer is 100 - 1 + 100 - 1 = 198 . In the third query the answer is 1 - 10 + 1 - 10 + 1 = - 17 . In the fourth query the answer is 10^ 9 - 1 + 10^ 9 - 1 + 10^ 9 - 1 = 2999999997 . In the fifth query all frog' s jumps are neutralized by each other so the answer is 0 . The sixth query is the same as the fifth but without the last jump so the answer is 1 .",
    "topics": [
      "*special",
      "math"
    ],
    "id": "1532B"
  },
  {
    "title": "Bingo",
    "url": "https://codeforces.com/problemset/problem/1530/F",
    "history": "Getting ready for VK Fest 2021, you prepared a table with n rows and n columns, and filled each cell of this table with some event related with the festival that could either happen or not: for example, whether you will win a prize on the festival, or whether it will rain. Forecasting algorithms used in VK have already estimated the probability for each event to happen. Event in row i and column j will happen with probability a_ i, j\u00b7 10^ - 4 . All of the events are mutually independent. Let' s call the table winning if there exists a line such that all n events on it happen. The line could be any horizontal line ( cells ( i, 1) , ( i, 2) , . . . , ( i, n) for some i ) , any vertical line ( cells ( 1, j) , ( 2, j) , . . . , ( n, j) for some j ) , the main diagonal ( cells ( 1, 1) , ( 2, 2) , . . . , ( n, n) ) , or the antidiagonal ( cells ( 1, n) , ( 2, n - 1) , . . . , ( n, 1) ) . Find the probability of your table to be winning, and output it modulo 31 607 ( see Output section) .",
    "input": "The first line contains a single integer n ( 2 \u2264 n \u2264 21 ) \u2014 the dimensions of the table. The i - th of the next n lines contains n integers a_ i, 1, a_ i, 2, . . . , a_ i, n ( 0 < a_ i, j < 10^ 4 ) . The probability of event in cell ( i, j) to happen is a_ i, j\u00b7 10^ - 4 .",
    "output": "Print the probability that your table will be winning, modulo 31 607 . Formally, let M = 31 607 . It can be shown that the answer can be expressed as an irreducible fraction p/ q , where p and q are integers and q \u2261\u03380 M . Output the integer equal to p \u00b7 q^ - 1 M . In other words, output such an integer x that 0 \u2264 x < M and x \u00b7 q \u2261 p M .",
    "note": "In the first example, any two events form a line, and the table will be winning if any two events happen. The probability of this is 11/ 16 , and 5927 \u00b7 16 \u2261 11 31 607 .",
    "topics": [
      "bitmasks",
      "combinatorics",
      "dp",
      "math",
      "probabilities"
    ],
    "id": "1530F"
  },
  {
    "title": "Secret Santa",
    "url": "https://codeforces.com/problemset/problem/1530/D",
    "history": "Every December, VK traditionally holds an event for its employees named \" Secret Santa\" . Here' s how it happens. n employees numbered from 1 to n take part in the event. Each employee i is assigned a different employee b_ i , to which employee i has to make a new year gift. Each employee is assigned to exactly one other employee, and nobody is assigned to themselves ( but two employees may be assigned to each other) . Formally, all b_ i must be distinct integers between 1 and n , and for any i , b_ i i must hold. The assignment is usually generated randomly. This year, as an experiment, all event participants have been asked who they wish to make a gift to. Each employee i has said that they wish to make a gift to employee a_ i . Find a valid assignment b that maximizes the number of fulfilled wishes of the employees.",
    "input": "Each test contains multiple test cases. The first line contains the number of test cases t ( 1 \u2264 t \u2264 10^ 5 ) . Description of the test cases follows. Each test case consists of two lines. The first line contains a single integer n ( 2 \u2264 n \u2264 2 \u00b7 10^ 5 ) \u2014 the number of participants of the event. The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 n ; a_ i i ) \u2014 wishes of the employees in order from 1 to n . It is guaranteed that the sum of n over all test cases does not exceed 2 \u00b7 10^ 5 .",
    "output": "For each test case, print two lines. In the first line, print a single integer k ( 0 \u2264 k \u2264 n ) \u2014 the number of fulfilled wishes in your assignment. In the second line, print n distinct integers b_ 1, b_ 2, . . . , b_ n ( 1 \u2264 b_ i \u2264 n ; b_ i i ) \u2014 the numbers of employees assigned to employees 1, 2, . . . , n . k must be equal to the number of values of i such that a_ i = b_ i , and must be as large as possible. If there are multiple answers, print any.",
    "note": "In the first test case, two valid assignments exist: [ 3, 1, 2] and [ 2, 3, 1] . The former assignment fulfills two wishes, while the latter assignment fulfills only one. Therefore, k = 2 , and the only correct answer is [ 3, 1, 2] .",
    "topics": [
      "constructive algorithms",
      "flows",
      "graphs",
      "greedy",
      "math"
    ],
    "id": "1530D"
  },
  {
    "title": "Binary Decimal",
    "url": "https://codeforces.com/problemset/problem/1530/A",
    "history": "Let' s call a number a binary decimal if it' s a positive integer and all digits in its decimal notation are either 0 or 1 . For example, 1 010 111 is a binary decimal, while 10 201 and 787 788 are not. Given a number n , you are asked to represent n as a sum of some ( not necessarily distinct) binary decimals. Compute the smallest number of binary decimals required for that.",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 1000 ) , denoting the number of test cases. The only line of each test case contains a single integer n ( 1 \u2264 n \u2264 10^ 9 ) , denoting the number to be represented.",
    "output": "For each test case, output the smallest number of binary decimals required to represent n as a sum.",
    "note": "In the first test case, 121 can be represented as 121 = 110 + 11 or 121 = 111 + 10 . In the second test case, 5 can be represented as 5 = 1 + 1 + 1 + 1 + 1 . In the third test case, 1 000 000 000 is a binary decimal itself, thus the answer is 1 .",
    "topics": [
      "greedy",
      "math"
    ],
    "id": "1530A"
  },
  {
    "title": "Sifid and Strange Subsequences",
    "url": "https://codeforces.com/problemset/problem/1529/B",
    "history": "A sequence ( b_ 1, b_ 2, . . . , b_ k) is called strange, if the absolute difference between any pair of its elements is greater than or equal to the maximum element in the sequence. Formally speaking, it' s strange if for every pair ( i, j) with 1 \u2264 i< j \u2264 k , we have | a_ i- a_ j| \u2265 MAX , where MAX is the largest element of the sequence. In particular, any sequence of length at most 1 is strange. For example, the sequences ( - 2021, - 1, - 1, - 1) and ( - 1, 0, 1) are strange, but ( 3, 0, 1) is not, because | 0 - 1| < 3 . Sifid has an array a of n integers. Sifid likes everything big, so among all the strange subsequences of a , he wants to find the length of the longest one. Can you help him? A sequence c is a subsequence of an array d if c can be obtained from d by deletion of several ( possibly, zero or all) elements.",
    "input": "The first line contains an integer t ( 1\u2264 t\u2264 10^ 4) \u2014 the number of test cases. The description of the test cases follows. The first line of each test case contains an integer n ( 1\u2264 n\u2264 10^ 5) \u2014 the length of the array a . The second line of each test case contains n integers a_ 1, a_ 2, . . . , a_ n ( - 10^ 9\u2264 a_ i \u2264 10^ 9) \u2014 the elements of the array a . It is guaranteed that the sum of n over all test cases doesn' t exceed 10^ 5 .",
    "output": "For each test case output a single integer \u2014 the length of the longest strange subsequence of a .",
    "note": "In the first test case, one of the longest strange subsequences is ( a_ 1, a_ 2, a_ 3, a_ 4) In the second test case, one of the longest strange subsequences is ( a_ 1, a_ 3, a_ 4, a_ 5, a_ 7) . In the third test case, one of the longest strange subsequences is ( a_ 1, a_ 3, a_ 4, a_ 5) . In the fourth test case, one of the longest strange subsequences is ( a_ 2) . In the fifth test case, one of the longest strange subsequences is ( a_ 1, a_ 2, a_ 4) .",
    "topics": [
      "greedy",
      "math",
      "sortings"
    ],
    "id": "1529B"
  },
  {
    "title": "Eshag Loves Big Arrays",
    "url": "https://codeforces.com/problemset/problem/1529/A",
    "history": "Eshag has an array a consisting of n integers. Eshag can perform the following operation any number of times: choose some subsequence of a and delete every element from it which is strictly larger than AVG , where AVG is the average of the numbers in the chosen subsequence. For example, if a = [ 1 , 4 , 3 , 2 , 4] and Eshag applies the operation to the subsequence containing a_ 1 , a_ 2 , a_ 4 and a_ 5 , then he will delete those of these 4 elements which are larger than a_ 1+ a_ 2+ a_ 4+ a_ 5/ 4 = 11/ 4 , so after the operation, the array a will become a = [ 1 , 3 , 2] . Your task is to find the maximum number of elements Eshag can delete from the array a by applying the operation described above some number ( maybe, zero) times. A sequence b is a subsequence of an array c if b can be obtained from c by deletion of several ( possibly, zero or all) elements.",
    "input": "The first line contains an integer t ( 1\u2264 t\u2264 100) \u2014 the number of test cases. The description of the test cases follows. The first line of each test case contains an integer n ( 1\u2264 n\u2264 100) \u2014 the length of the array a . The second line of each test case contains n integers a_ 1, a_ 2, . . . , a_ n ( 1\u2264 a_ i \u2264 100) \u2014 the elements of the array a .",
    "output": "For each test case print a single integer \u2014 the maximum number of elements Eshag can delete from the array a .",
    "note": "Consider the first test case. Initially a = [ 1, 1, 1, 2, 2, 3] . In the first operation, Eshag can choose the subsequence containing a_ 1 , a_ 5 and a_ 6 , their average is equal to a_ 1 + a_ 5 + a_ 6/ 3 = 6/ 3 = 2 . So a_ 6 will be deleted. After this a = [ 1, 1, 1, 2, 2] . In the second operation, Eshag can choose the subsequence containing the whole array a , the average of all its elements is equal to 7/ 5 . So a_ 4 and a_ 5 will be deleted. After this a = [ 1, 1, 1] . In the second test case, Eshag can' t delete any element.",
    "topics": [
      "constructive algorithms",
      "greedy",
      "math"
    ],
    "id": "1529A"
  },
  {
    "title": "AmShZ Farm",
    "url": "https://codeforces.com/problemset/problem/1528/F",
    "history": "To AmShZ, all arrays are equal, but some arrays are more- equal than others. Specifically, the arrays consisting of n elements from 1 to n that can be turned into permutations of numbers from 1 to n by adding a non- negative integer to each element. Mashtali who wants to appear in every problem statement thinks that an array b consisting of k elements is compatible with a more- equal array a consisting of n elements if for each 1 \u2264 i \u2264 k we have 1 \u2264 b_ i \u2264 n and also a_ b_ 1 = a_ b_ 2 = . . . = a_ b_ k . Find the number of pairs of arrays a and b such that a is a more- equal array consisting of n elements and b is an array compatible with a consisting of k elements modulo 998244353 . Note that the elements of b are not necessarily distinct, same holds for a .",
    "input": "The first line of input contains two integers n and k ( 1 \u2264 n \u2264 10^ 9 , 1 \u2264 k \u2264 10^ 5) .",
    "output": "Print a single integer \u2014 the answer to the problem modulo 998244353 .",
    "note": "There are eight possible pairs for the second example: a = { 1, 1} , b = { 1, 1} a = { 1, 1} , b = { 1, 2} a = { 1, 1} , b = { 2, 1} a = { 1, 1} , b = { 2, 2} a = { 1, 2} , b = { 1, 1} a = { 1, 2} , b = { 2, 2} a = { 2, 1} , b = { 1, 1} a = { 2, 1} , b = { 2, 2}",
    "topics": [
      "combinatorics",
      "fft",
      "math"
    ],
    "id": "1528F"
  },
  {
    "title": "Kavi on Pairing Duty",
    "url": "https://codeforces.com/problemset/problem/1528/B",
    "history": "Kavi has 2n points lying on the OX axis, i - th of which is located at x = i . Kavi considers all ways to split these 2n points into n pairs. Among those, he is interested in good pairings, which are defined as follows: Consider n segments with ends at the points in correspondent pairs. The pairing is called good, if for every 2 different segments A and B among those, at least one of the following holds: One of the segments A and B lies completely inside the other. A and B have the same length. Consider the following example: A is a good pairing since the red segment lies completely inside the blue segment. B is a good pairing since the red and the blue segment have the same length. C is not a good pairing since none of the red or blue segments lies inside the other, neither do they have the same size. Kavi is interested in the number of good pairings, so he wants you to find it for him. As the result can be large, find this number modulo 998244353 . Two pairings are called different, if some two points are in one pair in some pairing and in different pairs in another.",
    "input": "The single line of the input contains a single integer n ( 1\u2264 n \u2264 10^ 6) .",
    "output": "Print the number of good pairings modulo 998244353 .",
    "note": "The good pairings for the second example are: In the third example, the good pairings are:",
    "topics": [
      "combinatorics",
      "dp",
      "math"
    ],
    "id": "1528B"
  },
  {
    "title": "MEX Tree",
    "url": "https://codeforces.com/problemset/problem/1527/D",
    "history": "You are given a tree with n nodes, numerated from 0 to n- 1 . For each k between 0 and n , inclusive, you have to count the number of unordered pairs ( u, v) , u = \u0338 v , such that the MEX of all the node labels in the shortest path from u to v ( including end points) is k . The MEX of a sequence of integers is the smallest non- negative integer that does not belong to the sequence.",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. The first line of each test case contains a single integer n ( 2 \u2264 n \u2264 2 \u00b7 10^ 5 ) . The next n- 1 lines of each test case describe the tree that has to be constructed. These lines contain two integers u and v ( 0 \u2264 u, v \u2264 n- 1 ) denoting an edge between u and v ( u = \u0338 v ) . It is guaranteed that the given edges form a tree. It is also guaranteed that the sum of n for all test cases does not exceed 2 \u00b7 10^ 5 .",
    "output": "For each test case, print n+ 1 integers: the number of paths in the tree, such that the MEX of all the node labels in that path is k for each k from 0 to n .",
    "note": "In example case 1 , For k = 0 , there is 1 path that is from 2 to 3 as MEX( [ 2, 3] ) = 0 . For k = 1 , there are 2 paths that is from 0 to 2 as MEX( [ 0, 2] ) = 1 and 0 to 3 as MEX( [ 0, 2, 3] ) = 1 . For k = 2 , there is 1 path that is from 0 to 1 as MEX( [ 0, 1] ) = 2 . For k = 3 , there is 1 path that is from 1 to 2 as MEX( [ 1, 0, 2] ) = 3 For k = 4 , there is 1 path that is from 1 to 3 as MEX( [ 1, 0, 2, 3] ) = 4 . In example case 2 , For k = 0 , there are no such paths. For k = 1 , there are no such paths. For k = 2 , there is 1 path that is from 0 to 1 as MEX( [ 0, 1] ) = 2 .",
    "topics": [
      "combinatorics",
      "dfs and similar",
      "implementation",
      "math",
      "trees"
    ],
    "id": "1527D"
  },
  {
    "title": "Sequence Pair Weight",
    "url": "https://codeforces.com/problemset/problem/1527/C",
    "history": "The weight of a sequence is defined as the number of unordered pairs of indexes ( i, j) ( here i j ) with same value ( a_ i = a_ j ) . For example, the weight of sequence a = [ 1, 1, 2, 2, 1] is 4 . The set of unordered pairs of indexes with same value are ( 1, 2) , ( 1, 5) , ( 2, 5) , and ( 3, 4) . You are given a sequence a of n integers. Print the sum of the weight of all subsegments of a . A sequence b is a subsegment of a sequence a if b can be obtained from a by deletion of several ( possibly, zero or all) elements from the beginning and several ( possibly, zero or all) elements from the end.",
    "input": "Each test contains multiple test cases. The first line contains the number of test cases t ( 1 \u2264 t \u2264 10^ 5 ) . Description of the test cases follows. The first line of each test case contains a single integer n ( 1 \u2264 n \u2264 10^ 5 ) . The second line of each test case contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 9 ) . It is guaranteed that the sum of n over all test cases does not exceed 10^ 5 .",
    "output": "For each test case, print a single integer \u2014 the sum of the weight of all subsegments of a .",
    "note": "In test case 1 , all possible subsegments of sequence [ 1, 2, 1, 1] having size more than 1 are: [ 1, 2] having 0 valid unordered pairs; [ 2, 1] having 0 valid unordered pairs; [ 1, 1] having 1 valid unordered pair; [ 1, 2, 1] having 1 valid unordered pairs; [ 2, 1, 1] having 1 valid unordered pair; [ 1, 2, 1, 1] having 3 valid unordered pairs. Answer is 6 . In test case 2 , all elements of the sequence are distinct. So, there is no valid unordered pair with the same value for any subarray. Answer is 0 .",
    "topics": [
      "hashing",
      "implementation",
      "math"
    ],
    "id": "1527C"
  },
  {
    "title": "Oolimry and Suffix Array",
    "url": "https://codeforces.com/problemset/problem/1526/E",
    "history": "Once upon a time, Oolimry saw a suffix array. He wondered how many strings can produce this suffix array. More formally, given a suffix array of length n and having an alphabet size k , count the number of strings that produce such a suffix array. Let s be a string of length n . Then the i - th suffix of s is the substring s[ i . . . n- 1] . A suffix array is the array of integers that represent the starting indexes of all the suffixes of a given string, after the suffixes are sorted in the lexicographic order. For example, the suffix array of oolimry is [ 3, 2, 4, 1, 0, 5, 6] as the array of sorted suffixes is [ , , , , , , ] . A string x is lexicographically smaller than string y , if either x is a prefix of y ( and x= \u0338 y ) , or there exists such i that x_ i < y_ i , and for any 1\u2264 j < i , x_ j = y_ j .",
    "input": "The first line contain 2 integers n and k ( 1 \u2264 n \u2264 200000, 1 \u2264 k \u2264 200000 ) \u2014 the length of the suffix array and the alphabet size respectively. The second line contains n integers s_ 0, s_ 1, s_ 2, . . . , s_ n- 1 ( 0 \u2264 s_ i \u2264 n- 1 ) where s_ i is the i - th element of the suffix array i. e. the starting position of the i - th lexicographically smallest suffix. It is guaranteed that for all 0 \u2264 i< j \u2264 n- 1 , s_ i = \u0338 s_ j .",
    "output": "Print how many strings produce such a suffix array. Since the number can be very large, print the answer modulo 998244353 .",
    "note": "In the first test case, \" abb\" is the only possible solution. In the second test case, it can be easily shown no possible strings exist as all the letters have to be equal. In the fourth test case, one possible string is \" ddbacef\" . Please remember to print your answers modulo 998244353 .",
    "topics": [
      "combinatorics",
      "constructive algorithms",
      "math"
    ],
    "id": "1526E"
  },
  {
    "title": "Kill Anton",
    "url": "https://codeforces.com/problemset/problem/1526/D",
    "history": "After rejecting 10^ 100 data structure problems, Errorgorn is very angry at Anton and decided to kill him. Anton' s DNA can be represented as a string a which only contains the characters \" ANTON\" ( there are only 4 distinct characters) . Errorgorn can change Anton' s DNA into string b which must be a permutation of a . However, Anton' s body can defend against this attack. In 1 second, his body can swap 2 adjacent characters of his DNA to transform it back to a . Anton' s body is smart and will use the minimum number of moves. To maximize the chance of Anton dying, Errorgorn wants to change Anton' s DNA the string that maximizes the time for Anton' s body to revert his DNA. But since Errorgorn is busy making more data structure problems, he needs your help to find the best string B . Can you help him?",
    "input": "The first line of input contains a single integer t ( 1 \u2264 t \u2264 100000) \u2014 the number of testcases. The first and only line of each testcase contains 1 string a ( 1 \u2264 | a| \u2264 100000 ) . a consists of only the characters \" A\" , \" N\" , \" O\" and \" T\" . It is guaranteed that the sum of | a| over all testcases does not exceed 100000 .",
    "output": "For each testcase, print a single string, b . If there are multiple answers, you can output any one of them. b must be a permutation of the string a .",
    "note": "For the first testcase, it takes 7 seconds for Anton' s body to transform NNOTA to ANTON: NNOTA \u2192 NNOAT \u2192 NNAOT \u2192 NANOT \u2192 NANTO \u2192 ANNTO \u2192 ANTNO \u2192 ANTON. Note that you cannot output strings such as AANTON, ANTONTRYGUB, AAAAA and anton as it is not a permutation of ANTON. For the second testcase, it takes 2 seconds for Anton' s body to transform AANN to NAAN. Note that other strings such as NNAA and ANNA will also be accepted.",
    "topics": [
      "brute force",
      "constructive algorithms",
      "data structures",
      "math",
      "strings"
    ],
    "id": "1526D"
  },
  {
    "title": "I Hate 1111",
    "url": "https://codeforces.com/problemset/problem/1526/B",
    "history": "You are given an integer x . Can you make x by summing up some number of 11, 111, 1111, 11111, . . . ? ( You can use any number among them any number of times) . For instance, 33= 11+ 11+ 11 144= 111+ 11+ 11+ 11",
    "input": "The first line of input contains a single integer t ( 1 \u2264 t \u2264 10000) \u2014 the number of testcases. The first and only line of each testcase contains a single integer x ( 1 \u2264 x \u2264 10^ 9) \u2014 the number you have to make.",
    "output": "For each testcase, you should output a single string. If you can make x , output \" YES\" ( without quotes) . Otherwise, output \" NO\" . You can print each letter of \" YES\" and \" NO\" in any case ( upper or lower) .",
    "note": "Ways to make 33 and 144 were presented in the statement. It can be proved that we can' t present 69 this way.",
    "topics": [
      "dp",
      "math",
      "number theory"
    ],
    "id": "1526B"
  },
  {
    "title": "Assimilation IV",
    "url": "https://codeforces.com/problemset/problem/1525/E",
    "history": "Monocarp is playing a game \" Assimilation IV\" . In this game he manages a great empire: builds cities and conquers new lands. Monocarp' s empire has n cities. In order to conquer new lands he plans to build one Monument in each city. The game is turn- based and, since Monocarp is still amateur, he builds exactly one Monument per turn. Monocarp has m points on the map he' d like to control using the constructed Monuments. For each point he knows the distance between it and each city. Monuments work in the following way: when built in some city, a Monument controls all points at distance at most 1 to this city. Next turn, the Monument controls all points at distance at most 2 , the turn after \u2014 at distance at most 3 , and so on. Monocarp will build n Monuments in n turns and his empire will conquer all points that are controlled by at least one Monument. Monocarp can' t figure out any strategy, so during each turn he will choose a city for a Monument randomly among all remaining cities ( cities without Monuments) . Monocarp wants to know how many points ( among m of them) he will conquer at the end of turn number n . Help him to calculate the expected number of conquered points!",
    "input": "The first line contains two integers n and m ( 1 \u2264 n \u2264 20 ; 1 \u2264 m \u2264 5 \u00b7 10^ 4 ) \u2014 the number of cities and the number of points. Next n lines contains m integers each: the j - th integer of the i - th line d_ i, j ( 1 \u2264 d_ i, j\u2264 n + 1 ) is the distance between the i - th city and the j - th point.",
    "output": "It can be shown that the expected number of points Monocarp conquers at the end of the n - th turn can be represented as an irreducible fraction x/ y . Print this fraction modulo 998 244 353 , i. e. value x \u00b7 y^ - 1 998244353 where y^ - 1 is such number that y \u00b7 y^ - 1 998244353 = 1 .",
    "note": "Let' s look at all possible orders of cities Monuments will be build in: [ 1, 2, 3] : the first city controls all points at distance at most 3 , in other words, points 1 and 4 ; the second city controls all points at distance at most 2 , or points 1 , 3 and 5 ; the third city controls all points at distance at most 1 , or point 1 . In total, 4 points are controlled. [ 1, 3, 2] : the first city controls points 1 and 4 ; the second city \u2014 points 1 and 3 ; the third city \u2014 point 1 . In total, 3 points. [ 2, 1, 3] : the first city controls point 1 ; the second city \u2014 points 1 , 3 and 5 ; the third city \u2014 point 1 . In total, 3 points. [ 2, 3, 1] : the first city controls point 1 ; the second city \u2014 points 1 , 3 and 5 ; the third city \u2014 point 1 . In total, 3 points. [ 3, 1, 2] : the first city controls point 1 ; the second city \u2014 points 1 and 3 ; the third city \u2014 points 1 and 5 . In total, 3 points. [ 3, 2, 1] : the first city controls point 1 ; the second city \u2014 points 1 , 3 and 5 ; the third city \u2014 points 1 and 5 . In total, 3 points. The expected number of controlled points is 4 + 3 + 3 + 3 + 3 + 3/ 6 = 19/ 6 or 19 \u00b7 6^ - 1 \u2261 19 \u00b7 166374059 \u2261 166374062 998244353",
    "topics": [
      "combinatorics",
      "dp",
      "math",
      "probabilities",
      "two pointers"
    ],
    "id": "1525E"
  },
  {
    "title": "Potion-making",
    "url": "https://codeforces.com/problemset/problem/1525/A",
    "history": "You have an initially empty cauldron, and you want to brew a potion in it. The potion consists of two ingredients: magic essence and water. The potion you want to brew should contain exactly k % magic essence and ( 100 - k) % water. In one step, you can pour either one liter of magic essence or one liter of water into the cauldron. What is the minimum number of steps to brew a potion? You don' t care about the total volume of the potion, only about the ratio between magic essence and water in it. A small reminder: if you pour e liters of essence and w liters of water ( e + w > 0 ) into the cauldron, then it contains e/ e + w\u00b7 100 % ( without rounding) magic essence and w/ e + w\u00b7 100 % water.",
    "input": "The first line contains the single t ( 1 \u2264 t \u2264 100 ) \u2014 the number of test cases. The first and only line of each test case contains a single integer k ( 1 \u2264 k \u2264 100 ) \u2014 the percentage of essence in a good potion.",
    "output": "For each test case, print the minimum number of steps to brew a good potion. It can be proved that it' s always possible to achieve it in a finite number of steps.",
    "note": "In the first test case, you should pour 3 liters of magic essence and 97 liters of water into the cauldron to get a potion with 3 % of magic essence. In the second test case, you can pour only 1 liter of essence to get a potion with 100 % of magic essence. In the third test case, you can pour 1 liter of magic essence and 3 liters of water.",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "1525A"
  },
  {
    "title": "Crypto Lights",
    "url": "https://codeforces.com/problemset/problem/1523/E",
    "history": "To monitor cryptocurrency exchange rates trader William invented a wonderful device consisting of n lights arranged in a row. The device functions in the following way: Initially, all lights on William' s device are turned off. At the beginning of a new iteration the device randomly, with a uniform distribution, picks a light that is turned off and turns it on, telling William which cryptocurrency he should invest in. After this iteration if any k consecutive lights contain more than one turned on light, then the device finishes working. William doesn' t like uncertainty, so he wants you to calculate the expected value of the number of lights that are turned on in the device after it finishes working.",
    "input": "Each test contains multiple test cases. The first line contains the number of test cases t ( 1 \u2264 t \u2264 10 ) . Description of the test cases follows. The only line for each test case contains two integers n and k ( 2 \u2264 k \u2264 n \u2264 10^ 5 ) , which are the total number of lights and the length of subsegment of lights that are being checked, respectively.",
    "output": "For each test case print the answer, modulo 10^ 9+ 7 . Formally, let M = 10^ 9+ 7 . It can be shown that the answer can be expressed as an irreducible fraction p/ q , where p and q are integers and q \u2261\u03380 M . Output the integer equal to p \u00b7 q^ - 1 M . In other words, output such an integer x that 0 \u2264 x < M and x \u00b7 q \u2261 p M .",
    "note": "Explanation of the first sample test case: Let' s write out all possible sequences of light toggles, which will make the device complete its operation: ( 1, 2) \u2014 2 lights are turned on ( 1, 3, 2) \u2014 3 lights are turned on ( 2, 1) \u2014 2 lights are turned on ( 2, 3) \u2014 2 lights are turned on ( 3, 2) \u2014 2 lights are turned on ( 3, 1, 2) \u2014 3 lights are turned on Then the final expected value will be equal to 2/ 6 + 3/ 6 + 2/ 6 + 2/ 6 + 2/ 6 + 3/ 6 = 14/ 6 = 7/ 3 . Then the required output will be 333333338 , since 333333338 \u00b7 3 \u2261 7 10^ 9+ 7 .",
    "topics": [
      "combinatorics",
      "dp",
      "math",
      "probabilities"
    ],
    "id": "1523E"
  },
  {
    "title": "Nastia and a Good Array",
    "url": "https://codeforces.com/problemset/problem/1521/B",
    "history": "Nastia has received an array of n positive integers as a gift. She calls such an array a good that for all i ( 2 \u2264 i \u2264 n ) takes place gcd( a_ i - 1, a_ i) = 1 , where gcd( u, v) denotes the greatest common divisor ( GCD) of integers u and v . You can perform the operation: select two different indices i, j ( 1 \u2264 i, j \u2264 n , i = \u0338 j ) and two integers x, y ( 1 \u2264 x, y \u2264 2 \u00b7 10^ 9 ) so that min( a_ i, a_ j) = min( x, y) . Then change a_ i to x and a_ j to y . The girl asks you to make the array good using at most n operations. It can be proven that this is always possible.",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 10 000 ) \u2014 the number of test cases. The first line of each test case contains a single integer n ( 1 \u2264 n \u2264 10^ 5 ) \u2014 the length of the array. The second line of each test case contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 9 ) \u2014 the array which Nastia has received as a gift. It' s guaranteed that the sum of n in one test doesn' t exceed 2 \u00b7 10^ 5 .",
    "output": "For each of t test cases print a single integer k ( 0 \u2264 k \u2264 n ) \u2014 the number of operations. You don' t need to minimize this number. In each of the next k lines print 4 integers i , j , x , y ( 1 \u2264 i = \u0338 j \u2264 n , 1 \u2264 x, y \u2264 2 \u00b7 10^ 9 ) so that min( a_ i, a_ j) = min( x, y) \u2014 in this manner you replace a_ i with x and a_ j with y . If there are multiple answers, print any.",
    "note": "Consider the first test case. Initially a = [ 9, 6, 3, 11, 15] . In the first operation replace a_ 1 with 11 and a_ 5 with 9 . It' s valid, because min( a_ 1, a_ 5) = min( 11, 9) = 9 . After this a = [ 11, 6, 3, 11, 9] . In the second operation replace a_ 2 with 7 and a_ 5 with 6 . It' s valid, because min( a_ 2, a_ 5) = min( 7, 6) = 6 . After this a = [ 11, 7, 3, 11, 6] \u2014 a good array. In the second test case, the initial array is already good.",
    "topics": [
      "constructive algorithms",
      "math",
      "number theory"
    ],
    "id": "1521B"
  },
  {
    "title": "Nastia and Nearly Good Numbers",
    "url": "https://codeforces.com/problemset/problem/1521/A",
    "history": "Nastia has 2 positive integers A and B . She defines that: The integer is good if it is divisible by A \u00b7 B ; Otherwise, the integer is nearly good, if it is divisible by A . For example, if A = 6 and B = 4 , the integers 24 and 72 are good, the integers 6 , 660 and 12 are nearly good, the integers 16 , 7 are neither good nor nearly good. Find 3 different positive integers x , y , and z such that exactly one of them is good and the other 2 are nearly good, and x + y = z .",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 10 000 ) \u2014 the number of test cases. The first line of each test case contains two integers A and B ( 1 \u2264 A \u2264 10^ 6 , 1 \u2264 B \u2264 10^ 6 ) \u2014 numbers that Nastia has.",
    "output": "For each test case print: \" YES\" and 3 different positive integers x , y , and z ( 1 \u2264 x, y, z \u2264 10^ 18 ) such that exactly one of them is good and the other 2 are nearly good, and x + y = z . \" NO\" if no answer exists. You can print each character of \" YES\" or \" NO\" in any case. If there are multiple answers, print any.",
    "note": "In the first test case: 60 \u2014 good number; 10 and 50 \u2014 nearly good numbers. In the second test case: 208 \u2014 good number; 169 and 39 \u2014 nearly good numbers. In the third test case: 154 \u2014 good number; 28 and 182 \u2014 nearly good numbers.",
    "topics": [
      "constructive algorithms",
      "math",
      "number theory"
    ],
    "id": "1521A"
  },
  {
    "title": "Arranging The Sheep",
    "url": "https://codeforces.com/problemset/problem/1520/E",
    "history": "You are playing the game \" Arranging The Sheep\" . The goal of this game is to make the sheep line up. The level in the game is described by a string of length n , consisting of the characters ' . ' ( empty space) and ' * ' ( sheep) . In one move, you can move any sheep one square to the left or one square to the right, if the corresponding square exists and is empty. The game ends as soon as the sheep are lined up, that is, there should be no empty cells between any sheep. For example, if n= 6 and the level is described by the string \" * * . * . . \" , then the following game scenario is possible: the sheep at the 4 position moves to the right, the state of the level: \" * * . . * . \" ; the sheep at the 2 position moves to the right, the state of the level: \" * . * . * . \" ; the sheep at the 1 position moves to the right, the state of the level: \" . * * . * . \" ; the sheep at the 3 position moves to the right, the state of the level: \" . * . * * . \" ; the sheep at the 2 position moves to the right, the state of the level: \" . . * * * . \" ; the sheep are lined up and the game ends. For a given level, determine the minimum number of moves you need to make to complete the level.",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 10^ 4 ) . Then t test cases follow. The first line of each test case contains one integer n ( 1 \u2264 n \u2264 10^ 6 ) . The second line of each test case contains a string of length n , consisting of the characters ' . ' ( empty space) and ' * ' ( sheep) \u2014 the description of the level. It is guaranteed that the sum of n over all test cases does not exceed 10^ 6 .",
    "output": "For each test case output the minimum number of moves you need to make to complete the level.",
    "note": "",
    "topics": [
      "greedy",
      "math"
    ],
    "id": "1520E"
  },
  {
    "title": "Same Differences",
    "url": "https://codeforces.com/problemset/problem/1520/D",
    "history": "You are given an array a of n integers. Count the number of pairs of indices ( i, j) such that i < j and a_ j - a_ i = j - i .",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 10^ 4 ) . Then t test cases follow. The first line of each test case contains one integer n ( 1 \u2264 n \u2264 2 \u00b7 10^ 5 ) . The second line of each test case contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 n ) \u2014 array a . It is guaranteed that the sum of n over all test cases does not exceed 2 \u00b7 10^ 5 .",
    "output": "For each test case output the number of pairs of indices ( i, j) such that i < j and a_ j - a_ i = j - i .",
    "note": "",
    "topics": [
      "data structures",
      "hashing",
      "math"
    ],
    "id": "1520D"
  },
  {
    "title": "Ordinary Numbers",
    "url": "https://codeforces.com/problemset/problem/1520/B",
    "history": "Let' s call a positive integer n ordinary if in the decimal notation all its digits are the same. For example, 1 , 2 and 99 are ordinary numbers, but 719 and 2021 are not ordinary numbers. For a given number n , find the number of ordinary numbers among the numbers from 1 to n .",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 10^ 4 ) . Then t test cases follow. Each test case is characterized by one integer n ( 1 \u2264 n \u2264 10^ 9 ) .",
    "output": "For each test case output the number of ordinary numbers among numbers from 1 to n .",
    "note": "",
    "topics": [
      "brute force",
      "math",
      "number theory"
    ],
    "id": "1520B"
  },
  {
    "title": "Maximum Sum of Products",
    "url": "https://codeforces.com/problemset/problem/1519/D",
    "history": "You are given two integer arrays a and b of length n . You can reverse at most one subarray ( continuous subsegment) of the array a . Your task is to reverse such a subarray that the sum \u2211_ i= 1^ n a_ i \u00b7 b_ i is maximized.",
    "input": "The first line contains one integer n ( 1 \u2264 n \u2264 5000 ) . The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 7 ) . The third line contains n integers b_ 1, b_ 2, . . . , b_ n ( 1 \u2264 b_ i \u2264 10^ 7 ) .",
    "output": "Print single integer \u2014 maximum possible sum after reversing at most one subarray ( continuous subsegment) of a .",
    "note": "In the first example, you can reverse the subarray [ 4, 5] . Then a = [ 2, 3, 2, 3, 1] and 2 \u00b7 1 + 3 \u00b7 3 + 2 \u00b7 2 + 3 \u00b7 4 + 1 \u00b7 2 = 29 . In the second example, you don' t need to use the reverse operation. 13 \u00b7 2 + 37 \u00b7 4 = 174 . In the third example, you can reverse the subarray [ 3, 5] . Then a = [ 1, 8, 3, 6, 7, 6] and 1 \u00b7 5 + 8 \u00b7 9 + 3 \u00b7 6 + 6 \u00b7 8 + 7 \u00b7 8 + 6 \u00b7 6 = 235 .",
    "topics": [
      "brute force",
      "dp",
      "implementation",
      "math",
      "two pointers"
    ],
    "id": "1519D"
  },
  {
    "title": "The Cake Is a Lie",
    "url": "https://codeforces.com/problemset/problem/1519/B",
    "history": "There is a n \u00d7 m grid. You are standing at cell ( 1, 1) and your goal is to finish at cell ( n, m) . You can move to the neighboring cells to the right or down. In other words, suppose you are standing at cell ( x, y) . You can: move right to the cell ( x, y + 1) \u2014 it costs x burles; move down to the cell ( x + 1, y) \u2014 it costs y burles. Can you reach cell ( n, m) spending exactly k burles?",
    "input": "The first line contains the single integer t ( 1 \u2264 t \u2264 100 ) \u2014 the number of test cases. The first and only line of each test case contains three integers n , m , and k ( 1 \u2264 n, m \u2264 100 ; 0 \u2264 k \u2264 10^ 4 ) \u2014 the sizes of grid and the exact amount of money you need to spend.",
    "output": "For each test case, if you can reach cell ( n, m) spending exactly k burles, print YES. Otherwise, print NO. You may print every letter in any case you want ( so, for example, the strings yEs, yes, Yes and YES are all recognized as positive answer) .",
    "note": "In the first test case, you are already in the final cell, so you spend 0 burles. In the second, third and fourth test cases, there are two paths from ( 1, 1) to ( 2, 2) : ( 1, 1) \u2192 ( 1, 2) \u2192 ( 2, 2) or ( 1, 1) \u2192 ( 2, 1) \u2192 ( 2, 2) . Both costs 1 + 2 = 3 burles, so it' s the only amount of money you can spend. In the fifth test case, there is the only way from ( 1, 1) to ( 1, 4) and it costs 1 + 1 + 1 = 3 burles.",
    "topics": [
      "dp",
      "math"
    ],
    "id": "1519B"
  },
  {
    "title": "Red and Blue Beans",
    "url": "https://codeforces.com/problemset/problem/1519/A",
    "history": "You have r red and b blue beans. You' d like to distribute them among several ( maybe, one) packets in such a way that each packet: has at least one red bean ( or the number of red beans r_ i \u2265 1 ) ; has at least one blue bean ( or the number of blue beans b_ i \u2265 1 ) ; the number of red and blue beans should differ in no more than d ( or | r_ i - b_ i| \u2264 d ) Can you distribute all beans?",
    "input": "The first line contains the single integer t ( 1 \u2264 t \u2264 1000 ) \u2014 the number of test cases. The first and only line of each test case contains three integers r , b , and d ( 1 \u2264 r, b \u2264 10^ 9 ; 0 \u2264 d \u2264 10^ 9 ) \u2014 the number of red and blue beans and the maximum absolute difference in each packet.",
    "output": "For each test case, if you can distribute all beans, print YES. Otherwise, print NO. You may print every letter in any case you want ( so, for example, the strings yEs, yes, Yes and YES are all recognized as positive answer) .",
    "note": "In the first test case, you can form one packet with 1 red and 1 blue bean. The absolute difference | 1 - 1| = 0 \u2264 d . In the second test case, you can form two packets: 1 red and 4 blue beans in the first packet and 1 red and 3 blue beans in the second one. In the third test case, since b = 1 , you can form only one packet with 6 red and 1 blue beans. The absolute difference | 6 - 1| = 5 > d . In the fourth test case, since d = 0 so each packet should contain the same number of red and blue beans, but r = \u0338 b .",
    "topics": [
      "math"
    ],
    "id": "1519A"
  },
  {
    "title": "Sum of 2050",
    "url": "https://codeforces.com/problemset/problem/1517/A",
    "history": "A number is called 2050- number if it is 2050 , 20500 , . . . , ( 2050 \u00b7 10^ k for integer k \u2265 0 ) . Given a number n , you are asked to represent n as the sum of some ( not necessarily distinct) 2050- numbers. Compute the minimum number of 2050- numbers required for that.",
    "input": "The first line contains a single integer T ( 1\u2264 T\u2264 1 000 ) denoting the number of test cases. The only line of each test case contains a single integer n ( 1\u2264 n\u2264 10^ 18 ) denoting the number to be represented.",
    "output": "For each test case, output the minimum number of 2050- numbers in one line. If n cannot be represented as the sum of 2050- numbers, output - 1 instead.",
    "note": "In the third case, 4100 = 2050 + 2050 . In the fifth case, 22550 = 20500 + 2050 .",
    "topics": [
      "greedy",
      "math"
    ],
    "id": "1517A"
  },
  {
    "title": "Baby Ehab Plays with Permutations",
    "url": "https://codeforces.com/problemset/problem/1516/E",
    "history": "This time around, Baby Ehab will play with permutations. He has n cubes arranged in a row, with numbers from 1 to n written on them. He' ll make exactly j operations. In each operation, he' ll pick up 2 cubes and switch their positions. He' s wondering: how many different sequences of cubes can I have at the end? Since Baby Ehab is a turbulent person, he doesn' t know how many operations he' ll make, so he wants the answer for every possible j between 1 and k .",
    "input": "The only line contains 2 integers n and k ( 2 \u2264 n \u2264 10^ 9 , 1 \u2264 k \u2264 200 ) \u2014 the number of cubes Baby Ehab has, and the parameter k from the statement.",
    "output": "Print k space- separated integers. The i - th of them is the number of possible sequences you can end up with if you do exactly i operations. Since this number can be very large, print the remainder when it' s divided by 10^ 9+ 7 .",
    "note": "In the second example, there are 3 sequences he can get after 1 swap, because there are 3 pairs of cubes he can swap. Also, there are 3 sequences he can get after 2 swaps: [ 1, 2, 3] , [ 3, 1, 2] , [ 2, 3, 1] .",
    "topics": [
      "combinatorics",
      "dp",
      "math"
    ],
    "id": "1516E"
  },
  {
    "title": "Baby Ehab Partitions Again",
    "url": "https://codeforces.com/problemset/problem/1516/C",
    "history": "Baby Ehab was toying around with arrays. He has an array a of length n . He defines an array to be good if there' s no way to partition it into 2 subsequences such that the sum of the elements in the first is equal to the sum of the elements in the second. Now he wants to remove the minimum number of elements in a so that it becomes a good array. Can you help him? A sequence b is a subsequence of an array a if b can be obtained from a by deleting some ( possibly zero or all) elements. A partitioning of an array is a way to divide it into 2 subsequences such that every element belongs to exactly one subsequence, so you must use all the elements, and you can' t share any elements.",
    "input": "The first line contains an integer n ( 2 \u2264 n \u2264 100 ) \u2014 the length of the array a . The second line contains n integers a_ 1 , a_ 2 , . . . , a_ n ( 1 \u2264 a_ i \u2264 2000 ) \u2014 the elements of the array a .",
    "output": "The first line should contain the minimum number of elements you need to remove. The second line should contain the indices of the elements you' re removing, separated by spaces. We can show that an answer always exists. If there are multiple solutions, you can print any.",
    "note": "In the first example, you can partition the array into [ 6, 9] and [ 3, 12] , so you must remove at least 1 element. Removing 3 is sufficient. In the second example, the array is already good, so you don' t need to remove any elements.",
    "topics": [
      "bitmasks",
      "constructive algorithms",
      "dp",
      "math"
    ],
    "id": "1516C"
  },
  {
    "title": "Phoenix and Odometers",
    "url": "https://codeforces.com/problemset/problem/1515/G",
    "history": "In Fire City, there are n intersections and m one- way roads. The i - th road goes from intersection a_ i to b_ i and has length l_ i miles. There are q cars that may only drive along those roads. The i - th car starts at intersection v_ i and has an odometer that begins at s_ i , increments for each mile driven, and resets to 0 whenever it reaches t_ i . Phoenix has been tasked to drive cars along some roads ( possibly none) and return them to their initial intersection with the odometer showing 0 . For each car, please find if this is possible. A car may visit the same road or intersection an arbitrary number of times. The odometers don' t stop counting the distance after resetting, so odometers may also be reset an arbitrary number of times.",
    "input": "The first line of the input contains two integers n and m ( 2 \u2264 n \u2264 2 \u00b7 10^ 5 ; 1 \u2264 m \u2264 2 \u00b7 10^ 5 ) \u2014 the number of intersections and the number of roads, respectively. Each of the next m lines contain three integers a_ i , b_ i , and l_ i ( 1 \u2264 a_ i, b_ i \u2264 n ; a_ i = \u0338 b_ i ; 1 \u2264 l_ i \u2264 10^ 9 ) \u2014 the information about the i - th road. The graph is not necessarily connected. It is guaranteed that between any two intersections, there is at most one road for each direction. The next line contains an integer q ( 1 \u2264 q \u2264 2 \u00b7 10^ 5 ) \u2014 the number of cars. Each of the next q lines contains three integers v_ i , s_ i , and t_ i ( 1 \u2264 v_ i \u2264 n ; 0 \u2264 s_ i < t_ i \u2264 10^ 9 ) \u2014 the initial intersection of the i - th car, the initial number on the i - th odometer, and the number at which the i - th odometer resets, respectively.",
    "output": "Print q answers. If the i - th car' s odometer may be reset to 0 by driving through some roads ( possibly none) and returning to its starting intersection v_ i , print YES. Otherwise, print NO.",
    "note": "The illustration for the first example is below: In the first query, Phoenix can drive through the following cities: 1 \u2192 2 \u2192 3 \u2192 1 \u2192 2 \u2192 3 \u2192 1 . The odometer will have reset 3 times, but it displays 0 at the end. In the second query, we can show that there is no way to reset the odometer to 0 and return to intersection 1 . In the third query, the odometer already displays 0 , so there is no need to drive through any roads. Below is the illustration for the second example:",
    "topics": [
      "dfs and similar",
      "graphs",
      "math",
      "number theory"
    ],
    "id": "1515G"
  },
  {
    "title": "Phoenix and Computers",
    "url": "https://codeforces.com/problemset/problem/1515/E",
    "history": "There are n computers in a row, all originally off, and Phoenix wants to turn all of them on. He will manually turn on computers one at a time. At any point, if computer i- 1 and computer i+ 1 are both on, computer i ( 2 \u2264 i \u2264 n- 1) will turn on automatically if it is not already on. Note that Phoenix cannot manually turn on a computer that already turned on automatically. If we only consider the sequence of computers that Phoenix turns on manually, how many ways can he turn on all the computers? Two sequences are distinct if either the set of computers turned on manually is distinct, or the order of computers turned on manually is distinct. Since this number may be large, please print it modulo M .",
    "input": "The first line contains two integers n and M ( 3 \u2264 n \u2264 400 ; 10^ 8 \u2264 M \u2264 10^ 9 ) \u2014 the number of computers and the modulo. It is guaranteed that M is prime.",
    "output": "Print one integer \u2014 the number of ways to turn on the computers modulo M .",
    "note": "In the first example, these are the 6 orders in which Phoenix can turn on all computers: [ 1, 3] . Turn on computer 1 , then 3 . Note that computer 2 turns on automatically after computer 3 is turned on manually, but we only consider the sequence of computers that are turned on manually. [ 3, 1] . Turn on computer 3 , then 1 . [ 1, 2, 3] . Turn on computer 1 , 2 , then 3 . [ 2, 1, 3] [ 2, 3, 1] [ 3, 2, 1]",
    "topics": [
      "combinatorics",
      "dp",
      "math"
    ],
    "id": "1515E"
  },
  {
    "title": "Phoenix and Puzzle",
    "url": "https://codeforces.com/problemset/problem/1515/B",
    "history": "Phoenix is playing with a new puzzle, which consists of n identical puzzle pieces. Each puzzle piece is a right isosceles triangle as shown below. A puzzle piece The goal of the puzzle is to create a square using the n pieces. He is allowed to rotate and move the pieces around, but none of them can overlap and all n pieces must be used ( of course, the square shouldn' t contain any holes as well) . Can he do it?",
    "input": "The input consists of multiple test cases. The first line contains an integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. The first line of each test case contains an integer n ( 1 \u2264 n \u2264 10^ 9 ) \u2014 the number of puzzle pieces.",
    "output": "For each test case, if Phoenix can create a square with the n puzzle pieces, print YES. Otherwise, print NO.",
    "note": "For n= 2 , Phoenix can create a square like this: For n= 4 , Phoenix can create a square like this: For n= 6 , it is impossible for Phoenix to create a square.",
    "topics": [
      "brute force",
      "geometry",
      "math",
      "number theory"
    ],
    "id": "1515B"
  },
  {
    "title": "Phoenix and Gold",
    "url": "https://codeforces.com/problemset/problem/1515/A",
    "history": "Phoenix has collected n pieces of gold, and he wants to weigh them together so he can feel rich. The i - th piece of gold has weight w_ i . All weights are distinct. He will put his n pieces of gold on a weight scale, one piece at a time. The scale has an unusual defect: if the total weight on it is exactly x , it will explode. Can he put all n gold pieces onto the scale in some order, without the scale exploding during the process? If so, help him find some possible order. Formally, rearrange the array w so that for each i ( 1 \u2264 i \u2264 n) , \u2211_ j = 1^ iw_ j x .",
    "input": "The input consists of multiple test cases. The first line contains an integer t ( 1 \u2264 t \u2264 1000 ) \u2014 the number of test cases. The first line of each test case contains two integers n and x ( 1 \u2264 n \u2264 100 ; 1 \u2264 x \u2264 10^ 4 ) \u2014 the number of gold pieces that Phoenix has and the weight to avoid, respectively. The second line of each test case contains n space- separated integers ( 1 \u2264 w_ i \u2264 100) \u2014 the weights of the gold pieces. It is guaranteed that the weights are pairwise distinct.",
    "output": "For each test case, if Phoenix cannot place all n pieces without the scale exploding, print NO. Otherwise, print YES followed by the rearranged array w . If there are multiple solutions, print any.",
    "note": "In the first test case, Phoenix puts the gold piece with weight 3 on the scale first, then the piece with weight 2 , and finally the piece with weight 1 . The total weight on the scale is 3 , then 5 , then 6 . The scale does not explode because the total weight on the scale is never 2 . In the second test case, the total weight on the scale is 8 , 9 , 11 , 14 , then 18 . It is never 3 . In the third test case, Phoenix must put the gold piece with weight 5 on the scale, and the scale will always explode.",
    "topics": [
      "constructive algorithms",
      "greedy",
      "math"
    ],
    "id": "1515A"
  },
  {
    "title": "AND 0, Sum Big",
    "url": "https://codeforces.com/problemset/problem/1514/B",
    "history": "Baby Badawy' s first words were \" AND 0 SUM BIG\" , so he decided to solve the following problem. Given two integers n and k , count the number of arrays of length n such that: all its elements are integers between 0 and 2^ k- 1 ( inclusive) ; the bitwise AND of all its elements is 0 ; the sum of its elements is as large as possible. Since the answer can be very large, print its remainder when divided by 10^ 9+ 7 .",
    "input": "The first line contains an integer t ( 1 \u2264 t \u2264 10 ) \u2014 the number of test cases you need to solve. Each test case consists of a line containing two integers n and k ( 1 \u2264 n \u2264 10^ 5 , 1 \u2264 k \u2264 20 ) .",
    "output": "For each test case, print the number of arrays satisfying the conditions. Since the answer can be very large, print its remainder when divided by 10^ 9+ 7 .",
    "note": "In the first example, the 4 arrays are: [ 3, 0] , [ 0, 3] , [ 1, 2] , [ 2, 1] .",
    "topics": [
      "bitmasks",
      "combinatorics",
      "math"
    ],
    "id": "1514B"
  },
  {
    "title": "Perfectly Imperfect Array",
    "url": "https://codeforces.com/problemset/problem/1514/A",
    "history": "Given an array a of length n , tell us whether it has a non- empty subsequence such that the product of its elements is not a perfect square. A sequence b is a subsequence of an array a if b can be obtained from a by deleting some ( possibly zero) elements.",
    "input": "The first line contains an integer t ( 1 \u2264 t \u2264 100 ) \u2014 the number of test cases. The description of the test cases follows. The first line of each test case contains an integer n ( 1 \u2264 n \u2264 100 ) \u2014 the length of the array a . The second line of each test case contains n integers a_ 1 , a_ 2 , . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 4 ) \u2014 the elements of the array a .",
    "output": "If there' s a subsequence of a whose product isn' t a perfect square, print \" YES\" . Otherwise, print \" NO\" .",
    "note": "In the first example, the product of the whole array ( 20 ) isn' t a perfect square. In the second example, all subsequences have a perfect square product.",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "1514A"
  },
  {
    "title": "Cost Equilibrium",
    "url": "https://codeforces.com/problemset/problem/1513/E",
    "history": "An array is called beautiful if all the elements in the array are equal. You can transform an array using the following steps any number of times: Choose two indices i and j ( 1 \u2264 i, j \u2264 n ) , and an integer x ( 1 \u2264 x \u2264 a_ i ) . Let i be the source index and j be the sink index. Decrease the i - th element by x , and increase the j - th element by x . The resulting values at i - th and j - th index are a_ i- x and a_ j+ x respectively. The cost of this operation is x \u00b7 | j- i| . Now the i - th index can no longer be the sink and the j - th index can no longer be the source. The total cost of a transformation is the sum of all the costs in step 3 . For example, array [ 0, 2, 3, 3] can be transformed into a beautiful array [ 2, 2, 2, 2] with total cost 1 \u00b7 | 1- 3| + 1 \u00b7 | 1- 4| = 5 . An array is called balanced, if it can be transformed into a beautiful array, and the cost of such transformation is uniquely defined. In other words, the minimum cost of transformation into a beautiful array equals the maximum cost. You are given an array a_ 1, a_ 2, . . . , a_ n of length n , consisting of non- negative integers. Your task is to find the number of balanced arrays which are permutations of the given array. Two arrays are considered different, if elements at some position differ. Since the answer can be large, output it modulo 10^ 9 + 7 .",
    "input": "The first line contains a single integer n ( 1 \u2264 n \u2264 10^ 5 ) \u2014 the size of the array. The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 0 \u2264 a_ i \u2264 10^ 9 ) .",
    "output": "Output a single integer \u2014 the number of balanced permutations modulo 10^ 9+ 7 .",
    "note": "In the first example, [ 1, 2, 3] is a valid permutation as we can consider the index with value 3 as the source and index with value 1 as the sink. Thus, after conversion we get a beautiful array [ 2, 2, 2] , and the total cost would be 2 . We can show that this is the only transformation of this array that leads to a beautiful array. Similarly, we can check for other permutations too. In the second example, [ 0, 0, 4, 4] and [ 4, 4, 0, 0] are balanced permutations. In the third example, all permutations are balanced.",
    "topics": [
      "combinatorics",
      "constructive algorithms",
      "math",
      "sortings"
    ],
    "id": "1513E"
  },
  {
    "title": "AND Sequences",
    "url": "https://codeforces.com/problemset/problem/1513/B",
    "history": "A sequence of n non- negative integers ( n \u2265 2 ) a_ 1, a_ 2, . . . , a_ n is called good if for all i from 1 to n- 1 the following condition holds true: a_ 1 & a_ 2 & . . . & a_ i = a_ i+ 1 & a_ i+ 2 & . . . & a_ n, where & denotes the bitwise AND operation. You are given an array a of size n ( n \u2265 2 ) . Find the number of permutations p of numbers ranging from 1 to n , for which the sequence a_ p_ 1 , a_ p_ 2 , . . . , a_ p_ n is good. Since this number can be large, output it modulo 10^ 9+ 7 .",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 4 ) , denoting the number of test cases. The first line of each test case contains a single integer n ( 2 \u2264 n \u2264 2 \u00b7 10^ 5 ) \u2014 the size of the array. The second line of each test case contains n integers a_ 1, a_ 2, . . . , a_ n ( 0 \u2264 a_ i \u2264 10^ 9 ) \u2014 the elements of the array. It is guaranteed that the sum of n over all test cases doesn' t exceed 2 \u00b7 10^ 5 .",
    "output": "Output t lines, where the i - th line contains the number of good permutations in the i - th test case modulo 10^ 9 + 7 .",
    "note": "In the first test case, since all the numbers are equal, whatever permutation we take, the sequence is good. There are a total of 6 permutations possible with numbers from 1 to 3 : [ 1, 2, 3] , [ 1, 3, 2] , [ 2, 1, 3] , [ 2, 3, 1] , [ 3, 1, 2] , [ 3, 2, 1] . In the second test case, it can be proved that no permutation exists for which the sequence is good. In the third test case, there are a total of 36 permutations for which the sequence is good. One of them is the permutation [ 1, 5, 4, 2, 3] which results in the sequence s= [ 0, 0, 3, 2, 0] . This is a good sequence because s_ 1 = s_ 2 & s_ 3 & s_ 4 & s_ 5 = 0 , s_ 1 & s_ 2 = s_ 3 & s_ 4 & s_ 5 = 0 , s_ 1 & s_ 2 & s_ 3 = s_ 4 & s_ 5 = 0 , s_ 1 & s_ 2 & s_ 3 & s_ 4 = s_ 5 = 0 .",
    "topics": [
      "bitmasks",
      "combinatorics",
      "constructive algorithms",
      "math"
    ],
    "id": "1513B"
  },
  {
    "title": "Short Task",
    "url": "https://codeforces.com/problemset/problem/1512/G",
    "history": "Let us denote by d( n) the sum of all divisors of the number n , i. e. d( n) = \u2211_ k | n k . For example, d( 1) = 1 , d( 4) = 1+ 2+ 4= 7 , d( 6) = 1+ 2+ 3+ 6= 12 . For a given number c , find the minimum n such that d( n) = c .",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 10^ 4 ) . Then t test cases follow. Each test case is characterized by one integer c ( 1 \u2264 c \u2264 10^ 7 ) .",
    "output": "For each test case, output: \" - 1\" if there is no such n that d( n) = c ; n , otherwise.",
    "note": "",
    "topics": [
      "brute force",
      "dp",
      "math",
      "number theory"
    ],
    "id": "1512G"
  },
  {
    "title": "Permutation by Sum",
    "url": "https://codeforces.com/problemset/problem/1512/E",
    "history": "A permutation is a sequence of n integers from 1 to n , in which all the numbers occur exactly once. For example, [ 1] , [ 3, 5, 2, 1, 4] , [ 1, 3, 2] are permutations, and [ 2, 3, 2] , [ 4, 3, 1] , [ 0] are not. Polycarp was given four integers n , l , r ( 1 \u2264 l \u2264 r \u2264 n) and s ( 1 \u2264 s \u2264n ( n+ 1) / 2 ) and asked to find a permutation p of numbers from 1 to n that satisfies the following condition: s = p_ l + p_ l+ 1 + . . . + p_ r . For example, for n= 5 , l= 3 , r= 5 , and s= 8 , the following permutations are suitable ( not all options are listed) : p = [ 3, 4, 5, 2, 1] ; p = [ 5, 2, 4, 3, 1] ; p = [ 5, 2, 1, 3, 4] . But, for example, there is no permutation suitable for the condition above for n= 4 , l= 1 , r= 1 , and s= 5 . Help Polycarp, for the given n , l , r , and s , find a permutation of numbers from 1 to n that fits the condition above. If there are several suitable permutations, print any of them.",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 500 ) . Then t test cases follow. Each test case consist of one line with four integers n ( 1 \u2264 n \u2264 500 ) , l ( 1 \u2264 l \u2264 n ) , r ( l \u2264 r \u2264 n ) , s ( 1 \u2264 s \u2264n ( n+ 1) / 2 ) . It is guaranteed that the sum of n for all input data sets does not exceed 500 .",
    "output": "For each test case, output on a separate line: n integers \u2014 a permutation of length n that fits the condition above if such a permutation exists; - 1, otherwise. If there are several suitable permutations, print any of them.",
    "note": "",
    "topics": [
      "brute force",
      "greedy",
      "math"
    ],
    "id": "1512E"
  },
  {
    "title": "Colorings and Dominoes",
    "url": "https://codeforces.com/problemset/problem/1511/E",
    "history": "You have a large rectangular board which is divided into n \u00d7 m cells ( the board has n rows and m columns) . Each cell is either white or black. You paint each white cell either red or blue. Obviously, the number of different ways to paint them is 2^ w , where w is the number of white cells. After painting the white cells of the board, you want to place the maximum number of dominoes on it, according to the following rules: each domino covers two adjacent cells; each cell is covered by at most one domino; if a domino is placed horizontally ( it covers two adjacent cells in one of the rows) , it should cover only red cells; if a domino is placed vertically ( it covers two adjacent cells in one of the columns) , it should cover only blue cells. Let the value of the board be the maximum number of dominoes you can place. Calculate the sum of values of the board over all 2^ w possible ways to paint it. Since it can be huge, print it modulo 998 244 353 .",
    "input": "The first line contains two integers n and m ( 1 \u2264 n, m \u2264 3 \u00b7 10^ 5 ; nm \u2264 3 \u00b7 10^ 5 ) \u2014 the number of rows and columns, respectively. Then n lines follow, each line contains a string of m characters. The j - th character in the i - th string is * if the j - th cell in the i - th row is black; otherwise, that character is o.",
    "output": "Print one integer \u2014 the sum of values of the board over all 2^ w possible ways to paint it, taken modulo 998 244 353 .",
    "note": "",
    "topics": [
      "combinatorics",
      "dp",
      "greedy",
      "math"
    ],
    "id": "1511E"
  },
  {
    "title": "GCD Length",
    "url": "https://codeforces.com/problemset/problem/1511/B",
    "history": "You are given three integers a , b and c . Find two positive integers x and y ( x > 0 , y > 0 ) such that: the decimal representation of x without leading zeroes consists of a digits; the decimal representation of y without leading zeroes consists of b digits; the decimal representation of gcd( x, y) without leading zeroes consists of c digits. gcd( x, y) denotes the greatest common divisor ( GCD) of integers x and y . Output x and y . If there are multiple answers, output any of them.",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 285 ) \u2014 the number of testcases. Each of the next t lines contains three integers a , b and c ( 1 \u2264 a, b \u2264 9 , 1 \u2264 c \u2264 min( a, b) ) \u2014 the required lengths of the numbers. It can be shown that the answer exists for all testcases under the given constraints. Additional constraint on the input: all testcases are different.",
    "output": "For each testcase print two positive integers \u2014 x and y ( x > 0 , y > 0 ) such that the decimal representation of x without leading zeroes consists of a digits; the decimal representation of y without leading zeroes consists of b digits; the decimal representation of gcd( x, y) without leading zeroes consists of c digits.",
    "note": "In the example: gcd( 11, 492) = 1 gcd( 13, 26) = 13 gcd( 140133, 160776) = 21 gcd( 1, 1) = 1",
    "topics": [
      "constructive algorithms",
      "math",
      "number theory"
    ],
    "id": "1511B"
  },
  {
    "title": "Japanese Game",
    "url": "https://codeforces.com/problemset/problem/1510/J",
    "history": "Joseph really likes the culture of Japan. Last year he learned Japanese traditional clothes and visual arts and now he is trying to find out the secret of the Japanese game called Nonogram. In the one- dimensional version of the game, there is a row of n empty cells, some of which are to be filled with a pen. There is a description of a solution called a profile \u2014 a sequence of positive integers denoting the lengths of consecutive sets of filled cells. For example, the profile of [ 4, 3, 1] means that there are sets of four, three, and one filled cell, in that order, with at least one empty cell between successive sets. A suitable solution for n = 12 and p = [ 4, 3, 1] . A wrong solution: the first four filled cells should be consecutive. A wrong solution: there should be at least one empty cell before the last filled cell. Joseph found out that for some numbers n and profiles p there are lots of ways to fill the cells to satisfy the profile. Now he is in the process of solving a nonogram consisting of n cells and a profile p . He has already created a mask of p \u2014 he has filled all the cells that must be filled in every solution of the nonogram. The mask for n = 12 and p = [ 4, 3, 1] : all the filled cells above are filled in every solution. After a break, he lost the source profile p . He only has n and the mask m . Help Joseph find any profile p' with the mask m or say that there is no such profile and Joseph has made a mistake.",
    "input": "The only line contains a string m \u2014 the mask of the source profile p . The length of m is n ( 1 \u2264 n \u2264 100 000 ) . The string m consists of symbols # and _ \u2014 denoting filled and empty cells respectively.",
    "output": "If there is no profile with the mask m , output the number - 1 . Otherwise, on the first line, output an integer k \u2014 the number of integers in the profile p' . On the second line, output k integers of the profile p' .",
    "note": "",
    "topics": [
      "constructive algorithms",
      "math"
    ],
    "id": "1510J"
  },
  {
    "title": "Is It Rated?",
    "url": "https://codeforces.com/problemset/problem/1510/I",
    "history": "The popular improv website Interpretation Impetus hosts regular improv contests and maintains a rating of the best performers. However, since improv can often go horribly wrong, the website is notorious for declaring improv contests unrated. It now holds a wager before each improv contest where the participants try to predict whether it will be rated or unrated, and they are now more popular than the improv itself. Izzy and n other participants take part in each wager. First, they each make their prediction, expressed as 1 ( \" rated\" ) or 0 ( \" unrated\" ) . Izzy always goes last, so she knows the predictions of the other participants when making her own. Then, the actual competition takes place and it is declared either rated or unrated. You need to write a program that will interactively play as Izzy. There will be m wagers held in 2021, and Izzy' s goal is to have at most 1. 3\u00b7 b + 100 wrong predictions after all those wagers, where b is the smallest number of wrong predictions that any other wager participant will have after all those wagers. The number b is not known in advance. Izzy also knows nothing about the other participants \u2014 they might somehow always guess correctly, or their predictions might be correlated. Izzy' s predictions, though, do not affect the predictions of the other participants and the decision on the contest being rated or not \u2014 in other words, in each test case, your program always receives the same inputs, no matter what it outputs. InteractionFirst, a solution must read two integers n ( 1 \u2264 n \u2264 1000 ) and m ( 1 \u2264 m \u2264 10 000 ) . Then, the solution must process m wagers. For each of them, the solution must first read a string consisting of n 0s and 1s, in which the i - th character denotes the guess of the i - th participant. Then, the solution must print Izzy' s guess as 0 or 1. Don' t forget to flush the output after printing it! Then, the solution must read the actual outcome, also as 0 or 1, and then proceed to the next wager, if this wasn' t the last one. Your solution will be considered correct if it makes at most 1. 3\u00b7 b + 100 mistakes, where b is the smallest number of mistakes made by any other participant. Note that if a solution outputs anything except 0 or 1 for a wager, it will be considered incorrect even if it made no other mistakes. There are 200 test cases in this problem.",
    "input": "",
    "output": "",
    "note": "In the example, the participants made 1, 2, and 3 mistakes respectively, therefore b= 1 ( the smallest of these numbers) . Izzy made 3 mistakes, which were not more than 1. 3\u00b7 b + 100= 101. 3 , so these outputs are good enough to pass this test case ( as are any other valid outputs) .",
    "topics": [
      "greedy",
      "interactive",
      "math",
      "probabilities"
    ],
    "id": "1510I"
  },
  {
    "title": "Digits",
    "url": "https://codeforces.com/problemset/problem/1510/D",
    "history": "Diana loves playing with numbers. She' s got n cards with positive integer numbers a_ i written on them. She spends her free time multiplying the numbers on the cards. She picks a non- empty subset of the cards and multiplies all the numbers a_ i written on them. Diana is happy when the product of the numbers ends with her favorite digit d . Now she is curious what cards she should pick so that the product of the numbers on them is the largest possible and the last decimal digit of the product is d . Please, help her.",
    "input": "The first line contains the integers n and d ( 1\u2264 n\u2264 10^ 5 , 0\u2264 d\u2264 9 ) . The second line contains n integers a_ i ( 1\u2264 a_ i\u2264 1000 ) .",
    "output": "On the first line, print the number of chosen cards k ( 1\u2264 k\u2264 n ) . On the next line, print the numbers written on the chosen cards in any order. If it is impossible to choose a subset of cards with the product that ends with the digit d , print the single line with - 1 .",
    "note": "In the first example, 1 \u00d7 2 \u00d7 4 \u00d7 11 \u00d7 13 = 1144 , which is the largest product that ends with the digit 4. The same set of cards without the number 1 is also a valid answer, as well as a set of 8, 11, and 13 with or without 1 that also has the product of 1144. In the second example, all the numbers on the cards are even and their product cannot end with an odd digit 1. In the third example, the only possible products are 1, 3, 5, 9, 15, and 45, none of which end with the digit 7. In the fourth example, 9 \u00d7 11 \u00d7 17 = 1683 , which ends with the digit 3. In the fifth example, 2 \u00d7 2 \u00d7 2 \u00d7 2 = 16 , which ends with the digit 6.",
    "topics": [
      "dp",
      "math",
      "number theory"
    ],
    "id": "1510D"
  },
  {
    "title": "Triangular Paths",
    "url": "https://codeforces.com/problemset/problem/1506/F",
    "history": "Consider an infinite triangle made up of layers. Let' s number the layers, starting from one, from the top of the triangle ( from top to bottom) . The k - th layer of the triangle contains k points, numbered from left to right. Each point of an infinite triangle is described by a pair of numbers ( r, c) ( 1 \u2264 c \u2264 r ) , where r is the number of the layer, and c is the number of the point in the layer. From each point ( r, c) there are two directed edges to the points ( r+ 1, c) and ( r+ 1, c+ 1) , but only one of the edges is activated. If r + c is even, then the edge to the point ( r+ 1, c) is activated, otherwise the edge to the point ( r+ 1, c+ 1) is activated. Look at the picture for a better understanding. Activated edges are colored in black. Non- activated edges are colored in gray. From the point ( r_ 1, c_ 1) it is possible to reach the point ( r_ 2, c_ 2) , if there is a path between them only from activated edges. For example, in the picture above, there is a path from ( 1, 1) to ( 3, 2) , but there is no path from ( 2, 1) to ( 1, 1) . Initially, you are at the point ( 1, 1) . For each turn, you can: Replace activated edge for point ( r, c) . That is if the edge to the point ( r+ 1, c) is activated, then instead of it, the edge to the point ( r+ 1, c+ 1) becomes activated, otherwise if the edge to the point ( r+ 1, c+ 1) , then instead if it, the edge to the point ( r+ 1, c) becomes activated. This action increases the cost of the path by 1 ; Move from the current point to another by following the activated edge. This action does not increase the cost of the path. You are given a sequence of n points of an infinite triangle ( r_ 1, c_ 1) , ( r_ 2, c_ 2) , . . . , ( r_ n, c_ n) . Find the minimum cost path from ( 1, 1) , passing through all n points in arbitrary order.",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 10^ 4 ) is the number of test cases. Then t test cases follow. Each test case begins with a line containing one integer n ( 1 \u2264 n \u2264 2 \u00b7 10^ 5 ) is the number of points to visit. The second line contains n numbers r_ 1, r_ 2, . . . , r_ n ( 1 \u2264 r_ i \u2264 10^ 9 ) , where r_ i is the number of the layer in which i - th point is located. The third line contains n numbers c_ 1, c_ 2, . . . , c_ n ( 1 \u2264 c_ i \u2264 r_ i ) , where c_ i is the number of the i - th point in the r_ i layer. It is guaranteed that all n points are distinct. It is guaranteed that there is always at least one way to traverse all n points. It is guaranteed that the sum of n over all test cases does not exceed 2 \u00b7 10^ 5 .",
    "output": "For each test case, output the minimum cost of a path passing through all points in the corresponding test case.",
    "note": "",
    "topics": [
      "constructive algorithms",
      "graphs",
      "math",
      "shortest paths",
      "sortings"
    ],
    "id": "1506F"
  },
  {
    "title": "Strange Table",
    "url": "https://codeforces.com/problemset/problem/1506/A",
    "history": "Polycarp found a rectangular table consisting of n rows and m columns. He noticed that each cell of the table has its number, obtained by the following algorithm \" by columns\" : cells are numbered starting from one; cells are numbered from left to right by columns, and inside each column from top to bottom; number of each cell is an integer one greater than in the previous cell. For example, if n = 3 and m = 5 , the table will be numbered as follows: 1 4 7 10 13 2 5 8 11 14 3 6 9 12 15 However, Polycarp considers such numbering inconvenient. He likes the numbering \" by rows\" : cells are numbered starting from one; cells are numbered from top to bottom by rows, and inside each row from left to right; number of each cell is an integer one greater than the number of the previous cell. For example, if n = 3 and m = 5 , then Polycarp likes the following table numbering: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 Polycarp doesn' t have much time, so he asks you to find out what would be the cell number in the numbering \" by rows\" , if in the numbering \" by columns\" the cell has the number x ?",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 4 ) . Then t test cases follow. Each test case consists of a single line containing three integers n , m , x ( 1 \u2264 n, m \u2264 10^ 6 , 1 \u2264 x \u2264 n \u00b7 m ) , where n and m are the number of rows and columns in the table, and x is the cell number. Note that the numbers in some test cases do not fit into the 32 - bit integer type, so you must use at least the 64 - bit integer type of your programming language.",
    "output": "For each test case, output the cell number in the numbering \" by rows\" .",
    "note": "",
    "topics": [
      "math"
    ],
    "id": "1506A"
  },
  {
    "title": "Math",
    "url": "https://codeforces.com/problemset/problem/1505/F",
    "history": "* The two images are equivalent, feel free to use either one.",
    "input": "The input contains a single integer a ( - 100 \u2264 a \u2264 100 ) .",
    "output": "Output the result \u2013 an integer number.",
    "note": "",
    "topics": [
      "*special",
      "math"
    ],
    "id": "1505F"
  },
  {
    "title": "Flip the Bits",
    "url": "https://codeforces.com/problemset/problem/1504/B",
    "history": "There is a binary string a of length n . In one operation, you can select any prefix of a with an equal number of 0 and 1 symbols. Then all symbols in the prefix are inverted: each 0 becomes 1 and each 1 becomes 0 . For example, suppose a= 0111010000 . In the first operation, we can select the prefix of length 8 since it has four 0 ' s and four 1 ' s: [ 01110100] 00\u2192 [ 10001011] 00 . In the second operation, we can select the prefix of length 2 since it has one 0 and one 1 : [ 10] 00101100\u2192 [ 01] 00101100 . It is illegal to select the prefix of length 4 for the third operation, because it has three 0 ' s and one 1 . Can you transform the string a into the string b using some finite number of operations ( possibly, none) ?",
    "input": "The first line contains a single integer t ( 1\u2264 t\u2264 10^ 4 ) \u2014 the number of test cases. The first line of each test case contains a single integer n ( 1\u2264 n\u2264 3\u00b7 10^ 5 ) \u2014 the length of the strings a and b . The following two lines contain strings a and b of length n , consisting of symbols 0 and 1 . The sum of n across all test cases does not exceed 3\u00b7 10^ 5 .",
    "output": "For each test case, output \" YES\" if it is possible to transform a into b , or \" NO\" if it is impossible. You can print each letter in any case ( upper or lower) .",
    "note": "The first test case is shown in the statement. In the second test case, we transform a into b by using zero operations. In the third test case, there is no legal operation, so it is impossible to transform a into b . In the fourth test case, here is one such transformation: Select the length 2 prefix to get 100101010101 . Select the length 12 prefix to get 011010101010 . Select the length 8 prefix to get 100101011010 . Select the length 4 prefix to get 011001011010 . Select the length 6 prefix to get 100110011010 . In the fifth test case, the only legal operation is to transform a into 111000 . From there, the only legal operation is to return to the string we started with, so we cannot transform a into b .",
    "topics": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "math"
    ],
    "id": "1504B"
  },
  {
    "title": "2-Coloring",
    "url": "https://codeforces.com/problemset/problem/1503/E",
    "history": "There is a grid with n rows and m columns. Every cell of the grid should be colored either blue or yellow. A coloring of the grid is called stupid if every row has exactly one segment of blue cells and every column has exactly one segment of yellow cells. In other words, every row must have at least one blue cell, and all blue cells in a row must be consecutive. Similarly, every column must have at least one yellow cell, and all yellow cells in a column must be consecutive. An example of a stupid coloring. Examples of clever colorings. The first coloring is missing a blue cell in the second row, and the second coloring has two yellow segments in the second column. How many stupid colorings of the grid are there? Two colorings are considered different if there is some cell that is colored differently.",
    "input": "The only line contains two integers n , m ( 1\u2264 n, m\u2264 2021 ) .",
    "output": "Output a single integer \u2014 the number of stupid colorings modulo 998244353 .",
    "note": "In the first test case, these are the only two stupid 2\u00d7 2 colorings.",
    "topics": [
      "combinatorics",
      "dp",
      "math"
    ],
    "id": "1503E"
  },
  {
    "title": "Two chandeliers",
    "url": "https://codeforces.com/problemset/problem/1500/B",
    "history": "Vasya is a CEO of a big construction company. And as any other big boss he has a spacious, richly furnished office with two crystal chandeliers. To stay motivated Vasya needs the color of light at his office to change every day. That' s why he ordered both chandeliers that can change its color cyclically. For example: red \u2013 brown \u2013 yellow \u2013 red \u2013 brown \u2013 yellow and so on. There are many chandeliers that differs in color set or order of colors. And the person responsible for the light made a critical mistake \u2014 they bought two different chandeliers. Since chandeliers are different, some days they will have the same color, but some days \u2014 different. Of course, it looks poor and only annoys Vasya. As a result, at the k - th time when chandeliers will light with different colors, Vasya will become very angry and, most probably, will fire the person who bought chandeliers. Your task is to calculate the day, when it happens ( counting from the day chandeliers were installed) . You can think that Vasya works every day without weekends and days off.",
    "input": "The first line contains three integers n , m and k ( 1 \u2264 n, m \u2264 500 000 ; 1 \u2264 k \u2264 10^ 12 ) \u2014 the number of colors in the first and the second chandeliers and how many times colors should differ to anger Vasya. The second line contains n different integers a_ i ( 1 \u2264 a_ i \u2264 2 \u00b7max( n, m) ) that describe the first chandelier' s sequence of colors. The third line contains m different integers b_ j ( 1 \u2264 b_ i \u2264 2 \u00b7max( n, m) ) that describe the second chandelier' s sequence of colors. At the i - th day, the first chandelier has a color a_ x , where x = ( ( i - 1) n) + 1) and the second one has a color b_ y , where y = ( ( i - 1) m) + 1) . It' s guaranteed that sequence a differs from sequence b , so there are will be days when colors of chandeliers differs.",
    "output": "Print the single integer \u2014 the index of day when Vasya will become angry.",
    "note": "In the first example, the chandeliers will have different colors at days 1 , 2 , 3 and 5 . That' s why the answer is 5 .",
    "topics": [
      "binary search",
      "brute force",
      "chinese remainder theorem",
      "math",
      "number theory"
    ],
    "id": "1500B"
  },
  {
    "title": "Going Home",
    "url": "https://codeforces.com/problemset/problem/1500/A",
    "history": "It was the third month of remote learning, Nastya got sick of staying at dormitory, so she decided to return to her hometown. In order to make her trip more entertaining, one of Nastya' s friend presented her an integer array a . Several hours after starting her journey home Nastya remembered about the present. To entertain herself she decided to check, are there four different indices x, y, z, w such that a_ x + a_ y = a_ z + a_ w . Her train has already arrived the destination, but she still hasn' t found the answer. Can you help her unravel the mystery?",
    "input": "The first line contains the single integer n ( 4 \u2264 n \u2264 200 000 ) \u2014 the size of the array. The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 2. 5 \u00b7 10^ 6 ) .",
    "output": "Print \" YES\" if there are such four indices, and \" NO\" otherwise. If such indices exist, print these indices x , y , z and w ( 1 \u2264 x, y, z, w \u2264 n ) . If there are multiple answers, print any of them.",
    "note": "In the first example a_ 2 + a_ 3 = 1 + 5 = 2 + 4 = a_ 1 + a_ 6 . Note that there are other answer, for example, 2 3 4 6. In the second example, we can' t choose four indices. The answer 1 2 2 3 is wrong, because indices should be different, despite that a_ 1 + a_ 2 = 1 + 3 = 3 + 1 = a_ 2 + a_ 3",
    "topics": [
      "brute force",
      "hashing",
      "implementation",
      "math"
    ],
    "id": "1500A"
  },
  {
    "title": "Chaotic Merge",
    "url": "https://codeforces.com/problemset/problem/1499/E",
    "history": "You are given two strings x and y , both consist only of lowercase Latin letters. Let | s| be the length of string s . Let' s call a sequence a a merging sequence if it consists of exactly | x| zeros and exactly | y| ones in some order. A merge z is produced from a sequence a by the following rules: if a_ i= 0 , then remove a letter from the beginning of x and append it to the end of z ; if a_ i= 1 , then remove a letter from the beginning of y and append it to the end of z . Two merging sequences a and b are different if there is some position i such that a_ i = \u0338 b_ i . Let' s call a string z chaotic if for all i from 2 to | z| z_ i- 1= \u0338 z_ i . Let s[ l, r] for some 1 \u2264 l \u2264 r \u2264 | s| be a substring of consecutive letters of s , starting from position l and ending at position r inclusive. Let f( l_ 1, r_ 1, l_ 2, r_ 2) be the number of different merging sequences of x[ l_ 1, r_ 1] and y[ l_ 2, r_ 2] that produce chaotic merges. Note that only non- empty substrings of x and y are considered. Calculate \u2211_ 1 \u2264 l_ 1 \u2264 r_ 1 \u2264 | x| 1 \u2264 l_ 2 \u2264 r_ 2 \u2264 | y| f( l_ 1, r_ 1, l_ 2, r_ 2) . Output the answer modulo 998 244 353 .",
    "input": "The first line contains a string x ( 1 \u2264 | x| \u2264 1000 ) . The second line contains a string y ( 1 \u2264 | y| \u2264 1000 ) . Both strings consist only of lowercase Latin letters.",
    "output": "Print a single integer \u2014 the sum of f( l_ 1, r_ 1, l_ 2, r_ 2) over 1 \u2264 l_ 1 \u2264 r_ 1 \u2264 | x| and 1 \u2264 l_ 2 \u2264 r_ 2 \u2264 | y| modulo 998 244 353 .",
    "note": "In the first example there are: 6 pairs of substrings \" a\" and \" b\" , each with valid merging sequences \" 01\" and \" 10\" ; 3 pairs of substrings \" a\" and \" bb\" , each with a valid merging sequence \" 101\" ; 4 pairs of substrings \" aa\" and \" b\" , each with a valid merging sequence \" 010\" ; 2 pairs of substrings \" aa\" and \" bb\" , each with valid merging sequences \" 0101\" and \" 1010\" ; 2 pairs of substrings \" aaa\" and \" b\" , each with no valid merging sequences; 1 pair of substrings \" aaa\" and \" bb\" with a valid merging sequence \" 01010\" ; Thus, the answer is 6 \u00b7 2 + 3 \u00b7 1 + 4 \u00b7 1 + 2 \u00b7 2 + 2 \u00b7 0 + 1 \u00b7 1 = 24 .",
    "topics": [
      "combinatorics",
      "dp",
      "math",
      "strings"
    ],
    "id": "1499E"
  },
  {
    "title": "The Number of Pairs",
    "url": "https://codeforces.com/problemset/problem/1499/D",
    "history": "You are given three positive ( greater than zero) integers c , d and x . You have to find the number of pairs of positive integers ( a, b) such that equality c \u00b7 lcm( a, b) - d \u00b7 gcd( a, b) = x holds. Where lcm( a, b) is the least common multiple of a and b and gcd( a, b) is the greatest common divisor of a and b .",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. Each test case consists of one line containing three integer c , d and x ( 1 \u2264 c, d, x \u2264 10^ 7 ) .",
    "output": "For each test case, print one integer \u2014 the number of pairs ( a, b ) such that the above equality holds.",
    "note": "In the first example, the correct pairs are: ( 1, 4 ) , ( 4, 1 ) , ( 3, 6 ) , ( 6, 3 ) . In the second example, the correct pairs are: ( 1, 2 ) , ( 2, 1 ) , ( 3, 3 ) .",
    "topics": [
      "dp",
      "math",
      "number theory"
    ],
    "id": "1499D"
  },
  {
    "title": "Minimum Grid Path",
    "url": "https://codeforces.com/problemset/problem/1499/C",
    "history": "Let' s say you are standing on the XY - plane at point ( 0, 0) and you want to reach point ( n, n) . You can move only in two directions: to the right, i. e. horizontally and in the direction that increase your x coordinate, or up, i. e. vertically and in the direction that increase your y coordinate. In other words, your path will have the following structure: initially, you choose to go to the right or up; then you go some positive integer distance in the chosen direction ( distances can be chosen independently) ; after that you change your direction ( from right to up, or from up to right) and repeat the process. You don' t like to change your direction too much, so you will make no more than n - 1 direction changes. As a result, your path will be a polygonal chain from ( 0, 0) to ( n, n) , consisting of at most n line segments where each segment has positive integer length and vertical and horizontal segments alternate. Not all paths are equal. You have n integers c_ 1, c_ 2, . . . , c_ n where c_ i is the cost of the i - th segment. Using these costs we can define the cost of the path as the sum of lengths of the segments of this path multiplied by their cost, i. e. if the path consists of k segments ( k \u2264 n ) , then the cost of the path is equal to \u2211_ i= 1^ kc_ i \u00b7 length_ i ( segments are numbered from 1 to k in the order they are in the path) . Find the path of the minimum cost and print its cost.",
    "input": "The first line contains the single integer t ( 1 \u2264 t \u2264 1000 ) \u2014 the number of test cases. The first line of each test case contains the single integer n ( 2 \u2264 n \u2264 10^ 5 ) . The second line of each test case contains n integers c_ 1, c_ 2, . . . , c_ n ( 1 \u2264 c_ i \u2264 10^ 9 ) \u2014 the costs of each segment. It' s guaranteed that the total sum of n doesn' t exceed 10^ 5 .",
    "output": "For each test case, print the minimum possible cost of the path from ( 0, 0) to ( n, n) consisting of at most n alternating segments.",
    "note": "In the first test case, to reach ( 2, 2) you need to make at least one turn, so your path will consist of exactly 2 segments: one horizontal of length 2 and one vertical of length 2 . The cost of the path will be equal to 2 \u00b7 c_ 1 + 2 \u00b7 c_ 2 = 26 + 176 = 202 . In the second test case, one of the optimal paths consists of 3 segments: the first segment of length 1 , the second segment of length 3 and the third segment of length 2 . The cost of the path is 1 \u00b7 2 + 3 \u00b7 3 + 2 \u00b7 1 = 13 . In the third test case, one of the optimal paths consists of 4 segments: the first segment of length 1 , the second one \u2014 1 , the third one \u2014 4 , the fourth one \u2014 4 . The cost of the path is 1 \u00b7 4 + 1 \u00b7 3 + 4 \u00b7 2 + 4 \u00b7 1 = 19 .",
    "topics": [
      "brute force",
      "data structures",
      "greedy",
      "math"
    ],
    "id": "1499C"
  },
  {
    "title": "Domino on Windowsill",
    "url": "https://codeforces.com/problemset/problem/1499/A",
    "history": "You have a board represented as a grid with 2 \u00d7 n cells. The first k_ 1 cells on the first row and first k_ 2 cells on the second row are colored in white. All other cells are colored in black. You have w white dominoes ( 2 \u00d7 1 tiles, both cells are colored in white) and b black dominoes ( 2 \u00d7 1 tiles, both cells are colored in black) . You can place a white domino on the board if both board' s cells are white and not occupied by any other domino. In the same way, you can place a black domino if both cells are black and not occupied by any other domino. Can you place all w + b dominoes on the board if you can place dominoes both horizontally and vertically?",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 3000 ) \u2014 the number of test cases. The first line of each test case contains three integers n , k_ 1 and k_ 2 ( 1 \u2264 n \u2264 1000 ; 0 \u2264 k_ 1, k_ 2 \u2264 n ) . The second line of each test case contains two integers w and b ( 0 \u2264 w, b \u2264 n ) .",
    "output": "For each test case, print YES if it' s possible to place all w + b dominoes on the board and NO, otherwise. You may print every letter in any case you want ( so, for example, the strings yEs, yes, Yes and YES are all recognized as positive answer) .",
    "note": "In the first test case, n = 1 , k_ 1 = 0 and k_ 2 = 1 . It means that 2 \u00d7 1 board has black cell ( 1, 1) and white cell ( 2, 1) . So, you can' t place any white domino, since there is only one white cell. In the second test case, the board of the same size 2 \u00d7 1 , but both cell are white. Since w = 0 and b = 0 , so you can place 0 + 0 = 0 dominoes on the board. In the third test case, board 2 \u00d7 3 , but fully colored in black ( since k_ 1 = k_ 2 = 0 ) , so you can' t place any white domino. In the fourth test case, cells ( 1, 1) , ( 1, 2) , ( 1, 3) , and ( 2, 1) are white and other cells are black. You can place 2 white dominoes at positions ( ( 1, 1) , ( 2, 1) ) and ( ( 1, 2) , ( 1, 3) ) and 2 black dominoes at positions ( ( 1, 4) , ( 2, 4) ) ( ( 2, 2) , ( 2, 3) ) .",
    "topics": [
      "combinatorics",
      "constructive algorithms",
      "math"
    ],
    "id": "1499A"
  },
  {
    "title": "Christmas Game",
    "url": "https://codeforces.com/problemset/problem/1498/F",
    "history": "Alice and Bob are going to celebrate Christmas by playing a game with a tree of presents. The tree has n nodes ( numbered 1 to n , with some node r as its root) . There are a_ i presents are hanging from the i - th node. Before beginning the game, a special integer k is chosen. The game proceeds as follows: Alice begins the game, with moves alternating each turn; in any move, the current player may choose some node ( for example, i ) which has depth at least k . Then, the player picks some positive number of presents hanging from that node, let' s call it m ( 1 \u2264 m \u2264 a_ i) ; the player then places these m presents on the k - th ancestor ( let' s call it j ) of the i - th node ( the k - th ancestor of vertex i is a vertex j such that i is a descendant of j , and the difference between the depth of j and the depth of i is exactly k ) . Now, the number of presents of the i - th node ( a_ i) is decreased by m , and, correspondingly, a_ j is increased by m ; Alice and Bob both play optimally. The player unable to make a move loses the game. For each possible root of the tree, find who among Alice or Bob wins the game. Note: The depth of a node i in a tree with root r is defined as the number of edges on the simple path from node r to node i . The depth of root r itself is zero.",
    "input": "The first line contains two space- separated integers n and k ( 3 \u2264 n \u2264 10^ 5, 1 \u2264 k \u2264 20) . The next n- 1 lines each contain two integers x and y ( 1 \u2264 x, y \u2264 n, x = \u0338 y) , denoting an undirected edge between the two nodes x and y . These edges form a tree of n nodes. The next line contains n space- separated integers denoting the array a ( 0 \u2264 a_ i \u2264 10^ 9) .",
    "output": "Output n integers, where the i - th integer is 1 if Alice wins the game when the tree is rooted at node i , or 0 otherwise.",
    "note": "Let us calculate the answer for sample input with root node as 1 and as 2. Root node 1Alice always wins in this case. One possible gameplay between Alice and Bob is: Alice moves one present from node 4 to node 3. Bob moves four presents from node 5 to node 2. Alice moves four presents from node 2 to node 1. Bob moves three presents from node 2 to node 1. Alice moves three presents from node 3 to node 1. Bob moves three presents from node 4 to node 3. Alice moves three presents from node 3 to node 1. Bob is now unable to make a move and hence loses. Root node 2Bob always wins in this case. One such gameplay is: Alice moves four presents from node 4 to node 3. Bob moves four presents from node 5 to node 2. Alice moves six presents from node 3 to node 1. Bob moves six presents from node 1 to node 2. Alice is now unable to make a move and hence loses.",
    "topics": [
      "bitmasks",
      "data structures",
      "dfs and similar",
      "dp",
      "games",
      "math",
      "trees"
    ],
    "id": "1498F"
  },
  {
    "title": "GCD Sum",
    "url": "https://codeforces.com/problemset/problem/1498/A",
    "history": "The gcdSum of a positive integer is the gcd of that integer with its sum of digits. Formally, gcdSum ( x) = gcd( x, sum of digits of x) for a positive integer x . gcd( a, b) denotes the greatest common divisor of a and b \u2014 the largest integer d such that both integers a and b are divisible by d . For example: gcdSum ( 762) = gcd( 762, 7 + 6 + 2) = gcd( 762, 15) = 3 . Given an integer n , find the smallest integer x \u2265 n such that gcdSum ( x) > 1 .",
    "input": "The first line of input contains one integer t ( 1 \u2264 t \u2264 10^ 4) \u2014 the number of test cases. Then t lines follow, each containing a single integer n ( 1 \u2264 n \u2264 10^ 18) . All test cases in one test are different.",
    "output": "Output t lines, where the i - th line is a single integer containing the answer to the i - th test case.",
    "note": "Let us explain the three test cases in the sample. Test case 1: n = 11 : gcdSum ( 11) = gcd( 11, 1 + 1) = gcd( 11, 2) = 1 . gcdSum ( 12) = gcd( 12, 1 + 2) = gcd( 12, 3) = 3 . So the smallest number \u2265 11 whose gcdSum > 1 is 12 . Test case 2: n = 31 : gcdSum ( 31) = gcd( 31, 3 + 1) = gcd( 31, 4) = 1 . gcdSum ( 32) = gcd( 32, 3 + 2) = gcd( 32, 5) = 1 . gcdSum ( 33) = gcd( 33, 3 + 3) = gcd( 33, 6) = 3 . So the smallest number \u2265 31 whose gcdSum > 1 is 33 . Test case 3: n = 75 : gcdSum ( 75) = gcd( 75, 7 + 5) = gcd( 75, 12) = 3 . The gcdSum of 75 is already > 1 . Hence, it is the answer.",
    "topics": [
      "brute force",
      "math"
    ],
    "id": "1498A"
  },
  {
    "title": "Square-free division (hard version)",
    "url": "https://codeforces.com/problemset/problem/1497/E2",
    "history": "This is the hard version of the problem. The only difference is that in this version 0 \u2264 k \u2264 20 . There is an array a_ 1, a_ 2, . . . , a_ n of n positive integers. You should divide it into a minimal number of continuous segments, such that in each segment there are no two numbers ( on different positions) , whose product is a perfect square. Moreover, it is allowed to do at most k such operations before the division: choose a number in the array and change its value to any positive integer. What is the minimum number of continuous segments you should use if you will make changes optimally?",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 1000) \u2014 the number of test cases. The first line of each test case contains two integers n , k ( 1 \u2264 n \u2264 2 \u00b7 10^ 5 , 0 \u2264 k \u2264 20 ) . The second line of each test case contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 7 ) . It' s guaranteed that the sum of n over all test cases does not exceed 2 \u00b7 10^ 5 .",
    "output": "For each test case print a single integer \u2014 the answer to the problem.",
    "note": "In the first test case it is possible to change the array this way: [ 3, 6, 2, 4, 5] ( changed elements are underlined) . After that the array does not need to be divided, so the answer is 1 . In the second test case it is possible to change the array this way: [ 6, 2, 3, 8, 9, 5, 3, 6, 10, 11, 7] . After that such division is optimal: [ 6, 2, 3] [ 8, 9, 5, 3, 6, 10, 11, 7]",
    "topics": [
      "data structures",
      "dp",
      "greedy",
      "math",
      "number theory",
      "two pointers"
    ],
    "id": "1497E2"
  },
  {
    "title": "Square-Free Division (easy version)",
    "url": "https://codeforces.com/problemset/problem/1497/E1",
    "history": "This is the easy version of the problem. The only difference is that in this version k = 0 . There is an array a_ 1, a_ 2, . . . , a_ n of n positive integers. You should divide it into a minimal number of continuous segments, such that in each segment there are no two numbers ( on different positions) , whose product is a perfect square. Moreover, it is allowed to do at most k such operations before the division: choose a number in the array and change its value to any positive integer. But in this version k = 0 , so it is not important. What is the minimum number of continuous segments you should use if you will make changes optimally?",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 1000) \u2014 the number of test cases. The first line of each test case contains two integers n , k ( 1 \u2264 n \u2264 2 \u00b7 10^ 5 , k = 0 ) . The second line of each test case contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 7 ) . It' s guaranteed that the sum of n over all test cases does not exceed 2 \u00b7 10^ 5 .",
    "output": "For each test case print a single integer \u2014 the answer to the problem.",
    "note": "In the first test case the division may be as follows: [ 18, 6] [ 2, 4] [ 1]",
    "topics": [
      "data structures",
      "dp",
      "greedy",
      "math",
      "number theory",
      "two pointers"
    ],
    "id": "1497E1"
  },
  {
    "title": "k-LCM (hard version)",
    "url": "https://codeforces.com/problemset/problem/1497/C2",
    "history": "It is the hard version of the problem. The only difference is that in this version 3 \u2264 k \u2264 n . You are given a positive integer n . Find k positive integers a_ 1, a_ 2, . . . , a_ k , such that: a_ 1 + a_ 2 + . . . + a_ k = n LCM( a_ 1, a_ 2, . . . , a_ k) \u2264n/ 2 Here LCM is the least common multiple of numbers a_ 1, a_ 2, . . . , a_ k . We can show that for given constraints the answer always exists.",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 4) \u2014 the number of test cases. The only line of each test case contains two integers n , k ( 3 \u2264 n \u2264 10^ 9 , 3 \u2264 k \u2264 n ) . It is guaranteed that the sum of k over all test cases does not exceed 10^ 5 .",
    "output": "For each test case print k positive integers a_ 1, a_ 2, . . . , a_ k , for which all conditions are satisfied.",
    "note": "",
    "topics": [
      "constructive algorithms",
      "math"
    ],
    "id": "1497C2"
  },
  {
    "title": "k-LCM (easy version)",
    "url": "https://codeforces.com/problemset/problem/1497/C1",
    "history": "It is the easy version of the problem. The only difference is that in this version k = 3 . You are given a positive integer n . Find k positive integers a_ 1, a_ 2, . . . , a_ k , such that: a_ 1 + a_ 2 + . . . + a_ k = n LCM( a_ 1, a_ 2, . . . , a_ k) \u2264n/ 2 Here LCM is the least common multiple of numbers a_ 1, a_ 2, . . . , a_ k . We can show that for given constraints the answer always exists.",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 4) \u2014 the number of test cases. The only line of each test case contains two integers n , k ( 3 \u2264 n \u2264 10^ 9 , k = 3 ) .",
    "output": "For each test case print k positive integers a_ 1, a_ 2, . . . , a_ k , for which all conditions are satisfied.",
    "note": "",
    "topics": [
      "constructive algorithms",
      "math"
    ],
    "id": "1497C1"
  },
  {
    "title": "M-arrays",
    "url": "https://codeforces.com/problemset/problem/1497/B",
    "history": "You are given an array a_ 1, a_ 2, . . . , a_ n consisting of n positive integers and a positive integer m . You should divide elements of this array into some arrays. You can order the elements in the new arrays as you want. Let' s call an array m - divisible if for each two adjacent numbers in the array ( two numbers on the positions i and i+ 1 are called adjacent for each i ) their sum is divisible by m . An array of one element is m - divisible. Find the smallest number of m - divisible arrays that a_ 1, a_ 2, . . . , a_ n is possible to divide into.",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 1000) \u2014 the number of test cases. The first line of each test case contains two integers n , m ( 1 \u2264 n \u2264 10^ 5, 1 \u2264 m \u2264 10^ 5) . The second line of each test case contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 9) . It is guaranteed that the sum of n and the sum of m over all test cases do not exceed 10^ 5 .",
    "output": "For each test case print the answer to the problem.",
    "note": "In the first test case we can divide the elements as follows: [ 4, 8] . It is a 4 - divisible array because 4+ 8 is divisible by 4 . [ 2, 6, 2] . It is a 4 - divisible array because 2+ 6 and 6+ 2 are divisible by 4 . [ 9] . It is a 4 - divisible array because it consists of one element.",
    "topics": [
      "constructive algorithms",
      "greedy",
      "math"
    ],
    "id": "1497B"
  },
  {
    "title": "Max and Mex",
    "url": "https://codeforces.com/problemset/problem/1496/B",
    "history": "You are given a multiset S initially consisting of n distinct non- negative integers. A multiset is a set, that can contain some elements multiple times. You will perform the following operation k times: Add the element \u2308a+ b/ 2\u2309 ( rounded up) into S , where a = mex( S) and b = max( S) . If this number is already in the set, it is added again. Here max of a multiset denotes the maximum integer in the multiset, and mex of a multiset denotes the smallest non- negative integer that is not present in the multiset. For example: mex( { 1, 4, 0, 2} ) = 3 ; mex( { 2, 5, 1} ) = 0 . Your task is to calculate the number of distinct elements in S after k operations will be done.",
    "input": "The input consists of multiple test cases. The first line contains a single integer t ( 1\u2264 t\u2264 100 ) \u2014 the number of test cases. The description of the test cases follows. The first line of each test case contains two integers n , k ( 1\u2264 n\u2264 10^ 5 , 0\u2264 k\u2264 10^ 9 ) \u2014 the initial size of the multiset S and how many operations you need to perform. The second line of each test case contains n distinct integers a_ 1, a_ 2, . . . , a_ n ( 0\u2264 a_ i\u2264 10^ 9 ) \u2014 the numbers in the initial multiset. It is guaranteed that the sum of n over all test cases does not exceed 10^ 5 .",
    "output": "For each test case, print the number of distinct elements in S after k operations will be done.",
    "note": "In the first test case, S= { 0, 1, 3, 4} , a= mex( S) = 2 , b= max( S) = 4 , \u2308a+ b/ 2\u2309= 3 . So 3 is added into S , and S becomes { 0, 1, 3, 3, 4} . The answer is 4 . In the second test case, S= { 0, 1, 4} , a= mex( S) = 2 , b= max( S) = 4 , \u2308a+ b/ 2\u2309= 3 . So 3 is added into S , and S becomes { 0, 1, 3, 4} . The answer is 4 .",
    "topics": [
      "math"
    ],
    "id": "1496B"
  },
  {
    "title": "BFS Trees",
    "url": "https://codeforces.com/problemset/problem/1495/D",
    "history": "We define a spanning tree of a graph to be a BFS tree rooted at vertex s if and only if for every node t the shortest distance between s and t in the graph is equal to the shortest distance between s and t in the spanning tree. Given a graph, we define f( x, y) to be the number of spanning trees of that graph that are BFS trees rooted at vertices x and y at the same time. You are given an undirected connected graph with n vertices and m edges. Calculate f( i, j) for all i , j by modulo 998 244 353 .",
    "input": "The first line contains two integers n , m ( 1 \u2264 n \u2264 400 , 0 \u2264 m \u2264 600 ) \u2014 the number of vertices and the number of edges in the graph. The i - th of the next m lines contains two integers a_ i , b_ i ( 1 \u2264 a_ i, b_ i \u2264 n , a_ i < b_ i ) , representing an edge connecting a_ i and b_ i . It is guaranteed that all edges are distinct and the graph is connected.",
    "output": "Print n lines, each consisting of n integers. The integer printed in the row i and the column j should be f( i, j) 998 244 353 .",
    "note": "The following picture describes the first example. The tree with red edges is a BFS tree rooted at both 1 and 2 . Similarly, the BFS tree for other adjacent pairs of vertices can be generated in this way.",
    "topics": [
      "combinatorics",
      "dfs and similar",
      "graphs",
      "math",
      "shortest paths",
      "trees"
    ],
    "id": "1495D"
  },
  {
    "title": "Diamond Miner",
    "url": "https://codeforces.com/problemset/problem/1495/A",
    "history": "Diamond Miner is a game that is similar to Gold Miner, but there are n miners instead of 1 in this game. The mining area can be described as a plane. The n miners can be regarded as n points on the y- axis. There are n diamond mines in the mining area. We can regard them as n points on the x- axis. For some reason, no miners or diamond mines can be at the origin ( point ( 0, 0) ) . Every miner should mine exactly one diamond mine. Every miner has a hook, which can be used to mine a diamond mine. If a miner at the point ( a, b) uses his hook to mine a diamond mine at the point ( c, d) , he will spend \u221a( ( a- c) ^ 2+ ( b- d) ^ 2) energy to mine it ( the distance between these points) . The miners can' t move or help each other. The object of this game is to minimize the sum of the energy that miners spend. Can you find this minimum?",
    "input": "The input consists of multiple test cases. The first line contains a single integer t ( 1\u2264 t\u2264 10 ) \u2014 the number of test cases. The description of the test cases follows. The first line of each test case contains a single integer n ( 1 \u2264 n \u2264 10^ 5 ) \u2014 the number of miners and mines. Each of the next 2n lines contains two space- separated integers x ( - 10^ 8 \u2264 x \u2264 10^ 8 ) and y ( - 10^ 8 \u2264 y \u2264 10^ 8 ) , which represent the point ( x, y) to describe a miner' s or a diamond mine' s position. Either x = 0 , meaning there is a miner at the point ( 0, y) , or y = 0 , meaning there is a diamond mine at the point ( x, 0) . There can be multiple miners or diamond mines at the same point. It is guaranteed that no point is at the origin. It is guaranteed that the number of points on the x- axis is equal to n and the number of points on the y- axis is equal to n . It' s guaranteed that the sum of n for all test cases does not exceed 10^ 5 .",
    "output": "For each test case, print a single real number \u2014 the minimal sum of energy that should be spent. Your answer is considered correct if its absolute or relative error does not exceed 10^ - 9 . Formally, let your answer be a , and the jury' s answer be b . Your answer is accepted if and only if | a - b| / max( 1, | b| ) \u2264 10^ - 9 .",
    "note": "In the first test case, the miners are at ( 0, 1) and ( 0, - 1) , while the diamond mines are at ( 1, 0) and ( - 2, 0) . If you arrange the miners to get the diamond mines in the way, shown in the picture, you can get the sum of the energy \u221a( 2) + \u221a( 5) .",
    "topics": [
      "geometry",
      "greedy",
      "math",
      "sortings"
    ],
    "id": "1495A"
  },
  {
    "title": "Enormous XOR",
    "url": "https://codeforces.com/problemset/problem/1493/E",
    "history": "You are given two integers l and r in binary representation. Let g( x, y) be equal to the bitwise XOR of all integers from x to y inclusive ( that is x \u2295 ( x+ 1) \u2295. . . \u2295 ( y- 1) \u2295 y ) . Let' s define f( l, r) as the maximum of all values of g( x, y) satisfying l \u2264 x \u2264 y \u2264 r . Output f( l, r) .",
    "input": "The first line contains a single integer n ( 1 \u2264 n \u2264 10^ 6 ) \u2014 the length of the binary representation of r . The second line contains the binary representation of l \u2014 a string of length n consisting of digits 0 and 1 ( 0 \u2264 l < 2^ n ) . The third line contains the binary representation of r \u2014 a string of length n consisting of digits 0 and 1 ( 0 \u2264 r < 2^ n ) . It is guaranteed that l \u2264 r . The binary representation of r does not contain any extra leading zeros ( if r= 0 , the binary representation of it consists of a single zero) . The binary representation of l is preceded with leading zeros so that its length is equal to n .",
    "output": "In a single line output the value of f( l, r) for the given pair of l and r in binary representation without extra leading zeros.",
    "note": "In sample test case l= 19 , r= 122 . f( x, y) is maximal and is equal to 127 , with x= 27 , y= 100 , for example.",
    "topics": [
      "bitmasks",
      "constructive algorithms",
      "greedy",
      "math",
      "strings",
      "two pointers"
    ],
    "id": "1493E"
  },
  {
    "title": "GCD of an Array",
    "url": "https://codeforces.com/problemset/problem/1493/D",
    "history": "You are given an array a of length n . You are asked to process q queries of the following format: given integers i and x , multiply a_ i by x . After processing each query you need to output the greatest common divisor ( GCD) of all elements of the array a . Since the answer can be too large, you are asked to output it modulo 10^ 9+ 7 .",
    "input": "The first line contains two integers \u2014 n and q ( 1 \u2264 n, q \u2264 2 \u00b7 10^ 5 ) . The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 2 \u00b7 10^ 5 ) \u2014 the elements of the array a before the changes. The next q lines contain queries in the following format: each line contains two integers i and x ( 1 \u2264 i \u2264 n , 1 \u2264 x \u2264 2 \u00b7 10^ 5 ) .",
    "output": "Print q lines: after processing each query output the GCD of all elements modulo 10^ 9+ 7 on a separate line.",
    "note": "After the first query the array is [ 12, 6, 8, 12] , gcd( 12, 6, 8, 12) = 2 . After the second query \u2014 [ 12, 18, 8, 12] , gcd( 12, 18, 8, 12) = 2 . After the third query \u2014 [ 12, 18, 24, 12] , gcd( 12, 18, 24, 12) = 6 . Here the gcd function denotes the greatest common divisor.",
    "topics": [
      "brute force",
      "data structures",
      "hashing",
      "implementation",
      "math",
      "number theory",
      "sortings",
      "two pointers"
    ],
    "id": "1493D"
  },
  {
    "title": "Genius's Gambit",
    "url": "https://codeforces.com/problemset/problem/1492/D",
    "history": "You are given three integers a , b , k . Find two binary integers x and y ( x \u2265 y ) such that both x and y consist of a zeroes and b ones; x - y ( also written in binary form) has exactly k ones. You are not allowed to use leading zeros for x and y .",
    "input": "The only line contains three integers a , b , and k ( 0 \u2264 a ; 1 \u2264 b ; 0 \u2264 k \u2264 a + b \u2264 2 \u00b7 10^ 5 ) \u2014 the number of zeroes, ones, and the number of ones in the result.",
    "output": "If it' s possible to find two suitable integers, print \" Yes\" followed by x and y in base- 2. Otherwise print \" No\" . If there are multiple possible answers, print any of them.",
    "note": "In the first example, x = 101000_ 2 = 2^ 5 + 2^ 3 = 40_ 10 , y = 100001_ 2 = 2^ 5 + 2^ 0 = 33_ 10 , 40_ 10 - 33_ 10 = 7_ 10 = 2^ 2 + 2^ 1 + 2^ 0 = 111_ 2 . Hence x- y has 3 ones in base- 2. In the second example, x = 10100_ 2 = 2^ 4 + 2^ 2 = 20_ 10 , y = 10010_ 2 = 2^ 4 + 2^ 1 = 18 , x - y = 20 - 18 = 2_ 10 = 10_ 2 . This is precisely one 1. In the third example, one may show, that it' s impossible to find an answer.",
    "topics": [
      "bitmasks",
      "constructive algorithms",
      "greedy",
      "math"
    ],
    "id": "1492D"
  },
  {
    "title": "Card Deck",
    "url": "https://codeforces.com/problemset/problem/1492/B",
    "history": "You have a deck of n cards, and you' d like to reorder it to a new one. Each card has a value between 1 and n equal to p_ i . All p_ i are pairwise distinct. Cards in a deck are numbered from bottom to top, i. e. p_ 1 stands for the bottom card, p_ n is the top card. In each step you pick some integer k > 0 , take the top k cards from the original deck and place them, in the order they are now, on top of the new deck. You perform this operation until the original deck is empty. ( Refer to the notes section for the better understanding. ) Let' s define an order of a deck as \u2211_ i = 1^ nn^ n - i\u00b7 p_ i . Given the original deck, output the deck with maximum possible order you can make using the operation above.",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 1000 ) \u2014 the number of test cases. The first line of each test case contains the single integer n ( 1 \u2264 n \u2264 10^ 5 ) \u2014 the size of deck you have. The second line contains n integers p_ 1, p_ 2, . . . , p_ n ( 1 \u2264 p_ i \u2264 n ; p_ i = \u0338 p_ j if i = \u0338 j ) \u2014 values of card in the deck from bottom to top. It' s guaranteed that the sum of n over all test cases doesn' t exceed 10^ 5 .",
    "output": "For each test case print the deck with maximum possible order. Print values of cards in the deck from bottom to top. If there are multiple answers, print any of them.",
    "note": "In the first test case, one of the optimal strategies is the next one: take 1 card from the top of p and move it to p' : p becomes [ 1, 2, 3] , p' becomes [ 4] ; take 1 card from the top of p : p becomes [ 1, 2] , p' becomes [ 4, 3] ; take 1 card from the top of p : p becomes [ 1] , p' becomes [ 4, 3, 2] ; take 1 card from the top of p : p becomes empty, p' becomes [ 4, 3, 2, 1] . In result, p' has order equal to 4^ 3 \u00b7 4 + 4^ 2 \u00b7 3 + 4^ 1 \u00b7 2 + 4^ 0 \u00b7 1 = 256 + 48 + 8 + 1 = 313 . In the second test case, one of the optimal strategies is: take 4 cards from the top of p and move it to p' : p becomes [ 1] , p' becomes [ 5, 2, 4, 3] ; take 1 card from the top of p and move it to p' : p becomes empty, p' becomes [ 5, 2, 4, 3, 1] ; In result, p' has order equal to 5^ 4 \u00b7 5 + 5^ 3 \u00b7 2 + 5^ 2 \u00b7 4 + 5^ 1 \u00b7 3 + 5^ 0 \u00b7 1 = 3125 + 250 + 100 + 15 + 1 = 3491 . In the third test case, one of the optimal strategies is: take 2 cards from the top of p and move it to p' : p becomes [ 4, 2, 5, 3] , p' becomes [ 6, 1] ; take 2 cards from the top of p and move it to p' : p becomes [ 4, 2] , p' becomes [ 6, 1, 5, 3] ; take 2 cards from the top of p and move it to p' : p becomes empty, p' becomes [ 6, 1, 5, 3, 4, 2] . In result, p' has order equal to 6^ 5 \u00b7 6 + 6^ 4 \u00b7 1 + 6^ 3 \u00b7 5 + 6^ 2 \u00b7 3 + 6^ 1 \u00b7 4 + 6^ 0 \u00b7 2 = 46656 + 1296 + 1080 + 108 + 24 + 2 = 49166 .",
    "topics": [
      "data structures",
      "greedy",
      "math"
    ],
    "id": "1492B"
  },
  {
    "title": "Three swimmers",
    "url": "https://codeforces.com/problemset/problem/1492/A",
    "history": "Three swimmers decided to organize a party in the swimming pool! At noon, they started to swim from the left side of the pool. It takes the first swimmer exactly a minutes to swim across the entire pool and come back, exactly b minutes for the second swimmer and c minutes for the third. Hence, the first swimmer will be on the left side of the pool after 0 , a , 2a , 3a , . . . minutes after the start time, the second one will be at 0 , b , 2b , 3b , . . . minutes, and the third one will be on the left side of the pool after 0 , c , 2c , 3c , . . . minutes. You came to the left side of the pool exactly p minutes after they started swimming. Determine how long you have to wait before one of the swimmers arrives at the left side of the pool.",
    "input": "The first line of the input contains a single integer t ( 1 \u2264 t \u2264 1000 ) \u2014 the number of test cases. Next t lines contains test case descriptions, one per line. Each line contains four integers p , a , b and c ( 1 \u2264 p, a, b, c \u2264 10^ 18 ) , time in minutes after the start, when you came to the pool and times in minutes it take the swimmers to cross the entire pool and come back.",
    "output": "For each test case, output one integer \u2014 how long you have to wait ( in minutes) before one of the swimmers arrives at the left side of the pool.",
    "note": "In the first test case, the first swimmer is on the left side in 0, 5, 10, 15, . . . minutes after the start time, the second swimmer is on the left side in 0, 4, 8, 12, . . . minutes after the start time, and the third swimmer is on the left side in 0, 8, 16, 24, . . . minutes after the start time. You arrived at the pool in 9 minutes after the start time and in a minute you will meet the first swimmer on the left side. In the second test case, the first swimmer is on the left side in 0, 6, 12, 18, . . . minutes after the start time, the second swimmer is on the left side in 0, 10, 20, 30, . . . minutes after the start time, and the third swimmer is on the left side in 0, 9, 18, 27, . . . minutes after the start time. You arrived at the pool 2 minutes after the start time and after 4 minutes meet the first swimmer on the left side. In the third test case, you came to the pool 10 minutes after the start time. At the same time, all three swimmers are on the left side. A rare stroke of luck! In the fourth test case, all swimmers are located on the left side in 0, 9, 18, 27, . . . minutes after the start time. You arrived at the pool 10 minutes after the start time and after 8 minutes meet all three swimmers on the left side.",
    "topics": [
      "math"
    ],
    "id": "1492A"
  },
  {
    "title": "Switch and Flip",
    "url": "https://codeforces.com/problemset/problem/1491/G",
    "history": "There are n coins labeled from 1 to n . Initially, coin c_ i is on position i and is facing upwards ( ( c_ 1, c_ 2, . . . , c_ n) is a permutation of numbers from 1 to n ) . You can do some operations on these coins. In one operation, you can do the following: Choose 2 distinct indices i and j . Then, swap the coins on positions i and j . Then, flip both coins on positions i and j . ( If they are initially faced up, they will be faced down after the operation and vice versa) Construct a sequence of at most n+ 1 operations such that after performing all these operations the coin i will be on position i at the end, facing up. Note that you do not need to minimize the number of operations.",
    "input": "The first line contains an integer n ( 3 \u2264 n \u2264 2 \u00b7 10^ 5 ) \u2014 the number of coins. The second line contains n integers c_ 1, c_ 2, . . . , c_ n ( 1 \u2264 c_ i \u2264 n , c_ i = \u0338 c_ j for i= \u0338 j ) .",
    "output": "In the first line, output an integer q ( 0 \u2264 q \u2264 n+ 1) \u2014 the number of operations you used. In the following q lines, output two integers i and j ( 1 \u2264 i, j \u2264 n, i j) \u2014 the positions you chose for the current operation.",
    "note": "Let coin i facing upwards be denoted as i and coin i facing downwards be denoted as - i . The series of moves performed in the first sample changes the coins as such: [ 2, 1, 3] [ - 3, 1, - 2] [ - 3, 2, - 1] [ 1, 2, 3] In the second sample, the coins are already in their correct positions so there is no need to swap.",
    "topics": [
      "constructive algorithms",
      "graphs",
      "math"
    ],
    "id": "1491G"
  },
  {
    "title": "Zookeeper and The Infinite Zoo",
    "url": "https://codeforces.com/problemset/problem/1491/D",
    "history": "There is a new attraction in Singapore Zoo: The Infinite Zoo. The Infinite Zoo can be represented by a graph with an infinite number of vertices labeled 1, 2, 3, . . . . There is a directed edge from vertex u to vertex u+ v if and only if u& v= v , where & denotes the bitwise AND operation. There are no other edges in the graph. Zookeeper has q queries. In the i - th query she will ask you if she can travel from vertex u_ i to vertex v_ i by going through directed edges.",
    "input": "The first line contains an integer q ( 1 \u2264 q \u2264 10^ 5 ) \u2014 the number of queries. The i - th of the next q lines will contain two integers u_ i , v_ i ( 1 \u2264 u_ i, v_ i < 2^ 30 ) \u2014 a query made by Zookeeper.",
    "output": "For the i - th of the q queries, output \" YES\" in a single line if Zookeeper can travel from vertex u_ i to vertex v_ i . Otherwise, output \" NO\" . You can print your answer in any case. For example, if the answer is \" YES\" , then the output \" Yes\" or \" yeS\" will also be considered as correct answer.",
    "note": "The subgraph on vertices 1, 2, 3, 4, 5, 6 is shown below.",
    "topics": [
      "bitmasks",
      "constructive algorithms",
      "dp",
      "greedy",
      "math"
    ],
    "id": "1491D"
  },
  {
    "title": "Minimal Cost",
    "url": "https://codeforces.com/problemset/problem/1491/B",
    "history": "There is a graph of n rows and 10^ 6 + 2 columns, where rows are numbered from 1 to n and columns from 0 to 10^ 6 + 1 : Let' s denote the node in the row i and column j by ( i, j) . Initially for each i the i - th row has exactly one obstacle \u2014 at node ( i, a_ i) . You want to move some obstacles so that you can reach node ( n, 10^ 6+ 1) from node ( 1, 0) by moving through edges of this graph ( you can' t pass through obstacles) . Moving one obstacle to an adjacent by edge free node costs u or v coins, as below: If there is an obstacle in the node ( i, j) , you can use u coins to move it to ( i- 1, j) or ( i+ 1, j) , if such node exists and if there is no obstacle in that node currently. If there is an obstacle in the node ( i, j) , you can use v coins to move it to ( i, j- 1) or ( i, j+ 1) , if such node exists and if there is no obstacle in that node currently. Note that you can' t move obstacles outside the grid. For example, you can' t move an obstacle from ( 1, 1) to ( 0, 1) . Refer to the picture above for a better understanding. Now you need to calculate the minimal number of coins you need to spend to be able to reach node ( n, 10^ 6+ 1) from node ( 1, 0) by moving through edges of this graph without passing through obstacles.",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. The first line of each test case contains three integers n , u and v ( 2 \u2264 n \u2264 100 , 1 \u2264 u, v \u2264 10^ 9 ) \u2014 the number of rows in the graph and the numbers of coins needed to move vertically and horizontally respectively. The second line of each test case contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 6 ) \u2014 where a_ i represents that the obstacle in the i - th row is in node ( i, a_ i) . It' s guaranteed that the sum of n over all test cases doesn' t exceed 2 \u00b7 10^ 4 .",
    "output": "For each test case, output a single integer \u2014 the minimal number of coins you need to spend to be able to reach node ( n, 10^ 6+ 1) from node ( 1, 0) by moving through edges of this graph without passing through obstacles. It can be shown that under the constraints of the problem there is always a way to make such a trip possible.",
    "note": "In the first sample, two obstacles are at ( 1, 2) and ( 2, 2) . You can move the obstacle on ( 2, 2) to ( 2, 3) , then to ( 1, 3) . The total cost is u+ v = 7 coins. In the second sample, two obstacles are at ( 1, 3) and ( 2, 2) . You can move the obstacle on ( 1, 3) to ( 2, 3) . The cost is u = 3 coins.",
    "topics": [
      "brute force",
      "math"
    ],
    "id": "1491B"
  },
  {
    "title": "Old Floppy Drive ",
    "url": "https://codeforces.com/problemset/problem/1490/G",
    "history": "Polycarp was dismantling his attic and found an old floppy drive on it. A round disc was inserted into the drive with n integers written on it. Polycarp wrote the numbers from the disk into the a array. It turned out that the drive works according to the following algorithm: the drive takes one positive number x as input and puts a pointer to the first element of the a array; after that, the drive starts rotating the disk, every second moving the pointer to the next element, counting the sum of all the elements that have been under the pointer. Since the disk is round, in the a array, the last element is again followed by the first one; as soon as the sum is at least x , the drive will shut down. Polycarp wants to learn more about the operation of the drive, but he has absolutely no free time. So he asked you m questions. To answer the i - th of them, you need to find how many seconds the drive will work if you give it x_ i as input. Please note that in some cases the drive can work infinitely. For example, if n= 3, m= 3 , a= [ 1, - 3, 4] and x= [ 1, 5, 2] , then the answers to the questions are as follows: the answer to the first query is 0 because the drive initially points to the first item and the initial sum is 1 . the answer to the second query is 6 , the drive will spin the disk completely twice and the amount becomes 1+ ( - 3) + 4+ 1+ ( - 3) + 4+ 1= 5 . the answer to the third query is 2 , the amount is 1+ ( - 3) + 4= 2 .",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. Then t test cases follow. The first line of each test case consists of two positive integers n , m ( 1 \u2264 n, m \u2264 2 \u00b7 10^ 5 ) \u2014 the number of numbers on the disk and the number of asked questions. The second line of each test case contains n integers a_ 1, a_ 2, . . . , a_ n ( - 10^ 9 \u2264 a_ i \u2264 10^ 9 ) . The third line of each test case contains m positive integers x_ 1, x_ 2, . . . , x_ m ( 1 \u2264 x \u2264 10^ 9 ) . It is guaranteed that the sums of n and m over all test cases do not exceed 2 \u00b7 10^ 5 .",
    "output": "Print m numbers on a separate line for each test case. The i - th number is: - 1 if the drive will run infinitely; the number of seconds the drive will run, otherwise.",
    "note": "",
    "topics": [
      "binary search",
      "data structures",
      "math"
    ],
    "id": "1490G"
  },
  {
    "title": "Equalize the Array",
    "url": "https://codeforces.com/problemset/problem/1490/F",
    "history": "Polycarp was gifted an array a of length n . Polycarp considers an array beautiful if there exists a number C , such that each number in the array occurs either zero or C times. Polycarp wants to remove some elements from the array a to make it beautiful. For example, if n= 6 and a = [ 1, 3, 2, 1, 4, 2] , then the following options are possible to make the array a array beautiful: Polycarp removes elements at positions 2 and 5 , array a becomes equal to [ 1, 2, 1, 2] ; Polycarp removes elements at positions 1 and 6 , array a becomes equal to [ 3, 2, 1, 4] ; Polycarp removes elements at positions 1, 2 and 6 , array a becomes equal to [ 2, 1, 4] ; Help Polycarp determine the minimum number of elements to remove from the array a to make it beautiful.",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. Then t test cases follow. The first line of each test case consists of one integer n ( 1 \u2264 n \u2264 2 \u00b7 10^ 5 ) \u2014 the length of the array a . The second line of each test case contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 9 ) \u2014 array a . It is guaranteed that the sum of n over all test cases does not exceed 2 \u00b7 10^ 5 .",
    "output": "For each test case, output one integer \u2014 the minimum number of elements that Polycarp has to remove from the array a to make it beautiful.",
    "note": "",
    "topics": [
      "binary search",
      "data structures",
      "greedy",
      "math",
      "sortings"
    ],
    "id": "1490F"
  },
  {
    "title": "Sum of Cubes",
    "url": "https://codeforces.com/problemset/problem/1490/C",
    "history": "You are given a positive integer x . Check whether the number x is representable as the sum of the cubes of two positive integers. Formally, you need to check if there are two integers a and b ( 1 \u2264 a, b ) such that a^ 3+ b^ 3= x . For example, if x = 35 , then the numbers a= 2 and b= 3 are suitable ( 2^ 3+ 3^ 3= 8+ 27= 35 ) . If x= 4 , then no pair of numbers a and b is suitable.",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 100 ) \u2014 the number of test cases. Then t test cases follow. Each test case contains one integer x ( 1 \u2264 x \u2264 10^ 12 ) . Please note, that the input for some test cases won' t fit into 32 - bit integer type, so you should use at least 64 - bit integer type in your programming language.",
    "output": "For each test case, output on a separate line: \" YES\" if x is representable as the sum of the cubes of two positive integers. \" NO\" otherwise. You can output \" YES\" and \" NO\" in any case ( for example, the strings yEs, yes, Yes and YES will be recognized as positive) .",
    "note": "The number 1 is not representable as the sum of two cubes. The number 2 is represented as 1^ 3+ 1^ 3 . The number 4 is not representable as the sum of two cubes. The number 34 is not representable as the sum of two cubes. The number 35 is represented as 2^ 3+ 3^ 3 . The number 16 is represented as 2^ 3+ 2^ 3 . The number 703657519796 is represented as 5779^ 3+ 7993^ 3 .",
    "topics": [
      "binary search",
      "brute force",
      "brute force",
      "math"
    ],
    "id": "1490C"
  },
  {
    "title": "Balanced Remainders",
    "url": "https://codeforces.com/problemset/problem/1490/B",
    "history": "You are given a number n ( divisible by 3 ) and an array a[ 1 . . . n] . In one move, you can increase any of the array elements by one. Formally, you choose the index i ( 1 \u2264 i \u2264 n ) and replace a_ i with a_ i + 1 . You can choose the same index i multiple times for different moves. Let' s denote by c_ 0 , c_ 1 and c_ 2 the number of numbers from the array a that have remainders 0 , 1 and 2 when divided by the number 3 , respectively. Let' s say that the array a has balanced remainders if c_ 0 , c_ 1 and c_ 2 are equal. For example, if n = 6 and a = [ 0, 2, 5, 5, 4, 8] , then the following sequence of moves is possible: initially c_ 0 = 1 , c_ 1 = 1 and c_ 2 = 4 , these values are not equal to each other. Let' s increase a_ 3 , now the array a = [ 0, 2, 6, 5, 4, 8] ; c_ 0 = 2 , c_ 1 = 1 and c_ 2 = 3 , these values are not equal. Let' s increase a_ 6 , now the array a = [ 0, 2, 6, 5, 4, 9] ; c_ 0 = 3 , c_ 1 = 1 and c_ 2 = 2 , these values are not equal. Let' s increase a_ 1 , now the array a = [ 1, 2, 6, 5, 4, 9] ; c_ 0 = 2 , c_ 1 = 2 and c_ 2 = 2 , these values are equal to each other, which means that the array a has balanced remainders. Find the minimum number of moves needed to make the array a have balanced remainders.",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 10^ 4 ) . Then t test cases follow. The first line of each test case contains one integer n ( 3 \u2264 n \u2264 3 \u00b7 10^ 4 ) \u2014 the length of the array a . It is guaranteed that the number n is divisible by 3 . The next line contains n integers a_ 1, a_ 2, . . . , a_ n ( 0 \u2264 a_ i \u2264 100 ) . It is guaranteed that the sum of n over all test cases does not exceed 150 000 .",
    "output": "For each test case, output one integer \u2014 the minimum number of moves that must be made for the a array to make it have balanced remainders.",
    "note": "The first test case is explained in the statements. In the second test case, you need to make one move for i= 2 . The third test case you need to make three moves: the first move: i= 9 ; the second move: i= 9 ; the third move: i= 2 . In the fourth test case, the values c_ 0 , c_ 1 and c_ 2 initially equal to each other, so the array a already has balanced remainders.",
    "topics": [
      "brute force",
      "constructive algorithms",
      "math"
    ],
    "id": "1490B"
  },
  {
    "title": "Dense Array",
    "url": "https://codeforces.com/problemset/problem/1490/A",
    "history": "Polycarp calls an array dense if the greater of any two adjacent elements is not more than twice bigger than the smaller. More formally, for any i ( 1 \u2264 i \u2264 n- 1 ) , this condition must be satisfied: max( a[ i] , a[ i+ 1] ) / min( a[ i] , a[ i+ 1] ) \u2264 2 For example, the arrays [ 1, 2, 3, 4, 3] , [ 1, 1, 1] and [ 5, 10] are dense. And the arrays [ 5, 11] , [ 1, 4, 2] , [ 6, 6, 1] are not dense. You are given an array a of n integers. What is the minimum number of numbers you need to add to an array to make it dense? You can insert numbers anywhere in the array. If the array is already dense, no numbers need to be added. For example, if a= [ 4, 2, 10, 1] , then the answer is 5 , and the array itself after inserting elements into it may look like this: a= [ 4, 2, 3, 5, 10, 6, 4, 2, 1] ( there are other ways to build such a ) .",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 1000 ) . Then t test cases follow. The first line of each test case contains one integer n ( 2 \u2264 n \u2264 50 ) \u2014 the length of the array a . The next line contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 50 ) .",
    "output": "For each test case, output one integer \u2014 the minimum number of numbers that must be added to the array to make it dense.",
    "note": "The first test case is explained in the statements. In the second test case, you can insert one element, a= [ 1, 2, 3] . In the third test case, you can insert two elements, a= [ 6, 4, 2, 1] . In the fourth test case, you can insert one element, a= [ 1, 2, 4, 2] . In the fifth test case, the array a is already dense.",
    "topics": [
      "greedy",
      "math"
    ],
    "id": "1490A"
  },
  {
    "title": "Flower Shop",
    "url": "https://codeforces.com/problemset/problem/1488/J",
    "history": "Your friend is running a flower shop. In order to be prepared for the next holidays ( when, as usual, sales skyrocket) she asked you to write her a special program that will help to analyze the stocks she has. There are n different types of flowers she can order and each flower of the type i costs w_ i . The last holidays were a great success, she sold all flowers she had, so right now all her stocks are empty. From this point, she starts routine operations of ordering and selling flowers, while trying to analyze what she has at hand. All of this can be represented as m queries of three types: \" 1 i c \" \u2014 she bought c flowers of type i ; \" 2 i c \" \u2014 she disposed of c flowers of type i ; \" 3 l r k \" \u2014 how many variants of bouquets she can make using only flowers of types l, l + 1, . . . , r with the total cost no more than k . For simplicity, you can think that a bouquet is a multiset of flowers, and two bouquets are different if they are different as multisets. The cost of a bouquet is the sum of all flowers it has. Help your friend and write the program that can process all these queries.",
    "input": "The first line contains two integers n and m ( 1 \u2264 n \u2264 1000 ; 1 \u2264 m \u2264 1000 ) \u2014 the number of flower types and the number of queries. The second line contains n integers w_ 1, w_ 2, . . . , w_ n ( 1 \u2264 w_ i \u2264 1000 ) \u2014 the cost of one flower of each type. The next m lines contains queries \u2014 one per line. Each query has one of three types: 1 i c ( 1 \u2264 i \u2264 n ; 1 \u2264 c \u2264 5000 ) ; 2 i c ( 1 \u2264 i \u2264 n ; 1 \u2264 c \u2264 5000 ) . It' s guaranteed that there are at least c flowers of type i at this moment; 3 l r k ( 1 \u2264 l \u2264 r \u2264 n ; 1 \u2264 k \u2264 5000 ) It' s guaranteed that the total cost of all flowers in stock after each query doesn' t exceed 5000 .",
    "output": "For each query of the third type, print how many variants of bouquets she can make using only flowers of types l, l + 1, . . . , r with the total cost no more than k . Since the answer may be too large, print it modulo 998 244 353 .",
    "note": "",
    "topics": [
      "*special",
      "data structures",
      "fft",
      "math"
    ],
    "id": "1488J"
  },
  {
    "title": "Two Policemen",
    "url": "https://codeforces.com/problemset/problem/1488/C",
    "history": "There is a street that can be represented as an array of length n . There are two policemen patrolling a street: the first one is standing at the point x of the street and the second one is standing at the point y of the street. During one minute, both policemen can decide what to do ( independently) : move left ( if the current position is greater than 1 ) , move right ( if the current position is less than n ) , or do nothing. The street is considered clear if each point of the street is visited by at least one policeman. Your task is to find the minimum number of minutes the policemen need to visit each point of the street ( again, each point should be visited by at least one of them) . You have to answer t independent test cases.",
    "input": "The first line of the input contains one integer t ( 1 \u2264 t \u2264 2 \u00b7 10^ 4 ) \u2014 the number of test cases. Then t test cases follow. The only line of the test case contains three integers n , x and y ( 2 \u2264 n \u2264 10^ 6 ; 1 \u2264 x, y \u2264 n ; x y ) \u2014 the length of the street, the position of the first policeman and the position of the second policeman, respectively. It is guaranteed that the sum of n does not exceed 10^ 6 ( \u2211 n \u2264 10^ 6 ) .",
    "output": "For each test case, print one integer \u2014 the minimum number of minutes the policemen need to visit each point of the street.",
    "note": "",
    "topics": [
      "*special",
      "binary search",
      "brute force",
      "math"
    ],
    "id": "1488C"
  },
  {
    "title": "From Zero To Y",
    "url": "https://codeforces.com/problemset/problem/1488/A",
    "history": "You are given two positive ( greater than zero) integers x and y . There is a variable k initially set to 0 . You can perform the following two types of operations: add 1 to k ( i. e. assign k : = k + 1 ) ; add x \u00b7 10^ p to k for some non- negative p ( i. e. assign k : = k + x \u00b7 10^ p for some p \u2265 0 ) . Find the minimum number of operations described above to set the value of k to y .",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 2 \u00b7 10^ 4 ) \u2014 the number of test cases. Each test case consists of one line containing two integer x and y ( 1 \u2264 x, y \u2264 10^ 9 ) .",
    "output": "For each test case, print one integer \u2014 the minimum number of operations to set the value of k to y .",
    "note": "In the first test case you can use the following sequence of operations: add 1 ; add 2 \u00b7 10^ 0 = 2 ; add 2 \u00b7 10^ 0 = 2 ; add 2 \u00b7 10^ 0 = 2 . 1 + 2 + 2 + 2 = 7 . In the second test case you can use the following sequence of operations: add 3 \u00b7 10^ 1 = 30 ; add 3 \u00b7 10^ 0 = 3 ; add 3 \u00b7 10^ 0 = 3 ; add 3 \u00b7 10^ 0 = 3 ; add 3 \u00b7 10^ 0 = 3 . 30 + 3 + 3 + 3 + 3 = 42 .",
    "topics": [
      "*special",
      "math"
    ],
    "id": "1488A"
  },
  {
    "title": "String Counting",
    "url": "https://codeforces.com/problemset/problem/1487/G",
    "history": "You have c_ 1 letters ' a' , c_ 2 letters ' b' , . . . , c_ 26 letters ' z' . You want to build a beautiful string of length n from them ( obviously, you cannot use the i - th letter more than c_ i times) . Each c_ i is greater than n/ 3 . A string is called beautiful if there are no palindromic contiguous substrings of odd length greater than 1 in it. For example, the string \" abacaba\" is not beautiful, it has several palindromic substrings of odd length greater than 1 ( for example, \" aca\" ) . Another example: the string \" abcaa\" is beautiful. Calculate the number of different strings you can build, and print the answer modulo 998244353 .",
    "input": "The first line contains one integer n ( 3 \u2264 n \u2264 400 ) . The second line contains 26 integers c_ 1 , c_ 2 , . . . , c_ 26 ( n/ 3 < c_ i \u2264 n ) .",
    "output": "Print one integer \u2014 the number of strings you can build, taken modulo 998244353 .",
    "note": "",
    "topics": [
      "combinatorics",
      "dp",
      "fft",
      "math"
    ],
    "id": "1487G"
  },
  {
    "title": "Pythagorean Triples",
    "url": "https://codeforces.com/problemset/problem/1487/D",
    "history": "A Pythagorean triple is a triple of integer numbers ( a, b, c) such that it is possible to form a right triangle with the lengths of the first cathetus, the second cathetus and the hypotenuse equal to a , b and c , respectively. An example of the Pythagorean triple is ( 3, 4, 5) . Vasya studies the properties of right triangles, and he uses a formula that determines if some triple of integers is Pythagorean. Unfortunately, he has forgotten the exact formula; he remembers only that the formula was some equation with squares. So, he came up with the following formula: c = a^ 2 - b . Obviously, this is not the right formula to check if a triple of numbers is Pythagorean. But, to Vasya' s surprise, it actually worked on the triple ( 3, 4, 5) : 5 = 3^ 2 - 4 , so, according to Vasya' s formula, it is a Pythagorean triple. When Vasya found the right formula ( and understood that his formula is wrong) , he wondered: how many are there triples of integers ( a, b, c) with 1 \u2264 a \u2264 b \u2264 c \u2264 n such that they are Pythagorean both according to his formula and the real definition? He asked you to count these triples.",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. Each test case consists of one line containing one integer n ( 1 \u2264 n \u2264 10^ 9 ) .",
    "output": "For each test case, print one integer \u2014 the number of triples of integers ( a, b, c) with 1 \u2264 a \u2264 b \u2264 c \u2264 n such that they are Pythagorean according both to the real definition and to the formula Vasya came up with.",
    "note": "The only Pythagorean triple satisfying c = a^ 2 - b with 1 \u2264 a \u2264 b \u2264 c \u2264 9 is ( 3, 4, 5) ; that' s why the answer for n = 3 is 0 , and the answer for n = 6 ( and for n = 9 ) is 1 .",
    "topics": [
      "binary search",
      "brute force",
      "math",
      "number theory"
    ],
    "id": "1487D"
  },
  {
    "title": "Minimum Ties",
    "url": "https://codeforces.com/problemset/problem/1487/C",
    "history": "A big football championship will occur soon! n teams will compete in it, and each pair of teams will play exactly one game against each other. There are two possible outcomes of a game: the game may result in a tie, then both teams get 1 point; one team might win in a game, then the winning team gets 3 points and the losing team gets 0 points. The score of a team is the number of points it gained during all games that it played. You are interested in a hypothetical situation when all teams get the same score at the end of the championship. A simple example of that situation is when all games result in ties, but you want to minimize the number of ties as well. Your task is to describe a situation ( choose the result of each game) so that all teams get the same score, and the number of ties is the minimum possible.",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 100 ) \u2014 the number of test cases. Then the test cases follow. Each test case is described by one line containing one integer n ( 2 \u2264 n \u2264 100 ) \u2014 the number of teams.",
    "output": "For each test case, print n( n - 1) / 2 integers describing the results of the games in the following order: the first integer should correspond to the match between team 1 and team 2 , the second \u2014 between team 1 and team 3 , then 1 and 4 , . . . , 1 and n , 2 and 3 , 2 and 4 , . . . , 2 and n , and so on, until the game between the team n - 1 and the team n . The integer corresponding to the game between the team x and the team y should be 1 if x wins, - 1 if y wins, or 0 if the game results in a tie. All teams should get the same score, and the number of ties should be the minimum possible. If there are multiple optimal answers, print any of them. It can be shown that there always exists a way to make all teams have the same score.",
    "note": "In the first test case of the example, both teams get 1 point since the game between them is a tie. In the second test case of the example, team 1 defeats team 2 ( team 1 gets 3 points) , team 1 loses to team 3 ( team 3 gets 3 points) , and team 2 wins against team 3 ( team 2 gets 3 points) .",
    "topics": [
      "brute force",
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "greedy",
      "implementation",
      "math"
    ],
    "id": "1487C"
  },
  {
    "title": "Cat Cycle",
    "url": "https://codeforces.com/problemset/problem/1487/B",
    "history": "Suppose you are living with two cats: A and B. There are n napping spots where both cats usually sleep. Your cats like to sleep and also like all these spots, so they change napping spot each hour cyclically: Cat A changes its napping place in order: n, n - 1, n - 2, . . . , 3, 2, 1, n, n - 1, . . . In other words, at the first hour it' s on the spot n and then goes in decreasing order cyclically; Cat B changes its napping place in order: 1, 2, 3, . . . , n - 1, n, 1, 2, . . . In other words, at the first hour it' s on the spot 1 and then goes in increasing order cyclically. The cat B is much younger, so they have a strict hierarchy: A and B don' t lie together. In other words, if both cats' d like to go in spot x then the A takes this place and B moves to the next place in its order ( if x < n then to x + 1 , but if x = n then to 1 ) . Cat B follows his order, so it won' t return to the skipped spot x after A frees it, but will move to the spot x + 2 and so on. Calculate, where cat B will be at hour k ?",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. The first and only line of each test case contains two integers n and k ( 2 \u2264 n \u2264 10^ 9 ; 1 \u2264 k \u2264 10^ 9 ) \u2014 the number of spots and hour k .",
    "output": "For each test case, print one integer \u2014 the index of the spot where cat B will sleep at hour k .",
    "note": "In the first and second test cases n = 2 , so: at the 1 - st hour, A is on spot 2 and B is on 1 ; at the 2 - nd hour, A moves to spot 1 and B \u2014 to 2 . If n = 3 then: at the 1 - st hour, A is on spot 3 and B is on 1 ; at the 2 - nd hour, A moves to spot 2 ; B' d like to move from 1 to 2 , but this spot is occupied, so it moves to 3 ; at the 3 - rd hour, A moves to spot 1 ; B also would like to move from 3 to 1 , but this spot is occupied, so it moves to 2 . In the sixth test case: A' s spots at each hour are [ 5, 4, 3, 2, 1] ; B' s spots at each hour are [ 1, 2, 4, 5, 2] .",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "1487B"
  },
  {
    "title": "Multiples and Power Differences",
    "url": "https://codeforces.com/problemset/problem/1485/D",
    "history": "You are given a matrix a consisting of positive integers. It has n rows and m columns. Construct a matrix b consisting of positive integers. It should have the same size as a , and the following conditions should be met: 1 \u2264 b_ i, j\u2264 10^ 6 ; b_ i, j is a multiple of a_ i, j ; the absolute value of the difference between numbers in any adjacent pair of cells ( two cells that share the same side) in b is equal to k^ 4 for some integer k \u2265 1 ( k is not necessarily the same for all pairs, it is own for each pair) . We can show that the answer always exists.",
    "input": "The first line contains two integers n and m ( 2 \u2264 n, m \u2264 500 ) . Each of the following n lines contains m integers. The j - th integer in the i - th line is a_ i, j ( 1 \u2264 a_ i, j\u2264 16 ) .",
    "output": "The output should contain n lines each containing m integers. The j - th integer in the i - th line should be b_ i, j .",
    "note": "In the first example, the matrix a can be used as the matrix b , because the absolute value of the difference between numbers in any adjacent pair of cells is 1 = 1^ 4 . In the third example: 327 is a multiple of 3 , 583 is a multiple of 11 , 408 is a multiple of 12 , 664 is a multiple of 8 ; | 408 - 327| = 3^ 4 , | 583 - 327| = 4^ 4 , | 664 - 408| = 4^ 4 , | 664 - 583| = 3^ 4 .",
    "topics": [
      "constructive algorithms",
      "graphs",
      "math",
      "number theory"
    ],
    "id": "1485D"
  },
  {
    "title": "Floor and Mod",
    "url": "https://codeforces.com/problemset/problem/1485/C",
    "history": "A pair of positive integers ( a, b) is called special if \u230aa/ b\u230b = a b . Here, \u230aa/ b\u230b is the result of the integer division between a and b , while a b is its remainder. You are given two integers x and y . Find the number of special pairs ( a, b) such that 1\u2264 a \u2264 x and 1 \u2264 b \u2264 y .",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 100 ) \u2014 the number of test cases. The only line of the description of each test case contains two integers x , y ( 1 \u2264 x, y \u2264 10^ 9 ) .",
    "output": "For each test case print the answer on a single line.",
    "note": "In the first test case, the only special pair is ( 3, 2) . In the second test case, there are no special pairs. In the third test case, there are two special pairs: ( 3, 2) and ( 4, 3) .",
    "topics": [
      "binary search",
      "brute force",
      "math",
      "number theory"
    ],
    "id": "1485C"
  },
  {
    "title": "Replace and Keep Sorted",
    "url": "https://codeforces.com/problemset/problem/1485/B",
    "history": "Given a positive integer k , two arrays are called k - similar if: they are strictly increasing; they have the same length; all their elements are positive integers between 1 and k ( inclusive) ; they differ in exactly one position. You are given an integer k , a strictly increasing array a and q queries. For each query, you are given two integers l_ i \u2264 r_ i . Your task is to find how many arrays b exist, such that b is k - similar to array [ a_ l_ i, a_ l_ i+ 1. . . , a_ r_ i] .",
    "input": "The first line contains three integers n , q and k ( 1\u2264 n, q \u2264 10^ 5 , n\u2264 k \u2264 10^ 9 ) \u2014 the length of array a , the number of queries and number k . The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 k ) . This array is strictly increasing \u2014 a_ 1 < a_ 2 < . . . < a_ n . Each of the following q lines contains two integers l_ i , r_ i ( 1 \u2264 l_ i \u2264 r_ i \u2264 n ) .",
    "output": "Print q lines. The i - th of them should contain the answer to the i - th query.",
    "note": "In the first example: In the first query there are 4 arrays that are 5 - similar to [ 2, 4] : [ 1, 4] , [ 3, 4] , [ 2, 3] , [ 2, 5] . In the second query there are 3 arrays that are 5 - similar to [ 4, 5] : [ 1, 5] , [ 2, 5] , [ 3, 5] .",
    "topics": [
      "dp",
      "implementation",
      "math"
    ],
    "id": "1485B"
  },
  {
    "title": "Add and Divide",
    "url": "https://codeforces.com/problemset/problem/1485/A",
    "history": "You have two positive integers a and b . You can perform two kinds of operations: a = \u230aa/ b\u230b ( replace a with the integer part of the division between a and b ) b= b+ 1 ( increase b by 1 ) Find the minimum number of operations required to make a= 0 .",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 100 ) \u2014 the number of test cases. The only line of the description of each test case contains two integers a , b ( 1 \u2264 a, b \u2264 10^ 9 ) .",
    "output": "For each test case, print a single integer: the minimum number of operations required to make a= 0 .",
    "note": "In the first test case, one of the optimal solutions is: Divide a by b . After this operation a = 4 and b = 2 . Divide a by b . After this operation a = 2 and b = 2 . Increase b . After this operation a = 2 and b = 3 . Divide a by b . After this operation a = 0 and b = 3 .",
    "topics": [
      "brute force",
      "greedy",
      "math",
      "number theory"
    ],
    "id": "1485A"
  },
  {
    "title": "Restore Modulo",
    "url": "https://codeforces.com/problemset/problem/1482/B",
    "history": "For the first place at the competition, Alex won many arrays of integers and was assured that these arrays are very expensive. After the award ceremony Alex decided to sell them. There is a rule in arrays pawnshop: you can sell array only if it can be compressed to a generator. This generator takes four non- negative numbers n , m , c , s . n and m must be positive, s non- negative and for c it must be true that 0 \u2264 c < m . The array a of length n is created according to the following rules: a_ 1 = s m , here x y denotes remainder of the division of x by y ; a_ i = ( a_ i- 1 + c) m for all i such that 1 < i \u2264 n . For example, if n = 5 , m = 7 , c = 4 , and s = 10 , then a = [ 3, 0, 4, 1, 5] . Price of such an array is the value of m in this generator. Alex has a question: how much money he can get for each of the arrays. Please, help him to understand for every array whether there exist four numbers n , m , c , s that generate this array. If yes, then maximize m .",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 5 ) \u2014 the number of arrays. The first line of array description contains a single integer n ( 1 \u2264 n \u2264 10^ 5 ) \u2014 the size of this array. The second line of array description contains n integers a_ 1, a_ 2, . . . , a_ n ( 0 \u2264 a_ i \u2264 10^ 9 ) \u2014 elements of the array. It is guaranteed that the sum of array sizes does not exceed 10^ 5 .",
    "output": "For every array print: - 1 , if there are no such four numbers that generate this array; 0 , if m can be arbitrary large; the maximum value m and any appropriate c ( 0 \u2264 c < m ) in other cases.",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": "1482B"
  },
  {
    "title": "Prison Break",
    "url": "https://codeforces.com/problemset/problem/1482/A",
    "history": "Michael is accused of violating the social distancing rules and creating a risk of spreading coronavirus. He is now sent to prison. Luckily, Michael knows exactly what the prison looks like from the inside, especially since it' s very simple. The prison can be represented as a rectangle a\u00d7 b which is divided into ab cells, each representing a prison cell, common sides being the walls between cells, and sides on the perimeter being the walls leading to freedom. Before sentencing, Michael can ask his friends among the prison employees to make ( very well hidden) holes in some of the walls ( including walls between cells and the outermost walls) . Michael wants to be able to get out of the prison after this, no matter which cell he is placed in. However, he also wants to break as few walls as possible. Your task is to find out the smallest number of walls to be broken so that there is a path to the outside from every cell after this.",
    "input": "The first line contains a single integer t ( 1\u2264 t\u2264 100 ) \u2014 the number of test cases. Each of the following t lines contains two integers a and b ( 1\u2264 a, b\u2264 100 ) , representing a corresponding test case.",
    "output": "For each test case print the single integer on a separate line \u2014 the answer to the problem.",
    "note": "Some possible escape plans for the example test cases are shown below. Broken walls are shown in gray, not broken walls are shown in black.",
    "topics": [
      "math"
    ],
    "id": "1482A"
  },
  {
    "title": "School Clubs",
    "url": "https://codeforces.com/problemset/problem/1479/E",
    "history": "In Homer' s school, there are n students who love clubs. Initially, there are m clubs, and each of the n students is in exactly one club. In other words, there are a_ i students in the i - th club for 1 \u2264 i \u2264 m and a_ 1+ a_ 2+ . . . + a_ m = n . The n students are so unfriendly that every day one of them ( chosen uniformly at random from all of the n students) gets angry. The student who gets angry will do one of the following things. With probability 1/ 2 , he leaves his current club, then creates a new club himself and joins it. There is only one student ( himself) in the new club he creates. With probability 1/ 2 , he does not create new clubs. In this case, he changes his club to a new one ( possibly the same club he is in currently) with probability proportional to the number of students in it. Formally, suppose there are k clubs and there are b_ i students in the i - th club for 1 \u2264 i \u2264 k ( before the student gets angry) . He leaves his current club, and then joins the i - th club with probability b_ i/ n . We note that when a club becomes empty, students will never join it because any student who gets angry will join an empty club with probability 0 according to the above statement. Homer wonders the expected number of days until every student is in the same club for the first time. We can prove that the answer can be represented as a rational number p/ q with ( p, q) = 1 . Therefore, you are asked to find the value of pq^ - 1 998 244 353 . It can be shown that q 998 244 353 = \u0338 0 under the given constraints of the problem.",
    "input": "The first line contains an integer m ( 1 \u2264 m \u2264 1000 ) \u2014 the number of clubs initially. The second line contains m integers a_ 1, a_ 2, . . . , a_ m ( 1 \u2264 a_ i \u2264 4 \u00b7 10^ 8 ) with 1 \u2264 a_ 1+ a_ 2+ . . . + a_ m \u2264 4 \u00b7 10^ 8 , where a_ i denotes the number of students in the i - th club initially.",
    "output": "Print one integer \u2014 the expected number of days until every student is in the same club for the first time, modulo 998 244 353 .",
    "note": "In the first example, no matter which student gets angry, the two students will become in the same club with probability 1/ 4 . So the expected number of days until every student is in the same club should be 4 . In the second example, we note that in the first day: The only student in the first club will get angry with probability 1/ 3 . If he gets angry, then he will create a new club and join it with probability 1/ 2 ( In this case, there will be three clubs which have 0, 1, 2 students in it, respectively) , leave his current club and join the second club with probability 1/ 2\u00b72/ 3 = 1/ 3 , or stay still with probability 1/ 2\u00b71/ 3 = 1/ 6 ; Each of the two students in the second club will get angry with probability 1/ 3 . If one of them gets angry, then he will create a new club and join it with probability 1/ 2 , leave his current club and join the second club with probability 1/ 2\u00b71/ 3 = 1/ 6 , or stay still with probability 1/ 2\u00b72/ 3 = 1/ 3 . In the fourth example, there is only one club initially. That is, every student has already been in the same club. So the answer is 0 .",
    "topics": [
      "dp",
      "fft",
      "math",
      "number theory",
      "probabilities"
    ],
    "id": "1479E"
  },
  {
    "title": "Nezzar and Symmetric Array",
    "url": "https://codeforces.com/problemset/problem/1478/C",
    "history": "Long time ago there was a symmetric array a_ 1, a_ 2, . . . , a_ 2n consisting of 2n distinct integers. Array a_ 1, a_ 2, . . . , a_ 2n is called symmetric if for each integer 1 \u2264 i \u2264 2n , there exists an integer 1 \u2264 j \u2264 2n such that a_ i = - a_ j . For each integer 1 \u2264 i \u2264 2n , Nezzar wrote down an integer d_ i equal to the sum of absolute differences from a_ i to all integers in a , i. e. d_ i = \u2211_ j = 1^ 2n| a_ i - a_ j| . Now a million years has passed and Nezzar can barely remember the array d and totally forget a . Nezzar wonders if there exists any symmetric array a consisting of 2n distinct integers that generates the array d .",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 5 ) \u2014 the number of test cases. The first line of each test case contains a single integer n ( 1 \u2264 n \u2264 10^ 5 ) . The second line of each test case contains 2n integers d_ 1, d_ 2, . . . , d_ 2n ( 0 \u2264 d_ i \u2264 10^ 12 ) . It is guaranteed that the sum of n over all test cases does not exceed 10^ 5 .",
    "output": "For each test case, print \" YES\" in a single line if there exists a possible array a . Otherwise, print \" NO\" . You can print letters in any case ( upper or lower) .",
    "note": "In the first test case, a= [ 1, - 3, - 1, 3] is one possible symmetric array that generates the array d= [ 8, 12, 8, 12] . In the second test case, it can be shown that there is no symmetric array consisting of distinct integers that can generate array d .",
    "topics": [
      "implementation",
      "math",
      "sortings"
    ],
    "id": "1478C"
  },
  {
    "title": "Nezzar and Lucky Number",
    "url": "https://codeforces.com/problemset/problem/1478/B",
    "history": "Nezzar' s favorite digit among 1, . . . , 9 is d . He calls a positive integer lucky if d occurs at least once in its decimal representation. Given q integers a_ 1, a_ 2, . . . , a_ q , for each 1 \u2264 i \u2264 q Nezzar would like to know if a_ i can be equal to a sum of several ( one or more) lucky numbers.",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 9 ) \u2014 the number of test cases. The first line of each test case contains two integers q and d ( 1 \u2264 q \u2264 10^ 4 , 1 \u2264 d \u2264 9 ) . The second line of each test case contains q integers a_ 1, a_ 2, . . . , a_ q ( 1 \u2264 a_ i \u2264 10^ 9 ) .",
    "output": "For each integer in each test case, print \" YES\" in a single line if a_ i can be equal to a sum of lucky numbers. Otherwise, print \" NO\" . You can print letters in any case ( upper or lower) .",
    "note": "In the first test case, 24 = 17 + 7 , 27 itself is a lucky number, 25 cannot be equal to a sum of lucky numbers.",
    "topics": [
      "brute force",
      "dp",
      "greedy",
      "math"
    ],
    "id": "1478B"
  },
  {
    "title": "Nezzar and Chocolate Bars",
    "url": "https://codeforces.com/problemset/problem/1477/F",
    "history": "Nezzar buys his favorite snack \u2014 n chocolate bars with lengths l_ 1, l_ 2, . . . , l_ n . However, chocolate bars might be too long to store them properly! In order to solve this problem, Nezzar designs an interesting process to divide them into small pieces. Firstly, Nezzar puts all his chocolate bars into a black box. Then, he will perform the following operation repeatedly until the maximum length over all chocolate bars does not exceed k . Nezzar picks a chocolate bar from the box with probability proportional to its length x . After step 1 , Nezzar uniformly picks a real number r \u2208 ( 0, x) and divides the chosen chocolate bar into two chocolate bars with lengths r and x- r . Lastly, he puts those two new chocolate bars into the black box. Nezzar now wonders, what is the expected number of operations he will perform to divide his chocolate bars into small pieces. It can be shown that the answer can be represented as P/ Q , where P and Q are coprime integers and Q \u2261\u03380 ( 998 244 353 ) . Print the value of P\u00b7 Q^ - 1 998 244 353 .",
    "input": "The first line contains two integers n and k ( 1 \u2264 n \u2264 50, 1 \u2264 k \u2264 2000 ) . The second line contains n integers l_ 1, l_ 2, . . . , l_ n ( 1 \u2264 l_ i , \u2211_ i= 1^ n l_ i \u2264 2000 ) .",
    "output": "Print a single integer \u2014 the expected number of operations Nezzar will perform to divide his chocolate bars into small pieces modulo 998 244 353 .",
    "note": "",
    "topics": [
      "combinatorics",
      "fft",
      "math",
      "probabilities"
    ],
    "id": "1477F"
  },
  {
    "title": "Nezzar and Nice Beatmap",
    "url": "https://codeforces.com/problemset/problem/1477/C",
    "history": "Nezzar loves the game osu! . osu! is played on beatmaps, which can be seen as an array consisting of distinct points on a plane. A beatmap is called nice if for any three consecutive points A, B, C listed in order, the angle between these three points, centered at B , is strictly less than 90 degrees. Points A, B, C on the left have angle less than 90 degrees, so they can be three consecutive points of a nice beatmap; Points A' , B' , C' on the right have angle greater or equal to 90 degrees, so they cannot be three consecutive points of a nice beatmap. Now Nezzar has a beatmap of n distinct points A_ 1, A_ 2, . . . , A_ n . Nezzar would like to reorder these n points so that the resulting beatmap is nice. Formally, you are required to find a permutation p_ 1, p_ 2, . . . , p_ n of integers from 1 to n , such that beatmap A_ p_ 1, A_ p_ 2, . . . , A_ p_ n is nice. If it is impossible, you should determine it.",
    "input": "The first line contains a single integer n ( 3 \u2264 n \u2264 5000 ) . Then n lines follow, i - th of them contains two integers x_ i , y_ i ( - 10^ 9 \u2264 x_ i, y_ i \u2264 10^ 9 ) \u2014 coordinates of point A_ i . It is guaranteed that all points are distinct.",
    "output": "If there is no solution, print - 1 . Otherwise, print n integers, representing a valid permutation p . If there are multiple possible answers, you can print any.",
    "note": "Here is the illustration for the first test: Please note that the angle between A_ 1 , A_ 2 and A_ 5 , centered at A_ 2 , is treated as 0 degrees. However, angle between A_ 1 , A_ 5 and A_ 2 , centered at A_ 5 , is treated as 180 degrees.",
    "topics": [
      "constructive algorithms",
      "geometry",
      "greedy",
      "math",
      "sortings"
    ],
    "id": "1477C"
  },
  {
    "title": "Nezzar and Board",
    "url": "https://codeforces.com/problemset/problem/1477/A",
    "history": "n distinct integers x_ 1, x_ 2, . . . , x_ n are written on the board. Nezzar can perform the following operation multiple times. Select two integers x, y ( not necessarily distinct) on the board, and write down 2x- y . Note that you don' t remove selected numbers. Now, Nezzar wonders if it is possible to have his favorite number k on the board after applying above operation multiple times.",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 5 ) \u2014 the number of test cases. The first line of each test case contains two integers n, k ( 2 \u2264 n \u2264 2 \u00b7 10^ 5 , - 10^ 18\u2264 k \u2264 10^ 18 ) . The second line of each test case contains n distinct integers x_ 1, x_ 2, . . . , x_ n ( - 10^ 18\u2264 x_ i \u2264 10^ 18 ) . It is guaranteed that the sum of n for all test cases does not exceed 2 \u00b7 10^ 5 .",
    "output": "For each test case, print \" YES\" on a single line if it is possible to have k on the board. Otherwise, print \" NO\" . You can print each letter in any case ( upper or lower) .",
    "note": "In the first test case, the number 1 is already on the board. In the second test case, Nezzar could perform the following operations to write down k= 0 on the board: Select x= 3 and y= 2 and write down 4 on the board. Select x= 4 and y= 7 and write down 1 on the board. Select x= 1 and y= 2 and write down 0 on the board. In the third test case, it is impossible to have the number k = - 1 on the board.",
    "topics": [
      "constructive algorithms",
      "math",
      "number theory"
    ],
    "id": "1477A"
  },
  {
    "title": "Inflation",
    "url": "https://codeforces.com/problemset/problem/1476/B",
    "history": "You have a statistic of price changes for one product represented as an array of n positive integers p_ 0, p_ 1, . . . , p_ n - 1 , where p_ 0 is the initial price of the product and p_ i is how the price was increased during the i - th month. Using these price changes you are asked to calculate the inflation coefficients for each month as the ratio of current price increase p_ i to the price at the start of this month ( p_ 0 + p_ 1 + . . . + p_ i - 1) . Your boss said you clearly that the inflation coefficients must not exceed k",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 1000 ) \u2014 the number of test cases. The first line of each test case contains two integers n and k ( 2 \u2264 n \u2264 100 ; 1 \u2264 k \u2264 100 ) \u2014 the length of array p and coefficient k . The second line of each test case contains n integers p_ 0, p_ 1, . . . , p_ n - 1 ( 1 \u2264 p_ i \u2264 10^ 9 ) \u2014 the array p .",
    "output": "For each test case, print the minimum total sum of changes you need to make all inflation coefficients not more than k",
    "note": "In the first test case, you can, for example, increase p_ 0 by 50 and p_ 1 by 49 and get array [ 20150, 50, 202, 202] . Then you get the next inflation coefficients: 50/ 20150\u22641/ 100 ; 202/ 20150 + 50\u22641/ 100 ; 202/ 20200 + 202\u22641/ 100 ; In the second test case, you don' t need to modify array p , since the inflation coefficients are already good: 1/ 1\u2264100/ 100 ; 1/ 1 + 1\u2264100/ 100 ;",
    "topics": [
      "binary search",
      "brute force",
      "greedy",
      "math"
    ],
    "id": "1476B"
  },
  {
    "title": "K-divisible Sum",
    "url": "https://codeforces.com/problemset/problem/1476/A",
    "history": "You are given two integers n and k . You should create an array of n positive integers a_ 1, a_ 2, . . . , a_ n such that the sum ( a_ 1 + a_ 2 + . . . + a_ n) is divisible by k and maximum element in a is minimum possible. What is the minimum possible maximum element in a ?",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 1000 ) \u2014 the number of test cases. The first and only line of each test case contains two integers n and k ( 1 \u2264 n \u2264 10^ 9 ; 1 \u2264 k \u2264 10^ 9 ) .",
    "output": "For each test case, print one integer \u2014 the minimum possible maximum element in array a such that the sum ( a_ 1 + . . . + a_ n) is divisible by k .",
    "note": "In the first test case n = 1 , so the array consists of one element a_ 1 and if we make a_ 1 = 5 it will be divisible by k = 5 and the minimum possible. In the second test case, we can create array a = [ 1, 2, 1, 2] . The sum is divisible by k = 3 and the maximum is equal to 2 . In the third test case, we can create array a = [ 1, 1, 1, 1, 1, 1, 1, 1] . The sum is divisible by k = 8 and the maximum is equal to 1 .",
    "topics": [
      "binary search",
      "constructive algorithms",
      "greedy",
      "math"
    ],
    "id": "1476A"
  },
  {
    "title": "Strange Beauty",
    "url": "https://codeforces.com/problemset/problem/1475/G",
    "history": "Polycarp found on the street an array a of n elements. Polycarp invented his criterion for the beauty of an array. He calls an array a beautiful if at least one of the following conditions must be met for each different pair of indices i j : a_ i is divisible by a_ j ; or a_ j is divisible by a_ i . For example, if: n= 5 and a= [ 7, 9, 3, 14, 63] , then the a array is not beautiful ( for i= 4 and j= 2 , none of the conditions above is met) ; n= 3 and a= [ 2, 14, 42] , then the a array is beautiful; n= 4 and a= [ 45, 9, 3, 18] , then the a array is not beautiful ( for i= 1 and j= 4 none of the conditions above is met) ; Ugly arrays upset Polycarp, so he wants to remove some elements from the array a so that it becomes beautiful. Help Polycarp determine the smallest number of elements to remove to make the array a beautiful.",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 10 ) \u2014 the number of test cases. Then t test cases follow. The first line of each test case contains one integer n ( 1 \u2264 n \u2264 2 \u00b7 10^ 5 ) \u2014 the length of the array a . The second line of each test case contains n numbers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 2 \u00b7 10^ 5 ) \u2014 elements of the array a .",
    "output": "For each test case output one integer \u2014 the minimum number of elements that must be removed to make the array a beautiful.",
    "note": "In the first test case, removing 7 and 14 will make array a beautiful. In the second test case, the array a is already beautiful. In the third test case, removing one of the elements 45 or 18 will make the array a beautiful. In the fourth test case, the array a is beautiful.",
    "topics": [
      "dp",
      "math",
      "number theory",
      "sortings"
    ],
    "id": "1475G"
  },
  {
    "title": "Advertising Agency",
    "url": "https://codeforces.com/problemset/problem/1475/E",
    "history": "Masha works in an advertising agency. In order to promote the new brand, she wants to conclude contracts with some bloggers. In total, Masha has connections of n different bloggers. Blogger numbered i has a_ i followers. Since Masha has a limited budget, she can only sign a contract with k different bloggers. Of course, Masha wants her ad to be seen by as many people as possible. Therefore, she must hire bloggers with the maximum total number of followers. Help her, find the number of ways to select k bloggers so that the total number of their followers is maximum possible. Two ways are considered different if there is at least one blogger in the first way, which is not in the second way. Masha believes that all bloggers have different followers ( that is, there is no follower who would follow two different bloggers) . For example, if n= 4 , k= 3 , a= [ 1, 3, 1, 2] , then Masha has two ways to select 3 bloggers with the maximum total number of followers: conclude contracts with bloggers with numbers 1 , 2 and 4 . In this case, the number of followers will be equal to a_ 1 + a_ 2 + a_ 4 = 6 . conclude contracts with bloggers with numbers 2 , 3 and 4 . In this case, the number of followers will be equal to a_ 2 + a_ 3 + a_ 4 = 6 . Since the answer can be quite large, output it modulo 10^ 9+ 7 .",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 1000 ) \u2014 the number of test cases. Then t test cases follow. The first line of each test case contains two integers n and k ( 1 \u2264 k \u2264 n \u2264 1000 ) \u2014 the number of bloggers and how many of them you can sign a contract with. The second line of each test case contains n integers a_ 1, a_ 2, . . . a_ n ( 1 \u2264 a_ i \u2264 n ) \u2014 the number of followers of each blogger. It is guaranteed that the sum of n over all test cases does not exceed 1000 .",
    "output": "For each test case, on a separate line output one integer \u2014 the number of ways to select k bloggers so that the total number of their followers is maximum possible.",
    "note": "The test case is explained in the statements. In the second test case, the following ways are valid: conclude contracts with bloggers with numbers 1 and 2 . In this case, the number of followers will be equal to a_ 1 + a_ 2 = 2 ; conclude contracts with bloggers with numbers 1 and 3 . In this case, the number of followers will be equal to a_ 1 + a_ 3 = 2 ; conclude contracts with bloggers with numbers 1 and 4 . In this case, the number of followers will be equal to a_ 1 + a_ 4 = 2 ; conclude contracts with bloggers with numbers 2 and 3 . In this case, the number of followers will be equal to a_ 2 + a_ 3 = 2 ; conclude contracts with bloggers with numbers 2 and 4 . In this case, the number of followers will be equal to a_ 2 + a_ 4 = 2 ; conclude contracts with bloggers with numbers 3 and 4 . In this case, the number of followers will be equal to a_ 3 + a_ 4 = 2 . In the third test case, the following ways are valid: concludes a contract with a blogger with the number 2 . In this case, the number of followers will be equal to a_ 2 = 2 .",
    "topics": [
      "combinatorics",
      "math",
      "sortings"
    ],
    "id": "1475E"
  },
  {
    "title": "Ball in Berland",
    "url": "https://codeforces.com/problemset/problem/1475/C",
    "history": "At the school where Vasya is studying, preparations are underway for the graduation ceremony. One of the planned performances is a ball, which will be attended by pairs of boys and girls. Each class must present two couples to the ball. In Vasya' s class, a boys and b girls wish to participate. But not all boys and not all girls are ready to dance in pairs. Formally, you know k possible one- boy- one- girl pairs. You need to choose two of these pairs so that no person is in more than one pair. For example, if a= 3 , b= 4 , k= 4 and the couples ( 1, 2) , ( 1, 3) , ( 2, 2) , ( 3, 4) are ready to dance together ( in each pair, the boy' s number comes first, then the girl' s number) , then the following combinations of two pairs are possible ( not all possible options are listed below) : ( 1, 3) and ( 2, 2) ; ( 3, 4) and ( 1, 3) ; But the following combinations are not possible: ( 1, 3) and ( 1, 2) \u2014 the first boy enters two pairs; ( 1, 2) and ( 2, 2) \u2014 the second girl enters two pairs; Find the number of ways to select two pairs that match the condition above. Two ways are considered different if they consist of different pairs.",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. Then t test cases follow. The first line of each test case contains three integers a , b and k ( 1 \u2264 a, b, k \u2264 2 \u00b7 10^ 5 ) \u2014 the number of boys and girls in the class and the number of couples ready to dance together. The second line of each test case contains k integers a_ 1, a_ 2, . . . a_ k . ( 1 \u2264 a_ i \u2264 a ) , where a_ i is the number of the boy in the pair with the number i . The third line of each test case contains k integers b_ 1, b_ 2, . . . b_ k . ( 1 \u2264 b_ i \u2264 b ) , where b_ i is the number of the girl in the pair with the number i . It is guaranteed that the sums of a , b , and k over all test cases do not exceed 2 \u00b7 10^ 5 . It is guaranteed that each pair is specified at most once in one test case.",
    "output": "For each test case, on a separate line print one integer \u2014 the number of ways to choose two pairs that match the condition above.",
    "note": "In the first test case, the following combinations of pairs fit: ( 1, 2) and ( 3, 4) ; ( 1, 3) and ( 2, 2) ; ( 1, 3) and ( 3, 4) ; ( 2, 2) and ( 3, 4) . There is only one pair in the second test case. In the third test case, the following combinations of pairs fit: ( 1, 1) and ( 2, 2) ; ( 1, 2) and ( 2, 1) .",
    "topics": [
      "combinatorics",
      "graphs",
      "math"
    ],
    "id": "1475C"
  },
  {
    "title": "New Year's Number",
    "url": "https://codeforces.com/problemset/problem/1475/B",
    "history": "Polycarp remembered the 2020 - th year, and he is happy with the arrival of the new 2021 - th year. To remember such a wonderful moment, Polycarp wants to represent the number n as the sum of a certain number of 2020 and a certain number of 2021 . For example, if: n= 4041 , then the number n can be represented as the sum 2020 + 2021 ; n= 4042 , then the number n can be represented as the sum 2021 + 2021 ; n= 8081 , then the number n can be represented as the sum 2020 + 2020 + 2020 + 2021 ; n= 8079 , then the number n cannot be represented as the sum of the numbers 2020 and 2021 . Help Polycarp to find out whether the number n can be represented as the sum of a certain number of numbers 2020 and a certain number of numbers 2021 .",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. Then t test cases follow. Each test case contains one integer n ( 1 \u2264 n \u2264 10^ 6 ) \u2014 the number that Polycarp wants to represent as the sum of the numbers 2020 and 2021 .",
    "output": "For each test case, output on a separate line: \" YES\" if the number n is representable as the sum of a certain number of 2020 and a certain number of 2021 ; \" NO\" otherwise. You can output \" YES\" and \" NO\" in any case ( for example, the strings yEs, yes, Yes and YES will be recognized as positive) .",
    "note": "",
    "topics": [
      "brute force",
      "dp",
      "math"
    ],
    "id": "1475B"
  },
  {
    "title": "Odd Divisor",
    "url": "https://codeforces.com/problemset/problem/1475/A",
    "history": "You are given an integer n . Check if n has an odd divisor, greater than one ( does there exist such a number x ( x > 1 ) that n is divisible by x and x is odd) . For example, if n= 6 , then there is x= 3 . If n= 4 , then such a number does not exist.",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. Then t test cases follow. Each test case contains one integer n ( 2 \u2264 n \u2264 10^ 14 ) . Please note, that the input for some test cases won' t fit into 32 - bit integer type, so you should use at least 64 - bit integer type in your programming language.",
    "output": "For each test case, output on a separate line: \" YES\" if n has an odd divisor, greater than one; \" NO\" otherwise. You can output \" YES\" and \" NO\" in any case ( for example, the strings yEs, yes, Yes and YES will be recognized as positive) .",
    "note": "",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "1475A"
  },
  {
    "title": "1 2 3 4 ...",
    "url": "https://codeforces.com/problemset/problem/1474/F",
    "history": "Igor had a sequence d_ 1, d_ 2, . . . , d_ n of integers. When Igor entered the classroom there was an integer x written on the blackboard. Igor generated sequence p using the following algorithm: initially, p = [ x] ; for each 1 \u2264 i \u2264 n he did the following operation | d_ i| times: if d_ i \u2265 0 , then he looked at the last element of p ( let it be y ) and appended y + 1 to the end of p ; if d_ i < 0 , then he looked at the last element of p ( let it be y ) and appended y - 1 to the end of p . For example, if x = 3 , and d = [ 1, - 1, 2] , p will be equal [ 3, 4, 3, 4, 5] . Igor decided to calculate the length of the longest increasing subsequence of p and the number of them. A sequence a is a subsequence of a sequence b if a can be obtained from b by deletion of several ( possibly, zero or all) elements. A sequence a is an increasing sequence if each element of a ( except the first one) is strictly greater than the previous element. For p = [ 3, 4, 3, 4, 5] , the length of longest increasing subsequence is 3 and there are 3 of them: [ 3, 4, 3, 4, 5] , [ 3, 4, 3, 4, 5] , [ 3, 4, 3, 4, 5] .",
    "input": "The first line contains a single integer n ( 1 \u2264 n \u2264 50 ) \u2014 the length of the sequence d . The second line contains a single integer x ( - 10^ 9 \u2264 x \u2264 10^ 9 ) \u2014 the integer on the blackboard. The third line contains n integers d_ 1, d_ 2, . . . , d_ n ( - 10^ 9 \u2264 d_ i \u2264 10^ 9 ) .",
    "output": "Print two integers: the first integer should be equal to the length of the longest increasing subsequence of p ; the second should be equal to the number of them modulo 998244353 . You should print only the second number modulo 998244353 .",
    "note": "The first test case was explained in the statement. In the second test case p = [ 100, 101, 102, 103, 104, 105, 104, 103, 102, 103, 104, 105, 106, 107, 108] . In the third test case p = [ 1, 2, . . . , 2000000000] .",
    "topics": [
      "dp",
      "math",
      "matrices"
    ],
    "id": "1474F"
  },
  {
    "title": "Cleaning",
    "url": "https://codeforces.com/problemset/problem/1474/D",
    "history": "During cleaning the coast, Alice found n piles of stones. The i - th pile has a_ i stones. Piles i and i + 1 are neighbouring for all 1 \u2264 i \u2264 n - 1 . If pile i becomes empty, piles i - 1 and i + 1 doesn' t become neighbouring. Alice is too lazy to remove these stones, so she asked you to take this duty. She allowed you to do only the following operation: Select two neighboring piles and, if both of them are not empty, remove one stone from each of them. Alice understands that sometimes it' s impossible to remove all stones with the given operation, so she allowed you to use the following superability: Before the start of cleaning, you can select two neighboring piles and swap them. Determine, if it is possible to remove all stones using the superability not more than once.",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. The first line of each test case contains the single integer n ( 2 \u2264 n \u2264 2 \u00b7 10^ 5 ) \u2014 the number of piles. The second line of each test case contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 9 ) \u2014 the number of stones in each pile. It is guaranteed that the total sum of n over all test cases doesn' t exceed 2 \u00b7 10^ 5 .",
    "output": "For each test case, print YES or NO \u2014 is it possible to remove all stones using the superability not more than once or not.",
    "note": "In the first test case, you can remove all stones without using a superability: [ 1, 2, 1] \u2192 [ 1, 1, 0] \u2192 [ 0, 0, 0] . In the second test case, you can apply superability to the second and the third piles and then act like in the first testcase. In the third test case, you can apply superability to the fourth and the fifth piles, thus getting a = [ 2, 2, 2, 3, 1] . In the fourth test case, you can apply superability to the first and the second piles, thus getting a = [ 1900, 2100, 1600, 3000, 1600] .",
    "topics": [
      "data structures",
      "dp",
      "greedy",
      "math"
    ],
    "id": "1474D"
  },
  {
    "title": "Different Divisors",
    "url": "https://codeforces.com/problemset/problem/1474/B",
    "history": "Positive integer x is called divisor of positive integer y , if y is divisible by x without remainder. For example, 1 is a divisor of 7 and 3 is not divisor of 8 . We gave you an integer d and asked you to find the smallest positive integer a , such that a has at least 4 divisors; difference between any two divisors of a is at least d .",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 3000 ) \u2014 the number of test cases. The first line of each test case contains a single integer d ( 1 \u2264 d \u2264 10000 ) .",
    "output": "For each test case print one integer a \u2014 the answer for this test case.",
    "note": "In the first test case, integer 6 have following divisors: [ 1, 2, 3, 6] . There are 4 of them and the difference between any two of them is at least 1 . There is no smaller integer with at least 4 divisors. In the second test case, integer 15 have following divisors: [ 1, 3, 5, 15] . There are 4 of them and the difference between any two of them is at least 2 . The answer 12 is INVALID because divisors are [ 1, 2, 3, 4, 6, 12] . And the difference between, for example, divisors 2 and 3 is less than d= 2 .",
    "topics": [
      "binary search",
      "constructive algorithms",
      "greedy",
      "math",
      "number theory"
    ],
    "id": "1474B"
  },
  {
    "title": "Tiles",
    "url": "https://codeforces.com/problemset/problem/1473/G",
    "history": "Consider a road consisting of several rows. Each row is divided into several rectangular tiles, and all tiles in the same row are equal. The first row contains exactly one rectangular tile. Look at the picture below which shows how the tiles are arranged. The road is constructed as follows: the first row consists of 1 tile; then a_ 1 rows follow; each of these rows contains 1 tile greater than the previous row; then b_ 1 rows follow; each of these rows contains 1 tile less than the previous row; then a_ 2 rows follow; each of these rows contains 1 tile greater than the previous row; then b_ 2 rows follow; each of these rows contains 1 tile less than the previous row; . . . then a_ n rows follow; each of these rows contains 1 tile greater than the previous row; then b_ n rows follow; each of these rows contains 1 tile less than the previous row. An example of the road with n = 2 , a_ 1 = 4 , b_ 1 = 2 , a_ 2 = 2 , b_ 2 = 3 . Rows are arranged from left to right. You start from the only tile in the first row and want to reach the last row ( any tile of it) . From your current tile, you can move to any tile in the next row which touches your current tile. Calculate the number of different paths from the first row to the last row. Since it can be large, print it modulo 998244353 .",
    "input": "The first line contains one integer n ( 1 \u2264 n \u2264 1000 ) . Then n lines follow. The i - th of them contains two integers a_ i and b_ i ( 1 \u2264 a_ i, b_ i \u2264 10^ 5 ; | a_ i - b_ i| \u2264 5 ) . Additional constraint on the input: the sequence of a_ i and b_ i never results in a row with non- positive number of tiles.",
    "output": "Print one integer \u2014 the number of paths from the first row to the last row, taken modulo 998244353 .",
    "note": "",
    "topics": [
      "combinatorics",
      "dp",
      "fft",
      "math"
    ],
    "id": "1473G"
  },
  {
    "title": "Strange Set",
    "url": "https://codeforces.com/problemset/problem/1473/F",
    "history": "Note that the memory limit is unusual. You are given an integer n and two sequences a_ 1, a_ 2, . . . , a_ n and b_ 1, b_ 2, . . . , b_ n . Let' s call a set of integers S such that S \u2286{ 1, 2, 3, . . . , n} strange, if, for every element i of S , the following condition is met: for every j \u2208 [ 1, i - 1] , if a_ j divides a_ i , then j is also included in S . An empty set is always strange. The cost of the set S is \u2211_ i \u2208 S b_ i . You have to calculate the maximum possible cost of a strange set.",
    "input": "The first line contains one integer n ( 1 \u2264 n \u2264 3000 ) . The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 100 ) . The third line contains n integers b_ 1, b_ 2, . . . , b_ n ( - 10^ 5 \u2264 b_ i \u2264 10^ 5 ) .",
    "output": "Print one integer \u2014 the maximum cost of a strange set.",
    "note": "The strange set with the maximum cost in the first example is { 1, 2, 4, 8, 9} . The strange set with the maximum cost in the second example is empty.",
    "topics": [
      "flows",
      "math"
    ],
    "id": "1473F"
  },
  {
    "title": "No More Inversions",
    "url": "https://codeforces.com/problemset/problem/1473/C",
    "history": "You have a sequence a with n elements 1, 2, 3, . . . , k - 1, k, k - 1, k - 2, . . . , k - ( n - k) ( k \u2264 n < 2k ) . Let' s call as inversion in a a pair of indices i < j such that a[ i] > a[ j] . Suppose, you have some permutation p of size k and you build a sequence b of size n in the following manner: b[ i] = p[ a[ i] ] . Your goal is to find such permutation p that the total number of inversions in b doesn' t exceed the total number of inversions in a , and b is lexicographically maximum. Small reminder: the sequence of k integers is called a permutation if it contains all integers from 1 to k exactly once. Another small reminder: a sequence s is lexicographically smaller than another sequence t , if either s is a prefix of t , or for the first i such that s_ i t_ i , s_ i < t_ i holds ( in the first position that these sequences are different, s has smaller number than t ) .",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 1000 ) \u2014 the number of test cases. The first and only line of each test case contains two integers n and k ( k \u2264 n < 2k ; 1 \u2264 k \u2264 10^ 5 ) \u2014 the length of the sequence a and its maximum. It' s guaranteed that the total sum of k over test cases doesn' t exceed 10^ 5 .",
    "output": "For each test case, print k integers \u2014 the permutation p which maximizes b lexicographically without increasing the total number of inversions. It can be proven that p exists and is unique.",
    "note": "In the first test case, the sequence a = [ 1] , there is only one permutation p = [ 1] . In the second test case, the sequence a = [ 1, 2] . There is no inversion in a , so there is only one permutation p = [ 1, 2] which doesn' t increase the number of inversions. In the third test case, a = [ 1, 2, 1] and has 1 inversion. If we use p = [ 2, 1] , then b = [ p[ a[ 1] ] , p[ a[ 2] ] , p[ a[ 3] ] ] = [ 2, 1, 2] and also has 1 inversion. In the fourth test case, a = [ 1, 2, 3, 2] , and since p = [ 1, 3, 2] then b = [ 1, 3, 2, 3] . Both a and b have 1 inversion and b is the lexicographically maximum.",
    "topics": [
      "constructive algorithms",
      "math"
    ],
    "id": "1473C"
  },
  {
    "title": "String LCM",
    "url": "https://codeforces.com/problemset/problem/1473/B",
    "history": "Let' s define a multiplication operation between a string a and a positive integer x : a \u00b7 x is the string that is a result of writing x copies of a one after another. For example, \" abc\" \u00b7 2 = \" abcabc\" , \" a\" \u00b7 5 = \" aaaaa\" . A string a is divisible by another string b if there exists an integer x such that b \u00b7 x = a . For example, \" abababab\" is divisible by \" ab\" , but is not divisible by \" ababab\" or \" aa\" . LCM of two strings s and t ( defined as LCM( s, t) ) is the shortest non- empty string that is divisible by both s and t . You are given two strings s and t . Find LCM( s, t) or report that it does not exist. It can be shown that if LCM( s, t) exists, it is unique.",
    "input": "The first line contains one integer q ( 1 \u2264 q \u2264 2000 ) \u2014 the number of test cases. Each test case consists of two lines, containing strings s and t ( 1 \u2264 | s| , | t| \u2264 20 ) . Each character in each of these strings is either ' a' or ' b' .",
    "output": "For each test case, print LCM( s, t) if it exists; otherwise, print - 1. It can be shown that if LCM( s, t) exists, it is unique.",
    "note": "In the first test case, \" baba\" = \" baba\" \u00b7 1 = \" ba\" \u00b7 2 . In the second test case, \" aaaaaa\" = \" aa\" \u00b7 3 = \" aaa\" \u00b7 2 .",
    "topics": [
      "brute force",
      "math",
      "number theory",
      "strings"
    ],
    "id": "1473B"
  },
  {
    "title": "Replacing Elements",
    "url": "https://codeforces.com/problemset/problem/1473/A",
    "history": "You have an array a_ 1, a_ 2, . . . , a_ n . All a_ i are positive integers. In one step you can choose three distinct indices i , j , and k ( i = \u0338 j ; i = \u0338 k ; j = \u0338 k ) and assign the sum of a_ j and a_ k to a_ i , i. e. make a_ i = a_ j + a_ k . Can you make all a_ i lower or equal to d using the operation above any number of times ( possibly, zero) ?",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 2000 ) \u2014 the number of test cases. The first line of each test case contains two integers n and d ( 3 \u2264 n \u2264 100 ; 1 \u2264 d \u2264 100 ) \u2014 the number of elements in the array a and the value d . The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 100 ) \u2014 the array a .",
    "output": "For each test case, print YES, if it' s possible to make all elements a_ i less or equal than d using the operation above. Otherwise, print NO. You may print each letter in any case ( for example, YES, Yes, yes, yEs will all be recognized as positive answer) .",
    "note": "In the first test case, we can prove that we can' t make all a_ i \u2264 3 . In the second test case, all a_ i are already less or equal than d = 4 . In the third test case, we can, for example, choose i = 5 , j = 1 , k = 2 and make a_ 5 = a_ 1 + a_ 2 = 2 + 1 = 3 . Array a will become [ 2, 1, 5, 3, 3] . After that we can make a_ 3 = a_ 5 + a_ 2 = 3 + 1 = 4 . Array will become [ 2, 1, 4, 3, 3] and all elements are less or equal than d = 4 .",
    "topics": [
      "greedy",
      "implementation",
      "math",
      "sortings"
    ],
    "id": "1473A"
  },
  {
    "title": "Fair Division",
    "url": "https://codeforces.com/problemset/problem/1472/B",
    "history": "Alice and Bob received n candies from their parents. Each candy weighs either 1 gram or 2 grams. Now they want to divide all candies among themselves fairly so that the total weight of Alice' s candies is equal to the total weight of Bob' s candies. Check if they can do that. Note that candies are not allowed to be cut in half.",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. Then t test cases follow. The first line of each test case contains an integer n ( 1 \u2264 n \u2264 100 ) \u2014 the number of candies that Alice and Bob received. The next line contains n integers a_ 1, a_ 2, . . . , a_ n \u2014 the weights of the candies. The weight of each candy is either 1 or 2 . It is guaranteed that the sum of n over all test cases does not exceed 10^ 5 .",
    "output": "For each test case, output on a separate line: \" YES\" , if all candies can be divided into two sets with the same weight; \" NO\" otherwise. You can output \" YES\" and \" NO\" in any case ( for example, the strings yEs, yes, Yes and YES will be recognized as positive) .",
    "note": "In the first test case, Alice and Bob can each take one candy, then both will have a total weight of 1 . In the second test case, any division will be unfair. In the third test case, both Alice and Bob can take two candies, one of weight 1 and one of weight 2 . In the fourth test case, it is impossible to divide three identical candies between two people. In the fifth test case, any division will also be unfair.",
    "topics": [
      "dp",
      "greedy",
      "math"
    ],
    "id": "1472B"
  },
  {
    "title": "Cards for Friends",
    "url": "https://codeforces.com/problemset/problem/1472/A",
    "history": "For the New Year, Polycarp decided to send postcards to all his n friends. He wants to make postcards with his own hands. For this purpose, he has a sheet of paper of size w \u00d7 h , which can be cut into pieces. Polycarp can cut any sheet of paper w \u00d7 h that he has in only two cases: If w is even, then he can cut the sheet in half and get two sheets of size w/ 2\u00d7 h ; If h is even, then he can cut the sheet in half and get two sheets of size w \u00d7h/ 2 ; If w and h are even at the same time, then Polycarp can cut the sheet according to any of the rules above. After cutting a sheet of paper, the total number of sheets of paper is increased by 1 . Help Polycarp to find out if he can cut his sheet of size w \u00d7 h at into n or more pieces, using only the rules described above.",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. Then t test cases follow. Each test case consists of one line containing three integers w , h , n ( 1 \u2264 w, h \u2264 10^ 4, 1 \u2264 n \u2264 10^ 9 ) \u2014 the width and height of the sheet Polycarp has and the number of friends he needs to send a postcard to.",
    "output": "For each test case, output on a separate line: \" YES\" , if it is possible to cut a sheet of size w \u00d7 h into at least n pieces; \" NO\" otherwise. You can output \" YES\" and \" NO\" in any case ( for example, the strings yEs, yes, Yes and YES will be recognized as positive) .",
    "note": "In the first test case, you can first cut the 2 \u00d7 2 sheet into two 2 \u00d7 1 sheets, and then cut each of them into two more sheets. As a result, we get four sheets 1 \u00d7 1 . We can choose any three of them and send them to our friends. In the second test case, a 3 \u00d7 3 sheet cannot be cut, so it is impossible to get two sheets. In the third test case, you can cut a 5 \u00d7 10 sheet into two 5 \u00d7 5 sheets. In the fourth test case, there is no need to cut the sheet, since we only need one sheet. In the fifth test case, you can first cut the 1 \u00d7 4 sheet into two 1 \u00d7 2 sheets, and then cut each of them into two more sheets. As a result, we get four sheets 1 \u00d7 1 .",
    "topics": [
      "greedy",
      "math"
    ],
    "id": "1472A"
  },
  {
    "title": "Strange List",
    "url": "https://codeforces.com/problemset/problem/1471/B",
    "history": "You have given an array a of length n and an integer x to a brand new robot. What the robot does is the following: it iterates over the elements of the array, let the current element be q . If q is divisible by x , the robot adds x copies of the integer q/ x to the end of the array, and moves on to the next element. Note that the newly added elements could be processed by the robot later. Otherwise, if q is not divisible by x , the robot shuts down. Please determine the sum of all values of the array at the end of the process.",
    "input": "The first input line contains a single integer t ( 1 \u2264 t \u2264 100 ) \u2014 the number of test cases. The first line of each test case contains two integers n and x ( 1 \u2264 n \u2264 10^ 5 , 2 \u2264 x \u2264 10^ 9 ) \u2014 the length of the array and the value which is used by the robot. The next line contains integers a_ 1 , a_ 2 , . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 9 ) \u2014 the initial values in the array. It is guaranteed that the sum of values n over all test cases does not exceed 10^ 5 .",
    "output": "For each test case output one integer \u2014 the sum of all elements at the end of the process.",
    "note": "In the first test case the array initially consists of a single element [ 12] , and x= 2 . After the robot processes the first element, the array becomes [ 12, 6, 6] . Then the robot processes the second element, and the array becomes [ 12, 6, 6, 3, 3] . After the robot processes the next element, the array becomes [ 12, 6, 6, 3, 3, 3, 3] , and then the robot shuts down, since it encounters an element that is not divisible by x = 2 . The sum of the elements in the resulting array is equal to 36 . In the second test case the array initially contains integers [ 4, 6, 8, 2] , and x= 2 . The resulting array in this case looks like [ 4, 6, 8, 2, 2, 2, 3, 3, 4, 4, 1, 1, 1, 1, 1, 1] .",
    "topics": [
      "brute force",
      "greedy",
      "implementation",
      "math"
    ],
    "id": "1471B"
  },
  {
    "title": "Strange Partition",
    "url": "https://codeforces.com/problemset/problem/1471/A",
    "history": "You are given an array a of length n , and an integer x . You can perform the following operation as many times as you would like ( possibly zero) : replace two adjacent elements of the array by their sum. For example, if the initial array was [ 3, 6, 9] , in a single operation one can replace the last two elements by their sum, yielding an array [ 3, 15] , or replace the first two elements to get an array [ 9, 9] . Note that the size of the array decreases after each operation. The beauty of an array b= [ b_ 1, . . . , b_ k] is defined as \u2211_ i= 1^ k \u2308b_ i/ x\u2309 , which means that we divide each element by x , round it up to the nearest integer, and sum up the resulting values. For example, if x = 3 , and the array is [ 4, 11, 6] , the beauty of the array is equal to \u23084/ 3\u2309 + \u230811/ 3\u2309 + \u23086/ 3\u2309 = 2 + 4 + 2 = 8 . Please determine the minimum and the maximum beauty you can get by performing some operations on the original array.",
    "input": "The first input line contains a single integer t \u2014 the number of test cases ( 1 \u2264 t \u2264 1000 ) . The first line of each test case contains two integers n and x ( 1 \u2264 n \u2264 10^ 5 , 1 \u2264 x \u2264 10^ 9 ) . The next line contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 9 ) , the elements of the array a . It is guaranteed that the sum of values of n over all test cases does not exceed 10^ 5 .",
    "output": "For each test case output two integers \u2014 the minimal and the maximal possible beauty.",
    "note": "In the first test case the beauty of the array does not change if we perform any operations. In the second example we can leave the array unchanged to attain the maximum beauty, and to get the minimum beauty one can replace two elements 4 and 11 with their sum, yielding an array [ 6, 15] , which has its beauty equal to 7 .",
    "topics": [
      "greedy",
      "math",
      "number theory"
    ],
    "id": "1471A"
  },
  {
    "title": "Strange Definition",
    "url": "https://codeforces.com/problemset/problem/1470/B",
    "history": "Let us call two integers x and y adjacent if lcm( x, y) / gcd( x, y) is a perfect square. For example, 3 and 12 are adjacent, but 6 and 9 are not. Here gcd( x, y) denotes the greatest common divisor ( GCD) of integers x and y , and lcm( x, y) denotes the least common multiple ( LCM) of integers x and y . You are given an array a of length n . Each second the following happens: each element a_ i of the array is replaced by the product of all elements of the array ( including itself) , that are adjacent to the current value. Let d_ i be the number of adjacent elements to a_ i ( including a_ i itself) . The beauty of the array is defined as max_ 1 \u2264 i \u2264 n d_ i . You are given q queries: each query is described by an integer w , and you have to output the beauty of the array after w seconds.",
    "input": "The first input line contains a single integer t ( 1 \u2264 t \u2264 10^ 5) \u2014 the number of test cases. The first line of each test case contains a single integer n ( 1 \u2264 n \u2264 3 \u00b7 10^ 5 ) \u2014 the length of the array. The following line contains n integers a_ 1, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 6 ) \u2014 array elements. The next line contain a single integer q ( 1 \u2264 q \u2264 3 \u00b7 10^ 5 ) \u2014 the number of queries. The following q lines contain a single integer w each ( 0 \u2264 w \u2264 10^ 18 ) \u2014 the queries themselves. It is guaranteed that the sum of values n over all test cases does not exceed 3 \u00b7 10^ 5 , and the sum of values q over all test cases does not exceed 3 \u00b7 10^ 5",
    "output": "For each query output a single integer \u2014 the beauty of the array at the corresponding moment.",
    "note": "In the first test case, the initial array contains elements [ 6, 8, 4, 2] . Element a_ 4= 2 in this array is adjacent to a_ 4= 2 ( since lcm( 2, 2) / gcd( 2, 2) = 2/ 2= 1= 1^ 2 ) and a_ 2= 8 ( since lcm( 8, 2) / gcd( 8, 2) = 8/ 2= 4= 2^ 2 ) . Hence, d_ 4= 2 , and this is the maximal possible value d_ i in this array. In the second test case, the initial array contains elements [ 12, 3, 20, 5, 80, 1] . The elements adjacent to 12 are { 12, 3} , the elements adjacent to 3 are { 12, 3} , the elements adjacent to 20 are { 20, 5, 80} , the elements adjacent to 5 are { 20, 5, 80} , the elements adjacent to 80 are { 20, 5, 80} , the elements adjacent to 1 are { 1} . After one second, the array is transformed into [ 36, 36, 8000, 8000, 8000, 1] .",
    "topics": [
      "bitmasks",
      "graphs",
      "hashing",
      "math",
      "number theory"
    ],
    "id": "1470B"
  },
  {
    "title": "Ceil Divisions",
    "url": "https://codeforces.com/problemset/problem/1469/D",
    "history": "You have an array a_ 1, a_ 2, . . . , a_ n where a_ i = i . In one step, you can choose two indices x and y ( x = \u0338 y ) and set a_ x = \u2308a_ x/ a_ y\u2309 ( ceiling function) . Your goal is to make array a consist of n - 1 ones and 1 two in no more than n + 5 steps. Note that you don' t have to minimize the number of steps.",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 1000 ) \u2014 the number of test cases. The first and only line of each test case contains the single integer n ( 3 \u2264 n \u2264 2 \u00b7 10^ 5 ) \u2014 the length of array a . It' s guaranteed that the sum of n over test cases doesn' t exceed 2 \u00b7 10^ 5 .",
    "output": "For each test case, print the sequence of operations that will make a as n - 1 ones and 1 two in the following format: firstly, print one integer m ( m \u2264 n + 5 ) \u2014 the number of operations; next print m pairs of integers x and y ( 1 \u2264 x, y \u2264 n ; x = \u0338 y ) ( x may be greater or less than y ) \u2014 the indices of the corresponding operation. It can be proven that for the given constraints it' s always possible to find a correct sequence of operations.",
    "note": "In the first test case, you have array a = [ 1, 2, 3] . For example, you can do the following: choose 3 , 2 : a_ 3 = \u2308a_ 3/ a_ 2\u2309 = 2 and array a = [ 1, 2, 2] ; choose 3 , 2 : a_ 3 = \u23082/ 2\u2309 = 1 and array a = [ 1, 2, 1] . You' ve got array with 2 ones and 1 two in 2 steps. In the second test case, a = [ 1, 2, 3, 4] . For example, you can do the following: choose 3 , 4 : a_ 3 = \u23083/ 4\u2309 = 1 and array a = [ 1, 2, 1, 4] ; choose 4 , 2 : a_ 4 = \u23084/ 2\u2309 = 2 and array a = [ 1, 2, 1, 2] ; choose 4 , 2 : a_ 4 = \u23082/ 2\u2309 = 1 and array a = [ 1, 2, 1, 1] .",
    "topics": [
      "brute force",
      "constructive algorithms",
      "math",
      "number theory"
    ],
    "id": "1469D"
  },
  {
    "title": "Prime Divisors Selection",
    "url": "https://codeforces.com/problemset/problem/1468/L",
    "history": "Suppose you have a sequence of k integers A = [ a_ 1, a_ 2, . . . , a_ k] where each a_ i \u2265 2 . A sequence of prime integers P = [ p_ 1, p_ 2, . . . , p_ k] is called suitable for the sequence A if a_ 1 is divisible by p_ 1 , a_ 2 is divisible by p_ 2 and so on. A sequence of prime integers P is called friendly if there are no unique integers in this sequence. A sequence A is called ideal, if each sequence P that is suitable for A is friendly as well ( i. e. there is no sequence P that is suitable for A , but not friendly) . For example, the sequence [ 2, 4, 16] is ideal, while the sequence [ 2, 4, 6] is not ideal ( there exists a sequence P = [ 2, 2, 3] which is suitable for A , but not friendly) . You are given n different integers x_ 1 , x_ 2 , . . . , x_ n . You have to choose exactly k of them in such a way that they form an ideal sequence, or report that it is impossible. Note that no integer can be chosen more than once.",
    "input": "The first line contains two integers n and k ( 1 \u2264 k \u2264 n \u2264 1000 ) . The second line contains n pairwise distinct integers x_ 1 , x_ 2 , . . . , x_ n ( 2 \u2264 x_ i \u2264 10^ 18 ) .",
    "output": "If it is impossible to choose exactly k integers from x_ 1 , x_ 2 , . . . , x_ n in such a way that the chosen integers form an ideal sequence, print 0 . Otherwise, print k pairwise distinct integers \u2014 the elements of the chosen ideal sequence. If there are multiple answers, print any of them.",
    "note": "",
    "topics": [
      "binary search",
      "greedy",
      "math",
      "number theory"
    ],
    "id": "1468L"
  },
  {
    "title": "Plane Tiling",
    "url": "https://codeforces.com/problemset/problem/1468/I",
    "history": "You are given five integers n , dx_ 1 , dy_ 1 , dx_ 2 and dy_ 2 . You have to select n distinct pairs of integers ( x_ i, y_ i) in such a way that, for every possible pair of integers ( x, y) , there exists exactly one triple of integers ( a, b, i) meeting the following constraints: x = x_ i + a \u00b7 dx_ 1 + b \u00b7 dx_ 2, y = y_ i + a \u00b7 dy_ 1 + b \u00b7 dy_ 2.",
    "input": "The first line contains a single integer n ( 1 \u2264 n \u2264 10^ 5 ) . The second line contains two integers dx_ 1 and dy_ 1 ( - 10^ 6 \u2264 dx_ 1, dy_ 1 \u2264 10^ 6 ) . The third line contains two integers dx_ 2 and dy_ 2 ( - 10^ 6 \u2264 dx_ 2, dy_ 2 \u2264 10^ 6 ) .",
    "output": "If it is impossible to correctly select n pairs of integers, print NO. Otherwise, print YES in the first line, and then n lines, the i - th of which contains two integers x_ i and y_ i ( - 10^ 9 \u2264 x_ i, y_ i \u2264 10^ 9 ) . If there are multiple solutions, print any of them.",
    "note": "",
    "topics": [
      "geometry",
      "implementation",
      "math"
    ],
    "id": "1468I"
  },
  {
    "title": "K and Medians",
    "url": "https://codeforces.com/problemset/problem/1468/H",
    "history": "Let' s denote the median of a sequence s with odd length as the value in the middle of s if we sort s in non- decreasing order. For example, let s = [ 1, 2, 5, 7, 2, 3, 12] . After sorting, we get sequence [ 1, 2, 2, 3, 5, 7, 12] , and the median is equal to 3 . You have a sequence of n integers [ 1, 2, . . . , n] and an odd integer k . In one step, you choose any k elements from the sequence and erase all chosen elements except their median. These elements do not have to go continuously ( gaps are allowed between them) . For example, if you have a sequence [ 1, 2, 3, 4, 5, 6, 7] ( i. e. n= 7 ) and k = 3 , then the following options for the first step are possible: choose [ 1, 2, 3] ; 2 is their median, so it is not erased, and the resulting sequence is [ 2, 4, 5, 6, 7] ; choose [ 2, 4, 6] ; 4 is their median, so it is not erased, and the resulting sequence is [ 1, 3, 4, 5, 7] ; choose [ 1, 6, 7] ; 6 is their median, so it is not erased, and the resulting sequence is [ 2, 3, 4, 5, 6] ; and several others. You can do zero or more steps. Can you get a sequence b_ 1 , b_ 2 , . . . , b_ m after several steps? You' ll be given t test cases. Solve each test case independently.",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 1000 ) \u2014 the number of test cases. The first line of each test case contains three integers n , k , and m ( 3 \u2264 n \u2264 2 \u00b7 10^ 5 ; 3 \u2264 k \u2264 n ; k is odd; 1 \u2264 m < n ) \u2014 the length of the sequence you have, the number of elements you choose in each step and the length of the sequence you' d like to get. The second line of each test case contains m integers b_ 1, b_ 2, . . . , b_ m ( 1 \u2264 b_ 1 < b_ 2 < . . . < b_ m \u2264 n ) \u2014 the sequence you' d like to get, given in the ascending order. It' s guaranteed that the total sum of n over all test cases doesn' t exceed 2 \u00b7 10^ 5 .",
    "output": "For each test case, print YES if you can obtain the sequence b or NO otherwise. You may print each letter in any case ( for example, YES, Yes, yes, yEs will all be recognized as positive answer) .",
    "note": "In the first test case, you have sequence [ 1, 2, 3] . Since k = 3 you have only one way to choose k elements \u2014 it' s to choose all elements [ 1, 2, 3] with median 2 . That' s why after erasing all chosen elements except its median you' ll get sequence [ 2] . In other words, there is no way to get sequence b = [ 1] as the result. In the second test case, you have sequence [ 1, 2, 3, 4, 5, 6, 7] and one of the optimal strategies is following: choose k = 3 elements [ 2, 3, 4] and erase them except its median; you' ll get sequence [ 1, 3, 5, 6, 7] ; choose 3 elements [ 3, 5, 6] and erase them except its median; you' ll get desired sequence [ 1, 5, 7] ; In the fourth test case, you have sequence [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13] . You can choose k= 7 elements [ 2, 4, 6, 7, 8, 10, 13] and erase them except its median to get sequence b .",
    "topics": [
      "constructive algorithms",
      "greedy",
      "math"
    ],
    "id": "1468H"
  },
  {
    "title": "Sum of Paths",
    "url": "https://codeforces.com/problemset/problem/1467/D",
    "history": "There are n cells, numbered 1, 2, . . . , n from left to right. You have to place a robot at any cell initially. The robot must make exactly k moves. In one move, the robot must move one cell to the left or right, provided that it doesn' t move out of bounds. In other words, if the robot was in the cell i , it must move to either the cell i- 1 or the cell i+ 1 , as long as it lies between 1 and n ( endpoints inclusive) . The cells, in the order they are visited ( including the cell the robot is placed) , together make a good path. Each cell i has a value a_ i associated with it. Let c_ 0, c_ 1, . . . , c_ k be the sequence of cells in a good path in the order they are visited ( c_ 0 is the cell robot is initially placed, c_ 1 is the cell where the robot is after its first move, and so on; more formally, c_ i is the cell that the robot is at after i moves) . Then the value of the path is calculated as a_ c_ 0 + a_ c_ 1 + . . . + a_ c_ k . Your task is to calculate the sum of values over all possible good paths. Since this number can be very large, output it modulo 10^ 9 + 7 . Two good paths are considered different if the starting cell differs or there exists an integer i \u2208 [ 1, k] such that the current cell of the robot after exactly i moves is different in those paths. You must process q updates to a and print the updated sum each time. Each update changes the value of exactly one cell. See the input format and the sample input- output for more details.",
    "input": "The first line of the input contains three space- separated integers n , k and q ( 2 \u2264 n \u2264 5000 ; 1 \u2264 k \u2264 5000 ; 1 \u2264 q \u2264 2 \u00b7 10^ 5 ) . The second line of the input contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 9 ) . q lines follow. Each line contains two space- separated integers i and x ( 1 \u2264 i \u2264 n ; 1 \u2264 x \u2264 10^ 9 ) indicating that you must change the value of a_ i to x .",
    "output": "Print q integers. The i - th integer should be the sum of values over all good paths after the first i updates are performed. Since the answers may be large, print them modulo 10^ 9 + 7 .",
    "note": "In the first example, the good paths are ( 1, 2) , ( 2, 1) , ( 2, 3) , ( 3, 2) , ( 3, 4) , ( 4, 3) , ( 4, 5) , ( 5, 4) . Initially the values of a are [ 3, 5, 1, 4, 2] . After the first update, they become [ 9, 5, 1, 4, 2] . After the second update, they become [ 9, 4, 1, 4, 2] , and so on.",
    "topics": [
      "combinatorics",
      "dp",
      "math"
    ],
    "id": "1467D"
  },
  {
    "title": "Wizard of Orz",
    "url": "https://codeforces.com/problemset/problem/1467/A",
    "history": "There are n digital panels placed in a straight line. Each panel can show any digit from 0 to 9 . Initially, all panels show 0 . Every second, the digit shown by each panel increases by 1 . In other words, at the end of every second, a panel that showed 9 would now show 0 , a panel that showed 0 would now show 1 , a panel that showed 1 would now show 2 , and so on. When a panel is paused, the digit displayed on the panel does not change in the subsequent seconds. You must pause exactly one of these panels, at any second you wish. Then, the panels adjacent to it get paused one second later, the panels adjacent to those get paused 2 seconds later, and so on. In other words, if you pause panel x , panel y ( for all valid y ) would be paused exactly | x\u2212y| seconds later. For example, suppose there are 4 panels, and the 3 - rd panel is paused when the digit 9 is on it. The panel 1 pauses 2 seconds later, so it has the digit 1 ; the panel 2 pauses 1 second later, so it has the digit 0 ; the panel 4 pauses 1 second later, so it has the digit 0 . The resulting 4 - digit number is 1090 . Note that this example is not optimal for n = 4 . Once all panels have been paused, you write the digits displayed on them from left to right, to form an n digit number ( it can consist of leading zeros) . What is the largest possible number you can get? Initially, all panels show 0 .",
    "input": "The first line of the input contains a single integer t ( 1 \u2264 t \u2264 100 ) \u2014 the number of test cases. Each test case consists of a single line containing a single integer n ( 1 \u2264 n \u2264 2\u00b710^ 5 ) . It is guaranteed that the sum of n over all test cases does not exceed 2\u00b710^ 5 .",
    "output": "For each test case, print the largest number you can achieve, if you pause one panel optimally.",
    "note": "In the first test case, it is optimal to pause the first panel when the number 9 is displayed on it. In the second test case, it is optimal to pause the second panel when the number 8 is displayed on it.",
    "topics": [
      "constructive algorithms",
      "greedy",
      "math"
    ],
    "id": "1467A"
  },
  {
    "title": "Finding satisfactory solutions",
    "url": "https://codeforces.com/problemset/problem/1466/H",
    "history": "Getting so far in this contest is not an easy feat. By solving all the previous problems, you have impressed the gods greatly. Thus, they decided to spare you the story for this problem and grant a formal statement instead. Consider n agents. Each one of them initially has exactly one item, i - th agent has the item number i . We are interested in reassignments of these items among the agents. An assignment is valid iff each item is assigned to exactly one agent, and each agent is assigned exactly one item. Each agent has a preference over the items, which can be described by a permutation p of items sorted from the most to the least desirable. In other words, the agent prefers item i to item j iff i appears earlier in the permutation p . A preference profile is a list of n permutations of length n each, such that i - th permutation describes preferences of the i - th agent. It is possible that some of the agents are not happy with the assignment of items. A set of dissatisfied agents may choose not to cooperate with other agents. In such a case, they would exchange the items they possess initially ( i - th item belongs to i - th agent) only between themselves. Agents from this group don' t care about the satisfaction of agents outside of it. However, they need to exchange their items in such a way that will make at least one of them happier, and none of them less happy ( in comparison to the given assignment) . Formally, consider a valid assignment of items \u2014 A . Let A( i) denote the item assigned to i - th agent. Also, consider a subset of agents. Let S be the set of their indices. We will say this subset of agents is dissatisfied iff there exists a valid assignment B( i) such that: For each i \u2208 S , B( i) \u2208 S . No agent i \u2208 S prefers A( i) to B( i) ( no agent from the S is less happy) . At least one agent i \u2208 S prefers B( i) to A( i) ( at least one agent from the S is happier) . An assignment is optimal if no subset of the agents is dissatisfied. Note that the empty subset cannot be dissatisfied. It can be proven that for each preference profile, there is precisely one optimal assignment. Example: Consider 3 agents with the following preference profile: [ 2, 1, 3] [ 1, 2, 3] [ 1, 3, 2] And such an assignment: First agent gets item 2 Second agent gets item 3 . Third agent gets item 1 . See that the set of agents { 1, 2} is dissatisfied, because they can reassign their ( initial) items in the following way: First agent gets item 2 . Second agent gets item 1 . Third agent gets item 3 . This reassignment will make the second agent happier and make no difference to the first agent. As a result, the third agent got an item that is worse for him, but this does not prevent the set { 1, 2} from being dissatisfied ( he is not in this set) . The following assignment would be optimal: First agent gets item 2 . Second agent gets item 1 . Third agent gets item 3 . Given an assignment A , calculate the number of distinct preference profiles for which assignment A is optimal. As the answer can be huge, output it modulo 10^ 9+ 7 . Two preference profiles are different iff they assign different preference permutations to any agent.",
    "input": "In the first line of input there is an integer n ( 1 \u2264 n \u2264 40 ) . The next line contains n space separated integers, a permutation of numbers from 1 to n . The i - th number denotes the item assigned to agent i in the optimal assignment.",
    "output": "In a single line output one non- negative integer, the number of preference profiles for which the assignment of items given in the input is optimal modulo 10^ 9+ 7 .",
    "note": "Assignment from the first test case is optimal only for the following preference profile: 2, 1 1, 2 If any agent wants his initial item the most and is given another item, he would form a dissatisfied set. Hence the allocation is not optimal for any other preference profile.",
    "topics": [
      "combinatorics",
      "dp",
      "graphs",
      "greedy",
      "math"
    ],
    "id": "1466H"
  },
  {
    "title": "Song of the Sirens",
    "url": "https://codeforces.com/problemset/problem/1466/G",
    "history": "Whoso in ignorance draws near to them and hears the Sirens' voice, he nevermore returns. Homer, OdysseyIn the times of Jason and the Argonauts, it was well known that sirens use the sound of their songs to lure sailors into their demise. Yet only a few knew that every time sirens call a sailor by his name, his will weakens, making him more vulnerable. For the purpose of this problem, both siren songs and names of the sailors will be represented as strings of lowercase English letters. The more times the sailor' s name occurs as a contiguous substring of the song, the greater danger he is in. Jason found out that sirens can sing one of the n+ 1 songs, which have the following structure: let s_ i ( 0 \u2264 i \u2264 n ) be the i - th song and t be a string of length n , then for every i < n : s_ i+ 1 = s_ i t_ i s_ i . In other words i+ 1 - st song is the concatenation of i - th song, i - th letter ( 0 - indexed) of t and the i - th song. Fortunately, he also knows s_ 0 and t . Jason wonders how many times a sailor' s name is mentioned in a particular song. Answer q queries: given the sailor' s name ( w ) and the index of a song ( i ) output the number of occurrences of w in s_ i as a substring. As this number can be quite large, output its remainder modulo 10^ 9+ 7 .",
    "input": "In the first line of input there are two integers n , q ( 1 \u2264 n, q \u2264 10^ 5 ) meaning that there are n+ 1 songs and q queries. In the next two lines strings s_ 0 and t follow ( 1 \u2264 | s_ 0| \u2264 100, | t| = n ) . Next q lines describe the queries; each one contains an integer k ( 0 \u2264 k \u2264 n ) , the index of the song sung by the sirens, and a non- empty string w , which is the name of a sailor. All strings in this problem consist only of lowercase English letters, and the sum of lengths of sailors' names does not exceed 10^ 6 .",
    "output": "Output q lines, i - th of them should contain the remainder modulo 10^ 9+ 7 of the number of occurrences of w in s_ k .",
    "note": "In the first example songs of the sirens are as follows: Song 0 : aa Song 1 : aabaa Song 2 : aabaacaabaa Song 3 : aabaacaabaadaabaacaabaa",
    "topics": [
      "combinatorics",
      "divide and conquer",
      "hashing",
      "math",
      "string suffix structures",
      "strings"
    ],
    "id": "1466G"
  },
  {
    "title": "Euclid's nightmare",
    "url": "https://codeforces.com/problemset/problem/1466/F",
    "history": "You may know that Euclid was a mathematician. Well, as it turns out, Morpheus knew it too. So when he wanted to play a mean trick on Euclid, he sent him an appropriate nightmare. In his bad dream Euclid has a set S of n m - dimensional vectors over the Z_ 2 field and can perform vector addition on them. In other words he has vectors with m coordinates, each one equal either 0 or 1 . Vector addition is defined as follows: let u+ v = w , then w_ i = ( u_ i + v_ i) 2 . Euclid can sum any subset of S and archive another m - dimensional vector over Z_ 2 . In particular, he can sum together an empty subset; in such a case, the resulting vector has all coordinates equal 0 . Let T be the set of all the vectors that can be written as a sum of some vectors from S . Now Euclid wonders the size of T and whether he can use only a subset S' of S to obtain all the vectors from T . As it is usually the case in such scenarios, he will not wake up until he figures this out. So far, things are looking rather grim for the philosopher. But there is hope, as he noticed that all vectors in S have at most 2 coordinates equal 1 . Help Euclid and calculate | T| , the number of m - dimensional vectors over Z_ 2 that can be written as a sum of some vectors from S . As it can be quite large, calculate it modulo 10^ 9+ 7 . You should also find S' , the smallest such subset of S , that all vectors in T can be written as a sum of vectors from S' . In case there are multiple such sets with a minimal number of elements, output the lexicographically smallest one with respect to the order in which their elements are given in the input. Consider sets A and B such that | A| = | B| . Let a_ 1, a_ 2, . . . a_ | A| and b_ 1, b_ 2, . . . b_ | B| be increasing arrays of indices elements of A and B correspondingly. A is lexicographically smaller than B iff there exists such i that a_ j = b_ j for all j < i and a_ i < b_ i .",
    "input": "In the first line of input, there are two integers n , m ( 1 \u2264 n, m \u2264 5 \u00b7 10^ 5 ) denoting the number of vectors in S and the number of dimensions. Next n lines contain the description of the vectors in S . In each of them there is an integer k ( 1 \u2264 k \u2264 2 ) and then follow k distinct integers x_ 1, . . . x_ k ( 1 \u2264 x_ i \u2264 m ) . This encodes an m - dimensional vector having 1 s on coordinates x_ 1, . . . x_ k and 0 s on the rest of them. Among the n vectors, no two are the same.",
    "output": "In the first line, output two integers: remainder modulo 10^ 9+ 7 of | T| and | S' | . In the second line, output | S' | numbers, indices of the elements of S' in ascending order. The elements of S are numbered from 1 in the order they are given in the input.",
    "note": "In the first example we are given three vectors: 10 01 11 It turns out that we can represent all vectors from our 2 - dimensional space using these vectors: 00 is a sum of the empty subset of above vectors; 01 = 11 + 10 , is a sum of the first and third vector; 10 = 10 , is just the first vector; 11 = 10 + 01 , is a sum of the first and the second vector. Hence, T = { 00, 01, 10, 11} . We can choose any two of the three vectors from S and still be able to obtain all the vectors in T . In such a case, we choose the two vectors which appear first in the input. Since we cannot obtain all vectors in T using only a single vector from S , | S' | = 2 and S' = { 10, 01} ( indices 1 and 2 ) , as set { 1, 2 } is lexicographically the smallest. We can represent all vectors from T , using only vectors from S' , as shown below: 00 is a sum of the empty subset; 01 = 01 is just the second vector; 10 = 10 is just the first vector; 11 = 10 + 01 is a sum of the first and the second vector.",
    "topics": [
      "bitmasks",
      "dfs and similar",
      "dsu",
      "graphs",
      "greedy",
      "math",
      "sortings"
    ],
    "id": "1466F"
  },
  {
    "title": "Apollo versus Pan",
    "url": "https://codeforces.com/problemset/problem/1466/E",
    "history": "Only a few know that Pan and Apollo weren' t only battling for the title of the GOAT musician. A few millenniums later, they also challenged each other in math ( or rather in fast calculations) . The task they got to solve is the following: Let x_ 1, x_ 2, . . . , x_ n be the sequence of n non- negative integers. Find this value: \u2211_ i= 1^ n \u2211_ j= 1^ n \u2211_ k= 1^ n ( x_ i & x_ j) \u00b7 ( x_ j | x_ k) Here & denotes the bitwise and, and | denotes the bitwise or. Pan and Apollo could solve this in a few seconds. Can you do it too? For convenience, find the answer modulo 10^ 9 + 7 .",
    "input": "The first line of the input contains a single integer t ( 1 \u2264 t \u2264 1 000 ) denoting the number of test cases, then t test cases follow. The first line of each test case consists of a single integer n ( 1 \u2264 n \u2264 5 \u00b7 10^ 5 ) , the length of the sequence. The second one contains n non- negative integers x_ 1, x_ 2, . . . , x_ n ( 0 \u2264 x_ i < 2^ 60 ) , elements of the sequence. The sum of n over all test cases will not exceed 5 \u00b7 10^ 5 .",
    "output": "Print t lines. The i - th line should contain the answer to the i - th text case.",
    "note": "",
    "topics": [
      "bitmasks",
      "brute force",
      "math"
    ],
    "id": "1466E"
  },
  {
    "title": "Bovine Dilemma",
    "url": "https://codeforces.com/problemset/problem/1466/A",
    "history": "Argus was charged with guarding Io, which is not an ordinary cow. Io is quite an explorer, and she wanders off rather frequently, making Argus' life stressful. So the cowherd decided to construct an enclosed pasture for Io. There are n trees growing along the river, where Argus tends Io. For this problem, the river can be viewed as the OX axis of the Cartesian coordinate system, and the n trees as points with the y - coordinate equal 0 . There is also another tree growing in the point ( 0, 1) . Argus will tie a rope around three of the trees, creating a triangular pasture. Its exact shape doesn' t matter to Io, but its area is crucial to her. There may be many ways for Argus to arrange the fence, but only the ones which result in different areas of the pasture are interesting for Io. Calculate the number of different areas that her pasture may have. Note that the pasture must have nonzero area.",
    "input": "The input consists of multiple test cases. The first line contains an integer t ( 1 \u2264 t \u2264 100 ) \u2014 the number of test cases. Then t test cases follow, each one is described in two lines. In the first line of each test case there is a single integer n ( 1 \u2264 n \u2264 50 ) denoting the number of trees growing along the river. Next line contains n distinct integers x_ 1 < x_ 2 < . . . < x_ n - 1 < x_ n ( 1 \u2264 x_ i \u2264 50 ) , the x - coordinates of trees growing along the river.",
    "output": "In a single line output an integer, the number of different nonzero areas that triangles with trees as vertices may have.",
    "note": "In the first test case, we have 6 non- degenerate triangles with the following areas: 0. 5 , 0. 5 , 1 , 1. 5 , 1. 5 and 2 . The pasture can have 4 different areas, and thus 4 is the answer. In the second test case, we have 3 non- degenerate triangles with the following areas: 1 , 1 and 2 . The pasture can have 2 different areas, so 2 is the answer. The following two drawings present the situation in the second test case. The blue triangles in the first drawing have area 1 . The red triangle in the second drawing has area 2 .",
    "topics": [
      "brute force",
      "geometry",
      "math"
    ],
    "id": "1466A"
  },
  {
    "title": "Max Correct Set",
    "url": "https://codeforces.com/problemset/problem/1463/F",
    "history": "Let' s call the set of positive integers S correct if the following two conditions are met: S \u2286{ 1, 2, . . . , n} ; if a \u2208 S and b \u2208 S , then | a- b| = \u0338 x and | a- b| = \u0338 y . For the given values n , x , and y , you have to find the maximum size of the correct set.",
    "input": "A single line contains three integers n , x and y ( 1 \u2264 n \u2264 10^ 9 ; 1 \u2264 x, y \u2264 22 ) .",
    "output": "Print one integer \u2014 the maximum size of the correct set.",
    "note": "",
    "topics": [
      "bitmasks",
      "dp",
      "math"
    ],
    "id": "1463F"
  },
  {
    "title": "Dungeon",
    "url": "https://codeforces.com/problemset/problem/1463/A",
    "history": "You are playing a new computer game in which you have to fight monsters. In a dungeon you are trying to clear, you met three monsters; the first of them has a health points, the second has b health points, and the third has c . To kill the monsters, you can use a cannon that, when fired, deals 1 damage to the selected monster. Every 7 - th ( i. e. shots with numbers 7 , 14 , 21 etc. ) cannon shot is enhanced and deals 1 damage to all monsters, not just one of them. If some monster' s current amount of health points is 0 , it can' t be targeted by a regular shot and does not receive damage from an enhanced shot. You want to pass the dungeon beautifully, i. e. , kill all the monsters with the same enhanced shot ( i. e. after some enhanced shot, the health points of each of the monsters should become equal to 0 for the first time) . Each shot must hit a monster, i. e. each shot deals damage to at least one monster.",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. Each test case consists of a single line that contains three integers a , b and c ( 1 \u2264 a, b, c \u2264 10^ 8 ) \u2014 the number of health points each monster has.",
    "output": "For each test case, print YES if you can kill all the monsters with the same enhanced shot. Otherwise, print NO. You may print each letter in any case ( for example, YES, Yes, yes, yEs will all be recognized as positive answer) .",
    "note": "In the first test case, you can do as follows: 1 - th shot to the first monster, 2 - th shot to the second monster, 3 - th shot to the third monster, 4 - th shot to the first monster, 5 - th shot to the third monster, 6 - th shot to the third monster, and 7 - th enhanced shot will kill all the monsters. In the second test case, you can' t kill monsters with the same enhanced shot, because the total number of health points of monsters is 3 , and you will kill them in the first 3 shots.",
    "topics": [
      "binary search",
      "math"
    ],
    "id": "1463A"
  },
  {
    "title": "Close Tuples (hard version)",
    "url": "https://codeforces.com/problemset/problem/1462/E2",
    "history": "This is the hard version of this problem. The only difference between the easy and hard versions is the constraints on k and m . In this version of the problem, you need to output the answer by modulo 10^ 9+ 7 . You are given a sequence a of length n consisting of integers from 1 to n . The sequence may contain duplicates ( i. e. some elements can be equal) . Find the number of tuples of m elements such that the maximum number in the tuple differs from the minimum by no more than k . Formally, you need to find the number of tuples of m indices i_ 1 < i_ 2 < . . . < i_ m , such that max( a_ i_ 1, a_ i_ 2, . . . , a_ i_ m) - min( a_ i_ 1, a_ i_ 2, . . . , a_ i_ m) \u2264 k. For example, if n= 4 , m= 3 , k= 2 , a= [ 1, 2, 4, 3] , then there are two such triples ( i= 1, j= 2, z= 4 and i= 2, j= 3, z= 4 ) . If n= 4 , m= 2 , k= 1 , a= [ 1, 1, 1, 1] , then all six possible pairs are suitable. As the result can be very large, you should print the value modulo 10^ 9 + 7 ( the remainder when divided by 10^ 9 + 7 ) .",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 2 \u00b7 10^ 5 ) \u2014 the number of test cases. Then t test cases follow. The first line of each test case contains three integers n , m , k ( 1 \u2264 n \u2264 2 \u00b7 10^ 5 , 1 \u2264 m \u2264 100 , 1 \u2264 k \u2264 n ) \u2014 the length of the sequence a , number of elements in the tuples and the maximum difference of elements in the tuple. The next line contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 n ) \u2014 the sequence a . It is guaranteed that the sum of n for all test cases does not exceed 2 \u00b7 10^ 5 .",
    "output": "Output t answers to the given test cases. Each answer is the required number of tuples of m elements modulo 10^ 9 + 7 , such that the maximum value in the tuple differs from the minimum by no more than k .",
    "note": "",
    "topics": [
      "binary search",
      "combinatorics",
      "implementation",
      "math",
      "sortings",
      "two pointers"
    ],
    "id": "1462E2"
  },
  {
    "title": "Close Tuples (easy version)",
    "url": "https://codeforces.com/problemset/problem/1462/E1",
    "history": "This is the easy version of this problem. The only difference between easy and hard versions is the constraints on k and m ( in this version k= 2 and m= 3 ) . Also, in this version of the problem, you DON' T NEED to output the answer by modulo. You are given a sequence a of length n consisting of integers from 1 to n . The sequence may contain duplicates ( i. e. some elements can be equal) . Find the number of tuples of m = 3 elements such that the maximum number in the tuple differs from the minimum by no more than k = 2 . Formally, you need to find the number of triples of indices i < j < z such that max( a_ i, a_ j, a_ z) - min( a_ i, a_ j, a_ z) \u2264 2. For example, if n= 4 and a= [ 1, 2, 4, 3] , then there are two such triples ( i= 1, j= 2, z= 4 and i= 2, j= 3, z= 4 ) . If n= 4 and a= [ 1, 1, 1, 1] , then all four possible triples are suitable.",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 2 \u00b7 10^ 5 ) \u2014 the number of test cases. Then t test cases follow. The first line of each test case contains an integer n ( 1 \u2264 n \u2264 2 \u00b7 10^ 5 ) \u2014 the length of the sequence a . The next line contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 n ) \u2014 the sequence a . It is guaranteed that the sum of n for all test cases does not exceed 2 \u00b7 10^ 5 .",
    "output": "Output t answers to the given test cases. Each answer is the required number of triples of elements, such that the maximum value in the triple differs from the minimum by no more than 2 . Note that in difference to the hard version of the problem, you don' t need to output the answer by modulo. You must output the exact value of the answer.",
    "note": "",
    "topics": [
      "binary search",
      "combinatorics",
      "math",
      "sortings",
      "two pointers"
    ],
    "id": "1462E1"
  },
  {
    "title": "Add to Neighbour and Remove",
    "url": "https://codeforces.com/problemset/problem/1462/D",
    "history": "Polycarp was given an array of a[ 1 . . . n] of n integers. He can perform the following operation with the array a no more than n times: Polycarp selects the index i and adds the value a_ i to one of his choice of its neighbors. More formally, Polycarp adds the value of a_ i to a_ i- 1 or to a_ i+ 1 ( if such a neighbor does not exist, then it is impossible to add to it) . After adding it, Polycarp removes the i - th element from the a array. During this step the length of a is decreased by 1 . The two items above together denote one single operation. For example, if Polycarp has an array a = [ 3, 1, 6, 6, 2] , then it can perform the following sequence of operations with it: Polycarp selects i = 2 and adds the value a_ i to ( i- 1) - th element: a = [ 4, 6, 6, 2] . Polycarp selects i = 1 and adds the value a_ i to ( i+ 1) - th element: a = [ 10, 6, 2] . Polycarp selects i = 3 and adds the value a_ i to ( i- 1) - th element: a = [ 10, 8] . Polycarp selects i = 2 and adds the value a_ i to ( i- 1) - th element: a = [ 18] . Note that Polycarp could stop performing operations at any time. Polycarp wondered how many minimum operations he would need to perform to make all the elements of a equal ( i. e. , he wants all a_ i are equal to each other) .",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 3000 ) \u2014 the number of test cases in the test. Then t test cases follow. The first line of each test case contains a single integer n ( 1 \u2264 n \u2264 3000 ) \u2014 the length of the array. The next line contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 5 ) \u2014 array a . It is guaranteed that the sum of n over all test cases does not exceed 3000 .",
    "output": "For each test case, output a single number \u2014 the minimum number of operations that Polycarp needs to perform so that all elements of the a array are the same ( equal) .",
    "note": "In the first test case of the example, the answer can be constructed like this ( just one way among many other ways) : [ 3, 1, 6, 6, 2] [ 3, 1, 12, 2] [ 3, 13, 2] [ 16, 2] [ 18] . All elements of the array [ 18] are the same. In the second test case of the example, the answer can be constructed like this ( just one way among other ways) : [ 1, 2, 2, 1] [ 3, 2, 1] [ 3, 3] . All elements of the array [ 3, 3] are the same. In the third test case of the example, Polycarp doesn' t need to perform any operations since [ 2, 2, 2] contains equal ( same) elements only. In the fourth test case of the example, the answer can be constructed like this ( just one way among other ways) : [ 6, 3, 2, 1] [ 6, 3, 3] [ 6, 6] . All elements of the array [ 6, 6] are the same.",
    "topics": [
      "greedy",
      "math",
      "number theory"
    ],
    "id": "1462D"
  },
  {
    "title": "Unique Number",
    "url": "https://codeforces.com/problemset/problem/1462/C",
    "history": "You are given a positive number x . Find the smallest positive integer number that has the sum of digits equal to x and all digits are distinct ( unique) .",
    "input": "The first line contains a single positive integer t ( 1 \u2264 t \u2264 50 ) \u2014 the number of test cases in the test. Then t test cases follow. Each test case consists of a single integer number x ( 1 \u2264 x \u2264 50 ) .",
    "output": "Output t answers to the test cases: if a positive integer number with the sum of digits equal to x and all digits are different exists, print the smallest such number; otherwise print - 1.",
    "note": "",
    "topics": [
      "brute force",
      "greedy",
      "math"
    ],
    "id": "1462C"
  },
  {
    "title": "Water Level",
    "url": "https://codeforces.com/problemset/problem/1461/E",
    "history": "In recent years John has very successfully settled at his new job at the office. But John doesn' t like to idly sit around while his code is compiling, so he immediately found himself an interesting distraction. The point of his distraction was to maintain a water level in the water cooler used by other zebras. Originally the cooler contained exactly k liters of water. John decided that the amount of water must always be at least l liters of water but no more than r liters. John will stay at the office for exactly t days. He knows that each day exactly x liters of water will be used by his colleagues. At the beginning of each day he can add exactly y liters of water to the cooler, but at any point in time the amount of water in the cooler must be in the range [ l, r] . Now John wants to find out whether he will be able to maintain the water level at the necessary level for t days. Help him answer this question!",
    "input": "The first line of the input contains six integers k , l , r , t , x and y ( 1 \u2264 l \u2264 k \u2264 r \u2264 10^ 18; 1 \u2264 t \u2264 10^ 18; 1 \u2264 x \u2264 10^ 6; 1 \u2264 y \u2264 10^ 18 ) \u2014 initial water level, the required range, the number of days, daily water usage and the exact amount of water that can be added, respectively.",
    "output": "Print \" Yes\" if John can maintain the water level for t days and \" No\" otherwise.",
    "note": "In the first example, John can' t increase the amount of water at the beginning of the first day, since it would exceed the limit r . That is why after the first day the cooler will contain 2 liters of water. The next day John adds 4 liters to the cooler but loses 6 liters, leaving John with 0 liters, which is outside the range [ 1, 10] . In the second example, after the first day John is left with 2 liters of water. At the beginning of the next day he adds 5 liters, then 6 liters get used, leaving John with 1 liter of water which is in range [ 1, 10] . In the third example, after the first day John is left with 7 liters, after the second day \u2014 5 liters, after the fourth \u2014 1 liter. At the beginning of the fifth day John will add 9 liters and lose 2 liters. Meaning, after the fifth day he will have 8 liters left. Then each day the water level will decrease by 2 liters and after the eighth day John will have 2 liters and after the ninth day \u2014 0 liters. 0 is outside range [ 1, 10] , so the answer is \" No\" . In the fourth example, after the first day John is left with 15 liters of water. At the beginning of the second day he adds 7 liters and loses 5 , so after the second day he is left with 17 liters. At the beginning of the third day he adds 7 more liters of water and loses 5 , so after the third day he is left with 19 liters. 19 is in range [ 15, 25] so the answer is \" Yes\" .",
    "topics": [
      "brute force",
      "graphs",
      "greedy",
      "implementation",
      "math"
    ],
    "id": "1461E"
  },
  {
    "title": "Random Events",
    "url": "https://codeforces.com/problemset/problem/1461/C",
    "history": "Ron is a happy owner of a permutation a of length n . A permutation of length n is an array consisting of n distinct integers from 1 to n in arbitrary order. For example, [ 2, 3, 1, 5, 4] is a permutation, but [ 1, 2, 2] is not a permutation ( 2 appears twice in the array) and [ 1, 3, 4] is also not a permutation ( n= 3 but there is 4 in the array) . Ron' s permutation is subjected to m experiments of the following type: ( r_ i , p_ i ) . This means that elements in range [ 1, r_ i] ( in other words, the prefix of length r_ i ) have to be sorted in ascending order with the probability of p_ i . All experiments are performed in the same order in which they are specified in the input data. As an example, let' s take a look at a permutation [ 4, 2, 1, 5, 3] and an experiment ( 3, 0. 6 ) . After such an experiment with the probability of 60% the permutation will assume the form [ 1, 2, 4, 5, 3] and with a 40% probability it will remain unchanged. You have to determine the probability of the permutation becoming completely sorted in ascending order after m experiments.",
    "input": "Each test contains one or more test cases. The first line contains the number of test cases t ( 1 \u2264 t \u2264 100 ) . The first line of each test case contains two integers n and m ( 1 \u2264 n, m \u2264 10^ 5) \u2014 the length of the permutation and the number of experiments, respectively. The second line of each test case contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 n) \u2014 contents of the permutation. The following m lines of each test case each contain an integer r_ i and a real number p_ i ( 1 \u2264 r_ i \u2264 n, 0 \u2264 p_ i \u2264 1) \u2014 the length of the prefix and the probability of it being sorted. All probabilities are given with at most 6 decimal places. It is guaranteed that the sum of n and the sum of m does not exceed 10^ 5 ( \u2211 n, \u2211 m \u2264 10^ 5 ) .",
    "output": "For each test case, print a single number \u2014 the probability that after all experiments the permutation becomes sorted in ascending order. Your answer will be considered correct if its absolute or relative error does not exceed 10^ - 6 . Formally, let your answer be a , and the jury' s answer be b . Your answer is accepted if and only if | a - b| / max( 1, | b| ) \u2264 10^ - 6 .",
    "note": "Explanation of the first test case: It can be demonstrated that whether the final permutation is sorted or not depends solely on sorting being performed in the ( 4, 0. 6) experiment.",
    "topics": [
      "dp",
      "math",
      "probabilities"
    ],
    "id": "1461C"
  },
  {
    "title": "Move and Turn",
    "url": "https://codeforces.com/problemset/problem/1459/B",
    "history": "A robot is standing at the origin of the infinite two- dimensional plane. Each second the robot moves exactly 1 meter in one of the four cardinal directions: north, south, west, and east. For the first step the robot can choose any of the four directions, but then at the end of every second it has to turn 90 degrees left or right with respect to the direction it just moved in. For example, if the robot has just moved north or south, the next step it takes has to be either west or east, and vice versa. The robot makes exactly n steps from its starting position according to the rules above. How many different points can the robot arrive to at the end? The final orientation of the robot can be ignored.",
    "input": "The only line contains a single integer n ( 1 \u2264 n \u2264 1000 ) \u2014 the number of steps the robot makes.",
    "output": "Print a single integer \u2014 the number of different possible locations after exactly n steps.",
    "note": "In the first sample case, the robot will end up 1 meter north, south, west, or east depending on its initial direction. In the second sample case, the robot will always end up \u221a( 2) meters north- west, north- east, south- west, or south- east.",
    "topics": [
      "dp",
      "math"
    ],
    "id": "1459B"
  },
  {
    "title": "Red-Blue Shuffle",
    "url": "https://codeforces.com/problemset/problem/1459/A",
    "history": "There are n cards numbered 1, . . . , n . The card i has a red digit r_ i and a blue digit b_ i written on it. We arrange all n cards in random order from left to right, with all permutations of 1, . . . , n having the same probability. We then read all red digits on the cards from left to right, and obtain an integer R . In the same way, we read all blue digits and obtain an integer B . When reading a number, leading zeros can be ignored. If all digits in a number are zeros, then the number is equal to 0 . Below is an illustration of a possible rearrangement of three cards, and how R and B can be found. Two players, Red and Blue, are involved in a bet. Red bets that after the shuffle R > B , and Blue bets that R < B . If in the end R = B , the bet results in a draw, and neither player wins. Determine, which of the two players is more likely ( has higher probability) to win the bet, or that their chances are equal. Refer to the Note section for a formal discussion of comparing probabilities.",
    "input": "The first line contains a single integer T ( 1 \u2264 T \u2264 100 ) \u2014 the number of test cases. Descriptions of T test cases follow. Each test case description starts with a line containing a single integer n ( 1 \u2264 n \u2264 1000 ) \u2014 the number of cards. The following line contains a string of n digits r_ 1, . . . , r_ n \u2014 red digits on cards 1, . . . , n respectively. The following line contains a string of n digits b_ 1, . . . , b_ n \u2014 blue digits on cards 1, . . . , n respectively. Note that digits in the same line are not separated with any delimiters.",
    "output": "Print T answers for the test cases in order, one per line. If Red has a strictly higher change to win, print \" RED\" . If Blue has a strictly higher change to win, print \" BLUE\" . If both players are equally likely to win, print \" EQUAL\" . Note that all answers are case- sensitive.",
    "note": "Formally, let n_ R be the number of permutations of cards 1, . . . , n such that the resulting numbers R and B satisfy R > B . Similarly, let n_ B be the number of permutations such that R < B . If n_ R > n_ B , you should print \" RED\" . If n_ R < n_ B , you should print \" BLUE\" . If n_ R = n_ B , print \" EQUAL\" . In the first sample case, R = 777 and B = 111 regardless of the card order, thus Red always wins. In the second sample case, there are two card orders when Red wins, and four card orders when Blue wins: order 1, 2, 3 : 314 > 159 ; order 1, 3, 2 : 341 > 195 ; order 2, 1, 3 : 134 < 519 ; order 2, 3, 1 : 143 < 591 ; order 3, 1, 2 : 431 < 915 ; order 3, 2, 1 : 413 < 951 . Since R < B is more frequent, the answer is \" BLUE\" . In the third sample case, R = B regardless of the card order, thus the bet is always a draw, and both Red and Blue have zero chance to win.",
    "topics": [
      "math",
      "probabilities"
    ],
    "id": "1459A"
  },
  {
    "title": "Latin Square",
    "url": "https://codeforces.com/problemset/problem/1458/C",
    "history": "You are given a square matrix of size n . Every row and every column of this matrix is a permutation of 1 , 2 , . . . , n . Let a_ i, j be the element at the intersection of i - th row and j - th column for every 1 \u2264 i, j \u2264 n . Rows are numbered 1, . . . , n top to bottom, and columns are numbered 1, . . . , n left to right. There are six types of operations: R: cyclically shift all columns to the right, formally, set the value of each a_ i, j to a_ i, ( ( j - 2) n) + 1 ; L: cyclically shift all columns to the left, formally, set the value of each a_ i, j to a_ i, ( j n) + 1 ; D: cyclically shift all rows down, formally, set the value of each a_ i, j to a_ ( ( i - 2) n) + 1, j ; U: cyclically shift all rows up, formally, set the value of each a_ i, j to a_ ( i n) + 1, j ; I: replace the permutation read left to right in each row with its inverse. C: replace the permutation read top to bottom in each column with its inverse. Inverse of a permutation p_ 1 , p_ 2 , . . . , p_ n is a permutation q_ 1 , q_ 2 , . . . , q_ n , such that p_ q_ i = i for every 1 \u2264 i \u2264 n . One can see that after any sequence of operations every row and every column of the matrix will still be a permutation of 1, 2, . . . , n . Given the initial matrix description, you should process m operations and output the final matrix.",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 1000 ) \u2014 number of test cases. t test case descriptions follow. The first line of each test case description contains two integers n and m ( 1 \u2264 n \u2264 1000, 1 \u2264 m \u2264 10^ 5 ) \u2014 size of the matrix and number of operations. Each of the next n lines contains n integers separated by single spaces \u2014 description of the matrix a ( 1 \u2264 a_ i, j\u2264 n ) . The last line of the description contains a string of m characters describing the operations in order, according to the format above. The sum of n does not exceed 1000 , and the sum of m does not exceed 10^ 5 .",
    "output": "For each test case, print n lines with n integers each \u2014 the final matrix after m operations.",
    "note": "Line breaks between sample test case answers are only for clarity, and don' t have to be printed.",
    "topics": [
      "math",
      "matrices"
    ],
    "id": "1458C"
  },
  {
    "title": "Row GCD",
    "url": "https://codeforces.com/problemset/problem/1458/A",
    "history": "You are given two positive integer sequences a_ 1, . . . , a_ n and b_ 1, . . . , b_ m . For each j = 1, . . . , m find the greatest common divisor of a_ 1 + b_ j, . . . , a_ n + b_ j .",
    "input": "The first line contains two integers n and m ( 1 \u2264 n, m \u2264 2 \u00b7 10^ 5 ) . The second line contains n integers a_ 1, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 18) . The third line contains m integers b_ 1, . . . , b_ m ( 1 \u2264 b_ j \u2264 10^ 18) .",
    "output": "Print m integers. The j - th of them should be equal to GCD ( a_ 1 + b_ j, . . . , a_ n + b_ j) .",
    "note": "",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "1458A"
  },
  {
    "title": "Four Points",
    "url": "https://codeforces.com/problemset/problem/1455/E",
    "history": "You are given four different integer points p_ 1 , p_ 2 , p_ 3 and p_ 4 on XY grid. In one step you can choose one of the points p_ i and move it in one of four directions by one. In other words, if you have chosen point p_ i = ( x, y) you can move it to ( x, y + 1) , ( x, y - 1) , ( x + 1, y) or ( x - 1, y) . Your goal to move points in such a way that they will form a square with sides parallel to OX and OY axes ( a square with side 0 is allowed) . What is the minimum number of steps you need to make such a square?",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. Each test case consists of four lines. Each line contains two integers x and y ( 0 \u2264 x, y \u2264 10^ 9 ) \u2014 coordinates of one of the points p_ i = ( x, y) . All points are different in one test case.",
    "output": "For each test case, print the single integer \u2014 the minimum number of steps to make a square.",
    "note": "In the first test case, one of the optimal solutions is shown below: Each point was moved two times, so the answer 2 + 2 + 2 + 2 = 8 . In the second test case, one of the optimal solutions is shown below: The answer is 3 + 1 + 0 + 3 = 7 . In the third test case, one of the optimal solutions is shown below: The answer is 1 + 1 + 2 + 1 = 5 .",
    "topics": [
      "brute force",
      "constructive algorithms",
      "flows",
      "geometry",
      "greedy",
      "implementation",
      "math",
      "ternary search"
    ],
    "id": "1455E"
  },
  {
    "title": "Ping-pong",
    "url": "https://codeforces.com/problemset/problem/1455/C",
    "history": "Alice and Bob play ping- pong with simplified rules. During the game, the player serving the ball commences a play. The server strikes the ball then the receiver makes a return by hitting the ball back. Thereafter, the server and receiver must alternately make a return until one of them doesn' t make a return. The one who doesn' t make a return loses this play. The winner of the play commences the next play. Alice starts the first play. Alice has x stamina and Bob has y . To hit the ball ( while serving or returning) each player spends 1 stamina, so if they don' t have any stamina, they can' t return the ball ( and lose the play) or can' t serve the ball ( in this case, the other player serves the ball instead) . If both players run out of stamina, the game is over. Sometimes, it' s strategically optimal not to return the ball, lose the current play, but save the stamina. On the contrary, when the server commences a play, they have to hit the ball, if they have some stamina left. Both Alice and Bob play optimally and want to, firstly, maximize their number of wins and, secondly, minimize the number of wins of their opponent. Calculate the resulting number of Alice' s and Bob' s wins.",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. The first and only line of each test case contains two integers x and y ( 1 \u2264 x, y \u2264 10^ 6 ) \u2014 Alice' s and Bob' s initial stamina.",
    "output": "For each test case, print two integers \u2014 the resulting number of Alice' s and Bob' s wins, if both of them play optimally.",
    "note": "In the first test case, Alice serves the ball and spends 1 stamina. Then Bob returns the ball and also spends 1 stamina. Alice can' t return the ball since she has no stamina left and loses the play. Both of them ran out of stamina, so the game is over with 0 Alice' s wins and 1 Bob' s wins. In the second test case, Alice serves the ball and spends 1 stamina. Bob decides not to return the ball \u2014 he loses the play but saves stamina. Alice, as the winner of the last play, serves the ball in the next play and spends 1 more stamina. This time, Bob returns the ball and spends 1 stamina. Alice doesn' t have any stamina left, so she can' t return the ball and loses the play. Both of them ran out of stamina, so the game is over with 1 Alice' s and 1 Bob' s win. In the third test case, Alice serves the ball and spends 1 stamina. Bob returns the ball and spends 1 stamina. Alice ran out of stamina, so she can' t return the ball and loses the play. Bob, as a winner, serves the ball in the next 6 plays. Each time Alice can' t return the ball and loses each play. The game is over with 0 Alice' s and 7 Bob' s wins.",
    "topics": [
      "constructive algorithms",
      "games",
      "math"
    ],
    "id": "1455C"
  },
  {
    "title": "Jumps",
    "url": "https://codeforces.com/problemset/problem/1455/B",
    "history": "You are standing on the OX - axis at point 0 and you want to move to an integer point x > 0 . You can make several jumps. Suppose you' re currently at point y ( y may be negative) and jump for the k - th time. You can: either jump to the point y + k or jump to the point y - 1 . What is the minimum number of jumps you need to reach the point x ?",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 1000 ) \u2014 the number of test cases. The first and only line of each test case contains the single integer x ( 1 \u2264 x \u2264 10^ 6 ) \u2014 the destination point.",
    "output": "For each test case, print the single integer \u2014 the minimum number of jumps to reach x . It can be proved that we can reach any integer point x .",
    "note": "In the first test case x = 1 , so you need only one jump: the 1 - st jump from 0 to 0 + 1 = 1 . In the second test case x = 2 . You need at least three jumps: the 1 - st jump from 0 to 0 + 1 = 1 ; the 2 - nd jump from 1 to 1 + 2 = 3 ; the 3 - rd jump from 3 to 3 - 1 = 2 ; Two jumps are not enough because these are the only possible variants: the 1 - st jump as - 1 and the 2 - nd one as - 1 \u2014 you' ll reach 0 - 1 - 1 = - 2 ; the 1 - st jump as - 1 and the 2 - nd one as + 2 \u2014 you' ll reach 0 - 1 + 2 = 1 ; the 1 - st jump as + 1 and the 2 - nd one as - 1 \u2014 you' ll reach 0 + 1 - 1 = 0 ; the 1 - st jump as + 1 and the 2 - nd one as + 2 \u2014 you' ll reach 0 + 1 + 2 = 3 ; In the third test case, you need two jumps: the 1 - st one as + 1 and the 2 - nd one as + 2 , so 0 + 1 + 2 = 3 . In the fourth test case, you need three jumps: the 1 - st one as - 1 , the 2 - nd one as + 2 and the 3 - rd one as + 3 , so 0 - 1 + 2 + 3 = 4 .",
    "topics": [
      "constructive algorithms",
      "math"
    ],
    "id": "1455B"
  },
  {
    "title": "Strange Functions",
    "url": "https://codeforces.com/problemset/problem/1455/A",
    "history": "Let' s define a function f( x) ( x is a positive integer) as follows: write all digits of the decimal representation of x backwards, then get rid of the leading zeroes. For example, f( 321) = 123 , f( 120) = 21 , f( 1000000) = 1 , f( 111) = 111 . Let' s define another function g( x) = xf( f( x) ) ( x is a positive integer as well) . Your task is the following: for the given positive integer n , calculate the number of different values of g( x) among all numbers x such that 1 \u2264 x \u2264 n .",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 100 ) \u2014 the number of test cases. Each test case consists of one line containing one integer n ( 1 \u2264 n < 10^ 100 ) . This integer is given without leading zeroes.",
    "output": "For each test case, print one integer \u2014 the number of different values of the function g( x) , if x can be any integer from [ 1, n] .",
    "note": "Explanations for the two first test cases of the example: if n = 4 , then for every integer x such that 1 \u2264 x \u2264 n , xf( f( x) ) = 1 ; if n = 37 , then for some integers x such that 1 \u2264 x \u2264 n , xf( f( x) ) = 1 ( for example, if x = 23 , f( f( x) ) = 23 , xf( f( x) ) = 1 ) ; and for other values of x , xf( f( x) ) = 10 ( for example, if x = 30 , f( f( x) ) = 3 , xf( f( x) ) = 10 ) . So, there are two different values of g( x) .",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "1455A"
  },
  {
    "title": "Number into Sequence",
    "url": "https://codeforces.com/problemset/problem/1454/D",
    "history": "You are given an integer n ( n > 1 ) . Your task is to find a sequence of integers a_ 1, a_ 2, . . . , a_ k such that: each a_ i is strictly greater than 1 ; a_ 1 \u00b7 a_ 2 \u00b7. . . \u00b7 a_ k = n ( i. e. the product of this sequence is n ) ; a_ i + 1 is divisible by a_ i for each i from 1 to k- 1 ; k is the maximum possible ( i. e. the length of this sequence is the maximum possible) . If there are several such sequences, any of them is acceptable. It can be proven that at least one valid sequence always exists for any integer n > 1 . You have to answer t independent test cases.",
    "input": "The first line of the input contains one integer t ( 1 \u2264 t \u2264 5000 ) \u2014 the number of test cases. Then t test cases follow. The only line of the test case contains one integer n ( 2 \u2264 n \u2264 10^ 10 ) . It is guaranteed that the sum of n does not exceed 10^ 10 ( \u2211 n \u2264 10^ 10 ) .",
    "output": "For each test case, print the answer: in the first line, print one positive integer k \u2014 the maximum possible length of a . In the second line, print k integers a_ 1, a_ 2, . . . , a_ k \u2014 the sequence of length k satisfying the conditions from the problem statement. If there are several answers, you can print any. It can be proven that at least one valid sequence always exists for any integer n > 1 .",
    "note": "",
    "topics": [
      "constructive algorithms",
      "math",
      "number theory"
    ],
    "id": "1454D"
  },
  {
    "title": "Checkpoints",
    "url": "https://codeforces.com/problemset/problem/1453/D",
    "history": "Gildong is developing a game consisting of n stages numbered from 1 to n . The player starts the game from the 1 - st stage and should beat the stages in increasing order of the stage number. The player wins the game after beating the n - th stage. There is at most one checkpoint on each stage, and there is always a checkpoint on the 1 - st stage. At the beginning of the game, only the checkpoint on the 1 - st stage is activated, and all other checkpoints are deactivated. When the player gets to the i - th stage that has a checkpoint, that checkpoint is activated. For each try of a stage, the player can either beat the stage or fail the stage. If they beat the i - th stage, the player is moved to the i+ 1 - st stage. If they fail the i - th stage, the player is moved to the most recent checkpoint they activated, and they have to beat the stages after that checkpoint again. For example, assume that n = 4 and the checkpoints are on the 1 - st and 3 - rd stages. The player starts at the 1 - st stage. If they fail on the 1 - st stage, they need to retry the 1 - st stage because the checkpoint on the 1 - st stage is the most recent checkpoint they activated. If the player beats the 1 - st stage, they' re moved to the 2 - nd stage. If they fail it, they' re sent back to the 1 - st stage again. If they beat both the 1 - st stage and the 2 - nd stage, they get to the 3 - rd stage and the checkpoint on the 3 - rd stage is activated. Now whenever they fail on the 3 - rd stage, or the 4 - th stage after beating the 3 - rd stage, they' re sent back to the 3 - rd stage. If they beat both the 3 - rd stage and the 4 - th stage, they win the game. Gildong is going to build the stages to have equal difficulty. He wants you to find any series of stages and checkpoints using at most 2000 stages, where the expected number of tries over all stages is exactly k , for a player whose probability of beating each stage is exactly 12 .",
    "input": "Each test contains one or more test cases. The first line contains the number of test cases t ( 1 \u2264 t \u2264 50 ) . Each test case contains exactly one line. The line consists of a single integer k ( 1 \u2264 k \u2264 10^ 18 ) \u2014 the expected number of tries over all stages Gildong wants to set for a player whose probability of beating each stage is exactly 12 .",
    "output": "For each test case, print - 1 if it' s impossible to construct such a series of stages and checkpoints using at most 2000 stages. Otherwise, print two lines. The first line should contain a single integer n ( 1 \u2264 n \u2264 2000 ) \u2013 the number of stages. The second line should contain n integers, where the i - th integer represents whether the i - th stage has a checkpoint. The i - th integer should be 0 if the i - th stage doesn' t have a checkpoint, and 1 if it has a checkpoint. Note that the first integer must be 1 according to the description.",
    "note": "In the first and the second case, we can see that the ' easiest' series of stages is to have 1 stage with a checkpoint. This already requires 2 tries in expectation, so it is impossible to make it to require only 1 try. In the third case, it takes 2 tries in expectation to beat each stage, and the player can always retry that stage without falling back to one of the previous stages if they fail it. Therefore the total expected number of tries is 8 . Note that there exists an answer with fewer stages, but you are not required to minimize the number of stages used.",
    "topics": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "math",
      "probabilities"
    ],
    "id": "1453D"
  },
  {
    "title": "Radio Towers",
    "url": "https://codeforces.com/problemset/problem/1452/D",
    "history": "There are n + 2 towns located on a coordinate line, numbered from 0 to n + 1 . The i - th town is located at the point i . You build a radio tower in each of the towns 1, 2, . . . , n with probability 1/ 2 ( these events are independent) . After that, you want to set the signal power on each tower to some integer from 1 to n ( signal powers are not necessarily the same, but also not necessarily different) . The signal from a tower located in a town i with signal power p reaches every city c such that | c - i| < p . After building the towers, you want to choose signal powers in such a way that: towns 0 and n + 1 don' t get any signal from the radio towers; towns 1, 2, . . . , n get signal from exactly one radio tower each. For example, if n = 5 , and you have built the towers in towns 2 , 4 and 5 , you may set the signal power of the tower in town 2 to 2 , and the signal power of the towers in towns 4 and 5 to 1 . That way, towns 0 and n + 1 don' t get the signal from any tower, towns 1 , 2 and 3 get the signal from the tower in town 2 , town 4 gets the signal from the tower in town 4 , and town 5 gets the signal from the tower in town 5 . Calculate the probability that, after building the towers, you will have a way to set signal powers to meet all constraints.",
    "input": "The first ( and only) line of the input contains one integer n ( 1 \u2264 n \u2264 2 \u00b7 10^ 5 ) .",
    "output": "Print one integer \u2014 the probability that there will be a way to set signal powers so that all constraints are met, taken modulo 998244353 . Formally, the probability can be expressed as an irreducible fraction x/ y . You have to print the value of x \u00b7 y^ - 1 998244353 , where y^ - 1 is an integer such that y \u00b7 y^ - 1 998244353 = 1 .",
    "note": "The real answer for the first example is 1/ 4 : with probability 1/ 4 , the towers are built in both towns 1 and 2 , so we can set their signal powers to 1 . The real answer for the second example is 1/ 4 : with probability 1/ 8 , the towers are built in towns 1 , 2 and 3 , so we can set their signal powers to 1 ; with probability 1/ 8 , only one tower in town 2 is built, and we can set its signal power to 2 . The real answer for the third example is 5/ 32 . Note that even though the previous explanations used equal signal powers for all towers, it is not necessarily so. For example, if n = 5 and the towers are built in towns 2 , 4 and 5 , you may set the signal power of the tower in town 2 to 2 , and the signal power of the towers in towns 4 and 5 to 1 .",
    "topics": [
      "combinatorics",
      "dp",
      "math"
    ],
    "id": "1452D"
  },
  {
    "title": "Toy Blocks",
    "url": "https://codeforces.com/problemset/problem/1452/B",
    "history": "You are asked to watch your nephew who likes to play with toy blocks in a strange way. He has n boxes and the i - th box has a_ i blocks. His game consists of two steps: he chooses an arbitrary box i ; he tries to move all blocks from the i - th box to other boxes. If he can make the same number of blocks in each of n - 1 other boxes then he will be happy, otherwise, will be sad. Note that your nephew can only move the blocks from the chosen box to the other boxes; he cannot move blocks from the other boxes. You don' t want to make your nephew sad, so you decided to put several extra blocks into some boxes in such a way that no matter which box i he chooses he won' t be sad. What is the minimum number of extra blocks you need to put?",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 1000 ) \u2014 the number of test cases. The first line of each test case contains the integer n ( 2 \u2264 n \u2264 10^ 5 ) \u2014 the number of boxes. The second line of each test case contains n integers a_ 1, a_ 2, . . . , a_ n ( 0 \u2264 a_ i \u2264 10^ 9 ) \u2014 the number of blocks in each box. It' s guaranteed that the sum of n over test cases doesn' t exceed 10^ 5 .",
    "output": "For each test case, print a single integer \u2014 the minimum number of blocks you need to put. It can be proved that the answer always exists, i. e. the number of blocks is finite.",
    "note": "In the first test case, you can, for example, put one extra block into the first box and make a = [ 4, 2, 2] . If your nephew chooses the box with 4 blocks, then we will move two blocks to the second box and two blocks to the third box. If he chooses the box with 2 blocks then he will move these two blocks to the other box with 2 blocks. In the second test case, you don' t need to put any extra blocks, since no matter which box your nephew chooses, he can always make other boxes equal. In the third test case, you should put 3 extra blocks. For example, you can put 2 blocks in the first box and 1 block in the third box. You' ll get array a = [ 2, 3, 1] .",
    "topics": [
      "binary search",
      "greedy",
      "math",
      "sortings"
    ],
    "id": "1452B"
  },
  {
    "title": "Robot Program",
    "url": "https://codeforces.com/problemset/problem/1452/A",
    "history": "There is an infinite 2- dimensional grid. The robot stands in cell ( 0, 0) and wants to reach cell ( x, y) . Here is a list of possible commands the robot can execute: move north from cell ( i, j) to ( i, j + 1) ; move east from cell ( i, j) to ( i + 1, j) ; move south from cell ( i, j) to ( i, j - 1) ; move west from cell ( i, j) to ( i - 1, j) ; stay in cell ( i, j) . The robot wants to reach cell ( x, y) in as few commands as possible. However, he can' t execute the same command two or more times in a row. What is the minimum number of commands required to reach ( x, y) from ( 0, 0) ?",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 100 ) \u2014 the number of testcases. Each of the next t lines contains two integers x and y ( 0 \u2264 x, y \u2264 10^ 4 ) \u2014 the destination coordinates of the robot.",
    "output": "For each testcase print a single integer \u2014 the minimum number of commands required for the robot to reach ( x, y) from ( 0, 0) if no command is allowed to be executed two or more times in a row.",
    "note": "The explanations for the example test: We use characters N, E, S, W and 0 to denote going north, going east, going south, going west and staying in the current cell, respectively. In the first test case, the robot can use the following sequence: NENENENENE. In the second test case, the robot can use the following sequence: NENENEN. In the third test case, the robot can use the following sequence: ESENENE0ENESE. In the fourth test case, the robot doesn' t need to go anywhere at all. In the fifth test case, the robot can use the following sequence: E0E.",
    "topics": [
      "math"
    ],
    "id": "1452A"
  },
  {
    "title": "Bitwise Queries (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1451/E2",
    "history": "The only difference between the easy and hard versions is the constraints on the number of queries. This is an interactive problem. Ridbit has a hidden array a of n integers which he wants Ashish to guess. Note that n is a power of two. Ashish is allowed to ask three different types of queries. They are of the form AND i j : ask for the bitwise AND of elements a_ i and a_ j ( 1 \u2264 i, j \u2264 n , i = \u0338 j) OR i j : ask for the bitwise OR of elements a_ i and a_ j ( 1 \u2264 i, j \u2264 n , i = \u0338 j) XOR i j : ask for the bitwise XOR of elements a_ i and a_ j ( 1 \u2264 i, j \u2264 n , i = \u0338 j) Can you help Ashish guess the elements of the array? In this version, each element takes a value in the range [ 0, n- 1] ( inclusive) and Ashish can ask no more than n+ 1 queries. InteractionTo ask a query print a single line containing one of the following ( without quotes) \" AND i j\" \" OR i j\" \" XOR i j\" where i and j ( 1 \u2264 i, j \u2264 n , i = \u0338 j) denote the indices being queried. For each query, you will receive an integer x whose value depends on the type of query. If the indices queried are invalid or you exceed the number of queries however, you will get x = - 1 . In this case, you should terminate the program immediately. When you have guessed the elements of the array, print a single line \" ! \" ( without quotes) , followed by n space- separated integers \u2014 the elements of the array. Guessing the array does not count towards the number of queries asked. The interactor is not adaptive. The array a does not change with queries. After printing a query do not forget to output the end of the line and flush the output. Otherwise, you will get Idleness limit exceeded. To do this, use: fflush( stdout) or cout. flush( ) in C+ + ; System. out. flush( ) in Java; flush( output) in Pascal; stdout. flush( ) in Python; see the documentation for other languages. HacksTo hack the solution, use the following test format: On the first line print a single integer n ( 4 \u2264 n \u2264 2^ 16) \u2014 the length of the array. It must be a power of 2. The next line should contain n space- separated integers in the range [ 0, n- 1] \u2014 the array a .",
    "input": "The first line of input contains one integer n ( 4 \u2264 n \u2264 2^ 16) \u2014 the length of the array. It is guaranteed that n is a power of two.",
    "output": "",
    "note": "The array a in the example is [ 0, 0, 2, 3] .",
    "topics": [
      "bitmasks",
      "constructive algorithms",
      "interactive",
      "math"
    ],
    "id": "1451E2"
  },
  {
    "title": "Bitwise Queries (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1451/E1",
    "history": "The only difference between the easy and hard versions is the constraints on the number of queries. This is an interactive problem. Ridbit has a hidden array a of n integers which he wants Ashish to guess. Note that n is a power of two. Ashish is allowed to ask three different types of queries. They are of the form AND i j : ask for the bitwise AND of elements a_ i and a_ j ( 1 \u2264 i, j \u2264 n , i = \u0338 j) OR i j : ask for the bitwise OR of elements a_ i and a_ j ( 1 \u2264 i, j \u2264 n , i = \u0338 j) XOR i j : ask for the bitwise XOR of elements a_ i and a_ j ( 1 \u2264 i, j \u2264 n , i = \u0338 j) Can you help Ashish guess the elements of the array? In this version, each element takes a value in the range [ 0, n- 1] ( inclusive) and Ashish can ask no more than n+ 2 queries. InteractionTo ask a query print a single line containing one of the following ( without quotes) \" AND i j\" \" OR i j\" \" XOR i j\" where i and j ( 1 \u2264 i, j \u2264 n , i = \u0338 j) denote the indices being queried. For each query, you will receive an integer x whose value depends on the type of query. If the indices queried are invalid or you exceed the number of queries however, you will get x = - 1 . In this case, you should terminate the program immediately. When you have guessed the elements of the array, print a single line \" ! \" ( without quotes) , followed by n space- separated integers \u2014 the elements of the array. Guessing the array does not count towards the number of queries asked. The interactor is not adaptive. The array a does not change with queries. After printing a query do not forget to output the end of the line and flush the output. Otherwise, you will get Idleness limit exceeded. To do this, use: fflush( stdout) or cout. flush( ) in C+ + ; System. out. flush( ) in Java; flush( output) in Pascal; stdout. flush( ) in Python; see the documentation for other languages. HacksTo hack the solution, use the following test format: On the first line print a single integer n ( 4 \u2264 n \u2264 2^ 16) \u2014 the length of the array. It must be a power of 2. The next line should contain n space- separated integers in the range [ 0, n- 1] \u2014 the array a .",
    "input": "The first line of input contains one integer n ( 4 \u2264 n \u2264 2^ 16) \u2014 the length of the array. It is guaranteed that n is a power of two.",
    "output": "",
    "note": "The array a in the example is [ 0, 0, 2, 3] .",
    "topics": [
      "bitmasks",
      "constructive algorithms",
      "interactive",
      "math"
    ],
    "id": "1451E1"
  },
  {
    "title": "Circle Game",
    "url": "https://codeforces.com/problemset/problem/1451/D",
    "history": "Utkarsh is forced to play yet another one of Ashish' s games. The game progresses turn by turn and as usual, Ashish moves first. Consider the 2D plane. There is a token which is initially at ( 0, 0) . In one move a player must increase either the x coordinate or the y coordinate of the token by exactly k . In doing so, the player must ensure that the token stays within a ( Euclidean) distance d from ( 0, 0) . In other words, if after a move the coordinates of the token are ( p, q) , then p^ 2 + q^ 2 \u2264 d^ 2 must hold. The game ends when a player is unable to make a move. It can be shown that the game will end in a finite number of moves. If both players play optimally, determine who will win.",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 100 ) \u2014 the number of test cases. The only line of each test case contains two space separated integers d ( 1 \u2264 d \u2264 10^ 5 ) and k ( 1 \u2264 k \u2264 d ) .",
    "output": "For each test case, if Ashish wins the game, print \" Ashish\" , otherwise print \" Utkarsh\" ( without the quotes) .",
    "note": "In the first test case, one possible sequence of moves can be ( 0, 0) ( 0, 1) ( 0, 2) . Ashish has no moves left, so Utkarsh wins.",
    "topics": [
      "games",
      "geometry",
      "math"
    ],
    "id": "1451D"
  },
  {
    "title": "Subtract or Divide",
    "url": "https://codeforces.com/problemset/problem/1451/A",
    "history": "Ridbit starts with an integer n . In one move, he can perform one of the following operations: divide n by one of its proper divisors, or subtract 1 from n if n is greater than 1 . A proper divisor is a divisor of a number, excluding itself. For example, 1 , 2 , 4 , 5 , and 10 are proper divisors of 20 , but 20 itself is not. What is the minimum number of moves Ridbit is required to make to reduce n to 1 ?",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 1000 ) \u2014 the number of test cases. The only line of each test case contains a single integer n ( 1 \u2264 n \u2264 10^ 9 ) .",
    "output": "For each test case, output the minimum number of moves required to reduce n to 1 .",
    "note": "For the test cases in the example, n may be reduced to 1 using the following operations in sequence 1 2 1 3 2 1 4 2 1 6 2 1 9 3 2 1",
    "topics": [
      "greedy",
      "math"
    ],
    "id": "1451A"
  },
  {
    "title": "Multithreading (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1450/H2",
    "history": "The only difference between the two versions of the problem is that there are no updates in the easy version. There are n spools of thread placed on the rim of a circular table. The spools come in two types of thread: the first thread is black and the second thread is white. For any two spools of the same color, you can attach them with a thread of that color in a straight line segment. Define a matching as a way to attach spools together so that each spool is attached to exactly one other spool. Coloring is an assignment of colors ( white and black) to the spools. A coloring is called valid if it has at least one matching. That is if the number of black spools and the number of white spools are both even. Given a matching, we can find the number of times some white thread intersects some black thread. We compute the number of pairs of differently colored threads that intersect instead of the number of intersection points, so one intersection point may be counted multiple times if different pairs of threads intersect at the same point. If c is a valid coloring, let f( c) denote the minimum number of such intersections out of all possible matchings. The circle above is described by the coloring bwbbbwww. After matching the spools as shown, there is one intersection between differently colored threads. It can be proven that it is the minimum possible, so f( bwbbbwww) = 1 . You are given a string s representing an unfinished coloring, with black, white, and uncolored spools. A coloring c is called s - reachable if you can achieve it by assigning colors to the uncolored spools of s without changing the others. A coloring c is chosen uniformly at random among all valid, s - reachable colorings. Compute the expected value of f( c) . You should find it by modulo 998244353 . There will be m updates to change one character of s . After each update, you should again compute the expected value of f( c) . We can show that each answer can be written in the form p/ q where p and q are relatively prime integers and q\u2261\u03380998244353 . The answer by modulo 998244353 is equal to ( p\u00b7 q^ - 1) modulo 998244353 .",
    "input": "The first line contains two integers n , m ( 2\u2264 n\u2264 2\u00b7 10^ 5 , n is even, 0\u2264 m\u2264 2\u00b7 10^ 5 ) \u2014 the number of spools and the number of updates, respectively. The second line contains a string s of length n \u2014 the unfinished coloring of the spools. The i - th character will be ' w' , ' b' , or ' ? ' , describing if the i - th spool is white, black, or uncolored, respectively. Each of the next m lines contains an integer i ( 1 \u2264 i \u2264 n ) \u2014 the position of the character in s to be updated, and a character c ( c \u2208{ w, b, ? } ) \u2014 the new color of the spool i after the update. It is guaranteed there exists at least one uncolored spool initially and after each update.",
    "output": "Print m+ 1 lines: the expected value of f( c) initially and after each update. All values should be found by modulo 998244353 .",
    "note": "The first test corresponds closely to the image. Coloring ' ? ' as ' w' does not create a valid coloring because the number of black spools is odd. Then the only reachable valid coloring is ' bwbbbwww' and f( bwbbbwww) = 1 , so the expected value is 1 . In the second test, the string after each update is: ? ? ? ? w? wb? ? ? ? ? ? ? ? wb? ? ? w? ? ? ? wb? ? In the third test, the string after each update is: ww? b wb? b wb? b",
    "topics": [
      "combinatorics",
      "implementation",
      "math"
    ],
    "id": "1450H2"
  },
  {
    "title": "Multithreading (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1450/H1",
    "history": "The only difference between the two versions of the problem is that there are no updates in the easy version. There are n spools of thread placed on the rim of a circular table. The spools come in two types of thread: the first thread is black and the second thread is white. For any two spools of the same color, you can attach them with a thread of that color in a straight line segment. Define a matching as a way to attach spools together so that each spool is attached to exactly one other spool. Coloring is an assignment of colors ( white and black) to the spools. A coloring is called valid if it has at least one matching. That is if the number of black spools and the number of white spools are both even. Given a matching, we can find the number of times some white thread intersects some black thread. We compute the number of pairs of differently colored threads that intersect instead of the number of intersection points, so one intersection point may be counted multiple times if different pairs of threads intersect at the same point. If c is a valid coloring, let f( c) denote the minimum number of such intersections out of all possible matchings. The circle above is described by the coloring bwbbbwww. After matching the spools as shown, there is one intersection between differently colored threads. It can be proven that it is the minimum possible, so f( bwbbbwww) = 1 . You are given a string s representing an unfinished coloring, with black, white, and uncolored spools. A coloring c is called s - reachable if you can achieve it by assigning colors to the uncolored spools of s without changing the others. A coloring c is chosen uniformly at random among all valid, s - reachable colorings. Compute the expected value of f( c) . You should find it by modulo 998244353 . We can show that the answer can be written in the form p/ q where p and q are relatively prime integers and q\u2261\u03380998244353 . The answer by modulo 998244353 is equal to ( p\u00b7 q^ - 1) modulo 998244353 .",
    "input": "The first line contains two integers n , m ( 2\u2264 n\u2264 2\u00b7 10^ 5 , n is even, m= 0 ) \u2014 the number of spools and updates, respectively. There are no updates in the easy version, so it is always 0 . The second line contains a string s of length n \u2014 the unfinished coloring of the spools. The i - th character will be ' w' , ' b' , or ' ? ' , describing if the i - th spool is white, black, or uncolored, respectively. It is guaranteed there exists at least one uncolored spool.",
    "output": "Print the expected value of f( c) by modulo 998244353 .",
    "note": "The first test corresponds closely to the image. Coloring ' ? ' as ' w' does not create a valid coloring because the number of black spools is odd. Then the only reachable valid coloring is ' bwbbbwww' and f( bwbbbwww) = 1 , so the expected value is 1 . It can be shown that the expected value for the second test is 9/ 16 .",
    "topics": [
      "combinatorics",
      "fft",
      "math"
    ],
    "id": "1450H1"
  },
  {
    "title": "Errich-Tac-Toe (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1450/C2",
    "history": "The only difference between the easy and hard versions is that tokens of type O do not appear in the input of the easy version. Errichto gave Monogon the following challenge in order to intimidate him from taking his top contributor spot on Codeforces. In a Tic- Tac- Toe grid, there are n rows and n columns. Each cell of the grid is either empty or contains a token. There are two types of tokens: X and O. If there exist three tokens of the same type consecutive in a row or column, it is a winning configuration. Otherwise, it is a draw configuration. The patterns in the first row are winning configurations. The patterns in the second row are draw configurations. In an operation, you can change an X to an O, or an O to an X. Let k denote the total number of tokens in the grid. Your task is to make the grid a draw in at most \u230ak/ 3\u230b ( rounding down) operations. You are not required to minimize the number of operations.",
    "input": "The first line contains a single integer t ( 1\u2264 t\u2264 100 ) \u2014 the number of test cases. The first line of each test case contains a single integer n ( 1\u2264 n\u2264 300 ) \u2014 the size of the grid. The following n lines each contain a string of n characters, denoting the initial grid. The character in the i - th row and j - th column is ' . ' if the cell is empty, or it is the type of token in the cell: ' X' or ' O' . It is guaranteed that not all cells are empty. The sum of n across all test cases does not exceed 300 .",
    "output": "For each test case, print the state of the grid after applying the operations. We have proof that a solution always exists. If there are multiple solutions, print any.",
    "note": "In the first test case, there are initially three ' O' consecutive in the second row and the second column. By changing the middle token to ' X' we make the grid a draw, and we only changed 1\u2264\u230a 5/ 3\u230b token. In the second test case, the final grid is a draw. We only changed 8\u2264\u230a 32/ 3\u230b tokens. In the third test case, the final grid is a draw. We only changed 7\u2264\u230a 21/ 3\u230b tokens.",
    "topics": [
      "constructive algorithms",
      "math"
    ],
    "id": "1450C2"
  },
  {
    "title": "Errich-Tac-Toe (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1450/C1",
    "history": "The only difference between the easy and hard versions is that tokens of type O do not appear in the input of the easy version. Errichto gave Monogon the following challenge in order to intimidate him from taking his top contributor spot on Codeforces. In a Tic- Tac- Toe grid, there are n rows and n columns. Each cell of the grid is either empty or contains a token. There are two types of tokens: X and O. If there exist three tokens of the same type consecutive in a row or column, it is a winning configuration. Otherwise, it is a draw configuration. The patterns in the first row are winning configurations. The patterns in the second row are draw configurations. In an operation, you can change an X to an O, or an O to an X. Let k denote the total number of tokens in the grid. Your task is to make the grid a draw in at most \u230ak/ 3\u230b ( rounding down) operations. You are not required to minimize the number of operations.",
    "input": "The first line contains a single integer t ( 1\u2264 t\u2264 100 ) \u2014 the number of test cases. The first line of each test case contains a single integer n ( 1\u2264 n\u2264 300 ) \u2014 the size of the grid. The following n lines each contain a string of n characters, denoting the initial grid. The character in the i - th row and j - th column is ' . ' if the cell is empty, or it is the type of token in the cell: ' X' or ' O' . It is guaranteed that not all cells are empty. In the easy version, the character ' O' does not appear in the input. The sum of n across all test cases does not exceed 300 .",
    "output": "For each test case, print the state of the grid after applying the operations. We have proof that a solution always exists. If there are multiple solutions, print any.",
    "note": "In the first test case, there are initially three ' X' consecutive in the second row and the second column. By changing the middle token to ' O' we make the grid a draw, and we only changed 1\u2264\u230a 5/ 3\u230b token. In the second test case, we change only 9\u2264\u230a 32/ 3\u230b tokens, and there does not exist any three ' X' or ' O' consecutive in a row or column, so it is a draw. In the third test case, we change only 3\u2264\u230a 12/ 3\u230b tokens, and the resulting grid is a draw.",
    "topics": [
      "constructive algorithms",
      "math"
    ],
    "id": "1450C1"
  },
  {
    "title": "Numbers Box",
    "url": "https://codeforces.com/problemset/problem/1447/B",
    "history": "You are given a rectangular grid with n rows and m columns. The cell located on the i - th row from the top and the j - th column from the left has a value a_ ij written in it. You can perform the following operation any number of times ( possibly zero) : Choose any two adjacent cells and multiply the values in them by - 1 . Two cells are called adjacent if they share a side. Note that you can use a cell more than once in different operations. You are interested in X , the sum of all the numbers in the grid. What is the maximum X you can achieve with these operations?",
    "input": "Each test contains multiple test cases. The first line contains the number of test cases t ( 1 \u2264 t \u2264 100 ) . Description of the test cases follows. The first line of each test case contains two integers n , m ( 2 \u2264 n , m \u2264 10 ) . The following n lines contain m integers each, the j - th element in the i - th line is a_ ij ( - 100\u2264 a_ ij\u2264 100 ) .",
    "output": "For each testcase, print one integer X , the maximum possible sum of all the values in the grid after applying the operation as many times as you want.",
    "note": "In the first test case, there will always be at least one - 1 , so the answer is 2 . In the second test case, we can use the operation six times to elements adjacent horizontally and get all numbers to be non- negative. So the answer is: 2\u00d7 1 + 3\u00d72 + 3\u00d7 3 + 2\u00d7 4 + 1\u00d7 5 = 30 .",
    "topics": [
      "greedy",
      "math"
    ],
    "id": "1447B"
  },
  {
    "title": "Add Candies",
    "url": "https://codeforces.com/problemset/problem/1447/A",
    "history": "There are n bags with candies, initially the i - th bag contains i candies. You want all the bags to contain an equal amount of candies in the end. To achieve this, you will: Choose m such that 1 \u2264 m \u2264 1000 Perform m operations. In the j - th operation, you will pick one bag and add j candies to all bags apart from the chosen one. Your goal is to find a valid sequence of operations after which all the bags will contain an equal amount of candies. It can be proved that for the given constraints such a sequence always exists. You don' t have to minimize m . If there are several valid sequences, you can output any.",
    "input": "Each test contains multiple test cases. The first line contains the number of test cases t ( 1 \u2264 t \u2264 100 ) . Description of the test cases follows. The first and only line of each test case contains one integer n ( 2 \u2264 n\u2264 100 ) .",
    "output": "For each testcase, print two lines with your answer. In the first line print m ( 1\u2264 m \u2264 1000 ) \u2014 the number of operations you want to take. In the second line print m positive integers a_ 1, a_ 2, . . . , a_ m ( 1 \u2264 a_ i \u2264 n ) , where a_ j is the number of bag you chose on the j - th operation.",
    "note": "In the first case, adding 1 candy to all bags except of the second one leads to the arrangement with [ 2, 2] candies. In the second case, firstly you use first three operations to add 1+ 2+ 3= 6 candies in total to each bag except of the third one, which gives you [ 7, 8, 3] . Later, you add 4 candies to second and third bag, so you have [ 7, 12, 7] , and 5 candies to first and third bag \u2014 and the result is [ 12, 12, 12] .",
    "topics": [
      "constructive algorithms",
      "math"
    ],
    "id": "1447A"
  },
  {
    "title": "Elimination",
    "url": "https://codeforces.com/problemset/problem/1445/B",
    "history": "There is a famous olympiad, which has more than a hundred participants. The Olympiad consists of two stages: the elimination stage, and the final stage. At least a hundred participants will advance to the final stage. The elimination stage in turn consists of two contests. A result of the elimination stage is the total score in two contests, but, unfortunately, the jury lost the final standings and has only standings for the first and for the second contest separately. In each contest, the participants are ranked by their point score in non- increasing order. When two participants have a tie ( earned the same score) , they are ranked by their passport number ( in accordance with local regulations, all passport numbers are distinct) . In the first contest, the participant on the 100- th place scored a points. Also, the jury checked all participants from the 1- st to the 100- th place ( inclusive) in the first contest and found out that all of them have at least b points in the second contest. Similarly, for the second contest, the participant on the 100- th place has c points. And the jury checked that all the participants from the 1- st to the 100- th place ( inclusive) have at least d points in the first contest. After two contests, all participants are ranked by their total score in two contests in non- increasing order. When participants have the same total score, tie- breaking with passport numbers is used. The cutoff score to qualify to the final stage is the total score of the participant on the 100- th place. Given integers a , b , c , d , please help the jury determine the smallest possible value of the cutoff score.",
    "input": "You need to process t test cases. The first line contains an integer t ( 1 \u2264 t \u2264 3025 ) \u2014 the number of test cases. Then descriptions of t test cases follow. The first line of each test case contains four integers a , b , c , d ( 0 \u2264 a, b, c, d \u2264 9 ; d \u2264 a ; b \u2264 c ) . One can show that for any test case satisfying the constraints above, there is at least one olympiad scenario possible.",
    "output": "For each test case print a single integer \u2014 the smallest possible cutoff score in some olympiad scenario satisfying the given information.",
    "note": "For the first test case, consider the following olympiad scenario: there are 101 participants in the elimination stage, each having 1 point for the first contest and 2 points for the second contest. Hence the total score of the participant on the 100- th place is 3 . For the second test case, consider the following olympiad scenario: there are 50 participants with points 5 and 9 for the first and second contest respectively; 50 participants with points 4 and 8 for the first and second contest respectively; and 50 participants with points 2 and 9 for the first and second contest respectively. Hence the total point score of the participant on the 100- th place is 12 .",
    "topics": [
      "greedy",
      "math"
    ],
    "id": "1445B"
  },
  {
    "title": "Divide and Sum",
    "url": "https://codeforces.com/problemset/problem/1444/B",
    "history": "You are given an array a of length 2n . Consider a partition of array a into two subsequences p and q of length n each ( each element of array a should be in exactly one subsequence: either in p or in q ) . Let' s sort p in non- decreasing order, and q in non- increasing order, we can denote the sorted versions by x and y , respectively. Then the cost of a partition is defined as f( p, q) = \u2211_ i = 1^ n | x_ i - y_ i| . Find the sum of f( p, q) over all correct partitions of array a . Since the answer might be too big, print its remainder modulo 998244353 .",
    "input": "The first line contains a single integer n ( 1 \u2264 n \u2264 150 000 ) . The second line contains 2n integers a_ 1, a_ 2, . . . , a_ 2n ( 1 \u2264 a_ i \u2264 10^ 9 ) \u2014 elements of array a .",
    "output": "Print one integer \u2014 the answer to the problem, modulo 998244353 .",
    "note": "Two partitions of an array are considered different if the sets of indices of elements included in the subsequence p are different. In the first example, there are two correct partitions of the array a : p = [ 1] , q = [ 4] , then x = [ 1] , y = [ 4] , f( p, q) = | 1 - 4| = 3 ; p = [ 4] , q = [ 1] , then x = [ 4] , y = [ 1] , f( p, q) = | 4 - 1| = 3 . In the second example, there are six valid partitions of the array a : p = [ 2, 1] , q = [ 2, 1] ( elements with indices 1 and 2 in the original array are selected in the subsequence p ) ; p = [ 2, 2] , q = [ 1, 1] ; p = [ 2, 1] , q = [ 1, 2] ( elements with indices 1 and 4 are selected in the subsequence p ) ; p = [ 1, 2] , q = [ 2, 1] ; p = [ 1, 1] , q = [ 2, 2] ; p = [ 2, 1] , q = [ 2, 1] ( elements with indices 3 and 4 are selected in the subsequence p ) .",
    "topics": [
      "combinatorics",
      "math",
      "sortings"
    ],
    "id": "1444B"
  },
  {
    "title": "Division",
    "url": "https://codeforces.com/problemset/problem/1444/A",
    "history": "Oleg' s favorite subjects are History and Math, and his favorite branch of mathematics is division. To improve his division skills, Oleg came up with t pairs of integers p_ i and q_ i and for each pair decided to find the greatest integer x_ i , such that: p_ i is divisible by x_ i ; x_ i is not divisible by q_ i . Oleg is really good at division and managed to find all the answers quickly, how about you?",
    "input": "The first line contains an integer t ( 1 \u2264 t \u2264 50 ) \u2014 the number of pairs. Each of the following t lines contains two integers p_ i and q_ i ( 1 \u2264 p_ i \u2264 10^ 18 ; 2 \u2264 q_ i \u2264 10^ 9 ) \u2014 the i - th pair of integers.",
    "output": "Print t integers: the i - th integer is the largest x_ i such that p_ i is divisible by x_ i , but x_ i is not divisible by q_ i . One can show that there is always at least one value of x_ i satisfying the divisibility conditions for the given constraints.",
    "note": "For the first pair, where p_ 1 = 10 and q_ 1 = 4 , the answer is x_ 1 = 10 , since it is the greatest divisor of 10 and 10 is not divisible by 4 . For the second pair, where p_ 2 = 12 and q_ 2 = 6 , note that 12 is not a valid x_ 2 , since 12 is divisible by q_ 2 = 6 ; 6 is not valid x_ 2 as well: 6 is also divisible by q_ 2 = 6 . The next available divisor of p_ 2 = 12 is 4 , which is the answer, since 4 is not divisible by 6 .",
    "topics": [
      "brute force",
      "math",
      "number theory"
    ],
    "id": "1444A"
  },
  {
    "title": "Long Permutation",
    "url": "https://codeforces.com/problemset/problem/1443/E",
    "history": "A permutation is a sequence of integers from 1 to n of length n containing each number exactly once. For example, [ 1] , [ 4, 3, 5, 1, 2] , [ 3, 2, 1] \u2014 are permutations, and [ 1, 1] , [ 4, 3, 1] , [ 2, 3, 4] \u2014 no. Permutation a is lexicographically smaller than permutation b ( they have the same length n ) , if in the first index i in which they differ, a[ i] < b[ i] . For example, the permutation [ 1, 3, 2, 4] is lexicographically smaller than the permutation [ 1, 3, 4, 2] , because the first two elements are equal, and the third element in the first permutation is smaller than in the second. The next permutation for a permutation a of length n \u2014 is the lexicographically smallest permutation b of length n that lexicographically larger than a . For example: for permutation [ 2, 1, 4, 3] the next permutation is [ 2, 3, 1, 4] ; for permutation [ 1, 2, 3] the next permutation is [ 1, 3, 2] ; for permutation [ 2, 1] next permutation does not exist. You are given the number n \u2014 the length of the initial permutation. The initial permutation has the form a = [ 1, 2, . . . , n] . In other words, a[ i] = i ( 1 \u2264 i \u2264 n ) . You need to process q queries of two types: 1 l r : query for the sum of all elements on the segment [ l, r] . More formally, you need to find a[ l] + a[ l + 1] + . . . + a[ r] . 2 x : x times replace the current permutation with the next permutation. For example, if x= 2 and the current permutation has the form [ 1, 3, 4, 2] , then we should perform such a chain of replacements [ 1, 3, 4, 2] \u2192 [ 1, 4, 2, 3] \u2192 [ 1, 4, 3, 2] . For each query of the 1 - st type output the required sum.",
    "input": "The first line contains two integers n ( 2 \u2264 n \u2264 2 \u00b7 10^ 5 ) and q ( 1 \u2264 q \u2264 2 \u00b7 10^ 5 ) , where n \u2014 the length of the initial permutation, and q \u2014 the number of queries. The next q lines contain a single query of the 1 - st or 2 - nd type. The 1 - st type query consists of three integers 1 , l and r ( 1 \u2264 l \u2264 r \u2264 n) , the 2 - nd type query consists of two integers 2 and x ( 1 \u2264 x \u2264 10^ 5) . It is guaranteed that all requests of the 2 - nd type are possible to process.",
    "output": "For each query of the 1 - st type, output on a separate line one integer \u2014 the required sum.",
    "note": "Initially, the permutation has the form [ 1, 2, 3, 4] . Queries processing is as follows: 2 + 3 + 4 = 9 ; [ 1, 2, 3, 4] \u2192 [ 1, 2, 4, 3] \u2192 [ 1, 3, 2, 4] \u2192 [ 1, 3, 4, 2] ; 1 + 3 = 4 ; 4 + 2 = 6",
    "topics": [
      "brute force",
      "math",
      "two pointers"
    ],
    "id": "1443E"
  },
  {
    "title": "Saving the City",
    "url": "https://codeforces.com/problemset/problem/1443/B",
    "history": "Bertown is a city with n buildings in a straight line. The city' s security service discovered that some buildings were mined. A map was compiled, which is a string of length n , where the i - th character is \" 1\" if there is a mine under the building number i and \" 0\" otherwise. Bertown' s best sapper knows how to activate mines so that the buildings above them are not damaged. When a mine under the building numbered x is activated, it explodes and activates two adjacent mines under the buildings numbered x- 1 and x+ 1 ( if there were no mines under the building, then nothing happens) . Thus, it is enough to activate any one mine on a continuous segment of mines to activate all the mines of this segment. For manual activation of one mine, the sapper takes a coins. He can repeat this operation as many times as you want. Also, a sapper can place a mine under a building if it wasn' t there. For such an operation, he takes b coins. He can also repeat this operation as many times as you want. The sapper can carry out operations in any order. You want to blow up all the mines in the city to make it safe. Find the minimum number of coins that the sapper will have to pay so that after his actions there are no mines left in the city.",
    "input": "The first line contains one positive integer t ( 1 \u2264 t \u2264 10^ 5 ) \u2014 the number of test cases. Then t test cases follow. Each test case begins with a line containing two integers a and b ( 1 \u2264 a, b \u2264 1000 ) \u2014 the cost of activating and placing one mine, respectively. The next line contains a map of mines in the city \u2014 a string consisting of zeros and ones. The sum of the string lengths for all test cases does not exceed 10^ 5 .",
    "output": "For each test case, output one integer \u2014 the minimum number of coins that the sapper will have to pay.",
    "note": "In the second test case, if we place a mine under the fourth building and then activate it, then all mines on the field are activated. The cost of such operations is six, b= 1 coin for placing a mine and a= 5 coins for activating.",
    "topics": [
      "dp",
      "greedy",
      "math",
      "sortings"
    ],
    "id": "1443B"
  },
  {
    "title": "Kids Seating",
    "url": "https://codeforces.com/problemset/problem/1443/A",
    "history": "Today the kindergarten has a new group of n kids who need to be seated at the dinner table. The chairs at the table are numbered from 1 to 4n . Two kids can' t sit on the same chair. It is known that two kids who sit on chairs with numbers a and b ( a = \u0338 b ) will indulge if: gcd( a, b) = 1 or, a divides b or b divides a . gcd( a, b) \u2014 the maximum number x such that a is divisible by x and b is divisible by x . For example, if n= 3 and the kids sit on chairs with numbers 2 , 3 , 4 , then they will indulge since 4 is divided by 2 and gcd( 2, 3) = 1 . If kids sit on chairs with numbers 4 , 6 , 10 , then they will not indulge. The teacher really doesn' t want the mess at the table, so she wants to seat the kids so there are no 2 of the kid that can indulge. More formally, she wants no pair of chairs a and b that the kids occupy to fulfill the condition above. Since the teacher is very busy with the entertainment of the kids, she asked you to solve this problem.",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 100 ) \u2014 the number of test cases. Then t test cases follow. Each test case consists of one line containing an integer n ( 1 \u2264 n \u2264 100 ) \u2014 the number of kids.",
    "output": "Output t lines, which contain n distinct integers from 1 to 4n \u2014 the numbers of chairs that the kids should occupy in the corresponding test case. If there are multiple answers, print any of them. You can print n numbers in any order.",
    "note": "",
    "topics": [
      "constructive algorithms",
      "math"
    ],
    "id": "1443A"
  },
  {
    "title": "Sum of Medians",
    "url": "https://codeforces.com/problemset/problem/1440/B",
    "history": "A median of an array of integers of length n is the number standing on the \u2308n/ 2\u2309 ( rounding up) position in the non- decreasing ordering of its elements. Positions are numbered starting with 1 . For example, a median of the array [ 2, 6, 4, 1, 3, 5] is equal to 3 . There exist some other definitions of the median, but in this problem, we will use the described one. Given two integers n and k and non- decreasing array of nk integers. Divide all numbers into k arrays of size n , such that each number belongs to exactly one array. You want the sum of medians of all k arrays to be the maximum possible. Find this maximum possible sum.",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 100 ) \u2014 the number of test cases. The next 2t lines contain descriptions of test cases. The first line of the description of each test case contains two integers n , k ( 1 \u2264 n, k \u2264 1000 ) . The second line of the description of each test case contains nk integers a_ 1, a_ 2, . . . , a_ nk ( 0 \u2264 a_ i \u2264 10^ 9 ) \u2014 given array. It is guaranteed that the array is non- decreasing: a_ 1 \u2264 a_ 2 \u2264. . . \u2264 a_ nk . It is guaranteed that the sum of nk for all test cases does not exceed 2 \u00b7 10^ 5 .",
    "output": "For each test case print a single integer \u2014 the maximum possible sum of medians of all k arrays.",
    "note": "The examples of possible divisions into arrays for all test cases of the first test: Test case 1 : [ 0, 24] , [ 34, 58] , [ 62, 64] , [ 69, 78] . The medians are 0, 34, 62, 69 . Their sum is 165 . Test case 2 : [ 27, 61] , [ 81, 91] . The medians are 27, 81 . Their sum is 108 . Test case 3 : [ 2, 91, 92, 95] , [ 4, 36, 53, 82] , [ 16, 18, 21, 27] . The medians are 91, 36, 18 . Their sum is 145 . Test case 4 : [ 3, 33, 35] , [ 11, 94, 99] , [ 12, 38, 67] , [ 22, 69, 71] . The medians are 33, 94, 38, 69 . Their sum is 234 . Test case 5 : [ 11, 41] . The median is 11 . The sum of the only median is 11 . Test case 6 : [ 1, 1, 1] , [ 1, 1, 1] , [ 1, 1, 1] . The medians are 1, 1, 1 . Their sum is 3 .",
    "topics": [
      "greedy",
      "math"
    ],
    "id": "1440B"
  },
  {
    "title": "Buy the String",
    "url": "https://codeforces.com/problemset/problem/1440/A",
    "history": "You are given four integers n , c_ 0 , c_ 1 and h and a binary string s of length n . A binary string is a string consisting of characters 0 and 1 . You can change any character of the string s ( the string should be still binary after the change) . You should pay h coins for each change. After some changes ( possibly zero) you want to buy the string. To buy the string you should buy all its characters. To buy the character 0 you should pay c_ 0 coins, to buy the character 1 you should pay c_ 1 coins. Find the minimum number of coins needed to buy the string.",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 10 ) \u2014 the number of test cases. Next 2t lines contain descriptions of test cases. The first line of the description of each test case contains four integers n , c_ 0 , c_ 1 , h ( 1 \u2264 n, c_ 0, c_ 1, h \u2264 1000 ) . The second line of the description of each test case contains the binary string s of length n .",
    "output": "For each test case print a single integer \u2014 the minimum number of coins needed to buy the string.",
    "note": "In the first test case, you can buy all characters and pay 3 coins, because both characters 0 and 1 costs 1 coin. In the second test case, you can firstly change 2 - nd and 4 - th symbols of the string from 1 to 0 and pay 2 coins for that. Your string will be 00000 . After that, you can buy the string and pay 5 \u00b7 10 = 50 coins for that. The total number of coins paid will be 2 + 50 = 52 .",
    "topics": [
      "implementation",
      "math"
    ],
    "id": "1440A"
  },
  {
    "title": "Powerful Ksenia",
    "url": "https://codeforces.com/problemset/problem/1438/D",
    "history": "Ksenia has an array a consisting of n positive integers a_ 1, a_ 2, . . . , a_ n . In one operation she can do the following: choose three distinct indices i , j , k , and then change all of a_ i, a_ j, a_ k to a_ i \u2295 a_ j \u2295 a_ k simultaneously, where \u2295 denotes the bitwise XOR operation. She wants to make all a_ i equal in at most n operations, or to determine that it is impossible to do so. She wouldn' t ask for your help, but please, help her!",
    "input": "The first line contains one integer n ( 3 \u2264 n \u2264 10^ 5 ) \u2014 the length of a . The second line contains n integers, a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 9 ) \u2014 elements of a .",
    "output": "Print YES or NO in the first line depending on whether it is possible to make all elements equal in at most n operations. If it is possible, print an integer m ( 0 \u2264 m \u2264 n ) , which denotes the number of operations you do. In each of the next m lines, print three distinct integers i, j, k , representing one operation. If there are many such operation sequences possible, print any. Note that you do not have to minimize the number of operations.",
    "note": "In the first example, the array becomes [ 4 \u2295 1 \u2295 7, 2, 4 \u2295 1 \u2295 7, 4 \u2295 1 \u2295 7, 2] = [ 2, 2, 2, 2, 2] .",
    "topics": [
      "bitmasks",
      "constructive algorithms",
      "math"
    ],
    "id": "1438D"
  },
  {
    "title": "Emotional Fishermen",
    "url": "https://codeforces.com/problemset/problem/1437/F",
    "history": "n fishermen have just returned from a fishing vacation. The i - th fisherman has caught a fish of weight a_ i . Fishermen are going to show off the fish they caught to each other. To do so, they firstly choose an order in which they show their fish ( each fisherman shows his fish exactly once, so, formally, the order of showing fish is a permutation of integers from 1 to n ) . Then they show the fish they caught according to the chosen order. When a fisherman shows his fish, he might either become happy, become sad, or stay content. Suppose a fisherman shows a fish of weight x , and the maximum weight of a previously shown fish is y ( y = 0 if that fisherman is the first to show his fish) . Then: if x \u2265 2y , the fisherman becomes happy; if 2x \u2264 y , the fisherman becomes sad; if none of these two conditions is met, the fisherman stays content. Let' s call an order in which the fishermen show their fish emotional if, after all fishermen show their fish according to this order, each fisherman becomes either happy or sad. Calculate the number of emotional orders modulo 998244353 .",
    "input": "The first line contains one integer n ( 2 \u2264 n \u2264 5000 ) . The second line contains n integers a_ 1 , a_ 2 , . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 9 ) .",
    "output": "Print one integer \u2014 the number of emotional orders, taken modulo 998244353 .",
    "note": "",
    "topics": [
      "combinatorics",
      "dp",
      "math",
      "two pointers"
    ],
    "id": "1437F"
  },
  {
    "title": "Chef Monocarp",
    "url": "https://codeforces.com/problemset/problem/1437/C",
    "history": "Chef Monocarp has just put n dishes into an oven. He knows that the i - th dish has its optimal cooking time equal to t_ i minutes. At any positive integer minute T Monocarp can put no more than one dish out of the oven. If the i - th dish is put out at some minute T , then its unpleasant value is | T - t_ i| \u2014 the absolute difference between T and t_ i . Once the dish is out of the oven, it can' t go back in. Monocarp should put all the dishes out of the oven. What is the minimum total unpleasant value Monocarp can obtain?",
    "input": "The first line contains a single integer q ( 1 \u2264 q \u2264 200 ) \u2014 the number of testcases. Then q testcases follow. The first line of the testcase contains a single integer n ( 1 \u2264 n \u2264 200 ) \u2014 the number of dishes in the oven. The second line of the testcase contains n integers t_ 1, t_ 2, . . . , t_ n ( 1 \u2264 t_ i \u2264 n ) \u2014 the optimal cooking time for each dish. The sum of n over all q testcases doesn' t exceed 200 .",
    "output": "Print a single integer for each testcase \u2014 the minimum total unpleasant value Monocarp can obtain when he puts out all the dishes out of the oven. Remember that Monocarp can only put the dishes out at positive integer minutes and no more than one dish at any minute.",
    "note": "In the first example Monocarp can put out the dishes at minutes 3, 1, 5, 4, 6, 2 . That way the total unpleasant value will be | 4 - 3| + | 2 - 1| + | 4 - 5| + | 4 - 4| + | 6 - 5| + | 2 - 2| = 4 . In the second example Monocarp can put out the dishes at minutes 4, 5, 6, 7, 8, 9, 10 . In the third example Monocarp can put out the dish at minute 1 . In the fourth example Monocarp can put out the dishes at minutes 5, 1, 2, 4, 3 . In the fifth example Monocarp can put out the dishes at minutes 1, 3, 4, 5 .",
    "topics": [
      "dp",
      "flows",
      "graph matchings",
      "greedy",
      "math",
      "sortings"
    ],
    "id": "1437C"
  },
  {
    "title": "Marketing Scheme",
    "url": "https://codeforces.com/problemset/problem/1437/A",
    "history": "You got a job as a marketer in a pet shop, and your current task is to boost sales of cat food. One of the strategies is to sell cans of food in packs with discounts. Suppose you decided to sell packs with a cans in a pack with a discount and some customer wants to buy x cans of cat food. Then he follows a greedy strategy: he buys \u230ax/ a\u230b packs with a discount; then he wants to buy the remaining ( x a) cans one by one. \u230ax/ a\u230b is x divided by a rounded down, x a is the remainer of x divided by a . But customers are greedy in general, so if the customer wants to buy ( x a) cans one by one and it happens that ( x a) \u2265a/ 2 he decides to buy the whole pack of a cans ( instead of buying ( x a) cans) . It makes you, as a marketer, happy since the customer bought more than he wanted initially. You know that each of the customers that come to your shop can buy any number of cans from l to r inclusive. Can you choose such size of pack a that each customer buys more cans than they wanted initially?",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 1000 ) \u2014 the number of test cases. The first and only line of each test case contains two integers l and r ( 1 \u2264 l \u2264 r \u2264 10^ 9 ) \u2014 the range of the number of cans customers can buy.",
    "output": "For each test case, print YES if you can choose such size of pack a that each customer buys more cans than they wanted initially. Otherwise, print NO. You can print each character in any case.",
    "note": "In the first test case, you can take, for example, a = 5 as the size of the pack. Then if a customer wants to buy 3 cans, he' ll buy 5 instead ( 3 5 = 3 , 5/ 2 = 2. 5 ) . The one who wants 4 cans will also buy 5 cans. In the second test case, there is no way to choose a . In the third test case, you can take, for example, a = 80 .",
    "topics": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "math"
    ],
    "id": "1437A"
  },
  {
    "title": "Sum Over Subsets",
    "url": "https://codeforces.com/problemset/problem/1436/F",
    "history": "You are given a multiset S . Over all pairs of subsets A and B , such that: B \u2282 A ; | B| = | A| - 1 ; greatest common divisor of all elements in A is equal to one; find the sum of \u2211_ x \u2208 Ax\u00b7\u2211_ x \u2208 Bx , modulo 998 244 353 .",
    "input": "The first line contains one integer m ( 1 \u2264 m \u2264 10^ 5 ) : the number of different values in the multiset S . Each of the next m lines contains two integers a_ i , freq_ i ( 1 \u2264 a_ i \u2264 10^ 5, 1 \u2264 freq_ i \u2264 10^ 9 ) . Element a_ i appears in the multiset S freq_ i times. All a_ i are different.",
    "output": "Print the required sum, modulo 998 244 353 .",
    "note": "A multiset is a set where elements are allowed to coincide. | X| is the cardinality of a set X , the number of elements in it. A \u2282 B : Set A is a subset of a set B . In the first example B= { 1} , A= { 1, 2} and B= { 2} , A= { 1, 2} have a product equal to 1\u00b73 + 2\u00b73= 9 . Other pairs of A and B don' t satisfy the given constraints.",
    "topics": [
      "combinatorics",
      "math",
      "number theory"
    ],
    "id": "1436F"
  },
  {
    "title": "Prime Square",
    "url": "https://codeforces.com/problemset/problem/1436/B",
    "history": "Sasha likes investigating different math objects, for example, magic squares. But Sasha understands that magic squares have already been studied by hundreds of people, so he sees no sense of studying them further. Instead, he invented his own type of square \u2014 a prime square. A square of size n \u00d7 n is called prime if the following three conditions are held simultaneously: all numbers on the square are non- negative integers not exceeding 10^ 5 ; there are no prime numbers in the square; sums of integers in each row and each column are prime numbers. Sasha has an integer n . He asks you to find any prime square of size n \u00d7 n . Sasha is absolutely sure such squares exist, so just help him!",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 10 ) \u2014 the number of test cases. Each of the next t lines contains a single integer n ( 2 \u2264 n \u2264 100 ) \u2014 the required size of a square.",
    "output": "For each test case print n lines, each containing n integers \u2014 the prime square you built. If there are multiple answers, print any.",
    "note": "",
    "topics": [
      "constructive algorithms",
      "math"
    ],
    "id": "1436B"
  },
  {
    "title": "Reorder",
    "url": "https://codeforces.com/problemset/problem/1436/A",
    "history": "For a given array a consisting of n integers and a given integer m find if it is possible to reorder elements of the array a in such a way that \u2211_ i= 1^ n\u2211_ j= i^ na_ j/ j equals m ? It is forbidden to delete elements as well as insert new elements. Please note that no rounding occurs during division, for example, 5/ 2= 2. 5 .",
    "input": "The first line contains a single integer t \u2014 the number of test cases ( 1 \u2264 t \u2264 100 ) . The test cases follow, each in two lines. The first line of a test case contains two integers n and m ( 1 \u2264 n \u2264 100 , 0 \u2264 m \u2264 10^ 6 ) . The second line contains integers a_ 1, a_ 2, . . . , a_ n ( 0 \u2264 a_ i \u2264 10^ 6 ) \u2014 the elements of the array.",
    "output": "For each test case print \" YES\" , if it is possible to reorder the elements of the array in such a way that the given formula gives the given value, and \" NO\" otherwise.",
    "note": "In the first test case one of the reorders could be [ 1, 2, 5] . The sum is equal to ( 1/ 1 + 2/ 2 + 5/ 3) + ( 2/ 2 + 5/ 3) + ( 5/ 3) = 8 . The brackets denote the inner sum \u2211_ j= i^ na_ j/ j , while the summation of brackets corresponds to the sum over i .",
    "topics": [
      "math"
    ],
    "id": "1436A"
  },
  {
    "title": "Two Round Dances",
    "url": "https://codeforces.com/problemset/problem/1433/E",
    "history": "One day, n people ( n is an even number) met on a plaza and made two round dances, each round dance consists of exactly n/ 2 people. Your task is to find the number of ways n people can make two round dances if each round dance consists of exactly n/ 2 people. Each person should belong to exactly one of these two round dances. Round dance is a dance circle consisting of 1 or more people. Two round dances are indistinguishable ( equal) if one can be transformed to another by choosing the first participant. For example, round dances [ 1, 3, 4, 2] , [ 4, 2, 1, 3] and [ 2, 1, 3, 4] are indistinguishable. For example, if n= 2 then the number of ways is 1 : one round dance consists of the first person and the second one of the second person. For example, if n= 4 then the number of ways is 3 . Possible options: one round dance \u2014 [ 1, 2] , another \u2014 [ 3, 4] ; one round dance \u2014 [ 2, 4] , another \u2014 [ 3, 1] ; one round dance \u2014 [ 4, 1] , another \u2014 [ 3, 2] . Your task is to find the number of ways n people can make two round dances if each round dance consists of exactly n/ 2 people.",
    "input": "The input contains one integer n ( 2 \u2264 n \u2264 20 ) , n is an even number.",
    "output": "Print one integer \u2014 the number of ways to make two round dances. It is guaranteed that the answer fits in the 64 - bit integer data type.",
    "note": "",
    "topics": [
      "combinatorics",
      "math"
    ],
    "id": "1433E"
  },
  {
    "title": "Boring Apartments",
    "url": "https://codeforces.com/problemset/problem/1433/A",
    "history": "There is a building consisting of 10 000 apartments numbered from 1 to 10 000 , inclusive. Call an apartment boring, if its number consists of the same digit. Examples of boring apartments are 11, 2, 777, 9999 and so on. Our character is a troublemaker, and he calls the intercoms of all boring apartments, till someone answers the call, in the following order: First he calls all apartments consisting of digit 1 , in increasing order ( 1, 11, 111, 1111 ) . Next he calls all apartments consisting of digit 2 , in increasing order ( 2, 22, 222, 2222 ) And so on. The resident of the boring apartment x answers the call, and our character stops calling anyone further. Our character wants to know how many digits he pressed in total and your task is to help him to count the total number of keypresses. For example, if the resident of boring apartment 22 answered, then our character called apartments with numbers 1, 11, 111, 1111, 2, 22 and the total number of digits he pressed is 1 + 2 + 3 + 4 + 1 + 2 = 13 . You have to answer t independent test cases.",
    "input": "The first line of the input contains one integer t ( 1 \u2264 t \u2264 36 ) \u2014 the number of test cases. The only line of the test case contains one integer x ( 1 \u2264 x \u2264 9999 ) \u2014 the apartment number of the resident who answered the call. It is guaranteed that x consists of the same digit.",
    "output": "For each test case, print the answer: how many digits our character pressed in total.",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": "1433A"
  },
  {
    "title": "Yet Another DAG Problem",
    "url": "https://codeforces.com/problemset/problem/1430/G",
    "history": "You are given a directed acyclic graph ( a directed graph that does not contain cycles) of n vertices and m arcs. The i - th arc leads from the vertex x_ i to the vertex y_ i and has the weight w_ i . Your task is to select an integer a_ v for each vertex v , and then write a number b_ i on each arcs i such that b_ i = a_ x_ i - a_ y_ i . You must select the numbers so that: all b_ i are positive; the value of the expression \u2211_ i = 1^ m w_ i b_ i is the lowest possible. It can be shown that for any directed acyclic graph with non- negative w_ i , such a way to choose numbers exists.",
    "input": "The first line contains two integers n and m ( 2 \u2264 n \u2264 18 ; 0 \u2264 m \u2264n( n - 1) 2 ) . Then m lines follow, the i - th of them contains three integers x_ i , y_ i and w_ i ( 1 \u2264 x_ i, y_ i \u2264 n , 1 \u2264 w_ i \u2264 10^ 5 , x_ i y_ i ) \u2014 the description of the i - th arc. It is guaranteed that the lines describe m arcs of a directed acyclic graph without multiple arcs between the same pair of vertices.",
    "output": "Print n integers a_ 1 , a_ 2 , . . . , a_ n ( 0 \u2264 a_ v \u2264 10^ 9 ) , which must be written on the vertices so that all b_ i are positive, and the value of the expression \u2211_ i = 1^ m w_ i b_ i is the lowest possible. If there are several answers, print any of them. It can be shown that the answer always exists, and at least one of the optimal answers satisfies the constraints 0 \u2264 a_ v \u2264 10^ 9 .",
    "note": "",
    "topics": [
      "bitmasks",
      "dfs and similar",
      "dp",
      "flows",
      "graphs",
      "math"
    ],
    "id": "1430G"
  },
  {
    "title": "Numbers on Whiteboard",
    "url": "https://codeforces.com/problemset/problem/1430/C",
    "history": "Numbers 1, 2, 3, . . . n ( each integer from 1 to n once) are written on a board. In one operation you can erase any two numbers a and b from the board and write one integer a + b/ 2 rounded up instead. You should perform the given operation n - 1 times and make the resulting number that will be left on the board as small as possible. For example, if n = 4 , the following course of action is optimal: choose a = 4 and b = 2 , so the new number is 3 , and the whiteboard contains [ 1, 3, 3] ; choose a = 3 and b = 3 , so the new number is 3 , and the whiteboard contains [ 1, 3] ; choose a = 1 and b = 3 , so the new number is 2 , and the whiteboard contains [ 2] . It' s easy to see that after n - 1 operations, there will be left only one number. Your goal is to minimize it.",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 1000 ) \u2014 the number of test cases. The only line of each test case contains one integer n ( 2 \u2264 n \u2264 2 \u00b7 10^ 5 ) \u2014 the number of integers written on the board initially. It' s guaranteed that the total sum of n over test cases doesn' t exceed 2 \u00b7 10^ 5 .",
    "output": "For each test case, in the first line, print the minimum possible number left on the board after n - 1 operations. Each of the next n - 1 lines should contain two integers \u2014 numbers a and b chosen and erased in each operation.",
    "note": "",
    "topics": [
      "constructive algorithms",
      "data structures",
      "greedy",
      "implementation",
      "math"
    ],
    "id": "1430C"
  },
  {
    "title": "Number of Apartments",
    "url": "https://codeforces.com/problemset/problem/1430/A",
    "history": "Recently a new building with a new layout was constructed in Monocarp' s hometown. According to this new layout, the building consists of three types of apartments: three- room, five- room, and seven- room apartments. It' s also known that each room of each apartment has exactly one window. In other words, a three- room apartment has three windows, a five- room \u2014 five windows, and a seven- room \u2014 seven windows. Monocarp went around the building and counted n windows. Now he is wondering, how many apartments of each type the building may have. Unfortunately, Monocarp only recently has learned to count, so he is asking you to help him to calculate the possible quantities of three- room, five- room, and seven- room apartments in the building that has n windows. If there are multiple answers, you can print any of them. Here are some examples: if Monocarp has counted 30 windows, there could have been 2 three- room apartments, 2 five- room apartments and 2 seven- room apartments, since 2 \u00b7 3 + 2 \u00b7 5 + 2 \u00b7 7 = 30 ; if Monocarp has counted 67 windows, there could have been 7 three- room apartments, 5 five- room apartments and 3 seven- room apartments, since 7 \u00b7 3 + 5 \u00b7 5 + 3 \u00b7 7 = 67 ; if Monocarp has counted 4 windows, he should have mistaken since no building with the aforementioned layout can have 4 windows.",
    "input": "Th first line contains one integer t ( 1 \u2264 t \u2264 1000 ) \u2014 the number of test cases. The only line of each test case contains one integer n ( 1 \u2264 n \u2264 1000 ) \u2014 the number of windows in the building.",
    "output": "For each test case, if a building with the new layout and the given number of windows just can' t exist, print - 1 . Otherwise, print three non- negative integers \u2014 the possible number of three- room, five- room, and seven- room apartments. If there are multiple answers, print any of them.",
    "note": "",
    "topics": [
      "brute force",
      "constructive algorithms",
      "math"
    ],
    "id": "1430A"
  },
  {
    "title": "Carrots for Rabbits",
    "url": "https://codeforces.com/problemset/problem/1428/E",
    "history": "There are some rabbits in Singapore Zoo. To feed them, Zookeeper bought n carrots with lengths a_ 1, a_ 2, a_ 3, . . . , a_ n . However, rabbits are very fertile and multiply very quickly. Zookeeper now has k rabbits and does not have enough carrots to feed all of them. To solve this problem, Zookeeper decided to cut the carrots into k pieces. For some reason, all resulting carrot lengths must be positive integers. Big carrots are very difficult for rabbits to handle and eat, so the time needed to eat a carrot of size x is x^ 2 . Help Zookeeper split his carrots while minimizing the sum of time taken for rabbits to eat the carrots.",
    "input": "The first line contains two integers n and k ( 1 \u2264 n \u2264 k \u2264 10^ 5) : the initial number of carrots and the number of rabbits. The next line contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 6) : lengths of carrots. It is guaranteed that the sum of a_ i is at least k .",
    "output": "Output one integer: the minimum sum of time taken for rabbits to eat carrots.",
    "note": "For the first test, the optimal sizes of carrots are { 1, 1, 1, 2, 2, 2} . The time taken is 1^ 2+ 1^ 2+ 1^ 2+ 2^ 2+ 2^ 2+ 2^ 2= 15 For the second test, the optimal sizes of carrots are { 4, 5, 5, 5} . The time taken is 4^ 2+ 5^ 2+ 5^ 2+ 5^ 2= 91 .",
    "topics": [
      "binary search",
      "data structures",
      "greedy",
      "math",
      "sortings"
    ],
    "id": "1428E"
  },
  {
    "title": "Box is Pull",
    "url": "https://codeforces.com/problemset/problem/1428/A",
    "history": "Wabbit is trying to move a box containing food for the rest of the zoo in the coordinate plane from the point ( x_ 1, y_ 1) to the point ( x_ 2, y_ 2) . He has a rope, which he can use to pull the box. He can only pull the box if he stands exactly 1 unit away from the box in the direction of one of two coordinate axes. He will pull the box to where he is standing before moving out of the way in the same direction by 1 unit. For example, if the box is at the point ( 1, 2) and Wabbit is standing at the point ( 2, 2) , he can pull the box right by 1 unit, with the box ending up at the point ( 2, 2) and Wabbit ending at the point ( 3, 2) . Also, Wabbit can move 1 unit to the right, left, up, or down without pulling the box. In this case, it is not necessary for him to be in exactly 1 unit away from the box. If he wants to pull the box again, he must return to a point next to the box. Also, Wabbit can' t move to the point where the box is located. Wabbit can start at any point. It takes 1 second to travel 1 unit right, left, up, or down, regardless of whether he pulls the box while moving. Determine the minimum amount of time he needs to move the box from ( x_ 1, y_ 1) to ( x_ 2, y_ 2) . Note that the point where Wabbit ends up at does not matter.",
    "input": "Each test contains multiple test cases. The first line contains a single integer t ( 1 \u2264 t \u2264 1000) : the number of test cases. The description of the test cases follows. Each of the next t lines contains four space- separated integers x_ 1, y_ 1, x_ 2, y_ 2 ( 1 \u2264 x_ 1, y_ 1, x_ 2, y_ 2 \u2264 10^ 9) , describing the next test case.",
    "output": "For each test case, print a single integer: the minimum time in seconds Wabbit needs to bring the box from ( x_ 1, y_ 1) to ( x_ 2, y_ 2) .",
    "note": "In the first test case, the starting and the ending points of the box are ( 1, 2) and ( 2, 2) respectively. This is the same as the picture in the statement. Wabbit needs only 1 second to move as shown in the picture in the statement. In the second test case, Wabbit can start at the point ( 2, 1) . He pulls the box to ( 2, 1) while moving to ( 3, 1) . He then moves to ( 3, 2) and then to ( 2, 2) without pulling the box. Then, he pulls the box to ( 2, 2) while moving to ( 2, 3) . It takes 4 seconds.",
    "topics": [
      "math"
    ],
    "id": "1428A"
  },
  {
    "title": "Xum",
    "url": "https://codeforces.com/problemset/problem/1427/E",
    "history": "You have a blackboard and initially only an odd number x is written on it. Your goal is to write the number 1 on the blackboard. You may write new numbers on the blackboard with the following two operations. You may take two numbers ( not necessarily distinct) already on the blackboard and write their sum on the blackboard. The two numbers you have chosen remain on the blackboard. You may take two numbers ( not necessarily distinct) already on the blackboard and write their bitwise XOR on the blackboard. The two numbers you have chosen remain on the blackboard. Perform a sequence of operations such that at the end the number 1 is on the blackboard.",
    "input": "The single line of the input contains the odd integer x ( 3 \u2264 x \u2264 999, 999 ) .",
    "output": "Print on the first line the number q of operations you perform. Then q lines should follow, each describing one operation. The \" sum\" operation is described by the line \" a + b \" , where a, b must be integers already present on the blackboard. The \" xor\" operation is described by the line \" a ^ b \" , where a, b must be integers already present on the blackboard. The operation symbol ( + or ^ ) must be separated from a, b by a whitespace. You can perform at most 100, 000 operations ( that is, q\u2264 100, 000 ) and all numbers written on the blackboard must be in the range [ 0, 5\u00b710^ 18] . It can be proven that under such restrictions the required sequence of operations exists. You can output any suitable sequence of operations.",
    "note": "",
    "topics": [
      "bitmasks",
      "constructive algorithms",
      "math",
      "matrices",
      "number theory"
    ],
    "id": "1427E"
  },
  {
    "title": "Avoiding Zero",
    "url": "https://codeforces.com/problemset/problem/1427/A",
    "history": "You are given an array of n integers a_ 1, a_ 2, . . . , a_ n . You have to create an array of n integers b_ 1, b_ 2, . . . , b_ n such that: The array b is a rearrangement of the array a , that is, it contains the same values and each value appears the same number of times in the two arrays. In other words, the multisets { a_ 1, a_ 2, . . . , a_ n} and { b_ 1, b_ 2, . . . , b_ n} are equal. For example, if a= [ 1, - 1, 0, 1] , then b= [ - 1, 1, 1, 0] and b= [ 0, 1, - 1, 1] are rearrangements of a , but b= [ 1, - 1, - 1, 0] and b= [ 1, 0, 2, - 3] are not rearrangements of a . For all k= 1, 2, . . . , n the sum of the first k elements of b is nonzero. Formally, for all k= 1, 2, . . . , n , it must hold b_ 1+ b_ 2+ \u22ef+ b_ k= \u03380 . If an array b_ 1, b_ 2, . . . , b_ n with the required properties does not exist, you have to print NO.",
    "input": "Each test contains multiple test cases. The first line contains an integer t ( 1\u2264 t \u2264 1000 ) \u2014 the number of test cases. The description of the test cases follows. The first line of each testcase contains one integer n ( 1\u2264 n\u2264 50 ) \u2014 the length of the array a . The second line of each testcase contains n integers a_ 1, a_ 2, . . . , a_ n ( - 50\u2264 a_ i\u2264 50 ) \u2014 the elements of a .",
    "output": "For each testcase, if there is not an array b_ 1, b_ 2, . . . , b_ n with the required properties, print a single line with the word NO. Otherwise print a line with the word YES, followed by a line with the n integers b_ 1, b_ 2, . . . , b_ n . If there is more than one array b_ 1, b_ 2, . . . , b_ n satisfying the required properties, you can print any of them.",
    "note": "Explanation of the first testcase: An array with the desired properties is b= [ 1, - 2, 3, - 4] . For this array, it holds: The first element of b is 1 . The sum of the first two elements of b is - 1 . The sum of the first three elements of b is 2 . The sum of the first four elements of b is - 2 . Explanation of the second testcase: Since all values in a are 0 , any rearrangement b of a will have all elements equal to 0 and therefore it clearly cannot satisfy the second property described in the statement ( for example because b_ 1= 0 ) . Hence in this case the answer is NO. Explanation of the third testcase: An array with the desired properties is b= [ 1, 1, - 1, 1, - 1] . For this array, it holds: The first element of b is 1 . The sum of the first two elements of b is 2 . The sum of the first three elements of b is 1 . The sum of the first four elements of b is 2 . The sum of the first five elements of b is 1 . Explanation of the fourth testcase: An array with the desired properties is b= [ - 40, 13, 40, 0, - 9, - 31] . For this array, it holds: The first element of b is - 40 . The sum of the first two elements of b is - 27 . The sum of the first three elements of b is 13 . The sum of the first four elements of b is 13 . The sum of the first five elements of b is 4 . The sum of the first six elements of b is - 27 .",
    "topics": [
      "math",
      "sortings"
    ],
    "id": "1427A"
  },
  {
    "title": "Rock, Paper, Scissors",
    "url": "https://codeforces.com/problemset/problem/1426/E",
    "history": "Alice and Bob have decided to play the game \" Rock, Paper, Scissors\" . The game consists of several rounds, each round is independent of each other. In each round, both players show one of the following things at the same time: rock, paper or scissors. If both players showed the same things then the round outcome is a draw. Otherwise, the following rules applied: if one player showed rock and the other one showed scissors, then the player who showed rock is considered the winner and the other one is considered the loser; if one player showed scissors and the other one showed paper, then the player who showed scissors is considered the winner and the other one is considered the loser; if one player showed paper and the other one showed rock, then the player who showed paper is considered the winner and the other one is considered the loser. Alice and Bob decided to play exactly n rounds of the game described above. Alice decided to show rock a_ 1 times, show scissors a_ 2 times and show paper a_ 3 times. Bob decided to show rock b_ 1 times, show scissors b_ 2 times and show paper b_ 3 times. Though, both Alice and Bob did not choose the sequence in which they show things. It is guaranteed that a_ 1 + a_ 2 + a_ 3 = n and b_ 1 + b_ 2 + b_ 3 = n . Your task is to find two numbers: the minimum number of round Alice can win; the maximum number of rounds Alice can win.",
    "input": "The first line of the input contains one integer n ( 1 \u2264 n \u2264 10^ 9 ) \u2014 the number of rounds. The second line of the input contains three integers a_ 1, a_ 2, a_ 3 ( 0 \u2264 a_ i \u2264 n ) \u2014 the number of times Alice will show rock, scissors and paper, respectively. It is guaranteed that a_ 1 + a_ 2 + a_ 3 = n . The third line of the input contains three integers b_ 1, b_ 2, b_ 3 ( 0 \u2264 b_ j \u2264 n ) \u2014 the number of times Bob will show rock, scissors and paper, respectively. It is guaranteed that b_ 1 + b_ 2 + b_ 3 = n .",
    "output": "Print two integers: the minimum and the maximum number of rounds Alice can win.",
    "note": "In the first example, Alice will not win any rounds if she shows scissors and then paper and Bob shows rock and then scissors. In the best outcome, Alice will win one round if she shows paper and then scissors, and Bob shows rock and then scissors. In the second example, Alice will not win any rounds if Bob shows the same things as Alice each round. In the third example, Alice always shows paper and Bob always shows rock so Alice will win all three rounds anyway.",
    "topics": [
      "brute force",
      "constructive algorithms",
      "flows",
      "greedy",
      "math"
    ],
    "id": "1426E"
  },
  {
    "title": "Increase and Copy",
    "url": "https://codeforces.com/problemset/problem/1426/C",
    "history": "Initially, you have the array a consisting of one element 1 ( a = [ 1] ) . In one move, you can do one of the following things: Increase some ( single) element of a by 1 ( choose some i from 1 to the current length of a and increase a_ i by one) ; Append the copy of some ( single) element of a to the end of the array ( choose some i from 1 to the current length of a and append a_ i to the end of the array) . For example, consider the sequence of five moves: You take the first element a_ 1 , append its copy to the end of the array and get a = [ 1, 1] . You take the first element a_ 1 , increase it by 1 and get a = [ 2, 1] . You take the second element a_ 2 , append its copy to the end of the array and get a = [ 2, 1, 1] . You take the first element a_ 1 , append its copy to the end of the array and get a = [ 2, 1, 1, 2] . You take the fourth element a_ 4 , increase it by 1 and get a = [ 2, 1, 1, 3] . Your task is to find the minimum number of moves required to obtain the array with the sum at least n . You have to answer t independent test cases.",
    "input": "The first line of the input contains one integer t ( 1 \u2264 t \u2264 1000 ) \u2014 the number of test cases. Then t test cases follow. The only line of the test case contains one integer n ( 1 \u2264 n \u2264 10^ 9 ) \u2014 the lower bound on the sum of the array.",
    "output": "For each test case, print the answer: the minimum number of moves required to obtain the array with the sum at least n .",
    "note": "",
    "topics": [
      "binary search",
      "constructive algorithms",
      "math"
    ],
    "id": "1426C"
  },
  {
    "title": "Floor Number",
    "url": "https://codeforces.com/problemset/problem/1426/A",
    "history": "Vasya goes to visit his classmate Petya. Vasya knows that Petya' s apartment number is n . There is only one entrance in Petya' s house and the distribution of apartments is the following: the first floor contains 2 apartments, every other floor contains x apartments each. Apartments are numbered starting from one, from the first floor. I. e. apartments on the first floor have numbers 1 and 2 , apartments on the second floor have numbers from 3 to ( x + 2) , apartments on the third floor have numbers from ( x + 3) to ( 2 \u00b7 x + 2) , and so on. Your task is to find the number of floor on which Petya lives. Assume that the house is always high enough to fit at least n apartments. You have to answer t independent test cases.",
    "input": "The first line of the input contains one integer t ( 1 \u2264 t \u2264 1000 ) \u2014 the number of test cases. Then t test cases follow. The only line of the test case contains two integers n and x ( 1 \u2264 n, x \u2264 1000 ) \u2014 the number of Petya' s apartment and the number of apartments on each floor of the house except the first one ( there are two apartments on the first floor) .",
    "output": "For each test case, print the answer: the number of floor on which Petya lives.",
    "note": "Consider the first test case of the example: the first floor contains apartments with numbers 1 and 2 , the second one contains apartments with numbers 3 , 4 and 5 , the third one contains apartments with numbers 6 , 7 and 8 . Therefore, Petya lives on the third floor. In the second test case of the example, Petya lives in the apartment 1 which is on the first floor.",
    "topics": [
      "implementation",
      "math"
    ],
    "id": "1426A"
  },
  {
    "title": "Danger of Mad Snakes",
    "url": "https://codeforces.com/problemset/problem/1425/D",
    "history": "Mr. Chanek The Ninja is one day tasked with a mission to handle mad snakes that are attacking a site. Now, Mr. Chanek already arrived at the hills where the destination is right below these hills. The mission area can be divided into a grid of size 1000 \u00d7 1000 squares. There are N mad snakes on the site, the i' th mad snake is located on square ( X_ i, Y_ i) and has a danger level B_ i . Mr. Chanek is going to use the Shadow Clone Jutsu and Rasengan that he learned from Lord Seventh to complete this mission. His attack strategy is as follows: Mr. Chanek is going to make M clones. Each clone will choose a mad snake as the attack target. Each clone must pick a different mad snake to attack. All clones jump off the hills and attack their respective chosen target at once with Rasengan of radius R . If the mad snake at square ( X, Y) is attacked with a direct Rasengan, it and all mad snakes at squares ( X' , Y' ) where max( | X' - X| , | Y' - Y| ) \u2264 R will die. The real Mr. Chanek will calculate the score of this attack. The score is defined as the square of the sum of the danger levels of all the killed snakes. Now Mr. Chanek is curious, what is the sum of scores for every possible attack strategy? Because this number can be huge, Mr. Chanek only needs the output modulo 10^ 9 + 7 .",
    "input": "The first line contains three integers N M R ( 1 \u2264 M \u2264 N \u2264 2 \u00b7 10^ 3, 0 \u2264 R < 10^ 3) , the number of mad snakes, the number of clones, and the radius of the Rasengan. The next N lines each contains three integers, X_ i , Y_ i , dan B_ i ( 1 \u2264 X_ i, Y_ i \u2264 10^ 3, 1 \u2264 B_ i \u2264 10^ 6) . It is guaranteed that no two mad snakes occupy the same square.",
    "output": "A line with an integer that denotes the sum of scores for every possible attack strategy.",
    "note": "Here is the illustration of all six possible attack strategies. The circles denote the chosen mad snakes, and the blue squares denote the region of the Rasengan: So, the total score of all attacks is: 3. 600 + 3. 600 + 4. 900 + 3. 600 + 10. 000 + 8. 100 = 33. 800 .",
    "topics": [
      "combinatorics",
      "dp",
      "math"
    ],
    "id": "1425D"
  },
  {
    "title": "Captain of Knights",
    "url": "https://codeforces.com/problemset/problem/1425/C",
    "history": "Mr. Chanek just won the national chess tournament and got a huge chessboard of size N \u00d7 M . Bored with playing conventional chess, Mr. Chanek now defines a function F( X, Y) , which denotes the minimum number of moves to move a knight from square ( 1, 1) to square ( X, Y) . It turns out finding F( X, Y) is too simple, so Mr. Chanek defines: G( X, Y) = \u2211_ i= X^ N\u2211_ j= Y^ M F( i, j) Given X and Y, you are tasked to find G( X, Y) . A knight can move from square ( a, b) to square ( a' , b' ) if and only if | a - a' | > 0 , | b - b' | > 0 , and | a - a' | + | b - b' | = 3 . Of course, the knight cannot leave the chessboard.",
    "input": "The first line contains an integer T ( 1 \u2264 T \u2264 100) , the number of test cases. Each test case contains a line with four integers X Y N M ( 3 \u2264 X \u2264 N \u2264 10^ 9, 3 \u2264 Y \u2264 M \u2264 10^ 9) .",
    "output": "For each test case, print a line with the value of G( X, Y) modulo 10^ 9 + 7 .",
    "note": "",
    "topics": [
      "math"
    ],
    "id": "1425C"
  },
  {
    "title": "Lonely Numbers",
    "url": "https://codeforces.com/problemset/problem/1423/K",
    "history": "In number world, two different numbers are friends if they have a lot in common, but also each one has unique perks. More precisely, two different numbers a and b are friends if gcd( a, b) , a/ gcd( a, b) , b/ gcd( a, b) can form sides of a triangle. Three numbers a , b and c can form sides of a triangle if a + b > c , b + c > a and c + a > b . In a group of numbers, a number is lonely if it doesn' t have any friends in that group. Given a group of numbers containing all numbers from 1, 2, 3, . . . , n , how many numbers in that group are lonely?",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 6) - number of test cases. On next line there are t numbers, n_ i ( 1 \u2264 n_ i \u2264 10^ 6) - meaning that in case i you should solve for numbers 1, 2, 3, . . . , n_ i .",
    "output": "For each test case, print the answer on separate lines: number of lonely numbers in group 1, 2, 3, . . . , n_ i .",
    "note": "For first test case, 1 is the only number and therefore lonely. For second test case where n= 5 , numbers 1 , 3 and 5 are lonely. For third test case where n= 10 , numbers 1 , 5 and 7 are lonely.",
    "topics": [
      "binary search",
      "math",
      "number theory",
      "two pointers"
    ],
    "id": "1423K"
  },
  {
    "title": "Bubble Cup hypothesis",
    "url": "https://codeforces.com/problemset/problem/1423/J",
    "history": "The Bubble Cup hypothesis stood unsolved for 130 years. Who ever proves the hypothesis will be regarded as one of the greatest mathematicians of our time! A famous mathematician Jerry Mao managed to reduce the hypothesis to this problem: Given a number m , how many polynomials P with coefficients in set { 0, 1, 2, 3, 4, 5, 6, 7} have: P( 2) = m ? Help Jerry Mao solve the long standing problem!",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 5\u00b7 10^ 5) - number of test cases. On next line there are t numbers, m_ i ( 1 \u2264 m_ i \u2264 10^ 18) - meaning that in case i you should solve for number m_ i .",
    "output": "For each test case i , print the answer on separate lines: number of polynomials P as described in statement such that P( 2) = m_ i , modulo 10^ 9 + 7 .",
    "note": "In first case, for m= 2 , polynomials that satisfy the constraint are x and 2 . In second case, for m= 4 , polynomials that satisfy the constraint are x^ 2 , x + 2 , 2x and 4 .",
    "topics": [
      "bitmasks",
      "constructive algorithms",
      "dp",
      "math"
    ],
    "id": "1423J"
  },
  {
    "title": "Coins",
    "url": "https://codeforces.com/problemset/problem/1423/F",
    "history": "A famous gang of pirates, Sea Dogs, has come back to their hideout from one of their extravagant plunders. They want to split their treasure fairly amongst themselves, that is why You, their trusted financial advisor, devised a game to help them: All of them take a sit at their round table, some of them with the golden coins they have just stolen. At each iteration of the game if one of them has equal or more than 2 coins, he is eligible to the splitting and he gives one coin to each pirate sitting next to him. If there are more candidates ( pirates with equal or more than 2 coins) then You are the one that chooses which one of them will do the splitting in that iteration. The game ends when there are no more candidates eligible to do the splitting. Pirates can call it a day, only when the game ends. Since they are beings with a finite amount of time at their disposal, they would prefer if the game that they are playing can end after finite iterations, and if so, they call it a good game. On the other hand, if no matter how You do the splitting, the game cannot end in finite iterations, they call it a bad game. Can You help them figure out before they start playing if the game will be good or bad?",
    "input": "The first line of input contains two integer numbers n and k ( 1 \u2264 n \u2264 10^ 9 , 0 \u2264 k \u2264 2\u00b710^ 5 ) , where n denotes total number of pirates and k is the number of pirates that have any coins. The next k lines of input contain integers a_ i and b_ i ( 1 \u2264 a_ i \u2264 n , 1 \u2264 b_ i \u2264 10^ 9 ) , where a_ i denotes the index of the pirate sitting at the round table ( n and 1 are neighbours) and b_ i the total number of coins that pirate a_ i has at the start of the game.",
    "output": "Print 1 if the game is a good game: There is a way to do the splitting so the game ends after finite number of iterations. Print - 1 if the game is a bad game: No matter how You do the splitting the game does not end in finite number of iterations.",
    "note": "In the third example the game has no end, because You always only have only one candidate, after whose splitting you end up in the same position as the starting one.",
    "topics": [
      "math"
    ],
    "id": "1423F"
  },
  {
    "title": "Boring Queries",
    "url": "https://codeforces.com/problemset/problem/1422/F",
    "history": "Yura owns a quite ordinary and boring array a of length n . You think there is nothing more boring than that, but Vladik doesn' t agree! In order to make Yura' s array even more boring, Vladik makes q boring queries. Each query consists of two integers x and y . Before answering a query, the bounds l and r for this query are calculated: l = ( last + x) n + 1 , r = ( last + y) n + 1 , where last is the answer on the previous query ( zero initially) , and is the remainder operation. Whenever l > r , they are swapped. After Vladik computes l and r for a query, he is to compute the least common multiple ( LCM) on the segment [ l; r] of the initial array a modulo 10^ 9 + 7 . LCM of a multiset of integers is the smallest positive integer that is divisible by all the elements of the multiset. The obtained LCM is the answer for this query. Help Vladik and compute the answer for each query!",
    "input": "The first line contains a single integer n ( 1 \u2264 n \u2264 10^ 5 ) \u2014 the length of the array. The second line contains n integers a_ i ( 1 \u2264 a_ i \u2264 2 \u00b7 10^ 5 ) \u2014 the elements of the array. The third line contains a single integer q ( 1 \u2264 q \u2264 10^ 5 ) \u2014 the number of queries. The next q lines contain two integers x and y each ( 1 \u2264 x, y \u2264 n ) \u2014 the description of the corresponding query.",
    "output": "Print q integers \u2014 the answers for the queries.",
    "note": "Consider the example: boundaries for first query are ( 0 + 1) 3 + 1 = 2 and ( 0 + 3) 3 + 1 = 1 . LCM for segment [ 1, 2] is equal to 6 ; boundaries for second query are ( 6 + 3) 3 + 1 = 1 and ( 6 + 3) 3 + 1 = 1 . LCM for segment [ 1, 1] is equal to 2 ; boundaries for third query are ( 2 + 2) 3 + 1 = 2 and ( 2 + 3) 3 + 1 = 3 . LCM for segment [ 2, 3] is equal to 15 ; boundaries for fourth query are ( 15 + 2) 3 + 1 = 3 and ( 15 + 3) 3 + 1 = 1 . LCM for segment [ 1, 3] is equal to 30 .",
    "topics": [
      "data structures",
      "math",
      "number theory"
    ],
    "id": "1422F"
  },
  {
    "title": "Bargain",
    "url": "https://codeforces.com/problemset/problem/1422/C",
    "history": "Sometimes it is not easy to come to an agreement in a bargain. Right now Sasha and Vova can' t come to an agreement: Sasha names a price as high as possible, then Vova wants to remove as many digits from the price as possible. In more details, Sasha names some integer price n , Vova removes a non- empty substring of ( consecutive) digits from the price, the remaining digits close the gap, and the resulting integer is the price. For example, is Sasha names 1213121 , Vova can remove the substring 1312 , and the result is 121 . It is allowed for result to contain leading zeros. If Vova removes all digits, the price is considered to be 0 . Sasha wants to come up with some constraints so that Vova can' t just remove all digits, but he needs some arguments supporting the constraints. To start with, he wants to compute the sum of all possible resulting prices after Vova' s move. Help Sasha to compute this sum. Since the answer can be very large, print it modulo 10^ 9 + 7 .",
    "input": "The first and only line contains a single integer n ( 1 \u2264 n < 10^ 10^ 5 ) .",
    "output": "In the only line print the required sum modulo 10^ 9 + 7 .",
    "note": "Consider the first example. Vova can choose to remove 1 , 0 , 7 , 10 , 07 , or 107 . The results are 07 , 17 , 10 , 7 , 1 , 0 . Their sum is 42 .",
    "topics": [
      "combinatorics",
      "dp",
      "math"
    ],
    "id": "1422C"
  },
  {
    "title": "Nice Matrix",
    "url": "https://codeforces.com/problemset/problem/1422/B",
    "history": "A matrix of size n \u00d7 m is called nice, if all rows and columns of the matrix are palindromes. A sequence of integers ( a_ 1, a_ 2, . . . , a_ k) is a palindrome, if for any integer i ( 1 \u2264 i \u2264 k ) the equality a_ i = a_ k - i + 1 holds. Sasha owns a matrix a of size n \u00d7 m . In one operation he can increase or decrease any number in the matrix by one. Sasha wants to make the matrix nice. He is interested what is the minimum number of operations he needs. Help him!",
    "input": "The first line contains a single integer t \u2014 the number of test cases ( 1 \u2264 t \u2264 10 ) . The t tests follow. The first line of each test contains two integers n and m ( 1 \u2264 n, m \u2264 100 ) \u2014 the size of the matrix. Each of the next n lines contains m integers a_ i, j ( 0 \u2264 a_ i, j\u2264 10^ 9 ) \u2014 the elements of the matrix.",
    "output": "For each test output the smallest number of operations required to make the matrix nice.",
    "note": "In the first test case we can, for example, obtain the following nice matrix in 8 operations: 2 24 44 42 2In the second test case we can, for example, obtain the following nice matrix in 42 operations: 5 6 6 56 6 6 65 6 6 5",
    "topics": [
      "greedy",
      "implementation",
      "math"
    ],
    "id": "1422B"
  },
  {
    "title": "Fence",
    "url": "https://codeforces.com/problemset/problem/1422/A",
    "history": "Yura is tasked to build a closed fence in shape of an arbitrary non- degenerate simple quadrilateral. He' s already got three straight fence segments with known lengths a , b , and c . Now he needs to find out some possible integer length d of the fourth straight fence segment so that he can build the fence using these four segments. In other words, the fence should have a quadrilateral shape with side lengths equal to a , b , c , and d . Help Yura, find any possible length of the fourth side. A non- degenerate simple quadrilateral is such a quadrilateral that no three of its corners lie on the same line, and it does not cross itself.",
    "input": "The first line contains a single integer t \u2014 the number of test cases ( 1 \u2264 t \u2264 1000 ) . The next t lines describe the test cases. Each line contains three integers a , b , and c \u2014 the lengths of the three fence segments ( 1 \u2264 a, b, c \u2264 10^ 9 ) .",
    "output": "For each test case print a single integer d \u2014 the length of the fourth fence segment that is suitable for building the fence. If there are multiple answers, print any. We can show that an answer always exists.",
    "note": "We can build a quadrilateral with sides 1 , 2 , 3 , 4 . We can build a quadrilateral with sides 12 , 34 , 56 , 42 .",
    "topics": [
      "geometry",
      "math"
    ],
    "id": "1422A"
  },
  {
    "title": "Hexagons",
    "url": "https://codeforces.com/problemset/problem/1421/D",
    "history": "Lindsey Buckingham told Stevie Nicks \" Go your own way\" . Nicks is now sad and wants to go away as quickly as possible, but she lives in a 2D hexagonal world. Consider a hexagonal tiling of the plane as on the picture below. Nicks wishes to go from the cell marked ( 0, 0) to a certain cell given by the coordinates. She may go from a hexagon to any of its six neighbors you want, but there is a cost associated with each of them. The costs depend only on the direction in which you travel. Going from ( 0, 0) to ( 1, 1) will take the exact same cost as going from ( - 2, - 1) to ( - 1, 0) . The costs are given in the input in the order c_ 1 , c_ 2 , c_ 3 , c_ 4 , c_ 5 , c_ 6 as in the picture below. Print the smallest cost of a path from the origin which has coordinates ( 0, 0) to the given cell.",
    "input": "Each test contains multiple test cases. The first line contains the number of test cases t ( 1 \u2264 t \u2264 10^ 4 ) . Description of the test cases follows. The first line of each test case contains two integers x and y ( - 10^ 9\u2264 x, y \u2264 10^ 9 ) representing the coordinates of the target hexagon. The second line of each test case contains six integers c_ 1 , c_ 2 , c_ 3 , c_ 4 , c_ 5 , c_ 6 ( 1 \u2264 c_ 1, c_ 2, c_ 3, c_ 4, c_ 5, c_ 6 \u2264 10^ 9 ) representing the six costs of the making one step in a particular direction ( refer to the picture above to see which edge is for each value) .",
    "output": "For each testcase output the smallest cost of a path from the origin to the given cell.",
    "note": "The picture below shows the solution for the first sample. The cost 18 is reached by taking c_ 3 3 times and c_ 2 once, amounting to 5+ 5+ 5+ 3= 18 .",
    "topics": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "implementation",
      "math",
      "shortest paths"
    ],
    "id": "1421D"
  },
  {
    "title": "XORwice",
    "url": "https://codeforces.com/problemset/problem/1421/A",
    "history": "In order to celebrate Twice' s 5th anniversary, Tzuyu and Sana decided to play a game. Tzuyu gave Sana two integers a and b and a really important quest. In order to complete the quest, Sana has to output the smallest possible value of ( a \u2295 x ) + ( b \u2295 x ) for any given x , where \u2295 denotes the bitwise XOR operation.",
    "input": "Each test contains multiple test cases. The first line contains the number of test cases t ( 1 \u2264 t \u2264 10^ 4 ) . Description of the test cases follows. The only line of each test case contains two integers a and b ( 1 \u2264 a, b \u2264 10^ 9 ) .",
    "output": "For each testcase, output the smallest possible value of the given expression.",
    "note": "For the first test case Sana can choose x= 4 and the value will be ( 6 \u2295 4 ) + ( 12 \u2295 4 ) = 2 + 8 = 10 . It can be shown that this is the smallest possible value.",
    "topics": [
      "bitmasks",
      "greedy",
      "math"
    ],
    "id": "1421A"
  },
  {
    "title": "Rock and Lever",
    "url": "https://codeforces.com/problemset/problem/1420/B",
    "history": "\" You must lift the dam. With a lever. I will give it to you. You must block the canal. With a rock. I will not give the rock to you. \" Danik urgently needs rock and lever! Obviously, the easiest way to get these things is to ask Hermit Lizard for them. Hermit Lizard agreed to give Danik the lever. But to get a stone, Danik needs to solve the following task. You are given a positive integer n , and an array a of positive integers. The task is to calculate the number of such pairs ( i, j) that i< j and a_ i & a_ j \u2265 a_ i \u2295 a_ j , where & denotes the bitwise AND operation, and \u2295 denotes the bitwise XOR operation. Danik has solved this task. But can you solve it?",
    "input": "Each test contains multiple test cases. The first line contains one positive integer t ( 1 \u2264 t \u2264 10 ) denoting the number of test cases. Description of the test cases follows. The first line of each test case contains one positive integer n ( 1 \u2264 n \u2264 10^ 5 ) \u2014 length of the array. The second line contains n positive integers a_ i ( 1 \u2264 a_ i \u2264 10^ 9 ) \u2014 elements of the array. It is guaranteed that the sum of n over all test cases does not exceed 10^ 5 .",
    "output": "For every test case print one non- negative integer \u2014 the answer to the problem.",
    "note": "In the first test case there is only one pair: ( 4, 7) : for it 4 & 7 = 4 , and 4 \u2295 7 = 3 . In the second test case all pairs are good. In the third test case there are two pairs: ( 6, 5) and ( 2, 3) . In the fourth test case there are no good pairs.",
    "topics": [
      "bitmasks",
      "math"
    ],
    "id": "1420B"
  },
  {
    "title": "Cubes Sorting",
    "url": "https://codeforces.com/problemset/problem/1420/A",
    "history": "For god' s sake, you' re boxes with legs! It is literally your only purpose! Walking onto buttons! How can you not do the one thing you were designed for? Oh, that' s funny, is it? Oh it' s funny? Because we' ve been at this for twelve hours and you haven' t solved it either, so I don' t know why you' re laughing. You' ve got one hour! Solve it! Wheatley decided to try to make a test chamber. He made a nice test chamber, but there was only one detail absent \u2014 cubes. For completing the chamber Wheatley needs n cubes. i - th cube has a volume a_ i . Wheatley has to place cubes in such a way that they would be sorted in a non- decreasing order by their volume. Formally, for each i> 1 , a_ i- 1\u2264 a_ i must hold. To achieve his goal, Wheatley can exchange two neighbouring cubes. It means that for any i> 1 you can exchange cubes on positions i- 1 and i . But there is a problem: Wheatley is very impatient. If Wheatley needs more than n \u00b7 ( n- 1) / 2- 1 exchange operations, he won' t do this boring work. Wheatly wants to know: can cubes be sorted under this conditions?",
    "input": "Each test contains multiple test cases. The first line contains one positive integer t ( 1 \u2264 t \u2264 1000 ) , denoting the number of test cases. Description of the test cases follows. The first line of each test case contains one positive integer n ( 2 \u2264 n \u2264 5 \u00b7 10^ 4 ) \u2014 number of cubes. The second line contains n positive integers a_ i ( 1 \u2264 a_ i \u2264 10^ 9 ) \u2014 volumes of cubes. It is guaranteed that the sum of n over all test cases does not exceed 10^ 5 .",
    "output": "For each test case, print a word in a single line: \" YES\" ( without quotation marks) if the cubes can be sorted and \" NO\" ( without quotation marks) otherwise.",
    "note": "In the first test case it is possible to sort all the cubes in 7 exchanges. In the second test case the cubes are already sorted. In the third test case we can make 0 exchanges, but the cubes are not sorted yet, so the answer is \" NO\" .",
    "topics": [
      "math",
      "sortings"
    ],
    "id": "1420A"
  },
  {
    "title": "Decryption",
    "url": "https://codeforces.com/problemset/problem/1419/E",
    "history": "An agent called Cypher is decrypting a message, that contains a composite number n . All divisors of n , which are greater than 1 , are placed in a circle. Cypher can choose the initial order of numbers in the circle. In one move Cypher can choose two adjacent numbers in a circle and insert their least common multiple between them. He can do that move as many times as needed. A message is decrypted, if every two adjacent numbers are not coprime. Note that for such constraints it' s always possible to decrypt the message. Find the minimal number of moves that Cypher should do to decrypt the message, and show the initial order of numbers in the circle for that.",
    "input": "The first line contains an integer t ( 1 \u2264 t \u2264 100) \u2014 the number of test cases. Next t lines describe each test case. In a single line of each test case description, there is a single composite number n ( 4 \u2264 n \u2264 10^ 9) \u2014 the number from the message. It' s guaranteed that the total number of divisors of n for all test cases does not exceed 2 \u00b7 10^ 5 .",
    "output": "For each test case in the first line output the initial order of divisors, which are greater than 1 , in the circle. In the second line output, the minimal number of moves needed to decrypt the message. If there are different possible orders with a correct answer, print any of them.",
    "note": "In the first test case 6 has three divisors, which are greater than 1 : 2, 3, 6 . Regardless of the initial order, numbers 2 and 3 are adjacent, so it' s needed to place their least common multiple between them. After that the circle becomes 2, 6, 3, 6 , and every two adjacent numbers are not coprime. In the second test case 4 has two divisors greater than 1 : 2, 4 , and they are not coprime, so any initial order is correct, and it' s not needed to place any least common multiples. In the third test case all divisors of 30 greater than 1 can be placed in some order so that there are no two adjacent numbers that are coprime.",
    "topics": [
      "constructive algorithms",
      "implementation",
      "math",
      "number theory"
    ],
    "id": "1419E"
  },
  {
    "title": "Killjoy",
    "url": "https://codeforces.com/problemset/problem/1419/C",
    "history": "A new agent called Killjoy invented a virus COVID- 2069 that infects accounts on Codeforces. Each account has a rating, described by an integer ( it can possibly be negative or very large) . Killjoy' s account is already infected and has a rating equal to x . Its rating is constant. There are n accounts except hers, numbered from 1 to n . The i - th account' s initial rating is a_ i . Any infected account ( initially the only infected account is Killjoy' s) instantly infects any uninfected account if their ratings are equal. This can happen at the beginning ( before any rating changes) and after each contest. If an account is infected, it can not be healed. Contests are regularly held on Codeforces. In each contest, any of these n accounts ( including infected ones) can participate. Killjoy can' t participate. After each contest ratings are changed this way: each participant' s rating is changed by an integer, but the sum of all changes must be equal to zero. New ratings can be any integer. Find out the minimal number of contests needed to infect all accounts. You can choose which accounts will participate in each contest and how the ratings will change. It can be proven that all accounts can be infected in some finite number of contests.",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 100) \u2014 the number of test cases. The next 2t lines contain the descriptions of all test cases. The first line of each test case contains two integers n and x ( 2 \u2264 n \u2264 10^ 3 , - 4000 \u2264 x \u2264 4000 ) \u2014 the number of accounts on Codeforces and the rating of Killjoy' s account. The second line of each test case contains n integers a_ 1, a_ 2, . . . , a_ n ( - 4000 \u2264 a_ i \u2264 4000) \u2014 the ratings of other accounts.",
    "output": "For each test case output the minimal number of contests needed to infect all accounts.",
    "note": "In the first test case it' s possible to make all ratings equal to 69 . First account' s rating will increase by 1 , and second account' s rating will decrease by 1 , so the sum of all changes will be equal to zero. In the second test case all accounts will be instantly infected, because all ratings ( including Killjoy' s account' s rating) are equal to 4 .",
    "topics": [
      "greedy",
      "implementation",
      "math"
    ],
    "id": "1419C"
  },
  {
    "title": "Stairs",
    "url": "https://codeforces.com/problemset/problem/1419/B",
    "history": "Jett is tired after destroying the town and she wants to have a rest. She likes high places, that' s why for having a rest she wants to get high and she decided to craft staircases. A staircase is a squared figure that consists of square cells. Each staircase consists of an arbitrary number of stairs. If a staircase has n stairs, then it is made of n columns, the first column is 1 cell high, the second column is 2 cells high, . . . , the n - th column if n cells high. The lowest cells of all stairs must be in the same row. A staircase with n stairs is called nice, if it may be covered by n disjoint squares made of cells. All squares should fully consist of cells of a staircase. This is how a nice covered staircase with 7 stairs looks like: Find out the maximal number of different nice staircases, that can be built, using no more than x cells, in total. No cell can be used more than once.",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 1000) \u2014 the number of test cases. The description of each test case contains a single integer x ( 1 \u2264 x \u2264 10^ 18) \u2014 the number of cells for building staircases.",
    "output": "For each test case output a single integer \u2014 the number of different nice staircases, that can be built, using not more than x cells, in total.",
    "note": "In the first test case, it is possible to build only one staircase, that consists of 1 stair. It' s nice. That' s why the answer is 1 . In the second test case, it is possible to build two different nice staircases: one consists of 1 stair, and another consists of 3 stairs. This will cost 7 cells. In this case, there is one cell left, but it is not possible to use it for building any nice staircases, that have not been built yet. That' s why the answer is 2 . In the third test case, it is possible to build only one of two nice staircases: with 1 stair or with 3 stairs. In the first case, there will be 5 cells left, that may be used only to build a staircase with 2 stairs. This staircase is not nice, and Jett only builds nice staircases. That' s why in this case the answer is 1 . If Jett builds a staircase with 3 stairs, then there are no more cells left, so the answer is 1 again.",
    "topics": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "implementation",
      "math"
    ],
    "id": "1419B"
  },
  {
    "title": "Equal Product",
    "url": "https://codeforces.com/problemset/problem/1418/F",
    "history": "You are given four integers n , m , l and r . Let' s name a tuple ( x_ 1, y_ 1, x_ 2, y_ 2) as good if: 1 \u2264 x_ 1 < x_ 2 \u2264 n ; 1 \u2264 y_ 2 < y_ 1 \u2264 m ; x_ 1 \u00b7 y_ 1 = x_ 2 \u00b7 y_ 2 ; l \u2264 x_ 1 \u00b7 y_ 1 \u2264 r . Find any good tuple for each x_ 1 from 1 to n inclusive.",
    "input": "The first line contains two integers n and m ( 1 \u2264 n, m \u2264 2 \u00b7 10^ 5 ) . The second line contains two integers l and r ( 1 \u2264 l \u2264 r \u2264 nm ) .",
    "output": "For each x_ 1 from 1 to n inclusive: if there are no such four integers, print - 1 ; otherwise, print four integers x_ 1 , y_ 1 , x_ 2 and y_ 2 . If there are multiple answers, print any of them.",
    "note": "",
    "topics": [
      "data structures",
      "math",
      "number theory",
      "two pointers"
    ],
    "id": "1418F"
  },
  {
    "title": "Buying Torches",
    "url": "https://codeforces.com/problemset/problem/1418/A",
    "history": "You are playing a very popular game called Cubecraft. Initially, you have one stick and want to craft k torches. One torch can be crafted using one stick and one coal. Hopefully, you' ve met a very handsome wandering trader who has two trade offers: exchange 1 stick for x sticks ( you lose 1 stick and gain x sticks) . exchange y sticks for 1 coal ( you lose y sticks and gain 1 coal) . During one trade, you can use only one of these two trade offers. You can use each trade offer any number of times you want to, in any order. Your task is to find the minimum number of trades you need to craft at least k torches. The answer always exists under the given constraints. You have to answer t independent test cases.",
    "input": "The first line of the input contains one integer t ( 1 \u2264 t \u2264 2 \u00b7 10^ 4 ) \u2014 the number of test cases. Then t test cases follow. The only line of the test case contains three integers x , y and k ( 2 \u2264 x \u2264 10^ 9 ; 1 \u2264 y, k \u2264 10^ 9 ) \u2014 the number of sticks you can buy with one stick, the number of sticks required to buy one coal and the number of torches you need, respectively.",
    "output": "For each test case, print the answer: the minimum number of trades you need to craft at least k torches. The answer always exists under the given constraints.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": "1418A"
  },
  {
    "title": "Two Arrays",
    "url": "https://codeforces.com/problemset/problem/1417/B",
    "history": "RedDreamer has an array a consisting of n non- negative integers, and an unlucky integer T . Let' s denote the misfortune of array b having length m as f( b) \u2014 the number of pairs of integers ( i, j) such that 1 \u2264 i < j \u2264 m and b_ i + b_ j = T . RedDreamer has to paint each element of a into one of two colors, white and black ( for each element, the color is chosen independently) , and then create two arrays c and d so that all white elements belong to c , and all black elements belong to d ( it is possible that one of these two arrays becomes empty) . RedDreamer wants to paint the elements in such a way that f( c) + f( d) is minimum possible. For example: if n = 6 , T = 7 and a = [ 1, 2, 3, 4, 5, 6] , it is possible to paint the 1 - st, the 4 - th and the 5 - th elements white, and all other elements black. So c = [ 1, 4, 5] , d = [ 2, 3, 6] , and f( c) + f( d) = 0 + 0 = 0 ; if n = 3 , T = 6 and a = [ 3, 3, 3] , it is possible to paint the 1 - st element white, and all other elements black. So c = [ 3] , d = [ 3, 3] , and f( c) + f( d) = 0 + 1 = 1 . Help RedDreamer to paint the array optimally!",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 1000 ) \u2014 the number of test cases. Then t test cases follow. The first line of each test case contains two integers n and T ( 1 \u2264 n \u2264 10^ 5 , 0 \u2264 T \u2264 10^ 9 ) \u2014 the number of elements in the array and the unlucky integer, respectively. The second line contains n integers a_ 1 , a_ 2 , . . . , a_ n ( 0 \u2264 a_ i \u2264 10^ 9 ) \u2014 the elements of the array. The sum of n over all test cases does not exceed 10^ 5 .",
    "output": "For each test case print n integers: p_ 1 , p_ 2 , . . . , p_ n ( each p_ i is either 0 or 1 ) denoting the colors. If p_ i is 0 , then a_ i is white and belongs to the array c , otherwise it is black and belongs to the array d . If there are multiple answers that minimize the value of f( c) + f( d) , print any of them.",
    "note": "",
    "topics": [
      "greedy",
      "math",
      "sortings"
    ],
    "id": "1417B"
  },
  {
    "title": "Copy-paste",
    "url": "https://codeforces.com/problemset/problem/1417/A",
    "history": "\u2014 Hey folks, how do you like this problem? \u2014 That' ll do it. BThero is a powerful magician. He has got n piles of candies, the i - th pile initially contains a_ i candies. BThero can cast a copy- paste spell as follows: He chooses two piles ( i, j) such that 1 \u2264 i, j \u2264 n and i j . All candies from pile i are copied into pile j . Formally, the operation a_ j : = a_ j + a_ i is performed. BThero can cast this spell any number of times he wants to \u2014 but unfortunately, if some pile contains strictly more than k candies, he loses his magic power. What is the maximum number of times BThero can cast the spell without losing his power?",
    "input": "The first line contains one integer T ( 1 \u2264 T \u2264 500 ) \u2014 the number of test cases. Each test case consists of two lines: the first line contains two integers n and k ( 2 \u2264 n \u2264 1000 , 2 \u2264 k \u2264 10^ 4 ) ; the second line contains n integers a_ 1 , a_ 2 , . . . , a_ n ( 1 \u2264 a_ i \u2264 k ) . It is guaranteed that the sum of n over all test cases does not exceed 1000 , and the sum of k over all test cases does not exceed 10^ 4 .",
    "output": "For each test case, print one integer \u2014 the maximum number of times BThero can cast the spell without losing his magic power.",
    "note": "In the first test case we get either a = [ 1, 2] or a = [ 2, 1] after casting the spell for the first time, and it is impossible to cast it again.",
    "topics": [
      "greedy",
      "math"
    ],
    "id": "1417A"
  },
  {
    "title": "XOR Inverse",
    "url": "https://codeforces.com/problemset/problem/1416/C",
    "history": "You are given an array a consisting of n non- negative integers. You have to choose a non- negative integer x and form a new array b of size n according to the following rule: for all i from 1 to n , b_ i = a_ i \u2295 x ( \u2295 denotes the operation bitwise XOR) . An inversion in the b array is a pair of integers i and j such that 1 \u2264 i < j \u2264 n and b_ i > b_ j . You should choose x in such a way that the number of inversions in b is minimized. If there are several options for x \u2014 output the smallest one.",
    "input": "First line contains a single integer n ( 1 \u2264 n \u2264 3 \u00b7 10^ 5 ) \u2014 the number of elements in a . Second line contains n space- separated integers a_ 1 , a_ 2 , . . . , a_ n ( 0 \u2264 a_ i \u2264 10^ 9 ) , where a_ i is the i - th element of a .",
    "output": "Output two integers: the minimum possible number of inversions in b , and the minimum possible value of x , which achieves those number of inversions.",
    "note": "In the first sample it is optimal to leave the array as it is by choosing x = 0 . In the second sample the selection of x = 14 results in b : [ 4, 9, 7, 4, 9, 11, 11, 13, 11] . It has 4 inversions: i = 2 , j = 3 ; i = 2 , j = 4 ; i = 3 , j = 4 ; i = 8 , j = 9 . In the third sample the selection of x = 8 results in b : [ 0, 2, 11] . It has no inversions.",
    "topics": [
      "bitmasks",
      "data structures",
      "divide and conquer",
      "dp",
      "greedy",
      "math",
      "sortings",
      "strings",
      "trees"
    ],
    "id": "1416C"
  },
  {
    "title": "Make Them Equal",
    "url": "https://codeforces.com/problemset/problem/1416/B",
    "history": "You are given an array a consisting of n positive integers, numbered from 1 to n . You can perform the following operation no more than 3n times: choose three integers i , j and x ( 1 \u2264 i, j \u2264 n ; 0 \u2264 x \u2264 10^ 9 ) ; assign a_ i : = a_ i - x \u00b7 i , a_ j : = a_ j + x \u00b7 i . After each operation, all elements of the array should be non- negative. Can you find a sequence of no more than 3n operations after which all elements of the array are equal?",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. Then t test cases follow. The first line of each test case contains one integer n ( 1 \u2264 n \u2264 10^ 4 ) \u2014 the number of elements in the array. The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 5 ) \u2014 the elements of the array. It is guaranteed that the sum of n over all test cases does not exceed 10^ 4 .",
    "output": "For each test case print the answer to it as follows: if there is no suitable sequence of operations, print - 1 ; otherwise, print one integer k ( 0 \u2264 k \u2264 3n ) \u2014 the number of operations in the sequence. Then print k lines, the m - th of which should contain three integers i , j and x ( 1 \u2264 i, j \u2264 n ; 0 \u2264 x \u2264 10^ 9 ) for the m - th operation. If there are multiple suitable sequences of operations, print any of them. Note that you don' t have to minimize k .",
    "note": "",
    "topics": [
      "constructive algorithms",
      "greedy",
      "math"
    ],
    "id": "1416B"
  },
  {
    "title": "New Game Plus!",
    "url": "https://codeforces.com/problemset/problem/1415/E",
    "history": "Wabbit is playing a game with n bosses numbered from 1 to n . The bosses can be fought in any order. Each boss needs to be defeated exactly once. There is a parameter called boss bonus which is initially 0 . When the i - th boss is defeated, the current boss bonus is added to Wabbit' s score, and then the value of the boss bonus increases by the point increment c_ i . Note that c_ i can be negative, which means that other bosses now give fewer points. However, Wabbit has found a glitch in the game. At any point in time, he can reset the playthrough and start a New Game Plus playthrough. This will set the current boss bonus to 0 , while all defeated bosses remain defeated. The current score is also saved and does not reset to zero after this operation. This glitch can be used at most k times. He can reset after defeating any number of bosses ( including before or after defeating all of them) , and he also can reset the game several times in a row without defeating any boss. Help Wabbit determine the maximum score he can obtain if he has to defeat all n bosses.",
    "input": "The first line of input contains two spaced integers n and k ( 1 \u2264 n \u2264 5 \u00b7 10^ 5 , 0 \u2264 k \u2264 5 \u00b7 10^ 5 ) , representing the number of bosses and the number of resets allowed. The next line of input contains n spaced integers c_ 1, c_ 2, . . . , c_ n ( - 10^ 6 \u2264 c_ i \u2264 10^ 6 ) , the point increments of the n bosses.",
    "output": "Output a single integer, the maximum score Wabbit can obtain by defeating all n bosses ( this value may be negative) .",
    "note": "In the first test case, no resets are allowed. An optimal sequence of fights would be Fight the first boss ( + 0) . Boss bonus becomes equal to 1 . Fight the second boss ( + 1) . Boss bonus becomes equal to 2 . Fight the third boss ( + 2) . Boss bonus becomes equal to 3 . Thus the answer for the first test case is 0+ 1+ 2= 3 . In the second test case, it can be shown that one possible optimal sequence of fights is Fight the fifth boss ( + 0) . Boss bonus becomes equal to 5 . Fight the first boss ( + 5) . Boss bonus becomes equal to 4 . Fight the second boss ( + 4) . Boss bonus becomes equal to 2 . Fight the third boss ( + 2) . Boss bonus becomes equal to - 1 . Reset. Boss bonus becomes equal to 0 . Fight the fourth boss ( + 0) . Boss bonus becomes equal to - 4 . Hence the answer for the second test case is 0+ 5+ 4+ 2+ 0= 11 .",
    "topics": [
      "constructive algorithms",
      "greedy",
      "math"
    ],
    "id": "1415E"
  },
  {
    "title": "Prison Break",
    "url": "https://codeforces.com/problemset/problem/1415/A",
    "history": "There is a prison that can be represented as a rectangular matrix with n rows and m columns. Therefore, there are n \u00b7 m prison cells. There are also n \u00b7 m prisoners, one in each prison cell. Let' s denote the cell in the i - th row and the j - th column as ( i, j) . There' s a secret tunnel in the cell ( r, c) , that the prisoners will use to escape! However, to avoid the risk of getting caught, they will escape at night. Before the night, every prisoner is in his own cell. When night comes, they can start moving to adjacent cells. Formally, in one second, a prisoner located in cell ( i, j) can move to cells ( i - 1 , j ) , ( i + 1 , j ) , ( i , j - 1 ) , or ( i , j + 1 ) , as long as the target cell is inside the prison. They can also choose to stay in cell ( i, j) . The prisoners want to know the minimum number of seconds needed so that every prisoner can arrive to cell ( r , c ) if they move optimally. Note that there can be any number of prisoners in the same cell at the same time.",
    "input": "The first line contains an integer t ( 1 \u2264 t \u2264 10^ 4) , the number of test cases. Each of the next t lines contains four space- separated integers n , m , r , c ( 1 \u2264 r \u2264 n \u2264 10^ 9 , 1 \u2264 c \u2264 m \u2264 10^ 9 ) .",
    "output": "Print t lines, the answers for each test case.",
    "note": "",
    "topics": [
      "brute force",
      "math"
    ],
    "id": "1415A"
  },
  {
    "title": "Solo mid Oracle",
    "url": "https://codeforces.com/problemset/problem/1413/E",
    "history": "Meka- Naruto plays a computer game. His character has the following ability: given an enemy hero, deal a instant damage to him, and then heal that enemy b health points at the end of every second, for exactly c seconds, starting one second after the ability is used. That means that if the ability is used at time t , the enemy' s health decreases by a at time t , and then increases by b at time points t + 1 , t + 2 , . . . , t + c due to this ability. The ability has a cooldown of d seconds, i. e. if Meka- Naruto uses it at time moment t , next time he can use it is the time t + d . Please note that he can only use the ability at integer points in time, so all changes to the enemy' s health also occur at integer times only. The effects from different uses of the ability may stack with each other; that is, the enemy which is currently under k spells gets k\u00b7 b amount of heal this time. Also, if several health changes occur at the same moment, they are all counted at once. Now Meka- Naruto wonders if he can kill the enemy by just using the ability each time he can ( that is, every d seconds) . The enemy is killed if their health points become 0 or less. Assume that the enemy' s health is not affected in any way other than by Meka- Naruto' s character ability. What is the maximal number of health points the enemy can have so that Meka- Naruto is able to kill them?",
    "input": "The first line contains an integer t ( 1\u2264 t\u2264 10^ 5 ) standing for the number of testcases. Each test case is described with one line containing four numbers a , b , c and d ( 1\u2264 a, b, c, d\u2264 10^ 6 ) denoting the amount of instant damage, the amount of heal per second, the number of heals and the ability cooldown, respectively.",
    "output": "For each testcase in a separate line print - 1 if the skill can kill an enemy hero with an arbitrary number of health points, otherwise print the maximal number of health points of the enemy that can be killed.",
    "note": "In the first test case of the example each unit of damage is cancelled in a second, so Meka- Naruto cannot deal more than 1 damage. In the fourth test case of the example the enemy gets: 4 damage ( 1 - st spell cast) at time 0 ; 4 damage ( 2 - nd spell cast) and 3 heal ( 1 - st spell cast) at time 1 ( the total of 5 damage to the initial health) ; 4 damage ( 3 - nd spell cast) and 6 heal ( 1 - st and 2 - nd spell casts) at time 2 ( the total of 3 damage to the initial health) ; and so on. One can prove that there is no time where the enemy gets the total of 6 damage or more, so the answer is 5 . Please note how the health is recalculated: for example, 8 - health enemy would not die at time 1 , as if we first subtracted 4 damage from his health and then considered him dead, before adding 3 heal. In the sixth test case an arbitrarily healthy enemy can be killed in a sufficient amount of time. In the seventh test case the answer does not fit into a 32- bit integer type.",
    "topics": [
      "greedy",
      "math",
      "ternary search"
    ],
    "id": "1413E"
  },
  {
    "title": "Finding Sasuke",
    "url": "https://codeforces.com/problemset/problem/1413/A",
    "history": "Naruto has sneaked into the Orochimaru' s lair and is now looking for Sasuke. There are T rooms there. Every room has a door into it, each door can be described by the number n of seals on it and their integer energies a_ 1 , a_ 2 , . . . , a_ n . All energies a_ i are nonzero and do not exceed 100 by absolute value. Also, n is even. In order to open a door, Naruto must find such n seals with integer energies b_ 1 , b_ 2 , . . . , b_ n that the following equality holds: a_ 1\u00b7 b_ 1 + a_ 2\u00b7 b_ 2 + . . . + a_ n\u00b7 b_ n = 0 . All b_ i must be nonzero as well as a_ i are, and also must not exceed 100 by absolute value. Please find required seals for every room there.",
    "input": "The first line contains the only integer T ( 1 \u2264 T \u2264 1000 ) standing for the number of rooms in the Orochimaru' s lair. The other lines contain descriptions of the doors. Each description starts with the line containing the only even integer n ( 2 \u2264 n \u2264 100 ) denoting the number of seals. The following line contains the space separated sequence of nonzero integers a_ 1 , a_ 2 , . . . , a_ n ( | a_ i| \u2264 100 , a_ i= \u0338 0 ) denoting the energies of seals.",
    "output": "For each door print a space separated sequence of nonzero integers b_ 1 , b_ 2 , . . . , b_ n ( | b_ i| \u2264 100 , b_ i= \u0338 0 ) denoting the seals that can open the door. If there are multiple valid answers, print any. It can be proven that at least one answer always exists.",
    "note": "For the first door Naruto can use energies [ - 100, 1] . The required equality does indeed hold: 1 \u00b7 ( - 100) + 100 \u00b7 1 = 0 . For the second door Naruto can use, for example, energies [ 1, 1, 1, - 1] . The required equality also holds: 1 \u00b7 1 + 2 \u00b7 1 + 3 \u00b7 1 + 6 \u00b7 ( - 1) = 0 .",
    "topics": [
      "constructive algorithms",
      "math"
    ],
    "id": "1413A"
  },
  {
    "title": "No Game No Life",
    "url": "https://codeforces.com/problemset/problem/1411/G",
    "history": "Let' s consider the following game of Alice and Bob on a directed acyclic graph. Each vertex may contain an arbitrary number of chips. Alice and Bob make turns alternating. Alice goes first. In one turn player can move exactly one chip along any edge outgoing from the vertex that contains this chip to the end of this edge. The one who cannot make a turn loses. Both players play optimally. Consider the following process that takes place every second on a given graph with n vertices: An integer v is chosen equiprobably from [ 1, n + 1] . If v \u2264 n , we add a chip to the v - th vertex and go back to step 1. If v = n + 1 , Alice and Bob play the game with the current arrangement of chips and the winner is determined. After that, the process is terminated. Find the probability that Alice will win the game. It can be shown that the answer can be represented as P/ Q , where P and Q are coprime integers and Q \u2261\u03380 998 244 353 . Print the value of P \u00b7 Q^ - 1 998 244 353 .",
    "input": "The first line contains two integers n and m \u2014 the number of vertices and edges of the graph ( 1 \u2264 n \u2264 10^ 5 , 0 \u2264 m \u2264 10^ 5 ) . The following m lines contain edges description. The i - th of them contains two integers u_ i and v_ i \u2014 the beginning and the end vertices of the i - th edge ( 1 \u2264 u_ i, v_ i \u2264 n ) . It' s guaranteed that the graph is acyclic.",
    "output": "Output a single integer \u2014 the probability of Alice victory modulo 998 244 353 .",
    "note": "",
    "topics": [
      "bitmasks",
      "games",
      "math",
      "matrices"
    ],
    "id": "1411G"
  },
  {
    "title": "The Thorny Path",
    "url": "https://codeforces.com/problemset/problem/1411/F",
    "history": "According to a legend the Hanoi Temple holds a permutation of integers from 1 to n . There are n stones of distinct colors lying in one line in front of the temple. Monks can perform the following operation on stones: choose a position i ( 1 \u2264 i \u2264 n ) and cyclically shift stones at positions i , p[ i] , p[ p[ i] ] , . . . . That is, a stone from position i will move to position p[ i] , a stone from position p[ i] will move to position p[ p[ i] ] , and so on, a stone from position j , such that p[ j] = i , will move to position i . Each day the monks must obtain a new arrangement of stones using an arbitrary number of these operations. When all possible arrangements will have been obtained, the world will end. You are wondering, what if some elements of the permutation could be swapped just before the beginning? How many days would the world last? You want to get a permutation that will allow the world to last as long as possible, using the minimum number of exchanges of two elements of the permutation. Two arrangements of stones are considered different if there exists a position i such that the colors of the stones on that position are different in these arrangements.",
    "input": "Each test consists of multiple test cases. The first line contains the number of test cases t ( 1 \u2264 t \u2264 10^ 3 ) . Description of the test cases follows. The first line of each test case contains n ( 3 \u2264 n \u2264 10^ 6 ) . The next line contains n integers p_ 1, . . . , p_ n ( 1 \u2264 p_ i \u2264 n ) . It is guaranteed that p is a permutation. It is guaranteed that the sum of n over all test cases does not exceed 10^ 6 .",
    "output": "For each of the t test cases, print two integers on a new line: the largest possible number of days the world can last, modulo 10^ 9 + 7 , and the minimum number of exchanges required for that.",
    "note": "Let' s label the colors of the stones with letters. Explanations for the first two test cases of the first example: Using the permutation [ 2, 3, 1] , we can additionally obtain the arrangements CAB and BCA from ABC. This is already the maximum possible result. Using the permutation [ 2, 1, 3] , the only BAC can be obtained from ABC. As we saw in the previous case, two arrangements are not the maximum possible number of distinct arrangements for n = 3 . To get an optimal permutation, for example, we can swap 1 and 3 , so we will get the permutation [ 2, 3, 1] .",
    "topics": [
      "greedy",
      "math"
    ],
    "id": "1411F"
  },
  {
    "title": "Poman Numbers",
    "url": "https://codeforces.com/problemset/problem/1411/E",
    "history": "You' ve got a string S consisting of n lowercase English letters from your friend. It turned out that this is a number written in poman numerals. The poman numeral system is long forgotten. All that' s left is the algorithm to transform number from poman numerals to the numeral system familiar to us. Characters of S are numbered from 1 to n from left to right. Let' s denote the value of S as f( S) , it is defined as follows: If | S| > 1 , an arbitrary integer m ( 1 \u2264 m < | S| ) is chosen, and it is defined that f( S) = - f( S[ 1, m] ) + f( S[ m + 1, | S| ] ) , where S[ l, r] denotes the substring of S from the l - th to the r - th position, inclusively. Otherwise S = c , where c is some English letter. Then f( S) = 2^ pos( c) , where pos( c) is the position of letter c in the alphabet ( pos( a ) = 0 , pos( z ) = 25 ) . Note that m is chosen independently on each step. Your friend thinks it is possible to get f( S) = T by choosing the right m on every step. Is he right?",
    "input": "The first line contains two integers n and T ( 2 \u2264 n \u2264 10^ 5 , - 10^ 15\u2264 T \u2264 10^ 15 ) . The second line contains a string S consisting of n lowercase English letters.",
    "output": "Print \" Yes\" if it is possible to get the desired value. Otherwise, print \" No\" . You can print each letter in any case ( upper or lower) .",
    "note": "In the second example, you cannot get - 7 . But you can get 1 , for example, as follows: First choose m = 1 , then f( abc ) = - f( a ) + f( bc ) f( a ) = 2^ 0 = 1 f( bc ) = - f( b ) + f( c ) = - 2^ 1 + 2^ 2 = 2 In the end f( abc ) = - 1 + 2 = 1",
    "topics": [
      "bitmasks",
      "greedy",
      "math",
      "strings"
    ],
    "id": "1411E"
  },
  {
    "title": "Decrease the Sum of Digits",
    "url": "https://codeforces.com/problemset/problem/1409/D",
    "history": "You are given a positive integer n . In one move, you can increase n by one ( i. e. make n : = n + 1 ) . Your task is to find the minimum number of moves you need to perform in order to make the sum of digits of n be less than or equal to s . You have to answer t independent test cases.",
    "input": "The first line of the input contains one integer t ( 1 \u2264 t \u2264 2 \u00b7 10^ 4 ) \u2014 the number of test cases. Then t test cases follow. The only line of the test case contains two integers n and s ( 1 \u2264 n \u2264 10^ 18 ; 1 \u2264 s \u2264 162 ) .",
    "output": "For each test case, print the answer: the minimum number of moves you need to perform in order to make the sum of digits of n be less than or equal to s .",
    "note": "",
    "topics": [
      "greedy",
      "math"
    ],
    "id": "1409D"
  },
  {
    "title": "Yet Another Array Restoration",
    "url": "https://codeforces.com/problemset/problem/1409/C",
    "history": "We have a secret array. You don' t know this array and you have to restore it. However, you know some facts about this array: The array consists of n distinct positive ( greater than 0 ) integers. The array contains two elements x and y ( these elements are known for you) such that x < y . If you sort the array in increasing order ( such that a_ 1 < a_ 2 < . . . < a_ n ) , differences between all adjacent ( consecutive) elements are equal ( i. e. a_ 2 - a_ 1 = a_ 3 - a_ 2 = . . . = a_ n - a_ n- 1) . It can be proven that such an array always exists under the constraints given below. Among all possible arrays that satisfy the given conditions, we ask you to restore one which has the minimum possible maximum element. In other words, you have to minimize max( a_ 1, a_ 2, . . . , a_ n) . You have to answer t independent test cases.",
    "input": "The first line of the input contains one integer t ( 1 \u2264 t \u2264 100 ) \u2014 the number of test cases. Then t test cases follow. The only line of the test case contains three integers n , x and y ( 2 \u2264 n \u2264 50 ; 1 \u2264 x < y \u2264 50 ) \u2014 the length of the array and two elements that are present in the array, respectively.",
    "output": "For each test case, print the answer: n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 9 ) , where a_ i is the i - th element of the required array. If there are several answers, you can print any ( it also means that the order of elements doesn' t matter) . It can be proven that such an array always exists under the given constraints.",
    "note": "",
    "topics": [
      "brute force",
      "math",
      "number theory"
    ],
    "id": "1409C"
  },
  {
    "title": "Minimum Product",
    "url": "https://codeforces.com/problemset/problem/1409/B",
    "history": "You are given four integers a , b , x and y . Initially, a \u2265 x and b \u2265 y . You can do the following operation no more than n times: Choose either a or b and decrease it by one. However, as a result of this operation, value of a cannot become less than x , and value of b cannot become less than y . Your task is to find the minimum possible product of a and b ( a \u00b7 b ) you can achieve by applying the given operation no more than n times. You have to answer t independent test cases.",
    "input": "The first line of the input contains one integer t ( 1 \u2264 t \u2264 2 \u00b7 10^ 4 ) \u2014 the number of test cases. Then t test cases follow. The only line of the test case contains five integers a , b , x , y and n ( 1 \u2264 a, b, x, y, n \u2264 10^ 9 ) . Additional constraint on the input: a \u2265 x and b \u2265 y always holds.",
    "output": "For each test case, print one integer: the minimum possible product of a and b ( a \u00b7 b ) you can achieve by applying the given operation no more than n times.",
    "note": "In the first test case of the example, you need to decrease b three times and obtain 10 \u00b7 7 = 70 . In the second test case of the example, you need to decrease a one time, b one time and obtain 11 \u00b7 7 = 77 . In the sixth test case of the example, you need to decrease a five times and obtain 5 \u00b7 11 = 55 . In the seventh test case of the example, you need to decrease b ten times and obtain 10 \u00b7 1 = 10 .",
    "topics": [
      "brute force",
      "greedy",
      "math"
    ],
    "id": "1409B"
  },
  {
    "title": "Yet Another Two Integers Problem",
    "url": "https://codeforces.com/problemset/problem/1409/A",
    "history": "You are given two integers a and b . In one move, you can choose some integer k from 1 to 10 and add it to a or subtract it from a . In other words, you choose an integer k \u2208 [ 1; 10] and perform a : = a + k or a : = a - k . You may use different values of k in different moves. Your task is to find the minimum number of moves required to obtain b from a . You have to answer t independent test cases.",
    "input": "The first line of the input contains one integer t ( 1 \u2264 t \u2264 2 \u00b7 10^ 4 ) \u2014 the number of test cases. Then t test cases follow. The only line of the test case contains two integers a and b ( 1 \u2264 a, b \u2264 10^ 9 ) .",
    "output": "For each test case, print the answer: the minimum number of moves required to obtain b from a .",
    "note": "In the first test case of the example, you don' t need to do anything. In the second test case of the example, the following sequence of moves can be applied: 13 \u2192 23 \u2192 32 \u2192 42 ( add 10 , add 9 , add 10 ) . In the third test case of the example, the following sequence of moves can be applied: 18 \u2192 10 \u2192 4 ( subtract 8 , subtract 6 ) .",
    "topics": [
      "greedy",
      "math"
    ],
    "id": "1409A"
  },
  {
    "title": "Bitwise Magic",
    "url": "https://codeforces.com/problemset/problem/1408/I",
    "history": "You are given a positive integer k and an array a_ 1, a_ 2, . . . , a_ n of non- negative distinct integers not smaller than k and not greater than 2^ c- 1 . In each of the next k seconds, one element is chosen randomly equiprobably out of all n elements and decreased by 1 . For each integer x , 0 \u2264 x \u2264 2^ c - 1 , you need to find the probability that in the end the bitwise XOR of all elements of the array is equal to x . Each of these values can be represented as an irreducible fraction p/ q , and you need to find the value of p \u00b7 q^ - 1 modulo 998 244 353 .",
    "input": "The first line of input contains three integers n, k, c ( 1 \u2264 n \u2264 ( 2^ c - k) , 1 \u2264 k \u2264 16 , 1 \u2264 c \u2264 16 ) . The second line contains n distinct integers a_ 1, a_ 2, . . . , a_ n ( k \u2264 a_ i \u2264 2^ c- 1 ) .",
    "output": "Print 2^ c integers: the probability that the bitwise XOR is equal to x in the end for x in { 0, 1, . . . , 2^ c- 1} modulo 998 244 353 .",
    "note": "",
    "topics": [
      "dp",
      "math"
    ],
    "id": "1408I"
  },
  {
    "title": "Discrete Acceleration",
    "url": "https://codeforces.com/problemset/problem/1408/C",
    "history": "There is a road with length l meters. The start of the road has coordinate 0 , the end of the road has coordinate l . There are two cars, the first standing at the start of the road and the second standing at the end of the road. They will start driving simultaneously. The first car will drive from the start to the end and the second car will drive from the end to the start. Initially, they will drive with a speed of 1 meter per second. There are n flags at different coordinates a_ 1, a_ 2, . . . , a_ n . Each time when any of two cars drives through a flag, the speed of that car increases by 1 meter per second. Find how long will it take for cars to meet ( to reach the same coordinate) .",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 10^ 4 ) : the number of test cases. The first line of each test case contains two integers n , l ( 1 \u2264 n \u2264 10^ 5 , 1 \u2264 l \u2264 10^ 9 ) : the number of flags and the length of the road. The second line contains n integers a_ 1, a_ 2, . . . , a_ n in the increasing order ( 1 \u2264 a_ 1 < a_ 2 < . . . < a_ n < l ) . It is guaranteed that the sum of n among all test cases does not exceed 10^ 5 .",
    "output": "For each test case print a single real number: the time required for cars to meet. Your answer will be considered correct, if its absolute or relative error does not exceed 10^ - 6 . More formally, if your answer is a and jury' s answer is b , your answer will be considered correct if | a- b| / max( 1, b) \u2264 10^ - 6 .",
    "note": "In the first test case cars will meet in the coordinate 5 . The first car will be in the coordinate 1 in 1 second and after that its speed will increase by 1 and will be equal to 2 meters per second. After 2 more seconds it will be in the coordinate 5 . So, it will be in the coordinate 5 in 3 seconds. The second car will be in the coordinate 9 in 1 second and after that its speed will increase by 1 and will be equal to 2 meters per second. After 2 more seconds it will be in the coordinate 5 . So, it will be in the coordinate 5 in 3 seconds. In the second test case after 1 second the first car will be in the coordinate 1 and will have the speed equal to 2 meters per second, the second car will be in the coordinate 9 and will have the speed equal to 1 meter per second. So, they will meet after 9- 1/ 2+ 1 = 8/ 3 seconds. So, the answer is equal to 1 + 8/ 3 = 11/ 3 .",
    "topics": [
      "binary search",
      "dp",
      "implementation",
      "math",
      "two pointers"
    ],
    "id": "1408C"
  },
  {
    "title": "Arrays Sum",
    "url": "https://codeforces.com/problemset/problem/1408/B",
    "history": "You are given a non- decreasing array of non- negative integers a_ 1, a_ 2, . . . , a_ n . Also you are given a positive integer k . You want to find m non- decreasing arrays of non- negative integers b_ 1, b_ 2, . . . , b_ m , such that: The size of b_ i is equal to n for all 1 \u2264 i \u2264 m . For all 1 \u2264 j \u2264 n , a_ j = b_ 1, j + b_ 2, j + . . . + b_ m, j . In the other word, array a is the sum of arrays b_ i . The number of different elements in the array b_ i is at most k for all 1 \u2264 i \u2264 m . Find the minimum possible value of m , or report that there is no possible m .",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 100 ) : the number of test cases. The first line of each test case contains two integers n , k ( 1 \u2264 n \u2264 100 , 1 \u2264 k \u2264 n ) . The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 0 \u2264 a_ 1 \u2264 a_ 2 \u2264. . . \u2264 a_ n \u2264 100 , a_ n > 0 ) .",
    "output": "For each test case print a single integer: the minimum possible value of m . If there is no such m , print - 1 .",
    "note": "In the first test case, there is no possible m , because all elements of all arrays should be equal to 0 . But in this case, it is impossible to get a_ 4 = 1 as the sum of zeros. In the second test case, we can take b_ 1 = [ 3, 3, 3] . 1 is the smallest possible value of m . In the third test case, we can take b_ 1 = [ 0, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2] and b_ 2 = [ 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2] . It' s easy to see, that a_ i = b_ 1, i + b_ 2, i for all i and the number of different elements in b_ 1 and in b_ 2 is equal to 3 ( so it is at most 3 ) . It can be proven that 2 is the smallest possible value of m .",
    "topics": [
      "constructive algorithms",
      "greedy",
      "math"
    ],
    "id": "1408B"
  },
  {
    "title": "Chocolate Bunny",
    "url": "https://codeforces.com/problemset/problem/1407/C",
    "history": "This is an interactive problem. We hid from you a permutation p of length n , consisting of the elements from 1 to n . You want to guess it. To do that, you can give us 2 different indices i and j , and we will reply with p_ i p_ j ( remainder of division p_ i by p_ j ) . We have enough patience to answer at most 2 \u00b7 n queries, so you should fit in this constraint. Can you do it? As a reminder, a permutation of length n is an array consisting of n distinct integers from 1 to n in arbitrary order. For example, [ 2, 3, 1, 5, 4] is a permutation, but [ 1, 2, 2] is not a permutation ( 2 appears twice in the array) and [ 1, 3, 4] is also not a permutation ( n= 3 but there is 4 in the array) . InteractionThe interaction starts with reading n . Then you are allowed to make at most 2 \u00b7 n queries in the following way: \" ? x y\" ( 1 \u2264 x, y \u2264 n, x y ) . After each one, you should read an integer k , that equals p_ x p_ y . When you have guessed the permutation, print a single line \" ! \" ( without quotes) , followed by array p and quit. After printing a query do not forget to output end of line and flush the output. Otherwise, you will get Idleness limit exceeded. To do this, use: fflush( stdout) or cout. flush( ) in C+ + ; System. out. flush( ) in Java; flush( output) in Pascal; stdout. flush( ) in Python; see documentation for other languages. Exit immediately after receiving \" - 1\" and you will see Wrong answer verdict. Otherwise you can get an arbitrary verdict because your solution will continue to read from a closed stream. Hack formatIn the first line output n ( 1 \u2264 n \u2264 10^ 4 ) . In the second line print the permutation of n integers p_ 1, p_ 2, . . . , p_ n .",
    "input": "The only line of the input contains a single integer n ( 1 \u2264 n \u2264 10^ 4 ) \u2014 length of the permutation.",
    "output": "",
    "note": "",
    "topics": [
      "constructive algorithms",
      "interactive",
      "math",
      "two pointers"
    ],
    "id": "1407C"
  },
  {
    "title": "Big Vova",
    "url": "https://codeforces.com/problemset/problem/1407/B",
    "history": "Alexander is a well- known programmer. Today he decided to finally go out and play football, but with the first hit he left a dent on the new Rolls- Royce of the wealthy businessman Big Vova. Vladimir has recently opened a store on the popular online marketplace \" Zmey- Gorynych\" , and offers Alex a job: if he shows his programming skills by solving a task, he' ll work as a cybersecurity specialist. Otherwise, he' ll be delivering some doubtful products for the next two years. You' re given n positive integers a_ 1, a_ 2, . . . , a_ n . Using each of them exactly at once, you' re to make such sequence b_ 1, b_ 2, . . . , b_ n that sequence c_ 1, c_ 2, . . . , c_ n is lexicographically maximal, where c_ i= GCD( b_ 1, . . . , b_ i) - the greatest common divisor of the first i elements of b . Alexander is really afraid of the conditions of this simple task, so he asks you to solve it. A sequence a is lexicographically smaller than a sequence b if and only if one of the following holds: a is a prefix of b , but a b ; in the first position where a and b differ, the sequence a has a smaller element than the corresponding element in b .",
    "input": "Each test contains multiple test cases. The first line contains the number of test cases t ( 1 \u2264 t \u2264 10^ 3 ) . Description of the test cases follows. The first line of each test case contains a single integer n ( 1 \u2264 n \u2264 10^ 3 ) \u2014 the length of the sequence a . The second line of each test case contains n integers a_ 1, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 3 ) \u2014 the sequence a . It is guaranteed that the sum of n over all test cases does not exceed 10^ 3 .",
    "output": "For each test case output the answer in a single line \u2014 the desired sequence b . If there are multiple answers, print any.",
    "note": "In the first test case of the example, there are only two possible permutations b \u2014 [ 2, 5] and [ 5, 2] : for the first one c= [ 2, 1] , for the second one c= [ 5, 1] . In the third test case of the example, number 9 should be the first in b , and GCD( 9, 3) = 3 , GCD( 9, 8) = 1 , so the second number of b should be 3 . In the seventh test case of the example, first four numbers pairwise have a common divisor ( a power of two) , but none of them can be the first in the optimal permutation b .",
    "topics": [
      "brute force",
      "greedy",
      "math",
      "number theory"
    ],
    "id": "1407B"
  },
  {
    "title": "Ahahahahahahahaha",
    "url": "https://codeforces.com/problemset/problem/1407/A",
    "history": "Alexandra has an even- length array a , consisting of 0 s and 1 s. The elements of the array are enumerated from 1 to n . She wants to remove at most n/ 2 elements ( where n \u2014 length of array) in the way that alternating sum of the array will be equal 0 ( i. e. a_ 1 - a_ 2 + a_ 3 - a_ 4 + . . . = 0 ) . In other words, Alexandra wants sum of all elements at the odd positions and sum of all elements at the even positions to become equal. The elements that you remove don' t have to be consecutive. For example, if she has a = [ 1, 0, 1, 0, 0, 0] and she removes 2 nd and 4 th elements, a will become equal [ 1, 1, 0, 0] and its alternating sum is 1 - 1 + 0 - 0 = 0 . Help her!",
    "input": "Each test contains multiple test cases. The first line contains the number of test cases t ( 1 \u2264 t \u2264 10^ 3 ) . Description of the test cases follows. The first line of each test case contains a single integer n ( 2 \u2264 n \u2264 10^ 3 , n is even) \u2014 length of the array. The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 0 \u2264 a_ i \u2264 1 ) \u2014 elements of the array. It is guaranteed that the sum of n over all test cases does not exceed 10^ 3 .",
    "output": "For each test case, firstly, print k ( n/ 2\u2264 k \u2264 n ) \u2014 number of elements that will remain after removing in the order they appear in a . Then, print this k numbers. Note that you should print the numbers themselves, not their indices. We can show that an answer always exists. If there are several answers, you can output any of them.",
    "note": "In the first and second cases, alternating sum of the array, obviously, equals 0 . In the third case, alternating sum of the array equals 1 - 1 = 0 . In the fourth case, alternating sum already equals 1 - 1 + 0 - 0 = 0 , so we don' t have to remove anything.",
    "topics": [
      "constructive algorithms",
      "math"
    ],
    "id": "1407A"
  },
  {
    "title": "Deleting Numbers",
    "url": "https://codeforces.com/problemset/problem/1406/E",
    "history": "This is an interactive problem. There is an unknown integer x ( 1\u2264 x\u2264 n ) . You want to find x . At first, you have a set of integers { 1, 2, . . . , n} . You can perform the following operations no more than 10000 times: A a : find how many numbers are multiples of a in the current set. B a : find how many numbers are multiples of a in this set, and then delete all multiples of a , but x will never be deleted ( even if it is a multiple of a ) . In this operation, a must be greater than 1 . C a : it means that you know that x= a . This operation can be only performed once. Remember that in the operation of type B a> 1 must hold. Write a program, that will find the value of x . InteractionIn each round, your program needs to print a line containing one uppercase letter A, B or C and an integer a ( 1\u2264 a\u2264 n for operations A and C, 2\u2264 a\u2264 n for operation B) . This line desribes operation you make. If your operation has type C your program should terminate immediately. Else your program should read one line containing a single integer, which is the answer to your operation. After outputting each line, don' t forget to flush the output. To do it use: fflush( stdout) in C/ C+ + ; System. out. flush( ) in Java; sys. stdout. flush( ) in Python; flush( output) in Pascal; See the documentation for other languages. It is guaranteed, that the number x is fixed and won' t change during the interaction process. Hacks: To make a hack, use such input format: The only line should contain two integers n , x ( 1 \u2264 x \u2264 n \u2264 10^ 5 ) .",
    "input": "The first line contains one integer n ( 1\u2264 n\u2264 10^ 5 ) . The remaining parts of the input will be given throughout the interaction process.",
    "output": "",
    "note": "Note that to make the sample more clear, we added extra empty lines. You shouldn' t print any extra empty lines during the interaction process. In the first test n= 10 and x= 4 . Initially the set is: { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10} . In the first operation, you ask how many numbers are multiples of 4 and delete them. The answer is 2 because there are two numbers divisible by 4 : { 4, 8} . 8 will be deleted but 4 won' t, because the number x will never be deleted. Now the set is { 1, 2, 3, 4, 5, 6, 7, 9, 10} . In the second operation, you ask how many numbers are multiples of 2 . The answer is 4 because there are four numbers divisible by 2 : { 2, 4, 6, 10} . In the third operation, you ask how many numbers are multiples of 8 . The answer is 0 because there isn' t any number divisible by 8 in the current set. In the fourth operation, you know that x= 4 , which is the right answer.",
    "topics": [
      "interactive",
      "math",
      "number theory"
    ],
    "id": "1406E"
  },
  {
    "title": "Three Sequences",
    "url": "https://codeforces.com/problemset/problem/1406/D",
    "history": "You are given a sequence of n integers a_ 1, a_ 2, . . . , a_ n . You have to construct two sequences of integers b and c with length n that satisfy: for every i ( 1\u2264 i\u2264 n ) b_ i+ c_ i= a_ i b is non- decreasing, which means that for every 1< i\u2264 n , b_ i\u2265 b_ i- 1 must hold c is non- increasing, which means that for every 1< i\u2264 n , c_ i\u2264 c_ i- 1 must hold You have to minimize max( b_ i, c_ i) . In other words, you have to minimize the maximum number in sequences b and c . Also there will be q changes, the i - th change is described by three integers l, r, x . You should add x to a_ l, a_ l+ 1, . . . , a_ r . You have to find the minimum possible value of max( b_ i, c_ i) for the initial sequence and for sequence after each change.",
    "input": "The first line contains an integer n ( 1\u2264 n\u2264 10^ 5 ) . The secound line contains n integers a_ 1, a_ 2, . . . , a_ n ( 1\u2264 i\u2264 n , - 10^ 9\u2264 a_ i\u2264 10^ 9 ) . The third line contains an integer q ( 1\u2264 q\u2264 10^ 5 ) . Each of the next q lines contains three integers l, r, x ( 1\u2264 l\u2264 r\u2264 n, - 10^ 9\u2264 x\u2264 10^ 9 ) , desribing the next change.",
    "output": "Print q+ 1 lines. On the i - th ( 1 \u2264 i \u2264 q+ 1 ) line, print the answer to the problem for the sequence after i- 1 changes.",
    "note": "In the first test: The initial sequence a = ( 2, - 1, 7, 3) . Two sequences b= ( - 3, - 3, 5, 5) , c= ( 5, 2, 2, - 2) is a possible choice. After the first change a = ( 2, - 4, 4, 0) . Two sequences b= ( - 3, - 3, 5, 5) , c= ( 5, - 1, - 1, - 5) is a possible choice. After the second change a = ( 2, - 4, 6, 2) . Two sequences b= ( - 4, - 4, 6, 6) , c= ( 6, 0, 0, - 4) is a possible choice.",
    "topics": [
      "constructive algorithms",
      "data structures",
      "greedy",
      "math"
    ],
    "id": "1406D"
  },
  {
    "title": "Subset Mex",
    "url": "https://codeforces.com/problemset/problem/1406/A",
    "history": "Given a set of integers ( it can contain equal elements) . You have to split it into two subsets A and B ( both of them can contain equal elements or be empty) . You have to maximize the value of mex( A) + mex( B) . Here mex of a set denotes the smallest non- negative integer that doesn' t exist in the set. For example: mex( { 1, 4, 0, 2, 2, 1} ) = 3 mex( { 3, 3, 2, 1, 3, 0, 0} ) = 4 mex( \u2205) = 0 ( mex for empty set) The set is splitted into two subsets A and B if for any integer number x the number of occurrences of x into this set is equal to the sum of the number of occurrences of x into A and the number of occurrences of x into B .",
    "input": "The input consists of multiple test cases. The first line contains an integer t ( 1\u2264 t\u2264 100 ) \u2014 the number of test cases. The description of the test cases follows. The first line of each test case contains an integer n ( 1\u2264 n\u2264 100 ) \u2014 the size of the set. The second line of each testcase contains n integers a_ 1, a_ 2, . . . a_ n ( 0\u2264 a_ i\u2264 100 ) \u2014 the numbers in the set.",
    "output": "For each test case, print the maximum value of mex( A) + mex( B) .",
    "note": "In the first test case, A= { 0, 1, 2} , B= { 0, 1, 5} is a possible choice. In the second test case, A= { 0, 1, 2} , B= \u2205 is a possible choice. In the third test case, A= { 0, 1, 2} , B= { 0} is a possible choice. In the fourth test case, A= { 1, 3, 5} , B= { 2, 4, 6} is a possible choice.",
    "topics": [
      "greedy",
      "implementation",
      "math"
    ],
    "id": "1406A"
  },
  {
    "title": "Game of Pairs",
    "url": "https://codeforces.com/problemset/problem/1404/D",
    "history": "This is an interactive problem. Consider a fixed positive integer n . Two players, First and Second play a game as follows: First considers the 2n numbers 1, 2, . . . , 2n , and partitions them as he wants into n disjoint pairs. Then, Second chooses exactly one element from each of the pairs that First created ( he chooses elements he wants) . To determine the winner of the game, we compute the sum of the numbers chosen by Second. If the sum of all these numbers is a multiple of 2n , then Second wins. Otherwise, First wins. You are given the integer n . Your task is to decide which player you wish to play as and win the game. InteractionThe interaction begins by reading the integer n ( 1 \u2264 n \u2264 5 \u00b7 10^ 5 ) . After reading, print a single line containing either First or Second, denoting who you want to play as. The interaction then varies depending on who you chose to play as. If you chose to play as First, print a single line containing 2n integers p_ 1, p_ 2, . . . , p_ 2n , denoting that the number i belongs to the p_ i - th pair for 1\u2264 i \u2264 2n . Thus, 1 \u2264 p_ i \u2264 n , and every number between 1 and n inclusive should appear exactly twice. If you chose to play as Second, the interactor will print 2n integers p_ 1, p_ 2, . . . , p_ 2n , denoting that the number i belongs to the p_ i - th pair. As a response, print n integers a_ 1, a_ 2, . . . , a_ n in a single line. These should contain exactly one number from each pair. Regardless of who you chose to play as the interactor will finish by printing a single integer: 0 if your answer for the test case is correct ( that is, you are playing as First and it cannot choose adequate numbers from your pairs, or you are playing as Second and your chosen numbers add up to a multiple of 2n ) , or - 1 if it is incorrect. In particular, the interactor will not print the chosen numbers if you choose to play First and lose. In either case, your program should terminate immediately after reading this number. If at any point you make an invalid interaction, the interactor will print - 1 and finish the interaction. You will receive a Wrong Answer verdict. Make sure to terminate immediately to avoid getting other verdicts. After printing something do not forget to output end of line and flush the output. Otherwise, you will get Idleness limit exceeded. To do this, use: fflush( stdout) or cout. flush( ) in C+ + ; System. out. flush( ) in Java; flush( output) in Pascal; stdout. flush( ) in Python; see documentation for other languages. Hack FormatTo hack, use the following format: The first line contains an integer n ( 1 \u2264 n \u2264 5 \u00b7 10^ 5 ) . The second line contains 2n integers p_ 1, p_ 2, . . . , p_ 2n , denoting that the number i belongs to the p_ i - th pair if the solution being hacked chooses to play as Second. If the solution being hacked chooses to play as First, those pairs don' t matter but the p_ 1, p_ 2, . . . , p_ 2n must still form a valid partition of 1, 2, . . . , 2n into n disjoint pairs.",
    "input": "",
    "output": "",
    "note": "In the first sample, n = 2 , and you decide to play as Second. The judge chooses the pairs ( 1, 2) and ( 3, 4) , and you reply with the numbers 1 and 3 . This is a valid choice since it contains exactly one number from each pair, and the sum 1 + 3 = 4 is divisible by 4 . In the second sample, n = 2 again, and you play as First. You choose the pairs ( 2, 4) and ( 1, 3) . The judge fails to choose a number from each pair such that their sum is divisible by 4 , so the answer is correct. Note that the sample tests are just for illustration of the interaction protocol, and don' t necessarily correspond to the behavior of the real interactor.",
    "topics": [
      "constructive algorithms",
      "dfs and similar",
      "interactive",
      "math",
      "number theory"
    ],
    "id": "1404D"
  },
  {
    "title": "Chess Rush",
    "url": "https://codeforces.com/problemset/problem/1403/C",
    "history": "The mythic world of Chess Land is a rectangular grid of squares with R rows and C columns, R being greater than or equal to C . Its rows and columns are numbered from 1 to R and 1 to C , respectively. The inhabitants of Chess Land are usually mentioned as pieces in everyday language, and there are 5 specific types of them roaming the land: pawns, rooks, bishops, queens and kings. Contrary to popular belief, chivalry is long dead in Chess Land, so there are no knights to be found. Each piece is unique in the way it moves around from square to square: in one step, a pawn can move one row forward ( i. e. from row r to r+ 1 ) , without changing columns; a rook can move any number of columns left/ right without changing rows OR move any number of rows forward/ backward without changing columns; a bishop can move to any square of the two diagonals intersecting at its currently occupied square; a queen can move to any square where a rook or a bishop could move to from her position; and a king can move to any of the 8 adjacent squares. In the following figure, we marked by X the squares each piece can move to in a single step ( here, the rows are numbered from bottom to top, and the columns from left to right) . Recently, Chess Land has become a dangerous place: pieces that are passing through the land can get captured unexpectedly by unknown forces and simply disappear. As a consequence, they would like to reach their destinations as fast ( i. e. in as few moves) as possible, and they are also interested in the number of different ways it is possible for them to reach it, using the minimal number of steps \u2013 because more paths being available could mean lower chances of getting captured. Two paths are considered different if they differ in at least one visited square. For this problem, let us assume that pieces are entering Chess Land in a given column of row 1 , and exit the land in a given column of row R . Your task is to answer Q questions: given the type of a piece, the column it enters row 1 and the column it must reach in row R in order to exit, compute the minimal number of moves it has to make in Chess Land, and the number of different ways it is able to do so. Scoring [ Subtask Points Constraints; 1 0 samples; 2 8 T\u2208{ ' P' , ' R' , ' Q' } , i. e. all pieces are pawns, rooks or queens; 3 15 T= ' B' and C, R\u2264 100; 4 22 T= ' B' ; 5 5 T= ' K' and C, R\u2264 100 and Q\u2264 50; 6 8 T= ' K' and C, R\u2264 100; 7 15 T= ' K' and C\u2264 100; 8 20 T= ' K' ; 9 7 no additional constraints; ]",
    "input": "The first line contains three space- separated integers R , C , and Q ( 1 \u2264 Q \u2264 1000 , 2 \u2264 C \u2264 1000 and C \u2264 R \u2264 10^ 9) \u2013 the number of rows and columns of Chess Land, and the number of questions, respectively. Then Q lines follow. Each line consists of a character T , corresponding to the type of the piece in question ( ' P' for pawn, ' R' for rook, ' B' for bishop, ' Q' for queen and ' K' for king) ; two integers c_ 1 and c_ R , 1\u2264 c_ 1, c_ R\u2264 C , denoting that the piece starts from the c_ 1 - th column of row 1 , and has to reach the c_ R - th column of row R .",
    "output": "You have to print Q lines, the i - th one containing two space separated integers, the answer to the i - th question: the first one is the minimal number of steps needed, the second is the number of different paths available using this number of steps. Since the answer can be quite large, you have to compute it modulo 10^ 9+ 7 . If it is impossible to reach the target square, output the line \" 0 0\" .",
    "note": "You can download the above example and an additional ( bigger) sample input here: https: / / gofile. io/ d/ GDzwfC",
    "topics": [
      "*special",
      "combinatorics",
      "dp",
      "implementation",
      "math"
    ],
    "id": "1403C"
  },
  {
    "title": "Fancy Fence",
    "url": "https://codeforces.com/problemset/problem/1402/A",
    "history": "Everybody knows that Bala\u0301zs has the fanciest fence in the whole town. It' s built up from N fancy sections. The sections are rectangles standing closely next to each other on the ground. The i th section has integer height h_ i and integer width w_ i . We are looking for fancy rectangles on this fancy fence. A rectangle is fancy if: its sides are either horizontal or vertical and have integer lengths the distance between the rectangle and the ground is integer the distance between the rectangle and the left side of the first section is integer it' s lying completely on sections What is the number of fancy rectangles? This number can be very big, so we are interested in it modulo 10^ 9+ 7 . Scoring [ Subtask Points Constraints; 1 0 sample; 2 12 N \u2264 50 and h_ i \u2264 50 and w_ i = 1 for all i; 3 13 h_ i = 1 or h_ i = 2 for all i; 4 15 all h_ i are equal; 5 15 h_ i \u2264 h_ i+ 1 for all i \u2264 N- 1; 6 18 N \u2264 1000; 7 27 no additional constraints; ]",
    "input": "The first line contains N ( 1\u2264 N \u2264 10^ 5 ) \u2013 the number of sections. The second line contains N space- separated integers, the i th number is h_ i ( 1 \u2264 h_ i \u2264 10^ 9 ) . The third line contains N space- separated integers, the i th number is w_ i ( 1 \u2264 w_ i \u2264 10^ 9 ) .",
    "output": "You should print a single integer, the number of fancy rectangles modulo 10^ 9+ 7 . So the output range is 0, 1, 2, . . . , 10^ 9+ 6 .",
    "note": "The fence looks like this: There are 5 fancy rectangles of shape: There are 3 fancy rectangles of shape: There is 1 fancy rectangle of shape: There are 2 fancy rectangles of shape: There is 1 fancy rectangle of shape:",
    "topics": [
      "*special",
      "data structures",
      "dsu",
      "implementation",
      "math",
      "sortings"
    ],
    "id": "1402A"
  },
  {
    "title": "Maximum Distributed Tree",
    "url": "https://codeforces.com/problemset/problem/1401/D",
    "history": "You are given a tree that consists of n nodes. You should label each of its n- 1 edges with an integer in such way that satisfies the following conditions: each integer must be greater than 0 ; the product of all n- 1 numbers should be equal to k ; the number of 1 - s among all n- 1 integers must be minimum possible. Let' s define f( u, v) as the sum of the numbers on the simple path from node u to node v . Also, let \u2211_ i= 1^ n- 1\u2211_ j= i+ 1^ n f( i, j) be a distribution index of the tree. Find the maximum possible distribution index you can get. Since answer can be too large, print it modulo 10^ 9 + 7 . In this problem, since the number k can be large, the result of the prime factorization of k is given instead.",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 100 ) \u2014 the number of test cases. The first line of each test case contains a single integer n ( 2 \u2264 n \u2264 10^ 5 ) \u2014 the number of nodes in the tree. Each of the next n- 1 lines describes an edge: the i - th line contains two integers u_ i and v_ i ( 1 \u2264 u_ i, v_ i \u2264 n ; u_ i v_ i ) \u2014 indices of vertices connected by the i - th edge. Next line contains a single integer m ( 1 \u2264 m \u2264 6 \u00b7 10^ 4 ) \u2014 the number of prime factors of k . Next line contains m prime numbers p_ 1, p_ 2, . . . , p_ m ( 2 \u2264 p_ i < 6 \u00b7 10^ 4 ) such that k = p_ 1 \u00b7 p_ 2 \u00b7. . . \u00b7 p_ m . It is guaranteed that the sum of n over all test cases doesn' t exceed 10^ 5 , the sum of m over all test cases doesn' t exceed 6 \u00b7 10^ 4 , and the given edges for each test cases form a tree.",
    "output": "Print the maximum distribution index you can get. Since answer can be too large, print it modulo 10^ 9+ 7 .",
    "note": "In the first test case, one of the optimal ways is on the following image: In this case, f( 1, 2) = 1 , f( 1, 3) = 3 , f( 1, 4) = 5 , f( 2, 3) = 2 , f( 2, 4) = 4 , f( 3, 4) = 2 , so the sum of these 6 numbers is 17 . In the second test case, one of the optimal ways is on the following image: In this case, f( 1, 2) = 3 , f( 1, 3) = 1 , f( 1, 4) = 4 , f( 2, 3) = 2 , f( 2, 4) = 5 , f( 3, 4) = 3 , so the sum of these 6 numbers is 18 .",
    "topics": [
      "dfs and similar",
      "dp",
      "greedy",
      "implementation",
      "math",
      "number theory",
      "sortings",
      "trees"
    ],
    "id": "1401D"
  },
  {
    "title": "Mere Array",
    "url": "https://codeforces.com/problemset/problem/1401/C",
    "history": "You are given an array a_ 1, a_ 2, . . . , a_ n where all a_ i are integers and greater than 0 . In one operation, you can choose two different indices i and j ( 1 \u2264 i, j \u2264 n ) . If gcd( a_ i, a_ j) is equal to the minimum element of the whole array a , you can swap a_ i and a_ j . gcd( x, y) denotes the greatest common divisor ( GCD) of integers x and y . Now you' d like to make a non- decreasing using the operation any number of times ( possibly zero) . Determine if you can do this. An array a is non- decreasing if and only if a_ 1 \u2264 a_ 2 \u2264. . . \u2264 a_ n .",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. The first line of each test case contains one integer n ( 1 \u2264 n \u2264 10^ 5 ) \u2014 the length of array a . The second line of each test case contains n positive integers a_ 1, a_ 2, . . . a_ n ( 1 \u2264 a_ i \u2264 10^ 9 ) \u2014 the array itself. It is guaranteed that the sum of n over all test cases doesn' t exceed 10^ 5 .",
    "output": "For each test case, output \" YES\" if it is possible to make the array a non- decreasing using the described operation, or \" NO\" if it is impossible to do so.",
    "note": "In the first and third sample, the array is already non- decreasing. In the second sample, we can swap a_ 1 and a_ 3 first, and swap a_ 1 and a_ 5 second to make the array non- decreasing. In the forth sample, we cannot the array non- decreasing using the operation.",
    "topics": [
      "constructive algorithms",
      "math",
      "number theory",
      "sortings"
    ],
    "id": "1401C"
  },
  {
    "title": "Ternary Sequence",
    "url": "https://codeforces.com/problemset/problem/1401/B",
    "history": "You are given two sequences a_ 1, a_ 2, . . . , a_ n and b_ 1, b_ 2, . . . , b_ n . Each element of both sequences is either 0 , 1 or 2 . The number of elements 0 , 1 , 2 in the sequence a is x_ 1 , y_ 1 , z_ 1 respectively, and the number of elements 0 , 1 , 2 in the sequence b is x_ 2 , y_ 2 , z_ 2 respectively. You can rearrange the elements in both sequences a and b however you like. After that, let' s define a sequence c as follows: c_ i = a_ i b_ i a_ i > b_ i 0 a_ i = b_ i - a_ i b_ i a_ i < b_ i You' d like to make \u2211_ i= 1^ n c_ i ( the sum of all elements of the sequence c ) as large as possible. What is the maximum possible sum?",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. Each test case consists of two lines. The first line of each test case contains three integers x_ 1 , y_ 1 , z_ 1 ( 0 \u2264 x_ 1, y_ 1, z_ 1 \u2264 10^ 8 ) \u2014 the number of 0 - s, 1 - s and 2 - s in the sequence a . The second line of each test case also contains three integers x_ 2 , y_ 2 , z_ 2 ( 0 \u2264 x_ 2, y_ 2, z_ 2 \u2264 10^ 8 ; x_ 1 + y_ 1 + z_ 1 = x_ 2 + y_ 2 + z_ 2 > 0 ) \u2014 the number of 0 - s, 1 - s and 2 - s in the sequence b .",
    "output": "For each test case, print the maximum possible sum of the sequence c .",
    "note": "In the first sample, one of the optimal solutions is: a = { 2, 0, 1, 1, 0, 2, 1} b = { 1, 0, 1, 0, 2, 1, 0} c = { 2, 0, 0, 0, 0, 2, 0} In the second sample, one of the optimal solutions is: a = { 0, 2, 0, 0, 0} b = { 1, 1, 0, 1, 0} c = { 0, 2, 0, 0, 0} In the third sample, the only possible solution is: a = { 2} b = { 2} c = { 0}",
    "topics": [
      "constructive algorithms",
      "greedy",
      "math"
    ],
    "id": "1401B"
  },
  {
    "title": "Distance and Axis",
    "url": "https://codeforces.com/problemset/problem/1401/A",
    "history": "We have a point A with coordinate x = n on OX - axis. We' d like to find an integer point B ( also on OX - axis) , such that the absolute difference between the distance from O to B and the distance from A to B is equal to k . The description of the first test case. Since sometimes it' s impossible to find such point B , we can, in one step, increase or decrease the coordinate of A by 1 . What is the minimum number of steps we should do to make such point B exist?",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 6000 ) \u2014 the number of test cases. The only line of each test case contains two integers n and k ( 0 \u2264 n, k \u2264 10^ 6 ) \u2014 the initial position of point A and desirable absolute difference.",
    "output": "For each test case, print the minimum number of steps to make point B exist.",
    "note": "In the first test case ( picture above) , if we set the coordinate of B as 2 then the absolute difference will be equal to | ( 2 - 0) - ( 4 - 2) | = 0 and we don' t have to move A . So the answer is 0 . In the second test case, we can increase the coordinate of A by 3 and set the coordinate of B as 0 or 8 . The absolute difference will be equal to | 8 - 0| = 8 , so the answer is 3 .",
    "topics": [
      "constructive algorithms",
      "math"
    ],
    "id": "1401A"
  },
  {
    "title": "Mercenaries",
    "url": "https://codeforces.com/problemset/problem/1400/G",
    "history": "Polycarp plays a ( yet another! ) strategic computer game. In this game, he leads an army of mercenaries. Polycarp wants to gather his army for a quest. There are n mercenaries for hire, and the army should consist of some subset of them. The i - th mercenary can be chosen if the resulting number of chosen mercenaries is not less than l_ i ( otherwise he deems the quest to be doomed) and not greater than r_ i ( he doesn' t want to share the trophies with too many other mercenaries) . Furthermore, m pairs of mercenaries hate each other and cannot be chosen for the same quest. How many non- empty subsets does Polycarp need to consider? In other words, calculate the number of non- empty subsets of mercenaries such that the size of this subset belongs to [ l_ i, r_ i] for each chosen mercenary, and there are no two mercenaries in the subset that hate each other. The answer may be large, so calculate it modulo 998244353 .",
    "input": "The first line contains two integers n and m ( 1 \u2264 n \u2264 3 \u00b7 10^ 5 , 0 \u2264 m \u2264min( 20, n( n- 1) 2) ) \u2014 the number of mercenaries and the number of pairs of mercenaries that hate each other. Then n lines follow, the i - th of them contains two integers l_ i and r_ i ( 1 \u2264 l_ i \u2264 r_ i \u2264 n ) . Then m lines follow, the i - th of them contains two integers a_ i and b_ i ( 1 \u2264 a_ i < b_ i \u2264 n ) denoting that the mercenaries a_ i and b_ i hate each other. There are no two equal pairs in this list.",
    "output": "Print one integer \u2014 the number of non- empty subsets meeting the constraints, taken modulo 998244353 .",
    "note": "",
    "topics": [
      "bitmasks",
      "brute force",
      "combinatorics",
      "dp",
      "dsu",
      "math",
      "two pointers"
    ],
    "id": "1400G"
  },
  {
    "title": "Zigzags",
    "url": "https://codeforces.com/problemset/problem/1400/D",
    "history": "You are given an array a_ 1, a_ 2 . . . a_ n . Calculate the number of tuples ( i, j, k, l) such that: 1 \u2264 i < j < k < l \u2264 n ; a_ i = a_ k and a_ j = a_ l ;",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 100 ) \u2014 the number of test cases. The first line of each test case contains a single integer n ( 4 \u2264 n \u2264 3000 ) \u2014 the size of the array a . The second line of each test case contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 n ) \u2014 the array a . It' s guaranteed that the sum of n in one test doesn' t exceed 3000 .",
    "output": "For each test case, print the number of described tuples.",
    "note": "In the first test case, for any four indices i < j < k < l are valid, so the answer is the number of tuples. In the second test case, there are 2 valid tuples: ( 1, 2, 4, 6) : a_ 1 = a_ 4 and a_ 2 = a_ 6 ; ( 1, 3, 4, 6) : a_ 1 = a_ 4 and a_ 3 = a_ 6 .",
    "topics": [
      "brute force",
      "combinatorics",
      "data structures",
      "math",
      "two pointers"
    ],
    "id": "1400D"
  },
  {
    "title": "RPG Protagonist",
    "url": "https://codeforces.com/problemset/problem/1400/B",
    "history": "You are playing one RPG from the 2010s. You are planning to raise your smithing skill, so you need as many resources as possible. So how to get resources? By stealing, of course. You decided to rob a town' s blacksmith and you take a follower with you. You can carry at most p units and your follower \u2014 at most f units. In the blacksmith shop, you found cnt_ s swords and cnt_ w war axes. Each sword weights s units and each war axe \u2014 w units. You don' t care what to take, since each of them will melt into one steel ingot. What is the maximum number of weapons ( both swords and war axes) you and your follower can carry out from the shop?",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. The first line of each test case contains two integers p and f ( 1 \u2264 p, f \u2264 10^ 9 ) \u2014 yours and your follower' s capacities. The second line of each test case contains two integers cnt_ s and cnt_ w ( 1 \u2264 cnt_ s, cnt_ w \u2264 2 \u00b7 10^ 5 ) \u2014 the number of swords and war axes in the shop. The third line of each test case contains two integers s and w ( 1 \u2264 s, w \u2264 10^ 9 ) \u2014 the weights of each sword and each war axe. It' s guaranteed that the total number of swords and the total number of war axes in all test cases don' t exceed 2 \u00b7 10^ 5 .",
    "output": "For each test case, print the maximum number of weapons ( both swords and war axes) you and your follower can carry.",
    "note": "In the first test case: you should take 3 swords and 3 war axes: 3 \u00b7 5 + 3 \u00b7 6 = 33 \u2264 33 and your follower \u2014 3 swords and 2 war axes: 3 \u00b7 5 + 2 \u00b7 6 = 27 \u2264 27 . 3 + 3 + 3 + 2 = 11 weapons in total. In the second test case, you can take all available weapons even without your follower' s help, since 5 \u00b7 10 + 5 \u00b7 10 \u2264 100 . In the third test case, you can' t take anything, but your follower can take 3 war axes: 3 \u00b7 5 \u2264 19 .",
    "topics": [
      "brute force",
      "greedy",
      "math"
    ],
    "id": "1400B"
  },
  {
    "title": "Running Competition",
    "url": "https://codeforces.com/problemset/problem/1398/G",
    "history": "A running competition is going to be held soon. The stadium where the competition will be held can be represented by several segments on the coordinate plane: two horizontal segments: one connecting the points ( 0, 0) and ( x, 0) , the other connecting the points ( 0, y) and ( x, y) ; n + 1 vertical segments, numbered from 0 to n . The i - th segment connects the points ( a_ i, 0) and ( a_ i, y) ; 0 = a_ 0 < a_ 1 < a_ 2 < . . . < a_ n - 1 < a_ n = x . For example, here is a picture of the stadium with x = 10 , y = 5 , n = 3 and a = [ 0, 3, 5, 10] : A lap is a route that goes along the segments, starts and finishes at the same point, and never intersects itself ( the only two points of a lap that coincide are its starting point and ending point) . The length of a lap is a total distance travelled around it. For example, the red route in the picture representing the stadium is a lap of length 24 . The competition will be held in q stages. The i - th stage has length l_ i , and the organizers want to choose a lap for each stage such that the length of the lap is a divisor of l_ i . The organizers don' t want to choose short laps for the stages, so for each stage, they want to find the maximum possible length of a suitable lap. Help the organizers to calculate the maximum possible lengths of the laps for the stages! In other words, for every l_ i , find the maximum possible integer L such that l_ i L = 0 , and there exists a lap of length exactly L . If it is impossible to choose such a lap then print - 1 .",
    "input": "The first line contains three integers n , x and y ( 1 \u2264 n, x, y \u2264 2 \u00b7 10^ 5 , n \u2264 x ) . The second line contains n + 1 integers a_ 0 , a_ 1 , . . . , a_ n ( 0 = a_ 0 < a_ 1 < a_ 2 < . . . < a_ n - 1 < a_ n = x ) . The third line contains one integer q ( 1 \u2264 q \u2264 2 \u00b7 10^ 5 ) \u2014 the number of stages. The fourth line contains q even integers l_ 1 , l_ 2 , . . . , l_ q ( 4 \u2264 l_ i \u2264 10^ 6 ) \u2014 the lengths of the stages.",
    "output": "Print q numbers. The i - th number should be equal to the maximum possible length of a suitable lap for the i - th stage, or - 1 if it is impossible to choose a lap for that stage.",
    "note": "",
    "topics": [
      "bitmasks",
      "fft",
      "math",
      "number theory"
    ],
    "id": "1398G"
  },
  {
    "title": "Two Types of Spells",
    "url": "https://codeforces.com/problemset/problem/1398/E",
    "history": "Polycarp plays a computer game ( yet again) . In this game, he fights monsters using magic spells. There are two types of spells: fire spell of power x deals x damage to the monster, and lightning spell of power y deals y damage to the monster and doubles the damage of the next spell Polycarp casts. Each spell can be cast only once per battle, but Polycarp can cast them in any order. For example, suppose that Polycarp knows three spells: a fire spell of power 5 , a lightning spell of power 1 , and a lightning spell of power 8 . There are 6 ways to choose the order in which he casts the spells: first, second, third. This order deals 5 + 1 + 2 \u00b7 8 = 22 damage; first, third, second. This order deals 5 + 8 + 2 \u00b7 1 = 15 damage; second, first, third. This order deals 1 + 2 \u00b7 5 + 8 = 19 damage; second, third, first. This order deals 1 + 2 \u00b7 8 + 2 \u00b7 5 = 27 damage; third, first, second. This order deals 8 + 2 \u00b7 5 + 1 = 19 damage; third, second, first. This order deals 8 + 2 \u00b7 1 + 2 \u00b7 5 = 20 damage. Initially, Polycarp knows 0 spells. His spell set changes n times, each time he either learns a new spell or forgets an already known one. After each change, calculate the maximum possible damage Polycarp may deal using the spells he knows.",
    "input": "The first line contains one integer n ( 1 \u2264 n \u2264 2 \u00b7 10^ 5 ) \u2014 the number of changes to the spell set. Each of the next n lines contains two integers tp and d ( 0 \u2264 tp_ i \u2264 1 ; - 10^ 9 \u2264 d \u2264 10^ 9 ; d_ i = \u0338 0 ) \u2014 the description of the change. If tp_ i if equal to 0 , then Polycarp learns ( or forgets) a fire spell, otherwise he learns ( or forgets) a lightning spell. If d_ i > 0 , then Polycarp learns a spell of power d_ i . Otherwise, Polycarp forgets a spell with power - d_ i , and it is guaranteed that he knew that spell before the change. It is guaranteed that the powers of all spells Polycarp knows after each change are different ( Polycarp never knows two spells with the same power) .",
    "output": "After each change, print the maximum damage Polycarp can deal with his current set of spells.",
    "note": "",
    "topics": [
      "binary search",
      "data structures",
      "greedy",
      "implementation",
      "math",
      "sortings"
    ],
    "id": "1398E"
  },
  {
    "title": "Good Subarrays",
    "url": "https://codeforces.com/problemset/problem/1398/C",
    "history": "You are given an array a_ 1, a_ 2, . . . , a_ n consisting of integers from 0 to 9 . A subarray a_ l, a_ l+ 1, a_ l+ 2, . . . , a_ r- 1, a_ r is good if the sum of elements of this subarray is equal to the length of this subarray ( \u2211_ i= l^ r a_ i = r - l + 1 ) . For example, if a = [ 1, 2, 0] , then there are 3 good subarrays: a_ 1 . . . 1 = [ 1] , a_ 2 . . . 3 = [ 2, 0] and a_ 1 . . . 3 = [ 1, 2, 0] . Calculate the number of good subarrays of the array a .",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 1000 ) \u2014 the number of test cases. The first line of each test case contains one integer n ( 1 \u2264 n \u2264 10^ 5 ) \u2014 the length of the array a . The second line of each test case contains a string consisting of n decimal digits, where the i - th digit is equal to the value of a_ i . It is guaranteed that the sum of n over all test cases does not exceed 10^ 5 .",
    "output": "For each test case print one integer \u2014 the number of good subarrays of the array a .",
    "note": "The first test case is considered in the statement. In the second test case, there are 6 good subarrays: a_ 1 . . . 1 , a_ 2 . . . 2 , a_ 1 . . . 2 , a_ 4 . . . 4 , a_ 5 . . . 5 and a_ 4 . . . 5 . In the third test case there is only one good subarray: a_ 2 . . . 6 .",
    "topics": [
      "data structures",
      "dp",
      "math"
    ],
    "id": "1398C"
  },
  {
    "title": "Bad Triangle",
    "url": "https://codeforces.com/problemset/problem/1398/A",
    "history": "You are given an array a_ 1, a_ 2, . . . , a_ n , which is sorted in non- decreasing order ( a_ i \u2264 a_ i + 1) . Find three indices i , j , k such that 1 \u2264 i < j < k \u2264 n and it is impossible to construct a non- degenerate triangle ( a triangle with nonzero area) having sides equal to a_ i , a_ j and a_ k ( for example it is possible to construct a non- degenerate triangle with sides 3 , 4 and 5 but impossible with sides 3 , 4 and 7 ) . If it is impossible to find such triple, report it.",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 1000 ) \u2014 the number of test cases. The first line of each test case contains one integer n ( 3 \u2264 n \u2264 5 \u00b7 10^ 4 ) \u2014 the length of the array a . The second line of each test case contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 9 ; a_ i - 1\u2264 a_ i ) \u2014 the array a . It is guaranteed that the sum of n over all test cases does not exceed 10^ 5 .",
    "output": "For each test case print the answer to it in one line. If there is a triple of indices i , j , k ( i < j < k ) such that it is impossible to construct a non- degenerate triangle having sides equal to a_ i , a_ j and a_ k , print that three indices in ascending order. If there are multiple answers, print any of them. Otherwise, print - 1.",
    "note": "In the first test case it is impossible with sides 6 , 11 and 18 . Note, that this is not the only correct answer. In the second test case you always can construct a non- degenerate triangle.",
    "topics": [
      "geometry",
      "math"
    ],
    "id": "1398A"
  },
  {
    "title": "Power Sequence",
    "url": "https://codeforces.com/problemset/problem/1397/B",
    "history": "Let' s call a list of positive integers a_ 0, a_ 1, . . . , a_ n- 1 a power sequence if there is a positive integer c , so that for every 0 \u2264 i \u2264 n- 1 then a_ i = c^ i . Given a list of n positive integers a_ 0, a_ 1, . . . , a_ n- 1 , you are allowed to: Reorder the list ( i. e. pick a permutation p of { 0, 1, . . . , n - 1} and change a_ i to a_ p_ i ) , then Do the following operation any number of times: pick an index i and change a_ i to a_ i - 1 or a_ i + 1 ( i. e. increment or decrement a_ i by 1 ) with a cost of 1 . Find the minimum cost to transform a_ 0, a_ 1, . . . , a_ n- 1 into a power sequence.",
    "input": "The first line contains an integer n ( 3 \u2264 n \u2264 10^ 5 ) . The second line contains n integers a_ 0, a_ 1, . . . , a_ n- 1 ( 1 \u2264 a_ i \u2264 10^ 9 ) .",
    "output": "Print the minimum cost to transform a_ 0, a_ 1, . . . , a_ n- 1 into a power sequence.",
    "note": "In the first example, we first reorder { 1, 3, 2} into { 1, 2, 3} , then increment a_ 2 to 4 with cost 1 to get a power sequence { 1, 2, 4} .",
    "topics": [
      "brute force",
      "math",
      "number theory",
      "sortings"
    ],
    "id": "1397B"
  },
  {
    "title": "Boboniu Likes to Color Balls",
    "url": "https://codeforces.com/problemset/problem/1395/A",
    "history": "Boboniu gives you r red balls, g green balls, b blue balls, w white balls. He allows you to do the following operation as many times as you want: Pick a red ball, a green ball, and a blue ball and then change their color to white. You should answer if it' s possible to arrange all the balls into a palindrome after several ( possibly zero) number of described operations.",
    "input": "The first line contains one integer T ( 1\u2264 T\u2264 100 ) denoting the number of test cases. For each of the next T cases, the first line contains four integers r , g , b and w ( 0\u2264 r, g, b, w\u2264 10^ 9 ) .",
    "output": "For each test case, print \" Yes\" if it' s possible to arrange all the balls into a palindrome after doing several ( possibly zero) number of described operations. Otherwise, print \" No\" .",
    "note": "In the first test case, you' re not able to do any operation and you can never arrange three balls of distinct colors into a palindrome. In the second test case, after doing one operation, changing ( 8, 1, 9, 3) to ( 7, 0, 8, 6) , one of those possible palindromes may be \" rrrwwwbbbbrbbbbwwwrrr\" . A palindrome is a word, phrase, or sequence that reads the same backwards as forwards. For example, \" rggbwbggr\" , \" b\" , \" gg\" are palindromes while \" rgbb\" , \" gbbgr\" are not. Notice that an empty word, phrase, or sequence is palindrome.",
    "topics": [
      "brute force",
      "math"
    ],
    "id": "1395A"
  },
  {
    "title": "Pinkie Pie Eats Patty-cakes",
    "url": "https://codeforces.com/problemset/problem/1393/C",
    "history": "Pinkie Pie has bought a bag of patty- cakes with different fillings! But it appeared that not all patty- cakes differ from one another with filling. In other words, the bag contains some patty- cakes with the same filling. Pinkie Pie eats the patty- cakes one- by- one. She likes having fun so she decided not to simply eat the patty- cakes but to try not to eat the patty- cakes with the same filling way too often. To achieve this she wants the minimum distance between the eaten with the same filling to be the largest possible. Herein Pinkie Pie called the distance between two patty- cakes the number of eaten patty- cakes strictly between them. Pinkie Pie can eat the patty- cakes in any order. She is impatient about eating all the patty- cakes up so she asks you to help her to count the greatest minimum distance between the eaten patty- cakes with the same filling amongst all possible orders of eating! Pinkie Pie is going to buy more bags of patty- cakes so she asks you to solve this problem for several bags!",
    "input": "The first line contains a single integer T ( 1 \u2264 T \u2264 100 ) : the number of bags for which you need to solve the problem. The first line of each bag description contains a single integer n ( 2 \u2264 n \u2264 10^ 5 ) : the number of patty- cakes in it. The second line of the bag description contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 n ) : the information of patty- cakes' fillings: same fillings are defined as same integers, different fillings are defined as different integers. It is guaranteed that each bag contains at least two patty- cakes with the same filling. It is guaranteed that the sum of n over all bags does not exceed 10^ 5 .",
    "output": "For each bag print in separate line one single integer: the largest minimum distance between the eaten patty- cakes with the same filling amongst all possible orders of eating for that bag.",
    "note": "For the first bag Pinkie Pie can eat the patty- cakes in the following order ( by fillings) : 1 , 6 , 4 , 7 , 1 , 6 , 4 ( in this way, the minimum distance is equal to 3 ) . For the second bag Pinkie Pie can eat the patty- cakes in the following order ( by fillings) : 1 , 4 , 6 , 7 , 4 , 1 , 6 , 4 ( in this way, the minimum distance is equal to 2 ) .",
    "topics": [
      "constructive algorithms",
      "greedy",
      "math",
      "sortings"
    ],
    "id": "1393C"
  },
  {
    "title": "Rainbow Dash, Fluttershy and Chess Coloring",
    "url": "https://codeforces.com/problemset/problem/1393/A",
    "history": "One evening Rainbow Dash and Fluttershy have come up with a game. Since the ponies are friends, they have decided not to compete in the game but to pursue a common goal. The game starts on a square flat grid, which initially has the outline borders built up. Rainbow Dash and Fluttershy have flat square blocks with size 1\u00d71 , Rainbow Dash has an infinite amount of light blue blocks, Fluttershy has an infinite amount of yellow blocks. The blocks are placed according to the following rule: each newly placed block must touch the built on the previous turns figure by a side ( note that the outline borders of the grid are built initially) . At each turn, one pony can place any number of blocks of her color according to the game rules. Rainbow and Fluttershy have found out that they can build patterns on the grid of the game that way. They have decided to start with something simple, so they made up their mind to place the blocks to form a chess coloring. Rainbow Dash is well- known for her speed, so she is interested in the minimum number of turns she and Fluttershy need to do to get a chess coloring, covering the whole grid with blocks. Please help her find that number! Since the ponies can play many times on different boards, Rainbow Dash asks you to find the minimum numbers of turns for several grids of the games. The chess coloring in two colors is the one in which each square is neighbor by side only with squares of different colors.",
    "input": "The first line contains a single integer T ( 1 \u2264 T \u2264 100 ) : the number of grids of the games. Each of the next T lines contains a single integer n ( 1 \u2264 n \u2264 10^ 9 ) : the size of the side of the grid of the game.",
    "output": "For each grid of the game print the minimum number of turns required to build a chess coloring pattern out of blocks on it.",
    "note": "For 3\u00d73 grid ponies can make two following moves:",
    "topics": [
      "greedy",
      "math"
    ],
    "id": "1393A"
  },
  {
    "title": "Kevin and Grid",
    "url": "https://codeforces.com/problemset/problem/1392/I",
    "history": "As Kevin is in BigMan' s house, suddenly a trap sends him onto a grid with n rows and m columns. BigMan' s trap is configured by two arrays: an array a_ 1, a_ 2, . . . , a_ n and an array b_ 1, b_ 2, . . . , b_ m . In the i - th row there is a heater which heats the row by a_ i degrees, and in the j - th column there is a heater which heats the column by b_ j degrees, so that the temperature of cell ( i, j) is a_ i+ b_ j . Fortunately, Kevin has a suit with one parameter x and two modes: heat resistance. In this mode suit can stand all temperatures greater or equal to x , but freezes as soon as reaches a cell with temperature less than x . cold resistance. In this mode suit can stand all temperatures less than x , but will burn as soon as reaches a cell with temperature at least x . Once Kevin lands on a cell the suit automatically turns to cold resistance mode if the cell has temperature less than x , or to heat resistance mode otherwise, and cannot change after that. We say that two cells are adjacent if they share an edge. Let a path be a sequence c_ 1, c_ 2, . . . , c_ k of cells such that c_ i and c_ i+ 1 are adjacent for 1 \u2264 i \u2264 k- 1 . We say that two cells are connected if there is a path between the two cells consisting only of cells that Kevin can step on. A connected component is a maximal set of pairwise connected cells. We say that a connected component is good if Kevin can escape the grid starting from it \u2014 when it contains at least one border cell of the grid, and that it' s bad otherwise. To evaluate the situation, Kevin gives a score of 1 to each good component and a score of 2 for each bad component. The final score will be the difference between the total score of components with temperatures bigger than or equal to x and the score of components with temperatures smaller than x . There are q possible values of x that Kevin can use, and for each of them Kevin wants to know the final score. Help Kevin defeat BigMan!",
    "input": "The first line contains three integers n , m , q ( 1 \u2264 n, m, q \u2264 10^ 5 ) \u2013 the number of rows, columns, and the number of possible values for x respectively. The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 5 ) . The third line contains m integers b_ 1, b_ 2, . . . , b_ m ( 1 \u2264 b_ i \u2264 10^ 5 ) . Each of the next q lines contains one integer x ( 1 \u2264 x \u2264 2 \u00b7 10^ 5 ) .",
    "output": "Output q lines, in the i - th line output the answer for the i - th possible value of x from the input.",
    "note": "In the first example, the score for components with temperature smaller than 5 is 1+ 2 , and the score for components with temperature at least 5 is 2 . Thus, the final score is 2- 3= - 1 .",
    "topics": [
      "fft",
      "graphs",
      "math"
    ],
    "id": "1392I"
  },
  {
    "title": "ZS Shuffles Cards",
    "url": "https://codeforces.com/problemset/problem/1392/H",
    "history": "zscoder has a deck of n+ m custom- made cards, which consists of n cards labelled from 1 to n and m jokers. Since zscoder is lonely, he wants to play a game with himself using those cards. Initially, the deck is shuffled uniformly randomly and placed on the table. zscoder has a set S which is initially empty. Every second, zscoder draws the top card from the deck. If the card has a number x written on it, zscoder removes the card and adds x to the set S . If the card drawn is a joker, zscoder places all the cards back into the deck and reshuffles ( uniformly randomly) the n+ m cards to form a new deck ( hence the new deck now contains all cards from 1 to n and the m jokers) . Then, if S currently contains all the elements from 1 to n , the game ends. Shuffling the deck doesn' t take time at all. What is the expected number of seconds before the game ends? We can show that the answer can be written in the form P/ Q where P, Q are relatively prime integers and Q = \u0338 0 998244353 . Output the value of ( P \u00b7 Q^ - 1) modulo 998244353 .",
    "input": "The only line of the input contains two integers n and m ( 1 \u2264 n, m \u2264 2 \u00b7 10^ 6 ) .",
    "output": "Output a single integer, the value of ( P \u00b7 Q^ - 1) modulo 998244353 .",
    "note": "For the first sample, it can be proven that the expected time before the game ends is 5 seconds. For the second sample, it can be proven that the expected time before the game ends is 28/ 3 seconds.",
    "topics": [
      "combinatorics",
      "dp",
      "math",
      "probabilities"
    ],
    "id": "1392H"
  },
  {
    "title": "Omkar and Pies",
    "url": "https://codeforces.com/problemset/problem/1392/G",
    "history": "Omkar has a pie tray with k ( 2 \u2264 k \u2264 20 ) spots. Each spot in the tray contains either a chocolate pie or a pumpkin pie. However, Omkar does not like the way that the pies are currently arranged, and has another ideal arrangement that he would prefer instead. To assist Omkar, n elves have gathered in a line to swap the pies in Omkar' s tray. The j - th elf from the left is able to swap the pies at positions a_ j and b_ j in the tray. In order to get as close to his ideal arrangement as possible, Omkar may choose a contiguous subsegment of the elves and then pass his pie tray through the subsegment starting from the left. However, since the elves have gone to so much effort to gather in a line, they request that Omkar' s chosen segment contain at least m ( 1 \u2264 m \u2264 n ) elves. Formally, Omkar may choose two integers l and r satisfying 1 \u2264 l \u2264 r \u2264 n and r - l + 1 \u2265 m so that first the pies in positions a_ l and b_ l will be swapped, then the pies in positions a_ l + 1 and b_ l + 1 will be swapped, etc. until finally the pies in positions a_ r and b_ r are swapped. Help Omkar choose a segment of elves such that the amount of positions in Omkar' s final arrangement that contain the same type of pie as in his ideal arrangement is the maximum possible. Note that since Omkar has a big imagination, it might be that the amounts of each type of pie in his original arrangement and in his ideal arrangement do not match.",
    "input": "The first line contains three integers n , m , and k ( 1 \u2264 m \u2264 n \u2264 10^ 6 and 2 \u2264 k \u2264 20 ) \u2014 the number of elves, the minimum subsegment length, and the number of spots in Omkar' s tray respectively. The second and third lines each contain a string of length k consisting of 0 s and 1 s that represent initial arrangement of pies and ideal arrangement of pies; the j - th character in each string is equal to 0 if the j - th spot in the arrangement contains a chocolate pie and is equal to 1 if the j - th spot in the arrangement contains a pumpkin pie. It is not guaranteed that the two strings have the same amount of 0 s or the same amount of 1 s. n lines follow. The j - th of these lines contains two integers a_ j and b_ j ( 1 \u2264 a_ j, b_ j \u2264 k , a_ j = \u0338 b_ j ) which indicate that the j - th elf from the left can swap the pies at positions a_ j and b_ j in the tray.",
    "output": "Output two lines. The first line should contain a single integer s ( 0 \u2264 s \u2264 k ) equal to the amount of positions that contain the same type of pie in Omkar' s final arrangement and in Omkar' s ideal arrangement; s should be the maximum possible. The second line should contain two integers l and r satisfying 1 \u2264 l \u2264 r \u2264 n and r - l + 1 \u2265 m , indicating that Omkar should pass his tray through the subsegment l, l + 1, . . . , r to achieve a final arrangement with s positions having the same type of pie as his ideal arrangement. If there are multiple answers you may output any of them.",
    "note": "In the first test case, the swaps will go like this: Swap 1 and 3 : 11000 becomes 01100 Swap 3 and 5 : 01100 becomes 01001 Swap 4 and 2 : 01001 becomes 00011 The final arrangement is the same as the ideal arrangement 00011, so there are 5 positions with the same type of pie, which is optimal. In the second test case, the swaps will go like this: Swap 1 and 3 : 11000 becomes 01100 Swap 1 and 5 : 01100 becomes 01100 Swap 4 and 2 : 01100 becomes 00110 Swap 1 and 5 : 00110 becomes 00110 The final arrangement has 3 positions with the same type of pie as the ideal arrangement 00011, those being positions 1 , 2 , and 4 . In this case the subsegment of elves ( l, r) = ( 2, 3) is more optimal, but that subsegment is only length 2 and therefore does not satisfy the constraint that the subsegment be of length at least m = 3 .",
    "topics": [
      "bitmasks",
      "dfs and similar",
      "dp",
      "math",
      "shortest paths"
    ],
    "id": "1392G"
  },
  {
    "title": "Omkar and Landslide",
    "url": "https://codeforces.com/problemset/problem/1392/F",
    "history": "Omkar is standing at the foot of Celeste mountain. The summit is n meters away from him, and he can see all of the mountains up to the summit, so for all 1 \u2264 j \u2264 n he knows that the height of the mountain at the point j meters away from himself is h_ j meters. It turns out that for all j satisfying 1 \u2264 j \u2264 n - 1 , h_ j < h_ j + 1 ( meaning that heights are strictly increasing) . Suddenly, a landslide occurs! While the landslide is occurring, the following occurs: every minute, if h_ j + 2 \u2264 h_ j + 1 , then one square meter of dirt will slide from position j + 1 to position j , so that h_ j + 1 is decreased by 1 and h_ j is increased by 1 . These changes occur simultaneously, so for example, if h_ j + 2 \u2264 h_ j + 1 and h_ j + 1 + 2 \u2264 h_ j + 2 for some j , then h_ j will be increased by 1 , h_ j + 2 will be decreased by 1 , and h_ j + 1 will be both increased and decreased by 1 , meaning that in effect h_ j + 1 is unchanged during that minute. The landslide ends when there is no j such that h_ j + 2 \u2264 h_ j + 1 . Help Omkar figure out what the values of h_ 1, . . . , h_ n will be after the landslide ends. It can be proven that under the given constraints, the landslide will always end in finitely many minutes. Note that because of the large amount of input, it is recommended that your code uses fast IO.",
    "input": "The first line contains a single integer n ( 1 \u2264 n \u2264 10^ 6 ) . The second line contains n integers h_ 1, h_ 2, . . . , h_ n satisfying 0 \u2264 h_ 1 < h_ 2 < . . . < h_ n \u2264 10^ 12 \u2014 the heights.",
    "output": "Output n integers, where the j - th integer is the value of h_ j after the landslide has stopped.",
    "note": "Initially, the mountain has heights 2, 6, 7, 8 . In the first minute, we have 2 + 2 \u2264 6 , so 2 increases to 3 and 6 decreases to 5 , leaving 3, 5, 7, 8 . In the second minute, we have 3 + 2 \u2264 5 and 5 + 2 \u2264 7 , so 3 increases to 4 , 5 is unchanged, and 7 decreases to 6 , leaving 4, 5, 6, 8 . In the third minute, we have 6 + 2 \u2264 8 , so 6 increases to 7 and 8 decreases to 7 , leaving 4, 5, 7, 7 . In the fourth minute, we have 5 + 2 \u2264 7 , so 5 increases to 6 and 7 decreases to 6 , leaving 4, 6, 6, 7 . In the fifth minute, we have 4 + 2 \u2264 6 , so 4 increases to 5 and 6 decreases to 5 , leaving 5, 5, 6, 7 . In the sixth minute, nothing else can change so the landslide stops and our answer is 5, 5, 6, 7 .",
    "topics": [
      "binary search",
      "constructive algorithms",
      "data structures",
      "greedy",
      "math"
    ],
    "id": "1392F"
  },
  {
    "title": "Omkar and Duck",
    "url": "https://codeforces.com/problemset/problem/1392/E",
    "history": "This is an interactive problem. Omkar has just come across a duck! The duck is walking on a grid with n rows and n columns ( 2 \u2264 n \u2264 25 ) so that the grid contains a total of n^ 2 cells. Let' s denote by ( x, y) the cell in the x - th row from the top and the y - th column from the left. Right now, the duck is at the cell ( 1, 1) ( the cell in the top left corner) and would like to reach the cell ( n, n) ( the cell in the bottom right corner) by moving either down 1 cell or to the right 1 cell each second. Since Omkar thinks ducks are fun, he wants to play a game with you based on the movement of the duck. First, for each cell ( x, y) in the grid, you will tell Omkar a nonnegative integer a_ x, y not exceeding 10^ 16 , and Omkar will then put a_ x, y uninteresting problems in the cell ( x, y) . After that, the duck will start their journey from ( 1, 1) to ( n, n) . For each cell ( x, y) that the duck crosses during their journey ( including the cells ( 1, 1) and ( n, n) ) , the duck will eat the a_ x, y uninteresting problems in that cell. Once the duck has completed their journey, Omkar will measure their mass to determine the total number k of uninteresting problems that the duck ate on their journey, and then tell you k . Your challenge, given k , is to exactly reproduce the duck' s path, i. e. to tell Omkar precisely which cells the duck crossed on their journey. To be sure of your mastery of this game, Omkar will have the duck complete q different journeys ( 1 \u2264 q \u2264 10^ 3 ) . Note that all journeys are independent: at the beginning of each journey, the cell ( x, y) will still contain a_ x, y uninteresting tasks. InteractionThe interaction will begin with a line containing a single integer n ( 2 \u2264 n \u2264 25 ) , the amount of rows and columns in the grid. Read it. Your program should then print n lines. The x - th line should contain n integers a_ x, 1, a_ x, 2, . . . , a_ x, n satisfying 0 \u2264 a_ x, y\u2264 10^ 16 , where a_ x, y is the amount of uninteresting problems Omkar should place in the cell ( x, y) . After that, you will first receive a single integer q , the amount of journeys that the duck will take. q queries will follow; each query will consist of a single line containing an integer k , the amount of uninteresting problems that the duck ate on that journey. After each query, given that you have determined that the duck visited the cells ( x_ 1, y_ 1) , ( x_ 2, y_ 2) , . . . , ( x_ 2n - 1, y_ 2n - 1) in that order ( it should always be true that ( x_ 1, y_ 1) = ( 1, 1) and ( x_ 2n - 1, y_ 2n - 1) = ( n, n) ) , you should output 2n - 1 lines so that the j - th line contains the two integers x_ j, y_ j . Bear in mind that if the sum on your path is k , but your path is different from the actual hidden path, then your solution is still wrong! After printing each line do not forget to output end of line and flush the output. Otherwise, you will get Idleness limit exceeded. To do this, use: fflush( stdout) or cout. flush( ) in C+ + ; System. out. flush( ) in Java; flush( output) in Pascal; stdout. flush( ) in Python; see documentation for other languages. Hack FormatTo hack, first output a line containing n and another line containing q . It must be true that 2 \u2264 n \u2264 25 and 1 \u2264 q \u2264 1000 . Then, output the q journeys taken by the duck in the same format as described above: for each journey, given that the duck visited the cells ( x_ 1, y_ 1) , ( x_ 2, y_ 2) , . . . , ( x_ 2n - 1, y_ 2n - 1) in that order, you should output 2n - 1 lines so that the j - th line contains the two integers x_ j, y_ j . It must be true that ( x_ 1, y_ 1) = ( 1, 1) and ( x_ 2n - 1, y_ 2n - 1) = ( n, n) . Additionally, for each j such that 2 \u2264 j \u2264 2n - 1 , it must be true that 1 \u2264 x_ j, y_ j \u2264 n and either ( x_ j, y_ j) = ( x_ j - 1 + 1, y_ j - 1) or ( x_ j, y_ j) = ( x_ j - 1, y_ j - 1 + 1) .",
    "input": "",
    "output": "",
    "note": "The duck' s three journeys are illustrated below. 1 + 2 + 3 + 2 + 10 + 3 + 2 = 23 1 + 4 + 9 + 0 + 7 + 3 + 2 = 26 1 + 2 + 3 + 6 + 10 + 3 + 2 = 27",
    "topics": [
      "bitmasks",
      "constructive algorithms",
      "interactive",
      "math"
    ],
    "id": "1392E"
  },
  {
    "title": "Omkar and Infinity Clock",
    "url": "https://codeforces.com/problemset/problem/1392/B",
    "history": "Being stuck at home, Ray became extremely bored. To pass time, he asks Lord Omkar to use his time bending power: Infinity Clock! However, Lord Omkar will only listen to mortals who can solve the following problem: You are given an array a of n integers. You are also given an integer k . Lord Omkar wants you to do k operations with this array. Define one operation as the following: Set d to be the maximum value of your array. For every i from 1 to n , replace a_ i with d- a_ i . The goal is to predict the contents in the array after k operations. Please help Ray determine what the final sequence will look like!",
    "input": "Each test contains multiple test cases. The first line contains the number of cases t ( 1 \u2264 t \u2264 100 ) . Description of the test cases follows. The first line of each test case contains two integers n and k ( 1 \u2264 n \u2264 2 \u00b7 10^ 5, 1 \u2264 k \u2264 10^ 18 ) \u2013 the length of your array and the number of operations to perform. The second line of each test case contains n integers a_ 1, a_ 2, . . . , a_ n ( - 10^ 9 \u2264 a_ i\u2264 10^ 9) \u2013 the initial contents of your array. It is guaranteed that the sum of n over all test cases does not exceed 2 \u00b7 10^ 5 .",
    "output": "For each case, print the final version of array a after k operations described above.",
    "note": "In the first test case the array changes as follows: Initially, the array is [ - 199, 192] . d = 192 . After the operation, the array becomes [ d- ( - 199) , d- 192] = [ 391, 0] .",
    "topics": [
      "implementation",
      "math"
    ],
    "id": "1392B"
  },
  {
    "title": "Omkar and Password",
    "url": "https://codeforces.com/problemset/problem/1392/A",
    "history": "Lord Omkar has permitted you to enter the Holy Church of Omkar! To test your worthiness, Omkar gives you a password which you must interpret! A password is an array a of n positive integers. You apply the following operation to the array: pick any two adjacent numbers that are not equal to each other and replace them with their sum. Formally, choose an index i such that 1 \u2264 i < n and a_ i= \u0338 a_ i+ 1 , delete both a_ i and a_ i+ 1 from the array and put a_ i+ a_ i+ 1 in their place. For example, for array [ 7, 4, 3, 7] you can choose i = 2 and the array will become [ 7, 4+ 3, 7] = [ 7, 7, 7] . Note that in this array you can' t apply this operation anymore. Notice that one operation will decrease the size of the password by 1 . What is the shortest possible length of the password after some number ( possibly 0 ) of operations?",
    "input": "Each test contains multiple test cases. The first line contains the number of test cases t ( 1 \u2264 t \u2264 100 ) . Description of the test cases follows. The first line of each test case contains an integer n ( 1 \u2264 n \u2264 2 \u00b7 10^ 5 ) \u2014 the length of the password. The second line of each test case contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i\u2264 10^ 9 ) \u2014 the initial contents of your password. The sum of n over all test cases will not exceed 2 \u00b7 10^ 5 .",
    "output": "For each password, print one integer: the shortest possible length of the password after some number of operations.",
    "note": "In the first test case, you can do the following to achieve a length of 1 : Pick i= 2 to get [ 2, 4, 1] Pick i= 1 to get [ 6, 1] Pick i= 1 to get [ 7] In the second test case, you can' t perform any operations because there is no valid i that satisfies the requirements mentioned above.",
    "topics": [
      "greedy",
      "math"
    ],
    "id": "1392A"
  },
  {
    "title": "Cyclic Permutations ",
    "url": "https://codeforces.com/problemset/problem/1391/C",
    "history": "A permutation of length n is an array consisting of n distinct integers from 1 to n in arbitrary order. For example, [ 2, 3, 1, 5, 4] is a permutation, but [ 1, 2, 2] is not a permutation ( 2 appears twice in the array) and [ 1, 3, 4] is also not a permutation ( n= 3 but there is 4 in the array) . Consider a permutation p of length n , we build a graph of size n using it as follows: For every 1 \u2264 i \u2264 n , find the largest j such that 1 \u2264 j < i and p_ j > p_ i , and add an undirected edge between node i and node j For every 1 \u2264 i \u2264 n , find the smallest j such that i < j \u2264 n and p_ j > p_ i , and add an undirected edge between node i and node j In cases where no such j exists, we make no edges. Also, note that we make edges between the corresponding indices, not the values at those indices. For clarity, consider as an example n = 4 , and p = [ 3, 1, 4, 2] ; here, the edges of the graph are ( 1, 3) , ( 2, 1) , ( 2, 3) , ( 4, 3) . A permutation p is cyclic if the graph built using p has at least one simple cycle. Given n , find the number of cyclic permutations of length n . Since the number may be very large, output it modulo 10^ 9+ 7 . Please refer to the Notes section for the formal definition of a simple cycle",
    "input": "The first and only line contains a single integer n ( 3 \u2264 n \u2264 10^ 6 ) .",
    "output": "Output a single integer 0 \u2264 x < 10^ 9+ 7 , the number of cyclic permutations of length n modulo 10^ 9+ 7 .",
    "note": "There are 16 cyclic permutations for n = 4 . [ 4, 2, 1, 3] is one such permutation, having a cycle of length four: 4 \u2192 3 \u2192 2 \u2192 1 \u2192 4 . Nodes v_ 1 , v_ 2 , . . . , v_ k form a simple cycle if the following conditions hold: k \u2265 3 . v_ i = \u0338 v_ j for any pair of indices i and j . ( 1 \u2264 i < j \u2264 k ) v_ i and v_ i+ 1 share an edge for all i ( 1 \u2264 i < k ) , and v_ 1 and v_ k share an edge.",
    "topics": [
      "combinatorics",
      "dp",
      "graphs",
      "math"
    ],
    "id": "1391C"
  },
  {
    "title": "Suborrays",
    "url": "https://codeforces.com/problemset/problem/1391/A",
    "history": "A permutation of length n is an array consisting of n distinct integers from 1 to n in arbitrary order. For example, [ 2, 3, 1, 5, 4] is a permutation, but [ 1, 2, 2] is not a permutation ( 2 appears twice in the array) and [ 1, 3, 4] is also not a permutation ( n= 3 but there is 4 in the array) . For a positive integer n , we call a permutation p of length n good if the following condition holds for every pair i and j ( 1 \u2264 i \u2264 j \u2264 n ) \u2014 ( p_ i OR p_ i+ 1 OR . . . OR p_ j- 1 OR p_ j) \u2265 j- i+ 1 , where OR denotes the bitwise OR operation. In other words, a permutation p is good if for every subarray of p , the OR of all elements in it is not less than the number of elements in that subarray. Given a positive integer n , output any good permutation of length n . We can show that for the given constraints such a permutation always exists.",
    "input": "Each test contains multiple test cases. The first line contains the number of test cases t ( 1 \u2264 t \u2264 100 ) . Description of the test cases follows. The first and only line of every test case contains a single integer n ( 1 \u2264 n \u2264 100 ) .",
    "output": "For every test, output any good permutation of length n on a separate line.",
    "note": "For n = 3 , [ 3, 1, 2] is a good permutation. Some of the subarrays are listed below. 3 OR 1 = 3 \u2265 2 ( i = 1, j = 2) 3 OR 1 OR 2 = 3 \u2265 3 ( i = 1, j = 3) 1 OR 2 = 3 \u2265 2 ( i = 2, j = 3) 1 \u2265 1 ( i = 2, j = 2) Similarly, you can verify that [ 4, 3, 5, 2, 7, 1, 6] is also good.",
    "topics": [
      "constructive algorithms",
      "math"
    ],
    "id": "1391A"
  },
  {
    "title": "Calendar Ambiguity",
    "url": "https://codeforces.com/problemset/problem/1389/E",
    "history": "Berland year consists of m months with d days each. Months are numbered from 1 to m . Berland week consists of w days. The first day of the year is also the first day of the week. Note that the last week of the year might be shorter than w days. A pair ( x, y) such that x < y is ambiguous if day x of month y is the same day of the week as day y of month x . Count the number of ambiguous pairs.",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 1000 ) \u2014 the number of testcases. Each of the next t lines contains three integers m , d and w ( 1 \u2264 m, d, w \u2264 10^ 9 ) \u2014 the number of months in a year, the number of days in a month and the number of days in a week.",
    "output": "Print t integers \u2014 for each testcase output the number of pairs ( x, y) such that x < y and day x of month y is the same day of the week as day y of month x .",
    "note": "Here are the pairs for the first test case:",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "1389E"
  },
  {
    "title": "Segment Intersections",
    "url": "https://codeforces.com/problemset/problem/1389/D",
    "history": "You are given two lists of segments [ al_ 1, ar_ 1] , [ al_ 2, ar_ 2] , . . . , [ al_ n, ar_ n] and [ bl_ 1, br_ 1] , [ bl_ 2, br_ 2] , . . . , [ bl_ n, br_ n] . Initially, all segments [ al_ i, ar_ i] are equal to [ l_ 1, r_ 1] and all segments [ bl_ i, br_ i] are equal to [ l_ 2, r_ 2] . In one step, you can choose one segment ( either from the first or from the second list) and extend it by 1 . In other words, suppose you' ve chosen segment [ x, y] then you can transform it either into [ x - 1, y] or into [ x, y + 1] . Let' s define a total intersection I as the sum of lengths of intersections of the corresponding pairs of segments, i. e. \u2211_ i= 1^ nintersection_ length( [ al_ i, ar_ i] , [ bl_ i, br_ i] ) . Empty intersection has length 0 and length of a segment [ x, y] is equal to y - x . What is the minimum number of steps you need to make I greater or equal to k ?",
    "input": "The first line contains the single integer t ( 1 \u2264 t \u2264 1000 ) \u2014 the number of test cases. The first line of each test case contains two integers n and k ( 1 \u2264 n \u2264 2 \u00b7 10^ 5 ; 1 \u2264 k \u2264 10^ 9 ) \u2014 the length of lists and the minimum required total intersection. The second line of each test case contains two integers l_ 1 and r_ 1 ( 1 \u2264 l_ 1 \u2264 r_ 1 \u2264 10^ 9 ) \u2014 the segment all [ al_ i, ar_ i] are equal to initially. The third line of each test case contains two integers l_ 2 and r_ 2 ( 1 \u2264 l_ 2 \u2264 r_ 2 \u2264 10^ 9 ) \u2014 the segment all [ bl_ i, br_ i] are equal to initially. It' s guaranteed that the sum of n doesn' t exceed 2 \u00b7 10^ 5 .",
    "output": "Print t integers \u2014 one per test case. For each test case, print the minimum number of step you need to make I greater or equal to k .",
    "note": "In the first test case, we can achieve total intersection 5 , for example, using next strategy: make [ al_ 1, ar_ 1] from [ 1, 2] to [ 1, 4] in 2 steps; make [ al_ 2, ar_ 2] from [ 1, 2] to [ 1, 3] in 1 step; make [ bl_ 1, br_ 1] from [ 3, 4] to [ 1, 4] in 2 steps; make [ bl_ 2, br_ 2] from [ 3, 4] to [ 1, 4] in 2 steps. In result, I = intersection_ length( [ al_ 1, ar_ 1] , [ bl_ 1, br_ 1] ) + intersection_ length( [ al_ 2, ar_ 2] , [ bl_ 2, br_ 2] ) + + intersection_ length( [ al_ 3, ar_ 3] , [ bl_ 3, br_ 3] ) = 3 + 2 + 0 = 5 In the second test case, we can make [ al_ 1, ar_ 1] = [ 0, 1000000000] in 1000000000 steps and [ bl_ 1, br_ 1] = [ 0, 1000000000] in 1000000000 steps. In the third test case, the total intersection I is already equal to 10 > 3 , so we don' t need to do any steps.",
    "topics": [
      "brute force",
      "greedy",
      "implementation",
      "math"
    ],
    "id": "1389D"
  },
  {
    "title": "LCM Problem",
    "url": "https://codeforces.com/problemset/problem/1389/A",
    "history": "Let LCM( x, y) be the minimum positive integer that is divisible by both x and y . For example, LCM( 13, 37) = 481 , LCM( 9, 6) = 18 . You are given two integers l and r . Find two integers x and y such that l \u2264 x < y \u2264 r and l \u2264 LCM( x, y) \u2264 r .",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 10000 ) \u2014 the number of test cases. Each test case is represented by one line containing two integers l and r ( 1 \u2264 l < r \u2264 10^ 9 ) .",
    "output": "For each test case, print two integers: if it is impossible to find integers x and y meeting the constraints in the statement, print two integers equal to - 1 ; otherwise, print the values of x and y ( if there are multiple valid answers, you may print any of them) .",
    "note": "",
    "topics": [
      "constructive algorithms",
      "greedy",
      "math",
      "number theory"
    ],
    "id": "1389A"
  },
  {
    "title": "Uncle Bogdan and Country Happiness",
    "url": "https://codeforces.com/problemset/problem/1388/C",
    "history": "Uncle Bogdan is in captain Flint' s crew for a long time and sometimes gets nostalgic for his homeland. Today he told you how his country introduced a happiness index. There are n cities and n\u22121 undirected roads connecting pairs of cities. Citizens of any city can reach any other city traveling by these roads. Cities are numbered from 1 to n and the city 1 is a capital. In other words, the country has a tree structure. There are m citizens living in the country. A p_ i people live in the i - th city but all of them are working in the capital. At evening all citizens return to their home cities using the shortest paths. Every person has its own mood: somebody leaves his workplace in good mood but somebody are already in bad mood. Moreover any person can ruin his mood on the way to the hometown. If person is in bad mood he won' t improve it. Happiness detectors are installed in each city to monitor the happiness of each person who visits the city. The detector in the i - th city calculates a happiness index h_ i as the number of people in good mood minus the number of people in bad mood. Let' s say for the simplicity that mood of a person doesn' t change inside the city. Happiness detector is still in development, so there is a probability of a mistake in judging a person' s happiness. One late evening, when all citizens successfully returned home, the government asked uncle Bogdan ( the best programmer of the country) to check the correctness of the collected happiness indexes. Uncle Bogdan successfully solved the problem. Can you do the same? More formally, You need to check: \" Is it possible that, after all people return home, for each city i the happiness index will be equal exactly to h_ i \" .",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 10000 ) \u2014 the number of test cases. The first line of each test case contains two integers n and m ( 1 \u2264 n \u2264 10^ 5 ; 0 \u2264 m \u2264 10^ 9 ) \u2014 the number of cities and citizens. The second line of each test case contains n integers p_ 1, p_ 2, . . . , p_ n ( 0 \u2264 p_ i \u2264 m ; p_ 1 + p_ 2 + . . . + p_ n = m ) , where p_ i is the number of people living in the i - th city. The third line contains n integers h_ 1, h_ 2, . . . , h_ n ( - 10^ 9 \u2264 h_ i \u2264 10^ 9 ) , where h_ i is the calculated happiness index of the i - th city. Next n \u2212 1 lines contain description of the roads, one per line. Each line contains two integers x_ i and y_ i ( 1 \u2264 x_ i, y_ i \u2264 n ; x_ i = \u0338 y_ i ) , where x_ i and y_ i are cities connected by the i - th road. It' s guaranteed that the sum of n from all test cases doesn' t exceed 2 \u00b7 10^ 5 .",
    "output": "For each test case, print YES, if the collected data is correct, or NO \u2014 otherwise. You can print characters in YES or NO in any case.",
    "note": "Let' s look at the first test case of the first sample: At first, all citizens are in the capital. Let' s describe one of possible scenarios: a person from city 1 : he lives in the capital and is in good mood; a person from city 4 : he visited cities 1 and 4 , his mood was ruined between cities 1 and 4 ; a person from city 3 : he visited cities 1 and 3 in good mood; a person from city 6 : he visited cities 1 , 3 and 6 , his mood was ruined between cities 1 and 3 ; In total, h_ 1 = 4 - 0 = 4 , h_ 2 = 0 , h_ 3 = 1 - 1 = 0 , h_ 4 = 0 - 1 = - 1 , h_ 5 = 0 , h_ 6 = 0 - 1 = - 1 , h_ 7 = 0 . The second case of the first test: All people have already started in bad mood in the capital \u2014 this is the only possible scenario. The first case of the second test: The second case of the second test: It can be proven that there is no way to achieve given happiness indexes in both cases of the second test.",
    "topics": [
      "dfs and similar",
      "greedy",
      "math",
      "trees"
    ],
    "id": "1388C"
  },
  {
    "title": "Captain Flint and a Long Voyage",
    "url": "https://codeforces.com/problemset/problem/1388/B",
    "history": "Captain Flint and his crew keep heading to a savage shore of Byteland for several months already, drinking rum and telling stories. In such moments uncle Bogdan often remembers his nephew Denis. Today, he has told a story about how Denis helped him to come up with an interesting problem and asked the crew to solve it. In the beginning, uncle Bogdan wrote on a board a positive integer x consisting of n digits. After that, he wiped out x and wrote integer k instead, which was the concatenation of binary representations of digits x consists of ( without leading zeroes) . For example, let x = 729 , then k = 111101001 ( since 7 = 111 , 2 = 10 , 9 = 1001 ) . After some time, uncle Bogdan understood that he doesn' t know what to do with k and asked Denis to help. Denis decided to wipe last n digits of k and named the new number as r . As a result, Denis proposed to find such integer x of length n that r ( as number) is maximum possible. If there are multiple valid x then Denis is interested in the minimum one. All crew members, including captain Flint himself, easily solved the task. All, except cabin boy Kostya, who was too drunk to think straight. But what about you? Note: in this task, we compare integers ( x or k ) as numbers ( despite what representations they are written in) , so 729 < 1999 or 111 < 1000 .",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 1000 ) \u2014 the number of test cases. Next t lines contain test cases \u2014 one per test case. The one and only line of each test case contains the single integer n ( 1 \u2264 n \u2264 10^ 5 ) \u2014 the length of the integer x you need to find. It' s guaranteed that the sum of n from all test cases doesn' t exceed 2 \u00b7 10^ 5 .",
    "output": "For each test case, print the minimum integer x of length n such that obtained by Denis number r is maximum possible.",
    "note": "In the second test case ( with n = 3 ) , if uncle Bogdan had x = 998 then k = 100110011000 . Denis ( by wiping last n = 3 digits) will obtain r = 100110011 . It can be proved that the 100110011 is the maximum possible r Denis can obtain and 998 is the minimum x to obtain it.",
    "topics": [
      "greedy",
      "math"
    ],
    "id": "1388B"
  },
  {
    "title": "Captain Flint and Crew Recruitment",
    "url": "https://codeforces.com/problemset/problem/1388/A",
    "history": "Despite his bad reputation, Captain Flint is a friendly person ( at least, friendly to animals) . Now Captain Flint is searching worthy sailors to join his new crew ( solely for peaceful purposes) . A sailor is considered as worthy if he can solve Flint' s task. Recently, out of blue Captain Flint has been interested in math and even defined a new class of integers. Let' s define a positive integer x as nearly prime if it can be represented as p \u00b7 q , where 1 < p < q and p and q are prime numbers. For example, integers 6 and 10 are nearly primes ( since 2 \u00b7 3 = 6 and 2 \u00b7 5 = 10 ) , but integers 1 , 3 , 4 , 16 , 17 or 44 are not. Captain Flint guessed an integer n and asked you: can you represent it as the sum of 4 different positive integers where at least 3 of them should be nearly prime. Uncle Bogdan easily solved the task and joined the crew. Can you do the same?",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 1000 ) \u2014 the number of test cases. Next t lines contain test cases \u2014 one per line. The first and only line of each test case contains the single integer n ( 1 \u2264 n \u2264 2 \u00b7 10^ 5) \u2014 the number Flint guessed.",
    "output": "For each test case print: YES and 4 different positive integers such that at least 3 of them are nearly prime and their sum is equal to n ( if there are multiple answers print any of them) ; NO if there is no way to represent n as the sum of 4 different positive integers where at least 3 of them are nearly prime. You can print each character of YES or NO in any case.",
    "note": "In the first and second test cases, it can be proven that there are no four different positive integers such that at least three of them are nearly prime. In the third test case, n= 31= 2 \u00b7 7 + 2 \u00b7 5 + 2 \u00b7 3 + 1 : integers 14 , 10 , 6 are nearly prime. In the fourth test case, n= 36= 5 + 2 \u00b7 3 + 2 \u00b7 5 + 3 \u00b7 5 : integers 6 , 10 , 15 are nearly prime. In the fifth test case, n= 44= 2 \u00b7 3 + 7 + 2 \u00b7 5 + 3 \u00b7 7 : integers 6 , 10 , 21 are nearly prime. In the sixth test case, n= 100= 2 + 2 \u00b7 5 + 3 \u00b7 11 + 5 \u00b7 11 : integers 10 , 33 , 55 are nearly prime. In the seventh test case, n= 258= 2 \u00b7 5 + 3 \u00b7 7 + 13 \u00b7 17 + 2 \u00b7 3 : integers 10 , 21 , 221 , 6 are nearly prime.",
    "topics": [
      "brute force",
      "greedy",
      "math",
      "number theory"
    ],
    "id": "1388A"
  },
  {
    "title": "Graph",
    "url": "https://codeforces.com/problemset/problem/1387/A",
    "history": "You are given an undirected graph where each edge has one of two colors: black or red. Your task is to assign a real number to each node so that: for each black edge the sum of values at its endpoints is 1 ; for each red edge the sum of values at its endpoints is 2 ; the sum of the absolute values of all assigned numbers is the smallest possible. Otherwise, if it is not possible, report that there is no feasible assignment of the numbers. ScoringSubtasks: ( 5 points) N \u2264 5 , M \u2264 14 ( 12 points) N \u2264 100 ( 17 points) N \u2264 1000 ( 24 points) N \u2264 10 000 ( 42 points) No further constraints",
    "input": "The first line contains two integers N ( 1 \u2264 N \u2264 100 000 ) and M ( 0 \u2264 M \u2264 200 000 ) : the number of nodes and the number of edges, respectively. The nodes are numbered by consecutive integers: 1, 2, . . . , N . The next M lines describe the edges. Each line contains three integers a , b and c denoting that there is an edge between nodes a and b ( 1 \u2264 a, b \u2264 N ) with color c ( 1 denotes black, 2 denotes red) .",
    "output": "If there is a solution, the first line should contain the word \" YES\" and the second line should contain N space- separated numbers. For each i ( 1 \u2264 i \u2264 N ) , the i - th number should be the number assigned to the node i . Output should be such that: the sum of the numbers at the endpoints of each edge differs from the precise value by less than 10^ - 6 ; the sum of the absolute values of all assigned numbers differs from the smallest possible by less than 10^ - 6 . If there are several valid solutions, output any of them. If there is no solution, the only line should contain the word \" NO\" .",
    "note": "Note that in the second example the solution is not unique.",
    "topics": [
      "*special",
      "binary search",
      "dfs and similar",
      "dp",
      "math",
      "ternary search"
    ],
    "id": "1387A"
  },
  {
    "title": "Mixture",
    "url": "https://codeforces.com/problemset/problem/1386/B",
    "history": "Serge, the chef of the famous restaurant \" Salt, Pepper Garlic\" is trying to obtain his first Michelin star. He has been informed that a secret expert plans to visit his restaurant this evening. Even though the expert' s name hasn' t been disclosed, Serge is certain he knows which dish from the menu will be ordered as well as what the taste preferences of the expert are. Namely, the expert requires an extremely precise proportion of salt, pepper and garlic powder in his dish. Serge keeps a set of bottles with mixtures of salt, pepper and garlic powder on a special shelf in the kitchen. For each bottle, he knows the exact amount of each of the ingredients in kilograms. Serge can combine any number of bottled mixtures ( or just use one of them directly) to get a mixture of particular proportions needed for a certain dish. Luckily, the absolute amount of a mixture that needs to be added to a dish is so small that you can assume that the amounts in the bottles will always be sufficient. However, the numeric values describing the proportions may be quite large. Serge would like to know whether it is possible to obtain the expert' s favourite mixture from the available bottles, and if so\u2014what is the smallest possible number of bottles needed to achieve that. Furthermore, the set of bottles on the shelf may change over time as Serge receives new ones or lends his to other chefs. So he would like to answer this question after each such change. For example, assume that expert' s favorite mixture is 1: 1: 1 and there are three bottles of mixtures on the shelf: [ Mixture Salt Pepper Garlic powder; 1 10 20 30; 2 300 200 100; 3 12 15 27; ] Amount of ingredient in the bottle, kg To obtain the desired mixture it is enough to use an equivalent amount of mixtures from bottles 1 and 2. If bottle 2 is removed, then it is no longer possible to obtain it. Write a program that helps Serge to solve this task! ScoringSubtasks: ( 13 points) N \u2264 50 , 0 < S_ i+ P_ i+ G_ i \u2264 10^ 2 ( 17 points) N \u2264 500 , 0 < S_ i+ P_ i+ G_ i \u2264 10^ 3 ( 30 points) N \u2264 5000 , 0 < S_ i+ P_ i+ G_ i \u2264 10^ 4 ( 40 points) No further constraints",
    "input": "The first row contains three non- negative integers S_ f , P_ f and G_ f ( 0 \u2264 S_ f, P_ f, G_ f ; 0 < S_ f+ P_ f+ G_ f \u2264 10^ 6 ) describing the amount of salt, pepper and garlic powder in the expert' s favourite mixture. For any real \u03b1> 0 , ( \u03b1S_ f, \u03b1P_ f, \u03b1G_ f) also is an expert' s favourite mixture. In the second row, there is a positive integer N ( number of changes on the shelf, N \u2264 100 000 ) . You should assume that initially the shelf is empty. Each of the next N rows describes a single change on the shelf: If a new bottle is added, the row contains capital letter A followed by three non- negative integers S_ i , P_ i and G_ i ( 0 \u2264 S_ i, P_ i, G_ i ; 0 < S_ i+ P_ i+ G_ i \u2264 10^ 6 ) describing the amount of salt, pepper and garlic powder in the added bottle. Added bottles are numbered consecutively by unique integers starting from 1 , that is, the i - th bottle corresponds to the i - th added bottle in the input data. If a particular bottle is removed from the shelf, the row contains capital letter R followed by the integer\u2014the bottle number r_ i . All values r_ i in the removals are unique, r_ i never exceeds total number of bottles added thus far.",
    "output": "Output N rows. The j - th row ( 1 \u2264 j \u2264 N ) should contain the number x_ j , the smallest number of bottles needed to prepare a mixture with the expert' s favourite proportions of salt, pepper and garlic powder using the bottles available after the first j changes on the shelf, or 0 if it is not possible.",
    "note": "Pay attention that in the example, bottles 1 and 3 contain the same proportions of salt, pepper and garlic powder.",
    "topics": [
      "*special",
      "data structures",
      "geometry",
      "math",
      "sortings"
    ],
    "id": "1386B"
  },
  {
    "title": "Three Pairwise Maximums",
    "url": "https://codeforces.com/problemset/problem/1385/A",
    "history": "You are given three positive ( i. e. strictly greater than zero) integers x , y and z . Your task is to find positive integers a , b and c such that x = max( a, b) , y = max( a, c) and z = max( b, c) , or determine that it is impossible to find such a , b and c . You have to answer t independent test cases. Print required a , b and c in any ( arbitrary) order.",
    "input": "The first line of the input contains one integer t ( 1 \u2264 t \u2264 2 \u00b7 10^ 4 ) \u2014 the number of test cases. Then t test cases follow. The only line of the test case contains three integers x , y , and z ( 1 \u2264 x, y, z \u2264 10^ 9 ) .",
    "output": "For each test case, print the answer: \" NO\" in the only line of the output if a solution doesn' t exist; or \" YES\" in the first line and any valid triple of positive integers a , b and c ( 1 \u2264 a, b, c \u2264 10^ 9 ) in the second line. You can print a , b and c in any order.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": "1385A"
  },
  {
    "title": "GameGame",
    "url": "https://codeforces.com/problemset/problem/1383/B",
    "history": "Koa the Koala and her best friend want to play a game. The game starts with an array a of length n consisting of non- negative integers. Koa and her best friend move in turns and each have initially a score equal to 0 . Koa starts. Let' s describe a move in the game: During his move, a player chooses any element of the array and removes it from this array, xor- ing it with the current score of the player. More formally: if the current score of the player is x and the chosen element is y , his new score will be x \u2295 y . Here \u2295 denotes bitwise XOR operation. Note that after a move element y is removed from a . The game ends when the array is empty. At the end of the game the winner is the player with the maximum score. If both players have the same score then it' s a draw. If both players play optimally find out whether Koa will win, lose or draw the game.",
    "input": "Each test contains multiple test cases. The first line contains t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. Description of the test cases follows. The first line of each test case contains the integer n ( 1 \u2264 n \u2264 10^ 5 ) \u2014 the length of a . The second line of each test case contains n integers a_ 1, a_ 2, . . . , a_ n ( 0 \u2264 a_ i \u2264 10^ 9 ) \u2014 elements of a . It is guaranteed that the sum of n over all test cases does not exceed 10^ 5 .",
    "output": "For each test case print: WIN if Koa will win the game. LOSE if Koa will lose the game. DRAW if the game ends in a draw.",
    "note": "In testcase 1 of the first sample we have: a = [ 1, 2, 2] . Here Koa chooses 1 , other player has to choose 2 , Koa chooses another 2 . Score for Koa is 1 \u2295 2 = 3 and score for other player is 2 so Koa wins.",
    "topics": [
      "bitmasks",
      "constructive algorithms",
      "dp",
      "games",
      "greedy",
      "math"
    ],
    "id": "1383B"
  },
  {
    "title": "Origami",
    "url": "https://codeforces.com/problemset/problem/1381/E",
    "history": "After being discouraged by 13 time- limit- exceeded verdicts on an ugly geometry problem, you decided to take a relaxing break for arts and crafts. There is a piece of paper in the shape of a simple polygon with n vertices. The polygon may be non- convex, but we all know that proper origami paper has the property that any horizontal line intersects the boundary of the polygon in at most two points. If you fold the paper along the vertical line x= f , what will be the area of the resulting shape? When you fold, the part of the paper to the left of the line is symmetrically reflected on the right side. Your task is to answer q independent queries for values f_ 1, . . . , f_ q .",
    "input": "The first line contains two integers n , q ( 3\u2264 n\u2264 10^ 5, 1\u2264 q\u2264 10^ 5 ) \u2014 the number of polygon vertices and queries, respectively. Each of the next n lines contains two integers x_ i , y_ i ( | x_ i| , | y_ i| \u2264 10^ 5 ) \u2014 the coordinates of the i - th point of the polygon. The polygon has an edge connecting each pair of adjacent points in the input, and also an edge between ( x_ 1, y_ 1) and ( x_ n, y_ n) . It is guaranteed that the polygon is non- degenerate and that any horizontal line intersects the boundary of the polygon in at most two points. In particular, no boundary edge is strictly horizontal. Two adjacent sides may be collinear. Each of the next q lines contains a single integer f_ i ( min_ j= 1^ n( x_ j) < f_ i< max_ j= 1^ n( x_ j) ) \u2014 the x - coordinate of the i - th fold query. It is guaranteed that all f_ i are distinct.",
    "output": "For each query, output the area A_ i of the paper if you fold it along the line x= f_ i . Your answer is considered correct if its absolute or relative error does not exceed 10^ - 4 . Formally, let your answer be a , and the jury' s answer be b . Your answer is accepted if and only if | a - b| / max( 1, | b| ) \u2264 10^ - 4 .",
    "note": "The first test, with the fold f= - 5 : The second test, with the fold f= 1 : The third test, with the fold f= - 1 :",
    "topics": [
      "geometry",
      "math",
      "sortings"
    ],
    "id": "1381E"
  },
  {
    "title": "Circular Dungeon",
    "url": "https://codeforces.com/problemset/problem/1380/G",
    "history": "You are creating a level for a video game. The level consists of n rooms placed in a circle. The rooms are numbered 1 through n . Each room contains exactly one exit: completing the j - th room allows you to go the ( j+ 1) - th room ( and completing the n - th room allows you to go the 1 - st room) . You are given the description of the multiset of n chests: the i - th chest has treasure value c_ i . Each chest can be of one of two types: regular chest \u2014 when a player enters a room with this chest, he grabs the treasure and proceeds to the next room; mimic chest \u2014 when a player enters a room with this chest, the chest eats him alive, and he loses. The player starts in a random room with each room having an equal probability of being chosen. The players earnings is equal to the total value of treasure chests he' d collected before he lost. You are allowed to choose the order the chests go into the rooms. For each k from 1 to n place the chests into the rooms in such a way that: each room contains exactly one chest; exactly k chests are mimics; the expected value of players earnings is minimum possible. Please note that for each k the placement is chosen independently. It can be shown that it is in the form of P/ Q where P and Q are non- negative integers and Q 0 . Report the values of P \u00b7 Q^ - 1998244353 .",
    "input": "The first contains a single integer n ( 2 \u2264 n \u2264 3 \u00b7 10^ 5 ) \u2014 the number of rooms and the number of chests. The second line contains n integers c_ 1, c_ 2, . . . , c_ n ( 1 \u2264 c_ i \u2264 10^ 6 ) \u2014 the treasure values of each chest.",
    "output": "Print n integers \u2014 the k - th value should be equal to the minimum possible expected value of players earnings if the chests are placed into the rooms in some order and exactly k of the chests are mimics. It can be shown that it is in the form of P/ Q where P and Q are non- negative integers and Q 0 . Report the values of P \u00b7 Q^ - 1998244353 .",
    "note": "In the first example the exact values of minimum expected values are: 1/ 2 , 0/ 2 . In the second example the exact values of minimum expected values are: 132/ 8 , 54/ 8 , 30/ 8 , 17/ 8 , 12/ 8 , 7/ 8 , 3/ 8 , 0/ 8 .",
    "topics": [
      "greedy",
      "math",
      "probabilities"
    ],
    "id": "1380G"
  },
  {
    "title": "Berserk And Fireball",
    "url": "https://codeforces.com/problemset/problem/1380/D",
    "history": "There are n warriors in a row. The power of the i - th warrior is a_ i . All powers are pairwise distinct. You have two types of spells which you may cast: Fireball: you spend x mana and destroy exactly k consecutive warriors; Berserk: you spend y mana, choose two consecutive warriors, and the warrior with greater power destroys the warrior with smaller power. For example, let the powers of warriors be [ 2, 3, 7, 8, 11, 5, 4] , and k = 3 . If you cast Berserk on warriors with powers 8 and 11 , the resulting sequence of powers becomes [ 2, 3, 7, 11, 5, 4] . Then, for example, if you cast Fireball on consecutive warriors with powers [ 7, 11, 5] , the resulting sequence of powers becomes [ 2, 3, 4] . You want to turn the current sequence of warriors powers a_ 1, a_ 2, . . . , a_ n into b_ 1, b_ 2, . . . , b_ m . Calculate the minimum amount of mana you need to spend on it.",
    "input": "The first line contains two integers n and m ( 1 \u2264 n, m \u2264 2 \u00b7 10^ 5 ) \u2014 the length of sequence a and the length of sequence b respectively. The second line contains three integers x, k, y ( 1 \u2264 x, y, \u2264 10^ 9; 1 \u2264 k \u2264 n ) \u2014 the cost of fireball, the range of fireball and the cost of berserk respectively. The third line contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 n ) . It is guaranteed that all integers a_ i are pairwise distinct. The fourth line contains m integers b_ 1, b_ 2, . . . , b_ m ( 1 \u2264 b_ i \u2264 n ) . It is guaranteed that all integers b_ i are pairwise distinct.",
    "output": "Print the minimum amount of mana for turning the sequnce a_ 1, a_ 2, . . . , a_ n into b_ 1, b_ 2, . . . , b_ m , or - 1 if it is impossible.",
    "note": "",
    "topics": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "math",
      "two pointers"
    ],
    "id": "1380D"
  },
  {
    "title": "Inverse Genealogy",
    "url": "https://codeforces.com/problemset/problem/1379/E",
    "history": "Ivan is fond of genealogy. Currently he is studying a particular genealogical structure, which consists of some people. In this structure every person has either both parents specified, or none. Additionally, each person has exactly one child, except for one special person, who does not have any children. The people in this structure are conveniently numbered from 1 to n , and s_ i denotes the child of the person i ( and s_ i = 0 for exactly one person who does not have any children) . We say that a is an ancestor of b if either a = b , or a has a child, who is an ancestor of b . That is a is an ancestor for a , s_ a , s_ s_ a , etc. We say that person i is imbalanced in case this person has both parents specified, and the total number of ancestors of one of the parents is at least double the other. Ivan counted the number of imbalanced people in the structure, and got k people in total. However, he is not sure whether he computed it correctly, and would like to check if there is at least one construction with n people that have k imbalanced people in total. Please help him to find one such construction, or determine if it does not exist.",
    "input": "The input contains two integers n and k ( 1 \u2264 n \u2264 100 000 , 0 \u2264 k \u2264 n ) , the total number of people and the number of imbalanced people.",
    "output": "If there are no constructions with n people and k imbalanced people, output NO. Otherwise output YES on the first line, and then n integers s_ 1, s_ 2, . . . , s_ n ( 0 \u2264 s_ i \u2264 n ) , which describes the construction and specify the child of each node ( or 0, if the person does not have any children) .",
    "note": "In the first example case one can have a construction with 3 people, where 1 person has 2 parents. In the second example case one can use the following construction: Only person 1 is imbalanced, because one of their parents has 1 ancestor in total, and the other parent has 3 ancestors.",
    "topics": [
      "constructive algorithms",
      "divide and conquer",
      "dp",
      "math",
      "trees"
    ],
    "id": "1379E"
  },
  {
    "title": "Dubious Cyrpto",
    "url": "https://codeforces.com/problemset/problem/1379/B",
    "history": "Pasha loves to send strictly positive integers to his friends. Pasha cares about security, therefore when he wants to send an integer n , he encrypts it in the following way: he picks three integers a , b and c such that l \u2264 a, b, c \u2264 r , and then he computes the encrypted value m = n \u00b7 a + b - c . Unfortunately, an adversary intercepted the values l , r and m . Is it possible to recover the original values of a , b and c from this information? More formally, you are asked to find any values of a , b and c such that a , b and c are integers, l \u2264 a, b, c \u2264 r , there exists a strictly positive integer n , such that n \u00b7 a + b - c = m .",
    "input": "The first line contains the only integer t ( 1 \u2264 t \u2264 20 ) \u2014 the number of test cases. The following t lines describe one test case each. Each test case consists of three integers l , r and m ( 1 \u2264 l \u2264 r \u2264 500 000 , 1 \u2264 m \u2264 10^ 10 ) . The numbers are such that the answer to the problem exists.",
    "output": "For each test case output three integers a , b and c such that, l \u2264 a, b, c \u2264 r and there exists a strictly positive integer n such that n \u00b7 a + b - c = m . It is guaranteed that there is at least one possible solution, and you can output any possible combination if there are multiple solutions.",
    "note": "In the first example n = 3 is possible, then n \u00b7 4 + 6 - 5 = 13 = m . Other possible solutions include: a = 4 , b = 5 , c = 4 ( when n = 3 ) ; a = 5 , b = 4 , c = 6 ( when n = 3 ) ; a = 6 , b = 6 , c = 5 ( when n = 2 ) ; a = 6 , b = 5 , c = 4 ( when n = 2 ) . In the second example the only possible case is n = 1 : in this case n \u00b7 2 + 2 - 3 = 1 = m . Note that, n = 0 is not possible, since in that case n is not a strictly positive integer.",
    "topics": [
      "binary search",
      "brute force",
      "math",
      "number theory"
    ],
    "id": "1379B"
  },
  {
    "title": "Cubic Lattice",
    "url": "https://codeforces.com/problemset/problem/1375/I",
    "history": "A cubic lattice L in 3 - dimensional euclidean space is a set of points defined in the following way: L= { u \u00b7r\u20d7_ 1 + v \u00b7r\u20d7_ 2 + w \u00b7r\u20d7_ 3} _ u, v, w \u2208Z Where r\u20d7_ 1, r\u20d7_ 2, r\u20d7_ 3 \u2208Z^ 3 are some integer vectors such that: r\u20d7_ 1 , r\u20d7_ 2 and r\u20d7_ 3 are pairwise orthogonal: r\u20d7_ 1 \u00b7r\u20d7_ 2 = r\u20d7_ 1 \u00b7r\u20d7_ 3 = r\u20d7_ 2 \u00b7r\u20d7_ 3 = 0 Where a\u20d7\u00b7b\u20d7 is a dot product of vectors a\u20d7 and b\u20d7 . r\u20d7_ 1 , r\u20d7_ 2 and r\u20d7_ 3 all have the same length: | r\u20d7_ 1| = | r\u20d7_ 2| = | r\u20d7_ 3| = r You' re given a set A= { a\u20d7_ 1, a\u20d7_ 2, . . . , a\u20d7_ n} of integer points, i - th point has coordinates a_ i= ( x_ i; y_ i; z_ i) . Let g_ i= ( x_ i, y_ i, z_ i) . It is guaranteed that ( g_ 1, g_ 2, . . . , g_ n) = 1 . You have to find a cubic lattice L such that A \u2282 L and r is the maximum possible.",
    "input": "First line contains single integer n ( 1 \u2264 n \u2264 10^ 4 ) \u2014 the number of points in A . The i - th of the following n lines contains integers x_ i , y_ i , z_ i ( 0 < x_ i^ 2 + y_ i^ 2 + z_ i^ 2 \u2264 10^ 16 ) \u2014 coordinates of the i - th point. It is guaranteed that ( g_ 1, g_ 2, . . . , g_ n) = 1 where g_ i= ( x_ i, y_ i, z_ i) .",
    "output": "In first line output a single integer r^ 2 , the square of maximum possible r . In following 3 lines output coordinates of vectors r\u20d7_ 1 , r\u20d7_ 2 and r\u20d7_ 3 respectively. If there are multiple possible answers, output any.",
    "note": "",
    "topics": [
      "geometry",
      "math",
      "matrices",
      "number theory"
    ],
    "id": "1375I"
  },
  {
    "title": "Integer Game",
    "url": "https://codeforces.com/problemset/problem/1375/F",
    "history": "This is an interactive problem. Anton and Harris are playing a game to decide which of them is the king of problemsetting. There are three piles of stones, initially containing a , b , and c stones, where a , b , and c are distinct positive integers. On each turn of the game, the following sequence of events takes place: The first player chooses a positive integer y and provides it to the second player. The second player adds y stones to one of the piles, with the condition that he cannot choose the same pile in two consecutive turns. The second player loses if, at any point, two of the piles contain the same number of stones. The first player loses if 1000 turns have passed without the second player losing. Feeling confident in his skills, Anton decided to let Harris choose whether he wants to go first or second. Help Harris defeat Anton and become the king of problemsetting! InteractionThe interaction begins by reading the integers a , b and c . After reading the integers, print a single line containing either \" First\" or \" Second\" , denoting who you want to play as ( as first or second correspondently) . On each turn, the first player ( either you or the judge) must print a positive integer y ( 1 \u2264 y \u2264 10^ 12 ) . Then, the second player must print 1 , 2 , or 3 , indicating which pile should have y stones added to it. From the second turn onwards, the pile that the second player chooses must be different from the pile that they chose on the previous turn. If you are playing as Second and complete 1000 turns without losing, or if you are playing as First and the judge has determined that it cannot make a move without losing, the interactor will print 0 and will finish interaction. This means that your program is correct for this test case, and you should exit immediately. If you are playing as First and complete 1000 turns without winning, or if you are playing as Second and print a move that makes two piles have the same number of stones, or if you output an invalid move as either player, the interactor will print - 1 and will finish interaction. You will receive a Wrong Answer verdict. Make sure to exit immediately to avoid getting other verdicts. After printing something do not forget to output end of line and flush the output. Otherwise, you will get Idleness limit exceeded. To do this, use: fflush( stdout) or cout. flush( ) in C+ + ; System. out. flush( ) in Java; flush( output) in Pascal; stdout. flush( ) in Python; see documentation for other languages. In this problem, hacks are disabled.",
    "input": "The first line of input contains three distinct positive integers a , b , and c ( 1 \u2264 a, b, c \u2264 10^ 9 ) \u2014 the initial number of stones in piles 1 , 2 , and 3 respectively.",
    "output": "",
    "note": "In the sample input, the piles initially have 5 , 2 , and 6 stones. Harris decides to go first and provides the number 2 to Anton. Anton adds 2 stones to the third pile, which results in 5 , 2 , and 8 . In the next turn, Harris chooses 3 . Note that Anton cannot add the stones to the third pile since he chose the third pile in the previous turn. Anton realizes that he has no valid moves left and reluctantly recognizes Harris as the king.",
    "topics": [
      "constructive algorithms",
      "games",
      "interactive",
      "math"
    ],
    "id": "1375F"
  },
  {
    "title": "Sign Flipping",
    "url": "https://codeforces.com/problemset/problem/1375/A",
    "history": "You are given n integers a_ 1, a_ 2, . . . , a_ n , where n is odd. You are allowed to flip the sign of some ( possibly all or none) of them. You wish to perform these flips in such a way that the following conditions hold: At least n - 1/ 2 of the adjacent differences a_ i + 1 - a_ i for i = 1, 2, . . . , n - 1 are greater than or equal to 0 . At least n - 1/ 2 of the adjacent differences a_ i + 1 - a_ i for i = 1, 2, . . . , n - 1 are less than or equal to 0 . Find any valid way to flip the signs. It can be shown that under the given constraints, there always exists at least one choice of signs to flip that satisfies the required condition. If there are several solutions, you can find any of them.",
    "input": "The input consists of multiple test cases. The first line contains an integer t ( 1 \u2264 t \u2264 500 ) \u2014 the number of test cases. The description of the test cases follows. The first line of each test case contains an integer n ( 3 \u2264 n \u2264 99 , n is odd) \u2014 the number of integers given to you. The second line of each test case contains n integers a_ 1, a_ 2, . . . , a_ n ( - 10^ 9 \u2264 a_ i \u2264 10^ 9 ) \u2014 the numbers themselves. It is guaranteed that the sum of n over all test cases does not exceed 10000 .",
    "output": "For each test case, print n integers b_ 1, b_ 2, . . . , b_ n , corresponding to the integers after flipping signs. b_ i has to be equal to either a_ i or - a_ i , and of the adjacent differences b_ i + 1 - b_ i for i = 1, . . . , n - 1 , at least n - 1/ 2 should be non- negative and at least n - 1/ 2 should be non- positive. It can be shown that under the given constraints, there always exists at least one choice of signs to flip that satisfies the required condition. If there are several solutions, you can find any of them.",
    "note": "In the first test case, the difference ( - 4) - ( - 2) = - 2 is non- positive, while the difference 3 - ( - 4) = 7 is non- negative. In the second test case, we don' t have to flip any signs. All 4 differences are equal to 0 , which is both non- positive and non- negative. In the third test case, 7 - ( - 4) and 4 - ( - 6) are non- negative, while ( - 4) - ( - 2) and ( - 6) - 7 are non- positive.",
    "topics": [
      "constructive algorithms",
      "math"
    ],
    "id": "1375A"
  },
  {
    "title": "Zero Remainder Array",
    "url": "https://codeforces.com/problemset/problem/1374/D",
    "history": "You are given an array a consisting of n positive integers. Initially, you have an integer x = 0 . During one move, you can do one of the following two operations: Choose exactly one i from 1 to n and increase a_ i by x ( a_ i : = a_ i + x ) , then increase x by 1 ( x : = x + 1 ) . Just increase x by 1 ( x : = x + 1 ) . The first operation can be applied no more than once to each i from 1 to n . Your task is to find the minimum number of moves required to obtain such an array that each its element is divisible by k ( the value k is given) . You have to answer t independent test cases.",
    "input": "The first line of the input contains one integer t ( 1 \u2264 t \u2264 2 \u00b7 10^ 4 ) \u2014 the number of test cases. Then t test cases follow. The first line of the test case contains two integers n and k ( 1 \u2264 n \u2264 2 \u00b7 10^ 5; 1 \u2264 k \u2264 10^ 9 ) \u2014 the length of a and the required divisior. The second line of the test case contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 9 ) , where a_ i is the i - th element of a . It is guaranteed that the sum of n does not exceed 2 \u00b7 10^ 5 ( \u2211 n \u2264 2 \u00b7 10^ 5 ) .",
    "output": "For each test case, print the answer \u2014 the minimum number of moves required to obtain such an array that each its element is divisible by k .",
    "note": "Consider the first test case of the example: x= 0 , a = [ 1, 2, 1, 3] . Just increase x ; x= 1 , a = [ 1, 2, 1, 3] . Add x to the second element and increase x ; x= 2 , a = [ 1, 3, 1, 3] . Add x to the third element and increase x ; x= 3 , a = [ 1, 3, 3, 3] . Add x to the fourth element and increase x ; x= 4 , a = [ 1, 3, 3, 6] . Just increase x ; x= 5 , a = [ 1, 3, 3, 6] . Add x to the first element and increase x ; x= 6 , a = [ 6, 3, 3, 6] . We obtained the required array. Note that you can' t add x to the same element more than once.",
    "topics": [
      "math",
      "sortings",
      "two pointers"
    ],
    "id": "1374D"
  },
  {
    "title": "Multiply by 2, divide by 6",
    "url": "https://codeforces.com/problemset/problem/1374/B",
    "history": "You are given an integer n . In one move, you can either multiply n by two or divide n by 6 ( if it is divisible by 6 without the remainder) . Your task is to find the minimum number of moves needed to obtain 1 from n or determine if it' s impossible to do that. You have to answer t independent test cases.",
    "input": "The first line of the input contains one integer t ( 1 \u2264 t \u2264 2 \u00b7 10^ 4 ) \u2014 the number of test cases. Then t test cases follow. The only line of the test case contains one integer n ( 1 \u2264 n \u2264 10^ 9 ) .",
    "output": "For each test case, print the answer \u2014 the minimum number of moves needed to obtain 1 from n if it' s possible to do that or - 1 if it' s impossible to obtain 1 from n .",
    "note": "Consider the sixth test case of the example. The answer can be obtained by the following sequence of moves from the given integer 15116544 : Divide by 6 and get 2519424 ; divide by 6 and get 419904 ; divide by 6 and get 69984 ; divide by 6 and get 11664 ; multiply by 2 and get 23328 ; divide by 6 and get 3888 ; divide by 6 and get 648 ; divide by 6 and get 108 ; multiply by 2 and get 216 ; divide by 6 and get 36 ; divide by 6 and get 6 ; divide by 6 and get 1 .",
    "topics": [
      "math"
    ],
    "id": "1374B"
  },
  {
    "title": "Required Remainder",
    "url": "https://codeforces.com/problemset/problem/1374/A",
    "history": "You are given three integers x, y and n . Your task is to find the maximum integer k such that 0 \u2264 k \u2264 n that k x = y , where is modulo operation. Many programming languages use percent operator",
    "input": "The first line of the input contains one integer t ( 1 \u2264 t \u2264 5 \u00b7 10^ 4 ) \u2014 the number of test cases. The next t lines contain test cases. The only line of the test case contains three integers x, y and n ( 2 \u2264 x \u2264 10^ 9; 0 \u2264 y < x; y \u2264 n \u2264 10^ 9 ) . It can be shown that such k always exists under the given constraints.",
    "output": "For each test case, print the answer \u2014 maximum non- negative integer k such that 0 \u2264 k \u2264 n and k x = y . It is guaranteed that the answer always exists.",
    "note": "In the first test case of the example, the answer is 12339 = 7 \u00b7 1762 + 5 ( thus, 12339 7 = 5 ) . It is obvious that there is no greater integer not exceeding 12345 which has the remainder 5 modulo 7 .",
    "topics": [
      "math"
    ],
    "id": "1374A"
  },
  {
    "title": "Pluses and Minuses",
    "url": "https://codeforces.com/problemset/problem/1373/C",
    "history": "You are given a string s consisting only of characters + and - . You perform some process with this string. This process can be described by the following pseudocode: res = 0for init = 0 to inf cur = init ok = true for i = 1 to | s| res = res + 1 if s[ i] = = ' + ' cur = cur + 1 else cur = cur - 1 if cur < 0 ok = false break if ok breakNote that the inf denotes infinity, and the characters of the string are numbered from 1 to | s| . You have to calculate the value of the res after the process ends.",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 1000 ) \u2014 the number of test cases. The only lines of each test case contains string s ( 1 \u2264 | s| \u2264 10^ 6 ) consisting only of characters + and - . It' s guaranteed that sum of | s| over all test cases doesn' t exceed 10^ 6 .",
    "output": "For each test case print one integer \u2014 the value of the res after the process ends.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": "1373C"
  },
  {
    "title": "Donut Shops",
    "url": "https://codeforces.com/problemset/problem/1373/A",
    "history": "There are two rival donut shops. The first shop sells donuts at retail: each donut costs a dollars. The second shop sells donuts only in bulk: box of b donuts costs c dollars. So if you want to buy x donuts from this shop, then you have to buy the smallest number of boxes such that the total number of donuts in them is greater or equal to x . You want to determine two positive integer values: how many donuts can you buy so that they are strictly cheaper in the first shop than in the second shop? how many donuts can you buy so that they are strictly cheaper in the second shop than in the first shop? If any of these values doesn' t exist then that value should be equal to - 1 . If there are multiple possible answers, then print any of them. The printed values should be less or equal to 10^ 9 . It can be shown that under the given constraints such values always exist if any values exist at all.",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 1000 ) \u2014 the number of testcases. Each of the next t lines contains three integers a , b and c ( 1 \u2264 a \u2264 10^ 9 , 2 \u2264 b \u2264 10^ 9 , 1 \u2264 c \u2264 10^ 9 ) .",
    "output": "For each testcase print two positive integers. For both shops print such x that buying x donuts in this shop is strictly cheaper than buying x donuts in the other shop. x should be greater than 0 and less or equal to 10^ 9 . If there is no such x , then print - 1 . If there are multiple answers, then print any of them.",
    "note": "In the first testcase buying any number of donuts will be cheaper in the second shop. For example, for 3 or 5 donuts you' ll have to buy a box of 10 donuts for 4 dollars. 3 or 5 donuts in the first shop would cost you 15 or 25 dollars, respectively, however. For 20 donuts you' ll have to buy two boxes for 8 dollars total. Note that 3 and 5 are also valid answers for the second shop, along with many other answers. In the second testcase buying any number of donuts will be either cheaper in the first shop or the same price. 8 donuts cost 32 dollars in the first shop and 40 dollars in the second shop ( because you have to buy two boxes) . 10 donuts will cost 40 dollars in both shops, so 10 is not a valid answer for any of the shops. In the third testcase 1 donut costs 2 and 3 dollars, respectively. 2 donuts cost 4 and 3 dollars. Thus, 1 is a valid answer for the first shop and 2 is a valid answer for the second shop. In the fourth testcase 10^ 9 donuts cost 10^ 18 dollars in the first shop and 10^ 9 dollars in the second shop.",
    "topics": [
      "greedy",
      "implementation",
      "math"
    ],
    "id": "1373A"
  },
  {
    "title": "Omkar and Baseball",
    "url": "https://codeforces.com/problemset/problem/1372/C",
    "history": "Patrick likes to play baseball, but sometimes he will spend so many hours hitting home runs that his mind starts to get foggy! Patrick is sure that his scores across n sessions follow the identity permutation ( ie. in the first game he scores 1 point, in the second game he scores 2 points and so on) . However, when he checks back to his record, he sees that all the numbers are mixed up! Define a special exchange as the following: choose any subarray of the scores and permute elements such that no element of subarray gets to the same position as it was before the exchange. For example, performing a special exchange on [ 1, 2, 3] can yield [ 3, 1, 2] but it cannot yield [ 3, 2, 1] since the 2 is in the same position. Given a permutation of n integers, please help Patrick find the minimum number of special exchanges needed to make the permutation sorted! It can be proved that under given constraints this number doesn' t exceed 10^ 18 . An array a is a subarray of an array b if a can be obtained from b by deletion of several ( possibly, zero or all) elements from the beginning and several ( possibly, zero or all) elements from the end.",
    "input": "Each test contains multiple test cases. The first line contains the number of test cases t ( 1 \u2264 t \u2264 100 ) . Description of the test cases follows. The first line of each test case contains integer n ( 1 \u2264 n \u2264 2 \u00b7 10^ 5 ) \u2014 the length of the given permutation. The second line of each test case contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i\u2264 n ) \u2014 the initial permutation. It is guaranteed that the sum of n over all test cases does not exceed 2 \u00b7 10^ 5 .",
    "output": "For each test case, output one integer: the minimum number of special exchanges needed to sort the permutation.",
    "note": "In the first permutation, it is already sorted so no exchanges are needed. It can be shown that you need at least 2 exchanges to sort the second permutation. [ 3, 2, 4, 5, 1, 6, 7] Perform special exchange on range ( 1, 5 ) [ 4, 1, 2, 3, 5, 6, 7] Perform special exchange on range ( 1, 4 ) [ 1, 2, 3, 4, 5, 6, 7]",
    "topics": [
      "constructive algorithms",
      "math"
    ],
    "id": "1372C"
  },
  {
    "title": "Omkar and Last Class of Math",
    "url": "https://codeforces.com/problemset/problem/1372/B",
    "history": "In Omkar' s last class of math, he learned about the least common multiple, or LCM . LCM( a, b) is the smallest positive integer x which is divisible by both a and b . Omkar, having a laudably curious mind, immediately thought of a problem involving the LCM operation: given an integer n , find positive integers a and b such that a + b = n and LCM( a, b) is the minimum value possible. Can you help Omkar solve his ludicrously challenging math problem?",
    "input": "Each test contains multiple test cases. The first line contains the number of test cases t ( 1 \u2264 t \u2264 10 ) . Description of the test cases follows. Each test case consists of a single integer n ( 2 \u2264 n \u2264 10^ 9 ) .",
    "output": "For each test case, output two positive integers a and b , such that a + b = n and LCM( a, b) is the minimum possible.",
    "note": "For the first test case, the numbers we can choose are 1, 3 or 2, 2 . LCM( 1, 3) = 3 and LCM( 2, 2) = 2 , so we output 2 2 . For the second test case, the numbers we can choose are 1, 5 , 2, 4 , or 3, 3 . LCM( 1, 5) = 5 , LCM( 2, 4) = 4 , and LCM( 3, 3) = 3 , so we output 3 3 . For the third test case, LCM( 3, 6) = 6 . It can be shown that there are no other pairs of numbers which sum to 9 that have a lower LCM .",
    "topics": [
      "greedy",
      "math",
      "number theory"
    ],
    "id": "1372B"
  },
  {
    "title": "Asterism (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1371/E2",
    "history": "This is the hard version of the problem. The difference between versions is the constraints on n and a_ i . You can make hacks only if all versions of the problem are solved. First, Aoi came up with the following idea for the competitive programming problem: Yuzu is a girl who collecting candies. Originally, she has x candies. There are also n enemies numbered with integers from 1 to n . Enemy i has a_ i candies. Yuzu is going to determine a permutation P . A permutation is an array consisting of n distinct integers from 1 to n in arbitrary order. For example, { 2, 3, 1, 5, 4} is a permutation, but { 1, 2, 2} is not a permutation ( 2 appears twice in the array) and { 1, 3, 4} is also not a permutation ( because n= 3 but there is the number 4 in the array) . After that, she will do n duels with the enemies with the following rules: If Yuzu has equal or more number of candies than enemy P_ i , she wins the duel and gets 1 candy. Otherwise, she loses the duel and gets nothing. The candy which Yuzu gets will be used in the next duels. Yuzu wants to win all duels. How many valid permutations P exist? This problem was easy and wasn' t interesting for Akari, who is a friend of Aoi. And Akari made the following problem from the above idea: Let' s define f( x) as the number of valid permutations for the integer x . You are given n , a and a prime number p \u2264 n . Let' s call a positive integer x good, if the value f( x) is not divisible by p . Find all good integers x . Your task is to solve this problem made by Akari.",
    "input": "The first line contains two integers n , p ( 2 \u2264 p \u2264 n \u2264 10^ 5) . It is guaranteed, that the number p is prime ( it has exactly two divisors 1 and p ) . The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 9) .",
    "output": "In the first line, print the number of good integers x . In the second line, output all good integers x in the ascending order. It is guaranteed that the number of good integers x does not exceed 10^ 5 .",
    "note": "In the first test, p= 2 . If x \u2264 2 , there are no valid permutations for Yuzu. So f( x) = 0 for all x \u2264 2 . The number 0 is divisible by 2 , so all integers x \u2264 2 are not good. If x = 3 , { 1, 2, 3} is the only valid permutation for Yuzu. So f( 3) = 1 , so the number 3 is good. If x = 4 , { 1, 2, 3} , { 1, 3, 2} , { 2, 1, 3} , { 2, 3, 1} are all valid permutations for Yuzu. So f( 4) = 4 , so the number 4 is not good. If x \u2265 5 , all 6 permutations are valid for Yuzu. So f( x) = 6 for all x \u2265 5 , so all integers x \u2265 5 are not good. So, the only good number is 3 . In the third test, for all positive integers x the value f( x) is divisible by p = 3 .",
    "topics": [
      "binary search",
      "combinatorics",
      "dp",
      "math",
      "number theory",
      "sortings"
    ],
    "id": "1371E2"
  },
  {
    "title": "Asterism (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1371/E1",
    "history": "This is the easy version of the problem. The difference between versions is the constraints on n and a_ i . You can make hacks only if all versions of the problem are solved. First, Aoi came up with the following idea for the competitive programming problem: Yuzu is a girl who collecting candies. Originally, she has x candies. There are also n enemies numbered with integers from 1 to n . Enemy i has a_ i candies. Yuzu is going to determine a permutation P . A permutation is an array consisting of n distinct integers from 1 to n in arbitrary order. For example, { 2, 3, 1, 5, 4} is a permutation, but { 1, 2, 2} is not a permutation ( 2 appears twice in the array) and { 1, 3, 4} is also not a permutation ( because n= 3 but there is the number 4 in the array) . After that, she will do n duels with the enemies with the following rules: If Yuzu has equal or more number of candies than enemy P_ i , she wins the duel and gets 1 candy. Otherwise, she loses the duel and gets nothing. The candy which Yuzu gets will be used in the next duels. Yuzu wants to win all duels. How many valid permutations P exist? This problem was easy and wasn' t interesting for Akari, who is a friend of Aoi. And Akari made the following problem from the above idea: Let' s define f( x) as the number of valid permutations for the integer x . You are given n , a and a prime number p \u2264 n . Let' s call a positive integer x good, if the value f( x) is not divisible by p . Find all good integers x . Your task is to solve this problem made by Akari.",
    "input": "The first line contains two integers n , p ( 2 \u2264 p \u2264 n \u2264 2000) . It is guaranteed, that the number p is prime ( it has exactly two divisors 1 and p ) . The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 2000) .",
    "output": "In the first line, print the number of good integers x . In the second line, output all good integers x in the ascending order. It is guaranteed that the number of good integers x does not exceed 10^ 5 .",
    "note": "In the first test, p= 2 . If x \u2264 2 , there are no valid permutations for Yuzu. So f( x) = 0 for all x \u2264 2 . The number 0 is divisible by 2 , so all integers x \u2264 2 are not good. If x = 3 , { 1, 2, 3} is the only valid permutation for Yuzu. So f( 3) = 1 , so the number 3 is good. If x = 4 , { 1, 2, 3} , { 1, 3, 2} , { 2, 1, 3} , { 2, 3, 1} are all valid permutations for Yuzu. So f( 4) = 4 , so the number 4 is not good. If x \u2265 5 , all 6 permutations are valid for Yuzu. So f( x) = 6 for all x \u2265 5 , so all integers x \u2265 5 are not good. So, the only good number is 3 . In the third test, for all positive integers x the value f( x) is divisible by p = 3 .",
    "topics": [
      "binary search",
      "brute force",
      "combinatorics",
      "math",
      "number theory",
      "sortings"
    ],
    "id": "1371E1"
  },
  {
    "title": "A Cookie for You",
    "url": "https://codeforces.com/problemset/problem/1371/C",
    "history": "Anna is a girl so brave that she is loved by everyone in the city and citizens love her cookies. She is planning to hold a party with cookies. Now she has a vanilla cookies and b chocolate cookies for the party. She invited n guests of the first type and m guests of the second type to the party. They will come to the party in some order. After coming to the party, each guest will choose the type of cookie ( vanilla or chocolate) to eat. There is a difference in the way how they choose that type: If there are v vanilla cookies and c chocolate cookies at the moment, when the guest comes, then if the guest of the first type: if v> c the guest selects a vanilla cookie. Otherwise, the guest selects a chocolate cookie. if the guest of the second type: if v> c the guest selects a chocolate cookie. Otherwise, the guest selects a vanilla cookie. After that: If there is at least one cookie of the selected type, the guest eats one. Otherwise ( there are no cookies of the selected type) , the guest gets angry and returns to home. Anna wants to know if there exists some order of guests, such that no one guest gets angry. Your task is to answer her question.",
    "input": "The input consists of multiple test cases. The first line contains a single integer t ( 1 \u2264 t \u2264 1000 ) \u2014 the number of test cases. Next t lines contain descriptions of test cases. For each test case, the only line contains four integers a , b , n , m ( 0 \u2264 a, b, n, m \u2264 10^ 18, n+ m = \u0338 0 ) .",
    "output": "For each test case, print the answer in one line. If there exists at least one valid order, print \" Yes\" . Otherwise, print \" No\" . You can print each letter in any case ( upper or lower) .",
    "note": "In the first test case, let' s consider the order { 1, 2, 2} of types of guests. Then: The first guest eats a chocolate cookie. After that, there are 2 vanilla cookies and 1 chocolate cookie. The second guest eats a chocolate cookie. After that, there are 2 vanilla cookies and 0 chocolate cookies. The last guest selects a chocolate cookie, but there are no chocolate cookies. So, the guest gets angry. So, this order can' t be chosen by Anna. Let' s consider the order { 2, 2, 1} of types of guests. Then: The first guest eats a vanilla cookie. After that, there is 1 vanilla cookie and 2 chocolate cookies. The second guest eats a vanilla cookie. After that, there are 0 vanilla cookies and 2 chocolate cookies. The last guest eats a chocolate cookie. After that, there are 0 vanilla cookies and 1 chocolate cookie. So, the answer to this test case is \" Yes\" . In the fifth test case, it is illustrated, that the number of cookies ( a + b ) can be equal to zero, but the number of guests ( n + m ) can' t be equal to zero. In the sixth test case, be careful about the overflow of 32 - bit integer type.",
    "topics": [
      "greedy",
      "implementation",
      "math"
    ],
    "id": "1371C"
  },
  {
    "title": "Magical Calendar",
    "url": "https://codeforces.com/problemset/problem/1371/B",
    "history": "A competitive eater, Alice is scheduling some practices for an eating contest on a magical calendar. The calendar is unusual because a week contains not necessarily 7 days! In detail, she can choose any integer k which satisfies 1 \u2264 k \u2264 r , and set k days as the number of days in a week. Alice is going to paint some n consecutive days on this calendar. On this calendar, dates are written from the left cell to the right cell in a week. If a date reaches the last day of a week, the next day' s cell is the leftmost cell in the next ( under) row. She wants to make all of the painted cells to be connected by side. It means, that for any two painted cells there should exist at least one sequence of painted cells, started in one of these cells, and ended in another, such that any two consecutive cells in this sequence are connected by side. Alice is considering the shape of the painted cells. Two shapes are the same if there exists a way to make them exactly overlapped using only parallel moves, parallel to the calendar' s sides. For example, in the picture, a week has 4 days and Alice paints 5 consecutive days. [ 1] and [ 2] are different shapes, but [ 1] and [ 3] are equal shapes. Alice wants to know how many possible shapes exists if she set how many days a week has and choose consecutive n days and paints them in calendar started in one of the days of the week. As was said before, she considers only shapes, there all cells are connected by side.",
    "input": "The input consists of multiple test cases. The first line contains a single integer t ( 1 \u2264 t \u2264 1000 ) \u2014 the number of test cases. Next t lines contain descriptions of test cases. For each test case, the only line contains two integers n , r ( 1 \u2264 n \u2264 10^ 9, 1 \u2264 r \u2264 10^ 9 ) .",
    "output": "For each test case, print a single integer \u2014 the answer to the problem. Please note, that the answer for some test cases won' t fit into 32 - bit integer type, so you should use at least 64 - bit integer type in your programming language.",
    "note": "In the first test case, Alice can set 1, 2, 3 or 4 days as the number of days in a week. There are 6 possible paintings shown in the picture, but there are only 4 different shapes. So, the answer is 4 . Notice that the last example in the picture is an invalid painting because all cells are not connected by sides. In the last test case, be careful with the overflow issue, described in the output format.",
    "topics": [
      "math"
    ],
    "id": "1371B"
  },
  {
    "title": "Magical Sticks",
    "url": "https://codeforces.com/problemset/problem/1371/A",
    "history": "A penguin Rocher has n sticks. He has exactly one stick with length i for all 1 \u2264 i \u2264 n . He can connect some sticks. If he connects two sticks that have lengths a and b , he gets one stick with length a + b . Two sticks, that were used in the operation disappear from his set and the new connected stick appears in his set and can be used for the next connections. He wants to create the maximum number of sticks that have the same length. It is not necessary to make all sticks have the same length, some sticks can have the other length. How many sticks with the equal length he can create?",
    "input": "The input consists of multiple test cases. The first line contains a single integer t ( 1 \u2264 t \u2264 1000 ) \u2014 the number of test cases. Next t lines contain descriptions of test cases. For each test case, the only line contains a single integer n ( 1 \u2264 n \u2264 10^ 9 ) .",
    "output": "For each test case, print a single integer \u2014 the answer to the problem.",
    "note": "In the third case, he can connect two sticks with lengths 1 and 2 and he will get one stick with length 3 . So, he will have two sticks with lengths 3 . In the fourth case, he can connect two sticks with lengths 1 and 3 and he will get one stick with length 4 . After that, he will have three sticks with lengths { 2, 4, 4} , so two sticks have the same length, and one stick has the other length.",
    "topics": [
      "math"
    ],
    "id": "1371A"
  },
  {
    "title": "Number Game",
    "url": "https://codeforces.com/problemset/problem/1370/C",
    "history": "Ashishgup and FastestFinger play a game. They start with a number n and play in turns. In each turn, a player can make any one of the following moves: Divide n by any of its odd divisors greater than 1 . Subtract 1 from n if n is greater than 1 . Divisors of a number include the number itself. The player who is unable to make a move loses the game. Ashishgup moves first. Determine the winner of the game if both of them play optimally.",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 100 ) \u2014 the number of test cases. The description of the test cases follows. The only line of each test case contains a single integer \u2014 n ( 1 \u2264 n \u2264 10^ 9 ) .",
    "output": "For each test case, print \" Ashishgup\" if he wins, and \" FastestFinger\" otherwise ( without quotes) .",
    "note": "In the first test case, n = 1 , Ashishgup cannot make a move. He loses. In the second test case, n = 2 , Ashishgup subtracts 1 on the first move. Now n = 1 , FastestFinger cannot make a move, so he loses. In the third test case, n = 3 , Ashishgup divides by 3 on the first move. Now n = 1 , FastestFinger cannot make a move, so he loses. In the last test case, n = 12 , Ashishgup divides it by 3 . Now n = 4 , FastestFinger is forced to subtract 1 , and Ashishgup gets 3 , so he wins by dividing it by 3 .",
    "topics": [
      "games",
      "math",
      "number theory"
    ],
    "id": "1370C"
  },
  {
    "title": "GCD Compression",
    "url": "https://codeforces.com/problemset/problem/1370/B",
    "history": "Ashish has an array a of consisting of 2n positive integers. He wants to compress a into an array b of size n- 1 . To do this, he first discards exactly 2 ( any two) elements from a . He then performs the following operation until there are no elements left in a : Remove any two elements from a and append their sum to b . The compressed array b has to have a special property. The greatest common divisor ( gcd ) of all its elements should be greater than 1 . Recall that the gcd of an array of positive integers is the biggest integer that is a divisor of all integers in the array. It can be proven that it is always possible to compress array a into an array b of size n- 1 such that gcd( b_ 1, b_ 2. . . , b_ n- 1) > 1 . Help Ashish find a way to do so.",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 10 ) \u2014 the number of test cases. The description of the test cases follows. The first line of each test case contains a single integer n ( 2 \u2264 n \u2264 1000 ) . The second line of each test case contains 2n integers a_ 1, a_ 2, . . . , a_ 2n ( 1 \u2264 a_ i \u2264 1000 ) \u2014 the elements of the array a .",
    "output": "For each test case, output n- 1 lines \u2014 the operations performed to compress the array a to the array b . The initial discard of the two elements is not an operation, you don' t need to output anything about it. The i - th line should contain two integers, the indices ( 1 \u2014based) of the two elements from the array a that are used in the i - th operation. All 2n- 2 indices should be distinct integers from 1 to 2n . You don' t need to output two initially discarded elements from a . If there are multiple answers, you can find any.",
    "note": "In the first test case, b = { 3+ 6, 4+ 5} = { 9, 9} and gcd( 9, 9) = 9 . In the second test case, b = { 9+ 10} = { 19} and gcd( 19) = 19 . In the third test case, b = { 1+ 2, 3+ 3, 4+ 5, 90+ 3} = { 3, 6, 9, 93} and gcd( 3, 6, 9, 93) = 3 .",
    "topics": [
      "constructive algorithms",
      "math",
      "number theory"
    ],
    "id": "1370B"
  },
  {
    "title": "Maximum GCD",
    "url": "https://codeforces.com/problemset/problem/1370/A",
    "history": "Let' s consider all integers in the range from 1 to n ( inclusive) . Among all pairs of distinct integers in this range, find the maximum possible greatest common divisor of integers in pair. Formally, find the maximum value of gcd( a, b) , where 1 \u2264 a < b \u2264 n . The greatest common divisor, gcd( a, b) , of two positive integers a and b is the biggest integer that is a divisor of both a and b .",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 100 ) \u2014 the number of test cases. The description of the test cases follows. The only line of each test case contains a single integer n ( 2 \u2264 n \u2264 10^ 6 ) .",
    "output": "For each test case, output the maximum value of gcd( a, b) among all 1 \u2264 a < b \u2264 n .",
    "note": "In the first test case, gcd( 1, 2) = gcd( 2, 3) = gcd( 1, 3) = 1 . In the second test case, 2 is the maximum possible value, corresponding to gcd( 2, 4) .",
    "topics": [
      "greedy",
      "implementation",
      "math",
      "number theory"
    ],
    "id": "1370A"
  },
  {
    "title": "TediousLee",
    "url": "https://codeforces.com/problemset/problem/1369/D",
    "history": "Lee tried so hard to make a good div. 2 D problem to balance his recent contest, but it still doesn' t feel good at all. Lee invented it so tediously slow that he managed to develop a phobia about div. 2 D problem setting instead. And now he is hiding behind the bushes. . . Let' s define a Rooted Dead Bush ( RDB) of level n as a rooted tree constructed as described below. A rooted dead bush of level 1 is a single vertex. To construct an RDB of level i we, at first, construct an RDB of level i- 1 , then for each vertex u : if u has no children then we will add a single child to it; if u has one child then we will add two children to it; if u has more than one child, then we will skip it. Rooted Dead Bushes of level 1 , 2 and 3 . Let' s define a claw as a rooted tree with four vertices: one root vertex ( called also as center) with three children. It looks like a claw: The center of the claw is the vertex with label 1 . Lee has a Rooted Dead Bush of level n . Initially, all vertices of his RDB are green. In one move, he can choose a claw in his RDB, if all vertices in the claw are green and all vertices of the claw are children of its center, then he colors the claw' s vertices in yellow. He' d like to know the maximum number of yellow vertices he can achieve. Since the answer might be very large, print it modulo 10^ 9+ 7 .",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. Next t lines contain test cases \u2014 one per line. The first line of each test case contains one integer n ( 1 \u2264 n \u2264 2 \u00b7 10^ 6 ) \u2014 the level of Lee' s RDB.",
    "output": "For each test case, print a single integer \u2014 the maximum number of yellow vertices Lee can make modulo 10^ 9 + 7 .",
    "note": "It' s easy to see that the answer for RDB of level 1 or 2 is 0 . The answer for RDB of level 3 is 4 since there is only one claw we can choose: { 1, 2, 3, 4} . The answer for RDB of level 4 is 4 since we can choose either single claw { 1, 3, 2, 4} or single claw { 2, 7, 5, 6} . There are no other claws in the RDB of level 4 ( for example, we can' t choose { 2, 1, 7, 6} , since 1 is not a child of center vertex 2 ) . Rooted Dead Bush of level 4.",
    "topics": [
      "dp",
      "graphs",
      "greedy",
      "math",
      "trees"
    ],
    "id": "1369D"
  },
  {
    "title": "RationalLee",
    "url": "https://codeforces.com/problemset/problem/1369/C",
    "history": "Lee just became Master in Codeforces, and so, he went out to buy some gifts for his friends. He bought n integers, now it' s time to distribute them between his friends rationally. . . Lee has n integers a_ 1, a_ 2, . . . , a_ n in his backpack and he has k friends. Lee would like to distribute all integers in his backpack between his friends, such that the i - th friend will get exactly w_ i integers and each integer will be handed over to exactly one friend. Let' s define the happiness of a friend as the sum of the maximum and the minimum integer he' ll get. Lee would like to make his friends as happy as possible, in other words, he' d like to maximize the sum of friends' happiness. Now he asks you to calculate the maximum sum of friends' happiness.",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. Next 3t lines contain test cases \u2014 one per three lines. The first line of each test case contains two integers n and k ( 1 \u2264 n \u2264 2 \u00b7 10^ 5 ; 1 \u2264 k \u2264 n ) \u2014 the number of integers Lee has and the number of Lee' s friends. The second line of each test case contains n integers a_ 1, a_ 2, . . . , a_ n ( - 10^ 9 \u2264 a_ i \u2264 10^ 9 ) \u2014 the integers Lee has. The third line contains k integers w_ 1, w_ 2, . . . , w_ k ( 1 \u2264 w_ i \u2264 n ; w_ 1 + w_ 2 + . . . + w_ k = n ) \u2014 the number of integers Lee wants to give to each friend. It' s guaranteed that the sum of n over test cases is less than or equal to 2 \u00b7 10^ 5 .",
    "output": "For each test case, print a single integer \u2014 the maximum sum of happiness Lee can achieve.",
    "note": "In the first test case, Lee should give the greatest integer to the first friend ( his happiness will be 17 + 17 ) and remaining integers to the second friend ( his happiness will be 13 + 1 ) . In the second test case, Lee should give { 10, 10, 11} to the first friend and to the second friend, so the total happiness will be equal to ( 11 + 10) + ( 11 + 10) In the third test case, Lee has four friends and four integers, it doesn' t matter how he distributes the integers between his friends.",
    "topics": [
      "greedy",
      "math",
      "sortings",
      "two pointers"
    ],
    "id": "1369C"
  },
  {
    "title": "FashionabLee",
    "url": "https://codeforces.com/problemset/problem/1369/A",
    "history": "Lee is going to fashionably decorate his house for a party, using some regular convex polygons. . . Lee thinks a regular n - sided ( convex) polygon is beautiful if and only if he can rotate it in such a way that at least one of its edges is parallel to the OX - axis and at least one of its edges is parallel to the OY - axis at the same time. Recall that a regular n - sided polygon is a convex polygon with n vertices such that all the edges and angles are equal. Now he is shopping: the market has t regular polygons. For each of them print YES if it is beautiful and NO otherwise.",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of polygons in the market. Each of the next t lines contains a single integer n_ i ( 3 \u2264 n_ i \u2264 10^ 9 ) : it means that the i - th polygon is a regular n_ i - sided polygon.",
    "output": "For each polygon, print YES if it' s beautiful or NO otherwise ( case insensitive) .",
    "note": "In the example, there are 4 polygons in the market. It' s easy to see that an equilateral triangle ( a regular 3 - sided polygon) is not beautiful, a square ( a regular 4 - sided polygon) is beautiful and a regular 12 - sided polygon ( is shown below) is beautiful as well.",
    "topics": [
      "geometry",
      "math"
    ],
    "id": "1369A"
  },
  {
    "title": "Lamps on a Circle",
    "url": "https://codeforces.com/problemset/problem/1368/F",
    "history": "This is an interactive problem. John and his imaginary friend play a game. There are n lamps arranged in a circle. Lamps are numbered 1 through n in clockwise order, that is, lamps i and i + 1 are adjacent for any i = 1, . . . , n - 1 , and also lamps n and 1 are adjacent. Initially all lamps are turned off. John and his friend take turns, with John moving first. On his turn John can choose to terminate the game, or to make a move. To make a move, John can choose any positive number k and turn any k lamps of his choosing on. In response to this move, John' s friend will choose k consecutive lamps and turn all of them off ( the lamps in the range that were off before this move stay off) . Note that the value of k is the same as John' s number on his last move. For example, if n = 5 and John have just turned three lamps on, John' s friend may choose to turn off lamps 1, 2, 3 , or 2, 3, 4 , or 3, 4, 5 , or 4, 5, 1 , or 5, 1, 2 . After this, John may choose to terminate or move again, and so on. However, John can not make more than 10^ 4 moves. John wants to maximize the number of lamps turned on at the end of the game, while his friend wants to minimize this number. Your task is to provide a strategy for John to achieve optimal result. Your program will play interactively for John against the jury' s interactor program playing for John' s friend. Suppose there are n lamps in the game. Let R( n) be the number of turned on lamps at the end of the game if both players act optimally. Your program has to terminate the game with at least R( n) turned on lamps within 10^ 4 moves. Refer to Interaction section below for interaction details. For technical reasons hacks for this problem are disabled. InteractionInitially your program will be fed a single integer n ( 1 \u2264 n \u2264 1000 ) \u2014 the number of lamps in the game. Then the interactor will wait for your actions. To make a move, print a line starting with an integer k ( 1 \u2264 k \u2264 n ) , followed by k distinct integers l_ 1, . . . , l_ k ( 1 \u2264 l_ i \u2264 n ) \u2014 indices of lamps you want to turn on. The indices may be printed in any order. It is allowed to try to turn on a lamp that is already on ( although this will have no effect) . If your move was invalid for any reason, or if you have made more than 10^ 4 moves, the interactor will reply with a line containing a single integer - 1 . Otherwise, the reply will be a line containing a single integer x ( 1 \u2264 x \u2264 n) , meaning that the response was to turn off k consecutive lamps starting from x in clockwise order. To terminate the game instead of making a move, print a line containing a single integer 0 . The test will be passed if at this point there are at least R( n) lamps turned on ( note that neither R( n) , nor the verdict received are not communicated to your program in any way) . This action does not count towards the number of moves ( that is, it is legal to terminate the game after exactly 10^ 4 moves) . To receive the correct verdict, your program should terminate immediately after printing 0 , or after receiving - 1 as a response. Don' t forget to flush your output after every action.",
    "input": "",
    "output": "",
    "note": "When n = 3 , any John' s move can be reversed, thus R( 3) = 0 , and terminating the game immediately is correct. R( 4) = 1 , and one strategy to achieve this result is shown in the second sample case. Blank lines in sample interactions are for clarity and should not be printed.",
    "topics": [
      "games",
      "implementation",
      "interactive",
      "math"
    ],
    "id": "1368F"
  },
  {
    "title": "AND, OR and square sum",
    "url": "https://codeforces.com/problemset/problem/1368/D",
    "history": "Gottfried learned about binary number representation. He then came up with this task and presented it to you. You are given a collection of n non- negative integers a_ 1, . . . , a_ n . You are allowed to perform the following operation: choose two distinct indices 1 \u2264 i, j \u2264 n . If before the operation a_ i = x , a_ j = y , then after the operation a_ i = x AND y , a_ j = x OR y , where AND and OR are bitwise AND and OR respectively ( refer to the Notes section for formal description) . The operation may be performed any number of times ( possibly zero) . After all operations are done, compute \u2211_ i= 1^ n a_ i^ 2 \u2014 the sum of squares of all a_ i . What is the largest sum of squares you can achieve?",
    "input": "The first line contains a single integer n ( 1 \u2264 n \u2264 2 \u00b7 10^ 5 ) . The second line contains n integers a_ 1, . . . , a_ n ( 0 \u2264 a_ i < 2^ 20 ) .",
    "output": "Print a single integer \u2014 the largest possible sum of squares that can be achieved after several ( possibly zero) operations.",
    "note": "In the first sample no operation can be made, thus the answer is 123^ 2 . In the second sample we can obtain the collection 1, 1, 7 , and 1^ 2 + 1^ 2 + 7^ 2 = 51 . If x and y are represented in binary with equal number of bits ( possibly with leading zeros) , then each bit of x AND y is set to 1 if and only if both corresponding bits of x and y are set to 1 . Similarly, each bit of x OR y is set to 1 if and only if at least one of the corresponding bits of x and y are set to 1 . For example, x = 3 and y = 5 are represented as 011_ 2 and 101_ 2 ( highest bit first) . Then, x AND y = 001_ 2 = 1 , and x OR y = 111_ 2 = 7 .",
    "topics": [
      "bitmasks",
      "greedy",
      "math"
    ],
    "id": "1368D"
  },
  {
    "title": "Codeforces Subsequences",
    "url": "https://codeforces.com/problemset/problem/1368/B",
    "history": "Karl likes Codeforces and subsequences. He wants to find a string of lowercase English letters that contains at least k subsequences codeforces. Out of all possible strings, Karl wants to find a shortest one. Formally, a codeforces subsequence of a string s is a subset of ten characters of s that read codeforces from left to right. For example, codeforces contains codeforces a single time, while codeforcesisawesome contains codeforces four times: codeforcesisawesome, codeforcesisawesome, codeforcesisawesome, codeforcesisawesome. Help Karl find any shortest string that contains at least k codeforces subsequences.",
    "input": "The only line contains a single integer k ( 1 \u2264 k \u2264 10^ 16) .",
    "output": "Print a shortest string of lowercase English letters that contains at least k codeforces subsequences. If there are several such strings, print any of them.",
    "note": "",
    "topics": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "math",
      "strings"
    ],
    "id": "1368B"
  },
  {
    "title": "C+=",
    "url": "https://codeforces.com/problemset/problem/1368/A",
    "history": "Leo has developed a new programming language C+ = . In C+ = , integer variables can only be changed with a \" + = \" operation that adds the right- hand side value to the left- hand side variable. For example, performing \" a + = b\" when a = 2 , b = 3 changes the value of a to 5 ( the value of b does not change) . In a prototype program Leo has two integer variables a and b, initialized with some positive values. He can perform any number of operations \" a + = b\" or \" b + = a\" . Leo wants to test handling large integers, so he wants to make the value of either a or b strictly greater than a given value n . What is the smallest number of operations he has to perform?",
    "input": "The first line contains a single integer T ( 1 \u2264 T \u2264 100 ) \u2014 the number of test cases. Each of the following T lines describes a single test case, and contains three integers a, b, n ( 1 \u2264 a, b \u2264 n \u2264 10^ 9 ) \u2014 initial values of a and b, and the value one of the variables has to exceed, respectively.",
    "output": "For each test case print a single integer \u2014 the smallest number of operations needed. Separate answers with line breaks.",
    "note": "In the first case we cannot make a variable exceed 3 in one operation. One way of achieving this in two operations is to perform \" b + = a\" twice.",
    "topics": [
      "brute force",
      "greedy",
      "implementation",
      "math"
    ],
    "id": "1368A"
  },
  {
    "title": "Social Distance",
    "url": "https://codeforces.com/problemset/problem/1367/C",
    "history": "Polycarp and his friends want to visit a new restaurant. The restaurant has n tables arranged along a straight line. People are already sitting at some tables. The tables are numbered from 1 to n in the order from left to right. The state of the restaurant is described by a string of length n which contains characters \" 1\" ( the table is occupied) and \" 0\" ( the table is empty) . Restaurant rules prohibit people to sit at a distance of k or less from each other. That is, if a person sits at the table number i , then all tables with numbers from i- k to i+ k ( except for the i - th) should be free. In other words, the absolute difference of the numbers of any two occupied tables must be strictly greater than k . For example, if n= 8 and k= 2 , then: strings \" 10010001\" , \" 10000010\" , \" 00000000\" , \" 00100000\" satisfy the rules of the restaurant; strings \" 10100100\" , \" 10011001\" , \" 11111111\" do not satisfy to the rules of the restaurant, since each of them has a pair of \" 1\" with a distance less than or equal to k= 2 . In particular, if the state of the restaurant is described by a string without \" 1\" or a string with one \" 1\" , then the requirement of the restaurant is satisfied. You are given a binary string s that describes the current state of the restaurant. It is guaranteed that the rules of the restaurant are satisfied for the string s . Find the maximum number of free tables that you can occupy so as not to violate the rules of the restaurant. Formally, what is the maximum number of \" 0\" that can be replaced by \" 1\" such that the requirement will still be satisfied? For example, if n= 6 , k= 1 , s= \" 100010\" , then the answer to the problem will be 1 , since only the table at position 3 can be occupied such that the rules are still satisfied.",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases in the test. Then t test cases follow. Each test case starts with a line containing two integers n and k ( 1 \u2264 k \u2264 n \u2264 2\u00b7 10^ 5 ) \u2014 the number of tables in the restaurant and the minimum allowed distance between two people. The second line of each test case contains a binary string s of length n consisting of \" 0\" and \" 1\" \u2014 a description of the free and occupied tables in the restaurant. The given string satisfy to the rules of the restaurant \u2014 the difference between indices of any two \" 1\" is more than k . The sum of n for all test cases in one test does not exceed 2\u00b7 10^ 5 .",
    "output": "For each test case output one integer \u2014 the number of tables that you can occupy so as not to violate the rules of the restaurant. If additional tables cannot be taken, then, obviously, you need to output 0 .",
    "note": "The first test case is explained in the statement. In the second test case, the answer is 2 , since you can choose the first and the sixth table. In the third test case, you cannot take any free table without violating the rules of the restaurant.",
    "topics": [
      "constructive algorithms",
      "greedy",
      "math"
    ],
    "id": "1367C"
  },
  {
    "title": "Even Array",
    "url": "https://codeforces.com/problemset/problem/1367/B",
    "history": "You are given an array a[ 0 . . . n- 1] of length n which consists of non- negative integers. Note that array indices start from zero. An array is called good if the parity of each index matches the parity of the element at that index. More formally, an array is good if for all i ( 0 \u2264 i \u2264 n - 1 ) the equality i 2 = a[ i] 2 holds, where x 2 is the remainder of dividing x by 2. For example, the arrays [ 0, 5, 2, 1 ] and [ 0, 17, 0, 3 ] are good, and the array [ 2, 4, 6, 7 ] is bad, because for i= 1 , the parities of i and a[ i] are different: i 2 = 1 2 = 1 , but a[ i] 2 = 4 2 = 0 . In one move, you can take any two elements of the array and swap them ( these elements are not necessarily adjacent) . Find the minimum number of moves in which you can make the array a good, or say that this is not possible.",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 1000 ) \u2014 the number of test cases in the test. Then t test cases follow. Each test case starts with a line containing an integer n ( 1 \u2264 n \u2264 40 ) \u2014 the length of the array a . The next line contains n integers a_ 0, a_ 1, . . . , a_ n- 1 ( 0 \u2264 a_ i \u2264 1000 ) \u2014 the initial array.",
    "output": "For each test case, output a single integer \u2014 the minimum number of moves to make the given array a good, or - 1 if this is not possible.",
    "note": "In the first test case, in the first move, you can swap the elements with indices 0 and 1 , and in the second move, you can swap the elements with indices 2 and 3 . In the second test case, in the first move, you need to swap the elements with indices 0 and 1 . In the third test case, you cannot make the array good.",
    "topics": [
      "greedy",
      "math"
    ],
    "id": "1367B"
  },
  {
    "title": "Two Divisors",
    "url": "https://codeforces.com/problemset/problem/1366/D",
    "history": "You are given n integers a_ 1, a_ 2, . . . , a_ n . For each a_ i find its two divisors d_ 1 > 1 and d_ 2 > 1 such that ( d_ 1 + d_ 2, a_ i) = 1 ( where ( a, b) is the greatest common divisor of a and b ) or say that there is no such pair.",
    "input": "The first line contains single integer n ( 1 \u2264 n \u2264 5 \u00b7 10^ 5 ) \u2014 the size of the array a . The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 2 \u2264 a_ i \u2264 10^ 7 ) \u2014 the array a .",
    "output": "To speed up the output, print two lines with n integers in each line. The i - th integers in the first and second lines should be corresponding divisors d_ 1 > 1 and d_ 2 > 1 such that ( d_ 1 + d_ 2, a_ i) = 1 or - 1 and - 1 if there is no such pair. If there are multiple answers, print any of them.",
    "note": "Let' s look at a_ 7 = 8 . It has 3 divisors greater than 1 : 2 , 4 , 8 . As you can see, the sum of any pair of divisors is divisible by 2 as well as a_ 7 . There are other valid pairs of d_ 1 and d_ 2 for a_ 10= 24 , like ( 3, 4) or ( 8, 3) . You can print any of them.",
    "topics": [
      "constructive algorithms",
      "math",
      "number theory"
    ],
    "id": "1366D"
  },
  {
    "title": "Palindromic Paths",
    "url": "https://codeforces.com/problemset/problem/1366/C",
    "history": "You are given a matrix with n rows ( numbered from 1 to n ) and m columns ( numbered from 1 to m ) . A number a_ i, j is written in the cell belonging to the i - th row and the j - th column, each number is either 0 or 1 . A chip is initially in the cell ( 1, 1) , and it will be moved to the cell ( n, m) . During each move, it either moves to the next cell in the current row, or in the current column ( if the current cell is ( x, y) , then after the move it can be either ( x + 1, y) or ( x, y + 1) ) . The chip cannot leave the matrix. Consider each path of the chip from ( 1, 1) to ( n, m) . A path is called palindromic if the number in the first cell is equal to the number in the last cell, the number in the second cell is equal to the number in the second- to- last cell, and so on. Your goal is to change the values in the minimum number of cells so that every path is palindromic.",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 200 ) \u2014 the number of test cases. The first line of each test case contains two integers n and m ( 2 \u2264 n, m \u2264 30 ) \u2014 the dimensions of the matrix. Then n lines follow, the i - th line contains m integers a_ i, 1 , a_ i, 2 , . . . , a_ i, m ( 0 \u2264 a_ i, j\u2264 1 ) .",
    "output": "For each test case, print one integer \u2014 the minimum number of cells you have to change so that every path in the matrix is palindromic.",
    "note": "The resulting matrices in the first three test cases: [ 1 1; 0 1 ] [ 0 0 0; 0 0 0 ] [ 1 0 1 1 1 1 1; 0 1 1 0 1 1 0; 1 1 1 1 1 0 1 ]",
    "topics": [
      "greedy",
      "math"
    ],
    "id": "1366C"
  },
  {
    "title": "Shuffle",
    "url": "https://codeforces.com/problemset/problem/1366/B",
    "history": "You are given an array consisting of n integers a_ 1 , a_ 2 , . . . , a_ n . Initially a_ x = 1 , all other elements are equal to 0 . You have to perform m operations. During the i - th operation, you choose two indices c and d such that l_ i \u2264 c, d \u2264 r_ i , and swap a_ c and a_ d . Calculate the number of indices k such that it is possible to choose the operations so that a_ k = 1 in the end.",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 100 ) \u2014 the number of test cases. Then the description of t testcases follow. The first line of each test case contains three integers n , x and m ( 1 \u2264 n \u2264 10^ 9 ; 1 \u2264 m \u2264 100 ; 1 \u2264 x \u2264 n ) . Each of next m lines contains the descriptions of the operations; the i - th line contains two integers l_ i and r_ i ( 1 \u2264 l_ i \u2264 r_ i \u2264 n ) .",
    "output": "For each test case print one integer \u2014 the number of indices k such that it is possible to choose the operations so that a_ k = 1 in the end.",
    "note": "In the first test case, it is possible to achieve a_ k = 1 for every k . To do so, you may use the following operations: swap a_ k and a_ 4 ; swap a_ 2 and a_ 2 ; swap a_ 5 and a_ 5 . In the second test case, only k = 1 and k = 2 are possible answers. To achieve a_ 1 = 1 , you have to swap a_ 1 and a_ 1 during the second operation. To achieve a_ 2 = 1 , you have to swap a_ 1 and a_ 2 during the second operation.",
    "topics": [
      "math",
      "two pointers"
    ],
    "id": "1366B"
  },
  {
    "title": "Shovels and Swords",
    "url": "https://codeforces.com/problemset/problem/1366/A",
    "history": "Polycarp plays a well- known computer game ( we won' t mention its name) . In this game, he can craft tools of two types \u2014 shovels and swords. To craft a shovel, Polycarp spends two sticks and one diamond; to craft a sword, Polycarp spends two diamonds and one stick. Each tool can be sold for exactly one emerald. How many emeralds can Polycarp earn, if he has a sticks and b diamonds?",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 1000 ) \u2014 the number of test cases. The only line of each test case contains two integers a and b ( 0 \u2264 a, b \u2264 10^ 9 ) \u2014 the number of sticks and the number of diamonds, respectively.",
    "output": "For each test case print one integer \u2014 the maximum number of emeralds Polycarp can earn.",
    "note": "In the first test case Polycarp can earn two emeralds as follows: craft one sword and one shovel. In the second test case Polycarp does not have any diamonds, so he cannot craft anything.",
    "topics": [
      "binary search",
      "greedy",
      "math"
    ],
    "id": "1366A"
  },
  {
    "title": "Secure Password",
    "url": "https://codeforces.com/problemset/problem/1365/G",
    "history": "This is an interactive problem. Ayush devised yet another scheme to set the password of his lock. The lock has n slots where each slot can hold any non- negative integer. The password P is a sequence of n integers, i - th element of which goes into the i - th slot of the lock. To set the password, Ayush comes up with an array A of n integers each in the range [ 0, 2^ 63- 1] . He then sets the i - th element of P as the bitwise OR of all integers in the array except A_ i . You need to guess the password. To make a query, you can choose a non- empty subset of indices of the array and ask the bitwise OR all elements of the array with index in this subset. You can ask no more than 13 queries. InteractionTo ask a query print a single line: In the beginning print \" ? c \" ( without quotes) where c ( 1 \u2264 c \u2264 n) denotes the size of the subset of indices being queried, followed by c distinct space- separated integers in the range [ 1, n] . For each query, you will receive an integer x \u2014 the bitwise OR of values in the array among all the indices queried. If the subset of indices queried is invalid or you exceeded the number of queries then you will get x = - 1 . In this case, you should terminate the program immediately. When you have guessed the password, print a single line \" ! \" ( without quotes) , followed by n space- separated integers \u2014 the password sequence. Guessing the password does not count towards the number of queries asked. The interactor is not adaptive. The array A does not change with queries. After printing a query do not forget to output the end of the line and flush the output. Otherwise, you will get Idleness limit exceeded. To do this, use: fflush( stdout) or cout. flush( ) in C+ + ; System. out. flush( ) in Java; flush( output) in Pascal; stdout. flush( ) in Python; see the documentation for other languages. HacksTo hack the solution, use the following test format: On the first line print a single integer n ( 2 \u2264 n \u2264 1000) \u2014 the number of slots in the lock. The next line should contain n space- separated integers in the range [ 0, 2^ 63 - 1] \u2014 the array A .",
    "input": "The first line of input contains one integer n ( 2 \u2264 n \u2264 1000) \u2014 the number of slots in the lock.",
    "output": "",
    "note": "The array A in the example is { 1, 2, 4} . The first element of the password is bitwise OR of A_ 2 and A_ 3 , the second element is bitwise OR of A_ 1 and A_ 3 and the third element is bitwise OR of A_ 1 and A_ 2 . Hence the password sequence is { 6, 5, 3} .",
    "topics": [
      "bitmasks",
      "combinatorics",
      "constructive algorithms",
      "interactive",
      "math"
    ],
    "id": "1365G"
  },
  {
    "title": "Guess The Maximums",
    "url": "https://codeforces.com/problemset/problem/1363/D",
    "history": "This is an interactive problem. Ayush devised a new scheme to set the password of his lock. The lock has k slots where each slot can hold integers from 1 to n . The password P is a sequence of k integers each in the range [ 1, n] , i - th element of which goes into the i - th slot of the lock. To set the password of his lock, Ayush comes up with an array A of n integers each in the range [ 1, n] ( not necessarily distinct) . He then picks k non- empty mutually disjoint subsets of indices S_ 1, S_ 2, . . . , S_ k ( S_ i i = \u0338 j\u2229 S_ j = \u2205) and sets his password as P_ i = max_ j \u2208\u0338 S_ i A[ j] . In other words, the i - th integer in the password is equal to the maximum over all elements of A whose indices do not belong to S_ i . You are given the subsets of indices chosen by Ayush. You need to guess the password. To make a query, you can choose a non- empty subset of indices of the array and ask the maximum of all elements of the array with index in this subset. You can ask no more than 12 queries. InteractionTo ask a query print a single line: In the beginning print \" ? c \" ( without quotes) where c ( 1 \u2264 c \u2264 n) denotes the size of the subset of indices being queried, followed by c distinct space- separated integers in the range [ 1, n] . For each query, you will receive an integer x \u2014 the maximum of value in the array among all the indices queried. If the subset of indices queried is invalid or you exceeded the number of queries ( for example one of the indices is greater than n ) then you will get x = - 1 . In this case, you should terminate the program immediately. When you have guessed the password, print a single line \" ! \" ( without quotes) , followed by k space- separated integers \u2014 the password sequence. Guessing the password does not count towards the number of queries asked. After this, you should read a string. If you guess the password correctly, you will receive the string \" Correct\" . In this case, you should continue solving the remaining test cases. If the guessed password is incorrect, you will receive the string \" Incorrect\" . In this case, you should terminate the program immediately. The interactor is not adaptive. The array A does not change with queries. After printing a query do not forget to output end of line and flush the output. Otherwise, you will get Idleness limit exceeded. To do this, use: fflush( stdout) or cout. flush( ) in C+ + ; System. out. flush( ) in Java; flush( output) in Pascal; stdout. flush( ) in Python; see documentation for other languages. HacksTo hack the solution use the following test format: The first line of the input should contain a single integer t ( 1 \u2264 t \u2264 10) \u2014 the number of test cases. The first line of each test case should contain two integers n and k ( 2 \u2264 n \u2264 1000, 1 \u2264 k \u2264 n) \u2014 the size of the array and the number of subsets. The next line should consist of n space separated integers in the range [ 1, n] \u2014 the array A . k lines should follow. The i - th line should contain an integer c ( 1 \u2264 c n) \u2014 the size of subset S_ i , followed by c distinct integers in the range [ 1, n] \u2014 indices from the subset S_ i . The intersection of any two subsets has to be empty.",
    "input": "The first line of the input contains a single integer t ( 1 \u2264 t \u2264 10) \u2014 the number of test cases. The description of the test cases follows. The first line of each test case contains two integers n and k ( 2 \u2264 n \u2264 1000, 1 \u2264 k \u2264 n) \u2014 the size of the array and the number of subsets. k lines follow. The i - th line contains an integer c ( 1 \u2264 c n) \u2014 the size of subset S_ i , followed by c distinct integers in the range [ 1, n] \u2014 indices from the subset S_ i . It is guaranteed that the intersection of any two subsets is empty.",
    "output": "",
    "note": "The array A in the example is [ 1, 2, 3, 4] . The length of the password is 2 . The first element of the password is the maximum of A[ 2] , A[ 4] ( since the first subset contains indices 1 and 3 , we take maximum over remaining indices) . The second element of the password is the maximum of A[ 1] , A[ 3] ( since the second subset contains indices 2 , 4 ) . Do not forget to read the string \" Correct\" / \" Incorrect\" after guessing the password.",
    "topics": [
      "binary search",
      "implementation",
      "interactive",
      "math"
    ],
    "id": "1363D"
  },
  {
    "title": "Odd Selection",
    "url": "https://codeforces.com/problemset/problem/1363/A",
    "history": "Shubham has an array a of size n , and wants to select exactly x elements from it, such that their sum is odd. These elements do not have to be consecutive. The elements of the array are not guaranteed to be distinct. Tell him whether he can do so.",
    "input": "The first line of the input contains a single integer t ( 1\u2264 t \u2264 100) \u2014 the number of test cases. The description of the test cases follows. The first line of each test case contains two integers n and x ( 1 \u2264 x \u2264 n \u2264 1000) \u2014 the length of the array and the number of elements you need to choose. The next line of each test case contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 1000) \u2014 elements of the array.",
    "output": "For each test case, print \" Yes\" or \" No\" depending on whether it is possible to choose x elements such that their sum is odd. You may print every letter in any case you want.",
    "note": "For 1 st case: We must select element 999 , and the sum is odd. For 2 nd case: We must select element 1000 , so overall sum is not odd. For 3 rd case: We can select element 51 . For 4 th case: We must select both elements 50 and 51 \u2014 so overall sum is odd. For 5 th case: We must select all elements \u2014 but overall sum is not odd.",
    "topics": [
      "brute force",
      "implementation",
      "math"
    ],
    "id": "1363A"
  },
  {
    "title": "Johnny and Another Rating Drop",
    "url": "https://codeforces.com/problemset/problem/1362/C",
    "history": "The last contest held on Johnny' s favorite competitive programming platform has been received rather positively. However, Johnny' s rating has dropped again! He thinks that the presented tasks are lovely, but don' t show the truth about competitors' skills. The boy is now looking at the ratings of consecutive participants written in a binary system. He thinks that the more such ratings differ, the more unfair is that such people are next to each other. He defines the difference between two numbers as the number of bit positions, where one number has zero, and another has one ( we suppose that numbers are padded with leading zeros to the same length) . For example, the difference of 5 = 101_ 2 and 14 = 1110_ 2 equals to 3 , since 0101 and 1110 differ in 3 positions. Johnny defines the unfairness of the contest as the sum of such differences counted for neighboring participants. Johnny has just sent you the rating sequence and wants you to find the unfairness of the competition. You have noticed that you' ve got a sequence of consecutive integers from 0 to n . That' s strange, but the boy stubbornly says that everything is right. So help him and find the desired unfairness for received numbers.",
    "input": "The input consists of multiple test cases. The first line contains one integer t ( 1 \u2264 t \u2264 10 000 ) \u2014 the number of test cases. The following t lines contain a description of test cases. The first and only line in each test case contains a single integer n ( 1 \u2264 n \u2264 10^ 18) .",
    "output": "Output t lines. For each test case, you should output a single line with one integer \u2014 the unfairness of the contest if the rating sequence equals to 0 , 1 , . . . , n - 1 , n .",
    "note": "For n = 5 we calculate unfairness of the following sequence ( numbers from 0 to 5 written in binary with extra leading zeroes, so they all have the same length) : 000 001 010 011 100 101 The differences are equal to 1 , 2 , 1 , 3 , 1 respectively, so unfairness is equal to 1 + 2 + 1 + 3 + 1 = 8 .",
    "topics": [
      "bitmasks",
      "greedy",
      "math"
    ],
    "id": "1362C"
  },
  {
    "title": "Johnny and New Toy",
    "url": "https://codeforces.com/problemset/problem/1361/F",
    "history": "Johnny has a new toy. As you may guess, it is a little bit extraordinary. The toy is a permutation P of numbers from 1 to n , written in one row next to each other. For each i from 1 to n - 1 between P_ i and P_ i + 1 there is a weight W_ i written, and those weights form a permutation of numbers from 1 to n - 1 . There are also extra weights W_ 0 = W_ n = 0 . The instruction defines subsegment [ L, R] as good if W_ L - 1 < W_ i and W_ R < W_ i for any i in { L, L + 1, . . . , R - 1} . For such subsegment it also defines W_ M as minimum of set { W_ L, W_ L + 1, . . . , W_ R - 1} . Now the fun begins. In one move, the player can choose one of the good subsegments, cut it into [ L, M] and [ M + 1, R] and swap the two parts. More precisely, before one move the chosen subsegment of our toy looks like: W_ L - 1, P_ L, W_ L, . . . , W_ M - 1, P_ M, W_ M, P_ M + 1, W_ M + 1, . . . , W_ R - 1, P_ R, W_ R and afterwards it looks like this: W_ L - 1, P_ M + 1, W_ M + 1, . . . , W_ R - 1, P_ R, W_ M, P_ L, W_ L, . . . , W_ M - 1, P_ M, W_ R Such a move can be performed multiple times ( possibly zero) , and the goal is to achieve the minimum number of inversions in P . Johnny' s younger sister Megan thinks that the rules are too complicated, so she wants to test her brother by choosing some pair of indices X and Y , and swapping P_ X and P_ Y ( X might be equal Y ) . After each sister' s swap, Johnny wonders, what is the minimal number of inversions that he can achieve, starting with current P and making legal moves? You can assume that the input is generated randomly. P and W were chosen independently and equiprobably over all permutations; also, Megan' s requests were chosen independently and equiprobably over all pairs of indices.",
    "input": "The first line contains single integer n ( 2 \u2264 n \u2264 2 \u00b7 10^ 5) denoting the length of the toy. The second line contains n distinct integers P_ 1, P_ 2, . . . , P_ n ( 1 \u2264 P_ i \u2264 n) denoting the initial permutation P . The third line contains n - 1 distinct integers W_ 1, W_ 2, . . . , W_ n - 1 ( 1 \u2264 W_ i \u2264 n - 1) denoting the weights. The fourth line contains single integer q ( 1 \u2264 q \u2264 5 \u00b7 10^ 4) \u2014 the number of Megan' s swaps. The following q lines contain two integers X and Y ( 1 \u2264 X, Y \u2264 n) \u2014 the indices of elements of P to swap. The queries aren' t independent; after each of them, the permutation is changed.",
    "output": "Output q lines. The i - th line should contain exactly one integer \u2014 the minimum number of inversions in permutation, which can be obtained by starting with the P after first i queries and making moves described in the game' s instruction.",
    "note": "Consider the first sample. After the first query, P is sorted, so we already achieved a permutation with no inversions. After the second query, P is equal to [ 1 , 3 , 2 ] , it has one inversion, it can be proven that it is impossible to achieve 0 inversions. In the end, P is equal to [ 2 , 3 , 1 ] ; we can make a move on the whole permutation, as it is a good subsegment itself, which results in P equal to [ 1 , 2 , 3 ] , which has 0 inversions.",
    "topics": [
      "data structures",
      "implementation",
      "math"
    ],
    "id": "1361F"
  },
  {
    "title": "Johnny and James",
    "url": "https://codeforces.com/problemset/problem/1361/D",
    "history": "James Bond, Johnny' s favorite secret agent, has a new mission. There are n enemy bases, each of them is described by its coordinates so that we can think about them as points in the Cartesian plane. The bases can communicate with each other, sending a signal, which is the ray directed from the chosen point to the origin or in the opposite direction. The exception is the central base, which lies at the origin and can send a signal in any direction. When some two bases want to communicate, there are two possible scenarios. If they lie on the same line with the origin, one of them can send a signal directly to the other one. Otherwise, the signal is sent from the first base to the central, and then the central sends it to the second base. We denote the distance between two bases as the total Euclidean distance that a signal sent between them has to travel. Bond can damage all but some k bases, which he can choose arbitrarily. A damaged base can' t send or receive the direct signal but still can pass it between two working bases. In particular, James can damage the central base, and the signal can still be sent between any two undamaged bases as before, so the distance between them remains the same. What is the maximal sum of the distances between all pairs of remaining bases that 007 can achieve by damaging exactly n - k of them?",
    "input": "The first line contains two integers n and k ( 2 \u2264 k \u2264 n \u2264 5 \u00b7 10^ 5) \u2014 the total number of bases and number of bases that have to remain, respectively. Each of the next n lines contains two integers x and y ( - 10^ 9 \u2264 x, y \u2264 10^ 9) , i - th line contains coordinates of the i - th base. You can assume that no two points coincide and that one of them is ( 0, 0) .",
    "output": "You should output one number \u2014 the maximal possible sum of distances between all pairs of some k from given bases. Your answer will be accepted if the absolute or relative error is less than 10^ - 6 .",
    "note": "In the first example, in an optimal solution Bond doesn' t destroy bases with indices 4 and 6 ( marked in orange) : The following picture represents an optimal solution for the second example. These bases are are not destroyed: 2 , 3 , 4 , 5 , 6 ( marked in orange) . An optimal solution for the third test is visible in the picture. Only bases 3 , 4 , 5 are destroyed. Again, the not destroyed bases are marked in orange.",
    "topics": [
      "greedy",
      "implementation",
      "math",
      "trees"
    ],
    "id": "1361D"
  },
  {
    "title": "Johnny and Grandmaster",
    "url": "https://codeforces.com/problemset/problem/1361/B",
    "history": "Johnny has just found the new, great tutorial: \" How to become a grandmaster? \" . The tutorial tells many strange and unexpected for Johnny things, such as you have to be patient or that very important is solving many harder and harder problems. The boy has found an online judge with tasks divided by topics they cover. He has picked p^ k_ i problems from i - th category ( p is his favorite number) . He wants to solve them in two weeks ( the patience condition is too hard for Johnny, so for simplicity, he looks only at easy tasks, which can be solved in such a period) . Now our future grandmaster has to decide which topics to cover first and which the second week. Help him assign topics in such a way, that workload is balanced. Formally, given n numbers p^ k_ i , the boy wants to divide them into two disjoint sets, minimizing the absolute difference between sums of numbers in each set. Find the minimal absolute difference. Output the result modulo 10^ 9+ 7 .",
    "input": "Input consists of multiple test cases. The first line contains one integer t ( 1 \u2264 t \u2264 10^ 5) \u2014 the number of test cases. Each test case is described as follows: The first line contains two integers n and p ( 1 \u2264 n, p \u2264 10^ 6) . The second line contains n integers k_ i ( 0 \u2264 k_ i \u2264 10^ 6) . The sum of n over all test cases doesn' t exceed 10^ 6 .",
    "output": "Output one integer \u2014 the reminder of division the answer by 1 000 000 007 .",
    "note": "You have to minimize the difference, not it' s remainder. For example, if the minimum difference is equal to 2 , but there is also a distribution where the difference is 10^ 9 + 8 , then the answer is 2 , not 1 . In the first test case of the example, there' re the following numbers: 4 , 8 , 16 , 16 , and 8 . We can divide them into such two sets: 4, 8, 16 and 8, 16 . Then the difference between the sums of numbers in sets would be 4 .",
    "topics": [
      "greedy",
      "implementation",
      "math",
      "sortings"
    ],
    "id": "1361B"
  },
  {
    "title": "A/B Matrix",
    "url": "https://codeforces.com/problemset/problem/1360/G",
    "history": "You are given four positive integers n , m , a , b ( 1 \u2264 b \u2264 n \u2264 50 ; 1 \u2264 a \u2264 m \u2264 50 ) . Find any such rectangular matrix of size n \u00d7 m that satisfies all of the following conditions: each row of the matrix contains exactly a ones; each column of the matrix contains exactly b ones; all other elements are zeros. If the desired matrix does not exist, indicate this. For example, for n= 3 , m= 6 , a= 2 , b= 1 , there exists a matrix satisfying the conditions above: 0 1 0 0 0 1 1 0 0 1 0 0 0 0 1 0 1 0",
    "input": "The first line contains an integer t ( 1 \u2264 t \u2264 1000 ) \u2014 the number of test cases. Then t test cases follow. Each test case is described by four positive integers n , m , a , b ( 1 \u2264 b \u2264 n \u2264 50 ; 1 \u2264 a \u2264 m \u2264 50 ) , where n and m are the sizes of the matrix, and a and b are the number of ones for rows and columns, respectively.",
    "output": "For each test case print: \" YES\" ( without quotes) and the required matrix ( if there are several answers, print any) if it exists, or \" NO\" ( without quotes) if it does not exist. To print the matrix n \u00d7 m , print n rows, each of which consists of m numbers 0 or 1 describing a row of the matrix. Numbers must be printed without spaces.",
    "note": "",
    "topics": [
      "constructive algorithms",
      "greedy",
      "math"
    ],
    "id": "1360G"
  },
  {
    "title": "Buying Shovels",
    "url": "https://codeforces.com/problemset/problem/1360/D",
    "history": "Polycarp wants to buy exactly n shovels. The shop sells packages with shovels. The store has k types of packages: the package of the i - th type consists of exactly i shovels ( 1 \u2264 i \u2264 k ) . The store has an infinite number of packages of each type. Polycarp wants to choose one type of packages and then buy several ( one or more) packages of this type. What is the smallest number of packages Polycarp will have to buy to get exactly n shovels? For example, if n= 8 and k= 7 , then Polycarp will buy 2 packages of 4 shovels. Help Polycarp find the minimum number of packages that he needs to buy, given that he: will buy exactly n shovels in total; the sizes of all packages he will buy are all the same and the number of shovels in each package is an integer from 1 to k , inclusive.",
    "input": "The first line contains an integer t ( 1 \u2264 t \u2264 100 ) \u2014 the number of test cases in the input. Then, t test cases follow, one per line. Each test case consists of two positive integers n ( 1 \u2264 n \u2264 10^ 9 ) and k ( 1 \u2264 k \u2264 10^ 9 ) \u2014 the number of shovels and the number of types of packages.",
    "output": "Print t answers to the test cases. Each answer is a positive integer \u2014 the minimum number of packages.",
    "note": "The answer to the first test case was explained in the statement. In the second test case, there is only one way to buy 8 shovels \u2014 8 packages of one shovel. In the third test case, you need to buy a 1 package of 6 shovels.",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "1360D"
  },
  {
    "title": "Minimal Square",
    "url": "https://codeforces.com/problemset/problem/1360/A",
    "history": "Find the minimum area of a square land on which you can place two identical rectangular a \u00d7 b houses. The sides of the houses should be parallel to the sides of the desired square land. Formally, You are given two identical rectangles with side lengths a and b ( 1 \u2264 a, b \u2264 100 ) \u2014 positive integers ( you are given just the sizes, but not their positions) . Find the square of the minimum area that contains both given rectangles. Rectangles can be rotated ( both or just one) , moved, but the sides of the rectangles should be parallel to the sides of the desired square. Two rectangles can touch each other ( side or corner) , but cannot intersect. Rectangles can also touch the sides of the square but must be completely inside it. You can rotate the rectangles. Take a look at the examples for a better understanding. The picture shows a square that contains red and green rectangles.",
    "input": "The first line contains an integer t ( 1 \u2264 t \u2264 10 000 ) \u2014the number of test cases in the input. Then t test cases follow. Each test case is a line containing two integers a , b ( 1 \u2264 a, b \u2264 100 ) \u2014 side lengths of the rectangles.",
    "output": "Print t answers to the test cases. Each answer must be a single integer \u2014 minimal area of square land, that contains two rectangles with dimensions a \u00d7 b .",
    "note": "Below are the answers for the first two test cases:",
    "topics": [
      "greedy",
      "math"
    ],
    "id": "1360A"
  },
  {
    "title": "RC Kaboom Show",
    "url": "https://codeforces.com/problemset/problem/1359/F",
    "history": "You know, it' s hard to conduct a show with lots of participants and spectators at the same place nowadays. Still, you are not giving up on your dream to make a car crash showcase! You decided to replace the real cars with remote controlled ones, call the event \" Remote Control Kaboom Show\" and stream everything online. For the preparation you arranged an arena \u2014 an infinite 2D- field. You also bought n remote controlled cars and set them up on the arena. Unfortunately, the cars you bought can only go forward without turning left, right or around. So you additionally put the cars in the direction you want them to go. To be formal, for each car i ( 1 \u2264 i \u2264 n ) you chose its initial position ( x_ i, y_ i ) and a direction vector ( dx_ i, dy_ i ) . Moreover, each car has a constant speed s_ i units per second. So after car i is launched, it stars moving from ( x_ i, y_ i ) in the direction ( dx_ i, dy_ i ) with constant speed s_ i . The goal of the show is to create a car collision as fast as possible! You noted that launching every car at the beginning of the show often fails to produce any collisions at all. Thus, you plan to launch the i - th car at some moment t_ i . You haven' t chosen t_ i , that' s yet to be decided. Note that it' s not necessary for t_ i to be integer and t_ i is allowed to be equal to t_ j for any i, j . The show starts at time 0 . The show ends when two cars i and j ( i j ) collide ( i. e. come to the same coordinate at the same time) . The duration of the show is the time between the start and the end. What' s the fastest crash you can arrange by choosing all t_ i ? If it' s possible to arrange a crash then print the shortest possible duration of the show. Otherwise, report that it' s impossible.",
    "input": "The first line contains a single integer n ( 1 \u2264 n \u2264 25000 ) \u2014 the number of cars. Each of the next n lines contains five integers x_ i , y_ i , dx_ i , dy_ i , s_ i ( - 10^ 3 \u2264 x_ i, y_ i \u2264 10^ 3 ; 1 \u2264 | dx_ i| \u2264 10^ 3 ; 1 \u2264 | dy_ i| \u2264 10^ 3 ; 1 \u2264 s_ i \u2264 10^ 3 ) \u2014 the initial position of the i - th car, its direction vector and its speed, respectively. It' s guaranteed that all cars start at distinct positions ( i. e. ( x_ i, y_ i) = \u0338 ( x_ j, y_ j) for i = \u0338 j ) .",
    "output": "Print the shortest possible duration of the show if it' s possible to arrange a crash by choosing all t_ i . Otherwise, print \" No show : ( \" . Your answer is considered correct if its absolute or relative error does not exceed 10^ - 6 . Formally, let your answer be a , and the jury' s answer be b . Your answer is accepted if and only if | a - b| / max( 1, | b| ) \u2264 10^ - 6 .",
    "note": "Here is the picture for the first example: The fastest cars to crash are cars 2 and 4 . Let' s launch car 2 at 0 , car 4 at about 0. 096762 and cars 1 and 3 at arbitrary time. That way cars 2 and 4 will crash into each other at about 0. 585902 . So here' s what it looks like at the moment of the collision: Here' s the picture for the second example:",
    "topics": [
      "binary search",
      "brute force",
      "data structures",
      "geometry",
      "math"
    ],
    "id": "1359F"
  },
  {
    "title": "Modular Stability",
    "url": "https://codeforces.com/problemset/problem/1359/E",
    "history": "We define x y as the remainder of division of x by y ( % operator in C+ + or Java, mod operator in Pascal) . Let' s call an array of positive integers [ a_ 1, a_ 2, . . . , a_ k] stable if for every permutation p of integers from 1 to k , and for every non- negative integer x , the following condition is met: ( ( ( x a_ 1) a_ 2) . . . a_ k - 1) a_ k = ( ( ( x a_ p_ 1) a_ p_ 2) . . . a_ p_ k - 1) a_ p_ k That is, for each non- negative integer x , the value of ( ( ( x a_ 1) a_ 2) . . . a_ k - 1) a_ k does not change if we reorder the elements of the array a . For two given integers n and k , calculate the number of stable arrays [ a_ 1, a_ 2, . . . , a_ k] such that 1 \u2264 a_ 1 < a_ 2 < . . . < a_ k \u2264 n .",
    "input": "The only line contains two integers n and k ( 1 \u2264 n, k \u2264 5 \u00b7 10^ 5 ) .",
    "output": "Print one integer \u2014 the number of stable arrays [ a_ 1, a_ 2, . . . , a_ k] such that 1 \u2264 a_ 1 < a_ 2 < . . . < a_ k \u2264 n . Since the answer may be large, print it modulo 998244353 .",
    "note": "",
    "topics": [
      "combinatorics",
      "math",
      "number theory"
    ],
    "id": "1359E"
  },
  {
    "title": "Mixing Water",
    "url": "https://codeforces.com/problemset/problem/1359/C",
    "history": "There are two infinite sources of water: hot water of temperature h ; cold water of temperature c ( c < h ) . You perform the following procedure of alternating moves: take one cup of the hot water and pour it into an infinitely deep barrel; take one cup of the cold water and pour it into an infinitely deep barrel; take one cup of the hot water . . . and so on . . . Note that you always start with the cup of hot water. The barrel is initially empty. You have to pour at least one cup into the barrel. The water temperature in the barrel is an average of the temperatures of the poured cups. You want to achieve a temperature as close as possible to t . So if the temperature in the barrel is t_ b , then the absolute difference of t_ b and t ( | t_ b - t| ) should be as small as possible. How many cups should you pour into the barrel, so that the temperature in it is as close as possible to t ? If there are multiple answers with the minimum absolute difference, then print the smallest of them.",
    "input": "The first line contains a single integer T ( 1 \u2264 T \u2264 3 \u00b7 10^ 4 ) \u2014 the number of testcases. Each of the next T lines contains three integers h , c and t ( 1 \u2264 c < h \u2264 10^ 6 ; c \u2264 t \u2264 h ) \u2014 the temperature of the hot water, the temperature of the cold water and the desired temperature in the barrel.",
    "output": "For each testcase print a single positive integer \u2014 the minimum number of cups required to be poured into the barrel to achieve the closest temperature to t .",
    "note": "In the first testcase the temperature after 2 poured cups: 1 hot and 1 cold is exactly 20 . So that is the closest we can achieve. In the second testcase the temperature after 7 poured cups: 4 hot and 3 cold is about 29. 857 . Pouring more water won' t get us closer to t than that. In the third testcase the temperature after 1 poured cup: 1 hot is 18 . That' s exactly equal to t .",
    "topics": [
      "binary search",
      "math"
    ],
    "id": "1359C"
  },
  {
    "title": "Berland Poker",
    "url": "https://codeforces.com/problemset/problem/1359/A",
    "history": "The game of Berland poker is played with a deck of n cards, m of which are jokers. k players play this game ( n is divisible by k ) . At the beginning of the game, each player takes n/ k cards from the deck ( so each card is taken by exactly one player) . The player who has the maximum number of jokers is the winner, and he gets the number of points equal to x - y , where x is the number of jokers in the winner' s hand, and y is the maximum number of jokers among all other players. If there are two or more players with maximum number of jokers, all of them are winners and they get 0 points. Here are some examples: n = 8 , m = 3 , k = 2 . If one player gets 3 jokers and 1 plain card, and another player gets 0 jokers and 4 plain cards, then the first player is the winner and gets 3 - 0 = 3 points; n = 4 , m = 2 , k = 4 . Two players get plain cards, and the other two players get jokers, so both of them are winners and get 0 points; n = 9 , m = 6 , k = 3 . If the first player gets 3 jokers, the second player gets 1 joker and 2 plain cards, and the third player gets 2 jokers and 1 plain card, then the first player is the winner, and he gets 3 - 2 = 1 point; n = 42 , m = 0 , k = 7 . Since there are no jokers, everyone gets 0 jokers, everyone is a winner, and everyone gets 0 points. Given n , m and k , calculate the maximum number of points a player can get for winning the game.",
    "input": "The first line of the input contains one integer t ( 1 \u2264 t \u2264 500 ) \u2014 the number of test cases. Then the test cases follow. Each test case contains three integers n , m and k ( 2 \u2264 n \u2264 50 , 0 \u2264 m \u2264 n , 2 \u2264 k \u2264 n , k is a divisors of n ) .",
    "output": "For each test case, print one integer \u2014 the maximum number of points a player can get for winning the game.",
    "note": "Test cases of the example are described in the statement.",
    "topics": [
      "brute force",
      "greedy",
      "math"
    ],
    "id": "1359A"
  },
  {
    "title": "Celex Update",
    "url": "https://codeforces.com/problemset/problem/1358/C",
    "history": "During the quarantine, Sicromoft has more free time to create the new functions in \" Celex- 2021\" . The developers made a new function GAZ- GIZ, which infinitely fills an infinite table to the right and down from the upper left corner as follows: The cell with coordinates ( x, y) is at the intersection of x - th row and y - th column. Upper left cell ( 1, 1) contains an integer 1 . The developers of the SUM function don' t sleep either. Because of the boredom, they teamed up with the developers of the RAND function, so they added the ability to calculate the sum on an arbitrary path from one cell to another, moving down or right. Formally, from the cell ( x, y) in one step you can move to the cell ( x+ 1, y) or ( x, y+ 1) . After another Dinwows update, Levian started to study \" Celex- 2021\" ( because he wants to be an accountant! ) . After filling in the table with the GAZ- GIZ function, he asked you to calculate the quantity of possible different amounts on the path from a given cell ( x_ 1, y_ 1) to another given cell ( x_ 2, y_ 2 ) , if you can only move one cell down or right. Formally, consider all the paths from the cell ( x_ 1, y_ 1) to cell ( x_ 2, y_ 2) such that each next cell in the path is located either to the down or to the right of the previous one. Calculate the number of different sums of elements for all such paths.",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 57179 ) \u2014 the number of test cases. Each of the following t lines contains four natural numbers x_ 1 , y_ 1 , x_ 2 , y_ 2 ( 1 \u2264 x_ 1 \u2264 x_ 2 \u2264 10^ 9 , 1 \u2264 y_ 1 \u2264 y_ 2 \u2264 10^ 9 ) \u2014 coordinates of the start and the end cells.",
    "output": "For each test case, in a separate line, print the number of possible different sums on the way from the start cell to the end cell.",
    "note": "In the first test case there are two possible sums: 1+ 2+ 5= 8 and 1+ 3+ 5= 9 .",
    "topics": [
      "math"
    ],
    "id": "1358C"
  },
  {
    "title": "Park Lighting",
    "url": "https://codeforces.com/problemset/problem/1358/A",
    "history": "Due to the coronavirus pandemic, city authorities obligated citizens to keep a social distance. The mayor of the city Semyon wants to light up Gluharniki park so that people could see each other even at night to keep the social distance. The park is a rectangular table with n rows and m columns, where the cells of the table are squares, and the boundaries between the cells are streets. External borders are also streets. Every street has length 1 . For example, park with n= m= 2 has 12 streets. You were assigned to develop a plan for lighting the park. You can put lanterns in the middle of the streets. The lamp lights two squares near it ( or only one square if it stands on the border of the park) . The park sizes are: n= 4 , m= 5 . The lighted squares are marked yellow. Please note that all streets have length 1 . Lanterns are placed in the middle of the streets. In the picture not all the squares are lit. Semyon wants to spend the least possible amount of money on lighting but also wants people throughout the park to keep a social distance. So he asks you to find the minimum number of lanterns that are required to light all the squares.",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases in the input. Then t test cases follow. Each test case is a line containing two integers n , m ( 1 \u2264 n, m \u2264 10^ 4 ) \u2014 park sizes.",
    "output": "Print t answers to the test cases. Each answer must be a single integer \u2014 the minimum number of lanterns that are required to light all the squares.",
    "note": "Possible optimal arrangement of the lanterns for the 2 - nd test case of input data example: Possible optimal arrangement of the lanterns for the 3 - rd test case of input data example:",
    "topics": [
      "greedy",
      "math"
    ],
    "id": "1358A"
  },
  {
    "title": "Restorer Distance",
    "url": "https://codeforces.com/problemset/problem/1355/E",
    "history": "You have to restore the wall. The wall consists of N pillars of bricks, the height of the i - th pillar is initially equal to h_ i , the height is measured in number of bricks. After the restoration all the N pillars should have equal heights. You are allowed the following operations: put a brick on top of one pillar, the cost of this operation is A ; remove a brick from the top of one non- empty pillar, the cost of this operation is R ; move a brick from the top of one non- empty pillar to the top of another pillar, the cost of this operation is M . You cannot create additional pillars or ignore some of pre- existing pillars even if their height becomes 0 . What is the minimal total cost of restoration, in other words, what is the minimal total cost to make all the pillars of equal height?",
    "input": "The first line of input contains four integers N , A , R , M ( 1 \u2264 N \u2264 10^ 5 , 0 \u2264 A, R, M \u2264 10^ 4 ) \u2014 the number of pillars and the costs of operations. The second line contains N integers h_ i ( 0 \u2264 h_ i\u2264 10^ 9 ) \u2014 initial heights of pillars.",
    "output": "Print one integer \u2014 the minimal cost of restoration.",
    "note": "",
    "topics": [
      "binary search",
      "greedy",
      "math",
      "sortings",
      "ternary search"
    ],
    "id": "1355E"
  },
  {
    "title": "Game With Array",
    "url": "https://codeforces.com/problemset/problem/1355/D",
    "history": "Petya and Vasya are competing with each other in a new interesting game as they always do. At the beginning of the game Petya has to come up with an array of N positive integers. Sum of all elements in his array should be equal to S . Then Petya has to select an integer K such that 0 \u2264 K \u2264 S . In order to win, Vasya has to find a non- empty subarray in Petya' s array such that the sum of all selected elements equals to either K or S - K . Otherwise Vasya loses. You are given integers N and S . You should determine if Petya can win, considering Vasya plays optimally. If Petya can win, help him to do that.",
    "input": "The first line contains two integers N and S ( 1 \u2264 N \u2264 S \u2264 10^ 6 ) \u2014 the required length of the array and the required sum of its elements.",
    "output": "If Petya can win, print \" YES\" ( without quotes) in the first line. Then print Petya' s array in the second line. The array should contain N positive integers with sum equal to S . In the third line print K . If there are many correct answers, you can print any of them. If Petya can' t win, print \" NO\" ( without quotes) . You can print each letter in any register ( lowercase or uppercase) .",
    "note": "",
    "topics": [
      "constructive algorithms",
      "math"
    ],
    "id": "1355D"
  },
  {
    "title": "Count Triangles",
    "url": "https://codeforces.com/problemset/problem/1355/C",
    "history": "Like any unknown mathematician, Yuri has favourite numbers: A , B , C , and D , where A \u2264 B \u2264 C \u2264 D . Yuri also likes triangles and once he thought: how many non- degenerate triangles with integer sides x , y , and z exist, such that A \u2264 x \u2264 B \u2264 y \u2264 C \u2264 z \u2264 D holds? Yuri is preparing problems for a new contest now, so he is very busy. That' s why he asked you to calculate the number of triangles with described property. The triangle is called non- degenerate if and only if its vertices are not collinear.",
    "input": "The first line contains four integers: A , B , C and D ( 1 \u2264 A \u2264 B \u2264 C \u2264 D \u2264 5 \u00b7 10^ 5 ) \u2014 Yuri' s favourite numbers.",
    "output": "Print the number of non- degenerate triangles with integer sides x , y , and z such that the inequality A \u2264 x \u2264 B \u2264 y \u2264 C \u2264 z \u2264 D holds.",
    "note": "In the first example Yuri can make up triangles with sides ( 1, 3, 3) , ( 2, 2, 3) , ( 2, 3, 3) and ( 2, 3, 4) . In the second example Yuri can make up triangles with sides ( 1, 2, 2) , ( 2, 2, 2) and ( 2, 2, 3) . In the third example Yuri can make up only one equilateral triangle with sides equal to 5 \u00b7 10^ 5 .",
    "topics": [
      "binary search",
      "implementation",
      "math",
      "two pointers"
    ],
    "id": "1355C"
  },
  {
    "title": "Sequence with Digits",
    "url": "https://codeforces.com/problemset/problem/1355/A",
    "history": "Let' s define the following recurrence: a_ n+ 1 = a_ n + minDigit( a_ n) \u00b7 maxDigit( a_ n) . Here minDigit( x) and maxDigit( x) are the minimal and maximal digits in the decimal representation of x without leading zeroes. For examples refer to notes. Your task is calculate a_ K for given a_ 1 and K .",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 1000 ) \u2014 the number of independent test cases. Each test case consists of a single line containing two integers a_ 1 and K ( 1 \u2264 a_ 1\u2264 10^ 18 , 1 \u2264 K \u2264 10^ 16 ) separated by a space.",
    "output": "For each test case print one integer a_ K on a separate line.",
    "note": "a_ 1 = 487 a_ 2 = a_ 1 + minDigit( a_ 1) \u00b7 maxDigit( a_ 1) = 487 + min ( 4, 8, 7) \u00b7max ( 4, 8, 7) = 487 + 4 \u00b7 8 = 519 a_ 3 = a_ 2 + minDigit( a_ 2) \u00b7 maxDigit( a_ 2) = 519 + min ( 5, 1, 9) \u00b7max ( 5, 1, 9) = 519 + 1 \u00b7 9 = 528 a_ 4 = a_ 3 + minDigit( a_ 3) \u00b7 maxDigit( a_ 3) = 528 + min ( 5, 2, 8) \u00b7max ( 5, 2, 8) = 528 + 2 \u00b7 8 = 544 a_ 5 = a_ 4 + minDigit( a_ 4) \u00b7 maxDigit( a_ 4) = 544 + min ( 5, 4, 4) \u00b7max ( 5, 4, 4) = 544 + 4 \u00b7 5 = 564 a_ 6 = a_ 5 + minDigit( a_ 5) \u00b7 maxDigit( a_ 5) = 564 + min ( 5, 6, 4) \u00b7max ( 5, 6, 4) = 564 + 4 \u00b7 6 = 588 a_ 7 = a_ 6 + minDigit( a_ 6) \u00b7 maxDigit( a_ 6) = 588 + min ( 5, 8, 8) \u00b7max ( 5, 8, 8) = 588 + 5 \u00b7 8 = 628",
    "topics": [
      "brute force",
      "implementation",
      "math"
    ],
    "id": "1355A"
  },
  {
    "title": "Not So Simple Polygon Embedding",
    "url": "https://codeforces.com/problemset/problem/1354/C2",
    "history": "The statement of this problem is the same as the statement of problem C1. The only difference is that, in problem C1, n is always even, and in C2, n is always odd. You are given a regular polygon with 2 \u00b7 n vertices ( it' s convex and has equal sides and equal angles) and all its sides have length 1 . Let' s name it as 2n - gon. Your task is to find the square of the minimum size such that you can embed 2n - gon in the square. Embedding 2n - gon in the square means that you need to place 2n - gon in the square in such way that each point which lies inside or on a border of 2n - gon should also lie inside or on a border of the square. You can rotate 2n - gon and/ or the square.",
    "input": "The first line contains a single integer T ( 1 \u2264 T \u2264 200 ) \u2014 the number of test cases. Next T lines contain descriptions of test cases \u2014 one per line. Each line contains single odd integer n ( 3 \u2264 n \u2264 199 ) . Don' t forget you need to embed 2n - gon, not an n - gon.",
    "output": "Print T real numbers \u2014 one per test case. For each test case, print the minimum length of a side of the square 2n - gon can be embedded in. Your answer will be considered correct if its absolute or relative error doesn' t exceed 10^ - 6 .",
    "note": "",
    "topics": [
      "binary search",
      "brute force",
      "geometry",
      "math"
    ],
    "id": "1354C2"
  },
  {
    "title": "Simple Polygon Embedding",
    "url": "https://codeforces.com/problemset/problem/1354/C1",
    "history": "The statement of this problem is the same as the statement of problem C2. The only difference is that, in problem C1, n is always even, and in C2, n is always odd. You are given a regular polygon with 2 \u00b7 n vertices ( it' s convex and has equal sides and equal angles) and all its sides have length 1 . Let' s name it as 2n - gon. Your task is to find the square of the minimum size such that you can embed 2n - gon in the square. Embedding 2n - gon in the square means that you need to place 2n - gon in the square in such way that each point which lies inside or on a border of 2n - gon should also lie inside or on a border of the square. You can rotate 2n - gon and/ or the square.",
    "input": "The first line contains a single integer T ( 1 \u2264 T \u2264 200 ) \u2014 the number of test cases. Next T lines contain descriptions of test cases \u2014 one per line. Each line contains single even integer n ( 2 \u2264 n \u2264 200 ) . Don' t forget you need to embed 2n - gon, not an n - gon.",
    "output": "Print T real numbers \u2014 one per test case. For each test case, print the minimum length of a side of the square 2n - gon can be embedded in. Your answer will be considered correct if its absolute or relative error doesn' t exceed 10^ - 6 .",
    "note": "",
    "topics": [
      "binary search",
      "geometry",
      "math",
      "ternary search"
    ],
    "id": "1354C1"
  },
  {
    "title": "Alarm Clock",
    "url": "https://codeforces.com/problemset/problem/1354/A",
    "history": "Polycarp has spent the entire day preparing problems for you. Now he has to sleep for at least a minutes to feel refreshed. Polycarp can only wake up by hearing the sound of his alarm. So he has just fallen asleep and his first alarm goes off in b minutes. Every time Polycarp wakes up, he decides if he wants to sleep for some more time or not. If he' s slept for less than a minutes in total, then he sets his alarm to go off in c minutes after it is reset and spends d minutes to fall asleep again. Otherwise, he gets out of his bed and proceeds with the day. If the alarm goes off while Polycarp is falling asleep, then he resets his alarm to go off in another c minutes and tries to fall asleep for d minutes again. You just want to find out when will Polycarp get out of his bed or report that it will never happen. Please check out the notes for some explanations of the example.",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 1000 ) \u2014 the number of testcases. The only line of each testcase contains four integers a, b, c, d ( 1 \u2264 a, b, c, d \u2264 10^ 9 ) \u2014 the time Polycarp has to sleep for to feel refreshed, the time before the first alarm goes off, the time before every succeeding alarm goes off and the time Polycarp spends to fall asleep.",
    "output": "For each test case print one integer. If Polycarp never gets out of his bed then print - 1. Otherwise, print the time it takes for Polycarp to get out of his bed.",
    "note": "In the first testcase Polycarp wakes up after 3 minutes. He only rested for 3 minutes out of 10 minutes he needed. So after that he sets his alarm to go off in 6 minutes and spends 4 minutes falling asleep. Thus, he rests for 2 more minutes, totaling in 3+ 2= 5 minutes of sleep. Then he repeats the procedure three more times and ends up with 11 minutes of sleep. Finally, he gets out of his bed. He spent 3 minutes before the first alarm and then reset his alarm four times. The answer is 3+ 4 \u00b7 6 = 27 . The second example is almost like the first one but Polycarp needs 11 minutes of sleep instead of 10 . However, that changes nothing because he gets 11 minutes with these alarm parameters anyway. In the third testcase Polycarp wakes up rested enough after the first alarm. Thus, the answer is b= 9 . In the fourth testcase Polycarp wakes up after 5 minutes. Unfortunately, he keeps resetting his alarm infinitely being unable to rest for even a single minute : (",
    "topics": [
      "math"
    ],
    "id": "1354A"
  },
  {
    "title": "Board Moves",
    "url": "https://codeforces.com/problemset/problem/1353/C",
    "history": "You are given a board of size n \u00d7 n , where n is odd ( not divisible by 2 ) . Initially, each cell of the board contains one figure. In one move, you can select exactly one figure presented in some cell and move it to one of the cells sharing a side or a corner with the current cell, i. e. from the cell ( i, j) you can move the figure to cells: ( i - 1, j - 1) ; ( i - 1, j) ; ( i - 1, j + 1) ; ( i, j - 1) ; ( i, j + 1) ; ( i + 1, j - 1) ; ( i + 1, j) ; ( i + 1, j + 1) ; Of course, you can not move figures to cells out of the board. It is allowed that after a move there will be several figures in one cell. Your task is to find the minimum number of moves needed to get all the figures into one cell ( i. e. n^ 2- 1 cells should contain 0 figures and one cell should contain n^ 2 figures) . You have to answer t independent test cases.",
    "input": "The first line of the input contains one integer t ( 1 \u2264 t \u2264 200 ) \u2014 the number of test cases. Then t test cases follow. The only line of the test case contains one integer n ( 1 \u2264 n < 5 \u00b7 10^ 5 ) \u2014 the size of the board. It is guaranteed that n is odd ( not divisible by 2 ) . It is guaranteed that the sum of n over all test cases does not exceed 5 \u00b7 10^ 5 ( \u2211 n \u2264 5 \u00b7 10^ 5 ) .",
    "output": "For each test case print the answer \u2014 the minimum number of moves needed to get all the figures into one cell.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": "1353C"
  },
  {
    "title": "Most Unstable Array",
    "url": "https://codeforces.com/problemset/problem/1353/A",
    "history": "You are given two integers n and m . You have to construct the array a of length n consisting of non- negative integers ( i. e. integers greater than or equal to zero) such that the sum of elements of this array is exactly m and the value \u2211_ i= 1^ n- 1 | a_ i - a_ i+ 1| is the maximum possible. Recall that | x| is the absolute value of x . In other words, you have to maximize the sum of absolute differences between adjacent ( consecutive) elements. For example, if the array a= [ 1, 3, 2, 5, 5, 0] then the value above for this array is | 1- 3| + | 3- 2| + | 2- 5| + | 5- 5| + | 5- 0| = 2 + 1 + 3 + 0 + 5 = 11 . Note that this example doesn' t show the optimal answer but it shows how the required value for some array is calculated. You have to answer t independent test cases.",
    "input": "The first line of the input contains one integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. Then t test cases follow. The only line of the test case contains two integers n and m ( 1 \u2264 n, m \u2264 10^ 9 ) \u2014 the length of the array and its sum correspondingly.",
    "output": "For each test case, print the answer \u2014 the maximum possible value of \u2211_ i= 1^ n- 1 | a_ i - a_ i+ 1| for the array a consisting of n non- negative integers with the sum m .",
    "note": "In the first test case of the example, the only possible array is [ 100] and the answer is obviously 0 . In the second test case of the example, one of the possible arrays is [ 2, 0] and the answer is | 2- 0| = 2 . In the third test case of the example, one of the possible arrays is [ 0, 2, 0, 3, 0] and the answer is | 0- 2| + | 2- 0| + | 0- 3| + | 3- 0| = 10 .",
    "topics": [
      "constructive algorithms",
      "greedy",
      "math"
    ],
    "id": "1353A"
  },
  {
    "title": "Binary String Reconstruction",
    "url": "https://codeforces.com/problemset/problem/1352/F",
    "history": "For some binary string s ( i. e. each character s_ i is either ' 0' or ' 1' ) , all pairs of consecutive ( adjacent) characters were written. In other words, all substrings of length 2 were written. For each pair ( substring of length 2 ) , the number of ' 1' ( ones) in it was calculated. You are given three numbers: n_ 0 \u2014 the number of such pairs of consecutive characters ( substrings) where the number of ones equals 0 ; n_ 1 \u2014 the number of such pairs of consecutive characters ( substrings) where the number of ones equals 1 ; n_ 2 \u2014 the number of such pairs of consecutive characters ( substrings) where the number of ones equals 2 . For example, for the string s= \" 1110011110\" , the following substrings would be written: \" 11\" , \" 11\" , \" 10\" , \" 00\" , \" 01\" , \" 11\" , \" 11\" , \" 11\" , \" 10\" . Thus, n_ 0= 1 , n_ 1= 3 , n_ 2= 5 . Your task is to restore any suitable binary string s from the given values n_ 0, n_ 1, n_ 2 . It is guaranteed that at least one of the numbers n_ 0, n_ 1, n_ 2 is greater than 0 . Also, it is guaranteed that a solution exists.",
    "input": "The first line contains an integer t ( 1 \u2264 t \u2264 1000 ) \u2014 the number of test cases in the input. Then test cases follow. Each test case consists of one line which contains three integers n_ 0, n_ 1, n_ 2 ( 0 \u2264 n_ 0, n_ 1, n_ 2 \u2264 100 ; n_ 0 + n_ 1 + n_ 2 > 0 ) . It is guaranteed that the answer for given n_ 0, n_ 1, n_ 2 exists.",
    "output": "Print t lines. Each of the lines should contain a binary string corresponding to a test case. If there are several possible solutions, print any of them.",
    "note": "",
    "topics": [
      "constructive algorithms",
      "dfs and similar",
      "math"
    ],
    "id": "1352F"
  },
  {
    "title": "K-th Not Divisible by n",
    "url": "https://codeforces.com/problemset/problem/1352/C",
    "history": "You are given two positive integers n and k . Print the k - th positive integer that is not divisible by n . For example, if n= 3 , and k= 7 , then all numbers that are not divisible by 3 are: 1, 2, 4, 5, 7, 8, 10, 11, 13 . . . . The 7 - th number among them is 10 .",
    "input": "The first line contains an integer t ( 1 \u2264 t \u2264 1000 ) \u2014 the number of test cases in the input. Next, t test cases are given, one per line. Each test case is two positive integers n ( 2 \u2264 n \u2264 10^ 9 ) and k ( 1 \u2264 k \u2264 10^ 9 ) .",
    "output": "For each test case print the k - th positive integer that is not divisible by n .",
    "note": "",
    "topics": [
      "binary search",
      "math"
    ],
    "id": "1352C"
  },
  {
    "title": "Same Parity Summands",
    "url": "https://codeforces.com/problemset/problem/1352/B",
    "history": "You are given two positive integers n ( 1 \u2264 n \u2264 10^ 9 ) and k ( 1 \u2264 k \u2264 100 ) . Represent the number n as the sum of k positive integers of the same parity ( have the same remainder when divided by 2 ) . In other words, find a_ 1, a_ 2, . . . , a_ k such that all a_ i> 0 , n = a_ 1 + a_ 2 + . . . + a_ k and either all a_ i are even or all a_ i are odd at the same time. If such a representation does not exist, then report it.",
    "input": "The first line contains an integer t ( 1 \u2264 t \u2264 1000 ) \u2014 the number of test cases in the input. Next, t test cases are given, one per line. Each test case is two positive integers n ( 1 \u2264 n \u2264 10^ 9 ) and k ( 1 \u2264 k \u2264 100 ) .",
    "output": "For each test case print: YES and the required values a_ i , if the answer exists ( if there are several answers, print any of them) ; NO if the answer does not exist. The letters in the words YES and NO can be printed in any case.",
    "note": "",
    "topics": [
      "constructive algorithms",
      "math"
    ],
    "id": "1352B"
  },
  {
    "title": "Sum of Round Numbers",
    "url": "https://codeforces.com/problemset/problem/1352/A",
    "history": "A positive ( strictly greater than zero) integer is called round if it is of the form d00. . . 0. In other words, a positive integer is round if all its digits except the leftmost ( most significant) are equal to zero. In particular, all numbers from 1 to 9 ( inclusive) are round. For example, the following numbers are round: 4000 , 1 , 9 , 800 , 90 . The following numbers are not round: 110 , 707 , 222 , 1001 . You are given a positive integer n ( 1 \u2264 n \u2264 10^ 4 ) . Represent the number n as a sum of round numbers using the minimum number of summands ( addends) . In other words, you need to represent the given number n as a sum of the least number of terms, each of which is a round number.",
    "input": "The first line contains an integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases in the input. Then t test cases follow. Each test case is a line containing an integer n ( 1 \u2264 n \u2264 10^ 4 ) .",
    "output": "Print t answers to the test cases. Each answer must begin with an integer k \u2014 the minimum number of summands. Next, k terms must follow, each of which is a round number, and their sum is n . The terms can be printed in any order. If there are several answers, print any of them.",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": "1352A"
  },
  {
    "title": "Square?",
    "url": "https://codeforces.com/problemset/problem/1351/B",
    "history": "Vasya claims that he had a paper square. He cut it into two rectangular parts using one vertical or horizontal cut. Then Vasya informed you the dimensions of these two rectangular parts. You need to check whether Vasya originally had a square. In other words, check if it is possible to make a square using two given rectangles.",
    "input": "The first line contains an integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases in the input. Then t test cases follow. Each test case is given in two lines. The first line contains two integers a_ 1 and b_ 1 ( 1 \u2264 a_ 1, b_ 1 \u2264 100 ) \u2014 the dimensions of the first one obtained after cutting rectangle. The sizes are given in random order ( that is, it is not known which of the numbers is the width, and which of the numbers is the length) . The second line contains two integers a_ 2 and b_ 2 ( 1 \u2264 a_ 2, b_ 2 \u2264 100 ) \u2014 the dimensions of the second obtained after cutting rectangle. The sizes are given in random order ( that is, it is not known which of the numbers is the width, and which of the numbers is the length) .",
    "output": "Print t answers, each of which is a string \" YES\" ( in the case of a positive answer) or \" NO\" ( in the case of a negative answer) . The letters in words can be printed in any case ( upper or lower) .",
    "note": "",
    "topics": [
      "brute force",
      "implementation",
      "math"
    ],
    "id": "1351B"
  },
  {
    "title": "Orac and Models",
    "url": "https://codeforces.com/problemset/problem/1350/B",
    "history": "There are n models in the shop numbered from 1 to n , with sizes s_ 1, s_ 2, . . . , s_ n . Orac will buy some of the models and will arrange them in the order of increasing numbers ( i. e. indices, but not sizes) . Orac thinks that the obtained arrangement is beatiful, if for any two adjacent models with indices i_ j and i_ j+ 1 ( note that i_ j < i_ j+ 1 , because Orac arranged them properly) , i_ j+ 1 is divisible by i_ j and s_ i_ j < s_ i_ j+ 1 . For example, for 6 models with sizes { 3, 6, 7, 7, 7, 7} , he can buy models with indices 1 , 2 , and 6 , and the obtained arrangement will be beautiful. Also, note that the arrangement with exactly one model is also considered beautiful. Orac wants to know the maximum number of models that he can buy, and he may ask you these queries many times.",
    "input": "The first line contains one integer t ( 1 \u2264 t\u2264 100) : the number of queries. Each query contains two lines. The first line contains one integer n ( 1\u2264 n\u2264 100 000) : the number of models in the shop, and the second line contains n integers s_ 1, . . . , s_ n ( 1\u2264 s_ i\u2264 10^ 9) : the sizes of models. It is guaranteed that the total sum of n is at most 100 000 .",
    "output": "Print t lines, the i - th of them should contain the maximum number of models that Orac can buy for the i - th query.",
    "note": "In the first query, for example, Orac can buy models with indices 2 and 4 , the arrangement will be beautiful because 4 is divisible by 2 and 6 is more than 3 . By enumerating, we can easily find that there are no beautiful arrangements with more than two models. In the second query, Orac can buy models with indices 1 , 3 , and 6 . By enumerating, we can easily find that there are no beautiful arrangements with more than three models. In the third query, there are no beautiful arrangements with more than one model.",
    "topics": [
      "dp",
      "math",
      "number theory"
    ],
    "id": "1350B"
  },
  {
    "title": "Orac and Factors",
    "url": "https://codeforces.com/problemset/problem/1350/A",
    "history": "Orac is studying number theory, and he is interested in the properties of divisors. For two positive integers a and b , a is a divisor of b if and only if there exists an integer c , such that a\u00b7 c= b . For n \u2265 2 , we will denote as f( n) the smallest positive divisor of n , except 1 . For example, f( 7) = 7, f( 10) = 2, f( 35) = 5 . For the fixed integer n , Orac decided to add f( n) to n . For example, if he had an integer n= 5 , the new value of n will be equal to 10 . And if he had an integer n= 6 , n will be changed to 8 . Orac loved it so much, so he decided to repeat this operation several times. Now, for two positive integers n and k , Orac asked you to add f( n) to n exactly k times ( note that n will change after each operation, so f( n) may change too) and tell him the final value of n . For example, if Orac gives you n= 5 and k= 2 , at first you should add f( 5) = 5 to n= 5 , so your new value of n will be equal to n= 10 , after that, you should add f( 10) = 2 to 10 , so your new ( and the final! ) value of n will be equal to 12 . Orac may ask you these queries many times.",
    "input": "The first line of the input is a single integer t ( 1\u2264 t\u2264 100) : the number of times that Orac will ask you. Each of the next t lines contains two positive integers n, k ( 2\u2264 n\u2264 10^ 6, 1\u2264 k\u2264 10^ 9) , corresponding to a query by Orac. It is guaranteed that the total sum of n is at most 10^ 6 .",
    "output": "Print t lines, the i - th of them should contain the final value of n in the i - th query by Orac.",
    "note": "In the first query, n= 5 and k= 1 . The divisors of 5 are 1 and 5 , the smallest one except 1 is 5 . Therefore, the only operation adds f( 5) = 5 to 5 , and the result is 10 . In the second query, n= 8 and k= 2 . The divisors of 8 are 1, 2, 4, 8 , where the smallest one except 1 is 2 , then after one operation 8 turns into 8+ ( f( 8) = 2) = 10 . The divisors of 10 are 1, 2, 5, 10 , where the smallest one except 1 is 2 , therefore the answer is 10+ ( f( 10) = 2) = 12 . In the third query, n is changed as follows: 3 \u2192 6 \u2192 8 \u2192 10 \u2192 12 .",
    "topics": [
      "math"
    ],
    "id": "1350A"
  },
  {
    "title": "Slime and Sequences (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1349/F2",
    "history": "Note that the only differences between easy and hard versions are the constraints on n and the time limit. You can make hacks only if all versions are solved. Slime is interested in sequences. He defined good positive integer sequences p of length n as follows: For each k> 1 that presents in p , there should be at least one pair of indices i, j , such that 1 \u2264 i < j \u2264 n , p_ i = k - 1 and p_ j = k . For the given integer n , the set of all good sequences of length n is s_ n . For the fixed integer k and the sequence p , let f_ p( k) be the number of times that k appears in p . For each k from 1 to n , Slime wants to know the following value: ( \u2211_ p\u2208 s_ n f_ p( k) ) mod 998 244 353",
    "input": "The first line contains one integer n ( 1\u2264 n\u2264 100 000) .",
    "output": "Print n integers, the i - th of them should be equal to ( \u2211_ p\u2208 s_ n f_ p( i) ) mod 998 244 353 .",
    "note": "In the first example, s= { [ 1, 1] , [ 1, 2] } . In the second example, s= { [ 1, 1, 1] , [ 1, 1, 2] , [ 1, 2, 1] , [ 1, 2, 2] , [ 2, 1, 2] , [ 1, 2, 3] } . In the third example, s= { [ 1] } .",
    "topics": [
      "dp",
      "fft",
      "math"
    ],
    "id": "1349F2"
  },
  {
    "title": "Slime and Sequences (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1349/F1",
    "history": "Note that the only differences between easy and hard versions are the constraints on n and the time limit. You can make hacks only if all versions are solved. Slime is interested in sequences. He defined good positive integer sequences p of length n as follows: For each k> 1 that presents in p , there should be at least one pair of indices i, j , such that 1 \u2264 i < j \u2264 n , p_ i = k - 1 and p_ j = k . For the given integer n , the set of all good sequences of length n is s_ n . For the fixed integer k and the sequence p , let f_ p( k) be the number of times that k appears in p . For each k from 1 to n , Slime wants to know the following value: ( \u2211_ p\u2208 s_ n f_ p( k) ) mod 998 244 353",
    "input": "The first line contains one integer n ( 1\u2264 n\u2264 5000) .",
    "output": "Print n integers, the i - th of them should be equal to ( \u2211_ p\u2208 s_ n f_ p( i) ) mod 998 244 353 .",
    "note": "In the first example, s= { [ 1, 1] , [ 1, 2] } . In the second example, s= { [ 1, 1, 1] , [ 1, 1, 2] , [ 1, 2, 1] , [ 1, 2, 2] , [ 2, 1, 2] , [ 1, 2, 3] } . In the third example, s= { [ 1] } .",
    "topics": [
      "dp",
      "fft",
      "math"
    ],
    "id": "1349F1"
  },
  {
    "title": "Slime and Biscuits",
    "url": "https://codeforces.com/problemset/problem/1349/D",
    "history": "Slime and his n friends are at a party. Slime has designed a game for his friends to play. At the beginning of the game, the i - th player has a_ i biscuits. At each second, Slime will choose a biscuit randomly uniformly among all a_ 1 + a_ 2 + . . . + a_ n biscuits, and the owner of this biscuit will give it to a random uniform player among n- 1 players except himself. The game stops when one person will have all the biscuits. As the host of the party, Slime wants to know the expected value of the time that the game will last, to hold the next activity on time. For convenience, as the answer can be represented as a rational number p/ q for coprime p and q , you need to find the value of ( p \u00b7 q^ - 1) 998 244 353 . You can prove that q 998 244 353 = \u0338 0 .",
    "input": "The first line contains one integer n ( 2\u2264 n\u2264 100 000) : the number of people playing the game. The second line contains n non- negative integers a_ 1, a_ 2, . . . , a_ n ( 1\u2264 a_ 1+ a_ 2+ . . . + a_ n\u2264 300 000) , where a_ i represents the number of biscuits the i - th person own at the beginning.",
    "output": "Print one integer: the expected value of the time that the game will last, modulo 998 244 353 .",
    "note": "For the first example, in the first second, the probability that player 1 will give the player 2 a biscuit is 1/ 2 , and the probability that player 2 will give the player 1 a biscuit is 1/ 2 . But anyway, the game will stop after exactly 1 second because only one player will occupy all biscuits after 1 second, so the answer is 1 .",
    "topics": [
      "math",
      "probabilities"
    ],
    "id": "1349D"
  },
  {
    "title": "Orac and Medians",
    "url": "https://codeforces.com/problemset/problem/1349/B",
    "history": "Slime has a sequence of positive integers a_ 1, a_ 2, . . . , a_ n . In one operation Orac can choose an arbitrary subsegment [ l . . . r] of this sequence and replace all values a_ l, a_ l + 1, . . . , a_ r to the value of median of { a_ l, a_ l + 1, . . . , a_ r} . In this problem, for the integer multiset s , the median of s is equal to the \u230a| s| + 1/ 2\u230b - th smallest number in it. For example, the median of { 1, 4, 4, 6, 5} is 4 , and the median of { 1, 7, 5, 8} is 5 . Slime wants Orac to make a_ 1 = a_ 2 = . . . = a_ n = k using these operations. Orac thinks that it is impossible, and he does not want to waste his time, so he decided to ask you if it is possible to satisfy the Slime' s requirement, he may ask you these questions several times.",
    "input": "The first line of the input is a single integer t : the number of queries. The first line of each query contains two integers n ( 1\u2264 n\u2264 100 000) and k ( 1\u2264 k\u2264 10^ 9) , the second line contains n positive integers a_ 1, a_ 2, . . . , a_ n ( 1\u2264 a_ i\u2264 10^ 9) The total sum of n is at most 100 000 .",
    "output": "The output should contain t lines. The i - th line should be equal to ' yes' if it is possible to make all integers k in some number of operations or ' no' , otherwise. You can print each letter in lowercase or uppercase.",
    "note": "In the first query, Orac can' t turn all elements into 3 . In the second query, a_ 1= 6 is already satisfied. In the third query, Orac can select the complete array and turn all elements into 2 . In the fourth query, Orac can' t turn all elements into 3 . In the fifth query, Orac can select [ 1, 6] at first and then select [ 2, 10] .",
    "topics": [
      "constructive algorithms",
      "greedy",
      "math"
    ],
    "id": "1349B"
  },
  {
    "title": "Orac and LCM",
    "url": "https://codeforces.com/problemset/problem/1349/A",
    "history": "For the multiset of positive integers s= { s_ 1, s_ 2, . . . , s_ k} , define the Greatest Common Divisor ( GCD) and Least Common Multiple ( LCM) of s as follow: ( s) is the maximum positive integer x , such that all integers in s are divisible on x . lcm( s) is the minimum positive integer x , that divisible on all integers from s . For example, ( { 8, 12} ) = 4, ( { 12, 18, 6} ) = 6 and lcm( { 4, 6} ) = 12 . Note that for any positive integer x , ( { x} ) = lcm( { x} ) = x . Orac has a sequence a with length n . He come up with the multiset t= { lcm( { a_ i, a_ j} ) | i< j} , and asked you to find the value of ( t) for him. In other words, you need to calculate the GCD of LCMs of all pairs of elements in the given sequence.",
    "input": "The first line contains one integer n ( 2\u2264 n\u2264 100 000) . The second line contains n integers, a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 200 000 ) .",
    "output": "Print one integer: ( { lcm( { a_ i, a_ j} ) | i< j} ) .",
    "note": "For the first example, t= { lcm( { 1, 1} ) } = { 1} , so ( t) = 1 . For the second example, t= { 120, 40, 80, 120, 240, 80} , and it' s not hard to see that ( t) = 40 .",
    "topics": [
      "data structures",
      "math",
      "number theory"
    ],
    "id": "1349A"
  },
  {
    "title": "Phoenix and Berries",
    "url": "https://codeforces.com/problemset/problem/1348/E",
    "history": "Phoenix is picking berries in his backyard. There are n shrubs, and each shrub has a_ i red berries and b_ i blue berries. Each basket can contain k berries. But, Phoenix has decided that each basket may only contain berries from the same shrub or berries of the same color ( red or blue) . In other words, all berries in a basket must be from the same shrub or/ and have the same color. For example, if there are two shrubs with 5 red and 2 blue berries in the first shrub and 2 red and 1 blue berries in the second shrub then Phoenix can fill 2 baskets of capacity 4 completely: the first basket will contain 3 red and 1 blue berries from the first shrub; the second basket will contain the 2 remaining red berries from the first shrub and 2 red berries from the second shrub. Help Phoenix determine the maximum number of baskets he can fill completely!",
    "input": "The first line contains two integers n and k ( 1\u2264 n, k \u2264 500 ) \u2014 the number of shrubs and the basket capacity, respectively. The i - th of the next n lines contain two integers a_ i and b_ i ( 0 \u2264 a_ i, b_ i \u2264 10^ 9 ) \u2014 the number of red and blue berries in the i - th shrub, respectively.",
    "output": "Output one integer \u2014 the maximum number of baskets that Phoenix can fill completely.",
    "note": "The first example is described above. In the second example, Phoenix can fill one basket fully using all the berries from the first ( and only) shrub. In the third example, Phoenix cannot fill any basket completely because there are less than 5 berries in each shrub, less than 5 total red berries, and less than 5 total blue berries. In the fourth example, Phoenix can put all the red berries into baskets, leaving an extra blue berry behind.",
    "topics": [
      "brute force",
      "dp",
      "greedy",
      "math"
    ],
    "id": "1348E"
  },
  {
    "title": "Phoenix and Science",
    "url": "https://codeforces.com/problemset/problem/1348/D",
    "history": "Phoenix has decided to become a scientist! He is currently investigating the growth of bacteria. Initially, on day 1 , there is one bacterium with mass 1 . Every day, some number of bacteria will split ( possibly zero or all) . When a bacterium of mass m splits, it becomes two bacteria of mass m/ 2 each. For example, a bacterium of mass 3 can split into two bacteria of mass 1. 5 . Also, every night, the mass of every bacteria will increase by one. Phoenix is wondering if it is possible for the total mass of all the bacteria to be exactly n . If it is possible, he is interested in the way to obtain that mass using the minimum possible number of nights. Help him become the best scientist!",
    "input": "The input consists of multiple test cases. The first line contains an integer t ( 1 \u2264 t \u2264 1000 ) \u2014 the number of test cases. The first line of each test case contains an integer n ( 2 \u2264 n \u2264 10^ 9 ) \u2014 the sum of bacteria masses that Phoenix is interested in.",
    "output": "For each test case, if there is no way for the bacteria to exactly achieve total mass n , print - 1. Otherwise, print two lines. The first line should contain an integer d \u2014 the minimum number of nights needed. The next line should contain d integers, with the i - th integer representing the number of bacteria that should split on the i - th day. If there are multiple solutions, print any.",
    "note": "In the first test case, the following process results in bacteria with total mass 9 : Day 1 : The bacterium with mass 1 splits. There are now two bacteria with mass 0. 5 each. Night 1 : All bacteria' s mass increases by one. There are now two bacteria with mass 1. 5 . Day 2 : None split. Night 2 : There are now two bacteria with mass 2. 5 . Day 3 : Both bacteria split. There are now four bacteria with mass 1. 25 . Night 3 : There are now four bacteria with mass 2. 25 . The total mass is 2. 25+ 2. 25+ 2. 25+ 2. 25= 9 . It can be proved that 3 is the minimum number of nights needed. There are also other ways to obtain total mass 9 in 3 nights. In the second test case, the following process results in bacteria with total mass 11 : Day 1 : The bacterium with mass 1 splits. There are now two bacteria with mass 0. 5 . Night 1 : There are now two bacteria with mass 1. 5 . Day 2 : One bacterium splits. There are now three bacteria with masses 0. 75 , 0. 75 , and 1. 5 . Night 2 : There are now three bacteria with masses 1. 75 , 1. 75 , and 2. 5 . Day 3 : The bacteria with mass 1. 75 and the bacteria with mass 2. 5 split. There are now five bacteria with masses 0. 875 , 0. 875 , 1. 25 , 1. 25 , and 1. 75 . Night 3 : There are now five bacteria with masses 1. 875 , 1. 875 , 2. 25 , 2. 25 , and 2. 75 . The total mass is 1. 875+ 1. 875+ 2. 25+ 2. 25+ 2. 75= 11 . It can be proved that 3 is the minimum number of nights needed. There are also other ways to obtain total mass 11 in 3 nights. In the third test case, the bacterium does not split on day 1 , and then grows to mass 2 during night 1 .",
    "topics": [
      "binary search",
      "constructive algorithms",
      "greedy",
      "implementation",
      "math"
    ],
    "id": "1348D"
  },
  {
    "title": "Phoenix and Balance",
    "url": "https://codeforces.com/problemset/problem/1348/A",
    "history": "Phoenix has n coins with weights 2^ 1, 2^ 2, . . . , 2^ n . He knows that n is even. He wants to split the coins into two piles such that each pile has exactly n/ 2 coins and the difference of weights between the two piles is minimized. Formally, let a denote the sum of weights in the first pile, and b denote the sum of weights in the second pile. Help Phoenix minimize | a- b| , the absolute value of a- b .",
    "input": "The input consists of multiple test cases. The first line contains an integer t ( 1 \u2264 t \u2264 100 ) \u2014 the number of test cases. The first line of each test case contains an integer n ( 2 \u2264 n \u2264 30 ; n is even) \u2014 the number of coins that Phoenix has.",
    "output": "For each test case, output one integer \u2014 the minimum possible difference of weights between the two piles.",
    "note": "In the first test case, Phoenix has two coins with weights 2 and 4 . No matter how he divides the coins, the difference will be 4- 2= 2 . In the second test case, Phoenix has four coins of weight 2 , 4 , 8 , and 16 . It is optimal for Phoenix to place coins with weights 2 and 16 in one pile, and coins with weights 4 and 8 in another pile. The difference is ( 2+ 16) - ( 4+ 8) = 6 .",
    "topics": [
      "greedy",
      "math"
    ],
    "id": "1348A"
  },
  {
    "title": "Two IP Cameras",
    "url": "https://codeforces.com/problemset/problem/1346/G",
    "history": "You have two IP cameras of the same model. Each camera can take photos starting from some moment of time with a fixed period. You can freely choose the starting moment but you can choose the period only as one of k values p_ 1, p_ 2, . . . , p_ k which are chosen by the camera' s manufacturer. You have n moments of interest x_ 1, x_ 2, . . . , x_ n . You' d like to configure both cameras in such a way that at least one camera will take a photo in each of these moments. Configuring the camera means setting the moment when it takes the first photo and the gap between two consecutive photos ( which should be one of the values p_ 1, p_ 2, . . . , p_ k ) . It' s not a problem for you that cameras can take photos at other moments of time \u2014 you only care about moments of interest.",
    "input": "The first line contains two integers k and n ( 1 \u2264 k \u2264 10^ 5 ; 2 \u2264 n \u2264 10^ 5 ) \u2014 the number of periods to choose and the number of moments of interest. The second line contains k integers p_ 1, p_ 2, . . . , p_ k ( 1 \u2264 p_ 1 < p_ 2 < . . . < p_ k \u2264 10^ 6 ) \u2014 the periods to choose in the ascending order. The third line contains n integers x_ 1, x_ 2, . . . , x_ n ( 1 \u2264 x_ 1 < x_ 2 < . . . < x_ n \u2264 10^ 6 ) \u2014 the moments of interest in the ascending order.",
    "output": "Print YES ( case insensitive) in the first line if there is a way to configure cameras. In the second line, print two integers s_ 1 and cp_ 1 ( 1 \u2264 s_ 1 \u2264 10^ 6 ; 1 \u2264 cp_ 1 \u2264 10^ 6 ; cp_ 1 \u2208{ p_ 1, . . . , p_ k} ) \u2014 the starting moment and the period for the first camera. The period should be one of the given periods. In the third line, print two integers s_ 2 and cp_ 2 ( 1 \u2264 s_ 2 \u2264 10^ 6 ; 1 \u2264 cp_ 2 \u2264 10^ 6 ; cp_ 2 \u2208{ p_ 1, . . . , p_ k} ) \u2014 the starting moment and the period for the second camera. The period should be one of the given periods. If there is no way to configure cameras, print NO ( case insensitive) . If there are multiple ways, you may print any of them.",
    "note": "",
    "topics": [
      "*special",
      "math",
      "number theory"
    ],
    "id": "1346G"
  },
  {
    "title": "Dune II: Battle For Arrakis",
    "url": "https://codeforces.com/problemset/problem/1346/F",
    "history": "You' re at the last mission in one very old and very popular strategy game Dune II: Battle For Arrakis. The map of the mission can be represented as a rectangular matrix of size n \u00d7 m . Initially, there are a_ i, j units of your army in the cell ( i, j) . You want to prepare for the final battle, so you want to move all your army into exactly one cell of the map ( i. e. nm- 1 cells should contain 0 units of the army and the remaining cell should contain the entire army) . To do this, you can do some ( possibly, zero) number of moves. During one move, you can select exactly one unit from some cell and move it to one of the adjacent by side cells. I. e. from the cell ( i, j) you can move the unit to cells: ( i - 1, j) ; ( i, j - 1) ; ( i + 1, j) ; ( i, j + 1) . Of course, you want to move all your army into exactly one cell as fast as possible. So, you want to know the minimum number of moves you need to do that. And, of course, life goes on, so the situation on the map changes. There are q updates, the i - th update is denoted by three integers x, y, z . This update affects the army in the cell ( x, y) : after this update, the number of units in the cell ( x, y) becomes z ( i. e. you replace a_ x, y with z ) . Also, you want to determine, for each i , the minimum number of moves needed to move your entire army into exactly one cell with the first i updates applied to the initial map. In other words, the map after the i - th update equals the initial map with the first i updates applied to it.",
    "input": "The first line of the input contains three integers n, m and q ( 1 \u2264 n, m \u2264 1000; 1 \u2264 q \u2264 5000 ) \u2014 the size of the matrix and the number of updates correspondingly. The next n lines contain m integers each, where the j - th integer in the i - th line is a_ i, j ( 1 \u2264 a_ i, j\u2264 10^ 9 ) \u2014 the number of units in the cell ( i, j) . The next q lines contain three integers each, where the i - th line contains three integers x_ i, y_ i and z_ i ( 1 \u2264 x_ i \u2264 n; 1 \u2264 y_ i \u2264 m; 1 \u2264 z_ i \u2264 10^ 9 ) \u2014 the cell in which the number of units updates and the new number of units in this cell correspondingly.",
    "output": "Print q+ 1 integers r_ 0, r_ 1, r_ 2, . . . , r_ n , where r_ 0 is the minimum number of moves you need to move all your army into exactly one cell, and r_ i for all i from 1 to q is the minimum number of moves you need to move all your army into exactly one cell after the first i updates.",
    "note": "",
    "topics": [
      "*special",
      "data structures",
      "greedy",
      "math"
    ],
    "id": "1346F"
  },
  {
    "title": "Color Revolution",
    "url": "https://codeforces.com/problemset/problem/1346/A",
    "history": "Hmm, how long has it been since the last color revolution? 5 years? ! It' s totally the time to make a new one! So the general idea is the following. Division 1 should have n_ 1 participants. Division 2 should have n_ 2 and be exactly k times bigger than division 1 ( n_ 2 = k \u00b7 n_ 1 ) . Division 3 should have n_ 3 = k \u00b7 n_ 2 participants. Finally, division 4 should have n_ 4 = k \u00b7 n_ 3 participants. There are n participants on Codeforces in total. So n_ 1 + n_ 2 + n_ 3 + n_ 4 should be exactly equal to n . You know the values of n and k . You also know that n and k are chosen in such a way that there exist values n_ 1, n_ 2, n_ 3 and n_ 4 such that all the conditions are satisfied. What will be the number of participants in each division ( n_ 1, n_ 2, n_ 3 and n_ 4 ) after the revolution?",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 1000 ) \u2014 the number of testcases. Each of the next t lines contains two integers n and k ( 4 \u2264 n \u2264 10^ 9 ; 1 \u2264 k \u2264 500 ) \u2014 the total number of participants on Codeforces and the size multiplier for the corresponding testcase. In each testcase, n and k are chosen in such a way that the answer exists.",
    "output": "For each testcase print four integers n_ 1, n_ 2, n_ 3 and n_ 4 such that n_ 2 = k \u00b7 n_ 1 , n_ 3 = k \u00b7 n_ 2 , n_ 4 = k \u00b7 n_ 3 and n_ 1 + n_ 2 + n_ 3 + n_ 4 = n .",
    "note": "",
    "topics": [
      "*special",
      "math"
    ],
    "id": "1346A"
  },
  {
    "title": "Card Constructions",
    "url": "https://codeforces.com/problemset/problem/1345/B",
    "history": "A card pyramid of height 1 is constructed by resting two cards against each other. For h> 1 , a card pyramid of height h is constructed by placing a card pyramid of height h- 1 onto a base. A base consists of h pyramids of height 1 , and h- 1 cards on top. For example, card pyramids of heights 1 , 2 , and 3 look as follows: You start with n cards and build the tallest pyramid that you can. If there are some cards remaining, you build the tallest pyramid possible with the remaining cards. You repeat this process until it is impossible to build another pyramid. In the end, how many pyramids will you have constructed?",
    "input": "Each test consists of multiple test cases. The first line contains a single integer t ( 1\u2264 t\u2264 1000 ) \u2014 the number of test cases. Next t lines contain descriptions of test cases. Each test case contains a single integer n ( 1\u2264 n\u2264 10^ 9 ) \u2014 the number of cards. It is guaranteed that the sum of n over all test cases does not exceed 10^ 9 .",
    "output": "For each test case output a single integer \u2014 the number of pyramids you will have constructed in the end.",
    "note": "In the first test, you construct a pyramid of height 1 with 2 cards. There is 1 card remaining, which is not enough to build a pyramid. In the second test, you build two pyramids, each of height 2 , with no cards remaining. In the third test, you build one pyramid of height 3 , with no cards remaining. In the fourth test, you build one pyramid of height 3 with 9 cards remaining. Then you build a pyramid of height 2 with 2 cards remaining. Then you build a final pyramid of height 1 with no cards remaining. In the fifth test, one card is not enough to build any pyramids.",
    "topics": [
      "binary search",
      "brute force",
      "dp",
      "math"
    ],
    "id": "1345B"
  },
  {
    "title": "Puzzle Pieces",
    "url": "https://codeforces.com/problemset/problem/1345/A",
    "history": "You are given a special jigsaw puzzle consisting of n\u00b7 m identical pieces. Every piece has three tabs and one blank, as pictured below. The jigsaw puzzle is considered solved if the following conditions hold: The pieces are arranged into a grid with n rows and m columns. For any two pieces that share an edge in the grid, a tab of one piece fits perfectly into a blank of the other piece. Through rotation and translation of the pieces, determine if it is possible to solve the jigsaw puzzle.",
    "input": "The test consists of multiple test cases. The first line contains a single integer t ( 1\u2264 t\u2264 1000 ) \u2014 the number of test cases. Next t lines contain descriptions of test cases. Each test case contains two integers n and m ( 1 \u2264 n, m \u2264 10^ 5 ) .",
    "output": "For each test case output a single line containing \" YES\" if it is possible to solve the jigsaw puzzle, or \" NO\" otherwise. You can print each letter in any case ( upper or lower) .",
    "note": "For the first test case, this is an example solution: For the second test case, we can show that no solution exists. For the third test case, this is an example solution:",
    "topics": [
      "math"
    ],
    "id": "1345A"
  },
  {
    "title": "R\u00e9sum\u00e9 Review",
    "url": "https://codeforces.com/problemset/problem/1344/D",
    "history": "Uh oh! Applications to tech companies are due soon, and you' ve been procrastinating by doing contests instead! ( Let' s pretend for now that it is actually possible to get a job in these uncertain times. ) You have completed many programming projects. In fact, there are exactly n types of programming projects, and you have completed a_ i projects of type i . Your re\u0301sume\u0301 has limited space, but you want to carefully choose them in such a way that maximizes your chances of getting hired. You want to include several projects of the same type to emphasize your expertise, but you also don' t want to include so many that the low- quality projects start slipping in. Specifically, you determine the following quantity to be a good indicator of your chances of getting hired: f( b_ 1, . . . , b_ n) = \u2211_ i= 1^ n b_ i( a_ i- b_ i^ 2) . Here, b_ i denotes the number of projects of type i you include in your re\u0301sume\u0301. Of course, you cannot include more projects than you have completed, so you require 0\u2264 b_ i \u2264 a_ i for all i . Your re\u0301sume\u0301 only has enough room for k projects, and you will absolutely not be hired if your re\u0301sume\u0301 has empty space, so you require \u2211_ i= 1^ n b_ i= k . Find values for b_ 1, . . . , b_ n that maximize the value of f( b_ 1, . . . , b_ n) while satisfying the above two constraints.",
    "input": "The first line contains two integers n and k ( 1\u2264 n\u2264 10^ 5 , 1\u2264 k\u2264\u2211_ i= 1^ n a_ i ) \u2014 the number of types of programming projects and the re\u0301sume\u0301 size, respectively. The next line contains n integers a_ 1, . . . , a_ n ( 1\u2264 a_ i\u2264 10^ 9 ) \u2014 a_ i is equal to the number of completed projects of type i .",
    "output": "In a single line, output n integers b_ 1, . . . , b_ n that achieve the maximum value of f( b_ 1, . . . , b_ n) , while satisfying the requirements 0\u2264 b_ i\u2264 a_ i and \u2211_ i= 1^ n b_ i= k . If there are multiple solutions, output any. Note that you do not have to output the value f( b_ 1, . . . , b_ n) .",
    "note": "For the first test, the optimal answer is f= - 269 . Note that a larger f value is possible if we ignored the constraint \u2211_ i= 1^ n b_ i= k . For the second test, the optimal answer is f= 9 .",
    "topics": [
      "binary search",
      "greedy",
      "math"
    ],
    "id": "1344D"
  },
  {
    "title": "Quantifier Question",
    "url": "https://codeforces.com/problemset/problem/1344/C",
    "history": "Logical quantifiers are very useful tools for expressing claims about a set. For this problem, let' s focus on the set of real numbers specifically. The set of real numbers includes zero and negatives. There are two kinds of quantifiers: universal ( \u2200 ) and existential ( \u2203 ) . You can read more about them here. The universal quantifier is used to make a claim that a statement holds for all real numbers. For example: \u2200 x, x< 100 is read as: for all real numbers x , x is less than 100 . This statement is false. \u2200 x, x> x- 1 is read as: for all real numbers x , x is greater than x- 1 . This statement is true. The existential quantifier is used to make a claim that there exists some real number for which the statement holds. For example: \u2203 x, x< 100 is read as: there exists a real number x such that x is less than 100 . This statement is true. \u2203 x, x> x- 1 is read as: there exists a real number x such that x is greater than x- 1 . This statement is true. Moreover, these quantifiers can be nested. For example: \u2200 x, \u2203 y, x< y is read as: for all real numbers x , there exists a real number y such that x is less than y . This statement is true since for every x , there exists y= x+ 1 . \u2203 y, \u2200 x, x< y is read as: there exists a real number y such that for all real numbers x , x is less than y . This statement is false because it claims that there is a maximum real number: a number y larger than every x . Note that the order of variables and quantifiers is important for the meaning and veracity of a statement. There are n variables x_ 1, x_ 2, . . . , x_ n , and you are given some formula of the form f( x_ 1, . . . , x_ n) : = ( x_ j_ 1< x_ k_ 1) ( x_ j_ 2< x_ k_ 2) \u22ef ( x_ j_ m< x_ k_ m) , where denotes logical AND. That is, f( x_ 1, . . . , x_ n) is true if every inequality x_ j_ i< x_ k_ i holds. Otherwise, if at least one inequality does not hold, then f( x_ 1, . . . , x_ n) is false. Your task is to assign quantifiers Q_ 1, . . . , Q_ n to either universal ( \u2200 ) or existential ( \u2203 ) so that the statement Q_ 1 x_ 1, Q_ 2 x_ 2, . . . , Q_ n x_ n, f( x_ 1, . . . , x_ n) is true, and the number of universal quantifiers is maximized, or determine that the statement is false for every possible assignment of quantifiers. Note that the order the variables appear in the statement is fixed. For example, if f( x_ 1, x_ 2) : = ( x_ 1< x_ 2) then you are not allowed to make x_ 2 appear first and use the statement \u2200 x_ 2, \u2203 x_ 1, x_ 1< x_ 2 . If you assign Q_ 1= \u2203 and Q_ 2= \u2200 , it will only be interpreted as \u2203 x_ 1, \u2200 x_ 2, x_ 1< x_ 2 .",
    "input": "The first line contains two integers n and m ( 2\u2264 n\u2264 2\u00b7 10^ 5 ; 1\u2264 m\u2264 2\u00b7 10^ 5 ) \u2014 the number of variables and the number of inequalities in the formula, respectively. The next m lines describe the formula. The i - th of these lines contains two integers j_ i , k_ i ( 1\u2264 j_ i, k_ i\u2264 n , j_ i k_ i ) .",
    "output": "If there is no assignment of quantifiers for which the statement is true, output a single integer - 1 . Otherwise, on the first line output an integer, the maximum possible number of universal quantifiers. On the next line, output a string of length n , where the i - th character is \" A\" if Q_ i should be a universal quantifier ( \u2200 ) , or \" E\" if Q_ i should be an existential quantifier ( \u2203 ) . All letters should be upper- case. If there are multiple solutions where the number of universal quantifiers is maximum, print any.",
    "note": "For the first test, the statement \u2200 x_ 1, \u2203 x_ 2, x_ 1< x_ 2 is true. Answers of \" EA\" and \" AA\" give false statements. The answer \" EE\" gives a true statement, but the number of universal quantifiers in this string is less than in our answer. For the second test, we can show that no assignment of quantifiers, for which the statement is true exists. For the third test, the statement \u2200 x_ 1, \u2200 x_ 2, \u2203 x_ 3, ( x_ 1< x_ 3) ( x_ 2< x_ 3) is true: We can set x_ 3= max{ x_ 1, x_ 2} + 1 .",
    "topics": [
      "dfs and similar",
      "dp",
      "graphs",
      "math"
    ],
    "id": "1344C"
  },
  {
    "title": "Hilbert's Hotel",
    "url": "https://codeforces.com/problemset/problem/1344/A",
    "history": "Hilbert' s Hotel is a very unusual hotel since the number of rooms is infinite! In fact, there is exactly one room for every integer, including zero and negative integers. Even stranger, the hotel is currently at full capacity, meaning there is exactly one guest in every room. The hotel' s manager, David Hilbert himself, decides he wants to shuffle the guests around because he thinks this will create a vacancy ( a room without a guest) . For any integer k and positive integer n , let k n denote the remainder when k is divided by n . More formally, r= k n is the smallest non- negative integer such that k- r is divisible by n . It always holds that 0\u2264 k n\u2264 n- 1 . For example, 100 12= 4 and ( - 1337) 3= 1 . Then the shuffling works as follows. There is an array of n integers a_ 0, a_ 1, . . . , a_ n- 1 . Then for each integer k , the guest in room k is moved to room number k+ a_ k n . After this shuffling process, determine if there is still exactly one guest assigned to each room. That is, there are no vacancies or rooms with multiple guests.",
    "input": "Each test consists of multiple test cases. The first line contains a single integer t ( 1\u2264 t\u2264 10^ 4 ) \u2014 the number of test cases. Next 2t lines contain descriptions of test cases. The first line of each test case contains a single integer n ( 1\u2264 n\u2264 2\u00b7 10^ 5 ) \u2014 the length of the array. The second line of each test case contains n integers a_ 0, a_ 1, . . . , a_ n- 1 ( - 10^ 9\u2264 a_ i\u2264 10^ 9 ) . It is guaranteed that the sum of n over all test cases does not exceed 2\u00b7 10^ 5 .",
    "output": "For each test case, output a single line containing \" YES\" if there is exactly one guest assigned to each room after the shuffling process, or \" NO\" otherwise. You can print each letter in any case ( upper or lower) .",
    "note": "In the first test case, every guest is shifted by 14 rooms, so the assignment is still unique. In the second test case, even guests move to the right by 1 room, and odd guests move to the left by 1 room. We can show that the assignment is still unique. In the third test case, every fourth guest moves to the right by 1 room, and the other guests move to the right by 5 rooms. We can show that the assignment is still unique. In the fourth test case, guests 0 and 1 are both assigned to room 3 . In the fifth test case, guests 1 and 2 are both assigned to room 2 .",
    "topics": [
      "math",
      "number theory",
      "sortings"
    ],
    "id": "1344A"
  },
  {
    "title": "Balanced Array",
    "url": "https://codeforces.com/problemset/problem/1343/B",
    "history": "You are given a positive integer n , it is guaranteed that n is even ( i. e. divisible by 2 ) . You want to construct the array a of length n such that: The first n/ 2 elements of a are even ( divisible by 2 ) ; the second n/ 2 elements of a are odd ( not divisible by 2 ) ; all elements of a are distinct and positive; the sum of the first half equals to the sum of the second half ( \u2211_ i= 1^ n/ 2 a_ i = \u2211_ i= n/ 2 + 1^ n a_ i ) . If there are multiple answers, you can print any. It is not guaranteed that the answer exists. You have to answer t independent test cases.",
    "input": "The first line of the input contains one integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. Then t test cases follow. The only line of the test case contains one integer n ( 2 \u2264 n \u2264 2 \u00b7 10^ 5 ) \u2014 the length of the array. It is guaranteed that that n is even ( i. e. divisible by 2 ) . It is guaranteed that the sum of n over all test cases does not exceed 2 \u00b7 10^ 5 ( \u2211 n \u2264 2 \u00b7 10^ 5 ) .",
    "output": "For each test case, print the answer \u2014 \" NO\" ( without quotes) , if there is no suitable answer for the given test case or \" YES\" in the first line and any suitable array a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 9 ) satisfying conditions from the problem statement on the second line.",
    "note": "",
    "topics": [
      "constructive algorithms",
      "math"
    ],
    "id": "1343B"
  },
  {
    "title": "Candies",
    "url": "https://codeforces.com/problemset/problem/1343/A",
    "history": "Recently Vova found n candy wrappers. He remembers that he bought x candies during the first day, 2x candies during the second day, 4x candies during the third day, . . . , 2^ k- 1 x candies during the k - th day. But there is an issue: Vova remembers neither x nor k but he is sure that x and k are positive integers and k > 1 . Vova will be satisfied if you tell him any positive integer x so there is an integer k> 1 that x + 2x + 4x + . . . + 2^ k- 1 x = n . It is guaranteed that at least one solution exists. Note that k > 1 . You have to answer t independent test cases.",
    "input": "The first line of the input contains one integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. Then t test cases follow. The only line of the test case contains one integer n ( 3 \u2264 n \u2264 10^ 9 ) \u2014 the number of candy wrappers Vova found. It is guaranteed that there is some positive integer x and integer k> 1 that x + 2x + 4x + . . . + 2^ k- 1 x = n .",
    "output": "Print one integer \u2014 any positive integer value of x so there is an integer k> 1 that x + 2x + 4x + . . . + 2^ k- 1 x = n .",
    "note": "In the first test case of the example, one of the possible answers is x= 1, k= 2 . Then 1 \u00b7 1 + 2 \u00b7 1 equals n= 3 . In the second test case of the example, one of the possible answers is x= 2, k= 2 . Then 1 \u00b7 2 + 2 \u00b7 2 equals n= 6 . In the third test case of the example, one of the possible answers is x= 1, k= 3 . Then 1 \u00b7 1 + 2 \u00b7 1 + 4 \u00b7 1 equals n= 7 . In the fourth test case of the example, one of the possible answers is x= 7, k= 2 . Then 1 \u00b7 7 + 2 \u00b7 7 equals n= 21 . In the fifth test case of the example, one of the possible answers is x= 4, k= 3 . Then 1 \u00b7 4 + 2 \u00b7 4 + 4 \u00b7 4 equals n= 28 .",
    "topics": [
      "brute force",
      "math"
    ],
    "id": "1343A"
  },
  {
    "title": "Placing Rooks",
    "url": "https://codeforces.com/problemset/problem/1342/E",
    "history": "Calculate the number of ways to place n rooks on n \u00d7 n chessboard so that both following conditions are met: each empty cell is under attack; exactly k pairs of rooks attack each other. An empty cell is under attack if there is at least one rook in the same row or at least one rook in the same column. Two rooks attack each other if they share the same row or column, and there are no other rooks between them. For example, there are only two pairs of rooks that attack each other in the following picture: One of the ways to place the rooks for n = 3 and k = 2 Two ways to place the rooks are considered different if there exists at least one cell which is empty in one of the ways but contains a rook in another way. The answer might be large, so print it modulo 998244353 .",
    "input": "The only line of the input contains two integers n and k ( 1 \u2264 n \u2264 200000 ; 0 \u2264 k \u2264n( n - 1) / 2 ) .",
    "output": "Print one integer \u2014 the number of ways to place the rooks, taken modulo 998244353 .",
    "note": "",
    "topics": [
      "combinatorics",
      "fft",
      "math"
    ],
    "id": "1342E"
  },
  {
    "title": "Yet Another Counting Problem",
    "url": "https://codeforces.com/problemset/problem/1342/C",
    "history": "You are given two integers a and b , and q queries. The i - th query consists of two numbers l_ i and r_ i , and the answer to it is the number of integers x such that l_ i \u2264 x \u2264 r_ i , and ( ( x a) b) ( ( x b) a) . Calculate the answer for each query. Recall that y z is the remainder of the division of y by z . For example, 5 3 = 2 , 7 8 = 7 , 9 4 = 1 , 9 9 = 0 .",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 100 ) \u2014 the number of test cases. Then the test cases follow. The first line of each test case contains three integers a , b and q ( 1 \u2264 a, b \u2264 200 ; 1 \u2264 q \u2264 500 ) . Then q lines follow, each containing two integers l_ i and r_ i ( 1 \u2264 l_ i \u2264 r_ i \u2264 10^ 18 ) for the corresponding query.",
    "output": "For each test case, print q integers \u2014 the answers to the queries of this test case in the order they appear.",
    "note": "",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "1342C"
  },
  {
    "title": "Road To Zero",
    "url": "https://codeforces.com/problemset/problem/1342/A",
    "history": "You are given two integers x and y . You can perform two types of operations: Pay a dollars and increase or decrease any of these integers by 1 . For example, if x = 0 and y = 7 there are four possible outcomes after this operation: x = 0 , y = 6 ; x = 0 , y = 8 ; x = - 1 , y = 7 ; x = 1 , y = 7 . Pay b dollars and increase or decrease both integers by 1 . For example, if x = 0 and y = 7 there are two possible outcomes after this operation: x = - 1 , y = 6 ; x = 1 , y = 8 . Your goal is to make both given integers equal zero simultaneously, i. e. x = y = 0 . There are no other requirements. In particular, it is possible to move from x= 1 , y= 0 to x= y= 0 . Calculate the minimum amount of dollars you have to spend on it.",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 100 ) \u2014 the number of testcases. The first line of each test case contains two integers x and y ( 0 \u2264 x, y \u2264 10^ 9 ) . The second line of each test case contains two integers a and b ( 1 \u2264 a, b \u2264 10^ 9 ) .",
    "output": "For each test case print one integer \u2014 the minimum amount of dollars you have to spend.",
    "note": "In the first test case you can perform the following sequence of operations: first, second, first. This way you spend 391 + 555 + 391 = 1337 dollars. In the second test case both integers are equal to zero initially, so you dont' have to spend money.",
    "topics": [
      "greedy",
      "math"
    ],
    "id": "1342A"
  },
  {
    "title": "Nastya and Rice",
    "url": "https://codeforces.com/problemset/problem/1341/A",
    "history": "Nastya just made a huge mistake and dropped a whole package of rice on the floor. Mom will come soon. If she sees this, then Nastya will be punished. In total, Nastya dropped n grains. Nastya read that each grain weighs some integer number of grams from a - b to a + b , inclusive ( numbers a and b are known) , and the whole package of n grains weighs from c - d to c + d grams, inclusive ( numbers c and d are known) . The weight of the package is the sum of the weights of all n grains in it. Help Nastya understand if this information can be correct. In other words, check whether each grain can have such a mass that the i - th grain weighs some integer number x_ i ( a - b \u2264 x_ i \u2264 a + b) , and in total they weigh from c - d to c + d , inclusive ( c - d \u2264\u2211_ i= 1^ nx_ i\u2264 c + d ) .",
    "input": "The input consists of multiple test cases. The first line contains a single integer t ( 1 \u2264 t \u2264 1000) \u2014 the number of test cases. The next t lines contain descriptions of the test cases, each line contains 5 integers: n ( 1 \u2264 n \u2264 1000) \u2014 the number of grains that Nastya counted and a, b, c, d ( 0 \u2264 b < a \u2264 1000, 0 \u2264 d < c \u2264 1000) \u2014 numbers that determine the possible weight of one grain of rice ( from a - b to a + b ) and the possible total weight of the package ( from c - d to c + d ) .",
    "output": "For each test case given in the input print \" Yes\" , if the information about the weights is not inconsistent, and print \" No\" if n grains with masses from a - b to a + b cannot make a package with a total mass from c - d to c + d .",
    "note": "In the first test case of the example, we can assume that each grain weighs 17 grams, and a pack 119 grams, then really Nastya could collect the whole pack. In the third test case of the example, we can assume that each grain weighs 16 grams, and a pack 128 grams, then really Nastya could collect the whole pack. In the fifth test case of the example, we can be assumed that 3 grains of rice weigh 2 , 2 , and 3 grams, and a pack is 7 grams, then really Nastya could collect the whole pack. In the second and fourth test cases of the example, we can prove that it is impossible to determine the correct weight of all grains of rice and the weight of the pack so that the weight of the pack is equal to the total weight of all collected grains.",
    "topics": [
      "math"
    ],
    "id": "1341A"
  },
  {
    "title": "Filling Diamonds",
    "url": "https://codeforces.com/problemset/problem/1339/A",
    "history": "You have integer n . Calculate how many ways are there to fully cover belt- like area of 4n- 2 triangles with diamond shapes. Diamond shape consists of two triangles. You can move, rotate or flip the shape, but you cannot scale it. 2 coverings are different if some 2 triangles are covered by the same diamond shape in one of them and by different diamond shapes in the other one. Please look at pictures below for better understanding. On the left you can see the diamond shape you will use, and on the right you can see the area you want to fill. These are the figures of the area you want to fill for n = 1, 2, 3, 4 . You have to answer t independent test cases.",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. Each of the next t lines contains a single integer n ( 1 \u2264 n \u2264 10^ 9 ) .",
    "output": "For each test case, print the number of ways to fully cover belt- like area of 4n- 2 triangles using diamond shape. It can be shown that under given constraints this number of ways doesn' t exceed 10^ 18 .",
    "note": "In the first test case, there are the following 2 ways to fill the area: In the second test case, there is a unique way to fill the area:",
    "topics": [
      "brute force",
      "dp",
      "implementation",
      "math"
    ],
    "id": "1339A"
  },
  {
    "title": "Nested Rubber Bands",
    "url": "https://codeforces.com/problemset/problem/1338/D",
    "history": "You have a tree of n vertices. You are going to convert this tree into n rubber bands on infinitely large plane. Conversion rule follows: For every pair of vertices a and b , rubber bands a and b should intersect if and only if there is an edge exists between a and b in the tree. Shape of rubber bands must be a simple loop. In other words, rubber band is a loop which doesn' t self- intersect. Now let' s define following things: Rubber band a includes rubber band b , if and only if rubber band b is in rubber band a ' s area, and they don' t intersect each other. Sequence of rubber bands a_ 1, a_ 2, . . . , a_ k ( k \u2265 2 ) are nested, if and only if for all i ( 2 \u2264 i \u2264 k ) , a_ i- 1 includes a_ i . This is an example of conversion. Note that rubber bands 5 and 6 are nested. It can be proved that is it possible to make a conversion and sequence of nested rubber bands under given constraints. What is the maximum length of sequence of nested rubber bands can be obtained from given tree? Find and print it.",
    "input": "The first line contains integer n ( 3 \u2264 n \u2264 10^ 5 ) \u2014 the number of vertices in tree. The i - th of the next n- 1 lines contains two integers a_ i and b_ i ( 1 \u2264 a_ i b_ i\u2264 n ) \u2014 it means there is an edge between a_ i and b_ i . It is guaranteed that given graph forms tree of n vertices.",
    "output": "Print the answer.",
    "note": "In the first sample, you can obtain a nested sequence of 4 rubber bands( 1 , 2 , 5 , and 6 ) by the conversion shown below. Of course, there are other conversions exist to make a nested sequence of 4 rubber bands. However, you cannot make sequence of 5 or more nested rubber bands with given tree. You can see one of the possible conversions for the second sample below.",
    "topics": [
      "constructive algorithms",
      "dfs and similar",
      "dp",
      "math",
      "trees"
    ],
    "id": "1338D"
  },
  {
    "title": "Perfect Triples",
    "url": "https://codeforces.com/problemset/problem/1338/C",
    "history": "Consider the infinite sequence s of positive integers, created by repeating the following steps: Find the lexicographically smallest triple of positive integers ( a, b, c) such that a \u2295 b \u2295 c = 0 , where \u2295 denotes the bitwise XOR operation. a , b , c are not in s . Here triple of integers ( a_ 1, b_ 1, c_ 1) is considered to be lexicographically smaller than triple ( a_ 2, b_ 2, c_ 2) if sequence [ a_ 1, b_ 1, c_ 1] is lexicographically smaller than sequence [ a_ 2, b_ 2, c_ 2] . Append a , b , c to s in this order. Go back to the first step. You have integer n . Find the n - th element of s . You have to answer t independent test cases. A sequence a is lexicographically smaller than a sequence b if in the first position where a and b differ, the sequence a has a smaller element than the corresponding element in b .",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 5 ) \u2014 the number of test cases. Each of the next t lines contains a single integer n ( 1\u2264 n \u2264 10^ 16 ) \u2014 the position of the element you want to know.",
    "output": "In each of the t lines, output the answer to the corresponding test case.",
    "note": "The first elements of s are 1, 2, 3, 4, 8, 12, 5, 10, 15, . . .",
    "topics": [
      "bitmasks",
      "brute force",
      "constructive algorithms",
      "divide and conquer",
      "math"
    ],
    "id": "1338C"
  },
  {
    "title": "Edge Weight Assignment",
    "url": "https://codeforces.com/problemset/problem/1338/B",
    "history": "You have unweighted tree of n vertices. You have to assign a positive weight to each edge so that the following condition would hold: For every two different leaves v_ 1 and v_ 2 of this tree, bitwise XOR of weights of all edges on the simple path between v_ 1 and v_ 2 has to be equal to 0 . Note that you can put very large positive integers ( like 10^ ( 10^ 10) ) . It' s guaranteed that such assignment always exists under given constraints. Now let' s define f as the number of distinct weights in assignment. In this example, assignment is valid, because bitwise XOR of all edge weights between every pair of leaves is 0 . f value is 2 here, because there are 2 distinct edge weights( 4 and 5 ) . In this example, assignment is invalid, because bitwise XOR of all edge weights between vertex 1 and vertex 6 ( 3, 4, 5, 4 ) is not 0 . What are the minimum and the maximum possible values of f for the given tree? Find and print both.",
    "input": "The first line contains integer n ( 3 \u2264 n \u2264 10^ 5 ) \u2014 the number of vertices in given tree. The i - th of the next n- 1 lines contains two integers a_ i and b_ i ( 1 \u2264 a_ i b_ i\u2264 n ) \u2014 it means there is an edge between a_ i and b_ i . It is guaranteed that given graph forms tree of n vertices.",
    "output": "Print two integers \u2014 the minimum and maximum possible value of f can be made from valid assignment of given tree. Note that it' s always possible to make an assignment under given constraints.",
    "note": "In the first example, possible assignments for each minimum and maximum are described in picture below. Of course, there are multiple possible assignments for each minimum and maximum. In the second example, possible assignments for each minimum and maximum are described in picture below. The f value of valid assignment of this tree is always 3 . In the third example, possible assignments for each minimum and maximum are described in picture below. Of course, there are multiple possible assignments for each minimum and maximum.",
    "topics": [
      "bitmasks",
      "constructive algorithms",
      "dfs and similar",
      "greedy",
      "math",
      "trees"
    ],
    "id": "1338B"
  },
  {
    "title": "Powered Addition",
    "url": "https://codeforces.com/problemset/problem/1338/A",
    "history": "You have an array a of length n . For every positive integer x you are going to perform the following operation during the x - th second: Select some distinct indices i_ 1, i_ 2, . . . , i_ k which are between 1 and n inclusive, and add 2^ x- 1 to each corresponding position of a . Formally, a_ i_ j : = a_ i_ j + 2^ x- 1 for j = 1, 2, . . . , k . Note that you are allowed to not select any indices at all. You have to make a nondecreasing as fast as possible. Find the smallest number T such that you can make the array nondecreasing after at most T seconds. Array a is nondecreasing if and only if a_ 1\u2264 a_ 2\u2264. . . \u2264 a_ n . You have to answer t independent test cases.",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. The first line of each test case contains single integer n ( 1 \u2264 n \u2264 10^ 5 ) \u2014 the length of array a . It is guaranteed that the sum of values of n over all test cases in the input does not exceed 10^ 5 . The second line of each test case contains n integers a_ 1, a_ 2, . . . , a_ n ( - 10^ 9\u2264 a_ i\u2264 10^ 9 ) .",
    "output": "For each test case, print the minimum number of seconds in which you can make a nondecreasing.",
    "note": "In the first test case, if you select indices 3, 4 at the 1 - st second and 4 at the 2 - nd second, then a will become [ 1, 7, 7, 8] . There are some other possible ways to make a nondecreasing in 2 seconds, but you can' t do it faster. In the second test case, a is already nondecreasing, so answer is 0 . In the third test case, if you do nothing at first 2 seconds and select index 2 at the 3 - rd second, a will become [ 0, 0] .",
    "topics": [
      "greedy",
      "math"
    ],
    "id": "1338A"
  },
  {
    "title": "Kana and Dragon Quest game",
    "url": "https://codeforces.com/problemset/problem/1337/B",
    "history": "Kana was just an ordinary high school girl before a talent scout discovered her. Then, she became an idol. But different from the stereotype, she is also a gameholic. One day Kana gets interested in a new adventure game called Dragon Quest. In this game, her quest is to beat a dragon. The dragon has a hit point of x initially. When its hit point goes to 0 or under 0 , it will be defeated. In order to defeat the dragon, Kana can cast the two following types of spells. Void Absorption Assume that the dragon' s current hit point is h , after casting this spell its hit point will become \u230ah/ 2\u230b + 10 . Here \u230ah/ 2\u230b denotes h divided by two, rounded down. Lightning Strike This spell will decrease the dragon' s hit point by 10 . Assume that the dragon' s current hit point is h , after casting this spell its hit point will be lowered to h- 10 . Due to some reasons Kana can only cast no more than n Void Absorptions and m Lightning Strikes. She can cast the spells in any order and doesn' t have to cast all the spells. Kana isn' t good at math, so you are going to help her to find out whether it is possible to defeat the dragon.",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 1000 ) \u2014 the number of test cases. The next t lines describe test cases. For each test case the only line contains three integers x , n , m ( 1\u2264 x \u2264 10^ 5 , 0\u2264 n, m\u226430 ) \u2014 the dragon' s intitial hit point, the maximum number of Void Absorptions and Lightning Strikes Kana can cast respectively.",
    "output": "If it is possible to defeat the dragon, print \" YES\" ( without quotes) . Otherwise, print \" NO\" ( without quotes) . You can print each letter in any case ( upper or lower) .",
    "note": "One possible casting sequence of the first test case is shown below: Void Absorption \u230a100/ 2\u230b + 10= 60 . Lightning Strike 60- 10= 50 . Void Absorption \u230a50/ 2\u230b + 10= 35 . Void Absorption \u230a35/ 2\u230b + 10= 27 . Lightning Strike 27- 10= 17 . Lightning Strike 17- 10= 7 . Lightning Strike 7- 10= - 3 .",
    "topics": [
      "greedy",
      "implementation",
      "math"
    ],
    "id": "1337B"
  },
  {
    "title": "Ichihime and Triangle",
    "url": "https://codeforces.com/problemset/problem/1337/A",
    "history": "Ichihime is the current priestess of the Mahjong Soul Temple. She claims to be human, despite her cat ears. These days the temple is holding a math contest. Usually, Ichihime lacks interest in these things, but this time the prize for the winner is her favorite \u2014 cookies. Ichihime decides to attend the contest. Now she is solving the following problem. You are given four positive integers a , b , c , d , such that a \u2264 b \u2264 c \u2264 d . Your task is to find three integers x , y , z , satisfying the following conditions: a \u2264 x \u2264 b . b \u2264 y \u2264 c . c \u2264 z \u2264 d . There exists a triangle with a positive non- zero area and the lengths of its three sides are x , y , and z . Ichihime desires to get the cookie, but the problem seems too hard for her. Can you help her?",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 1000 ) \u2014 the number of test cases. The next t lines describe test cases. Each test case is given as four space- separated integers a , b , c , d ( 1 \u2264 a \u2264 b \u2264 c \u2264 d \u2264 10^ 9 ) .",
    "output": "For each test case, print three integers x , y , z \u2014 the integers you found satisfying the conditions given in the statement. It is guaranteed that the answer always exists. If there are multiple answers, print any.",
    "note": "One of the possible solutions to the first test case: One of the possible solutions to the second test case:",
    "topics": [
      "constructive algorithms",
      "math"
    ],
    "id": "1337A"
  },
  {
    "title": "Chiori and Doll Picking (hard version)",
    "url": "https://codeforces.com/problemset/problem/1336/E2",
    "history": "This is the hard version of the problem. The only difference between easy and hard versions is the constraint of m . You can make hacks only if both versions are solved. Chiori loves dolls and now she is going to decorate her bedroom! As a doll collector, Chiori has got n dolls. The i - th doll has a non- negative integer value a_ i ( a_ i < 2^ m , m is given) . Chiori wants to pick some ( maybe zero) dolls for the decoration, so there are 2^ n different picking ways. Let x be the bitwise- xor- sum of values of dolls Chiori picks ( in case Chiori picks no dolls x = 0 ) . The value of this picking way is equal to the number of 1 - bits in the binary representation of x . More formally, it is also equal to the number of indices 0 \u2264 i < m , such that \u230ax/ 2^ i\u230b is odd. Tell her the number of picking ways with value i for each integer i from 0 to m . Due to the answers can be very huge, print them by modulo 998 244 353 .",
    "input": "The first line contains two integers n and m ( 1 \u2264 n \u2264 2 \u00b7 10^ 5 , 0 \u2264 m \u2264 53 ) \u2014 the number of dolls and the maximum value of the picking way. The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 0 \u2264 a_ i < 2^ m ) \u2014 the values of dolls.",
    "output": "Print m+ 1 integers p_ 0, p_ 1, . . . , p_ m \u2014 p_ i is equal to the number of picking ways with value i by modulo 998 244 353 .",
    "note": "",
    "topics": [
      "bitmasks",
      "brute force",
      "combinatorics",
      "math"
    ],
    "id": "1336E2"
  },
  {
    "title": "Chiori and Doll Picking (easy version)",
    "url": "https://codeforces.com/problemset/problem/1336/E1",
    "history": "This is the easy version of the problem. The only difference between easy and hard versions is the constraint of m . You can make hacks only if both versions are solved. Chiori loves dolls and now she is going to decorate her bedroom! As a doll collector, Chiori has got n dolls. The i - th doll has a non- negative integer value a_ i ( a_ i < 2^ m , m is given) . Chiori wants to pick some ( maybe zero) dolls for the decoration, so there are 2^ n different picking ways. Let x be the bitwise- xor- sum of values of dolls Chiori picks ( in case Chiori picks no dolls x = 0 ) . The value of this picking way is equal to the number of 1 - bits in the binary representation of x . More formally, it is also equal to the number of indices 0 \u2264 i < m , such that \u230ax/ 2^ i\u230b is odd. Tell her the number of picking ways with value i for each integer i from 0 to m . Due to the answers can be very huge, print them by modulo 998 244 353 .",
    "input": "The first line contains two integers n and m ( 1 \u2264 n \u2264 2 \u00b7 10^ 5 , 0 \u2264 m \u2264 35 ) \u2014 the number of dolls and the maximum value of the picking way. The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 0 \u2264 a_ i < 2^ m ) \u2014 the values of dolls.",
    "output": "Print m+ 1 integers p_ 0, p_ 1, . . . , p_ m \u2014 p_ i is equal to the number of picking ways with value i by modulo 998 244 353 .",
    "note": "",
    "topics": [
      "bitmasks",
      "brute force",
      "combinatorics",
      "math"
    ],
    "id": "1336E1"
  },
  {
    "title": "Xenia and Colorful Gems",
    "url": "https://codeforces.com/problemset/problem/1336/B",
    "history": "Xenia is a girl being born a noble. Due to the inflexibility and harshness of her family, Xenia has to find some ways to amuse herself. Recently Xenia has bought n_ r red gems, n_ g green gems and n_ b blue gems. Each of the gems has a weight. Now, she is going to pick three gems. Xenia loves colorful things, so she will pick exactly one gem of each color. Xenia loves balance, so she will try to pick gems with little difference in weight. Specifically, supposing the weights of the picked gems are x , y and z , Xenia wants to find the minimum value of ( x- y) ^ 2+ ( y- z) ^ 2+ ( z- x) ^ 2 . As her dear friend, can you help her?",
    "input": "The first line contains a single integer t ( 1\u2264 t \u2264 100 ) \u2014 the number of test cases. Then t test cases follow. The first line of each test case contains three integers n_ r, n_ g, n_ b ( 1\u2264 n_ r, n_ g, n_ b\u2264 10^ 5 ) \u2014 the number of red gems, green gems and blue gems respectively. The second line of each test case contains n_ r integers r_ 1, r_ 2, . . . , r_ n_ r ( 1\u2264 r_ i \u2264 10^ 9 ) \u2014 r_ i is the weight of the i - th red gem. The third line of each test case contains n_ g integers g_ 1, g_ 2, . . . , g_ n_ g ( 1\u2264 g_ i \u2264 10^ 9 ) \u2014 g_ i is the weight of the i - th green gem. The fourth line of each test case contains n_ b integers b_ 1, b_ 2, . . . , b_ n_ b ( 1\u2264 b_ i \u2264 10^ 9 ) \u2014 b_ i is the weight of the i - th blue gem. It is guaranteed that \u2211 n_ r \u2264 10^ 5 , \u2211 n_ g \u2264 10^ 5 , \u2211 n_ b \u2264 10^ 5 ( the sum for all test cases) .",
    "output": "For each test case, print a line contains one integer \u2014 the minimum value which Xenia wants to find.",
    "note": "In the first test case, Xenia has the following gems: If she picks the red gem with weight 7 , the green gem with weight 6 , and the blue gem with weight 4 , she will achieve the most balanced selection with ( x- y) ^ 2+ ( y- z) ^ 2+ ( z- x) ^ 2= ( 7- 6) ^ 2+ ( 6- 4) ^ 2+ ( 4- 7) ^ 2= 14 .",
    "topics": [
      "binary search",
      "greedy",
      "math",
      "sortings",
      "two pointers"
    ],
    "id": "1336B"
  },
  {
    "title": "Candies and Two Sisters",
    "url": "https://codeforces.com/problemset/problem/1335/A",
    "history": "There are two sisters Alice and Betty. You have n candies. You want to distribute these n candies between two sisters in such a way that: Alice will get a ( a > 0 ) candies; Betty will get b ( b > 0 ) candies; each sister will get some integer number of candies; Alice will get a greater amount of candies than Betty ( i. e. a > b ) ; all the candies will be given to one of two sisters ( i. e. a+ b= n ) . Your task is to calculate the number of ways to distribute exactly n candies between sisters in a way described above. Candies are indistinguishable. Formally, find the number of ways to represent n as the sum of n= a+ b , where a and b are positive integers and a> b . You have to answer t independent test cases.",
    "input": "The first line of the input contains one integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. Then t test cases follow. The only line of a test case contains one integer n ( 1 \u2264 n \u2264 2 \u00b7 10^ 9 ) \u2014 the number of candies you have.",
    "output": "For each test case, print the answer \u2014 the number of ways to distribute exactly n candies between two sisters in a way described in the problem statement. If there is no way to satisfy all the conditions, print 0 .",
    "note": "For the test case of the example, the 3 possible ways to distribute candies are: a= 6 , b= 1 ; a= 5 , b= 2 ; a= 4 , b= 3 .",
    "topics": [
      "math"
    ],
    "id": "1335A"
  },
  {
    "title": "Divisor Paths",
    "url": "https://codeforces.com/problemset/problem/1334/E",
    "history": "You are given a positive integer D . Let' s build the following graph from it: each vertex is a divisor of D ( not necessarily prime, 1 and D itself are also included) ; two vertices x and y ( x > y ) have an undirected edge between them if x is divisible by y and x/ y is a prime; the weight of an edge is the number of divisors of x that are not divisors of y . For example, here is the graph for D= 12 : Edge ( 4, 12) has weight 3 because 12 has divisors [ 1, 2, 3, 4, 6, 12] and 4 has divisors [ 1, 2, 4] . Thus, there are 3 divisors of 12 that are not divisors of 4 \u2014 [ 3, 6, 12] . There is no edge between 3 and 2 because 3 is not divisible by 2 . There is no edge between 12 and 3 because 12/ 3= 4 is not a prime. Let the length of the path between some vertices v and u in the graph be the total weight of edges on it. For example, path [ ( 1, 2) , ( 2, 6) , ( 6, 12) , ( 12, 4) , ( 4, 2) , ( 2, 6) ] has length 1+ 2+ 2+ 3+ 1+ 2= 11 . The empty path has length 0 . So the shortest path between two vertices v and u is the path that has the minimal possible length. Two paths a and b are different if there is either a different number of edges in them or there is a position i such that a_ i and b_ i are different edges. You are given q queries of the following form: v u \u2014 calculate the number of the shortest paths between vertices v and u . The answer for each query might be large so print it modulo 998244353 .",
    "input": "The first line contains a single integer D ( 1 \u2264 D \u2264 10^ 15 ) \u2014 the number the graph is built from. The second line contains a single integer q ( 1 \u2264 q \u2264 3 \u00b7 10^ 5 ) \u2014 the number of queries. Each of the next q lines contains two integers v and u ( 1 \u2264 v, u \u2264 D ) . It is guaranteed that D is divisible by both v and u ( both v and u are divisors of D ) .",
    "output": "Print q integers \u2014 for each query output the number of the shortest paths between the two given vertices modulo 998244353 .",
    "note": "In the first example: The first query is only the empty path \u2014 length 0 ; The second query are paths [ ( 12, 4) , ( 4, 2) , ( 2, 1) ] ( length 3+ 1+ 1= 5 ) , [ ( 12, 6) , ( 6, 2) , ( 2, 1) ] ( length 2+ 2+ 1= 5 ) and [ ( 12, 6) , ( 6, 3) , ( 3, 1) ] ( length 2+ 2+ 1= 5 ) . The third query is only the path [ ( 3, 1) , ( 1, 2) , ( 2, 4) ] ( length 1+ 1+ 1= 3 ) .",
    "topics": [
      "combinatorics",
      "graphs",
      "greedy",
      "math",
      "number theory"
    ],
    "id": "1334E"
  },
  {
    "title": "Circle of Monsters",
    "url": "https://codeforces.com/problemset/problem/1334/C",
    "history": "You are playing another computer game, and now you have to slay n monsters. These monsters are standing in a circle, numbered clockwise from 1 to n . Initially, the i - th monster has a_ i health. You may shoot the monsters to kill them. Each shot requires exactly one bullet and decreases the health of the targeted monster by 1 ( deals 1 damage to it) . Furthermore, when the health of some monster i becomes 0 or less than 0 , it dies and explodes, dealing b_ i damage to the next monster ( monster i + 1 , if i < n , or monster 1 , if i = n ) . If the next monster is already dead, then nothing happens. If the explosion kills the next monster, it explodes too, damaging the monster after it and possibly triggering another explosion, and so on. You have to calculate the minimum number of bullets you have to fire to kill all n monsters in the circle.",
    "input": "The first line contains one integer T ( 1 \u2264 T \u2264 150000 ) \u2014 the number of test cases. Then the test cases follow, each test case begins with a line containing one integer n ( 2 \u2264 n \u2264 300000 ) \u2014 the number of monsters. Then n lines follow, each containing two integers a_ i and b_ i ( 1 \u2264 a_ i, b_ i \u2264 10^ 12 ) \u2014 the parameters of the i - th monster in the circle. It is guaranteed that the total number of monsters in all test cases does not exceed 300000 .",
    "output": "For each test case, print one integer \u2014 the minimum number of bullets you have to fire to kill all of the monsters.",
    "note": "",
    "topics": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "math"
    ],
    "id": "1334C"
  },
  {
    "title": "Level Statistics",
    "url": "https://codeforces.com/problemset/problem/1334/A",
    "history": "Polycarp has recently created a new level in this cool new game Berlio Maker 85 and uploaded it online. Now players from all over the world can try his level. All levels in this game have two stats to them: the number of plays and the number of clears. So when a player attempts the level, the number of plays increases by 1 . If he manages to finish the level successfully then the number of clears increases by 1 as well. Note that both of the statistics update at the same time ( so if the player finishes the level successfully then the number of plays will increase at the same time as the number of clears) . Polycarp is very excited about his level, so he keeps peeking at the stats to know how hard his level turns out to be. So he peeked at the stats n times and wrote down n pairs of integers \u2014 ( p_ 1, c_ 1) , ( p_ 2, c_ 2) , . . . , ( p_ n, c_ n) , where p_ i is the number of plays at the i - th moment of time and c_ i is the number of clears at the same moment of time. The stats are given in chronological order ( i. e. the order of given pairs is exactly the same as Polycarp has written down) . Between two consecutive moments of time Polycarp peeked at the stats many players ( but possibly zero) could attempt the level. Finally, Polycarp wonders if he hasn' t messed up any records and all the pairs are correct. If there could exist such a sequence of plays ( and clears, respectively) that the stats were exactly as Polycarp has written down, then he considers his records correct. Help him to check the correctness of his records. For your convenience you have to answer multiple independent test cases.",
    "input": "The first line contains a single integer T ( 1 \u2264 T \u2264 500) \u2014 the number of test cases. The first line of each test case contains a single integer n ( 1 \u2264 n \u2264 100 ) \u2014 the number of moments of time Polycarp peeked at the stats. Each of the next n lines contains two integers p_ i and c_ i ( 0 \u2264 p_ i, c_ i \u2264 1000 ) \u2014 the number of plays and the number of clears of the level at the i - th moment of time. Note that the stats are given in chronological order.",
    "output": "For each test case print a single line. If there could exist such a sequence of plays ( and clears, respectively) that the stats were exactly as Polycarp has written down, then print \" YES\" . Otherwise, print \" NO\" . You can print each letter in any case ( upper or lower) .",
    "note": "In the first test case at the third moment of time the number of clears increased but the number of plays did not, that couldn' t have happened. The second test case is a nice example of a Super Expert level. In the third test case the number of plays decreased, which is impossible. The fourth test case is probably an auto level with a single jump over the spike. In the fifth test case the number of clears decreased, which is also impossible. Nobody wanted to play the sixth test case; Polycarp' s mom attempted it to make him feel better, however, she couldn' t clear it.",
    "topics": [
      "implementation",
      "math"
    ],
    "id": "1334A"
  },
  {
    "title": "Kate and imperfection",
    "url": "https://codeforces.com/problemset/problem/1333/F",
    "history": "Kate has a set S of n integers { 1, . . . , n} . She thinks that imperfection of a subset M \u2286 S is equal to the maximum of gcd( a, b) over all pairs ( a, b) such that both a and b are in M and a = \u0338 b . Kate is a very neat girl and for each k \u2208{ 2, . . . , n} she wants to find a subset that has the smallest imperfection among all subsets in S of size k . There can be more than one subset with the smallest imperfection and the same size, but you don' t need to worry about it. Kate wants to find all the subsets herself, but she needs your help to find the smallest possible imperfection for each size k , will name it I_ k . Please, help Kate to find I_ 2 , I_ 3 , . . . , I_ n .",
    "input": "The first and only line in the input consists of only one integer n ( 2\u2264 n \u2264 5 \u00b7 10^ 5 ) \u2014 the size of the given set S .",
    "output": "Output contains only one line that includes n - 1 integers: I_ 2 , I_ 3 , . . . , I_ n .",
    "note": "First sample: answer is 1, because gcd( 1, 2) = 1 . Second sample: there are subsets of S with sizes 2, 3 with imperfection equal to 1. For example, { 2, 3} and { 1, 2, 3} .",
    "topics": [
      "greedy",
      "implementation",
      "math",
      "number theory",
      "sortings",
      "two pointers"
    ],
    "id": "1333F"
  },
  {
    "title": "Height All the Same",
    "url": "https://codeforces.com/problemset/problem/1332/E",
    "history": "Alice has got addicted to a game called Sirtet recently. In Sirtet, player is given an n \u00d7 m grid. Initially a_ i, j cubes are stacked up in the cell ( i, j) . Two cells are called adjacent if they share a side. Player can perform the following operations: stack up one cube in two adjacent cells; stack up two cubes in one cell. Cubes mentioned above are identical in height. Here is an illustration of the game. States on the right are obtained by performing one of the above operations on the state on the left, and grey cubes are added due to the operation. Player' s goal is to make the height of all cells the same ( i. e. so that each cell has the same number of cubes in it) using above operations. Alice, however, has found out that on some starting grids she may never reach the goal no matter what strategy she uses. Thus, she is wondering the number of initial grids such that L \u2264 a_ i, j\u2264 R for all 1 \u2264 i \u2264 n , 1 \u2264 j \u2264 m ; player can reach the goal using above operations. Please help Alice with it. Notice that the answer might be large, please output the desired value modulo 998, 244, 353 .",
    "input": "The only line contains four integers n , m , L and R ( 1\u2264 n, m, L, R \u2264 10^ 9 , L \u2264 R , n \u00b7 m \u2265 2 ) .",
    "output": "Output one integer, representing the desired answer modulo 998, 244, 353 .",
    "note": "In the first sample, the only initial grid that satisfies the requirements is a_ 1, 1= a_ 2, 1= a_ 1, 2= a_ 2, 2= 1 . Thus the answer should be 1 . In the second sample, initial grids that satisfy the requirements are a_ 1, 1= a_ 1, 2= 1 and a_ 1, 1= a_ 1, 2= 2 . Thus the answer should be 2 .",
    "topics": [
      "combinatorics",
      "constructive algorithms",
      "math",
      "matrices"
    ],
    "id": "1332E"
  },
  {
    "title": "Walk on Matrix",
    "url": "https://codeforces.com/problemset/problem/1332/D",
    "history": "Bob is playing a game named \" Walk on Matrix\" . In this game, player is given an n \u00d7 m matrix A= ( a_ i, j) , i. e. the element in the i - th row in the j - th column is a_ i, j . Initially, player is located at position ( 1, 1) with score a_ 1, 1 . To reach the goal, position ( n, m) , player can move right or down, i. e. move from ( x, y) to ( x, y+ 1) or ( x+ 1, y) , as long as player is still on the matrix. However, each move changes player' s score to the bitwise AND of the current score and the value at the position he moves to. Bob can' t wait to find out the maximum score he can get using the tool he recently learnt \u2014 dynamic programming. Here is his algorithm for this problem. However, he suddenly realize that the algorithm above fails to output the maximum score for some matrix A . Thus, for any given non- negative integer k , he wants to find out an n \u00d7 m matrix A= ( a_ i, j) such that 1 \u2264 n, m \u2264 500 ( as Bob hates large matrix) ; 0 \u2264 a_ i, j\u2264 3 \u00b7 10^ 5 for all 1 \u2264 i\u2264 n, 1 \u2264 j\u2264 m ( as Bob hates large numbers) ; the difference between the maximum score he can get and the output of his algorithm is exactly k . It can be shown that for any given integer k such that 0 \u2264 k \u2264 10^ 5 , there exists a matrix satisfying the above constraints. Please help him with it!",
    "input": "The only line of the input contains one single integer k ( 0 \u2264 k \u2264 10^ 5 ) .",
    "output": "Output two integers n , m ( 1 \u2264 n, m \u2264 500 ) in the first line, representing the size of the matrix. Then output n lines with m integers in each line, a_ i, j in the ( i+ 1) - th row, j - th column.",
    "note": "In the first example, the maximum score Bob can achieve is 300000 , while the output of his algorithm is 300000 . In the second example, the maximum score Bob can achieve is 7& 3& 3& 3& 7& 3= 3 , while the output of his algorithm is 2 .",
    "topics": [
      "bitmasks",
      "constructive algorithms",
      "math"
    ],
    "id": "1332D"
  },
  {
    "title": "Composite Coloring",
    "url": "https://codeforces.com/problemset/problem/1332/B",
    "history": "A positive integer is called composite if it can be represented as a product of two positive integers, both greater than 1 . For example, the following numbers are composite: 6 , 4 , 120 , 27 . The following numbers aren' t: 1 , 2 , 3 , 17 , 97 . Alice is given a sequence of n composite numbers a_ 1, a_ 2, . . . , a_ n . She wants to choose an integer m \u2264 11 and color each element one of m colors from 1 to m so that: for each color from 1 to m there is at least one element of this color; each element is colored and colored exactly one color; the greatest common divisor of any two elements that are colored the same color is greater than 1 , i. e. ( a_ i, a_ j) > 1 for each pair i, j if these elements are colored the same color. Note that equal elements can be colored different colors \u2014 you just have to choose one of m colors for each of the indices from 1 to n . Alice showed already that if all a_ i \u2264 1000 then she can always solve the task by choosing some m \u2264 11 . Help Alice to find the required coloring. Note that you don' t have to minimize or maximize the number of colors, you just have to find the solution with some m from 1 to 11 .",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 1000 ) \u2014 the number of test cases. Then the descriptions of the test cases follow. The first line of the test case contains a single integer n ( 1 \u2264 n \u2264 1000 ) \u2014 the amount of numbers in a sequence a . The second line of the test case contains n composite integers a_ 1, a_ 2, . . . , a_ n ( 4 \u2264 a_ i \u2264 1000 ) . It is guaranteed that the sum of n over all test cases doesn' t exceed 10^ 4 .",
    "output": "For each test case print 2 lines. The first line should contain a single integer m ( 1 \u2264 m \u2264 11 ) \u2014 the number of used colors. Consider colors to be numbered from 1 to m . The second line should contain any coloring that satisfies the above conditions. Print n integers c_ 1, c_ 2, . . . , c_ n ( 1 \u2264 c_ i \u2264 m ) , where c_ i is the color of the i - th element. If there are multiple solutions then you can print any of them. Note that you don' t have to minimize or maximize the number of colors, you just have to find the solution with some m from 1 to 11 . Remember that each color from 1 to m should be used at least once. Any two elements of the same color should not be coprime ( i. e. their GCD should be greater than 1 ) .",
    "note": "In the first test case, ( 6, 10) = 2 , ( 6, 15) = 3 and ( 10, 15) = 5 . Therefore, it' s valid to color all elements the same color. Note that there are other colorings which satisfy Alice' s requirement in this test case. In the second test case there is only one element of each color, so the coloring definitely satisfies Alice' s requirement.",
    "topics": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "math",
      "number theory"
    ],
    "id": "1332B"
  },
  {
    "title": "Exercising Walk",
    "url": "https://codeforces.com/problemset/problem/1332/A",
    "history": "Alice has a cute cat. To keep her cat fit, Alice wants to design an exercising walk for her cat! Initially, Alice' s cat is located in a cell ( x, y) of an infinite grid. According to Alice' s theory, cat needs to move: exactly a steps left: from ( u, v) to ( u- 1, v) ; exactly b steps right: from ( u, v) to ( u+ 1, v) ; exactly c steps down: from ( u, v) to ( u, v- 1) ; exactly d steps up: from ( u, v) to ( u, v+ 1) . Note that the moves can be performed in an arbitrary order. For example, if the cat has to move 1 step left, 3 steps right and 2 steps down, then the walk right, down, left, right, right, down is valid. Alice, however, is worrying that her cat might get lost if it moves far away from her. So she hopes that her cat is always in the area [ x_ 1, x_ 2] \u00d7 [ y_ 1, y_ 2] , i. e. for every cat' s position ( u, v) of a walk x_ 1 \u2264 u \u2264 x_ 2 and y_ 1 \u2264 v \u2264 y_ 2 holds. Also, note that the cat can visit the same cell multiple times. Can you help Alice find out if there exists a walk satisfying her wishes? Formally, the walk should contain exactly a+ b+ c+ d unit moves ( a to the left, b to the right, c to the down, d to the up) . Alice can do the moves in any order. Her current position ( u, v) should always satisfy the constraints: x_ 1 \u2264 u \u2264 x_ 2 , y_ 1 \u2264 v \u2264 y_ 2 . The staring point is ( x, y) . You are required to answer t test cases independently.",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 3 ) \u2014 the number of testcases. The first line of each test case contains four integers a , b , c , d ( 0 \u2264 a, b, c, d \u2264 10^ 8 , a+ b+ c+ d \u2265 1 ) . The second line of the test case contains six integers x , y , x_ 1 , y_ 1 , x_ 2 , y_ 2 ( - 10^ 8 \u2264 x_ 1\u2264 x \u2264 x_ 2 \u2264 10^ 8 , - 10^ 8 \u2264 y_ 1 \u2264 y \u2264 y_ 2 \u2264 10^ 8 ) .",
    "output": "For each test case, output \" YES\" in a separate line, if there exists a walk satisfying her wishes. Otherwise, output \" NO\" in a separate line. You can print each letter in any case ( upper or lower) .",
    "note": "In the first test case, one valid exercising walk is ( 0, 0) \u2192 ( - 1, 0) \u2192 ( - 2, 0) \u2192 ( - 2, 1) \u2192 ( - 2, 2) \u2192 ( - 1, 2) \u2192( 0, 2) \u2192 ( 0, 1) \u2192 ( 0, 0) \u2192 ( - 1, 0)",
    "topics": [
      "greedy",
      "implementation",
      "math"
    ],
    "id": "1332A"
  },
  {
    "title": "Limericks",
    "url": "https://codeforces.com/problemset/problem/1331/B",
    "history": "There was once young lass called Mary, Whose jokes were occasionally scary. On this April' s Fool Fixed limerick rules Allowed her to trip the unwary. Can she fill all the linesTo work at all times? On juggling the wordsRight around two- thirdsShe nearly ran out of rhymes.",
    "input": "The input contains a single integer a ( 4 \u2264 a \u2264 998 ) . Not every integer in the range is a valid input for the problem; you are guaranteed that the input will be a valid integer.",
    "output": "Output a single number.",
    "note": "",
    "topics": [
      "*special",
      "math",
      "number theory"
    ],
    "id": "1331B"
  },
  {
    "title": "Dreamoon Likes Permutations",
    "url": "https://codeforces.com/problemset/problem/1330/B",
    "history": "The sequence of m integers is called the permutation if it contains all integers from 1 to m exactly once. The number m is called the length of the permutation. Dreamoon has two permutations p_ 1 and p_ 2 of non- zero lengths l_ 1 and l_ 2 . Now Dreamoon concatenates these two permutations into another sequence a of length l_ 1 + l_ 2 . First l_ 1 elements of a is the permutation p_ 1 and next l_ 2 elements of a is the permutation p_ 2 . You are given the sequence a , and you need to find two permutations p_ 1 and p_ 2 . If there are several possible ways to restore them, you should find all of them. ( Note that it is also possible that there will be no ways. )",
    "input": "The first line contains an integer t ( 1 \u2264 t \u2264 10 000 ) denoting the number of test cases in the input. Each test case contains two lines. The first line contains one integer n ( 2 \u2264 n \u2264 200 000 ) : the length of a . The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 n- 1 ) . The total sum of n is less than 200 000 .",
    "output": "For each test case, the first line of output should contain one integer k : the number of ways to divide a into permutations p_ 1 and p_ 2 . Each of the next k lines should contain two integers l_ 1 and l_ 2 ( 1 \u2264 l_ 1, l_ 2 \u2264 n, l_ 1 + l_ 2 = n ) , denoting, that it is possible to divide a into two permutations of length l_ 1 and l_ 2 ( p_ 1 is the first l_ 1 elements of a , and p_ 2 is the last l_ 2 elements of a ) . You can print solutions in any order.",
    "note": "In the first example, two possible ways to divide a into permutations are { 1} + { 4, 3, 2, 1} and { 1, 4, 3, 2} + { 1} . In the second example, the only way to divide a into permutations is { 2, 4, 1, 3} + { 2, 1} . In the third example, there are no possible ways.",
    "topics": [
      "implementation",
      "math"
    ],
    "id": "1330B"
  },
  {
    "title": "Dreamoon Likes Sequences",
    "url": "https://codeforces.com/problemset/problem/1329/B",
    "history": "Dreamoon likes sequences very much. So he created a problem about the sequence that you can' t find in OEIS: You are given two integers d, m , find the number of arrays a , satisfying the following constraints: The length of a is n , n \u2265 1 1 \u2264 a_ 1 < a_ 2 < . . . < a_ n \u2264 d Define an array b of length n as follows: b_ 1 = a_ 1 , \u2200 i > 1, b_ i = b_ i - 1\u2295 a_ i , where \u2295 is the bitwise exclusive- or ( xor) . After constructing an array b , the constraint b_ 1 < b_ 2 < . . . < b_ n - 1 < b_ n should hold. Since the number of possible arrays may be too large, you need to find the answer modulo m .",
    "input": "The first line contains an integer t ( 1 \u2264 t \u2264 100 ) denoting the number of test cases in the input. Each of the next t lines contains two integers d, m ( 1 \u2264 d, m \u2264 10^ 9 ) . Note that m is not necessary the prime!",
    "output": "For each test case, print the number of arrays a , satisfying all given constrains, modulo m .",
    "note": "",
    "topics": [
      "bitmasks",
      "combinatorics",
      "math"
    ],
    "id": "1329B"
  },
  {
    "title": "Dreamoon Likes Coloring",
    "url": "https://codeforces.com/problemset/problem/1329/A",
    "history": "Dreamoon likes coloring cells very much. There is a row of n cells. Initially, all cells are empty ( don' t contain any color) . Cells are numbered from 1 to n . You are given an integer m and m integers l_ 1, l_ 2, . . . , l_ m ( 1 \u2264 l_ i \u2264 n ) Dreamoon will perform m operations. In i - th operation, Dreamoon will choose a number p_ i from range [ 1, n- l_ i+ 1] ( inclusive) and will paint all cells from p_ i to p_ i+ l_ i- 1 ( inclusive) in i - th color. Note that cells may be colored more one than once, in this case, cell will have the color from the latest operation. Dreamoon hopes that after these m operations, all colors will appear at least once and all cells will be colored. Please help Dreamoon to choose p_ i in each operation to satisfy all constraints.",
    "input": "The first line contains two integers n, m ( 1 \u2264 m \u2264 n \u2264 100 000 ) . The second line contains m integers l_ 1, l_ 2, . . . , l_ m ( 1 \u2264 l_ i \u2264 n ) .",
    "output": "If it' s impossible to perform m operations to satisfy all constraints, print \" ' - 1\" ( without quotes) . Otherwise, print m integers p_ 1, p_ 2, . . . , p_ m ( 1 \u2264 p_ i \u2264 n - l_ i + 1 ) , after these m operations, all colors should appear at least once and all cells should be colored. If there are several possible solutions, you can print any.",
    "note": "",
    "topics": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "math"
    ],
    "id": "1329A"
  },
  {
    "title": "Carousel",
    "url": "https://codeforces.com/problemset/problem/1328/D",
    "history": "The round carousel consists of n figures of animals. Figures are numbered from 1 to n in order of the carousel moving. Thus, after the n - th figure the figure with the number 1 follows. Each figure has its own type \u2014 the type of the animal corresponding to this figure ( the horse, the tiger and so on) . The type of animal of the i - th figure equals t_ i . The example of the carousel for n= 9 and t= [ 5, 5, 1, 15, 1, 5, 5, 1, 1] . You want to color each figure in one of the colors. You think that it' s boring if the carousel contains two different figures ( with the distinct types of animals) going one right after another and colored in the same color. Your task is to color the figures in such a way that the number of distinct colors used is the minimum possible and there are no figures of the different types going one right after another and colored in the same color. If you use exactly k distinct colors, then the colors of figures should be denoted with integers from 1 to k .",
    "input": "The input contains one or more test cases. The first line contains one integer q ( 1 \u2264 q \u2264 10^ 4 ) \u2014 the number of test cases in the test. Then q test cases follow. One test case is given on two lines. The first line of the test case contains one integer n ( 3 \u2264 n \u2264 2 \u00b7 10^ 5 ) \u2014 the number of figures in the carousel. Figures are numbered from 1 to n in order of carousel moving. Assume that after the n - th figure the figure 1 goes. The second line of the test case contains n integers t_ 1, t_ 2, . . . , t_ n ( 1 \u2264 t_ i \u2264 2 \u00b7 10^ 5 ) , where t_ i is the type of the animal of the i - th figure. The sum of n over all test cases does not exceed 2\u00b710^ 5 .",
    "output": "Print q answers, for each test case print two lines. In the first line print one integer k \u2014 the minimum possible number of distinct colors of figures. In the second line print n integers c_ 1, c_ 2, . . . , c_ n ( 1 \u2264 c_ i \u2264 k ) , where c_ i is the color of the i - th figure. If there are several answers, you can print any.",
    "note": "",
    "topics": [
      "constructive algorithms",
      "dp",
      "graphs",
      "greedy",
      "math"
    ],
    "id": "1328D"
  },
  {
    "title": "K-th Beautiful String",
    "url": "https://codeforces.com/problemset/problem/1328/B",
    "history": "For the given integer n ( n > 2 ) let' s write down all the strings of length n which contain n- 2 letters ' a' and two letters ' b' in lexicographical ( alphabetical) order. Recall that the string s of length n is lexicographically less than string t of length n , if there exists such i ( 1 \u2264 i \u2264 n ) , that s_ i < t_ i , and for any j ( 1 \u2264 j < i ) s_ j = t_ j . The lexicographic comparison of strings is implemented by the operator < in modern programming languages. For example, if n= 5 the strings are ( the order does matter) : aaabb aabab aabba abaab ababa abbaa baaab baaba babaa bbaaa It is easy to show that such a list of strings will contain exactly n \u00b7 ( n- 1) / 2 strings. You are given n ( n > 2 ) and k ( 1 \u2264 k \u2264n \u00b7 ( n- 1) / 2 ) . Print the k - th string from the list.",
    "input": "The input contains one or more test cases. The first line contains one integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases in the test. Then t test cases follow. Each test case is written on the the separate line containing two integers n and k ( 3 \u2264 n \u2264 10^ 5, 1 \u2264 k \u2264min( 2\u00b710^ 9, n \u00b7 ( n- 1) / 2) . The sum of values n over all test cases in the test doesn' t exceed 10^ 5 .",
    "output": "For each test case print the k - th string from the list of all described above strings of length n . Strings in the list are sorted lexicographically ( alphabetically) .",
    "note": "",
    "topics": [
      "binary search",
      "brute force",
      "combinatorics",
      "implementation",
      "math"
    ],
    "id": "1328B"
  },
  {
    "title": "Divisibility Problem",
    "url": "https://codeforces.com/problemset/problem/1328/A",
    "history": "You are given two positive integers a and b . In one move you can increase a by 1 ( replace a with a+ 1 ) . Your task is to find the minimum number of moves you need to do in order to make a divisible by b . It is possible, that you have to make 0 moves, as a is already divisible by b . You have to answer t independent test cases.",
    "input": "The first line of the input contains one integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. Then t test cases follow. The only line of the test case contains two integers a and b ( 1 \u2264 a, b \u2264 10^ 9 ) .",
    "output": "For each test case print the answer \u2014 the minimum number of moves you need to do in order to make a divisible by b .",
    "note": "",
    "topics": [
      "math"
    ],
    "id": "1328A"
  },
  {
    "title": "Count The Blocks",
    "url": "https://codeforces.com/problemset/problem/1327/E",
    "history": "You wrote down all integers from 0 to 10^ n - 1 , padding them with leading zeroes so their lengths are exactly n . For example, if n = 3 then you wrote out 000, 001, . . . , 998, 999. A block in an integer x is a consecutive segment of equal digits that cannot be extended to the left or to the right. For example, in the integer 00027734000 there are three blocks of length 1 , one block of length 2 and two blocks of length 3 . For all integers i from 1 to n count the number of blocks of length i among the written down integers. Since these integers may be too large, print them modulo 998244353 .",
    "input": "The only line contains one integer n ( 1 \u2264 n \u2264 2 \u00b7 10^ 5 ) .",
    "output": "In the only line print n integers. The i - th integer is equal to the number of blocks of length i . Since these integers may be too large, print them modulo 998244353 .",
    "note": "",
    "topics": [
      "combinatorics",
      "dp",
      "math"
    ],
    "id": "1327E"
  },
  {
    "title": "Infinite Path",
    "url": "https://codeforces.com/problemset/problem/1327/D",
    "history": "You are given a colored permutation p_ 1, p_ 2, . . . , p_ n . The i - th element of the permutation has color c_ i . Let' s define an infinite path as infinite sequence i, p[ i] , p[ p[ i] ] , p[ p[ p[ i] ] ] . . . where all elements have same color ( c[ i] = c[ p[ i] ] = c[ p[ p[ i] ] ] = . . . ) . We can also define a multiplication of permutations a and b as permutation c = a \u00d7 b where c[ i] = b[ a[ i] ] . Moreover, we can define a power k of permutation p as p^ k= p \u00d7 p \u00d7. . . \u00d7 p_ k times . Find the minimum k > 0 such that p^ k has at least one infinite path ( i. e. there is a position i in p^ k such that the sequence starting from i is an infinite path) . It can be proved that the answer always exists.",
    "input": "The first line contains single integer T ( 1 \u2264 T \u2264 10^ 4 ) \u2014 the number of test cases. Next 3T lines contain test cases \u2014 one per three lines. The first line contains single integer n ( 1 \u2264 n \u2264 2 \u00b7 10^ 5 ) \u2014 the size of the permutation. The second line contains n integers p_ 1, p_ 2, . . . , p_ n ( 1 \u2264 p_ i \u2264 n , p_ i = \u0338 p_ j for i = \u0338 j ) \u2014 the permutation p . The third line contains n integers c_ 1, c_ 2, . . . , c_ n ( 1 \u2264 c_ i \u2264 n ) \u2014 the colors of elements of the permutation. It is guaranteed that the total sum of n doesn' t exceed 2 \u00b7 10^ 5 .",
    "output": "Print T integers \u2014 one per test case. For each test case print minimum k > 0 such that p^ k has at least one infinite path.",
    "note": "In the first test case, p^ 1 = p = [ 1, 3, 4, 2] and the sequence starting from 1 : 1, p[ 1] = 1, . . . is an infinite path. In the second test case, p^ 5 = [ 1, 2, 3, 4, 5] and it obviously contains several infinite paths. In the third test case, p^ 2 = [ 3, 6, 1, 8, 7, 2, 5, 4] and the sequence starting from 4 : 4, p^ 2[ 4] = 8, p^ 2[ 8] = 4, . . . is an infinite path since c_ 4 = c_ 8 = 4 .",
    "topics": [
      "brute force",
      "dfs and similar",
      "graphs",
      "math",
      "number theory"
    ],
    "id": "1327D"
  },
  {
    "title": "Sum of Odd Integers",
    "url": "https://codeforces.com/problemset/problem/1327/A",
    "history": "You are given two integers n and k . Your task is to find if n can be represented as a sum of k distinct positive odd ( not divisible by 2 ) integers or not. You have to answer t independent test cases.",
    "input": "The first line of the input contains one integer t ( 1 \u2264 t \u2264 10^ 5 ) \u2014 the number of test cases. The next t lines describe test cases. The only line of the test case contains two integers n and k ( 1 \u2264 n, k \u2264 10^ 7 ) .",
    "output": "For each test case, print the answer \u2014 \" YES\" ( without quotes) if n can be represented as a sum of k distinct positive odd ( not divisible by 2 ) integers and \" NO\" otherwise.",
    "note": "In the first test case, you can represent 3 as 3 . In the second test case, the only way to represent 4 is 1+ 3 . In the third test case, you cannot represent 10 as the sum of three distinct positive odd integers. In the fourth test case, you can represent 10 as 3+ 7 , for example. In the fifth test case, you can represent 16 as 1+ 3+ 5+ 7 . In the sixth test case, you cannot represent 16 as the sum of five distinct positive odd integers.",
    "topics": [
      "math"
    ],
    "id": "1327A"
  },
  {
    "title": "Wise Men (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1326/F2",
    "history": "This is the hard version of the problem. The difference is constraints on the number of wise men and the time limit. You can make hacks only if all versions of this task are solved. n wise men live in a beautiful city. Some of them know each other. For each of the n! possible permutations p_ 1, p_ 2, . . . , p_ n of the wise men, let' s generate a binary string of length n- 1 : for each 1 \u2264 i < n set s_ i= 1 if p_ i and p_ i+ 1 know each other, and s_ i= 0 otherwise. For all possible 2^ n- 1 binary strings, find the number of permutations that produce this binary string.",
    "input": "The first line of input contains one integer n ( 2 \u2264 n \u2264 18) \u2014 the number of wise men in the city. The next n lines contain a binary string of length n each, such that the j - th character of the i - th string is equal to ' 1' if wise man i knows wise man j , and equals ' 0' otherwise. It is guaranteed that if the i - th man knows the j - th man, then the j - th man knows i - th man and no man knows himself.",
    "output": "Print 2^ n- 1 space- separated integers. For each 0 \u2264 x < 2^ n- 1 : Let' s consider a string s of length n- 1 , such that s_ i = \u230ax/ 2^ i- 1\u230b 2 for all 1 \u2264 i \u2264 n - 1 . The ( x+ 1) - th number should be equal to the required answer for s .",
    "note": "In the first test, each wise man knows each other, so every permutation will produce the string 11 . In the second test: If p = { 1, 2, 3, 4} , the produced string is 101 , because wise men 1 and 2 know each other, 2 and 3 don' t know each other, and 3 and 4 know each other; If p = { 4, 1, 2, 3} , the produced string is 110 , because wise men 1 and 4 know each other, 1 and 2 know each other and 2 , and 3 don' t know each other; If p = { 1, 3, 2, 4} , the produced string is 000 , because wise men 1 and 3 don' t know each other, 3 and 2 don' t know each other, and 2 and 4 don' t know each other.",
    "topics": [
      "bitmasks",
      "dp",
      "math"
    ],
    "id": "1326F2"
  },
  {
    "title": "Permutation Partitions",
    "url": "https://codeforces.com/problemset/problem/1326/C",
    "history": "You are given a permutation p_ 1, p_ 2, . . . , p_ n of integers from 1 to n and an integer k , such that 1 \u2264 k \u2264 n . A permutation means that every number from 1 to n is contained in p exactly once. Let' s consider all partitions of this permutation into k disjoint segments. Formally, a partition is a set of segments { [ l_ 1, r_ 1] , [ l_ 2, r_ 2] , . . . , [ l_ k, r_ k] } , such that: 1 \u2264 l_ i \u2264 r_ i \u2264 n for all 1 \u2264 i \u2264 k ; For all 1 \u2264 j \u2264 n there exists exactly one segment [ l_ i, r_ i] , such that l_ i \u2264 j \u2264 r_ i . Two partitions are different if there exists a segment that lies in one partition but not the other. Let' s calculate the partition value, defined as \u2211_ i= 1^ kmax_ l_ i \u2264 j \u2264 r_ ip_ j , for all possible partitions of the permutation into k disjoint segments. Find the maximum possible partition value over all such partitions, and the number of partitions with this value. As the second value can be very large, you should find its remainder when divided by 998 244 353 .",
    "input": "The first line contains two integers, n and k ( 1 \u2264 k \u2264 n \u2264 200 000 ) \u2014 the size of the given permutation and the number of segments in a partition. The second line contains n different integers p_ 1, p_ 2, . . . , p_ n ( 1 \u2264 p_ i \u2264 n ) \u2014 the given permutation.",
    "output": "Print two integers \u2014 the maximum possible partition value over all partitions of the permutation into k disjoint segments and the number of such partitions for which the partition value is equal to the maximum possible value, modulo 998 244 353 . Please note that you should only find the second value modulo 998 244 353 .",
    "note": "In the first test, for k = 2 , there exists only two valid partitions: { [ 1, 1] , [ 2, 3] } and { [ 1, 2] , [ 3, 3] } . For each partition, the partition value is equal to 2 + 3 = 5 . So, the maximum possible value is 5 and the number of partitions is 2 . In the third test, for k = 3 , the partitions with the maximum possible partition value are { [ 1, 2] , [ 3, 5] , [ 6, 7] } , { [ 1, 3] , [ 4, 5] , [ 6, 7] } , { [ 1, 4] , [ 5, 5] , [ 6, 7] } , { [ 1, 2] , [ 3, 6] , [ 7, 7] } , { [ 1, 3] , [ 4, 6] , [ 7, 7] } , { [ 1, 4] , [ 5, 6] , [ 7, 7] } . For all of them, the partition value is equal to 7 + 5 + 6 = 18 . The partition { [ 1, 2] , [ 3, 4] , [ 5, 7] } , however, has the partition value 7 + 3 + 6 = 16 . This is not the maximum possible value, so we don' t count it.",
    "topics": [
      "combinatorics",
      "greedy",
      "math"
    ],
    "id": "1326C"
  },
  {
    "title": "Maximums",
    "url": "https://codeforces.com/problemset/problem/1326/B",
    "history": "Alicia has an array, a_ 1, a_ 2, . . . , a_ n , of non- negative integers. For each 1 \u2264 i \u2264 n , she has found a non- negative integer x_ i = max( 0, a_ 1, . . . , a_ i- 1) . Note that for i= 1 , x_ i = 0 . For example, if Alicia had the array a = { 0, 1, 2, 0, 3} , then x = { 0, 0, 1, 2, 2} . Then, she calculated an array, b_ 1, b_ 2, . . . , b_ n : b_ i = a_ i - x_ i . For example, if Alicia had the array a = { 0, 1, 2, 0, 3} , b = { 0- 0, 1- 0, 2- 1, 0- 2, 3- 2} = { 0, 1, 1, - 2, 1} . Alicia gives you the values b_ 1, b_ 2, . . . , b_ n and asks you to restore the values a_ 1, a_ 2, . . . , a_ n . Can you help her solve the problem?",
    "input": "The first line contains one integer n ( 3 \u2264 n \u2264 200 000 ) \u2013 the number of elements in Alicia' s array. The next line contains n integers, b_ 1, b_ 2, . . . , b_ n ( - 10^ 9 \u2264 b_ i \u2264 10^ 9 ) . It is guaranteed that for the given array b there is a solution a_ 1, a_ 2, . . . , a_ n , for all elements of which the following is true: 0 \u2264 a_ i \u2264 10^ 9 .",
    "output": "Print n integers, a_ 1, a_ 2, . . . , a_ n ( 0 \u2264 a_ i \u2264 10^ 9 ) , such that if you calculate x according to the statement, b_ 1 will be equal to a_ 1 - x_ 1 , b_ 2 will be equal to a_ 2 - x_ 2 , . . . , and b_ n will be equal to a_ n - x_ n . It is guaranteed that there exists at least one solution for the given tests. It can be shown that the solution is unique.",
    "note": "The first test was described in the problem statement. In the second test, if Alicia had an array a = { 1000, 1000000000, 0} , then x = { 0, 1000, 1000000000} and b = { 1000- 0, 1000000000- 1000, 0- 1000000000} = { 1000, 999999000, - 1000000000} .",
    "topics": [
      "implementation",
      "math"
    ],
    "id": "1326B"
  },
  {
    "title": "Instant Noodles",
    "url": "https://codeforces.com/problemset/problem/1322/C",
    "history": "Wu got hungry after an intense training session, and came to a nearby store to buy his favourite instant noodles. After Wu paid for his purchase, the cashier gave him an interesting task. You are given a bipartite graph with positive integers in all vertices of the right half. For a subset S of vertices of the left half we define N( S) as the set of all vertices of the right half adjacent to at least one vertex in S , and f( S) as the sum of all numbers in vertices of N( S) . Find the greatest common divisor of f( S) for all possible non- empty subsets S ( assume that GCD of empty set is 0 ) . Wu is too tired after his training to solve this problem. Help him!",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 500 000 ) \u2014 the number of test cases in the given test set. Test case descriptions follow. The first line of each case description contains two integers n and m ( 1 \u2264 n, m \u2264 500 000 ) \u2014 the number of vertices in either half of the graph, and the number of edges respectively. The second line contains n integers c_ i ( 1 \u2264 c_ i \u2264 10^ 12 ) . The i - th number describes the integer in the vertex i of the right half of the graph. Each of the following m lines contains a pair of integers u_ i and v_ i ( 1 \u2264 u_ i, v_ i \u2264 n ) , describing an edge between the vertex u_ i of the left half and the vertex v_ i of the right half. It is guaranteed that the graph does not contain multiple edges. Test case descriptions are separated with empty lines. The total value of n across all test cases does not exceed 500 000 , and the total value of m across all test cases does not exceed 500 000 as well.",
    "output": "For each test case print a single integer \u2014 the required greatest common divisor.",
    "note": "The greatest common divisor of a set of integers is the largest integer g such that all elements of the set are divisible by g . In the first sample case vertices of the left half and vertices of the right half are pairwise connected, and f( S) for any non- empty subset is 2 , thus the greatest common divisor of these values if also equal to 2 . In the second sample case the subset { 1} in the left half is connected to vertices { 1, 2} of the right half, with the sum of numbers equal to 2 , and the subset { 1, 2} in the left half is connected to vertices { 1, 2, 3} of the right half, with the sum of numbers equal to 3 . Thus, f( { 1} ) = 2 , f( { 1, 2} ) = 3 , which means that the greatest common divisor of all values of f( S) is 1 .",
    "topics": [
      "graphs",
      "hashing",
      "math",
      "number theory"
    ],
    "id": "1322C"
  },
  {
    "title": "Present",
    "url": "https://codeforces.com/problemset/problem/1322/B",
    "history": "Catherine received an array of integers as a gift for March 8. Eventually she grew bored with it, and she started calculated various useless characteristics for it. She succeeded to do it for each one she came up with. But when she came up with another one \u2014 xor of all pairwise sums of elements in the array, she realized that she couldn' t compute it for a very large array, thus she asked for your help. Can you do it? Formally, you need to compute ( a_ 1 + a_ 2) \u2295 ( a_ 1 + a_ 3) \u2295. . . \u2295 ( a_ 1 + a_ n) \u2295 ( a_ 2 + a_ 3) \u2295. . . \u2295 ( a_ 2 + a_ n) . . . \u2295 ( a_ n- 1 + a_ n) Here x \u2295 y is a bitwise XOR operation ( i. e. x ^ y in many modern programming languages) . You can read about it in Wikipedia: https: / / en. wikipedia. org/ wiki/ Exclusive_ or# Bitwise_ operation.",
    "input": "The first line contains a single integer n ( 2 \u2264 n \u2264 400 000 ) \u2014 the number of integers in the array. The second line contains integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 7 ) .",
    "output": "Print a single integer \u2014 xor of all pairwise sums of integers in the given array.",
    "note": "In the first sample case there is only one sum 1 + 2 = 3 . In the second sample case there are three sums: 1 + 2 = 3 , 1 + 3 = 4 , 2 + 3 = 5 . In binary they are represented as 011_ 2 \u2295 100_ 2 \u2295 101_ 2 = 010_ 2 , thus the answer is 2. \u2295 is the bitwise xor operation. To define x \u2295 y , consider binary representations of integers x and y . We put the i - th bit of the result to be 1 when exactly one of the i - th bits of x and y is 1. Otherwise, the i - th bit of the result is put to be 0. For example, 0101_ 2 \u2295 0011_ 2 = 0110_ 2 .",
    "topics": [
      "binary search",
      "bitmasks",
      "constructive algorithms",
      "data structures",
      "math",
      "sortings"
    ],
    "id": "1322B"
  },
  {
    "title": "Journey Planning",
    "url": "https://codeforces.com/problemset/problem/1320/A",
    "history": "Tanya wants to go on a journey across the cities of Berland. There are n cities situated along the main railroad line of Berland, and these cities are numbered from 1 to n . Tanya plans her journey as follows. First of all, she will choose some city c_ 1 to start her journey. She will visit it, and after that go to some other city c_ 2 > c_ 1 , then to some other city c_ 3 > c_ 2 , and so on, until she chooses to end her journey in some city c_ k > c_ k - 1 . So, the sequence of visited cities [ c_ 1, c_ 2, . . . , c_ k] should be strictly increasing. There are some additional constraints on the sequence of cities Tanya visits. Each city i has a beauty value b_ i associated with it. If there is only one city in Tanya' s journey, these beauty values imply no additional constraints. But if there are multiple cities in the sequence, then for any pair of adjacent cities c_ i and c_ i + 1 , the condition c_ i + 1 - c_ i = b_ c_ i + 1 - b_ c_ i must hold. For example, if n = 8 and b = [ 3, 4, 4, 6, 6, 7, 8, 9] , there are several three possible ways to plan a journey: c = [ 1, 2, 4] ; c = [ 3, 5, 6, 8] ; c = [ 7] ( a journey consisting of one city is also valid) . There are some additional ways to plan a journey that are not listed above. Tanya wants her journey to be as beautiful as possible. The beauty value of the whole journey is the sum of beauty values over all visited cities. Can you help her to choose the optimal plan, that is, to maximize the beauty value of the journey?",
    "input": "The first line contains one integer n ( 1 \u2264 n \u2264 2 \u00b7 10^ 5 ) \u2014 the number of cities in Berland. The second line contains n integers b_ 1 , b_ 2 , . . . , b_ n ( 1 \u2264 b_ i \u2264 4 \u00b7 10^ 5 ) , where b_ i is the beauty value of the i - th city.",
    "output": "Print one integer \u2014 the maximum beauty of a journey Tanya can choose.",
    "note": "The optimal journey plan in the first example is c = [ 2, 4, 5] . The optimal journey plan in the second example is c = [ 1] . The optimal journey plan in the third example is c = [ 3, 6] .",
    "topics": [
      "data structures",
      "dp",
      "greedy",
      "math",
      "sortings"
    ],
    "id": "1320A"
  },
  {
    "title": "Primitive Primes",
    "url": "https://codeforces.com/problemset/problem/1316/C",
    "history": "It is Professor R' s last class of his teaching career. Every time Professor R taught a class, he gave a special problem for the students to solve. You being his favourite student, put your heart into solving it one last time. You are given two polynomials f( x) = a_ 0 + a_ 1x + . . . + a_ n- 1x^ n- 1 and g( x) = b_ 0 + b_ 1x + . . . + b_ m- 1x^ m- 1 , with positive integral coefficients. It is guaranteed that the cumulative GCD of the coefficients is equal to 1 for both the given polynomials. In other words, gcd( a_ 0, a_ 1, . . . , a_ n- 1) = gcd( b_ 0, b_ 1, . . . , b_ m- 1) = 1 . Let h( x) = f( x) \u00b7 g( x) . Suppose that h( x) = c_ 0 + c_ 1x + . . . + c_ n+ m- 2x^ n+ m- 2 . You are also given a prime number p . Professor R challenges you to find any t such that c_ t isn' t divisible by p . He guarantees you that under these conditions such t always exists. If there are several such t , output any of them. As the input is quite large, please use fast input reading methods.",
    "input": "The first line of the input contains three integers, n , m and p ( 1 \u2264 n, m \u2264 10^ 6, 2 \u2264 p \u2264 10^ 9 ) , \u2014 n and m are the number of terms in f( x) and g( x) respectively ( one more than the degrees of the respective polynomials) and p is the given prime number. It is guaranteed that p is prime. The second line contains n integers a_ 0, a_ 1, . . . , a_ n- 1 ( 1 \u2264 a_ i\u2264 10^ 9 ) \u2014 a_ i is the coefficient of x^ i in f( x) . The third line contains m integers b_ 0, b_ 1, . . . , b_ m- 1 ( 1 \u2264 b_ i\u2264 10^ 9 ) \u2014 b_ i is the coefficient of x^ i in g( x) .",
    "output": "Print a single integer t ( 0\u2264 t \u2264 n+ m- 2 ) \u2014 the appropriate power of x in h( x) whose coefficient isn' t divisible by the given prime p . If there are multiple powers of x that satisfy the condition, print any.",
    "note": "In the first test case, f( x) is 2x^ 2 + x + 1 and g( x) is x + 2 , their product h( x) being 2x^ 3 + 5x^ 2 + 3x + 2 , so the answer can be 1 or 2 as both 3 and 5 aren' t divisible by 2. In the second test case, f( x) is x + 2 and g( x) is x + 3 , their product h( x) being x^ 2 + 5x + 6 , so the answer can be any of the powers as no coefficient is divisible by the given prime.",
    "topics": [
      "constructive algorithms",
      "math",
      "ternary search"
    ],
    "id": "1316C"
  },
  {
    "title": "Different Rules",
    "url": "https://codeforces.com/problemset/problem/1313/B",
    "history": "Nikolay has only recently started in competitive programming, but already qualified to the finals of one prestigious olympiad. There going to be n participants, one of whom is Nikolay. Like any good olympiad, it consists of two rounds. Tired of the traditional rules, in which the participant who solved the largest number of problems wins, the organizers came up with different rules. Suppose in the first round participant A took x - th place and in the second round \u2014 y - th place. Then the total score of the participant A is sum x + y . The overall place of the participant A is the number of participants ( including A) having their total score less than or equal to the total score of A. Note, that some participants may end up having a common overall place. It is also important to note, that in both the first and the second round there were no two participants tying at a common place. In other words, for every i from 1 to n exactly one participant took i - th place in first round and exactly one participant took i - th place in second round. Right after the end of the Olympiad, Nikolay was informed that he got x - th place in first round and y - th place in the second round. Nikolay doesn' t know the results of other participants, yet he wonders what is the minimum and maximum place he can take, if we consider the most favorable and unfavorable outcome for him. Please help Nikolay to find the answer to this question.",
    "input": "The first line contains an integer t ( 1 \u2264 t \u2264 100 ) \u2014 the number of test cases to solve. Each of the following t lines contains integers n , x , y ( 1 \u2264 n \u2264 10^ 9 , 1 \u2264 x, y \u2264 n ) \u2014 the number of participants in the olympiad, the place that Nikolay took in the first round and the place that Nikolay took in the second round.",
    "output": "Print two integers \u2014 the minimum and maximum possible overall place Nikolay could take.",
    "note": "Explanation for the first example: Suppose there were 5 participants A- E. Let' s denote Nikolay as A. The the most favorable results for Nikolay could look as follows: However, the results of the Olympiad could also look like this: In the first case Nikolay would have taken first place, and in the second \u2014 third place.",
    "topics": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "math"
    ],
    "id": "1313B"
  },
  {
    "title": "Count the Arrays",
    "url": "https://codeforces.com/problemset/problem/1312/D",
    "history": "Your task is to calculate the number of arrays such that: each array contains n elements; each element is an integer from 1 to m ; for each array, there is exactly one pair of equal elements; for each array a , there exists an index i such that the array is strictly ascending before the i - th element and strictly descending after it ( formally, it means that a_ j < a_ j + 1 , if j < i , and a_ j > a_ j + 1 , if j \u2265 i ) .",
    "input": "The first line contains two integers n and m ( 2 \u2264 n \u2264 m \u2264 2 \u00b7 10^ 5 ) .",
    "output": "Print one integer \u2014 the number of arrays that meet all of the aforementioned conditions, taken modulo 998244353 .",
    "note": "The arrays in the first example are: [ 1, 2, 1] ; [ 1, 3, 1] ; [ 1, 4, 1] ; [ 2, 3, 2] ; [ 2, 4, 2] ; [ 3, 4, 3] .",
    "topics": [
      "combinatorics",
      "math"
    ],
    "id": "1312D"
  },
  {
    "title": "Adding Powers",
    "url": "https://codeforces.com/problemset/problem/1312/C",
    "history": "Suppose you are performing the following algorithm. There is an array v_ 1, v_ 2, . . . , v_ n filled with zeroes at start. The following operation is applied to the array several times \u2014 at i - th step ( 0 - indexed) you can: either choose position pos ( 1 \u2264 pos \u2264 n ) and increase v_ pos by k^ i ; or not choose any position and skip this step. You can choose how the algorithm would behave on each step and when to stop it. The question is: can you make array v equal to the given array a ( v_ j = a_ j for each j ) after some step?",
    "input": "The first line contains one integer T ( 1 \u2264 T \u2264 1000 ) \u2014 the number of test cases. Next 2T lines contain test cases \u2014 two lines per test case. The first line of each test case contains two integers n and k ( 1 \u2264 n \u2264 30 , 2 \u2264 k \u2264 100 ) \u2014 the size of arrays v and a and value k used in the algorithm. The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 0 \u2264 a_ i \u2264 10^ 16 ) \u2014 the array you' d like to achieve.",
    "output": "For each test case print YES ( case insensitive) if you can achieve the array a after some step or NO ( case insensitive) otherwise.",
    "note": "In the first test case, you can stop the algorithm before the 0 - th step, or don' t choose any position several times and stop the algorithm. In the second test case, you can add k^ 0 to v_ 1 and stop the algorithm. In the third test case, you can' t make two 1 in the array v . In the fifth test case, you can skip 9^ 0 and 9^ 1 , then add 9^ 2 and 9^ 3 to v_ 3 , skip 9^ 4 and finally, add 9^ 5 to v_ 2 .",
    "topics": [
      "bitmasks",
      "greedy",
      "implementation",
      "math",
      "number theory",
      "ternary search"
    ],
    "id": "1312C"
  },
  {
    "title": "Two Regular Polygons",
    "url": "https://codeforces.com/problemset/problem/1312/A",
    "history": "You are given two integers n and m ( m < n ) . Consider a convex regular polygon of n vertices. Recall that a regular polygon is a polygon that is equiangular ( all angles are equal in measure) and equilateral ( all sides have the same length) . Examples of convex regular polygons Your task is to say if it is possible to build another convex regular polygon with m vertices such that its center coincides with the center of the initial polygon and each of its vertices is some vertex of the initial polygon. You have to answer t independent test cases.",
    "input": "The first line of the input contains one integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. The next t lines describe test cases. Each test case is given as two space- separated integers n and m ( 3 \u2264 m < n \u2264 100 ) \u2014 the number of vertices in the initial polygon and the number of vertices in the polygon you want to build.",
    "output": "For each test case, print the answer \u2014 \" YES\" ( without quotes) , if it is possible to build another convex regular polygon with m vertices such that its center coincides with the center of the initial polygon and each of its vertices is some vertex of the initial polygon and \" NO\" otherwise.",
    "note": "The first test case of the example It can be shown that the answer for the second test case of the example is \" NO\" .",
    "topics": [
      "geometry",
      "greedy",
      "math",
      "number theory"
    ],
    "id": "1312A"
  },
  {
    "title": "Three Integers",
    "url": "https://codeforces.com/problemset/problem/1311/D",
    "history": "You are given three integers a \u2264 b \u2264 c . In one move, you can add + 1 or - 1 to any of these integers ( i. e. increase or decrease any number by one) . You can perform such operation any ( possibly, zero) number of times, you can even perform this operation several times with one number. Note that you cannot make non- positive numbers using such operations. You have to perform the minimum number of such operations in order to obtain three integers A \u2264 B \u2264 C such that B is divisible by A and C is divisible by B . You have to answer t independent test cases.",
    "input": "The first line of the input contains one integer t ( 1 \u2264 t \u2264 100 ) \u2014 the number of test cases. The next t lines describe test cases. Each test case is given on a separate line as three space- separated integers a, b and c ( 1 \u2264 a \u2264 b \u2264 c \u2264 10^ 4 ) .",
    "output": "For each test case, print the answer. In the first line print res \u2014 the minimum number of operations you have to perform to obtain three integers A \u2264 B \u2264 C such that B is divisible by A and C is divisible by B . On the second line print any suitable triple A, B and C .",
    "note": "",
    "topics": [
      "brute force",
      "math"
    ],
    "id": "1311D"
  },
  {
    "title": "Add Odd or Subtract Even",
    "url": "https://codeforces.com/problemset/problem/1311/A",
    "history": "You are given two positive integers a and b . In one move, you can change a in the following way: Choose any positive odd integer x ( x > 0 ) and replace a with a+ x ; choose any positive even integer y ( y > 0 ) and replace a with a- y . You can perform as many such operations as you want. You can choose the same numbers x and y in different moves. Your task is to find the minimum number of moves required to obtain b from a . It is guaranteed that you can always obtain b from a . You have to answer t independent test cases.",
    "input": "The first line of the input contains one integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. Then t test cases follow. Each test case is given as two space- separated integers a and b ( 1 \u2264 a, b \u2264 10^ 9 ) .",
    "output": "For each test case, print the answer \u2014 the minimum number of moves required to obtain b from a if you can perform any number of moves described in the problem statement. It is guaranteed that you can always obtain b from a .",
    "note": "In the first test case, you can just add 1 . In the second test case, you don' t need to do anything. In the third test case, you can add 1 two times. In the fourth test case, you can subtract 4 and add 1 . In the fifth test case, you can just subtract 6 .",
    "topics": [
      "greedy",
      "implementation",
      "math"
    ],
    "id": "1311A"
  },
  {
    "title": "Bad Cryptography",
    "url": "https://codeforces.com/problemset/problem/1310/F",
    "history": "In modern cryptography much is tied to the algorithmic complexity of solving several problems. One of such problems is a discrete logarithm problem. It is formulated as follows: Let' s fix a finite field and two it' s elements a and b . One need to fun such x that a^ x = b or detect there is no such x. It is most likely that modern mankind cannot solve the problem of discrete logarithm for a sufficiently large field size. For example, for a field of residues modulo prime number, primes of 1024 or 2048 bits are considered to be safe. However, calculations with such large numbers can place a significant load on servers that perform cryptographic operations. For this reason, instead of a simple module residue field, more complex fields are often used. For such field no fast algorithms that use a field structure are known, smaller fields can be used and operations can be properly optimized. Developer Nikolai does not trust the generally accepted methods, so he wants to invent his own. Recently, he read about a very strange field \u2014 nimbers, and thinks it' s a great fit for the purpose. The field of nimbers is defined on a set of integers from 0 to 2^ 2^ k - 1 for some positive integer k . Bitwise exclusive or ( \u2295 ) operation is used as addition. One of ways to define multiplication operation ( \u2299 ) is following properties: 0 \u2299 a = a \u2299 0 = 0 1 \u2299 a = a \u2299 1 = a a \u2299 b = b \u2299 a a \u2299 ( b \u2299 c) = ( a \u2299 b) \u2299 c a \u2299 ( b \u2295 c) = ( a \u2299 b) \u2295 ( a \u2299 c) If a = 2^ 2^ n for some integer n > 0 , and b < a , then a \u2299 b = a \u00b7 b . If a = 2^ 2^ n for some integer n > 0 , then a \u2299 a = 3/ 2\u00b7 a . For example: 4 \u2299 4 = 6 8 \u2299 8 = 4 \u2299 2 \u2299 4 \u2299 2 = 4 \u2299 4 \u2299 2 \u2299 2 = 6 \u2299 3 = ( 4 \u2295 2) \u2299 3 = ( 4 \u2299 3) \u2295 ( 2 \u2299 ( 2 \u2295 1) ) = ( 4 \u2299 3) \u2295 ( 2 \u2299 2) \u2295 ( 2 \u2299 1) = 12 \u2295 3 \u2295 2 = 13. 32 \u2299 64 = ( 16 \u2299 2) \u2299 ( 16 \u2299 4) = ( 16 \u2299 16) \u2299 ( 2 \u2299 4) = 24 \u2299 8 = ( 16 \u2295 8) \u2299 8 = ( 16 \u2299 8) \u2295 ( 8 \u2299 8) = 128 \u2295 13 = 141 5 \u2299 6 = ( 4 \u2295 1) \u2299 ( 4 \u2295 2) = ( 4\u2299 4) \u2295 ( 4 \u2299 2) \u2295 ( 4 \u2299 1) \u2295 ( 1 \u2299 2) = 6 \u2295 8 \u2295 4 \u2295 2 = 8 Formally, this algorithm can be described by following pseudo- code. multiply( a, b) ans = 0 for p1 in bits( a) / / numbers of bits of a equal to one for p2 in bits( b) / / numbers of bits of b equal to one ans = ans xor multiply_ powers_ of_ 2( 1 < < p1, 1 < < p2) return ans; multiply_ powers_ of_ 2( a, b) if ( a = = 1 or b = = 1) return a * b n = maximal value, such 2^ 2^ n < = max( a, b) power = 2^ 2^ n; if ( a > = power and b > = power) return multiply( power * 3 / 2, multiply_ powers_ of_ 2( a / power, b / power) ) else if ( a > = power) return multiply_ powers_ of_ 2( a / power, b) * power else return multiply_ powers_ of_ 2( a, b / power) * power It can be shown, that this operations really forms a field. Moreover, than can make sense as game theory operations, but that' s not related to problem much. With the help of appropriate caching and grouping of operations, it is possible to calculate the product quickly enough, which is important to improve speed of the cryptoalgorithm. More formal definitions as well as additional properties can be clarified in the wikipedia article at link. The authors of the task hope that the properties listed in the statement should be enough for the solution. Powering for such muliplication is defined in same way, formally a^ \u2299 k = a \u2299 a \u2299\u22ef\u2299 a_ k . You need to analyze the proposed scheme strength. For pairs of numbers a and b you need to find such x , that a^ \u2299 x = b , or determine that it doesn' t exist.",
    "input": "In the first line of input there is single integer t ( 1 \u2264 t \u2264 100 ) \u2014 number of pairs, for which you need to find the discrete logarithm. In each of next t line there is a pair of integers a b ( 1 \u2264 a, b < 2^ 64 ) .",
    "output": "For each pair you should print one integer x ( 0 \u2264 x < 2^ 64 ) , such that a^ \u2299 x = b , or - 1 if no such x exists. It can be shown, that if any such x exists, there is one inside given bounds. If there are several good values, you can output any of them.",
    "note": "",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "1310F"
  },
  {
    "title": "Cow and Treats",
    "url": "https://codeforces.com/problemset/problem/1307/E",
    "history": "After a successful year of milk production, Farmer John is rewarding his cows with their favorite treat: tasty grass! On the field, there is a row of n units of grass, each with a sweetness s_ i . Farmer John has m cows, each with a favorite sweetness f_ i and a hunger value h_ i . He would like to pick two disjoint subsets of cows to line up on the left and right side of the grass row. There is no restriction on how many cows must be on either side. The cows will be treated in the following manner: The cows from the left and right side will take turns feeding in an order decided by Farmer John. When a cow feeds, it walks towards the other end without changing direction and eats grass of its favorite sweetness until it eats h_ i units. The moment a cow eats h_ i units, it will fall asleep there, preventing further cows from passing it from both directions. If it encounters another sleeping cow or reaches the end of the grass row, it will get upset. Farmer John absolutely does not want any cows to get upset. Note that grass does not grow back. Also, to prevent cows from getting upset, not every cow has to feed since FJ can choose a subset of them. Surprisingly, FJ has determined that sleeping cows are the most satisfied. If FJ orders optimally, what is the maximum number of sleeping cows that can result, and how many ways can FJ choose the subset of cows on the left and right side to achieve that maximum number of sleeping cows ( modulo 10^ 9+ 7 ) ? The order in which FJ sends the cows does not matter as long as no cows get upset.",
    "input": "The first line contains two integers n and m ( 1 \u2264 n \u2264 5000 , 1 \u2264 m \u2264 5000 ) \u2014 the number of units of grass and the number of cows. The second line contains n integers s_ 1, s_ 2, . . . , s_ n ( 1 \u2264 s_ i \u2264 n ) \u2014 the sweetness values of the grass. The i - th of the following m lines contains two integers f_ i and h_ i ( 1 \u2264 f_ i, h_ i \u2264 n ) \u2014 the favorite sweetness and hunger value of the i - th cow. No two cows have the same hunger and favorite sweetness simultaneously.",
    "output": "Output two integers \u2014 the maximum number of sleeping cows that can result and the number of ways modulo 10^ 9+ 7 .",
    "note": "In the first example, FJ can line up the cows as follows to achieve 2 sleeping cows: Cow 1 is lined up on the left side and cow 2 is lined up on the right side. Cow 2 is lined up on the left side and cow 1 is lined up on the right side. In the second example, FJ can line up the cows as follows to achieve 1 sleeping cow: Cow 1 is lined up on the left side. Cow 2 is lined up on the left side. Cow 1 is lined up on the right side. Cow 2 is lined up on the right side. In the third example, FJ can line up the cows as follows to achieve 2 sleeping cows: Cow 1 and 2 are lined up on the left side. Cow 1 and 2 are lined up on the right side. Cow 1 is lined up on the left side and cow 2 is lined up on the right side. Cow 1 is lined up on the right side and cow 2 is lined up on the left side. In the fourth example, FJ cannot end up with any sleeping cows, so there will be no cows lined up on either side.",
    "topics": [
      "binary search",
      "combinatorics",
      "dp",
      "greedy",
      "implementation",
      "math"
    ],
    "id": "1307E"
  },
  {
    "title": "Cow and Message",
    "url": "https://codeforces.com/problemset/problem/1307/C",
    "history": "Bessie the cow has just intercepted a text that Farmer John sent to Burger Queen! However, Bessie is sure that there is a secret message hidden inside. The text is a string s of lowercase Latin letters. She considers a string t as hidden in string s if t exists as a subsequence of s whose indices form an arithmetic progression. For example, the string aab is hidden in string aaabb because it occurs at indices 1 , 3 , and 5 , which form an arithmetic progression with a common difference of 2 . Bessie thinks that any hidden string that occurs the most times is the secret message. Two occurrences of a subsequence of S are distinct if the sets of indices are different. Help her find the number of occurrences of the secret message! For example, in the string aaabb, a is hidden 3 times, b is hidden 2 times, ab is hidden 6 times, aa is hidden 3 times, bb is hidden 1 time, aab is hidden 2 times, aaa is hidden 1 time, abb is hidden 1 time, aaab is hidden 1 time, aabb is hidden 1 time, and aaabb is hidden 1 time. The number of occurrences of the secret message is 6 .",
    "input": "The first line contains a string s of lowercase Latin letters ( 1 \u2264 | s| \u2264 10^ 5 ) \u2014 the text that Bessie intercepted.",
    "output": "Output a single integer \u2014 the number of occurrences of the secret message.",
    "note": "In the first example, these are all the hidden strings and their indice sets: a occurs at ( 1) , ( 2) , ( 3) b occurs at ( 4) , ( 5) ab occurs at ( 1, 4) , ( 1, 5) , ( 2, 4) , ( 2, 5) , ( 3, 4) , ( 3, 5) aa occurs at ( 1, 2) , ( 1, 3) , ( 2, 3) bb occurs at ( 4, 5) aab occurs at ( 1, 3, 5) , ( 2, 3, 4) aaa occurs at ( 1, 2, 3) abb occurs at ( 3, 4, 5) aaab occurs at ( 1, 2, 3, 4) aabb occurs at ( 2, 3, 4, 5) aaabb occurs at ( 1, 2, 3, 4, 5) Note that all the sets of indices are arithmetic progressions. In the second example, no hidden string occurs more than once. In the third example, the hidden string is the letter l.",
    "topics": [
      "brute force",
      "dp",
      "math",
      "strings"
    ],
    "id": "1307C"
  },
  {
    "title": "Cow and Friend",
    "url": "https://codeforces.com/problemset/problem/1307/B",
    "history": "Bessie has way too many friends because she is everyone' s favorite cow! Her new friend Rabbit is trying to hop over so they can play! More specifically, he wants to get from ( 0, 0) to ( x, 0) by making multiple hops. He is only willing to hop from one point to another point on the 2D plane if the Euclidean distance between the endpoints of a hop is one of its n favorite numbers: a_ 1, a_ 2, . . . , a_ n . What is the minimum number of hops Rabbit needs to get from ( 0, 0) to ( x, 0) ? Rabbit may land on points with non- integer coordinates. It can be proved that Rabbit can always reach his destination. Recall that the Euclidean distance between points ( x_ i, y_ i) and ( x_ j, y_ j) is \u221a( ( x_ i- x_ j) ^ 2+ ( y_ i- y_ j) ^ 2) . For example, if Rabbit has favorite numbers 1 and 3 he could hop from ( 0, 0) to ( 4, 0) in two hops as shown below. Note that there also exists other valid ways to hop to ( 4, 0) in 2 hops ( e. g. ( 0, 0) \u2192 ( 2, - \u221a( 5) ) \u2192 ( 4, 0) ) . Here is a graphic for the first example. Both hops have distance 3 , one of Rabbit' s favorite numbers. In other words, each time Rabbit chooses some number a_ i and hops with distance equal to a_ i in any direction he wants. The same number can be used multiple times.",
    "input": "The input consists of multiple test cases. The first line contains an integer t ( 1 \u2264 t \u2264 1000 ) \u2014 the number of test cases. Next 2t lines contain test cases \u2014 two lines per test case. The first line of each test case contains two integers n and x ( 1 \u2264 n \u2264 10^ 5 , 1 \u2264 x \u2264 10^ 9 ) \u2014 the number of favorite numbers and the distance Rabbit wants to travel, respectively. The second line of each test case contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 9 ) \u2014 Rabbit' s favorite numbers. It is guaranteed that the favorite numbers are distinct. It is guaranteed that the sum of n over all the test cases will not exceed 10^ 5 .",
    "output": "For each test case, print a single integer \u2014 the minimum number of hops needed.",
    "note": "The first test case of the sample is shown in the picture above. Rabbit can hop to ( 2, \u221a( 5) ) , then to ( 4, 0) for a total of two hops. Each hop has a distance of 3 , which is one of his favorite numbers. In the second test case of the sample, one way for Rabbit to hop 3 times is: ( 0, 0) \u2192 ( 4, 0) \u2192 ( 8, 0) \u2192 ( 12, 0) . In the third test case of the sample, Rabbit can hop from ( 0, 0) to ( 5, 0) . In the fourth test case of the sample, Rabbit can hop: ( 0, 0) \u2192 ( 5, 10\u221a( 2) ) \u2192 ( 10, 0) .",
    "topics": [
      "geometry",
      "greedy",
      "math"
    ],
    "id": "1307B"
  },
  {
    "title": "Kuroni and the Punishment",
    "url": "https://codeforces.com/problemset/problem/1305/F",
    "history": "Kuroni is very angry at the other setters for using him as a theme! As a punishment, he forced them to solve the following problem: You have an array a consisting of n positive integers. An operation consists of choosing an element and either adding 1 to it or subtracting 1 from it, such that the element remains positive. We say the array is good if the greatest common divisor of all its elements is not 1 . Find the minimum number of operations needed to make the array good. Unable to match Kuroni' s intellect, the setters failed to solve the problem. Help them escape from Kuroni' s punishment!",
    "input": "The first line contains an integer n ( 2 \u2264 n \u2264 2 \u00b7 10^ 5 ) \u2014 the number of elements in the array. The second line contains n integers a_ 1, a_ 2, . . . , a_ n . ( 1 \u2264 a_ i \u2264 10^ 12 ) \u2014 the elements of the array.",
    "output": "Print a single integer \u2014 the minimum number of operations required to make the array good.",
    "note": "In the first example, the first array is already good, since the greatest common divisor of all the elements is 2 . In the second example, we may apply the following operations: Add 1 to the second element, making it equal to 9 . Subtract 1 from the third element, making it equal to 6 . Add 1 to the fifth element, making it equal to 2 . Add 1 to the fifth element again, making it equal to 3 . The greatest common divisor of all elements will then be equal to 3 , so the array will be good. It can be shown that no sequence of three or less operations can make the array good.",
    "topics": [
      "math",
      "number theory",
      "probabilities"
    ],
    "id": "1305F"
  },
  {
    "title": "Kuroni and the Score Distribution",
    "url": "https://codeforces.com/problemset/problem/1305/E",
    "history": "Kuroni is the coordinator of the next Mathforces round written by the \" Proof by AC\" team. All the preparation has been done, and he is discussing with the team about the score distribution for the round. The round consists of n problems, numbered from 1 to n . The problems are ordered in increasing order of difficulty, no two problems have the same difficulty. A score distribution for the round can be denoted by an array a_ 1, a_ 2, . . . , a_ n , where a_ i is the score of i - th problem. Kuroni thinks that the score distribution should satisfy the following requirements: The score of each problem should be a positive integer not exceeding 10^ 9 . A harder problem should grant a strictly higher score than an easier problem. In other words, 1 \u2264 a_ 1 < a_ 2 < . . . < a_ n \u2264 10^ 9 . The balance of the score distribution, defined as the number of triples ( i, j, k) such that 1 \u2264 i < j < k \u2264 n and a_ i + a_ j = a_ k , should be exactly m . Help the team find a score distribution that satisfies Kuroni' s requirement. In case such a score distribution does not exist, output - 1 .",
    "input": "The first and single line contains two integers n and m ( 1 \u2264 n \u2264 5000 , 0 \u2264 m \u2264 10^ 9 ) \u2014 the number of problems and the required balance.",
    "output": "If there is no solution, print a single integer - 1 . Otherwise, print a line containing n integers a_ 1, a_ 2, . . . , a_ n , representing a score distribution that satisfies all the requirements. If there are multiple answers, print any of them.",
    "note": "In the first example, there are 3 triples ( i, j, k) that contribute to the balance of the score distribution. ( 1, 2, 3) ( 1, 3, 4) ( 2, 4, 5)",
    "topics": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "math"
    ],
    "id": "1305E"
  },
  {
    "title": "Kuroni and Impossible Calculation",
    "url": "https://codeforces.com/problemset/problem/1305/C",
    "history": "To become the king of Codeforces, Kuroni has to solve the following problem. He is given n numbers a_ 1, a_ 2, . . . , a_ n . Help Kuroni to calculate \u220f_ 1\u2264 i< j\u2264 n | a_ i - a_ j| . As result can be very big, output it modulo m . If you are not familiar with short notation, \u220f_ 1\u2264 i< j\u2264 n | a_ i - a_ j| is equal to | a_ 1 - a_ 2| \u00b7| a_ 1 - a_ 3| \u00b7 . . . \u00b7| a_ 1 - a_ n| \u00b7| a_ 2 - a_ 3| \u00b7| a_ 2 - a_ 4| \u00b7 . . . \u00b7| a_ 2 - a_ n| \u00b7 . . . \u00b7 | a_ n- 1 - a_ n| . In other words, this is the product of | a_ i - a_ j| for all 1\u2264 i < j \u2264 n .",
    "input": "The first line contains two integers n , m ( 2\u2264 n \u2264 2\u00b7 10^ 5 , 1\u2264 m \u2264 1000 ) \u2014 number of numbers and modulo. The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 0 \u2264 a_ i \u2264 10^ 9 ) .",
    "output": "Output the single number \u2014 \u220f_ 1\u2264 i< j\u2264 n | a_ i - a_ j| m .",
    "note": "In the first sample, | 8 - 5| = 3 \u2261 3 10 . In the second sample, | 1 - 4| \u00b7| 1 - 5| \u00b7| 4 - 5| = 3\u00b7 4 \u00b7 1 = 12 \u2261 0 12 . In the third sample, | 1 - 4| \u00b7| 1 - 9| \u00b7| 4 - 9| = 3 \u00b7 8 \u00b7 5 = 120 \u2261 1 7 .",
    "topics": [
      "brute force",
      "combinatorics",
      "math",
      "number theory"
    ],
    "id": "1305C"
  },
  {
    "title": "Two Rabbits",
    "url": "https://codeforces.com/problemset/problem/1304/A",
    "history": "Being tired of participating in too many Codeforces rounds, Gildong decided to take some rest in a park. He sat down on a bench, and soon he found two rabbits hopping around. One of the rabbits was taller than the other. He noticed that the two rabbits were hopping towards each other. The positions of the two rabbits can be represented as integer coordinates on a horizontal line. The taller rabbit is currently on position x , and the shorter rabbit is currently on position y ( x y ) . Every second, each rabbit hops to another position. The taller rabbit hops to the positive direction by a , and the shorter rabbit hops to the negative direction by b . For example, let' s say x= 0 , y= 10 , a= 2 , and b= 3 . At the 1 - st second, each rabbit will be at position 2 and 7 . At the 2 - nd second, both rabbits will be at position 4 . Gildong is now wondering: Will the two rabbits be at the same position at the same moment? If so, how long will it take? Let' s find a moment in time ( in seconds) after which the rabbits will be at the same point.",
    "input": "Each test contains one or more test cases. The first line contains the number of test cases t ( 1 \u2264 t \u2264 1000 ) . Each test case contains exactly one line. The line consists of four integers x , y , a , b ( 0 \u2264 x y \u2264 10^ 9 , 1 \u2264 a, b \u2264 10^ 9 ) \u2014 the current position of the taller rabbit, the current position of the shorter rabbit, the hopping distance of the taller rabbit, and the hopping distance of the shorter rabbit, respectively.",
    "output": "For each test case, print the single integer: number of seconds the two rabbits will take to be at the same position. If the two rabbits will never be at the same position simultaneously, print - 1 .",
    "note": "The first case is explained in the description. In the second case, each rabbit will be at position 3 and 7 respectively at the 1 - st second. But in the 2 - nd second they will be at 6 and 4 respectively, and we can see that they will never be at the same position since the distance between the two rabbits will only increase afterward.",
    "topics": [
      "math"
    ],
    "id": "1304A"
  },
  {
    "title": "National Project",
    "url": "https://codeforces.com/problemset/problem/1303/B",
    "history": "Your company was appointed to lay new asphalt on the highway of length n . You know that every day you can either repair one unit of the highway ( lay new asphalt over one unit of the highway) or skip repairing. Skipping the repair is necessary because of the climate. The climate in your region is periodical: there are g days when the weather is good and if you lay new asphalt these days it becomes high- quality pavement; after that, the weather during the next b days is bad, and if you lay new asphalt these days it becomes low- quality pavement; again g good days, b bad days and so on. You can be sure that you start repairing at the start of a good season, in other words, days 1, 2, . . . , g are good. You don' t really care about the quality of the highway, you just want to make sure that at least half of the highway will have high- quality pavement. For example, if the n = 5 then at least 3 units of the highway should have high quality; if n = 4 then at least 2 units should have high quality. What is the minimum number of days is needed to finish the repair of the whole highway?",
    "input": "The first line contains a single integer T ( 1 \u2264 T \u2264 10^ 4 ) \u2014 the number of test cases. Next T lines contain test cases \u2014 one per line. Each line contains three integers n , g and b ( 1 \u2264 n, g, b \u2264 10^ 9 ) \u2014 the length of the highway and the number of good and bad days respectively.",
    "output": "Print T integers \u2014 one per test case. For each test case, print the minimum number of days required to repair the whole highway if at least half of it should have high quality.",
    "note": "In the first test case, you can just lay new asphalt each day, since days 1, 3, 5 are good. In the second test case, you can also lay new asphalt each day, since days 1 - 8 are good.",
    "topics": [
      "math"
    ],
    "id": "1303B"
  },
  {
    "title": "Ayoub's function",
    "url": "https://codeforces.com/problemset/problem/1301/C",
    "history": "Ayoub thinks that he is a very smart person, so he created a function f( s) , where s is a binary string ( a string which contains only symbols \" 0\" and \" 1\" ) . The function f( s) is equal to the number of substrings in the string s that contains at least one symbol, that is equal to \" 1\" . More formally, f( s) is equal to the number of pairs of integers ( l, r) , such that 1 \u2264 l \u2264 r \u2264 | s| ( where | s| is equal to the length of string s ) , such that at least one of the symbols s_ l, s_ l+ 1, . . . , s_ r is equal to \" 1\" . For example, if s = \" 01010\" then f( s) = 12 , because there are 12 such pairs ( l, r) : ( 1, 2) , ( 1, 3) , ( 1, 4) , ( 1, 5) , ( 2, 2) , ( 2, 3) , ( 2, 4) , ( 2, 5) , ( 3, 4) , ( 3, 5) , ( 4, 4) , ( 4, 5) . Ayoub also thinks that he is smarter than Mahmoud so he gave him two integers n and m and asked him this problem. For all binary strings s of length n which contains exactly m symbols equal to \" 1\" , find the maximum value of f( s) . Mahmoud couldn' t solve the problem so he asked you for help. Can you help him?",
    "input": "The input consists of multiple test cases. The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 5 ) \u2014 the number of test cases. The description of the test cases follows. The only line for each test case contains two integers n , m ( 1 \u2264 n \u2264 10^ 9 , 0 \u2264 m \u2264 n ) \u2014 the length of the string and the number of symbols equal to \" 1\" in it.",
    "output": "For every test case print one integer number \u2014 the maximum value of f( s) over all strings s of length n , which has exactly m symbols, equal to \" 1\" .",
    "note": "In the first test case, there exists only 3 strings of length 3 , which has exactly 1 symbol, equal to \" 1\" . These strings are: s_ 1 = \" 100\" , s_ 2 = \" 010\" , s_ 3 = \" 001\" . The values of f for them are: f( s_ 1) = 3, f( s_ 2) = 4, f( s_ 3) = 3 , so the maximum value is 4 and the answer is 4 . In the second test case, the string s with the maximum value is \" 101\" . In the third test case, the string s with the maximum value is \" 111\" . In the fourth test case, the only string s of length 4 , which has exactly 0 symbols, equal to \" 1\" is \" 0000\" and the value of f for that string is 0 , so the answer is 0 . In the fifth test case, the string s with the maximum value is \" 01010\" and it is described as an example in the problem statement.",
    "topics": [
      "binary search",
      "combinatorics",
      "greedy",
      "math",
      "strings"
    ],
    "id": "1301C"
  },
  {
    "title": "Non-zero",
    "url": "https://codeforces.com/problemset/problem/1300/A",
    "history": "Guy- Manuel and Thomas have an array a of n integers [ a_ 1, a_ 2, . . . , a_ n ] . In one step they can add 1 to any element of the array. Formally, in one step they can choose any integer index i ( 1 \u2264 i \u2264 n ) and do a_ i : = a_ i + 1 . If either the sum or the product of all elements in the array is equal to zero, Guy- Manuel and Thomas do not mind to do this operation one more time. What is the minimum number of steps they need to do to make both the sum and the product of all elements in the array different from zero? Formally, find the minimum number of steps to make a_ 1 + a_ 2 + . . . + a_ n 0 and a_ 1 \u00b7 a_ 2 \u00b7 . . . \u00b7 a_ n 0 .",
    "input": "Each test contains multiple test cases. The first line contains the number of test cases t ( 1 \u2264 t \u2264 10^ 3 ) . The description of the test cases follows. The first line of each test case contains an integer n ( 1 \u2264 n \u2264 100 ) \u2014 the size of the array. The second line of each test case contains n integers a_ 1, a_ 2, . . . , a_ n ( - 100 \u2264 a_ i \u2264 100 ) \u2014 elements of the array .",
    "output": "For each test case, output the minimum number of steps required to make both sum and product of all elements in the array different from zero.",
    "note": "In the first test case, the sum is 0 . If we add 1 to the first element, the array will be [ 3, - 1, - 1] , the sum will be equal to 1 and the product will be equal to 3 . In the second test case, both product and sum are 0 . If we add 1 to the second and the third element, the array will be [ - 1, 1, 1, 1] , the sum will be equal to 2 and the product will be equal to - 1 . It can be shown that fewer steps can' t be enough. In the third test case, both sum and product are non- zero, we don' t need to do anything. In the fourth test case, after adding 1 twice to the first element the array will be [ 2, - 2, 1] , the sum will be 1 and the product will be - 4 .",
    "topics": [
      "implementation",
      "math"
    ],
    "id": "1300A"
  },
  {
    "title": "So Mean",
    "url": "https://codeforces.com/problemset/problem/1299/E",
    "history": "This problem is interactive. We have hidden a permutation p_ 1, p_ 2, . . . , p_ n of numbers from 1 to n from you, where n is even. You can try to guess it using the following queries: ? k a_ 1 a_ 2 . . . a_ k . In response, you will learn if the average of elements with indexes a_ 1, a_ 2, . . . , a_ k is an integer. In other words, you will receive 1 if p_ a_ 1 + p_ a_ 2 + . . . + p_ a_ k/ k is integer, and 0 otherwise. You have to guess the permutation. You can ask not more than 18n queries. Note that permutations [ p_ 1, p_ 2, . . . , p_ k] and [ n + 1 - p_ 1, n + 1 - p_ 2, . . . , n + 1 - p_ k] are indistinguishable. Therefore, you are guaranteed that p_ 1 \u2264n/ 2 . Note that the permutation p is fixed before the start of the interaction and doesn' t depend on your queries. In other words, interactor is not adaptive. Note that you don' t have to minimize the number of queries. InteractionYou begin the interaction by reading n . To ask a question about elements on positions a_ 1, a_ 2, . . . , a_ k , in a separate line output ? k a_ 1 a_ 2 . . . a_ k Numbers in the query have to satisfy 1 \u2264 a_ i \u2264 n , and all a_ i have to be different. Don' t forget to ' flush' , to get the answer. In response, you will receive 1 if p_ a_ 1 + p_ a_ 2 + . . . + p_ a_ k/ k is integer, and 0 otherwise. In case your query is invalid or you asked more than 18n queries, the program will print - 1 and will finish interaction. You will receive a Wrong answer verdict. Make sure to exit immediately to avoid getting other verdicts. When you determine permutation, output ! p_ 1 p_ 2 . . . p_ n After printing a query do not forget to output end of line and flush the output. Otherwise, you will get Idleness limit exceeded. To do this, use: fflush( stdout) or cout. flush( ) in C+ + ; System. out. flush( ) in Java; flush( output) in Pascal; stdout. flush( ) in Python; see documentation for other languages. Hack formatFor the hacks use the following format: The first line has to contain a single integer n ( 2 \u2264 n \u2264 800 , n is even) . In the next line output n integers p_ 1, p_ 2, . . . , p_ n \u2014 the valid permutation of numbers from 1 to n . p_ 1 \u2264n/ 2 must hold.",
    "input": "The first line contains a single integer n ( 2 \u2264 n \u2264 800 , n is even) .",
    "output": "",
    "note": "",
    "topics": [
      "interactive",
      "math"
    ],
    "id": "1299E"
  },
  {
    "title": "Around the World",
    "url": "https://codeforces.com/problemset/problem/1299/D",
    "history": "Guy- Manuel and Thomas are planning 144 trips around the world. You are given a simple weighted undirected connected graph with n vertexes and m edges with the following restriction: there isn' t any simple cycle ( i. e. a cycle which doesn' t pass through any vertex more than once) of length greater than 3 which passes through the vertex 1 . The cost of a path ( not necessarily simple) in this graph is defined as the XOR of weights of all edges in that path with each edge being counted as many times as the path passes through it. But the trips with cost 0 aren' t exciting. You may choose any subset of edges incident to the vertex 1 and remove them. How many are there such subsets, that, when removed, there is not any nontrivial cycle with the cost equal to 0 which passes through the vertex 1 in the resulting graph? A cycle is called nontrivial if it passes through some edge odd number of times. As the answer can be very big, output it modulo 10^ 9+ 7 .",
    "input": "The first line contains two integers n and m ( 1 \u2264 n, m \u2264 10^ 5 ) \u2014 the number of vertexes and edges in the graph. The i - th of the next m lines contains three integers a_ i , b_ i and w_ i ( 1 \u2264 a_ i, b_ i \u2264 n, a_ i = \u0338 b_ i, 0 \u2264 w_ i < 32 ) \u2014 the endpoints of the i - th edge and its weight. It' s guaranteed there aren' t any multiple edges, the graph is connected and there isn' t any simple cycle of length greater than 3 which passes through the vertex 1 .",
    "output": "Output the answer modulo 10^ 9+ 7 .",
    "note": "The pictures below represent the graphs from examples. In the first example, there aren' t any nontrivial cycles with cost 0 , so we can either remove or keep the only edge incident to the vertex 1 . In the second example, if we don' t remove the edge 1- 2 , then there is a cycle 1- 2- 4- 5- 2- 1 with cost 0 ; also if we don' t remove the edge 1- 3 , then there is a cycle 1- 3- 2- 4- 5- 2- 3- 1 of cost 0 . The only valid subset consists of both edges. In the third example, all subsets are valid except for those two in which both edges 1- 3 and 1- 4 are kept.",
    "topics": [
      "bitmasks",
      "combinatorics",
      "dfs and similar",
      "dp",
      "graphs",
      "graphs",
      "math",
      "trees"
    ],
    "id": "1299D"
  },
  {
    "title": "Anu Has a Function",
    "url": "https://codeforces.com/problemset/problem/1299/A",
    "history": "Anu has created her own function f : f( x, y) = ( x | y) - y where | denotes the bitwise OR operation. For example, f( 11, 6) = ( 11| 6) - 6 = 15 - 6 = 9 . It can be proved that for any nonnegative numbers x and y value of f( x, y) is also nonnegative. She would like to research more about this function and has created multiple problems for herself. But she isn' t able to solve all of them and needs your help. Here is one of these problems. A value of an array [ a_ 1, a_ 2, . . . , a_ n] is defined as f( f( . . . f( f( a_ 1, a_ 2) , a_ 3) , . . . a_ n- 1) , a_ n) ( see notes) . You are given an array with not necessarily distinct elements. How should you reorder its elements so that the value of the array is maximal possible?",
    "input": "The first line contains a single integer n ( 1 \u2264 n \u2264 10^ 5 ) . The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 0 \u2264 a_ i \u2264 10^ 9 ) . Elements of the array are not guaranteed to be different.",
    "output": "Output n integers, the reordering of the array with maximum value. If there are multiple answers, print any.",
    "note": "In the first testcase, value of the array [ 11, 6, 4, 0] is f( f( f( 11, 6) , 4) , 0) = f( f( 9, 4) , 0) = f( 9, 0) = 9 . [ 11, 4, 0, 6] is also a valid answer.",
    "topics": [
      "brute force",
      "greedy",
      "math"
    ],
    "id": "1299A"
  },
  {
    "title": "M-numbers",
    "url": "https://codeforces.com/problemset/problem/1297/G",
    "history": "For a given positive integer m , a positive number is called a m - number if the product of its digits is m . For example, the beginning of a series of 24 - numbers are as follows: 38 , 46 , 64 , 83 , 138 , 146 , 164 , 183 , 226 . . . You are given a positive integer m and k . Print k - th among m - numbers if all m - numbers are sorted in ascending order.",
    "input": "A single line of input contains two integers m and k ( 2 \u2264 m \u2264 10^ 9 , 1 \u2264 k \u2264 10^ 9 ) .",
    "output": "Print the desired number \u2014 k - th among all m - numbers if m - numbers are sorted in ascending order. If the answer does not exist, print - 1.",
    "note": "",
    "topics": [
      "*special",
      "dp",
      "math"
    ],
    "id": "1297G"
  },
  {
    "title": "Food Buying",
    "url": "https://codeforces.com/problemset/problem/1296/B",
    "history": "Mishka wants to buy some food in the nearby shop. Initially, he has s burles on his card. Mishka can perform the following operation any number of times ( possibly, zero) : choose some positive integer number 1 \u2264 x \u2264 s , buy food that costs exactly x burles and obtain \u230ax/ 10\u230b burles as a cashback ( in other words, Mishka spends x burles and obtains \u230ax/ 10\u230b back) . The operation \u230aa/ b\u230b means a divided by b rounded down. It is guaranteed that you can always buy some food that costs x for any possible value of x . Your task is to say the maximum number of burles Mishka can spend if he buys food optimally. For example, if Mishka has s= 19 burles then the maximum number of burles he can spend is 21 . Firstly, he can spend x= 10 burles, obtain 1 burle as a cashback. Now he has s= 10 burles, so can spend x= 10 burles, obtain 1 burle as a cashback and spend it too. You have to answer t independent test cases.",
    "input": "The first line of the input contains one integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. The next t lines describe test cases. Each test case is given on a separate line and consists of one integer s ( 1 \u2264 s \u2264 10^ 9 ) \u2014 the number of burles Mishka initially has.",
    "output": "For each test case print the answer on it \u2014 the maximum number of burles Mishka can spend if he buys food optimally.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": "1296B"
  },
  {
    "title": "Array with Odd Sum",
    "url": "https://codeforces.com/problemset/problem/1296/A",
    "history": "You are given an array a consisting of n integers. In one move, you can choose two indices 1 \u2264 i, j \u2264 n such that i j and set a_ i : = a_ j . You can perform such moves any number of times ( possibly, zero) . You can choose different indices in different operations. The operation : = is the operation of assignment ( i. e. you choose i and j and replace a_ i with a_ j ) . Your task is to say if it is possible to obtain an array with an odd ( not divisible by 2 ) sum of elements. You have to answer t independent test cases.",
    "input": "The first line of the input contains one integer t ( 1 \u2264 t \u2264 2000 ) \u2014 the number of test cases. The next 2t lines describe test cases. The first line of the test case contains one integer n ( 1 \u2264 n \u2264 2000 ) \u2014 the number of elements in a . The second line of the test case contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 2000 ) , where a_ i is the i - th element of a . It is guaranteed that the sum of n over all test cases does not exceed 2000 ( \u2211 n \u2264 2000 ) .",
    "output": "For each test case, print the answer on it \u2014 \" YES\" ( without quotes) if it is possible to obtain the array with an odd sum of elements, and \" NO\" otherwise.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": "1296A"
  },
  {
    "title": "Same GCDs",
    "url": "https://codeforces.com/problemset/problem/1295/D",
    "history": "You are given two integers a and m . Calculate the number of integers x such that 0 \u2264 x < m and ( a, m) = ( a + x, m) . Note: ( a, b) is the greatest common divisor of a and b .",
    "input": "The first line contains the single integer T ( 1 \u2264 T \u2264 50 ) \u2014 the number of test cases. Next T lines contain test cases \u2014 one per line. Each line contains two integers a and m ( 1 \u2264 a < m \u2264 10^ 10 ) .",
    "output": "Print T integers \u2014 one per test case. For each test case print the number of appropriate x - s.",
    "note": "In the first test case appropriate x - s are [ 0, 1, 3, 4, 6, 7] . In the second test case the only appropriate x is 0 .",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "1295D"
  },
  {
    "title": "Infinite Prefixes",
    "url": "https://codeforces.com/problemset/problem/1295/B",
    "history": "You are given string s of length n consisting of 0- s and 1- s. You build an infinite string t as a concatenation of an infinite number of strings s , or t = ssss . . . For example, if s = 10010, then t = 100101001010010. . . Calculate the number of prefixes of t with balance equal to x . The balance of some string q is equal to cnt_ 0, q - cnt_ 1, q , where cnt_ 0, q is the number of occurrences of 0 in q , and cnt_ 1, q is the number of occurrences of 1 in q . The number of such prefixes can be infinite; if it is so, you must say that. A prefix is a string consisting of several first letters of a given string, without any reorders. An empty prefix is also a valid prefix. For example, the string \" abcd\" has 5 prefixes: empty string, \" a\" , \" ab\" , \" abc\" and \" abcd\" .",
    "input": "The first line contains the single integer T ( 1 \u2264 T \u2264 100 ) \u2014 the number of test cases. Next 2T lines contain descriptions of test cases \u2014 two lines per test case. The first line contains two integers n and x ( 1 \u2264 n \u2264 10^ 5 , - 10^ 9 \u2264 x \u2264 10^ 9 ) \u2014 the length of string s and the desired balance, respectively. The second line contains the binary string s ( | s| = n , s_ i \u2208{ 0, 1} ) . It' s guaranteed that the total sum of n doesn' t exceed 10^ 5 .",
    "output": "Print T integers \u2014 one per test case. For each test case print the number of prefixes or - 1 if there is an infinite number of such prefixes.",
    "note": "In the first test case, there are 3 good prefixes of t : with length 28 , 30 and 32 .",
    "topics": [
      "math",
      "strings"
    ],
    "id": "1295B"
  },
  {
    "title": "Obtain a Permutation",
    "url": "https://codeforces.com/problemset/problem/1294/E",
    "history": "You are given a rectangular matrix of size n \u00d7 m consisting of integers from 1 to 2 \u00b7 10^ 5 . In one move, you can: choose any element of the matrix and change its value to any integer between 1 and n \u00b7 m , inclusive; take any column and shift it one cell up cyclically ( see the example of such cyclic shift below) . A cyclic shift is an operation such that you choose some j ( 1 \u2264 j \u2264 m ) and set a_ 1, j : = a_ 2, j, a_ 2, j : = a_ 3, j, . . . , a_ n, j : = a_ 1, j simultaneously. Example of cyclic shift of the first column You want to perform the minimum number of moves to make this matrix look like this: In other words, the goal is to obtain the matrix, where a_ 1, 1 = 1, a_ 1, 2 = 2, . . . , a_ 1, m = m, a_ 2, 1 = m + 1, a_ 2, 2 = m + 2, . . . , a_ n, m = n \u00b7 m ( i. e. a_ i, j = ( i - 1) \u00b7 m + j ) with the minimum number of moves performed.",
    "input": "The first line of the input contains two integers n and m ( 1 \u2264 n, m \u2264 2 \u00b7 10^ 5, n \u00b7 m \u2264 2 \u00b7 10^ 5 ) \u2014 the size of the matrix. The next n lines contain m integers each. The number at the line i and position j is a_ i, j ( 1 \u2264 a_ i, j\u2264 2 \u00b7 10^ 5 ) .",
    "output": "Print one integer \u2014 the minimum number of moves required to obtain the matrix, where a_ 1, 1 = 1, a_ 1, 2 = 2, . . . , a_ 1, m = m, a_ 2, 1 = m + 1, a_ 2, 2 = m + 2, . . . , a_ n, m = n \u00b7 m ( a_ i, j = ( i - 1) m + j ) .",
    "note": "In the first example, you can set a_ 1, 1 : = 7, a_ 1, 2 : = 8 and a_ 1, 3 : = 9 then shift the first, the second and the third columns cyclically, so the answer is 6 . It can be shown that you cannot achieve a better answer. In the second example, the matrix is already good so the answer is 0 . In the third example, it is enough to shift the second column cyclically twice to obtain a good matrix, so the answer is 2 .",
    "topics": [
      "greedy",
      "implementation",
      "math"
    ],
    "id": "1294E"
  },
  {
    "title": "MEX maximizing",
    "url": "https://codeforces.com/problemset/problem/1294/D",
    "history": "Recall that MEX of an array is a minimum non- negative integer that does not belong to the array. Examples: for the array [ 0, 0, 1, 0, 2] MEX equals to 3 because numbers 0, 1 and 2 are presented in the array and 3 is the minimum non- negative integer not presented in the array; for the array [ 1, 2, 3, 4] MEX equals to 0 because 0 is the minimum non- negative integer not presented in the array; for the array [ 0, 1, 4, 3] MEX equals to 2 because 2 is the minimum non- negative integer not presented in the array. You are given an empty array a= [ ] ( in other words, a zero- length array) . You are also given a positive integer x . You are also given q queries. The j - th query consists of one integer y_ j and means that you have to append one element y_ j to the array. The array length increases by 1 after a query. In one move, you can choose any index i and set a_ i : = a_ i + x or a_ i : = a_ i - x ( i. e. increase or decrease any element of the array by x ) . The only restriction is that a_ i cannot become negative. Since initially the array is empty, you can perform moves only after the first query. You have to maximize the MEX ( minimum excluded) of the array if you can perform any number of such operations ( you can even perform the operation multiple times with one element) . You have to find the answer after each of q queries ( i. e. the j - th answer corresponds to the array of length j ) . Operations are discarded before each query. I. e. the array a after the j - th query equals to [ y_ 1, y_ 2, . . . , y_ j] .",
    "input": "The first line of the input contains two integers q, x ( 1 \u2264 q, x \u2264 4 \u00b7 10^ 5 ) \u2014 the number of queries and the value of x . The next q lines describe queries. The j - th query consists of one integer y_ j ( 0 \u2264 y_ j \u2264 10^ 9 ) and means that you have to append one element y_ j to the array.",
    "output": "Print the answer to the initial problem after each query \u2014 for the query j print the maximum value of MEX after first j queries. Note that queries are dependent ( the array changes after each query) but operations are independent between queries.",
    "note": "In the first example: After the first query, the array is a= [ 0] : you don' t need to perform any operations, maximum possible MEX is 1 . After the second query, the array is a= [ 0, 1] : you don' t need to perform any operations, maximum possible MEX is 2 . After the third query, the array is a= [ 0, 1, 2] : you don' t need to perform any operations, maximum possible MEX is 3 . After the fourth query, the array is a= [ 0, 1, 2, 2] : you don' t need to perform any operations, maximum possible MEX is 3 ( you can' t make it greater with operations) . After the fifth query, the array is a= [ 0, 1, 2, 2, 0] : you can perform a[ 4] : = a[ 4] + 3 = 3 . The array changes to be a= [ 0, 1, 2, 2, 3] . Now MEX is maximum possible and equals to 4 . After the sixth query, the array is a= [ 0, 1, 2, 2, 0, 0] : you can perform a[ 4] : = a[ 4] + 3 = 0 + 3 = 3 . The array changes to be a= [ 0, 1, 2, 2, 3, 0] . Now MEX is maximum possible and equals to 4 . After the seventh query, the array is a= [ 0, 1, 2, 2, 0, 0, 10] . You can perform the following operations: a[ 3] : = a[ 3] + 3 = 2 + 3 = 5 , a[ 4] : = a[ 4] + 3 = 0 + 3 = 3 , a[ 5] : = a[ 5] + 3 = 0 + 3 = 3 , a[ 5] : = a[ 5] + 3 = 3 + 3 = 6 , a[ 6] : = a[ 6] - 3 = 10 - 3 = 7 , a[ 6] : = a[ 6] - 3 = 7 - 3 = 4 . The resulting array will be a= [ 0, 1, 2, 5, 3, 6, 4] . Now MEX is maximum possible and equals to 7 .",
    "topics": [
      "data structures",
      "greedy",
      "implementation",
      "math"
    ],
    "id": "1294D"
  },
  {
    "title": "Product of Three Numbers",
    "url": "https://codeforces.com/problemset/problem/1294/C",
    "history": "You are given one integer number n . Find three distinct integers a, b, c such that 2 \u2264 a, b, c and a \u00b7 b \u00b7 c = n or say that it is impossible to do it. If there are several answers, you can print any. You have to answer t independent test cases.",
    "input": "The first line of the input contains one integer t ( 1 \u2264 t \u2264 100 ) \u2014 the number of test cases. The next n lines describe test cases. The i - th test case is given on a new line as one integer n ( 2 \u2264 n \u2264 10^ 9 ) .",
    "output": "For each test case, print the answer on it. Print \" NO\" if it is impossible to represent n as a \u00b7 b \u00b7 c for some distinct integers a, b, c such that 2 \u2264 a, b, c . Otherwise, print \" YES\" and any possible such representation.",
    "note": "",
    "topics": [
      "greedy",
      "math",
      "number theory"
    ],
    "id": "1294C"
  },
  {
    "title": "Collecting Coins",
    "url": "https://codeforces.com/problemset/problem/1294/A",
    "history": "Polycarp has three sisters: Alice, Barbara, and Cerene. They' re collecting coins. Currently, Alice has a coins, Barbara has b coins and Cerene has c coins. Recently Polycarp has returned from the trip around the world and brought n coins. He wants to distribute all these n coins between his sisters in such a way that the number of coins Alice has is equal to the number of coins Barbara has and is equal to the number of coins Cerene has. In other words, if Polycarp gives A coins to Alice, B coins to Barbara and C coins to Cerene ( A+ B+ C= n ) , then a + A = b + B = c + C . Note that A, B or C ( the number of coins Polycarp gives to Alice, Barbara and Cerene correspondingly) can be 0. Your task is to find out if it is possible to distribute all n coins between sisters in a way described above. You have to answer t independent test cases.",
    "input": "The first line of the input contains one integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. The next t lines describe test cases. Each test case is given on a new line and consists of four space- separated integers a, b, c and n ( 1 \u2264 a, b, c, n \u2264 10^ 8 ) \u2014 the number of coins Alice has, the number of coins Barbara has, the number of coins Cerene has and the number of coins Polycarp has.",
    "output": "For each test case, print \" YES\" if Polycarp can distribute all n coins between his sisters and \" NO\" otherwise.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": "1294A"
  },
  {
    "title": "JOE is on TV!",
    "url": "https://codeforces.com/problemset/problem/1293/B",
    "history": "3R2 - Standby for ActionOur dear Cafe' s owner, JOE Miller, will soon take part in a new game TV- show \" 1 vs. n \" ! The game goes in rounds, where in each round the host asks JOE and his opponents a common question. All participants failing to answer are eliminated. The show ends when only JOE remains ( we assume that JOE never answers a question wrong! ) . For each question JOE answers, if there are s ( s > 0 ) opponents remaining and t ( 0 \u2264 t \u2264 s ) of them make a mistake on it, JOE receives t/ s dollars, and consequently there will be s - t opponents left for the next question. JOE wonders what is the maximum possible reward he can receive in the best possible scenario. Yet he has little time before show starts, so can you help him answering it instead?",
    "input": "The first and single line contains a single integer n ( 1 \u2264 n \u2264 10^ 5 ) , denoting the number of JOE' s opponents in the show.",
    "output": "Print a number denoting the maximum prize ( in dollars) JOE could have. Your answer will be considered correct if it' s absolute or relative error won' t exceed 10^ - 4 . In other words, if your answer is a and the jury answer is b , then it must hold that | a - b| / max( 1, b) \u2264 10^ - 4 .",
    "note": "In the second example, the best scenario would be: one contestant fails at the first question, the other fails at the next one. The total reward will be 1/ 2 + 1/ 1 = 1. 5 dollars.",
    "topics": [
      "combinatorics",
      "greedy",
      "math"
    ],
    "id": "1293B"
  },
  {
    "title": "Rin and The Unknown Flower",
    "url": "https://codeforces.com/problemset/problem/1292/E",
    "history": "MisoilePunch\u266a - \u5f69This is an interactive problem! On a normal day at the hidden office in A. R. C. Markland- N, Rin received an artifact, given to her by the exploration captain Sagar. After much analysis, she now realizes that this artifact contains data about a strange flower, which has existed way before the New Age. However, the information about its chemical structure has been encrypted heavily. The chemical structure of this flower can be represented as a string p . From the unencrypted papers included, Rin already knows the length n of that string, and she can also conclude that the string contains at most three distinct letters: \" C\" ( as in Carbon) , \" H\" ( as in Hydrogen) , and \" O\" ( as in Oxygen) . At each moment, Rin can input a string s of an arbitrary length into the artifact' s terminal, and it will return every starting position of s as a substring of p . However, the artifact has limited energy and cannot be recharged in any way, since the technology is way too ancient and is incompatible with any current A. R. C. ' s devices. To be specific: The artifact only contains 7/ 5 units of energy. For each time Rin inputs a string s of length t , the artifact consumes 1/ t^ 2 units of energy. If the amount of energy reaches below zero, the task will be considered failed immediately, as the artifact will go black forever. Since the artifact is so precious yet fragile, Rin is very nervous to attempt to crack the final data. Can you give her a helping hand? InteractionThe interaction starts with a single integer t ( 1 \u2264 t \u2264 500 ) , the number of test cases. The interaction for each testcase is described below: First, read an integer n ( 4 \u2264 n \u2264 50 ) , the length of the string p . Then you can make queries of type \" ? s\" ( 1 \u2264 | s| \u2264 n ) to find the occurrences of s as a substring of p . After the query, you need to read its result as a series of integers in a line: The first integer k denotes the number of occurrences of s as a substring of p ( - 1 \u2264 k \u2264 n ) . If k = - 1 , it means you have exceeded the energy limit or printed an invalid query, and you need to terminate immediately, to guarantee a \" Wrong answer\" verdict, otherwise you might get an arbitrary verdict because your solution will continue to read from a closed stream. The following k integers a_ 1, a_ 2, . . . , a_ k ( 1 \u2264 a_ 1 < a_ 2 < . . . < a_ k \u2264 n ) denote the starting positions of the substrings that match the string s . When you find out the string p , print \" ! p \" to finish a test case. This query doesn' t consume any energy. The interactor will return an integer 1 or 0 . If the interactor returns 1 , you can proceed to the next test case, or terminate the program if it was the last testcase. If the interactor returns 0 , it means that your guess is incorrect, and you should to terminate to guarantee a \" Wrong answer\" verdict. Note that in every test case the string p is fixed beforehand and will not change during the queries, i. e. the interactor is not adaptive. After printing any query do not forget to print end of line and flush the output. Otherwise, you might get Idleness limit exceeded. To do this, use: fflush( stdout) or cout. flush( ) in C+ + ; System. out. flush( ) in Java; flush( output) in Pascal; stdout. flush( ) in Python; see the documentation for other languages. HacksFor hack, use the following format. Note that you can only hack with one test case: The first line should contain a single integer t ( t = 1 ) . The second line should contain an integer n ( 4 \u2264 n \u2264 50 ) \u2014 the string' s size. The third line should contain a string of size n , consisting of characters \" C\" , \" H\" and \" O\" only. This is the string contestants will have to find out.",
    "input": "",
    "output": "",
    "note": "Note that the example interaction contains extra empty lines so that it' s easier to read. The real interaction doesn' t contain any empty lines and you shouldn' t print any extra empty lines as well.",
    "topics": [
      "constructive algorithms",
      "greedy",
      "interactive",
      "math"
    ],
    "id": "1292E"
  },
  {
    "title": "Chaotic V.",
    "url": "https://codeforces.com/problemset/problem/1292/D",
    "history": "\u00c6sir - CHAOS \u00c6sir - V. \" Everything has been planned out. No more hidden concerns. The condition of Cytus is also perfect. The time right now. . . . . . 00: 01: 12. . . . . . It' s time. \" The emotion samples are now sufficient. After almost 3 years, it' s time for Ivy to awake her bonded sister, Vanessa. The system inside A. R. C. ' s Library core can be considered as an undirected graph with infinite number of processing nodes, numbered with all positive integers ( 1, 2, 3, . . . ) . The node with a number x ( x > 1 ) , is directly connected with a node with number x/ f( x) , with f( x) being the lowest prime divisor of x . Vanessa' s mind is divided into n fragments. Due to more than 500 years of coma, the fragments have been scattered: the i - th fragment is now located at the node with a number k_ i! ( a factorial of k_ i ) . To maximize the chance of successful awakening, Ivy decides to place the samples in a node P , so that the total length of paths from each fragment to P is smallest possible. If there are multiple fragments located at the same node, the path from that node to P needs to be counted multiple times. In the world of zeros and ones, such a requirement is very simple for Ivy. Not longer than a second later, she has already figured out such a node. But for a mere human like you, is this still possible? For simplicity, please answer the minimal sum of paths' lengths from every fragment to the emotion samples' assembly node P .",
    "input": "The first line contains an integer n ( 1 \u2264 n \u2264 10^ 6 ) \u2014 number of fragments of Vanessa' s mind. The second line contains n integers: k_ 1, k_ 2, . . . , k_ n ( 0 \u2264 k_ i \u2264 5000 ) , denoting the nodes where fragments of Vanessa' s mind are located: the i - th fragment is at the node with a number k_ i! .",
    "output": "Print a single integer, denoting the minimal sum of path from every fragment to the node with the emotion samples ( a. k. a. node P ) . As a reminder, if there are multiple fragments at the same node, the distance from that node to P needs to be counted multiple times as well.",
    "note": "Considering the first 24 nodes of the system, the node network will look as follows ( the nodes 1! , 2! , 3! , 4! are drawn bold) : For the first example, Ivy will place the emotion samples at the node 1 . From here: The distance from Vanessa' s first fragment to the node 1 is 1 . The distance from Vanessa' s second fragment to the node 1 is 0 . The distance from Vanessa' s third fragment to the node 1 is 4 . The total length is 5 . For the second example, the assembly node will be 6 . From here: The distance from Vanessa' s first fragment to the node 6 is 0 . The distance from Vanessa' s second fragment to the node 6 is 2 . The distance from Vanessa' s third fragment to the node 6 is 2 . The distance from Vanessa' s fourth fragment to the node 6 is again 2 . The total path length is 6 .",
    "topics": [
      "dp",
      "graphs",
      "greedy",
      "math",
      "number theory",
      "trees"
    ],
    "id": "1292D"
  },
  {
    "title": "Even But Not Even",
    "url": "https://codeforces.com/problemset/problem/1291/A",
    "history": "Let' s define a number ebne ( even but not even) if and only if its sum of digits is divisible by 2 but the number itself is not divisible by 2 . For example, 13 , 1227 , 185217 are ebne numbers, while 12 , 2 , 177013 , 265918 are not. If you' re still unsure what ebne numbers are, you can look at the sample notes for more clarification. You are given a non- negative integer s , consisting of n digits. You can delete some digits ( they are not necessary consecutive/ successive) to make the given number ebne. You cannot change the order of the digits, that is, after deleting the digits the remaining digits collapse. The resulting number shouldn' t contain leading zeros. You can delete any number of digits between 0 ( do not delete any digits at all) and n- 1 . For example, if you are given s= 222373204424185217171912 then one of possible ways to make it ebne is: 222373204424185217171912 \u2192 2237344218521717191. The sum of digits of 2237344218521717191 is equal to 70 and is divisible by 2 , but number itself is not divisible by 2 : it means that the resulting number is ebne. Find any resulting number that is ebne. If it' s impossible to create an ebne number from the given number report about it.",
    "input": "The input consists of multiple test cases. The first line contains a single integer t ( 1 \u2264 t \u2264 1000 ) \u2014 the number of test cases. The description of the test cases follows. The first line of each test case contains a single integer n ( 1 \u2264 n \u2264 3000 ) \u2014 the number of digits in the original number. The second line of each test case contains a non- negative integer number s , consisting of n digits. It is guaranteed that s does not contain leading zeros and the sum of n over all test cases does not exceed 3000 .",
    "output": "For each test case given in the input print the answer in the following format: If it is impossible to create an ebne number, print \" - 1\" ( without quotes) ; Otherwise, print the resulting number after deleting some, possibly zero, but not all digits. This number should be ebne. If there are multiple answers, you can print any of them. Note that answers with leading zeros or empty strings are not accepted. It' s not necessary to minimize or maximize the number of deleted digits.",
    "note": "In the first test case of the example, 1227 is already an ebne number ( as 1 + 2 + 2 + 7 = 12 , 12 is divisible by 2 , while in the same time, 1227 is not divisible by 2 ) so we don' t need to delete any digits. Answers such as 127 and 17 will also be accepted. In the second test case of the example, it is clearly impossible to create an ebne number from the given number. In the third test case of the example, there are many ebne numbers we can obtain by deleting, for example, 1 digit such as 17703 , 77013 or 17013 . Answers such as 1701 or 770 will not be accepted as they are not ebne numbers. Answer 013 will not be accepted as it contains leading zeroes. Explanation: 1 + 7 + 7 + 0 + 3 = 18 . As 18 is divisible by 2 while 17703 is not divisible by 2 , we can see that 17703 is an ebne number. Same with 77013 and 17013 ; 1 + 7 + 0 + 1 = 9 . Because 9 is not divisible by 2 , 1701 is not an ebne number; 7 + 7 + 0 = 14 . This time, 14 is divisible by 2 but 770 is also divisible by 2 , therefore, 770 is not an ebne number. In the last test case of the example, one of many other possible answers is given. Another possible answer is: 222373204424185217171912 \u2192 22237320442418521717191 ( delete the last digit) .",
    "topics": [
      "greedy",
      "math",
      "strings"
    ],
    "id": "1291A"
  },
  {
    "title": "Yet Another Meme Problem",
    "url": "https://codeforces.com/problemset/problem/1288/B",
    "history": "You are given two integers A and B , calculate the number of pairs ( a, b) such that 1 \u2264 a \u2264 A , 1 \u2264 b \u2264 B , and the equation a \u00b7 b + a + b = conc( a, b) is true; conc( a, b) is the concatenation of a and b ( for example, conc( 12, 23) = 1223 , conc( 100, 11) = 10011 ) . a and b should not contain leading zeroes.",
    "input": "The first line contains t ( 1 \u2264 t \u2264 100 ) \u2014 the number of test cases. Each test case contains two integers A and B ( 1 \u2264 A, B \u2264 10^ 9) .",
    "output": "Print one integer \u2014 the number of pairs ( a, b) such that 1 \u2264 a \u2264 A , 1 \u2264 b \u2264 B , and the equation a \u00b7 b + a + b = conc( a, b) is true.",
    "note": "There is only one suitable pair in the first test case: a = 1 , b = 9 ( 1 + 9 + 1 \u00b7 9 = 19 ) .",
    "topics": [
      "math"
    ],
    "id": "1288B"
  },
  {
    "title": "Deadline",
    "url": "https://codeforces.com/problemset/problem/1288/A",
    "history": "Adilbek was assigned to a special project. For Adilbek it means that he has n days to run a special program and provide its results. But there is a problem: the program needs to run for d days to calculate the results. Fortunately, Adilbek can optimize the program. If he spends x ( x is a non- negative integer) days optimizing the program, he will make the program run in \u2308d/ x + 1\u2309 days ( \u2308 a \u2309 is the ceiling function: \u2308 2. 4 \u2309 = 3 , \u2308 2 \u2309 = 2 ) . The program cannot be run and optimized simultaneously, so the total number of days he will spend is equal to x + \u2308d/ x + 1\u2309 . Will Adilbek be able to provide the generated results in no more than n days?",
    "input": "The first line contains a single integer T ( 1 \u2264 T \u2264 50 ) \u2014 the number of test cases. The next T lines contain test cases \u2013 one per line. Each line contains two integers n and d ( 1 \u2264 n \u2264 10^ 9 , 1 \u2264 d \u2264 10^ 9 ) \u2014 the number of days before the deadline and the number of days the program runs.",
    "output": "Print T answers \u2014 one per test case. For each test case print YES ( case insensitive) if Adilbek can fit in n days or NO ( case insensitive) otherwise.",
    "note": "In the first test case, Adilbek decides not to optimize the program at all, since d \u2264 n . In the second test case, Adilbek can spend 1 day optimizing the program and it will run \u23085/ 2\u2309 = 3 days. In total, he will spend 4 days and will fit in the limit. In the third test case, it' s impossible to fit in the limit. For example, if Adilbek will optimize the program 2 days, it' ll still work \u230811/ 2+ 1\u2309 = 4 days.",
    "topics": [
      "binary search",
      "brute force",
      "math",
      "ternary search"
    ],
    "id": "1288A"
  },
  {
    "title": "Harry The Potter",
    "url": "https://codeforces.com/problemset/problem/1286/F",
    "history": "To defeat Lord Voldemort, Harry needs to destroy all horcruxes first. The last horcrux is an array a of n integers, which also needs to be destroyed. The array is considered destroyed if all its elements are zeroes. To destroy the array, Harry can perform two types of operations: choose an index i ( 1 \u2264 i \u2264 n ) , an integer x , and subtract x from a_ i . choose two indices i and j ( 1 \u2264 i, j \u2264 n; i j ) , an integer x , and subtract x from a_ i and x + 1 from a_ j . Note that x does not have to be positive. Harry is in a hurry, please help him to find the minimum number of operations required to destroy the array and exterminate Lord Voldemort.",
    "input": "The first line contains a single integer n \u2014 the size of the array a ( 1 \u2264 n \u2264 20 ) . The following line contains n integers a_ 1, a_ 2, . . . , a_ n \u2014 array elements ( - 10^ 15\u2264 a_ i \u2264 10^ 15 ) .",
    "output": "Output a single integer \u2014 the minimum number of operations required to destroy the array a .",
    "note": "In the first example one can just apply the operation of the first kind three times. In the second example, one can apply the operation of the second kind two times: first, choose i = 2, j = 1, x = 4 , it transforms the array into ( 0, - 1, - 2) , and then choose i = 3, j = 2, x = - 2 to destroy the array. In the third example, there is nothing to be done, since the array is already destroyed.",
    "topics": [
      "brute force",
      "constructive algorithms",
      "dp",
      "fft",
      "implementation",
      "math"
    ],
    "id": "1286F"
  },
  {
    "title": "LCC",
    "url": "https://codeforces.com/problemset/problem/1286/D",
    "history": "An infinitely long Line Chillland Collider ( LCC) was built in Chillland. There are n pipes with coordinates x_ i that are connected to LCC. When the experiment starts at time 0, i - th proton flies from the i - th pipe with speed v_ i . It flies to the right with probability p_ i and flies to the left with probability ( 1 - p_ i) . The duration of the experiment is determined as the time of the first collision of any two protons. In case there is no collision, the duration of the experiment is considered to be zero. Find the expected value of the duration of the experiment. Illustration for the first example",
    "input": "The first line of input contains one integer n \u2014 the number of pipes ( 1 \u2264 n \u2264 10^ 5 ) . Each of the following n lines contains three integers x_ i , v_ i , p_ i \u2014 the coordinate of the i - th pipe, the speed of the i - th proton and the probability that the i - th proton flies to the right in percentage points ( - 10^ 9 \u2264 x_ i \u2264 10^ 9, 1 \u2264 v \u2264 10^ 6, 0 \u2264 p_ i \u2264 100 ) . It is guaranteed that all x_ i are distinct and sorted in increasing order.",
    "output": "It' s possible to prove that the answer can always be represented as a fraction P/ Q , where P is an integer and Q is a natural number not divisible by 998 244 353 . In this case, print P \u00b7 Q^ - 1 modulo 998 244 353 .",
    "note": "",
    "topics": [
      "data structures",
      "math",
      "matrices",
      "probabilities"
    ],
    "id": "1286D"
  },
  {
    "title": "Madhouse (Hard version)",
    "url": "https://codeforces.com/problemset/problem/1286/C2",
    "history": "This problem is different with easy version only by constraints on total answers lengthIt is an interactive problemVenya joined a tour to the madhouse, in which orderlies play with patients the following game. Orderlies pick a string s of length n , consisting only of lowercase English letters. The player can ask two types of queries: ? l r \u2013 ask to list all substrings of s[ l. . r] . Substrings will be returned in random order, and in every substring, all characters will be randomly shuffled. ! s \u2013 guess the string picked by the orderlies. This query can be asked exactly once, after that the game will finish. If the string is guessed correctly, the player wins, otherwise he loses. The player can ask no more than 3 queries of the first type. To make it easier for the orderlies, there is an additional limitation: the total number of returned substrings in all queries of the first type must not exceed \u2308 0. 777( n+ 1) ^ 2 \u2309 ( \u2308 x \u2309 is x rounded up) . Venya asked you to write a program, which will guess the string by interacting with the orderlies' program and acting by the game' s rules. Your program should immediately terminate after guessing the string using a query of the second type. In case your program guessed the string incorrectly, or it violated the game rules, it will receive verdict Wrong answer. Note that in every test case the string is fixed beforehand and will not change during the game, which means that the interactor is not adaptive. InteractionYou start the interaction by reading the number n . To ask a query about a substring from l to r inclusively ( 1 \u2264 l \u2264 r \u2264 n ) , you should output? l ron a separate line. After this, all substrings of s[ l. . r] will be returned in random order, each substring exactly once. In every returned substring all characters will be randomly shuffled. In the case, if you ask an incorrect query, ask more than 3 queries of the first type or there will be more than \u2308 0. 777( n+ 1) ^ 2 \u2309 substrings returned in total, you will receive verdict Wrong answer. To guess the string s , you should output! son a separate line. After printing each query, do not forget to flush the output. Otherwise, you will get Idleness limit exceeded. To flush the output, you can use: fflush( stdout) or cout. flush( ) in C+ + ; System. out. flush( ) in Java; flush( output) in Pascal; stdout. flush( ) in Python; see documentation for other languages. If you received - ( dash) as an answer to any query, you need to terminate your program with exit code 0 ( for example, by calling exit( 0) ) . This means that there was an error in the interaction protocol. If you don' t terminate with exit code 0, you can receive any unsuccessful verdict. Hack formatTo hack a solution, use the following format: The first line should contain one integer n ( 1 \u2264 n \u2264 100 ) \u2014 the length of the string, and the following line should contain the string s .",
    "input": "First line contains number n ( 1 \u2264 n \u2264 100 ) \u2014 the length of the picked string.",
    "output": "",
    "note": "",
    "topics": [
      "brute force",
      "constructive algorithms",
      "hashing",
      "interactive",
      "math"
    ],
    "id": "1286C2"
  },
  {
    "title": "Madhouse (Easy version)",
    "url": "https://codeforces.com/problemset/problem/1286/C1",
    "history": "This problem is different with hard version only by constraints on total answers lengthIt is an interactive problemVenya joined a tour to the madhouse, in which orderlies play with patients the following game. Orderlies pick a string s of length n , consisting only of lowercase English letters. The player can ask two types of queries: ? l r \u2013 ask to list all substrings of s[ l. . r] . Substrings will be returned in random order, and in every substring, all characters will be randomly shuffled. ! s \u2013 guess the string picked by the orderlies. This query can be asked exactly once, after that the game will finish. If the string is guessed correctly, the player wins, otherwise he loses. The player can ask no more than 3 queries of the first type. To make it easier for the orderlies, there is an additional limitation: the total number of returned substrings in all queries of the first type must not exceed ( n+ 1) ^ 2 . Venya asked you to write a program, which will guess the string by interacting with the orderlies' program and acting by the game' s rules. Your program should immediately terminate after guessing the string using a query of the second type. In case your program guessed the string incorrectly, or it violated the game rules, it will receive verdict Wrong answer. Note that in every test case the string is fixed beforehand and will not change during the game, which means that the interactor is not adaptive. InteractionYou start the interaction by reading the number n . To ask a query about a substring from l to r inclusively ( 1 \u2264 l \u2264 r \u2264 n ) , you should output? l ron a separate line. After this, all substrings of s[ l. . r] will be returned in random order, each substring exactly once. In every returned substring all characters will be randomly shuffled. In the case, if you ask an incorrect query, ask more than 3 queries of the first type or there will be more than ( n+ 1) ^ 2 substrings returned in total, you will receive verdict Wrong answer. To guess the string s , you should output! son a separate line. After printing each query, do not forget to flush the output. Otherwise, you will get Idleness limit exceeded. To flush the output, you can use: fflush( stdout) or cout. flush( ) in C+ + ; System. out. flush( ) in Java; flush( output) in Pascal; stdout. flush( ) in Python; see documentation for other languages. If you received - ( dash) as an answer to any query, you need to terminate your program with exit code 0 ( for example, by calling exit( 0) ) . This means that there was an error in the interaction protocol. If you don' t terminate with exit code 0, you can receive any unsuccessful verdict. Hack formatTo hack a solution, use the following format: The first line should contain one integer n ( 1 \u2264 n \u2264 100 ) \u2014 the length of the string, and the following line should contain the string s .",
    "input": "First line contains number n ( 1 \u2264 n \u2264 100 ) \u2014 the length of the picked string.",
    "output": "",
    "note": "",
    "topics": [
      "brute force",
      "constructive algorithms",
      "interactive",
      "math"
    ],
    "id": "1286C1"
  },
  {
    "title": "Fadi and LCM",
    "url": "https://codeforces.com/problemset/problem/1285/C",
    "history": "Today, Osama gave Fadi an integer X , and Fadi was wondering about the minimum possible value of max( a, b) such that LCM( a, b) equals X . Both a and b should be positive integers. LCM( a, b) is the smallest positive integer that is divisible by both a and b . For example, LCM( 6, 8) = 24 , LCM( 4, 12) = 12 , LCM( 2, 3) = 6 . Of course, Fadi immediately knew the answer. Can you be just like Fadi and find any such pair?",
    "input": "The first and only line contains an integer X ( 1 \u2264 X \u2264 10^ 12 ) .",
    "output": "Print two positive integers, a and b , such that the value of max( a, b) is minimum possible and LCM( a, b) equals X . If there are several possible such pairs, you can print any.",
    "note": "",
    "topics": [
      "brute force",
      "math",
      "number theory"
    ],
    "id": "1285C"
  },
  {
    "title": "Mezo Playing Zoma",
    "url": "https://codeforces.com/problemset/problem/1285/A",
    "history": "Today, Mezo is playing a game. Zoma, a character in that game, is initially at position x = 0 . Mezo starts sending n commands to Zoma. There are two possible commands: ' L' ( Left) sets the position x: = x - 1 ; ' R' ( Right) sets the position x: = x + 1 . Unfortunately, Mezo' s controller malfunctions sometimes. Some commands are sent successfully and some are ignored. If the command is ignored then the position x doesn' t change and Mezo simply proceeds to the next command. For example, if Mezo sends commands \" LRLR\" , then here are some possible outcomes ( underlined commands are sent successfully) : \" LRLR\" \u2014 Zoma moves to the left, to the right, to the left again and to the right for the final time, ending up at position 0 ; \" LRLR\" \u2014 Zoma recieves no commands, doesn' t move at all and ends up at position 0 as well; \" LRLR\" \u2014 Zoma moves to the left, then to the left again and ends up in position - 2 . Mezo doesn' t know which commands will be sent successfully beforehand. Thus, he wants to know how many different positions may Zoma end up at.",
    "input": "The first line contains n ( 1 \u2264 n \u2264 10^ 5) \u2014 the number of commands Mezo sends. The second line contains a string s of n commands, each either ' L' ( Left) or ' R' ( Right) .",
    "output": "Print one integer \u2014 the number of different positions Zoma may end up at.",
    "note": "In the example, Zoma may end up anywhere between - 2 and 2 .",
    "topics": [
      "math"
    ],
    "id": "1285A"
  },
  {
    "title": "New Year and Social Network",
    "url": "https://codeforces.com/problemset/problem/1284/F",
    "history": "Donghyun' s new social network service ( SNS) contains n users numbered 1, 2, . . . , n . Internally, their network is a tree graph, so there are n- 1 direct connections between each user. Each user can reach every other users by using some sequence of direct connections. From now on, we will denote this primary network as T_ 1 . To prevent a possible server breakdown, Donghyun created a backup network T_ 2 , which also connects the same n users via a tree graph. If a system breaks down, exactly one edge e \u2208 T_ 1 becomes unusable. In this case, Donghyun will protect the edge e by picking another edge f \u2208 T_ 2 , and add it to the existing network. This new edge should make the network be connected again. Donghyun wants to assign a replacement edge f \u2208 T_ 2 for as many edges e \u2208 T_ 1 as possible. However, since the backup network T_ 2 is fragile, f \u2208 T_ 2 can be assigned as the replacement edge for at most one edge in T_ 1 . With this restriction, Donghyun wants to protect as many edges in T_ 1 as possible. Formally, let E( T) be an edge set of the tree T . We consider a bipartite graph with two parts E( T_ 1) and E( T_ 2) . For e \u2208 E( T_ 1) , f \u2208 E( T_ 2) , there is an edge connecting { e, f} if and only if graph T_ 1 - { e} + { f} is a tree. You should find a maximum matching in this bipartite graph.",
    "input": "The first line contains an integer n ( 2 \u2264 n \u2264 250 000 ) , the number of users. In the next n- 1 lines, two integers a_ i , b_ i ( 1 \u2264 a_ i, b_ i \u2264 n ) are given. Those two numbers denote the indices of the vertices connected by the corresponding edge in T_ 1 . In the next n- 1 lines, two integers c_ i , d_ i ( 1 \u2264 c_ i, d_ i \u2264 n ) are given. Those two numbers denote the indices of the vertices connected by the corresponding edge in T_ 2 . It is guaranteed that both edge sets form a tree of size n .",
    "output": "In the first line, print the number m ( 0 \u2264 m < n ) , the maximum number of edges that can be protected. In the next m lines, print four integers a_ i, b_ i, c_ i, d_ i . Those four numbers denote that the edge ( a_ i, b_ i) in T_ 1 is will be replaced with an edge ( c_ i, d_ i) in T_ 2 . All printed edges should belong to their respective network, and they should link to distinct edges in their respective network. If one removes an edge ( a_ i, b_ i) from T_ 1 and adds edge ( c_ i, d_ i) from T_ 2 , the network should remain connected. The order of printing the edges or the order of vertices in each edge does not matter. If there are several solutions, you can print any.",
    "note": "",
    "topics": [
      "data structures",
      "graph matchings",
      "graphs",
      "math",
      "trees"
    ],
    "id": "1284F"
  },
  {
    "title": "New Year and Castle Construction",
    "url": "https://codeforces.com/problemset/problem/1284/E",
    "history": "Kiwon' s favorite video game is now holding a new year event to motivate the users! The game is about building and defending a castle, which led Kiwon to think about the following puzzle. In a 2- dimension plane, you have a set s = { ( x_ 1, y_ 1) , ( x_ 2, y_ 2) , . . . , ( x_ n, y_ n) } consisting of n distinct points. In the set s , no three distinct points lie on a single line. For a point p \u2208 s , we can protect this point by building a castle. A castle is a simple quadrilateral ( polygon with 4 vertices) that strictly encloses the point p ( i. e. the point p is strictly inside a quadrilateral) . Kiwon is interested in the number of 4 - point subsets of s that can be used to build a castle protecting p . Note that, if a single subset can be connected in more than one way to enclose a point, it is counted only once. Let f( p) be the number of 4 - point subsets that can enclose the point p . Please compute the sum of f( p) for all points p \u2208 s .",
    "input": "The first line contains a single integer n ( 5 \u2264 n \u2264 2 500 ) . In the next n lines, two integers x_ i and y_ i ( - 10^ 9 \u2264 x_ i, y_ i \u2264 10^ 9 ) denoting the position of points are given. It is guaranteed that all points are distinct, and there are no three collinear points.",
    "output": "Print the sum of f( p) for all points p \u2208 s .",
    "note": "",
    "topics": [
      "combinatorics",
      "geometry",
      "math",
      "sortings"
    ],
    "id": "1284E"
  },
  {
    "title": "New Year and Permutation",
    "url": "https://codeforces.com/problemset/problem/1284/C",
    "history": "Recall that the permutation is an array consisting of n distinct integers from 1 to n in arbitrary order. For example, [ 2, 3, 1, 5, 4] is a permutation, but [ 1, 2, 2] is not a permutation ( 2 appears twice in the array) and [ 1, 3, 4] is also not a permutation ( n= 3 but there is 4 in the array) . A sequence a is a subsegment of a sequence b if a can be obtained from b by deletion of several ( possibly, zero or all) elements from the beginning and several ( possibly, zero or all) elements from the end. We will denote the subsegments as [ l, r] , where l, r are two integers with 1 \u2264 l \u2264 r \u2264 n . This indicates the subsegment where l- 1 elements from the beginning and n- r elements from the end are deleted from the sequence. For a permutation p_ 1, p_ 2, . . . , p_ n , we define a framed segment as a subsegment [ l, r] where max{ p_ l, p_ l+ 1, . . . , p_ r} - min{ p_ l, p_ l+ 1, . . . , p_ r} = r - l . For example, for the permutation ( 6, 7, 1, 8, 5, 3, 2, 4) some of its framed segments are: [ 1, 2] , [ 5, 8] , [ 6, 7] , [ 3, 3] , [ 8, 8] . In particular, a subsegment [ i, i] is always a framed segments for any i between 1 and n , inclusive. We define the happiness of a permutation p as the number of pairs ( l, r) such that 1 \u2264 l \u2264 r \u2264 n , and [ l, r] is a framed segment. For example, the permutation [ 3, 1, 2] has happiness 5 : all segments except [ 1, 2] are framed segments. Given integers n and m , Jongwon wants to compute the sum of happiness for all permutations of length n , modulo the prime number m . Note that there exist n! ( factorial of n ) different permutations of length n .",
    "input": "The only line contains two integers n and m ( 1 \u2264 n \u2264 250 000 , 10^ 8 \u2264 m \u2264 10^ 9 , m is prime) .",
    "output": "Print r ( 0 \u2264 r < m ) , the sum of happiness for all permutations of length n , modulo a prime number m .",
    "note": "For sample input n= 3 , let' s consider all permutations of length 3 : [ 1, 2, 3] , all subsegments are framed segment. Happiness is 6 . [ 1, 3, 2] , all subsegments except [ 1, 2] are framed segment. Happiness is 5 . [ 2, 1, 3] , all subsegments except [ 2, 3] are framed segment. Happiness is 5 . [ 2, 3, 1] , all subsegments except [ 2, 3] are framed segment. Happiness is 5 . [ 3, 1, 2] , all subsegments except [ 1, 2] are framed segment. Happiness is 5 . [ 3, 2, 1] , all subsegments are framed segment. Happiness is 6 . Thus, the sum of happiness is 6+ 5+ 5+ 5+ 5+ 6 = 32 .",
    "topics": [
      "combinatorics",
      "math"
    ],
    "id": "1284C"
  },
  {
    "title": "Friends and Gifts",
    "url": "https://codeforces.com/problemset/problem/1283/C",
    "history": "There are n friends who want to give gifts for the New Year to each other. Each friend should give exactly one gift and receive exactly one gift. The friend cannot give the gift to himself. For each friend the value f_ i is known: it is either f_ i = 0 if the i - th friend doesn' t know whom he wants to give the gift to or 1 \u2264 f_ i \u2264 n if the i - th friend wants to give the gift to the friend f_ i . You want to fill in the unknown values ( f_ i = 0 ) in such a way that each friend gives exactly one gift and receives exactly one gift and there is no friend who gives the gift to himself. It is guaranteed that the initial information isn' t contradictory. If there are several answers, you can print any.",
    "input": "The first line of the input contains one integer n ( 2 \u2264 n \u2264 2 \u00b7 10^ 5 ) \u2014 the number of friends. The second line of the input contains n integers f_ 1, f_ 2, . . . , f_ n ( 0 \u2264 f_ i \u2264 n , f_ i i , all f_ i 0 are distinct) , where f_ i is the either f_ i = 0 if the i - th friend doesn' t know whom he wants to give the gift to or 1 \u2264 f_ i \u2264 n if the i - th friend wants to give the gift to the friend f_ i . It is also guaranteed that there is at least two values f_ i = 0 .",
    "output": "Print n integers nf_ 1, nf_ 2, . . . , nf_ n , where nf_ i should be equal to f_ i if f_ i 0 or the number of friend whom the i - th friend wants to give the gift to. All values nf_ i should be distinct, nf_ i cannot be equal to i . Each friend gives exactly one gift and receives exactly one gift and there is no friend who gives the gift to himself. If there are several answers, you can print any.",
    "note": "",
    "topics": [
      "constructive algorithms",
      "data structures",
      "math"
    ],
    "id": "1283C"
  },
  {
    "title": "Candies Division",
    "url": "https://codeforces.com/problemset/problem/1283/B",
    "history": "Santa has n candies and he wants to gift them to k kids. He wants to divide as many candies as possible between all k kids. Santa can' t divide one candy into parts but he is allowed to not use some candies at all. Suppose the kid who recieves the minimum number of candies has a candies and the kid who recieves the maximum number of candies has b candies. Then Santa will be satisfied, if the both conditions are met at the same time: b - a \u2264 1 ( it means b = a or b = a + 1 ) ; the number of kids who has a+ 1 candies ( note that a+ 1 not necessarily equals b ) does not exceed \u230ak/ 2\u230b ( less than or equal to \u230ak/ 2\u230b ) . \u230ak/ 2\u230b is k divided by 2 and rounded down to the nearest integer. For example, if k= 5 then \u230ak/ 2\u230b= \u230a5/ 2\u230b= 2 . Your task is to find the maximum number of candies Santa can give to kids so that he will be satisfied. You have to answer t independent test cases.",
    "input": "The first line of the input contains one integer t ( 1 \u2264 t \u2264 5 \u00b7 10^ 4 ) \u2014 the number of test cases. The next t lines describe test cases. The i - th test case contains two integers n and k ( 1 \u2264 n, k \u2264 10^ 9 ) \u2014 the number of candies and the number of kids.",
    "output": "For each test case print the answer on it \u2014 the maximum number of candies Santa can give to kids so that he will be satisfied.",
    "note": "In the first test case, Santa can give 3 and 2 candies to kids. There a= 2, b= 3, a+ 1= 3 . In the second test case, Santa can give 5, 5, 4 and 4 candies. There a= 4, b= 5, a+ 1= 5 . The answer cannot be greater because then the number of kids with 5 candies will be 3 . In the third test case, Santa can distribute candies in the following way: [ 1, 2, 2, 1, 1, 2, 1] . There a= 1, b= 2, a+ 1= 2 . He cannot distribute two remaining candies in a way to be satisfied. In the fourth test case, Santa can distribute candies in the following way: [ 3, 3] . There a= 3, b= 3, a+ 1= 4 . Santa distributed all 6 candies.",
    "topics": [
      "math"
    ],
    "id": "1283B"
  },
  {
    "title": "Minutes Before the New Year",
    "url": "https://codeforces.com/problemset/problem/1283/A",
    "history": "New Year is coming and you are excited to know how many minutes remain before the New Year. You know that currently the clock shows h hours and m minutes, where 0 \u2264 hh < 24 and 0 \u2264 mm < 60 . We use 24- hour time format! Your task is to find the number of minutes before the New Year. You know that New Year comes when the clock shows 0 hours and 0 minutes. You have to answer t independent test cases.",
    "input": "The first line of the input contains one integer t ( 1 \u2264 t \u2264 1439 ) \u2014 the number of test cases. The following t lines describe test cases. The i - th line contains the time as two integers h and m ( 0 \u2264 h < 24 , 0 \u2264 m < 60 ) . It is guaranteed that this time is not a midnight, i. e. the following two conditions can' t be met at the same time: h= 0 and m= 0 . It is guaranteed that both h and m are given without leading zeros.",
    "output": "For each test case, print the answer on it \u2014 the number of minutes before the New Year.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": "1283A"
  },
  {
    "title": "Temporarily unavailable",
    "url": "https://codeforces.com/problemset/problem/1282/A",
    "history": "Polycarp lives on the coordinate axis Ox and travels from the point x= a to x= b . It moves uniformly rectilinearly at a speed of one unit of distance per minute. On the axis Ox at the point x= c the base station of the mobile operator is placed. It is known that the radius of its coverage is r . Thus, if Polycarp is at a distance less than or equal to r from the point x= c , then he is in the network coverage area, otherwise \u2014 no. The base station can be located both on the route of Polycarp and outside it. Print the time in minutes during which Polycarp will not be in the coverage area of the network, with a rectilinear uniform movement from x= a to x= b . His speed \u2014 one unit of distance per minute.",
    "input": "The first line contains a positive integer t ( 1 \u2264 t \u2264 1000 ) \u2014 the number of test cases. In the following lines are written t test cases. The description of each test case is one line, which contains four integers a , b , c and r ( - 10^ 8 \u2264 a, b, c \u2264 10^ 8 , 0 \u2264 r \u2264 10^ 8 ) \u2014 the coordinates of the starting and ending points of the path, the base station, and its coverage radius, respectively. Any of the numbers a , b and c can be equal ( either any pair or all three numbers) . The base station can be located both on the route of Polycarp and outside it.",
    "output": "Print t numbers \u2014 answers to given test cases in the order they are written in the test. Each answer is an integer \u2014 the number of minutes during which Polycarp will be unavailable during his movement.",
    "note": "The following picture illustrates the first test case. Polycarp goes from 1 to 10 . The yellow area shows the coverage area of the station with a radius of coverage of 1 , which is located at the point of 7 . The green area shows a part of the path when Polycarp is out of coverage area.",
    "topics": [
      "implementation",
      "math"
    ],
    "id": "1282A"
  },
  {
    "title": "Intergalactic Sliding Puzzle",
    "url": "https://codeforces.com/problemset/problem/1280/F",
    "history": "You are an intergalactic surgeon and you have an alien patient. For the purposes of this problem, we can and we will model this patient' s body using a 2 \u00d7 ( 2k + 1) rectangular grid. The alien has 4k + 1 distinct organs, numbered 1 to 4k + 1 . In healthy such aliens, the organs are arranged in a particular way. For example, here is how the organs of a healthy such alien would be positioned, when viewed from the top, for k = 4 : Here, the E represents empty space. In general, the first row contains organs 1 to 2k + 1 ( in that order from left to right) , and the second row contains organs 2k + 2 to 4k + 1 ( in that order from left to right) and then empty space right after. Your patient' s organs are complete, and inside their body, but they somehow got shuffled around! Your job, as an intergalactic surgeon, is to put everything back in its correct position. All organs of the alien must be in its body during the entire procedure. This means that at any point during the procedure, there is exactly one cell ( in the grid) that is empty. In addition, you can only move organs around by doing one of the following things: You can switch the positions of the empty space E with any organ to its immediate left or to its immediate right ( if they exist) . In reality, you do this by sliding the organ in question to the empty space; You can switch the positions of the empty space E with any organ to its immediate top or its immediate bottom ( if they exist) only if the empty space is on the leftmost column, rightmost column or in the centermost column. Again, you do this by sliding the organ in question to the empty space. Your job is to figure out a sequence of moves you must do during the surgical procedure in order to place back all 4k + 1 internal organs of your patient in the correct cells. If it is impossible to do so, you must say so.",
    "input": "The first line of input contains a single integer t ( 1 \u2264 t \u2264 4 ) denoting the number of test cases. The next lines contain descriptions of the test cases. Each test case consists of three lines. The first line contains a single integer k ( 1 \u2264 k \u2264 15 ) which determines the size of the grid. Then two lines follow. Each of them contains 2k + 1 space- separated integers or the letter E. They describe the first and second rows of organs, respectively. It is guaranteed that all 4k + 1 organs are present and there is exactly one E.",
    "output": "For each test case, first, print a single line containing either: SURGERY COMPLETE if it is possible to place back all internal organs in the correct locations; SURGERY FAILED if it is impossible. If it is impossible, then this is the only line of output for the test case. However, if it is possible, output a few more lines describing the sequence of moves to place the organs in the correct locations. The sequence of moves will be a ( possibly empty) string of letters u, d, l or r, representing sliding the organ that' s directly above, below, to the left or to the right of the empty space, respectively, into the empty space. Print the sequence of moves in the following line, as such a string. For convenience, you may use shortcuts to reduce the size of your output. You may use uppercase letters as shortcuts for sequences of moves. For example, you could choose T to represent the string lddrr. These shortcuts may also include other shortcuts on their own! For example, you could choose E to represent TruT, etc. You may use any number of uppercase letters ( including none) as shortcuts. The only requirements are the following: The total length of all strings in your output for a single case is at most 10^ 4 ; There must be no cycles involving the shortcuts that are reachable from the main sequence; The resulting sequence of moves is finite, after expanding all shortcuts. Note that the final sequence of moves ( after expanding) may be much longer than 10^ 4 ; the only requirement is that it' s finite. As an example, if T = lddrr, E = TruT and R = rrr, then TurTlER expands to: TurTlER lddrrurTlER lddrrurlddrrlER lddrrurlddrrlTruTR lddrrurlddrrllddrrruTR lddrrurlddrrllddrrrulddrrR lddrrurlddrrllddrrrulddrrrrr To use shortcuts, print each one of them in a single line as the uppercase letter, then space, and then the string that this shortcut represents. They may be printed in any order. At the end of all of those, print a single line containing DONE. Note: You still need to print DONE even if you don' t plan on using shortcuts. Your sequence does not need to be the shortest. Any valid sequence of moves ( satisfying the requirements above) will be accepted.",
    "note": "There are three shortcuts defined in the first sample output: R = SrS S = rr I = lldll The sequence of moves is IR and it expands to: IR lldllR lldllSrS lldllrrrS lldllrrrrr",
    "topics": [
      "combinatorics",
      "constructive algorithms",
      "math"
    ],
    "id": "1280F"
  },
  {
    "title": "Kirchhoff's Current Loss",
    "url": "https://codeforces.com/problemset/problem/1280/E",
    "history": "Your friend Kirchhoff is shocked with the current state of electronics design. \" Ohmygosh! Watt is wrong with the field? All these circuits are inefficient! There' s so much capacity for improvement. The electrical engineers must not conduct their classes very well. It' s absolutely revolting\" he said. The negativity just keeps flowing out of him, but even after complaining so many times he still hasn' t lepton the chance to directly change anything. \" These circuits have too much total resistance. Wire they designed this way? It' s just causing a massive loss of resistors! Their entire field could conserve so much money if they just maximized the potential of their designs. Why can' t they just try alternative ideas? \" The frequency of his protests about the electrical engineering department hertz your soul, so you have decided to take charge and help them yourself. You plan to create a program that will optimize the circuits while keeping the same circuit layout and maintaining the same effective resistance. A circuit has two endpoints, and is associated with a certain constant, R , called its effective resistance. The circuits we' ll consider will be formed from individual resistors joined together in series or in parallel, forming more complex circuits. The following image illustrates combining circuits in series or parallel. According to your friend Kirchhoff, the effective resistance can be calculated quite easily when joining circuits this way: When joining k circuits in series with effective resistances R_ 1, R_ 2, . . . , R_ k , the effective resistance R of the resulting circuit is the sum R = R_ 1 + R_ 2 + . . . + R_ k. When joining k circuits in parallel with effective resistances R_ 1, R_ 2, . . . , R_ k , the effective resistance R of the resulting circuit is found by solving for R in 1/ R = 1/ R_ 1 + 1/ R_ 2 + . . . + 1/ R_ k, assuming all R_ i > 0 ; if at least one R_ i = 0 , then the effective resistance of the whole circuit is simply R = 0 . Circuits will be represented by strings. Individual resistors are represented by an asterisk, \" * \" . For more complex circuits, suppose s_ 1, s_ 2, . . . , s_ k represent k \u2265 2 circuits. Then: \" ( s_ 1 S s_ 2 S . . . S s_ k ) \" represents their series circuit; \" ( s_ 1 P s_ 2 P . . . P s_ k ) \" represents their parallel circuit. For example, \" ( * P ( * S * ) P * ) \" represents the following circuit: Given a circuit, your task is to assign the resistances of the individual resistors such that they satisfy the following requirements: Each individual resistor has a nonnegative integer resistance value; The effective resistance of the whole circuit is r ; The sum of the resistances of the individual resistors is minimized. If there are n individual resistors, then you need to output the list r_ 1, r_ 2, . . . , r_ n ( 0 \u2264 r_ i , and r_ i is an integer) , where r_ i is the resistance assigned to the i - th individual resistor that appears in the input ( from left to right) . If it is impossible to accomplish the task, you must say so as well. If it is possible, then it is guaranteed that the minimum sum of resistances is at most 10^ 18 .",
    "input": "The first line of input contains a single integer t ( 1 \u2264 t \u2264 32000 ) , denoting the number of test cases. The next lines contain descriptions of the test cases. Each test case consists of a single line containing the integer r ( 1 \u2264 r \u2264 10^ 6 ) , space, and then the string representing the circuit. It is guaranteed that the string is valid and follows the description above. The number of individual resistors ( symbols \" * \" ) is at least 1 and at most 80000 . It is guaranteed that the total number of individual resistors across all test cases is at most 320000 .",
    "output": "For each test case, print a single line: If it' s possible to achieve an effective resistance of r , print \" REVOLTING\" ( without quotes) and then n integers r_ 1, r_ 2, . . . , r_ n \u2014 the resistances assigned to the individual resistors. Here, n denotes the number of the individual resistors in the circuit. There may be multiple possible such assignments with a minimal sum of resistances of the individual resistors, you can output any of them; If it' s impossible, print the string: \" LOSS\" ( without quotes) .",
    "note": "The following illustrates the third sample case: Here, the sum of the resistances of the individual resistors is 2 + 1 + 1 = 4 , which can be shown to be the minimum. Note that there may be other assignments that achieve this minimum.",
    "topics": [
      "math"
    ],
    "id": "1280E"
  },
  {
    "title": "Beingawesomeism",
    "url": "https://codeforces.com/problemset/problem/1280/B",
    "history": "You are an all- powerful being and you have created a rectangular world. In fact, your world is so bland that it could be represented by a r \u00d7 c grid. Each cell on the grid represents a country. Each country has a dominant religion. There are only two religions in your world. One of the religions is called Beingawesomeism, who do good for the sake of being good. The other religion is called Pushingittoofarism, who do murders for the sake of being bad. Oh, and you are actually not really all- powerful. You just have one power, which you can use infinitely many times! Your power involves missionary groups. When a missionary group of a certain country, say a , passes by another country b , they change the dominant religion of country b to the dominant religion of country a . In particular, a single use of your power is this: You choose a horizontal 1 \u00d7 x subgrid or a vertical x \u00d7 1 subgrid. That value of x is up to you; You choose a direction d . If you chose a horizontal subgrid, your choices will either be NORTH or SOUTH. If you choose a vertical subgrid, your choices will either be EAST or WEST; You choose the number s of steps; You command each country in the subgrid to send a missionary group that will travel s steps towards direction d . In each step, they will visit ( and in effect convert the dominant religion of) all s countries they pass through, as detailed above. The parameters x , d , s must be chosen in such a way that any of the missionary groups won' t leave the grid. The following image illustrates one possible single usage of your power. Here, A represents a country with dominant religion Beingawesomeism and P represents a country with dominant religion Pushingittoofarism. Here, we' ve chosen a 1 \u00d7 4 subgrid, the direction NORTH, and s = 2 steps. You are a being which believes in free will, for the most part. However, you just really want to stop receiving murders that are attributed to your name. Hence, you decide to use your powers and try to make Beingawesomeism the dominant religion in every country. What is the minimum number of usages of your power needed to convert everyone to Beingawesomeism? With god, nothing is impossible. But maybe you' re not god? If it is impossible to make Beingawesomeism the dominant religion in all countries, you must also admit your mortality and say so.",
    "input": "The first line of input contains a single integer t ( 1 \u2264 t \u2264 2\u00b7 10^ 4 ) denoting the number of test cases. The first line of each test case contains two space- separated integers r and c denoting the dimensions of the grid ( 1 \u2264 r, c \u2264 60 ) . The next r lines each contains c characters describing the dominant religions in the countries. In particular, the j - th character in the i - th line describes the dominant religion in the country at the cell with row i and column j , where: \" A\" means that the dominant religion is Beingawesomeism; \" P\" means that the dominant religion is Pushingittoofarism. It is guaranteed that the grid will only contain \" A\" or \" P\" characters. It is guaranteed that the sum of the r \u00b7 c in a single file is at most 3 \u00b7 10^ 6 .",
    "output": "For each test case, output a single line containing the minimum number of usages of your power needed to convert everyone to Beingawesomeism, or the string \" MORTAL\" ( without quotes) if it is impossible to do so.",
    "note": "In the first test case, it can be done in two usages, as follows: Usage 1: Usage 2: In the second test case, it can be done with just one usage of the power. In the third test case, it is impossible to convert everyone to Beingawesomeism, so the answer is \" MORTAL\" .",
    "topics": [
      "implementation",
      "math"
    ],
    "id": "1280B"
  },
  {
    "title": "Cut and Paste",
    "url": "https://codeforces.com/problemset/problem/1280/A",
    "history": "We start with a string s consisting only of the digits 1 , 2 , or 3 . The length of s is denoted by | s| . For each i from 1 to | s| , the i - th character of s is denoted by s_ i . There is one cursor. The cursor' s location l is denoted by an integer in { 0, . . . , | s| } , with the following meaning: If l = 0 , then the cursor is located before the first character of s . If l = | s| , then the cursor is located right after the last character of s . If 0 < l < | s| , then the cursor is located between s_ l and s_ l+ 1 . We denote by s_ left the string to the left of the cursor and s_ right the string to the right of the cursor. We also have a string c , which we call our clipboard, which starts out as empty. There are three types of actions: The Move action. Move the cursor one step to the right. This increments l once. The Cut action. Set c \u2190 s_ right , then set s \u2190 s_ left . The Paste action. Append the value of c to the end of the string s . Note that this doesn' t modify c . The cursor initially starts at l = 0 . Then, we perform the following procedure: Perform the Move action once. Perform the Cut action once. Perform the Paste action s_ l times. If l = x , stop. Otherwise, return to step 1. You' re given the initial string s and the integer x . What is the length of s when the procedure stops? Since this value may be very large, only find it modulo 10^ 9 + 7 . It is guaranteed that l\u2264 | s| at any time.",
    "input": "The first line of input contains a single integer t ( 1 \u2264 t \u2264 1000 ) denoting the number of test cases. The next lines contain descriptions of the test cases. The first line of each test case contains a single integer x ( 1 \u2264 x \u2264 10^ 6 ) . The second line of each test case consists of the initial string s ( 1 \u2264 | s| \u2264 500 ) . It is guaranteed, that s consists of the characters \" 1\" , \" 2\" , \" 3\" . It is guaranteed that the sum of x in a single file is at most 10^ 6 . It is guaranteed that in each test case before the procedure will stop it will be true that l\u2264 | s| at any time.",
    "output": "For each test case, output a single line containing a single integer denoting the answer for that test case modulo 10^ 9 + 7 .",
    "note": "Let' s illustrate what happens with the first test case. Initially, we have s = 231. Initially, l = 0 and c = \u03b5 ( the empty string) . The following things happen if we follow the procedure above: Step 1, Move once: we get l = 1 . Step 2, Cut once: we get s = 2 and c = 31. Step 3, Paste s_ l = 2 times: we get s = 23131. Step 4: l = 1 = \u0338 x = 5 , so we return to step 1. Step 1, Move once: we get l = 2 . Step 2, Cut once: we get s = 23 and c = 131. Step 3, Paste s_ l = 3 times: we get s = 23131131131. Step 4: l = 2 = \u0338 x = 5 , so we return to step 1. Step 1, Move once: we get l = 3 . Step 2, Cut once: we get s = 231 and c = 31131131. Step 3, Paste s_ l = 1 time: we get s = 23131131131. Step 4: l = 3 = \u0338 x = 5 , so we return to step 1. Step 1, Move once: we get l = 4 . Step 2, Cut once: we get s = 2313 and c = 1131131. Step 3, Paste s_ l = 3 times: we get s = 2313113113111311311131131. Step 4: l = 4 = \u0338 x = 5 , so we return to step 1. Step 1, Move once: we get l = 5 . Step 2, Cut once: we get s = 23131 and c = 13113111311311131131. Step 3, Paste s_ l = 1 times: we get s = 2313113113111311311131131. Step 4: l = 5 = x , so we stop. At the end of the procedure, s has length 25 .",
    "topics": [
      "implementation",
      "math"
    ],
    "id": "1280A"
  },
  {
    "title": "Santa's Bot",
    "url": "https://codeforces.com/problemset/problem/1279/D",
    "history": "Santa Claus has received letters from n different kids throughout this year. Of course, each kid wants to get some presents from Santa: in particular, the i - th kid asked Santa to give them one of k_ i different items as a present. Some items could have been asked by multiple kids. Santa is really busy, so he wants the New Year Bot to choose the presents for all children. Unfortunately, the Bot' s algorithm of choosing presents is bugged. To choose a present for some kid, the Bot does the following: choose one kid x equiprobably among all n kids; choose some item y equiprobably among all k_ x items kid x wants; choose a kid z who will receive the present equipropably among all n kids ( this choice is independent of choosing x and y ) ; the resulting triple ( x, y, z) is called the decision of the Bot. If kid z listed item y as an item they want to receive, then the decision valid. Otherwise, the Bot' s choice is invalid. Santa is aware of the bug, but he can' t estimate if this bug is really severe. To do so, he wants to know the probability that one decision generated according to the aforementioned algorithm is valid. Can you help him?",
    "input": "The first line contains one integer n ( 1 \u2264 n \u2264 10^ 6 ) \u2014 the number of kids who wrote their letters to Santa. Then n lines follow, the i - th of them contains a list of items wanted by the i - th kid in the following format: k_ i a_ i, 1 a_ i, 2 . . . a_ i, k_ i ( 1 \u2264 k_ i, a_ i, j\u2264 10^ 6 ) , where k_ i is the number of items wanted by the i - th kid, and a_ i, j are the items themselves. No item is contained in the same list more than once. It is guaranteed that \u2211_ i = 1^ n k_ i \u2264 10^ 6 .",
    "output": "Print the probatility that the Bot produces a valid decision as follows: Let this probability be represented as an irreducible fraction x/ y . You have to print x \u00b7 y^ - 1 998244353 , where y^ - 1 is the inverse element of y modulo 998244353 ( such integer that y \u00b7 y^ - 1 has remainder 1 modulo 998244353 ) .",
    "note": "",
    "topics": [
      "combinatorics",
      "math",
      "probabilities"
    ],
    "id": "1279D"
  },
  {
    "title": "New Year Garland",
    "url": "https://codeforces.com/problemset/problem/1279/A",
    "history": "Polycarp is sad \u2014 New Year is coming in few days but there is still no snow in his city. To bring himself New Year mood, he decided to decorate his house with some garlands. The local store introduced a new service this year, called \" Build your own garland\" . So you can buy some red, green and blue lamps, provide them and the store workers will solder a single garland of them. The resulting garland will have all the lamps you provided put in a line. Moreover, no pair of lamps of the same color will be adjacent to each other in this garland! For example, if you provide 3 red, 3 green and 3 blue lamps, the resulting garland can look like this: \" RGBRBGBGR\" ( \" RGB\" being the red, green and blue color, respectively) . Note that it' s ok to have lamps of the same color on the ends of the garland. However, if you provide, say, 1 red, 10 green and 2 blue lamps then the store workers won' t be able to build any garland of them. Any garland consisting of these lamps will have at least one pair of lamps of the same color adjacent to each other. Note that the store workers should use all the lamps you provided. So Polycarp has bought some sets of lamps and now he wants to know if the store workers can build a garland from each of them.",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 100 ) \u2014 the number of sets of lamps Polycarp has bought. Each of the next t lines contains three integers r , g and b ( 1 \u2264 r, g, b \u2264 10^ 9 ) \u2014 the number of red, green and blue lamps in the set, respectively.",
    "output": "Print t lines \u2014 for each set of lamps print \" Yes\" if the store workers can build a garland from them and \" No\" otherwise.",
    "note": "The first two sets are desribed in the statement. The third set produces garland \" RBRG\" , for example.",
    "topics": [
      "math"
    ],
    "id": "1279A"
  },
  {
    "title": "Cards",
    "url": "https://codeforces.com/problemset/problem/1278/F",
    "history": "Consider the following experiment. You have a deck of m cards, and exactly one card is a joker. n times, you do the following: shuffle the deck, take the top card of the deck, look at it and return it into the deck. Let x be the number of times you have taken the joker out of the deck during this experiment. Assuming that every time you shuffle the deck, all m! possible permutations of cards are equiprobable, what is the expected value of x^ k ? Print the answer modulo 998244353 .",
    "input": "The only line contains three integers n , m and k ( 1 \u2264 n, m < 998244353 , 1 \u2264 k \u2264 5000 ) .",
    "output": "Print one integer \u2014 the expected value of x^ k , taken modulo 998244353 ( the answer can always be represented as an irreducible fraction a/ b , where b 998244353 0 ; you have to print a \u00b7 b^ - 1 998244353 ) .",
    "note": "",
    "topics": [
      "combinatorics",
      "dp",
      "math",
      "number theory",
      "probabilities"
    ],
    "id": "1278F"
  },
  {
    "title": "A and B",
    "url": "https://codeforces.com/problemset/problem/1278/B",
    "history": "You are given two integers a and b . You can perform a sequence of operations: during the first operation you choose one of these numbers and increase it by 1 ; during the second operation you choose one of these numbers and increase it by 2 , and so on. You choose the number of these operations yourself. For example, if a = 1 and b = 3 , you can perform the following sequence of three operations: add 1 to a , then a = 2 and b = 3 ; add 2 to b , then a = 2 and b = 5 ; add 3 to a , then a = 5 and b = 5 . Calculate the minimum number of operations required to make a and b equal.",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 100 ) \u2014 the number of test cases. The only line of each test case contains two integers a and b ( 1 \u2264 a, b \u2264 10^ 9 ) .",
    "output": "For each test case print one integer \u2014 the minimum numbers of operations required to make a and b equal.",
    "note": "First test case considered in the statement. In the second test case integers a and b are already equal, so you don' t need to perform any operations. In the third test case you have to apply the first, the second, the third and the fourth operation to b ( b turns into 20 + 1 + 2 + 3 + 4 = 30 ) .",
    "topics": [
      "greedy",
      "math"
    ],
    "id": "1278B"
  },
  {
    "title": "Let's Play the Words?",
    "url": "https://codeforces.com/problemset/problem/1277/D",
    "history": "Polycarp has n different binary words. A word called binary if it contains only characters ' 0' and ' 1' . For example, these words are binary: \" 0001\" , \" 11\" , \" 0\" and \" 0011100\" . Polycarp wants to offer his set of n binary words to play a game \" words\" . In this game, players name words and each next word ( starting from the second) must start with the last character of the previous word. The first word can be any. For example, these sequence of words can be named during the game: \" 0101\" , \" 1\" , \" 10\" , \" 00\" , \" 00001\" . Word reversal is the operation of reversing the order of the characters. For example, the word \" 0111\" after the reversal becomes \" 1110\" , the word \" 11010\" after the reversal becomes \" 01011\" . Probably, Polycarp has such a set of words that there is no way to put them in the order correspondent to the game rules. In this situation, he wants to reverse some words from his set so that: the final set of n words still contains different words ( i. e. all words are unique) ; there is a way to put all words of the final set of words in the order so that the final sequence of n words is consistent with the game rules. Polycarp wants to reverse minimal number of words. Please, help him.",
    "input": "The first line of the input contains one integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases in the input. Then t test cases follow. The first line of a test case contains one integer n ( 1 \u2264 n \u2264 2\u00b710^ 5 ) \u2014 the number of words in the Polycarp' s set. Next n lines contain these words. All of n words aren' t empty and contains only characters ' 0' and ' 1' . The sum of word lengths doesn' t exceed 4\u00b710^ 6 . All words are different. Guaranteed, that the sum of n for all test cases in the input doesn' t exceed 2\u00b710^ 5 . Also, guaranteed that the sum of word lengths for all test cases in the input doesn' t exceed 4\u00b710^ 6 .",
    "output": "Print answer for all of t test cases in the order they appear. If there is no answer for the test case, print - 1. Otherwise, the first line of the output should contain k ( 0 \u2264 k \u2264 n ) \u2014 the minimal number of words in the set which should be reversed. The second line of the output should contain k distinct integers \u2014 the indexes of the words in the set which should be reversed. Words are numerated from 1 to n in the order they appear. If k= 0 you can skip this line ( or you can print an empty line) . If there are many answers you can print any of them.",
    "note": "",
    "topics": [
      "data structures",
      "hashing",
      "implementation",
      "math"
    ],
    "id": "1277D"
  },
  {
    "title": "Beautiful Rectangle",
    "url": "https://codeforces.com/problemset/problem/1276/C",
    "history": "You are given n integers. You need to choose a subset and put the chosen numbers in a beautiful rectangle ( rectangular matrix) . Each chosen number should occupy one of its rectangle cells, each cell must be filled with exactly one chosen number. Some of the n numbers may not be chosen. A rectangle ( rectangular matrix) is called beautiful if in each row and in each column all values are different. What is the largest ( by the total number of cells) beautiful rectangle you can construct? Print the rectangle itself.",
    "input": "The first line contains n ( 1 \u2264 n \u2264 4\u00b710^ 5 ) . The second line contains n integers ( 1 \u2264 a_ i \u2264 10^ 9 ) .",
    "output": "In the first line print x ( 1 \u2264 x \u2264 n ) \u2014 the total number of cells of the required maximum beautiful rectangle. In the second line print p and q ( p \u00b7 q= x ) : its sizes. In the next p lines print the required rectangle itself. If there are several answers, print any.",
    "note": "",
    "topics": [
      "brute force",
      "combinatorics",
      "constructive algorithms",
      "data structures",
      "greedy",
      "math"
    ],
    "id": "1276C"
  },
  {
    "title": "Three Friends",
    "url": "https://codeforces.com/problemset/problem/1272/A",
    "history": "Three friends are going to meet each other. Initially, the first friend stays at the position x = a , the second friend stays at the position x = b and the third friend stays at the position x = c on the coordinate axis Ox . In one minute each friend independently from other friends can change the position x by 1 to the left or by 1 to the right ( i. e. set x : = x - 1 or x : = x + 1 ) or even don' t change it. Let' s introduce the total pairwise distance \u2014 the sum of distances between each pair of friends. Let a' , b' and c' be the final positions of the first, the second and the third friend, correspondingly. Then the total pairwise distance is | a' - b' | + | a' - c' | + | b' - c' | , where | x| is the absolute value of x . Friends are interested in the minimum total pairwise distance they can reach if they will move optimally. Each friend will move no more than once. So, more formally, they want to know the minimum total pairwise distance they can reach after one minute. You have to answer q independent test cases.",
    "input": "The first line of the input contains one integer q ( 1 \u2264 q \u2264 1000 ) \u2014 the number of test cases. The next q lines describe test cases. The i - th test case is given as three integers a, b and c ( 1 \u2264 a, b, c \u2264 10^ 9 ) \u2014 initial positions of the first, second and third friend correspondingly. The positions of friends can be equal.",
    "output": "For each test case print the answer on it \u2014 the minimum total pairwise distance ( the minimum sum of distances between each pair of friends) if friends change their positions optimally. Each friend will move no more than once. So, more formally, you have to find the minimum total pairwise distance they can reach after one minute.",
    "note": "",
    "topics": [
      "brute force",
      "greedy",
      "math",
      "sortings"
    ],
    "id": "1272A"
  },
  {
    "title": "Common Number",
    "url": "https://codeforces.com/problemset/problem/1271/E",
    "history": "At first, let' s define function f( x) as follows: f( x) = { x/ 2 x is even x - 1 . We can see that if we choose some value v and will apply function f to it, then apply f to f( v) , and so on, we' ll eventually get 1 . Let' s write down all values we get in this process in a list and denote this list as path( v) . For example, path( 1) = [ 1] , path( 15) = [ 15, 14, 7, 6, 3, 2, 1] , path( 32) = [ 32, 16, 8, 4, 2, 1] . Let' s write all lists path( x) for every x from 1 to n . The question is next: what is the maximum value y such that y is contained in at least k different lists path( x) ? Formally speaking, you need to find maximum y such that | { x | 1 \u2264 x \u2264 n, y \u2208 path( x) } | \u2265 k .",
    "input": "The first line contains two integers n and k ( 1 \u2264 k \u2264 n \u2264 10^ 18 ) .",
    "output": "Print the only integer \u2014 the maximum value that is contained in at least k paths.",
    "note": "In the first example, the answer is 5 , since 5 occurs in path( 5) , path( 10) and path( 11) . In the second example, the answer is 4 , since 4 occurs in path( 4) , path( 5) , path( 8) , path( 9) , path( 10) and path( 11) . In the third example n = k , so the answer is 1 , since 1 is the only number occuring in all paths for integers from 1 to 20 .",
    "topics": [
      "binary search",
      "combinatorics",
      "dp",
      "math"
    ],
    "id": "1271E"
  },
  {
    "title": "Blocks",
    "url": "https://codeforces.com/problemset/problem/1271/B",
    "history": "There are n blocks arranged in a row and numbered from left to right, starting from one. Each block is either black or white. You may perform the following operation zero or more times: choose two adjacent blocks and invert their colors ( white block becomes black, and vice versa) . You want to find a sequence of operations, such that they make all the blocks having the same color. You don' t have to minimize the number of operations, but it should not exceed 3 \u00b7 n . If it is impossible to find such a sequence of operations, you need to report it.",
    "input": "The first line contains one integer n ( 2 \u2264 n \u2264 200 ) \u2014 the number of blocks. The second line contains one string s consisting of n characters, each character is either \" W\" or \" B\" . If the i - th character is \" W\" , then the i - th block is white. If the i - th character is \" B\" , then the i - th block is black.",
    "output": "If it is impossible to make all the blocks having the same color, print - 1 . Otherwise, print an integer k ( 0 \u2264 k \u2264 3 \u00b7 n ) \u2014 the number of operations. Then print k integers p_ 1, p_ 2, . . . , p_ k ( 1 \u2264 p_ j \u2264 n - 1) , where p_ j is the position of the left block in the pair of blocks that should be affected by the j - th operation. If there are multiple answers, print any of them.",
    "note": "In the first example, it is possible to make all blocks black in 3 operations. Start with changing blocks 6 and 7 , so the sequence is \" BWWWWBBB\" . Then change blocks 2 and 3 , so the sequence is \" BBBWWBB\" . And finally, change blocks 4 and 5 , so all blocks are black. It is impossible to make all colors equal in the second example. All blocks are already white in the third example. In the fourth example it is possible to make all blocks white in two operations: first operation is to change blocks 2 and 3 ( so the sequence is \" BBW\" ) , and then change blocks 1 and 2 ( so all blocks are white) .",
    "topics": [
      "greedy",
      "math"
    ],
    "id": "1271B"
  },
  {
    "title": "Suits",
    "url": "https://codeforces.com/problemset/problem/1271/A",
    "history": "A new delivery of clothing has arrived today to the clothing store. This delivery consists of a ties, b scarves, c vests and d jackets. The store does not sell single clothing items \u2014 instead, it sells suits of two types: a suit of the first type consists of one tie and one jacket; a suit of the second type consists of one scarf, one vest and one jacket. Each suit of the first type costs e coins, and each suit of the second type costs f coins. Calculate the maximum possible cost of a set of suits that can be composed from the delivered clothing items. Note that one item cannot be used in more than one suit ( though some items may be left unused) .",
    "input": "The first line contains one integer a ( 1 \u2264 a \u2264 100 000) \u2014 the number of ties. The second line contains one integer b ( 1 \u2264 b \u2264 100 000) \u2014 the number of scarves. The third line contains one integer c ( 1 \u2264 c \u2264 100 000) \u2014 the number of vests. The fourth line contains one integer d ( 1 \u2264 d \u2264 100 000) \u2014 the number of jackets. The fifth line contains one integer e ( 1 \u2264 e \u2264 1 000) \u2014 the cost of one suit of the first type. The sixth line contains one integer f ( 1 \u2264 f \u2264 1 000) \u2014 the cost of one suit of the second type.",
    "output": "Print one integer \u2014 the maximum total cost of some set of suits that can be composed from the delivered items.",
    "note": "It is possible to compose three suits of the second type in the first example, and their total cost will be 6 . Since all jackets will be used, it' s impossible to add anything to this set. The best course of action in the second example is to compose nine suits of the first type and eleven suits of the second type. The total cost is 9 \u00b7 4 + 11 \u00b7 6 = 102 .",
    "topics": [
      "brute force",
      "greedy",
      "math"
    ],
    "id": "1271A"
  },
  {
    "title": "Xor on Figures",
    "url": "https://codeforces.com/problemset/problem/1270/I",
    "history": "There is given an integer k and a grid 2^ k \u00d7 2^ k with some numbers written in its cells, cell ( i, j) initially contains number a_ ij . Grid is considered to be a torus, that is, the cell to the right of ( i, 2^ k) is ( i, 1) , the cell below the ( 2^ k, i) is ( 1, i) There is also given a lattice figure F , consisting of t cells, where t is odd. F doesn' t have to be connected. We can perform the following operation: place F at some position on the grid. ( Only translations are allowed, rotations and reflections are prohibited) . Now choose any nonnegative integer p . After that, for each cell ( i, j) , covered by F , replace a_ ij by a_ ij\u2295 p , where \u2295 denotes the bitwise XOR operation. More formally, let F be given by cells ( x_ 1, y_ 1) , ( x_ 2, y_ 2) , . . . , ( x_ t, y_ t) . Then you can do the following operation: choose any x, y with 1\u2264 x, y \u2264 2^ k , any nonnegative integer p , and for every i from 1 to n replace number in the cell ( ( ( x + x_ i - 1) 2^ k) + 1, ( ( y + y_ i - 1) 2^ k) + 1) with a_ ( ( x + x_ i - 1) 2^ k) + 1, ( ( y + y_ i - 1) 2^ k) + 1\u2295 p . Our goal is to make all the numbers equal to 0 . Can we achieve it? If we can, find the smallest number of operations in which it is possible to do this.",
    "input": "The first line contains a single integer k ( 1 \u2264 k \u2264 9 ) . The i - th of the next 2^ k lines contains 2^ k integers a_ i1, a_ i2, . . . , a_ i2^ k ( 0 \u2264 a_ ij < 2^ 60 ) \u2014 initial values in the i - th row of the grid. The next line contains a single integer t ( 1\u2264 t \u2264min( 99, 4^ k) , t is odd) \u2014 number of cells of figure. i - th of next t lines contains two integers x_ i and y_ i ( 1 \u2264 x_ i, y_ i \u2264 2^ k ) , describing the position of the i - th cell of the figure. It is guaranteed that all cells are different, but it is not guaranteed that the figure is connected.",
    "output": "If it is impossible to make all numbers in the grid equal to 0 with these operations, output - 1 . Otherwise, output a single integer \u2014 the minimal number of operations needed to do this. It can be shown that if it is possible to make all numbers equal 0 , it is possible to do so in less than 10^ 18 operations.",
    "note": "The figure and the operations for the example are shown above:",
    "topics": [
      "constructive algorithms",
      "fft",
      "math"
    ],
    "id": "1270I"
  },
  {
    "title": "Subset with Zero Sum",
    "url": "https://codeforces.com/problemset/problem/1270/G",
    "history": "You are given n integers a_ 1, a_ 2, . . . , a_ n , such that for each 1\u2264 i \u2264 n holds i- n\u2264 a_ i\u2264 i- 1 . Find some nonempty subset of these integers, whose sum is equal to 0 . It can be shown that such a subset exists under given constraints. If there are several possible subsets with zero- sum, you can find any of them.",
    "input": "Each test contains multiple test cases. The first line contains the number of test cases t ( 1 \u2264 t \u2264 10^ 6 ) . The description of the test cases follows. The first line of each test case contains a single integer n ( 1\u2264 n \u2264 10^ 6 ) . The second line of each test case contains n integers a_ 1, a_ 2, . . . , a_ n ( i- n \u2264 a_ i \u2264 i- 1 ) . It is guaranteed that the sum of n over all test cases does not exceed 10^ 6 .",
    "output": "For each test case, output two lines. In the first line, output s ( 1\u2264 s \u2264 n ) \u2014 the number of elements in your subset. In the second line, output s integers i_ 1, i_ 2, . . . , i_ s ( 1\u2264 i_ k \u2264 n ) . All integers have to be pairwise different, and a_ i_ 1 + a_ i_ 2 + . . . + a_ i_ s has to be equal to 0 . If there are several possible subsets with zero- sum, you can find any of them.",
    "note": "In the first example, we get sum is a_ 1 = 0 . In the second example, we get sum is a_ 1 + a_ 4 + a_ 3 + a_ 2 = 0 .",
    "topics": [
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "math"
    ],
    "id": "1270G"
  },
  {
    "title": "Awesome Substrings",
    "url": "https://codeforces.com/problemset/problem/1270/F",
    "history": "Let' s call a binary string s awesome, if it has at least 1 symbol 1 and length of the string is divisible by the number of 1 in it. In particular, 1, 1010, 111 are awesome, but 0, 110, 01010 aren' t. You are given a binary string s . Count the number of its awesome substrings. A string a is a substring of a string b if a can be obtained from b by deletion of several ( possibly, zero or all) characters from the beginning and several ( possibly, zero or all) characters from the end.",
    "input": "The first line contains the string s ( 1 \u2264 | s| \u2264 200 000 ) consisting only of zeros and ones.",
    "output": "Output a single number \u2014 the number of awesome substrings of s .",
    "note": "In the first sample, all substrings of s are awesome. In the second sample, we have the following awesome substrings of s : 1 ( 2 times) , 01 ( 2 times) , 10 ( 2 times) , 010 ( 2 times) , 1010, 0101In the third sample, no substring is awesome.",
    "topics": [
      "math",
      "strings"
    ],
    "id": "1270F"
  },
  {
    "title": "Divide Points",
    "url": "https://codeforces.com/problemset/problem/1270/E",
    "history": "You are given a set of n\u2265 2 pairwise different points with integer coordinates. Your task is to partition these points into two nonempty groups A and B , such that the following condition holds: For every two points P and Q , write the Euclidean distance between them on the blackboard: if they belong to the same group \u2014 with a yellow pen, and if they belong to different groups \u2014 with a blue pen. Then no yellow number is equal to any blue number. It is guaranteed that such a partition exists for any possible input. If there exist multiple partitions, you are allowed to output any of them.",
    "input": "The first line contains one integer n ( 2 \u2264 n \u2264 10^ 3) \u2014 the number of points. The i - th of the next n lines contains two integers x_ i and y_ i ( - 10^ 6 \u2264 x_ i, y_ i \u2264 10^ 6 ) \u2014 the coordinates of the i - th point. It is guaranteed that all n points are pairwise different.",
    "output": "In the first line, output a ( 1 \u2264 a \u2264 n- 1 ) \u2014 the number of points in a group A . In the second line, output a integers \u2014 the indexes of points that you include into group A . If there are multiple answers, print any.",
    "note": "In the first example, we set point ( 0, 0) to group A and points ( 0, 1) and ( 1, 0) to group B . In this way, we will have 1 yellow number \u221a( 2) and 2 blue numbers 1 on the blackboard. In the second example, we set points ( 0, 1) and ( 0, - 1) to group A and points ( - 1, 0) and ( 1, 0) to group B . In this way, we will have 2 yellow numbers 2 , 4 blue numbers \u221a( 2) on the blackboard.",
    "topics": [
      "constructive algorithms",
      "geometry",
      "math"
    ],
    "id": "1270E"
  },
  {
    "title": "Strange Device",
    "url": "https://codeforces.com/problemset/problem/1270/D",
    "history": "This problem is interactive. We have hidden an array a of n pairwise different numbers ( this means that no two numbers are equal) . You can get some information about this array using a new device you just ordered on Amazon. This device can answer queries of the following form: in response to the positions of k different elements of the array, it will return the position and value of the m - th among them in the ascending order. Unfortunately, the instruction for the device was lost during delivery. However, you remember k , but don' t remember m . Your task is to find m using queries to this device. You can ask not more than n queries. Note that the array a and number m are fixed before the start of the interaction and don' t depend on your queries. In other words, interactor is not adaptive. Note that you don' t have to minimize the number of queries, and you don' t need to guess array a . You just have to guess m . InteractionYou begin the interaction by reading n and k . To ask a question about elements on positions x_ 1, x_ 2, . . . , x_ k , in a separate line output ? x_ 1 x_ 2 x_ 3 . . . x_ k Numbers in the query have to satisfy 1 \u2264 x_ i \u2264 n , and all x_ i have to be different. Don' t forget to ' flush' , to get the answer. In response, you will receive two integers pos and a_ pos \u2014 the position in the array a of the m - th in ascending order element among a_ x_ 1, a_ x_ 2, . . . , a_ x_ k , and the element on this position. In case your query is invalid or you asked more than n queries, the program will print - 1 and will finish interaction. You will receive a Wrong answer verdict. Make sure to exit immediately to avoid getting other verdicts. When you determine m , output ! m After printing a query do not forget to output end of line and flush the output. Otherwise, you will get Idleness limit exceeded. To do this, use: fflush( stdout) or cout. flush( ) in C+ + ; System. out. flush( ) in Java; flush( output) in Pascal; stdout. flush( ) in Python; see documentation for other languages. Hack formatFor the hacks use the following format: The first line has to contain three integers n, k, m ( 1 \u2264 m \u2264 k < n \u2264 500 ) \u2014 the length of the array, number of elements in the query, and which in the ascending order number the device returns. In the next line output n integers a_ 1, a_ 2, . . . , a_ n ( 0\u2264 a_ i \u2264 10^ 9 ) \u2014 the elements of the array. They have to be pairwise different.",
    "input": "The first line contains two integers n and k ( 1\u2264 k < n \u2264 500 ) \u2014 the length of the array and the number of the elements in the query. It is guaranteed that number m satisfies 1\u2264 m \u2264 k , elements a_ 1, a_ 2, . . . , a_ n of the array satisfy 0\u2264 a_ i \u2264 10^ 9 , and all of them are different.",
    "output": "",
    "note": "In the example, n = 4 , k = 3 , m = 3 , a = [ 2, 0, 1, 9] .",
    "topics": [
      "constructive algorithms",
      "interactive",
      "math",
      "sortings"
    ],
    "id": "1270D"
  },
  {
    "title": "Make Good",
    "url": "https://codeforces.com/problemset/problem/1270/C",
    "history": "Let' s call an array a_ 1, a_ 2, . . . , a_ m of nonnegative integer numbers good if a_ 1 + a_ 2 + . . . + a_ m = 2\u00b7( a_ 1 \u2295 a_ 2 \u2295. . . \u2295 a_ m) , where \u2295 denotes the bitwise XOR operation. For example, array [ 1, 2, 3, 6] is good, as 1 + 2 + 3 + 6 = 12 = 2\u00b7 6 = 2\u00b7 ( 1\u2295 2 \u2295 3 \u2295 6) . At the same time, array [ 1, 2, 1, 3] isn' t good, as 1 + 2 + 1 + 3 = 7 = \u0338 2\u00b7 1 = 2\u00b7( 1\u2295 2 \u2295 1 \u2295 3) . You are given an array of length n : a_ 1, a_ 2, . . . , a_ n . Append at most 3 elements to it to make it good. Appended elements don' t have to be different. It can be shown that the solution always exists under the given constraints. If there are different solutions, you are allowed to output any of them. Note that you don' t have to minimize the number of added elements! . So, if an array is good already you are allowed to not append elements.",
    "input": "Each test contains multiple test cases. The first line contains the number of test cases t ( 1 \u2264 t \u2264 10 000 ) . The description of the test cases follows. The first line of each test case contains a single integer n ( 1\u2264 n \u2264 10^ 5) \u2014 the size of the array. The second line of each test case contains n integers a_ 1, a_ 2, . . . , a_ n ( 0\u2264 a_ i \u2264 10^ 9 ) \u2014 the elements of the array. It is guaranteed that the sum of n over all test cases does not exceed 10^ 5 .",
    "output": "For each test case, output two lines. In the first line, output a single integer s ( 0\u2264 s\u2264 3 ) \u2014 the number of elements you want to append. In the second line, output s integers b_ 1, . . . , b_ s ( 0\u2264 b_ i \u2264 10^ 18 ) \u2014 the elements you want to append to the array. If there are different solutions, you are allowed to output any of them.",
    "note": "In the first test case of the example, the sum of all numbers is 12 , and their \u2295 is 6 , so the condition is already satisfied. In the second test case of the example, after adding 4, 4 , the array becomes [ 8, 4, 4] . The sum of numbers in it is 16 , \u2295 of numbers in it is 8 .",
    "topics": [
      "bitmasks",
      "constructive algorithms",
      "math"
    ],
    "id": "1270C"
  },
  {
    "title": "Interesting Subarray",
    "url": "https://codeforces.com/problemset/problem/1270/B",
    "history": "For an array a of integers let' s denote its maximal element as max( a) , and minimal as min( a) . We will call an array a of k integers interesting if max( a) - min( a) \u2265 k . For example, array [ 1, 3, 4, 3] isn' t interesting as max( a) - min( a) = 4 - 1 = 3 < 4 while array [ 7, 3, 0, 4, 3] is as max( a) - min( a) = 7 - 0 = 7 \u2265 5 . You are given an array a of n integers. Find some interesting nonempty subarray of a , or tell that it doesn' t exist. An array b is a subarray of an array a if b can be obtained from a by deletion of several ( possibly, zero or all) elements from the beginning and several ( possibly, zero or all) elements from the end. In particular, an array is a subarray of itself.",
    "input": "The first line contains integer number t ( 1 \u2264 t \u2264 10 000 ) . Then t test cases follow. The first line of each test case contains a single integer n ( 2\u2264 n \u2264 2\u00b7 10^ 5 ) \u2014 the length of the array. The second line of each test case contains n integers a_ 1, a_ 2, . . . , a_ n ( 0\u2264 a_ i \u2264 10^ 9 ) \u2014 the elements of the array. It is guaranteed that the sum of n over all test cases does not exceed 2 \u00b7 10^ 5 .",
    "output": "For each test case, output \" NO\" in a separate line if there is no interesting nonempty subarray in a . Otherwise, output \" YES\" in a separate line. In the next line, output two integers l and r ( 1\u2264 l \u2264 r \u2264 n ) \u2014 bounds of the chosen subarray. If there are multiple answers, print any. You can print each letter in any case ( upper or lower) .",
    "note": "In the second test case of the example, one of the interesting subarrays is a = [ 2, 0, 1, 9] : max( a) - min( a) = 9 - 0 = 9 \u2265 4 .",
    "topics": [
      "constructive algorithms",
      "greedy",
      "math"
    ],
    "id": "1270B"
  },
  {
    "title": "Card Game",
    "url": "https://codeforces.com/problemset/problem/1270/A",
    "history": "Two players decided to play one interesting card game. There is a deck of n cards, with values from 1 to n . The values of cards are pairwise different ( this means that no two different cards have equal values) . At the beginning of the game, the deck is completely distributed between players such that each player has at least one card. The game goes as follows: on each turn, each player chooses one of their cards ( whichever they want) and puts on the table, so that the other player doesn' t see which card they chose. After that, both cards are revealed, and the player, value of whose card was larger, takes both cards in his hand. Note that as all cards have different values, one of the cards will be strictly larger than the other one. Every card may be played any amount of times. The player loses if he doesn' t have any cards. For example, suppose that n = 5 , the first player has cards with values 2 and 3 , and the second player has cards with values 1 , 4 , 5 . Then one possible flow of the game is: The first player chooses the card 3 . The second player chooses the card 1 . As 3> 1 , the first player gets both cards. Now the first player has cards 1 , 2 , 3 , the second player has cards 4 , 5 . The first player chooses the card 3 . The second player chooses the card 4 . As 3< 4 , the second player gets both cards. Now the first player has cards 1 , 2 . The second player has cards 3 , 4 , 5 . The first player chooses the card 1 . The second player chooses the card 3 . As 1< 3 , the second player gets both cards. Now the first player has only the card 2 . The second player has cards 1 , 3 , 4 , 5 . The first player chooses the card 2 . The second player chooses the card 4 . As 2< 4 , the second player gets both cards. Now the first player is out of cards and loses. Therefore, the second player wins. Who will win if both players are playing optimally? It can be shown that one of the players has a winning strategy.",
    "input": "Each test contains multiple test cases. The first line contains the number of test cases t ( 1 \u2264 t \u2264 100 ) . The description of the test cases follows. The first line of each test case contains three integers n , k_ 1 , k_ 2 ( 2 \u2264 n \u2264 100, 1 \u2264 k_ 1 \u2264 n - 1, 1 \u2264 k_ 2 \u2264 n - 1, k_ 1 + k_ 2 = n ) \u2014 the number of cards, number of cards owned by the first player and second player correspondingly. The second line of each test case contains k_ 1 integers a_ 1, . . . , a_ k_ 1 ( 1 \u2264 a_ i \u2264 n ) \u2014 the values of cards of the first player. The third line of each test case contains k_ 2 integers b_ 1, . . . , b_ k_ 2 ( 1 \u2264 b_ i \u2264 n ) \u2014 the values of cards of the second player. It is guaranteed that the values of all cards are different.",
    "output": "For each test case, output \" YES\" in a separate line, if the first player wins. Otherwise, output \" NO\" in a separate line. You can print each letter in any case ( upper or lower) .",
    "note": "In the first test case of the example, there is only one possible move for every player: the first player will put 2 , the second player will put 1 . 2> 1 , so the first player will get both cards and will win. In the second test case of the example, it can be shown that it is the second player who has a winning strategy. One possible flow of the game is illustrated in the statement.",
    "topics": [
      "games",
      "greedy",
      "math"
    ],
    "id": "1270A"
  },
  {
    "title": "Equation",
    "url": "https://codeforces.com/problemset/problem/1269/A",
    "history": "Let' s call a positive integer composite if it has at least one divisor other than 1 and itself. For example: the following numbers are composite: 1024 , 4 , 6 , 9 ; the following numbers are not composite: 13 , 1 , 2 , 3 , 37 . You are given a positive integer n . Find two composite integers a, b such that a- b= n . It can be proven that solution always exists.",
    "input": "The input contains one integer n ( 1 \u2264 n \u2264 10^ 7 ) : the given integer.",
    "output": "Print two composite integers a, b ( 2 \u2264 a, b \u2264 10^ 9, a- b= n ) . It can be proven, that solution always exists. If there are several possible solutions, you can print any.",
    "note": "",
    "topics": [
      "brute force",
      "math"
    ],
    "id": "1269A"
  },
  {
    "title": "Invertation in Tournament",
    "url": "https://codeforces.com/problemset/problem/1268/D",
    "history": "You are given a tournament \u2014 complete directed graph. In one operation you can pick any vertex v and change the direction of all edges with v on one of the ends ( i. e all edges u \u2192 v change their orientation to v \u2192 u and vice versa) . You want to make the tournament strongly connected with the smallest possible number of such operations if it is possible. Also, if it is possible, you need to find the number of ways to make this number of operations to make graph strongly connected ( two ways are different if for some i vertex that we chose on i - th operation in one way is different from vertex that we chose on i - th operation in another way) . You only need to find this value modulo 998 244 353 .",
    "input": "The first line of input contains one integer n ( 3 \u2264 n \u2264 2000 ) : the number of vertices in the tournament. Following n lines contain a description of the given tournament, each of them contains a binary string of length n . If j - th character of i - th string is equal to ' 1' , then the graph has an edge i \u2192 j . It is guaranteed that there are no edges i \u2192 i and the graph has exactly one edge among i \u2192 j and j \u2192 i for different i and j .",
    "output": "If it is not possible to convert tournament to strongly connected with the given operations, output \" - 1\" . Otherwise, output two integers: the smallest number of operations that you need to make the given graph strongly connected and the number of ways to do this number of operations to make graph strongly connected, modulo 998 244 353 .",
    "note": "",
    "topics": [
      "brute force",
      "divide and conquer",
      "graphs",
      "math"
    ],
    "id": "1268D"
  },
  {
    "title": "Domino for Young",
    "url": "https://codeforces.com/problemset/problem/1268/B",
    "history": "You are given a Young diagram. Given diagram is a histogram with n columns of lengths a_ 1, a_ 2, . . . , a_ n ( a_ 1 \u2265 a_ 2 \u2265. . . \u2265 a_ n \u2265 1 ) . Young diagram for a= [ 3, 2, 2, 2, 1] . Your goal is to find the largest number of non- overlapping dominos that you can draw inside of this histogram, a domino is a 1 \u00d7 2 or 2 \u00d7 1 rectangle.",
    "input": "The first line of input contain one integer n ( 1 \u2264 n \u2264 300 000 ) : the number of columns in the given histogram. The next line of input contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 300 000, a_ i \u2265 a_ i+ 1 ) : the lengths of columns.",
    "output": "Output one integer: the largest number of non- overlapping dominos that you can draw inside of the given Young diagram.",
    "note": "Some of the possible solutions for the example:",
    "topics": [
      "dp",
      "greedy",
      "math"
    ],
    "id": "1268B"
  },
  {
    "title": "Key Storage",
    "url": "https://codeforces.com/problemset/problem/1267/K",
    "history": "Karl is developing a key storage service. Each user has a positive integer key. Karl knows that storing keys in plain text is bad practice. So, instead of storing a key, he decided to store a fingerprint of a key. However, using some existing fingerprint algorithm looked too boring to him, so he invented his own one. Karl' s fingerprint is calculated by the following process: divide the given integer by 2, then divide the result by 3, then divide the result by 4, and so on, until we get a result that equals zero ( we are speaking about integer division each time) . The fingerprint is defined as the multiset of the remainders of these divisions. For example, this is how Karl' s fingerprint algorithm is applied to the key 11: 11 divided by 2 has remainder 1 and result 5, then 5 divided by 3 has remainder 2 and result 1, and 1 divided by 4 has remainder 1 and result 0. Thus, the key 11 produces the sequence of remainders [ 1, 2, 1] and has the fingerprint multiset { 1, 1, 2} . Ksenia wants to prove that Karl' s fingerprint algorithm is not very good. For example, she found that both keys 178800 and 123456 produce the fingerprint of { 0, 0, 0, 0, 2, 3, 3, 4} . Thus, users are at risk of fingerprint collision with some commonly used and easy to guess keys like 123456. Ksenia wants to make her words more persuasive. She wants to calculate the number of other keys that have the same fingerprint as the keys in the given list of some commonly used keys. Your task is to help her.",
    "input": "The first line contains an integer t ( 1 \u2264 t \u2264 50 000 ) \u2014 the number of commonly used keys to examine. Each of the next t lines contains one integer k_ i ( 1 \u2264 k_ i \u2264 10^ 18 ) \u2014 the key itself.",
    "output": "For each of the keys print one integer \u2014 the number of other keys that have the same fingerprint.",
    "note": "The other key with the same fingerprint as 11 is 15. 15 produces a sequence of remainders [ 1, 1, 2] . So both numbers have the fingerprint multiset { 1, 1, 2} .",
    "topics": [
      "combinatorics",
      "math"
    ],
    "id": "1267K"
  },
  {
    "title": "Just Arrange the Icons",
    "url": "https://codeforces.com/problemset/problem/1267/J",
    "history": "BerPhone X is almost ready for release with n applications being preinstalled on the phone. A category of an application characterizes a genre or a theme of this application ( like \" game\" , \" business\" , or \" education\" ) . The categories are given as integers between 1 and n , inclusive; the i - th application has category c_ i . You can choose m \u2014 the number of screens and s \u2014 the size of each screen. You need to fit all n icons of the applications ( one icon representing one application) meeting the following requirements: On each screen, all the icons must belong to applications of the same category ( but different screens can contain icons of applications of the same category) ; Each screen must be either completely filled with icons ( the number of icons on the screen is equal to s ) or almost filled with icons ( the number of icons is equal to s- 1 ) . Your task is to find the minimal possible number of screens m .",
    "input": "The first line contains an integer t ( 1 \u2264 t \u2264 10 000 ) \u2014 the number of test cases in the input. Then t test cases follow. The first line of each test case contains an integer n ( 1 \u2264 n \u2264 2\u00b710^ 6 ) \u2014 the number of the icons. The second line contains n integers c_ 1, c_ 2, . . . , c_ n ( 1 \u2264 c_ i \u2264 n ) , where c_ i is the category of the i - th application. It is guaranteed that the sum of the values of n for all test cases in the input does not exceed 2\u00b710^ 6 .",
    "output": "Print t integers \u2014 the answers to the given test cases in the order they follow in the input. The answer to a test case is an integer m \u2014 the minimum number of screens on which all n icons can be placed satisfying the given requirements.",
    "note": "In the first test case of the example, all the icons can be placed on three screens of size 4 : a screen with 4 icons of the category 1 , a screen with 3 icons of the category 1 , and a screen with 4 icons of the category 5 .",
    "topics": [
      "greedy",
      "implementation",
      "math"
    ],
    "id": "1267J"
  },
  {
    "title": "Game Relics",
    "url": "https://codeforces.com/problemset/problem/1267/G",
    "history": "Esports is a form of competitive sports using video games. Dota 2 is one of the most popular competitive video games in Esports. Recently, a new video game Dota 3 was released. In Dota 3 a player can buy some relics for their hero. Relics are counters that track hero' s actions and statistics in a game. Gloria likes to play Dota 3, so she wants to buy all n available relics for her favorite hero. Relics can be bought using an in- game currency called shards. Each relic has its own price \u2014 c_ i shards for the i - th relic. A player can buy a relic using one of the following options: Pay c_ i shards to buy the i - th relic; Pay x shards and randomly get one of all n relics. The probability of getting a relic is the same for all n relics. If a duplicate relic is received, then the relic is recycled and x/ 2 shards are given back to the player. Gloria wants to buy all n relics. Help her minimize the expected number of shards she spends to buy all the relics.",
    "input": "The first line contains two integers n and x ( 1 \u2264 n \u2264 100 ; 1 \u2264 x \u2264 10 000 ) \u2014 the number of relics and the cost to receive a random relic. The second line consists of n integers c_ 1, c_ 2, . . . , c_ n ( x \u2264 c_ i \u2264 10 000 ; \u2211c_ i\u2264 10 000 ) \u2014 the prices of n relics.",
    "output": "Print a single real number \u2014 the minimum expected number of shards that Gloria must spend to buy all the relics. The absolute or relative error should not exceed 10^ - 9 .",
    "note": "In the first example, the optimal strategy is to randomly get one of the two relics paying 20 shards. Then there are two scenarios. The first one happens if Gloria receives the first relic. Then she keeps getting random relics until she obtains the second relic. The expected number of shards to spend in this scenario is 20 + 30 = 50 . In the second scenario, Gloria initially gets the second relic. Then it is better to buy the first relic for 25 shards, so the expected number of shards to spend in this scenario is 20 + 25 = 45 . Thus, the expected number of shards to spend is 50 + 45/ 2 = 47. 5 .",
    "topics": [
      "math",
      "probabilities"
    ],
    "id": "1267G"
  },
  {
    "title": "Red-Blue Graph",
    "url": "https://codeforces.com/problemset/problem/1266/H",
    "history": "There is a directed graph on n vertices numbered 1 through n where each vertex ( except n ) has two outgoing arcs, red and blue. At any point in time, exactly one of the arcs is active for each vertex. Initially, all blue arcs are active and there is a token located at vertex 1 . In one second, the vertex with token first switches its active arcs \u2014 the inactive arc becomes active and vice versa. Then, the token is moved along the active arc. When the token reaches the vertex n , it stops. It is guaranteed that n is reachable via arcs from every vertex. You are given q queries. Each query contains a state of the graph \u2014 a pair ( v, s) of the following form: v is the vertex where the token is currently located; s is a string consisting of n - 1 characters. The i - th character corresponds to the color of the active edge leading from the i - th vertex ( the character is ' R' if red arc is active, otherwise the character is ' B' ) . For each query, determine whether the given state is reachable from the initial state and the first time this configuration appears. Note that the two operations ( change active arc and traverse it) are atomic \u2014 a state is not considered reached if it appears after changing the active arc but before traversing it.",
    "input": "The first line contains a single integer n ( 2 \u2264 n \u2264 58 ) \u2014 the number of vertices. n- 1 lines follow, i - th of contains two space separated integers b_ i and r_ i ( 1 \u2264 b_ i, r_ i \u2264 n ) representing a blue arc ( i, b_ i) and red arc ( i, r_ i) , respectively. It is guaranteed that vertex n is reachable from every vertex. The next line contains a single integer q ( 1 \u2264 q \u2264 5000 ) \u2014 the number of queries. Then q lines with queries follow. The j - th of these lines contains an integer v ( 1 \u2264 v < n ) and a string s of length n- 1 consiting only of characters ' R' and ' B' . The i - th of these characters is ' R' if the red arc going from i is active and ' B' otherwise.",
    "output": "Output q lines, each containing answer to a single query. If the state in the i - th query is unreachable, output the integer - 1 . Otherwise, output t_ i \u2014 the first time when the state appears ( measured in seconds, starting from the initial state of the graph which appears in time 0 ) .",
    "note": "The graph in the first example is depticed in the figure below. The first 19 queries denote the journey of the token. On the 19 - th move the token would reach the vertex 6 . The last two queries show states that are unreachable.",
    "topics": [
      "dp",
      "graphs",
      "math",
      "matrices",
      "meet-in-the-middle"
    ],
    "id": "1266H"
  },
  {
    "title": "Decreasing Debts",
    "url": "https://codeforces.com/problemset/problem/1266/D",
    "history": "There are n people in this world, conveniently numbered 1 through n . They are using burles to buy goods and services. Occasionally, a person might not have enough currency to buy what he wants or needs, so he borrows money from someone else, with the idea that he will repay the loan later with interest. Let d( a, b) denote the debt of a towards b , or 0 if there is no such debt. Sometimes, this becomes very complex, as the person lending money can run into financial troubles before his debtor is able to repay his debt, and finds himself in the need of borrowing money. When this process runs for a long enough time, it might happen that there are so many debts that they can be consolidated. There are two ways this can be done: Let d( a, b) > 0 and d( c, d) > 0 such that a = \u0338 c or b = \u0338 d . We can decrease the d( a, b) and d( c, d) by z and increase d( c, b) and d( a, d) by z , where 0 < z \u2264min( d( a, b) , d( c, d) ) . Let d( a, a) > 0 . We can set d( a, a) to 0 . The total debt is defined as the sum of all debts: \u03a3_ d = \u2211_ a, b d( a, b) Your goal is to use the above rules in any order any number of times, to make the total debt as small as possible. Note that you don' t have to minimise the number of non- zero debts, only the total debt.",
    "input": "The first line contains two space separated integers n ( 1 \u2264 n \u2264 10^ 5 ) and m ( 0 \u2264 m \u2264 3\u00b7 10^ 5 ) , representing the number of people and the number of debts, respectively. m lines follow, each of which contains three space separated integers u_ i , v_ i ( 1 \u2264 u_ i, v_ i \u2264 n, u_ i = \u0338 v_ i ) , d_ i ( 1 \u2264 d_ i \u2264 10^ 9 ) , meaning that the person u_ i borrowed d_ i burles from person v_ i .",
    "output": "On the first line print an integer m' ( 0 \u2264 m' \u2264 3\u00b7 10^ 5 ) , representing the number of debts after the consolidation. It can be shown that an answer always exists with this additional constraint. After that print m' lines, i - th of which contains three space separated integers u_ i, v_ i, d_ i , meaning that the person u_ i owes the person v_ i exactly d_ i burles. The output must satisfy 1 \u2264 u_ i, v_ i \u2264 n , u_ i = \u0338 v_ i and 0 < d_ i \u2264 10^ 18 . For each pair i = \u0338 j , it should hold that u_ i = \u0338 u_ j or v_ i = \u0338 v_ j . In other words, each pair of people can be included at most once in the output.",
    "note": "In the first example the optimal sequence of operations can be the following: Perform an operation of the first type with a = 1 , b = 2 , c = 2 , d = 3 and z = 5 . The resulting debts are: d( 1, 2) = 5 , d( 2, 2) = 5 , d( 1, 3) = 5 , all other debts are 0 ; Perform an operation of the second type with a = 2 . The resulting debts are: d( 1, 2) = 5 , d( 1, 3) = 5 , all other debts are 0 . In the second example the optimal sequence of operations can be the following: Perform an operation of the first type with a = 1 , b = 2 , c = 3 , d = 1 and z = 10 . The resulting debts are: d( 3, 2) = 10 , d( 2, 3) = 15 , d( 1, 1) = 10 , all other debts are 0 ; Perform an operation of the first type with a = 2 , b = 3 , c = 3 , d = 2 and z = 10 . The resulting debts are: d( 2, 2) = 10 , d( 3, 3) = 10 , d( 2, 3) = 5 , d( 1, 1) = 10 , all other debts are 0 ; Perform an operation of the second type with a = 2 . The resulting debts are: d( 3, 3) = 10 , d( 2, 3) = 5 , d( 1, 1) = 10 , all other debts are 0 ; Perform an operation of the second type with a = 3 . The resulting debts are: d( 2, 3) = 5 , d( 1, 1) = 10 , all other debts are 0 ; Perform an operation of the second type with a = 1 . The resulting debts are: d( 2, 3) = 5 , all other debts are 0 .",
    "topics": [
      "constructive algorithms",
      "data structures",
      "graphs",
      "greedy",
      "implementation",
      "math",
      "two pointers"
    ],
    "id": "1266D"
  },
  {
    "title": "Diverse Matrix",
    "url": "https://codeforces.com/problemset/problem/1266/C",
    "history": "Let a be a matrix of size r \u00d7 c containing positive integers, not necessarily distinct. Rows of the matrix are numbered from 1 to r , columns are numbered from 1 to c . We can construct an array b consisting of r + c integers as follows: for each i \u2208 [ 1, r] , let b_ i be the greatest common divisor of integers in the i - th row, and for each j \u2208 [ 1, c] let b_ r+ j be the greatest common divisor of integers in the j - th column. We call the matrix diverse if all r + c numbers b_ k ( k \u2208 [ 1, r + c] ) are pairwise distinct. The magnitude of a matrix equals to the maximum of b_ k . For example, suppose we have the following matrix: [ 2 9 7; 4 144 84 ] We construct the array b : b_ 1 is the greatest common divisor of 2 , 9 , and 7 , that is 1 ; b_ 2 is the greatest common divisor of 4 , 144 , and 84 , that is 4 ; b_ 3 is the greatest common divisor of 2 and 4 , that is 2 ; b_ 4 is the greatest common divisor of 9 and 144 , that is 9 ; b_ 5 is the greatest common divisor of 7 and 84 , that is 7 . So b = [ 1, 4, 2, 9, 7] . All values in this array are distinct, so the matrix is diverse. The magnitude is equal to 9 . For a given r and c , find a diverse matrix that minimises the magnitude. If there are multiple solutions, you may output any of them. If there are no solutions, output a single integer 0 .",
    "input": "The only line in the input contains two space separated integers r and c ( 1 \u2264 r, c \u2264 500 ) \u2014 the number of rows and the number of columns of the matrix to be found.",
    "output": "If there is no solution, output a single integer 0 . Otherwise, output r rows. The i - th of them should contain c space- separated integers, the j - th of which is a_ i, j \u2014 the positive integer in the i - th row and j - th column of a diverse matrix minimizing the magnitude. Furthermore, it must hold that 1 \u2264 a_ i, j\u2264 10^ 9 . It can be shown that if a solution exists, there is also a solution with this additional constraint ( still having minimum possible magnitude) .",
    "note": "In the first example, the GCDs of rows are b_ 1 = 4 and b_ 2 = 1 , and the GCDs of columns are b_ 3 = 2 and b_ 4 = 3 . All GCDs are pairwise distinct and the maximum of them is 4 . Since the GCDs have to be distinct and at least 1 , it is clear that there are no diverse matrices of size 2 \u00d7 2 with magnitude smaller than 4 . In the second example, no matter what a_ 1, 1 is, b_ 1 = b_ 2 will always hold, so there are no diverse matrices.",
    "topics": [
      "constructive algorithms",
      "greedy",
      "math",
      "number theory"
    ],
    "id": "1266C"
  },
  {
    "title": "Dice Tower",
    "url": "https://codeforces.com/problemset/problem/1266/B",
    "history": "Bob is playing with 6 - sided dice. A net of such standard cube is shown below. He has an unlimited supply of these dice and wants to build a tower by stacking multiple dice on top of each other, while choosing the orientation of each dice. Then he counts the number of visible pips on the faces of the dice. For example, the number of visible pips on the tower below is 29 \u2014 the number visible on the top is 1 , from the south 5 and 3 , from the west 4 and 2 , from the north 2 and 4 and from the east 3 and 5 . The one at the bottom and the two sixes by which the dice are touching are not visible, so they are not counted towards total. Bob also has t favourite integers x_ i , and for every such integer his goal is to build such a tower that the number of visible pips is exactly x_ i . For each of Bob' s favourite integers determine whether it is possible to build a tower that has exactly that many visible pips.",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 1000 ) \u2014 the number of favourite integers of Bob. The second line contains t space- separated integers x_ i ( 1 \u2264 x_ i \u2264 10^ 18 ) \u2014 Bob' s favourite integers.",
    "output": "For each of Bob' s favourite integers, output \" YES\" if it is possible to build the tower, or \" NO\" otherwise ( quotes for clarity) .",
    "note": "The first example is mentioned in the problem statement. In the second example, one can build the tower by flipping the top dice from the previous tower. In the third example, one can use a single die that has 5 on top. The fourth example is impossible.",
    "topics": [
      "constructive algorithms",
      "math"
    ],
    "id": "1266B"
  },
  {
    "title": "Competitive Programmer",
    "url": "https://codeforces.com/problemset/problem/1266/A",
    "history": "Bob is a competitive programmer. He wants to become red, and for that he needs a strict training regime. He went to the annual meeting of grandmasters and asked n of them how much effort they needed to reach red. \" Oh, I just spent x_ i hours solving problems\" , said the i - th of them. Bob wants to train his math skills, so for each answer he wrote down the number of minutes ( 60 \u00b7 x_ i ) , thanked the grandmasters and went home. Bob could write numbers with leading zeroes \u2014 for example, if some grandmaster answered that he had spent 2 hours, Bob could write 000120 instead of 120 . Alice wanted to tease Bob and so she took the numbers Bob wrote down, and for each of them she did one of the following independently: rearranged its digits, or wrote a random number. This way, Alice generated n numbers, denoted y_ 1 , . . . , y_ n . For each of the numbers, help Bob determine whether y_ i can be a permutation of a number divisible by 60 ( possibly with leading zeroes) .",
    "input": "The first line contains a single integer n ( 1 \u2264 n \u2264 418 ) \u2014 the number of grandmasters Bob asked. Then n lines follow, the i - th of which contains a single integer y_ i \u2014 the number that Alice wrote down. Each of these numbers has between 2 and 100 digits ' 0' through ' 9' . They can contain leading zeroes.",
    "output": "Output n lines. For each i , output the following. If it is possible to rearrange the digits of y_ i such that the resulting number is divisible by 60 , output \" red\" ( quotes for clarity) . Otherwise, output \" cyan\" .",
    "note": "In the first example, there is one rearrangement that yields a number divisible by 60 , and that is 360 . In the second example, there are two solutions. One is 060 and the second is 600 . In the third example, there are 6 possible rearrangments: 025 , 052 , 205 , 250 , 502 , 520 . None of these numbers is divisible by 60 . In the fourth example, there are 3 rearrangements: 228 , 282 , 822 . In the fifth example, none of the 24 rearrangements result in a number divisible by 60 . In the sixth example, note that 000. . . 0 is a valid solution.",
    "topics": [
      "chinese remainder theorem",
      "math"
    ],
    "id": "1266A"
  },
  {
    "title": "Beautiful Mirrors",
    "url": "https://codeforces.com/problemset/problem/1265/E",
    "history": "Creatnx has n mirrors, numbered from 1 to n . Every day, Creatnx asks exactly one mirror \" Am I beautiful? \" . The i - th mirror will tell Creatnx that he is beautiful with probability p_ i/ 100 for all 1 \u2264 i \u2264 n . Creatnx asks the mirrors one by one, starting from the 1 - st mirror. Every day, if he asks i - th mirror, there are two possibilities: The i - th mirror tells Creatnx that he is beautiful. In this case, if i = n Creatnx will stop and become happy, otherwise he will continue asking the i+ 1 - th mirror next day; In the other case, Creatnx will feel upset. The next day, Creatnx will start asking from the 1 - st mirror again. You need to calculate the expected number of days until Creatnx becomes happy. This number should be found by modulo 998244353 . Formally, let M = 998244353 . It can be shown that the answer can be expressed as an irreducible fraction p/ q , where p and q are integers and q \u2261\u03380 M . Output the integer equal to p \u00b7 q^ - 1 M . In other words, output such an integer x that 0 \u2264 x < M and x \u00b7 q \u2261 p M .",
    "input": "The first line contains one integer n ( 1\u2264 n\u2264 2\u00b7 10^ 5 ) \u2014 the number of mirrors. The second line contains n integers p_ 1, p_ 2, . . . , p_ n ( 1 \u2264 p_ i \u2264 100 ) .",
    "output": "Print the answer modulo 998244353 in a single line.",
    "note": "In the first test, there is only one mirror and it tells, that Creatnx is beautiful with probability 1/ 2 . So, the expected number of days until Creatnx becomes happy is 2 .",
    "topics": [
      "data structures",
      "dp",
      "math",
      "probabilities"
    ],
    "id": "1265E"
  },
  {
    "title": "Beautiful Numbers",
    "url": "https://codeforces.com/problemset/problem/1265/B",
    "history": "You are given a permutation p= [ p_ 1, p_ 2, . . . , p_ n] of integers from 1 to n . Let' s call the number m ( 1 \u2264 m \u2264 n ) beautiful, if there exists two indices l, r ( 1 \u2264 l \u2264 r \u2264 n ) , such that the numbers [ p_ l, p_ l+ 1, . . . , p_ r] is a permutation of numbers 1, 2, . . . , m . For example, let p = [ 4, 5, 1, 3, 2, 6] . In this case, the numbers 1, 3, 5, 6 are beautiful and 2, 4 are not. It is because: if l = 3 and r = 3 we will have a permutation [ 1] for m = 1 ; if l = 3 and r = 5 we will have a permutation [ 1, 3, 2] for m = 3 ; if l = 1 and r = 5 we will have a permutation [ 4, 5, 1, 3, 2] for m = 5 ; if l = 1 and r = 6 we will have a permutation [ 4, 5, 1, 3, 2, 6] for m = 6 ; it is impossible to take some l and r , such that [ p_ l, p_ l+ 1, . . . , p_ r] is a permutation of numbers 1, 2, . . . , m for m = 2 and for m = 4 . You are given a permutation p= [ p_ 1, p_ 2, . . . , p_ n] . For all m ( 1 \u2264 m \u2264 n ) determine if it is a beautiful number or not.",
    "input": "The first line contains the only integer t ( 1 \u2264 t \u2264 1000 ) \u2014 the number of test cases in the input. The next lines contain the description of test cases. The first line of a test case contains a number n ( 1 \u2264 n \u2264 2 \u00b7 10^ 5 ) \u2014 the length of the given permutation p . The next line contains n integers p_ 1, p_ 2, . . . , p_ n ( 1 \u2264 p_ i \u2264 n , all p_ i are different) \u2014 the given permutation p . It is guaranteed, that the sum of n from all test cases in the input doesn' t exceed 2 \u00b7 10^ 5 .",
    "output": "Print t lines \u2014 the answers to test cases in the order they are given in the input. The answer to a test case is the string of length n , there the i - th character is equal to 1 if i is a beautiful number and is equal to 0 if i is not a beautiful number.",
    "note": "The first test case is described in the problem statement. In the second test case all numbers from 1 to 5 are beautiful: if l = 3 and r = 3 we will have a permutation [ 1] for m = 1 ; if l = 3 and r = 4 we will have a permutation [ 1, 2] for m = 2 ; if l = 2 and r = 4 we will have a permutation [ 3, 1, 2] for m = 3 ; if l = 2 and r = 5 we will have a permutation [ 3, 1, 2, 4] for m = 4 ; if l = 1 and r = 5 we will have a permutation [ 5, 3, 1, 2, 4] for m = 5 .",
    "topics": [
      "data structures",
      "implementation",
      "math",
      "two pointers"
    ],
    "id": "1265B"
  },
  {
    "title": "Everyone is a Winner!",
    "url": "https://codeforces.com/problemset/problem/1263/C",
    "history": "On the well- known testing system MathForces, a draw of n rating units is arranged. The rating will be distributed according to the following algorithm: if k participants take part in this event, then the n rating is evenly distributed between them and rounded to the nearest lower integer, At the end of the drawing, an unused rating may remain \u2014 it is not given to any of the participants. For example, if n = 5 and k = 3 , then each participant will recieve an 1 rating unit, and also 2 rating units will remain unused. If n = 5 , and k = 6 , then none of the participants will increase their rating. Vasya participates in this rating draw but does not have information on the total number of participants in this event. Therefore, he wants to know what different values of the rating increment are possible to get as a result of this draw and asks you for help. For example, if n= 5 , then the answer is equal to the sequence 0, 1, 2, 5 . Each of the sequence values ( and only them) can be obtained as \u230a n/ k \u230b for some positive integer k ( where \u230a x \u230b is the value of x rounded down) : 0 = \u230a 5/ 7 \u230b , 1 = \u230a 5/ 5 \u230b , 2 = \u230a 5/ 2 \u230b , 5 = \u230a 5/ 1 \u230b . Write a program that, for a given n , finds a sequence of all possible rating increments.",
    "input": "The first line contains integer number t ( 1 \u2264 t \u2264 10 ) \u2014 the number of test cases in the input. Then t test cases follow. Each line contains an integer n ( 1 \u2264 n \u2264 10^ 9 ) \u2014 the total number of the rating units being drawn.",
    "output": "Output the answers for each of t test cases. Each answer should be contained in two lines. In the first line print a single integer m \u2014 the number of different rating increment values that Vasya can get. In the following line print m integers in ascending order \u2014 the values of possible rating increments.",
    "note": "",
    "topics": [
      "binary search",
      "math",
      "meet-in-the-middle",
      "number theory"
    ],
    "id": "1263C"
  },
  {
    "title": "Sweet Problem",
    "url": "https://codeforces.com/problemset/problem/1263/A",
    "history": "You have three piles of candies: red, green and blue candies: the first pile contains only red candies and there are r candies in it, the second pile contains only green candies and there are g candies in it, the third pile contains only blue candies and there are b candies in it. Each day Tanya eats exactly two candies of different colors. She is free to choose the colors of eaten candies: the only restriction that she can' t eat two candies of the same color in a day. Find the maximal number of days Tanya can eat candies? Each day she needs to eat exactly two candies.",
    "input": "The first line contains integer t ( 1 \u2264 t \u2264 1000 ) \u2014 the number of test cases in the input. Then t test cases follow. Each test case is given as a separate line of the input. It contains three integers r , g and b ( 1 \u2264 r, g, b \u2264 10^ 8 ) \u2014 the number of red, green and blue candies, respectively.",
    "output": "Print t integers: the i - th printed integer is the answer on the i - th test case in the input.",
    "note": "In the first example, Tanya can eat candies for one day only. She can eat any pair of candies this day because all of them have different colors. In the second example, Tanya can eat candies for two days. For example, she can eat red and green candies on the first day, and green and blue candies on the second day. In the third example, Tanya can eat candies for two days. For example, she can eat red and green candies on the first day, and red and blue candies on the second day. Note, that two red candies will remain uneaten.",
    "topics": [
      "math"
    ],
    "id": "1263A"
  },
  {
    "title": "Xor-Set",
    "url": "https://codeforces.com/problemset/problem/1261/F",
    "history": "You are given two sets of integers: A and B . You need to output the sum of elements in the set C = { x | x = a \u2295 b, a \u2208 A, b \u2208 B} modulo 998244353 , where \u2295 denotes the bitwise XOR operation. Each number should be counted only once. For example, if A = { 2, 3} and B = { 2, 3} you should count integer 1 only once, despite the fact that you can get it as 3 \u2295 2 and as 2 \u2295 3 . So the answer for this case is equal to 1 + 0 = 1 . Let' s call a segment [ l; r] a set of integers { l, l+ 1, . . . , r} . The set A is given as a union of n_ A segments, the set B is given as a union of n_ B segments.",
    "input": "The first line contains a single integer n_ A ( 1 \u2264 n_ A \u2264 100 ) . The i - th of the next n_ A lines contains two integers l_ i and r_ i ( 1 \u2264 l_ i \u2264 r_ i \u2264 10^ 18 ) , describing a segment of values of set A . The next line contains a single integer n_ B ( 1 \u2264 n_ B \u2264 100 ) . The i - th of the next n_ B lines contains two integers l_ j and r_ j ( 1 \u2264 l_ j \u2264 r_ j \u2264 10^ 18 ) , describing a segment of values of set B . Note that segments in both sets may intersect.",
    "output": "Print one integer \u2014 the sum of all elements in set C = { x | x = a \u2295 b, a \u2208 A, b \u2208 B} modulo 998244353 .",
    "note": "In the second example, we can discover that the set C = { 0, 1, . . . , 15} , which means that all numbers between 0 and 15 can be represented as a \u2295 b .",
    "topics": [
      "bitmasks",
      "divide and conquer",
      "math"
    ],
    "id": "1261F"
  },
  {
    "title": "Infinite Fence",
    "url": "https://codeforces.com/problemset/problem/1260/C",
    "history": "You are a rebel leader and you are planning to start a revolution in your country. But the evil Government found out about your plans and set your punishment in the form of correctional labor. You must paint a fence which consists of 10^ 100 planks in two colors in the following way ( suppose planks are numbered from left to right from 0 ) : if the index of the plank is divisible by r ( such planks have indices 0 , r , 2r and so on) then you must paint it red; if the index of the plank is divisible by b ( such planks have indices 0 , b , 2b and so on) then you must paint it blue; if the index is divisible both by r and b you can choose the color to paint the plank; otherwise, you don' t need to paint the plank at all ( and it is forbidden to spent paint on it) . Furthermore, the Government added one additional restriction to make your punishment worse. Let' s list all painted planks of the fence in ascending order: if there are k consecutive planks with the same color in this list, then the Government will state that you failed the labor and execute you immediately. If you don' t paint the fence according to the four aforementioned conditions, you will also be executed. The question is: will you be able to accomplish the labor ( the time is not important) or the execution is unavoidable and you need to escape at all costs.",
    "input": "The first line contains single integer T ( 1 \u2264 T \u2264 1000 ) \u2014 the number of test cases. The next T lines contain descriptions of test cases \u2014 one per line. Each test case contains three integers r , b , k ( 1 \u2264 r, b \u2264 10^ 9 , 2 \u2264 k \u2264 10^ 9 ) \u2014 the corresponding coefficients.",
    "output": "Print T words \u2014 one per line. For each test case print REBEL ( case insensitive) if the execution is unavoidable or OBEY ( case insensitive) otherwise.",
    "note": "",
    "topics": [
      "greedy",
      "math",
      "number theory"
    ],
    "id": "1260C"
  },
  {
    "title": "Obtain Two Zeroes",
    "url": "https://codeforces.com/problemset/problem/1260/B",
    "history": "You are given two integers a and b . You may perform any number of operations on them ( possibly zero) . During each operation you should choose any positive integer x and set a : = a - x , b : = b - 2x or a : = a - 2x , b : = b - x . Note that you may choose different values of x in different operations. Is it possible to make a and b equal to 0 simultaneously? Your program should answer t independent test cases.",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 100 ) \u2014 the number of test cases. Then the test cases follow, each test case is represented by one line containing two integers a and b for this test case ( 0 \u2264 a, b \u2264 10^ 9 ) .",
    "output": "For each test case print the answer to it \u2014 YES if it is possible to make a and b equal to 0 simultaneously, and NO otherwise. You may print every letter in any case you want ( so, for example, the strings yEs, yes, Yes and YES will all be recognized as positive answer) .",
    "note": "In the first test case of the example two operations can be used to make both a and b equal to zero: choose x = 4 and set a : = a - x , b : = b - 2x . Then a = 6 - 4 = 2 , b = 9 - 8 = 1 ; choose x = 1 and set a : = a - 2x , b : = b - x . Then a = 2 - 2 = 0 , b = 1 - 1 = 0 .",
    "topics": [
      "binary search",
      "math"
    ],
    "id": "1260B"
  },
  {
    "title": "Heating",
    "url": "https://codeforces.com/problemset/problem/1260/A",
    "history": "Several days ago you bought a new house and now you are planning to start a renovation. Since winters in your region can be very cold you need to decide how to heat rooms in your house. Your house has n rooms. In the i - th room you can install at most c_ i heating radiators. Each radiator can have several sections, but the cost of the radiator with k sections is equal to k^ 2 burles. Since rooms can have different sizes, you calculated that you need at least sum_ i sections in total in the i - th room. For each room calculate the minimum cost to install at most c_ i radiators with total number of sections not less than sum_ i .",
    "input": "The first line contains single integer n ( 1 \u2264 n \u2264 1000 ) \u2014 the number of rooms. Each of the next n lines contains the description of some room. The i - th line contains two integers c_ i and sum_ i ( 1 \u2264 c_ i, sum_ i \u2264 10^ 4 ) \u2014 the maximum number of radiators and the minimum total number of sections in the i - th room, respectively.",
    "output": "For each room print one integer \u2014 the minimum possible cost to install at most c_ i radiators with total number of sections not less than sum_ i .",
    "note": "In the first room, you can install only one radiator, so it' s optimal to use the radiator with sum_ 1 sections. The cost of the radiator is equal to ( 10^ 4) ^ 2 = 10^ 8 . In the second room, you can install up to 10^ 4 radiators, but since you need only one section in total, it' s optimal to buy one radiator with one section. In the third room, there 7 variants to install radiators: [ 6, 0] , [ 5, 1] , [ 4, 2] , [ 3, 3] , [ 2, 4] , [ 1, 5] , [ 0, 6] . The optimal variant is [ 3, 3] and it costs 3^ 2+ 3^ 2 = 18 .",
    "topics": [
      "math"
    ],
    "id": "1260A"
  },
  {
    "title": "Divisor Set",
    "url": "https://codeforces.com/problemset/problem/1257/G",
    "history": "You are given an integer x represented as a product of n its prime divisors p_ 1 \u00b7 p_ 2, \u00b7. . . \u00b7 p_ n . Let S be the set of all positive integer divisors of x ( including 1 and x itself) . We call a set of integers D good if ( and only if) there is no pair a \u2208 D , b \u2208 D such that a b and a divides b . Find a good subset of S with maximum possible size. Since the answer can be large, print the size of the subset modulo 998244353 .",
    "input": "The first line contains the single integer n ( 1 \u2264 n \u2264 2 \u00b7 10^ 5 ) \u2014 the number of prime divisors in representation of x . The second line contains n integers p_ 1, p_ 2, . . . , p_ n ( 2 \u2264 p_ i \u2264 3 \u00b7 10^ 6 ) \u2014 the prime factorization of x .",
    "output": "Print the maximum possible size of a good subset modulo 998244353 .",
    "note": "In the first sample, x = 2999999 \u00b7 43 \u00b7 2999957 and one of the maximum good subsets is { 43, 2999957, 2999999 } . In the second sample, x = 2 \u00b7 3 \u00b7 2 \u00b7 3 \u00b7 2 \u00b7 2 = 144 and one of the maximum good subsets is { 9, 12, 16 } .",
    "topics": [
      "divide and conquer",
      "fft",
      "greedy",
      "math",
      "number theory"
    ],
    "id": "1257G"
  },
  {
    "title": "Magic Stick",
    "url": "https://codeforces.com/problemset/problem/1257/B",
    "history": "Recently Petya walked in the forest and found a magic stick. Since Petya really likes numbers, the first thing he learned was spells for changing numbers. So far, he knows only two spells that can be applied to a positive integer: If the chosen number a is even, then the spell will turn it into 3a/ 2 ; If the chosen number a is greater than one, then the spell will turn it into a- 1 . Note that if the number is even and greater than one, then Petya can choose which spell to apply. Petya now has only one number x . He wants to know if his favorite number y can be obtained from x using the spells he knows. The spells can be used any number of times in any order. It is not required to use spells, Petya can leave x as it is.",
    "input": "The first line contains single integer T ( 1 \u2264 T \u2264 10^ 4 ) \u2014 the number of test cases. Each test case consists of two lines. The first line of each test case contains two integers x and y ( 1 \u2264 x, y \u2264 10^ 9 ) \u2014 the current number and the number that Petya wants to get.",
    "output": "For the i - th test case print the answer on it \u2014 YES if Petya can get the number y from the number x using known spells, and NO otherwise. You may print every letter in any case you want ( so, for example, the strings yEs, yes, Yes and YES will all be recognized as positive answer) .",
    "note": "",
    "topics": [
      "math"
    ],
    "id": "1257B"
  },
  {
    "title": "Two Rival Students",
    "url": "https://codeforces.com/problemset/problem/1257/A",
    "history": "You are the gym teacher in the school. There are n students in the row. And there are two rivalling students among them. The first one is in position a , the second in position b . Positions are numbered from 1 to n from left to right. Since they are rivals, you want to maximize the distance between them. If students are in positions p and s respectively, then distance between them is | p - s| . You can do the following operation at most x times: choose two adjacent ( neighbouring) students and swap them. Calculate the maximum distance between two rivalling students after at most x swaps.",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 100 ) \u2014 the number of test cases. The only line of each test case contains four integers n , x , a and b ( 2 \u2264 n \u2264 100 , 0 \u2264 x \u2264 100 , 1 \u2264 a, b \u2264 n , a = \u0338 b ) \u2014 the number of students in the row, the number of swaps which you can do, and positions of first and second rivaling students respectively.",
    "output": "For each test case print one integer \u2014 the maximum distance between two rivaling students which you can obtain.",
    "note": "In the first test case you can swap students in positions 3 and 4 . And then the distance between the rivals is equal to | 4 - 2| = 2 . In the second test case you don' t have to swap students. In the third test case you can' t swap students.",
    "topics": [
      "greedy",
      "math"
    ],
    "id": "1257A"
  },
  {
    "title": "Payment Without Change",
    "url": "https://codeforces.com/problemset/problem/1256/A",
    "history": "You have a coins of value n and b coins of value 1 . You always pay in exact change, so you want to know if there exist such x and y that if you take x ( 0 \u2264 x \u2264 a ) coins of value n and y ( 0 \u2264 y \u2264 b ) coins of value 1 , then the total value of taken coins will be S . You have to answer q independent test cases.",
    "input": "The first line of the input contains one integer q ( 1 \u2264 q \u2264 10^ 4 ) \u2014 the number of test cases. Then q test cases follow. The only line of the test case contains four integers a , b , n and S ( 1 \u2264 a, b, n, S \u2264 10^ 9 ) \u2014 the number of coins of value n , the number of coins of value 1 , the value n and the required total value.",
    "output": "For the i - th test case print the answer on it \u2014 YES ( without quotes) if there exist such x and y that if you take x coins of value n and y coins of value 1 , then the total value of taken coins will be S , and NO otherwise. You may print every letter in any case you want ( so, for example, the strings yEs, yes, Yes and YES will all be recognized as positive answer) .",
    "note": "",
    "topics": [
      "math"
    ],
    "id": "1256A"
  },
  {
    "title": "Changing Volume",
    "url": "https://codeforces.com/problemset/problem/1255/A",
    "history": "Bob watches TV every day. He always sets the volume of his TV to b . However, today he is angry to find out someone has changed the volume to a . Of course, Bob has a remote control that can change the volume. There are six buttons ( - 5, - 2, - 1, + 1, + 2, + 5 ) on the control, which in one press can either increase or decrease the current volume by 1 , 2 , or 5 . The volume can be arbitrarily large, but can never be negative. In other words, Bob cannot press the button if it causes the volume to be lower than 0 . As Bob is so angry, he wants to change the volume to b using as few button presses as possible. However, he forgets how to do such simple calculations, so he asks you for help. Write a program that given a and b , finds the minimum number of presses to change the TV volume from a to b .",
    "input": "Each test contains multiple test cases. The first line contains the number of test cases T ( 1 \u2264 T \u2264 1 000 ) . Then the descriptions of the test cases follow. Each test case consists of one line containing two integers a and b ( 0 \u2264 a, b \u2264 10^ 9 ) \u2014 the current volume and Bob' s desired volume, respectively.",
    "output": "For each test case, output a single integer \u2014 the minimum number of presses to change the TV volume from a to b . If Bob does not need to change the volume ( i. e. a= b ) , then print 0 .",
    "note": "In the first example, Bob can press the - 2 button twice to reach 0 . Note that Bob can not press - 5 when the volume is 4 since it will make the volume negative. In the second example, one of the optimal ways for Bob is to press the + 5 twice, then press - 1 once. In the last example, Bob can press the + 5 once, then press + 1 .",
    "topics": [
      "math"
    ],
    "id": "1255A"
  },
  {
    "title": "Point Ordering",
    "url": "https://codeforces.com/problemset/problem/1254/C",
    "history": "This is an interactive problem. Khanh has n points on the Cartesian plane, denoted by a_ 1, a_ 2, . . . , a_ n . All points' coordinates are integers between - 10^ 9 and 10^ 9 , inclusive. No three points are collinear. He says that these points are vertices of a convex polygon; in other words, there exists a permutation p_ 1, p_ 2, . . . , p_ n of integers from 1 to n such that the polygon a_ p_ 1 a_ p_ 2. . . a_ p_ n is convex and vertices are listed in counter- clockwise order. Khanh gives you the number n , but hides the coordinates of his points. Your task is to guess the above permutation by asking multiple queries. In each query, you give Khanh 4 integers t , i , j , k ; where either t = 1 or t = 2 ; and i , j , k are three distinct indices from 1 to n , inclusive. In response, Khanh tells you: if t = 1 , the area of the triangle a_ ia_ ja_ k multiplied by 2 . if t = 2 , the sign of the cross product of two vectors a_ ia_ j and a_ ia_ k . Recall that the cross product of vector a = ( x_ a, y_ a) and vector b = ( x_ b, y_ b) is the integer x_ a \u00b7 y_ b - x_ b \u00b7 y_ a . The sign of a number is 1 it it is positive, and - 1 otherwise. It can be proven that the cross product obtained in the above queries can not be 0 . You can ask at most 3 \u00b7 n queries. Please note that Khanh fixes the coordinates of his points and does not change it while answering your queries. You do not need to guess the coordinates. In your permutation a_ p_ 1a_ p_ 2. . . a_ p_ n , p_ 1 should be equal to 1 and the indices of vertices should be listed in counter- clockwise order. InteractionYou start the interaction by reading n ( 3 \u2264 n \u2264 1 000 ) \u2014 the number of vertices. To ask a query, write 4 integers t , i , j , k ( 1 \u2264 t \u2264 2 , 1 \u2264 i, j, k \u2264 n ) in a separate line. i , j and k should be distinct. Then read a single integer to get the answer to this query, as explained above. It can be proven that the answer of a query is always an integer. When you find the permutation, write a number 0 . Then write n integers p_ 1, p_ 2, . . . , p_ n in the same line. After printing a query do not forget to output end of line and flush the output. Otherwise, you will get Idleness limit exceeded. To do this, use: fflush( stdout) or cout. flush( ) in C+ + ; System. out. flush( ) in Java; flush( output) in Pascal; stdout. flush( ) in Python; see documentation for other languages. Hack formatTo hack, use the following format: The first line contains an integer n ( 3 \u2264 n \u2264 1 000 ) \u2014 the number of vertices. The i - th of the next n lines contains two integers x_ i and y_ i ( - 10^ 9 \u2264 x_ i, y_ i \u2264 10^ 9 ) \u2014 the coordinate of the point a_ i .",
    "input": "",
    "output": "",
    "note": "The image below shows the hidden polygon in the example: The interaction in the example goes as below: Contestant reads n = 6 . Contestant asks a query with t = 1 , i = 1 , j = 4 , k = 6 . Jury answers 15 . The area of the triangle A_ 1A_ 4A_ 6 is 7. 5 . Note that the answer is two times the area of the triangle. Contestant asks a query with t = 2 , i = 1 , j = 5 , k = 6 . Jury answers - 1 . The cross product of A_ 1A_ 5 = ( 2, 2) and A_ 1A_ 6 = ( 4, 1) is - 2 . The sign of - 2 is - 1 . Contestant asks a query with t = 2 , i = 2 , j = 1 , k = 4 . Jury answers 1 . The cross product of A_ 2A_ 1 = ( - 5, 2) and A_ 2A_ 4 = ( - 2, - 1) is 1 . The sign of 1 is 1 . Contestant says that the permutation is ( 1, 3, 4, 2, 6, 5) .",
    "topics": [
      "constructive algorithms",
      "geometry",
      "interactive",
      "math"
    ],
    "id": "1254C"
  },
  {
    "title": "Send Boxes to Alice (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1254/B2",
    "history": "This is the harder version of the problem. In this version, 1 \u2264 n \u2264 10^ 6 and 0 \u2264 a_ i \u2264 10^ 6 . You can hack this problem if you locked it. But you can hack the previous problem only if you locked both problemsChristmas is coming, and our protagonist, Bob, is preparing a spectacular present for his long- time best friend Alice. This year, he decides to prepare n boxes of chocolate, numbered from 1 to n . Initially, the i - th box contains a_ i chocolate pieces. Since Bob is a typical nice guy, he will not send Alice n empty boxes. In other words, at least one of a_ 1, a_ 2, . . . , a_ n is positive. Since Alice dislikes coprime sets, she will be happy only if there exists some integer k > 1 such that the number of pieces in each box is divisible by k . Note that Alice won' t mind if there exists some empty boxes. Charlie, Alice' s boyfriend, also is Bob' s second best friend, so he decides to help Bob by rearranging the chocolate pieces. In one second, Charlie can pick up a piece in box i and put it into either box i- 1 or box i+ 1 ( if such boxes exist) . Of course, he wants to help his friend as quickly as possible. Therefore, he asks you to calculate the minimum number of seconds he would need to make Alice happy.",
    "input": "The first line contains a single integer n ( 1 \u2264 n \u2264 10^ 6 ) \u2014 the number of chocolate boxes. The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 0 \u2264 a_ i \u2264 10^ 6 ) \u2014 the number of chocolate pieces in the i - th box. It is guaranteed that at least one of a_ 1, a_ 2, . . . , a_ n is positive.",
    "output": "If there is no way for Charlie to make Alice happy, print - 1 . Otherwise, print a single integer x \u2014 the minimum number of seconds for Charlie to help Bob make Alice happy.",
    "note": "In the first example, Charlie can move all chocolate pieces to the second box. Each box will be divisible by 17 . In the second example, Charlie can move a piece from box 2 to box 3 and a piece from box 4 to box 5 . Each box will be divisible by 3 . In the third example, each box is already divisible by 5 . In the fourth example, since Charlie has no available move, he cannot help Bob make Alice happy.",
    "topics": [
      "constructive algorithms",
      "greedy",
      "math",
      "number theory",
      "ternary search",
      "two pointers"
    ],
    "id": "1254B2"
  },
  {
    "title": "Send Boxes to Alice (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1254/B1",
    "history": "This is the easier version of the problem. In this version, 1 \u2264 n \u2264 10^ 5 and 0 \u2264 a_ i \u2264 1 . You can hack this problem only if you solve and lock both problems. Christmas is coming, and our protagonist, Bob, is preparing a spectacular present for his long- time best friend Alice. This year, he decides to prepare n boxes of chocolate, numbered from 1 to n . Initially, the i - th box contains a_ i chocolate pieces. Since Bob is a typical nice guy, he will not send Alice n empty boxes. In other words, at least one of a_ 1, a_ 2, . . . , a_ n is positive. Since Alice dislikes coprime sets, she will be happy only if there exists some integer k > 1 such that the number of pieces in each box is divisible by k . Note that Alice won' t mind if there exists some empty boxes. Charlie, Alice' s boyfriend, also is Bob' s second best friend, so he decides to help Bob by rearranging the chocolate pieces. In one second, Charlie can pick up a piece in box i and put it into either box i- 1 or box i+ 1 ( if such boxes exist) . Of course, he wants to help his friend as quickly as possible. Therefore, he asks you to calculate the minimum number of seconds he would need to make Alice happy.",
    "input": "The first line contains a single integer n ( 1 \u2264 n \u2264 10^ 5 ) \u2014 the number of chocolate boxes. The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 0 \u2264 a_ i \u2264 1 ) \u2014 the number of chocolate pieces in the i - th box. It is guaranteed that at least one of a_ 1, a_ 2, . . . , a_ n is positive.",
    "output": "If there is no way for Charlie to make Alice happy, print - 1 . Otherwise, print a single integer x \u2014 the minimum number of seconds for Charlie to help Bob make Alice happy.",
    "note": "",
    "topics": [
      "constructive algorithms",
      "greedy",
      "math",
      "number theory",
      "ternary search",
      "two pointers"
    ],
    "id": "1254B1"
  },
  {
    "title": "Sweets Eating",
    "url": "https://codeforces.com/problemset/problem/1253/C",
    "history": "Tsumugi brought n delicious sweets to the Light Music Club. They are numbered from 1 to n , where the i - th sweet has a sugar concentration described by an integer a_ i . Yui loves sweets, but she can eat at most m sweets each day for health reasons. Days are 1 - indexed ( numbered 1, 2, 3, . . . ) . Eating the sweet i at the d - th day will cause a sugar penalty of ( d \u00b7 a_ i) , as sweets become more sugary with time. A sweet can be eaten at most once. The total sugar penalty will be the sum of the individual penalties of each sweet eaten. Suppose that Yui chooses exactly k sweets, and eats them in any order she wants. What is the minimum total sugar penalty she can get? Since Yui is an undecided girl, she wants you to answer this question for every value of k between 1 and n .",
    "input": "The first line contains two integers n and m ( 1 \u2264 m \u2264 n \u2264 200 000 ) . The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 200 000 ) .",
    "output": "You have to output n integers x_ 1, x_ 2, . . . , x_ n on a single line, separed by spaces, where x_ k is the minimum total sugar penalty Yui can get if she eats exactly k sweets.",
    "note": "Let' s analyze the answer for k = 5 in the first example. Here is one of the possible ways to eat 5 sweets that minimize total sugar penalty: Day 1 : sweets 1 and 4 Day 2 : sweets 5 and 3 Day 3 : sweet 6 Total penalty is 1 \u00b7 a_ 1 + 1 \u00b7 a_ 4 + 2 \u00b7 a_ 5 + 2 \u00b7 a_ 3 + 3 \u00b7 a_ 6 = 6 + 4 + 8 + 6 + 6 = 30 . We can prove that it' s the minimum total sugar penalty Yui can achieve if she eats 5 sweets, hence x_ 5 = 30 .",
    "topics": [
      "dp",
      "greedy",
      "math",
      "sortings"
    ],
    "id": "1253C"
  },
  {
    "title": "Addition Robot",
    "url": "https://codeforces.com/problemset/problem/1252/K",
    "history": "Adding two numbers several times is a time- consuming task, so you want to build a robot. The robot should have a string S = S_ 1 S_ 2 . . . S_ N of N characters on its memory that represents addition instructions. Each character of the string, S_ i , is either ' A' or ' B' . You want to be able to give Q commands to the robot, each command is either of the following types: 1 L R . The robot should toggle all the characters of S_ i where L \u2264 i \u2264 R . Toggling a character means changing it to ' A' if it was previously ' B' , or changing it to ' B' if it was previously ' A' . 2 L R A B . The robot should call f( L, R, A, B) and return two integers as defined in the following pseudocode: function f( L, R, A, B) : FOR i from L to R if S[ i] = ' A' A = A + B else B = A + B return ( A, B) You want to implement the robot' s expected behavior.",
    "input": "Input begins with a line containing two integers: N Q ( 1 \u2264 N, Q \u2264 100 000 ) representing the number of characters in the robot' s memory and the number of commands, respectively. The next line contains a string S containing N characters ( each either ' A' or ' B' ) representing the initial string in the robot' s memory. The next Q lines each contains a command of the following types. 1 L R ( 1 \u2264 L \u2264 R \u2264 N ) 2 L R A B ( 1 \u2264 L \u2264 R \u2264 N ; 0 \u2264 A, B \u2264 10^ 9 ) There is at least one command of the second type.",
    "output": "For each command of the second type in the same order as input, output in a line two integers ( separated by a single space) , the value of A and B returned by f( L, R, A, B) , respectively. As this output can be large, you need to modulo the output by 1 000 000 007 .",
    "note": "Explanation for the sample input/ output # 1For the first command, calling f( L, R, A, B) causes the following: Initially, A = 1 and B = 1 . At the end of i = 1 , A = 2 and B = 1 . At the end of i = 2 , A = 2 and B = 3 . At the end of i = 3 , A = 5 and B = 3 . At the end of i = 4 , A = 8 and B = 3 . At the end of i = 5 , A = 11 and B = 3 . Therefore, f( L, R, A, B) will return ( 11, 3) . For the second command, string S will be updated to \" ABBBB\" . For the third command, the value of A will always be 0 and the value of B will always be 1 000 000 000 . Therefore, f( L, R, A, B) will return ( 0, 1 000 000 000) .",
    "topics": [
      "data structures",
      "math",
      "matrices"
    ],
    "id": "1252K"
  },
  {
    "title": "Divide The Students",
    "url": "https://codeforces.com/problemset/problem/1250/L",
    "history": "A group of students has recently been admitted to the Faculty of Computer Sciences at the Berland State University. Now the programming teacher wants to divide them into three subgroups for practice sessions. The teacher knows that a lot of programmers argue which language is the best. The teacher doesn' t want to hear any arguments in the subgroups, so she wants to divide the students into three subgroups so that no pair of students belonging to the same subgroup want to argue. To perform this division, the teacher asked each student which programming language he likes. There are a students who answered that they enjoy Assembler, b students stated that their favourite language is Basic, and c remaining students claimed that C+ + is the best programming language \u2014 and there was a large argument between Assembler fans and C+ + fans. Now, knowing that Assembler programmers and C+ + programmers can start an argument every minute, the teacher wants to divide the students into three subgroups so that every student belongs to exactly one subgroup, and there is no subgroup that contains at least one Assembler fan and at least one C+ + fan. Since teaching a lot of students can be difficult, the teacher wants the size of the largest subgroup to be minimum possible. Please help the teacher to calculate the minimum possible size of the largest subgroup!",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 5 ) \u2014 the number of test cases in the input. Then test cases follow. Each test case consists of one line containing three integers a , b and c ( 1 \u2264 a, b, c \u2264 1000 ) \u2014 the number of Assembler fans, Basic fans and C+ + fans, respectively.",
    "output": "For each test case print one integer \u2014 the minimum size of the largest subgroup if the students are divided in such a way that there is no subgroup that contains at least one Assembler fan and at least one C+ + fan simultaneously.",
    "note": "Explanation of the answers for the example 1 : The first subgroup contains 3 Assembler fans and 2 Basic fans, the second subgroup \u2014 5 C+ + fans, the third subgroup \u2014 2 C+ + fans and 3 Basic fans. The first subgroup contains 4 Assembler fans, the second subgroup \u2014 6 Basic fans, the third subgroup \u2014 2 Basic fans and 4 C+ + fans. The first subgroup contains all Assembler fans, the second subgroup \u2014 all Basic fans, the third subgroup \u2014 all C+ + fans. The first subgroup contains all Assembler fans, the second subgroup \u2014 all Basic fans, the third subgroup \u2014 all C+ + fans. The first subgroup contains 12 Assembler fans and 2 Basic fans, the second subgroup \u2014 1 Assembler fan and 13 Basic fans, the third subgroup \u2014 7 Basic fans and 7 C+ + fans.",
    "topics": [
      "binary search",
      "greedy",
      "math"
    ],
    "id": "1250L"
  },
  {
    "title": "Happy Birthday",
    "url": "https://codeforces.com/problemset/problem/1250/H",
    "history": "You have a set of birthday cake candles. Each of such candles represents a digit between 0 and 9 , inclusive. Example of birthday cake candles. Let' s denote the candle representing the digit d as d - candle. Your set contains c_ 0 instances of 0 - candles, c_ 1 instances of 1 - candles and so on. So, the total number of candles is c_ 0+ c_ 1+ . . . + c_ 9 . These digits are needed to wish your cat a happy birthday. For each birthday, starting with the first, you want to compose the age of the cat using the digits from the set. Since you light candles for a very short time, candles don' t have time to burn out. For this reason you can reuse candles an arbitrary number of times ( therefore your set of candles never changes) . For example, if you have one instance of each digit ( i. e. c_ 0= c_ 1= . . . = c_ 9= 1 ) , you can compose any number from 1 to 10 using this set, but you cannot compose 11 . You have to determine the first birthday, on which you cannot compose the age of the cat using the candles from your set. In other words, find the minimum number y such that all numbers from 1 to y- 1 can be composed by digits from your set, but y cannot be composed.",
    "input": "The first line contains an integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases in the input. The only line of each test case contains ten integer numbers c_ 0, c_ 1, . . . , c_ 9 ( 0 \u2264 c_ i \u2264 10^ 5 ) \u2014 the number of 0 - candles, 1 - candles, 2 - candles and so on. It is guaranteed that the sum of all c_ i in the input does not exceed 10^ 6 .",
    "output": "For each test case, output one integer in single line \u2014 the minimum age which cannot be composed by candles from your set. Please note that the age can be quite large ( it may exceed the standard 64- bit integer types in your programming language) .",
    "note": "",
    "topics": [
      "math"
    ],
    "id": "1250H"
  },
  {
    "title": "The Feast and the Bus",
    "url": "https://codeforces.com/problemset/problem/1250/B",
    "history": "Employees of JebTrains are on their way to celebrate the 256- th day of the year! There are n employees and k teams in JebTrains. Each employee is a member of some ( exactly one) team. All teams are numbered from 1 to k . You are given an array of numbers t_ 1, t_ 2, . . . , t_ n where t_ i is the i - th employee' s team number. JebTrains is going to rent a single bus to get employees to the feast. The bus will take one or more rides. A bus can pick up an entire team or two entire teams. If three or more teams take a ride together they may start a new project which is considered unacceptable. It' s prohibited to split a team, so all members of a team should take the same ride. It is possible to rent a bus of any capacity s . Such a bus can take up to s people on a single ride. The total cost of the rent is equal to s \u00b7 r burles where r is the number of rides. Note that it' s impossible to rent two or more buses. Help JebTrains to calculate the minimum cost of the rent, required to get all employees to the feast, fulfilling all the conditions above.",
    "input": "The first line contains two integers n and k ( 1 \u2264 n \u2264 5\u00b710^ 5, 1 \u2264 k \u2264 8000 ) \u2014 the number of employees and the number of teams in JebTrains. The second line contains a sequence of integers t_ 1, t_ 2, . . . , t_ n , where t_ i ( 1 \u2264 t_ i \u2264 k ) is the i - th employee' s team number. Every team contains at least one employee.",
    "output": "Print the minimum cost of the rent.",
    "note": "",
    "topics": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "math"
    ],
    "id": "1250B"
  },
  {
    "title": "Good Numbers (hard version)",
    "url": "https://codeforces.com/problemset/problem/1249/C2",
    "history": "The only difference between easy and hard versions is the maximum value of n . You are given a positive integer number n . You really love good numbers so you want to find the smallest good number greater than or equal to n . The positive integer is called good if it can be represented as a sum of distinct powers of 3 ( i. e. no duplicates of powers of 3 are allowed) . For example: 30 is a good number: 30 = 3^ 3 + 3^ 1 , 1 is a good number: 1 = 3^ 0 , 12 is a good number: 12 = 3^ 2 + 3^ 1 , but 2 is not a good number: you can' t represent it as a sum of distinct powers of 3 ( 2 = 3^ 0 + 3^ 0 ) , 19 is not a good number: you can' t represent it as a sum of distinct powers of 3 ( for example, the representations 19 = 3^ 2 + 3^ 2 + 3^ 0 = 3^ 2 + 3^ 1 + 3^ 1 + 3^ 1 + 3^ 0 are invalid) , 20 is also not a good number: you can' t represent it as a sum of distinct powers of 3 ( for example, the representation 20 = 3^ 2 + 3^ 2 + 3^ 0 + 3^ 0 is invalid) . Note, that there exist other representations of 19 and 20 as sums of powers of 3 but none of them consists of distinct powers of 3 . For the given positive integer n find such smallest m ( n \u2264 m ) that m is a good number. You have to answer q independent queries.",
    "input": "The first line of the input contains one integer q ( 1 \u2264 q \u2264 500 ) \u2014 the number of queries. Then q queries follow. The only line of the query contains one integer n ( 1 \u2264 n \u2264 10^ 18 ) .",
    "output": "For each query, print such smallest integer m ( where n \u2264 m ) that m is a good number.",
    "note": "",
    "topics": [
      "binary search",
      "greedy",
      "math",
      "meet-in-the-middle"
    ],
    "id": "1249C2"
  },
  {
    "title": "Books Exchange (hard version)",
    "url": "https://codeforces.com/problemset/problem/1249/B2",
    "history": "The only difference between easy and hard versions is constraints. There are n kids, each of them is reading a unique book. At the end of any day, the i - th kid will give his book to the p_ i - th kid ( in case of i = p_ i the kid will give his book to himself) . It is guaranteed that all values of p_ i are distinct integers from 1 to n ( i. e. p is a permutation) . The sequence p doesn' t change from day to day, it is fixed. For example, if n= 6 and p= [ 4, 6, 1, 3, 5, 2] then at the end of the first day the book of the 1 - st kid will belong to the 4 - th kid, the 2 - nd kid will belong to the 6 - th kid and so on. At the end of the second day the book of the 1 - st kid will belong to the 3 - th kid, the 2 - nd kid will belong to the 2 - th kid and so on. Your task is to determine the number of the day the book of the i - th child is returned back to him for the first time for every i from 1 to n . Consider the following example: p = [ 5, 1, 2, 4, 3] . The book of the 1 - st kid will be passed to the following kids: after the 1 - st day it will belong to the 5 - th kid, after the 2 - nd day it will belong to the 3 - rd kid, after the 3 - rd day it will belong to the 2 - nd kid, after the 4 - th day it will belong to the 1 - st kid. So after the fourth day, the book of the first kid will return to its owner. The book of the fourth kid will return to him for the first time after exactly one day. You have to answer q independent queries.",
    "input": "The first line of the input contains one integer q ( 1 \u2264 q \u2264 1000 ) \u2014 the number of queries. Then q queries follow. The first line of the query contains one integer n ( 1 \u2264 n \u2264 2 \u00b7 10^ 5 ) \u2014 the number of kids in the query. The second line of the query contains n integers p_ 1, p_ 2, . . . , p_ n ( 1 \u2264 p_ i \u2264 n , all p_ i are distinct, i. e. p is a permutation) , where p_ i is the kid which will get the book of the i - th kid. It is guaranteed that \u2211 n \u2264 2 \u00b7 10^ 5 ( sum of n over all queries does not exceed 2 \u00b7 10^ 5 ) .",
    "output": "For each query, print the answer on it: n integers a_ 1, a_ 2, . . . , a_ n , where a_ i is the number of the day the book of the i - th child is returned back to him for the first time in this query.",
    "note": "",
    "topics": [
      "dfs and similar",
      "dsu",
      "math"
    ],
    "id": "1249B2"
  },
  {
    "title": "Books Exchange (easy version)",
    "url": "https://codeforces.com/problemset/problem/1249/B1",
    "history": "The only difference between easy and hard versions is constraints. There are n kids, each of them is reading a unique book. At the end of any day, the i - th kid will give his book to the p_ i - th kid ( in case of i = p_ i the kid will give his book to himself) . It is guaranteed that all values of p_ i are distinct integers from 1 to n ( i. e. p is a permutation) . The sequence p doesn' t change from day to day, it is fixed. For example, if n= 6 and p= [ 4, 6, 1, 3, 5, 2] then at the end of the first day the book of the 1 - st kid will belong to the 4 - th kid, the 2 - nd kid will belong to the 6 - th kid and so on. At the end of the second day the book of the 1 - st kid will belong to the 3 - th kid, the 2 - nd kid will belong to the 2 - th kid and so on. Your task is to determine the number of the day the book of the i - th child is returned back to him for the first time for every i from 1 to n . Consider the following example: p = [ 5, 1, 2, 4, 3] . The book of the 1 - st kid will be passed to the following kids: after the 1 - st day it will belong to the 5 - th kid, after the 2 - nd day it will belong to the 3 - rd kid, after the 3 - rd day it will belong to the 2 - nd kid, after the 4 - th day it will belong to the 1 - st kid. So after the fourth day, the book of the first kid will return to its owner. The book of the fourth kid will return to him for the first time after exactly one day. You have to answer q independent queries.",
    "input": "The first line of the input contains one integer q ( 1 \u2264 q \u2264 200 ) \u2014 the number of queries. Then q queries follow. The first line of the query contains one integer n ( 1 \u2264 n \u2264 200 ) \u2014 the number of kids in the query. The second line of the query contains n integers p_ 1, p_ 2, . . . , p_ n ( 1 \u2264 p_ i \u2264 n , all p_ i are distinct, i. e. p is a permutation) , where p_ i is the kid which will get the book of the i - th kid.",
    "output": "For each query, print the answer on it: n integers a_ 1, a_ 2, . . . , a_ n , where a_ i is the number of the day the book of the i - th child is returned back to him for the first time in this query.",
    "note": "",
    "topics": [
      "dsu",
      "math"
    ],
    "id": "1249B1"
  },
  {
    "title": "Yet Another Dividing into Teams",
    "url": "https://codeforces.com/problemset/problem/1249/A",
    "history": "You are a coach of a group consisting of n students. The i - th student has programming skill a_ i . All students have distinct programming skills. You want to divide them into teams in such a way that: No two students i and j such that | a_ i - a_ j| = 1 belong to the same team ( i. e. skills of each pair of students in the same team have the difference strictly greater than 1 ) ; the number of teams is the minimum possible. You have to answer q independent queries.",
    "input": "The first line of the input contains one integer q ( 1 \u2264 q \u2264 100 ) \u2014 the number of queries. Then q queries follow. The first line of the query contains one integer n ( 1 \u2264 n \u2264 100 ) \u2014 the number of students in the query. The second line of the query contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 100 , all a_ i are distinct) , where a_ i is the programming skill of the i - th student.",
    "output": "For each query, print the answer on it \u2014 the minimum number of teams you can form if no two students i and j such that | a_ i - a_ j| = 1 may belong to the same team ( i. e. skills of each pair of students in the same team has the difference strictly greater than 1 )",
    "note": "In the first query of the example, there are n= 4 students with the skills a= [ 2, 10, 1, 20] . There is only one restriction here: the 1 - st and the 3 - th students can' t be in the same team ( because of | a_ 1 - a_ 3| = | 2- 1| = 1 ) . It is possible to divide them into 2 teams: for example, students 1 , 2 and 4 are in the first team and the student 3 in the second team. In the second query of the example, there are n= 2 students with the skills a= [ 3, 6] . It is possible to compose just a single team containing both students.",
    "topics": [
      "math"
    ],
    "id": "1249A"
  },
  {
    "title": "Grow The Tree",
    "url": "https://codeforces.com/problemset/problem/1248/B",
    "history": "Gardener Alexey teaches competitive programming to high school students. To congratulate Alexey on the Teacher' s Day, the students have gifted him a collection of wooden sticks, where every stick has an integer length. Now Alexey wants to grow a tree from them. The tree looks like a polyline on the plane, consisting of all sticks. The polyline starts at the point ( 0, 0) . While constructing the polyline, Alexey will attach sticks to it one by one in arbitrary order. Each stick must be either vertical or horizontal ( that is, parallel to OX or OY axis) . It is not allowed for two consecutive sticks to be aligned simultaneously horizontally or simultaneously vertically. See the images below for clarification. Alexey wants to make a polyline in such a way that its end is as far as possible from ( 0, 0) . Please help him to grow the tree this way. Note that the polyline defining the form of the tree may have self- intersections and self- touches, but it can be proved that the optimal answer does not contain any self- intersections or self- touches.",
    "input": "The first line contains an integer n ( 1 \u2264 n \u2264 100 000 ) \u2014 the number of sticks Alexey got as a present. The second line contains n integers a_ 1, . . . , a_ n ( 1 \u2264 a_ i \u2264 10 000 ) \u2014 the lengths of the sticks.",
    "output": "Print one integer \u2014 the square of the largest possible distance from ( 0, 0) to the tree end.",
    "note": "The following pictures show optimal trees for example tests. The squared distance in the first example equals 5 \u00b7 5 + 1 \u00b7 1 = 26 , and in the second example 4 \u00b7 4 + 2 \u00b7 2 = 20 .",
    "topics": [
      "greedy",
      "math",
      "sortings"
    ],
    "id": "1248B"
  },
  {
    "title": "Integer Points",
    "url": "https://codeforces.com/problemset/problem/1248/A",
    "history": "DLS and JLS are bored with a Math lesson. In order to entertain themselves, DLS took a sheet of paper and drew n distinct lines, given by equations y = x + p_ i for some distinct p_ 1, p_ 2, . . . , p_ n . Then JLS drew on the same paper sheet m distinct lines given by equations y = - x + q_ i for some distinct q_ 1, q_ 2, . . . , q_ m . DLS and JLS are interested in counting how many line pairs have integer intersection points, i. e. points with both coordinates that are integers. Unfortunately, the lesson will end up soon, so DLS and JLS are asking for your help.",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 1000 ) , the number of test cases in the input. Then follow the test case descriptions. The first line of a test case contains an integer n ( 1 \u2264 n \u2264 10^ 5 ) , the number of lines drawn by DLS. The second line of a test case contains n distinct integers p_ i ( 0 \u2264 p_ i \u2264 10^ 9 ) describing the lines drawn by DLS. The integer p_ i describes a line given by the equation y = x + p_ i . The third line of a test case contains an integer m ( 1 \u2264 m \u2264 10^ 5 ) , the number of lines drawn by JLS. The fourth line of a test case contains m distinct integers q_ i ( 0 \u2264 q_ i \u2264 10^ 9 ) describing the lines drawn by JLS. The integer q_ i describes a line given by the equation y = - x + q_ i . The sum of the values of n over all test cases in the input does not exceed 10^ 5 . Similarly, the sum of the values of m over all test cases in the input does not exceed 10^ 5 . In hacks it is allowed to use only one test case in the input, so t= 1 should be satisfied.",
    "output": "For each test case in the input print a single integer \u2014 the number of line pairs with integer intersection points.",
    "note": "The picture shows the lines from the first test case of the example. Black circles denote intersection points with integer coordinates.",
    "topics": [
      "geometry",
      "math"
    ],
    "id": "1248A"
  },
  {
    "title": "Good ol' Numbers Coloring",
    "url": "https://codeforces.com/problemset/problem/1245/A",
    "history": "Consider the set of all nonnegative integers: 0, 1, 2, . . . . Given two integers a and b ( 1 \u2264 a, b \u2264 10^ 4 ) . We paint all the numbers in increasing number first we paint 0 , then we paint 1 , then 2 and so on. Each number is painted white or black. We paint a number i according to the following rules: if i = 0 , it is colored white; if i \u2265 a and i - a is colored white, i is also colored white; if i \u2265 b and i - b is colored white, i is also colored white; if i is still not colored white, it is colored black. In this way, each nonnegative integer gets one of two colors. For example, if a= 3 , b= 5 , then the colors of the numbers ( in the order from 0 ) are: white ( 0 ) , black ( 1 ) , black ( 2 ) , white ( 3 ) , black ( 4 ) , white ( 5 ) , white ( 6 ) , black ( 7 ) , white ( 8 ) , white ( 9 ) , . . . Note that: It is possible that there are infinitely many nonnegative integers colored black. For example, if a = 10 and b = 10 , then only 0, 10, 20, 30 and any other nonnegative integers that end in 0 when written in base 10 are white. The other integers are colored black. It is also possible that there are only finitely many nonnegative integers colored black. For example, when a = 1 and b = 10 , then there is no nonnegative integer colored black at all. Your task is to determine whether or not the number of nonnegative integers colored black is infinite. If there are infinitely many nonnegative integers colored black, simply print a line containing \" Infinite\" ( without the quotes) . Otherwise, print \" Finite\" ( without the quotes) .",
    "input": "The first line of input contains a single integer t ( 1 \u2264 t \u2264 100 ) \u2014 the number of test cases in the input. Then t lines follow, each line contains two space- separated integers a and b ( 1 \u2264 a, b \u2264 10^ 4 ) .",
    "output": "For each test case, print one line containing either \" Infinite\" or \" Finite\" ( without the quotes) . Output is case- insensitive ( i. e. \" infinite\" , \" inFiNite\" or \" finiTE\" are all valid answers) .",
    "note": "",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "1245A"
  },
  {
    "title": "Running in Pairs",
    "url": "https://codeforces.com/problemset/problem/1244/G",
    "history": "Demonstrative competitions will be held in the run- up to the 20NN Berlatov Olympic Games. Today is the day for the running competition! Berlatov team consists of 2n runners which are placed on two running tracks; n runners are placed on each track. The runners are numbered from 1 to n on each track. The runner with number i runs through the entire track in i seconds. The competition is held as follows: first runners on both tracks start running at the same time; when the slower of them arrives at the end of the track, second runners on both tracks start running, and everyone waits until the slower of them finishes running, and so on, until all n pairs run through the track. The organizers want the run to be as long as possible, but if it lasts for more than k seconds, the crowd will get bored. As the coach of the team, you may choose any order in which the runners are arranged on each track ( but you can' t change the number of runners on each track or swap runners between different tracks) . You have to choose the order of runners on each track so that the duration of the competition is as long as possible, but does not exceed k seconds. Formally, you want to find two permutations p and q ( both consisting of n elements) such that sum = \u2211_ i= 1^ n max( p_ i, q_ i) is maximum possible, but does not exceed k . If there is no such pair, report about it.",
    "input": "The first line contains two integers n and k ( 1 \u2264 n \u2264 10^ 6, 1 \u2264 k \u2264 n^ 2 ) \u2014 the number of runners on each track and the maximum possible duration of the competition, respectively.",
    "output": "If it is impossible to reorder the runners so that the duration of the competition does not exceed k seconds, print - 1 . Otherwise, print three lines. The first line should contain one integer sum \u2014 the maximum possible duration of the competition not exceeding k . The second line should contain a permutation of n integers p_ 1, p_ 2, . . . , p_ n ( 1 \u2264 p_ i \u2264 n , all p_ i should be pairwise distinct) \u2014 the numbers of runners on the first track in the order they participate in the competition. The third line should contain a permutation of n integers q_ 1, q_ 2, . . . , q_ n ( 1 \u2264 q_ i \u2264 n , all q_ i should be pairwise distinct) \u2014 the numbers of runners on the second track in the order they participate in the competition. The value of sum = \u2211_ i= 1^ n max( p_ i, q_ i) should be maximum possible, but should not exceed k . If there are multiple answers, print any of them.",
    "note": "In the first example the order of runners on the first track should be [ 5, 3, 2, 1, 4] , and the order of runners on the second track should be [ 1, 4, 2, 5, 3] . Then the duration of the competition is max( 5, 1) + max( 3, 4) + max( 2, 2) + max( 1, 5) + max( 4, 3) = 5 + 4 + 2 + 5 + 4 = 20 , so it is equal to the maximum allowed duration. In the first example the order of runners on the first track should be [ 2, 3, 1] , and the order of runners on the second track should be [ 2, 1, 3] . Then the duration of the competition is 8 , and it is the maximum possible duration for n = 3 .",
    "topics": [
      "constructive algorithms",
      "greedy",
      "math"
    ],
    "id": "1244G"
  },
  {
    "title": "The Football Season",
    "url": "https://codeforces.com/problemset/problem/1244/C",
    "history": "The football season has just ended in Berland. According to the rules of Berland football, each match is played between two teams. The result of each match is either a draw, or a victory of one of the playing teams. If a team wins the match, it gets w points, and the opposing team gets 0 points. If the game results in a draw, both teams get d points. The manager of the Berland capital team wants to summarize the results of the season, but, unfortunately, all information about the results of each match is lost. The manager only knows that the team has played n games and got p points for them. You have to determine three integers x , y and z \u2014 the number of wins, draws and loses of the team. If there are multiple answers, print any of them. If there is no suitable triple ( x, y, z) , report about it.",
    "input": "The first line contains four integers n , p , w and d ( 1 \u2264 n \u2264 10^ 12, 0 \u2264 p \u2264 10^ 17, 1 \u2264 d < w \u2264 10^ 5) \u2014 the number of games, the number of points the team got, the number of points awarded for winning a match, and the number of points awarded for a draw, respectively. Note that w > d , so the number of points awarded for winning is strictly greater than the number of points awarded for draw.",
    "output": "If there is no answer, print - 1 . Otherwise print three non- negative integers x , y and z \u2014 the number of wins, draws and losses of the team. If there are multiple possible triples ( x, y, z) , print any of them. The numbers should meet the following conditions: x \u00b7 w + y \u00b7 d = p , x + y + z = n .",
    "note": "One of the possible answers in the first example \u2014 17 wins, 9 draws and 4 losses. Then the team got 17 \u00b7 3 + 9 \u00b7 1 = 60 points in 17 + 9 + 4 = 30 games. In the second example the maximum possible score is 10 \u00b7 5 = 50 . Since p = 51 , there is no answer. In the third example the team got 0 points, so all 20 games were lost.",
    "topics": [
      "brute force",
      "math",
      "number theory"
    ],
    "id": "1244C"
  },
  {
    "title": "Pens and Pencils",
    "url": "https://codeforces.com/problemset/problem/1244/A",
    "history": "Tomorrow is a difficult day for Polycarp: he has to attend a lectures and b practical classes at the university! Since Polycarp is a diligent student, he is going to attend all of them. While preparing for the university, Polycarp wonders whether he can take enough writing implements to write all of the lectures and draw everything he has to during all of the practical classes. Polycarp writes lectures using a pen ( he can' t use a pencil to write lectures! ) ; he can write down c lectures using one pen, and after that it runs out of ink. During practical classes Polycarp draws blueprints with a pencil ( he can' t use a pen to draw blueprints! ) ; one pencil is enough to draw all blueprints during d practical classes, after which it is unusable. Polycarp' s pencilcase can hold no more than k writing implements, so if Polycarp wants to take x pens and y pencils, they will fit in the pencilcase if and only if x + y \u2264 k . Now Polycarp wants to know how many pens and pencils should he take. Help him to determine it, or tell that his pencilcase doesn' t have enough room for all the implements he needs tomorrow! Note that you don' t have to minimize the number of writing implements ( though their total number must not exceed k ) .",
    "input": "The first line of the input contains one integer t ( 1 \u2264 t \u2264 100 ) \u2014 the number of test cases in the input. Then the test cases follow. Each test case is described by one line containing five integers a , b , c , d and k , separated by spaces ( 1 \u2264 a, b, c, d, k \u2264 100 ) \u2014 the number of lectures Polycarp has to attend, the number of practical classes Polycarp has to attend, the number of lectures which can be written down using one pen, the number of practical classes for which one pencil is enough, and the number of writing implements that can fit into Polycarp' s pencilcase, respectively. In hacks it is allowed to use only one test case in the input, so t = 1 should be satisfied.",
    "output": "For each test case, print the answer as follows: If the pencilcase can' t hold enough writing implements to use them during all lectures and practical classes, print one integer - 1 . Otherwise, print two non- negative integers x and y \u2014 the number of pens and pencils Polycarp should put in his pencilcase. If there are multiple answers, print any of them. Note that you don' t have to minimize the number of writing implements ( though their total number must not exceed k ) .",
    "note": "There are many different answers for the first test case; x = 7 , y = 1 is only one of them. For example, x = 3 , y = 1 is also correct. x = 1 , y = 3 is the only correct answer for the third test case.",
    "topics": [
      "math"
    ],
    "id": "1244A"
  },
  {
    "title": "Number Discovery",
    "url": "https://codeforces.com/problemset/problem/1242/D",
    "history": "Ujan needs some rest from cleaning, so he started playing with infinite sequences. He has two integers n and k . He creates an infinite sequence s by repeating the following steps. Find k smallest distinct positive integers that are not in s . Let' s call them u_ 1, u_ 2, . . . , u_ k from the smallest to the largest. Append u_ 1, u_ 2, . . . , u_ k and \u2211_ i= 1^ k u_ i to s in this order. Go back to the first step. Ujan will stop procrastinating when he writes the number n in the sequence s . Help him find the index of n in s . In other words, find the integer x such that s_ x = n . It' s possible to prove that all positive integers are included in s only once.",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 5 ) , the number of test cases. Each of the following t lines contains two integers n and k ( 1 \u2264 n \u2264 10^ 18 , 2 \u2264 k \u2264 10^ 6 ) , the number to be found in the sequence s and the parameter used to create the sequence s .",
    "output": "In each of the t lines, output the answer for the corresponding test case.",
    "note": "In the first sample, s = ( 1, 2, 3, 4, 5, 9, 6, 7, 13, 8, 10, 18, . . . ) . 10 is the 11 - th number here, so the answer is 11 . In the second sample, s = ( 1, 2, 3, 4, 5, 15, 6, 7, 8, 9, 10, 40, . . . ) .",
    "topics": [
      "math"
    ],
    "id": "1242D"
  },
  {
    "title": "Tile Painting",
    "url": "https://codeforces.com/problemset/problem/1242/A",
    "history": "Ujan has been lazy lately, but now has decided to bring his yard to good shape. First, he decided to paint the path from his house to the gate. The path consists of n consecutive tiles, numbered from 1 to n . Ujan will paint each tile in some color. He will consider the path aesthetic if for any two different tiles with numbers i and j , such that | j - i| is a divisor of n greater than 1 , they have the same color. Formally, the colors of two tiles with numbers i and j should be the same if | i- j| > 1 and n | i- j| = 0 ( where x y is the remainder when dividing x by y ) . Ujan wants to brighten up space. What is the maximum number of different colors that Ujan can use, so that the path is aesthetic?",
    "input": "The first line of input contains a single integer n ( 1 \u2264 n \u2264 10^ 12 ) , the length of the path.",
    "output": "Output a single integer, the maximum possible number of colors that the path can be painted in.",
    "note": "In the first sample, two colors is the maximum number. Tiles 1 and 3 should have the same color since 4 | 3- 1| = 0 . Also, tiles 2 and 4 should have the same color since 4 | 4- 2| = 0 . In the second sample, all five colors can be used.",
    "topics": [
      "constructive algorithms",
      "math",
      "number theory"
    ],
    "id": "1242A"
  },
  {
    "title": "Ivan the Fool and the Probability Theory",
    "url": "https://codeforces.com/problemset/problem/1239/A",
    "history": "Recently Ivan the Fool decided to become smarter and study the probability theory. He thinks that he understands the subject fairly well, and so he began to behave like he already got PhD in that area. To prove his skills, Ivan decided to demonstrate his friends a concept of random picture. A picture is a field of n rows and m columns, where each cell is either black or white. Ivan calls the picture random if for every cell it has at most one adjacent cell of the same color. Two cells are considered adjacent if they share a side. Ivan' s brothers spent some time trying to explain that it' s not how the randomness usually works. Trying to convince Ivan, they want to count the number of different random ( according to Ivan) pictures. Two pictures are considered different if at least one cell on those two picture is colored differently. Since the number of such pictures may be quite large, print it modulo 10^ 9 + 7 .",
    "input": "The only line contains two integers n and m ( 1 \u2264 n, m \u2264 100 000 ) , the number of rows and the number of columns of the field.",
    "output": "Print one integer, the number of random pictures modulo 10^ 9 + 7 .",
    "note": "The picture below shows all possible random pictures of size 2 by 3 .",
    "topics": [
      "combinatorics",
      "dp",
      "math"
    ],
    "id": "1239A"
  },
  {
    "title": "Standard Free2play",
    "url": "https://codeforces.com/problemset/problem/1238/C",
    "history": "You are playing a game where your character should overcome different obstacles. The current problem is to come down from a cliff. The cliff has height h , and there is a moving platform on each height x from 1 to h . Each platform is either hidden inside the cliff or moved out. At first, there are n moved out platforms on heights p_ 1, p_ 2, . . . , p_ n . The platform on height h is moved out ( and the character is initially standing there) . If you character is standing on some moved out platform on height x , then he can pull a special lever, which switches the state of two platforms: on height x and x - 1 . In other words, the platform you are currently standing on will hide in the cliff and the platform one unit below will change it state: it will hide if it was moved out or move out if it was hidden. In the second case, you will safely land on it. Note that this is the only way to move from one platform to another. Your character is quite fragile, so it can safely fall from the height no more than 2 . In other words falling from the platform x to platform x - 2 is okay, but falling from x to x - 3 ( or lower) is certain death. Sometimes it' s not possible to come down from the cliff, but you can always buy ( for donate currency) several magic crystals. Each magic crystal can be used to change the state of any single platform ( except platform on height h , which is unaffected by the crystals) . After being used, the crystal disappears. What is the minimum number of magic crystal you need to buy to safely land on the 0 ground level?",
    "input": "The first line contains one integer q ( 1 \u2264 q \u2264 100 ) \u2014 the number of queries. Each query contains two lines and is independent of all other queries. The first line of each query contains two integers h and n ( 1 \u2264 h \u2264 10^ 9 , 1 \u2264 n \u2264min( h, 2 \u00b7 10^ 5) ) \u2014 the height of the cliff and the number of moved out platforms. The second line contains n integers p_ 1, p_ 2, . . . , p_ n ( h = p_ 1 > p_ 2 > . . . > p_ n \u2265 1 ) \u2014 the corresponding moved out platforms in the descending order of their heights. The sum of n over all queries does not exceed 2 \u00b7 10^ 5 .",
    "output": "For each query print one integer \u2014 the minimum number of magic crystals you have to spend to safely come down on the ground level ( with height 0 ) .",
    "note": "",
    "topics": [
      "dp",
      "greedy",
      "math"
    ],
    "id": "1238C"
  },
  {
    "title": "Prime Subtraction",
    "url": "https://codeforces.com/problemset/problem/1238/A",
    "history": "You are given two integers x and y ( it is guaranteed that x > y ) . You may choose any prime integer p and subtract it any number of times from x . Is it possible to make x equal to y ? Recall that a prime number is a positive integer that has exactly two positive divisors: 1 and this integer itself. The sequence of prime numbers starts with 2 , 3 , 5 , 7 , 11 . Your program should solve t independent test cases.",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 1000 ) \u2014 the number of test cases. Then t lines follow, each describing a test case. Each line contains two integers x and y ( 1 \u2264 y < x \u2264 10^ 18 ) .",
    "output": "For each test case, print YES if it is possible to choose a prime number p and subtract it any number of times from x so that x becomes equal to y . Otherwise, print NO. You may print every letter in any case you want ( so, for example, the strings yEs, yes, Yes, and YES will all be recognized as positive answer) .",
    "note": "In the first test of the example you may choose p = 2 and subtract it once. In the second test of the example you may choose p = 5 and subtract it twice. Note that you cannot choose p = 7 , subtract it, then choose p = 3 and subtract it again. In the third test of the example you may choose p = 3 and subtract it 333333333333333333 times.",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "1238A"
  },
  {
    "title": "Balanced Binary Search Trees",
    "url": "https://codeforces.com/problemset/problem/1237/E",
    "history": "Recall that a binary search tree is a rooted binary tree, whose nodes each store a key and each have at most two distinguished subtrees, left and right. The key in each node must be greater than any key stored in the left subtree, and less than any key stored in the right subtree. The depth of a vertex is the number of edges on the simple path from the vertex to the root. In particular, the depth of the root is 0 . Let' s call a binary search tree perfectly balanced if there doesn' t exist a binary search tree with the same number of vertices that has a strictly smaller sum of depths of its vertices. Let' s call a binary search tree with integer keys striped if both of the following conditions are satisfied for every vertex v : If v has a left subtree whose root is u , then the parity of the key of v is different from the parity of the key of u . If v has a right subtree whose root is w , then the parity of the key of v is the same as the parity of the key of w . You are given a single integer n . Find the number of perfectly balanced striped binary search trees with n vertices that have distinct integer keys between 1 and n , inclusive. Output this number modulo 998 244 353 .",
    "input": "The only line contains a single integer n ( 1 \u2264 n \u2264 10^ 6 ) , denoting the required number of vertices.",
    "output": "Output the number of perfectly balanced striped binary search trees with n vertices and distinct integer keys between 1 and n , inclusive, modulo 998 244 353 .",
    "note": "In the first example, this is the only tree that satisfies the conditions: In the second example, here are various trees that don' t satisfy some condition:",
    "topics": [
      "dp",
      "math"
    ],
    "id": "1237E"
  },
  {
    "title": "Balanced Rating Changes",
    "url": "https://codeforces.com/problemset/problem/1237/A",
    "history": "Another Codeforces Round has just finished! It has gathered n participants, and according to the results, the expected rating change of participant i is a_ i . These rating changes are perfectly balanced \u2014 their sum is equal to 0 . Unfortunately, due to minor technical glitches, the round is declared semi- rated. It means that all rating changes must be divided by two. There are two conditions though: For each participant i , their modified rating change b_ i must be integer, and as close to a_ i/ 2 as possible. It means that either b_ i = \u230aa_ i/ 2\u230b or b_ i = \u2308a_ i/ 2\u2309 . In particular, if a_ i is even, b_ i = a_ i/ 2 . Here \u230a x \u230b denotes rounding down to the largest integer not greater than x , and \u2308 x \u2309 denotes rounding up to the smallest integer not smaller than x . The modified rating changes must be perfectly balanced \u2014 their sum must be equal to 0 . Can you help with that?",
    "input": "The first line contains a single integer n ( 2 \u2264 n \u2264 13 845 ) , denoting the number of participants. Each of the next n lines contains a single integer a_ i ( - 336 \u2264 a_ i \u2264 1164 ) , denoting the rating change of the i - th participant. The sum of all a_ i is equal to 0 .",
    "output": "Output n integers b_ i , each denoting the modified rating change of the i - th participant in order of input. For any i , it must be true that either b_ i = \u230aa_ i/ 2\u230b or b_ i = \u2308a_ i/ 2\u2309 . The sum of all b_ i must be equal to 0 . If there are multiple solutions, print any. We can show that a solution exists for any valid input.",
    "note": "In the first example, b_ 1 = 5 , b_ 2 = - 3 and b_ 3 = - 2 is another correct solution. In the second example there are 6 possible solutions, one of them is shown in the example output.",
    "topics": [
      "implementation",
      "math"
    ],
    "id": "1237A"
  },
  {
    "title": "Alice and the Cactus",
    "url": "https://codeforces.com/problemset/problem/1236/F",
    "history": "Alice recently found some cactuses growing near her house! After several months, more and more cactuses appeared and soon they blocked the road. So Alice wants to clear them. A cactus is a connected undirected graph. No edge of this graph lies on more than one simple cycle. Let' s call a sequence of different nodes of the graph x_ 1, x_ 2, . . . , x_ k a simple cycle, if k \u2265 3 and all pairs of nodes x_ 1 and x_ 2 , x_ 2 and x_ 3 , . . . , x_ k- 1 and x_ k , x_ k and x_ 1 are connected with edges. Edges ( x_ 1, x_ 2) , ( x_ 2, x_ 3) , . . . , ( x_ k- 1, x_ k) , ( x_ k, x_ 1) lies on this simple cycle. There are so many cactuses, so it seems hard to destroy them. But Alice has magic. When she uses the magic, every node of the cactus will be removed independently with the probability 1/ 2 . When a node is removed, the edges connected to it are also removed. Now Alice wants to test her magic. She has picked a cactus with n nodes and m edges. Let X[ S] ( where S is a subset of the removed nodes) be the number of connected components in the remaining graph after removing nodes of set S . Before she uses magic, she wants to know the variance of random variable X , if all nodes of the graph have probability 1/ 2 to be removed and all n of these events are independent. By the definition the variance is equal to E[ ( X - E[ X] ) ^ 2] , where E[ X] is the expected value of X . Help her and calculate this value by modulo 10^ 9+ 7 . Formally, let M = 10^ 9 + 7 ( a prime number) . It can be shown that the answer can be expressed as an irreducible fraction p/ q , where p and q are integers and q \u2261\u03380 M . Output the integer equal to p \u00b7 q^ - 1 M . In other words, find such an integer x that 0 \u2264 x < M and x \u00b7 q \u2261 p M .",
    "input": "The first line contains two integers n and m , separated by space ( 1 \u2264 n \u2264 5 \u00b7 10^ 5, n - 1 \u2264 m \u2264 5 \u00b7 10^ 5 ) \u2014 the number of nodes and edges in the cactus. The following m lines contain two numbers u and v each, separated by space ( 1 \u2264 u, v \u2264 n, u = \u0338 v ) meaning that there is an edge between the nodes u and v . It is guaranteed that there are no loops and multiple edges in the graph and the given graph is cactus.",
    "output": "Print one integer \u2014 the variance of the number of connected components in the remaining graph, after removing a set of nodes such that each node has probability 1/ 2 to be removed and all these events are independent. This value should be found by modulo 10^ 9+ 7 .",
    "note": "In the first sample, the answer is 7/ 64 . If all nodes are removed the value of X is equal to 0 , otherwise, it is equal to 1 . So, the expected value of X is equal to 0\u00d71/ 8+ 1\u00d77/ 8= 7/ 8 . So, the variance of X is equal to ( 0 - 7/ 8) ^ 2\u00d71/ 8+ ( 1- 7/ 8) ^ 2\u00d77/ 8 = ( 7/ 8) ^ 2\u00d71/ 8+ ( 1/ 8) ^ 2\u00d77/ 8 = 7/ 64 . In the second sample, the answer is 1/ 4 .",
    "topics": [
      "dfs and similar",
      "graphs",
      "math",
      "probabilities"
    ],
    "id": "1236F"
  },
  {
    "title": "Alice and the List of Presents",
    "url": "https://codeforces.com/problemset/problem/1236/B",
    "history": "Alice got many presents these days. So she decided to pack them into boxes and send them to her friends. There are n kinds of presents. Presents of one kind are identical ( i. e. there is no way to distinguish two gifts of the same kind) . Presents of different kinds are different ( i. e. that is, two gifts of different kinds are distinguishable) . The number of presents of each kind, that Alice has is very big, so we can consider Alice has an infinite number of gifts of each kind. Also, there are m boxes. All of them are for different people, so they are pairwise distinct ( consider that the names of m friends are written on the boxes) . For example, putting the first kind of present into the first box but not into the second box, is different from putting the first kind of present into the second box but not into the first box. Alice wants to pack presents with the following rules: She won' t pack more than one present of each kind into the same box, so each box should contain presents of different kinds ( i. e. each box contains a subset of n kinds, empty boxes are allowed) ; For each kind at least one present should be packed into some box. Now Alice wants to know how many different ways to pack the presents exists. Please, help her and calculate this number. Since the answer can be huge, output it by modulo 10^ 9+ 7 . See examples and their notes for clarification.",
    "input": "The first line contains two integers n and m , separated by spaces ( 1 \u2264 n, m \u2264 10^ 9 ) \u2014 the number of kinds of presents and the number of boxes that Alice has.",
    "output": "Print one integer \u2014 the number of ways to pack the presents with Alice' s rules, calculated by modulo 10^ 9+ 7",
    "note": "In the first example, there are seven ways to pack presents: { 1} { } { } { } { 1} { } { } { } { 1} { 1} { 1} { } { } { 1} { 1} { 1} { } { 1} { 1} { 1} { 1} In the second example there are nine ways to pack presents: { } { 1, 2} { 1} { 2} { 1} { 1, 2} { 2} { 1} { 2} { 1, 2} { 1, 2} { } { 1, 2} { 1} { 1, 2} { 2} { 1, 2} { 1, 2} For example, the way { 2} { 2} is wrong, because presents of the first kind should be used in the least one box.",
    "topics": [
      "combinatorics",
      "math"
    ],
    "id": "1236B"
  },
  {
    "title": "Stones",
    "url": "https://codeforces.com/problemset/problem/1236/A",
    "history": "Alice is playing with some stones. Now there are three numbered heaps of stones. The first of them contains a stones, the second of them contains b stones and the third of them contains c stones. Each time she can do one of two operations: take one stone from the first heap and two stones from the second heap ( this operation can be done only if the first heap contains at least one stone and the second heap contains at least two stones) ; take one stone from the second heap and two stones from the third heap ( this operation can be done only if the second heap contains at least one stone and the third heap contains at least two stones) . She wants to get the maximum number of stones, but she doesn' t know what to do. Initially, she has 0 stones. Can you help her?",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 100 ) \u2014 the number of test cases. Next t lines describe test cases in the following format: Line contains three non- negative integers a , b and c , separated by spaces ( 0 \u2264 a, b, c \u2264 100 ) \u2014 the number of stones in the first, the second and the third heap, respectively. In hacks it is allowed to use only one test case in the input, so t = 1 should be satisfied.",
    "output": "Print t lines, the answers to the test cases in the same order as in the input. The answer to the test case is the integer \u2014 the maximum possible number of stones that Alice can take after making some operations.",
    "note": "For the first test case in the first test, Alice can take two stones from the second heap and four stones from the third heap, making the second operation two times. Then she can take one stone from the first heap and two stones from the second heap, making the first operation one time. The summary number of stones, that Alice will take is 9 . It is impossible to make some operations to take more than 9 stones, so the answer is 9 .",
    "topics": [
      "brute force",
      "greedy",
      "math"
    ],
    "id": "1236A"
  },
  {
    "title": "Special Permutations",
    "url": "https://codeforces.com/problemset/problem/1234/E",
    "history": "Let' s define p_ i( n) as the following permutation: [ i, 1, 2, . . . , i - 1, i + 1, . . . , n] . This means that the i - th permutation is almost identity ( i. e. which maps every element to itself) permutation but the element i is on the first position. Examples: p_ 1( 4) = [ 1, 2, 3, 4] ; p_ 2( 4) = [ 2, 1, 3, 4] ; p_ 3( 4) = [ 3, 1, 2, 4] ; p_ 4( 4) = [ 4, 1, 2, 3] . You are given an array x_ 1, x_ 2, . . . , x_ m ( 1 \u2264 x_ i \u2264 n ) . Let pos( p, val) be the position of the element val in p . So, pos( p_ 1( 4) , 3) = 3, pos( p_ 2( 4) , 2) = 1, pos( p_ 4( 4) , 4) = 1 . Let' s define a function f( p) = \u2211_ i= 1^ m - 1 | pos( p, x_ i) - pos( p, x_ i + 1) | , where | val| is the absolute value of val . This function means the sum of distances between adjacent elements of x in p . Your task is to calculate f( p_ 1( n) ) , f( p_ 2( n) ) , . . . , f( p_ n( n) ) .",
    "input": "The first line of the input contains two integers n and m ( 2 \u2264 n, m \u2264 2 \u00b7 10^ 5 ) \u2014 the number of elements in each permutation and the number of elements in x . The second line of the input contains m integers ( m , not n ) x_ 1, x_ 2, . . . , x_ m ( 1 \u2264 x_ i \u2264 n ) , where x_ i is the i - th element of x . Elements of x can repeat and appear in arbitrary order.",
    "output": "Print n integers: f( p_ 1( n) ) , f( p_ 2( n) ) , . . . , f( p_ n( n) ) .",
    "note": "Consider the first example: x = [ 1, 2, 3, 4] , so for the permutation p_ 1( 4) = [ 1, 2, 3, 4] the answer is | 1 - 2| + | 2 - 3| + | 3 - 4| = 3 ; for the permutation p_ 2( 4) = [ 2, 1, 3, 4] the answer is | 2 - 1| + | 1 - 3| + | 3 - 4| = 4 ; for the permutation p_ 3( 4) = [ 3, 1, 2, 4] the answer is | 2 - 3| + | 3 - 1| + | 1 - 4| = 6 ; for the permutation p_ 4( 4) = [ 4, 1, 2, 3] the answer is | 2 - 3| + | 3 - 4| + | 4 - 1| = 5 . Consider the second example: x = [ 2, 1, 5, 3, 5] , so for the permutation p_ 1( 5) = [ 1, 2, 3, 4, 5] the answer is | 2 - 1| + | 1 - 5| + | 5 - 3| + | 3 - 5| = 9 ; for the permutation p_ 2( 5) = [ 2, 1, 3, 4, 5] the answer is | 1 - 2| + | 2 - 5| + | 5 - 3| + | 3 - 5| = 8 ; for the permutation p_ 3( 5) = [ 3, 1, 2, 4, 5] the answer is | 3 - 2| + | 2 - 5| + | 5 - 1| + | 1 - 5| = 12 ; for the permutation p_ 4( 5) = [ 4, 1, 2, 3, 5] the answer is | 3 - 2| + | 2 - 5| + | 5 - 4| + | 4 - 5| = 6 ; for the permutation p_ 5( 5) = [ 5, 1, 2, 3, 4] the answer is | 3 - 2| + | 2 - 1| + | 1 - 4| + | 4 - 1| = 8 .",
    "topics": [
      "math"
    ],
    "id": "1234E"
  },
  {
    "title": "Equalize Prices Again",
    "url": "https://codeforces.com/problemset/problem/1234/A",
    "history": "You are both a shop keeper and a shop assistant at a small nearby shop. You have n goods, the i - th good costs a_ i coins. You got tired of remembering the price of each product when customers ask for it, thus you decided to simplify your life. More precisely you decided to set the same price for all n goods you have. However, you don' t want to lose any money so you want to choose the price in such a way that the sum of new prices is not less than the sum of the initial prices. It means that if you sell all n goods for the new price, you will receive at least the same ( or greater) amount of money as if you sell them for their initial prices. On the other hand, you don' t want to lose customers because of big prices so among all prices you can choose you need to choose the minimum one. So you need to find the minimum possible equal price of all n goods so if you sell them for this price, you will receive at least the same ( or greater) amount of money as if you sell them for their initial prices. You have to answer q independent queries.",
    "input": "The first line of the input contains one integer q ( 1 \u2264 q \u2264 100 ) \u2014 the number of queries. Then q queries follow. The first line of the query contains one integer n ( 1 \u2264 n \u2264 100) \u2014 the number of goods. The second line of the query contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 7 ) , where a_ i is the price of the i - th good.",
    "output": "For each query, print the answer for it \u2014 the minimum possible equal price of all n goods so if you sell them for this price, you will receive at least the same ( or greater) amount of money as if you sell them for their initial prices.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": "1234A"
  },
  {
    "title": "Another Filling the Grid",
    "url": "https://codeforces.com/problemset/problem/1228/E",
    "history": "You have n \u00d7 n square grid and an integer k . Put an integer in each cell while satisfying the conditions below. All numbers in the grid should be between 1 and k inclusive. Minimum number of the i - th row is 1 ( 1 \u2264 i \u2264 n ) . Minimum number of the j - th column is 1 ( 1 \u2264 j \u2264 n ) . Find the number of ways to put integers in the grid. Since the answer can be very large, find the answer modulo ( 10^ 9 + 7) . These are the examples of valid and invalid grid when n= k= 2 .",
    "input": "The only line contains two integers n and k ( 1 \u2264 n \u2264 250 , 1 \u2264 k \u2264 10^ 9 ) .",
    "output": "Print the answer modulo ( 10^ 9 + 7) .",
    "note": "In the first example, following 7 cases are possible. In the second example, make sure you print the answer modulo ( 10^ 9 + 7) .",
    "topics": [
      "combinatorics",
      "dp",
      "math"
    ],
    "id": "1228E"
  },
  {
    "title": "Primes and Multiplication",
    "url": "https://codeforces.com/problemset/problem/1228/C",
    "history": "Let' s introduce some definitions that will be needed later. Let prime( x) be the set of prime divisors of x . For example, prime( 140) = { 2, 5, 7 } , prime( 169) = { 13 } . Let g( x, p) be the maximum possible integer p^ k where k is an integer such that x is divisible by p^ k . For example: g( 45, 3) = 9 ( 45 is divisible by 3^ 2= 9 but not divisible by 3^ 3= 27 ) , g( 63, 7) = 7 ( 63 is divisible by 7^ 1= 7 but not divisible by 7^ 2= 49 ) . Let f( x, y) be the product of g( y, p) for all p in prime( x) . For example: f( 30, 70) = g( 70, 2) \u00b7 g( 70, 3) \u00b7 g( 70, 5) = 2^ 1 \u00b7 3^ 0 \u00b7 5^ 1 = 10 , f( 525, 63) = g( 63, 3) \u00b7 g( 63, 5) \u00b7 g( 63, 7) = 3^ 2 \u00b7 5^ 0 \u00b7 7^ 1 = 63 . You have integers x and n . Calculate f( x, 1) \u00b7 f( x, 2) \u00b7. . . \u00b7 f( x, n) ( 10^ 9 + 7) .",
    "input": "The only line contains integers x and n ( 2 \u2264 x \u2264 10^ 9 , 1 \u2264 n \u2264 10^ 18 ) \u2014 the numbers used in formula.",
    "output": "Print the answer.",
    "note": "In the first example, f( 10, 1) = g( 1, 2) \u00b7 g( 1, 5) = 1 , f( 10, 2) = g( 2, 2) \u00b7 g( 2, 5) = 2 . In the second example, actual value of formula is approximately 1. 597 \u00b7 10^ 171 . Make sure you print the answer modulo ( 10^ 9 + 7) . In the third example, be careful about overflow issue.",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "1228C"
  },
  {
    "title": "Filling the Grid",
    "url": "https://codeforces.com/problemset/problem/1228/B",
    "history": "Suppose there is a h \u00d7 w grid consisting of empty or full cells. Let' s make some definitions: r_ i is the number of consecutive full cells connected to the left side in the i - th row ( 1 \u2264 i \u2264 h ) . In particular, r_ i= 0 if the leftmost cell of the i - th row is empty. c_ j is the number of consecutive full cells connected to the top end in the j - th column ( 1 \u2264 j \u2264 w ) . In particular, c_ j= 0 if the topmost cell of the j - th column is empty. In other words, the i - th row starts exactly with r_ i full cells. Similarly, the j - th column starts exactly with c_ j full cells. These are the r and c values of some 3 \u00d7 4 grid. Black cells are full and white cells are empty. You have values of r and c . Initially, all cells are empty. Find the number of ways to fill grid cells to satisfy values of r and c . Since the answer can be very large, find the answer modulo 1000000007 ( 10^ 9 + 7) . In other words, find the remainder after division of the answer by 1000000007 ( 10^ 9 + 7) .",
    "input": "The first line contains two integers h and w ( 1 \u2264 h, w \u2264 10^ 3 ) \u2014 the height and width of the grid. The second line contains h integers r_ 1, r_ 2, . . . , r_ h ( 0 \u2264 r_ i\u2264 w ) \u2014 the values of r . The third line contains w integers c_ 1, c_ 2, . . . , c_ w ( 0 \u2264 c_ j\u2264 h ) \u2014 the values of c .",
    "output": "Print the answer modulo 1000000007 ( 10^ 9 + 7) .",
    "note": "In the first example, this is the other possible case. In the second example, it' s impossible to make a grid to satisfy such r , c values. In the third example, make sure to print answer modulo ( 10^ 9 + 7) .",
    "topics": [
      "implementation",
      "math"
    ],
    "id": "1228B"
  },
  {
    "title": "Wrong Answer on test 233 (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1227/F2",
    "history": "Your program fails again. This time it gets \" Wrong answer on test 233\" . This is the harder version of the problem. In this version, 1 \u2264 n \u2264 2\u00b710^ 5 . You can hack this problem if you locked it. But you can hack the previous problem only if you locked both problems. The problem is to finish n one- choice- questions. Each of the questions contains k options, and only one of them is correct. The answer to the i - th question is h_ i , and if your answer of the question i is h_ i , you earn 1 point, otherwise, you earn 0 points for this question. The values h_ 1, h_ 2, . . . , h_ n are known to you in this problem. However, you have a mistake in your program. It moves the answer clockwise! Consider all the n answers are written in a circle. Due to the mistake in your program, they are shifted by one cyclically. Formally, the mistake moves the answer for the question i to the question i n + 1 . So it moves the answer for the question 1 to question 2 , the answer for the question 2 to the question 3 , . . . , the answer for the question n to the question 1 . We call all the n answers together an answer suit. There are k^ n possible answer suits in total. You' re wondering, how many answer suits satisfy the following condition: after moving clockwise by 1 , the total number of points of the new answer suit is strictly larger than the number of points of the old one. You need to find the answer modulo 998 244 353 . For example, if n = 5 , and your answer suit is a= [ 1, 2, 3, 4, 5] , it will submitted as a' = [ 5, 1, 2, 3, 4] because of a mistake. If the correct answer suit is h= [ 5, 2, 2, 3, 4] , the answer suit a earns 1 point and the answer suite a' earns 4 points. Since 4 > 1 , the answer suit a= [ 1, 2, 3, 4, 5] should be counted.",
    "input": "The first line contains two integers n , k ( 1 \u2264 n \u2264 2\u00b710^ 5 , 1 \u2264 k \u2264 10^ 9 ) \u2014 the number of questions and the number of possible answers to each question. The following line contains n integers h_ 1, h_ 2, . . . , h_ n , ( 1 \u2264 h_ i\u2264 k) \u2014 answers to the questions.",
    "output": "Output one integer: the number of answers suits satisfying the given condition, modulo 998 244 353 .",
    "note": "For the first example, valid answer suits are [ 2, 1, 1] , [ 2, 1, 2] , [ 2, 1, 3] , [ 3, 1, 1] , [ 3, 1, 2] , [ 3, 1, 3] , [ 3, 2, 1] , [ 3, 2, 2] , [ 3, 2, 3] .",
    "topics": [
      "combinatorics",
      "math"
    ],
    "id": "1227F2"
  },
  {
    "title": "Math Problem",
    "url": "https://codeforces.com/problemset/problem/1227/A",
    "history": "Your math teacher gave you the following problem: There are n segments on the x - axis, [ l_ 1; r_ 1] , [ l_ 2; r_ 2] , . . . , [ l_ n; r_ n] . The segment [ l; r] includes the bounds, i. e. it is a set of such x that l \u2264 x \u2264 r . The length of the segment [ l; r] is equal to r - l . Two segments [ a; b] and [ c; d] have a common point ( intersect) if there exists x that a \u2264 x \u2264 b and c \u2264 x \u2264 d . For example, [ 2; 5] and [ 3; 10] have a common point, but [ 5; 6] and [ 1; 4] don' t have. You should add one segment, which has at least one common point with each of the given segments and as short as possible ( i. e. has minimal length) . The required segment can degenerate to be a point ( i. e a segment with length zero) . The added segment may or may not be among the given n segments. In other words, you need to find a segment [ a; b] , such that [ a; b] and every [ l_ i; r_ i] have a common point for each i , and b- a is minimal.",
    "input": "The first line contains integer number t ( 1 \u2264 t \u2264 100 ) \u2014 the number of test cases in the input. Then t test cases follow. The first line of each test case contains one integer n ( 1 \u2264 n \u2264 10^ 5 ) \u2014 the number of segments. The following n lines contain segment descriptions: the i - th of them contains two integers l_ i, r_ i ( 1 \u2264 l_ i \u2264 r_ i \u2264 10^ 9 ) . The sum of all values n over all the test cases in the input doesn' t exceed 10^ 5 .",
    "output": "For each test case, output one integer \u2014 the smallest possible length of the segment which has at least one common point with all given segments.",
    "note": "In the first test case of the example, we can choose the segment [ 5; 7] as the answer. It is the shortest segment that has at least one common point with all given segments.",
    "topics": [
      "math"
    ],
    "id": "1227A"
  },
  {
    "title": "Power Products",
    "url": "https://codeforces.com/problemset/problem/1225/D",
    "history": "You are given n positive integers a_ 1, . . . , a_ n , and an integer k \u2265 2 . Count the number of pairs i, j such that 1 \u2264 i < j \u2264 n , and there exists an integer x such that a_ i \u00b7 a_ j = x^ k .",
    "input": "The first line contains two integers n and k ( 2 \u2264 n \u2264 10^ 5 , 2 \u2264 k \u2264 100 ) . The second line contains n integers a_ 1, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 5 ) .",
    "output": "Print a single integer \u2014 the number of suitable pairs.",
    "note": "In the sample case, the suitable pairs are: a_ 1 \u00b7 a_ 4 = 8 = 2^ 3 ; a_ 1 \u00b7 a_ 6 = 1 = 1^ 3 ; a_ 2 \u00b7 a_ 3 = 27 = 3^ 3 ; a_ 3 \u00b7 a_ 5 = 216 = 6^ 3 ; a_ 4 \u00b7 a_ 6 = 8 = 2^ 3 .",
    "topics": [
      "hashing",
      "math",
      "number theory"
    ],
    "id": "1225D"
  },
  {
    "title": "p-binary",
    "url": "https://codeforces.com/problemset/problem/1225/C",
    "history": "Vasya will fancy any number as long as it is an integer power of two. Petya, on the other hand, is very conservative and only likes a single integer p ( which may be positive, negative, or zero) . To combine their tastes, they invented p - binary numbers of the form 2^ x + p , where x is a non- negative integer. For example, some - 9 - binary ( \" minus nine\" binary) numbers are: - 8 ( minus eight) , 7 and 1015 ( - 8= 2^ 0- 9 , 7= 2^ 4- 9 , 1015= 2^ 10- 9 ) . The boys now use p - binary numbers to represent everything. They now face a problem: given a positive integer n , what' s the smallest number of p - binary numbers ( not necessarily distinct) they need to represent n as their sum? It may be possible that representation is impossible altogether. Help them solve this problem. For example, if p= 0 we can represent 7 as 2^ 0 + 2^ 1 + 2^ 2 . And if p= - 9 we can represent 7 as one number ( 2^ 4- 9) . Note that negative p - binary numbers are allowed to be in the sum ( see the Notes section for an example) .",
    "input": "The only line contains two integers n and p ( 1 \u2264 n \u2264 10^ 9 , - 1000 \u2264 p \u2264 1000 ) .",
    "output": "If it is impossible to represent n as the sum of any number of p - binary numbers, print a single integer - 1 . Otherwise, print the smallest possible number of summands.",
    "note": "0 - binary numbers are just regular binary powers, thus in the first sample case we can represent 24 = ( 2^ 4 + 0) + ( 2^ 3 + 0) . In the second sample case, we can represent 24 = ( 2^ 4 + 1) + ( 2^ 2 + 1) + ( 2^ 0 + 1) . In the third sample case, we can represent 24 = ( 2^ 4 - 1) + ( 2^ 2 - 1) + ( 2^ 2 - 1) + ( 2^ 2 - 1) . Note that repeated summands are allowed. In the fourth sample case, we can represent 4 = ( 2^ 4 - 7) + ( 2^ 1 - 7) . Note that the second summand is negative, which is allowed. In the fifth sample case, no representation is possible.",
    "topics": [
      "bitmasks",
      "brute force",
      "math"
    ],
    "id": "1225C"
  },
  {
    "title": "Forgetting Things",
    "url": "https://codeforces.com/problemset/problem/1225/A",
    "history": "Kolya is very absent- minded. Today his math teacher asked him to solve a simple problem with the equation a + 1 = b with positive integers a and b , but Kolya forgot the numbers a and b . He does, however, remember that the first ( leftmost) digit of a was d_ a , and the first ( leftmost) digit of b was d_ b . Can you reconstruct any equation a + 1 = b that satisfies this property? It may be possible that Kolya misremembers the digits, and there is no suitable equation, in which case report so.",
    "input": "The only line contains two space- separated digits d_ a and d_ b ( 1 \u2264 d_ a, d_ b \u2264 9 ) .",
    "output": "If there is no equation a + 1 = b with positive integers a and b such that the first digit of a is d_ a , and the first digit of b is d_ b , print a single number - 1 . Otherwise, print any suitable a and b that both are positive and do not exceed 10^ 9 . It is guaranteed that if a solution exists, there also exists a solution with both numbers not exceeding 10^ 9 .",
    "note": "",
    "topics": [
      "math"
    ],
    "id": "1225A"
  },
  {
    "title": "Wooden Raft",
    "url": "https://codeforces.com/problemset/problem/1223/G",
    "history": "Suppose you are stuck on a desert island. The only way to save yourself is to craft a wooden raft and go to the sea. Fortunately, you have a hand- made saw and a forest nearby. Moreover, you' ve already cut several trees and prepared it to the point that now you have n logs and the i - th log has length a_ i . The wooden raft you' d like to build has the following structure: 2 logs of length x and x logs of length y . Such raft would have the area equal to x \u00b7 y . Both x and y must be integers since it' s the only way you can measure the lengths while being on a desert island. And both x and y must be at least 2 since the raft that is one log wide is unstable. You can cut logs in pieces but you can' t merge two logs in one. What is the maximum area of the raft you can craft?",
    "input": "The first line contains the only integer n ( 1 \u2264 n \u2264 5 \u00b7 10^ 5 ) \u2014 the number of logs you have. The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 2 \u2264 a_ i \u2264 5 \u00b7 10^ 5 ) \u2014 the corresponding lengths of the logs. It' s guaranteed that you can always craft at least 2 \u00d7 2 raft.",
    "output": "Print the only integer \u2014 the maximum area of the raft you can craft.",
    "note": "In the first example, you can cut the log of the length 9 in 5 parts: 2 + 2 + 2 + 2 + 1 . Now you can build 2 \u00d7 2 raft using 2 logs of length x = 2 and x = 2 logs of length y = 2 . In the second example, you can cut a_ 4 = 18 into two pieces 9 + 9 and a_ 8 = 28 in three pieces 10 + 9 + 9 . Now you can make 10 \u00d7 9 raft using 2 logs of length 10 and 10 logs of length 9 .",
    "topics": [
      "binary search",
      "math",
      "number theory"
    ],
    "id": "1223G"
  },
  {
    "title": "CME",
    "url": "https://codeforces.com/problemset/problem/1223/A",
    "history": "Let' s denote correct match equation ( we will denote it as CME) an equation a + b = c there all integers a , b and c are greater than zero. For example, equations 2 + 2 = 4 ( | | + | | = | | | | ) and 1 + 2 = 3 ( | + | | = | | | ) are CME but equations 1 + 2 = 4 ( | + | | = | | | | ) , 2 + 2 = 3 ( | | + | | = | | | ) , and 0 + 1 = 1 ( + | = | ) are not. Now, you have n matches. You want to assemble a CME using all your matches. Unfortunately, it is possible that you can' t assemble the CME using all matches. But you can buy some extra matches and then assemble CME! For example, if n = 2 , you can buy two matches and assemble | + | = | | , and if n = 5 you can buy one match and assemble | | + | = | | | . Calculate the minimum number of matches which you have to buy for assembling CME. Note, that you have to answer q independent queries.",
    "input": "The first line contains one integer q ( 1 \u2264 q \u2264 100 ) \u2014 the number of queries. The only line of each query contains one integer n ( 2 \u2264 n \u2264 10^ 9 ) \u2014 the number of matches.",
    "output": "For each test case print one integer in single line \u2014 the minimum number of matches which you have to buy for assembling CME.",
    "note": "The first and second queries are explained in the statement. In the third query, you can assemble 1 + 3 = 4 ( | + | | | = | | | | ) without buying matches. In the fourth query, buy one match and assemble 2 + 4 = 6 ( | | + | | | | = | | | | | | ) .",
    "topics": [
      "math"
    ],
    "id": "1223A"
  },
  {
    "title": "Perfect Team",
    "url": "https://codeforces.com/problemset/problem/1221/C",
    "history": "You may have already known that a standard ICPC team consists of exactly three members. The perfect team however has more restrictions. A student can have some specialization: coder or mathematician. She/ he can have no specialization, but can' t have both at the same time. So the team is considered perfect if it includes at least one coder, at least one mathematician and it consists of exactly three members. You are a coach at a very large university and you know that c of your students are coders, m are mathematicians and x have no specialization. What is the maximum number of full perfect teams you can distribute them into? Note that some students can be left without a team and each student can be a part of no more than one team. You are also asked to answer q independent queries.",
    "input": "The first line contains a single integer q ( 1 \u2264 q \u2264 10^ 4 ) \u2014 the number of queries. Each of the next q lines contains three integers c , m and x ( 0 \u2264 c, m, x \u2264 10^ 8 ) \u2014 the number of coders, mathematicians and students without any specialization in the university, respectively. Note that the no student is both coder and mathematician at the same time.",
    "output": "Print q integers \u2014 the i - th of them should be the answer to the i query in the order they are given in the input. The answer is the maximum number of full perfect teams you can distribute your students into.",
    "note": "In the first example here are how teams are formed: the only team of 1 coder, 1 mathematician and 1 without specialization; all three teams consist of 1 coder and 2 mathematicians; no teams can be formed; no teams can be formed; one team consists of 1 coder, 1 mathematician and 1 without specialization, the rest aren' t able to form any team; one team consists of 1 coder, 1 mathematician and 1 without specialization, one consists of 2 coders and 1 mathematician and one consists of 1 coder and 2 mathematicians.",
    "topics": [
      "binary search",
      "math"
    ],
    "id": "1221C"
  },
  {
    "title": "2048 Game",
    "url": "https://codeforces.com/problemset/problem/1221/A",
    "history": "You are playing a variation of game 2048. Initially you have a multiset s of n integers. Every integer in this multiset is a power of two. You may perform any number ( possibly, zero) operations with this multiset. During each operation you choose two equal integers from s , remove them from s and insert the number equal to their sum into s . For example, if s = { 1, 2, 1, 1, 4, 2, 2} and you choose integers 2 and 2 , then the multiset becomes { 1, 1, 1, 4, 4, 2} . You win if the number 2048 belongs to your multiset. For example, if s = { 1024, 512, 512, 4} you can win as follows: choose 512 and 512 , your multiset turns into { 1024, 1024, 4} . Then choose 1024 and 1024 , your multiset turns into { 2048, 4} and you win. You have to determine if you can win this game. You have to answer q independent queries.",
    "input": "The first line contains one integer q ( 1 \u2264 q \u2264 100 ) \u2013 the number of queries. The first line of each query contains one integer n ( 1 \u2264 n \u2264 100 ) \u2014 the number of elements in multiset. The second line of each query contains n integers s_ 1, s_ 2, . . . , s_ n ( 1 \u2264 s_ i \u2264 2^ 29 ) \u2014 the description of the multiset. It is guaranteed that all elements of the multiset are powers of two.",
    "output": "For each query print YES if it is possible to obtain the number 2048 in your multiset, and NO otherwise. You may print every letter in any case you want ( so, for example, the strings yEs, yes, Yes and YES will all be recognized as positive answer) .",
    "note": "In the first query you can win as follows: choose 512 and 512 , and s turns into { 1024, 64, 1024} . Then choose 1024 and 1024 , and s turns into { 2048, 64} and you win. In the second query s contains 2048 initially.",
    "topics": [
      "brute force",
      "greedy",
      "math"
    ],
    "id": "1221A"
  },
  {
    "title": "Alex and Julian",
    "url": "https://codeforces.com/problemset/problem/1220/D",
    "history": "Boy Dima gave Julian a birthday present \u2014 set B consisting of positive integers. However, he didn' t know, that Julian hates sets, but enjoys bipartite graphs more than anything else! Julian was almost upset, but her friend Alex said, that he can build an undirected graph using this set in such a way: let all integer numbers be vertices, then connect any two i and j with an edge if | i - j| belongs to B . Unfortunately, Julian doesn' t like the graph, that was built using B . Alex decided to rectify the situation, so he wants to erase some numbers from B , so that graph built using the new set is bipartite. The difficulty of this task is that the graph, Alex has to work with, has an infinite number of vertices and edges! It is impossible to solve this task alone, so Alex asks you for help. Write a program that erases a subset of minimum size from B so that graph constructed on the new set is bipartite. Recall, that graph is bipartite if all its vertices can be divided into two disjoint sets such that every edge connects a vertex from different sets.",
    "input": "First line contains an integer n ( 1 \u2a7d n \u2a7d 200 000) \u2014 size of B Second line contains n integers b_ 1, b_ 2, . . . , b_ n ( 1 \u2a7d b_ i \u2a7d 10^ 18) \u2014 numbers of B , all b_ i are unique",
    "output": "In the first line print single integer k \u2013 the number of erased elements. In the second line print k integers \u2014 values of erased elements. If there are multiple answers, print any of them.",
    "note": "",
    "topics": [
      "bitmasks",
      "math",
      "number theory"
    ],
    "id": "1220D"
  },
  {
    "title": "Multiplication Table",
    "url": "https://codeforces.com/problemset/problem/1220/B",
    "history": "Sasha grew up and went to first grade. To celebrate this event her mother bought her a multiplication table M with n rows and n columns such that M_ ij= a_ i \u00b7 a_ j where a_ 1, . . . , a_ n is some sequence of positive integers. Of course, the girl decided to take it to school with her. But while she was having lunch, hooligan Grisha erased numbers on the main diagonal and threw away the array a_ 1, . . . , a_ n . Help Sasha restore the array!",
    "input": "The first line contains a single integer n ( 3 \u2a7d n \u2a7d 10^ 3 ) , the size of the table. The next n lines contain n integers each. The j - th number of the i - th line contains the number M_ ij ( 1 \u2264 M_ ij\u2264 10^ 9 ) . The table has zeroes on the main diagonal, that is, M_ ii= 0 .",
    "output": "In a single line print n integers, the original array a_ 1, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 9 ) . It is guaranteed that an answer exists. If there are multiple answers, print any.",
    "note": "",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "1220B"
  },
  {
    "title": "Sum Queries?",
    "url": "https://codeforces.com/problemset/problem/1217/E",
    "history": "Let' s define a balanced multiset the following way. Write down the sum of all elements of the multiset in its decimal representation. For each position of that number check if the multiset includes at least one element such that the digit of the element and the digit of the sum at that position are the same. If that holds for every position, then the multiset is balanced. Otherwise it' s unbalanced. For example, multiset { 20, 300, 10001} is balanced and multiset { 20, 310, 10001} is unbalanced: The red digits mark the elements and the positions for which these elements have the same digit as the sum. The sum of the first multiset is 10321 , every position has the digit required. The sum of the second multiset is 10331 and the second- to- last digit doesn' t appear in any number, thus making the multiset unbalanced. You are given an array a_ 1, a_ 2, . . . , a_ n , consisting of n integers. You are asked to perform some queries on it. The queries can be of two types: 1 i x \u2014 replace a_ i with the value x ; 2 l r \u2014 find the unbalanced subset of the multiset of the numbers a_ l, a_ l + 1, . . . , a_ r with the minimum sum, or report that no unbalanced subset exists. Note that the empty multiset is balanced. For each query of the second type print the lowest sum of the unbalanced subset. Print - 1 if no unbalanced subset exists.",
    "input": "The first line contains two integers n and m ( 1 \u2264 n, m \u2264 2 \u00b7 10^ 5 ) \u2014 the number of elements in the array and the number of queries, respectively. The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i < 10^ 9 ) . Each of the following m lines contains a query of one of two types: 1 i x ( 1 \u2264 i \u2264 n , 1 \u2264 x < 10^ 9 ) \u2014 replace a_ i with the value x ; 2 l r ( 1 \u2264 l \u2264 r \u2264 n ) \u2014 find the unbalanced subset of the multiset of the numbers a_ l, a_ l + 1, . . . , a_ r with the lowest sum, or report that no unbalanced subset exists. It is guaranteed that there is at least one query of the second type.",
    "output": "For each query of the second type print the lowest sum of the unbalanced subset. Print - 1 if no unbalanced subset exists.",
    "note": "All the subsets of multiset { 20, 300, 10001} are balanced, thus the answer is - 1. The possible unbalanced subsets in the third query are { 20, 310} and { 20, 310, 10001} . The lowest sum one is { 20, 310} . Note that you are asked to choose a subset, not a subsegment, thus the chosen elements might not be adjancent in the array. The fourth query includes only the empty subset and subset { 20} . Both of them are balanced. The last query includes the empty subset and the subsets { 20} , { 20} and { 20, 20} . Only { 20, 20} is unbalanced, its sum is 40 . Note that you are asked to choose a multiset, thus it might include equal elements.",
    "topics": [
      "data structures",
      "greedy",
      "implementation",
      "math"
    ],
    "id": "1217E"
  },
  {
    "title": "Zmei Gorynich",
    "url": "https://codeforces.com/problemset/problem/1217/B",
    "history": "You are fighting with Zmei Gorynich \u2014 a ferocious monster from Slavic myths, a huge dragon- like reptile with multiple heads! Initially Zmei Gorynich has x heads. You can deal n types of blows. If you deal a blow of the i - th type, you decrease the number of Gorynich' s heads by min( d_ i, curX) , there curX is the current number of heads. But if after this blow Zmei Gorynich has at least one head, he grows h_ i new heads. If curX = 0 then Gorynich is defeated. You can deal each blow any number of times, in any order. For example, if curX = 10 , d = 7 , h = 10 then the number of heads changes to 13 ( you cut 7 heads off, but then Zmei grows 10 new ones) , but if curX = 10 , d = 11 , h = 100 then number of heads changes to 0 and Zmei Gorynich is considered defeated. Calculate the minimum number of blows to defeat Zmei Gorynich! You have to answer t independent queries.",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 100 ) \u2013 the number of queries. The first line of each query contains two integers n and x ( 1 \u2264 n \u2264 100 , 1 \u2264 x \u2264 10^ 9 ) \u2014 the number of possible types of blows and the number of heads Zmei initially has, respectively. The following n lines of each query contain the descriptions of types of blows you can deal. The i - th line contains two integers d_ i and h_ i ( 1 \u2264 d_ i, h_ i \u2264 10^ 9 ) \u2014 the description of the i - th blow.",
    "output": "For each query print the minimum number of blows you have to deal to defeat Zmei Gorynich. If Zmei Gorynuch cannot be defeated print - 1 .",
    "note": "In the first query you can deal the first blow ( after that the number of heads changes to 10 - 6 + 3 = 7 ) , and then deal the second blow. In the second query you just deal the first blow three times, and Zmei is defeated. In third query you can not defeat Zmei Gorynich. Maybe it' s better to convince it to stop fighting?",
    "topics": [
      "greedy",
      "math"
    ],
    "id": "1217B"
  },
  {
    "title": "Creating a Character",
    "url": "https://codeforces.com/problemset/problem/1217/A",
    "history": "You play your favourite game yet another time. You chose the character you didn' t play before. It has str points of strength and int points of intelligence. Also, at start, the character has exp free experience points you can invest either in strength or in intelligence ( by investing one point you can either raise strength by 1 or raise intelligence by 1 ) . Since you' d like to make some fun you want to create a jock character, so it has more strength than intelligence points ( resulting strength is strictly greater than the resulting intelligence) . Calculate the number of different character builds you can create ( for the purpose of replayability) if you must invest all free points. Two character builds are different if their strength and/ or intellect are different.",
    "input": "The first line contains the single integer T ( 1 \u2264 T \u2264 100 ) \u2014 the number of queries. Next T lines contain descriptions of queries \u2014 one per line. This line contains three integers str , int and exp ( 1 \u2264 str, int \u2264 10^ 8 , 0 \u2264 exp \u2264 10^ 8 ) \u2014 the initial strength and intelligence of the character and the number of free points, respectively.",
    "output": "Print T integers \u2014 one per query. For each query print the number of different character builds you can create.",
    "note": "In the first query there are only three appropriate character builds: ( str = 7, int = 5) , ( 8, 4) and ( 9, 3) . All other builds are either too smart or don' t use all free points. In the second query there is only one possible build: ( 2, 1) . In the third query there are two appropriate builds: ( 7, 6) , ( 8, 5) . In the fourth query all builds have too much brains.",
    "topics": [
      "binary search",
      "math"
    ],
    "id": "1217A"
  },
  {
    "title": "Numerical Sequence (hard version)",
    "url": "https://codeforces.com/problemset/problem/1216/E2",
    "history": "The only difference between the easy and the hard versions is the maximum value of k . You are given an infinite sequence of form \" 112123123412345 . . . \" which consist of blocks of all consecutive positive integers written one after another. The first block consists of all numbers from 1 to 1 , the second one \u2014 from 1 to 2 , the third one \u2014 from 1 to 3 , . . . , the i - th block consists of all numbers from 1 to i . So the first 56 elements of the sequence are \" 11212312341234512345612345671234567812345678912345678910\" . Elements of the sequence are numbered from one. For example, the 1 - st element of the sequence is 1 , the 3 - rd element of the sequence is 2 , the 20 - th element of the sequence is 5 , the 38 - th element is 2 , the 56 - th element of the sequence is 0 . Your task is to answer q independent queries. In the i - th query you are given one integer k_ i . Calculate the digit at the position k_ i of the sequence.",
    "input": "The first line of the input contains one integer q ( 1 \u2264 q \u2264 500 ) \u2014 the number of queries. The i - th of the following q lines contains one integer k_ i ( 1 \u2264 k_ i \u2264 10^ 18) \u2014 the description of the corresponding query.",
    "output": "Print q lines. In the i - th line print one digit x_ i ( 0 \u2264 x_ i \u2264 9) \u2014 the answer to the query i , i. e. x_ i should be equal to the element at the position k_ i of the sequence.",
    "note": "Answers on queries from the first example are described in the problem statement.",
    "topics": [
      "binary search",
      "math"
    ],
    "id": "1216E2"
  },
  {
    "title": "Numerical Sequence (easy version)",
    "url": "https://codeforces.com/problemset/problem/1216/E1",
    "history": "The only difference between the easy and the hard versions is the maximum value of k . You are given an infinite sequence of form \" 112123123412345 . . . \" which consist of blocks of all consecutive positive integers written one after another. The first block consists of all numbers from 1 to 1 , the second one \u2014 from 1 to 2 , the third one \u2014 from 1 to 3 , . . . , the i - th block consists of all numbers from 1 to i . So the first 56 elements of the sequence are \" 11212312341234512345612345671234567812345678912345678910\" . Elements of the sequence are numbered from one. For example, the 1 - st element of the sequence is 1 , the 3 - rd element of the sequence is 2 , the 20 - th element of the sequence is 5 , the 38 - th element is 2 , the 56 - th element of the sequence is 0 . Your task is to answer q independent queries. In the i - th query you are given one integer k_ i . Calculate the digit at the position k_ i of the sequence.",
    "input": "The first line of the input contains one integer q ( 1 \u2264 q \u2264 500 ) \u2014 the number of queries. The i - th of the following q lines contains one integer k_ i ( 1 \u2264 k_ i \u2264 10^ 9) \u2014 the description of the corresponding query.",
    "output": "Print q lines. In the i - th line print one digit x_ i ( 0 \u2264 x_ i \u2264 9) \u2014 the answer to the query i , i. e. x_ i should be equal to the element at the position k_ i of the sequence.",
    "note": "Answers on queries from the first example are described in the problem statement.",
    "topics": [
      "binary search",
      "brute force",
      "math"
    ],
    "id": "1216E1"
  },
  {
    "title": "Swords",
    "url": "https://codeforces.com/problemset/problem/1216/D",
    "history": "There were n types of swords in the theater basement which had been used during the plays. Moreover there were exactly x swords of each type. y people have broken into the theater basement and each of them has taken exactly z swords of some single type. Note that different people might have taken different types of swords. Note that the values x, y and z are unknown for you. The next morning the director of the theater discovers the loss. He counts all swords \u2014 exactly a_ i swords of the i - th type are left untouched. The director has no clue about the initial number of swords of each type in the basement, the number of people who have broken into the basement and how many swords each of them have taken. For example, if n= 3 , a = [ 3, 12, 6] then one of the possible situations is x= 12 , y= 5 and z= 3 . Then the first three people took swords of the first type and the other two people took swords of the third type. Note that you don' t know values x, y and z beforehand but know values of n and a . Thus he seeks for your help. Determine the minimum number of people y , which could have broken into the theater basement, and the number of swords z each of them has taken.",
    "input": "The first line of the input contains one integer n ( 2 \u2264 n \u2264 2 \u00b7 10^ 5) \u2014 the number of types of swords. The second line of the input contains the sequence a_ 1, a_ 2, . . . , a_ n ( 0 \u2264 a_ i \u2264 10^ 9) , where a_ i equals to the number of swords of the i - th type, which have remained in the basement after the theft. It is guaranteed that there exists at least one such pair of indices ( j, k) that a_ j = \u0338 a_ k .",
    "output": "Print two integers y and z \u2014 the minimum number of people which could have broken into the basement and the number of swords each of them has taken.",
    "note": "In the first example the minimum value of y equals to 5 , i. e. the minimum number of people who could have broken into the basement, is 5 . Each of them has taken 3 swords: three of them have taken 3 swords of the first type, and two others have taken 3 swords of the third type. In the second example the minimum value of y is 1 , i. e. the minimum number of people who could have broken into the basement, equals to 1 . He has taken 7 swords of the first type.",
    "topics": [
      "math"
    ],
    "id": "1216D"
  },
  {
    "title": "White Sheet",
    "url": "https://codeforces.com/problemset/problem/1216/C",
    "history": "There is a white sheet of paper lying on a rectangle table. The sheet is a rectangle with its sides parallel to the sides of the table. If you will take a look from above and assume that the bottom left corner of the table has coordinates ( 0, 0) , and coordinate axes are left and bottom sides of the table, then the bottom left corner of the white sheet has coordinates ( x_ 1, y_ 1) , and the top right \u2014 ( x_ 2, y_ 2) . After that two black sheets of paper are placed on the table. Sides of both black sheets are also parallel to the sides of the table. Coordinates of the bottom left corner of the first black sheet are ( x_ 3, y_ 3) , and the top right \u2014 ( x_ 4, y_ 4) . Coordinates of the bottom left corner of the second black sheet are ( x_ 5, y_ 5) , and the top right \u2014 ( x_ 6, y_ 6) . Example of three rectangles. Determine if some part of the white sheet can be seen from the above after the two black sheets are placed. The part of the white sheet can be seen if there is at least one point lying not strictly inside the white sheet and strictly outside of both black sheets.",
    "input": "The first line of the input contains four integers x_ 1, y_ 1, x_ 2, y_ 2 ( 0 \u2264 x_ 1 < x_ 2 \u2264 10^ 6, 0 \u2264 y_ 1 < y_ 2 \u2264 10^ 6) \u2014 coordinates of the bottom left and the top right corners of the white sheet. The second line of the input contains four integers x_ 3, y_ 3, x_ 4, y_ 4 ( 0 \u2264 x_ 3 < x_ 4 \u2264 10^ 6, 0 \u2264 y_ 3 < y_ 4 \u2264 10^ 6) \u2014 coordinates of the bottom left and the top right corners of the first black sheet. The third line of the input contains four integers x_ 5, y_ 5, x_ 6, y_ 6 ( 0 \u2264 x_ 5 < x_ 6 \u2264 10^ 6, 0 \u2264 y_ 5 < y_ 6 \u2264 10^ 6) \u2014 coordinates of the bottom left and the top right corners of the second black sheet. The sides of each sheet of paper are parallel ( perpendicular) to the coordinate axes.",
    "output": "If some part of the white sheet can be seen from the above after the two black sheets are placed, print \" YES\" ( without quotes) . Otherwise print \" NO\" .",
    "note": "In the first example the white sheet is fully covered by black sheets. In the second example the part of the white sheet can be seen after two black sheets are placed. For example, the point ( 6. 5, 4. 5) lies not strictly inside the white sheet and lies strictly outside of both black sheets.",
    "topics": [
      "geometry",
      "math"
    ],
    "id": "1216C"
  },
  {
    "title": "Ticket Game",
    "url": "https://codeforces.com/problemset/problem/1215/D",
    "history": "Monocarp and Bicarp live in Berland, where every bus ticket consists of n digits ( n is an even number) . During the evening walk Monocarp and Bicarp found a ticket where some of the digits have been erased. The number of digits that have been erased is even. Monocarp and Bicarp have decided to play a game with this ticket. Monocarp hates happy tickets, while Bicarp collects them. A ticket is considered happy if the sum of the first n/ 2 digits of this ticket is equal to the sum of the last n/ 2 digits. Monocarp and Bicarp take turns ( and Monocarp performs the first of them) . During each turn, the current player must replace any erased digit with any digit from 0 to 9 . The game ends when there are no erased digits in the ticket. If the ticket is happy after all erased digits are replaced with decimal digits, then Bicarp wins. Otherwise, Monocarp wins. You have to determine who will win if both players play optimally.",
    "input": "The first line contains one even integer n ( 2 \u2264 n \u2264 2 \u00b7 10^ 5) \u2014 the number of digits in the ticket. The second line contains a string of n digits and \" ? \" characters \u2014 the ticket which Monocarp and Bicarp have found. If the i - th character is \" ? \" , then the i - th digit is erased. Note that there may be leading zeroes. The number of \" ? \" characters is even.",
    "output": "If Monocarp wins, print \" Monocarp\" ( without quotes) . Otherwise print \" Bicarp\" ( without quotes) .",
    "note": "Since there is no question mark in the ticket in the first example, the winner is determined before the game even starts, and it is Bicarp. In the second example, Bicarp also wins. After Monocarp chooses an erased digit and replaces it with a new one, Bicap can choose another position with an erased digit and replace it with the same digit, so the ticket is happy.",
    "topics": [
      "games",
      "greedy",
      "math"
    ],
    "id": "1215D"
  },
  {
    "title": "Yellow Cards",
    "url": "https://codeforces.com/problemset/problem/1215/A",
    "history": "The final match of the Berland Football Cup has been held recently. The referee has shown n yellow cards throughout the match. At the beginning of the match there were a_ 1 players in the first team and a_ 2 players in the second team. The rules of sending players off the game are a bit different in Berland football. If a player from the first team receives k_ 1 yellow cards throughout the match, he can no longer participate in the match \u2014 he' s sent off. And if a player from the second team receives k_ 2 yellow cards, he' s sent off. After a player leaves the match, he can no longer receive any yellow cards. Each of n yellow cards was shown to exactly one player. Even if all players from one team ( or even from both teams) leave the match, the game still continues. The referee has lost his records on who has received each yellow card. Help him to determine the minimum and the maximum number of players that could have been thrown out of the game.",
    "input": "The first line contains one integer a_ 1 ( 1 \u2264 a_ 1 \u2264 1 000) \u2014 the number of players in the first team. The second line contains one integer a_ 2 ( 1 \u2264 a_ 2 \u2264 1 000) \u2014 the number of players in the second team. The third line contains one integer k_ 1 ( 1 \u2264 k_ 1 \u2264 1 000) \u2014 the maximum number of yellow cards a player from the first team can receive ( after receiving that many yellow cards, he leaves the game) . The fourth line contains one integer k_ 2 ( 1 \u2264 k_ 2 \u2264 1 000) \u2014 the maximum number of yellow cards a player from the second team can receive ( after receiving that many yellow cards, he leaves the game) . The fifth line contains one integer n ( 1 \u2264 n \u2264 a_ 1 \u00b7 k_ 1 + a_ 2 \u00b7 k_ 2) \u2014 the number of yellow cards that have been shown during the match.",
    "output": "Print two integers \u2014 the minimum and the maximum number of players that could have been thrown out of the game.",
    "note": "In the first example it could be possible that no player left the game, so the first number in the output is 0 . The maximum possible number of players that could have been forced to leave the game is 4 \u2014 one player from the first team, and three players from the second. In the second example the maximum possible number of yellow cards has been shown ( 3 \u00b7 6 + 1 \u00b7 7 = 25) , so in any case all players were sent off.",
    "topics": [
      "greedy",
      "implementation",
      "math"
    ],
    "id": "1215A"
  },
  {
    "title": "Petya and Construction Set",
    "url": "https://codeforces.com/problemset/problem/1214/E",
    "history": "It' s Petya' s birthday party and his friends have presented him a brand new \" Electrician- n \" construction set, which they are sure he will enjoy as he always does with weird puzzles they give him. Construction set \" Electrician- n \" consists of 2n - 1 wires and 2n light bulbs. Each bulb has its own unique index that is an integer from 1 to 2n , while all wires look the same and are indistinguishable. In order to complete this construction set one has to use each of the wires to connect two distinct bulbs. We define a chain in a completed construction set as a sequence of distinct bulbs of length at least two, such that every two consecutive bulbs in this sequence are directly connected by a wire. Completed construction set configuration is said to be correct if a resulting network of bulbs and wires has a tree structure, i. e. any two distinct bulbs are the endpoints of some chain. Petya was assembling different configurations for several days, and he noticed that sometimes some of the bulbs turn on. After a series of experiments he came up with a conclusion that bulbs indexed 2i and 2i - 1 turn on if the chain connecting them consists of exactly d_ i wires. Moreover, the following important condition holds: the value of d_ i is never greater than n . Petya did his best but was not able to find a configuration that makes all bulbs to turn on, so he seeks your assistance. Please, find out a configuration that makes all bulbs shine. It is guaranteed that such configuration always exists.",
    "input": "The first line of the input contains a single integer n ( 1 \u2264 n \u2264 100 000 ) \u2014 the parameter of a construction set that defines the number of bulbs and the number of wires. Next line contains n integers d_ 1, d_ 2, . . . , d_ n ( 1 \u2264 d_ i \u2264 n ) , where d_ i stands for the number of wires the chain between bulbs 2i and 2i - 1 should consist of.",
    "output": "Print 2n - 1 lines. The i - th of them should contain two distinct integers a_ i and b_ i ( 1 \u2264 a_ i, b_ i \u2264 2n , a_ i b_ i ) \u2014 indices of bulbs connected by a wire. If there are several possible valid answer you can print any of them.",
    "note": "Answer for the first sample test. Answer for the second sample test.",
    "topics": [
      "constructive algorithms",
      "graphs",
      "math",
      "sortings",
      "trees"
    ],
    "id": "1214E"
  },
  {
    "title": "Badges",
    "url": "https://codeforces.com/problemset/problem/1214/B",
    "history": "There are b boys and g girls participating in Olympiad of Metropolises. There will be a board games tournament in the evening and n participants have accepted the invitation. The organizers do not know how many boys and girls are among them. Organizers are preparing red badges for girls and blue ones for boys. Vasya prepared n+ 1 decks of badges. The i - th ( where i is from 0 to n , inclusive) deck contains i blue badges and n- i red ones. The total number of badges in any deck is exactly n . Determine the minimum number of decks among these n+ 1 that Vasya should take, so that there will be a suitable deck no matter how many girls and boys there will be among the participants of the tournament.",
    "input": "The first line contains an integer b ( 1 \u2264 b \u2264 300 ) , the number of boys. The second line contains an integer g ( 1 \u2264 g \u2264 300 ) , the number of girls. The third line contains an integer n ( 1 \u2264 n \u2264 b + g ) , the number of the board games tournament participants.",
    "output": "Output the only integer, the minimum number of badge decks that Vasya could take.",
    "note": "In the first example, each of 4 decks should be taken: ( 0 blue, 3 red) , ( 1 blue, 2 red) , ( 2 blue, 1 red) , ( 3 blue, 0 red) . In the second example, 4 decks should be taken: ( 2 blue, 3 red) , ( 3 blue, 2 red) , ( 4 blue, 1 red) , ( 5 blue, 0 red) . Piles ( 0 blue, 5 red) and ( 1 blue, 4 red) can not be used.",
    "topics": [
      "brute force",
      "math"
    ],
    "id": "1214B"
  },
  {
    "title": "Optimal Currency Exchange",
    "url": "https://codeforces.com/problemset/problem/1214/A",
    "history": "Andrew was very excited to participate in Olympiad of Metropolises. Days flew by quickly, and Andrew is already at the airport, ready to go home. He has n rubles left, and would like to exchange them to euro and dollar bills. Andrew can mix dollar bills and euro bills in whatever way he wants. The price of one dollar is d rubles, and one euro costs e rubles. Recall that there exist the following dollar bills: 1 , 2 , 5 , 10 , 20 , 50 , 100 , and the following euro bills \u2014 5 , 10 , 20 , 50 , 100 , 200 ( note that, in this problem we do not consider the 500 euro bill, it is hard to find such bills in the currency exchange points) . Andrew can buy any combination of bills, and his goal is to minimize the total number of rubles he will have after the exchange. Help him \u2014 write a program that given integers n , e and d , finds the minimum number of rubles Andrew can get after buying dollar and euro bills.",
    "input": "The first line of the input contains one integer n ( 1 \u2264 n \u2264 10^ 8 ) \u2014 the initial sum in rubles Andrew has. The second line of the input contains one integer d ( 30 \u2264 d \u2264 100 ) \u2014 the price of one dollar in rubles. The third line of the input contains integer e ( 30 \u2264 e \u2264 100 ) \u2014 the price of one euro in rubles.",
    "output": "Output one integer \u2014 the minimum number of rubles Andrew can have after buying dollar and euro bills optimally.",
    "note": "In the first example, we can buy just 1 dollar because there is no 1 euro bill. In the second example, optimal exchange is to buy 5 euro and 1 dollar. In the third example, optimal exchange is to buy 10 dollars in one bill.",
    "topics": [
      "brute force",
      "math"
    ],
    "id": "1214A"
  },
  {
    "title": "Equalizing by Division (hard version)",
    "url": "https://codeforces.com/problemset/problem/1213/D2",
    "history": "The only difference between easy and hard versions is the number of elements in the array. You are given an array a consisting of n integers. In one move you can choose any a_ i and divide it by 2 rounding down ( in other words, in one move you can set a_ i : = \u230aa_ i/ 2\u230b ) . You can perform such an operation any ( possibly, zero) number of times with any a_ i . Your task is to calculate the minimum possible number of operations required to obtain at least k equal numbers in the array. Don' t forget that it is possible to have a_ i = 0 after some operations, thus the answer always exists.",
    "input": "The first line of the input contains two integers n and k ( 1 \u2264 k \u2264 n \u2264 2 \u00b7 10^ 5 ) \u2014 the number of elements in the array and the number of equal numbers required. The second line of the input contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 2 \u00b7 10^ 5 ) , where a_ i is the i - th element of a .",
    "output": "Print one integer \u2014 the minimum possible number of operations required to obtain at least k equal numbers in the array.",
    "note": "",
    "topics": [
      "brute force",
      "math",
      "sortings"
    ],
    "id": "1213D2"
  },
  {
    "title": "Book Reading",
    "url": "https://codeforces.com/problemset/problem/1213/C",
    "history": "Polycarp is reading a book consisting of n pages numbered from 1 to n . Every time he finishes the page with the number divisible by m , he writes down the last digit of this page number. For example, if n= 15 and m= 5 , pages divisible by m are 5, 10, 15 . Their last digits are 5, 0, 5 correspondingly, their sum is 10 . Your task is to calculate the sum of all digits Polycarp has written down. You have to answer q independent queries.",
    "input": "The first line of the input contains one integer q ( 1 \u2264 q \u2264 1000 ) \u2014 the number of queries. The following q lines contain queries, one per line. Each query is given as two integers n and m ( 1 \u2264 n, m \u2264 10^ 16 ) \u2014 the number of pages in the book and required divisor, respectively.",
    "output": "For each query print the answer for it \u2014 the sum of digits written down by Polycarp.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": "1213C"
  },
  {
    "title": "Chips Moving",
    "url": "https://codeforces.com/problemset/problem/1213/A",
    "history": "You are given n chips on a number line. The i - th chip is placed at the integer coordinate x_ i . Some chips can have equal coordinates. You can perform each of the two following types of moves any ( possibly, zero) number of times on any chip: Move the chip i by 2 to the left or 2 to the right for free ( i. e. replace the current coordinate x_ i with x_ i - 2 or with x_ i + 2 ) ; move the chip i by 1 to the left or 1 to the right and pay one coin for this move ( i. e. replace the current coordinate x_ i with x_ i - 1 or with x_ i + 1 ) . Note that it' s allowed to move chips to any integer coordinate, including negative and zero. Your task is to find the minimum total number of coins required to move all n chips to the same coordinate ( i. e. all x_ i should be equal after some sequence of moves) .",
    "input": "The first line of the input contains one integer n ( 1 \u2264 n \u2264 100 ) \u2014 the number of chips. The second line of the input contains n integers x_ 1, x_ 2, . . . , x_ n ( 1 \u2264 x_ i \u2264 10^ 9 ) , where x_ i is the coordinate of the i - th chip.",
    "output": "Print one integer \u2014 the minimum total number of coins required to move all n chips to the same coordinate.",
    "note": "In the first example you need to move the first chip by 2 to the right and the second chip by 1 to the right or move the third chip by 2 to the left and the second chip by 1 to the left so the answer is 1 . In the second example you need to move two chips with coordinate 3 by 1 to the left so the answer is 2 .",
    "topics": [
      "math"
    ],
    "id": "1213A"
  },
  {
    "title": "King's Path",
    "url": "https://codeforces.com/problemset/problem/1211/G",
    "history": "There are n cities and n- 1 two- way roads in Treeland. Each road connects a pair of different cities. From any city you can drive to any other, moving only along the roads. Cities are numbered from 1 to n . Yes, of course, you recognized an undirected tree in this description. There is exactly one flag in each city, in the i - th city the flag color is c_ i . The colors of the flags in different cities may be the same. If the King travels along the route [ u_ 1, u_ 2, u_ 3, . . . , u_ k] , then this means that he starts in the city u_ 1 , then moves to the city u_ 2 ( u_ 2 is connected by road with u_ 1 ) , then from u_ 2 to u_ 3 ( u_ 3 is connected by road to u_ 2 ) , and so on until he arrives in the city of u_ k . It is possible that during this route the King will visit the same city more than once. In other words, the route [ u_ 1, u_ 2, u_ 3, . . . , u_ k] does not necessarily consist of different cities. In terms of graph theory \u2014 the King moves from u_ 1 to u_ k along some path [ u_ 1, u_ 2, u_ 3, . . . , u_ k] , which is not necessarily simple ( for all j from 1 to k- 1 of the city u_ j and u_ j+ 1 are connected by road) . When the King moves from one city to another, city heads exchange flags as a sign of their friendship. Example of moving the King along the route [ 1, 4, 2, 6] . The color of the vertex matches the color of the flag at that vertex. For aesthetic reasons, the King wants the flag color in the city i to be equal to d_ i for all i from 1 to n . Determine whether the King can choose some route and drive along it so that for each city the flag color in it turns out to be equal to the desired color d_ i . Note that the King can choose ( and drive) exactly one route. If yes, find the shortest possible route for the King. If the initial colors of the flags already match the King' s requirements ( i. e. c_ i= d_ i for all i ) , then consider that the King makes a route of length k= 0 .",
    "input": "The first line contains an integer t ( 1 \u2264 t \u2264 10^ 5 ) \u2014 the number of test cases to solve. The following are the cases. Each case begins with a line containing an integer n ( 2 \u2264 n \u2264 2\u00b710^ 5 ) \u2014 the number of cities in Treeland. The following is a line of n integers c_ 1, c_ 2, . . . , c_ n ( 1 \u2264 c_ i \u2264 10^ 6 ) , where c_ i denotes the color of the flag at the i - th vertex before the King' s journey. The following is a line of n integers d_ 1, d_ 2, . . . , d_ n ( 1 \u2264 d_ i \u2264 10^ 6 ) , where d_ i denotes the required flag color at the i - th vertex after the completion of the King' s journey. Further, in the n- 1 line, the Treeland' s roads are listed. Each road is given by a line containing two integers x_ j, y_ j ( 1 \u2264 x_ j, y_ j \u2264 n ) \u2014 numbers of cities that are connected by the j th road. It is guaranteed that from every city you can get to any other by road ( in other words, the system of cities and roads forms an undirected tree) . The sum of all n values \u200b\u200bfor all cases in one test does not exceed 2\u00b710^ 5 .",
    "output": "Print the answers to all cases in the order of their appearance in the input data. Each answer must begin with a line containing \" Yes\" ( in the case of a positive answer) or \" No\" ( in the case that the required route does not exist) . In the case of a positive answer, the following line must contain an integer k \u2014 the number of cities in the shortest possible route of the King. The next line should contain the required route u_ 1, u_ 2, . . . , u_ k ( 1 \u2264 u_ i \u2264 n ) . You can skip the line if k= 0 .",
    "note": "",
    "topics": [
      "*special",
      "math",
      "trees"
    ],
    "id": "1211G"
  },
  {
    "title": "Teams",
    "url": "https://codeforces.com/problemset/problem/1211/D",
    "history": "There are n table bowling players, the rating of the i - th player equals r_ i . Compose a maximum number of teams in a such way that: each player belongs to at most one team; each team contains exactly a+ b players; each team contains a group of a players with the same rating and a group of b players with another same rating, which must be k times larger than the rating of the players in the first group. For example, if n= 12 , r= [ 1, 1, 2, 2, 2, 2, 2, 3, 3, 4, 6, 6] , a= 1 , b= 2 , k= 2 , you can compose two teams with ratings [ 1, 2, 2] and one team with ratings [ 3, 6, 6] . So, the maximum number of teams is 3 . Find the maximum number of teams by given n, r_ 1 . . . r_ n, a, b and k to compose in respect to the given requirements.",
    "input": "The first line of the input contains four integers n , a , b and k ( 1 \u2264 n, a, b \u2264 3\u00b710^ 5 , 2 \u2264 k \u2264 1000 ) . The second line contains the sequence of player' s ratings \u2014 integers r_ 1, r_ 2, . . . , r_ n ( 1 \u2264 r_ i \u2264 10^ 6 ) .",
    "output": "Print only one integer \u2014 the maximum number of teams that can be composed from n given players.",
    "note": "",
    "topics": [
      "*special",
      "binary search",
      "greedy",
      "math"
    ],
    "id": "1211D"
  },
  {
    "title": "Wojtek and Card Tricks",
    "url": "https://codeforces.com/problemset/problem/1210/E",
    "history": "Wojtek has just won a maths competition in Byteland! The prize is admirable \u2014 a great book called ' Card Tricks for Everyone. ' ' Great! ' he thought, ' I can finally use this old, dusted deck of cards that' s always been lying unused on my desk! ' The first chapter of the book is ' How to Shuffle k Cards in Any Order You Want. ' It' s basically a list of n intricate methods of shuffling the deck of k cards in a deterministic way. Specifically, the i - th recipe can be described as a permutation ( P_ i, 1, P_ i, 2, . . . , P_ i, k) of integers from 1 to k . If we enumerate the cards in the deck from 1 to k from top to bottom, then P_ i, j indicates the number of the j - th card from the top of the deck after the shuffle. The day is short and Wojtek wants to learn only some of the tricks today. He will pick two integers l, r ( 1 \u2264 l \u2264 r \u2264 n ) , and he will memorize each trick from the l - th to the r - th, inclusive. He will then take a sorted deck of k cards and repeatedly apply random memorized tricks until he gets bored. He still likes maths, so he started wondering: how many different decks can he have after he stops shuffling it? Wojtek still didn' t choose the integers l and r , but he is still curious. Therefore, he defined f( l, r) as the number of different decks he can get if he memorizes all the tricks between the l - th and the r - th, inclusive. What is the value of \u2211_ l= 1^ n \u2211_ r= l^ n f( l, r) ?",
    "input": "The first line contains two integers n , k ( 1 \u2264 n \u2264 200 000 , 1 \u2264 k \u2264 5 ) \u2014 the number of tricks and the number of cards in Wojtek' s deck. Each of the following n lines describes a single trick and is described by k distinct integers P_ i, 1, P_ i, 2, . . . , P_ i, k ( 1 \u2264 P_ i, j\u2264 k ) .",
    "output": "Output the value of the sum described in the statement.",
    "note": "Consider the first sample: The first trick swaps two top cards. The second trick takes a card from the bottom and puts it on the top of the deck. The third trick swaps two bottom cards. The first or the third trick allow Wojtek to generate only two distinct decks ( either the two cards are swapped or not) . Therefore, f( 1, 1) = f( 3, 3) = 2 . The second trick allows him to shuffle the deck in a cyclic order. Therefore, f( 2, 2) = 3 . It turns that two first tricks or two last tricks are enough to shuffle the deck in any way desired by Wojtek. Therefore, f( 1, 2) = f( 2, 3) = f( 1, 3) = 3! = 6 .",
    "topics": [
      "math"
    ],
    "id": "1210E"
  },
  {
    "title": "Kamil and Making a Stream",
    "url": "https://codeforces.com/problemset/problem/1210/C",
    "history": "Kamil likes streaming the competitive programming videos. His MeTube channel has recently reached 100 million subscribers. In order to celebrate this, he posted a video with an interesting problem he couldn' t solve yet. Can you help him? You' re given a tree \u2014 a connected undirected graph consisting of n vertices connected by n - 1 edges. The tree is rooted at vertex 1 . A vertex u is called an ancestor of v if it lies on the shortest path between the root and v . In particular, a vertex is an ancestor of itself. Each vertex v is assigned its beauty x_ v \u2014 a non- negative integer not larger than 10^ 12 . This allows us to define the beauty of a path. Let u be an ancestor of v . Then we define the beauty f( u, v) as the greatest common divisor of the beauties of all vertices on the shortest path between u and v . Formally, if u= t_ 1, t_ 2, t_ 3, . . . , t_ k= v are the vertices on the shortest path between u and v , then f( u, v) = ( x_ t_ 1, x_ t_ 2, . . . , x_ t_ k) . Here, denotes the greatest common divisor of a set of numbers. In particular, f( u, u) = ( x_ u) = x_ u . Your task is to find the sum \u2211_ u is an ancestor of v f( u, v) . As the result might be too large, please output it modulo 10^ 9 + 7 . Note that for each y , ( 0, y) = ( y, 0) = y . In particular, ( 0, 0) = 0 .",
    "input": "The first line contains a single integer n ( 2 \u2264 n \u2264 100 000 ) \u2014 the number of vertices in the tree. The following line contains n integers x_ 1, x_ 2, . . . , x_ n ( 0 \u2264 x_ i \u2264 10^ 12 ) . The value x_ v denotes the beauty of vertex v . The following n - 1 lines describe the edges of the tree. Each of them contains two integers a, b ( 1 \u2264 a, b \u2264 n , a = \u0338 b ) \u2014 the vertices connected by a single edge.",
    "output": "Output the sum of the beauties on all paths ( u, v) such that u is ancestor of v . This sum should be printed modulo 10^ 9 + 7 .",
    "note": "The following figure shows all 10 possible paths for which one endpoint is an ancestor of another endpoint. The sum of beauties of all these paths is equal to 42 :",
    "topics": [
      "math",
      "number theory",
      "trees"
    ],
    "id": "1210C"
  },
  {
    "title": "Moving Walkways",
    "url": "https://codeforces.com/problemset/problem/1209/H",
    "history": "Airports often use moving walkways to help you walking big distances faster. Each such walkway has some speed that effectively increases your speed. You can stand on such a walkway and let it move you, or you could also walk and then your effective speed is your walking speed plus walkway' s speed. Limak wants to get from point 0 to point L on a straight line. There are n disjoint walkways in between. The i - th walkway is described by two integers x_ i and y_ i and a real value s_ i . The i - th walkway starts at x_ i , ends at y_ i and has speed s_ i . Every walkway is located inside the segment [ 0, L] and no two walkways have positive intersection. However, they can touch by endpoints. Limak needs to decide how to distribute his energy. For example, it might make more sense to stand somewhere ( or to walk slowly) to then have a lot of energy to walk faster. Limak' s initial energy is 0 and it must never drop below that value. At any moment, he can walk with any speed v in the interval [ 0, 2] and it will cost him v energy per second, but he continuously recovers energy with speed of 1 energy per second. So, when he walks with speed v , his energy increases by ( 1- v) . Note that negative value would mean losing energy. In particular, he can walk with speed 1 and this won' t change his energy at all, while walking with speed 0. 77 effectively gives him 0. 23 energy per second. Limak can choose his speed arbitrarily ( any real value in interval [ 0, 2] ) at every moment of time ( including the moments when he is located on non- integer positions) . Everything is continuous ( non- discrete) . What is the fastest time Limak can get from 0 to L ?",
    "input": "The first line contains integers n and L ( 1 \u2264 n \u2264 200 000 , 1 \u2264 L \u2264 10^ 9 ) , the number of walkways and the distance to walk. Each of the next n lines contains integers x_ i , y_ i and real value s_ i ( 0 \u2264 x_ i < y_ i \u2264 L , 0. 1 \u2264 s_ i \u2264 10. 0 ) . The value s_ i is given with at most 9 digits after decimal point. It' s guaranteed, that no two walkways have a positive intersection. The walkways are listed from left to right. That is, y_ i \u2264 x_ i + 1 for 1 \u2264 i \u2264 n - 1 .",
    "output": "Print one real value, the fastest possible time to reach L . Your answer will be considered correct if its absolute or relative error won' t exceed 10^ - 9 .",
    "note": "The drawings show the first two examples. In the first one, there is a walkway from 0 to 2 with speed 2. 0 and Limak wants to get to point 5 . The second example has a walkway from 2 to 4 with speed 0. 91 . In the first example, one of optimal strategies is as follows. Get from 0 to 2 by standing still on the walkway. It moves you with speed 2 so it takes 1 second and you save up 1 energy. Get from 2 to 4 by walking with max speed 2 for next 1 second. It takes 1 second again and the energy drops to 0 . Get from 4 to 5 by walking with speed 1 . It takes 1 second and the energy stays constant at the value 0 . The total time is 1 + 1 + 1 = 3 .",
    "topics": [
      "data structures",
      "greedy",
      "math"
    ],
    "id": "1209H"
  },
  {
    "title": "Koala and Lights",
    "url": "https://codeforces.com/problemset/problem/1209/B",
    "history": "It is a holiday season, and Koala is decorating his house with cool lights! He owns n lights, all of which flash periodically. After taking a quick glance at them, Koala realizes that each of his lights can be described with two parameters a_ i and b_ i . Light with parameters a_ i and b_ i will toggle ( on to off, or off to on) every a_ i seconds starting from the b_ i - th second. In other words, it will toggle at the moments b_ i , b_ i + a_ i , b_ i + 2 \u00b7 a_ i and so on. You know for each light whether it' s initially on or off and its corresponding parameters a_ i and b_ i . Koala is wondering what is the maximum number of lights that will ever be on at the same time. So you need to find that out. Here is a graphic for the first example.",
    "input": "The first line contains a single integer n ( 1 \u2264 n \u2264 100 ) , the number of lights. The next line contains a string s of n characters. The i - th character is \" 1\" , if the i - th lamp is initially on. Otherwise, i - th character is \" 0\" . The i - th of the following n lines contains two integers a_ i and b_ i ( 1 \u2264 a_ i, b_ i \u2264 5 ) \u2014 the parameters of the i - th light.",
    "output": "Print a single integer \u2014 the maximum number of lights that will ever be on at the same time.",
    "note": "For first example, the lamps' states are shown in the picture above. The largest number of simultaneously on lamps is 2 ( e. g. at the moment 2 ) . In the second example, all lights are initially on. So the answer is 4 .",
    "topics": [
      "implementation",
      "math",
      "number theory"
    ],
    "id": "1209B"
  },
  {
    "title": "Paint the Numbers",
    "url": "https://codeforces.com/problemset/problem/1209/A",
    "history": "You are given a sequence of integers a_ 1, a_ 2, . . . , a_ n . You need to paint elements in colors, so that: If we consider any color, all elements of this color must be divisible by the minimal element of this color. The number of used colors must be minimized. For example, it' s fine to paint elements [ 40, 10, 60] in a single color, because they are all divisible by 10 . You can use any color an arbitrary amount of times ( in particular, it is allowed to use a color only once) . The elements painted in one color do not need to be consecutive. For example, if a= [ 6, 2, 3, 4, 12] then two colors are required: let' s paint 6 , 3 and 12 in the first color ( 6 , 3 and 12 are divisible by 3 ) and paint 2 and 4 in the second color ( 2 and 4 are divisible by 2 ) . For example, if a= [ 10, 7, 15] then 3 colors are required ( we can simply paint each element in an unique color) .",
    "input": "The first line contains an integer n ( 1 \u2264 n \u2264 100 ) , where n is the length of the given sequence. The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 100 ) . These numbers can contain duplicates.",
    "output": "Print the minimal number of colors to paint all the given numbers in a valid way.",
    "note": "In the first example, one possible way to paint the elements in 3 colors is: paint in the first color the elements: a_ 1= 10 and a_ 4= 5 , paint in the second color the element a_ 3= 3 , paint in the third color the elements: a_ 2= 2 , a_ 5= 4 and a_ 6= 2 . In the second example, you can use one color to paint all the elements. In the third example, one possible way to paint the elements in 4 colors is: paint in the first color the elements: a_ 4= 4 , a_ 6= 2 and a_ 7= 2 , paint in the second color the elements: a_ 2= 6 , a_ 5= 3 and a_ 8= 3 , paint in the third color the element a_ 3= 5 , paint in the fourth color the element a_ 1= 7 .",
    "topics": [
      "greedy",
      "implementation",
      "math"
    ],
    "id": "1209A"
  },
  {
    "title": "Polygons",
    "url": "https://codeforces.com/problemset/problem/1208/G",
    "history": "You are given two integers n and k . You need to construct k regular polygons having same circumcircle, with distinct number of sides l between 3 and n . Illustration for the first example. You can rotate them to minimize the total number of distinct points on the circle. Find the minimum number of such points.",
    "input": "The only line of input contains two integers n and k ( 3 \u2264 n \u2264 10^ 6 , 1 \u2264 k \u2264 n- 2 ) , the maximum number of sides of a polygon and the number of polygons to construct, respectively.",
    "output": "Print a single integer \u2014 the minimum number of points required for k polygons.",
    "note": "In the first example, we have n = 6 and k = 2 . So, we have 4 polygons with number of sides 3 , 4 , 5 and 6 to choose from and if we choose the triangle and the hexagon, then we can arrange them as shown in the picture in the statement. Hence, the minimum number of points required on the circle is 6 , which is also the minimum overall possible sets.",
    "topics": [
      "greedy",
      "math",
      "number theory"
    ],
    "id": "1208G"
  },
  {
    "title": "XORinacci",
    "url": "https://codeforces.com/problemset/problem/1208/A",
    "history": "Cengiz recently learned Fibonacci numbers and now he is studying different algorithms to find them. After getting bored of reading them, he came with his own new type of numbers that he named XORinacci numbers. He defined them as follows: f( 0) = a ; f( 1) = b ; f( n) = f( n- 1) \u2295 f( n- 2) when n > 1 , where \u2295 denotes the bitwise XOR operation. You are given three integers a , b , and n , calculate f( n) . You have to answer for T independent test cases.",
    "input": "The input contains one or more independent test cases. The first line of input contains a single integer T ( 1 \u2264 T \u2264 10^ 3 ) , the number of test cases. Each of the T following lines contains three space- separated integers a , b , and n ( 0 \u2264 a, b, n \u2264 10^ 9 ) respectively.",
    "output": "For each test case, output f( n) .",
    "note": "In the first example, f( 2) = f( 0) \u2295 f( 1) = 3 \u2295 4 = 7 .",
    "topics": [
      "math"
    ],
    "id": "1208A"
  },
  {
    "title": "XOR Guessing",
    "url": "https://codeforces.com/problemset/problem/1207/E",
    "history": "This is an interactive problem. Remember to flush your output while communicating with the testing program. You may use fflush( stdout) in C+ + , system. out. flush( ) in Java, stdout. flush( ) in Python or flush( output) in Pascal to flush the output. If you use some other programming language, consult its documentation. You may also refer to the guide on interactive problems: https: / / codeforces. com/ blog/ entry/ 45307. The jury picked an integer x not less than 0 and not greater than 2^ 14 - 1 . You have to guess this integer. To do so, you may ask no more than 2 queries. Each query should consist of 100 integer numbers a_ 1 , a_ 2 , . . . , a_ 100 ( each integer should be not less than 0 and not greater than 2^ 14 - 1 ) . In response to your query, the jury will pick one integer i ( 1 \u2264 i \u2264 100 ) and tell you the value of a_ i \u2295 x ( the bitwise XOR of a_ i and x ) . There is an additional constraint on the queries: all 200 integers you use in the queries should be distinct. It is guaranteed that the value of x is fixed beforehand in each test, but the choice of i in every query may depend on the integers you send. InteractionBefore giving the answer, you may submit no more than 2 queries. To ask a query, print one line in the following format: ? a_ 1 a_ 2 . . . a_ 100 , where every a_ j should be an integer from the range [ 0, 2^ 14 - 1] . The line should be ended with a line break character. After submitting a query, flush the output and read the answer to your query \u2014 the value of a_ i \u2295 x for some i \u2208 [ 1, 100] . No integer can be used in queries more than once. If you submit an incorrect query ( or ask more than 2 queries) , the answer to it will be one integer - 1 . After receiving such an answer, your program should terminate immediately \u2014 otherwise you may receive verdict \" Runtime error\" , \" Time limit exceeded\" or some other verdict instead of \" Wrong answer\" .",
    "input": "",
    "output": "To give the answer, your program should print one line ! x with a line break in the end. After that, it should flush the output and terminate gracefully.",
    "note": "The example of interaction is not correct \u2014 you should sumbit exactly 100 integers in each query. Everything else is correct. Hacks are forbidden in this problem.",
    "topics": [
      "bitmasks",
      "interactive",
      "math"
    ],
    "id": "1207E"
  },
  {
    "title": "There Are Two Types Of Burgers",
    "url": "https://codeforces.com/problemset/problem/1207/A",
    "history": "There are two types of burgers in your restaurant \u2014 hamburgers and chicken burgers! To assemble a hamburger you need two buns and a beef patty. To assemble a chicken burger you need two buns and a chicken cutlet. You have b buns, p beef patties and f chicken cutlets in your restaurant. You can sell one hamburger for h dollars and one chicken burger for c dollars. Calculate the maximum profit you can achieve. You have to answer t independent queries.",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 100 ) \u2013 the number of queries. The first line of each query contains three integers b , p and f ( 1 \u2264 b, p, f \u2264 100 ) \u2014 the number of buns, beef patties and chicken cutlets in your restaurant. The second line of each query contains two integers h and c ( 1 \u2264 h, c \u2264 100 ) \u2014 the hamburger and chicken burger prices in your restaurant.",
    "output": "For each query print one integer \u2014 the maximum profit you can achieve.",
    "note": "In first query you have to sell two hamburgers and three chicken burgers. Your income is 2 \u00b7 5 + 3 \u00b7 10 = 40 . In second query you have to ell one hamburgers and two chicken burgers. Your income is 1 \u00b7 10 + 2 \u00b7 12 = 34 . In third query you can not create any type of burgers because because you have only one bun. So your income is zero.",
    "topics": [
      "brute force",
      "greedy",
      "implementation",
      "math"
    ],
    "id": "1207A"
  },
  {
    "title": "Choose Two Numbers",
    "url": "https://codeforces.com/problemset/problem/1206/A",
    "history": "You are given an array A , consisting of n positive integers a_ 1, a_ 2, . . . , a_ n , and an array B , consisting of m positive integers b_ 1, b_ 2, . . . , b_ m . Choose some element a of A and some element b of B such that a+ b doesn' t belong to A and doesn' t belong to B . For example, if A = [ 2, 1, 7] and B = [ 1, 3, 4] , we can choose 1 from A and 4 from B , as number 5 = 1 + 4 doesn' t belong to A and doesn' t belong to B . However, we can' t choose 2 from A and 1 from B , as 3 = 2 + 1 belongs to B . It can be shown that such a pair exists. If there are multiple answers, print any. Choose and print any such two numbers.",
    "input": "The first line contains one integer n ( 1\u2264 n \u2264 100 ) \u2014 the number of elements of A . The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 200 ) \u2014 the elements of A . The third line contains one integer m ( 1\u2264 m \u2264 100 ) \u2014 the number of elements of B . The fourth line contains m different integers b_ 1, b_ 2, . . . , b_ m ( 1 \u2264 b_ i \u2264 200 ) \u2014 the elements of B . It can be shown that the answer always exists.",
    "output": "Output two numbers a and b such that a belongs to A , b belongs to B , but a+ b doesn' t belong to nor A neither B . If there are multiple answers, print any.",
    "note": "In the first example, we can choose 20 from array [ 20] and 20 from array [ 10, 20] . Number 40 = 20 + 20 doesn' t belong to any of those arrays. However, it is possible to choose 10 from the second array too. In the second example, we can choose 3 from array [ 3, 2, 2] and 1 from array [ 1, 5, 7, 7, 9] . Number 4 = 3 + 1 doesn' t belong to any of those arrays. In the third example, we can choose 1 from array [ 1, 3, 5, 7] and 1 from array [ 7, 5, 3, 1] . Number 2 = 1 + 1 doesn' t belong to any of those arrays.",
    "topics": [
      "math",
      "sortings"
    ],
    "id": "1206A"
  },
  {
    "title": "Beauty of a Permutation",
    "url": "https://codeforces.com/problemset/problem/1205/F",
    "history": "Define the beauty of a permutation of numbers from 1 to n ( p_ 1, p_ 2, . . . , p_ n) as number of pairs ( L, R) such that 1 \u2264 L \u2264 R \u2264 n and numbers p_ L, p_ L+ 1, . . . , p_ R are consecutive R- L+ 1 numbers in some order. For example, the beauty of the permutation ( 1, 2, 5, 3, 4) equals 9 , and segments, corresponding to pairs, are [ 1] , [ 2] , [ 5] , [ 4] , [ 3] , [ 1, 2] , [ 3, 4] , [ 5, 3, 4] , [ 1, 2, 5, 3, 4] . Answer q independent queries. In each query, you will be given integers n and k . Determine if there exists a permutation of numbers from 1 to n with beauty equal to k , and if there exists, output one of them.",
    "input": "The first line contains a single integer q ( 1\u2264 q \u2264 10 000 ) \u2014 the number of queries. Follow q lines. Each line contains two integers n , k ( 1 \u2264 n \u2264 100 , 1 \u2264 k \u2264n( n+ 1) / 2 ) \u2014 the length of permutation and needed beauty respectively.",
    "output": "For a query output \" NO\" , if such a permutation doesn' t exist. Otherwise, output \" YES\" , and in the next line output n numbers \u2014 elements of permutation in the right order.",
    "note": "Let' s look at the first example. The first query: in ( 1) there is only one segment consisting of consecutive numbers \u2014 the entire permutation. The second query: in ( 2, 4, 1, 5, 3) there are 6 such segments: [ 2] , [ 4] , [ 1] , [ 5] , [ 3] , [ 2, 4, 1, 5, 3] . There is no such permutation for the second query. The fourth query: in ( 2, 3, 1, 4, 5) there are 10 such segments: [ 2] , [ 3] , [ 1] , [ 4] , [ 5] , [ 2, 3] , [ 2, 3, 1] , [ 2, 3, 1, 4] , [ 4, 5] , [ 2, 3, 1, 4, 5] .",
    "topics": [
      "constructive algorithms",
      "math"
    ],
    "id": "1205F"
  },
  {
    "title": "Almost Equal",
    "url": "https://codeforces.com/problemset/problem/1205/A",
    "history": "You are given integer n . You have to arrange numbers from 1 to 2n , using each of them exactly once, on the circle, so that the following condition would be satisfied: For every n consecutive numbers on the circle write their sum on the blackboard. Then any two of written on the blackboard 2n numbers differ not more than by 1 . For example, choose n = 3 . On the left you can see an example of a valid arrangement: 1 + 4 + 5 = 10 , 4 + 5 + 2 = 11 , 5 + 2 + 3 = 10 , 2 + 3 + 6 = 11 , 3 + 6 + 1 = 10 , 6 + 1 + 4 = 11 , any two numbers differ by at most 1 . On the right you can see an invalid arrangement: for example, 5 + 1 + 6 = 12 , and 3 + 2 + 4 = 9 , 9 and 12 differ more than by 1 .",
    "input": "The first and the only line contain one integer n ( 1 \u2264 n \u2264 10^ 5 ) .",
    "output": "If there is no solution, output \" NO\" in the first line. If there is a solution, output \" YES\" in the first line. In the second line output 2n numbers \u2014 numbers from 1 to 2n in the order they will stay in the circle. Each number should appear only once. If there are several solutions, you can output any of them.",
    "note": "Example from the statement is shown for the first example. It can be proved that there is no solution in the second example.",
    "topics": [
      "constructive algorithms",
      "greedy",
      "math"
    ],
    "id": "1205A"
  },
  {
    "title": "Natasha, Sasha and the Prefix Sums",
    "url": "https://codeforces.com/problemset/problem/1204/E",
    "history": "Natasha' s favourite numbers are n and 1 , and Sasha' s favourite numbers are m and - 1 . One day Natasha and Sasha met and wrote down every possible array of length n+ m such that some n of its elements are equal to 1 and another m elements are equal to - 1 . For each such array they counted its maximal prefix sum, probably an empty one which is equal to 0 ( in another words, if every nonempty prefix sum is less to zero, then it is considered equal to zero) . Formally, denote as f( a) the maximal prefix sum of an array a_ 1, . . . , l of length l \u2265 0 . Then: f( a) = max ( 0, max_ 1 \u2264 i \u2264 l\u2211_ j= 1^ i a_ j ) Now they want to count the sum of maximal prefix sums for each such an array and they are asking you to help. As this sum can be very large, output it modulo 998 244 853 .",
    "input": "The only line contains two integers n and m ( 0 \u2264 n, m \u2264 2 000 ) .",
    "output": "Output the answer to the problem modulo 998 244 853 .",
    "note": "In the first example the only possible array is [ - 1, - 1] , its maximal prefix sum is equal to 0 . In the second example the only possible array is [ 1, 1] , its maximal prefix sum is equal to 2 . There are 6 possible arrays in the third example: [ 1, 1, - 1, - 1] , f( [ 1, 1, - 1, - 1] ) = 2[ 1, - 1, 1, - 1] , f( [ 1, - 1, 1, - 1] ) = 1[ 1, - 1, - 1, 1] , f( [ 1, - 1, - 1, 1] ) = 1[ - 1, 1, 1, - 1] , f( [ - 1, 1, 1, - 1] ) = 1[ - 1, 1, - 1, 1] , f( [ - 1, 1, - 1, 1] ) = 0[ - 1, - 1, 1, 1] , f( [ - 1, - 1, 1, 1] ) = 0So the answer for the third example is 2+ 1+ 1+ 1+ 0+ 0 = 5 .",
    "topics": [
      "combinatorics",
      "dp",
      "math",
      "number theory"
    ],
    "id": "1204E"
  },
  {
    "title": "Kirk and a Binary String (hard version)",
    "url": "https://codeforces.com/problemset/problem/1204/D2",
    "history": "The only difference between easy and hard versions is the length of the string. You can hack this problem if you solve it. But you can hack the previous problem only if you solve both problems. Kirk has a binary string s ( a string which consists of zeroes and ones) of length n and he is asking you to find a binary string t of the same length which satisfies the following conditions: For any l and r ( 1 \u2264 l \u2264 r \u2264 n ) the length of the longest non- decreasing subsequence of the substring s_ ls_ l+ 1. . . s_ r is equal to the length of the longest non- decreasing subsequence of the substring t_ lt_ l+ 1. . . t_ r ; The number of zeroes in t is the maximum possible. A non- decreasing subsequence of a string p is a sequence of indices i_ 1, i_ 2, . . . , i_ k such that i_ 1 < i_ 2 < . . . < i_ k and p_ i_ 1\u2264 p_ i_ 2\u2264. . . \u2264 p_ i_ k . The length of the subsequence is k . If there are multiple substrings which satisfy the conditions, output any.",
    "input": "The first line contains a binary string of length not more than 10^ 5 .",
    "output": "Output a binary string which satisfied the above conditions. If there are many such strings, output any of them.",
    "note": "In the first example: For the substrings of the length 1 the length of the longest non- decreasing subsequnce is 1 ; For l = 1, r = 2 the longest non- decreasing subsequnce of the substring s_ 1s_ 2 is 11 and the longest non- decreasing subsequnce of the substring t_ 1t_ 2 is 01 ; For l = 1, r = 3 the longest non- decreasing subsequnce of the substring s_ 1s_ 3 is 11 and the longest non- decreasing subsequnce of the substring t_ 1t_ 3 is 00 ; For l = 2, r = 3 the longest non- decreasing subsequnce of the substring s_ 2s_ 3 is 1 and the longest non- decreasing subsequnce of the substring t_ 2t_ 3 is 1 ; The second example is similar to the first one.",
    "topics": [
      "data structures",
      "greedy",
      "math",
      "strings"
    ],
    "id": "1204D2"
  },
  {
    "title": "Mislove Has Lost an Array",
    "url": "https://codeforces.com/problemset/problem/1204/B",
    "history": "Mislove had an array a_ 1 , a_ 2 , \u22ef , a_ n of n positive integers, but he has lost it. He only remembers the following facts about it: The number of different numbers in the array is not less than l and is not greater than r ; For each array' s element a_ i either a_ i = 1 or a_ i is even and there is a number a_ i2 in the array. For example, if n= 5 , l= 2 , r= 3 then an array could be [ 1, 2, 2, 4, 4] or [ 1, 1, 1, 1, 2] ; but it couldn' t be [ 1, 2, 2, 4, 8] because this array contains 4 different numbers; it couldn' t be [ 1, 2, 2, 3, 3] because 3 is odd and isn' t equal to 1 ; and it couldn' t be [ 1, 1, 2, 2, 16] because there is a number 16 in the array but there isn' t a number 16/ 2 = 8 . According to these facts, he is asking you to count the minimal and the maximal possible sums of all elements in an array.",
    "input": "The only input line contains three integers n , l and r ( 1 \u2264 n \u2264 1 000 , 1 \u2264 l \u2264 r \u2264min( n, 20) ) \u2014 an array' s size, the minimal number and the maximal number of distinct elements in an array.",
    "output": "Output two numbers \u2014 the minimal and the maximal possible sums of all elements in an array.",
    "note": "In the first example, an array could be the one of the following: [ 1, 1, 1, 2] , [ 1, 1, 2, 2] or [ 1, 2, 2, 2] . In the first case the minimal sum is reached and in the last case the maximal sum is reached. In the second example, the minimal sum is reached at the array [ 1, 1, 1, 1, 1] , and the maximal one is reached at the array [ 1, 2, 4, 8, 16] .",
    "topics": [
      "greedy",
      "math"
    ],
    "id": "1204B"
  },
  {
    "title": "BowWow and the Timetable",
    "url": "https://codeforces.com/problemset/problem/1204/A",
    "history": "In the city of Saint Petersburg, a day lasts for 2^ 100 minutes. From the main station of Saint Petersburg, a train departs after 1 minute, 4 minutes, 16 minutes, and so on; in other words, the train departs at time 4^ k for each integer k \u2265 0 . Team BowWow has arrived at the station at the time s and it is trying to count how many trains have they missed; in other words, the number of trains that have departed strictly before time s . For example if s = 20 , then they missed trains which have departed at 1 , 4 and 16 . As you are the only one who knows the time, help them! Note that the number s will be given you in a binary representation without leading zeroes.",
    "input": "The first line contains a single binary number s ( 0 \u2264 s < 2^ 100 ) without leading zeroes.",
    "output": "Output a single number \u2014 the number of trains which have departed strictly before the time s .",
    "note": "In the first example 100000000_ 2 = 256_ 10 , missed trains have departed at 1 , 4 , 16 and 64 . In the second example 101_ 2 = 5_ 10 , trains have departed at 1 and 4 . The third example is explained in the statements.",
    "topics": [
      "math"
    ],
    "id": "1204A"
  },
  {
    "title": "Common Divisors",
    "url": "https://codeforces.com/problemset/problem/1203/C",
    "history": "You are given an array a consisting of n integers. Your task is to say the number of such positive integers x such that x divides each number from the array. In other words, you have to find the number of common divisors of all elements in the array. For example, if the array a will be [ 2, 4, 6, 2, 10] , then 1 and 2 divide each number from the array ( so the answer for this test is 2 ) .",
    "input": "The first line of the input contains one integer n ( 1 \u2264 n \u2264 4 \u00b7 10^ 5 ) \u2014 the number of elements in a . The second line of the input contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 12 ) , where a_ i is the i - th element of a .",
    "output": "Print one integer \u2014 the number of such positive integers x such that x divides each number from the given array ( in other words, the answer is the number of common divisors of all elements in the array) .",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": "1203C"
  },
  {
    "title": "Equal Rectangles",
    "url": "https://codeforces.com/problemset/problem/1203/B",
    "history": "You are given 4n sticks, the length of the i - th stick is a_ i . You have to create n rectangles, each rectangle will consist of exactly 4 sticks from the given set. The rectangle consists of four sides, opposite sides should have equal length and all angles in it should be right. Note that each stick can be used in only one rectangle. Each stick should be used as a side, you cannot break the stick or use it not to the full length. You want to all rectangles to have equal area. The area of the rectangle with sides a and b is a \u00b7 b . Your task is to say if it is possible to create exactly n rectangles of equal area or not. You have to answer q independent queries.",
    "input": "The first line of the input contains one integer q ( 1 \u2264 q \u2264 500 ) \u2014 the number of queries. Then q queries follow. The first line of the query contains one integer n ( 1 \u2264 n \u2264 100 ) \u2014 the number of rectangles. The second line of the query contains 4n integers a_ 1, a_ 2, . . . , a_ 4n ( 1 \u2264 a_ i \u2264 10^ 4 ) , where a_ i is the length of the i - th stick.",
    "output": "For each query print the answer to it. If it is impossible to create exactly n rectangles of equal area using given sticks, print \" NO\" . Otherwise print \" YES\" .",
    "note": "",
    "topics": [
      "greedy",
      "math"
    ],
    "id": "1203B"
  },
  {
    "title": "You Are Given Some Letters...",
    "url": "https://codeforces.com/problemset/problem/1202/F",
    "history": "You are given a uppercase Latin letters ' A' and b letters ' B' . The period of the string is the smallest such positive integer k that s_ i = s_ i mod k ( 0 - indexed) for each i . Note that this implies that k won' t always divide a+ b = | s| . For example, the period of string \" ABAABAA\" is 3 , the period of \" AAAA\" is 1 , and the period of \" AABBB\" is 5 . Find the number of different periods over all possible strings with a letters ' A' and b letters ' B' .",
    "input": "The first line contains two integers a and b ( 1 \u2264 a, b \u2264 10^ 9 ) \u2014 the number of letters ' A' and ' B' , respectively.",
    "output": "Print the number of different periods over all possible strings with a letters ' A' and b letters ' B' .",
    "note": "All the possible periods for the first example: 3 \" BBABBA\" 4 \" BBAABB\" 5 \" BBBAAB\" 6 \" AABBBB\" All the possible periods for the second example: 3 \" BAABAABA\" 5 \" BAABABAA\" 6 \" BABAAABA\" 7 \" BAABAAAB\" 8 \" AAAAABBB\" Note that these are not the only possible strings for the given periods.",
    "topics": [
      "binary search",
      "implementation",
      "math"
    ],
    "id": "1202F"
  },
  {
    "title": "Print a 1337-string...",
    "url": "https://codeforces.com/problemset/problem/1202/D",
    "history": "The subsequence is a sequence that can be derived from another sequence by deleting some elements without changing the order of the remaining elements. You are given an integer n . You have to find a sequence s consisting of digits { 1, 3, 7} such that it has exactly n subsequences equal to 1337 . For example, sequence 337133377 has 6 subsequences equal to 1337 : 337133377 ( you can remove the second and fifth characters) ; 337133377 ( you can remove the third and fifth characters) ; 337133377 ( you can remove the fourth and fifth characters) ; 337133377 ( you can remove the second and sixth characters) ; 337133377 ( you can remove the third and sixth characters) ; 337133377 ( you can remove the fourth and sixth characters) . Note that the length of the sequence s must not exceed 10^ 5 . You have to answer t independent queries.",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 10 ) \u2014 the number of queries. Next t lines contains a description of queries: the i - th line contains one integer n_ i ( 1 \u2264 n_ i \u2264 10^ 9 ) .",
    "output": "For the i - th query print one string s_ i ( 1 \u2264 | s_ i| \u2264 10^ 5 ) consisting of digits { 1, 3, 7} . String s_ i must have exactly n_ i subsequences 1337 . If there are multiple such strings, print any of them.",
    "note": "",
    "topics": [
      "combinatorics",
      "constructive algorithms",
      "math",
      "strings"
    ],
    "id": "1202D"
  },
  {
    "title": "You Are Given a WASD-string...",
    "url": "https://codeforces.com/problemset/problem/1202/C",
    "history": "You have a string s \u2014 a sequence of commands for your toy robot. The robot is placed in some cell of a rectangular grid. He can perform four commands: ' W' \u2014 move one cell up; ' S' \u2014 move one cell down; ' A' \u2014 move one cell left; ' D' \u2014 move one cell right. Let Grid( s) be the grid of minimum possible area such that there is a position in the grid where you can place the robot in such a way that it will not fall from the grid while running the sequence of commands s . For example, if s = DSAWWAW then Grid( s) is the 4 \u00d7 3 grid: you can place the robot in the cell ( 3, 2) ; the robot performs the command ' D' and moves to ( 3, 3) ; the robot performs the command ' S' and moves to ( 4, 3) ; the robot performs the command ' A' and moves to ( 4, 2) ; the robot performs the command ' W' and moves to ( 3, 2) ; the robot performs the command ' W' and moves to ( 2, 2) ; the robot performs the command ' A' and moves to ( 2, 1) ; the robot performs the command ' W' and moves to ( 1, 1) . You have 4 extra letters: one ' W' , one ' A' , one ' S' , one ' D' . You' d like to insert at most one of these letters in any position of sequence s to minimize the area of Grid( s) . What is the minimum area of Grid( s) you can achieve?",
    "input": "The first line contains one integer T ( 1 \u2264 T \u2264 1000 ) \u2014 the number of queries. Next T lines contain queries: one per line. This line contains single string s ( 1 \u2264 | s| \u2264 2 \u00b7 10^ 5 , s_ i \u2208{ W, A, S, D} ) \u2014 the sequence of commands. It' s guaranteed that the total length of s over all queries doesn' t exceed 2 \u00b7 10^ 5 .",
    "output": "Print T integers: one per query. For each query print the minimum area of Grid( s) you can achieve.",
    "note": "In the first query you have to get string DSAWWDAW . In second and third queries you can not decrease the area of Grid( s) .",
    "topics": [
      "brute force",
      "data structures",
      "dp",
      "greedy",
      "implementation",
      "math",
      "strings"
    ],
    "id": "1202C"
  },
  {
    "title": "Maximum Median",
    "url": "https://codeforces.com/problemset/problem/1201/C",
    "history": "You are given an array a of n integers, where n is odd. You can make the following operation with it: Choose one of the elements of the array ( for example a_ i ) and increase it by 1 ( that is, replace it with a_ i + 1 ) . You want to make the median of the array the largest possible using at most k operations. The median of the odd- sized array is the middle element after the array is sorted in non- decreasing order. For example, the median of the array [ 1, 5, 2, 3, 5] is 3 .",
    "input": "The first line contains two integers n and k ( 1 \u2264 n \u2264 2 \u00b7 10^ 5 , n is odd, 1 \u2264 k \u2264 10^ 9 ) \u2014 the number of elements in the array and the largest number of operations you can make. The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 9 ) .",
    "output": "Print a single integer \u2014 the maximum possible median after the operations.",
    "note": "In the first example, you can increase the second element twice. Than array will be [ 1, 5, 5] and it' s median is 5 . In the second example, it is optimal to increase the second number and than increase third and fifth. This way the answer is 3 . In the third example, you can make four operations: increase first, fourth, sixth, seventh element. This way the array will be [ 5, 1, 2, 5, 3, 5, 5] and the median will be 5 .",
    "topics": [
      "binary search",
      "greedy",
      "math",
      "sortings"
    ],
    "id": "1201C"
  },
  {
    "title": "Zero Array",
    "url": "https://codeforces.com/problemset/problem/1201/B",
    "history": "You are given an array a_ 1, a_ 2, . . . , a_ n . In one operation you can choose two elements a_ i and a_ j ( i j ) and decrease each of them by one. You need to check whether it is possible to make all the elements equal to zero or not.",
    "input": "The first line contains a single integer n ( 2 \u2264 n \u2264 10^ 5 ) \u2014 the size of the array. The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 9 ) \u2014 the elements of the array.",
    "output": "Print \" YES\" if it is possible to make all elements zero, otherwise print \" NO\" .",
    "note": "In the first example, you can make all elements equal to zero in 3 operations: Decrease a_ 1 and a_ 2 , Decrease a_ 3 and a_ 4 , Decrease a_ 3 and a_ 4 In the second example, one can show that it is impossible to make all elements equal to zero.",
    "topics": [
      "greedy",
      "math"
    ],
    "id": "1201B"
  },
  {
    "title": "Graph Traveler",
    "url": "https://codeforces.com/problemset/problem/1200/F",
    "history": "Gildong is experimenting with an interesting machine Graph Traveler. In Graph Traveler, there is a directed graph consisting of n vertices numbered from 1 to n . The i - th vertex has m_ i outgoing edges that are labeled as e_ i[ 0] , e_ i[ 1] , . . . , e_ i[ m_ i- 1] , each representing the destination vertex of the edge. The graph can have multiple edges and self- loops. The i - th vertex also has an integer k_ i written on itself. A travel on this graph works as follows. Gildong chooses a vertex to start from, and an integer to start with. Set the variable c to this integer. After arriving at the vertex i , or when Gildong begins the travel at some vertex i , add k_ i to c . The next vertex is e_ i[ x] where x is an integer 0 \u2264 x \u2264 m_ i- 1 satisfying x \u2261 c m_ i . Go to the next vertex and go back to step 2. It' s obvious that a travel never ends, since the 2nd and the 3rd step will be repeated endlessly. For example, assume that Gildong starts at vertex 1 with c = 5 , and m_ 1 = 2 , e_ 1[ 0] = 1 , e_ 1[ 1] = 2 , k_ 1 = - 3 . Right after he starts at vertex 1 , c becomes 2 . Since the only integer x ( 0 \u2264 x \u2264 1 ) where x \u2261 c m_ i is 0 , Gildong goes to vertex e_ 1[ 0] = 1 . After arriving at vertex 1 again, c becomes - 1 . The only integer x satisfying the conditions is 1 , so he goes to vertex e_ 1[ 1] = 2 , and so on. Since Gildong is quite inquisitive, he' s going to ask you q queries. He wants to know how many distinct vertices will be visited infinitely many times, if he starts the travel from a certain vertex with a certain value of c . Note that you should not count the vertices that will be visited only finite times.",
    "input": "The first line of the input contains an integer n ( 1 \u2264 n \u2264 1000 ) , the number of vertices in the graph. The second line contains n integers. The i - th integer is k_ i ( - 10^ 9 \u2264 k_ i \u2264 10^ 9 ) , the integer written on the i - th vertex. Next 2 \u00b7 n lines describe the edges of each vertex. The ( 2 \u00b7 i + 1) - st line contains an integer m_ i ( 1 \u2264 m_ i \u2264 10 ) , the number of outgoing edges of the i - th vertex. The ( 2 \u00b7 i + 2) - nd line contains m_ i integers e_ i[ 0] , e_ i[ 1] , . . . , e_ i[ m_ i- 1] , each having an integer value between 1 and n , inclusive. Next line contains an integer q ( 1 \u2264 q \u2264 10^ 5 ) , the number of queries Gildong wants to ask. Next q lines contains two integers x and y ( 1 \u2264 x \u2264 n , - 10^ 9 \u2264 y \u2264 10^ 9 ) each, which mean that the start vertex is x and the starting value of c is y .",
    "output": "For each query, print the number of distinct vertices that will be visited infinitely many times, if Gildong starts at vertex x with starting integer y .",
    "note": "The first example can be shown like the following image: Three integers are marked on i - th vertex: i , k_ i , and m_ i respectively. The outgoing edges are labeled with an integer representing the edge number of i - th vertex. The travel for each query works as follows. It is described as a sequence of phrases, each in the format \" vertex ( c after k_ i added) \" . 1( 0) \u2192 2( 0) \u2192 2( 0) \u2192. . . 2( 0) \u2192 2( 0) \u2192. . . 3( - 1) \u2192 1( - 1) \u2192 3( - 1) \u2192. . . 4( - 2) \u2192 2( - 2) \u2192 2( - 2) \u2192. . . 1( 1) \u2192 3( 1) \u2192 4( 1) \u2192 1( 1) \u2192. . . 1( 5) \u2192 3( 5) \u2192 1( 5) \u2192. . . The second example is same as the first example, except that the vertices have non- zero values. Therefore the answers to the queries also differ from the first example. The queries for the second example works as follows: 1( 4) \u2192 2( - 1) \u2192 2( - 6) \u2192. . . 2( - 5) \u2192 2( - 10) \u2192. . . 3( - 4) \u2192 1( 0) \u2192 2( - 5) \u2192 2( - 10) \u2192. . . 4( - 3) \u2192 1( 1) \u2192 3( - 2) \u2192 4( - 3) \u2192. . . 1( 5) \u2192 3( 2) \u2192 1( 6) \u2192 2( 1) \u2192 2( - 4) \u2192. . . 1( 9) \u2192 3( 6) \u2192 2( 1) \u2192 2( - 4) \u2192. . .",
    "topics": [
      "brute force",
      "data structures",
      "dfs and similar",
      "dp",
      "graphs",
      "implementation",
      "math",
      "number theory"
    ],
    "id": "1200F"
  },
  {
    "title": "Round Corridor",
    "url": "https://codeforces.com/problemset/problem/1200/C",
    "history": "Amugae is in a very large round corridor. The corridor consists of two areas. The inner area is equally divided by n sectors, and the outer area is equally divided by m sectors. A wall exists between each pair of sectors of same area ( inner or outer) , but there is no wall between the inner area and the outer area. A wall always exists at the 12 o' clock position. The inner area' s sectors are denoted as ( 1, 1) , ( 1, 2) , . . . , ( 1, n) in clockwise direction. The outer area' s sectors are denoted as ( 2, 1) , ( 2, 2) , . . . , ( 2, m) in the same manner. For a clear understanding, see the example image above. Amugae wants to know if he can move from one sector to another sector. He has q questions. For each question, check if he can move between two given sectors.",
    "input": "The first line contains three integers n , m and q ( 1 \u2264 n, m \u2264 10^ 18 , 1 \u2264 q \u2264 10^ 4 ) \u2014 the number of sectors in the inner area, the number of sectors in the outer area and the number of questions. Each of the next q lines contains four integers s_ x , s_ y , e_ x , e_ y ( 1 \u2264 s_ x, e_ x \u2264 2 ; if s_ x = 1 , then 1 \u2264 s_ y \u2264 n , otherwise 1 \u2264 s_ y \u2264 m ; constraints on e_ y are similar) . Amague wants to know if it is possible to move from sector ( s_ x, s_ y) to sector ( e_ x, e_ y) .",
    "output": "For each question, print \" YES\" if Amugae can move from ( s_ x, s_ y) to ( e_ x, e_ y) , and \" NO\" otherwise. You can print each letter in any case ( upper or lower) .",
    "note": "Example is shown on the picture in the statement.",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "1200C"
  },
  {
    "title": "Water Lily",
    "url": "https://codeforces.com/problemset/problem/1199/B",
    "history": "While sailing on a boat, Inessa noticed a beautiful water lily flower above the lake' s surface. She came closer and it turned out that the lily was exactly H centimeters above the water surface. Inessa grabbed the flower and sailed the distance of L centimeters. Exactly at this point the flower touched the water surface. Suppose that the lily grows at some point A on the lake bottom, and its stem is always a straight segment with one endpoint at point A . Also suppose that initially the flower was exactly above the point A , i. e. its stem was vertical. Can you determine the depth of the lake at point A ?",
    "input": "The only line contains two integers H and L ( 1 \u2264 H < L \u2264 10^ 6 ) .",
    "output": "Print a single number \u2014 the depth of the lake at point A . The absolute or relative error should not exceed 10^ - 6 . Formally, let your answer be A , and the jury' s answer be B . Your answer is accepted if and only if | A - B| / max( 1, | B| ) \u2264 10^ - 6 .",
    "note": "",
    "topics": [
      "geometry",
      "math"
    ],
    "id": "1199B"
  },
  {
    "title": "Yet Another Subarray Problem",
    "url": "https://codeforces.com/problemset/problem/1197/D",
    "history": "You are given an array a_ 1, a_ 2, . . . , a_ n and two integers m and k . You can choose some subarray a_ l, a_ l+ 1, . . . , a_ r- 1, a_ r . The cost of subarray a_ l, a_ l+ 1, . . . , a_ r- 1, a_ r is equal to \u2211_ i= l^ r a_ i - k \u2308r - l + 1/ m\u2309 , where \u2308 x \u2309 is the least integer greater than or equal to x . The cost of empty subarray is equal to zero. For example, if m = 3 , k = 10 and a = [ 2, - 4, 15, - 3, 4, 8, 3] , then the cost of some subarrays are: a_ 3 . . . a_ 3: 15 - k \u23081/ 3\u2309 = 15 - 10 = 5 ; a_ 3 . . . a_ 4: ( 15 - 3) - k \u23082/ 3\u2309 = 12 - 10 = 2 ; a_ 3 . . . a_ 5: ( 15 - 3 + 4) - k \u23083/ 3\u2309 = 16 - 10 = 6 ; a_ 3 . . . a_ 6: ( 15 - 3 + 4 + 8) - k \u23084/ 3\u2309 = 24 - 20 = 4 ; a_ 3 . . . a_ 7: ( 15 - 3 + 4 + 8 + 3) - k \u23085/ 3\u2309 = 27 - 20 = 7 . Your task is to find the maximum cost of some subarray ( possibly empty) of array a .",
    "input": "The first line contains three integers n , m , and k ( 1 \u2264 n \u2264 3 \u00b7 10^ 5, 1 \u2264 m \u2264 10, 1 \u2264 k \u2264 10^ 9 ) . The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( - 10^ 9 \u2264 a_ i \u2264 10^ 9 ) .",
    "output": "Print the maximum cost of some subarray of array a .",
    "note": "",
    "topics": [
      "dp",
      "greedy",
      "math"
    ],
    "id": "1197D"
  },
  {
    "title": "DIY Wooden Ladder",
    "url": "https://codeforces.com/problemset/problem/1197/A",
    "history": "Let' s denote a k - step ladder as the following structure: exactly k + 2 wooden planks, of which two planks of length at least k+ 1 \u2014 the base of the ladder; k planks of length at least 1 \u2014 the steps of the ladder; Note that neither the base planks, nor the steps planks are required to be equal. For example, ladders 1 and 3 are correct 2 - step ladders and ladder 2 is a correct 1 - step ladder. On the first picture the lengths of planks are [ 3, 3] for the base and [ 1] for the step. On the second picture lengths are [ 3, 3] for the base and [ 2] for the step. On the third picture lengths are [ 3, 4] for the base and [ 2, 3] for the steps. You have n planks. The length of the i - th planks is a_ i . You don' t have a saw, so you can' t cut the planks you have. Though you have a hammer and nails, so you can assemble the improvised \" ladder\" from the planks. The question is: what is the maximum number k such that you can choose some subset of the given planks and assemble a k - step ladder using them?",
    "input": "The first line contains a single integer T ( 1 \u2264 T \u2264 100 ) \u2014 the number of queries. The queries are independent. Each query consists of two lines. The first line contains a single integer n ( 2 \u2264 n \u2264 10^ 5 ) \u2014 the number of planks you have. The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 5 ) \u2014 the lengths of the corresponding planks. It' s guaranteed that the total number of planks from all queries doesn' t exceed 10^ 5 .",
    "output": "Print T integers \u2014 one per query. The i - th integer is the maximum number k , such that you can choose some subset of the planks given in the i - th query and assemble a k - step ladder using them. Print 0 if you can' t make even 1 - step ladder from the given set of planks.",
    "note": "Examples for the queries 1- 3 are shown at the image in the legend section. The Russian meme to express the quality of the ladders:",
    "topics": [
      "greedy",
      "math",
      "sortings"
    ],
    "id": "1197A"
  },
  {
    "title": "Odd Sum Segments",
    "url": "https://codeforces.com/problemset/problem/1196/B",
    "history": "You are given an array a consisting of n integers a_ 1, a_ 2, . . . , a_ n . You want to split it into exactly k non- empty non- intersecting subsegments such that each subsegment has odd sum ( i. e. for each subsegment, the sum of all elements that belong to this subsegment is odd) . It is impossible to rearrange ( shuffle) the elements of a given array. Each of the n elements of the array a must belong to exactly one of the k subsegments. Let' s see some examples of dividing the array of length 5 into 3 subsegments ( not necessarily with odd sums) : [ 1, 2, 3, 4, 5] is the initial array, then all possible ways to divide it into 3 non- empty non- intersecting subsegments are described below: [ 1] , [ 2] , [ 3, 4, 5] ; [ 1] , [ 2, 3] , [ 4, 5] ; [ 1] , [ 2, 3, 4] , [ 5] ; [ 1, 2] , [ 3] , [ 4, 5] ; [ 1, 2] , [ 3, 4] , [ 5] ; [ 1, 2, 3] , [ 4] , [ 5] . Of course, it can be impossible to divide the initial array into exactly k subsegments in such a way that each of them will have odd sum of elements. In this case print \" NO\" . Otherwise, print \" YES\" and any possible division of the array. See the output format for the detailed explanation. You have to answer q independent queries.",
    "input": "The first line contains one integer q ( 1 \u2264 q \u2264 2 \u00b7 10^ 5 ) \u2014 the number of queries. Then q queries follow. The first line of the query contains two integers n and k ( 1 \u2264 k \u2264 n \u2264 2 \u00b7 10^ 5 ) \u2014 the number of elements in the array and the number of subsegments, respectively. The second line of the query contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 9 ) , where a_ i is the i - th element of a . It is guaranteed that the sum of n over all queries does not exceed 2 \u00b7 10^ 5 ( \u2211 n \u2264 2 \u00b7 10^ 5 ) .",
    "output": "For each query, print the answer to it. If it is impossible to divide the initial array into exactly k subsegments in such a way that each of them will have odd sum of elements, print \" NO\" in the first line. Otherwise, print \" YES\" in the first line and any possible division of the array in the second line. The division can be represented as k integers r_ 1 , r_ 2 , . . . , r_ k such that 1 \u2264 r_ 1 < r_ 2 < . . . < r_ k = n , where r_ j is the right border of the j - th segment ( the index of the last element that belongs to the j - th segment) , so the array is divided into subsegments [ 1; r_ 1] , [ r_ 1 + 1; r_ 2] , [ r_ 2 + 1, r_ 3] , . . . , [ r_ k - 1 + 1, n] . Note that r_ k is always n but you should print it anyway.",
    "note": "",
    "topics": [
      "constructive algorithms",
      "math"
    ],
    "id": "1196B"
  },
  {
    "title": "Three Piles of Candies",
    "url": "https://codeforces.com/problemset/problem/1196/A",
    "history": "Alice and Bob have received three big piles of candies as a gift. Now they want to divide these candies as fair as possible. To do this, Alice takes one pile of candies, then Bob takes one of the other two piles. The last pile is split between Alice and Bob as they want: for example, it is possible that Alice takes the whole pile, and Bob gets nothing from it. After taking the candies from the piles, if Alice has more candies than Bob, she discards some candies so that the number of candies she has is equal to the number of candies Bob has. Of course, Bob does the same if he has more candies. Alice and Bob want to have as many candies as possible, and they plan the process of dividing candies accordingly. Please calculate the maximum number of candies Alice can have after this division process ( of course, Bob will have the same number of candies) . You have to answer q independent queries. Let' s see the following example: [ 1, 3, 4] . Then Alice can choose the third pile, Bob can take the second pile, and then the only candy from the first pile goes to Bob \u2014 then Alice has 4 candies, and Bob has 4 candies. Another example is [ 1, 10, 100] . Then Alice can choose the second pile, Bob can choose the first pile, and candies from the third pile can be divided in such a way that Bob takes 54 candies, and Alice takes 46 candies. Now Bob has 55 candies, and Alice has 56 candies, so she has to discard one candy \u2014 and after that, she has 55 candies too.",
    "input": "The first line of the input contains one integer q ( 1 \u2264 q \u2264 1000 ) \u2014 the number of queries. Then q queries follow. The only line of the query contains three integers a, b and c ( 1 \u2264 a, b, c \u2264 10^ 16 ) \u2014 the number of candies in the first, second and third piles correspondingly.",
    "output": "Print q lines. The i - th line should contain the answer for the i - th query \u2014 the maximum number of candies Alice can have after the division, if both Alice and Bob act optimally ( of course, Bob will have the same number of candies) .",
    "note": "",
    "topics": [
      "brute force",
      "constructive algorithms",
      "math"
    ],
    "id": "1196A"
  },
  {
    "title": "Geometers Anonymous Club",
    "url": "https://codeforces.com/problemset/problem/1195/F",
    "history": "Denis holds a Geometers Anonymous Club meeting in SIS. He has prepared n convex polygons numbered from 1 to n for the club. He plans to offer members of the club to calculate Minkowski sums of these polygons. More precisely, he plans to give q tasks, the i - th of them asks to calculate the sum of Minkowski of polygons with indices from l_ i to r_ i inclusive. The sum of Minkowski of two sets A and B is the set C = { a + b : a \u2208 A, b \u2208 B} . It can be proven that if A and B are convex polygons then C will also be a convex polygon. Sum of two convex polygons To calculate the sum of Minkowski of p polygons ( p > 2 ) , you need to calculate the sum of Minkowski of the first p - 1 polygons, and then calculate the sum of Minkowski of the resulting polygon and the p - th polygon. For the convenience of checking answers, Denis has decided to prepare and calculate the number of vertices in the sum of Minkowski for each task he prepared. Help him to do it.",
    "input": "The first line of the input contains one integer n \u2014 the number of convex polygons Denis prepared ( 1 \u2264 n \u2264 100 000 ) . Then n convex polygons follow. The description of the i - th polygon starts with one integer k_ i \u2014 the number of vertices in the i - th polygon ( 3 \u2264 k_ i ) . The next k_ i lines contain two integers x_ ij , y_ ij each \u2014 coordinates of vertices of the i - th polygon in counterclockwise order ( | x_ ij| , | y_ ij| \u2264 10 ^ 9 ) . It is guaranteed, that there are no three consecutive vertices lying on the same line. The total number of vertices over all polygons does not exceed 300 000 . The following line contains one integer q \u2014 the number of tasks ( 1 \u2264 q \u2264 100 000 ) . The next q lines contain descriptions of tasks. Description of the i - th task contains two integers l_ i and r_ i ( 1 \u2264 l_ i \u2264 r_ i \u2264 n ) .",
    "output": "For each task print a single integer \u2014 the number of vertices in the sum of Minkowski of polygons with indices from l_ i to r_ i .",
    "note": "Description of the example: First, second and third polygons from the example Minkowski sums of the first and second, the second and third and all polygons correspondingly",
    "topics": [
      "data structures",
      "geometry",
      "math",
      "sortings"
    ],
    "id": "1195F"
  },
  {
    "title": "Submarine in the Rybinsk Sea (hard edition)",
    "url": "https://codeforces.com/problemset/problem/1195/D2",
    "history": "This problem differs from the previous one only in the absence of the constraint on the equal length of all numbers a_ 1, a_ 2, . . . , a_ n . A team of SIS students is going to make a trip on a submarine. Their target is an ancient treasure in a sunken ship lying on the bottom of the Great Rybinsk sea. Unfortunately, the students don' t know the coordinates of the ship, so they asked Meshanya ( who is a hereditary mage) to help them. He agreed to help them, but only if they solve his problem. Let' s denote a function that alternates digits of two numbers f( a_ 1 a_ 2 . . . a_ p - 1 a_ p, b_ 1 b_ 2 . . . b_ q - 1 b_ q) , where a_ 1 . . . a_ p and b_ 1 . . . b_ q are digits of two integers written in the decimal notation without leading zeros. In other words, the function f( x, y) alternately shuffles the digits of the numbers x and y by writing them from the lowest digits to the older ones, starting with the number y . The result of the function is also built from right to left ( that is, from the lower digits to the older ones) . If the digits of one of the arguments have ended, then the remaining digits of the other argument are written out. Familiarize with examples and formal definitions of the function below. For example: f( 1111, 2222) = 12121212 f( 7777, 888) = 7787878 f( 33, 44444) = 4443434 f( 555, 6) = 5556 f( 111, 2222) = 2121212 Formally, if p \u2265 q then f( a_ 1 . . . a_ p, b_ 1 . . . b_ q) = a_ 1 a_ 2 . . . a_ p - q + 1 b_ 1 a_ p - q + 2 b_ 2 . . . a_ p - 1 b_ q - 1 a_ p b_ q ; if p < q then f( a_ 1 . . . a_ p, b_ 1 . . . b_ q) = b_ 1 b_ 2 . . . b_ q - p a_ 1 b_ q - p + 1 a_ 2 . . . a_ p - 1 b_ q - 1 a_ p b_ q . Mishanya gives you an array consisting of n integers a_ i , your task is to help students to calculate \u2211_ i = 1^ n\u2211_ j = 1^ n f( a_ i, a_ j) modulo 998 244 353 .",
    "input": "The first line of the input contains a single integer n ( 1 \u2264 n \u2264 100 000 ) \u2014 the number of elements in the array. The second line of the input contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 9 ) \u2014 the elements of the array.",
    "output": "Print the answer modulo 998 244 353 .",
    "note": "",
    "topics": [
      "combinatorics",
      "math",
      "number theory"
    ],
    "id": "1195D2"
  },
  {
    "title": "Submarine in the Rybinsk Sea (easy edition)",
    "url": "https://codeforces.com/problemset/problem/1195/D1",
    "history": "This problem differs from the next one only in the presence of the constraint on the equal length of all numbers a_ 1, a_ 2, . . . , a_ n . Actually, this problem is a subtask of the problem D2 from the same contest and the solution of D2 solves this subtask too. A team of SIS students is going to make a trip on a submarine. Their target is an ancient treasure in a sunken ship lying on the bottom of the Great Rybinsk sea. Unfortunately, the students don' t know the coordinates of the ship, so they asked Meshanya ( who is a hereditary mage) to help them. He agreed to help them, but only if they solve his problem. Let' s denote a function that alternates digits of two numbers f( a_ 1 a_ 2 . . . a_ p - 1 a_ p, b_ 1 b_ 2 . . . b_ q - 1 b_ q) , where a_ 1 . . . a_ p and b_ 1 . . . b_ q are digits of two integers written in the decimal notation without leading zeros. In other words, the function f( x, y) alternately shuffles the digits of the numbers x and y by writing them from the lowest digits to the older ones, starting with the number y . The result of the function is also built from right to left ( that is, from the lower digits to the older ones) . If the digits of one of the arguments have ended, then the remaining digits of the other argument are written out. Familiarize with examples and formal definitions of the function below. For example: f( 1111, 2222) = 12121212 f( 7777, 888) = 7787878 f( 33, 44444) = 4443434 f( 555, 6) = 5556 f( 111, 2222) = 2121212 Formally, if p \u2265 q then f( a_ 1 . . . a_ p, b_ 1 . . . b_ q) = a_ 1 a_ 2 . . . a_ p - q + 1 b_ 1 a_ p - q + 2 b_ 2 . . . a_ p - 1 b_ q - 1 a_ p b_ q ; if p < q then f( a_ 1 . . . a_ p, b_ 1 . . . b_ q) = b_ 1 b_ 2 . . . b_ q - p a_ 1 b_ q - p + 1 a_ 2 . . . a_ p - 1 b_ q - 1 a_ p b_ q . Mishanya gives you an array consisting of n integers a_ i . All numbers in this array are of equal length ( that is, they consist of the same number of digits) . Your task is to help students to calculate \u2211_ i = 1^ n\u2211_ j = 1^ n f( a_ i, a_ j) modulo 998 244 353 .",
    "input": "The first line of the input contains a single integer n ( 1 \u2264 n \u2264 100 000 ) \u2014 the number of elements in the array. The second line of the input contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 9 ) \u2014 the elements of the array. All numbers a_ 1, a_ 2, . . . , a_ n are of equal length ( that is, they consist of the same number of digits) .",
    "output": "Print the answer modulo 998 244 353 .",
    "note": "",
    "topics": [
      "combinatorics",
      "math",
      "number theory"
    ],
    "id": "1195D1"
  },
  {
    "title": "Sport Mafia",
    "url": "https://codeforces.com/problemset/problem/1195/B",
    "history": "Each evening after the dinner the SIS' s students gather together to play the game of Sport Mafia. For the tournament, Alya puts candies into the box, which will serve as a prize for a winner. To do that, she performs n actions. The first action performed is to put a single candy into the box. For each of the remaining moves she can choose from two options: the first option, in case the box contains at least one candy, is to take exactly one candy out and eat it. This way the number of candies in the box decreased by 1 ; the second option is to put candies in the box. In this case, Alya will put 1 more candy, than she put in the previous time. Thus, if the box is empty, then it can only use the second option. For example, one possible sequence of Alya' s actions look as follows: put one candy into the box; put two candies into the box; eat one candy from the box; eat one candy from the box; put three candies into the box; eat one candy from the box; put four candies into the box; eat one candy from the box; put five candies into the box; This way she will perform 9 actions, the number of candies at the end will be 11 , while Alya will eat 4 candies in total. You know the total number of actions n and the number of candies at the end k . You need to find the total number of sweets Alya ate. That is the number of moves of the first option. It' s guaranteed, that for the given n and k the answer always exists. Please note, that during an action of the first option, Alya takes out and eats exactly one candy.",
    "input": "The first line contains two integers n and k ( 1 \u2264 n \u2264 10^ 9 ; 0 \u2264 k \u2264 10^ 9 ) \u2014 the total number of moves and the number of candies in the box at the end. It' s guaranteed, that for the given n and k the answer exists.",
    "output": "Print a single integer \u2014 the number of candies, which Alya ate. Please note, that in this problem there aren' t multiple possible answers \u2014 the answer is unique for any input data.",
    "note": "In the first example, Alya has made one move only. According to the statement, the first move is always putting one candy in the box. Hence Alya ate 0 candies. In the second example the possible sequence of Alya' s actions looks as follows: put 1 candy, put 2 candies, eat a candy, eat a candy, put 3 candies, eat a candy, put 4 candies, eat a candy, put 5 candies. This way, she will make exactly n= 9 actions and in the end the box will contain 1+ 2- 1- 1+ 3- 1+ 4- 1+ 5= 11 candies. The answer is 4 , since she ate 4 candies in total.",
    "topics": [
      "binary search",
      "brute force",
      "math"
    ],
    "id": "1195B"
  },
  {
    "title": "Drinks Choosing",
    "url": "https://codeforces.com/problemset/problem/1195/A",
    "history": "Old timers of Summer Informatics School can remember previous camps in which each student was given a drink of his choice on the vechorka ( late- evening meal) . Or may be the story was more complicated? There are n students living in a building, and for each of them the favorite drink a_ i is known. So you know n integers a_ 1, a_ 2, . . . , a_ n , where a_ i ( 1 \u2264 a_ i \u2264 k ) is the type of the favorite drink of the i - th student. The drink types are numbered from 1 to k . There are infinite number of drink sets. Each set consists of exactly two portions of the same drink. In other words, there are k types of drink sets, the j - th type contains two portions of the drink j . The available number of sets of each of the k types is infinite. You know that students will receive the minimum possible number of sets to give all students exactly one drink. Obviously, the number of sets will be exactly \u2308n/ 2\u2309 , where \u2308 x \u2309 is x rounded up. After students receive the sets, they will distribute their portions by their choice: each student will get exactly one portion. Note, that if n is odd then one portion will remain unused and the students' teacher will drink it. What is the maximum number of students that can get their favorite drink if \u2308n/ 2\u2309 sets will be chosen optimally and students will distribute portions between themselves optimally?",
    "input": "The first line of the input contains two integers n and k ( 1 \u2264 n, k \u2264 1 000 ) \u2014 the number of students in the building and the number of different drinks. The next n lines contain student' s favorite drinks. The i - th line contains a single integer from 1 to k \u2014 the type of the favorite drink of the i - th student.",
    "output": "Print exactly one integer \u2014 the maximum number of students that can get a favorite drink.",
    "note": "In the first example, students could choose three sets with drinks 1 , 1 and 2 ( so they will have two sets with two drinks of the type 1 each and one set with two drinks of the type 2 , so portions will be 1, 1, 1, 1, 2, 2 ) . This way all students except the second one will get their favorite drinks. Another possible answer is sets with drinks 1 , 2 and 3 . In this case the portions will be 1, 1, 2, 2, 3, 3 . Then all the students except one will gain their favorite drinks. The only student that will not gain the favorite drink will be a student with a_ i = 1 ( i. e. the first, the third or the fourth) .",
    "topics": [
      "greedy",
      "math"
    ],
    "id": "1195A"
  },
  {
    "title": "1-2-K Game",
    "url": "https://codeforces.com/problemset/problem/1194/D",
    "history": "Alice and Bob play a game. There is a paper strip which is divided into n + 1 cells numbered from left to right starting from 0. There is a chip placed in the n- th cell ( the last one) . Players take turns, Alice is first. Each player during his or her turn has to move the chip 1, 2 or k cells to the left ( so, if the chip is currently in the cell i, the player can move it into cell i - 1, i - 2 or i - k) . The chip should not leave the borders of the paper strip: it is impossible, for example, to move it k cells to the left if the current cell has number i < k. The player who can' t make a move loses the game. Who wins if both participants play optimally? Alice and Bob would like to play several games, so you should determine the winner in each game.",
    "input": "The first line contains the single integer T ( 1 \u2264 T \u2264 100) \u2014 the number of games. Next T lines contain one game per line. All games are independent. Each of the next T lines contains two integers n and k ( 0 \u2264 n \u2264 109, 3 \u2264 k \u2264 109) \u2014 the length of the strip and the constant denoting the third move, respectively.",
    "output": "For each game, print Alice if Alice wins this game and Bob otherwise.",
    "note": "",
    "topics": [
      "games",
      "math"
    ],
    "id": "1194D"
  },
  {
    "title": "Remove a Progression",
    "url": "https://codeforces.com/problemset/problem/1194/A",
    "history": "You have a list of numbers from 1 to n written from left to right on the blackboard. You perform an algorithm consisting of several steps ( steps are 1 - indexed) . On the i - th step you wipe the i - th number ( considering only remaining numbers) . You wipe the whole number ( not one digit) . When there are less than i numbers remaining, you stop your algorithm. Now you wonder: what is the value of the x - th remaining number after the algorithm is stopped?",
    "input": "The first line contains one integer T ( 1 \u2264 T \u2264 100 ) \u2014 the number of queries. The next T lines contain queries \u2014 one per line. All queries are independent. Each line contains two space- separated integers n and x ( 1 \u2264 x < n \u2264 10^ 9 ) \u2014 the length of the list and the position we wonder about. It' s guaranteed that after the algorithm ends, the list will still contain at least x numbers.",
    "output": "Print T integers ( one per query) \u2014 the values of the x - th number after performing the algorithm for the corresponding queries.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": "1194A"
  },
  {
    "title": "Amusement Park",
    "url": "https://codeforces.com/problemset/problem/1193/A",
    "history": "You have been hired to supervise the project of a new amusement park. The park will have a special gimmick: directed slides that can get customers from one attraction to another quickly and in an entertaining way. The park owner has given you the current project: a list of planned attractions and a list of slides that should be built between them. However, him being a businessman, he casually envisioned the impossible: among other things, he projected a slide coming from the Haunted Castle to the Roller Coaster, another from the Roller Coaster to the Drop Tower, and a third from the Drop Tower to the Haunted Castle. As the slides can only go downhill, it is evident why this is a problem. You don' t have the luxury of ignoring the laws of physics when building the park, so you have to request changes in the project. Maybe he would accept reversing the slide between the Drop Tower and the Haunted Castle? Formally: The project is a list of attractions and a list of directed slides. Each slide starts at one attraction and ends at another attraction. A proposal is obtained from the project by reversing the directions of some slides ( possibly none or all of them) . A proposal is legal if there is a way to assign an elevation to each attraction in such a way that every slide goes downhill. The cost of a proposal is the number of slides whose directions were reversed. For a given project, find and report the sum of costs all legal proposals. Since this number may be large, output it modulo 998, 244, 353 . ScoringSubtask 1 ( 7 points) : n \u2264 3 Subtask 2 ( 12 points) : n \u2264 6 Subtask 3 ( 23 points) : n \u2264 10 Subtask 4 ( 21 points) : n \u2264 15 Subtask 5 ( 37 points) : no additional constraints",
    "input": "The first line contains two space- separated integers n , m ( 1 \u2264 n \u2264 18 , 0 \u2264 m \u2264 n( n- 1) / 2 ) \u2013 the number of attractions and the number of slides, respectively. The attractions are numbered 1 through n . Then, m lines follow. The i - th of these lines contains two space- separated integers a_ i , b_ i ( 1 \u2264 a_ i, b_ i \u2264 n ) denoting a slide from a_ i to b_ i . You may assume that: There are no self- loops. ( For each i : a_ i = \u0338 b_ i . ) No slide appears twice. ( For all i = \u0338 j : a_ i = \u0338 a_ j or b_ i = \u0338 b_ j . ) No pair of attractions is connected in both directions. ( The unordered pairs { a_ i, b_ i} are distinct. )",
    "output": "Output one line with a single integer, the sum of costs of all legal proposals modulo 998, 244, 353 .",
    "note": "In the first example, there are two proposals: The slide direction is not flipped. This proposal has cost 0 . The slide direction is flipped. This proposal has cost 1 . As both proposals are valid, the answer is 0 + 1 = 1 . In the second example, there are eight proposals with the slide directions as follows: 1 \u2192 2 , 2 \u2192 3 , 1 \u2192 3 ( cost 0 ) 1 \u2192 2 , 2 \u2192 3 , 3 \u2192 1 ( cost 1 ) 1 \u2192 2 , 3 \u2192 2 , 1 \u2192 3 ( cost 1 ) 1 \u2192 2 , 3 \u2192 2 , 3 \u2192 1 ( cost 2 ) 2 \u2192 1 , 2 \u2192 3 , 1 \u2192 3 ( cost 1 ) 2 \u2192 1 , 2 \u2192 3 , 3 \u2192 1 ( cost 2 ) 2 \u2192 1 , 3 \u2192 2 , 1 \u2192 3 ( cost 2 ) 2 \u2192 1 , 3 \u2192 2 , 3 \u2192 1 ( cost 3 ) The second proposal is not legal, as there is a slide sequence 1 \u2192 2 \u2192 3 \u2192 1 . This means that the attraction 1 has to be strictly higher than ifself, which is clearly impossible. Similarly, the seventh proposal is not legal. The answer is thus 0 + 1 + 2 + 1 + 2 + 3 = 9 .",
    "topics": [
      "*special",
      "dp",
      "math"
    ],
    "id": "1193A"
  },
  {
    "title": "Candies!",
    "url": "https://codeforces.com/problemset/problem/1189/C",
    "history": "Consider a sequence of digits of length 2^ k [ a_ 1, a_ 2, . . . , a_ 2^ k] . We perform the following operation with it: replace pairs ( a_ 2i+ 1, a_ 2i+ 2) with ( a_ 2i+ 1 + a_ 2i+ 2) 10 for 0\u2264 i< 2^ k- 1 . For every i where a_ 2i+ 1 + a_ 2i+ 2\u2265 10 we get a candy! As a result, we will get a sequence of length 2^ k- 1 . Less formally, we partition sequence of length 2^ k into 2^ k- 1 pairs, each consisting of 2 numbers: the first pair consists of the first and second numbers, the second of the third and fourth . . . , the last pair consists of the ( 2^ k- 1 ) - th and ( 2^ k ) - th numbers. For every pair such that sum of numbers in it is at least 10 , we get a candy. After that, we replace every pair of numbers with a remainder of the division of their sum by 10 ( and don' t change the order of the numbers) . Perform this operation with a resulting array until it becomes of length 1 . Let f( [ a_ 1, a_ 2, . . . , a_ 2^ k] ) denote the number of candies we get in this process. For example: if the starting sequence is [ 8, 7, 3, 1, 7, 0, 9, 4] then: After the first operation the sequence becomes [ ( 8 + 7) 10, ( 3 + 1) 10, ( 7 + 0) 10, ( 9 + 4) 10] = [ 5, 4, 7, 3] , and we get 2 candies as 8 + 7 \u2265 10 and 9 + 4 \u2265 10 . After the second operation the sequence becomes [ ( 5 + 4) 10, ( 7 + 3) 10] = [ 9, 0] , and we get one more candy as 7 + 3 \u2265 10 . After the final operation sequence becomes [ ( 9 + 0) 10] = [ 9] . Therefore, f( [ 8, 7, 3, 1, 7, 0, 9, 4] ) = 3 as we got 3 candies in total. You are given a sequence of digits of length n s_ 1, s_ 2, . . . s_ n . You have to answer q queries of the form ( l_ i, r_ i) , where for i - th query you have to output f( [ s_ l_ i, s_ l_ i+ 1, . . . , s_ r_ i] ) . It is guaranteed that r_ i- l_ i+ 1 is of form 2^ k for some nonnegative integer k .",
    "input": "The first line contains a single integer n ( 1 \u2264 n \u2264 10^ 5 ) \u2014 the length of the sequence. The second line contains n digits s_ 1, s_ 2, . . . , s_ n ( 0 \u2264 s_ i \u2264 9 ) . The third line contains a single integer q ( 1 \u2264 q \u2264 10^ 5 ) \u2014 the number of queries. Each of the next q lines contains two integers l_ i , r_ i ( 1 \u2264 l_ i \u2264 r_ i \u2264 n ) \u2014 i - th query. It is guaranteed that r_ i- l_ i+ 1 is a nonnegative integer power of 2 .",
    "output": "Output q lines, in i - th line output single integer \u2014 f( [ s_ l_ i, s_ l_ i + 1, . . . , s_ r_ i] ) , answer to the i - th query.",
    "note": "The first example illustrates an example from the statement. f( [ 7, 3, 1, 7] ) = 1 : sequence of operations is [ 7, 3, 1, 7] \u2192 [ ( 7 + 3) 10, ( 1 + 7) 10] = [ 0, 8] and one candy as 7 + 3 \u2265 10 \u2192 [ ( 0 + 8) 10] = [ 8] , so we get only 1 candy. f( [ 9] ) = 0 as we don' t perform operations with it.",
    "topics": [
      "data structures",
      "dp",
      "implementation",
      "math"
    ],
    "id": "1189C"
  },
  {
    "title": "Number Circle",
    "url": "https://codeforces.com/problemset/problem/1189/B",
    "history": "You are given n numbers a_ 1, a_ 2, . . . , a_ n . Is it possible to arrange them in a circle in such a way that every number is strictly less than the sum of its neighbors? For example, for the array [ 1, 4, 5, 6, 7, 8] , the arrangement on the left is valid, while arrangement on the right is not, as 5\u2265 4 + 1 and 8> 1 + 6 .",
    "input": "The first line contains a single integer n ( 3\u2264 n \u2264 10^ 5 ) \u2014 the number of numbers. The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 9 ) \u2014 the numbers. The given numbers are not necessarily distinct ( i. e. duplicates are allowed) .",
    "output": "If there is no solution, output \" NO\" in the first line. If there is a solution, output \" YES\" in the first line. In the second line output n numbers \u2014 elements of the array in the order they will stay in the circle. The first and the last element you output are considered neighbors in the circle. If there are multiple solutions, output any of them. You can print the circle starting with any element.",
    "note": "One of the possible arrangements is shown in the first example: 4< 2 + 3 ; 2 < 4 + 3 ; 3< 4 + 2 . One of the possible arrangements is shown in the second example. No matter how we arrange 13, 8, 5 in a circle in the third example, 13 will have 8 and 5 as neighbors, but 13\u2265 8 + 5 . There is no solution in the fourth example.",
    "topics": [
      "greedy",
      "math",
      "sortings"
    ],
    "id": "1189B"
  },
  {
    "title": "Count Pairs",
    "url": "https://codeforces.com/problemset/problem/1188/B",
    "history": "You are given a prime number p , n integers a_ 1, a_ 2, . . . , a_ n , and an integer k . Find the number of pairs of indexes ( i, j) ( 1 \u2264 i < j \u2264 n ) for which ( a_ i + a_ j) ( a_ i^ 2 + a_ j^ 2) \u2261 k p .",
    "input": "The first line contains integers n, p, k ( 2 \u2264 n \u2264 3 \u00b7 10^ 5 , 2 \u2264 p \u2264 10^ 9 , 0 \u2264 k \u2264 p- 1 ) . p is guaranteed to be prime. The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 0 \u2264 a_ i \u2264 p- 1 ) . It is guaranteed that all elements are different.",
    "output": "Output a single integer \u2014 answer to the problem.",
    "note": "In the first example: ( 0+ 1) ( 0^ 2 + 1^ 2) = 1 \u2261 1 3 . ( 0+ 2) ( 0^ 2 + 2^ 2) = 8 \u2261 2 3 . ( 1+ 2) ( 1^ 2 + 2^ 2) = 15 \u2261 0 3 . So only 1 pair satisfies the condition. In the second example, there are 3 such pairs: ( 1, 5) , ( 2, 3) , ( 4, 6) .",
    "topics": [
      "math",
      "matrices",
      "number theory",
      "two pointers"
    ],
    "id": "1188B"
  },
  {
    "title": "Expected Square Beauty",
    "url": "https://codeforces.com/problemset/problem/1187/F",
    "history": "Let x be an array of integers x = [ x_ 1, x_ 2, . . . , x_ n] . Let' s define B( x) as a minimal size of a partition of x into subsegments such that all elements in each subsegment are equal. For example, B( [ 3, 3, 6, 1, 6, 6, 6] ) = 4 using next partition: [ 3, 3 | 6 | 1 | 6, 6, 6] . Now you don' t have any exact values of x , but you know that x_ i can be any integer value from [ l_ i, r_ i] ( l_ i \u2264 r_ i ) uniformly at random. All x_ i are independent. Calculate expected value of ( B( x) ) ^ 2 , or E( ( B( x) ) ^ 2) . It' s guaranteed that the expected value can be represented as rational fraction P/ Q where ( P, Q) = 1 , so print the value P \u00b7 Q^ - 1 10^ 9 + 7 .",
    "input": "The first line contains the single integer n ( 1 \u2264 n \u2264 2 \u00b7 10^ 5 ) \u2014 the size of the array x . The second line contains n integers l_ 1, l_ 2, . . . , l_ n ( 1 \u2264 l_ i \u2264 10^ 9 ) . The third line contains n integers r_ 1, r_ 2, . . . , r_ n ( l_ i \u2264 r_ i \u2264 10^ 9 ) .",
    "output": "Print the single integer \u2014 E( ( B( x) ) ^ 2) as P \u00b7 Q^ - 1 10^ 9 + 7 .",
    "note": "Let' s describe all possible values of x for the first sample: [ 1, 1, 1] : B( x) = 1 , B^ 2( x) = 1 ; [ 1, 1, 2] : B( x) = 2 , B^ 2( x) = 4 ; [ 1, 1, 3] : B( x) = 2 , B^ 2( x) = 4 ; [ 1, 2, 1] : B( x) = 3 , B^ 2( x) = 9 ; [ 1, 2, 2] : B( x) = 2 , B^ 2( x) = 4 ; [ 1, 2, 3] : B( x) = 3 , B^ 2( x) = 9 ; So E = 1/ 6 ( 1 + 4 + 4 + 9 + 4 + 9) = 31/ 6 or 31 \u00b7 6^ - 1 = 166666673 . All possible values of x for the second sample: [ 3, 4, 5] : B( x) = 3 , B^ 2( x) = 9 ; [ 3, 4, 6] : B( x) = 3 , B^ 2( x) = 9 ; [ 3, 5, 5] : B( x) = 2 , B^ 2( x) = 4 ; [ 3, 5, 6] : B( x) = 3 , B^ 2( x) = 9 ; [ 4, 4, 5] : B( x) = 2 , B^ 2( x) = 4 ; [ 4, 4, 6] : B( x) = 2 , B^ 2( x) = 4 ; [ 4, 5, 5] : B( x) = 2 , B^ 2( x) = 4 ; [ 4, 5, 6] : B( x) = 3 , B^ 2( x) = 9 ; So E = 1/ 8 ( 9 + 9 + 4 + 9 + 4 + 4 + 4 + 9) = 52/ 8 or 13 \u00b7 2^ - 1 = 500000010 .",
    "topics": [
      "dp",
      "math",
      "probabilities"
    ],
    "id": "1187F"
  },
  {
    "title": "Stickers and Toys",
    "url": "https://codeforces.com/problemset/problem/1187/A",
    "history": "Your favorite shop sells n Kinder Surprise chocolate eggs. You know that exactly s stickers and exactly t toys are placed in n eggs in total. Each Kinder Surprise can be one of three types: it can contain a single sticker and no toy; it can contain a single toy and no sticker; it can contain both a single sticker and a single toy. But you don' t know which type a particular Kinder Surprise has. All eggs look identical and indistinguishable from each other. What is the minimum number of Kinder Surprise Eggs you have to buy to be sure that, whichever types they are, you' ll obtain at least one sticker and at least one toy? Note that you do not open the eggs in the purchasing process, that is, you just buy some number of eggs. It' s guaranteed that the answer always exists.",
    "input": "The first line contains the single integer T ( 1 \u2264 T \u2264 100 ) \u2014 the number of queries. Next T lines contain three integers n , s and t each ( 1 \u2264 n \u2264 10^ 9 , 1 \u2264 s, t \u2264 n , s + t \u2265 n ) \u2014 the number of eggs, stickers and toys. All queries are independent.",
    "output": "Print T integers ( one number per query) \u2014 the minimum number of Kinder Surprise Eggs you have to buy to be sure that, whichever types they are, you' ll obtain at least one sticker and one toy",
    "note": "In the first query, we have to take at least 6 eggs because there are 5 eggs with only toy inside and, in the worst case, we' ll buy all of them. In the second query, all eggs have both a sticker and a toy inside, that' s why it' s enough to buy only one egg. In the third query, we have to buy both eggs: one with a sticker and one with a toy.",
    "topics": [
      "math"
    ],
    "id": "1187A"
  },
  {
    "title": "Vus the Cossack and a Field",
    "url": "https://codeforces.com/problemset/problem/1186/E",
    "history": "Vus the Cossack has a field with dimensions n \u00d7 m , which consists of \" 0\" and \" 1\" . He is building an infinite field from this field. He is doing this in this way: He takes the current field and finds a new inverted field. In other words, the new field will contain \" 1\" only there, where \" 0\" was in the current field, and \" 0\" there, where \" 1\" was. To the current field, he adds the inverted field to the right. To the current field, he adds the inverted field to the bottom. To the current field, he adds the current field to the bottom right. He repeats it. For example, if the initial field was: 1 0 1 1 After the first iteration, the field will be like this: 1 0 0 1 1 1 0 0 0 1 1 0 0 0 1 1 After the second iteration, the field will be like this: 1 0 0 1 0 1 1 0 1 1 0 0 0 0 1 1 0 1 1 0 1 0 0 1 0 0 1 1 1 1 0 0 0 1 1 0 1 0 0 1 0 0 1 1 1 1 0 0 1 0 0 1 0 1 1 0 1 1 0 0 0 0 1 1 And so on. . . Let' s numerate lines from top to bottom from 1 to infinity, and columns from left to right from 1 to infinity. We call the submatrix ( x_ 1, y_ 1, x_ 2, y_ 2) all numbers that have coordinates ( x, y) such that x_ 1 \u2264 x \u2264 x_ 2 and y_ 1 \u2264 y \u2264 y_ 2 . The Cossack needs sometimes to find the sum of all the numbers in submatrices. Since he is pretty busy right now, he is asking you to find the answers!",
    "input": "The first line contains three integers n , m , q ( 1 \u2264 n, m \u2264 1 000 , 1 \u2264 q \u2264 10^ 5 ) \u2014 the dimensions of the initial matrix and the number of queries. Each of the next n lines contains m characters c_ ij ( 0 \u2264 c_ ij\u2264 1 ) \u2014 the characters in the matrix. Each of the next q lines contains four integers x_ 1 , y_ 1 , x_ 2 , y_ 2 ( 1 \u2264 x_ 1 \u2264 x_ 2 \u2264 10^ 9 , 1 \u2264 y_ 1 \u2264 y_ 2 \u2264 10^ 9 ) \u2014 the coordinates of the upper left cell and bottom right cell, between which you need to find the sum of all numbers.",
    "output": "For each query, print the answer.",
    "note": "The first example is explained in the legend.",
    "topics": [
      "divide and conquer",
      "implementation",
      "math"
    ],
    "id": "1186E"
  },
  {
    "title": "Vus the Cossack and Numbers",
    "url": "https://codeforces.com/problemset/problem/1186/D",
    "history": "Vus the Cossack has n real numbers a_ i . It is known that the sum of all numbers is equal to 0 . He wants to choose a sequence b the size of which is n such that the sum of all numbers is 0 and each b_ i is either \u230a a_ i \u230b or \u2308 a_ i \u2309 . In other words, b_ i equals a_ i rounded up or down. It is not necessary to round to the nearest integer. For example, if a = [ 4. 58413, 1. 22491, - 2. 10517, - 3. 70387] , then b can be equal, for example, to [ 4, 2, - 2, - 4] . Note that if a_ i is an integer, then there is no difference between \u230a a_ i \u230b and \u2308 a_ i \u2309 , b_ i will always be equal to a_ i . Help Vus the Cossack find such sequence!",
    "input": "The first line contains one integer n ( 1 \u2264 n \u2264 10^ 5 ) \u2014 the number of numbers. Each of the next n lines contains one real number a_ i ( | a_ i| < 10^ 5 ) . It is guaranteed that each a_ i has exactly 5 digits after the decimal point. It is guaranteed that the sum of all the numbers is equal to 0 .",
    "output": "In each of the next n lines, print one integer b_ i . For each i , | a_ i- b_ i| < 1 must be met. If there are multiple answers, print any.",
    "note": "The first example is explained in the legend. In the second example, we can round the first and fifth numbers up, and the second and third numbers down. We can round the fourth number neither up, nor down.",
    "topics": [
      "constructive algorithms",
      "greedy",
      "math"
    ],
    "id": "1186D"
  },
  {
    "title": "Vus the Cossack and Strings",
    "url": "https://codeforces.com/problemset/problem/1186/C",
    "history": "Vus the Cossack has two binary strings, that is, strings that consist only of \" 0\" and \" 1\" . We call these strings a and b . It is known that | b| \u2264 | a| , that is, the length of b is at most the length of a . The Cossack considers every substring of length | b| in string a . Let' s call this substring c . He matches the corresponding characters in b and c , after which he counts the number of positions where the two strings are different. We call this function f( b, c) . For example, let b = 00110 , and c = 11000 . In these strings, the first, second, third and fourth positions are different. Vus the Cossack counts the number of such substrings c such that f( b, c) is even. For example, let a = 01100010 and b = 00110 . a has four substrings of the length | b| : 01100 , 11000 , 10001 , 00010 . f( 00110, 01100) = 2 ; f( 00110, 11000) = 4 ; f( 00110, 10001) = 4 ; f( 00110, 00010) = 1 . Since in three substrings, f( b, c) is even, the answer is 3 . Vus can not find the answer for big strings. That is why he is asking you to help him.",
    "input": "The first line contains a binary string a ( 1 \u2264 | a| \u2264 10^ 6 ) \u2014 the first string. The second line contains a binary string b ( 1 \u2264 | b| \u2264 | a| ) \u2014 the second string.",
    "output": "Print one number \u2014 the answer.",
    "note": "The first example is explained in the legend. In the second example, there are five substrings that satisfy us: 1010 , 0101 , 1111 , 1111 .",
    "topics": [
      "implementation",
      "math"
    ],
    "id": "1186C"
  },
  {
    "title": "Extra Element",
    "url": "https://codeforces.com/problemset/problem/1185/D",
    "history": "A sequence a_ 1, a_ 2, . . . , a_ k is called an arithmetic progression if for each i from 1 to k elements satisfy the condition a_ i = a_ 1 + c \u00b7 ( i - 1) for some fixed c . For example, these five sequences are arithmetic progressions: [ 5, 7, 9, 11] , [ 101] , [ 101, 100, 99] , [ 13, 97] and [ 5, 5, 5, 5, 5] . And these four sequences aren' t arithmetic progressions: [ 3, 1, 2] , [ 1, 2, 4, 8] , [ 1, - 1, 1, - 1] and [ 1, 2, 3, 3, 3] . You are given a sequence of integers b_ 1, b_ 2, . . . , b_ n . Find any index j ( 1 \u2264 j \u2264 n ) , such that if you delete b_ j from the sequence, you can reorder the remaining n- 1 elements, so that you will get an arithmetic progression. If there is no such index, output the number - 1.",
    "input": "The first line of the input contains one integer n ( 2 \u2264 n \u2264 2\u00b710^ 5 ) \u2014 length of the sequence b . The second line contains n integers b_ 1, b_ 2, . . . , b_ n ( - 10^ 9 \u2264 b_ i \u2264 10^ 9 ) \u2014 elements of the sequence b .",
    "output": "Print such index j ( 1 \u2264 j \u2264 n ) , so that if you delete the j - th element from the sequence, you can reorder the remaining elements, so that you will get an arithmetic progression. If there are multiple solutions, you are allowed to print any of them. If there is no such index, print - 1.",
    "note": "Note to the first example. If you delete the 4 - th element, you can get the arithmetic progression [ 2, 4, 6, 8] . Note to the second example. The original sequence is already arithmetic progression, so you can delete 1 - st or last element and you will get an arithmetical progression again.",
    "topics": [
      "implementation",
      "math"
    ],
    "id": "1185D"
  },
  {
    "title": "Exam in BerSU (hard version)",
    "url": "https://codeforces.com/problemset/problem/1185/C2",
    "history": "The only difference between easy and hard versions is constraints. If you write a solution in Python, then prefer to send it in PyPy to speed up execution time. A session has begun at Beland State University. Many students are taking exams. Polygraph Poligrafovich is going to examine a group of n students. Students will take the exam one- by- one in order from 1 - th to n - th. Rules of the exam are following: The i - th student randomly chooses a ticket. if this ticket is too hard to the student, he doesn' t answer and goes home immediately ( this process is so fast that it' s considered no time elapses) . This student fails the exam. if the student finds the ticket easy, he spends exactly t_ i minutes to pass the exam. After it, he immediately gets a mark and goes home. Students take the exam in the fixed order, one- by- one, without any interruption. At any moment of time, Polygraph Poligrafovich takes the answer from one student. The duration of the whole exam for all students is M minutes ( max t_ i \u2264 M ) , so students at the end of the list have a greater possibility to run out of time to pass the exam. For each student i , you should count the minimum possible number of students who need to fail the exam so the i - th student has enough time to pass the exam. For each student i , find the answer independently. That is, if when finding the answer for the student i_ 1 some student j should leave, then while finding the answer for i_ 2 ( i_ 2> i_ 1 ) the student j student does not have to go home.",
    "input": "The first line of the input contains two integers n and M ( 1 \u2264 n \u2264 2 \u00b7 10^ 5 , 1 \u2264 M \u2264 2 \u00b7 10^ 7 ) \u2014 the number of students and the total duration of the exam in minutes, respectively. The second line of the input contains n integers t_ i ( 1 \u2264 t_ i \u2264 100 ) \u2014 time in minutes that i - th student spends to answer to a ticket. It' s guaranteed that all values of t_ i are not greater than M .",
    "output": "Print n numbers: the i - th number must be equal to the minimum number of students who have to leave the exam in order to i - th student has enough time to pass the exam.",
    "note": "The explanation for the example 1. Please note that the sum of the first five exam times does not exceed M= 15 ( the sum is 1+ 2+ 3+ 4+ 5= 15 ) . Thus, the first five students can pass the exam even if all the students before them also pass the exam. In other words, the first five numbers in the answer are 0 . In order for the 6 - th student to pass the exam, it is necessary that at least 2 students must fail it before ( for example, the 3 - rd and 4 - th, then the 6 - th will finish its exam in 1+ 2+ 5+ 6= 14 minutes, which does not exceed M ) . In order for the 7 - th student to pass the exam, it is necessary that at least 3 students must fail it before ( for example, the 2 - nd, 5 - th and 6 - th, then the 7 - th will finish its exam in 1+ 3+ 4+ 7= 15 minutes, which does not exceed M ) .",
    "topics": [
      "brute force",
      "data structures",
      "greedy",
      "math"
    ],
    "id": "1185C2"
  },
  {
    "title": "Ropewalkers",
    "url": "https://codeforces.com/problemset/problem/1185/A",
    "history": "Polycarp decided to relax on his weekend and visited to the performance of famous ropewalkers: Agafon, Boniface and Konrad. The rope is straight and infinite in both directions. At the beginning of the performance, Agafon, Boniface and Konrad are located in positions a , b and c respectively. At the end of the performance, the distance between each pair of ropewalkers was at least d . Ropewalkers can walk on the rope. In one second, only one ropewalker can change his position. Every ropewalker can change his position exactly by 1 ( i. e. shift by 1 to the left or right direction on the rope) . Agafon, Boniface and Konrad can not move at the same time ( Only one of them can move at each moment) . Ropewalkers can be at the same positions at the same time and can \" walk past each other\" . You should find the minimum duration ( in seconds) of the performance. In other words, find the minimum number of seconds needed so that the distance between each pair of ropewalkers can be greater or equal to d . Ropewalkers can walk to negative coordinates, due to the rope is infinite to both sides.",
    "input": "The only line of the input contains four integers a , b , c , d ( 1 \u2264 a, b, c, d \u2264 10^ 9 ) . It is possible that any two ( or all three) ropewalkers are in the same position at the beginning of the performance.",
    "output": "Output one integer \u2014 the minimum duration ( in seconds) of the performance.",
    "note": "In the first example: in the first two seconds Konrad moves for 2 positions to the right ( to the position 8 ) , while Agafon and Boniface stay at their positions. Thus, the distance between Agafon and Boniface will be | 5 - 2| = 3 , the distance between Boniface and Konrad will be | 2 - 8| = 6 and the distance between Agafon and Konrad will be | 5 - 8| = 3 . Therefore, all three pairwise distances will be at least d= 3 , so the performance could be finished within 2 seconds.",
    "topics": [
      "math"
    ],
    "id": "1185A"
  },
  {
    "title": "Parallel Universes (Hard)",
    "url": "https://codeforces.com/problemset/problem/1184/D2",
    "history": "Heidi enjoyed performing the simulation because she knew exactly when a new universe would be formed and where, and when a non- existent link would be broken and where. However, the multiverse itself works in mysterious ways. Well, it works using probabilities, which to some people is mysterious. At each unit time, when a decision is made, one of the two events will happen randomly. Let' s denote l as the current length of the multiverse. With a probability of p_ create = 1 - l/ m , a universe will be created. With a probability of p_ break= l/ m , a non- existent link will be broken at some position. More specifically, When a universe is created, it will manifest itself between any two adjacent universes or at one of the ends. Each position occurs with a probability of 1/ l + 1 . When a link is broken, it could be cut between any two adjacent universes, each with a probability of 1/ l- 1 . After separating the multiverse into two segments, the segment NOT containing the Doctor will cease to exist. As earlier, the Doctor remains in the same universe. However, if at some point the multiverse breaks in such a way that the Doctor finds himself at the leftmost or rightmost end of it, the TARDIS stops functioning. In such a case, the Doctor must actually walk across the multiverse to find the tools to fix it. We are interested in the expected value of the length of the multiverse when such an event occurs.",
    "input": "The first and only line contains three integers n , k and m ( 1 \u2264 k \u2264 n \u2264 m \u2264 250) , the initial length of the multiverse, the initial position of the Doctor, and the maximum possible length of the multiverse.",
    "output": "Output a single integer on a single line, indicating the expected length of the multiverse. If the answer is p/ q , please print r where p \u2261 r \u00b7 q ( mod 10^ 9 + 7) .",
    "note": "For the first and the second test case, without any change to the multiverse, the Doctor is already at one of the ends. For the third test case, the multiverse can only break at a position, which renders the Doctor at one of its ends. For the fourth case, things seem to be a little more complicated, because the multiverse can grow and then be broken again.",
    "topics": [
      "math",
      "matrices"
    ],
    "id": "1184D2"
  },
  {
    "title": "Heidi Learns Hashing (Hard)",
    "url": "https://codeforces.com/problemset/problem/1184/A3",
    "history": "Now Heidi is ready to crack Madame Kovarian' s hashing function. Madame Kovarian has a very strict set of rules for name changes. Two names can be interchanged only if using the following hashing function on them results in a collision. However, the hashing function is parametrized, so one can always find a set of parameters that causes such a collision. Heidi decided to exploit this to her advantage. Given two strings w_ 1 , w_ 2 of equal length n consisting of lowercase English letters and an integer m . Consider the standard polynomial hashing function: H_ p( w) : = ( \u2211_ i= 0^ | w| - 1 w_ i r^ i ) ( p) where p is some prime, and r is some number such that 2\u2264 r \u2264 p- 2 . The goal is to find r and a prime p ( m \u2264 p \u2264 10^ 9 ) such that H_ p( w_ 1) = H_ p( w_ 2) . Strings w_ 1 and w_ 2 are sampled independently at random from all strings of length n over lowercase English letters.",
    "input": "The first line contains two integers n and m ( 10 \u2264 n \u2264 10^ 5 , 2 \u2264 m \u2264 10^ 5 ) . The second and the third line, respectively, contain the words w_ 1 , w_ 2 that were sampled independently at random from all strings of length n over lowercase English letters.",
    "output": "Output integers p, r . p should be a prime in the range [ m, 10^ 9] and r should be an integer satisfying r\u2208 [ 2, p- 2] . At least one solution is guaranteed to exist. In case multiple solutions exist, print any of them.",
    "note": "In the first example, note that even though p= 3 and r= 2 also causes a colision of hashes, it is not a correct solution, since m is 5 and thus we want p\u2265 5 . In the second example, we are aware of the extra ' g' at the end. We just didn' t realize that \" River Song\" and \" Melody Pond\" have different lengths. . .",
    "topics": [
      "fft",
      "math",
      "number theory"
    ],
    "id": "1184A3"
  },
  {
    "title": "Heidi Learns Hashing (Easy)",
    "url": "https://codeforces.com/problemset/problem/1184/A1",
    "history": "Melody Pond was stolen from her parents as a newborn baby by Madame Kovarian, to become a weapon of the Silence in their crusade against the Doctor. Madame Kovarian changed Melody' s name to River Song, giving her a new identity that allowed her to kill the Eleventh Doctor. Heidi figured out that Madame Kovarian uses a very complicated hashing function in order to change the names of the babies she steals. In order to prevent this from happening to future Doctors, Heidi decided to prepare herself by learning some basic hashing techniques. The first hashing function she designed is as follows. Given two positive integers ( x, y) she defines H( x, y) : = x^ 2+ 2xy+ x+ 1 . Now, Heidi wonders if the function is reversible. That is, given a positive integer r , can you find a pair ( x, y) ( of positive integers) such that H( x, y) = r ? If multiple such pairs exist, output the one with smallest possible x . If there is no such pair, output \" NO\" .",
    "input": "The first and only line contains an integer r ( 1 \u2264 r \u2264 10^ 12 ) .",
    "output": "Output integers x, y such that H( x, y) = r and x is smallest possible, or \" NO\" if no such pair exists.",
    "note": "",
    "topics": [
      "brute force",
      "math",
      "number theory"
    ],
    "id": "1184A1"
  },
  {
    "title": "Topforces Strikes Back",
    "url": "https://codeforces.com/problemset/problem/1183/F",
    "history": "One important contest will take place on the most famous programming platform ( Topforces) very soon! The authors have a pool of n problems and should choose at most three of them into this contest. The prettiness of the i - th problem is a_ i . The authors have to compose the most pretty contest ( in other words, the cumulative prettinesses of chosen problems should be maximum possible) . But there is one important thing in the contest preparation: because of some superstitions of authors, the prettinesses of problems cannot divide each other. In other words, if the prettinesses of chosen problems are x, y, z , then x should be divisible by neither y , nor z , y should be divisible by neither x , nor z and z should be divisible by neither x , nor y . If the prettinesses of chosen problems are x and y then neither x should be divisible by y nor y should be divisible by x . Any contest composed from one problem is considered good. Your task is to find out the maximum possible total prettiness of the contest composed of at most three problems from the given pool. You have to answer q independent queries. If you are Python programmer, consider using PyPy instead of Python when you submit your code.",
    "input": "The first line of the input contains one integer q ( 1 \u2264 q \u2264 2 \u00b7 10^ 5 ) \u2014 the number of queries. The first line of the query contains one integer n ( 1 \u2264 n \u2264 2 \u00b7 10^ 5 ) \u2014 the number of problems. The second line of the query contains n integers a_ 1, a_ 2, . . . , a_ n ( 2 \u2264 a_ i \u2264 2 \u00b7 10^ 5 ) , where a_ i is the prettiness of the i - th problem. It is guaranteed that the sum of n over all queries does not exceed 2 \u00b7 10^ 5 .",
    "output": "For each query print one integer \u2014 the maximum possible cumulative prettiness of the contest composed of at most three problems from the given pool of problems in the query.",
    "note": "",
    "topics": [
      "brute force",
      "math",
      "sortings"
    ],
    "id": "1183F"
  },
  {
    "title": "Computer Game",
    "url": "https://codeforces.com/problemset/problem/1183/C",
    "history": "Vova is playing a computer game. There are in total n turns in the game and Vova really wants to play all of them. The initial charge of his laptop battery ( i. e. the charge before the start of the game) is k . During each turn Vova can choose what to do: If the current charge of his laptop battery is strictly greater than a , Vova can just play, and then the charge of his laptop battery will decrease by a ; if the current charge of his laptop battery is strictly greater than b ( b< a ) , Vova can play and charge his laptop, and then the charge of his laptop battery will decrease by b ; if the current charge of his laptop battery is less than or equal to a and b at the same time then Vova cannot do anything and loses the game. Regardless of Vova' s turns the charge of the laptop battery is always decreases. Vova wants to complete the game ( Vova can complete the game if after each of n turns the charge of the laptop battery is strictly greater than 0 ) . Vova has to play exactly n turns. Among all possible ways to complete the game, Vova wants to choose the one where the number of turns when he just plays ( first type turn) is the maximum possible. It is possible that Vova cannot complete the game at all. Your task is to find out the maximum possible number of turns Vova can just play ( make the first type turn) or report that Vova cannot complete the game. You have to answer q independent queries.",
    "input": "The first line of the input contains one integer q ( 1 \u2264 q \u2264 10^ 5 ) \u2014 the number of queries. Each query is presented by a single line. The only line of the query contains four integers k, n, a and b ( 1 \u2264 k, n \u2264 10^ 9, 1 \u2264 b < a \u2264 10^ 9 ) \u2014 the initial charge of Vova' s laptop battery, the number of turns in the game and values a and b , correspondingly.",
    "output": "For each query print one integer: - 1 if Vova cannot complete the game or the maximum number of turns Vova can just play ( make the first type turn) otherwise.",
    "note": "In the first example query Vova can just play 4 turns and spend 12 units of charge and then one turn play and charge and spend 2 more units. So the remaining charge of the battery will be 1 . In the second example query Vova cannot complete the game because even if he will play and charge the battery during each turn then the charge of the laptop battery will be 0 after the last turn.",
    "topics": [
      "binary search",
      "math"
    ],
    "id": "1183C"
  },
  {
    "title": "Equalize Prices",
    "url": "https://codeforces.com/problemset/problem/1183/B",
    "history": "There are n products in the shop. The price of the i - th product is a_ i . The owner of the shop wants to equalize the prices of all products. However, he wants to change prices smoothly. In fact, the owner of the shop can change the price of some product i in such a way that the difference between the old price of this product a_ i and the new price b_ i is at most k . In other words, the condition | a_ i - b_ i| \u2264 k should be satisfied ( | x| is the absolute value of x ) . He can change the price for each product not more than once. Note that he can leave the old prices for some products. The new price b_ i of each product i should be positive ( i. e. b_ i > 0 should be satisfied for all i from 1 to n ) . Your task is to find out the maximum possible equal price B of all productts with the restriction that for all products the condiion | a_ i - B| \u2264 k should be satisfied ( where a_ i is the old price of the product and B is the same new price of all products) or report that it is impossible to find such price B . Note that the chosen price B should be integer. You should answer q independent queries.",
    "input": "The first line of the input contains one integer q ( 1 \u2264 q \u2264 100 ) \u2014 the number of queries. Each query is presented by two lines. The first line of the query contains two integers n and k ( 1 \u2264 n \u2264 100, 1 \u2264 k \u2264 10^ 8 ) \u2014 the number of products and the value k . The second line of the query contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 8 ) , where a_ i is the price of the i - th product.",
    "output": "Print q integers, where the i - th integer is the answer B on the i - th query. If it is impossible to equalize prices of all given products with restriction that for all products the condition | a_ i - B| \u2264 k should be satisfied ( where a_ i is the old price of the product and B is the new equal price of all products) , print - 1. Otherwise print the maximum possible equal price of all products.",
    "note": "In the first example query you can choose the price B= 2 . It is easy to see that the difference between each old price and each new price B= 2 is no more than 1 . In the second example query you can choose the price B= 6 and then all the differences between old and new price B= 6 will be no more than 2 . In the third example query you cannot choose any suitable price B . For any value B at least one condition out of two will be violated: | 1- B| \u2264 2 , | 6- B| \u2264 2 . In the fourth example query all values B between 1 and 7 are valid. But the maximum is 7 , so it' s the answer.",
    "topics": [
      "math"
    ],
    "id": "1183B"
  },
  {
    "title": "Product Oriented Recurrence",
    "url": "https://codeforces.com/problemset/problem/1182/E",
    "history": "Let f_ x = c^ 2x- 6\u00b7 f_ x- 1\u00b7 f_ x- 2\u00b7 f_ x- 3 for x \u2265 4 . You have given integers n , f_ 1 , f_ 2 , f_ 3 , and c . Find f_ n ( 10^ 9+ 7) .",
    "input": "The only line contains five integers n , f_ 1 , f_ 2 , f_ 3 , and c ( 4 \u2264 n \u2264 10^ 18 , 1 \u2264 f_ 1 , f_ 2 , f_ 3 , c \u2264 10^ 9 ) .",
    "output": "Print f_ n ( 10^ 9 + 7) .",
    "note": "In the first example, f_ 4 = 90 , f_ 5 = 72900 . In the second example, f_ 17\u2248 2. 28 \u00d7 10^ 29587 .",
    "topics": [
      "dp",
      "math",
      "matrices",
      "number theory"
    ],
    "id": "1182E"
  },
  {
    "title": "Filling Shapes",
    "url": "https://codeforces.com/problemset/problem/1182/A",
    "history": "You have a given integer n . Find the number of ways to fill all 3 \u00d7 n tiles with the shape described in the picture below. Upon filling, no empty spaces are allowed. Shapes cannot overlap. This picture describes when n = 4 . The left one is the shape and the right one is 3 \u00d7 n tiles.",
    "input": "The only line contains one integer n ( 1 \u2264 n \u2264 60 ) \u2014 the length.",
    "output": "Print the number of ways to fill.",
    "note": "In the first example, there are 4 possible cases of filling. In the second example, you cannot fill the shapes in 3 \u00d7 1 tiles.",
    "topics": [
      "dp",
      "math"
    ],
    "id": "1182A"
  },
  {
    "title": "Chunga-Changa",
    "url": "https://codeforces.com/problemset/problem/1181/A",
    "history": "Soon after the Chunga- Changa island was discovered, it started to acquire some forms of civilization and even market economy. A new currency arose, colloquially called \" chizhik\" . One has to pay in chizhiks to buy a coconut now. Sasha and Masha are about to buy some coconuts which are sold at price z chizhiks per coconut. Sasha has x chizhiks, Masha has y chizhiks. Each girl will buy as many coconuts as she can using only her money. This way each girl will buy an integer non- negative number of coconuts. The girls discussed their plans and found that the total number of coconuts they buy can increase ( or decrease) if one of them gives several chizhiks to the other girl. The chizhiks can' t be split in parts, so the girls can only exchange with integer number of chizhiks. Consider the following example. Suppose Sasha has 5 chizhiks, Masha has 4 chizhiks, and the price for one coconut be 3 chizhiks. If the girls don' t exchange with chizhiks, they will buy 1 + 1 = 2 coconuts. However, if, for example, Masha gives Sasha one chizhik, then Sasha will have 6 chizhiks, Masha will have 3 chizhiks, and the girls will buy 2 + 1 = 3 coconuts. It is not that easy to live on the island now, so Sasha and Mash want to exchange with chizhiks in such a way that they will buy the maximum possible number of coconuts. Nobody wants to have a debt, so among all possible ways to buy the maximum possible number of coconuts find such a way that minimizes the number of chizhiks one girl gives to the other ( it is not important who will be the person giving the chizhiks) .",
    "input": "The first line contains three integers x , y and z ( 0 \u2264 x, y \u2264 10^ 18 , 1 \u2264 z \u2264 10^ 18 ) \u2014 the number of chizhics Sasha has, the number of chizhics Masha has and the price of a coconut.",
    "output": "Print two integers: the maximum possible number of coconuts the girls can buy and the minimum number of chizhiks one girl has to give to the other.",
    "note": "The first example is described in the statement. In the second example the optimal solution is to dot exchange any chizhiks. The girls will buy 3 + 4 = 7 coconuts.",
    "topics": [
      "greedy",
      "math"
    ],
    "id": "1181A"
  },
  {
    "title": "Alex and a Rhombus",
    "url": "https://codeforces.com/problemset/problem/1180/A",
    "history": "While playing with geometric figures Alex has accidentally invented a concept of a n - th order rhombus in a cell grid. A 1 - st order rhombus is just a square 1 \u00d7 1 ( i. e just a cell) . A n - th order rhombus for all n \u2265 2 one obtains from a n- 1 - th order rhombus adding all cells which have a common side with it to it ( look at the picture to understand it better) . Alex asks you to compute the number of cells in a n - th order rhombus.",
    "input": "The first and only input line contains integer n ( 1 \u2264 n \u2264 100 ) \u2014 order of a rhombus whose numbers of cells should be computed.",
    "output": "Print exactly one integer \u2014 the number of cells in a n - th order rhombus.",
    "note": "Images of rhombus corresponding to the examples are given in the statement.",
    "topics": [
      "dp",
      "implementation",
      "math"
    ],
    "id": "1180A"
  },
  {
    "title": "Serge and Dining Room",
    "url": "https://codeforces.com/problemset/problem/1179/C",
    "history": "Serge came to the school dining room and discovered that there is a big queue here. There are m pupils in the queue. He' s not sure now if he wants to wait until the queue will clear, so he wants to know which dish he will receive if he does. As Serge is very tired, he asks you to compute it instead of him. Initially there are n dishes with costs a_ 1, a_ 2, . . . , a_ n . As you already know, there are the queue of m pupils who have b_ 1, . . . , b_ m togrogs respectively ( pupils are enumerated by queue order, i. e the first pupil in the queue has b_ 1 togrogs and the last one has b_ m togrogs) Pupils think that the most expensive dish is the most delicious one, so every pupil just buys the most expensive dish for which he has money ( every dish has a single copy, so when a pupil has bought it nobody can buy it later) , and if a pupil doesn' t have money for any dish, he just leaves the queue ( so brutal capitalism. . . ) But money isn' t a problem at all for Serge, so Serge is buying the most expensive dish if there is at least one remaining. Moreover, Serge' s school has a very unstable economic situation and the costs of some dishes or number of togrogs of some pupils can change. More formally, you must process q queries: change a_ i to x . It means that the price of the i - th dish becomes x togrogs. change b_ i to x . It means that the i - th pupil in the queue has x togrogs now. Nobody leaves the queue during those queries because a saleswoman is late. After every query, you must tell Serge price of the dish which he will buy if he has waited until the queue is clear, or - 1 if there are no dishes at this point, according to rules described above.",
    "input": "The first line contains integers n and m ( 1 \u2264 n, m \u2264 300 000 ) \u2014 number of dishes and pupils respectively. The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 6 ) \u2014 elements of array a . The third line contains m integers b_ 1, b_ 2, . . . , b_ m ( 1 \u2264 b_ i \u2264 10^ 6 ) \u2014 elements of array b . The fourth line conatins integer q ( 1 \u2264 q \u2264 300 000 ) \u2014 number of queries. Each of the following q lines contains as follows: if a query changes price of some dish, it contains 1 , and two integers i and x ( 1 \u2264 i \u2264 n , 1 \u2264 x \u2264 10^ 6 ) , what means a_ i becomes x . if a query changes number of togrogs of some pupil, it contains 2 , and two integers i and x ( 1 \u2264 i \u2264 m , 1 \u2264 x \u2264 10^ 6 ) , what means b_ i becomes x .",
    "output": "For each of q queries prints the answer as the statement describes, the answer of the i - th query in the i - th line ( the price of the dish which Serge will buy or - 1 if nothing remains)",
    "note": "In the first sample after the first query, there is one dish with price 100 togrogs and one pupil with one togrog, so Serge will buy the dish with price 100 togrogs. In the second sample after the first query, there is one dish with price one togrog and one pupil with 100 togrogs, so Serge will get nothing. In the third sample after the first query, nobody can buy the dish with price 8 , so Serge will take it. After the second query, all dishes will be bought, after the third one the third and fifth pupils will by the first and the second dishes respectively and nobody will by the fourth one.",
    "topics": [
      "binary search",
      "data structures",
      "graph matchings",
      "greedy",
      "implementation",
      "math",
      "trees"
    ],
    "id": "1179C"
  },
  {
    "title": "Prime Graph",
    "url": "https://codeforces.com/problemset/problem/1178/D",
    "history": "Every person likes prime numbers. Alice is a person, thus she also shares the love for them. Bob wanted to give her an affectionate gift but couldn' t think of anything inventive. Hence, he will be giving her a graph. How original, Bob! Alice will surely be thrilled! When building the graph, he needs four conditions to be satisfied: It must be a simple undirected graph, i. e. without multiple ( parallel) edges and self- loops. The number of vertices must be exactly n \u2014 a number he selected. This number is not necessarily prime. The total number of edges must be prime. The degree ( i. e. the number of edges connected to the vertex) of each vertex must be prime. Below is an example for n = 4 . The first graph ( left one) is invalid as the degree of vertex 2 ( and 4 ) equals to 1 , which is not prime. The second graph ( middle one) is invalid as the total number of edges is 4 , which is not a prime number. The third graph ( right one) is a valid answer for n = 4 . Note that the graph can be disconnected. Please help Bob to find any such graph!",
    "input": "The input consists of a single integer n ( 3 \u2264 n \u2264 1 000 ) \u2014 the number of vertices.",
    "output": "If there is no graph satisfying the conditions, print a single line containing the integer - 1 . Otherwise, first print a line containing a prime number m ( 2 \u2264 m \u2264n( n- 1) / 2 ) \u2014 the number of edges in the graph. Then, print m lines, the i - th of which containing two integers u_ i , v_ i ( 1 \u2264 u_ i, v_ i \u2264 n ) \u2014 meaning that there is an edge between vertices u_ i and v_ i . The degree of each vertex must be prime. There must be no multiple ( parallel) edges or self- loops. If there are multiple solutions, you may print any of them. Note that the graph can be disconnected.",
    "note": "The first example was described in the statement. In the second example, the degrees of vertices are [ 7, 5, 2, 2, 3, 2, 2, 3] . Each of these numbers is prime. Additionally, the number of edges, 13 , is also a prime number, hence both conditions are satisfied.",
    "topics": [
      "constructive algorithms",
      "greedy",
      "math",
      "number theory"
    ],
    "id": "1178D"
  },
  {
    "title": "Tiles",
    "url": "https://codeforces.com/problemset/problem/1178/C",
    "history": "Bob is decorating his kitchen, more precisely, the floor. He has found a prime candidate for the tiles he will use. They come in a simple form factor \u2014 a square tile that is diagonally split into white and black part as depicted in the figure below. The dimension of this tile is perfect for this kitchen, as he will need exactly w \u00d7 h tiles without any scraps. That is, the width of the kitchen is w tiles, and the height is h tiles. As each tile can be rotated in one of four ways, he still needs to decide on how exactly he will tile the floor. There is a single aesthetic criterion that he wants to fulfil: two adjacent tiles must not share a colour on the edge \u2014 i. e. one of the tiles must have a white colour on the shared border, and the second one must be black. The picture on the left shows one valid tiling of a 3 \u00d7 2 kitchen. The picture on the right shows an invalid arrangement, as the bottom two tiles touch with their white parts. Find the number of possible tilings. As this number may be large, output its remainder when divided by 998244353 ( a prime number) .",
    "input": "The only line contains two space separated integers w , h ( 1 \u2264 w, h \u2264 1 000 ) \u2014 the width and height of the kitchen, measured in tiles.",
    "output": "Output a single integer n \u2014 the remainder of the number of tilings when divided by 998244353 .",
    "note": "",
    "topics": [
      "combinatorics",
      "greedy",
      "math"
    ],
    "id": "1178C"
  },
  {
    "title": "Merge it!",
    "url": "https://codeforces.com/problemset/problem/1176/B",
    "history": "You are given an array a consisting of n integers a_ 1, a_ 2, . . . , a_ n . In one operation you can choose two elements of the array and replace them with the element equal to their sum ( it does not matter where you insert the new element) . For example, from the array [ 2, 1, 4] you can obtain the following arrays: [ 3, 4] , [ 1, 6] and [ 2, 5] . Your task is to find the maximum possible number of elements divisible by 3 that are in the array after performing this operation an arbitrary ( possibly, zero) number of times. You have to answer t independent queries.",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 1000 ) \u2014 the number of queries. The first line of each query contains one integer n ( 1 \u2264 n \u2264 100 ) . The second line of each query contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 9 ) .",
    "output": "For each query print one integer in a single line \u2014 the maximum possible number of elements divisible by 3 that are in the array after performing described operation an arbitrary ( possibly, zero) number of times.",
    "note": "In the first query of the example you can apply the following sequence of operations to obtain 3 elements divisible by 3 : [ 3, 1, 2, 3, 1] \u2192 [ 3, 3, 3, 1] . In the second query you can obtain 3 elements divisible by 3 with the following sequence of operations: [ 1, 1, 1, 1, 1, 2, 2] \u2192 [ 1, 1, 1, 1, 2, 3] \u2192 [ 1, 1, 1, 3, 3] \u2192 [ 2, 1, 3, 3] \u2192 [ 3, 3, 3] .",
    "topics": [
      "math"
    ],
    "id": "1176B"
  },
  {
    "title": "The Number of Subpermutations",
    "url": "https://codeforces.com/problemset/problem/1175/F",
    "history": "You have an array a_ 1, a_ 2, . . . , a_ n . Let' s call some subarray a_ l, a_ l + 1, . . . , a_ r of this array a subpermutation if it contains all integers from 1 to r- l+ 1 exactly once. For example, array a = [ 2, 2, 1, 3, 2, 3, 1] contains 6 subarrays which are subpermutations: [ a_ 2 . . . a_ 3] , [ a_ 2 . . . a_ 4] , [ a_ 3 . . . a_ 3] , [ a_ 3 . . . a_ 5] , [ a_ 5 . . . a_ 7] , [ a_ 7 . . . a_ 7] . You are asked to calculate the number of subpermutations.",
    "input": "The first line contains one integer n ( 1 \u2264 n \u2264 3 \u00b7 10^ 5 ) . The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 n ) . This array can contain the same integers.",
    "output": "Print the number of subpermutations of the array a .",
    "note": "There are 7 subpermutations in the first test case. Their segments of indices are [ 1, 4] , [ 3, 3] , [ 3, 6] , [ 4, 7] , [ 6, 7] , [ 7, 7] and [ 7, 8] . In the second test case 6 subpermutations exist: [ 1, 1] , [ 2, 2] , [ 2, 3] , [ 3, 4] , [ 4, 4] and [ 4, 5] .",
    "topics": [
      "brute force",
      "data structures",
      "divide and conquer",
      "hashing",
      "math"
    ],
    "id": "1175F"
  },
  {
    "title": "From Hero to Zero",
    "url": "https://codeforces.com/problemset/problem/1175/A",
    "history": "You are given an integer n and an integer k . In one step you can do one of the following moves: decrease n by 1 ; divide n by k if n is divisible by k . For example, if n = 27 and k = 3 you can do the following steps: 27 \u2192 26 \u2192 25 \u2192 24 \u2192 8 \u2192 7 \u2192 6 \u2192 2 \u2192 1 \u2192 0 . You are asked to calculate the minimum number of steps to reach 0 from n .",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 100 ) \u2014 the number of queries. The only line of each query contains two integers n and k ( 1 \u2264 n \u2264 10^ 18 , 2 \u2264 k \u2264 10^ 18 ) .",
    "output": "For each query print the minimum number of steps to reach 0 from n in single line.",
    "note": "Steps for the first test case are: 59 \u2192 58 \u2192 57 \u2192 19 \u2192 18 \u2192 6 \u2192 2 \u2192 1 \u2192 0 . In the second test case you have to divide n by k 18 times and then decrease n by 1 .",
    "topics": [
      "implementation",
      "math"
    ],
    "id": "1175A"
  },
  {
    "title": "Ehab and the Expected GCD Problem",
    "url": "https://codeforces.com/problemset/problem/1174/E",
    "history": "Let' s define a function f( p) on a permutation p as follows. Let g_ i be the greatest common divisor ( GCD) of elements p_ 1 , p_ 2 , . . . , p_ i ( in other words, it is the GCD of the prefix of length i ) . Then f( p) is the number of distinct elements among g_ 1 , g_ 2 , . . . , g_ n . Let f_ max( n) be the maximum value of f( p) among all permutations p of integers 1 , 2 , . . . , n . Given an integers n , count the number of permutations p of integers 1 , 2 , . . . , n , such that f( p) is equal to f_ max( n) . Since the answer may be large, print the remainder of its division by 1000 000 007 = 10^ 9 + 7 .",
    "input": "The only line contains the integer n ( 2 \u2264 n \u2264 10^ 6 ) \u2014 the length of the permutations.",
    "output": "The only line should contain your answer modulo 10^ 9+ 7 .",
    "note": "Consider the second example: these are the permutations of length 3 : [ 1, 2, 3] , f( p) = 1 . [ 1, 3, 2] , f( p) = 1 . [ 2, 1, 3] , f( p) = 2 . [ 2, 3, 1] , f( p) = 2 . [ 3, 1, 2] , f( p) = 2 . [ 3, 2, 1] , f( p) = 2 . The maximum value f_ max( 3) = 2 , and there are 4 permutations p such that f( p) = 2 .",
    "topics": [
      "combinatorics",
      "dp",
      "math",
      "number theory"
    ],
    "id": "1174E"
  },
  {
    "title": "Three Integers Again",
    "url": "https://codeforces.com/problemset/problem/1170/A",
    "history": "We have three positive integers a , b and c . You don' t know their values, but you know some information about them. Consider all three pairwise sums, i. e. the numbers a+ b , a+ c and b+ c . You know exactly two ( any) of three pairwise sums. Your task is to find such three positive integers a , b and c which match the given information. It means that if you consider a+ b , a+ c and b+ c , two out of all three of them are given in the input. Among all such triples, you must choose one with the minimum possible sum a+ b+ c , and among all triples with the minimum sum, you can print any. You have to process q independent queries.",
    "input": "The first line of the input contains one integer q ( 1 \u2264 q \u2264 1000 ) \u2014 the number of queries. The next q lines contain queries. Each query is given as two integers x and y ( 2 \u2264 x, y \u2264 2 \u00b7 10^ 9 ) , where x and y are any two out of the three numbers a+ b , a+ c and b+ c .",
    "output": "For each query print the answer to it: three positive integers a , b and c consistent with the given information. Among all such triples, you have to choose one with the minimum possible sum a+ b+ c . Among all triples with the minimum sum, you can print any.",
    "note": "",
    "topics": [
      "*special",
      "math"
    ],
    "id": "1170A"
  },
  {
    "title": "Circle Metro",
    "url": "https://codeforces.com/problemset/problem/1169/A",
    "history": "The circle line of the Roflanpolis subway has n stations. There are two parallel routes in the subway. The first one visits stations in order 1 \u2192 2 \u2192. . . \u2192 n \u2192 1 \u2192 2 \u2192. . . ( so the next stop after station x is equal to ( x+ 1) if x < n and 1 otherwise) . The second route visits stations in order n \u2192 ( n- 1) \u2192. . . \u2192 1 \u2192 n \u2192 ( n- 1) \u2192. . . ( so the next stop after station x is equal to ( x- 1) if x> 1 and n otherwise) . All trains depart their stations simultaneously, and it takes exactly 1 minute to arrive at the next station. Two toads live in this city, their names are Daniel and Vlad. Daniel is currently in a train of the first route at station a and will exit the subway when his train reaches station x . Coincidentally, Vlad is currently in a train of the second route at station b and he will exit the subway when his train reaches station y . Surprisingly, all numbers a, x, b, y are distinct. Toad Ilya asks you to check if Daniel and Vlad will ever be at the same station at the same time during their journey. In other words, check if there is a moment when their trains stop at the same station. Note that this includes the moments when Daniel or Vlad enter or leave the subway.",
    "input": "The first line contains five space- separated integers n , a , x , b , y ( 4 \u2264 n \u2264 100 , 1 \u2264 a, x, b, y \u2264 n , all numbers among a , x , b , y are distinct) \u2014 the number of stations in Roflanpolis, Daniel' s start station, Daniel' s finish station, Vlad' s start station and Vlad' s finish station, respectively.",
    "output": "Output \" YES\" if there is a time moment when Vlad and Daniel are at the same station, and \" NO\" otherwise. You can print each letter in any case ( upper or lower) .",
    "note": "In the first example, Daniel and Vlad start at the stations ( 1, 3) . One minute later they are at stations ( 2, 2) . They are at the same station at this moment. Note that Vlad leaves the subway right after that. Consider the second example, let' s look at the stations Vlad and Daniel are at. They are: initially ( 2, 9) , after 1 minute ( 3, 8) , after 2 minutes ( 4, 7) , after 3 minutes ( 5, 6) , after 4 minutes ( 6, 5) , after 5 minutes ( 7, 4) , after 6 minutes ( 8, 3) , after 7 minutes ( 9, 2) , after 8 minutes ( 10, 1) , after 9 minutes ( 1, 10) . After that, they both leave the subway because they are at their finish stations, so there is no moment when they both are at the same station.",
    "topics": [
      "implementation",
      "math"
    ],
    "id": "1169A"
  },
  {
    "title": "Xor Permutations",
    "url": "https://codeforces.com/problemset/problem/1168/E",
    "history": "Toad Mikhail has an array of 2^ k integers a_ 1, a_ 2, . . . , a_ 2^ k . Find two permutations p and q of integers 0, 1, . . . , 2^ k- 1 , such that a_ i is equal to p_ i \u2295 q_ i for all possible i , or determine there are no such permutations. Here \u2295 denotes the bitwise XOR operation.",
    "input": "The first line contains one integer k ( 2 \u2264 k \u2264 12 ) , denoting that the size of the array is 2^ k . The next line contains 2^ k space- separated integers a_ 1, a_ 2, . . . , a_ 2^ k ( 0 \u2264 a_ i < 2^ k ) \u2014 the elements of the given array.",
    "output": "If the given array can' t be represented as element- wise XOR of two permutations of integers 0, 1, . . . , 2^ k- 1 , print \" Fou\" . Otherwise, print \" Shi\" in the first line. The next two lines should contain the description of two suitable permutations. The first of these lines should contain 2^ k space- separated distinct integers p_ 1, p_ 2, . . . , p_ 2^ k , and the second line should contain 2^ k space- separated distinct integers q_ 1, q_ 2, . . . , q_ 2^ k . All elements of p and q should be between 0 and 2^ k - 1 , inclusive; p_ i \u2295 q_ i should be equal to a_ i for all i such that 1 \u2264 i \u2264 2^ k . If there are several possible solutions, you can print any.",
    "note": "",
    "topics": [
      "constructive algorithms",
      "math"
    ],
    "id": "1168E"
  },
  {
    "title": "Scalar Queries",
    "url": "https://codeforces.com/problemset/problem/1167/F",
    "history": "You are given an array a_ 1, a_ 2, . . . , a_ n . All a_ i are pairwise distinct. Let' s define function f( l, r) as follows: let' s define array b_ 1, b_ 2, . . . , b_ r - l + 1 , where b_ i = a_ l - 1 + i ; sort array b in increasing order; result of the function f( l, r) is \u2211_ i = 1^ r - l + 1b_ i \u00b7 i . Calculate ( \u2211_ 1 \u2264 l \u2264 r \u2264 nf( l, r) ) ( 10^ 9+ 7) , i. e. total sum of f for all subsegments of a modulo 10^ 9+ 7 .",
    "input": "The first line contains one integer n ( 1 \u2264 n \u2264 5 \u00b7 10^ 5 ) \u2014 the length of array a . The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 9 , a_ i = \u0338 a_ j for i = \u0338 j ) \u2014 array a .",
    "output": "Print one integer \u2014 the total sum of f for all subsegments of a modulo 10^ 9+ 7",
    "note": "Description of the first example: f( 1, 1) = 5 \u00b7 1 = 5 ; f( 1, 2) = 2 \u00b7 1 + 5 \u00b7 2 = 12 ; f( 1, 3) = 2 \u00b7 1 + 4 \u00b7 2 + 5 \u00b7 3 = 25 ; f( 1, 4) = 2 \u00b7 1 + 4 \u00b7 2 + 5 \u00b7 3 + 7 \u00b7 4 = 53 ; f( 2, 2) = 2 \u00b7 1 = 2 ; f( 2, 3) = 2 \u00b7 1 + 4 \u00b7 2 = 10 ; f( 2, 4) = 2 \u00b7 1 + 4 \u00b7 2 + 7 \u00b7 3 = 31 ; f( 3, 3) = 4 \u00b7 1 = 4 ; f( 3, 4) = 4 \u00b7 1 + 7 \u00b7 2 = 18 ; f( 4, 4) = 7 \u00b7 1 = 7 ;",
    "topics": [
      "combinatorics",
      "data structures",
      "math",
      "sortings"
    ],
    "id": "1167F"
  },
  {
    "title": "Lost Numbers",
    "url": "https://codeforces.com/problemset/problem/1167/B",
    "history": "This is an interactive problem. Remember to flush your output while communicating with the testing program. You may use fflush( stdout) in C+ + , system. out. flush( ) in Java, stdout. flush( ) in Python or flush( output) in Pascal to flush the output. If you use some other programming language, consult its documentation. You may also refer to the guide on interactive problems: https: / / codeforces. com/ blog/ entry/ 45307. The jury guessed some array a consisting of 6 integers. There are 6 special numbers \u2014 4 , 8 , 15 , 16 , 23 , 42 \u2014 and each of these numbers occurs in a exactly once ( so, a is some permutation of these numbers) . You don' t know anything about their order, but you are allowed to ask up to 4 queries. In each query, you may choose two indices i and j ( 1 \u2264 i, j \u2264 6 , i and j are not necessarily distinct) , and you will get the value of a_ i \u00b7 a_ j in return. Can you guess the array a ? The array a is fixed beforehand in each test, the interaction program doesn' t try to adapt to your queries. InteractionBefore submitting the answer, you may ask up to 4 queries. To ask a query, print one line in the following format: ? i j , where i and j should be two integers such that 1 \u2264 i, j \u2264 6 . The line should be ended with a line break character. After submitting a query, flush the output and read the answer to your query \u2014 one line containing one integer a_ i \u00b7 a_ j . If you submit an incorrect query ( or ask more than 4 queries) , the answer to it will be one string 0. After receiving such an answer, your program should terminate immediately \u2014 otherwise you may receive verdict \" Runtime error\" , \" Time limit exceeded\" or some other verdict instead of \" Wrong answer\" . To give the answer, your program should print one line ! a_ 1 a_ 2 a_ 3 a_ 4 a_ 5 a_ 6 with a line break in the end. After that, it should flush the output and terminate gracefully.",
    "input": "",
    "output": "",
    "note": "If you want to submit a hack for this problem, your test should contain exactly six space- separated integers a_ 1 , a_ 2 , . . . , a_ 6 . Each of 6 special numbers should occur exactly once in the test. The test should be ended with a line break character.",
    "topics": [
      "brute force",
      "divide and conquer",
      "interactive",
      "math"
    ],
    "id": "1167B"
  },
  {
    "title": "The LCMs Must be Large",
    "url": "https://codeforces.com/problemset/problem/1166/E",
    "history": "Dora the explorer has decided to use her money after several years of juicy royalties to go shopping. What better place to shop than Nlogonia? There are n stores numbered from 1 to n in Nlogonia. The i - th of these stores offers a positive integer a_ i . Each day among the last m days Dora bought a single integer from some of the stores. The same day, Swiper the fox bought a single integer from all the stores that Dora did not buy an integer from on that day. Dora considers Swiper to be her rival, and she considers that she beat Swiper on day i if and only if the least common multiple of the numbers she bought on day i is strictly greater than the least common multiple of the numbers that Swiper bought on day i . The least common multiple ( LCM) of a collection of integers is the smallest positive integer that is divisible by all the integers in the collection. However, Dora forgot the values of a_ i . Help Dora find out if there are positive integer values of a_ i such that she beat Swiper on every day. You don' t need to find what are the possible values of a_ i though. Note that it is possible for some values of a_ i to coincide in a solution.",
    "input": "The first line contains integers m and n ( 1\u2264 m \u2264 50 , 1\u2264 n \u2264 10^ 4 ) \u2014 the number of days and the number of stores. After this m lines follow, the i - th line starts with an integer s_ i ( 1\u2264 s_ i \u2264 n- 1 ) , the number of integers Dora bought on day i , followed by s_ i distinct integers, the indices of the stores where Dora bought an integer on the i - th day. The indices are between 1 and n .",
    "output": "Output must consist of a single line containing \" possible\" if there exist positive integers a_ i such that for each day the least common multiple of the integers bought by Dora is strictly greater than the least common multiple of the integers bought by Swiper on that day. Otherwise, print \" impossible\" . Note that you don' t have to restore the integers themselves.",
    "note": "In the first sample, a possible choice for the values of the a_ i is 3, 4, 3, 5, 2 . On the first day, Dora buys the integers 3, 4 and 3 , whose LCM is 12 , while Swiper buys integers 5 and 2 , whose LCM is 10 . On the second day, Dora buys 3, 5 and 2 , whose LCM is 30 , and Swiper buys integers 3 and 4 , whose LCM is 12 .",
    "topics": [
      "bitmasks",
      "brute force",
      "constructive algorithms",
      "math",
      "number theory"
    ],
    "id": "1166E"
  },
  {
    "title": "Cute Sequences",
    "url": "https://codeforces.com/problemset/problem/1166/D",
    "history": "Given a positive integer m , we say that a sequence x_ 1, x_ 2, . . . , x_ n of positive integers is m - cute if for every index i such that 2 \u2264 i \u2264 n it holds that x_ i = x_ i - 1 + x_ i - 2 + . . . + x_ 1 + r_ i for some positive integer r_ i satisfying 1 \u2264 r_ i \u2264 m . You will be given q queries consisting of three positive integers a , b and m . For each query you must determine whether or not there exists an m - cute sequence whose first term is a and whose last term is b . If such a sequence exists, you must additionally find an example of it.",
    "input": "The first line contains an integer number q ( 1 \u2264 q \u2264 10^ 3 ) \u2014 the number of queries. Each of the following q lines contains three integers a , b , and m ( 1 \u2264 a, b, m \u2264 10^ 14 , a \u2264 b ) , describing a single query.",
    "output": "For each query, if no m - cute sequence whose first term is a and whose last term is b exists, print - 1 . Otherwise print an integer k ( 1 \u2264 k \u2264 50 ) , followed by k integers x_ 1, x_ 2, . . . , x_ k ( 1 \u2264 x_ i \u2264 10^ 14 ) . These integers must satisfy x_ 1 = a , x_ k = b , and that the sequence x_ 1, x_ 2, . . . , x_ k is m - cute. It can be shown that under the problem constraints, for each query either no m - cute sequence exists, or there exists one with at most 50 terms. If there are multiple possible sequences, you may print any of them.",
    "note": "Consider the sample. In the first query, the sequence 5, 6, 13, 26 is valid since 6 = 5 + 1 , 13 = 6 + 5 + 2 and 26 = 13 + 6 + 5 + 2 have the bold values all between 1 and 2 , so the sequence is 2 - cute. Other valid sequences, such as 5, 7, 13, 26 are also accepted. In the second query, the only possible 1 - cute sequence starting at 3 is 3, 4, 8, 16, . . . , which does not contain 9 .",
    "topics": [
      "binary search",
      "brute force",
      "greedy",
      "math"
    ],
    "id": "1166D"
  },
  {
    "title": "All the Vowels Please",
    "url": "https://codeforces.com/problemset/problem/1166/B",
    "history": "Tom loves vowels, and he likes long words with many vowels. His favorite words are vowelly words. We say a word of length k is vowelly if there are positive integers n and m such that n\u00b7 m = k and when the word is written by using n rows and m columns ( the first row is filled first, then the second and so on, with each row filled from left to right) , every vowel of the English alphabet appears at least once in every row and every column. You are given an integer k and you must either print a vowelly word of length k or print - 1 if no such word exists. In this problem the vowels of the English alphabet are ' a' , ' e' , ' i' , ' o' , ' u' .",
    "input": "Input consists of a single line containing the integer k ( 1\u2264 k \u2264 10^ 4 ) \u2014 the required length.",
    "output": "The output must consist of a single line, consisting of a vowelly word of length k consisting of lowercase English letters if it exists or - 1 if it does not. If there are multiple possible words, you may output any of them.",
    "note": "In the second example, the word \" agoeuioaeiruuimaeoieauoweouoiaouimae\" can be arranged into the following 6 \u00d7 6 grid: It is easy to verify that every row and every column contain all the vowels.",
    "topics": [
      "constructive algorithms",
      "math",
      "number theory"
    ],
    "id": "1166B"
  },
  {
    "title": "Two Arrays and Sum of Functions",
    "url": "https://codeforces.com/problemset/problem/1165/E",
    "history": "You are given two arrays a and b , both of length n . Let' s define a function f( l, r) = \u2211_ l \u2264 i \u2264 r a_ i \u00b7 b_ i . Your task is to reorder the elements ( choose an arbitrary order of elements) of the array b to minimize the value of \u2211_ 1 \u2264 l \u2264 r \u2264 n f( l, r) . Since the answer can be very large, you have to print it modulo 998244353 . Note that you should minimize the answer but not its remainder.",
    "input": "The first line of the input contains one integer n ( 1 \u2264 n \u2264 2 \u00b7 10^ 5 ) \u2014 the number of elements in a and b . The second line of the input contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 6 ) , where a_ i is the i - th element of a . The third line of the input contains n integers b_ 1, b_ 2, . . . , b_ n ( 1 \u2264 b_ j \u2264 10^ 6 ) , where b_ j is the j - th element of b .",
    "output": "Print one integer \u2014 the minimum possible value of \u2211_ 1 \u2264 l \u2264 r \u2264 n f( l, r) after rearranging elements of b , taken modulo 998244353 . Note that you should minimize the answer but not its remainder.",
    "note": "",
    "topics": [
      "greedy",
      "math",
      "sortings"
    ],
    "id": "1165E"
  },
  {
    "title": "Almost All Divisors",
    "url": "https://codeforces.com/problemset/problem/1165/D",
    "history": "We guessed some integer number x . You are given a list of almost all its divisors. Almost all means that there are all divisors except 1 and x in the list. Your task is to find the minimum possible integer x that can be the guessed number, or say that the input data is contradictory and it is impossible to find such number. You have to answer t independent queries.",
    "input": "The first line of the input contains one integer t ( 1 \u2264 t \u2264 25 ) \u2014 the number of queries. Then t queries follow. The first line of the query contains one integer n ( 1 \u2264 n \u2264 300 ) \u2014 the number of divisors in the list. The second line of the query contains n integers d_ 1, d_ 2, . . . , d_ n ( 2 \u2264 d_ i \u2264 10^ 6 ) , where d_ i is the i - th divisor of the guessed number. It is guaranteed that all values d_ i are distinct.",
    "output": "For each query print the answer to it. If the input data in the query is contradictory and it is impossible to find such number x that the given list of divisors is the list of almost all its divisors, print - 1. Otherwise print the minimum possible x .",
    "note": "",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "1165D"
  },
  {
    "title": "Remainder",
    "url": "https://codeforces.com/problemset/problem/1165/A",
    "history": "You are given a huge decimal number consisting of n digits. It is guaranteed that this number has no leading zeros. Each digit of this number is either 0 or 1. You may perform several ( possibly zero) operations with this number. During each operation you are allowed to change any digit of your number; you may change 0 to 1 or 1 to 0. It is possible that after some operation you can obtain a number with leading zeroes, but it does not matter for this problem. You are also given two integers 0 \u2264 y < x < n . Your task is to calculate the minimum number of operations you should perform to obtain the number that has remainder 10^ y modulo 10^ x . In other words, the obtained number should have remainder 10^ y when divided by 10^ x .",
    "input": "The first line of the input contains three integers n, x, y ( 0 \u2264 y < x < n \u2264 2 \u00b7 10^ 5 ) \u2014 the length of the number and the integers x and y , respectively. The second line of the input contains one decimal number consisting of n digits, each digit of this number is either 0 or 1. It is guaranteed that the first digit of the number is 1.",
    "output": "Print one integer \u2014 the minimum number of operations you should perform to obtain the number having remainder 10^ y modulo 10^ x . In other words, the obtained number should have remainder 10^ y when divided by 10^ x .",
    "note": "In the first example the number will be 11010100100 after performing one operation. It has remainder 100 modulo 100000 . In the second example the number will be 11010100010 after performing three operations. It has remainder 10 modulo 100000 .",
    "topics": [
      "implementation",
      "math"
    ],
    "id": "1165A"
  },
  {
    "title": "Magical Permutation",
    "url": "https://codeforces.com/problemset/problem/1163/E",
    "history": "Kuro has just learned about permutations and he is really excited to create a new permutation type. He has chosen n distinct positive integers and put all of them in a set S . Now he defines a magical permutation to be: A permutation of integers from 0 to 2^ x - 1 , where x is a non- negative integer. The bitwise xor of any two consecutive elements in the permutation is an element in S . Since Kuro is really excited about magical permutations, he wants to create the longest magical permutation possible. In other words, he wants to find the largest non- negative integer x such that there is a magical permutation of integers from 0 to 2^ x - 1 . Since he is a newbie in the subject, he wants you to help him find this value of x and also the magical permutation for that x .",
    "input": "The first line contains the integer n ( 1 \u2264 n \u2264 2 \u00b7 10^ 5 ) \u2014 the number of elements in the set S . The next line contains n distinct integers S_ 1, S_ 2, . . . , S_ n ( 1 \u2264 S_ i \u2264 2 \u00b7 10^ 5 ) \u2014 the elements in the set S .",
    "output": "In the first line print the largest non- negative integer x , such that there is a magical permutation of integers from 0 to 2^ x - 1 . Then print 2^ x integers describing a magical permutation of integers from 0 to 2^ x - 1 . If there are multiple such magical permutations, print any of them.",
    "note": "In the first example, 0, 1, 3, 2 is a magical permutation since: 0 \u2295 1 = 1 \u2208 S 1 \u2295 3 = 2 \u2208 S 3 \u2295 2 = 1 \u2208 S Where \u2295 denotes bitwise xor operation.",
    "topics": [
      "bitmasks",
      "brute force",
      "constructive algorithms",
      "data structures",
      "graphs",
      "math"
    ],
    "id": "1163E"
  },
  {
    "title": "Power Transmission (Hard Edition)",
    "url": "https://codeforces.com/problemset/problem/1163/C2",
    "history": "This problem is same as the previous one, but has larger constraints. It was a Sunday morning when the three friends Selena, Shiro and Katie decided to have a trip to the nearby power station ( do not try this at home) . After arriving at the power station, the cats got impressed with a large power transmission system consisting of many chimneys, electric poles, and wires. Since they are cats, they found those things gigantic. At the entrance of the station, there is a map describing the complicated wiring system. Selena is the best at math among three friends. He decided to draw the map on the Cartesian plane. Each pole is now a point at some coordinates ( x_ i, y_ i) . Since every pole is different, all of the points representing these poles are distinct. Also, every two poles are connected with each other by wires. A wire is a straight line on the plane infinite in both directions. If there are more than two poles lying on the same line, they are connected by a single common wire. Selena thinks, that whenever two different electric wires intersect, they may interfere with each other and cause damage. So he wonders, how many pairs are intersecting? Could you help him with this problem?",
    "input": "The first line contains a single integer n ( 2 \u2264 n \u2264 1000 ) \u2014 the number of electric poles. Each of the following n lines contains two integers x_ i , y_ i ( - 10^ 4 \u2264 x_ i, y_ i \u2264 10^ 4 ) \u2014 the coordinates of the poles. It is guaranteed that all of these n points are distinct.",
    "output": "Print a single integer \u2014 the number of pairs of wires that are intersecting.",
    "note": "In the first example: In the second example: Note that the three poles ( 0, 0) , ( 0, 2) and ( 0, 4) are connected by a single wire. In the third example:",
    "topics": [
      "data structures",
      "geometry",
      "implementation",
      "math"
    ],
    "id": "1163C2"
  },
  {
    "title": "Eating Soup",
    "url": "https://codeforces.com/problemset/problem/1163/A",
    "history": "The three friends, Kuro, Shiro, and Katie, met up again! It' s time for a party. . . What the cats do when they unite? Right, they have a party. Since they wanted to have as much fun as possible, they invited all their friends. Now n cats are at the party, sitting in a circle and eating soup. The rules are simple: anyone having finished their soup leaves the circle. Katie suddenly notices that whenever a cat leaves, the place where she was sitting becomes an empty space, which means the circle is divided into smaller continuous groups of cats sitting next to each other. At the moment Katie observes, there are m cats who left the circle. This raises a question for Katie: what is the maximum possible number of groups the circle is divided into at the moment? Could you help her with this curiosity? You can see the examples and their descriptions with pictures in the \" Note\" section.",
    "input": "The only line contains two integers n and m ( 2 \u2264 n \u2264 1000 , 0 \u2264 m \u2264 n ) \u2014 the initial number of cats at the party and the number of cats who left the circle at the moment Katie observes, respectively.",
    "output": "Print a single integer \u2014 the maximum number of groups of cats at the moment Katie observes.",
    "note": "In the first example, originally there are 7 cats sitting as shown below, creating a single group: At the observed moment, 4 cats have left the table. Suppose the cats 2 , 3 , 5 and 7 have left, then there are 3 groups remaining. It is possible to show that it is the maximum possible number of groups remaining. In the second example, there are 6 cats sitting as shown below: At the observed moment, 2 cats have left the table. Suppose the cats numbered 3 and 6 left, then there will be 2 groups remaining ( { 1, 2} and { 4, 5} ) . It is impossible to have more than 2 groups of cats remaining. In the third example, no cats have left, so there is 1 group consisting of all cats. In the fourth example, all cats have left the circle, so there are 0 groups.",
    "topics": [
      "greedy",
      "math"
    ],
    "id": "1163A"
  },
  {
    "title": "Expansion coefficient of the array",
    "url": "https://codeforces.com/problemset/problem/1159/B",
    "history": "Let' s call an array of non- negative integers a_ 1, a_ 2, . . . , a_ n a k - extension for some non- negative integer k if for all possible pairs of indices 1 \u2264 i, j \u2264 n the inequality k \u00b7 | i - j| \u2264 min( a_ i, a_ j) is satisfied. The expansion coefficient of the array a is the maximal integer k such that the array a is a k - extension. Any array is a 0- expansion, so the expansion coefficient always exists. You are given an array of non- negative integers a_ 1, a_ 2, . . . , a_ n . Find its expansion coefficient.",
    "input": "The first line contains one positive integer n \u2014 the number of elements in the array a ( 2 \u2264 n \u2264 300 000 ) . The next line contains n non- negative integers a_ 1, a_ 2, . . . , a_ n , separated by spaces ( 0 \u2264 a_ i \u2264 10^ 9 ) .",
    "output": "Print one non- negative integer \u2014 expansion coefficient of the array a_ 1, a_ 2, . . . , a_ n .",
    "note": "In the first test, the expansion coefficient of the array [ 6, 4, 5, 5] is equal to 1 because | i- j| \u2264 min( a_ i, a_ j) , because all elements of the array satisfy a_ i \u2265 3 . On the other hand, this array isn' t a 2 - extension, because 6 = 2 \u00b7 | 1 - 4| \u2264 min( a_ 1, a_ 4) = 5 is false. In the second test, the expansion coefficient of the array [ 0, 1, 2] is equal to 0 because this array is not a 1 - extension, but it is 0 - extension.",
    "topics": [
      "implementation",
      "math"
    ],
    "id": "1159B"
  },
  {
    "title": "A pile of stones",
    "url": "https://codeforces.com/problemset/problem/1159/A",
    "history": "Vasya has a pile, that consists of some number of stones. n times he either took one stone from the pile or added one stone to the pile. The pile was non- empty before each operation of taking one stone from the pile. You are given n operations which Vasya has made. Find the minimal possible number of stones that can be in the pile after making these operations.",
    "input": "The first line contains one positive integer n \u2014 the number of operations, that have been made by Vasya ( 1 \u2264 n \u2264 100 ) . The next line contains the string s , consisting of n symbols, equal to \" - \" ( without quotes) or \" + \" ( without quotes) . If Vasya took the stone on i - th operation, s_ i is equal to \" - \" ( without quotes) , if added, s_ i is equal to \" + \" ( without quotes) .",
    "output": "Print one integer \u2014 the minimal possible number of stones that can be in the pile after these n operations.",
    "note": "In the first test, if Vasya had 3 stones in the pile at the beginning, after making operations the number of stones will be equal to 0 . It is impossible to have less number of piles, so the answer is 0 . Please notice, that the number of stones at the beginning can' t be less, than 3 , because in this case, Vasya won' t be able to take a stone on some operation ( the pile will be empty) . In the second test, if Vasya had 0 stones in the pile at the beginning, after making operations the number of stones will be equal to 4 . It is impossible to have less number of piles because after making 4 operations the number of stones in the pile increases on 4 stones. So, the answer is 4 . In the third test, if Vasya had 1 stone in the pile at the beginning, after making operations the number of stones will be equal to 1 . It can be proved, that it is impossible to have less number of stones after making the operations. In the fourth test, if Vasya had 0 stones in the pile at the beginning, after making operations the number of stones will be equal to 3 .",
    "topics": [
      "implementation",
      "math"
    ],
    "id": "1159A"
  },
  {
    "title": "Density of subarrays",
    "url": "https://codeforces.com/problemset/problem/1158/F",
    "history": "Let c be some positive integer. Let' s call an array a_ 1, a_ 2, . . . , a_ n of positive integers c - array, if for all i condition 1 \u2264 a_ i \u2264 c is satisfied. Let' s call c - array b_ 1, b_ 2, . . . , b_ k a subarray of c - array a_ 1, a_ 2, . . . , a_ n , if there exists such set of k indices 1 \u2264 i_ 1 < i_ 2 < . . . < i_ k \u2264 n that b_ j = a_ i_ j for all 1 \u2264 j \u2264 k . Let' s define density of c - array a_ 1, a_ 2, . . . , a_ n as maximal non- negative integer p , such that any c - array, that contains p numbers is a subarray of a_ 1, a_ 2, . . . , a_ n . You are given a number c and some c - array a_ 1, a_ 2, . . . , a_ n . For all 0 \u2264 p \u2264 n find the number of sequences of indices 1 \u2264 i_ 1 < i_ 2 < . . . < i_ k \u2264 n for all 1 \u2264 k \u2264 n , such that density of array a_ i_ 1, a_ i_ 2, . . . , a_ i_ k is equal to p . Find these numbers by modulo 998 244 353 , because they can be too large.",
    "input": "The first line contains two integers n and c , separated by spaces ( 1 \u2264 n, c \u2264 3 000 ) . The second line contains n integers a_ 1, a_ 2, . . . , a_ n , separated by spaces ( 1 \u2264 a_ i \u2264 c ) .",
    "output": "Print n + 1 numbers s_ 0, s_ 1, . . . , s_ n . s_ p should be equal to the number of sequences of indices 1 \u2264 i_ 1 < i_ 2 < . . . < i_ k \u2264 n for all 1 \u2264 k \u2264 n by modulo 998 244 353 , such that the density of array a_ i_ 1, a_ i_ 2, . . . , a_ i_ k is equal to p .",
    "note": "In the first example, it' s easy to see that the density of array will always be equal to its length. There exists 4 sequences with one index, 6 with two indices, 4 with three and 1 with four. In the second example, the only sequence of indices, such that the array will have non- zero density is all indices because in other cases there won' t be at least one number from 1 to 3 in the array, so it won' t satisfy the condition of density for p \u2265 1 .",
    "topics": [
      "dp",
      "math"
    ],
    "id": "1158F"
  },
  {
    "title": "Strange device",
    "url": "https://codeforces.com/problemset/problem/1158/E",
    "history": "It is an interactive problem. Vasya enjoys solving quizzes. He found a strange device and wants to know how it works. This device encrypted with the tree ( connected undirected graph without cycles) with n vertices, numbered with integers from 1 to n . To solve this quiz you should guess this tree. Fortunately, this device can make one operation, using which you should guess the cipher. You can give the device an array d_ 1, d_ 2, . . . , d_ n of non- negative integers. On the device, there are n lamps, i - th of them is connected with i - th vertex of the tree. For all i the light will turn on the i - th lamp, if there exist such vertex of the tree with number j = \u0338 i that dist( i, j) \u2264 d_ j . Let' s define dist( i, j) as the distance between vertices i and j in tree or number of edges on the simple path between vertices i and j . Vasya wants to solve this quiz using \u2264 80 operations with the device and guess the tree. Help him! InteractionIn the beginning, your program should read one integer n \u2014 the number of vertices of the tree which encrypts the device ( 2 \u2264 n \u2264 1000 ) . After that, you can make several operations in the following format. To do operation print a symbol\" ? \" ( without quotes) and n integers d_ 1, d_ 2, . . . , d_ n , separated by spaces after it. Please note, that for all i you can only use the numbers, satisfying the inequality 0 \u2264 d_ i < n . After that, you should read a string s with length n , consisting of symbols \" 0\" and \" 1\" ( without quotes) . For all i the symbol s_ i is equal to \" 0\" , if the lamp on the device, connected with i - th vertex of the tree is switched off and \" 1\" otherwise. After several operations, you should print guessed tree. To do it print the only symbol \" ! \" ( without quotes) . In the next n- 1 lines print 2 integers a_ i , b_ i \u2014 indexes of the vertices connected by i - th edge of the tree. This numbers should satisfy the conditions 1 \u2264 a_ i, b_ i \u2264 n and a_ i = \u0338 b_ i . This edges should form a tree, which is equal to the hidden tree. After that, your program should terminate. It is guaranteed, that in each test the tree is fixed before and won' t change depending on your program' s operations. Your program can make from 0 to 80 operations with the device and after that guess the tree equal with the hidden. If your program will make more than 80 operations it can get any verdict, because it will continue reading from closed input. If your program will make operation or print the answer in the incorrect format, it can get any verdict too. Be careful. Don' t forget to flush the output after printing questions and answers. To flush the output, you can use: fflush( stdout) in C+ + . System. out. flush( ) in Java. stdout. flush( ) in Python. flush( output) in Pascal. See the documentation for other languages. Hacks: The first line should contain one integer n \u2014 the number of vertices in the tree ( 2 \u2264 n \u2264 1000 ) . Next n- 1 lines should contain 2 integers a_ i , b_ i \u2014 indexes of the vertices connected by i - th edge of the tree ( 1 \u2264 a_ i, b_ i \u2264 n , a_ i = \u0338 b_ i ) . All edges should form a tree. Be careful, extra spaces or line breaks are not allowed.",
    "input": "",
    "output": "",
    "note": "It is a picture of the tree which encrypt the device from the first test: It is a table of pairwise distances between vertices in this tree: If you make operation where d = [ 0, 0, 0, 0, 0] , no lamp will switch on, because dist( i, j) > 0 for all i = \u0338 j . If you make operation where d = [ 1, 1, 2, 0, 2] , all lamps except the lamp connected with the 3 - rd vertex will switch on. For example, lamp connected with the 1 - st vertex will switch on, because dist( 1, 5) = 1 \u2264 2 = d_ 5 . If you make operation where d = [ 0, 0, 0, 1, 0] , all lamps except lamps connected with the 4 - th and 5 - th vertices will switch on. If you make operation where d = [ 0, 1, 0, 0, 1] , only lamps connected with the 1 - st and 4 - th vertices will switch on.",
    "topics": [
      "binary search",
      "interactive",
      "math",
      "trees"
    ],
    "id": "1158E"
  },
  {
    "title": "Winding polygonal line",
    "url": "https://codeforces.com/problemset/problem/1158/D",
    "history": "Vasya has n different points A_ 1, A_ 2, . . . A_ n on the plane. No three of them lie on the same line He wants to place them in some order A_ p_ 1, A_ p_ 2, . . . , A_ p_ n , where p_ 1, p_ 2, . . . , p_ n \u2014 some permutation of integers from 1 to n . After doing so, he will draw oriented polygonal line on these points, drawing oriented segments from each point to the next in the chosen order. So, for all 1 \u2264 i \u2264 n- 1 he will draw oriented segment from point A_ p_ i to point A_ p_ i+ 1 . He wants to make this polygonal line satisfying 2 conditions: it will be non- self- intersecting, so any 2 segments which are not neighbors don' t have common points. it will be winding. Vasya has a string s , consisting of ( n- 2) symbols \" L\" or \" R\" . Let' s call an oriented polygonal line winding, if its i - th turn left, if s_ i = \" L\" and right, if s_ i = \" R\" . More formally: i - th turn will be in point A_ p_ i+ 1 , where oriented segment from point A_ p_ i to point A_ p_ i+ 1 changes to oriented segment from point A_ p_ i+ 1 to point A_ p_ i+ 2 . Let' s define vectors v_ 1 = A_ p_ i A_ p_ i+ 1 and v_ 2 = A_ p_ i+ 1 A_ p_ i+ 2 . Then if in order to rotate the vector v_ 1 by the smallest possible angle, so that its direction coincides with the direction of the vector v_ 2 we need to make a turn counterclockwise, then we say that i - th turn is to the left, and otherwise to the right. For better understanding look at this pictures with some examples of turns: There are left turns on this picture There are right turns on this picture You are given coordinates of the points A_ 1, A_ 2, . . . A_ n on the plane and string s . Find a permutation p_ 1, p_ 2, . . . , p_ n of the integers from 1 to n , such that the polygonal line, drawn by Vasya satisfy two necessary conditions.",
    "input": "The first line contains one integer n \u2014 the number of points ( 3 \u2264 n \u2264 2000 ) . Next n lines contains two integers x_ i and y_ i , divided by space \u2014 coordinates of the point A_ i on the plane ( - 10^ 9 \u2264 x_ i, y_ i \u2264 10^ 9 ) . The last line contains a string s consisting of symbols \" L\" and \" R\" with length ( n- 2) . It is guaranteed that all points are different and no three points lie at the same line.",
    "output": "If the satisfying permutation doesn' t exists, print - 1 . In the other case, print n numbers p_ 1, p_ 2, . . . , p_ n \u2014 the permutation which was found ( 1 \u2264 p_ i \u2264 n and all p_ 1, p_ 2, . . . , p_ n are different) . If there exists more than one solution, you can find any.",
    "note": "This is the picture with the polygonal line from the 1 test: As we see, this polygonal line is non- self- intersecting and winding, because the turn in point 2 is left. This is the picture with the polygonal line from the 2 test:",
    "topics": [
      "constructive algorithms",
      "geometry",
      "greedy",
      "math"
    ],
    "id": "1158D"
  },
  {
    "title": "Permutation recovery",
    "url": "https://codeforces.com/problemset/problem/1158/C",
    "history": "Vasya has written some permutation p_ 1, p_ 2, . . . , p_ n of integers from 1 to n , so for all 1 \u2264 i \u2264 n it is true that 1 \u2264 p_ i \u2264 n and all p_ 1, p_ 2, . . . , p_ n are different. After that he wrote n numbers next_ 1, next_ 2, . . . , next_ n . The number next_ i is equal to the minimal index i < j \u2264 n , such that p_ j > p_ i . If there is no such j let' s let' s define as next_ i = n + 1 . In the evening Vasya went home from school and due to rain, his notebook got wet. Now it is impossible to read some written numbers. Permutation and some values next_ i are completely lost! If for some i the value next_ i is lost, let' s say that next_ i = - 1 . You are given numbers next_ 1, next_ 2, . . . , next_ n ( maybe some of them are equal to - 1 ) . Help Vasya to find such permutation p_ 1, p_ 2, . . . , p_ n of integers from 1 to n , that he can write it to the notebook and all numbers next_ i , which are not equal to - 1 , will be correct.",
    "input": "The first line contains one integer t \u2014 the number of test cases ( 1 \u2264 t \u2264 100 000 ) . Next 2 \u00b7 t lines contains the description of test cases, two lines for each. The first line contains one integer n \u2014 the length of the permutation, written by Vasya ( 1 \u2264 n \u2264 500 000 ) . The second line contains n integers next_ 1, next_ 2, . . . , next_ n , separated by spaces ( next_ i = - 1 or i < next_ i \u2264 n + 1 ) . It is guaranteed, that the sum of n in all test cases doesn' t exceed 500 000 . In hacks you can only use one test case, so T = 1 .",
    "output": "Print T lines, in i - th of them answer to the i - th test case. If there is no such permutations p_ 1, p_ 2, . . . , p_ n of integers from 1 to n , that Vasya could write, print the only number - 1 . In the other case print n different integers p_ 1, p_ 2, . . . , p_ n , separated by spaces ( 1 \u2264 p_ i \u2264 n ) . All defined values of next_ i which are not equal to - 1 should be computed correctly p_ 1, p_ 2, . . . , p_ n using defenition given in the statement of the problem. If there exists more than one solution you can find any of them.",
    "note": "In the first test case for permutation p = [ 1, 2, 3] Vasya should write next = [ 2, 3, 4] , because each number in permutation is less than next. It' s easy to see, that it is the only satisfying permutation. In the third test case, any permutation can be the answer because all numbers next_ i are lost. In the fourth test case, there is no satisfying permutation, so the answer is - 1 .",
    "topics": [
      "constructive algorithms",
      "data structures",
      "dfs and similar",
      "graphs",
      "greedy",
      "math",
      "sortings"
    ],
    "id": "1158C"
  },
  {
    "title": "The minimal unique substring",
    "url": "https://codeforces.com/problemset/problem/1158/B",
    "history": "Let s be some string consisting of symbols \" 0\" or \" 1\" . Let' s call a string t a substring of string s , if there exists such number 1 \u2264 l \u2264 | s| - | t| + 1 that t = s_ l s_ l+ 1. . . s_ l + | t| - 1 . Let' s call a substring t of string s unique, if there exist only one such l . For example, let s = \" 1010111\" . A string t = \" 010\" is an unique substring of s , because l = 2 is the only one suitable number. But, for example t = \" 10\" isn' t a unique substring of s , because l = 1 and l = 3 are suitable. And for example t = \" 00\" at all isn' t a substring of s , because there is no suitable l . Today Vasya solved the following problem at the informatics lesson: given a string consisting of symbols \" 0\" and \" 1\" , the task is to find the length of its minimal unique substring. He has written a solution to this problem and wants to test it. He is asking you to help him. You are given 2 positive integers n and k , such that ( n 2) = ( k 2) , where ( x 2) is operation of taking remainder of x by dividing on 2 . Find any string s consisting of n symbols \" 0\" or \" 1\" , such that the length of its minimal unique substring is equal to k .",
    "input": "The first line contains two integers n and k , separated by spaces ( 1 \u2264 k \u2264 n \u2264 100 000 , ( k 2) = ( n 2) ) .",
    "output": "Print a string s of length n , consisting of symbols \" 0\" and \" 1\" . Minimal length of the unique substring of s should be equal to k . You can find any suitable string. It is guaranteed, that there exists at least one such string.",
    "note": "In the first test, it' s easy to see, that the only unique substring of string s = \" 1111\" is all string s , which has length 4 . In the second test a string s = \" 01010\" has minimal unique substring t = \" 101\" , which has length 3 . In the third test a string s = \" 1011011\" has minimal unique substring t = \" 110\" , which has length 3 .",
    "topics": [
      "constructive algorithms",
      "math",
      "strings"
    ],
    "id": "1158B"
  },
  {
    "title": "The Party and Sweets",
    "url": "https://codeforces.com/problemset/problem/1158/A",
    "history": "n boys and m girls came to the party. Each boy presented each girl some integer number of sweets ( possibly zero) . All boys are numbered with integers from 1 to n and all girls are numbered with integers from 1 to m . For all 1 \u2264 i \u2264 n the minimal number of sweets, which i - th boy presented to some girl is equal to b_ i and for all 1 \u2264 j \u2264 m the maximal number of sweets, which j - th girl received from some boy is equal to g_ j . More formally, let a_ i, j be the number of sweets which the i - th boy give to the j - th girl. Then b_ i is equal exactly to the minimum among values a_ i, 1, a_ i, 2, . . . , a_ i, m and g_ j is equal exactly to the maximum among values b_ 1, j, b_ 2, j, . . . , b_ n, j . You are interested in the minimum total number of sweets that boys could present, so you need to minimize the sum of a_ i, j for all ( i, j) such that 1 \u2264 i \u2264 n and 1 \u2264 j \u2264 m . You are given the numbers b_ 1, . . . , b_ n and g_ 1, . . . , g_ m , determine this number.",
    "input": "The first line contains two integers n and m , separated with space \u2014 the number of boys and girls, respectively ( 2 \u2264 n, m \u2264 100 000 ) . The second line contains n integers b_ 1, . . . , b_ n , separated by spaces \u2014 b_ i is equal to the minimal number of sweets, which i - th boy presented to some girl ( 0 \u2264 b_ i \u2264 10^ 8 ) . The third line contains m integers g_ 1, . . . , g_ m , separated by spaces \u2014 g_ j is equal to the maximal number of sweets, which j - th girl received from some boy ( 0 \u2264 g_ j \u2264 10^ 8 ) .",
    "output": "If the described situation is impossible, print - 1 . In another case, print the minimal total number of sweets, which boys could have presented and all conditions could have satisfied.",
    "note": "In the first test, the minimal total number of sweets, which boys could have presented is equal to 12 . This can be possible, for example, if the first boy presented 1 and 4 sweets, the second boy presented 3 and 2 sweets and the third boy presented 1 and 1 sweets for the first and the second girl, respectively. It' s easy to see, that all conditions are satisfied and the total number of sweets is equal to 12 . In the second test, the boys couldn' t have presented sweets in such way, that all statements satisfied. In the third test, the minimal total number of sweets, which boys could have presented is equal to 4 . This can be possible, for example, if the first boy presented 1 , 1 , 2 sweets for the first, second, third girl, respectively and the second boy didn' t present sweets for each girl. It' s easy to see, that all conditions are satisfied and the total number of sweets is equal to 4 .",
    "topics": [
      "binary search",
      "constructive algorithms",
      "greedy",
      "implementation",
      "math",
      "sortings",
      "two pointers"
    ],
    "id": "1158A"
  },
  {
    "title": "N Problems During K Days",
    "url": "https://codeforces.com/problemset/problem/1157/D",
    "history": "Polycarp has to solve exactly n problems to improve his programming skill before an important programming competition. But this competition will be held very soon, most precisely, it will start in k days. It means that Polycarp has exactly k days for training! Polycarp doesn' t want to procrastinate, so he wants to solve at least one problem during each of k days. He also doesn' t want to overwork, so if he solves x problems during some day, he should solve no more than 2x problems during the next day. And, at last, he wants to improve his skill, so if he solves x problems during some day, he should solve at least x+ 1 problem during the next day. More formally: let [ a_ 1, a_ 2, . . . , a_ k] be the array of numbers of problems solved by Polycarp. The i - th element of this array is the number of problems Polycarp solves during the i - th day of his training. Then the following conditions must be satisfied: sum of all a_ i for i from 1 to k should be n ; a_ i should be greater than zero for each i from 1 to k ; the condition a_ i < a_ i + 1\u2264 2 a_ i should be satisfied for each i from 1 to k- 1 . Your problem is to find any array a of length k satisfying the conditions above or say that it is impossible to do it.",
    "input": "The first line of the input contains two integers n and k ( 1 \u2264 n \u2264 10^ 9, 1 \u2264 k \u2264 10^ 5 ) \u2014 the number of problems Polycarp wants to solve and the number of days Polycarp wants to train.",
    "output": "If it is impossible to find any array a of length k satisfying Polycarp' s rules of training, print \" NO\" in the first line. Otherwise print \" YES\" in the first line, then print k integers a_ 1, a_ 2, . . . , a_ k in the second line, where a_ i should be the number of problems Polycarp should solve during the i - th day. If there are multiple answers, you can print any.",
    "note": "",
    "topics": [
      "constructive algorithms",
      "greedy",
      "math"
    ],
    "id": "1157D"
  },
  {
    "title": "Card Bag",
    "url": "https://codeforces.com/problemset/problem/1156/F",
    "history": "You have a bag which contains n cards. There is a number written on each card; the number on i - th card is a_ i . You are playing the following game. During each turn, you choose and remove a random card from the bag ( all cards that are still left inside the bag are chosen equiprobably) . Nothing else happens during the first turn \u2014 but during the next turns, after removing a card ( let the number on it be x ) , you compare it with the card that was removed during the previous turn ( let the number on it be y ) . Possible outcomes are: if x < y , the game ends and you lose; if x = y , the game ends and you win; if x > y , the game continues. If there are no cards left in the bag, you lose. Cards are not returned into the bag after you remove them. You have to calculate the probability of winning in this game. It can be shown that it is in the form of P/ Q where P and Q are non- negative integers and Q = \u0338 0 , P \u2264 Q . Output the value of P \u00b7 Q^ \u22121 ( mod 998244353) .",
    "input": "The first line contains one integer n ( 2 \u2264 n \u2264 5000 ) \u2014 the number of cards in the bag. The second live contains n integers a_ 1, a_ 2, . . . a_ n ( 1 \u2264 a_ i \u2264 n ) \u2014 the i - th integer is the number written on the i - th card.",
    "output": "Print one integer \u2014 the probability of winning in this game modulo 998244353 .",
    "note": "In the first test case the probability of winning is 1/ 10 . In the second test case the probability of winning is 1 . In the third test case the probability of winning is 0 . In the fourth test case the probability of winning is 1/ 4 .",
    "topics": [
      "dp",
      "math",
      "probabilities"
    ],
    "id": "1156F"
  },
  {
    "title": "Guess the Root",
    "url": "https://codeforces.com/problemset/problem/1155/E",
    "history": "Jury picked a polynomial f( x) = a_ 0 + a_ 1 \u00b7 x + a_ 2 \u00b7 x^ 2 + . . . + a_ k \u00b7 x^ k . k \u2264 10 and all a_ i are integer numbers and 0 \u2264 a_ i < 10^ 6 + 3 . It' s guaranteed that there is at least one i such that a_ i > 0 . Now jury wants you to find such an integer x_ 0 that f( x_ 0) \u2261 0 ( 10^ 6 + 3) or report that there is not such x_ 0 . You can ask no more than 50 queries: you ask value x_ q and jury tells you value f( x_ q) ( 10^ 6 + 3) . Note that printing the answer doesn' t count as a query. InteractionTo ask a question, print \" ? x_ q \" ( 0 \u2264 x_ q < 10^ 6 + 3) . The judge will respond with a single integer f( x_ q) ( 10^ 6 + 3) . If you ever get a result of \u22121 ( because you printed an invalid query) , exit immediately to avoid getting other verdicts. After printing a query do not forget to output end of line and flush the output. Otherwise, you will get Idleness limit exceeded. To do this, use: fflush( stdout) or cout. flush( ) in C+ + ; System. out. flush( ) in Java; flush( output) in Pascal; stdout. flush( ) in Python; see documentation for other languages. When you are ready to answer, print \" ! x_ 0 \" where x_ 0 is the answer or - 1 if there is no such x_ 0 . You can ask at most 50 questions per test case. Hack FormatTo hack, use the following format. The only line should contain 11 integers a_ 0, a_ 1, . . . , a_ 10 ( 0 \u2264 a_ i < 10^ 6 + 3 , max_ 0 \u2264 i \u2264 10a_ i > 0 ) \u2014 corresponding coefficients of the polynomial.",
    "input": "",
    "output": "",
    "note": "The polynomial in the first sample is 1000002 + x^ 2 . The polynomial in the second sample is 1 + x^ 2 .",
    "topics": [
      "brute force",
      "interactive",
      "math"
    ],
    "id": "1155E"
  },
  {
    "title": "Alarm Clocks Everywhere",
    "url": "https://codeforces.com/problemset/problem/1155/C",
    "history": "Ivan is going to sleep now and wants to set his alarm clock. There will be many necessary events tomorrow, the i - th of them will start during the x_ i - th minute. Ivan doesn' t want to skip any of the events, so he has to set his alarm clock in such a way that it rings during minutes x_ 1, x_ 2, . . . , x_ n , so he will be awake during each of these minutes ( note that it does not matter if his alarm clock will ring during any other minute) . Ivan can choose two properties for the alarm clock \u2014 the first minute it will ring ( let' s denote it as y ) and the interval between two consecutive signals ( let' s denote it by p ) . After the clock is set, it will ring during minutes y, y + p, y + 2p, y + 3p and so on. Ivan can choose any minute as the first one, but he cannot choose any arbitrary value of p . He has to pick it among the given values p_ 1, p_ 2, . . . , p_ m ( his phone does not support any other options for this setting) . So Ivan has to choose the first minute y when the alarm clock should start ringing and the interval between two consecutive signals p_ j in such a way that it will ring during all given minutes x_ 1, x_ 2, . . . , x_ n ( and it does not matter if his alarm clock will ring in any other minutes) . Your task is to tell the first minute y and the index j such that if Ivan sets his alarm clock with properties y and p_ j it will ring during all given minutes x_ 1, x_ 2, . . . , x_ n or say that it is impossible to choose such values of the given properties. If there are multiple answers, you can print any.",
    "input": "The first line of the input contains two integers n and m ( 2 \u2264 n \u2264 3 \u00b7 10^ 5, 1 \u2264 m \u2264 3 \u00b7 10^ 5 ) \u2014 the number of events and the number of possible settings for the interval between signals. The second line of the input contains n integers x_ 1, x_ 2, . . . , x_ n ( 1 \u2264 x_ i \u2264 10^ 18 ) , where x_ i is the minute when i - th event starts. It is guaranteed that all x_ i are given in increasing order ( i. e. the condition x_ 1 < x_ 2 < . . . < x_ n holds) . The third line of the input contains m integers p_ 1, p_ 2, . . . , p_ m ( 1 \u2264 p_ j \u2264 10^ 18 ) , where p_ j is the j - th option for the interval between two consecutive signals.",
    "output": "If it' s impossible to choose such values y and j so all constraints are satisfied, print \" NO\" in the first line. Otherwise print \" YES\" in the first line. Then print two integers y ( 1 \u2264 y \u2264 10^ 18 ) and j ( 1 \u2264 j \u2264 m ) in the second line, where y is the first minute Ivan' s alarm clock should start ringing and j is the index of the option for the interval between two consecutive signals ( options are numbered from 1 to m in the order they are given input) . These values should be chosen in such a way that the alarm clock will ring during all given minutes x_ 1, x_ 2, . . . , x_ n . If there are multiple answers, you can print any.",
    "note": "",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "1155C"
  },
  {
    "title": "Minimum Possible LCM",
    "url": "https://codeforces.com/problemset/problem/1154/G",
    "history": "You are given an array a consisting of n integers a_ 1, a_ 2, . . . , a_ n . Your problem is to find such pair of indices i, j ( 1 \u2264 i < j \u2264 n ) that lcm( a_ i, a_ j) is minimum possible. lcm( x, y) is the least common multiple of x and y ( minimum positive number such that both x and y are divisors of this number) .",
    "input": "The first line of the input contains one integer n ( 2 \u2264 n \u2264 10^ 6 ) \u2014 the number of elements in a . The second line of the input contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 7 ) , where a_ i is the i - th element of a .",
    "output": "Print two integers i and j ( 1 \u2264 i < j \u2264 n ) such that the value of lcm( a_ i, a_ j) is minimum among all valid pairs i, j . If there are multiple answers, you can print any.",
    "note": "",
    "topics": [
      "brute force",
      "greedy",
      "math",
      "number theory"
    ],
    "id": "1154G"
  },
  {
    "title": "Gourmet Cat",
    "url": "https://codeforces.com/problemset/problem/1154/C",
    "history": "Polycarp has a cat and his cat is a real gourmet! Dependent on a day of the week he eats certain type of food: on Mondays, Thursdays and Sundays he eats fish food; on Tuesdays and Saturdays he eats rabbit stew; on other days of week he eats chicken stake. Polycarp plans to go on a trip and already packed his backpack. His backpack contains: a daily rations of fish food; b daily rations of rabbit stew; c daily rations of chicken stakes. Polycarp has to choose such day of the week to start his trip that his cat can eat without additional food purchases as long as possible. Print the maximum number of days the cat can eat in a trip without additional food purchases, if Polycarp chooses the day of the week to start his trip optimally.",
    "input": "The first line of the input contains three positive integers a , b and c ( 1 \u2264 a, b, c \u2264 7\u00b710^ 8 ) \u2014 the number of daily rations of fish food, rabbit stew and chicken stakes in Polycarps backpack correspondingly.",
    "output": "Print the maximum number of days the cat can eat in a trip without additional food purchases, if Polycarp chooses the day of the week to start his trip optimally.",
    "note": "In the first example the best day for start of the trip is Sunday. In this case, during Sunday and Monday the cat will eat fish food, during Tuesday \u2014 rabbit stew and during Wednesday \u2014 chicken stake. So, after four days of the trip all food will be eaten. In the second example Polycarp can start his trip in any day of the week. In any case there are food supplies only for one week in Polycarps backpack. In the third example Polycarp can start his trip in any day, excluding Wednesday, Saturday and Sunday. In this case, the cat will eat three different dishes in three days. Nevertheless that after three days of a trip there will be 99 portions of rabbit stew in a backpack, can cannot eat anything in fourth day of a trip.",
    "topics": [
      "implementation",
      "math"
    ],
    "id": "1154C"
  },
  {
    "title": "Make Them Equal",
    "url": "https://codeforces.com/problemset/problem/1154/B",
    "history": "You are given a sequence a_ 1, a_ 2, . . . , a_ n consisting of n integers. You can choose any non- negative integer D ( i. e. D \u2265 0 ) , and for each a_ i you can: add D ( only once) , i. e. perform a_ i : = a_ i + D , or subtract D ( only once) , i. e. perform a_ i : = a_ i - D , or leave the value of a_ i unchanged. It is possible that after an operation the value a_ i becomes negative. Your goal is to choose such minimum non- negative integer D and perform changes in such a way, that all a_ i are equal ( i. e. a_ 1= a_ 2= . . . = a_ n ) . Print the required D or, if it is impossible to choose such value D , print - 1. For example, for array [ 2, 8] the value D= 3 is minimum possible because you can obtain the array [ 5, 5] if you will add D to 2 and subtract D from 8 . And for array [ 1, 4, 7, 7] the value D= 3 is also minimum possible. You can add it to 1 and subtract it from 7 and obtain the array [ 4, 4, 4, 4] .",
    "input": "The first line of the input contains one integer n ( 1 \u2264 n \u2264 100 ) \u2014 the number of elements in a . The second line of the input contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 100 ) \u2014 the sequence a .",
    "output": "Print one integer \u2014 the minimum non- negative integer value D such that if you add this value to some a_ i , subtract this value from some a_ i and leave some a_ i without changes, all obtained values become equal. If it is impossible to choose such value D , print - 1.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": "1154B"
  },
  {
    "title": "Restoring Three Numbers",
    "url": "https://codeforces.com/problemset/problem/1154/A",
    "history": "Polycarp has guessed three positive integers a , b and c . He keeps these numbers in secret, but he writes down four numbers on a board in arbitrary order \u2014 their pairwise sums ( three numbers) and sum of all three numbers ( one number) . So, there are four numbers on a board in random order: a+ b , a+ c , b+ c and a+ b+ c . You have to guess three numbers a , b and c using given numbers. Print three guessed integers in any order. Pay attention that some given numbers a , b and c can be equal ( it is also possible that a= b= c ) .",
    "input": "The only line of the input contains four positive integers x_ 1, x_ 2, x_ 3, x_ 4 ( 2 \u2264 x_ i \u2264 10^ 9 ) \u2014 numbers written on a board in random order. It is guaranteed that the answer exists for the given number x_ 1, x_ 2, x_ 3, x_ 4 .",
    "output": "Print such positive integers a , b and c that four numbers written on a board are values a+ b , a+ c , b+ c and a+ b+ c written in some order. Print a , b and c in any order. If there are several answers, you can print any. It is guaranteed that the answer exists.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": "1154A"
  },
  {
    "title": "Serval and Bonus Problem",
    "url": "https://codeforces.com/problemset/problem/1153/F",
    "history": "Getting closer and closer to a mathematician, Serval becomes a university student on math major in Japari University. On the Calculus class, his teacher taught him how to calculate the expected length of a random subsegment of a given segment. Then he left a bonus problem as homework, with the award of a garage kit from IOI. The bonus is to extend this problem to the general case as follows. You are given a segment with length l . We randomly choose n segments by choosing two points ( maybe with non- integer coordinates) from the given segment equiprobably and the interval between the two points forms a segment. You are given the number of random segments n , and another integer k . The 2n endpoints of the chosen segments split the segment into ( 2n+ 1) intervals. Your task is to calculate the expected total length of those intervals that are covered by at least k segments of the n random segments. You should find the answer modulo 998244353 .",
    "input": "First line contains three space- separated positive integers n , k and l ( 1\u2264 k \u2264 n \u2264 2000 , 1\u2264 l\u2264 10^ 9 ) .",
    "output": "Output one integer \u2014 the expected total length of all the intervals covered by at least k segments of the n random segments modulo 998244353 . Formally, let M = 998244353 . It can be shown that the answer can be expressed as an irreducible fraction p/ q , where p and q are integers and q \u2261\u03380 M . Output the integer equal to p \u00b7 q^ - 1 M . In other words, output such an integer x that 0 \u2264 x < M and x \u00b7 q \u2261 p M .",
    "note": "In the first example, the expected total length is \u222b_ 0^ 1 \u222b_ 0^ 1 | x- y| dx dy = 1 3 , and 3^ - 1 modulo 998244353 is 332748118 .",
    "topics": [
      "combinatorics",
      "dp",
      "math",
      "probabilities"
    ],
    "id": "1153F"
  },
  {
    "title": "Serval and Bus",
    "url": "https://codeforces.com/problemset/problem/1153/A",
    "history": "It is raining heavily. But this is the first day for Serval, who just became 3 years old, to go to the kindergarten. Unfortunately, he lives far from kindergarten, and his father is too busy to drive him there. The only choice for this poor little boy is to wait for a bus on this rainy day. Under such circumstances, the poor boy will use the first bus he sees no matter where it goes. If several buses come at the same time, he will choose one randomly. Serval will go to the bus station at time t , and there are n bus routes which stop at this station. For the i - th bus route, the first bus arrives at time s_ i minutes, and each bus of this route comes d_ i minutes later than the previous one. As Serval' s best friend, you wonder which bus route will he get on. If several buses arrive at the same time, you can print any of them.",
    "input": "The first line contains two space- separated integers n and t ( 1\u2264 n\u2264 100 , 1\u2264 t\u2264 10^ 5 ) \u2014 the number of bus routes and the time Serval goes to the station. Each of the next n lines contains two space- separated integers s_ i and d_ i ( 1\u2264 s_ i, d_ i\u2264 10^ 5 ) \u2014 the time when the first bus of this route arrives and the interval between two buses of this route.",
    "output": "Print one number \u2014 what bus route Serval will use. If there are several possible answers, you can print any of them.",
    "note": "In the first example, the first bus of the first route arrives at time 6 , and the first bus of the second route arrives at time 9 , so the first route is the answer. In the second example, a bus of the third route arrives at time 5 , so it is the answer. In the third example, buses of the first route come at times 2 , 4 , 6 , 8 , and so fourth, buses of the second route come at times 2 , 5 , 8 , and so fourth and buses of the third route come at times 2 , 6 , 10 , and so on, so 1 and 2 are both acceptable answers while 3 is not.",
    "topics": [
      "brute force",
      "math"
    ],
    "id": "1153A"
  },
  {
    "title": "Neko does Maths",
    "url": "https://codeforces.com/problemset/problem/1152/C",
    "history": "Neko loves divisors. During the latest number theory lesson, he got an interesting exercise from his math teacher. Neko has two integers a and b . His goal is to find a non- negative integer k such that the least common multiple of a+ k and b+ k is the smallest possible. If there are multiple optimal integers k , he needs to choose the smallest one. Given his mathematical talent, Neko had no trouble getting Wrong Answer on this problem. Can you help him solve it?",
    "input": "The only line contains two integers a and b ( 1 \u2264 a, b \u2264 10^ 9 ) .",
    "output": "Print the smallest non- negative integer k ( k \u2265 0 ) such that the lowest common multiple of a+ k and b+ k is the smallest possible. If there are many possible integers k giving the same value of the least common multiple, print the smallest one.",
    "note": "In the first test, one should choose k = 2 , as the least common multiple of 6 + 2 and 10 + 2 is 24 , which is the smallest least common multiple possible.",
    "topics": [
      "brute force",
      "math",
      "number theory"
    ],
    "id": "1152C"
  },
  {
    "title": "Neko Performs Cat Furrier Transform",
    "url": "https://codeforces.com/problemset/problem/1152/B",
    "history": "Cat Furrier Transform is a popular algorithm among cat programmers to create longcats. As one of the greatest cat programmers ever exist, Neko wants to utilize this algorithm to create the perfect longcat. Assume that we have a cat with a number x . A perfect longcat is a cat with a number equal 2^ m - 1 for some non- negative integer m . For example, the numbers 0 , 1 , 3 , 7 , 15 and so on are suitable for the perfect longcats. In the Cat Furrier Transform, the following operations can be performed on x : ( Operation A) : you select any non- negative integer n and replace x with x \u2295 ( 2^ n - 1) , with \u2295 being a bitwise XOR operator. ( Operation B) : replace x with x + 1 . The first applied operation must be of type A, the second of type B, the third of type A again, and so on. Formally, if we number operations from one in the order they are executed, then odd- numbered operations must be of type A and the even- numbered operations must be of type B. Neko wants to produce perfect longcats at industrial scale, thus for each cat Neko only wants to perform at most 40 operations. Can you help Neko writing a transformation plan? Note that it is not required to minimize the number of operations. You just need to use no more than 40 operations.",
    "input": "The only line contains a single integer x ( 1 \u2264 x \u2264 10^ 6 ) .",
    "output": "The first line should contain a single integer t ( 0 \u2264 t \u2264 40 ) \u2014 the number of operations to apply. Then for each odd- numbered operation print the corresponding number n_ i in it. That is, print \u2308t/ 2\u2309 integers n_ i ( 0 \u2264 n_ i \u2264 30 ) , denoting the replacement x with x \u2295 ( 2^ n_ i - 1) in the corresponding step. If there are multiple possible answers, you can print any of them. It is possible to show, that there is at least one answer in the constraints of this problem.",
    "note": "In the first test, one of the transforms might be as follows: 39 \u2192 56 \u2192 57 \u2192 62 \u2192 63 . Or more precisely: Pick n = 5 . x is transformed into 39 \u2295 31 , or 56 . Increase x by 1 , changing its value to 57 . Pick n = 3 . x is transformed into 57 \u2295 7 , or 62 . Increase x by 1 , changing its value to 63 = 2^ 6 - 1 . In the second and third test, the number already satisfies the goal requirement.",
    "topics": [
      "bitmasks",
      "constructive algorithms",
      "dfs and similar",
      "math"
    ],
    "id": "1152B"
  },
  {
    "title": "Neko Finds Grapes",
    "url": "https://codeforces.com/problemset/problem/1152/A",
    "history": "On a random day, Neko found n treasure chests and m keys. The i - th chest has an integer a_ i written on it and the j - th key has an integer b_ j on it. Neko knows those chests contain the powerful mysterious green Grapes, thus Neko wants to open as many treasure chests as possible. The j - th key can be used to unlock the i - th chest if and only if the sum of the key number and the chest number is an odd number. Formally, a_ i + b_ j \u2261 1 2 . One key can be used to open at most one chest, and one chest can be opened at most once. Find the maximum number of chests Neko can open.",
    "input": "The first line contains integers n and m ( 1 \u2264 n, m \u2264 10^ 5 ) \u2014 the number of chests and the number of keys. The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 9 ) \u2014 the numbers written on the treasure chests. The third line contains m integers b_ 1, b_ 2, . . . , b_ m ( 1 \u2264 b_ i \u2264 10^ 9 ) \u2014 the numbers written on the keys.",
    "output": "Print the maximum number of chests you can open.",
    "note": "In the first example, one possible way to unlock 3 chests is as follows: Use first key to unlock the fifth chest, Use third key to unlock the second chest, Use fourth key to unlock the first chest. In the second example, you can use the only key to unlock any single chest ( note that one key can' t be used twice) . In the third example, no key can unlock the given chest.",
    "topics": [
      "greedy",
      "implementation",
      "math"
    ],
    "id": "1152A"
  },
  {
    "title": "Number of Components",
    "url": "https://codeforces.com/problemset/problem/1151/E",
    "history": "The Kingdom of Kremland is a tree ( a connected undirected graph without cycles) consisting of n vertices. Each vertex i has its own value a_ i . All vertices are connected in series by edges. Formally, for every 1 \u2264 i < n there is an edge between the vertices of i and i+ 1 . Denote the function f( l, r) , which takes two integers l and r ( l \u2264 r ) : We leave in the tree only vertices whose values \u200b\u200brange from l to r . The value of the function will be the number of connected components in the new graph. Your task is to calculate the following sum: \u2211_ l= 1^ n\u2211_ r= l^ n f( l, r)",
    "input": "The first line contains a single integer n ( 1 \u2264 n \u2264 10^ 5 ) \u2014 the number of vertices in the tree. The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 n ) \u2014 the values of the vertices.",
    "output": "Print one number \u2014 the answer to the problem.",
    "note": "In the first example, the function values \u200b\u200bwill be as follows: f( 1, 1) = 1 ( there is only a vertex with the number 2 , which forms one component) f( 1, 2) = 1 ( there are vertices 1 and 2 that form one component) f( 1, 3) = 1 ( all vertices remain, one component is obtained) f( 2, 2) = 1 ( only vertex number 1 ) f( 2, 3) = 2 ( there are vertices 1 and 3 that form two components) f( 3, 3) = 1 ( only vertex 3 ) Totally out 7 . In the second example, the function values \u200b\u200bwill be as follows: f( 1, 1) = 1 f( 1, 2) = 1 f( 1, 3) = 1 f( 1, 4) = 1 f( 2, 2) = 1 f( 2, 3) = 2 f( 2, 4) = 2 f( 3, 3) = 1 f( 3, 4) = 1 f( 4, 4) = 0 ( there is no vertex left, so the number of components is 0 ) Totally out 11 .",
    "topics": [
      "combinatorics",
      "data structures",
      "dp",
      "math"
    ],
    "id": "1151E"
  },
  {
    "title": "Stas and the Queue at the Buffet",
    "url": "https://codeforces.com/problemset/problem/1151/D",
    "history": "During a break in the buffet of the scientific lyceum of the Kingdom of Kremland, there was formed a queue of n high school students numbered from 1 to n . Initially, each student i is on position i . Each student i is characterized by two numbers \u2014 a_ i and b_ i . Dissatisfaction of the person i equals the product of a_ i by the number of people standing to the left of his position, add the product b_ i by the number of people standing to the right of his position. Formally, the dissatisfaction of the student i , which is on the position j , equals a_ i \u00b7 ( j- 1) + b_ i \u00b7 ( n- j) . The director entrusted Stas with the task: rearrange the people in the queue so that minimize the total dissatisfaction. Although Stas is able to solve such problems, this was not given to him. He turned for help to you.",
    "input": "The first line contains a single integer n ( 1 \u2264 n \u2264 10^ 5 ) \u2014 the number of people in the queue. Each of the following n lines contains two integers a_ i and b_ i ( 1 \u2264 a_ i, b_ i \u2264 10^ 8 ) \u2014 the characteristic of the student i , initially on the position i .",
    "output": "Output one integer \u2014 minimum total dissatisfaction which can be achieved by rearranging people in the queue.",
    "note": "In the first example it is optimal to put people in this order: ( 3, 1, 2 ) . The first person is in the position of 2 , then his dissatisfaction will be equal to 4 \u00b7 1+ 2 \u00b7 1= 6 . The second person is in the position of 3 , his dissatisfaction will be equal to 2 \u00b7 2+ 3 \u00b7 0= 4 . The third person is in the position of 1 , his dissatisfaction will be equal to 6 \u00b7 0+ 1 \u00b7 2= 2 . The total dissatisfaction will be 12 . In the second example, you need to put people in this order: ( 3, 2, 4, 1 ) . The total dissatisfaction will be 25 .",
    "topics": [
      "greedy",
      "math",
      "sortings"
    ],
    "id": "1151D"
  },
  {
    "title": "Problem for Nazar",
    "url": "https://codeforces.com/problemset/problem/1151/C",
    "history": "Nazar, a student of the scientific lyceum of the Kingdom of Kremland, is known for his outstanding mathematical abilities. Today a math teacher gave him a very difficult task. Consider two infinite sets of numbers. The first set consists of odd positive numbers ( 1, 3, 5, 7, . . . ) , and the second set consists of even positive numbers ( 2, 4, 6, 8, . . . ) . At the first stage, the teacher writes the first number on the endless blackboard from the first set, in the second stage \u2014 the first two numbers from the second set, on the third stage \u2014 the next four numbers from the first set, on the fourth \u2014 the next eight numbers from the second set and so on. In other words, at each stage, starting from the second, he writes out two times more numbers than at the previous one, and also changes the set from which these numbers are written out to another. The ten first written numbers: 1, 2, 4, 3, 5, 7, 9, 6, 8, 10 . Let' s number the numbers written, starting with one. The task is to find the sum of numbers with numbers from l to r for given integers l and r . The answer may be big, so you need to find the remainder of the division by 1000000007 ( 10^ 9+ 7 ) . Nazar thought about this problem for a long time, but didn' t come up with a solution. Help him solve this problem.",
    "input": "The first line contains two integers l and r ( 1 \u2264 l \u2264 r \u2264 10^ 18 ) \u2014 the range in which you need to find the sum.",
    "output": "Print a single integer \u2014 the answer modulo 1000000007 ( 10^ 9+ 7 ) .",
    "note": "In the first example, the answer is the sum of the first three numbers written out ( 1 + 2 + 4 = 7 ) . In the second example, the numbers with numbers from 5 to 14 : 5, 7, 9, 6, 8, 10, 12, 14, 16, 18 . Their sum is 105 .",
    "topics": [
      "constructive algorithms",
      "math"
    ],
    "id": "1151C"
  },
  {
    "title": "Prefix Sum Primes",
    "url": "https://codeforces.com/problemset/problem/1149/A",
    "history": "We' re giving away nice huge bags containing number tiles! A bag we want to present to you contains n tiles. Each of them has a single number written on it \u2014 either 1 or 2 . However, there is one condition you must fulfill in order to receive the prize. You will need to put all the tiles from the bag in a sequence, in any order you wish. We will then compute the sums of all prefixes in the sequence, and then count how many of these sums are prime numbers. If you want to keep the prize, you will need to maximize the number of primes you get. Can you win the prize? Hurry up, the bags are waiting!",
    "input": "The first line of the input contains a single integer n ( 1 \u2264 n \u2264 200 000 ) \u2014 the number of number tiles in the bag. The following line contains n space- separated integers a_ 1, a_ 2, . . . , a_ n ( a_ i \u2208{ 1, 2} ) \u2014 the values written on the tiles.",
    "output": "Output a permutation b_ 1, b_ 2, . . . , b_ n of the input sequence ( a_ 1, a_ 2, . . . , a_ n) maximizing the number of the prefix sums being prime numbers. If there are multiple optimal permutations, output any.",
    "note": "The first solution produces the prefix sums 1, 2, 3, 5, 7 ( four primes constructed) , while the prefix sums in the second solution are 1, 2, 3, 5, 6, 7, 8, 10, 11 ( five primes) . Primes are marked bold and blue. In each of these cases, the number of produced primes is maximum possible.",
    "topics": [
      "constructive algorithms",
      "greedy",
      "math",
      "number theory"
    ],
    "id": "1149A"
  },
  {
    "title": "Gold Experience",
    "url": "https://codeforces.com/problemset/problem/1148/G",
    "history": "Consider an undirected graph G with n vertices. There is a value a_ i in each vertex. Two vertices i and j are connected with an edge if and only if gcd( a_ i, a_ j) > 1 , where gcd( x, y) denotes the greatest common divisor ( GCD) of integers x and y . Consider a set of vertices. Let' s call a vertex in this set fair if it is connected with an edge with all other vertices in this set. You need to find a set of k vertices ( where k is a given integer, 2 \u00b7 k \u2264 n ) where all vertices are fair or all vertices are not fair. One can show that such a set always exists.",
    "input": "The first line contains integers n and k ( 6 \u2264 2 \u00b7 k \u2264 n \u2264 10^ 5 ) \u2014 the number of vertices and parameter k . The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 2 \u2264 a_ i \u2264 10^ 7 ) \u2014 the values in the vertices.",
    "output": "Print exactly k distinct integers \u2014 the indices of the vertices in the chosen set in any order.",
    "note": "In the first test case, set { 2, 4, 5} is an example of set where no vertices are fair. The vertex 2 does not share an edge with vertex 4 since gcd( 15, 8) = 1 . The vertex 4 does not share an edge with vertex 2 . The vertex 5 does not share an edge with vertex 2 . In the second test case, set { 8, 5, 6, 4} is an example of a set where all vertices are fair.",
    "topics": [
      "constructive algorithms",
      "graphs",
      "math",
      "number theory",
      "probabilities"
    ],
    "id": "1148G"
  },
  {
    "title": "Earth Wind and Fire",
    "url": "https://codeforces.com/problemset/problem/1148/E",
    "history": "There are n stones arranged on an axis. Initially the i - th stone is located at the coordinate s_ i . There may be more than one stone in a single place. You can perform zero or more operations of the following type: take two stones with indices i and j so that s_ i \u2264 s_ j , choose an integer d ( 0 \u2264 2 \u00b7 d \u2264 s_ j - s_ i ) , and replace the coordinate s_ i with ( s_ i + d) and replace coordinate s_ j with ( s_ j - d) . In other words, draw stones closer to each other. You want to move the stones so that they are located at positions t_ 1, t_ 2, . . . , t_ n . The order of the stones is not important \u2014 you just want for the multiset of the stones resulting positions to be the same as the multiset of t_ 1, t_ 2, . . . , t_ n . Detect whether it is possible to move the stones this way, and if yes, construct a way to do so. You don' t need to minimize the number of moves.",
    "input": "The first line contains a single integer n ( 1 \u2264 n \u2264 3 \u00b7 10^ 5 ) \u2013 the number of stones. The second line contains integers s_ 1, s_ 2, . . . , s_ n ( 1 \u2264 s_ i \u2264 10^ 9 ) \u2014 the initial positions of the stones. The second line contains integers t_ 1, t_ 2, . . . , t_ n ( 1 \u2264 t_ i \u2264 10^ 9 ) \u2014 the target positions of the stones.",
    "output": "If it is impossible to move the stones this way, print \" NO\" . Otherwise, on the first line print \" YES\" , on the second line print the number of operations m ( 0 \u2264 m \u2264 5 \u00b7 n ) required. You don' t have to minimize the number of operations. Then print m lines, each containing integers i, j, d ( 1 \u2264 i, j \u2264 n , s_ i \u2264 s_ j , 0 \u2264 2 \u00b7 d \u2264 s_ j - s_ i ) , defining the operations. One can show that if an answer exists, there is an answer requiring no more than 5 \u00b7 n operations.",
    "note": "Consider the first example. After the first move the locations of stones is [ 2, 2, 6, 5, 9] . After the second move the locations of stones is [ 2, 3, 5, 5, 9] . After the third move the locations of stones is [ 2, 5, 5, 5, 7] . After the last move the locations of stones is [ 4, 5, 5, 5, 5] .",
    "topics": [
      "constructive algorithms",
      "greedy",
      "math",
      "sortings",
      "two pointers"
    ],
    "id": "1148E"
  },
  {
    "title": "Frog Jumping",
    "url": "https://codeforces.com/problemset/problem/1146/D",
    "history": "A frog is initially at position 0 on the number line. The frog has two positive integers a and b . From a position k , it can either jump to position k+ a or k- b . Let f( x) be the number of distinct integers the frog can reach if it never jumps on an integer outside the interval [ 0, x] . The frog doesn' t need to visit all these integers in one trip, that is, an integer is counted if the frog can somehow reach it if it starts from 0 . Given an integer m , find \u2211_ i= 0^ m f( i) . That is, find the sum of all f( i) for i from 0 to m .",
    "input": "The first line contains three integers m, a, b ( 1 \u2264 m \u2264 10^ 9, 1 \u2264 a, b \u2264 10^ 5 ) .",
    "output": "Print a single integer, the desired sum.",
    "note": "In the first example, we must find f( 0) + f( 1) + . . . + f( 7) . We have f( 0) = 1, f( 1) = 1, f( 2) = 1, f( 3) = 1, f( 4) = 1, f( 5) = 3, f( 6) = 3, f( 7) = 8 . The sum of these values is 19 . In the second example, we have f( i) = i+ 1 , so we want to find \u2211_ i= 0^ 10^ 9 i+ 1 . In the third example, the frog can' t make any jumps in any case.",
    "topics": [
      "dfs and similar",
      "math",
      "number theory"
    ],
    "id": "1146D"
  },
  {
    "title": "Median String",
    "url": "https://codeforces.com/problemset/problem/1144/E",
    "history": "You are given two strings s and t , both consisting of exactly k lowercase Latin letters, s is lexicographically less than t . Let' s consider list of all strings consisting of exactly k lowercase Latin letters, lexicographically not less than s and not greater than t ( including s and t ) in lexicographical order. For example, for k= 2 , s= \" az\" and t= \" bf\" the list will be [ \" az\" , \" ba\" , \" bb\" , \" bc\" , \" bd\" , \" be\" , \" bf\" ] . Your task is to print the median ( the middle element) of this list. For the example above this will be \" bc\" . It is guaranteed that there is an odd number of strings lexicographically not less than s and not greater than t .",
    "input": "The first line of the input contains one integer k ( 1 \u2264 k \u2264 2 \u00b7 10^ 5 ) \u2014 the length of strings. The second line of the input contains one string s consisting of exactly k lowercase Latin letters. The third line of the input contains one string t consisting of exactly k lowercase Latin letters. It is guaranteed that s is lexicographically less than t . It is guaranteed that there is an odd number of strings lexicographically not less than s and not greater than t .",
    "output": "Print one string consisting exactly of k lowercase Latin letters \u2014 the median ( the middle element) of list of strings of length k lexicographically not less than s and not greater than t .",
    "note": "",
    "topics": [
      "bitmasks",
      "math",
      "number theory",
      "strings"
    ],
    "id": "1144E"
  },
  {
    "title": "Nirvana",
    "url": "https://codeforces.com/problemset/problem/1143/B",
    "history": "Kurt reaches nirvana when he finds the product of all the digits of some positive integer. Greater value of the product makes the nirvana deeper. Help Kurt find the maximum possible product of digits among all integers from 1 to n .",
    "input": "The only input line contains the integer n ( 1 \u2264 n \u2264 2\u00b710^ 9 ) .",
    "output": "Print the maximum product of digits among all integers from 1 to n .",
    "note": "In the first example the maximum product is achieved for 389 ( the product of digits is 3\u00b78\u00b79= 216 ) . In the second example the maximum product is achieved for 7 ( the product of digits is 7 ) . In the third example the maximum product is achieved for 999999999 ( the product of digits is 9^ 9= 387420489 ) .",
    "topics": [
      "brute force",
      "math",
      "number theory"
    ],
    "id": "1143B"
  },
  {
    "title": "Lynyrd Skynyrd",
    "url": "https://codeforces.com/problemset/problem/1142/B",
    "history": "Recently Lynyrd and Skynyrd went to a shop where Lynyrd bought a permutation p of length n , and Skynyrd bought an array a of length m , consisting of integers from 1 to n . Lynyrd and Skynyrd became bored, so they asked you q queries, each of which has the following form: \" does the subsegment of a from the l - th to the r - th positions, inclusive, have a subsequence that is a cyclic shift of p ? \" Please answer the queries. A permutation of length n is a sequence of n integers such that each integer from 1 to n appears exactly once in it. A cyclic shift of a permutation ( p_ 1, p_ 2, . . . , p_ n) is a permutation ( p_ i, p_ i + 1, . . . , p_ n, p_ 1, p_ 2, . . . , p_ i - 1) for some i from 1 to n . For example, a permutation ( 2, 1, 3) has three distinct cyclic shifts: ( 2, 1, 3) , ( 1, 3, 2) , ( 3, 2, 1) . A subsequence of a subsegment of array a from the l - th to the r - th positions, inclusive, is a sequence a_ i_ 1, a_ i_ 2, . . . , a_ i_ k for some i_ 1, i_ 2, . . . , i_ k such that l \u2264 i_ 1 < i_ 2 < . . . < i_ k \u2264 r .",
    "input": "The first line contains three integers n , m , q ( 1 \u2264 n, m, q \u2264 2 \u00b7 10^ 5 ) \u2014 the length of the permutation p , the length of the array a and the number of queries. The next line contains n integers from 1 to n , where the i - th of them is the i - th element of the permutation. Each integer from 1 to n appears exactly once. The next line contains m integers from 1 to n , the i - th of them is the i - th element of the array a . The next q lines describe queries. The i - th of these lines contains two integers l_ i and r_ i ( 1 \u2264 l_ i \u2264 r_ i \u2264 m ) , meaning that the i - th query is about the subsegment of the array from the l_ i - th to the r_ i - th positions, inclusive.",
    "output": "Print a single string of length q , consisting of 0 and 1 , the digit on the i - th positions should be 1 , if the subsegment of array a from the l_ i - th to the r_ i - th positions, inclusive, contains a subsequence that is a cyclic shift of p , and 0 otherwise.",
    "note": "In the first example the segment from the 1 - st to the 5 - th positions is 1, 2, 3, 1, 2 . There is a subsequence 1, 3, 2 that is a cyclic shift of the permutation. The subsegment from the 2 - nd to the 6 - th positions also contains a subsequence 2, 1, 3 that is equal to the permutation. The subsegment from the 3 - rd to the 5 - th positions is 3, 1, 2 , there is only one subsequence of length 3 ( 3, 1, 2 ) , but it is not a cyclic shift of the permutation. In the second example the possible cyclic shifts are 1, 2 and 2, 1 . The subsegment from the 1 - st to the 2 - nd positions is 1, 1 , its subsequences are not cyclic shifts of the permutation. The subsegment from the 2 - nd to the 3 - rd positions is 1, 2 , it coincides with the permutation. The subsegment from the 3 to the 4 positions is 2, 2 , its subsequences are not cyclic shifts of the permutation.",
    "topics": [
      "data structures",
      "dfs and similar",
      "dp",
      "math",
      "trees"
    ],
    "id": "1142B"
  },
  {
    "title": "The Beatles",
    "url": "https://codeforces.com/problemset/problem/1142/A",
    "history": "Recently a Golden Circle of Beetlovers was found in Byteland. It is a circle route going through n \u00b7 k cities. The cities are numerated from 1 to n \u00b7 k , the distance between the neighboring cities is exactly 1 km. Sergey does not like beetles, he loves burgers. Fortunately for him, there are n fast food restaurants on the circle, they are located in the 1 - st, the ( k + 1) - st, the ( 2k + 1) - st, and so on, the ( ( n- 1) k + 1) - st cities, i. e. the distance between the neighboring cities with fast food restaurants is k km. Sergey began his journey at some city s and traveled along the circle, making stops at cities each l km ( l > 0 ) , until he stopped in s once again. Sergey then forgot numbers s and l , but he remembers that the distance from the city s to the nearest fast food restaurant was a km, and the distance from the city he stopped at after traveling the first l km from s to the nearest fast food restaurant was b km. Sergey always traveled in the same direction along the circle, but when he calculated distances to the restaurants, he considered both directions. Now Sergey is interested in two integers. The first integer x is the minimum number of stops ( excluding the first) Sergey could have done before returning to s . The second integer y is the maximum number of stops ( excluding the first) Sergey could have done before returning to s .",
    "input": "The first line contains two integers n and k ( 1 \u2264 n, k \u2264 100 000 ) \u2014 the number of fast food restaurants on the circle and the distance between the neighboring restaurants, respectively. The second line contains two integers a and b ( 0 \u2264 a, b \u2264k/ 2 ) \u2014 the distances to the nearest fast food restaurants from the initial city and from the city Sergey made the first stop at, respectively.",
    "output": "Print the two integers x and y .",
    "note": "In the first example the restaurants are located in the cities 1 and 4 , the initial city s could be 2 , 3 , 5 , or 6 . The next city Sergey stopped at could also be at cities 2, 3, 5, 6 . Let' s loop through all possible combinations of these cities. If both s and the city of the first stop are at the city 2 ( for example, l = 6 ) , then Sergey is at s after the first stop already, so x = 1 . In other pairs Sergey needs 1, 2, 3 , or 6 stops to return to s , so y = 6 . In the second example Sergey was at cities with fast food restaurant both initially and after the first stop, so l is 2 , 4 , or 6 . Thus x = 1 , y = 3 . In the third example there is only one restaurant, so the possible locations of s and the first stop are: ( 6, 8) and ( 6, 4) . For the first option l = 2 , for the second l = 8 . In both cases Sergey needs x= y= 5 stops to go to s .",
    "topics": [
      "brute force",
      "math"
    ],
    "id": "1142A"
  },
  {
    "title": "Superhero Battle",
    "url": "https://codeforces.com/problemset/problem/1141/E",
    "history": "A superhero fights with a monster. The battle consists of rounds, each of which lasts exactly n minutes. After a round ends, the next round starts immediately. This is repeated over and over again. Each round has the same scenario. It is described by a sequence of n numbers: d_ 1, d_ 2, . . . , d_ n ( - 10^ 6 \u2264 d_ i \u2264 10^ 6 ) . The i - th element means that monster' s hp ( hit points) changes by the value d_ i during the i - th minute of each round. Formally, if before the i - th minute of a round the monster' s hp is h , then after the i - th minute it changes to h : = h + d_ i . The monster' s initial hp is H . It means that before the battle the monster has H hit points. Print the first minute after which the monster dies. The monster dies if its hp is less than or equal to 0 . Print - 1 if the battle continues infinitely.",
    "input": "The first line contains two integers H and n ( 1 \u2264 H \u2264 10^ 12 , 1 \u2264 n \u2264 2\u00b710^ 5 ) . The second line contains the sequence of integers d_ 1, d_ 2, . . . , d_ n ( - 10^ 6 \u2264 d_ i \u2264 10^ 6 ) , where d_ i is the value to change monster' s hp in the i - th minute of a round.",
    "output": "Print - 1 if the superhero can' t kill the monster and the battle will last infinitely. Otherwise, print the positive integer k such that k is the first minute after which the monster is dead.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": "1141E"
  },
  {
    "title": "Polycarp Restores Permutation",
    "url": "https://codeforces.com/problemset/problem/1141/C",
    "history": "An array of integers p_ 1, p_ 2, . . . , p_ n is called a permutation if it contains each number from 1 to n exactly once. For example, the following arrays are permutations: [ 3, 1, 2] , [ 1] , [ 1, 2, 3, 4, 5] and [ 4, 3, 1, 2] . The following arrays are not permutations: [ 2] , [ 1, 1] , [ 2, 3, 4] . Polycarp invented a really cool permutation p_ 1, p_ 2, . . . , p_ n of length n . It is very disappointing, but he forgot this permutation. He only remembers the array q_ 1, q_ 2, . . . , q_ n- 1 of length n- 1 , where q_ i= p_ i+ 1- p_ i . Given n and q= q_ 1, q_ 2, . . . , q_ n- 1 , help Polycarp restore the invented permutation.",
    "input": "The first line contains the integer n ( 2 \u2264 n \u2264 2\u00b710^ 5 ) \u2014 the length of the permutation to restore. The second line contains n- 1 integers q_ 1, q_ 2, . . . , q_ n- 1 ( - n < q_ i < n ) .",
    "output": "Print the integer - 1 if there is no such permutation of length n which corresponds to the given array q . Otherwise, if it exists, print p_ 1, p_ 2, . . . , p_ n . Print any such permutation if there are many of them.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": "1141C"
  },
  {
    "title": "Game 23",
    "url": "https://codeforces.com/problemset/problem/1141/A",
    "history": "Polycarp plays \" Game 23\" . Initially he has a number n and his goal is to transform it to m . In one move, he can multiply n by 2 or multiply n by 3 . He can perform any number of moves. Print the number of moves needed to transform n to m . Print - 1 if it is impossible to do so. It is easy to prove that any way to transform n to m contains the same number of moves ( i. e. number of moves doesn' t depend on the way of transformation) .",
    "input": "The only line of the input contains two integers n and m ( 1 \u2264 n \u2264 m \u2264 5\u00b710^ 8 ) .",
    "output": "Print the number of moves to transform n to m , or - 1 if there is no solution.",
    "note": "In the first example, the possible sequence of moves is: 120 \u2192 240 \u2192 720 \u2192 1440 \u2192 4320 \u2192 12960 \u2192 25920 \u2192 51840. The are 7 steps in total. In the second example, no moves are needed. Thus, the answer is 0 . In the third example, it is impossible to transform 48 to 72 .",
    "topics": [
      "implementation",
      "math"
    ],
    "id": "1141A"
  },
  {
    "title": "Minimum Triangulation",
    "url": "https://codeforces.com/problemset/problem/1140/D",
    "history": "You are given a regular polygon with n vertices labeled from 1 to n in counter- clockwise order. The triangulation of a given polygon is a set of triangles such that each vertex of each triangle is a vertex of the initial polygon, there is no pair of triangles such that their intersection has non- zero area, and the total area of all triangles is equal to the area of the given polygon. The weight of a triangulation is the sum of weigths of triangles it consists of, where the weight of a triagle is denoted as the product of labels of its vertices. Calculate the minimum weight among all triangulations of the polygon.",
    "input": "The first line contains single integer n ( 3 \u2264 n \u2264 500 ) \u2014 the number of vertices in the regular polygon.",
    "output": "Print one integer \u2014 the minimum weight among all triangulations of the given polygon.",
    "note": "According to Wiki: polygon triangulation is the decomposition of a polygonal area ( simple polygon) P into a set of triangles, i. e. , finding a set of triangles with pairwise non- intersecting interiors whose union is P . In the first example the polygon is a triangle, so we don' t need to cut it further, so the answer is 1 \u00b7 2 \u00b7 3 = 6 . In the second example the polygon is a rectangle, so it should be divided into two triangles. It' s optimal to cut it using diagonal 1- 3 so answer is 1 \u00b7 2 \u00b7 3 + 1 \u00b7 3 \u00b7 4 = 6 + 12 = 18 .",
    "topics": [
      "dp",
      "greedy",
      "math"
    ],
    "id": "1140D"
  },
  {
    "title": "Steps to One",
    "url": "https://codeforces.com/problemset/problem/1139/D",
    "history": "Vivek initially has an empty array a and some integer constant m . He performs the following algorithm: Select a random integer x uniformly in range from 1 to m and append it to the end of a . Compute the greatest common divisor of integers in a . In case it equals to 1 , break Otherwise, return to step 1 . Find the expected length of a . It can be shown that it can be represented as P/ Q where P and Q are coprime integers and Q= \u0338 0 10^ 9+ 7 . Print the value of P \u00b7 Q^ - 110^ 9+ 7 .",
    "input": "The first and only line contains a single integer m ( 1 \u2264 m \u2264 100000 ) .",
    "output": "Print a single integer \u2014 the expected length of the array a written as P \u00b7 Q^ - 110^ 9+ 7 .",
    "note": "In the first example, since Vivek can choose only integers from 1 to 1 , he will have a= [ 1] after the first append operation, and after that quit the algorithm. Hence the length of a is always 1 , so its expected value is 1 as well. In the second example, Vivek each time will append either 1 or 2 , so after finishing the algorithm he will end up having some number of 2 ' s ( possibly zero) , and a single 1 in the end. The expected length of the list is 1\u00b71/ 2 + 2\u00b71/ 2^ 2 + 3\u00b71/ 2^ 3 + . . . = 2 .",
    "topics": [
      "dp",
      "math",
      "number theory",
      "probabilities"
    ],
    "id": "1139D"
  },
  {
    "title": "Edgy Trees",
    "url": "https://codeforces.com/problemset/problem/1139/C",
    "history": "You are given a tree ( a connected undirected graph without cycles) of n vertices. Each of the n - 1 edges of the tree is colored in either black or red. You are also given an integer k . Consider sequences of k vertices. Let' s call a sequence [ a_ 1, a_ 2, . . . , a_ k] good if it satisfies the following criterion: We will walk a path ( possibly visiting same edge/ vertex multiple times) on the tree, starting from a_ 1 and ending at a_ k . Start at a_ 1 , then go to a_ 2 using the shortest path between a_ 1 and a_ 2 , then go to a_ 3 in a similar way, and so on, until you travel the shortest path between a_ k- 1 and a_ k . If you walked over at least one black edge during this process, then the sequence is good. Consider the tree on the picture. If k= 3 then the following sequences are good: [ 1, 4, 7] , [ 5, 5, 3] and [ 2, 3, 7] . The following sequences are not good: [ 1, 4, 6] , [ 5, 5, 5] , [ 3, 7, 3] . There are n^ k sequences of vertices, count how many of them are good. Since this number can be quite large, print it modulo 10^ 9+ 7 .",
    "input": "The first line contains two integers n and k ( 2 \u2264 n \u2264 10^ 5 , 2 \u2264 k \u2264 100 ) , the size of the tree and the length of the vertex sequence. Each of the next n - 1 lines contains three integers u_ i , v_ i and x_ i ( 1 \u2264 u_ i, v_ i \u2264 n , x_ i \u2208{ 0, 1} ) , where u_ i and v_ i denote the endpoints of the corresponding edge and x_ i is the color of this edge ( 0 denotes red edge and 1 denotes black edge) .",
    "output": "Print the number of good sequences modulo 10^ 9 + 7 .",
    "note": "In the first example, all sequences ( 4^ 4 ) of length 4 except the following are good: [ 1, 1, 1, 1] [ 2, 2, 2, 2] [ 3, 3, 3, 3] [ 4, 4, 4, 4] In the second example, all edges are red, hence there aren' t any good sequences.",
    "topics": [
      "dfs and similar",
      "dsu",
      "graphs",
      "math",
      "trees"
    ],
    "id": "1139C"
  },
  {
    "title": "Circus",
    "url": "https://codeforces.com/problemset/problem/1138/B",
    "history": "Polycarp is a head of a circus troupe. There are n \u2014 an even number \u2014 artists in the troupe. It is known whether the i - th artist can perform as a clown ( if yes, then c_ i = 1 , otherwise c_ i = 0 ) , and whether they can perform as an acrobat ( if yes, then a_ i = 1 , otherwise a_ i = 0 ) . Split the artists into two performances in such a way that: each artist plays in exactly one performance, the number of artists in the two performances is equal ( i. e. equal to n/ 2 ) , the number of artists that can perform as clowns in the first performance is the same as the number of artists that can perform as acrobats in the second performance.",
    "input": "The first line contains a single integer n ( 2 \u2264 n \u2264 5 000 , n is even) \u2014 the number of artists in the troupe. The second line contains n digits c_ 1 c_ 2 . . . c_ n , the i - th of which is equal to 1 if the i - th artist can perform as a clown, and 0 otherwise. The third line contains n digits a_ 1 a_ 2 . . . a_ n , the i - th of which is equal to 1 , if the i - th artist can perform as an acrobat, and 0 otherwise.",
    "output": "Print n/ 2 distinct integers \u2014 the indices of the artists that should play in the first performance. If there are multiple answers, print any. If there is no solution, print a single integer - 1 .",
    "note": "In the first example, one of the possible divisions into two performances is as follows: in the first performance artists 1 and 4 should take part. Then the number of artists in the first performance who can perform as clowns is equal to 1 . And the number of artists in the second performance who can perform as acrobats is 1 as well. In the second example, the division is not possible. In the third example, one of the possible divisions is as follows: in the first performance artists 3 and 4 should take part. Then in the first performance there are 2 artists who can perform as clowns. And the number of artists in the second performance who can perform as acrobats is 2 as well.",
    "topics": [
      "brute force",
      "greedy",
      "math",
      "strings"
    ],
    "id": "1138B"
  },
  {
    "title": "Nastya Is Playing Computer Games",
    "url": "https://codeforces.com/problemset/problem/1136/B",
    "history": "Finished her homework, Nastya decided to play computer games. Passing levels one by one, Nastya eventually faced a problem. Her mission is to leave a room, where a lot of monsters live, as quickly as possible. There are n manholes in the room which are situated on one line, but, unfortunately, all the manholes are closed, and there is one stone on every manhole. There is exactly one coin under every manhole, and to win the game Nastya should pick all the coins. Initially Nastya stands near the k - th manhole from the left. She is thinking what to do. In one turn, Nastya can do one of the following: if there is at least one stone on the manhole Nastya stands near, throw exactly one stone from it onto any other manhole ( yes, Nastya is strong) . go to a neighboring manhole; if there are no stones on the manhole Nastya stays near, she can open it and pick the coin from it. After it she must close the manhole immediately ( it doesn' t require additional moves) . The figure shows the intermediate state of the game. At the current position Nastya can throw the stone to any other manhole or move left or right to the neighboring manholes. If she were near the leftmost manhole, she could open it ( since there are no stones on it) . Nastya can leave the room when she picks all the coins. Monsters are everywhere, so you need to compute the minimum number of moves Nastya has to make to pick all the coins. Note one time more that Nastya can open a manhole only when there are no stones onto it.",
    "input": "The first and only line contains two integers n and k , separated by space ( 2 \u2264 n \u2264 5000 , 1 \u2264 k \u2264 n ) \u2014 the number of manholes and the index of manhole from the left, near which Nastya stays initially. Initially there is exactly one stone near each of the n manholes.",
    "output": "Print a single integer \u2014 minimum number of moves which lead Nastya to pick all the coins.",
    "note": "Let' s consider the example where n = 2 , k = 2 . Nastya should play as follows: At first she throws the stone from the second manhole to the first. Now there are two stones on the first manhole. Then she opens the second manhole and pick the coin from it. Then she goes to the first manhole, throws two stones by two moves to the second manhole and then opens the manhole and picks the coin from it. So, 6 moves are required to win.",
    "topics": [
      "constructive algorithms",
      "math"
    ],
    "id": "1136B"
  },
  {
    "title": "Zero Quantity Maximization",
    "url": "https://codeforces.com/problemset/problem/1133/D",
    "history": "You are given two arrays a and b , each contains n integers. You want to create a new array c as follows: choose some real ( i. e. not necessarily integer) number d , and then for every i \u2208 [ 1, n] let c_ i : = d \u00b7 a_ i + b_ i . Your goal is to maximize the number of zeroes in array c . What is the largest possible answer, if you choose d optimally?",
    "input": "The first line contains one integer n ( 1 \u2264 n \u2264 2 \u00b7 10^ 5 ) \u2014 the number of elements in both arrays. The second line contains n integers a_ 1 , a_ 2 , . . . , a_ n ( - 10^ 9 \u2264 a_ i \u2264 10^ 9 ) . The third line contains n integers b_ 1 , b_ 2 , . . . , b_ n ( - 10^ 9 \u2264 b_ i \u2264 10^ 9 ) .",
    "output": "Print one integer \u2014 the maximum number of zeroes in array c , if you choose d optimally.",
    "note": "In the first example, we may choose d = - 2 . In the second example, we may choose d = - 1/ 13 . In the third example, we cannot obtain any zero in array c , no matter which d we choose. In the fourth example, we may choose d = 6 .",
    "topics": [
      "hashing",
      "math",
      "number theory"
    ],
    "id": "1133D"
  },
  {
    "title": "Preparation for International Women's Day",
    "url": "https://codeforces.com/problemset/problem/1133/B",
    "history": "International Women' s Day is coming soon! Polycarp is preparing for the holiday. There are n candy boxes in the shop for sale. The i - th box contains d_ i candies. Polycarp wants to prepare the maximum number of gifts for k girls. Each gift will consist of exactly two boxes. The girls should be able to share each gift equally, so the total amount of candies in a gift ( in a pair of boxes) should be divisible by k . In other words, two boxes i and j ( i j ) can be combined as a gift if d_ i + d_ j is divisible by k . How many boxes will Polycarp be able to give? Of course, each box can be a part of no more than one gift. Polycarp cannot use boxes \" partially\" or redistribute candies between them.",
    "input": "The first line of the input contains two integers n and k ( 1 \u2264 n \u2264 2 \u00b7 10^ 5, 1 \u2264 k \u2264 100 ) \u2014 the number the boxes and the number the girls. The second line of the input contains n integers d_ 1, d_ 2, . . . , d_ n ( 1 \u2264 d_ i \u2264 10^ 9 ) , where d_ i is the number of candies in the i - th box.",
    "output": "Print one integer \u2014 the maximum number of the boxes Polycarp can give as gifts.",
    "note": "In the first example Polycarp can give the following pairs of boxes ( pairs are presented by indices of corresponding boxes) : ( 2, 3) ; ( 5, 6) ; ( 1, 4) . So the answer is 6 . In the second example Polycarp can give the following pairs of boxes ( pairs are presented by indices of corresponding boxes) : ( 6, 8) ; ( 2, 3) ; ( 1, 4) ; ( 5, 7) . So the answer is 8 . In the third example Polycarp can give the following pairs of boxes ( pairs are presented by indices of corresponding boxes) : ( 1, 2) ; ( 6, 7) . So the answer is 4 .",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "1133B"
  },
  {
    "title": "Sea Battle",
    "url": "https://codeforces.com/problemset/problem/1131/A",
    "history": "In order to make the \" Sea Battle\" game more interesting, Boris decided to add a new ship type to it. The ship consists of two rectangles. The first rectangle has a width of w_ 1 and a height of h_ 1 , while the second rectangle has a width of w_ 2 and a height of h_ 2 , where w_ 1 \u2265 w_ 2 . In this game, exactly one ship is used, made up of two rectangles. There are no other ships on the field. The rectangles are placed on field in the following way: the second rectangle is on top the first rectangle; they are aligned to the left, i. e. their left sides are on the same line; the rectangles are adjacent to each other without a gap. See the pictures in the notes: the first rectangle is colored red, the second rectangle is colored blue. Formally, let' s introduce a coordinate system. Then, the leftmost bottom cell of the first rectangle has coordinates ( 1, 1) , the rightmost top cell of the first rectangle has coordinates ( w_ 1, h_ 1) , the leftmost bottom cell of the second rectangle has coordinates ( 1, h_ 1 + 1) and the rightmost top cell of the second rectangle has coordinates ( w_ 2, h_ 1 + h_ 2) . After the ship is completely destroyed, all cells neighboring by side or a corner with the ship are marked. Of course, only cells, which don' t belong to the ship are marked. On the pictures in the notes such cells are colored green. Find out how many cells should be marked after the ship is destroyed. The field of the game is infinite in any direction.",
    "input": "Four lines contain integers w_ 1, h_ 1, w_ 2 and h_ 2 ( 1 \u2264 w_ 1, h_ 1, w_ 2, h_ 2 \u2264 10^ 8 , w_ 1 \u2265 w_ 2 ) \u2014 the width of the first rectangle, the height of the first rectangle, the width of the second rectangle and the height of the second rectangle. You can' t rotate the rectangles.",
    "output": "Print exactly one integer \u2014 the number of cells, which should be marked after the ship is destroyed.",
    "note": "In the first example the field looks as follows ( the first rectangle is red, the second rectangle is blue, green shows the marked squares) : In the second example the field looks as:",
    "topics": [
      "math"
    ],
    "id": "1131A"
  },
  {
    "title": "Once in a casino",
    "url": "https://codeforces.com/problemset/problem/1120/B",
    "history": "One player came to a casino and found a slot machine where everything depends only on how he plays. The rules follow. A positive integer a is initially on the screen. The player can put a coin into the machine and then add 1 to or subtract 1 from any two adjacent digits. All digits must remain from 0 to 9 after this operation, and the leading digit must not equal zero. In other words, it is forbidden to add 1 to 9 , to subtract 1 from 0 and to subtract 1 from the leading 1 . Once the number on the screen becomes equal to b , the player wins the jackpot. a and b have the same number of digits. Help the player to determine the minimal number of coins he needs to spend in order to win the jackpot and tell how to play.",
    "input": "The first line contains a single integer n ( 2 \u2264 n \u2264 10^ 5 ) standing for the length of numbers a and b . The next two lines contain numbers a and b , each one on a separate line ( 10^ n- 1\u2264 a, b < 10^ n ) .",
    "output": "If it is impossible to win the jackpot, print a single integer - 1 . Otherwise, the first line must contain the minimal possible number c of coins the player has to spend. min( c, 10^ 5) lines should follow, i - th of them containing two integers d_ i and s_ i ( 1\u2264 d_ i\u2264 n - 1 , s_ i = \u00b1 1 ) denoting that on the i - th step the player should add s_ i to the d_ i - th and ( d_ i + 1) - st digits from the left ( e. g. d_ i = 1 means that two leading digits change while d_ i = n - 1 means that there are two trailing digits which change) . Please notice that the answer may be very big and in case c > 10^ 5 you should print only the first 10^ 5 moves. Your answer is considered correct if it is possible to finish your printed moves to win the jackpot in the minimal possible number of coins. In particular, if there are multiple ways to do this, you can output any of them.",
    "note": "In the first example, we can make a + 1 operation on the two first digits, transforming number 223 into 333 , and then make a - 1 operation on the last two digits, transforming 333 into 322 . It' s also possible to do these operations in reverse order, which makes another correct answer. In the last example, one can show that it' s impossible to transform 35 into 44 .",
    "topics": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "math"
    ],
    "id": "1120B"
  },
  {
    "title": "Triple",
    "url": "https://codeforces.com/problemset/problem/1119/H",
    "history": "You have received your birthday gifts \u2014 n triples of integers! The i - th of them is { a_ i, b_ i, c_ i} . All numbers are greater than or equal to 0 , and strictly smaller than 2^ k , where k is a fixed integer. One day, you felt tired playing with triples. So you came up with three new integers x , y , z , and then formed n arrays. The i - th array consists of a_ i repeated x times, b_ i repeated y times and c_ i repeated z times. Thus, each array has length ( x + y + z) . You want to choose exactly one integer from each array such that the XOR ( bitwise exclusive or) of them is equal to t . Output the number of ways to choose the numbers for each t between 0 and 2^ k - 1 , inclusive, modulo 998244353 .",
    "input": "The first line contains two integers n and k ( 1 \u2264 n \u2264 10^ 5 , 1 \u2264 k \u2264 17 ) \u2014 the number of arrays and the binary length of all numbers. The second line contains three integers x , y , z ( 0 \u2264 x, y, z \u2264 10^ 9 ) \u2014 the integers you chose. Then n lines follow. The i - th of them contains three integers a_ i , b_ i and c_ i ( 0 \u2264 a_ i , b_ i , c_ i\u2264 2^ k - 1 ) \u2014 the integers forming the i - th array.",
    "output": "Print a single line containing 2^ k integers. The i - th of them should be the number of ways to choose exactly one integer from each array so that their XOR is equal to t = i- 1 modulo 998244353 .",
    "note": "In the first example, the array we formed is ( 1, 0, 0, 1, 1, 1) , we have two choices to get 0 as the XOR and four choices to get 1 . In the second example, two arrays are ( 0, 1, 1, 2) and ( 1, 2, 2, 3) . There are sixteen ( 4 \u00b7 4) choices in total, 4 of them ( 1 \u2295 1 and 2 \u2295 2 , two options for each) give 0 , 2 of them ( 0 \u2295 1 and 2 \u2295 3 ) give 1 , 4 of them ( 0 \u2295 2 and 1 \u2295 3 , two options for each) give 2 , and finally 6 of them ( 0 \u2295 3 , 2 \u2295 1 and four options for 1 \u2295 2 ) give 3 .",
    "topics": [
      "fft",
      "math"
    ],
    "id": "1119H"
  },
  {
    "title": "Ramesses and Corner Inversion",
    "url": "https://codeforces.com/problemset/problem/1119/C",
    "history": "Ramesses came to university to algorithms practice, and his professor, who is a fairly known programmer, gave him the following task. You are given two matrices A and B of size n \u00d7 m , each of which consists of 0 and 1 only. You can apply the following operation to the matrix A arbitrary number of times: take any submatrix of the matrix A that has at least two rows and two columns, and invert the values in its corners ( i. e. all corners of the submatrix that contain 0 , will be replaced by 1 , and all corners of the submatrix that contain 1 , will be replaced by 0 ) . You have to answer whether you can obtain the matrix B from the matrix A . An example of the operation. The chosen submatrix is shown in blue and yellow, its corners are shown in yellow. Ramesses don' t want to perform these operations by himself, so he asks you to answer this question. A submatrix of matrix M is a matrix which consist of all elements which come from one of the rows with indices x_ 1, x_ 1+ 1, . . . , x_ 2 of matrix M and one of the columns with indices y_ 1, y_ 1+ 1, . . . , y_ 2 of matrix M , where x_ 1, x_ 2, y_ 1, y_ 2 are the edge rows and columns of the submatrix. In other words, a submatrix is a set of elements of source matrix which form a solid rectangle ( i. e. without holes) with sides parallel to the sides of the original matrix. The corners of the submatrix are cells ( x_ 1, y_ 1) , ( x_ 1, y_ 2) , ( x_ 2, y_ 1) , ( x_ 2, y_ 2) , where the cell ( i, j) denotes the cell on the intersection of the i - th row and the j - th column.",
    "input": "The first line contains two integers n and m ( 1 \u2264 n, m \u2264 500 ) \u2014 the number of rows and the number of columns in matrices A and B . Each of the next n lines contain m integers: the j - th integer in the i - th line is the j - th element of the i - th row of the matrix A ( 0 \u2264 A_ ij\u2264 1 ) . Each of the next n lines contain m integers: the j - th integer in the i - th line is the j - th element of the i - th row of the matrix B ( 0 \u2264 B_ ij\u2264 1 ) .",
    "output": "Print \" Yes\" ( without quotes) if it is possible to transform the matrix A to the matrix B using the operations described above, and \" No\" ( without quotes) , if it is not possible. You can print each letter in any case ( upper or lower) .",
    "note": "The examples are explained below. Example 1. Example 2. Example 3.",
    "topics": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "math"
    ],
    "id": "1119C"
  },
  {
    "title": "Water Buying",
    "url": "https://codeforces.com/problemset/problem/1118/A",
    "history": "Polycarp wants to cook a soup. To do it, he needs to buy exactly n liters of water. There are only two types of water bottles in the nearby shop \u2014 1 - liter bottles and 2 - liter bottles. There are infinitely many bottles of these two types in the shop. The bottle of the first type costs a burles and the bottle of the second type costs b burles correspondingly. Polycarp wants to spend as few money as possible. Your task is to find the minimum amount of money ( in burles) Polycarp needs to buy exactly n liters of water in the nearby shop if the bottle of the first type costs a burles and the bottle of the second type costs b burles. You also have to answer q independent queries.",
    "input": "The first line of the input contains one integer q ( 1 \u2264 q \u2264 500 ) \u2014 the number of queries. The next q lines contain queries. The i - th query is given as three space- separated integers n_ i , a_ i and b_ i ( 1 \u2264 n_ i \u2264 10^ 12, 1 \u2264 a_ i, b_ i \u2264 1000 ) \u2014 how many liters Polycarp needs in the i - th query, the cost ( in burles) of the bottle of the first type in the i - th query and the cost ( in burles) of the bottle of the second type in the i - th query, respectively.",
    "output": "Print q integers. The i - th integer should be equal to the minimum amount of money ( in burles) Polycarp needs to buy exactly n_ i liters of water in the nearby shop if the bottle of the first type costs a_ i burles and the bottle of the second type costs b_ i burles.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": "1118A"
  },
  {
    "title": "Decypher the String",
    "url": "https://codeforces.com/problemset/problem/1117/E",
    "history": "This is an interactive problem. Remember to flush your output while communicating with the testing program. You may use fflush( stdout) in C+ + , system. out. flush( ) in Java, stdout. flush( ) in Python or flush( output) in Pascal to flush the output. If you use some other programming language, consult its documentation. You may also refer to the guide on interactive problems: https: / / codeforces. com/ blog/ entry/ 45307. You are given a string t consisting of n lowercase Latin letters. This string was cyphered as follows: initially, the jury had a string s consisting of n lowercase Latin letters. Then they applied a sequence of no more than n ( possibly zero) operations. i - th operation is denoted by two integers a_ i and b_ i ( 1 \u2264 a_ i, b_ i \u2264 n ) , and means swapping two elements of the string with indices a_ i and b_ i . All operations were done in the order they were placed in the sequence. For example, if s is xyz and 2 following operations are performed: a_ 1 = 1, b_ 1 = 2 ; a_ 2 = 2, b_ 2 = 3 , then after the first operation the current string is yxz, and after the second operation the current string is yzx, so t is yzx. You are asked to restore the original string s . Unfortunately, you have no information about the operations used in the algorithm ( you don' t even know if there were any operations in the sequence) . But you may run the same sequence of operations on any string you want, provided that it contains only lowercase Latin letters and its length is n , and get the resulting string after those operations. Can you guess the original string s asking the testing system to run the sequence of swaps no more than 3 times? The string s and the sequence of swaps are fixed in each test; the interactor doesn' t try to adapt the test to your solution. InteractionBefore giving the answer, you may submit no more than 3 queries. To ask a query, print one line in the following format: ? s' , where s' should be a string consisting of exaclty n lowercase Latin letters. The line should be ended with a line break character. After submitting a query, flush the output and read the answer to your query \u2014 a string t' consisting of n lowercase Latin letters, which is the result of applying the sequence of swaps to string s' . This string will be given on a separate line ended by a line break character. If you submit an incorrect query ( or ask more than 3 queries) , the answer to it will be one string 0. After receiving such an answer, your program should terminate immediately \u2014 otherwise you may receive verdict \" Runtime error\" , \" Time limit exceeded\" or some other verdict instead of \" Wrong answer\" .",
    "input": "Initially the testing system sends one string t , consisting of lowercase Latin letters ( 1 \u2264 | t| = n \u2264 10^ 4 ) .",
    "output": "To give the answer, your program should print one line ! s with a line break in the end. After that, it should flush the output and terminate gracefully.",
    "note": "In the sample, the testcase described in the statement is used. The participant asks the first query with string baa, which is transformed to aab. The second query contains string aba, which is transformed to baa. The third query contains string aab, which is transformed to aba. The participant can deduce that the initial string s was xyz. Note for hacking phase: To submit a test in hacking phase, you should provide it in the following format: The first line should contain the string s you guess, consisting of n \u2208 [ 1, 10000] lowercase Latin letters. The second line should contain k ( 0 \u2264 k \u2264 n ) \u2014 the number of swap operations in the sequence. Then k lines should follow, i - th of them should denote i - th operation with two integers a_ i and b_ i ( 1 \u2264 a_ i, b_ i \u2264 n ) . For example, the sample test would look like that: xyz21 22 3",
    "topics": [
      "bitmasks",
      "chinese remainder theorem",
      "constructive algorithms",
      "interactive",
      "math"
    ],
    "id": "1117E"
  },
  {
    "title": "Magic Gems",
    "url": "https://codeforces.com/problemset/problem/1117/D",
    "history": "Reziba has many magic gems. Each magic gem can be split into M normal gems. The amount of space each magic ( and normal) gem takes is 1 unit. A normal gem cannot be split. Reziba wants to choose a set of magic gems and split some of them, so the total space occupied by the resulting set of gems is N units. If a magic gem is chosen and split, it takes M units of space ( since it is split into M gems) ; if a magic gem is not split, it takes 1 unit. How many different configurations of the resulting set of gems can Reziba have, such that the total amount of space taken is N units? Print the answer modulo 1000000007 ( 10^ 9+ 7 ) . Two configurations are considered different if the number of magic gems Reziba takes to form them differs, or the indices of gems Reziba has to split differ.",
    "input": "The input contains a single line consisting of 2 integers N and M ( 1 \u2264 N \u2264 10^ 18 , 2 \u2264 M \u2264 100 ) .",
    "output": "Print one integer, the total number of configurations of the resulting set of gems, given that the total amount of space taken is N units. Print the answer modulo 1000000007 ( 10^ 9+ 7 ) .",
    "note": "In the first example each magic gem can split into 2 normal gems, and we know that the total amount of gems are 4 . Let 1 denote a magic gem, and 0 denote a normal gem. The total configurations you can have is: 1 1 1 1 ( None of the gems split) ; 0 0 1 1 ( First magic gem splits into 2 normal gems) ; 1 0 0 1 ( Second magic gem splits into 2 normal gems) ; 1 1 0 0 ( Third magic gem splits into 2 normal gems) ; 0 0 0 0 ( First and second magic gems split into total 4 normal gems) . Hence, answer is 5 .",
    "topics": [
      "dp",
      "math",
      "matrices"
    ],
    "id": "1117D"
  },
  {
    "title": "Emotes",
    "url": "https://codeforces.com/problemset/problem/1117/B",
    "history": "There are n emotes in very popular digital collectible card game ( the game is pretty famous so we won' t say its name) . The i - th emote increases the opponent' s happiness by a_ i units ( we all know that emotes in this game are used to make opponents happy) . You have time to use some emotes only m times. You are allowed to use any emotion once, more than once, or not use it at all. The only restriction is that you cannot use the same emote more than k times in a row ( otherwise the opponent will think that you' re trolling him) . Note that two emotes i and j ( i j ) such that a_ i = a_ j are considered different. You have to make your opponent as happy as possible. Find the maximum possible opponent' s happiness.",
    "input": "The first line of the input contains three integers n, m and k ( 2 \u2264 n \u2264 2 \u00b7 10^ 5 , 1 \u2264 k \u2264 m \u2264 2 \u00b7 10^ 9 ) \u2014 the number of emotes, the number of times you can use emotes and the maximum number of times you may use the same emote in a row. The second line of the input contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 9 ) , where a_ i is value of the happiness of the i - th emote.",
    "output": "Print one integer \u2014 the maximum opponent' s happiness if you use emotes in a way satisfying the problem statement.",
    "note": "In the first example you may use emotes in the following sequence: 4, 4, 5, 4, 4, 5, 4, 4, 5 .",
    "topics": [
      "greedy",
      "math",
      "sortings"
    ],
    "id": "1117B"
  },
  {
    "title": "Best Subsegment",
    "url": "https://codeforces.com/problemset/problem/1117/A",
    "history": "You are given array a_ 1, a_ 2, . . . , a_ n . Find the subsegment a_ l, a_ l+ 1, . . . , a_ r ( 1 \u2264 l \u2264 r \u2264 n ) with maximum arithmetic mean 1/ r - l + 1\u2211_ i= l^ ra_ i ( in floating- point numbers, i. e. without any rounding) . If there are many such subsegments find the longest one.",
    "input": "The first line contains single integer n ( 1 \u2264 n \u2264 10^ 5 ) \u2014 length of the array a . The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 0 \u2264 a_ i \u2264 10^ 9 ) \u2014 the array a .",
    "output": "Print the single integer \u2014 the length of the longest subsegment with maximum possible arithmetic mean.",
    "note": "The subsegment [ 3, 4] is the longest among all subsegments with maximum arithmetic mean.",
    "topics": [
      "implementation",
      "math"
    ],
    "id": "1117A"
  },
  {
    "title": "Please, another Queries on Array?",
    "url": "https://codeforces.com/problemset/problem/1114/F",
    "history": "You are given an array a_ 1, a_ 2, . . . , a_ n . You need to perform q queries of the following two types: \" MULTIPLY l r x\" \u2014 for every i ( l \u2264 i \u2264 r ) multiply a_ i by x . \" TOTIENT l r\" \u2014 print \u03c6( \u220f_ i= l^ r a_ i) taken modulo 10^ 9+ 7 , where \u03c6 denotes Euler' s totient function. The Euler' s totient function of a positive integer n ( denoted as \u03c6( n) ) is the number of integers x ( 1 \u2264 x \u2264 n ) such that ( n, x) = 1 .",
    "input": "The first line contains two integers n and q ( 1 \u2264 n \u2264 4 \u00b7 10^ 5 , 1 \u2264 q \u2264 2 \u00b7 10^ 5 ) \u2014 the number of elements in array a and the number of queries. The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 300 ) \u2014 the elements of array a . Then q lines follow, describing queries in the format given in the statement. \" MULTIPLY l r x\" ( 1 \u2264 l \u2264 r \u2264 n , 1 \u2264 x \u2264 300 ) \u2014 denotes a multiplication query. \" TOTIENT l r\" ( 1 \u2264 l \u2264 r \u2264 n ) \u2014 denotes a query on the value of Euler' s totient function. It is guaranteed that there is at least one \" TOTIENT\" query.",
    "output": "For each \" TOTIENT\" query, print the answer to it.",
    "note": "In the first example, \u03c6( 1) = 1 for the first query, \u03c6( 2) = 1 for the second query and \u03c6( 6) = 2 for the third one.",
    "topics": [
      "bitmasks",
      "data structures",
      "divide and conquer",
      "math",
      "number theory"
    ],
    "id": "1114F"
  },
  {
    "title": "Trailing Loves (or L'oeufs?)",
    "url": "https://codeforces.com/problemset/problem/1114/C",
    "history": "The number \" zero\" is called \" love\" ( or \" l' oeuf\" to be precise, literally means \" egg\" in French) , for example when denoting the zero score in a game of tennis. Aki is fond of numbers, especially those with trailing zeros. For example, the number 9200 has two trailing zeros. Aki thinks the more trailing zero digits a number has, the prettier it is. However, Aki believes, that the number of trailing zeros of a number is not static, but depends on the base ( radix) it is represented in. Thus, he considers a few scenarios with some numbers and bases. And now, since the numbers he used become quite bizarre, he asks you to help him to calculate the beauty of these numbers. Given two integers n and b ( in decimal notation) , your task is to calculate the number of trailing zero digits in the b - ary ( in the base/ radix of b ) representation of n ! ( factorial of n ) .",
    "input": "The only line of the input contains two integers n and b ( 1 \u2264 n \u2264 10^ 18 , 2 \u2264 b \u2264 10^ 12 ) .",
    "output": "Print an only integer \u2014 the number of trailing zero digits in the b - ary representation of n!",
    "note": "In the first example, 6! _ ( 10) = 720_ ( 10) = 880_ ( 9) . In the third and fourth example, 5! _ ( 10) = 120_ ( 10) = 1111000_ ( 2) . The representation of the number x in the b - ary base is d_ 1, d_ 2, . . . , d_ k if x = d_ 1 b^ k - 1 + d_ 2 b^ k - 2 + . . . + d_ k b^ 0 , where d_ i are integers and 0 \u2264 d_ i \u2264 b - 1 . For example, the number 720 from the first example is represented as 880_ ( 9) since 720 = 8 \u00b7 9^ 2 + 8 \u00b7 9 + 0 \u00b7 1 . You can read more about bases here.",
    "topics": [
      "brute force",
      "implementation",
      "math",
      "number theory"
    ],
    "id": "1114C"
  },
  {
    "title": "Sasha and His Trip",
    "url": "https://codeforces.com/problemset/problem/1113/A",
    "history": "Sasha is a very happy guy, that' s why he is always on the move. There are n cities in the country where Sasha lives. They are all located on one straight line, and for convenience, they are numbered from 1 to n in increasing order. The distance between any two adjacent cities is equal to 1 kilometer. Since all roads in the country are directed, it' s possible to reach the city y from the city x only if x < y . Once Sasha decided to go on a trip around the country and to visit all n cities. He will move with the help of his car, Cheetah- 2677. The tank capacity of this model is v liters, and it spends exactly 1 liter of fuel for 1 kilometer of the way. At the beginning of the journey, the tank is empty. Sasha is located in the city with the number 1 and wants to get to the city with the number n . There is a gas station in each city. In the i - th city, the price of 1 liter of fuel is i dollars. It is obvious that at any moment of time, the tank can contain at most v liters of fuel. Sasha doesn' t like to waste money, that' s why he wants to know what is the minimum amount of money is needed to finish the trip if he can buy fuel in any city he wants. Help him to figure it out!",
    "input": "The first line contains two integers n and v ( 2 \u2264 n \u2264 100 , 1 \u2264 v \u2264 100 ) \u2014 the number of cities in the country and the capacity of the tank.",
    "output": "Print one integer \u2014 the minimum amount of money that is needed to finish the trip.",
    "note": "In the first example, Sasha can buy 2 liters for 2 dollars ( 1 dollar per liter) in the first city, drive to the second city, spend 1 liter of fuel on it, then buy 1 liter for 2 dollars in the second city and then drive to the 4 - th city. Therefore, the answer is 1+ 1+ 2= 4 . In the second example, the capacity of the tank allows to fill the tank completely in the first city, and drive to the last city without stops in other cities.",
    "topics": [
      "dp",
      "greedy",
      "math"
    ],
    "id": "1113A"
  },
  {
    "title": "Destroy the Colony",
    "url": "https://codeforces.com/problemset/problem/1111/D",
    "history": "There is a colony of villains with several holes aligned in a row, where each hole contains exactly one villain. Each colony arrangement can be expressed as a string of even length, where the i - th character of the string represents the type of villain in the i - th hole. Iron Man can destroy a colony only if the colony arrangement is such that all villains of a certain type either live in the first half of the colony or in the second half of the colony. His assistant Jarvis has a special power. It can swap villains of any two holes, i. e. swap any two characters in the string; he can do this operation any number of times. Now Iron Man asks Jarvis q questions. In each question, he gives Jarvis two numbers x and y . Jarvis has to tell Iron Man the number of distinct colony arrangements he can create from the original one using his powers such that all villains having the same type as those originally living in x - th hole or y - th hole live in the same half and the Iron Man can destroy that colony arrangement. Two colony arrangements are considered to be different if there exists a hole such that different types of villains are present in that hole in the arrangements.",
    "input": "The first line contains a string s ( 2 \u2264 | s| \u2264 10^ 5 ) , representing the initial colony arrangement. String s can have both lowercase and uppercase English letters and its length is even. The second line contains a single integer q ( 1 \u2264 q \u2264 10^ 5 ) \u2014 the number of questions. The i - th of the next q lines contains two integers x_ i and y_ i ( 1 \u2264 x_ i, y_ i \u2264 | s| , x_ i y_ i ) \u2014 the two numbers given to the Jarvis for the i - th question.",
    "output": "For each question output the number of arrangements possible modulo 10^ 9+ 7 .",
    "note": "Consider the first example. For the first question, the possible arrangements are \" aabb\" and \" bbaa\" , and for the second question, index 1 contains ' a' and index 2 contains ' b' and there is no valid arrangement in which all ' a' and ' b' are in the same half.",
    "topics": [
      "combinatorics",
      "dp",
      "math"
    ],
    "id": "1111D"
  },
  {
    "title": "Creative Snap",
    "url": "https://codeforces.com/problemset/problem/1111/C",
    "history": "Thanos wants to destroy the avengers base, but he needs to destroy the avengers along with their base. Let we represent their base with an array, where each position can be occupied by many avengers, but one avenger can occupy only one position. Length of their base is a perfect power of 2 . Thanos wants to destroy the base using minimum power. He starts with the whole base and in one step he can do either of following: if the current length is at least 2 , divide the base into 2 equal halves and destroy them separately, or burn the current base. If it contains no avenger in it, it takes A amount of power, otherwise it takes his B \u00b7 n_ a \u00b7 l amount of power, where n_ a is the number of avengers and l is the length of the current base. Output the minimum power needed by Thanos to destroy the avengers' base.",
    "input": "The first line contains four integers n , k , A and B ( 1 \u2264 n \u2264 30 , 1 \u2264 k \u2264 10^ 5 , 1 \u2264 A, B \u2264 10^ 4 ) , where 2^ n is the length of the base, k is the number of avengers and A and B are the constants explained in the question. The second line contains k integers a_ 1, a_ 2, a_ 3, . . . , a_ k ( 1 \u2264 a_ i\u2264 2^ n ) , where a_ i represents the position of avenger in the base.",
    "output": "Output one integer \u2014 the minimum power needed to destroy the avengers base.",
    "note": "Consider the first example. One option for Thanos is to burn the whole base 1- 4 with power 2 \u00b7 2 \u00b7 4 = 16 . Otherwise he can divide the base into two parts 1- 2 and 3- 4 . For base 1- 2 , he can either burn it with power 2 \u00b7 1 \u00b7 2 = 4 or divide it into 2 parts 1- 1 and 2- 2 . For base 1- 1 , he can burn it with power 2 \u00b7 1 \u00b7 1 = 2 . For 2- 2 , he can destroy it with power 1 , as there are no avengers. So, the total power for destroying 1- 2 is 2 + 1 = 3 , which is less than 4 . Similarly, he needs 3 power to destroy 3- 4 . The total minimum power needed is 6 .",
    "topics": [
      "binary search",
      "brute force",
      "divide and conquer",
      "math"
    ],
    "id": "1111C"
  },
  {
    "title": "Average Superhero Gang Power ",
    "url": "https://codeforces.com/problemset/problem/1111/B",
    "history": "Every superhero has been given a power value by the Felicity Committee. The avengers crew wants to maximize the average power of the superheroes in their team by performing certain operations. Initially, there are n superheroes in avengers team having powers a_ 1, a_ 2, . . . , a_ n , respectively. In one operation, they can remove one superhero from their team ( if there are at least two) or they can increase the power of a superhero by 1 . They can do at most m operations. Also, on a particular superhero at most k operations can be done. Can you help the avengers team to maximize the average power of their crew?",
    "input": "The first line contains three integers n , k and m ( 1 \u2264 n \u2264 10^ 5 , 1 \u2264 k \u2264 10^ 5 , 1 \u2264 m \u2264 10^ 7 ) \u2014 the number of superheroes, the maximum number of times you can increase power of a particular superhero, and the total maximum number of operations. The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 6 ) \u2014 the initial powers of the superheroes in the cast of avengers.",
    "output": "Output a single number \u2014 the maximum final average power. Your answer is considered correct if its absolute or relative error does not exceed 10^ - 6 . Formally, let your answer be a , and the jury' s answer be b . Your answer is accepted if and only if | a - b| / max( 1, | b| ) \u2264 10^ - 6 .",
    "note": "In the first example, the maximum average is obtained by deleting the first element and increasing the second element four times. In the second sample, one of the ways to achieve maximum average is to delete the first and the third element and increase the second and the fourth elements by 2 each.",
    "topics": [
      "brute force",
      "implementation",
      "math"
    ],
    "id": "1111B"
  },
  {
    "title": "Magic Stones",
    "url": "https://codeforces.com/problemset/problem/1110/E",
    "history": "Grigory has n magic stones, conveniently numbered from 1 to n . The charge of the i - th stone is equal to c_ i . Sometimes Grigory gets bored and selects some inner stone ( that is, some stone with index i , where 2 \u2264 i \u2264 n - 1 ) , and after that synchronizes it with neighboring stones. After that, the chosen stone loses its own charge, but acquires the charges from neighboring stones. In other words, its charge c_ i changes to c_ i' = c_ i + 1 + c_ i - 1 - c_ i . Andrew, Grigory' s friend, also has n stones with charges t_ i . Grigory is curious, whether there exists a sequence of zero or more synchronization operations, which transforms charges of Grigory' s stones into charges of corresponding Andrew' s stones, that is, changes c_ i into t_ i for all i ?",
    "input": "The first line contains one integer n ( 2 \u2264 n \u2264 10^ 5 ) \u2014 the number of magic stones. The second line contains integers c_ 1, c_ 2, . . . , c_ n ( 0 \u2264 c_ i \u2264 2 \u00b7 10^ 9 ) \u2014 the charges of Grigory' s stones. The second line contains integers t_ 1, t_ 2, . . . , t_ n ( 0 \u2264 t_ i \u2264 2 \u00b7 10^ 9 ) \u2014 the charges of Andrew' s stones.",
    "output": "If there exists a ( possibly empty) sequence of synchronization operations, which changes all charges to the required ones, print \" Yes\" . Otherwise, print \" No\" .",
    "note": "In the first example, we can perform the following synchronizations ( 1 - indexed) : First, synchronize the third stone [ 7, 2, 4, 12] \u2192 [ 7, 2, 10, 12] . Then synchronize the second stone: [ 7, 2, 10, 12] \u2192 [ 7, 15, 10, 12] . In the second example, any operation with the second stone will not change its charge.",
    "topics": [
      "constructive algorithms",
      "math",
      "sortings"
    ],
    "id": "1110E"
  },
  {
    "title": "Meaningless Operations",
    "url": "https://codeforces.com/problemset/problem/1110/C",
    "history": "Can the greatest common divisor and bitwise operations have anything in common? It is time to answer this question. Suppose you are given a positive integer a . You want to choose some integer b from 1 to a - 1 inclusive in such a way that the greatest common divisor ( GCD) of integers a \u2295 b and a & b is as large as possible. In other words, you' d like to compute the following function: f( a) = max_ 0 < b < agcd( a \u2295 b, a & b) . Here \u2295 denotes the bitwise XOR operation, and & denotes the bitwise AND operation. The greatest common divisor of two integers x and y is the largest integer g such that both x and y are divided by g without remainder. You are given q integers a_ 1, a_ 2, . . . , a_ q . For each of these integers compute the largest possible value of the greatest common divisor ( when b is chosen optimally) .",
    "input": "The first line contains an integer q ( 1 \u2264 q \u2264 10^ 3 ) \u2014 the number of integers you need to compute the answer for. After that q integers are given, one per line: a_ 1, a_ 2, . . . , a_ q ( 2 \u2264 a_ i \u2264 2^ 25 - 1 ) \u2014 the integers you need to compute the answer for.",
    "output": "For each integer, print the answer in the same order as the integers are given in input.",
    "note": "For the first integer the optimal choice is b = 1 , then a \u2295 b = 3 , a & b = 0 , and the greatest common divisor of 3 and 0 is 3 . For the second integer one optimal choice is b = 2 , then a \u2295 b = 1 , a & b = 2 , and the greatest common divisor of 1 and 2 is 1 . For the third integer the optimal choice is b = 2 , then a \u2295 b = 7 , a & b = 0 , and the greatest common divisor of 7 and 0 is 7 .",
    "topics": [
      "constructive algorithms",
      "math",
      "number theory"
    ],
    "id": "1110C"
  },
  {
    "title": "Parity",
    "url": "https://codeforces.com/problemset/problem/1110/A",
    "history": "You are given an integer n ( n \u2265 0 ) represented with k digits in base ( radix) b . So, n = a_ 1 \u00b7 b^ k- 1 + a_ 2 \u00b7 b^ k- 2 + . . . a_ k- 1\u00b7 b + a_ k. For example, if b= 17, k= 3 and a= [ 11, 15, 7] then n= 11\u00b717^ 2+ 15\u00b717+ 7= 3179+ 255+ 7= 3441 . Determine whether n is even or odd.",
    "input": "The first line contains two integers b and k ( 2\u2264 b\u2264 100 , 1\u2264 k\u2264 10^ 5 ) \u2014 the base of the number and the number of digits. The second line contains k integers a_ 1, a_ 2, . . . , a_ k ( 0\u2264 a_ i < b ) \u2014 the digits of n . The representation of n contains no unnecessary leading zero. That is, a_ 1 can be equal to 0 only if k = 1 .",
    "output": "Print \" even\" if n is even, otherwise print \" odd\" . You can print each letter in any case ( upper or lower) .",
    "note": "In the first example, n = 3 \u00b7 13^ 2 + 2 \u00b7 13 + 7 = 540 , which is even. In the second example, n = 123456789 is odd. In the third example, n = 32 \u00b7 99^ 4 + 92 \u00b7 99^ 3 + 85 \u00b7 99^ 2 + 74 \u00b7 99 + 4 = 3164015155 is odd. In the fourth example n = 2 .",
    "topics": [
      "math"
    ],
    "id": "1110A"
  },
  {
    "title": "Sasha and Interesting Fact from Graph Theory",
    "url": "https://codeforces.com/problemset/problem/1109/D",
    "history": "Once, during a lesson, Sasha got bored and decided to talk with his friends. Suddenly, he saw Kefa. Since we can talk endlessly about Kefa, we won' t even start doing that. The conversation turned to graphs. Kefa promised Sasha to tell him about one interesting fact from graph theory if Sasha helps Kefa to count the number of beautiful trees. In this task, a tree is a weighted connected graph, consisting of n vertices and n- 1 edges, and weights of edges are integers from 1 to m . Kefa determines the beauty of a tree as follows: he finds in the tree his two favorite vertices \u2014 vertices with numbers a and b , and counts the distance between them. The distance between two vertices x and y is the sum of weights of edges on the simple path from x to y . If the distance between two vertices a and b is equal to m , then the tree is beautiful. Sasha likes graph theory, and even more, Sasha likes interesting facts, that' s why he agreed to help Kefa. Luckily, Sasha is familiar with you the best programmer in Byteland. Help Sasha to count the number of beautiful trees for Kefa. Two trees are considered to be distinct if there is an edge that occurs in one of them and doesn' t occur in the other one. Edge' s weight matters. Kefa warned Sasha, that there can be too many beautiful trees, so it will be enough to count the number modulo 10^ 9 + 7 .",
    "input": "The first line contains four integers n , m , a , b ( 2 \u2264 n \u2264 10^ 6 , 1 \u2264 m \u2264 10^ 6 , 1 \u2264 a, b \u2264 n , a = \u0338 b ) \u2014 the number of vertices in the tree, the maximum weight of an edge and two Kefa' s favorite vertices.",
    "output": "Print one integer \u2014 the number of beautiful trees modulo 10^ 9+ 7 .",
    "note": "There are 5 beautiful trees in the first example: In the second example the following trees are beautiful:",
    "topics": [
      "brute force",
      "combinatorics",
      "dp",
      "math",
      "trees"
    ],
    "id": "1109D"
  },
  {
    "title": "Nice Garland",
    "url": "https://codeforces.com/problemset/problem/1108/C",
    "history": "You have a garland consisting of n lamps. Each lamp is colored red, green or blue. The color of the i - th lamp is s_ i ( ' R' , ' G' and ' B' \u2014 colors of lamps in the garland) . You have to recolor some lamps in this garland ( recoloring a lamp means changing its initial color to another) in such a way that the obtained garland is nice. A garland is called nice if any two lamps of the same color have distance divisible by three between them. I. e. if the obtained garland is t , then for each i, j such that t_ i = t_ j should be satisfied | i- j| mod 3 = 0 . The value | x| means absolute value of x , the operation x mod y means remainder of x when divided by y . For example, the following garlands are nice: \" RGBRGBRG\" , \" GB\" , \" R\" , \" GRBGRBG\" , \" BRGBRGB\" . The following garlands are not nice: \" RR\" , \" RGBG\" . Among all ways to recolor the initial garland to make it nice you have to choose one with the minimum number of recolored lamps. If there are multiple optimal solutions, print any of them.",
    "input": "The first line of the input contains one integer n ( 1 \u2264 n \u2264 2 \u00b7 10^ 5 ) \u2014 the number of lamps. The second line of the input contains the string s consisting of n characters ' R' , ' G' and ' B' \u2014 colors of lamps in the garland.",
    "output": "In the first line of the output print one integer r \u2014 the minimum number of recolors needed to obtain a nice garland from the given one. In the second line of the output print one string t of length n \u2014 a nice garland obtained from the initial one with minimum number of recolors. If there are multiple optimal solutions, print any of them.",
    "note": "",
    "topics": [
      "brute force",
      "greedy",
      "math"
    ],
    "id": "1108C"
  },
  {
    "title": "Divisors of Two Integers",
    "url": "https://codeforces.com/problemset/problem/1108/B",
    "history": "Recently you have received two positive integer numbers x and y . You forgot them, but you remembered a shuffled list containing all divisors of x ( including 1 and x ) and all divisors of y ( including 1 and y ) . If d is a divisor of both numbers x and y at the same time, there are two occurrences of d in the list. For example, if x= 4 and y= 6 then the given list can be any permutation of the list [ 1, 2, 4, 1, 2, 3, 6] . Some of the possible lists are: [ 1, 1, 2, 4, 6, 3, 2] , [ 4, 6, 1, 1, 2, 3, 2] or [ 1, 6, 3, 2, 4, 1, 2] . Your problem is to restore suitable positive integer numbers x and y that would yield the same list of divisors ( possibly in different order) . It is guaranteed that the answer exists, i. e. the given list of divisors corresponds to some positive integers x and y .",
    "input": "The first line contains one integer n ( 2 \u2264 n \u2264 128 ) \u2014 the number of divisors of x and y . The second line of the input contains n integers d_ 1, d_ 2, . . . , d_ n ( 1 \u2264 d_ i \u2264 10^ 4 ) , where d_ i is either divisor of x or divisor of y . If a number is divisor of both numbers x and y then there are two copies of this number in the list.",
    "output": "Print two positive integer numbers x and y \u2014 such numbers that merged list of their divisors is the permutation of the given list of integers. It is guaranteed that the answer exists.",
    "note": "",
    "topics": [
      "brute force",
      "greedy",
      "math",
      "number theory"
    ],
    "id": "1108B"
  },
  {
    "title": "Compression",
    "url": "https://codeforces.com/problemset/problem/1107/D",
    "history": "You are given a binary matrix A of size n \u00d7 n . Let' s denote an x - compression of the given matrix as a matrix B of size n/ x\u00d7n/ x such that for every i \u2208 [ 1, n] , j \u2208 [ 1, n] the condition A[ i] [ j] = B[ \u2308i/ x\u2309] [ \u2308j/ x\u2309] is met. Obviously, x - compression is possible only if x divides n , but this condition is not enough. For example, the following matrix of size 2 \u00d7 2 does not have any 2 - compression: 01 10 For the given matrix A , find maximum x such that an x - compression of this matrix is possible. Note that the input is given in compressed form. But even though it is compressed, you' d better use fast input.",
    "input": "The first line contains one number n ( 4 \u2264 n \u2264 5200 ) \u2014 the number of rows and columns in the matrix A . It is guaranteed that n is divisible by 4 . Then the representation of matrix follows. Each of n next lines contains n/ 4 one- digit hexadecimal numbers ( that is, these numbers can be represented either as digits from 0 to 9 or as uppercase Latin letters from A to F ) . Binary representation of each of these numbers denotes next 4 elements of the matrix in the corresponding row. For example, if the number B is given, then the corresponding elements are 1011, and if the number is 5 , then the corresponding elements are 0101. Elements are not separated by whitespaces.",
    "output": "Print one number: maximum x such that an x - compression of the given matrix is possible.",
    "note": "The first example corresponds to the matrix: 11100111 11100111 11100111 00000000 00000000 11100111 11100111 11100111 It is easy to see that the answer on this example is 1 .",
    "topics": [
      "dp",
      "implementation",
      "math",
      "number theory"
    ],
    "id": "1107D"
  },
  {
    "title": "Digital root",
    "url": "https://codeforces.com/problemset/problem/1107/B",
    "history": "Today at the lesson of mathematics, Petya learns about the digital root. The digital root of a non- negative integer is the single digit value obtained by an iterative process of summing digits, on each iteration using the result from the previous iteration to compute a digit sum. The process continues until a single- digit number is reached. Let' s denote the digital root of x as S( x) . Then S( 5) = 5 , S( 38) = S( 3+ 8= 11) = S( 1+ 1= 2) = 2 , S( 10) = S( 1+ 0= 1) = 1 . As a homework Petya got n tasks of the form: find k - th positive number whose digital root is x . Petya has already solved all the problems, but he doesn' t know if it' s right. Your task is to solve all n tasks from Petya' s homework.",
    "input": "The first line contains a single integer n ( 1 \u2264 n \u2264 10^ 3 ) \u2014 the number of tasks in Petya' s homework. The next n lines contain two integers k_ i ( 1 \u2264 k_ i \u2264 10^ 12 ) and x_ i ( 1 \u2264 x_ i \u2264 9 ) \u2014 i - th Petya' s task in which you need to find a k_ i - th positive number, the digital root of which is x_ i .",
    "output": "Output n lines, i - th line should contain a single integer \u2014 the answer to the i - th problem.",
    "note": "",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "1107B"
  },
  {
    "title": "Lunar New Year and a Recursive Sequence",
    "url": "https://codeforces.com/problemset/problem/1106/F",
    "history": "Lunar New Year is approaching, and Bob received a gift from his friend recently \u2014 a recursive sequence! He loves this sequence very much and wants to play with it. Let f_ 1, f_ 2, . . . , f_ i, . . . be an infinite sequence of positive integers. Bob knows that for i > k , f_ i can be obtained by the following recursive equation: f_ i = ( f_ i - 1 ^ b_ 1\u00b7 f_ i - 2 ^ b_ 2\u00b7\u22ef\u00b7 f_ i - k ^ b_ k) p, which in short is f_ i = ( \u220f_ j = 1^ k f_ i - j^ b_ j) p, where p = 998 244 353 ( a widely- used prime) , b_ 1, b_ 2, . . . , b_ k are known integer constants, and x y denotes the remainder of x divided by y . Bob lost the values of f_ 1, f_ 2, . . . , f_ k , which is extremely troublesome \u2013 these are the basis of the sequence! Luckily, Bob remembers the first k - 1 elements of the sequence: f_ 1 = f_ 2 = . . . = f_ k - 1 = 1 and the n - th element: f_ n = m . Please find any possible value of f_ k . If no solution exists, just tell Bob that it is impossible to recover his favorite sequence, regardless of Bob' s sadness.",
    "input": "The first line contains a positive integer k ( 1 \u2264 k \u2264 100 ) , denoting the length of the sequence b_ 1, b_ 2, . . . , b_ k . The second line contains k positive integers b_ 1, b_ 2, . . . , b_ k ( 1 \u2264 b_ i < p ) . The third line contains two positive integers n and m ( k < n \u2264 10^ 9 , 1 \u2264 m < p ) , which implies f_ n = m .",
    "output": "Output a possible value of f_ k , where f_ k is a positive integer satisfying 1 \u2264 f_ k < p . If there are multiple answers, print any of them. If no such f_ k makes f_ n = m , output - 1 instead. It is easy to show that if there are some possible values of f_ k , there must be at least one satisfying 1 \u2264 f_ k < p .",
    "note": "In the first sample, we have f_ 4 = f_ 3^ 2 \u00b7 f_ 2^ 3 \u00b7 f_ 1^ 5 . Therefore, applying f_ 3 = 4 , we have f_ 4 = 16 . Note that there can be multiple answers. In the third sample, applying f_ 7 = 1 makes f_ 23333 = 1 . In the fourth sample, no such f_ 1 makes f_ 88888 = 66666 . Therefore, we output - 1 instead.",
    "topics": [
      "math",
      "matrices",
      "number theory"
    ],
    "id": "1106F"
  },
  {
    "title": "Lunar New Year and Number Division",
    "url": "https://codeforces.com/problemset/problem/1106/C",
    "history": "Lunar New Year is approaching, and Bob is struggling with his homework \u2013 a number division problem. There are n positive integers a_ 1, a_ 2, . . . , a_ n on Bob' s homework paper, where n is always an even number. Bob is asked to divide those numbers into groups, where each group must contain at least 2 numbers. Suppose the numbers are divided into m groups, and the sum of the numbers in the j - th group is s_ j . Bob' s aim is to minimize the sum of the square of s_ j , that is \u2211_ j = 1^ m s_ j^ 2. Bob is puzzled by this hard problem. Could you please help him solve it?",
    "input": "The first line contains an even integer n ( 2 \u2264 n \u2264 3 \u00b7 10^ 5 ) , denoting that there are n integers on Bob' s homework paper. The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 4 ) , describing the numbers you need to deal with.",
    "output": "A single line containing one integer, denoting the minimum of the sum of the square of s_ j , which is \u2211_ i = j^ m s_ j^ 2, where m is the number of groups.",
    "note": "In the first sample, one of the optimal solutions is to divide those 4 numbers into 2 groups { 2, 8} , { 5, 3} . Thus the answer is ( 2 + 8) ^ 2 + ( 5 + 3) ^ 2 = 164 . In the second sample, one of the optimal solutions is to divide those 6 numbers into 3 groups { 1, 2} , { 1, 2} , { 1, 2} . Thus the answer is ( 1 + 2) ^ 2 + ( 1 + 2) ^ 2 + ( 1 + 2) ^ 2 = 27 .",
    "topics": [
      "greedy",
      "implementation",
      "math",
      "sortings"
    ],
    "id": "1106C"
  },
  {
    "title": "Ayoub and Lost Array",
    "url": "https://codeforces.com/problemset/problem/1105/C",
    "history": "Ayoub had an array a of integers of size n and this array had two interesting properties: All the integers in the array were between l and r ( inclusive) . The sum of all the elements was divisible by 3 . Unfortunately, Ayoub has lost his array, but he remembers the size of the array n and the numbers l and r , so he asked you to find the number of ways to restore the array. Since the answer could be very large, print it modulo 10^ 9 + 7 ( i. e. the remainder when dividing by 10^ 9 + 7 ) . In case there are no satisfying arrays ( Ayoub has a wrong memory) , print 0 .",
    "input": "The first and only line contains three integers n , l and r ( 1 \u2264 n \u2264 2 \u00b7 10^ 5 , 1 \u2264 l \u2264 r \u2264 10^ 9 ) \u2014 the size of the lost array and the range of numbers in the array.",
    "output": "Print the remainder when dividing by 10^ 9 + 7 the number of ways to restore the array.",
    "note": "In the first example, the possible arrays are : [ 1, 2] , [ 2, 1] , [ 3, 3] . In the second example, the only possible array is [ 2, 2, 2] .",
    "topics": [
      "combinatorics",
      "dp",
      "math"
    ],
    "id": "1105C"
  },
  {
    "title": "Game with string",
    "url": "https://codeforces.com/problemset/problem/1104/B",
    "history": "Two people are playing a game with a string s , consisting of lowercase latin letters. On a player' s turn, he should choose two consecutive equal letters in the string and delete them. For example, if the string is equal to \" xaax\" than there is only one possible turn: delete \" aa\" , so the string will become \" xx\" . A player not able to make a turn loses. Your task is to determine which player will win if both play optimally.",
    "input": "The only line contains the string s , consisting of lowercase latin letters ( 1 \u2264 | s| \u2264 100 000 ) , where | s| means the length of a string s .",
    "output": "If the first player wins, print \" Yes\" . If the second player wins, print \" No\" .",
    "note": "In the first example the first player is unable to make a turn, so he loses. In the second example first player turns the string into \" q\" , then second player is unable to move, so he loses.",
    "topics": [
      "data structures",
      "implementation",
      "math"
    ],
    "id": "1104B"
  },
  {
    "title": "Splitting into digits",
    "url": "https://codeforces.com/problemset/problem/1104/A",
    "history": "Vasya has his favourite number n . He wants to split it to some non- zero digits. It means, that he wants to choose some digits d_ 1, d_ 2, . . . , d_ k , such that 1 \u2264 d_ i \u2264 9 for all i and d_ 1 + d_ 2 + . . . + d_ k = n . Vasya likes beauty in everything, so he wants to find any solution with the minimal possible number of different digits among d_ 1, d_ 2, . . . , d_ k . Help him!",
    "input": "The first line contains a single integer n \u2014 the number that Vasya wants to split ( 1 \u2264 n \u2264 1000 ) .",
    "output": "In the first line print one integer k \u2014 the number of digits in the partition. Note that k must satisfy the inequality 1 \u2264 k \u2264 n . In the next line print k digits d_ 1, d_ 2, . . . , d_ k separated by spaces. All digits must satisfy the inequalities 1 \u2264 d_ i \u2264 9 . You should find a partition of n in which the number of different digits among d_ 1, d_ 2, . . . , d_ k will be minimal possible among all partitions of n into non- zero digits. Among such partitions, it is allowed to find any. It is guaranteed that there exists at least one partition of the number n into digits.",
    "note": "In the first test, the number 1 can be divided into 1 digit equal to 1 . In the second test, there are 3 partitions of the number 4 into digits in which the number of different digits is 1 . This partitions are [ 1, 1, 1, 1] , [ 2, 2] and [ 4] . Any of these partitions can be found. And, for example, dividing the number 4 to the digits [ 1, 1, 2] isn' t an answer, because it has 2 different digits, that isn' t the minimum possible number.",
    "topics": [
      "constructive algorithms",
      "implementation",
      "math"
    ],
    "id": "1104A"
  },
  {
    "title": "Radix sum",
    "url": "https://codeforces.com/problemset/problem/1103/E",
    "history": "Let' s define radix sum of number a consisting of digits a_ 1, . . . , a_ k and number b consisting of digits b_ 1, . . . , b_ k ( we add leading zeroes to the shorter number to match longer length) as number s( a, b) consisting of digits ( a_ 1+ b_ 1) 10, . . . , ( a_ k+ b_ k) 10 . The radix sum of several integers is defined as follows: s( t_ 1, . . . , t_ n) = s( t_ 1, s( t_ 2, . . . , t_ n) ) You are given an array x_ 1, . . . , x_ n . The task is to compute for each integer i ( 0 \u2264 i < n) number of ways to consequently choose one of the integers from the array n times, so that the radix sum of these integers is equal to i . Calculate these values modulo 2^ 58 .",
    "input": "The first line contains integer n \u2014 the length of the array( 1 \u2264 n \u2264 100000 ) . The second line contains n integers x_ 1, . . . x_ n \u2014 array elements( 0 \u2264 x_ i < 100000 ) .",
    "output": "Output n integers y_ 0, . . . , y_ n- 1 \u2014 y_ i should be equal to corresponding number of ways modulo 2^ 58 .",
    "note": "In the first example there exist sequences: sequence ( 5, 5) with radix sum 0 , sequence ( 5, 6) with radix sum 1 , sequence ( 6, 5) with radix sum 1 , sequence ( 6, 6) with radix sum 2 .",
    "topics": [
      "fft",
      "math",
      "number theory"
    ],
    "id": "1103E"
  },
  {
    "title": "Johnny Solving",
    "url": "https://codeforces.com/problemset/problem/1103/C",
    "history": "Today is tuesday, that means there is a dispute in JOHNNY SOLVING team again: they try to understand who is Johnny and who is Solving. That' s why guys asked Umnik to help them. Umnik gave guys a connected graph with n vertices without loops and multiedges, such that a degree of any vertex is at least 3 , and also he gave a number 1 \u2264 k \u2264 n . Because Johnny is not too smart, he promised to find a simple path with length at least n/ k in the graph. In reply, Solving promised to find k simple by vertices cycles with representatives, such that: Length of each cycle is at least 3 . Length of each cycle is not divisible by 3 . In each cycle must be a representative - vertex, which belongs only to this cycle among all printed cycles. You need to help guys resolve the dispute, for that you need to find a solution for Johnny: a simple path with length at least n/ k ( n is not necessarily divided by k ) , or solution for Solving: k cycles that satisfy all the conditions above. If there is no any solution - print - 1 .",
    "input": "The first line contains three integers n , m and k ( 1 \u2264 k \u2264 n \u2264 2. 5 \u00b7 10^ 5, 1 \u2264 m \u2264 5 \u00b7 10^ 5 ) Next m lines describe edges of the graph in format v , u ( 1 \u2264 v, u \u2264 n ) . It' s guaranteed that v = \u0338 u and all m pairs are distinct. It' s guaranteed that a degree of each vertex is at least 3 .",
    "output": "Print PATH in the first line, if you solve problem for Johnny. In the second line print the number of vertices in the path c ( c \u2265n/ k ) . And in the third line print vertices describing the path in route order. Print CYCLES in the first line, if you solve problem for Solving. In the following lines describe exactly k cycles in the following format: in the first line print the size of the cycle c ( c \u2265 3 ) . In the second line print the cycle in route order. Also, the first vertex in the cycle must be a representative. Print - 1 if there is no any solution. The total amount of printed numbers in the output must be at most 10^ 6 . It' s guaranteed, that if exists any solution then there is a correct output satisfies this restriction.",
    "note": "",
    "topics": [
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "math"
    ],
    "id": "1103C"
  },
  {
    "title": "Integer Sequence Dividing",
    "url": "https://codeforces.com/problemset/problem/1102/A",
    "history": "You are given an integer sequence 1, 2, . . . , n . You have to divide it into two sets A and B in such a way that each element belongs to exactly one set and | sum( A) - sum( B) | is minimum possible. The value | x| is the absolute value of x and sum( S) is the sum of elements of the set S .",
    "input": "The first line of the input contains one integer n ( 1 \u2264 n \u2264 2 \u00b7 10^ 9 ) .",
    "output": "Print one integer \u2014 the minimum possible value of | sum( A) - sum( B) | if you divide the initial sequence 1, 2, . . . , n into two sets A and B .",
    "note": "Some ( not all) possible answers to examples: In the first example you can divide the initial sequence into sets A = { 1, 2} and B = { 3} so the answer is 0 . In the second example you can divide the initial sequence into sets A = { 1, 3, 4} and B = { 2, 5} so the answer is 1 . In the third example you can divide the initial sequence into sets A = { 1, 4, 5} and B = { 2, 3, 6} so the answer is 1 .",
    "topics": [
      "math"
    ],
    "id": "1102A"
  },
  {
    "title": "(Zero XOR Subset)-less",
    "url": "https://codeforces.com/problemset/problem/1101/G",
    "history": "You are given an array a_ 1, a_ 2, . . . , a_ n of integer numbers. Your task is to divide the array into the maximum number of segments in such a way that: each element is contained in exactly one segment; each segment contains at least one element; there doesn' t exist a non- empty subset of segments such that bitwise XOR of the numbers from them is equal to 0 . Print the maximum number of segments the array can be divided into. Print - 1 if no suitable division exists.",
    "input": "The first line contains a single integer n ( 1 \u2264 n \u2264 2 \u00b7 10^ 5 ) \u2014 the size of the array. The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 0 \u2264 a_ i \u2264 10^ 9 ) .",
    "output": "Print the maximum number of segments the array can be divided into while following the given constraints. Print - 1 if no suitable division exists.",
    "note": "In the first example 2 is the maximum number. If you divide the array into { [ 5] , [ 5, 7, 2] } , the XOR value of the subset of only the second segment is 5 \u2295 7 \u2295 2 = 0 . { [ 5, 5] , [ 7, 2] } has the value of the subset of only the first segment being 5 \u2295 5 = 0 . However, { [ 5, 5, 7] , [ 2] } will lead to subsets { [ 5, 5, 7] } of XOR 7 , { [ 2] } of XOR 2 and { [ 5, 5, 7] , [ 2] } of XOR 5 \u2295 5 \u2295 7 \u2295 2 = 5 . Let' s take a look at some division on 3 segments \u2014 { [ 5] , [ 5, 7] , [ 2] } . It will produce subsets: { [ 5] } , XOR 5 ; { [ 5, 7] } , XOR 2 ; { [ 5] , [ 5, 7] } , XOR 7 ; { [ 2] } , XOR 2 ; { [ 5] , [ 2] } , XOR 7 ; { [ 5, 7] , [ 2] } , XOR 0 ; { [ 5] , [ 5, 7] , [ 2] } , XOR 5 ; As you can see, subset { [ 5, 7] , [ 2] } has its XOR equal to 0 , which is unacceptable. You can check that for other divisions of size 3 or 4 , non- empty subset with 0 XOR always exists. The second example has no suitable divisions. The third example array can be divided into { [ 3] , [ 1] , [ 10] } . No subset of these segments has its XOR equal to 0 .",
    "topics": [
      "math",
      "matrices"
    ],
    "id": "1101G"
  },
  {
    "title": "Minimum Integer",
    "url": "https://codeforces.com/problemset/problem/1101/A",
    "history": "You are given q queries in the following form: Given three integers l_ i , r_ i and d_ i , find minimum positive integer x_ i such that it is divisible by d_ i and it does not belong to the segment [ l_ i, r_ i] . Can you answer all the queries? Recall that a number x belongs to segment [ l, r] if l \u2264 x \u2264 r .",
    "input": "The first line contains one integer q ( 1 \u2264 q \u2264 500 ) \u2014 the number of queries. Then q lines follow, each containing a query given in the format l_ i r_ i d_ i ( 1 \u2264 l_ i \u2264 r_ i \u2264 10^ 9 , 1 \u2264 d_ i \u2264 10^ 9 ) . l_ i , r_ i and d_ i are integers.",
    "output": "For each query print one integer: the answer to this query.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": "1101A"
  },
  {
    "title": "Ivan and Burgers",
    "url": "https://codeforces.com/problemset/problem/1100/F",
    "history": "Ivan loves burgers and spending money. There are n burger joints on the street where Ivan lives. Ivan has q friends, and the i - th friend suggested to meet at the joint l_ i and walk to the joint r_ i ( l_ i \u2264 r_ i) . While strolling with the i - th friend Ivan can visit all joints x which satisfy l_ i \u2264 x \u2264 r_ i . For each joint Ivan knows the cost of the most expensive burger in it, it costs c_ i burles. Ivan wants to visit some subset of joints on his way, in each of them he will buy the most expensive burger and spend the most money. But there is a small issue: his card broke and instead of charging him for purchases, the amount of money on it changes as follows. If Ivan had d burles before the purchase and he spent c burles at the joint, then after the purchase he would have d \u2295 c burles, where \u2295 denotes the bitwise XOR operation. Currently Ivan has 2^ 2^ 100 - 1 burles and he wants to go out for a walk. Help him to determine the maximal amount of burles he can spend if he goes for a walk with the friend i . The amount of burles he spends is defined as the difference between the initial amount on his account and the final account.",
    "input": "The first line contains one integer n ( 1 \u2264 n \u2264 500 000 ) \u2014 the number of burger shops. The next line contains n integers c_ 1, c_ 2, . . . , c_ n ( 0 \u2264 c_ i \u2264 10^ 6 ) , where c_ i \u2014 the cost of the most expensive burger in the burger joint i . The third line contains one integer q ( 1 \u2264 q \u2264 500 000 ) \u2014 the number of Ivan' s friends. Each of the next q lines contain two integers l_ i and r_ i ( 1 \u2264 l_ i \u2264 r_ i \u2264 n ) \u2014 pairs of numbers of burger shops between which Ivan will walk.",
    "output": "Output q lines, i - th of which containing the maximum amount of money Ivan can spend with the friend i .",
    "note": "In the first test, in order to spend the maximum amount of money with the first and third friends, Ivan just needs to go into the first burger. With a second friend, Ivan just go to the third burger. In the second test for a third friend ( who is going to walk from the first to the third burger) , there are only 8 options to spend money \u2014 0 , 12 , 14 , 23 , 12 \u2295 14 = 2 , 14 \u2295 23 = 25 , 12 \u2295 23 = 27 , 12 \u2295 14 \u2295 23 = 20 . The maximum amount of money it turns out to spend, if you go to the first and third burger \u2014 12 \u2295 23 = 27 .",
    "topics": [
      "data structures",
      "divide and conquer",
      "greedy",
      "math"
    ],
    "id": "1100F"
  },
  {
    "title": "NN and the Optical Illusion",
    "url": "https://codeforces.com/problemset/problem/1100/C",
    "history": "NN is an experienced internet user and that means he spends a lot of time on the social media. Once he found the following image on the Net, which asked him to compare the sizes of inner circles: It turned out that the circles are equal. NN was very surprised by this fact, so he decided to create a similar picture himself. He managed to calculate the number of outer circles n and the radius of the inner circle r . NN thinks that, using this information, you can exactly determine the radius of the outer circles R so that the inner circle touches all of the outer ones externally and each pair of neighboring outer circles also touches each other. While NN tried very hard to guess the required radius, he didn' t manage to do that. Help NN find the required radius for building the required picture.",
    "input": "The first and the only line of the input file contains two numbers n and r ( 3 \u2264 n \u2264 100 , 1 \u2264 r \u2264 100 ) \u2014 the number of the outer circles and the radius of the inner circle respectively.",
    "output": "Output a single number R \u2014 the radius of the outer circle required for building the required picture. Your answer will be accepted if its relative or absolute error does not exceed 10^ - 6 . Formally, if your answer is a and the jury' s answer is b . Your answer is accepted if and only when | a- b| / max( 1, | b| ) \u2264 10^ - 6 .",
    "note": "",
    "topics": [
      "binary search",
      "geometry",
      "math"
    ],
    "id": "1100C"
  },
  {
    "title": "Squares and Segments",
    "url": "https://codeforces.com/problemset/problem/1099/B",
    "history": "Little Sofia is in fourth grade. Today in the geometry lesson she learned about segments and squares. On the way home, she decided to draw n squares in the snow with a side length of 1 . For simplicity, we assume that Sofia lives on a plane and can draw only segments of length 1 , parallel to the coordinate axes, with vertices at integer points. In order to draw a segment, Sofia proceeds as follows. If she wants to draw a vertical segment with the coordinates of the ends ( x, y) and ( x, y+ 1) . Then Sofia looks if there is already a drawn segment with the coordinates of the ends ( x' , y) and ( x' , y+ 1) for some x' . If such a segment exists, then Sofia quickly draws a new segment, using the old one as a guideline. If there is no such segment, then Sofia has to take a ruler and measure a new segment for a long time. Same thing happens when Sofia wants to draw a horizontal segment, but only now she checks for the existence of a segment with the same coordinates x , x+ 1 and the differing coordinate y . For example, if Sofia needs to draw one square, she will have to draw two segments using a ruler: After that, she can draw the remaining two segments, using the first two as a guide: If Sofia needs to draw two squares, she will have to draw three segments using a ruler: After that, she can draw the remaining four segments, using the first three as a guide: Sofia is in a hurry, so she wants to minimize the number of segments that she will have to draw with a ruler without a guide. Help her find this minimum number.",
    "input": "The only line of input contains a single integer n ( 1 \u2264 n \u2264 10^ 9 ) , the number of squares that Sofia wants to draw.",
    "output": "Print single integer, the minimum number of segments that Sofia will have to draw with a ruler without a guide in order to draw n squares in the manner described above.",
    "note": "",
    "topics": [
      "binary search",
      "constructive algorithms",
      "math"
    ],
    "id": "1099B"
  },
  {
    "title": "Fedya the Potter",
    "url": "https://codeforces.com/problemset/problem/1098/E",
    "history": "Fedya loves problems involving data structures. Especially ones about different queries on subsegments. Fedya had a nice array a_ 1, a_ 2, . . . a_ n and a beautiful data structure. This data structure, given l and r , 1 \u2264 l \u2264 r \u2264 n , could find the greatest integer d , such that d divides each of a_ l , a_ l+ 1 , . . . , a_ r . Fedya really likes this data structure, so he applied it to every non- empty contiguous subarray of array a , put all answers into the array and sorted it. He called this array b . It' s easy to see that array b contains n( n+ 1) / 2 elements. After that, Fedya implemented another cool data structure, that allowed him to find sum b_ l + b_ l+ 1 + . . . + b_ r for given l and r , 1 \u2264 l \u2264 r \u2264 n( n+ 1) / 2 . Surely, Fedya applied this data structure to every contiguous subarray of array b , called the result c and sorted it. Help Fedya find the lower median of array c . Recall that for a sorted array of length k the lower median is an element at position \u230ak + 1/ 2\u230b , if elements of the array are enumerated starting from 1 . For example, the lower median of array ( 1, 1, 2, 3, 6) is 2 , and the lower median of ( 0, 17, 23, 96) is 17 .",
    "input": "First line contains a single integer n \u2014 number of elements in array a ( 1 \u2264 n \u2264 50 000 ) . Second line contains n integers a_ 1, a_ 2, . . . , a_ n \u2014 elements of the array ( 1 \u2264 a_ i \u2264 100 000 ) .",
    "output": "Print a single integer \u2014 the lower median of array c .",
    "note": "In the first sample array b is equal to 3, 3, 6 , then array c is equal to 3, 3, 6, 6, 9, 12 , so the lower median is 6 . In the second sample b is 8, 8, 8 , c is 8, 8, 8, 16, 16, 24 , so the lower median is 8 .",
    "topics": [
      "binary search",
      "implementation",
      "math",
      "number theory"
    ],
    "id": "1098E"
  },
  {
    "title": "Nice table",
    "url": "https://codeforces.com/problemset/problem/1098/B",
    "history": "You are given an n \u00d7 m table, consisting of characters \u00abA\u00bb, \u00abG\u00bb, \u00abC\u00bb, \u00abT\u00bb. Let' s call a table nice, if every 2 \u00d7 2 square contains all four distinct characters. Your task is to find a nice table ( also consisting of \u00abA\u00bb, \u00abG\u00bb, \u00abC\u00bb, \u00abT\u00bb) , that differs from the given table in the minimum number of characters.",
    "input": "First line contains two positive integers n and m \u2014 number of rows and columns in the table you are given ( 2 \u2264 n, m, n \u00d7 m \u2264 300 000 ) . Then, n lines describing the table follow. Each line contains exactly m characters \u00abA\u00bb, \u00abG\u00bb, \u00abC\u00bb, \u00abT\u00bb.",
    "output": "Output n lines, m characters each. This table must be nice and differ from the input table in the minimum number of characters.",
    "note": "In the first sample, the table is already nice. In the second sample, you can change 9 elements to make the table nice.",
    "topics": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "math"
    ],
    "id": "1098B"
  },
  {
    "title": "Makoto and a Blackboard",
    "url": "https://codeforces.com/problemset/problem/1097/D",
    "history": "Makoto has a big blackboard with a positive integer n written on it. He will perform the following action exactly k times: Suppose the number currently written on the blackboard is v . He will randomly pick one of the divisors of v ( possibly 1 and v ) and replace v with this divisor. As Makoto uses his famous random number generator ( RNG) and as he always uses 58 as his generator seed, each divisor is guaranteed to be chosen with equal probability. He now wonders what is the expected value of the number written on the blackboard after k steps. It can be shown that this value can be represented as P/ Q where P and Q are coprime integers and Q \u2261\u03380 10^ 9+ 7 . Print the value of P \u00b7 Q^ - 1 modulo 10^ 9+ 7 .",
    "input": "The only line of the input contains two integers n and k ( 1 \u2264 n \u2264 10^ 15 , 1 \u2264 k \u2264 10^ 4 ) .",
    "output": "Print a single integer \u2014 the expected value of the number on the blackboard after k steps as P \u00b7 Q^ - 110^ 9+ 7 for P , Q defined above.",
    "note": "In the first example, after one step, the number written on the blackboard is 1 , 2 , 3 or 6 \u2014 each occurring with equal probability. Hence, the answer is 1+ 2+ 3+ 6/ 4= 3 . In the second example, the answer is equal to 1 \u00b79/ 16+ 2 \u00b73/ 16+ 3 \u00b73/ 16+ 6 \u00b71/ 16= 15/ 8 .",
    "topics": [
      "dp",
      "math",
      "number theory",
      "probabilities"
    ],
    "id": "1097D"
  },
  {
    "title": "Inversion Expectation",
    "url": "https://codeforces.com/problemset/problem/1096/F",
    "history": "A permutation of size n is an array of size n such that each integer from 1 to n occurs exactly once in this array. An inversion in a permutation p is a pair of indices ( i, j) such that i > j and a_ i < a_ j . For example, a permutation [ 4, 1, 3, 2] contains 4 inversions: ( 2, 1) , ( 3, 1) , ( 4, 1) , ( 4, 3) . You are given a permutation p of size n . However, the numbers on some positions are replaced by - 1 . Let the valid permutation be such a replacement of - 1 in this sequence back to numbers from 1 to n in such a way that the resulting sequence is a permutation of size n . The given sequence was turned into a valid permutation randomly with the equal probability of getting each valid permutation. Calculate the expected total number of inversions in the resulting valid permutation. It can be shown that it is in the form of P/ Q where P and Q are non- negative integers and Q 0 . Report the value of P \u00b7 Q^ - 1998244353 .",
    "input": "The first line contains a single integer n ( 1 \u2264 n \u2264 2 \u00b7 10^ 5 ) \u2014 the length of the sequence. The second line contains n integers p_ 1, p_ 2, . . . , p_ n ( - 1 \u2264 p_ i \u2264 n , p_ i 0 ) \u2014 the initial sequence. It is guaranteed that all elements not equal to - 1 are pairwise distinct.",
    "output": "Print a single integer \u2014 the expected total number of inversions in the resulting valid permutation. It can be shown that it is in the form of P/ Q where P and Q are non- negative integers and Q 0 . Report the value of P \u00b7 Q^ - 1998244353 .",
    "note": "In the first example two resulting valid permutations are possible: [ 3, 1, 2] \u2014 2 inversions; [ 3, 2, 1] \u2014 3 inversions. The expected value is 2 \u00b7 1 + 3 \u00b7 1/ 2 = 2. 5 . In the second example no - 1 are present, thus the only valid permutation is possible \u2014 the given one. It has 0 inversions. In the third example there are two resulting valid permutations \u2014 one with 0 inversions and one with 1 inversion.",
    "topics": [
      "dp",
      "math",
      "probabilities"
    ],
    "id": "1096F"
  },
  {
    "title": "The Top Scorer",
    "url": "https://codeforces.com/problemset/problem/1096/E",
    "history": "Hasan loves playing games and has recently discovered a game called TopScore. In this soccer- like game there are p players doing penalty shoot- outs. Winner is the one who scores the most. In case of ties, one of the top- scorers will be declared as the winner randomly with equal probability. They have just finished the game and now are waiting for the result. But there' s a tiny problem! The judges have lost the paper of scores! Fortunately they have calculated sum of the scores before they get lost and also for some of the players they have remembered a lower bound on how much they scored. However, the information about the bounds is private, so Hasan only got to know his bound. According to the available data, he knows that his score is at least r and sum of the scores is s . Thus the final state of the game can be represented in form of sequence of p integers a_ 1, a_ 2, . . . , a_ p ( 0 \u2264 a_ i ) \u2014 player' s scores. Hasan is player number 1 , so a_ 1 \u2265 r . Also a_ 1 + a_ 2 + . . . + a_ p = s . Two states are considered different if there exists some position i such that the value of a_ i differs in these states. Once again, Hasan doesn' t know the exact scores ( he doesn' t know his exact score as well) . So he considers each of the final states to be equally probable to achieve. Help Hasan find the probability of him winning. It can be shown that it is in the form of P/ Q where P and Q are non- negative integers and Q 0 , P \u2264 Q . Report the value of P \u00b7 Q^ - 1998244353 .",
    "input": "The only line contains three integers p , s and r ( 1 \u2264 p \u2264 100 , 0 \u2264 r \u2264 s \u2264 5000 ) \u2014 the number of players, the sum of scores of all players and Hasan' s score, respectively.",
    "output": "Print a single integer \u2014 the probability of Hasan winning. It can be shown that it is in the form of P/ Q where P and Q are non- negative integers and Q 0 , P \u2264 Q . Report the value of P \u00b7 Q^ - 1998244353 .",
    "note": "In the first example Hasan can score 3 , 4 , 5 or 6 goals. If he scores 4 goals or more than he scores strictly more than his only opponent. If he scores 3 then his opponent also scores 3 and Hasan has a probability of 1/ 2 to win the game. Thus, overall he has the probability of 7/ 8 to win. In the second example even Hasan' s lower bound on goal implies him scoring more than any of his opponents. Thus, the resulting probability is 1 .",
    "topics": [
      "combinatorics",
      "dp",
      "math",
      "probabilities"
    ],
    "id": "1096E"
  },
  {
    "title": "Substring Removal",
    "url": "https://codeforces.com/problemset/problem/1096/B",
    "history": "You are given a string s of length n consisting only of lowercase Latin letters. A substring of a string is a contiguous subsequence of that string. So, string \" forces\" is substring of string \" codeforces\" , but string \" coder\" is not. Your task is to calculate the number of ways to remove exactly one substring from this string in such a way that all remaining characters are equal ( the number of distinct characters either zero or one) . It is guaranteed that there is at least two different characters in s . Note that you can remove the whole string and it is correct. Also note that you should remove at least one character. Since the answer can be rather large ( not very large though) print it modulo 998244353 . If you are Python programmer, consider using PyPy instead of Python when you submit your code.",
    "input": "The first line of the input contains one integer n ( 2 \u2264 n \u2264 2 \u00b7 10^ 5 ) \u2014 the length of the string s . The second line of the input contains the string s of length n consisting only of lowercase Latin letters. It is guaranteed that there is at least two different characters in s .",
    "output": "Print one integer \u2014 the number of ways modulo 998244353 to remove exactly one substring from s in such way that all remaining characters are equal.",
    "note": "Let s[ l; r] be the substring of s from the position l to the position r inclusive. Then in the first example you can remove the following substrings: s[ 1; 2] ; s[ 1; 3] ; s[ 1; 4] ; s[ 2; 2] ; s[ 2; 3] ; s[ 2; 4] . In the second example you can remove the following substrings: s[ 1; 4] ; s[ 1; 5] ; s[ 1; 6] ; s[ 1; 7] ; s[ 2; 7] ; s[ 3; 7] . In the third example you can remove the following substrings: s[ 1; 1] ; s[ 1; 2] ; s[ 2; 2] .",
    "topics": [
      "combinatorics",
      "math",
      "strings"
    ],
    "id": "1096B"
  },
  {
    "title": "Find Divisible",
    "url": "https://codeforces.com/problemset/problem/1096/A",
    "history": "You are given a range of positive integers from l to r . Find such a pair of integers ( x, y) that l \u2264 x, y \u2264 r , x y and x divides y . If there are multiple answers, print any of them. You are also asked to answer T independent queries.",
    "input": "The first line contains a single integer T ( 1 \u2264 T \u2264 1000 ) \u2014 the number of queries. Each of the next T lines contains two integers l and r ( 1 \u2264 l \u2264 r \u2264 998244353 ) \u2014 inclusive borders of the range. It is guaranteed that testset only includes queries, which have at least one suitable pair.",
    "output": "Print T lines, each line should contain the answer \u2014 two integers x and y such that l \u2264 x, y \u2264 r , x y and x divides y . The answer in the i - th line should correspond to the i - th query from the input. If there are multiple answers, print any of them.",
    "note": "",
    "topics": [
      "greedy",
      "implementation",
      "math"
    ],
    "id": "1096A"
  },
  {
    "title": "Dice Rolling",
    "url": "https://codeforces.com/problemset/problem/1093/A",
    "history": "Mishka got a six- faced dice. It has integer numbers from 2 to 7 written on its faces ( all numbers on faces are different, so this is an almost usual dice) . Mishka wants to get exactly x points by rolling his dice. The number of points is just a sum of numbers written at the topmost face of the dice for all the rolls Mishka makes. Mishka doesn' t really care about the number of rolls, so he just wants to know any number of rolls he can make to be able to get exactly x points for them. Mishka is very lucky, so if the probability to get x points with chosen number of rolls is non- zero, he will be able to roll the dice in such a way. Your task is to print this number. It is guaranteed that at least one answer exists. Mishka is also very curious about different number of points to score so you have to answer t independent queries.",
    "input": "The first line of the input contains one integer t ( 1 \u2264 t \u2264 100 ) \u2014 the number of queries. Each of the next t lines contains one integer each. The i - th line contains one integer x_ i ( 2 \u2264 x_ i \u2264 100 ) \u2014 the number of points Mishka wants to get.",
    "output": "Print t lines. In the i - th line print the answer to the i - th query ( i. e. any number of rolls Mishka can make to be able to get exactly x_ i points for them) . It is guaranteed that at least one answer exists.",
    "note": "In the first query Mishka can roll a dice once and get 2 points. In the second query Mishka can roll a dice 3 times and get points 5 , 5 and 3 ( for example) . In the third query Mishka can roll a dice 8 times and get 5 points 7 times and 2 points with the remaining roll. In the fourth query Mishka can roll a dice 27 times and get 2 points 11 times, 3 points 6 times and 6 points 10 times.",
    "topics": [
      "math"
    ],
    "id": "1093A"
  },
  {
    "title": "Great Vova Wall (Version 1)",
    "url": "https://codeforces.com/problemset/problem/1092/D1",
    "history": "Vova' s family is building the Great Vova Wall ( named by Vova himself) . Vova' s parents, grandparents, grand- grandparents contributed to it. Now it' s totally up to Vova to put the finishing touches. The current state of the wall can be respresented by a sequence a of n integers, with a_ i being the height of the i - th part of the wall. Vova can only use 2 \u00d7 1 bricks to put in the wall ( he has infinite supply of them, however) . Vova can put bricks horizontally on the neighboring parts of the wall of equal height. It means that if for some i the current height of part i is the same as for part i + 1 , then Vova can put a brick there and thus increase both heights by 1. Obviously, Vova can' t put bricks in such a way that its parts turn out to be off the borders ( to the left of part 1 of the wall or to the right of part n of it) . The next paragraph is specific to the version 1 of the problem. Vova can also put bricks vertically. That means increasing height of any part of the wall by 2. Vova is a perfectionist, so he considers the wall completed when: all parts of the wall has the same height; the wall has no empty spaces inside it. Can Vova complete the wall using any amount of bricks ( possibly zero) ?",
    "input": "The first line contains a single integer n ( 1 \u2264 n \u2264 2 \u00b7 10^ 5 ) \u2014 the number of parts in the wall. The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 9 ) \u2014 the initial heights of the parts of the wall.",
    "output": "Print \" YES\" if Vova can complete the wall using any amount of bricks ( possibly zero) . Print \" NO\" otherwise.",
    "note": "In the first example Vova can put a brick on parts 2 and 3 to make the wall [ 2, 2, 2, 2, 5] and then put 3 bricks on parts 1 and 2 and 3 bricks on parts 3 and 4 to make it [ 5, 5, 5, 5, 5] . In the second example Vova can put a brick vertically on part 3 to make the wall [ 4, 5, 5] , then horizontally on parts 2 and 3 to make it [ 4, 6, 6] and then vertically on part 1 to make it [ 6, 6, 6] . In the third example the wall is already complete.",
    "topics": [
      "greedy",
      "implementation",
      "math"
    ],
    "id": "1092D1"
  },
  {
    "title": "New Year and the Factorisation Collaboration",
    "url": "https://codeforces.com/problemset/problem/1091/G",
    "history": "Integer factorisation is hard. The RSA Factoring Challenge offered 100 000 for factoring RSA- 1024 , a 1024 - bit long product of two prime numbers. To this date, nobody was able to claim the prize. We want you to factorise a 1024 - bit number. Since your programming language of choice might not offer facilities for handling large integers, we will provide you with a very simple calculator. To use this calculator, you can print queries on the standard output and retrieve the results from the standard input. The operations are as follows: + x y where x and y are integers between 0 and n- 1 . Returns ( x+ y) n . - x y where x and y are integers between 0 and n- 1 . Returns ( x- y) n . * x y where x and y are integers between 0 and n- 1 . Returns ( x \u00b7y) n . / x y where x and y are integers between 0 and n- 1 and y is coprime with n . Returns ( x \u00b7y^ - 1) n where y^ - 1 is multiplicative inverse of y modulo n . If y is not coprime with n , then - 1 is returned instead. sqrt x where x is integer between 0 and n- 1 coprime with n . Returns y such that y^ 2 n = x . If there are multiple such integers, only one of them is returned. If there are none, - 1 is returned instead. ^ x y where x and y are integers between 0 and n- 1 . Returns x^ y n . Find the factorisation of n that is a product of between 2 and 10 distinct prime numbers, all of form 4x + 3 for some integer x . Because of technical issues, we restrict number of requests to 100 . InteractionAfter printing a query do not forget to output end of line and flush the output. Otherwise you will get Idleness limit exceeded. To do this, use: fflush( stdout) or cout. flush( ) in C+ + ; System. out. flush( ) in Java; flush( output) in Pascal; stdout. flush( ) in Python; see documentation for other languages. The number of queries is not limited. However, your program must ( as always) fit in the time limit. The run time of the interactor is also counted towards the time limit. The maximum runtime of each query is given below. + x y \u2014 up to 1 ms. - x y \u2014 up to 1 ms. * x y \u2014 up to 1 ms. / x y \u2014 up to 350 ms. sqrt x \u2014 up to 80 ms. ^ x y \u2014 up to 350 ms. Note that the sample input contains extra empty lines so that it easier to read. The real input will not contain any empty lines and you do not need to output extra empty lines.",
    "input": "The only line contains a single integer n ( 21 \u2264 n \u2264 2^ 1024 ) . It is guaranteed that n is a product of between 2 and 10 distinct prime numbers, all of form 4x + 3 for some integer x .",
    "output": "You can print as many queries as you wish, adhering to the time limit ( see the Interaction section for more details) . When you think you know the answer, output a single line of form ! k p_ 1 p_ 2 . . . p_ k, where k is the number of prime factors of n , and p_ i are the distinct prime factors. You may print the factors in any order. Hacks inputFor hacks, use the following format: . The first should contain k ( 2 \u2264 k \u2264 10 ) \u2014 the number of prime factors of n . The second should contain k space separated integers p_ 1, p_ 2, . . . , p_ k ( 21 \u2264 n \u2264 2^ 1024 ) \u2014 the prime factors of n . All prime factors have to be of form 4x + 3 for some integer x . They all have to be distinct.",
    "note": "We start by reading the first line containing the integer n = 21 . Then, we ask for: ( 12 + 16) 21 = 28 21 = 7 . ( 6 - 10) 21 = - 4 21 = 17 . ( 8 \u00b7 15) 21 = 120 21 = 15 . ( 5 \u00b7 4^ - 1) 21 = ( 5 \u00b7 16) 21 = 80 21 = 17 . Square root of 16 . The answer is 11 , as ( 11 \u00b7 11) 21 = 121 21 = 16 . Note that the answer may as well be 10 . Square root of 5 . There is no x such that x^ 2 21 = 5 , so the output is - 1 . ( 6^ 12) 21 = 2176782336 21 = 15 . We conclude that our calculator is working, stop fooling around and realise that 21 = 3 \u00b7 7 .",
    "topics": [
      "interactive",
      "math",
      "number theory"
    ],
    "id": "1091G"
  },
  {
    "title": "New Year and the Acquaintance Estimation",
    "url": "https://codeforces.com/problemset/problem/1091/E",
    "history": "Bob is an active user of the social network Faithbug. On this network, people are able to engage in a mutual friendship. That is, if a is a friend of b , then b is also a friend of a . Each user thus has a non- negative amount of friends. This morning, somebody anonymously sent Bob the following link: graph realization problem and Bob wants to know who that was. In order to do that, he first needs to know how the social network looks like. He investigated the profile of every other person on the network and noted down the number of his friends. However, he neglected to note down the number of his friends. Help him find out how many friends he has. Since there may be many possible answers, print all of them.",
    "input": "The first line contains one integer n ( 1 \u2264 n \u2264 5 \u00b7 10^ 5 ) , the number of people on the network excluding Bob. The second line contains n numbers a_ 1, a_ 2, . . . , a_ n ( 0 \u2264 a_ i \u2264 n ) , with a_ i being the number of people that person i is a friend of.",
    "output": "Print all possible values of a_ n+ 1 \u2014 the amount of people that Bob can be friend of, in increasing order. If no solution exists, output - 1 .",
    "note": "In the first test case, the only solution is that everyone is friends with everyone. That is why Bob should have 3 friends. In the second test case, there are three possible solutions ( apart from symmetries) : a is friend of b , c is friend of d , and Bob has no friends, or a is a friend of b and both c and d are friends with Bob, or Bob is friends of everyone. The third case is impossible to solve, as the second person needs to be a friend with everybody, but the first one is a complete stranger.",
    "topics": [
      "binary search",
      "data structures",
      "graphs",
      "greedy",
      "implementation",
      "math",
      "sortings"
    ],
    "id": "1091E"
  },
  {
    "title": "New Year and the Permutation Concatenation",
    "url": "https://codeforces.com/problemset/problem/1091/D",
    "history": "Let n be an integer. Consider all permutations on integers 1 to n in lexicographic order, and concatenate them into one big sequence p . For example, if n = 3 , then p = [ 1, 2, 3, 1, 3, 2, 2, 1, 3, 2, 3, 1, 3, 1, 2, 3, 2, 1] . The length of this sequence will be n \u00b7 n! . Let 1 \u2264 i \u2264 j \u2264 n \u00b7 n! be a pair of indices. We call the sequence ( p_ i, p_ i+ 1, . . . , p_ j- 1, p_ j) a subarray of p . Its length is defined as the number of its elements, i. e. , j - i + 1 . Its sum is the sum of all its elements, i. e. , \u2211_ k= i^ j p_ k . You are given n . Find the number of subarrays of p of length n having sum n( n+ 1) / 2 . Since this number may be large, output it modulo 998244353 ( a prime number) .",
    "input": "The only line contains one integer n ( 1 \u2264 n \u2264 10^ 6 ) , as described in the problem statement.",
    "output": "Output a single integer \u2014 the number of subarrays of length n having sum n( n+ 1) / 2 , modulo 998244353 .",
    "note": "In the first sample, there are 16 subarrays of length 3 . In order of appearance, they are: [ 1, 2, 3] , [ 2, 3, 1] , [ 3, 1, 3] , [ 1, 3, 2] , [ 3, 2, 2] , [ 2, 2, 1] , [ 2, 1, 3] , [ 1, 3, 2] , [ 3, 2, 3] , [ 2, 3, 1] , [ 3, 1, 3] , [ 1, 3, 1] , [ 3, 1, 2] , [ 1, 2, 3] , [ 2, 3, 2] , [ 3, 2, 1] . Their sums are 6 , 6 , 7 , 6 , 7 , 5 , 6 , 6 , 8 , 6 , 7 , 5 , 6 , 6 , 7 , 6 . As n( n+ 1) / 2 = 6 , the answer is 9 .",
    "topics": [
      "combinatorics",
      "dp",
      "math"
    ],
    "id": "1091D"
  },
  {
    "title": "New Year and the Sphere Transmission",
    "url": "https://codeforces.com/problemset/problem/1091/C",
    "history": "There are n people sitting in a circle, numbered from 1 to n in the order in which they are seated. That is, for all i from 1 to n- 1 , the people with id i and i+ 1 are adjacent. People with id n and 1 are adjacent as well. The person with id 1 initially has a ball. He picks a positive integer k at most n , and passes the ball to his k - th neighbour in the direction of increasing ids, that person passes the ball to his k - th neighbour in the same direction, and so on until the person with the id 1 gets the ball back. When he gets it back, people do not pass the ball any more. For instance, if n = 6 and k = 4 , the ball is passed in order [ 1, 5, 3, 1] . Consider the set of all people that touched the ball. The fun value of the game is the sum of the ids of people that touched it. In the above example, the fun value would be 1 + 5 + 3 = 9 . Find and report the set of possible fun values for all choices of positive integer k . It can be shown that under the constraints of the problem, the ball always gets back to the 1 - st player after finitely many steps, and there are no more than 10^ 5 possible fun values for given n .",
    "input": "The only line consists of a single integer n ( 2 \u2264 n \u2264 10^ 9 ) \u2014 the number of people playing with the ball.",
    "output": "Suppose the set of all fun values is f_ 1, f_ 2, . . . , f_ m . Output a single line containing m space separated integers f_ 1 through f_ m in increasing order.",
    "note": "In the first sample, we' ve already shown that picking k = 4 yields fun value 9 , as does k = 2 . Picking k = 6 results in fun value of 1 . For k = 3 we get fun value 5 and with k = 1 or k = 5 we get 21 . In the second sample, the values 1 , 10 , 28 , 64 and 136 are achieved for instance for k = 16 , 8 , 4 , 10 and 11 , respectively.",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "1091C"
  },
  {
    "title": "New Year and the Christmas Ornament",
    "url": "https://codeforces.com/problemset/problem/1091/A",
    "history": "Alice and Bob are decorating a Christmas Tree. Alice wants only 3 types of ornaments to be used on the Christmas Tree: yellow, blue and red. They have y yellow ornaments, b blue ornaments and r red ornaments. In Bob' s opinion, a Christmas Tree will be beautiful if: the number of blue ornaments used is greater by exactly 1 than the number of yellow ornaments, and the number of red ornaments used is greater by exactly 1 than the number of blue ornaments. That is, if they have 8 yellow ornaments, 13 blue ornaments and 9 red ornaments, we can choose 4 yellow, 5 blue and 6 red ornaments ( 5= 4+ 1 and 6= 5+ 1 ) . Alice wants to choose as many ornaments as possible, but she also wants the Christmas Tree to be beautiful according to Bob' s opinion. In the example two paragraphs above, we would choose 7 yellow, 8 blue and 9 red ornaments. If we do it, we will use 7+ 8+ 9= 24 ornaments. That is the maximum number. Since Alice and Bob are busy with preparing food to the New Year' s Eve, they are asking you to find out the maximum number of ornaments that can be used in their beautiful Christmas Tree! It is guaranteed that it is possible to choose at least 6 ( 1+ 2+ 3= 6 ) ornaments.",
    "input": "The only line contains three integers y , b , r ( 1 \u2264 y \u2264 100 , 2 \u2264 b \u2264 100 , 3 \u2264 r \u2264 100 ) \u2014 the number of yellow, blue and red ornaments. It is guaranteed that it is possible to choose at least 6 ( 1+ 2+ 3= 6 ) ornaments.",
    "output": "Print one number \u2014 the maximum number of ornaments that can be used.",
    "note": "In the first example, the answer is 7+ 8+ 9= 24 . In the second example, the answer is 2+ 3+ 4= 9 .",
    "topics": [
      "brute force",
      "implementation",
      "math"
    ],
    "id": "1091A"
  },
  {
    "title": "Guest Student",
    "url": "https://codeforces.com/problemset/problem/1089/G",
    "history": "Berland State University invites people from all over the world as guest students. You can come to the capital of Berland and study with the best teachers in the country. Berland State University works every day of the week, but classes for guest students are held on the following schedule. You know the sequence of seven integers a_ 1, a_ 2, . . . , a_ 7 ( a_ i = 0 or a_ i = 1 ) : a_ 1= 1 if and only if there are classes for guest students on Sundays; a_ 2= 1 if and only if there are classes for guest students on Mondays; . . . a_ 7= 1 if and only if there are classes for guest students on Saturdays. The classes for guest students are held in at least one day of a week. You want to visit the capital of Berland and spend the minimum number of days in it to study k days as a guest student in Berland State University. Write a program to find the length of the shortest continuous period of days to stay in the capital to study exactly k days as a guest student.",
    "input": "The first line of the input contains integer t ( 1 \u2264 t \u2264 10 000 ) \u2014 the number of test cases to process. For each test case independently solve the problem and print the answer. Each test case consists of two lines. The first of them contains integer k ( 1 \u2264 k \u2264 10^ 8 ) \u2014 the required number of days to study as a guest student. The second line contains exactly seven integers a_ 1, a_ 2, . . . , a_ 7 ( a_ i = 0 or a_ i = 1 ) where a_ i= 1 if and only if classes for guest students are held on the i - th day of a week.",
    "output": "Print t lines, the i - th line should contain the answer for the i - th test case \u2014 the length of the shortest continuous period of days you need to stay to study exactly k days as a guest student.",
    "note": "In the first test case you must arrive to the capital of Berland on Monday, have classes on this day, spend a week until next Monday and have classes on the next Monday. In total you need to spend 8 days in the capital of Berland.",
    "topics": [
      "math"
    ],
    "id": "1089G"
  },
  {
    "title": "Fractions",
    "url": "https://codeforces.com/problemset/problem/1089/F",
    "history": "You are given a positive integer n . Find a sequence of fractions a_ i/ b_ i , i = 1 . . . k ( where a_ i and b_ i are positive integers) for some k such that: b_ i divides n, 1 < b_ i < n for i = 1 . . . k 1 \u2264 a_ i < b_ i for i = 1 . . . k \u2211_ i= 1^ k a_ i/ b_ i = 1 - 1/ n",
    "input": "The input consists of a single integer n ( 2 \u2264 n \u2264 10^ 9 ) .",
    "output": "In the first line print \" YES\" if there exists such a sequence of fractions or \" NO\" otherwise. If there exists such a sequence, next lines should contain a description of the sequence in the following format. The second line should contain integer k ( 1 \u2264 k \u2264 100 000 ) \u2014 the number of elements in the sequence. It is guaranteed that if such a sequence exists, then there exists a sequence of length at most 100 000 . Next k lines should contain fractions of the sequence with two integers a_ i and b_ i on each line.",
    "note": "In the second example there is a sequence 1/ 2, 1/ 3 such that 1/ 2 + 1/ 3 = 1 - 1/ 6 .",
    "topics": [
      "math"
    ],
    "id": "1089F"
  },
  {
    "title": "Ehab and a component choosing problem",
    "url": "https://codeforces.com/problemset/problem/1088/E",
    "history": "You' re given a tree consisting of n nodes. Every node u has a weight a_ u . You want to choose an integer k ( 1 \u2264 k \u2264 n) and then choose k connected components of nodes that don' t overlap ( i. e every node is in at most 1 component) . Let the set of nodes you chose be s . You want to maximize: \u2211_ u \u2208 s a_ u/ k In other words, you want to maximize the sum of weights of nodes in s divided by the number of connected components you chose. Also, if there are several solutions, you want to maximize k . Note that adjacent nodes can belong to different components. Refer to the third sample.",
    "input": "The first line contains the integer n ( 1 \u2264 n \u2264 3 \u00b7 10^ 5) , the number of nodes in the tree. The second line contains n space- separated integers a_ 1 , a_ 2 , . . . , a_ n ( | a_ i| \u2264 10^ 9) , the weights of the nodes. The next n- 1 lines, each contains 2 space- separated integers u and v ( 1 \u2264 u, v \u2264 n) which means there' s an edge between u and v .",
    "output": "Print the answer as a non- reduced fraction represented by 2 space- separated integers. The fraction itself should be maximized and if there are several possible ways, you should maximize the denominator. See the samples for a better understanding.",
    "note": "A connected component is a set of nodes such that for any node in the set, you can reach all other nodes in the set passing only nodes in the set. In the first sample, it' s optimal to choose the whole tree. In the second sample, you only have one choice ( to choose node 1) because you can' t choose 0 components. In the third sample, notice that we could' ve, for example, chosen only node 1, or node 1 and node 3, or even the whole tree, and the fraction would' ve had the same value ( - 1) , but we want to maximize k . In the fourth sample, we' ll just choose nodes 1 and 3.",
    "topics": [
      "dp",
      "greedy",
      "math",
      "trees"
    ],
    "id": "1088E"
  },
  {
    "title": "Ehab and a 2-operation task",
    "url": "https://codeforces.com/problemset/problem/1088/C",
    "history": "You' re given an array a of length n . You can perform the following operations on it: choose an index i ( 1 \u2264 i \u2264 n) , an integer x ( 0 \u2264 x \u2264 10^ 6) , and replace a_ j with a_ j+ x for all ( 1 \u2264 j \u2264 i) , which means add x to all the elements in the prefix ending at i . choose an index i ( 1 \u2264 i \u2264 n) , an integer x ( 1 \u2264 x \u2264 10^ 6) , and replace a_ j with a_ j % x for all ( 1 \u2264 j \u2264 i) , which means replace every element in the prefix ending at i with the remainder after dividing it by x . Can you make the array strictly increasing in no more than n+ 1 operations?",
    "input": "The first line contains an integer n ( 1 \u2264 n \u2264 2000) , the number of elements in the array a . The second line contains n space- separated integers a_ 1 , a_ 2 , . . . , a_ n ( 0 \u2264 a_ i \u2264 10^ 5) , the elements of the array a .",
    "output": "On the first line, print the number of operations you wish to perform. On the next lines, you should print the operations. To print an adding operation, use the format \" 1 i x \" ; to print a modding operation, use the format \" 2 i x \" . If i or x don' t satisfy the limitations above, or you use more than n+ 1 operations, you' ll get wrong answer verdict.",
    "note": "In the first sample, the array is already increasing so we don' t need any operations. In the second sample: In the first step: the array becomes [ 8, 6, 3] . In the second step: the array becomes [ 0, 2, 3] .",
    "topics": [
      "constructive algorithms",
      "greedy",
      "math"
    ],
    "id": "1088C"
  },
  {
    "title": "Forest Fires",
    "url": "https://codeforces.com/problemset/problem/1086/F",
    "history": "Berland forest was planted several decades ago in a formation of an infinite grid with a single tree in every cell. Now the trees are grown up and they form a pretty dense structure. So dense, actually, that the fire became a real danger for the forest. This season had been abnormally hot in Berland and some trees got caught on fire! The second fire started is considered the second 0 . Every second fire lit up all intact neightbouring trees to every currently burning tree. The tree is neighbouring if it occupies adjacent by side or by corner cell. Luckily, after t seconds Berland fire department finally reached the location of fire and instantaneously extinguished it all. Now they want to calculate the destructive power of the fire. Let val_ x, y be the second the tree in cell ( x, y) got caught on fire. The destructive power is the sum of val_ x, y over all ( x, y) of burnt trees. Clearly, all the workers of fire department are firefighters, not programmers, thus they asked you to help them calculate the destructive power of the fire. The result can be rather big, so print it modulo 998244353 .",
    "input": "The first line contains two integers n and t ( 1 \u2264 n \u2264 50 , 0 \u2264 t \u2264 10^ 8 ) \u2014 the number of trees that initially got caught on fire and the time fire department extinguished the fire, respectively. Each of the next n lines contains two integers x and y ( - 10^ 8 \u2264 x, y \u2264 10^ 8 ) \u2014 the positions of trees that initially got caught on fire. Obviously, the position of cell ( 0, 0) on the grid and the directions of axes is irrelevant as the grid is infinite and the answer doesn' t depend on them. It is guaranteed that all the given tree positions are pairwise distinct. The grid is infinite so the fire doesn' t stop once it reaches - 10^ 8 or 10^ 8 . It continues beyond these borders.",
    "output": "Print a single integer \u2014 the sum of val_ x, y over all ( x, y) of burnt trees modulo 998244353 .",
    "note": "Here are the first three examples. The grey cells have val = 0 , the orange cells have val = 1 and the red cells have val = 2 .",
    "topics": [
      "math"
    ],
    "id": "1086F"
  },
  {
    "title": "Connect Three",
    "url": "https://codeforces.com/problemset/problem/1085/C",
    "history": "The Squareland national forest is divided into equal 1 \u00d7 1 square plots aligned with north- south and east- west directions. Each plot can be uniquely described by integer Cartesian coordinates ( x, y) of its south- west corner. Three friends, Alice, Bob, and Charlie are going to buy three distinct plots of land A, B, C in the forest. Initially, all plots in the forest ( including the plots A, B, C ) are covered by trees. The friends want to visit each other, so they want to clean some of the plots from trees. After cleaning, one should be able to reach any of the plots A, B, C from any other one of those by moving through adjacent cleared plots. Two plots are adjacent if they share a side. For example, A= ( 0, 0) , B= ( 1, 1) , C= ( 2, 2) . The minimal number of plots to be cleared is 5 . One of the ways to do it is shown with the gray color. Of course, the friends don' t want to strain too much. Help them find out the smallest number of plots they need to clean from trees.",
    "input": "The first line contains two integers x_ A and y_ A \u2014 coordinates of the plot A ( 0 \u2264 x_ A, y_ A \u2264 1000 ) . The following two lines describe coordinates ( x_ B, y_ B) and ( x_ C, y_ C) of plots B and C respectively in the same format ( 0 \u2264 x_ B, y_ B, x_ C, y_ C \u2264 1000 ) . It is guaranteed that all three plots are distinct.",
    "output": "On the first line print a single integer k \u2014 the smallest number of plots needed to be cleaned from trees. The following k lines should contain coordinates of all plots needed to be cleaned. All k plots should be distinct. You can output the plots in any order. If there are multiple solutions, print any of them.",
    "note": "The first example is shown on the picture in the legend. The second example is illustrated with the following image:",
    "topics": [
      "implementation",
      "math"
    ],
    "id": "1085C"
  },
  {
    "title": "Div Times Mod",
    "url": "https://codeforces.com/problemset/problem/1085/B",
    "history": "Vasya likes to solve equations. Today he wants to solve ( x div k) \u00b7 ( x k) = n , where div and mod stand for integer division and modulo operations ( refer to the Notes below for exact definition) . In this equation, k and n are positive integer parameters, and x is a positive integer unknown. If there are several solutions, Vasya wants to find the smallest possible x . Can you help him?",
    "input": "The first line contains two integers n and k ( 1 \u2264 n \u2264 10^ 6 , 2 \u2264 k \u2264 1000 ) .",
    "output": "Print a single integer x \u2014 the smallest positive integer solution to ( x div k) \u00b7 ( x k) = n . It is guaranteed that this equation has at least one positive integer solution.",
    "note": "The result of integer division a div b is equal to the largest integer c such that b \u00b7 c \u2264 a . a modulo b ( shortened a b ) is the only integer c such that 0 \u2264 c < b , and a - c is divisible by b . In the first sample, 11 div 3 = 3 and 11 3 = 2 . Since 3 \u00b7 2 = 6 , then x = 11 is a solution to ( x div 3) \u00b7 ( x 3) = 6 . One can see that 19 is the only other positive integer solution, hence 11 is the smallest one.",
    "topics": [
      "math"
    ],
    "id": "1085B"
  },
  {
    "title": "Vasya and Book",
    "url": "https://codeforces.com/problemset/problem/1082/A",
    "history": "Vasya is reading a e- book. The file of the book consists of n pages, numbered from 1 to n . The screen is currently displaying the contents of page x , and Vasya wants to read the page y . There are two buttons on the book which allow Vasya to scroll d pages forwards or backwards ( but he cannot scroll outside the book) . For example, if the book consists of 10 pages, and d = 3 , then from the first page Vasya can scroll to the first or to the fourth page by pressing one of the buttons; from the second page \u2014 to the first or to the fifth; from the sixth page \u2014 to the third or to the ninth; from the eighth \u2014 to the fifth or to the tenth. Help Vasya to calculate the minimum number of times he needs to press a button to move to page y .",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 10^ 3 ) \u2014 the number of testcases. Each testcase is denoted by a line containing four integers n , x , y , d ( 1\u2264 n, d \u2264 10^ 9 , 1 \u2264 x, y \u2264 n ) \u2014 the number of pages, the starting page, the desired page, and the number of pages scrolled by pressing one button, respectively.",
    "output": "Print one line for each test. If Vasya can move from page x to page y , print the minimum number of times he needs to press a button to do it. Otherwise print - 1 .",
    "note": "In the first test case the optimal sequence is: 4 \u2192 2 \u2192 1 \u2192 3 \u2192 5 . In the second test case it is possible to get to pages 1 and 5 . In the third test case the optimal sequence is: 4 \u2192 7 \u2192 10 \u2192 13 \u2192 16 \u2192 19 .",
    "topics": [
      "implementation",
      "math"
    ],
    "id": "1082A"
  },
  {
    "title": "Mergesort Strikes Back",
    "url": "https://codeforces.com/problemset/problem/1081/G",
    "history": "Chouti thought about his very first days in competitive programming. When he had just learned to write merge sort, he thought that the merge sort is too slow, so he restricted the maximum depth of recursion and modified the merge sort to the following: Chouti found his idea dumb since obviously, this \" merge sort\" sometimes cannot sort the array correctly. However, Chouti is now starting to think of how good this \" merge sort\" is. Particularly, Chouti wants to know for a random permutation a of 1, 2, . . . , n the expected number of inversions after calling MergeSort( a, 1, n, k) . It can be proved that the expected number is rational. For the given prime q , suppose the answer can be denoted by u/ d where gcd( u, d) = 1 , you need to output an integer r satisfying 0 \u2264 r< q and rd \u2261 u q . It can be proved that such r exists and is unique.",
    "input": "The first and only line contains three integers n, k, q ( 1 \u2264 n, k \u2264 10^ 5, 10^ 8 \u2264 q \u2264 10^ 9 , q is a prime) .",
    "output": "The first and only line contains an integer r .",
    "note": "In the first example, all possible permutations are [ 1, 2, 3] , [ 1, 3, 2] , [ 2, 1, 3] , [ 2, 3, 1] , [ 3, 1, 2] , [ 3, 2, 1] . With k= 1 , MergeSort( a, 1, n, k) will only return the original permutation. Thus the answer is 9/ 6= 3/ 2 , and you should output 499122178 because 499122178 \u00d7 2 \u2261 3 998244353 . In the second example, all possible permutations are [ 1, 2, 3] , [ 1, 3, 2] , [ 2, 1, 3] , [ 2, 3, 1] , [ 3, 1, 2] , [ 3, 2, 1] and the corresponding outputs of MergeSort( a, 1, n, k) are [ 1, 2, 3] , [ 1, 2, 3] , [ 2, 1, 3] , [ 1, 2, 3] , [ 2, 3, 1] , [ 1, 3, 2] respectively. Thus the answer is 4/ 6= 2/ 3 , and you should output 665496236 because 665496236 \u00d7 3 \u2261 2 998244353 .",
    "topics": [
      "math",
      "probabilities"
    ],
    "id": "1081G"
  },
  {
    "title": "Missing Numbers",
    "url": "https://codeforces.com/problemset/problem/1081/E",
    "history": "Chouti is working on a strange math problem. There was a sequence of n positive integers x_ 1, x_ 2, . . . , x_ n , where n is even. The sequence was very special, namely for every integer t from 1 to n , x_ 1+ x_ 2+ . . . + x_ t is a square of some integer number ( that is, a perfect square) . Somehow, the numbers with odd indexes turned to be missing, so he is only aware of numbers on even positions, i. e. x_ 2, x_ 4, x_ 6, . . . , x_ n . The task for him is to restore the original sequence. Again, it' s your turn to help him. The problem setter might make mistakes, so there can be no possible sequence at all. If there are several possible sequences, you can output any.",
    "input": "The first line contains an even number n ( 2 \u2264 n \u2264 10^ 5 ) . The second line contains n/ 2 positive integers x_ 2, x_ 4, . . . , x_ n ( 1 \u2264 x_ i \u2264 2 \u00b7 10^ 5 ) .",
    "output": "If there are no possible sequence, print \" No\" . Otherwise, print \" Yes\" and then n positive integers x_ 1, x_ 2, . . . , x_ n ( 1 \u2264 x_ i \u2264 10^ 13 ) , where x_ 2, x_ 4, . . . , x_ n should be same as in input data. If there are multiple answers, print any. Note, that the limit for x_ i is larger than for input data. It can be proved that in case there is an answer, there must be a possible sequence satisfying 1 \u2264 x_ i \u2264 10^ 13 .",
    "note": "In the first example x_ 1= 4 x_ 1+ x_ 2= 9 x_ 1+ x_ 2+ x_ 3= 25 x_ 1+ x_ 2+ x_ 3+ x_ 4= 36 x_ 1+ x_ 2+ x_ 3+ x_ 4+ x_ 5= 100 x_ 1+ x_ 2+ x_ 3+ x_ 4+ x_ 5+ x_ 6= 144 All these numbers are perfect squares. In the second example, x_ 1= 100 , x_ 1+ x_ 2= 10000 . They are all perfect squares. There' re other answers possible. For example, x_ 1= 22500 is another answer. In the third example, it is possible to show, that no such sequence exists.",
    "topics": [
      "binary search",
      "constructive algorithms",
      "greedy",
      "math",
      "number theory"
    ],
    "id": "1081E"
  },
  {
    "title": "Colorful Bricks",
    "url": "https://codeforces.com/problemset/problem/1081/C",
    "history": "On his free time, Chouti likes doing some housework. He has got one new task, paint some bricks in the yard. There are n bricks lined in a row on the ground. Chouti has got m paint buckets of different colors at hand, so he painted each brick in one of those m colors. Having finished painting all bricks, Chouti was satisfied. He stood back and decided to find something fun with these bricks. After some counting, he found there are k bricks with a color different from the color of the brick on its left ( the first brick is not counted, for sure) . So as usual, he needs your help in counting how many ways could he paint the bricks. Two ways of painting bricks are different if there is at least one brick painted in different colors in these two ways. Because the answer might be quite big, you only need to output the number of ways modulo 998 244 353 .",
    "input": "The first and only line contains three integers n , m and k ( 1 \u2264 n, m \u2264 2000, 0 \u2264 k \u2264 n- 1 ) \u2014 the number of bricks, the number of colors, and the number of bricks, such that its color differs from the color of brick to the left of it.",
    "output": "Print one integer \u2014 the number of ways to color bricks modulo 998 244 353 .",
    "note": "In the first example, since k= 0 , the color of every brick should be the same, so there will be exactly m= 3 ways to color the bricks. In the second example, suppose the two colors in the buckets are yellow and lime, the following image shows all 4 possible colorings.",
    "topics": [
      "combinatorics",
      "dp",
      "math"
    ],
    "id": "1081C"
  },
  {
    "title": "Definite Game",
    "url": "https://codeforces.com/problemset/problem/1081/A",
    "history": "Chouti was doing a competitive programming competition. However, after having all the problems accepted, he got bored and decided to invent some small games. He came up with the following game. The player has a positive integer n . Initially the value of n equals to v and the player is able to do the following operation as many times as the player want ( possibly zero) : choose a positive integer x that x< n and x is not a divisor of n , then subtract x from n . The goal of the player is to minimize the value of n in the end. Soon, Chouti found the game trivial. Can you also beat the game?",
    "input": "The input contains only one integer in the first line: v ( 1 \u2264 v \u2264 10^ 9 ) , the initial value of n .",
    "output": "Output a single integer, the minimum value of n the player can get.",
    "note": "In the first example, the player can choose x= 3 in the first turn, then n becomes 5 . He can then choose x= 4 in the second turn to get n= 1 as the result. There are other ways to get this minimum. However, for example, he cannot choose x= 2 in the first turn because 2 is a divisor of 8 . In the second example, since n= 1 initially, the player can do nothing.",
    "topics": [
      "constructive algorithms",
      "math"
    ],
    "id": "1081A"
  },
  {
    "title": "Olya and magical square",
    "url": "https://codeforces.com/problemset/problem/1080/D",
    "history": "Recently, Olya received a magical square with the size of 2^ n\u00d7 2^ n . It seems to her sister that one square is boring. Therefore, she asked Olya to perform exactly k splitting operations. A Splitting operation is an operation during which Olya takes a square with side a and cuts it into 4 equal squares with side a2 . If the side of the square is equal to 1 , then it is impossible to apply a splitting operation to it ( see examples for better understanding) . Olya is happy to fulfill her sister' s request, but she also wants the condition of Olya' s happiness to be satisfied after all operations. The condition of Olya' s happiness will be satisfied if the following statement is fulfilled: Let the length of the side of the lower left square be equal to a , then the length of the side of the right upper square should also be equal to a . There should also be a path between them that consists only of squares with the side of length a . All consecutive squares on a path should have a common side. Obviously, as long as we have one square, these conditions are met. So Olya is ready to fulfill her sister' s request only under the condition that she is satisfied too. Tell her: is it possible to perform exactly k splitting operations in a certain order so that the condition of Olya' s happiness is satisfied? If it is possible, tell also the size of the side of squares of which the path from the lower left square to the upper right one will consist.",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 10^ 3 ) \u2014 the number of tests. Each of the following t lines contains two integers n_ i and k_ i ( 1 \u2264 n_ i \u2264 10^ 9, 1 \u2264 k_ i \u2264 10^ 18 ) \u2014 the description of the i - th test, which means that initially Olya' s square has size of 2^ n_ i\u00d7 2^ n_ i and Olya' s sister asks her to do exactly k_ i splitting operations.",
    "output": "Print t lines, where in the i - th line you should output \" YES\" if it is possible to perform k_ i splitting operations in the i - th test in such a way that the condition of Olya' s happiness is satisfied or print \" NO\" otherwise. If you printed \" YES\" , then also print the log_ 2 of the length of the side of the squares through space, along which you can build a path from the lower left square to the upper right one. You can output each letter in any case ( lower or upper) . If there are multiple answers, print any.",
    "note": "In each of the illustrations, the pictures are shown in order in which Olya applied the operations. The recently- created squares are highlighted with red. In the first test, Olya can apply splitting operations in the following order: Olya applies one operation on the only existing square. The condition of Olya' s happiness will be met, since there is a path of squares of the same size from the lower left square to the upper right one: The length of the sides of the squares on the path is 1 . log_ 2( 1) = 0 . In the second test, Olya can apply splitting operations in the following order: Olya applies the first operation on the only existing square. She applies the second one on the right bottom square. The condition of Olya' s happiness will be met, since there is a path of squares of the same size from the lower left square to the upper right one: The length of the sides of the squares on the path is 2 . log_ 2( 2) = 1 . In the third test, it takes 5 operations for Olya to make the square look like this: Since it requires her to perform 7 splitting operations, and it is impossible to perform them on squares with side equal to 1 , then Olya cannot do anything more and the answer is \" NO\" .",
    "topics": [
      "constructive algorithms",
      "implementation",
      "math"
    ],
    "id": "1080D"
  },
  {
    "title": "Margarite and the best present",
    "url": "https://codeforces.com/problemset/problem/1080/B",
    "history": "Little girl Margarita is a big fan of competitive programming. She especially loves problems about arrays and queries on them. Recently, she was presented with an array a of the size of 10^ 9 elements that is filled as follows: a_ 1 = - 1 a_ 2 = 2 a_ 3 = - 3 a_ 4 = 4 a_ 5 = - 5 And so on . . . That is, the value of the i - th element of the array a is calculated using the formula a_ i = i \u00b7 ( - 1) ^ i . She immediately came up with q queries on this array. Each query is described with two numbers: l and r . The answer to a query is the sum of all the elements of the array at positions from l to r inclusive. Margarita really wants to know the answer to each of the requests. She doesn' t want to count all this manually, but unfortunately, she couldn' t write the program that solves the problem either. She has turned to you \u2014 the best programmer. Help her find the answers!",
    "input": "The first line contains a single integer q ( 1 \u2264 q \u2264 10^ 3 ) \u2014 the number of the queries. Each of the next q lines contains two integers l and r ( 1 \u2264 l \u2264 r \u2264 10^ 9 ) \u2014 the descriptions of the queries.",
    "output": "Print q lines, each containing one number \u2014 the answer to the query.",
    "note": "In the first query, you need to find the sum of the elements of the array from position 1 to position 3 . The sum is equal to a_ 1 + a_ 2 + a_ 3 = - 1 + 2 - 3 = - 2 . In the second query, you need to find the sum of the elements of the array from position 2 to position 5 . The sum is equal to a_ 2 + a_ 3 + a_ 4 + a_ 5 = 2 - 3 + 4 - 5 = - 2 . In the third query, you need to find the sum of the elements of the array from position 5 to position 5 . The sum is equal to a_ 5 = - 5 . In the fourth query, you need to find the sum of the elements of the array from position 4 to position 4 . The sum is equal to a_ 4 = 4 . In the fifth query, you need to find the sum of the elements of the array from position 2 to position 3 . The sum is equal to a_ 2 + a_ 3 = 2 - 3 = - 1 .",
    "topics": [
      "math"
    ],
    "id": "1080B"
  },
  {
    "title": "Petya and Origami",
    "url": "https://codeforces.com/problemset/problem/1080/A",
    "history": "Petya is having a party soon, and he has decided to invite his n friends. He wants to make invitations in the form of origami. For each invitation, he needs two red sheets, five green sheets, and eight blue sheets. The store sells an infinite number of notebooks of each color, but each notebook consists of only one color with k sheets. That is, each notebook contains k sheets of either red, green, or blue. Find the minimum number of notebooks that Petya needs to buy to invite all n of his friends.",
    "input": "The first line contains two integers n and k ( 1\u2264 n, k\u2264 10^ 8 ) \u2014 the number of Petya' s friends and the number of sheets in each notebook respectively.",
    "output": "Print one number \u2014 the minimum number of notebooks that Petya needs to buy.",
    "note": "In the first example, we need 2 red notebooks, 3 green notebooks, and 5 blue notebooks. In the second example, we need 5 red notebooks, 13 green notebooks, and 20 blue notebooks.",
    "topics": [
      "math"
    ],
    "id": "1080A"
  },
  {
    "title": "Frog Jumping",
    "url": "https://codeforces.com/problemset/problem/1077/A",
    "history": "A frog is currently at the point 0 on a coordinate axis Ox . It jumps by the following algorithm: the first jump is a units to the right, the second jump is b units to the left, the third jump is a units to the right, the fourth jump is b units to the left, and so on. Formally: if the frog has jumped an even number of times ( before the current jump) , it jumps from its current position x to position x+ a ; otherwise it jumps from its current position x to position x- b . Your task is to calculate the position of the frog after k jumps. But. . . One more thing. You are watching t different frogs so you have to answer t independent queries.",
    "input": "The first line of the input contains one integer t ( 1 \u2264 t \u2264 1000 ) \u2014 the number of queries. Each of the next t lines contain queries ( one query per line) . The query is described as three space- separated integers a, b, k ( 1 \u2264 a, b, k \u2264 10^ 9 ) \u2014 the lengths of two types of jumps and the number of jumps, respectively.",
    "output": "Print t integers. The i - th integer should be the answer for the i - th query.",
    "note": "In the first query frog jumps 5 to the right, 2 to the left and 5 to the right so the answer is 5 - 2 + 5 = 8 . In the second query frog jumps 100 to the right, 1 to the left, 100 to the right and 1 to the left so the answer is 100 - 1 + 100 - 1 = 198 . In the third query the answer is 1 - 10 + 1 - 10 + 1 = - 17 . In the fourth query the answer is 10^ 9 - 1 + 10^ 9 - 1 + 10^ 9 - 1 = 2999999997 . In the fifth query all frog' s jumps are neutralized by each other so the answer is 0 . The sixth query is the same as the fifth but without the last jump so the answer is 1 .",
    "topics": [
      "math"
    ],
    "id": "1077A"
  },
  {
    "title": "Meme Problem",
    "url": "https://codeforces.com/problemset/problem/1076/C",
    "history": "Try guessing the statement from this picture: You are given a non- negative integer d . You have to find two non- negative real numbers a and b such that a + b = d and a \u00b7 b = d .",
    "input": "The first line contains t ( 1 \u2264 t \u2264 10^ 3 ) \u2014 the number of test cases. Each test case contains one integer d ( 0 \u2264 d \u2264 10^ 3) .",
    "output": "For each test print one line. If there is an answer for the i - th test, print \" Y\" , and then the numbers a and b . If there is no answer for the i - th test, print \" N\" . Your answer will be considered correct if | ( a + b) - a \u00b7 b| \u2264 10^ - 6 and | ( a + b) - d| \u2264 10^ - 6 .",
    "note": "",
    "topics": [
      "binary search",
      "math"
    ],
    "id": "1076C"
  },
  {
    "title": "Divisor Subtraction",
    "url": "https://codeforces.com/problemset/problem/1076/B",
    "history": "You are given an integer number n . The following algorithm is applied to it: if n = 0 , then end algorithm; find the smallest prime divisor d of n ; subtract d from n and go to step 1 . Determine the number of subtrations the algorithm will make.",
    "input": "The only line contains a single integer n ( 2 \u2264 n \u2264 10^ 10 ) .",
    "output": "Print a single integer \u2014 the number of subtractions the algorithm will make.",
    "note": "In the first example 5 is the smallest prime divisor, thus it gets subtracted right away to make a 0 . In the second example 2 is the smallest prime divisor at both steps.",
    "topics": [
      "implementation",
      "math",
      "number theory"
    ],
    "id": "1076B"
  },
  {
    "title": "The King's Race",
    "url": "https://codeforces.com/problemset/problem/1075/A",
    "history": "On a chessboard with a width of n and a height of n , rows are numbered from bottom to top from 1 to n , columns are numbered from left to right from 1 to n . Therefore, for each cell of the chessboard, you can assign the coordinates ( r, c) , where r is the number of the row, and c is the number of the column. The white king has been sitting in a cell with ( 1, 1) coordinates for a thousand years, while the black king has been sitting in a cell with ( n, n) coordinates. They would have sat like that further, but suddenly a beautiful coin fell on the cell with coordinates ( x, y) . . . Each of the monarchs wanted to get it, so they decided to arrange a race according to slightly changed chess rules: As in chess, the white king makes the first move, the black king makes the second one, the white king makes the third one, and so on. However, in this problem, kings can stand in adjacent cells or even in the same cell at the same time. The player who reaches the coin first will win, that is to say, the player who reaches the cell with the coordinates ( x, y) first will win. Let' s recall that the king is such a chess piece that can move one cell in all directions, that is, if the king is in the ( a, b) cell, then in one move he can move from ( a, b) to the cells ( a + 1, b) , ( a - 1, b) , ( a, b + 1) , ( a, b - 1) , ( a + 1, b - 1) , ( a + 1, b + 1) , ( a - 1, b - 1) , or ( a - 1, b + 1) . Going outside of the field is prohibited. Determine the color of the king, who will reach the cell with the coordinates ( x, y) first, if the white king moves first.",
    "input": "The first line contains a single integer n ( 2 \u2264 n \u2264 10^ 18 ) \u2014 the length of the side of the chess field. The second line contains two integers x and y ( 1 \u2264 x, y \u2264 n ) \u2014 coordinates of the cell, where the coin fell.",
    "output": "In a single line print the answer \" White\" ( without quotes) , if the white king will win, or \" Black\" ( without quotes) , if the black king will win. You can print each letter in any case ( upper or lower) .",
    "note": "An example of the race from the first sample where both the white king and the black king move optimally: The white king moves from the cell ( 1, 1) into the cell ( 2, 2) . The black king moves form the cell ( 4, 4) into the cell ( 3, 3) . The white king moves from the cell ( 2, 2) into the cell ( 2, 3) . This is cell containing the coin, so the white king wins. An example of the race from the second sample where both the white king and the black king move optimally: The white king moves from the cell ( 1, 1) into the cell ( 2, 2) . The black king moves form the cell ( 5, 5) into the cell ( 4, 4) . The white king moves from the cell ( 2, 2) into the cell ( 3, 3) . The black king moves from the cell ( 4, 4) into the cell ( 3, 5) . This is the cell, where the coin fell, so the black king wins. In the third example, the coin fell in the starting cell of the black king, so the black king immediately wins.",
    "topics": [
      "implementation",
      "math"
    ],
    "id": "1075A"
  },
  {
    "title": "Segment Sum",
    "url": "https://codeforces.com/problemset/problem/1073/E",
    "history": "You are given two integers l and r ( l \u2264 r ) . Your task is to calculate the sum of numbers from l to r ( including l and r ) such that each number contains at most k different digits, and print this sum modulo 998244353 . For example, if k = 1 then you have to calculate all numbers from l to r such that each number is formed using only one digit. For l = 10, r = 50 the answer is 11 + 22 + 33 + 44 = 110 .",
    "input": "The only line of the input contains three integers l , r and k ( 1 \u2264 l \u2264 r < 10^ 18, 1 \u2264 k \u2264 10 ) \u2014 the borders of the segment and the maximum number of different digits.",
    "output": "Print one integer \u2014 the sum of numbers from l to r such that each number contains at most k different digits, modulo 998244353 .",
    "note": "For the first example the answer is just the sum of numbers from l to r which equals to 50 \u00b7 51/ 2 - 9 \u00b7 10/ 2 = 1230 . This example also explained in the problem statement but for k = 1 . For the second example the answer is just the sum of numbers from l to r which equals to 2345 \u00b7 2346/ 2 = 2750685 . For the third example the answer is 101 + 110 + 111 + 112 + 113 + 114 + 115 + 116 + 117 + 118 + 119 + 121 + 122 + 131 + 133 + 141 + 144 + 151 = 2189 .",
    "topics": [
      "bitmasks",
      "combinatorics",
      "dp",
      "math"
    ],
    "id": "1073E"
  },
  {
    "title": "Vasya and Books",
    "url": "https://codeforces.com/problemset/problem/1073/B",
    "history": "Vasya has got n books, numbered from 1 to n , arranged in a stack. The topmost book has number a_ 1 , the next one \u2014 a_ 2 , and so on. The book at the bottom of the stack has number a_ n . All numbers are distinct. Vasya wants to move all the books to his backpack in n steps. During i - th step he wants to move the book number b_ i into his backpack. If the book with number b_ i is in the stack, he takes this book and all the books above the book b_ i , and puts them into the backpack; otherwise he does nothing and begins the next step. For example, if books are arranged in the order [ 1, 2, 3] ( book 1 is the topmost) , and Vasya moves the books in the order [ 2, 1, 3] , then during the first step he will move two books ( 1 and 2 ) , during the second step he will do nothing ( since book 1 is already in the backpack) , and during the third step \u2014 one book ( the book number 3 ) . Note that b_ 1, b_ 2, . . . , b_ n are distinct. Help Vasya! Tell him the number of books he will put into his backpack during each step.",
    "input": "The first line contains one integer n ( 1 \u2264 n \u2264 2 \u00b7 10^ 5) \u2014 the number of books in the stack. The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 n) denoting the stack of books. The third line contains n integers b_ 1, b_ 2, . . . , b_ n ( 1 \u2264 b_ i \u2264 n) denoting the steps Vasya is going to perform. All numbers a_ 1 . . . a_ n are distinct, the same goes for b_ 1 . . . b_ n .",
    "output": "Print n integers. The i - th of them should be equal to the number of books Vasya moves to his backpack during the i - th step.",
    "note": "The first example is described in the statement. In the second example, during the first step Vasya will move the books [ 3, 1, 4] . After that only books 2 and 5 remain in the stack ( 2 is above 5 ) . During the second step Vasya will take the books 2 and 5 . After that the stack becomes empty, so during next steps Vasya won' t move any books.",
    "topics": [
      "implementation",
      "math"
    ],
    "id": "1073B"
  },
  {
    "title": "LCM",
    "url": "https://codeforces.com/problemset/problem/1068/B",
    "history": "Ivan has number b . He is sorting through the numbers a from 1 to 10^ 18 , and for every a writes [ a, b] / a on blackboard. Here [ a, b] stands for least common multiple of a and b . Ivan is very lazy, that' s why this task bored him soon. But he is interested in how many different numbers he would write on the board if he would finish the task. Help him to find the quantity of different numbers he would write on the board.",
    "input": "The only line contains one integer \u2014 b ( 1 \u2264 b \u2264 10^ 10) .",
    "output": "Print one number \u2014 answer for the problem.",
    "note": "In the first example [ a, 1] = a , therefore [ a, b] / a is always equal to 1 . In the second example [ a, 2] can be equal to a or 2 \u00b7 a depending on parity of a . [ a, b] / a can be equal to 1 and 2 .",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "1068B"
  },
  {
    "title": "Birthday",
    "url": "https://codeforces.com/problemset/problem/1068/A",
    "history": "Ivan is collecting coins. There are only N different collectible coins, Ivan has K of them. He will be celebrating his birthday soon, so all his M freinds decided to gift him coins. They all agreed to three terms: Everyone must gift as many coins as others. All coins given to Ivan must be different. Not less than L coins from gifts altogether, must be new in Ivan' s collection. But his friends don' t know which coins have Ivan already got in his collection. They don' t want to spend money so they want to buy minimum quantity of coins, that satisfy all terms, irrespective of the Ivan' s collection. Help them to find this minimum number of coins or define it' s not possible to meet all the terms.",
    "input": "The only line of input contains 4 integers N , M , K , L ( 1 \u2264 K \u2264 N \u2264 10^ 18 ; 1 \u2264 M, L \u2264 10^ 18 ) \u2014 quantity of different coins, number of Ivan' s friends, size of Ivan' s collection and quantity of coins, that must be new in Ivan' s collection.",
    "output": "Print one number \u2014 minimal number of coins one friend can gift to satisfy all the conditions. If it is impossible to satisfy all three conditions print \" - 1\" ( without quotes) .",
    "note": "In the first test, one coin from each friend is enough, as he will be presented with 15 different coins and 13 of them will definitely be new. In the second test, Ivan has 11 friends, but there are only 10 different coins. So all friends can' t present him different coins.",
    "topics": [
      "math"
    ],
    "id": "1068A"
  },
  {
    "title": "Random Forest Rank",
    "url": "https://codeforces.com/problemset/problem/1067/E",
    "history": "Let' s define rank of undirected graph as rank of its adjacency matrix in R^ n \u00d7 n . Given a tree. Each edge of this tree will be deleted with probability 1/ 2 , all these deletions are independent. Let E be the expected rank of resulting forest. Find E \u00b7 2^ n- 1 modulo 998244353 ( it is easy to show that E \u00b7 2^ n- 1 is an integer) .",
    "input": "First line of input contains n ( 1 \u2264 n \u2264 5 \u00b7 10^ 5 ) \u2014 number of vertices. Next n- 1 lines contains two integers u v ( 1 \u2264 u, v \u2264 n; u v ) \u2014 indices of vertices connected by edge. It is guaranteed that given graph is a tree.",
    "output": "Print one integer \u2014 answer to the problem.",
    "note": "",
    "topics": [
      "dp",
      "graph matchings",
      "math",
      "trees"
    ],
    "id": "1067E"
  },
  {
    "title": "Computer Game",
    "url": "https://codeforces.com/problemset/problem/1067/D",
    "history": "Ivan plays some computer game. There are n quests in the game. Each quest can be upgraded once, this increases the reward for its completion. Each quest has 3 parameters a_ i , b_ i , p_ i : reward for completing quest before upgrade, reward for completing quest after upgrade ( a_ i < b_ i ) and probability of successful completing the quest. Each second Ivan can try to complete one quest and he will succeed with probability p_ i . In case of success Ivan will get the reward and opportunity to upgrade any one quest ( not necessary the one he just completed) . In case of failure he gets nothing. Quests do not vanish after completing. Ivan has t seconds. He wants to maximize expected value of his total gain after t seconds. Help him to calculate this value.",
    "input": "First line contains 2 integers n ( 1 \u2264 n \u2264 10^ 5 ) and t ( 1 \u2264 t \u2264 10^ 10 ) \u2014 number of quests and total time. Following n lines contain description of quests. Each description is 3 numbers a_ i b_ i p_ i ( 1 \u2264 a_ i < b_ i\u2264 10^ 8 , 0 < p_ i < 1 ) \u2014 reward for completing quest before upgrade, reward for completing quest after upgrade and probability of successful completing of quest. a_ i and b_ i are integers. All probabilities are given with at most 9 decimal places.",
    "output": "Print the expected value. Your answer will be accepted if absolute or relative error does not exceed 10^ - 6 . Formally, let your answer be a , and the jury' s answer be b . Your answer is considered correct if | a- b| / max\u2061( b, 1) \u2264 10^ - 6 .",
    "note": "",
    "topics": [
      "dp",
      "greedy",
      "math",
      "probabilities"
    ],
    "id": "1067D"
  },
  {
    "title": "Binary Numbers AND Sum",
    "url": "https://codeforces.com/problemset/problem/1066/E",
    "history": "You are given two huge binary integer numbers a and b of lengths n and m respectively. You will repeat the following process: if b > 0 , then add to the answer the value a & b and divide b by 2 rounding down ( i. e. remove the last digit of b ) , and repeat the process again, otherwise stop the process. The value a & b means bitwise AND of a and b . Your task is to calculate the answer modulo 998244353 . Note that you should add the value a & b to the answer in decimal notation, not in binary. So your task is to calculate the answer in decimal notation. For example, if a = 1010_ 2 ( 10_ 10) and b = 1000_ 2 ( 8_ 10) , then the value a & b will be equal to 8 , not to 1000 .",
    "input": "The first line of the input contains two integers n and m ( 1 \u2264 n, m \u2264 2 \u00b7 10^ 5 ) \u2014 the length of a and the length of b correspondingly. The second line of the input contains one huge integer a . It is guaranteed that this number consists of exactly n zeroes and ones and the first digit is always 1 . The third line of the input contains one huge integer b . It is guaranteed that this number consists of exactly m zeroes and ones and the first digit is always 1 .",
    "output": "Print the answer to this problem in decimal notation modulo 998244353 .",
    "note": "The algorithm for the first example: add to the answer 1010_ 2 & 1101_ 2 = 1000_ 2 = 8_ 10 and set b : = 110 ; add to the answer 1010_ 2 & 110_ 2 = 10_ 2 = 2_ 10 and set b : = 11 ; add to the answer 1010_ 2 & 11_ 2 = 10_ 2 = 2_ 10 and set b : = 1 ; add to the answer 1010_ 2 & 1_ 2 = 0_ 2 = 0_ 10 and set b : = 0 . So the answer is 8 + 2 + 2 + 0 = 12 . The algorithm for the second example: add to the answer 1001_ 2 & 10101_ 2 = 1_ 2 = 1_ 10 and set b : = 1010 ; add to the answer 1001_ 2 & 1010_ 2 = 1000_ 2 = 8_ 10 and set b : = 101 ; add to the answer 1001_ 2 & 101_ 2 = 1_ 2 = 1_ 10 and set b : = 10 ; add to the answer 1001_ 2 & 10_ 2 = 0_ 2 = 0_ 10 and set b : = 1 ; add to the answer 1001_ 2 & 1_ 2 = 1_ 2 = 1_ 10 and set b : = 0 . So the answer is 1 + 8 + 1 + 0 + 1 = 11 .",
    "topics": [
      "data structures",
      "implementation",
      "math"
    ],
    "id": "1066E"
  },
  {
    "title": "Vova and Train",
    "url": "https://codeforces.com/problemset/problem/1066/A",
    "history": "Vova plans to go to the conference by train. Initially, the train is at the point 1 and the destination point of the path is the point L . The speed of the train is 1 length unit per minute ( i. e. at the first minute the train is at the point 1 , at the second minute \u2014 at the point 2 and so on) . There are lanterns on the path. They are placed at the points with coordinates divisible by v ( i. e. the first lantern is at the point v , the second is at the point 2v and so on) . There is also exactly one standing train which occupies all the points from l to r inclusive. Vova can see the lantern at the point p if p is divisible by v and there is no standing train at this position ( p \u2208\u0338[ l; r] ) . Thus, if the point with the lantern is one of the points covered by the standing train, Vova can' t see this lantern. Your problem is to say the number of lanterns Vova will see during the path. Vova plans to go to t different conferences, so you should answer t independent queries.",
    "input": "The first line of the input contains one integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of queries. Then t lines follow. The i - th line contains four integers L_ i, v_ i, l_ i, r_ i ( 1 \u2264 L, v \u2264 10^ 9 , 1 \u2264 l \u2264 r \u2264 L ) \u2014 destination point of the i - th path, the period of the lantern appearance and the segment occupied by the standing train.",
    "output": "Print t lines. The i - th line should contain one integer \u2014 the answer for the i - th query.",
    "note": "For the first example query, the answer is 3 . There are lanterns at positions 2 , 4 , 6 , 8 and 10 , but Vova didn' t see the lanterns at positions 4 and 6 because of the standing train. For the second example query, the answer is 0 because the only lantern is at the point 51 and there is also a standing train at this point. For the third example query, the answer is 1134 because there are 1234 lanterns, but Vova didn' t see the lanterns from the position 100 to the position 199 inclusive. For the fourth example query, the answer is 0 because the standing train covers the whole path.",
    "topics": [
      "math"
    ],
    "id": "1066A"
  },
  {
    "title": "Vasya and Chocolate",
    "url": "https://codeforces.com/problemset/problem/1065/A",
    "history": "There is a special offer in Vasya' s favourite supermarket: if the customer buys a chocolate bars, he or she may take b additional bars for free. This special offer can be used any number of times. Vasya currently has s roubles, and he wants to get as many chocolate bars for free. Each chocolate bar costs c roubles. Help Vasya to calculate the maximum possible number of chocolate bars he can get!",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 100 ) \u2014 the number of testcases. Each of the next t lines contains four integers s, a, b, c ( 1 \u2264 s, a, b, c \u2264 10^ 9) \u2014 the number of roubles Vasya has, the number of chocolate bars you have to buy to use the special offer, the number of bars you get for free, and the cost of one bar, respectively.",
    "output": "Print t lines. i - th line should contain the maximum possible number of chocolate bars Vasya can get in i - th test.",
    "note": "In the first test of the example Vasya can buy 9 bars, get 3 for free, buy another bar, and so he will get 13 bars. In the second test Vasya buys 1000000000 bars and gets 1000000000000000000 for free. So he has 1000000001000000000 bars.",
    "topics": [
      "implementation",
      "math"
    ],
    "id": "1065A"
  },
  {
    "title": "Equations of Mathematical Magic",
    "url": "https://codeforces.com/problemset/problem/1064/B",
    "history": "Colossal! \u2014 exclaimed Hawk- nose. \u2014 A programmer! That' s exactly what we are looking for. Arkadi and Boris Strugatsky. Monday starts on SaturdayReading the book \" Equations of Mathematical Magic\" Roman Oira- Oira and Cristobal Junta found an interesting equation: a - ( a \u2295 x) - x = 0 for some given a , where \u2295 stands for a bitwise exclusive or ( XOR) of two integers ( this operation is denoted as ^ or xor in many modern programming languages) . Oira- Oira quickly found some x , which is the solution of the equation, but Cristobal Junta decided that Oira- Oira' s result is not interesting enough, so he asked his colleague how many non- negative solutions of this equation exist. This task turned out to be too difficult for Oira- Oira, so he asks you to help.",
    "input": "Each test contains several possible values of a and your task is to find the number of equation' s solution for each of them. The first line contains an integer t ( 1 \u2264 t \u2264 1000 ) \u2014 the number of these values. The following t lines contain the values of parameter a , each value is an integer from 0 to 2^ 30 - 1 inclusive.",
    "output": "For each value of a print exactly one integer \u2014 the number of non- negative solutions of the equation for the given value of the parameter. Print answers in the same order as values of a appear in the input. One can show that the number of solutions is always finite.",
    "note": "Let' s define the bitwise exclusive OR ( XOR) operation. Given two integers x and y , consider their binary representations ( possibly with leading zeroes) : x_ k . . . x_ 2 x_ 1 x_ 0 and y_ k . . . y_ 2 y_ 1 y_ 0 . Here, x_ i is the i - th bit of the number x and y_ i is the i - th bit of the number y . Let r = x \u2295 y be the result of the XOR operation of x and y . Then r is defined as r_ k . . . r_ 2 r_ 1 r_ 0 where: r_ i = { 1, if x_ i y_ i 0, if x_ i = y_ i . For the first value of the parameter, only x = 0 is a solution of the equation. For the second value of the parameter, solutions are x = 0 and x = 2 .",
    "topics": [
      "math"
    ],
    "id": "1064B"
  },
  {
    "title": "Make a triangle!",
    "url": "https://codeforces.com/problemset/problem/1064/A",
    "history": "Masha has three sticks of length a , b and c centimeters respectively. In one minute Masha can pick one arbitrary stick and increase its length by one centimeter. She is not allowed to break sticks. What is the minimum number of minutes she needs to spend increasing the stick' s length in order to be able to assemble a triangle of positive area. Sticks should be used as triangle' s sides ( one stick for one side) and their endpoints should be located at triangle' s vertices.",
    "input": "The only line contains tree integers a , b and c ( 1 \u2264 a, b, c \u2264 100 ) \u2014 the lengths of sticks Masha possesses.",
    "output": "Print a single integer \u2014 the minimum number of minutes that Masha needs to spend in order to be able to make the triangle of positive area from her sticks.",
    "note": "In the first example, Masha can make a triangle from the sticks without increasing the length of any of them. In the second example, Masha can' t make a triangle of positive area from the sticks she has at the beginning, but she can spend one minute to increase the length 2 centimeter stick by one and after that form a triangle with sides 3 , 3 and 5 centimeters. In the third example, Masha can take 33 minutes to increase one of the 10 centimeters sticks by 33 centimeters, and after that take 48 minutes to increase another 10 centimeters stick by 48 centimeters. This way she can form a triangle with lengths 43 , 58 and 100 centimeters in 81 minutes. One can show that it is impossible to get a valid triangle faster.",
    "topics": [
      "brute force",
      "geometry",
      "math"
    ],
    "id": "1064A"
  },
  {
    "title": "Lasers and Mirrors",
    "url": "https://codeforces.com/problemset/problem/1063/E",
    "history": "Oleg came to see the maze of mirrors. The maze is a n by n room in which each cell is either empty or contains a mirror connecting opposite corners of this cell. Mirrors in this maze reflect light in a perfect way, which causes the interesting visual effects and contributes to the loss of orientation in the maze. Oleg is a person of curious nature, so he decided to install n lasers facing internal of the maze on the south wall of the maze. On the north wall of the maze, Oleg installed n receivers, also facing internal of the maze. Let' s number lasers and receivers from west to east with distinct integers from 1 to n . Each laser sends a beam of some specific kind and receiver with number a_ i should receive the beam sent from laser number i . Since two lasers' beams can' t come to the same receiver, these numbers form a permutation \u2014 each of the receiver numbers occurs exactly once. You came to the maze together with Oleg. Help him to place the mirrors in the initially empty maze so that the maximum number of lasers' beams will come to the receivers they should. There are no mirrors outside the maze, so if the laser beam leaves the maze, it will not be able to go back.",
    "input": "The first line contains a single integer n ( 1 \u2264 n \u2264 1000 ) \u2014 the size of the maze. The second line contains a permutation of n integers a_ i ( 1 \u2264 a_ i \u2264 n ) , where a_ i defines the number of the receiver, to which the beam from i - th laser should come.",
    "output": "In the first line print the maximum possible number of laser beams, which can come to the receivers they should. In the next n lines of length n print the arrangement of mirrors, causing such number of laser beams to come where they should. If the corresponding cell is empty, print \" . \" , otherwise print \" / \" or \" , \u0308 depending on the orientation of the mirror. In your output north should be above, south should be below, and west and east should be on left and on the right respectively. It is allowed for laser beams to come not to the receivers they correspond to, but they are not counted in the answer. If there are multiple arrangements of mirrors leading to the optimal answer \u2014 print any of them.",
    "note": "The picture illustrates the arrangements of the mirrors in the first example.",
    "topics": [
      "constructive algorithms",
      "math"
    ],
    "id": "1063E"
  },
  {
    "title": "Candies for Children",
    "url": "https://codeforces.com/problemset/problem/1063/D",
    "history": "At the children' s festival, children were dancing in a circle. When music stopped playing, the children were still standing in a circle. Then Lena remembered, that her parents gave her a candy box with exactly k candies \" Wilky May\" . Lena is not a greedy person, so she decided to present all her candies to her friends in the circle. Lena knows, that some of her friends have a sweet tooth and others do not. Sweet tooth takes out of the box two candies, if the box has at least two candies, and otherwise takes one. The rest of Lena' s friends always take exactly one candy from the box. Before starting to give candies, Lena step out of the circle, after that there were exactly n people remaining there. Lena numbered her friends in a clockwise order with positive integers starting with 1 in such a way that index 1 was assigned to her best friend Roma. Initially, Lena gave the box to the friend with number l , after that each friend ( starting from friend number l ) took candies from the box and passed the box to the next friend in clockwise order. The process ended with the friend number r taking the last candy ( or two, who knows) and the empty box. Please note that it is possible that some of Lena' s friends took candy from the box several times, that is, the box could have gone several full circles before becoming empty. Lena does not know which of her friends have a sweet tooth, but she is interested in the maximum possible number of friends that can have a sweet tooth. If the situation could not happen, and Lena have been proved wrong in her observations, please tell her about this.",
    "input": "The only line contains four integers n , l , r and k ( 1 \u2264 n, k \u2264 10^ 11 , 1 \u2264 l, r \u2264 n ) \u2014 the number of children in the circle, the number of friend, who was given a box with candies, the number of friend, who has taken last candy and the initial number of candies in the box respectively.",
    "output": "Print exactly one integer \u2014 the maximum possible number of sweet tooth among the friends of Lena or \" - 1\" ( quotes for clarity) , if Lena is wrong.",
    "note": "In the first example, any two friends can be sweet tooths, this way each person will receive the box with candies twice and the last person to take sweets will be the fourth friend. In the second example, sweet tooths can be any three friends, except for the friend on the third position. In the third example, only one friend will take candy, but he can still be a sweet tooth, but just not being able to take two candies. All other friends in the circle can be sweet tooths as well, they just will not be able to take a candy even once. In the fourth example, Lena is wrong and this situation couldn' t happen.",
    "topics": [
      "brute force",
      "math"
    ],
    "id": "1063D"
  },
  {
    "title": "Fun with Integers",
    "url": "https://codeforces.com/problemset/problem/1062/D",
    "history": "You are given a positive integer n greater or equal to 2 . For every pair of integers a and b ( 2 \u2264 | a| , | b| \u2264 n ) , you can transform a into b if and only if there exists an integer x such that 1 < | x| and ( a \u00b7 x = b or b \u00b7 x = a ) , where | x| denotes the absolute value of x . After such a transformation, your score increases by | x| points and you are not allowed to transform a into b nor b into a anymore. Initially, you have a score of 0 . You can start at any integer and transform it as many times as you like. What is the maximum score you can achieve?",
    "input": "A single line contains a single integer n ( 2 \u2264 n \u2264 100 000 ) \u2014 the given integer described above.",
    "output": "Print an only integer \u2014 the maximum score that can be achieved with the transformations. If it is not possible to perform even a single transformation for all possible starting integers, print 0 .",
    "note": "In the first example, the transformations are 2 \u2192 4 \u2192 ( - 2) \u2192 ( - 4) \u2192 2 . In the third example, it is impossible to perform even a single transformation.",
    "topics": [
      "dfs and similar",
      "graphs",
      "implementation",
      "math"
    ],
    "id": "1062D"
  },
  {
    "title": "Banh-mi",
    "url": "https://codeforces.com/problemset/problem/1062/C",
    "history": "JATC loves Banh- mi ( a Vietnamese food) . His affection for Banh- mi is so much that he always has it for breakfast. This morning, as usual, he buys a Banh- mi and decides to enjoy it in a special way. First, he splits the Banh- mi into n parts, places them on a row and numbers them from 1 through n . For each part i , he defines the deliciousness of the part as x_ i \u2208{ 0, 1} . JATC' s going to eat those parts one by one. At each step, he chooses arbitrary remaining part and eats it. Suppose that part is the i - th part then his enjoyment of the Banh- mi will increase by x_ i and the deliciousness of all the remaining parts will also increase by x_ i . The initial enjoyment of JATC is equal to 0 . For example, suppose the deliciousness of 3 parts are [ 0, 1, 0] . If JATC eats the second part then his enjoyment will become 1 and the deliciousness of remaining parts will become [ 1, _ , 1] . Next, if he eats the first part then his enjoyment will become 2 and the remaining parts will become [ _ , _ , 2] . After eating the last part, JATC' s enjoyment will become 4 . However, JATC doesn' t want to eat all the parts but to save some for later. He gives you q queries, each of them consisting of two integers l_ i and r_ i . For each query, you have to let him know what is the maximum enjoyment he can get if he eats all the parts with indices in the range [ l_ i, r_ i] in some order. All the queries are independent of each other. Since the answer to the query could be very large, print it modulo 10^ 9+ 7 .",
    "input": "The first line contains two integers n and q ( 1 \u2264 n, q \u2264 100 000 ) . The second line contains a string of n characters, each character is either ' 0' or ' 1' . The i - th character defines the deliciousness of the i - th part. Each of the following q lines contains two integers l_ i and r_ i ( 1 \u2264 l_ i \u2264 r_ i \u2264 n ) \u2014 the segment of the corresponding query.",
    "output": "Print q lines, where i - th of them contains a single integer \u2014 the answer to the i - th query modulo 10^ 9 + 7 .",
    "note": "In the first example: For query 1 : One of the best ways for JATC to eats those parts is in this order: 1 , 4 , 3 , 2 . For query 2 : Both 3 , 4 and 4 , 3 ordering give the same answer. In the second example, any order of eating parts leads to the same answer.",
    "topics": [
      "greedy",
      "implementation",
      "math"
    ],
    "id": "1062C"
  },
  {
    "title": "Math",
    "url": "https://codeforces.com/problemset/problem/1062/B",
    "history": "JATC' s math teacher always gives the class some interesting math problems so that they don' t get bored. Today the problem is as follows. Given an integer n , you can perform the following operations zero or more times: mul x : multiplies n by x ( where x is an arbitrary positive integer) . sqrt: replaces n with \u221a( n) ( to apply this operation, \u221a( n) must be an integer) . You can perform these operations as many times as you like. What is the minimum value of n , that can be achieved and what is the minimum number of operations, to achieve that minimum value? Apparently, no one in the class knows the answer to this problem, maybe you can help them?",
    "input": "The only line of the input contains a single integer n ( 1 \u2264 n \u2264 10^ 6 ) \u2014 the initial number.",
    "output": "Print two integers: the minimum integer n that can be achieved using the described operations and the minimum number of operations required.",
    "note": "In the first example, you can apply the operation mul 5 to get 100 and then sqrt to get 10 . In the second example, you can first apply sqrt to get 72 , then mul 18 to get 1296 and finally two more sqrt and you get 6 . Note, that even if the initial value of n is less or equal 10^ 6 , it can still become greater than 10^ 6 after applying one or more operations.",
    "topics": [
      "greedy",
      "math",
      "number theory"
    ],
    "id": "1062B"
  },
  {
    "title": "Multiplicity",
    "url": "https://codeforces.com/problemset/problem/1061/C",
    "history": "You are given an integer array a_ 1, a_ 2, . . . , a_ n . The array b is called to be a subsequence of a if it is possible to remove some elements from a to get b . Array b_ 1, b_ 2, . . . , b_ k is called to be good if it is not empty and for every i ( 1 \u2264 i \u2264 k ) b_ i is divisible by i . Find the number of good subsequences in a modulo 10^ 9 + 7 . Two subsequences are considered different if index sets of numbers included in them are different. That is, the values \u200bof the elements \u200bdo not matter in the comparison of subsequences. In particular, the array a has exactly 2^ n - 1 different subsequences ( excluding an empty subsequence) .",
    "input": "The first line contains an integer n ( 1 \u2264 n \u2264 100 000 ) \u2014 the length of the array a . The next line contains integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 6 ) .",
    "output": "Print exactly one integer \u2014 the number of good subsequences taken modulo 10^ 9 + 7 .",
    "note": "In the first example, all three non- empty possible subsequences are good: { 1} , { 1, 2} , { 2} In the second example, the possible good subsequences are: { 2} , { 2, 2} , { 2, 22} , { 2, 14} , { 2} , { 2, 22} , { 2, 14} , { 1} , { 1, 22} , { 1, 14} , { 22} , { 22, 14} , { 14} . Note, that some subsequences are listed more than once, since they occur in the original array multiple times.",
    "topics": [
      "data structures",
      "dp",
      "implementation",
      "math",
      "number theory"
    ],
    "id": "1061C"
  },
  {
    "title": "Coins",
    "url": "https://codeforces.com/problemset/problem/1061/A",
    "history": "You have unlimited number of coins with values 1, 2, . . . , n . You want to select some set of coins having the total value of S . It is allowed to have multiple coins with the same value in the set. What is the minimum number of coins required to get sum S ?",
    "input": "The only line of the input contains two integers n and S ( 1 \u2264 n \u2264 100 000 , 1 \u2264 S \u2264 10^ 9 )",
    "output": "Print exactly one integer \u2014 the minimum number of coins required to obtain sum S .",
    "note": "In the first example, some of the possible ways to get sum 11 with 3 coins are: ( 3, 4, 4) ( 2, 4, 5) ( 1, 5, 5) ( 3, 3, 5) It is impossible to get sum 11 with less than 3 coins. In the second example, some of the possible ways to get sum 16 with 3 coins are: ( 5, 5, 6) ( 4, 6, 6) It is impossible to get sum 16 with less than 3 coins.",
    "topics": [
      "greedy",
      "implementation",
      "math"
    ],
    "id": "1061A"
  },
  {
    "title": "Social Circles",
    "url": "https://codeforces.com/problemset/problem/1060/D",
    "history": "You invited n guests to dinner! You plan to arrange one or more circles of chairs. Each chair is going to be either occupied by one guest, or be empty. You can make any number of circles. Your guests happen to be a little bit shy, so the i - th guest wants to have a least l_ i free chairs to the left of his chair, and at least r_ i free chairs to the right. The \" left\" and \" right\" directions are chosen assuming all guests are going to be seated towards the center of the circle. Note that when a guest is the only one in his circle, the l_ i chairs to his left and r_ i chairs to his right may overlap. What is smallest total number of chairs you have to use?",
    "input": "First line contains one integer n \u2014 number of guests, ( 1 \u2a7d n \u2a7d 10^ 5 ) . Next n lines contain n pairs of space- separated integers l_ i and r_ i ( 0 \u2a7d l_ i, r_ i \u2a7d 10^ 9 ) .",
    "output": "Output a single integer \u2014 the smallest number of chairs you have to use.",
    "note": "In the second sample the only optimal answer is to use two circles: a circle with 5 chairs accomodating guests 1 and 2 , and another one with 10 chairs accomodationg guests 3 and 4 . In the third sample, you have only one circle with one person. The guest should have at least five free chairs to his left, and at least six free chairs to his right to the next person, which is in this case the guest herself. So, overall number of chairs should be at least 6+ 1= 7.",
    "topics": [
      "greedy",
      "math"
    ],
    "id": "1060D"
  },
  {
    "title": "Sequence Transformation",
    "url": "https://codeforces.com/problemset/problem/1059/C",
    "history": "Let' s call the following process a transformation of a sequence of length n . If the sequence is empty, the process ends. Otherwise, append the greatest common divisor ( GCD) of all the elements of the sequence to the result and remove one arbitrary element from the sequence. Thus, when the process ends, we have a sequence of n integers: the greatest common divisors of all the elements in the sequence before each deletion. You are given an integer sequence 1, 2, . . . , n . Find the lexicographically maximum result of its transformation. A sequence a_ 1, a_ 2, . . . , a_ n is lexicographically larger than a sequence b_ 1, b_ 2, . . . , b_ n , if there is an index i such that a_ j = b_ j for all j < i , and a_ i > b_ i .",
    "input": "The first and only line of input contains one integer n ( 1\u2264 n\u2264 10^ 6 ) .",
    "output": "Output n integers \u2014 the lexicographically maximum result of the transformation.",
    "note": "In the first sample the answer may be achieved this way: Append GCD ( 1, 2, 3) = 1 , remove 2 . Append GCD ( 1, 3) = 1 , remove 1 . Append GCD ( 3) = 3 , remove 3 . We get the sequence [ 1, 1, 3] as the result.",
    "topics": [
      "constructive algorithms",
      "math"
    ],
    "id": "1059C"
  },
  {
    "title": "Write The Contest",
    "url": "https://codeforces.com/problemset/problem/1056/F",
    "history": "Polycarp, Arkady' s friend, prepares to the programming competition and decides to write a contest. The contest consists of n problems and lasts for T minutes. Each of the problems is defined by two positive integers a_ i and p_ i \u2014 its difficulty and the score awarded by its solution. Polycarp' s experience suggests that his skill level is defined with positive real value s , and initially s= 1. 0 . To solve the i - th problem Polycarp needs a_ i/ s minutes. Polycarp loves to watch series, and before solving each of the problems he will definitely watch one episode. After Polycarp watches an episode, his skill decreases by 10% , that is skill level s decreases to 0. 9s . Each episode takes exactly 10 minutes to watch. When Polycarp decides to solve some problem, he firstly has to watch one episode, and only then he starts solving the problem without breaks for a_ i/ s minutes, where s is his current skill level. In calculation of a_ i/ s no rounding is performed, only division of integer value a_ i by real value s happens. Also, Polycarp can train for some time. If he trains for t minutes, he increases his skill by C \u00b7 t , where C is some given positive real constant. Polycarp can train only before solving any problem ( and before watching series) . Duration of the training can be arbitrary real value. Polycarp is interested: what is the largest score he can get in the contest? It is allowed to solve problems in any order, while training is only allowed before solving the first problem.",
    "input": "The first line contains one integer tc ( 1 \u2264 tc \u2264 20 ) \u2014 the number of test cases. Then tc test cases follow. The first line of each test contains one integer n ( 1 \u2264 n \u2264 100 ) \u2014 the number of problems in the contest. The second line of the test contains two real values C, T ( 0 < C < 10 , 0 \u2264 T \u2264 2 \u00b7 10^ 5 ) , where C defines the efficiency of the training and T is the duration of the contest in minutes. Value C, T are given exactly with three digits after the decimal point. Each of the next n lines of the test contain characteristics of the corresponding problem: two integers a_ i, p_ i ( 1 \u2264 a_ i \u2264 10^ 4 , 1 \u2264 p_ i \u2264 10 ) \u2014 the difficulty and the score of the problem. It is guaranteed that the value of T is such that changing it by the 0. 001 in any direction will not change the test answer. Please note that in hacks you can only use tc = 1 .",
    "output": "Print tc integers \u2014 the maximum possible score in each test case.",
    "note": "In the first example, Polycarp can get score of 7 as follows: Firstly he trains for 4 minutes, increasing s to the value of 5 ; Then he decides to solve 4 - th problem: he watches one episode in 10 minutes, his skill level decreases to s= 5* 0. 9= 4. 5 and then he solves the problem in 5/ s= 5/ 4. 5 , which is roughly 1. 111 minutes; Finally, he decides to solve 2 - nd problem: he watches one episode in 10 minutes, his skill level decreases to s= 4. 5* 0. 9= 4. 05 and then he solves the problem in 20/ s= 20/ 4. 05 , which is roughly 4. 938 minutes. This way, Polycarp uses roughly 4+ 10+ 1. 111+ 10+ 4. 938= 30. 049 minutes, to get score of 7 points. It is not possible to achieve larger score in 31 minutes. In the second example, Polycarp can get 20 points as follows: Firstly he trains for 4 minutes, increasing s to the value of 5 ; Then he decides to solve 1 - st problem: he watches one episode in 10 minutes, his skill decreases to s= 5* 0. 9= 4. 5 and then he solves problem in 1/ s= 1/ 4. 5 , which is roughly 0. 222 minutes. Finally, he decides to solve 2 - nd problem: he watches one episode in 10 minutes, his skill decreases to s= 4. 5* 0. 9= 4. 05 and then he solves the problem in 10/ s= 10/ 4. 05 , which is roughly 2. 469 minutes. This way, Polycarp gets score of 20 in 4+ 10+ 0. 222+ 10+ 2. 469= 26. 691 minutes. It is not possible to achieve larger score in 30 minutes.",
    "topics": [
      "binary search",
      "dp",
      "math"
    ],
    "id": "1056F"
  },
  {
    "title": "Divide Candies",
    "url": "https://codeforces.com/problemset/problem/1056/B",
    "history": "Arkady and his friends love playing checkers on an n \u00d7 n field. The rows and the columns of the field are enumerated from 1 to n . The friends have recently won a championship, so Arkady wants to please them with some candies. Remembering an old parable ( but not its moral) , Arkady wants to give to his friends one set of candies per each cell of the field: the set of candies for cell ( i, j) will have exactly ( i^ 2 + j^ 2) candies of unique type. There are m friends who deserve the present. How many of these n \u00d7 n sets of candies can be split equally into m parts without cutting a candy into pieces? Note that each set has to be split independently since the types of candies in different sets are different.",
    "input": "The only line contains two integers n and m ( 1 \u2264 n \u2264 10^ 9 , 1 \u2264 m \u2264 1000 ) \u2014 the size of the field and the number of parts to split the sets into.",
    "output": "Print a single integer \u2014 the number of sets that can be split equally.",
    "note": "In the first example, only the set for cell ( 3, 3) can be split equally ( 3^ 2 + 3^ 2 = 18 , which is divisible by m= 3 ) . In the second example, the sets for the following cells can be divided equally: ( 1, 2) and ( 2, 1) , since 1^ 2 + 2^ 2 = 5 , which is divisible by 5 ; ( 1, 3) and ( 3, 1) ; ( 2, 4) and ( 4, 2) ; ( 2, 6) and ( 6, 2) ; ( 3, 4) and ( 4, 3) ; ( 3, 6) and ( 6, 3) ; ( 5, 5) . In the third example, sets in all cells can be divided equally, since m = 1 .",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "1056B"
  },
  {
    "title": "Lucky Days",
    "url": "https://codeforces.com/problemset/problem/1055/C",
    "history": "Bob and Alice are often participating in various programming competitions. Like many competitive programmers, Alice and Bob have good and bad days. They noticed, that their lucky and unlucky days are repeating with some period. For example, for Alice days [ l_ a; r_ a] are lucky, then there are some unlucky days: [ r_ a + 1; l_ a + t_ a - 1] , and then there are lucky days again: [ l_ a + t_ a; r_ a + t_ a] and so on. In other words, the day is lucky for Alice if it lies in the segment [ l_ a + k t_ a; r_ a + k t_ a] for some non- negative integer k . The Bob' s lucky day have similar structure, however the parameters of his sequence are different: l_ b , r_ b , t_ b . So a day is a lucky for Bob if it lies in a segment [ l_ b + k t_ b; r_ b + k t_ b] , for some non- negative integer k . Alice and Bob want to participate in team competitions together and so they want to find out what is the largest possible number of consecutive days, which are lucky for both Alice and Bob.",
    "input": "The first line contains three integers l_ a , r_ a , t_ a ( 0 \u2264 l_ a \u2264 r_ a \u2264 t_ a - 1, 2 \u2264 t_ a \u2264 10^ 9 ) and describes Alice' s lucky days. The second line contains three integers l_ b , r_ b , t_ b ( 0 \u2264 l_ b \u2264 r_ b \u2264 t_ b - 1, 2 \u2264 t_ b \u2264 10^ 9 ) and describes Bob' s lucky days. It is guaranteed that both Alice and Bob have some unlucky days.",
    "output": "Print one integer: the maximum number of days in the row that are lucky for both Alice and Bob.",
    "note": "The graphs below correspond to the two sample tests and show the lucky and unlucky days of Alice and Bob as well as the possible solutions for these tests.",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "1055C"
  },
  {
    "title": "Epic Convolution",
    "url": "https://codeforces.com/problemset/problem/1054/H",
    "history": "You are given two arrays a_ 0, a_ 1, . . . , a_ n - 1 and b_ 0, b_ 1, . . . , b_ m- 1 , and an integer c . Compute the following sum: \u2211_ i= 0^ n- 1\u2211_ j= 0^ m- 1 a_ i b_ j c^ i^ 2 j^ 3 Since it' s value can be really large, print it modulo 490019 .",
    "input": "First line contains three integers n , m and c ( 1 \u2264 n, m \u2264 100 000 , 1 \u2264 c < 490019 ) . Next line contains exactly n integers a_ i and defines the array a ( 0 \u2264 a_ i \u2264 1000 ) . Last line contains exactly m integers b_ i and defines the array b ( 0 \u2264 b_ i \u2264 1000 ) .",
    "output": "Print one integer \u2014 value of the sum modulo 490019 .",
    "note": "In the first example, the only non- zero summand corresponds to i = 1 , j = 1 and is equal to 1 \u00b7 1 \u00b7 3^ 1 = 3 . In the second example, all summands are equal to 1 .",
    "topics": [
      "chinese remainder theorem",
      "fft",
      "math",
      "number theory"
    ],
    "id": "1054H"
  },
  {
    "title": "New Road Network",
    "url": "https://codeforces.com/problemset/problem/1054/G",
    "history": "The king of some country N decided to completely rebuild the road network. There are n people living in the country, they are enumerated from 1 to n . It is possible to construct a road between the house of any citizen a to the house of any other citizen b . There should not be more than one road between any pair of citizens. The road network must be connected, i. e. it should be possible to reach every citizen starting from anyone using roads. To save funds, it was decided to build exactly n- 1 road, so the road network should be a tree. However, it is not that easy as it sounds, that' s why the king addressed you for help. There are m secret communities in the country, each of them unites a non- empty subset of citizens. The king does not want to conflict with any of the communities, so he wants to build the network such that the houses of members of each society form a connected subtree in network. A set of vertices forms a connected subtree if and only if the graph remains connected when we delete all the other vertices and all edges but ones that connect the vertices from the set. Help the king to determine if it is possible to build the desired road network, and if it is, build it.",
    "input": "Each test consists of one or more test cases. The first line contains a single integer t ( 1 \u2264 t \u2264 2000 ) \u2014 the number of test cases. The following lines describe the test cases, each in the following format. The first line contains two integers n and m ( 1 \u2264 n, m \u2264 2000 ) \u2014 the number of citizens and the number of secret communities. The next m lines contain the description of the communities. The i - th of these lines contains a string s_ i of length n , consisting of characters ' 0' and ' 1' . The citizen with number j is a member of the i - th community if and only if s_ ij= 1 . It is guaranteed that the string s_ i contains at least one character ' 1' for each 1 \u2264 i \u2264 m . It is guaranteed that the sum of n for all test cases does not exceed 2000 and the sum of m for all test cases does not exceed 2000 .",
    "output": "Print the answer for all test cases in the order they are given in the input, each in the following format. If there is no way to build the desired road network, print \" NO\" ( without quotes) . Otherwise in the first line print \" YES\" ( without quotes) . In the next n- 1 lines print the description of the road network: each line should contain two integers a and b ( 1 \u2264 a, b \u2264 n , a = \u0338 b ) that denote you build a road between houses of citizens a and b . The roads should form a connected tree, and each community should form a connected subtree.",
    "note": "In the first example you can build the following network: It is easy to see that for each community all the houses of its members form a connected subtree. For example, the 2 - nd community unites the citizens 1 , 2 , 3 . They form a connected subtree, because if we delete everything except the houses 1 , 2 , 3 and the roads between them, two roads will remain: between 1 and 3 and between 2 and 3 , forming a connected graph. There is no network in the second example suitable for the king.",
    "topics": [
      "constructive algorithms",
      "greedy",
      "math"
    ],
    "id": "1054G"
  },
  {
    "title": "Chips Puzzle",
    "url": "https://codeforces.com/problemset/problem/1054/E",
    "history": "Egor came up with a new chips puzzle and suggests you to play. The puzzle has the form of a table with n rows and m columns, each cell can contain several black or white chips placed in a row. Thus, the state of the cell can be described by a string consisting of characters ' 0' ( a white chip) and ' 1' ( a black chip) , possibly empty, and the whole puzzle can be described as a table, where each cell is a string of zeros and ones. The task is to get from one state of the puzzle some other state. To do this, you can use the following operation. select 2 different cells ( x_ 1, y_ 1) and ( x_ 2, y_ 2) : the cells must be in the same row or in the same column of the table, and the string in the cell ( x_ 1, y_ 1) must be non- empty; in one operation you can move the last character of the string at the cell ( x_ 1, y_ 1) to the beginning of the string at the cell ( x_ 2, y_ 2) . Egor came up with two states of the table for you: the initial state and the final one. It is guaranteed that the number of zeros and ones in the tables are the same. Your goal is with several operations get the final state from the initial state. Of course, Egor does not want the number of operations to be very large. Let' s denote as s the number of characters in each of the tables ( which are the same) . Then you should use no more than 4 \u00b7 s operations.",
    "input": "The first line contains two integers n and m ( 2 \u2264 n, m \u2264 300 ) \u2014 the number of rows and columns of the table, respectively. The following n lines describe the initial state of the table in the following format: each line contains m non- empty strings consisting of zeros and ones. In the i - th of these lines, the j - th string is the string written at the cell ( i, j) . The rows are enumerated from 1 to n , the columns are numerated from 1 to m . The following n lines describe the final state of the table in the same format. Let' s denote the total length of strings in the initial state as s . It is guaranteed that s \u2264 100 000 . It is also guaranteed that the numbers of zeros and ones coincide in the initial and final states.",
    "output": "On the first line print q \u2014 the number of operations used. You should find such a solution that 0 \u2264 q \u2264 4 \u00b7 s . In each the next q lines print 4 integers x_ 1 , y_ 1 , x_ 2 , y_ 2 . On the i - th line you should print the description of the i - th operation. These integers should satisfy the conditions 1 \u2264 x_ 1, x_ 2 \u2264 n , 1 \u2264 y_ 1, y_ 2 \u2264 m , ( x_ 1, y_ 1) = \u0338 ( x_ 2, y_ 2) , x_ 1 = x_ 2 or y_ 1 = y_ 2 . The string in the cell ( x_ 1, y_ 1) should be non- empty. This sequence of operations should transform the initial state of the table to the final one. We can show that a solution exists. If there is more than one solution, find any of them.",
    "note": "Consider the first example. The current state of the table: 00 1001 11The first operation. The cell ( 2, 1) contains the string 01 . Applying the operation to cells ( 2, 1) and ( 1, 1) , we move the 1 from the end of the string 01 to the beginning of the string 00 and get the string 100 . The current state of the table: 100 100 11The second operation. The cell ( 1, 1) contains the string 100 . Applying the operation to cells ( 1, 1) and ( 1, 2) , we move the 0 from the end of the string 100 to the beginning of the string 10 and get the string 010 . The current state of the table: 10 0100 11The third operation. The cell ( 1, 2) contains the string 010 . Applying the operation to cells ( 1, 2) and ( 2, 2) , we move the 0 from the end of the string 010 to the beginning of the string 11 and get the string 011 . The current state of the table: 10 010 011The fourth operation. The cell ( 2, 2) contains the string 011 . Applying the operation to cells ( 2, 2) and ( 2, 1) , we move the 1 from the end of the string 011 to the beginning of the string 0 and get the string 10 . The current state of the table: 10 0110 01 It' s easy to see that we have reached the final state of the table.",
    "topics": [
      "constructive algorithms",
      "implementation",
      "math"
    ],
    "id": "1054E"
  },
  {
    "title": "Vasya and Multisets",
    "url": "https://codeforces.com/problemset/problem/1051/C",
    "history": "Vasya has a multiset s consisting of n integer numbers. Vasya calls some number x nice if it appears in the multiset exactly once. For example, multiset { 1, 1, 2, 3, 3, 3, 4} contains nice numbers 2 and 4 . Vasya wants to split multiset s into two multisets a and b ( one of which may be empty) in such a way that the quantity of nice numbers in multiset a would be the same as the quantity of nice numbers in multiset b ( the quantity of numbers to appear exactly once in multiset a and the quantity of numbers to appear exactly once in multiset b ) .",
    "input": "The first line contains a single integer n ( 2 \u2264 n \u2264 100) . The second line contains n integers s_ 1, s_ 2, . . . s_ n ( 1 \u2264 s_ i \u2264 100) \u2014 the multiset s .",
    "output": "If there exists no split of s to satisfy the given requirements, then print \" NO\" in the first line. Otherwise print \" YES\" in the first line. The second line should contain a string, consisting of n characters. i - th character should be equal to ' A' if the i - th element of multiset s goes to multiset a and ' B' if if the i - th element of multiset s goes to multiset b . Elements are numbered from 1 to n in the order they are given in the input. If there exist multiple solutions, then print any of them.",
    "note": "",
    "topics": [
      "brute force",
      "dp",
      "greedy",
      "implementation",
      "math"
    ],
    "id": "1051C"
  },
  {
    "title": "Relatively Prime Pairs",
    "url": "https://codeforces.com/problemset/problem/1051/B",
    "history": "You are given a set of all integers from l to r inclusive, l < r , ( r - l + 1) \u2264 3 \u00b7 10^ 5 and ( r - l) is always odd. You want to split these numbers into exactly r - l + 1/ 2 pairs in such a way that for each pair ( i, j) the greatest common divisor of i and j is equal to 1 . Each number should appear in exactly one of the pairs. Print the resulting pairs or output that no solution exists. If there are multiple solutions, print any of them.",
    "input": "The only line contains two integers l and r ( 1 \u2264 l < r \u2264 10^ 18 , r - l + 1 \u2264 3 \u00b7 10^ 5 , ( r - l) is odd) .",
    "output": "If any solution exists, print \" YES\" in the first line. Each of the next r - l + 1/ 2 lines should contain some pair of integers. GCD of numbers in each pair should be equal to 1 . All ( r - l + 1) numbers should be pairwise distinct and should have values from l to r inclusive. If there are multiple solutions, print any of them. If there exists no solution, print \" NO\" .",
    "note": "",
    "topics": [
      "greedy",
      "math",
      "number theory"
    ],
    "id": "1051B"
  },
  {
    "title": "Cover Points",
    "url": "https://codeforces.com/problemset/problem/1047/B",
    "history": "There are n points on the plane, ( x_ 1, y_ 1) , ( x_ 2, y_ 2) , . . . , ( x_ n, y_ n) . You need to place an isosceles triangle with two sides on the coordinate axis to cover all points ( a point is covered if it lies inside the triangle or on the side of the triangle) . Calculate the minimum length of the shorter side of the triangle.",
    "input": "First line contains one integer n ( 1 \u2264 n \u2264 10^ 5 ) . Each of the next n lines contains two integers x_ i and y_ i ( 1 \u2264 x_ i, y_ i \u2264 10^ 9 ) .",
    "output": "Print the minimum length of the shorter side of the triangle. It can be proved that it' s always an integer.",
    "note": "Illustration for the first example: Illustration for the second example:",
    "topics": [
      "geometry",
      "math"
    ],
    "id": "1047B"
  },
  {
    "title": "Little C Loves 3 I",
    "url": "https://codeforces.com/problemset/problem/1047/A",
    "history": "Little C loves number \u00ab3\u00bb very much. He loves all things about it. Now he has a positive integer n . He wants to split n into 3 positive integers a, b, c , such that a+ b+ c= n and none of the 3 integers is a multiple of 3 . Help him to find a solution.",
    "input": "A single line containing one integer n ( 3 \u2264 n \u2264 10^ 9 ) \u2014 the integer Little C has.",
    "output": "Print 3 positive integers a, b, c in a single line, such that a+ b+ c= n and none of them is a multiple of 3 . It can be proved that there is at least one solution. If there are multiple solutions, print any of them.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": "1047A"
  },
  {
    "title": "Self-exploration",
    "url": "https://codeforces.com/problemset/problem/1045/H",
    "history": "Being bored of exploring the Moon over and over again Wall- B decided to explore something he is made of \u2014 binary numbers. He took a binary number and decided to count how many times different substrings of length two appeared. He stored those values in c_ 00 , c_ 01 , c_ 10 and c_ 11 , representing how many times substrings 00, 01, 10 and 11 appear in the number respectively. For example: 10111100 \u2192 c_ 00 = 1, c_ 01 = 1, c_ 10 = 2, c_ 11 = 3 10000 \u2192 c_ 00 = 3, c_ 01 = 0, c_ 10 = 1, c_ 11 = 0 10101001 \u2192 c_ 00 = 1, c_ 01 = 3, c_ 10 = 3, c_ 11 = 0 1 \u2192 c_ 00 = 0, c_ 01 = 0, c_ 10 = 0, c_ 11 = 0 Wall- B noticed that there can be multiple binary numbers satisfying the same c_ 00 , c_ 01 , c_ 10 and c_ 11 constraints. Because of that he wanted to count how many binary numbers satisfy the constraints c_ xy given the interval [ A, B] . Unfortunately, his processing power wasn' t strong enough to handle large intervals he was curious about. Can you help him? Since this number can be large print it modulo 10^ 9 + 7 .",
    "input": "First two lines contain two positive binary numbers A and B ( 1 \u2264 A \u2264 B < 2^ 100 000 ) , representing the start and the end of the interval respectively. Binary numbers A and B have no leading zeroes. Next four lines contain decimal numbers c_ 00 , c_ 01 , c_ 10 and c_ 11 ( 0 \u2264 c_ 00, c_ 01, c_ 10, c_ 11\u2264 100 000 ) representing the count of two- digit substrings 00, 01, 10 and 11 respectively.",
    "output": "Output one integer number representing how many binary numbers in the interval [ A, B] satisfy the constraints mod 10^ 9 + 7 .",
    "note": "Example 1: The binary numbers in the interval [ 10, 1001] are 10, 11, 100, 101, 110, 111, 1000, 1001 . Only number 110 satisfies the constraints: c_ 00 = 0, c_ 01 = 0, c_ 10 = 1, c_ 11 = 1 . Example 2: No number in the interval satisfies the constraints",
    "topics": [
      "math"
    ],
    "id": "1045H"
  },
  {
    "title": "Shady Lady",
    "url": "https://codeforces.com/problemset/problem/1045/F",
    "history": "Ani and Borna are playing a short game on a two- variable polynomial. It' s a special kind of a polynomial: the monomials are fixed, but all of its coefficients are fill- in- the- blanks dashes, e. g. _ xy + _ x^ 4 y^ 7 + _ x^ 8 y^ 3 + . . . Borna will fill in the blanks with positive integers. He wants the polynomial to be bounded from below, i. e. his goal is to make sure there exists a real number M such that the value of the polynomial at any point is greater than M . Ani is mischievous, and wants the polynomial to be unbounded. Along with stealing Borna' s heart, she can also steal parts of polynomials. Ani is only a petty kind of thief, though: she can only steal at most one monomial from the polynomial before Borna fills in the blanks. If Ani and Borna play their only moves optimally, who wins?",
    "input": "The first line contains a positive integer N ( 2 \u2264 N \u2264 200 000) , denoting the number of the terms in the starting special polynomial. Each of the following N lines contains a description of a monomial: the k - th line contains two * * space* * - separated integers a_ k and b_ k ( 0 \u2264 a_ k, b_ k \u2264 10^ 9 ) which mean the starting polynomial has the term _ x^ a_ k y^ b_ k . It is guaranteed that for k = \u0338 l , either a_ k = \u0338 a_ l or b_ k = \u0338 b_ l .",
    "output": "If Borna can always choose the coefficients such that the resulting polynomial is bounded from below, regardless of what monomial Ani steals, output \" Borna\" . Else, output \" Ani\" . You shouldn' t output the quotation marks.",
    "note": "In the first sample, the initial polynomial is _ xy+ _ x^ 2 + _ y^ 2 . If Ani steals the _ y^ 2 term, Borna is left with _ xy+ _ x^ 2 . Whatever positive integers are written on the blanks, y \u2192 - \u221e and x : = 1 makes the whole expression go to negative infinity. In the second sample, the initial polynomial is _ 1 + _ x + _ x^ 2 + _ x^ 8 . One can check that no matter what term Ani steals, Borna can always win.",
    "topics": [
      "geometry",
      "math"
    ],
    "id": "1045F"
  },
  {
    "title": "Interstellar battle",
    "url": "https://codeforces.com/problemset/problem/1045/D",
    "history": "In the intergalactic empire Bubbledom there are N planets, of which some pairs are directly connected by two- way wormholes. There are N- 1 wormholes. The wormholes are of extreme religious importance in Bubbledom, a set of planets in Bubbledom consider themselves one intergalactic kingdom if and only if any two planets in the set can reach each other by traversing the wormholes. You are given that Bubbledom is one kingdom. In other words, the network of planets and wormholes is a tree. However, Bubbledom is facing a powerful enemy also possessing teleportation technology. The enemy attacks every night, and the government of Bubbledom retakes all the planets during the day. In a single attack, the enemy attacks every planet of Bubbledom at once, but some planets are more resilient than others. Planets are number 0, 1, . . . , N- 1 and the planet i will fall with probability p_ i . Before every night ( including the very first one) , the government reinforces or weakens the defenses of a single planet. The government of Bubbledom is interested in the following question: what is the expected number of intergalactic kingdoms Bubbledom will be split into, after a single enemy attack ( before they get a chance to rebuild) ? In other words, you need to print the expected number of connected components after every attack.",
    "input": "The first line contains one integer number N ( 1 \u2264 N \u2264 10^ 5 ) denoting the number of planets in Bubbledom ( numbered from 0 to N- 1 ) . The next line contains N different real numbers in the interval [ 0, 1] , specified with 2 digits after the decimal point, denoting the probabilities that the corresponding planet will fall. The next N- 1 lines contain all the wormholes in Bubbledom, where a wormhole is specified by the two planets it connects. The next line contains a positive integer Q ( 1 \u2264 Q \u2264 10^ 5 ) , denoting the number of enemy attacks. The next Q lines each contain a non- negative integer and a real number from interval [ 0, 1] , denoting the planet the government of Bubbledom decided to reinforce or weaken, along with the new probability that the planet will fall.",
    "output": "Output contains Q numbers, each of which represents the expected number of kingdoms that are left after each enemy attack. Your answers will be considered correct if their absolute or relative error does not exceed 10^ - 4 .",
    "note": "",
    "topics": [
      "math",
      "probabilities",
      "trees"
    ],
    "id": "1045D"
  },
  {
    "title": "Make It One",
    "url": "https://codeforces.com/problemset/problem/1043/F",
    "history": "Janusz is a businessman. He owns a company \" Januszex\" , which produces games for teenagers. Last hit of Januszex was a cool one- person game \" Make it one\" . The player is given a sequence of n integers a_ i . It is allowed to select any subset of them, and the score is equal to the greatest common divisor of selected elements. The goal is to take as little elements as it is possible, getting the score 1 . Now Janusz wonders, for given sequence, how much elements should the player choose?",
    "input": "The first line contains an only integer n ( 1 \u2264 n \u2264 300 000 ) \u2014 the number of integers in the sequence. The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 300 000 ) .",
    "output": "If there is no subset of the given sequence with gcd equal to 1 , output - 1. Otherwise, output exactly one integer \u2014 the size of the smallest subset with gcd equal to 1 .",
    "note": "In the first example, selecting a subset of all numbers gives a gcd of 1 and for all smaller subsets the gcd is greater than 1 . In the second example, for all subsets of numbers the gcd is at least 2 .",
    "topics": [
      "bitmasks",
      "combinatorics",
      "dp",
      "math",
      "number theory",
      "shortest paths"
    ],
    "id": "1043F"
  },
  {
    "title": "Train Hard, Win Easy",
    "url": "https://codeforces.com/problemset/problem/1043/E",
    "history": "Zibi is a competitive programming coach. There are n competitors who want to be prepared well. The training contests are quite unusual \u2013 there are two people in a team, two problems, and each competitor will code exactly one of them. Of course, people in one team will code different problems. Rules of scoring also aren' t typical. The first problem is always an implementation problem: you have to implement some well- known algorithm very fast and the time of your typing is rated. The second one is an awful geometry task and you just have to get it accepted in reasonable time. Here the length and difficulty of your code are important. After that, Zibi will give some penalty points ( possibly negative) for each solution and the final score of the team is the sum of them ( the less the score is, the better) . We know that the i - th competitor will always have score x_ i when he codes the first task and y_ i when he codes the second task. We can assume, that all competitors know each other' s skills and during the contest distribute the problems in the way that minimizes their final score. Remember that each person codes exactly one problem in a contest. Zibi wants all competitors to write a contest with each other. However, there are m pairs of people who really don' t like to cooperate and they definitely won' t write a contest together. Still, the coach is going to conduct trainings for all possible pairs of people, such that the people in pair don' t hate each other. The coach is interested for each participant, what will be his or her sum of scores of all teams he trained in?",
    "input": "The first line contains two integers n and m ( 2 \u2264 n \u2264 300 000 , 0 \u2264 m \u2264 300 000 ) \u2014 the number of participants and the number of pairs of people who will not write a contest together. Each of the next n lines contains two integers x_ i and y_ i ( - 10^ 9 \u2264 x_ i, y_ i \u2264 10^ 9 ) \u2014 the scores which will the i - th competitor get on the first problem and on the second problem. It is guaranteed that there are no two people having both x_ i and y_ i same. Each of the next m lines contain two integers u_ i and v_ i ( 1 \u2264 u_ i, v_ i \u2264 n , u_ i v_ i ) \u2014 indices of people who don' t want to write a contest in one team. Each unordered pair of indices will appear at most once.",
    "output": "Output n integers \u2014 the sum of scores for all participants in the same order as they appear in the input.",
    "note": "In the first example, there will be only one team consisting of persons 1 and 3 . The optimal strategy for them is to assign the first task to the 3 - rd person and the second task to the 1 - st person, this will lead to score equal to 1 + 2 = 3 . In the second example, nobody likes anyone, so there won' t be any trainings. It seems that Zibi won' t be titled coach in that case. . .",
    "topics": [
      "constructive algorithms",
      "greedy",
      "math",
      "sortings"
    ],
    "id": "1043E"
  },
  {
    "title": "Mysterious Crime",
    "url": "https://codeforces.com/problemset/problem/1043/D",
    "history": "Acingel is a small town. There was only one doctor here \u2014 Miss Ada. She was very friendly and nobody has ever said something bad about her, so who could' ve expected that Ada will be found dead in her house? Mr Gawry, world- famous detective, is appointed to find the criminal. He asked m neighbours of Ada about clients who have visited her in that unlucky day. Let' s number the clients from 1 to n . Each neighbour' s testimony is a permutation of these numbers, which describes the order in which clients have been seen by the asked neighbour. However, some facts are very suspicious \u2013 how it is that, according to some of given permutations, some client has been seen in the morning, while in others he has been seen in the evening? \" In the morning some of neighbours must have been sleeping! \" \u2014 thinks Gawry \u2014 \" and in the evening there' s been too dark to see somebody' s face. . . \" . Now he wants to delete some prefix and some suffix ( both prefix and suffix can be empty) in each permutation, so that they' ll be non- empty and equal to each other after that \u2014 some of the potential criminals may disappear, but the testimony won' t stand in contradiction to each other. In how many ways he can do it? Two ways are called different if the remaining common part is different.",
    "input": "The first line contains two integers n and m ( 1 \u2264 n \u2264 100 000 , 1 \u2264 m \u2264 10 ) \u2014 the number of suspects and the number of asked neighbors. Each of the next m lines contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 n ) . It is guaranteed that these integers form a correct permutation ( that is, each number from 1 to n appears exactly once) .",
    "output": "Output a single integer denoting the number of ways to delete some prefix and some suffix of each permutation ( possibly empty) , such that the remaining parts will be equal and non- empty.",
    "note": "In the first example, all possible common parts are [ 1] , [ 2] , [ 3] and [ 2, 3] . In the second and third examples, you can only leave common parts of length 1 .",
    "topics": [
      "brute force",
      "combinatorics",
      "math",
      "meet-in-the-middle",
      "two pointers"
    ],
    "id": "1043D"
  },
  {
    "title": "Elections",
    "url": "https://codeforces.com/problemset/problem/1043/A",
    "history": "Awruk is taking part in elections in his school. It is the final round. He has only one opponent \u2014 Elodreip. The are n students in the school. Each student has exactly k votes and is obligated to use all of them. So Awruk knows that if a person gives a_ i votes for Elodreip, than he will get exactly k - a_ i votes from this person. Of course 0 \u2264 k - a_ i holds. Awruk knows that if he loses his life is over. He has been speaking a lot with his friends and now he knows a_ 1, a_ 2, . . . , a_ n \u2014 how many votes for Elodreip each student wants to give. Now he wants to change the number k to win the elections. Of course he knows that bigger k means bigger chance that somebody may notice that he has changed something and then he will be disqualified. So, Awruk knows a_ 1, a_ 2, . . . , a_ n \u2014 how many votes each student will give to his opponent. Help him select the smallest winning number k . In order to win, Awruk needs to get strictly more votes than Elodreip.",
    "input": "The first line contains integer n ( 1 \u2264 n \u2264 100 ) \u2014 the number of students in the school. The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 100 ) \u2014 the number of votes each student gives to Elodreip.",
    "output": "Output the smallest integer k ( k \u2265max a_ i ) which gives Awruk the victory. In order to win, Awruk needs to get strictly more votes than Elodreip.",
    "note": "In the first example, Elodreip gets 1 + 1 + 1 + 5 + 1 = 9 votes. The smallest possible k is 5 ( it surely can' t be less due to the fourth person) , and it leads to 4 + 4 + 4 + 0 + 4 = 16 votes for Awruk, which is enough to win. In the second example, Elodreip gets 11 votes. If k = 4 , Awruk gets 9 votes and loses to Elodreip.",
    "topics": [
      "implementation",
      "math"
    ],
    "id": "1043A"
  },
  {
    "title": "Vasya and Magic Matrix",
    "url": "https://codeforces.com/problemset/problem/1042/E",
    "history": "Vasya has got a magic matrix a of size n \u00d7 m . The rows of the matrix are numbered from 1 to n from top to bottom, the columns are numbered from 1 to m from left to right. Let a_ ij be the element in the intersection of the i - th row and the j - th column. Vasya has also got a chip. Initially, the chip is in the intersection of the r - th row and the c - th column ( that is, in the element a_ rc ) . Vasya performs the following process as long as possible: among all elements of the matrix having their value less than the value of the element with the chip in it, Vasya randomly and equiprobably chooses one element and moves his chip to this element. After moving the chip, he adds to his score the square of the Euclidean distance between these elements ( that is, between the element in which the chip is now and the element the chip was moved from) . The process ends when there are no elements having their values less than the value of the element with the chip in it. Euclidean distance between matrix elements with coordinates ( i_ 1, j_ 1) and ( i_ 2, j_ 2) is equal to \u221a( ( i_ 1- i_ 2) ^ 2 + ( j_ 1- j_ 2) ^ 2) . Calculate the expected value of the Vasya' s final score. It can be shown that the answer can be represented as P/ Q , where P and Q are coprime integer numbers, and Q \u2261\u03380 ( mod 998244353) . Print the value P \u00b7 Q^ - 1 modulo 998244353 .",
    "input": "The first line of the input contains two integers n and m ( 1 \u2264 n, m \u2264 1 000) \u2014 the number of rows and the number of columns in the matrix a . The following n lines contain description of the matrix a . The i - th line contains m integers a_ i1, a_ i2, . . . , a_ im ( 0 \u2264 a_ ij\u2264 10^ 9) . The following line contains two integers r and c ( 1 \u2264 r \u2264 n, 1 \u2264 c \u2264 m) \u2014 the index of row and the index of column where the chip is now.",
    "output": "Print the expected value of Vasya' s final score in the format described in the problem statement.",
    "note": "In the first example, Vasya will move his chip exactly once. The expected value of the final score is equal to 1^ 2 + 2^ 2+ 1^ 2/ 3 = 2 .",
    "topics": [
      "dp",
      "math",
      "probabilities"
    ],
    "id": "1042E"
  },
  {
    "title": "Array Product",
    "url": "https://codeforces.com/problemset/problem/1042/C",
    "history": "You are given an array a consisting of n integers. You can perform the following operations with it: Choose some positions i and j ( 1 \u2264 i, j \u2264 n, i j ) , write the value of a_ i \u00b7 a_ j into the j - th cell and remove the number from the i - th cell; Choose some position i and remove the number from the i - th cell ( this operation can be performed no more than once and at any point of time, not necessarily in the beginning) . The number of elements decreases by one after each operation. However, the indexing of positions stays the same. Deleted numbers can' t be used in the later operations. Your task is to perform exactly n - 1 operations with the array in such a way that the only number that remains in the array is maximum possible. This number can be rather large, so instead of printing it you need to print any sequence of operations which leads to this maximum number. Read the output format to understand what exactly you need to print.",
    "input": "The first line contains a single integer n ( 2 \u2264 n \u2264 2 \u00b7 10^ 5 ) \u2014 the number of elements in the array. The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( - 10^ 9 \u2264 a_ i \u2264 10^ 9 ) \u2014 the elements of the array.",
    "output": "Print n - 1 lines. The k - th line should contain one of the two possible operations. The operation of the first type should look like this: 1 i_ k j_ k , where 1 is the type of operation, i_ k and j_ k are the positions of the chosen elements. The operation of the second type should look like this: 2 i_ k , where 2 is the type of operation, i_ k is the position of the chosen element. Note that there should be no more than one such operation. If there are multiple possible sequences of operations leading to the maximum number \u2014 print any of them.",
    "note": "Let X be the removed number in the array. Let' s take a look at all the examples: The first example has, for example, the following sequence of transformations of the array: [ 5, - 2, 0, 1, - 3] \u2192 [ 5, - 2, X, 1, - 3] \u2192 [ X, - 10, X, 1, - 3] \u2192 [ X, X, X, - 10, - 3] \u2192 [ X, X, X, X, 30] . Thus, the maximum answer is 30 . Note, that other sequences that lead to the answer 30 are also correct. The second example has, for example, the following sequence of transformations of the array: [ 5, 2, 0, 4, 0] \u2192 [ 5, 2, X, 4, 0] \u2192 [ 5, 2, X, 4, X] \u2192 [ X, 10, X, 4, X] \u2192 [ X, X, X, 40, X] . The following answer is also allowed: 1 5 31 4 21 2 12 3Then the sequence of transformations of the array will look like this: [ 5, 2, 0, 4, 0] \u2192 [ 5, 2, 0, 4, X] \u2192 [ 5, 8, 0, X, X] \u2192 [ 40, X, 0, X, X] \u2192 [ 40, X, X, X, X] . The third example can have the following sequence of transformations of the array: [ 2, - 1] \u2192 [ 2, X] . The fourth example can have the following sequence of transformations of the array: [ 0, - 10, 0, 0] \u2192 [ X, 0, 0, 0] \u2192 [ X, X, 0, 0] \u2192 [ X, X, X, 0] . The fifth example can have the following sequence of transformations of the array: [ 0, 0, 0, 0] \u2192 [ X, 0, 0, 0] \u2192 [ X, X, 0, 0] \u2192 [ X, X, X, 0] .",
    "topics": [
      "constructive algorithms",
      "greedy",
      "math"
    ],
    "id": "1042C"
  },
  {
    "title": "Ray in the tube",
    "url": "https://codeforces.com/problemset/problem/1041/F",
    "history": "You are given a tube which is reflective inside represented as two non- coinciding, but parallel to Ox lines. Each line has some special integer points \u2014 positions of sensors on sides of the tube. You are going to emit a laser ray in the tube. To do so, you have to choose two integer points A and B on the first and the second line respectively ( coordinates can be negative) : the point A is responsible for the position of the laser, and the point B \u2014 for the direction of the laser ray. The laser ray is a ray starting at A and directed at B which will reflect from the sides of the tube ( it doesn' t matter if there are any sensors at a reflection point or not) . A sensor will only register the ray if the ray hits exactly at the position of the sensor. Examples of laser rays. Note that image contains two examples. The 3 sensors ( denoted by black bold points on the tube sides) will register the blue ray but only 2 will register the red. Calculate the maximum number of sensors which can register your ray if you choose points A and B on the first and the second lines respectively.",
    "input": "The first line contains two integers n and y_ 1 ( 1 \u2264 n \u2264 10^ 5 , 0 \u2264 y_ 1 \u2264 10^ 9 ) \u2014 number of sensors on the first line and its y coordinate. The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 0 \u2264 a_ i \u2264 10^ 9 ) \u2014 x coordinates of the sensors on the first line in the ascending order. The third line contains two integers m and y_ 2 ( 1 \u2264 m \u2264 10^ 5 , y_ 1 < y_ 2 \u2264 10^ 9 ) \u2014 number of sensors on the second line and its y coordinate. The fourth line contains m integers b_ 1, b_ 2, . . . , b_ m ( 0 \u2264 b_ i \u2264 10^ 9 ) \u2014 x coordinates of the sensors on the second line in the ascending order.",
    "output": "Print the only integer \u2014 the maximum number of sensors which can register the ray.",
    "note": "One of the solutions illustrated on the image by pair A_ 2 and B_ 2 .",
    "topics": [
      "data structures",
      "divide and conquer",
      "dp",
      "math"
    ],
    "id": "1041F"
  },
  {
    "title": "Buying a TV Set",
    "url": "https://codeforces.com/problemset/problem/1041/B",
    "history": "Monocarp has decided to buy a new TV set and hang it on the wall in his flat. The wall has enough free space so Monocarp can buy a TV set with screen width not greater than a and screen height not greater than b . Monocarp is also used to TV sets with a certain aspect ratio: formally, if the width of the screen is w , and the height of the screen is h , then the following condition should be met: w/ h = x/ y . There are many different TV sets in the shop. Monocarp is sure that for any pair of positive integers w and h there is a TV set with screen width w and height h in the shop. Monocarp isn' t ready to choose the exact TV set he is going to buy. Firstly he wants to determine the optimal screen resolution. He has decided to try all possible variants of screen size. But he must count the number of pairs of positive integers w and h , beforehand, such that ( w \u2264 a) , ( h \u2264 b) and ( w/ h = x/ y) . In other words, Monocarp wants to determine the number of TV sets having aspect ratio x/ y , screen width not exceeding a , and screen height not exceeding b . Two TV sets are considered different if they have different screen width or different screen height.",
    "input": "The first line contains four integers a , b , x , y ( 1 \u2264 a, b, x, y \u2264 10^ 18 ) \u2014 the constraints on the screen width and height, and on the aspect ratio.",
    "output": "Print one integer \u2014 the number of different variants to choose TV screen width and screen height so that they meet the aforementioned constraints.",
    "note": "In the first example, there are 3 possible variants: ( 5, 3) , ( 10, 6) , ( 15, 9) . In the second example, there is no TV set meeting the constraints. In the third example, there is only one variant: ( 3, 2) .",
    "topics": [
      "math"
    ],
    "id": "1041B"
  },
  {
    "title": "Shashlik Cooking",
    "url": "https://codeforces.com/problemset/problem/1040/B",
    "history": "Long story short, shashlik is Miroslav' s favorite food. Shashlik is prepared on several skewers simultaneously. There are two states for each skewer: initial and turned over. This time Miroslav laid out n skewers parallel to each other, and enumerated them with consecutive integers from 1 to n in order from left to right. For better cooking, he puts them quite close to each other, so when he turns skewer number i , it leads to turning k closest skewers from each side of the skewer i , that is, skewers number i - k , i - k + 1 , . . . , i - 1 , i + 1 , . . . , i + k - 1 , i + k ( if they exist) . For example, let n = 6 and k = 1 . When Miroslav turns skewer number 3 , then skewers with numbers 2 , 3 , and 4 will come up turned over. If after that he turns skewer number 1 , then skewers number 1 , 3 , and 4 will be turned over, while skewer number 2 will be in the initial position ( because it is turned again) . As we said before, the art of cooking requires perfect timing, so Miroslav wants to turn over all n skewers with the minimal possible number of actions. For example, for the above example n = 6 and k = 1 , two turnings are sufficient: he can turn over skewers number 2 and 5 . Help Miroslav turn over all n skewers.",
    "input": "The first line contains two integers n and k ( 1 \u2264 n \u2264 1000 , 0 \u2264 k \u2264 1000 ) \u2014 the number of skewers and the number of skewers from each side that are turned in one step.",
    "output": "The first line should contain integer l \u2014 the minimum number of actions needed by Miroslav to turn over all n skewers. After than print l integers from 1 to n denoting the number of the skewer that is to be turned over at the corresponding step.",
    "note": "In the first example the first operation turns over skewers 1 , 2 and 3 , the second operation turns over skewers 4 , 5 , 6 and 7 . In the second example it is also correct to turn over skewers 2 and 5 , but turning skewers 2 and 4 , or 1 and 5 are incorrect solutions because the skewer 3 is in the initial state after these operations.",
    "topics": [
      "dp",
      "greedy",
      "math"
    ],
    "id": "1040B"
  },
  {
    "title": "Network Safety",
    "url": "https://codeforces.com/problemset/problem/1039/C",
    "history": "The Metropolis computer network consists of n servers, each has an encryption key in the range from 0 to 2^ k - 1 assigned to it. Let c_ i be the encryption key assigned to the i - th server. Additionally, m pairs of servers are directly connected via a data communication channel. Because of the encryption algorithms specifics, a data communication channel can only be considered safe if the two servers it connects have distinct encryption keys. The initial assignment of encryption keys is guaranteed to keep all data communication channels safe. You have been informed that a new virus is actively spreading across the internet, and it is capable to change the encryption key of any server it infects. More specifically, the virus body contains some unknown number x in the same aforementioned range, and when server i is infected, its encryption key changes from c_ i to c_ i \u2295 x , where \u2295 denotes the bitwise XOR operation. Sadly, you know neither the number x nor which servers of Metropolis are going to be infected by the dangerous virus, so you have decided to count the number of such situations in which all data communication channels remain safe. Formally speaking, you need to find the number of pairs ( A, x) , where A is some ( possibly empty) subset of the set of servers and x is some number in the range from 0 to 2^ k - 1 , such that when all servers from the chosen subset A and none of the others are infected by a virus containing the number x , all data communication channels remain safe. Since this number can be quite big, you are asked to find its remainder modulo 10^ 9 + 7 .",
    "input": "The first line of input contains three integers n , m and k ( 1 \u2264 n \u2264 500 000 , 0 \u2264 m \u2264min( n( n - 1) / 2, 500 000) , 0 \u2264 k \u2264 60 ) \u2014 the number of servers, the number of pairs of servers directly connected by a data communication channel, and the parameter k , which defines the range of possible values for encryption keys. The next line contains n integers c_ i ( 0 \u2264 c_ i \u2264 2^ k - 1 ) , the i - th of which is the encryption key used by the i - th server. The next m lines contain two integers u_ i and v_ i each ( 1 \u2264 u_ i, v_ i \u2264 n , u_ i v_ i ) denoting that those servers are connected by a data communication channel. It is guaranteed that each pair of servers appears in this list at most once.",
    "output": "The only output line should contain a single integer \u2014 the number of safe infections of some subset of servers by a virus with some parameter, modulo 10^ 9 + 7 .",
    "note": "Consider the first example. Possible values for the number x contained by the virus are 0 , 1 , 2 and 3 . For values 0 , 2 and 3 the virus can infect any subset of the set of servers, which gives us 16 pairs for each values. A virus containing the number 1 can infect either all of the servers, or none. This gives us 16 + 2 + 16 + 16 = 50 pairs in total.",
    "topics": [
      "dfs and similar",
      "dsu",
      "graphs",
      "math",
      "sortings"
    ],
    "id": "1039C"
  },
  {
    "title": "Timetable",
    "url": "https://codeforces.com/problemset/problem/1039/A",
    "history": "There are two bus stops denoted A and B, and there n buses that go from A to B every day. The shortest path from A to B takes t units of time but some buses might take longer paths. Moreover, buses are allowed to overtake each other during the route. At each station one can find a sorted list of moments of time when a bus is at this station. We denote this list as a_ 1 < a_ 2 < . . . < a_ n for stop A and as b_ 1 < b_ 2 < . . . < b_ n for stop B. The buses always depart from A and arrive to B according to the timetable, but the order in which the buses arrive may differ. Let' s call an order of arrivals valid if each bus arrives at least t units of time later than departs. It is known that for an order to be valid the latest possible arrival for the bus that departs at a_ i is b_ x_ i , i. e. x_ i - th in the timetable. In other words, for each i there exists such a valid order of arrivals that the bus departed i - th arrives x_ i - th ( and all other buses can arrive arbitrary) , but there is no valid order of arrivals in which the i - th departed bus arrives ( x_ i + 1) - th. Formally, let' s call a permutation p_ 1, p_ 2, . . . , p_ n valid, if b_ p_ i\u2265 a_ i + t for all i . Then x_ i is the maximum value of p_ i among all valid permutations. You are given the sequences a_ 1, a_ 2, . . . , a_ n and x_ 1, x_ 2, . . . , x_ n , but not the arrival timetable. Find out any suitable timetable for stop B b_ 1, b_ 2, . . . , b_ n or determine that there is no such timetable.",
    "input": "The first line of the input contains two integers n and t ( 1 \u2264 n \u2264 200 000 , 1 \u2264 t \u2264 10^ 18 ) \u2014 the number of buses in timetable for and the minimum possible travel time from stop A to stop B. The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ 1 < a_ 2 < . . . < a_ n \u2264 10^ 18 ) , defining the moments of time when the buses leave stop A. The third line contains n integers x_ 1, x_ 2, . . . , x_ n ( 1 \u2264 x_ i \u2264 n ) , the i - th of them stands for the maximum possible timetable position, at which the i - th bus leaving stop A can arrive at stop B.",
    "output": "If a solution exists, print \" Yes\" ( without quotes) in the first line of the output. In the second line print n integers b_ 1, b_ 2, . . . , b_ n ( 1 \u2264 b_ 1 < b_ 2 < . . . < b_ n \u2264 3 \u00b7 10^ 18 ) . We can show that if there exists any solution, there exists a solution that satisfies such constraints on b_ i . If there are multiple valid answers you can print any of them. If there is no valid timetable, print \" No\" ( without quotes) in the only line of the output.",
    "note": "Consider the first example and the timetable b_ 1, b_ 2, . . . , b_ n from the output. To get x_ 1 = 2 the buses can arrive in the order ( 2, 1, 3) . To get x_ 2 = 2 and x_ 3 = 3 the buses can arrive in the order ( 1, 2, 3) . x_ 1 is not 3 , because the permutations ( 3, 1, 2) and ( 3, 2, 1) ( all in which the 1 - st bus arrives 3 - rd) are not valid ( sube buses arrive too early) , x_ 2 is not 3 because of similar reasons.",
    "topics": [
      "constructive algorithms",
      "data structures",
      "greedy",
      "math"
    ],
    "id": "1039A"
  },
  {
    "title": "Non-Coprime Partition",
    "url": "https://codeforces.com/problemset/problem/1038/B",
    "history": "Find out if it is possible to partition the first n positive integers into two non- empty disjoint sets S_ 1 and S_ 2 such that: gcd( sum( S_ 1) , sum( S_ 2) ) > 1 Here sum( S) denotes the sum of all elements present in set S and gcd means thegreatest common divisor. Every integer number from 1 to n should be present in exactly one of S_ 1 or S_ 2 .",
    "input": "The only line of the input contains a single integer n ( 1 \u2264 n \u2264 45 000 )",
    "output": "If such partition doesn' t exist, print \" No\" ( quotes for clarity) . Otherwise, print \" Yes\" ( quotes for clarity) , followed by two lines, describing S_ 1 and S_ 2 respectively. Each set description starts with the set size, followed by the elements of the set in any order. Each set must be non- empty. If there are multiple possible partitions \u2014 print any of them.",
    "note": "In the first example, there is no way to partition a single number into two non- empty sets, hence the answer is \" No\" . In the second example, the sums of the sets are 2 and 4 respectively. The gcd( 2, 4) = 2 > 1 , hence that is one of the possible answers.",
    "topics": [
      "constructive algorithms",
      "math"
    ],
    "id": "1038B"
  },
  {
    "title": "Maximum Reduction",
    "url": "https://codeforces.com/problemset/problem/1037/F",
    "history": "Given an array a of n integers and an integer k ( 2 \u2264 k \u2264 n ) , where each element of the array is denoted by a_ i ( 0 \u2264 i < n ) . Perform the operation z given below on a and print the value of z( a, k) modulo 10^ 9+ 7 . function z( array a, integer k) : if length( a) < k: return 0 else: b = empty array ans = 0 for i = 0 . . ( length( a) - k) : temp = a[ i] for j = i . . ( i + k - 1) : temp = max( temp, a[ j] ) append temp to the end of b ans = ans + temp return ans + z( b, k)",
    "input": "The first line of input contains two integers n and k ( 2 \u2264 k \u2264 n \u2264 10^ 6 ) \u2014 the length of the initial array a and the parameter k . The second line of input contains n integers a_ 0, a_ 1, . . . , a_ n - 1 ( 1 \u2264 a_ i\u2264 10^ 9 ) \u2014 the elements of the array a .",
    "output": "Output the only integer, the value of z( a, k) modulo 10^ 9+ 7 .",
    "note": "In the first example: for a= ( 9, 1, 10) , ans= 19 and b= ( 9, 10) , for a= ( 9, 10) , ans= 10 and b= ( 10) , for a= ( 10) , ans= 0 . So the returned value is 19+ 10+ 0= 29 . In the second example: for a= ( 5, 8, 7, 1, 9) , ans= 25 and b= ( 8, 8, 9) , for a= ( 8, 8, 9) , ans= 9 and b= ( 9) , for a= ( 9) , ans= 0 . So the returned value is 25+ 9+ 0= 34 .",
    "topics": [
      "combinatorics",
      "data structures",
      "math"
    ],
    "id": "1037F"
  },
  {
    "title": "Packets",
    "url": "https://codeforces.com/problemset/problem/1037/A",
    "history": "You have n coins, each of the same value of 1 . Distribute them into packets such that any amount x ( 1 \u2264 x \u2264 n ) can be formed using some ( possibly one or all) number of these packets. Each packet may only be used entirely or not used at all. No packet may be used more than once in the formation of the single x , however it may be reused for the formation of other x ' s. Find the minimum number of packets in such a distribution.",
    "input": "The only line contains a single integer n ( 1 \u2264 n \u2264 10^ 9 ) \u2014 the number of coins you have.",
    "output": "Output a single integer \u2014 the minimum possible number of packets, satisfying the condition above.",
    "note": "In the first example, three packets with 1 , 2 and 3 coins can be made to get any amount x ( 1\u2264 x\u2264 6 ) . To get 1 use the packet with 1 coin. To get 2 use the packet with 2 coins. To get 3 use the packet with 3 coins. To get 4 use packets with 1 and 3 coins. To get 5 use packets with 2 and 3 coins To get 6 use all packets. In the second example, two packets with 1 and 1 coins can be made to get any amount x ( 1\u2264 x\u2264 2 ) .",
    "topics": [
      "constructive algorithms",
      "greedy",
      "math"
    ],
    "id": "1037A"
  },
  {
    "title": "Relatively Prime Powers",
    "url": "https://codeforces.com/problemset/problem/1036/F",
    "history": "Consider some positive integer x . Its prime factorization will be of form x = 2^ k_ 1\u00b7 3^ k_ 2\u00b7 5^ k_ 3\u00b7. . . Let' s call x elegant if the greatest common divisor of the sequence k_ 1, k_ 2, . . . is equal to 1 . For example, numbers 5 = 5^ 1 , 12 = 2^ 2 \u00b7 3 , 72 = 2^ 3 \u00b7 3^ 2 are elegant and numbers 8 = 2^ 3 ( GCD = 3 ) , 2500 = 2^ 2 \u00b7 5^ 4 ( GCD = 2 ) are not. Count the number of elegant integers from 2 to n . Each testcase contains several values of n , for each of them you are required to solve the problem separately.",
    "input": "The first line contains a single integer T ( 1 \u2264 T \u2264 10^ 5 ) \u2014 the number of values of n in the testcase. Each of the next T lines contains a single integer n_ i ( 2 \u2264 n_ i \u2264 10^ 18 ) .",
    "output": "Print T lines \u2014 the i - th line should contain the number of elegant numbers from 2 to n_ i .",
    "note": "Here is the list of non- elegant numbers up to 10 : 4 = 2^ 2, GCD = 2 ; 8 = 2^ 3, GCD = 3 ; 9 = 3^ 2, GCD = 2 . The rest have GCD = 1 .",
    "topics": [
      "combinatorics",
      "math",
      "number theory"
    ],
    "id": "1036F"
  },
  {
    "title": "Diagonal Walking v.2",
    "url": "https://codeforces.com/problemset/problem/1036/B",
    "history": "Mikhail walks on a Cartesian plane. He starts at the point ( 0, 0) , and in one move he can go to any of eight adjacent points. For example, if Mikhail is currently at the point ( 0, 0) , he can go to any of the following points in one move: ( 1, 0) ; ( 1, 1) ; ( 0, 1) ; ( - 1, 1) ; ( - 1, 0) ; ( - 1, - 1) ; ( 0, - 1) ; ( 1, - 1) . If Mikhail goes from the point ( x1, y1) to the point ( x2, y2) in one move, and x1 x2 and y1 y2 , then such a move is called a diagonal move. Mikhail has q queries. For the i - th query Mikhail' s target is to go to the point ( n_ i, m_ i) from the point ( 0, 0) in exactly k_ i moves. Among all possible movements he want to choose one with the maximum number of diagonal moves. Your task is to find the maximum number of diagonal moves or find that it is impossible to go from the point ( 0, 0) to the point ( n_ i, m_ i) in k_ i moves. Note that Mikhail can visit any point any number of times ( even the destination point! ) .",
    "input": "The first line of the input contains one integer q ( 1 \u2264 q \u2264 10^ 4 ) \u2014 the number of queries. Then q lines follow. The i - th of these q lines contains three integers n_ i , m_ i and k_ i ( 1 \u2264 n_ i, m_ i, k_ i \u2264 10^ 18 ) \u2014 x - coordinate of the destination point of the query, y - coordinate of the destination point of the query and the number of moves in the query, correspondingly.",
    "output": "Print q integers. The i - th integer should be equal to - 1 if Mikhail cannot go from the point ( 0, 0) to the point ( n_ i, m_ i) in exactly k_ i moves described above. Otherwise the i - th integer should be equal to the the maximum number of diagonal moves among all possible movements.",
    "note": "One of the possible answers to the first test case: ( 0, 0) \u2192 ( 1, 0) \u2192 ( 1, 1) \u2192 ( 2, 2) . One of the possible answers to the second test case: ( 0, 0) \u2192 ( 0, 1) \u2192 ( 1, 2) \u2192 ( 0, 3) \u2192 ( 1, 4) \u2192 ( 2, 3) \u2192 ( 3, 2) \u2192 ( 4, 3) . In the third test case Mikhail cannot reach the point ( 10, 1) in 9 moves.",
    "topics": [
      "math"
    ],
    "id": "1036B"
  },
  {
    "title": "Function Height",
    "url": "https://codeforces.com/problemset/problem/1036/A",
    "history": "You are given a set of 2n+ 1 integer points on a Cartesian plane. Points are numbered from 0 to 2n inclusive. Let P_ i be the i - th point. The x - coordinate of the point P_ i equals i . The y - coordinate of the point P_ i equals zero ( initially) . Thus, initially P_ i= ( i, 0) . The given points are vertices of a plot of a piecewise function. The j - th piece of the function is the segment P_ jP_ j + 1 . In one move you can increase the y - coordinate of any point with odd x - coordinate ( i. e. such points are P_ 1, P_ 3, . . . , P_ 2n- 1 ) by 1 . Note that the corresponding segments also change. For example, the following plot shows a function for n= 3 ( i. e. number of points is 2\u00b73+ 1= 7 ) in which we increased the y - coordinate of the point P_ 1 three times and y - coordinate of the point P_ 5 one time: Let the area of the plot be the area below this plot and above the coordinate axis OX. For example, the area of the plot on the picture above is 4 ( the light blue area on the picture above is the area of the plot drawn on it) . Let the height of the plot be the maximum y - coordinate among all initial points in the plot ( i. e. points P_ 0, P_ 1, . . . , P_ 2n ) . The height of the plot on the picture above is 3. Your problem is to say which minimum possible height can have the plot consisting of 2n+ 1 vertices and having an area equal to k . Note that it is unnecessary to minimize the number of moves. It is easy to see that any answer which can be obtained by performing moves described above always exists and is an integer number not exceeding 10^ 18 .",
    "input": "The first line of the input contains two integers n and k ( 1 \u2264 n, k \u2264 10^ 18 ) \u2014 the number of vertices in a plot of a piecewise function and the area we need to obtain.",
    "output": "Print one integer \u2014 the minimum possible height of a plot consisting of 2n+ 1 vertices and with an area equals k . It is easy to see that any answer which can be obtained by performing moves described above always exists and is an integer number not exceeding 10^ 18 .",
    "note": "One of the possible answers to the first example: The area of this plot is 3, the height of this plot is 1. There is only one possible answer to the second example: The area of this plot is 12, the height of this plot is 3.",
    "topics": [
      "math"
    ],
    "id": "1036A"
  },
  {
    "title": "Little C Loves 3 III",
    "url": "https://codeforces.com/problemset/problem/1034/E",
    "history": "Little C loves number \u00ab3\u00bb very much. He loves all things about it. Now he is interested in the following problem: There are two arrays of 2^ n intergers a_ 0, a_ 1, . . . , a_ 2^ n- 1 and b_ 0, b_ 1, . . . , b_ 2^ n- 1 . The task is for each i ( 0 \u2264 i \u2264 2^ n- 1) , to calculate c_ i= \u2211 a_ j \u00b7 b_ k ( j| k= i and j& k= 0 , where \" | \" denotes bitwise or operation and \" & \" denotes bitwise and operation) . It' s amazing that it can be proved that there are exactly 3^ n triples ( i, j, k) , such that j| k= i , j& k= 0 and 0 \u2264 i, j, k \u2264 2^ n- 1 . So Little C wants to solve this excellent problem ( because it' s well related to 3 ) excellently. Help him calculate all c_ i . Little C loves 3 very much, so he only want to know each c_ i & 3 .",
    "input": "The first line contains one integer n ( 0 \u2264 n \u2264 21) . The second line contains 2^ n integers in [ 0, 3] without spaces \u2014 the i - th of them is a_ i- 1 . The third line contains 2^ n integers in [ 0, 3] without spaces \u2014 the i - th of them is b_ i- 1 .",
    "output": "Print one line contains 2^ n integers in [ 0, 3] without spaces \u2014 the i - th of them is c_ i- 1& 3 . ( It' s obvious that c_ i& 3 is in [ 0, 3] ) .",
    "note": "",
    "topics": [
      "bitmasks",
      "dp",
      "math"
    ],
    "id": "1034E"
  },
  {
    "title": "Boolean Computer",
    "url": "https://codeforces.com/problemset/problem/1033/F",
    "history": "Alice has a computer that operates on w - bit integers. The computer has n registers for values. The current content of the registers is given as an array a_ 1, a_ 2, . . . , a_ n . The computer uses so- called \" number gates\" to manipulate this data. Each \" number gate\" takes two registers as inputs and calculates a function of the two values stored in those registers. Note that you can use the same register as both inputs. Each \" number gate\" is assembled from bit gates. There are six types of bit gates: AND, OR, XOR, NOT AND, NOT OR, and NOT XOR, denoted \" A\" , \" O\" , \" X\" , \" a\" , \" o\" , \" x\" , respectively. Each bit gate takes two bits as input. Its output given the input bits b_ 1 , b_ 2 is given below: b_ 1 b_ 2 A O X a o x 0 0 0 0 0 1 1 1 0 1 0 1 1 1 0 0 1 0 0 1 1 1 0 0 1 1 1 1 0 0 0 1 To build a \" number gate\" , one takes w bit gates and assembles them into an array. A \" number gate\" takes two w - bit integers x_ 1 and x_ 2 as input. The \" number gate\" splits the integers into w bits and feeds the i - th bit of each input to the i - th bit gate. After that, it assembles the resulting bits again to form an output word. For instance, for 4 - bit computer we might have a \" number gate\" \" AXoA\" ( AND, XOR, NOT OR, AND) . For two inputs, 13 = 1101_ 2 and 10 = 1010_ 2 , this returns 12 = 1100_ 2 , as 1 and 1 is 1 , 1 xor 0 is 1 , not ( 0 or 1 ) is 0 , and finally 1 and 0 is 0 . You are given a description of m \" number gates\" . For each gate, your goal is to report the number of register pairs for which the \" number gate\" outputs the number 0 . In other words, find the number of ordered pairs ( i, j) where 1 \u2264 i, j \u2264 n , such that w_ k( a_ i, a_ j) = 0 , where w_ k is the function computed by the k - th \" number gate\" .",
    "input": "The first line contains three integers: w , n , and m ( 1 \u2264 w \u2264 12, 1 \u2264 n \u2264 3\u00b7 10^ 4, 1 \u2264 m \u2264 5\u00b7 10^ 4) \u2014 the word size, the number of variables, and the number of gates. The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 0 \u2264 a_ i < 2^ w) \u2014 the value of variables stored in the registers. Each of the next m lines contains a string g_ j ( | g_ j| = w) with a description of a single gate. Each character of g_ j is one of \" A\" , \" O\" , \" X\" , \" a\" , \" o\" , \" x\" .",
    "output": "Print m lines. The i - th line should contain the number of ordered pairs of variables for which the i - th gate returns zero.",
    "note": "In the first test case, the inputs in binary are 1101 , 1010 , 0110 . The pairs that return 0 are ( 13, 6) , ( 6, 13) , and ( 6, 6) . As it was already mentioned in the problem statement, 13 \u2295 10 = 10 \u2295 13 = 12 . The other pairs are 13 \u2295 13 = 11 , 10 \u2295 10 = 8 and 10 \u2295 6 = 6 \u2295 10 = 4 .",
    "topics": [
      "bitmasks",
      "brute force",
      "fft",
      "math"
    ],
    "id": "1033F"
  },
  {
    "title": "Divisors",
    "url": "https://codeforces.com/problemset/problem/1033/D",
    "history": "You are given n integers a_ 1, a_ 2, . . . , a_ n . Each of a_ i has between 3 and 5 divisors. Consider a = \u220f a_ i \u2014 the product of all input integers. Find the number of divisors of a . As this number may be very large, print it modulo prime number 998244353 . InteractionFrom the technical side, this problem is interactive. Therefore, do not forget to output end of line and flush the output. Also, do not read more than you need. To flush the output, use: fflush( stdout) or cout. flush( ) in C+ + ; System. out. flush( ) in Java; flush( output) in Pascal; stdout. flush( ) in Python; see documentation for other languages.",
    "input": "The first line contains a single integer n ( 1 \u2264 n \u2264 500 ) \u2014 the number of numbers. Each of the next n lines contains an integer a_ i ( 1 \u2264 a_ i \u2264 2\u00b7 10^ 18 ) . It is guaranteed that the number of divisors of each a_ i is between 3 and 5 .",
    "output": "Print a single integer d \u2014 the number of divisors of the product a_ 1 \u00b7 a_ 2 \u00b7. . . \u00b7 a_ n modulo 998244353 . Hacks inputFor hacks, the input needs to be provided in a special format. The first line contains an integer n ( 1 \u2264 n \u2264 500 ) \u2014 the number of numbers. Each of the next n lines contains a prime factorization of a_ i . The line contains an integer k_ i ( 2 \u2264 k_ i \u2264 4 ) \u2014 the number of prime factors of a_ i and k_ i integers p_ i, j ( 2 \u2264 p_ i, j\u2264 2 \u00b7 10^ 18 ) where p_ i, j is the j - th prime factor of a_ i . Before supplying the input to the contestant, a_ i = \u220f p_ i, j are calculated. Note that each p_ i, j must be prime, each computed a_ i must satisfy a_ i \u2264 2\u00b710^ 18 and must have between 3 and 5 divisors. The contestant will be given only a_ i , and not its prime factorization. For example, you need to use this test to get the first sample: 32 3 32 3 52 11 13",
    "note": "In the first case, a = 19305 . Its divisors are 1, 3, 5, 9, 11, 13, 15, 27, 33, 39, 45, 55, 65, 99, 117, 135, 143, 165, 195, 297, 351, 429, 495, 585, 715, 1287, 1485, 1755, 2145, 3861, 6435, 19305 \u2014 a total of 32 . In the second case, a has four divisors: 1 , 86028121 , 86028157 , and 7400840699802997 . In the third case a = 202600445671925364698739061629083877981962069703140268516570564888699 375209477214045102253766023072401557491054453690213483547 . In the fourth case, a= 512= 2^ 9 , so answer equals to 10 .",
    "topics": [
      "interactive",
      "math",
      "number theory"
    ],
    "id": "1033D"
  },
  {
    "title": "Square Difference",
    "url": "https://codeforces.com/problemset/problem/1033/B",
    "history": "Alice has a lovely piece of cloth. It has the shape of a square with a side of length a centimeters. Bob also wants such piece of cloth. He would prefer a square with a side of length b centimeters ( where b < a ) . Alice wanted to make Bob happy, so she cut the needed square out of the corner of her piece and gave it to Bob. Now she is left with an ugly L shaped cloth ( see pictures below) . Alice would like to know whether the area of her cloth expressed in square centimeters is prime. Could you help her to determine it?",
    "input": "The first line contains a number t ( 1 \u2264 t \u2264 5 ) \u2014 the number of test cases. Each of the next t lines describes the i - th test case. It contains two integers a and b ( 1 \u2264 b < a \u2264 10^ 11) \u2014 the side length of Alice' s square and the side length of the square that Bob wants.",
    "output": "Print t lines, where the i - th line is the answer to the i - th test case. Print \" YES\" ( without quotes) if the area of the remaining piece of cloth is prime, otherwise print \" NO\" . You can print each letter in an arbitrary case ( upper or lower) .",
    "note": "The figure below depicts the first test case. The blue part corresponds to the piece which belongs to Bob, and the red part is the piece that Alice keeps for herself. The area of the red part is 6^ 2 - 5^ 2 = 36 - 25 = 11 , which is prime, so the answer is \" YES\" . In the second case, the area is 16^ 2 - 13^ 2 = 87 , which is divisible by 3 . In the third case, the area of the remaining piece is 61690850361^ 2 - 24777622630^ 2 = 3191830435068605713421 . This number is not prime because 3191830435068605713421 = 36913227731 \u00b7 86468472991 . In the last case, the area is 34^ 2 - 33^ 2 = 67 .",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "1033B"
  },
  {
    "title": "The Unbearable Lightness of Weights",
    "url": "https://codeforces.com/problemset/problem/1032/E",
    "history": "You have a set of n weights. You know that their masses are a_ 1 , a_ 2 , . . . , a_ n grams, but you don' t know which of them has which mass. You can' t distinguish the weights. However, your friend does know the mass of each weight. You can ask your friend to give you exactly k weights with the total mass m ( both parameters k and m are chosen by you) , and your friend will point to any valid subset of weights, if it is possible. You are allowed to make this query only once. Find the maximum possible number of weights you can reveal after this query.",
    "input": "The first line contains a single integer n ( 1 \u2264 n \u2264 100 ) \u2014 the number of weights. The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 100 ) \u2014 the masses of the weights.",
    "output": "Print the maximum number of weights you can learn the masses for after making a single query.",
    "note": "In the first example we can ask for a subset of two weights with total mass being equal to 4 , and the only option is to get { 2, 2} . Another way to obtain the same result is to ask for a subset of two weights with the total mass of 5 and get { 1, 4} . It is easy to see that the two remaining weights have mass of 2 grams each. In the second example we can ask for a subset of two weights with total mass being 8 , and the only answer is { 4, 4} . We can prove it is not possible to learn masses for three weights in one query, but we won' t put the proof here.",
    "topics": [
      "dp",
      "math"
    ],
    "id": "1032E"
  },
  {
    "title": "Familiar Operations",
    "url": "https://codeforces.com/problemset/problem/1031/F",
    "history": "You are given two positive integers a and b . There are two possible operations: multiply one of the numbers by some prime p ; divide one of the numbers on its prime factor p . What is the minimum number of operations required to obtain two integers having the same number of divisors? You are given several such pairs, you need to find the answer for each of them.",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 5 ) \u2014 the number of pairs of integers for which you are to find the answer. Each of the next t lines contain two integers a_ i and b_ i ( 1 \u2264 a_ i, b_ i \u2264 10^ 6 ) .",
    "output": "Output t lines \u2014 the i - th of them should contain the answer for the pair a_ i , b_ i .",
    "note": "These are the numbers with equal number of divisors, which are optimal to obtain in the sample test case: ( 27, 10) , 4 divisors ( 100, 1156) , 9 divisors ( 220, 140) , 12 divisors ( 17, 19) , 2 divisors ( 12, 18) , 6 divisors ( 50, 32) , 6 divisors ( 224, 1925) , 12 divisors Note that there can be several optimal pairs of numbers.",
    "topics": [
      "brute force",
      "graphs",
      "math"
    ],
    "id": "1031F"
  },
  {
    "title": "Golden Plate",
    "url": "https://codeforces.com/problemset/problem/1031/A",
    "history": "You have a plate and you want to add some gilding to it. The plate is a rectangle that we split into w\u00d7 h cells. There should be k gilded rings, the first one should go along the edge of the plate, the second one \u2014 2 cells away from the edge and so on. Each ring has a width of 1 cell. Formally, the i - th of these rings should consist of all bordering cells on the inner rectangle of size ( w - 4( i - 1) ) \u00d7( h - 4( i - 1) ) . The picture corresponds to the third example. Your task is to compute the number of cells to be gilded.",
    "input": "The only line contains three integers w , h and k ( 3 \u2264 w, h \u2264 100 , 1 \u2264 k \u2264\u230amin( n, m) + 1/ 4\u230b , where \u230a x \u230b denotes the number x rounded down) \u2014 the number of rows, columns and the number of rings, respectively.",
    "output": "Print a single positive integer \u2014 the number of cells to be gilded.",
    "note": "The first example is shown on the picture below. The second example is shown on the picture below. The third example is shown in the problem description.",
    "topics": [
      "implementation",
      "math"
    ],
    "id": "1031A"
  },
  {
    "title": "Multicolored Markers",
    "url": "https://codeforces.com/problemset/problem/1029/F",
    "history": "There is an infinite board of square tiles. Initially all tiles are white. Vova has a red marker and a blue marker. Red marker can color a tiles. Blue marker can color b tiles. If some tile isn' t white then you can' t use marker of any color on it. Each marker must be drained completely, so at the end there should be exactly a red tiles and exactly b blue tiles across the board. Vova wants to color such a set of tiles that: they would form a rectangle, consisting of exactly a+ b colored tiles; all tiles of at least one color would also form a rectangle. Here are some examples of correct colorings: Here are some examples of incorrect colorings: Among all correct colorings Vova wants to choose the one with the minimal perimeter. What is the minimal perimeter Vova can obtain? It is guaranteed that there exists at least one correct coloring.",
    "input": "A single line contains two integers a and b ( 1 \u2264 a, b \u2264 10^ 14 ) \u2014 the number of tiles red marker should color and the number of tiles blue marker should color, respectively.",
    "output": "Print a single integer \u2014 the minimal perimeter of a colored rectangle Vova can obtain by coloring exactly a tiles red and exactly b tiles blue. It is guaranteed that there exists at least one correct coloring.",
    "note": "The first four examples correspond to the first picture of the statement. Note that for there exist multiple correct colorings for all of the examples. In the first example you can also make a rectangle with sides 1 and 8 , though its perimeter will be 18 which is greater than 8 . In the second example you can make the same resulting rectangle with sides 3 and 4 , but red tiles will form the rectangle with sides 1 and 3 and blue tiles will form the rectangle with sides 3 and 3 .",
    "topics": [
      "binary search",
      "brute force",
      "math",
      "number theory"
    ],
    "id": "1029F"
  },
  {
    "title": "Concatenated Multiples",
    "url": "https://codeforces.com/problemset/problem/1029/D",
    "history": "You are given an array a , consisting of n positive integers. Let' s call a concatenation of numbers x and y the number that is obtained by writing down numbers x and y one right after another without changing the order. For example, a concatenation of numbers 12 and 3456 is a number 123456 . Count the number of ordered pairs of positions ( i, j) ( i = \u0338 j ) in array a such that the concatenation of a_ i and a_ j is divisible by k .",
    "input": "The first line contains two integers n and k ( 1 \u2264 n \u2264 2 \u00b7 10^ 5 , 2 \u2264 k \u2264 10^ 9 ) . The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 9 ) .",
    "output": "Print a single integer \u2014 the number of ordered pairs of positions ( i, j) ( i = \u0338 j ) in array a such that the concatenation of a_ i and a_ j is divisible by k .",
    "note": "In the first example pairs ( 1, 2) , ( 1, 3) , ( 2, 3) , ( 3, 1) , ( 3, 4) , ( 4, 2) , ( 4, 3) suffice. They produce numbers 451 , 4510 , 110 , 1045 , 1012 , 121 , 1210 , respectively, each of them is divisible by 11 . In the second example all n( n - 1) pairs suffice. In the third example no pair is sufficient.",
    "topics": [
      "implementation",
      "math"
    ],
    "id": "1029D"
  },
  {
    "title": "Maximal Intersection",
    "url": "https://codeforces.com/problemset/problem/1029/C",
    "history": "You are given n segments on a number line; each endpoint of every segment has integer coordinates. Some segments can degenerate to points. Segments can intersect with each other, be nested in each other or even coincide. The intersection of a sequence of segments is such a maximal set of points ( not necesserily having integer coordinates) that each point lies within every segment from the sequence. If the resulting set isn' t empty, then it always forms some continuous segment. The length of the intersection is the length of the resulting segment or 0 in case the intersection is an empty set. For example, the intersection of segments [ 1; 5] and [ 3; 10] is [ 3; 5] ( length 2 ) , the intersection of segments [ 1; 5] and [ 5; 7] is [ 5; 5] ( length 0 ) and the intersection of segments [ 1; 5] and [ 6; 6] is an empty set ( length 0 ) . Your task is to remove exactly one segment from the given sequence in such a way that the intersection of the remaining ( n - 1) segments has the maximal possible length.",
    "input": "The first line contains a single integer n ( 2 \u2264 n \u2264 3 \u00b7 10^ 5 ) \u2014 the number of segments in the sequence. Each of the next n lines contains two integers l_ i and r_ i ( 0 \u2264 l_ i \u2264 r_ i \u2264 10^ 9 ) \u2014 the description of the i - th segment.",
    "output": "Print a single integer \u2014 the maximal possible length of the intersection of ( n - 1) remaining segments after you remove exactly one segment from the sequence.",
    "note": "In the first example you should remove the segment [ 3; 3] , the intersection will become [ 2; 3] ( length 1 ) . Removing any other segment will result in the intersection [ 3; 3] ( length 0 ) . In the second example you should remove the segment [ 1; 3] or segment [ 2; 6] , the intersection will become [ 2; 4] ( length 2 ) or [ 1; 3] ( length 2 ) , respectively. Removing any other segment will result in the intersection [ 2; 3] ( length 1 ) . In the third example the intersection will become an empty set no matter the segment you remove. In the fourth example you will get the intersection [ 3; 10] ( length 7 ) if you remove the segment [ 1; 5] or the intersection [ 1; 5] ( length 4 ) if you remove the segment [ 3; 10] .",
    "topics": [
      "greedy",
      "math",
      "sortings"
    ],
    "id": "1029C"
  },
  {
    "title": "Creating the Contest",
    "url": "https://codeforces.com/problemset/problem/1029/B",
    "history": "You are given a problemset consisting of n problems. The difficulty of the i - th problem is a_ i . It is guaranteed that all difficulties are distinct and are given in the increasing order. You have to assemble the contest which consists of some problems of the given problemset. In other words, the contest you have to assemble should be a subset of problems ( not necessary consecutive) of the given problemset. There is only one condition that should be satisfied: for each problem but the hardest one ( the problem with the maximum difficulty) there should be a problem with the difficulty greater than the difficulty of this problem but not greater than twice the difficulty of this problem. In other words, let a_ i_ 1, a_ i_ 2, . . . , a_ i_ p be the difficulties of the selected problems in increasing order. Then for each j from 1 to p- 1 a_ i_ j + 1\u2264 a_ i_ j\u00b7 2 should hold. It means that the contest consisting of only one problem is always valid. Among all contests satisfying the condition above you have to assemble one with the maximum number of problems. Your task is to find this number of problems.",
    "input": "The first line of the input contains one integer n ( 1 \u2264 n \u2264 2 \u00b7 10^ 5 ) \u2014 the number of problems in the problemset. The second line of the input contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 9 ) \u2014 difficulties of the problems. It is guaranteed that difficulties of the problems are distinct and are given in the increasing order.",
    "output": "Print a single integer \u2014 maximum number of problems in the contest satisfying the condition in the problem statement.",
    "note": "Description of the first example: there are 10 valid contests consisting of 1 problem, 10 valid contests consisting of 2 problems ( [ 1, 2] , [ 5, 6] , [ 5, 7] , [ 5, 10] , [ 6, 7] , [ 6, 10] , [ 7, 10] , [ 21, 23] , [ 21, 24] , [ 23, 24] ) , 5 valid contests consisting of 3 problems ( [ 5, 6, 7] , [ 5, 6, 10] , [ 5, 7, 10] , [ 6, 7, 10] , [ 21, 23, 24] ) and a single valid contest consisting of 4 problems ( [ 5, 6, 7, 10] ) . In the second example all the valid contests consist of 1 problem. In the third example are two contests consisting of 3 problems: [ 4, 7, 12] and [ 100, 150, 199] .",
    "topics": [
      "dp",
      "greedy",
      "math"
    ],
    "id": "1029B"
  },
  {
    "title": "Make Square",
    "url": "https://codeforces.com/problemset/problem/1028/H",
    "history": "We call an array b_ 1, b_ 2, . . . , b_ m good, if there exist two indices i < j such that b_ i \u00b7 b_ j is a perfect square. Given an array b_ 1, b_ 2, . . . , b_ m , in one action you can perform one of the following: multiply any element b_ i by any prime p ; divide any element b_ i by prime p , if b_ i is divisible by p . Let f( b_ 1, b_ 2, . . . , b_ m) be the minimum number of actions needed to make the array b good. You are given an array of n integers a_ 1, a_ 2, . . . , a_ n and q queries of the form l_ i, r_ i . For each query output f( a_ l_ i, a_ l_ i + 1, . . . , a_ r_ i) .",
    "input": "The first line contains two integers n and q ( 2 \u2264 n \u2264 194 598 , 1 \u2264 q \u2264 1 049 658 ) \u2014 the length of the array and the number of queries. The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 5 032 107 ) \u2014 the elements of the array. Each of the next q lines contains two integers l_ i and r_ i ( 1 \u2264 l_ i < r_ i \u2264 n ) \u2014 the parameters of a query.",
    "output": "Output q lines \u2014 the answers for each query in the order they are given in the input.",
    "note": "In the first query of the first sample you can multiply second number by 7 to get 259 and multiply the third one by 37 to get 1036. Then a_ 2 \u00b7 a_ 3 = 268 324 = 518^ 2 . In the second query subarray is already good because a_ 4 \u00b7 a_ 6 = 24^ 2 . In the third query you can divide 50 by 2 to get 25. Then a_ 6 \u00b7 a_ 8 = 30^ 2 .",
    "topics": [
      "math"
    ],
    "id": "1028H"
  },
  {
    "title": "Unnatural Conditions",
    "url": "https://codeforces.com/problemset/problem/1028/B",
    "history": "Let s( x) be sum of digits in decimal representation of positive integer x . Given two integers n and m , find some positive integers a and b such that s( a) \u2265 n , s( b) \u2265 n , s( a + b) \u2264 m .",
    "input": "The only line of input contain two integers n and m ( 1 \u2264 n, m \u2264 1129 ) .",
    "output": "Print two lines, one for decimal representation of a and one for decimal representation of b . Both numbers must not contain leading zeros and must have length no more than 2230 .",
    "note": "In the first sample, we have n = 6 and m = 5 . One valid solution is a = 6 , b = 7 . Indeed, we have s( a) = 6 \u2265 n and s( b) = 7 \u2265 n , and also s( a + b) = s( 13) = 4 \u2264 m .",
    "topics": [
      "constructive algorithms",
      "math"
    ],
    "id": "1028B"
  },
  {
    "title": "X-mouse in the Campus",
    "url": "https://codeforces.com/problemset/problem/1027/G",
    "history": "The campus has m rooms numbered from 0 to m - 1 . Also the x - mouse lives in the campus. The x - mouse is not just a mouse: each second x - mouse moves from room i to the room i \u00b7 x m ( in fact, it teleports from one room to another since it doesn' t visit any intermediate room) . Starting position of the x - mouse is unknown. You are responsible to catch the x - mouse in the campus, so you are guessing about minimum possible number of traps ( one trap in one room) you need to place. You are sure that if the x - mouse enters a trapped room, it immediately gets caught. And the only observation you made is GCD ( x, m) = 1 .",
    "input": "The only line contains two integers m and x ( 2 \u2264 m \u2264 10^ 14 , 1 \u2264 x < m , GCD ( x, m) = 1 ) \u2014 the number of rooms and the parameter of x - mouse.",
    "output": "Print the only integer \u2014 minimum number of traps you need to install to catch the x - mouse.",
    "note": "In the first example you can, for example, put traps in rooms 0 , 2 , 3 . If the x - mouse starts in one of this rooms it will be caught immediately. If x - mouse starts in the 1 - st rooms then it will move to the room 3 , where it will be caught. In the second example you can put one trap in room 0 and one trap in any other room since x - mouse will visit all rooms 1. . m- 1 if it will start in any of these rooms.",
    "topics": [
      "bitmasks",
      "math",
      "number theory"
    ],
    "id": "1027G"
  },
  {
    "title": "Inverse Coloring",
    "url": "https://codeforces.com/problemset/problem/1027/E",
    "history": "You are given a square board, consisting of n rows and n columns. Each tile in it should be colored either white or black. Let' s call some coloring beautiful if each pair of adjacent rows are either the same or different in every position. The same condition should be held for the columns as well. Let' s call some coloring suitable if it is beautiful and there is no rectangle of the single color, consisting of at least k tiles. Your task is to count the number of suitable colorings of the board of the given size. Since the answer can be very large, print it modulo 998244353 .",
    "input": "A single line contains two integers n and k ( 1 \u2264 n \u2264 500 , 1 \u2264 k \u2264 n^ 2 ) \u2014 the number of rows and columns of the board and the maximum number of tiles inside the rectangle of the single color, respectively.",
    "output": "Print a single integer \u2014 the number of suitable colorings of the board of the given size modulo 998244353 .",
    "note": "Board of size 1 \u00d7 1 is either a single black tile or a single white tile. Both of them include a rectangle of a single color, consisting of 1 tile. Here are the beautiful colorings of a board of size 2 \u00d7 2 that don' t include rectangles of a single color, consisting of at least 3 tiles: The rest of beautiful colorings of a board of size 2 \u00d7 2 are the following:",
    "topics": [
      "combinatorics",
      "dp",
      "math"
    ],
    "id": "1027E"
  },
  {
    "title": "Numbers on the Chessboard",
    "url": "https://codeforces.com/problemset/problem/1027/B",
    "history": "You are given a chessboard of size n \u00d7 n . It is filled with numbers from 1 to n^ 2 in the following way: the first \u2308n^ 2/ 2\u2309 numbers from 1 to \u2308n^ 2/ 2\u2309 are written in the cells with even sum of coordinates from left to right from top to bottom. The rest n^ 2 - \u2308n^ 2/ 2\u2309 numbers from \u2308n^ 2/ 2\u2309 + 1 to n^ 2 are written in the cells with odd sum of coordinates from left to right from top to bottom. The operation \u2308x/ y\u2309 means division x by y rounded up. For example, the left board on the following picture is the chessboard which is given for n= 4 and the right board is the chessboard which is given for n= 5 . You are given q queries. The i - th query is described as a pair x_ i, y_ i . The answer to the i - th query is the number written in the cell x_ i, y_ i ( x_ i is the row, y_ i is the column) . Rows and columns are numbered from 1 to n .",
    "input": "The first line contains two integers n and q ( 1 \u2264 n \u2264 10^ 9 , 1 \u2264 q \u2264 10^ 5 ) \u2014 the size of the board and the number of queries. The next q lines contain two integers each. The i - th line contains two integers x_ i, y_ i ( 1 \u2264 x_ i, y_ i \u2264 n ) \u2014 description of the i - th query.",
    "output": "For each query from 1 to q print the answer to this query. The answer to the i - th query is the number written in the cell x_ i, y_ i ( x_ i is the row, y_ i is the column) . Rows and columns are numbered from 1 to n . Queries are numbered from 1 to q in order of the input.",
    "note": "Answers to the queries from examples are on the board in the picture from the problem statement.",
    "topics": [
      "implementation",
      "math"
    ],
    "id": "1027B"
  },
  {
    "title": "Company Acquisitions",
    "url": "https://codeforces.com/problemset/problem/1025/G",
    "history": "There are n startups. Startups can be active or acquired. If a startup is acquired, then that means it has exactly one active startup that it is following. An active startup can have arbitrarily many acquired startups that are following it. An active startup cannot follow any other startup. The following steps happen until there is exactly one active startup. The following sequence of steps takes exactly 1 day. Two distinct active startups A , B , are chosen uniformly at random. A fair coin is flipped, and with equal probability, A acquires B or B acquires A ( i. e. if A acquires B , then that means B ' s state changes from active to acquired, and its starts following A ) . When a startup changes from active to acquired, all of its previously acquired startups become active. For example, the following scenario can happen: Let' s say A , B are active startups. C , D , E are acquired startups under A , and F , G are acquired startups under B : Active startups are shown in red. If A acquires B , then the state will be A , F , G are active startups. C , D , E , B are acquired startups under A . F and G have no acquired startups: If instead, B acquires A , then the state will be B , C , D , E are active startups. F , G , A are acquired startups under B . C , D , E have no acquired startups: You are given the initial state of the startups. For each startup, you are told if it is either acquired or active. If it is acquired, you are also given the index of the active startup that it is following. You' re now wondering, what is the expected number of days needed for this process to finish with exactly one active startup at the end. It can be shown the expected number of days can be written as a rational number P/ Q , where P and Q are co- prime integers, and Q = \u0338 0 10^ 9+ 7 . Return the value of P \u00b7 Q^ - 1 modulo 10^ 9+ 7 .",
    "input": "The first line contains a single integer n ( 2 \u2264 n \u2264 500 ) , the number of startups. The next line will contain n space- separated integers a_ 1, a_ 2, . . . , a_ n ( a_ i = - 1 or 1 \u2264 a_ i \u2264 n ) . If a_ i = - 1 , then that means startup i is active. Otherwise, if 1 \u2264 a_ i \u2264 n , then startup i is acquired, and it is currently following startup a_ i . It is guaranteed if a_ i = \u0338 - 1 , then a_ a_ i = - 1 ( that is, all startups that are being followed are active) .",
    "output": "Print a single integer, the expected number of days needed for the process to end with exactly one active startup, modulo 10^ 9+ 7 .",
    "note": "In the first sample, there are three active startups labeled 1 , 2 and 3 , and zero acquired startups. Here' s an example of how one scenario can happen Startup 1 acquires startup 2 ( This state can be represented by the array [ - 1, 1, - 1] ) Startup 3 acquires startup 1 ( This state can be represented by the array [ 3, - 1, - 1] ) Startup 2 acquires startup 3 ( This state can be represented by the array [ - 1, - 1, 2] ) . Startup 2 acquires startup 1 ( This state can be represented by the array [ 2, - 1, 2] ) . At this point, there is only one active startup, and this sequence of steps took 4 days. It can be shown the expected number of days is 3 . For the second sample, there is only one active startup, so we need zero days. For the last sample, remember to take the answer modulo 10^ 9+ 7 .",
    "topics": [
      "constructive algorithms",
      "math"
    ],
    "id": "1025G"
  },
  {
    "title": "Recovering BST",
    "url": "https://codeforces.com/problemset/problem/1025/D",
    "history": "Dima the hamster enjoys nibbling different things: cages, sticks, bad problemsetters and even trees! Recently he found a binary search tree and instinctively nibbled all of its edges, hence messing up the vertices. Dima knows that if Andrew, who has been thoroughly assembling the tree for a long time, comes home and sees his creation demolished, he' ll get extremely upset. To not let that happen, Dima has to recover the binary search tree. Luckily, he noticed that any two vertices connected by a direct edge had their greatest common divisor value exceed 1 . Help Dima construct such a binary search tree or determine that it' s impossible. The definition and properties of a binary search tree can be found here.",
    "input": "The first line contains the number of vertices n ( 2 \u2264 n \u2264 700 ) . The second line features n distinct integers a_ i ( 2 \u2264 a_ i \u2264 10^ 9 ) \u2014 the values of vertices in ascending order.",
    "output": "If it is possible to reassemble the binary search tree, such that the greatest common divisor of any two vertices connected by the edge is greater than 1 , print \" Yes\" ( quotes for clarity) . Otherwise, print \" No\" ( quotes for clarity) .",
    "note": "The picture below illustrates one of the possible trees for the first example. The picture below illustrates one of the possible trees for the third example.",
    "topics": [
      "brute force",
      "dp",
      "math",
      "number theory",
      "trees"
    ],
    "id": "1025D"
  },
  {
    "title": "Pair of Toys",
    "url": "https://codeforces.com/problemset/problem/1023/B",
    "history": "Tanechka is shopping in the toy shop. There are exactly n toys in the shop for sale, the cost of the i - th toy is i burles. She wants to choose two toys in such a way that their total cost is k burles. How many ways to do that does she have? Each toy appears in the shop exactly once. Pairs ( a, b) and ( b, a) are considered equal. Pairs ( a, b) , where a= b , are not allowed.",
    "input": "The first line of the input contains two integers n , k ( 1 \u2264 n, k \u2264 10^ 14 ) \u2014 the number of toys and the expected total cost of the pair of toys.",
    "output": "Print the number of ways to choose the pair of toys satisfying the condition above. Print 0, if Tanechka can choose no pair of toys in such a way that their total cost is k burles.",
    "note": "In the first example Tanechka can choose the pair of toys ( 1, 4 ) or the pair of toys ( 2, 3 ) . In the second example Tanechka can choose only the pair of toys ( 7, 8 ) . In the third example choosing any pair of toys will lead to the total cost less than 20 . So the answer is 0. In the fourth example she can choose the following pairs: ( 1, 1000000000000) , ( 2, 999999999999) , ( 3, 999999999998) , . . . , ( 500000000000, 500000000001) . The number of such pairs is exactly 500000000000 .",
    "topics": [
      "math"
    ],
    "id": "1023B"
  },
  {
    "title": "New Building for SIS",
    "url": "https://codeforces.com/problemset/problem/1020/A",
    "history": "You are looking at the floor plan of the Summer Informatics School' s new building. You were tasked with SIS logistics, so you really care about travel time between different locations: it is important to know how long it would take to get from the lecture room to the canteen, or from the gym to the server room. The building consists of n towers, h floors each, where the towers are labeled from 1 to n, the floors are labeled from 1 to h. There is a passage between any two adjacent towers ( two towers i and i + 1 for all i: 1 \u2264 i \u2264 n - 1) on every floor x, where a \u2264 x \u2264 b. It takes exactly one minute to walk between any two adjacent floors of a tower, as well as between any two adjacent towers, provided that there is a passage on that floor. It is not permitted to leave the building. The picture illustrates the first example. You have given k pairs of locations ( ta, fa) , ( tb, fb) : floor fa of tower ta and floor fb of tower tb. For each pair you need to determine the minimum walking time between these locations.",
    "input": "The first line of the input contains following integers: n: the number of towers in the building ( 1 \u2264 n \u2264 108) , h: the number of floors in each tower ( 1 \u2264 h \u2264 108) , a and b: the lowest and highest floor where it' s possible to move between adjacent towers ( 1 \u2264 a \u2264 b \u2264 h) , k: total number of queries ( 1 \u2264 k \u2264 104) . Next k lines contain description of the queries. Each description consists of four integers ta, fa, tb, fb ( 1 \u2264 ta, tb \u2264 n, 1 \u2264 fa, fb \u2264 h) . This corresponds to a query to find the minimum travel time between fa- th floor of the ta- th tower and fb- th floor of the tb- th tower.",
    "output": "For each query print a single integer: the minimum walking time between the locations in minutes.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": "1020A"
  },
  {
    "title": "The Neutral Zone",
    "url": "https://codeforces.com/problemset/problem/1017/F",
    "history": "Notice: unusual memory limit! After the war, destroyed cities in the neutral zone were restored. And children went back to school. The war changed the world, as well as education. In those hard days, a new math concept was created. As we all know, logarithm function can be described as: log( p_ 1^ a_ 1p_ 2^ a_ 2. . . p_ k^ a_ 2) = a_ 1 log p_ 1 + a_ 2 log p_ 2 + . . . + a_ k log p_ k Where p_ 1^ a_ 1p_ 2^ a_ 2. . . p_ k^ a_ 2 is the prime factorization of a integer. A problem is that the function uses itself in the definition. That is why it is hard to calculate. So, the mathematicians from the neutral zone invented this: exlog_ f( p_ 1^ a_ 1p_ 2^ a_ 2. . . p_ k^ a_ 2) = a_ 1 f( p_ 1) + a_ 2 f( p_ 2) + . . . + a_ k f( p_ k) Notice that exlog_ f( 1) is always equal to 0 . This concept for any function f was too hard for children. So teachers told them that f can only be a polynomial of degree no more than 3 in daily uses ( i. e. , f( x) = Ax^ 3+ Bx^ 2+ Cx+ D ) . \" Class is over! Don' t forget to do your homework! \" Here it is: \u2211_ i= 1^ n exlog_ f( i) Help children to do their homework. Since the value can be very big, you need to find the answer modulo 2^ 32 .",
    "input": "The only line contains five integers n , A , B , C , and D ( 1 \u2264 n \u2264 3 \u00b7 10^ 8 , 0 \u2264 A, B, C, D \u2264 10^ 6 ) .",
    "output": "Print the answer modulo 2^ 32 .",
    "note": "In the first sample: exlog_ f( 1) = 0 exlog_ f( 2) = 2 exlog_ f( 3) = 3 exlog_ f( 4) = 2 + 2 = 4 exlog_ f( 5) = 5 exlog_ f( 6) = 2 + 3 = 5 exlog_ f( 7) = 7 exlog_ f( 8) = 2 + 2 + 2 = 6 exlog_ f( 9) = 3 + 3 = 6 exlog_ f( 10) = 2 + 5 = 7 exlog_ f( 11) = 11 exlog_ f( 12) = 2 + 2 + 3 = 7 \u2211_ i= 1^ 12exlog_ f( i) = 63 In the second sample: exlog_ f( 1) = 0 exlog_ f( 2) = ( 1 \u00d7 2^ 3 + 2 \u00d7 2^ 2 + 3 \u00d7 2 + 4) = 26 exlog_ f( 3) = ( 1 \u00d7 3^ 3 + 2 \u00d7 3^ 2 + 3 \u00d7 3 + 4) = 58 exlog_ f( 4) = 2 \u00d7exlog_ f( 2) = 52 \u2211_ i= 1^ 4 exlog_ f( i) = 0+ 26+ 58+ 52= 136",
    "topics": [
      "brute force",
      "math"
    ],
    "id": "1017F"
  },
  {
    "title": "The Bits",
    "url": "https://codeforces.com/problemset/problem/1017/B",
    "history": "Rudolf is on his way to the castle. Before getting into the castle, the security staff asked him a question: Given two binary numbers a and b of length n . How many different ways of swapping two digits in a ( only in a , not b ) so that bitwise OR of these two numbers will be changed? In other words, let c be the bitwise OR of a and b , you need to find the number of ways of swapping two bits in a so that bitwise OR will not be equal to c . Note that binary numbers can contain leading zeros so that length of each number is exactly n . Bitwise OR is a binary operation. A result is a binary number which contains a one in each digit if there is a one in at least one of the two numbers. For example, 01010_ 2 OR 10011_ 2 = 11011_ 2 . Well, to your surprise, you are not Rudolf, and you don' t need to help him . . . You are the security staff! Please find the number of ways of swapping two bits in a so that bitwise OR will be changed.",
    "input": "The first line contains one integer n ( 2\u2264 n\u2264 10^ 5 ) \u2014 the number of bits in each number. The second line contains a binary number a of length n . The third line contains a binary number b of length n .",
    "output": "Print the number of ways to swap two bits in a so that bitwise OR will be changed.",
    "note": "In the first sample, you can swap bits that have indexes ( 1, 4) , ( 2, 3) , ( 3, 4) , and ( 3, 5) . In the second example, you can swap bits that have indexes ( 1, 2) , ( 1, 3) , ( 2, 4) , ( 3, 4) , ( 3, 5) , and ( 3, 6) .",
    "topics": [
      "implementation",
      "math"
    ],
    "id": "1017B"
  },
  {
    "title": "Appropriate Team",
    "url": "https://codeforces.com/problemset/problem/1016/G",
    "history": "Since next season are coming, you' d like to form a team from two or three participants. There are n candidates, the i - th candidate has rank a_ i . But you have weird requirements for your teammates: if you have rank v and have chosen the i - th and j - th candidate, then GCD( v, a_ i) = X and LCM( v, a_ j) = Y must be met. You are very experienced, so you can change your rank to any non- negative integer but X and Y are tied with your birthdate, so they are fixed. Now you want to know, how many are there pairs ( i, j) such that there exists an integer v meeting the following constraints: GCD( v, a_ i) = X and LCM( v, a_ j) = Y . It' s possible that i = j and you form a team of two. GCD is the greatest common divisor of two number, LCM \u2014 the least common multiple.",
    "input": "First line contains three integers n , X and Y ( 1 \u2264 n \u2264 2 \u00b7 10^ 5 , 1 \u2264 X \u2264 Y \u2264 10^ 18 ) \u2014 the number of candidates and corresponding constants. Second line contains n space separated integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 18 ) \u2014 ranks of candidates.",
    "output": "Print the only integer \u2014 the number of pairs ( i, j) such that there exists an integer v meeting the following constraints: GCD( v, a_ i) = X and LCM( v, a_ j) = Y . It' s possible that i = j .",
    "note": "In the first example next pairs are valid: a_ j = 1 and a_ i = [ 2, 4, 6, 8, 10, 12] or a_ j = 2 and a_ i = [ 2, 4, 6, 8, 10, 12] . The v in both cases can be equal to 2 . In the second example next pairs are valid: a_ j = 1 and a_ i = [ 1, 5, 7, 11] ; a_ j = 2 and a_ i = [ 1, 5, 7, 11, 10, 8, 4, 2] ; a_ j = 3 and a_ i = [ 1, 3, 5, 7, 9, 11] ; a_ j = 6 and a_ i = [ 1, 3, 5, 7, 9, 11, 12, 10, 8, 6, 4, 2] .",
    "topics": [
      "bitmasks",
      "math",
      "number theory"
    ],
    "id": "1016G"
  },
  {
    "title": "Vasya And The Matrix",
    "url": "https://codeforces.com/problemset/problem/1016/D",
    "history": "Now Vasya is taking an exam in mathematics. In order to get a good mark, Vasya needs to guess the matrix that the teacher has constructed! Vasya knows that the matrix consists of n rows and m columns. For each row, he knows the xor ( bitwise excluding or) of the elements in this row. The sequence a1, a2, . . . , an denotes the xor of elements in rows with indices 1, 2, . . . , n, respectively. Similarly, for each column, he knows the xor of the elements in this column. The sequence b1, b2, . . . , bm denotes the xor of elements in columns with indices 1, 2, . . . , m, respectively. Help Vasya! Find a matrix satisfying the given constraints or tell him that there is no suitable matrix.",
    "input": "The first line contains two numbers n and m ( 2 \u2264 n, m \u2264 100) \u2014 the dimensions of the matrix. The second line contains n numbers a1, a2, . . . , an ( 0 \u2264 ai \u2264 109) , where ai is the xor of all elements in row i. The third line contains m numbers b1, b2, . . . , bm ( 0 \u2264 bi \u2264 109) , where bi is the xor of all elements in column i.",
    "output": "If there is no matrix satisfying the given constraints in the first line, output \" NO\" . Otherwise, on the first line output \" YES\" , and then n rows of m numbers in each ci1, ci2, . . . , cim ( 0 \u2264 cij \u2264 2\u00b7109) \u2014 the description of the matrix. If there are several suitable matrices, it is allowed to print any of them.",
    "note": "",
    "topics": [
      "constructive algorithms",
      "flows",
      "math"
    ],
    "id": "1016D"
  },
  {
    "title": "Death Note",
    "url": "https://codeforces.com/problemset/problem/1016/A",
    "history": "You received a notebook which is called Death Note. This notebook has infinite number of pages. A rule is written on the last page ( huh) of this notebook. It says: \" You have to write names in this notebook during n consecutive days. During the i - th day you have to write exactly a_ i names. \" . You got scared ( of course you got scared, who wouldn' t get scared if he just receive a notebook which is named Death Note with a some strange rule written in it? ) . Of course, you decided to follow this rule. When you calmed down, you came up with a strategy how you will write names in the notebook. You have calculated that each page of the notebook can contain exactly m names. You will start writing names from the first page. You will write names on the current page as long as the limit on the number of names on this page is not exceeded. When the current page is over, you turn the page. Note that you always turn the page when it ends, it doesn' t matter if it is the last day or not. If after some day the current page still can hold at least one name, during the next day you will continue writing the names from the current page. Now you are interested in the following question: how many times will you turn the page during each day? You are interested in the number of pages you will turn each day from 1 to n .",
    "input": "The first line of the input contains two integers n , m ( 1 \u2264 n \u2264 2 \u00b7 10^ 5 , 1 \u2264 m \u2264 10^ 9 ) \u2014 the number of days you will write names in the notebook and the number of names which can be written on each page of the notebook. The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 9 ) , where a_ i means the number of names you will write in the notebook during the i - th day.",
    "output": "Print exactly n integers t_ 1, t_ 2, . . . , t_ n , where t_ i is the number of times you will turn the page during the i - th day.",
    "note": "In the first example pages of the Death Note will look like this [ 1, 1, 1, 2, 2] , [ 2, 2, 2, 2, 2] , [ 3, 3, 3, 3, 3] , [ 3, 3, 3, 3] . Each number of the array describes during which day name on the corresponding position will be written. It is easy to see that you should turn the first and the second page during the second day and the third page during the third day.",
    "topics": [
      "greedy",
      "implementation",
      "math"
    ],
    "id": "1016A"
  },
  {
    "title": "Piles With Stones",
    "url": "https://codeforces.com/problemset/problem/1013/A",
    "history": "There is a beautiful garden of stones in Innopolis. Its most beautiful place is the n piles with stones numbered from 1 to n . EJOI participants have visited this place twice. When they first visited it, the number of stones in piles was x_ 1, x_ 2, . . . , x_ n , correspondingly. One of the participants wrote down this sequence in a notebook. They visited it again the following day, and the number of stones in piles was equal to y_ 1, y_ 2, . . . , y_ n . One of the participants also wrote it down in a notebook. It is well known that every member of the EJOI jury during the night either sits in the room 108 or comes to the place with stones. Each jury member who comes there either takes one stone for himself or moves one stone from one pile to another. We can assume that there is an unlimited number of jury members. No one except the jury goes to the place with stones at night. Participants want to know whether their notes can be correct or they are sure to have made a mistake.",
    "input": "The first line of the input file contains a single integer n , the number of piles with stones in the garden ( 1 \u2264 n \u2264 50 ) . The second line contains n integers separated by spaces x_ 1, x_ 2, . . . , x_ n , the number of stones in piles recorded in the notebook when the participants came to the place with stones for the first time ( 0 \u2264 x_ i \u2264 1000 ) . The third line contains n integers separated by spaces y_ 1, y_ 2, . . . , y_ n , the number of stones in piles recorded in the notebook when the participants came to the place with stones for the second time ( 0 \u2264 y_ i \u2264 1000 ) .",
    "output": "If the records can be consistent output \" Yes\" , otherwise output \" No\" ( quotes for clarity) .",
    "note": "In the first example, the following could have happened during the night: one of the jury members moved one stone from the second pile to the first pile, and the other jury member moved one stone from the fourth pile to the third pile. In the second example, the jury took stones from the second and fourth piles. It can be proved that it is impossible for the jury members to move and took stones to convert the first array into the second array.",
    "topics": [
      "math"
    ],
    "id": "1013A"
  },
  {
    "title": "Cycle sort",
    "url": "https://codeforces.com/problemset/problem/1012/E",
    "history": "You are given an array of n positive integers a_ 1, a_ 2, . . . , a_ n . You can perform the following operation any number of times: select several distinct indices i_ 1, i_ 2, . . . , i_ k ( 1 \u2264 i_ j \u2264 n ) and move the number standing at the position i_ 1 to the position i_ 2 , the number at the position i_ 2 to the position i_ 3 , . . . , the number at the position i_ k to the position i_ 1 . In other words, the operation cyclically shifts elements: i_ 1 \u2192 i_ 2 \u2192. . . i_ k \u2192 i_ 1 . For example, if you have n= 4 , an array a_ 1= 10, a_ 2= 20, a_ 3= 30, a_ 4= 40 , and you choose three indices i_ 1= 2 , i_ 2= 1 , i_ 3= 4 , then the resulting array would become a_ 1= 20, a_ 2= 40, a_ 3= 30, a_ 4= 10 . Your goal is to make the array sorted in non- decreasing order with the minimum number of operations. The additional constraint is that the sum of cycle lengths over all operations should be less than or equal to a number s . If it' s impossible to sort the array while satisfying that constraint, your solution should report that as well.",
    "input": "The first line of the input contains two integers n and s ( 1 \u2264 n \u2264 200 000 , 0 \u2264 s \u2264 200 000 ) \u2014the number of elements in the array and the upper bound on the sum of cycle lengths. The next line contains n integers a_ 1, a_ 2, . . . , a_ n \u2014elements of the array ( 1 \u2264 a_ i \u2264 10^ 9 ) .",
    "output": "If it' s impossible to sort the array using cycles of total length not exceeding s , print a single number \" - 1\" ( quotes for clarity) . Otherwise, print a single number q \u2014 the minimum number of operations required to sort the array. On the next 2 \u00b7 q lines print descriptions of operations in the order they are applied to the array. The description of i - th operation begins with a single line containing one integer k ( 1 \u2264 k \u2264 n ) \u2014the length of the cycle ( that is, the number of selected indices) . The next line should contain k distinct integers i_ 1, i_ 2, . . . , i_ k ( 1 \u2264 i_ j \u2264 n ) \u2014the indices of the cycle. The sum of lengths of these cycles should be less than or equal to s , and the array should be sorted after applying these q operations. If there are several possible answers with the optimal q , print any of them.",
    "note": "In the first example, it' s also possible to sort the array with two operations of total length 5: first apply the cycle 1 \u2192 4 \u2192 1 ( of length 2) , then apply the cycle 2 \u2192 3 \u2192 5 \u2192 2 ( of length 3) . However, it would be wrong answer as you' re asked to use the minimal possible number of operations, which is 1 in that case. In the second example, it' s possible to the sort the array with two cycles of total length 4 ( 1 \u2192 2 \u2192 1 and 3 \u2192 4 \u2192 3 ) . However, it' s impossible to achieve the same using shorter cycles, which is required by s= 3 . In the third example, the array is already sorted, so no operations are needed. Total length of empty set of cycles is considered to be zero.",
    "topics": [
      "dsu",
      "math"
    ],
    "id": "1012E"
  },
  {
    "title": "Photo of The Sky",
    "url": "https://codeforces.com/problemset/problem/1012/A",
    "history": "Pavel made a photo of his favourite stars in the sky. His camera takes a photo of all points of the sky that belong to some rectangle with sides parallel to the coordinate axes. Strictly speaking, it makes a photo of all points with coordinates ( x, y) , such that x_ 1 \u2264 x \u2264 x_ 2 and y_ 1 \u2264 y \u2264 y_ 2 , where ( x_ 1, y_ 1) and ( x_ 2, y_ 2) are coordinates of the left bottom and the right top corners of the rectangle being photographed. The area of this rectangle can be zero. After taking the photo, Pavel wrote down coordinates of n of his favourite stars which appeared in the photo. These points are not necessarily distinct, there can be multiple stars in the same point of the sky. Pavel has lost his camera recently and wants to buy a similar one. Specifically, he wants to know the dimensions of the photo he took earlier. Unfortunately, the photo is also lost. His notes are also of not much help; numbers are written in random order all over his notepad, so it' s impossible to tell which numbers specify coordinates of which points. Pavel asked you to help him to determine what are the possible dimensions of the photo according to his notes. As there are multiple possible answers, find the dimensions with the minimal possible area of the rectangle.",
    "input": "The first line of the input contains an only integer n ( 1 \u2264 n \u2264 100 000 ) , the number of points in Pavel' s records. The second line contains 2 \u00b7 n integers a_ 1 , a_ 2 , . . . , a_ 2 \u00b7 n ( 1 \u2264 a_ i \u2264 10^ 9 ) , coordinates, written by Pavel in some order.",
    "output": "Print the only integer, the minimal area of the rectangle which could have contained all points from Pavel' s records.",
    "note": "In the first sample stars in Pavel' s records can be ( 1, 3) , ( 1, 3) , ( 2, 3) , ( 2, 4) . In this case, the minimal area of the rectangle, which contains all these points is 1 ( rectangle with corners at ( 1, 3) and ( 2, 4) ) .",
    "topics": [
      "brute force",
      "implementation",
      "math",
      "sortings"
    ],
    "id": "1012A"
  },
  {
    "title": "Fly",
    "url": "https://codeforces.com/problemset/problem/1010/A",
    "history": "Natasha is going to fly on a rocket to Mars and return to Earth. Also, on the way to Mars, she will land on n - 2 intermediate planets. Formally: we number all the planets from 1 to n . 1 is Earth, n is Mars. Natasha will make exactly n flights: 1 \u2192 2 \u2192. . . n \u2192 1 . Flight from x to y consists of two phases: take- off from planet x and landing to planet y . This way, the overall itinerary of the trip will be: the 1 - st planet \u2192 take- off from the 1 - st planet \u2192 landing to the 2 - nd planet \u2192 2 - nd planet \u2192 take- off from the 2 - nd planet \u2192 . . . \u2192 landing to the n - th planet \u2192 the n - th planet \u2192 take- off from the n - th planet \u2192 landing to the 1 - st planet \u2192 the 1 - st planet. The mass of the rocket together with all the useful cargo ( but without fuel) is m tons. However, Natasha does not know how much fuel to load into the rocket. Unfortunately, fuel can only be loaded on Earth, so if the rocket runs out of fuel on some other planet, Natasha will not be able to return home. Fuel is needed to take- off from each planet and to land to each planet. It is known that 1 ton of fuel can lift off a_ i tons of rocket from the i - th planet or to land b_ i tons of rocket onto the i - th planet. For example, if the weight of rocket is 9 tons, weight of fuel is 3 tons and take- off coefficient is 8 ( a_ i = 8 ) , then 1. 5 tons of fuel will be burnt ( since 1. 5 \u00b7 8 = 9 + 3 ) . The new weight of fuel after take- off will be 1. 5 tons. Please note, that it is allowed to burn non- integral amount of fuel during take- off or landing, and the amount of initial fuel can be non- integral as well. Help Natasha to calculate the minimum mass of fuel to load into the rocket. Note, that the rocket must spend fuel to carry both useful cargo and the fuel itself. However, it doesn' t need to carry the fuel which has already been burnt. Assume, that the rocket takes off and lands instantly.",
    "input": "The first line contains a single integer n ( 2 \u2264 n \u2264 1000 ) \u2014 number of planets. The second line contains the only integer m ( 1 \u2264 m \u2264 1000 ) \u2014 weight of the payload. The third line contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 1000 ) , where a_ i is the number of tons, which can be lifted off by one ton of fuel. The fourth line contains n integers b_ 1, b_ 2, . . . , b_ n ( 1 \u2264 b_ i \u2264 1000 ) , where b_ i is the number of tons, which can be landed by one ton of fuel. It is guaranteed, that if Natasha can make a flight, then it takes no more than 10^ 9 tons of fuel.",
    "output": "If Natasha can fly to Mars through ( n - 2) planets and return to Earth, print the minimum mass of fuel ( in tons) that Natasha should take. Otherwise, print a single number - 1 . It is guaranteed, that if Natasha can make a flight, then it takes no more than 10^ 9 tons of fuel. The answer will be considered correct if its absolute or relative error doesn' t exceed 10^ - 6 . Formally, let your answer be p , and the jury' s answer be q . Your answer is considered correct if | p - q| / max( 1, | q| ) \u2264 10^ - 6 .",
    "note": "Let' s consider the first example. Initially, the mass of a rocket with fuel is 22 tons. At take- off from Earth one ton of fuel can lift off 11 tons of cargo, so to lift off 22 tons you need to burn 2 tons of fuel. Remaining weight of the rocket with fuel is 20 tons. During landing on Mars, one ton of fuel can land 5 tons of cargo, so for landing 20 tons you will need to burn 4 tons of fuel. There will be 16 tons of the rocket with fuel remaining. While taking off from Mars, one ton of fuel can raise 8 tons of cargo, so to lift off 16 tons you will need to burn 2 tons of fuel. There will be 14 tons of rocket with fuel after that. During landing on Earth, one ton of fuel can land 7 tons of cargo, so for landing 14 tons you will need to burn 2 tons of fuel. Remaining weight is 12 tons, that is, a rocket without any fuel. In the second case, the rocket will not be able even to take off from Earth.",
    "topics": [
      "binary search",
      "math"
    ],
    "id": "1010A"
  },
  {
    "title": "Intercity Travelling",
    "url": "https://codeforces.com/problemset/problem/1009/E",
    "history": "Leha is planning his journey from Moscow to Saratov. He hates trains, so he has decided to get from one city to another by car. The path from Moscow to Saratov can be represented as a straight line ( well, it' s not that straight in reality, but in this problem we will consider it to be straight) , and the distance between Moscow and Saratov is n km. Let' s say that Moscow is situated at the point with coordinate 0 km, and Saratov \u2014 at coordinate n km. Driving for a long time may be really difficult. Formally, if Leha has already covered i kilometers since he stopped to have a rest, he considers the difficulty of covering ( i + 1) - th kilometer as a_ i + 1 . It is guaranteed that for every i \u2208 [ 1, n - 1] a_ i \u2264 a_ i + 1 . The difficulty of the journey is denoted as the sum of difficulties of each kilometer in the journey. Fortunately, there may be some rest sites between Moscow and Saratov. Every integer point from 1 to n - 1 may contain a rest site. When Leha enters a rest site, he may have a rest, and the next kilometer will have difficulty a_ 1 , the kilometer after it \u2014 difficulty a_ 2 , and so on. For example, if n = 5 and there is a rest site in coordinate 2 , the difficulty of journey will be 2a_ 1 + 2a_ 2 + a_ 3 : the first kilometer will have difficulty a_ 1 , the second one \u2014 a_ 2 , then Leha will have a rest, and the third kilometer will have difficulty a_ 1 , the fourth \u2014 a_ 2 , and the last one \u2014 a_ 3 . Another example: if n = 7 and there are rest sites in coordinates 1 and 5 , the difficulty of Leha' s journey is 3a_ 1 + 2a_ 2 + a_ 3 + a_ 4 . Leha doesn' t know which integer points contain rest sites. So he has to consider every possible situation. Obviously, there are 2^ n - 1 different distributions of rest sites ( two distributions are different if there exists some point x such that it contains a rest site in exactly one of these distributions) . Leha considers all these distributions to be equiprobable. He wants to calculate p \u2014 the expected value of difficulty of his journey. Obviously, p \u00b7 2^ n - 1 is an integer number. You have to calculate it modulo 998244353 .",
    "input": "The first line contains one number n ( 1 \u2264 n \u2264 10^ 6 ) \u2014 the distance from Moscow to Saratov. The second line contains n integer numbers a_ 1 , a_ 2 , . . . , a_ n ( 1 \u2264 a_ 1 \u2264 a_ 2 \u2264. . . \u2264 a_ n \u2264 10^ 6 ) , where a_ i is the difficulty of i - th kilometer after Leha has rested.",
    "output": "Print one number \u2014 p \u00b7 2^ n - 1 , taken modulo 998244353 .",
    "note": "",
    "topics": [
      "combinatorics",
      "math",
      "probabilities"
    ],
    "id": "1009E"
  },
  {
    "title": "Relatively Prime Graph",
    "url": "https://codeforces.com/problemset/problem/1009/D",
    "history": "Let' s call an undirected graph G = ( V, E) relatively prime if and only if for each edge ( v, u) \u2208 E GCD( v, u) = 1 ( the greatest common divisor of v and u is 1 ) . If there is no edge between some pair of vertices v and u then the value of GCD( v, u) doesn' t matter. The vertices are numbered from 1 to | V| . Construct a relatively prime graph with n vertices and m edges such that it is connected and it contains neither self- loops nor multiple edges. If there exists no valid graph with the given number of vertices and edges then output \" Impossible\" . If there are multiple answers then print any of them.",
    "input": "The only line contains two integers n and m ( 1 \u2264 n, m \u2264 10^ 5 ) \u2014 the number of vertices and the number of edges.",
    "output": "If there exists no valid graph with the given number of vertices and edges then output \" Impossible\" . Otherwise print the answer in the following format: The first line should contain the word \" Possible\" . The i - th of the next m lines should contain the i - th edge ( v_ i, u_ i) of the resulting graph ( 1 \u2264 v_ i, u_ i \u2264 n, v_ i = \u0338 u_ i ) . For each pair ( v, u) there can be no more pairs ( v, u) or ( u, v) . The vertices are numbered from 1 to n . If there are multiple answers then print any of them.",
    "note": "Here is the representation of the graph from the first example:",
    "topics": [
      "brute force",
      "constructive algorithms",
      "graphs",
      "greedy",
      "math"
    ],
    "id": "1009D"
  },
  {
    "title": "Annoying Present",
    "url": "https://codeforces.com/problemset/problem/1009/C",
    "history": "Alice got an array of length n as a birthday present once again! This is the third year in a row! And what is more disappointing, it is overwhelmengly boring, filled entirely with zeros. Bob decided to apply some changes to the array to cheer up Alice. Bob has chosen m changes of the following form. For some integer numbers x and d , he chooses an arbitrary position i ( 1 \u2264 i \u2264 n ) and for every j \u2208 [ 1, n] adds x + d \u00b7 dist( i, j) to the value of the j - th cell. dist( i, j) is the distance between positions i and j ( i. e. dist( i, j) = | i - j| , where | x| is an absolute value of x ) . For example, if Alice currently has an array [ 2, 1, 2, 2] and Bob chooses position 3 for x = - 1 and d = 2 then the array will become [ 2 - 1 + 2 \u00b7 2, 1 - 1 + 2 \u00b7 1, 2 - 1 + 2 \u00b7 0, 2 - 1 + 2 \u00b7 1] = [ 5, 2, 1, 3] . Note that Bob can' t choose position i outside of the array ( that is, smaller than 1 or greater than n ) . Alice will be the happiest when the elements of the array are as big as possible. Bob claimed that the arithmetic mean value of the elements will work fine as a metric. What is the maximum arithmetic mean value Bob can achieve?",
    "input": "The first line contains two integers n and m ( 1 \u2264 n, m \u2264 10^ 5 ) \u2014 the number of elements of the array and the number of changes. Each of the next m lines contains two integers x_ i and d_ i ( - 10^ 3 \u2264 x_ i, d_ i \u2264 10^ 3 ) \u2014 the parameters for the i - th change.",
    "output": "Print the maximal average arithmetic mean of the elements Bob can achieve. Your answer is considered correct if its absolute or relative error doesn' t exceed 10^ - 6 .",
    "note": "",
    "topics": [
      "greedy",
      "math"
    ],
    "id": "1009C"
  },
  {
    "title": "Pave the Parallelepiped",
    "url": "https://codeforces.com/problemset/problem/1007/B",
    "history": "You are given a rectangular parallelepiped with sides of positive integer lengths A , B and C . Find the number of different groups of three integers ( a , b , c ) such that 1\u2264 a\u2264 b\u2264 c and parallelepiped A\u00d7 B\u00d7 C can be paved with parallelepipeds a\u00d7 b\u00d7 c . Note, that all small parallelepipeds have to be rotated in the same direction. For example, parallelepiped 1\u00d7 5\u00d7 6 can be divided into parallelepipeds 1\u00d7 3\u00d7 5 , but can not be divided into parallelepipeds 1\u00d7 2\u00d7 3 .",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 5 ) \u2014 the number of test cases. Each of the next t lines contains three integers A , B and C ( 1 \u2264 A, B, C \u2264 10^ 5 ) \u2014 the sizes of the parallelepiped.",
    "output": "For each test case, print the number of different groups of three points that satisfy all given conditions.",
    "note": "In the first test case, rectangular parallelepiped ( 1, 1, 1) can be only divided into rectangular parallelepiped with sizes ( 1, 1, 1) . In the second test case, rectangular parallelepiped ( 1, 6, 1) can be divided into rectangular parallelepipeds with sizes ( 1, 1, 1) , ( 1, 1, 2) , ( 1, 1, 3) and ( 1, 1, 6) . In the third test case, rectangular parallelepiped ( 2, 2, 2) can be divided into rectangular parallelepipeds with sizes ( 1, 1, 1) , ( 1, 1, 2) , ( 1, 2, 2) and ( 2, 2, 2) .",
    "topics": [
      "bitmasks",
      "brute force",
      "combinatorics",
      "math",
      "number theory"
    ],
    "id": "1007B"
  },
  {
    "title": "Reorder the Array",
    "url": "https://codeforces.com/problemset/problem/1007/A",
    "history": "You are given an array of integers. Vasya can permute ( change order) its integers. He wants to do it so that as many as possible integers will become on a place where a smaller integer used to stand. Help Vasya find the maximal number of such integers. For instance, if we are given an array [ 10, 20, 30, 40] , we can permute it so that it becomes [ 20, 40, 10, 30] . Then on the first and the second positions the integers became larger ( 20> 10 , 40> 20 ) and did not on the third and the fourth, so for this permutation, the number that Vasya wants to maximize equals 2 . Read the note for the first example, there is one more demonstrative test case. Help Vasya to permute integers in such way that the number of positions in a new array, where integers are greater than in the original one, is maximal.",
    "input": "The first line contains a single integer n ( 1 \u2264 n \u2264 10^ 5 ) \u2014 the length of the array. The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 9 ) \u2014 the elements of the array.",
    "output": "Print a single integer \u2014 the maximal number of the array' s elements which after a permutation will stand on the position where a smaller element stood in the initial array.",
    "note": "In the first sample, one of the best permutations is [ 1, 5, 5, 3, 10, 1, 1] . On the positions from second to fifth the elements became larger, so the answer for this permutation is 4. In the second sample, there is no way to increase any element with a permutation, so the answer is 0.",
    "topics": [
      "combinatorics",
      "data structures",
      "math",
      "sortings",
      "two pointers"
    ],
    "id": "1007A"
  },
  {
    "title": "Sonya and Exhibition",
    "url": "https://codeforces.com/problemset/problem/1004/B",
    "history": "Sonya decided to organize an exhibition of flowers. Since the girl likes only roses and lilies, she decided that only these two kinds of flowers should be in this exhibition. There are n flowers in a row in the exhibition. Sonya can put either a rose or a lily in the i - th position. Thus each of n positions should contain exactly one flower: a rose or a lily. She knows that exactly m people will visit this exhibition. The i - th visitor will visit all flowers from l_ i to r_ i inclusive. The girl knows that each segment has its own beauty that is equal to the product of the number of roses and the number of lilies. Sonya wants her exhibition to be liked by a lot of people. That is why she wants to put the flowers in such way that the sum of beauties of all segments would be maximum possible.",
    "input": "The first line contains two integers n and m ( 1\u2264 n, m\u2264 10^ 3 ) \u2014 the number of flowers and visitors respectively. Each of the next m lines contains two integers l_ i and r_ i ( 1\u2264 l_ i\u2264 r_ i\u2264 n ) , meaning that i - th visitor will visit all flowers from l_ i to r_ i inclusive.",
    "output": "Print the string of n characters. The i - th symbol should be \u00ab0\u00bb if you want to put a rose in the i - th position, otherwise \u00ab1\u00bb if you want to put a lily. If there are multiple answers, print any.",
    "note": "In the first example, Sonya can put roses in the first, fourth, and fifth positions, and lilies in the second and third positions; in the segment [ 1. . . 3] , there are one rose and two lilies, so the beauty is equal to 1\u00b7 2= 2 ; in the segment [ 2. . . 4] , there are one rose and two lilies, so the beauty is equal to 1\u00b7 2= 2 ; in the segment [ 2. . . 5] , there are two roses and two lilies, so the beauty is equal to 2\u00b7 2= 4 . The total beauty is equal to 2+ 2+ 4= 8 . In the second example, Sonya can put roses in the third, fourth, and sixth positions, and lilies in the first, second, and fifth positions; in the segment [ 5. . . 6] , there are one rose and one lily, so the beauty is equal to 1\u00b7 1= 1 ; in the segment [ 1. . . 4] , there are two roses and two lilies, so the beauty is equal to 2\u00b7 2= 4 ; in the segment [ 4. . . 6] , there are two roses and one lily, so the beauty is equal to 2\u00b7 1= 2 . The total beauty is equal to 1+ 4+ 2= 7 .",
    "topics": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "math"
    ],
    "id": "1004B"
  },
  {
    "title": "Intense Heat",
    "url": "https://codeforces.com/problemset/problem/1003/C",
    "history": "The heat during the last few days has been really intense. Scientists from all over the Berland study how the temperatures and weather change, and they claim that this summer is abnormally hot. But any scientific claim sounds a lot more reasonable if there are some numbers involved, so they have decided to actually calculate some value which would represent how high the temperatures are. Mathematicians of Berland State University came up with a special heat intensity value. This value is calculated as follows: Suppose we want to analyze the segment of n consecutive days. We have measured the temperatures during these n days; the temperature during i - th day equals a_ i . We denote the average temperature of a segment of some consecutive days as the arithmetic mean of the temperature measures during this segment of days. So, if we want to analyze the average temperature from day x to day y , we calculate it as \u2211_ i = x^ y a_ i/ y - x + 1 ( note that division is performed without any rounding) . The heat intensity value is the maximum of average temperatures over all segments of not less than k consecutive days. For example, if analyzing the measures [ 3, 4, 1, 2] and k = 3 , we are interested in segments [ 3, 4, 1] , [ 4, 1, 2] and [ 3, 4, 1, 2] ( we want to find the maximum value of average temperature over these segments) . You have been hired by Berland State University to write a program that would compute the heat intensity value of a given period of days. Are you up to this task?",
    "input": "The first line contains two integers n and k ( 1 \u2264 k \u2264 n \u2264 5000 ) \u2014 the number of days in the given period, and the minimum number of days in a segment we consider when calculating heat intensity value, respectively. The second line contains n integers a_ 1 , a_ 2 , . . . , a_ n ( 1 \u2264 a_ i \u2264 5000 ) \u2014 the temperature measures during given n days.",
    "output": "Print one real number \u2014 the heat intensity value, i. e. , the maximum of average temperatures over all segments of not less than k consecutive days. Your answer will be considered correct if the following condition holds: | res - res_ 0| < 10^ - 6 , where res is your answer, and res_ 0 is the answer given by the jury' s solution.",
    "note": "",
    "topics": [
      "brute force",
      "implementation",
      "math"
    ],
    "id": "1003C"
  },
  {
    "title": "Sky Full of Stars",
    "url": "https://codeforces.com/problemset/problem/997/C",
    "history": "On one of the planets of Solar system, in Atmosphere University, many students are fans of bingo game. It is well known that one month on this planet consists of n^ 2 days, so calendars, represented as square matrix n by n are extremely popular. Weather conditions are even more unusual. Due to the unique composition of the atmosphere, when interacting with sunlight, every day sky takes one of three colors: blue, green or red. To play the bingo, you need to observe the sky for one month \u2014 after each day, its cell is painted with the color of the sky in that day, that is, blue, green or red. At the end of the month, students examine the calendar. If at least one row or column contains only cells of one color, that month is called lucky. Let' s call two colorings of calendar different, if at least one cell has different colors in them. It is easy to see that there are 3^ n \u00b7 n different colorings. How much of them are lucky? Since this number can be quite large, print it modulo 998244353 .",
    "input": "The first and only line of input contains a single integer n ( 1 \u2264 n \u2264 1000 000 ) \u2014 the number of rows and columns in the calendar.",
    "output": "Print one number \u2014 number of lucky colorings of the calendar modulo 998244353",
    "note": "In the first sample any coloring is lucky, since the only column contains cells of only one color. In the second sample, there are a lot of lucky colorings, in particular, the following colorings are lucky: While these colorings are not lucky:",
    "topics": [
      "combinatorics",
      "math"
    ],
    "id": "997C"
  },
  {
    "title": "Roman Digits",
    "url": "https://codeforces.com/problemset/problem/997/B",
    "history": "Let' s introduce a number system which is based on a roman digits. There are digits I, V, X, L which correspond to the numbers 1 , 5 , 10 and 50 respectively. The use of other roman digits is not allowed. Numbers in this system are written as a sequence of one or more digits. We define the value of the sequence simply as the sum of digits in it. For example, the number XXXV evaluates to 35 and the number IXI \u2014 to 12 . Pay attention to the difference to the traditional roman system \u2014 in our system any sequence of digits is valid, moreover the order of digits doesn' t matter, for example IX means 11 , not 9 . One can notice that this system is ambiguous, and some numbers can be written in many different ways. Your goal is to determine how many distinct integers can be represented by exactly n roman digits I, V, X, L.",
    "input": "The only line of the input file contains a single integer n ( 1 \u2264 n \u2264 10^ 9 ) \u2014 the number of roman digits to use.",
    "output": "Output a single integer \u2014 the number of distinct integers which can be represented using n roman digits exactly.",
    "note": "In the first sample there are exactly 4 integers which can be represented \u2014 I, V, X and L. In the second sample it is possible to represent integers 2 ( II) , 6 ( VI) , 10 ( VV) , 11 ( XI) , 15 ( XV) , 20 ( XX) , 51 ( IL) , 55 ( VL) , 60 ( XL) and 100 ( LL) .",
    "topics": [
      "brute force",
      "combinatorics",
      "dp",
      "greedy",
      "math"
    ],
    "id": "997B"
  },
  {
    "title": "Convert to Ones",
    "url": "https://codeforces.com/problemset/problem/997/A",
    "history": "You' ve got a string a_ 1, a_ 2, . . . , a_ n , consisting of zeros and ones. Let' s call a sequence of consecutive elements a_ i, a_ i + 1, . . . , a_ j ( 1\u2264 i\u2264 j\u2264 n ) a substring of string a . You can apply the following operations any number of times: Choose some substring of string a ( for example, you can choose entire string) and reverse it, paying x coins for it ( for example, \u00ab0101101\u00bb \u2192 \u00ab0111001\u00bb) ; Choose some substring of string a ( for example, you can choose entire string or just one symbol) and replace each symbol to the opposite one ( zeros are replaced by ones, and ones \u2014 by zeros) , paying y coins for it ( for example, \u00ab0101101\u00bb \u2192 \u00ab0110001\u00bb) . You can apply these operations in any order. It is allowed to apply the operations multiple times to the same substring. What is the minimum number of coins you need to spend to get a string consisting only of ones?",
    "input": "The first line of input contains integers n , x and y ( 1 \u2264 n \u2264 300 000, 0 \u2264 x, y \u2264 10^ 9 ) \u2014 length of the string, cost of the first operation ( substring reverse) and cost of the second operation ( inverting all elements of substring) . The second line contains the string a of length n , consisting of zeros and ones.",
    "output": "Print a single integer \u2014 the minimum total cost of operations you need to spend to get a string consisting only of ones. Print 0 , if you do not need to perform any operations.",
    "note": "In the first sample, at first you need to reverse substring [ 1 . . . 2] , and then you need to invert substring [ 2 . . . 5] . Then the string was changed as follows: \u00ab01000\u00bb \u2192 \u00ab10000\u00bb \u2192 \u00ab11111\u00bb. The total cost of operations is 1 + 10 = 11 . In the second sample, at first you need to invert substring [ 1 . . . 1] , and then you need to invert substring [ 3 . . . 5] . Then the string was changed as follows: \u00ab01000\u00bb \u2192 \u00ab11000\u00bb \u2192 \u00ab11111\u00bb. The overall cost is 1 + 1 = 2 . In the third example, string already consists only of ones, so the answer is 0 .",
    "topics": [
      "brute force",
      "greedy",
      "implementation",
      "math"
    ],
    "id": "997A"
  },
  {
    "title": "World Cup",
    "url": "https://codeforces.com/problemset/problem/996/B",
    "history": "Allen wants to enter a fan zone that occupies a round square and has n entrances. There already is a queue of a_ i people in front of the i - th entrance. Each entrance allows one person from its queue to enter the fan zone in one minute. Allen uses the following strategy to enter the fan zone: Initially he stands in the end of the queue in front of the first entrance. Each minute, if he is not allowed into the fan zone during the minute ( meaning he is not the first in the queue) , he leaves the current queue and stands in the end of the queue of the next entrance ( or the first entrance if he leaves the last entrance) . Determine the entrance through which Allen will finally enter the fan zone.",
    "input": "The first line contains a single integer n ( 2 \u2264 n \u2264 10^ 5 ) \u2014 the number of entrances. The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 0 \u2264 a_ i \u2264 10^ 9 ) \u2014 the number of people in queues. These numbers do not include Allen.",
    "output": "Print a single integer \u2014 the number of entrance that Allen will use.",
    "note": "In the first example the number of people ( not including Allen) changes as follows: [ 2, 3, 2, 0] \u2192 [ 1, 2, 1, 0] \u2192 [ 0, 1, 0, 0] . The number in bold is the queue Alles stands in. We see that he will enter the fan zone through the third entrance. In the second example the number of people ( not including Allen) changes as follows: [ 10, 10] \u2192 [ 9, 9] \u2192 [ 8, 8] \u2192 [ 7, 7] \u2192 [ 6, 6] \u2192 [ 5, 5] \u2192 [ 4, 4] \u2192 [ 3, 3] \u2192 [ 2, 2] \u2192 [ 1, 1] \u2192 [ 0, 0] . In the third example the number of people ( not including Allen) changes as follows: [ 5, 2, 6, 5, 7, 4] \u2192 [ 4, 1, 5, 4, 6, 3] \u2192 [ 3, 0, 4, 3, 5, 2] \u2192 [ 2, 0, 3, 2, 4, 1] \u2192 [ 1, 0, 2, 1, 3, 0] \u2192 [ 0, 0, 1, 0, 2, 0] .",
    "topics": [
      "binary search",
      "math"
    ],
    "id": "996B"
  },
  {
    "title": "Cowmpany Cowmpensation",
    "url": "https://codeforces.com/problemset/problem/995/F",
    "history": "Allen, having graduated from the MOO Institute of Techcowlogy ( MIT) , has started a startup! Allen is the president of his startup. He also hires n- 1 other employees, each of which is assigned a direct superior. If u is a superior of v and v is a superior of w then also u is a superior of w . Additionally, there are no u and v such that u is the superior of v and v is the superior of u . Allen himself has no superior. Allen is employee number 1 , and the others are employee numbers 2 through n . Finally, Allen must assign salaries to each employee in the company including himself. Due to budget constraints, each employee' s salary is an integer between 1 and D . Additionally, no employee can make strictly more than his superior. Help Allen find the number of ways to assign salaries. As this number may be large, output it modulo 10^ 9 + 7 .",
    "input": "The first line of the input contains two integers n and D ( 1 \u2264 n \u2264 3000 , 1 \u2264 D \u2264 10^ 9 ) . The remaining n- 1 lines each contain a single positive integer, where the i - th line contains the integer p_ i ( 1 \u2264 p_ i \u2264 i ) . p_ i denotes the direct superior of employee i+ 1 .",
    "output": "Output a single integer: the number of ways to assign salaries modulo 10^ 9 + 7 .",
    "note": "In the first sample case, employee 2 and 3 report directly to Allen. The three salaries, in order, can be ( 1, 1, 1) , ( 2, 1, 1) , ( 2, 1, 2) , ( 2, 2, 1) or ( 2, 2, 2) . In the second sample case, employee 2 reports to Allen and employee 3 reports to employee 2. In order, the possible salaries are ( 1, 1, 1) , ( 2, 1, 1) , ( 2, 2, 1) , ( 2, 2, 2) , ( 3, 1, 1) , ( 3, 2, 1) , ( 3, 2, 2) , ( 3, 3, 1) , ( 3, 3, 2) , ( 3, 3, 3) .",
    "topics": [
      "combinatorics",
      "dp",
      "math",
      "trees"
    ],
    "id": "995F"
  },
  {
    "title": "Game",
    "url": "https://codeforces.com/problemset/problem/995/D",
    "history": "Allen and Bessie are playing a simple number game. They both know a function f: { 0, 1} ^ n \u2192R , i. e. the function takes n binary arguments and returns a real value. At the start of the game, the variables x_ 1, x_ 2, . . . , x_ n are all set to - 1 . Each round, with equal probability, one of Allen or Bessie gets to make a move. A move consists of picking an i such that x_ i = - 1 and either setting x_ i \u2192 0 or x_ i \u2192 1 . After n rounds all variables are set, and the game value resolves to f( x_ 1, x_ 2, . . . , x_ n) . Allen wants to maximize the game value, and Bessie wants to minimize it. Your goal is to help Allen and Bessie find the expected game value! They will play r+ 1 times though, so between each game, exactly one value of f changes. In other words, between rounds i and i+ 1 for 1 \u2264 i \u2264 r , f( z_ 1, . . . , z_ n) \u2192 g_ i for some ( z_ 1, . . . , z_ n) \u2208{ 0, 1} ^ n . You are to find the expected game value in the beginning and after each change.",
    "input": "The first line contains two integers n and r ( 1 \u2264 n \u2264 18 , 0 \u2264 r \u2264 2^ 18 ) . The next line contains 2^ n integers c_ 0, c_ 1, . . . , c_ 2^ n- 1 ( 0 \u2264 c_ i \u2264 10^ 9 ) , denoting the initial values of f . More specifically, f( x_ 0, x_ 1, . . . , x_ n- 1) = c_ x , if x = x_ n- 1. . . x_ 0 in binary. Each of the next r lines contains two integers z and g ( 0 \u2264 z \u2264 2^ n - 1 , 0 \u2264 g \u2264 10^ 9 ) . If z = z_ n- 1. . . z_ 0 in binary, then this means to set f( z_ 0, . . . , z_ n- 1) \u2192 g .",
    "output": "Print r+ 1 lines, the i - th of which denotes the value of the game f during the i - th round. Your answer must have absolute or relative error within 10^ - 6 . Formally, let your answer be a , and the jury' s answer be b . Your answer is considered correct if | a - b| / max( 1, | b| ) \u2264 10^ - 6 .",
    "note": "Consider the second test case. If Allen goes first, he will set x_ 1 \u2192 1 , so the final value will be 3 . If Bessie goes first, then she will set x_ 1 \u2192 0 so the final value will be 2 . Thus the answer is 2. 5 . In the third test case, the game value will always be 1 regardless of Allen and Bessie' s play.",
    "topics": [
      "math"
    ],
    "id": "995D"
  },
  {
    "title": "Leaving the Bar",
    "url": "https://codeforces.com/problemset/problem/995/C",
    "history": "For a vector v\u20d7 = ( x, y) , define | v| = \u221a( x^ 2 + y^ 2) . Allen had a bit too much to drink at the bar, which is at the origin. There are n vectors v\u20d7_ \u20d71\u20d7, v\u20d7_ \u20d72\u20d7, \u22ef, v\u20d7_ \u20d7n\u20d7 . Allen will make n moves. As Allen' s sense of direction is impaired, during the i - th move he will either move in the direction v\u20d7_ \u20d7i\u20d7 or - v\u20d7_ \u20d7i\u20d7 . In other words, if his position is currently p = ( x, y) , he will either move to p + v\u20d7_ \u20d7i\u20d7 or p - v\u20d7_ \u20d7i\u20d7 . Allen doesn' t want to wander too far from home ( which happens to also be the bar) . You need to help him figure out a sequence of moves ( a sequence of signs for the vectors) such that his final position p satisfies | p| \u2264 1. 5 \u00b7 10^ 6 so that he can stay safe.",
    "input": "The first line contains a single integer n ( 1 \u2264 n \u2264 10^ 5 ) \u2014 the number of moves. Each of the following lines contains two space- separated integers x_ i and y_ i , meaning that v\u20d7_ \u20d7i\u20d7 = ( x_ i, y_ i) . We have that | v_ i| \u2264 10^ 6 for all i .",
    "output": "Output a single line containing n integers c_ 1, c_ 2, \u22ef, c_ n , each of which is either 1 or - 1 . Your solution is correct if the value of p = \u2211_ i = 1^ n c_ i v\u20d7_ \u20d7i\u20d7 , satisfies | p| \u2264 1. 5 \u00b7 10^ 6 . It can be shown that a solution always exists under the given constraints.",
    "note": "",
    "topics": [
      "brute force",
      "data structures",
      "geometry",
      "greedy",
      "math",
      "sortings"
    ],
    "id": "995C"
  },
  {
    "title": "Suit and Tie",
    "url": "https://codeforces.com/problemset/problem/995/B",
    "history": "Allen is hosting a formal dinner party. 2n people come to the event in n pairs ( couples) . After a night of fun, Allen wants to line everyone up for a final picture. The 2n people line up, but Allen doesn' t like the ordering. Allen prefers if each pair occupies adjacent positions in the line, as this makes the picture more aesthetic. Help Allen find the minimum number of swaps of adjacent positions he must perform to make it so that each couple occupies adjacent positions in the line.",
    "input": "The first line contains a single integer n ( 1 \u2264 n \u2264 100 ) , the number of pairs of people. The second line contains 2n integers a_ 1, a_ 2, . . . , a_ 2n . For each i with 1 \u2264 i \u2264 n , i appears exactly twice. If a_ j = a_ k = i , that means that the j - th and k - th people in the line form a couple.",
    "output": "Output a single integer, representing the minimum number of adjacent swaps needed to line the people up so that each pair occupies adjacent positions.",
    "note": "In the first sample case, we can transform 1 1 2 3 3 2 4 4 \u2192 1 1 2 3 2 3 4 4 \u2192 1 1 2 2 3 3 4 4 in two steps. Note that the sequence 1 1 2 3 3 2 4 4 \u2192 1 1 3 2 3 2 4 4 \u2192 1 1 3 3 2 2 4 4 also works in the same number of steps. The second sample case already satisfies the constraints; therefore we need 0 swaps.",
    "topics": [
      "greedy",
      "implementation",
      "math"
    ],
    "id": "995B"
  },
  {
    "title": "Heroes of Might",
    "url": "https://codeforces.com/problemset/problem/1666/H",
    "history": "",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "math"
    ],
    "id": "1666H"
  },
  {
    "title": "Global Warming",
    "url": "https://codeforces.com/problemset/problem/1666/G",
    "history": "",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "geometry",
      "math"
    ],
    "id": "1666G"
  },
  {
    "title": "Berland University",
    "url": "https://codeforces.com/problemset/problem/1090/L",
    "history": "",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "greedy",
      "math"
    ],
    "id": "1090L"
  },
  {
    "title": "Right Expansion Of The Mind",
    "url": "https://codeforces.com/problemset/problem/1090/K",
    "history": "",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "math"
    ],
    "id": "1090K"
  },
  {
    "title": "Nikita and Order Statistics",
    "url": "https://codeforces.com/problemset/problem/993/E",
    "history": "Nikita likes tasks on order statistics, for example, he can easily find the k - th number in increasing order on a segment of an array. But now Nikita wonders how many segments of an array there are such that a given number x is the k - th number in increasing order on this segment. In other words, you should find the number of segments of a given array such that there are exactly k numbers of this segment which are less than x . Nikita wants to get answer for this question for each k from 0 to n , where n is the size of the array.",
    "input": "The first line contains two integers n and x ( 1 \u2264 n \u2264 2 \u00b7 10^ 5, - 10^ 9 \u2264 x \u2264 10^ 9) . The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( - 10^ 9 \u2264 a_ i \u2264 10^ 9) \u2014 the given array.",
    "output": "Print n+ 1 integers, where the i - th number is the answer for Nikita' s question for k= i- 1 .",
    "note": "",
    "topics": [
      "chinese remainder theorem",
      "fft",
      "math"
    ],
    "id": "993E"
  },
  {
    "title": "Nastya and a Game",
    "url": "https://codeforces.com/problemset/problem/992/D",
    "history": "Nastya received one more array on her birthday, this array can be used to play a traditional Byteland game on it. However, to play the game the players should first select such a subsegment of the array that , where p is the product of all integers on the given array, s is their sum, and k is a given constant for all subsegments. Nastya wonders how many subsegments of the array fit the described conditions. A subsegment of an array is several consecutive integers of the array.",
    "input": "The first line contains two integers n and k ( 1 \u2264 n \u2264 2\u00b7105, 1 \u2264 k \u2264 105) , where n is the length of the array and k is the constant described above. The second line contains n integers a1, a2, . . . , an ( 1 \u2264 ai \u2264 108) \u2014 the elements of the array.",
    "output": "In the only line print the number of subsegments such that the ratio between the product and the sum on them is equal to k.",
    "note": "In the first example the only subsegment is [ 1] . The sum equals 1, the product equals 1, so it suits us because . There are two suitable subsegments in the second example \u2014 [ 6, 3] and [ 3, 8, 1] . Subsegment [ 6, 3] has sum 9 and product 18, so it suits us because . Subsegment [ 3, 8, 1] has sum 12 and product 24, so it suits us because .",
    "topics": [
      "brute force",
      "implementation",
      "math"
    ],
    "id": "992D"
  },
  {
    "title": "Nastya and a Wardrobe",
    "url": "https://codeforces.com/problemset/problem/992/C",
    "history": "Nastya received a gift on New Year \u2014 a magic wardrobe. It is magic because in the end of each month the number of dresses in it doubles ( i. e. the number of dresses becomes twice as large as it is in the beginning of the month) . Unfortunately, right after the doubling the wardrobe eats one of the dresses ( if any) with the 50",
    "input": "The only line contains two integers x and k ( 0 \u2264 x, k \u2264 1018) , where x is the initial number of dresses and k + 1 is the number of months in a year in Byteland.",
    "output": "In the only line print a single integer \u2014 the expected number of dresses Nastya will own one year later modulo 109 + 7.",
    "note": "In the first example a year consists on only one month, so the wardrobe does not eat dresses at all. In the second example after the first month there are 3 dresses with 50",
    "topics": [
      "math"
    ],
    "id": "992C"
  },
  {
    "title": "Nastya Studies Informatics",
    "url": "https://codeforces.com/problemset/problem/992/B",
    "history": "Today on Informatics class Nastya learned about GCD and LCM ( see links below) . Nastya is very intelligent, so she solved all the tasks momentarily and now suggests you to solve one of them as well. We define a pair of integers ( a, b) good, if GCD( a, b) = x and LCM( a, b) = y, where GCD( a, b) denotes the greatest common divisor of a and b, and LCM( a, b) denotes the least common multiple of a and b. You are given two integers x and y. You are to find the number of good pairs of integers ( a, b) such that l \u2264 a, b \u2264 r. Note that pairs ( a, b) and ( b, a) are considered different if a = \u0338 b.",
    "input": "The only line contains four integers l, r, x, y ( 1 \u2264 l \u2264 r \u2264 109, 1 \u2264 x \u2264 y \u2264 109) .",
    "output": "In the only line print the only integer \u2014 the answer for the problem.",
    "note": "In the first example there are two suitable good pairs of integers ( a, b) : ( 1, 2) and ( 2, 1) . In the second example there are four suitable good pairs of integers ( a, b) : ( 1, 12) , ( 12, 1) , ( 3, 4) and ( 4, 3) . In the third example there are good pairs of integers, for example, ( 3, 30) , but none of them fits the condition l \u2264 a, b \u2264 r.",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "992B"
  },
  {
    "title": "Concise and clear",
    "url": "https://codeforces.com/problemset/problem/991/F",
    "history": "Vasya is a regular participant at programming contests and is already experienced in finding important sentences in long statements. Of course, numbers constraints are important \u2014 factorization of a number less than 1000000 is easier than of a number less than 1000000000. However, sometimes it' s hard to understand the number at the first glance. Could it be shortened? For example, instead of 1000000 you could write 10^ 6 , instead of 1000000000 \u2014 10^ 9 , instead of 1000000007 \u2014 10^ 9+ 7 . Vasya decided that, to be concise, the notation should follow several rules: the notation should only consist of numbers, operations of addition ( \" + \" ) , multiplication ( \" * \" ) and exponentiation ( \" ^ \" ) , in particular, the use of braces is forbidden; the use of several exponentiation operations in a row is forbidden, for example, writing \" 2^ 3^ 4\" is unacceptable; the value of the resulting expression equals to the initial number; the notation should consist of the minimal amount of symbols. Given n , find the equivalent concise notation for it.",
    "input": "The only line contains a single integer n ( 1 \u2264 n \u2264 10 000 000 000 ) .",
    "output": "Output a concise notation of the number n . If there are several concise notations, output any of them.",
    "note": "The third sample allows the answer 10^ 10 also of the length 5 .",
    "topics": [
      "brute force",
      "greedy",
      "implementation",
      "math"
    ],
    "id": "991F"
  },
  {
    "title": "Bus Number",
    "url": "https://codeforces.com/problemset/problem/991/E",
    "history": "This night wasn' t easy on Vasya. His favorite team lost, and he didn' t find himself victorious either \u2014 although he played perfectly, his teammates let him down every time. He had to win at least one more time, but the losestreak only grew longer and longer. . . It' s no wonder he didn' t get any sleep this night at all. In the morning, Vasya was waiting the bus to the university on the bus stop. Vasya' s thoughts were hazy and so he couldn' t remember the right bus' number quite right and got onto the bus with the number n . In the bus, Vasya thought that he could get the order of the digits in the number of the bus wrong. Futhermore, he could \" see\" some digits several times, but the digits he saw were definitely in the real number of the bus. For example, if Vasya saw the number 2028, it could mean that the real bus number could be 2028, 8022, 2820 or just 820. However, numbers 80, 22208, 52 definitely couldn' t be the number of the bus. Also, real bus number couldn' t start with the digit 0, this meaning that, for example, number 082 couldn' t be the real bus number too. Given n , determine the total number of possible bus number variants.",
    "input": "The first line contains one integer n ( 1 \u2264 n \u2264 10^ 18 ) \u2014 the number of the bus that was seen by Vasya. It is guaranteed that this number does not start with 0 .",
    "output": "Output a single integer \u2014 the amount of possible variants of the real bus number.",
    "note": "In the first sample, only variants 97 and 79 are possible. In the second sample, the variants ( in the increasing order) are the following: 208 , 280 , 802 , 820 , 2028 , 2082 , 2208 , 2280 , 2802 , 2820 , 8022 , 8202 , 8220 .",
    "topics": [
      "brute force",
      "combinatorics",
      "math"
    ],
    "id": "991E"
  },
  {
    "title": "Commentary Boxes",
    "url": "https://codeforces.com/problemset/problem/990/A",
    "history": "Berland Football Cup starts really soon! Commentators from all over the world come to the event. Organizers have already built n commentary boxes. m regional delegations will come to the Cup. Every delegation should get the same number of the commentary boxes. If any box is left unoccupied then the delegations will be upset. So each box should be occupied by exactly one delegation. If n is not divisible by m , it is impossible to distribute the boxes to the delegations at the moment. Organizers can build a new commentary box paying a burles and demolish a commentary box paying b burles. They can both build and demolish boxes arbitrary number of times ( each time paying a corresponding fee) . It is allowed to demolish all the existing boxes. What is the minimal amount of burles organizers should pay to satisfy all the delegations ( i. e. to make the number of the boxes be divisible by m ) ?",
    "input": "The only line contains four integer numbers n , m , a and b ( 1 \u2264 n, m \u2264 10^ 12 , 1 \u2264 a, b \u2264 100 ) , where n is the initial number of the commentary boxes, m is the number of delegations to come, a is the fee to build a box and b is the fee to demolish a box.",
    "output": "Output the minimal amount of burles organizers should pay to satisfy all the delegations ( i. e. to make the number of the boxes be divisible by m ) . It is allowed that the final number of the boxes is equal to 0 .",
    "note": "In the first example organizers can build 5 boxes to make the total of 14 paying 3 burles for the each of them. In the second example organizers can demolish 2 boxes to make the total of 0 paying 7 burles for the each of them. In the third example organizers are already able to distribute all the boxes equally among the delegations, each one get 5 boxes.",
    "topics": [
      "implementation",
      "math"
    ],
    "id": "990A"
  },
  {
    "title": "A Shade of Moonlight",
    "url": "https://codeforces.com/problemset/problem/989/D",
    "history": "Gathering darkness shrouds the woods and the world. The moon sheds its light on the boat and the river. \" To curtain off the moonlight should be hardly possible; the shades present its mellow beauty and restful nature. \" Intonates Mino. \" See? The clouds are coming. \" Kanno gazes into the distance. \" That can' t be better, \" Mino turns to Kanno. The sky can be seen as a one- dimensional axis. The moon is at the origin whose coordinate is 0 . There are n clouds floating in the sky. Each cloud has the same length l . The i - th initially covers the range of ( x_ i, x_ i + l) ( endpoints excluded) . Initially, it moves at a velocity of v_ i , which equals either 1 or - 1 . Furthermore, no pair of clouds intersect initially, that is, for all 1 \u2264 i j \u2264 n , | x_ i - x_ j | \u2265 l . With a wind velocity of w , the velocity of the i - th cloud becomes v_ i + w . That is, its coordinate increases by v_ i + w during each unit of time. Note that the wind can be strong and clouds can change their direction. You are to help Mino count the number of pairs ( i, j) ( i < j ) , such that with a proper choice of wind velocity w not exceeding w_ max in absolute value ( possibly negative and/ or fractional) , the i - th and j - th clouds both cover the moon at the same future moment. This w doesn' t need to be the same across different pairs.",
    "input": "The first line contains three space- separated integers n , l , and w_ max ( 1 \u2264 n \u2264 10^ 5 , 1 \u2264 l, w_ max\u2264 10^ 8 ) \u2014 the number of clouds, the length of each cloud and the maximum wind speed, respectively. The i - th of the following n lines contains two space- separated integers x_ i and v_ i ( - 10^ 8 \u2264 x_ i \u2264 10^ 8 , v_ i \u2208{ - 1, 1} ) \u2014 the initial position and the velocity of the i - th cloud, respectively. The input guarantees that for all 1 \u2264 i j \u2264 n , | x_ i - x_ j | \u2265 l .",
    "output": "Output one integer \u2014 the number of unordered pairs of clouds such that it' s possible that clouds from each pair cover the moon at the same future moment with a proper choice of wind velocity w .",
    "note": "In the first example, the initial positions and velocities of clouds are illustrated below. The pairs are: ( 1, 3) , covering the moon at time 2. 5 with w = - 0. 4 ; ( 1, 4) , covering the moon at time 3. 5 with w = - 0. 6 ; ( 1, 5) , covering the moon at time 4. 5 with w = - 0. 7 ; ( 2, 5) , covering the moon at time 2. 5 with w = - 2 . Below is the positions of clouds at time 2. 5 with w = - 0. 4 . At this moment, the 1 - st and 3 - rd clouds both cover the moon. In the second example, the only pair is ( 1, 4) , covering the moon at time 15 with w = 0 . Note that all the times and wind velocities given above are just examples among infinitely many choices.",
    "topics": [
      "binary search",
      "geometry",
      "math",
      "sortings",
      "two pointers"
    ],
    "id": "989D"
  },
  {
    "title": "Points and Powers of Two",
    "url": "https://codeforces.com/problemset/problem/988/D",
    "history": "There are n distinct points on a coordinate line, the coordinate of i - th point equals to x_ i . Choose a subset of the given set of points such that the distance between each pair of points in a subset is an integral power of two. It is necessary to consider each pair of points, not only adjacent. Note that any subset containing one element satisfies the condition above. Among all these subsets, choose a subset with maximum possible size. In other words, you have to choose the maximum possible number of points x_ i_ 1, x_ i_ 2, . . . , x_ i_ m such that for each pair x_ i_ j , x_ i_ k it is true that | x_ i_ j - x_ i_ k| = 2^ d where d is some non- negative integer number ( not necessarily the same for each pair of points) .",
    "input": "The first line contains one integer n ( 1 \u2264 n \u2264 2 \u00b7 10^ 5 ) \u2014 the number of points. The second line contains n pairwise distinct integers x_ 1, x_ 2, . . . , x_ n ( - 10^ 9 \u2264 x_ i \u2264 10^ 9 ) \u2014 the coordinates of points.",
    "output": "In the first line print m \u2014 the maximum possible number of points in a subset that satisfies the conditions described above. In the second line print m integers \u2014 the coordinates of points in the subset you have chosen. If there are multiple answers, print any of them.",
    "note": "In the first example the answer is [ 7, 3, 5] . Note, that | 7- 3| = 4= 2^ 2 , | 7- 5| = 2= 2^ 1 and | 3- 5| = 2= 2^ 1 . You can' t find a subset having more points satisfying the required property.",
    "topics": [
      "brute force",
      "math"
    ],
    "id": "988D"
  },
  {
    "title": "High School: Become Human",
    "url": "https://codeforces.com/problemset/problem/987/B",
    "history": "Year 2118. Androids are in mass production for decades now, and they do all the work for humans. But androids have to go to school to be able to solve creative tasks. Just like humans before. It turns out that high school struggles are not gone. If someone is not like others, he is bullied. Vasya- 8800 is an economy- class android which is produced by a little- known company. His design is not perfect, his characteristics also could be better. So he is bullied by other androids. One of the popular pranks on Vasya is to force him to compare x^ y with y^ x . Other androids can do it in milliseconds while Vasya' s memory is too small to store such big numbers. Please help Vasya! Write a fast program to compare x^ y with y^ x for Vasya, maybe then other androids will respect him.",
    "input": "On the only line of input there are two integers x and y ( 1 \u2264 x, y \u2264 10^ 9 ) .",
    "output": "If x^ y < y^ x , then print ' < ' ( without quotes) . If x^ y > y^ x , then print ' > ' ( without quotes) . If x^ y = y^ x , then print ' = ' ( without quotes) .",
    "note": "In the first example 5^ 8 = 5 \u00b7 5 \u00b7 5 \u00b7 5 \u00b7 5 \u00b7 5 \u00b7 5 \u00b7 5 = 390625 , and 8^ 5 = 8 \u00b7 8 \u00b7 8 \u00b7 8 \u00b7 8 = 32768 . So you should print ' > ' . In the second example 10^ 3 = 1000 < 3^ 10 = 59049 . In the third example 6^ 6 = 46656 = 6^ 6 .",
    "topics": [
      "math"
    ],
    "id": "987B"
  },
  {
    "title": "Oppa Funcan Style Remastered",
    "url": "https://codeforces.com/problemset/problem/986/F",
    "history": "Surely you have seen insane videos by South Korean rapper PSY, such as \" Gangnam Style\" , \" Gentleman\" and \" Daddy\" . You might also hear that PSY has been recording video \" Oppa Funcan Style\" two years ago ( unfortunately we couldn' t find it on the internet) . We will remind you what this hit looked like ( you can find original description here) : On the ground there are n platforms, which are numbered with integers from 1 to n , on i - th platform there is a dancer with number i . Further, every second all the dancers standing on the platform with number i jump to the platform with the number f( i) . The moving rule f is selected in advance and is not changed throughout the clip. The duration of the clip was k seconds and the rule f was chosen in such a way that after k seconds all dancers were in their initial positions ( i. e. the i - th dancer stood on the platform with the number i ) . That allowed to loop the clip and collect even more likes. PSY knows that enhanced versions of old artworks become more and more popular every day. So he decided to release a remastered- version of his video. In his case \" enhanced version\" means even more insanity, so the number of platforms can be up to 10^ 18 ! But the video director said that if some dancer stays on the same platform all the time, then the viewer will get bored and will turn off the video immediately. Therefore, for all x from 1 to n f( x) = \u0338 x must hold. Big part of classic video' s success was in that looping, so in the remastered version all dancers should return to their initial positions in the end of the clip as well. PSY hasn' t decided on the exact number of platforms and video duration yet, so he asks you to check if there is a good rule f for different options.",
    "input": "In the first line of input there is one integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of options for n and k to check. In the next t lines the options are given: each option is described with two integers n and k ( 1 \u2264 n \u2264 10^ 18 , 1 \u2264 k \u2264 10^ 15 ) \u2014 the number of dancers and the duration in seconds. It is guaranteed that the number of different values of k in one test is not greater than 50 .",
    "output": "Print t lines. If the i - th option of the video is feasible, print \" YES\" ( without quotes) in i - th line, otherwise print \" NO\" ( without quotes) .",
    "note": "",
    "topics": [
      "graphs",
      "math",
      "number theory",
      "shortest paths"
    ],
    "id": "986F"
  },
  {
    "title": "Prince's Problem",
    "url": "https://codeforces.com/problemset/problem/986/E",
    "history": "Let the main characters of this problem be personages from some recent movie. New Avengers seem to make a lot of buzz. I didn' t watch any part of the franchise and don' t know its heroes well, but it won' t stop me from using them in this problem statement. So, Thanos and Dr. Strange are doing their superhero and supervillain stuff, but then suddenly they stumble across a regular competitive programming problem. You are given a tree with n vertices. In each vertex v there is positive integer a_ v . You have to answer q queries. Each query has a from u v x . You have to calculate \u220f_ w \u2208 P gcd( x, a_ w) ( 10^ 9 + 7) , where P is a set of vertices on path from u to v . In other words, you are to calculate the product of gcd( x, a_ w) for all vertices w on the path from u to v . As it might be large, compute it modulo 10^ 9+ 7 . Here gcd( s, t) denotes the greatest common divisor of s and t . Note that the numbers in vertices do not change after queries. I suppose that you are more interested in superhero business of Thanos and Dr. Strange than in them solving the problem. So you are invited to solve this problem instead of them.",
    "input": "In the first line of input there is one integer n ( 1 \u2264 n \u2264 10^ 5 ) \u2014 the size of the tree. In the next n- 1 lines the edges of the tree are described. The i - th edge is described with two integers u_ i and v_ i ( 1 \u2264 u_ i, v_ i\u2264 n ) and it connects the vertices u_ i and v_ i . It is guaranteed that graph with these edges is a tree. In the next line there are n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ v\u2264 10^ 7 ) . In the next line there is one integer q ( 1 \u2264 q \u2264 10^ 5 ) \u2014 the number of queries. And in the next q lines the queries are described. Each query is described with three integers u_ i , v_ i and x_ i ( 1 \u2264 u_ i, v_ i\u2264 n , 1 \u2264 x_ i\u2264 10^ 7 ) .",
    "output": "Print q numbers \u2014 the answers to the queries in the order they are given in the input. Print each answer modulo 10^ 9+ 7 = 1000000007 . Print each number on a separate line.",
    "note": "",
    "topics": [
      "brute force",
      "data structures",
      "math",
      "number theory",
      "trees"
    ],
    "id": "986E"
  },
  {
    "title": "Perfect Encoding",
    "url": "https://codeforces.com/problemset/problem/986/D",
    "history": "You are working as an analyst in a company working on a new system for big data storage. This system will store n different objects. Each object should have a unique ID. To create the system, you choose the parameters of the system \u2014 integers m \u2265 1 and b_ 1, b_ 2, . . . , b_ m . With these parameters an ID of some object in the system is an array of integers [ a_ 1, a_ 2, . . . , a_ m] where 1 \u2264 a_ i\u2264 b_ i holds for every 1 \u2264 i \u2264 m . Developers say that production costs are proportional to \u2211_ i= 1^ m b_ i . You are asked to choose parameters m and b_ i so that the system will be able to assign unique IDs to n different objects and production costs are minimized. Note that you don' t have to use all available IDs.",
    "input": "In the only line of input there is one positive integer n . The length of the decimal representation of n is no greater than 1. 5 \u00b7 10^ 6 . The integer does not contain leading zeros.",
    "output": "Print one number \u2014 minimal value of \u2211_ i= 1^ m b_ i .",
    "note": "",
    "topics": [
      "fft",
      "math"
    ],
    "id": "986D"
  },
  {
    "title": "Petr and Permutations",
    "url": "https://codeforces.com/problemset/problem/986/B",
    "history": "Petr likes to come up with problems about randomly generated data. This time problem is about random permutation. He decided to generate a random permutation this way: he takes identity permutation of numbers from 1 to n and then 3n times takes a random pair of different elements and swaps them. Alex envies Petr and tries to imitate him in all kind of things. Alex has also come up with a problem about random permutation. He generates a random permutation just like Petr but swaps elements 7n+ 1 times instead of 3n times. Because it is more random, OK? ! You somehow get a test from one of these problems and now you want to know from which one.",
    "input": "In the first line of input there is one integer n ( 10^ 3\u2264 n \u2264 10^ 6 ) . In the second line there are n distinct integers between 1 and n \u2014 the permutation of size n from the test. It is guaranteed that all tests except for sample are generated this way: First we choose n \u2014 the size of the permutation. Then we randomly choose a method to generate a permutation \u2014 the one of Petr or the one of Alex. Then we generate a permutation using chosen method.",
    "output": "If the test is generated via Petr' s method print \" Petr\" ( without quotes) . If the test is generated via Alex' s method print \" Um_ nik\" ( without quotes) .",
    "note": "Please note that the sample is not a valid test ( because of limitations for n ) and is given only to illustrate input/ output format. Your program still has to print correct answer to this test to get AC. Due to randomness of input hacks in this problem are forbidden.",
    "topics": [
      "combinatorics",
      "math"
    ],
    "id": "986B"
  },
  {
    "title": "Sand Fortress",
    "url": "https://codeforces.com/problemset/problem/985/D",
    "history": "You are going to the beach with the idea to build the greatest sand castle ever in your head! The beach is not as three- dimensional as you could have imagined, it can be decribed as a line of spots to pile up sand pillars. Spots are numbered 1 through infinity from left to right. Obviously, there is not enough sand on the beach, so you brought n packs of sand with you. Let height hi of the sand pillar on some spot i be the number of sand packs you spent on it. You can' t split a sand pack to multiple pillars, all the sand from it should go to a single one. There is a fence of height equal to the height of pillar with H sand packs to the left of the first spot and you should prevent sand from going over it. Finally you ended up with the following conditions to building the castle: h1 \u2264 H: no sand from the leftmost spot should go over the fence; For any | hi - hi + 1| \u2264 1: large difference in heights of two neighboring pillars can lead sand to fall down from the higher one to the lower, you really don' t want this to happen; : you want to spend all the sand you brought with you. As you have infinite spots to build, it is always possible to come up with some valid castle structure. Though you want the castle to be as compact as possible. Your task is to calculate the minimum number of spots you can occupy so that all the aforementioned conditions hold.",
    "input": "The only line contains two integer numbers n and H ( 1 \u2264 n, H \u2264 1018) \u2014 the number of sand packs you have and the height of the fence, respectively.",
    "output": "Print the minimum number of spots you can occupy so the all the castle building conditions hold.",
    "note": "Here are the heights of some valid castles: n = 5, H = 2, [ 2, 2, 1, 0, . . . ] , [ 2, 1, 1, 1, 0, . . . ] , [ 1, 0, 1, 2, 1, 0, . . . ] n = 6, H = 8, [ 3, 2, 1, 0, . . . ] , [ 2, 2, 1, 1, 0, . . . ] , [ 0, 1, 0, 1, 2, 1, 1, 0. . . ] ( this one has 5 spots occupied) The first list for both cases is the optimal answer, 3 spots are occupied in them. And here are some invalid ones: n = 5, H = 2, [ 3, 2, 0, . . . ] , [ 2, 3, 0, . . . ] , [ 1, 0, 2, 2, . . . ] n = 6, H = 8, [ 2, 2, 2, 0, . . . ] , [ 6, 0, . . . ] , [ 1, 4, 1, 0. . . ] , [ 2, 2, 1, 0, . . . ]",
    "topics": [
      "binary search",
      "constructive algorithms",
      "math"
    ],
    "id": "985D"
  },
  {
    "title": "Finite or not?",
    "url": "https://codeforces.com/problemset/problem/983/A",
    "history": "You are given several queries. Each query consists of three integers p , q and b . You need to answer whether the result of p/ q in notation with base b is a finite fraction. A fraction in notation with base b is finite if it contains finite number of numerals after the decimal point. It is also possible that a fraction has zero numerals after the decimal point.",
    "input": "The first line contains a single integer n ( 1 \u2264 n \u2264 10^ 5 ) \u2014 the number of queries. Next n lines contain queries, one per line. Each line contains three integers p , q , and b ( 0 \u2264 p \u2264 10^ 18 , 1 \u2264 q \u2264 10^ 18 , 2 \u2264 b \u2264 10^ 18 ) . All numbers are given in notation with base 10 .",
    "output": "For each question, in a separate line, print Finite if the fraction is finite and Infinite otherwise.",
    "note": "6/ 12 = 1/ 2 = 0, 5_ 10 4/ 3 = 1, ( 3) _ 10 9/ 36 = 1/ 4 = 0, 01_ 2 4/ 12 = 1/ 3 = 0, 1_ 3",
    "topics": [
      "implementation",
      "math"
    ],
    "id": "983A"
  },
  {
    "title": "K Paths",
    "url": "https://codeforces.com/problemset/problem/981/H",
    "history": "You are given a tree of n vertices. You are to select k ( not necessarily distinct) simple paths in such a way that it is possible to split all edges of the tree into three sets: edges not contained in any path, edges that are a part of exactly one of these paths, and edges that are parts of all selected paths, and the latter set should be non- empty. Compute the number of ways to select k paths modulo 998244353 . The paths are enumerated, in other words, two ways are considered distinct if there are such i ( 1 \u2264 i \u2264 k ) and an edge that the i - th path contains the edge in one way and does not contain it in the other.",
    "input": "The first line contains two integers n and k ( 1 \u2264 n, k \u2264 10^ 5 ) \u2014 the number of vertices in the tree and the desired number of paths. The next n - 1 lines describe edges of the tree. Each line contains two integers a and b ( 1 \u2264 a, b \u2264 n , a b ) \u2014 the endpoints of an edge. It is guaranteed that the given edges form a tree.",
    "output": "Print the number of ways to select k enumerated not necessarily distinct simple paths in such a way that for each edge either it is not contained in any path, or it is contained in exactly one path, or it is contained in all k paths, and the intersection of all paths is non- empty. As the answer can be large, print it modulo 998244353 .",
    "note": "In the first example the following ways are valid: ( ( 1, 2) , ( 1, 2) ) , ( ( 1, 2) , ( 1, 3) ) , ( ( 1, 3) , ( 1, 2) ) , ( ( 1, 3) , ( 1, 3) ) , ( ( 1, 3) , ( 2, 3) ) , ( ( 2, 3) , ( 1, 3) ) , ( ( 2, 3) , ( 2, 3) ) . In the second example k= 1 , so all n \u00b7 ( n - 1) / 2 = 5 \u00b7 4 / 2 = 10 paths are valid. In the third example, the answer is \u2265 998244353 , so it was taken modulo 998244353 , don' t forget it!",
    "topics": [
      "combinatorics",
      "data structures",
      "dp",
      "fft",
      "math"
    ],
    "id": "981H"
  },
  {
    "title": "Perfect Groups",
    "url": "https://codeforces.com/problemset/problem/980/D",
    "history": "SaMer has written the greatest test case of all time for one of his problems. For a given array of integers, the problem asks to find the minimum number of groups the array can be divided into, such that the product of any pair of integers in the same group is a perfect square. Each integer must be in exactly one group. However, integers in a group do not necessarily have to be contiguous in the array. SaMer wishes to create more cases from the test case he already has. His test case has an array A of n integers, and he needs to find the number of contiguous subarrays of A that have an answer to the problem equal to k for each integer k between 1 and n ( inclusive) .",
    "input": "The first line of input contains a single integer n ( 1 \u2264 n \u2264 5000 ) , the size of the array. The second line contains n integers a_ 1 , a_ 2 , . . . , a_ n ( - 10^ 8 \u2264 a_ i \u2264 10^ 8 ) , the values of the array.",
    "output": "Output n space- separated integers, the k - th integer should be the number of contiguous subarrays of A that have an answer to the problem equal to k .",
    "note": "",
    "topics": [
      "dp",
      "math",
      "number theory"
    ],
    "id": "980D"
  },
  {
    "title": "Links and Pearls",
    "url": "https://codeforces.com/problemset/problem/980/A",
    "history": "A necklace can be described as a string of links ( ' - ' ) and pearls ( ' o' ) , with the last link or pearl connected to the first one. You can remove a link or a pearl and insert it between two other existing links or pearls ( or between a link and a pearl) on the necklace. This process can be repeated as many times as you like, but you can' t throw away any parts. Can you make the number of links between every two adjacent pearls equal? Two pearls are considered to be adjacent if there is no other pearl between them. Note that the final necklace should remain as one circular part of the same length as the initial necklace.",
    "input": "The only line of input contains a string s ( 3 \u2264 | s| \u2264 100 ) , representing the necklace, where a dash ' - ' represents a link and the lowercase English letter ' o' represents a pearl.",
    "output": "Print \" YES\" if the links and pearls can be rejoined such that the number of links between adjacent pearls is equal. Otherwise print \" NO\" . You can print each letter in any case ( upper or lower) .",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": "980A"
  },
  {
    "title": "Kuro and GCD and XOR and SUM",
    "url": "https://codeforces.com/problemset/problem/979/D",
    "history": "Kuro is currently playing an educational game about numbers. The game focuses on the greatest common divisor ( GCD) , the XOR value, and the sum of two numbers. Kuro loves the game so much that he solves levels by levels day by day. Sadly, he' s going on a vacation for a day, and he isn' t able to continue his solving streak on his own. As Katie is a reliable person, Kuro kindly asked her to come to his house on this day to play the game for him. Initally, there is an empty array a . The game consists of q tasks of two types. The first type asks Katie to add a number u_ i to a . The second type asks Katie to find a number v existing in a such that k_ i | GCD( x_ i, v) , x_ i + v \u2264 s_ i , and x_ i \u2295 v is maximized, where \u2295 denotes the bitwise XOR operation, GCD( c, d) denotes the greatest common divisor of integers c and d , and y | x means x is divisible by y , or report - 1 if no such numbers are found. Since you are a programmer, Katie needs you to automatically and accurately perform the tasks in the game to satisfy her dear friend Kuro. Let' s help her!",
    "input": "The first line contains one integer q ( 2 \u2264 q \u2264 10^ 5 ) \u2014 the number of tasks the game wants you to perform. q lines follow, each line begins with an integer t_ i \u2014 the type of the task: If t_ i = 1 , an integer u_ i follow ( 1 \u2264 u_ i \u2264 10^ 5 ) \u2014 you have to add u_ i to the array a . If t_ i = 2 , three integers x_ i , k_ i , and s_ i follow ( 1 \u2264 x_ i, k_ i, s_ i \u2264 10^ 5 ) \u2014 you must find a number v existing in the array a such that k_ i | GCD( x_ i, v) , x_ i + v \u2264 s_ i , and x_ i \u2295 v is maximized, where \u2295 denotes the XOR operation, or report - 1 if no such numbers are found. It is guaranteed that the type of the first task is type 1 , and there exists at least one task of type 2 .",
    "output": "For each task of type 2 , output on one line the desired number v , or - 1 if no such numbers are found.",
    "note": "In the first example, there are 5 tasks: The first task requires you to add 1 into a . a is now { 1} . The second task requires you to add 2 into a . a is now { 1, 2} . The third task asks you a question with x = 1 , k = 1 and s = 3 . Taking both 1 and 2 as v satisfies 1 | GCD( 1, v) and 1 + v \u2264 3 . Because 2 \u2295 1 = 3 > 1 \u2295 1 = 0 , 2 is the answer to this task. The fourth task asks you a question with x = 1 , k = 1 and s = 2 . Only v = 1 satisfies 1 | GCD( 1, v) and 1 + v \u2264 2 , so 1 is the answer to this task. The fifth task asks you a question with x = 1 , k = 1 and s = 1 . There are no elements in a that satisfy the conditions, so we report - 1 as the answer to this task.",
    "topics": [
      "binary search",
      "bitmasks",
      "brute force",
      "data structures",
      "dp",
      "dsu",
      "greedy",
      "math",
      "number theory",
      "strings",
      "trees"
    ],
    "id": "979D"
  },
  {
    "title": "Pizza, Pizza, Pizza!!!",
    "url": "https://codeforces.com/problemset/problem/979/A",
    "history": "Katie, Kuro and Shiro are best friends. They have known each other since kindergarten. That' s why they often share everything with each other and work together on some very hard problems. Today is Shiro' s birthday. She really loves pizza so she wants to invite her friends to the pizza restaurant near her house to celebrate her birthday, including her best friends Katie and Kuro. She has ordered a very big round pizza, in order to serve her many friends. Exactly n of Shiro' s friends are here. That' s why she has to divide the pizza into n + 1 slices ( Shiro also needs to eat) . She wants the slices to be exactly the same size and shape. If not, some of her friends will get mad and go home early, and the party will be over. Shiro is now hungry. She wants to cut the pizza with minimum of straight cuts. A cut is a straight segment, it might have ends inside or outside the pizza. But she is too lazy to pick up the calculator. As usual, she will ask Katie and Kuro for help. But they haven' t come yet. Could you help Shiro with this problem?",
    "input": "A single line contains one non- negative integer n ( 0 \u2264 n \u2264 10^ 18 ) \u2014 the number of Shiro' s friends. The circular pizza has to be sliced into n + 1 pieces.",
    "output": "A single integer \u2014 the number of straight cuts Shiro needs.",
    "note": "To cut the round pizza into quarters one has to make two cuts through the center with angle 90^ \u2218 between them. To cut the round pizza into five equal parts one has to make five cuts.",
    "topics": [
      "math"
    ],
    "id": "979A"
  },
  {
    "title": "Bus Video System",
    "url": "https://codeforces.com/problemset/problem/978/E",
    "history": "The busses in Berland are equipped with a video surveillance system. The system records information about changes in the number of passengers in a bus after stops. If x is the number of passengers in a bus just before the current bus stop and y is the number of passengers in the bus just after current bus stop, the system records the number y- x . So the system records show how number of passengers changed. The test run was made for single bus and n bus stops. Thus, the system recorded the sequence of integers a_ 1, a_ 2, . . . , a_ n ( exactly one number for each bus stop) , where a_ i is the record for the bus stop i . The bus stops are numbered from 1 to n in chronological order. Determine the number of possible ways how many people could be in the bus before the first bus stop, if the bus has a capacity equals to w ( that is, at any time in the bus there should be from 0 to w passengers inclusive) .",
    "input": "The first line contains two integers n and w ( 1 \u2264 n \u2264 1 000, 1 \u2264 w \u2264 10^ 9) \u2014 the number of bus stops and the capacity of the bus. The second line contains a sequence a_ 1, a_ 2, . . . , a_ n ( - 10^ 6\u2264 a_ i \u2264 10^ 6) , where a_ i equals to the number, which has been recorded by the video system after the i - th bus stop.",
    "output": "Print the number of possible ways how many people could be in the bus before the first bus stop, if the bus has a capacity equals to w . If the situation is contradictory ( i. e. for any initial number of passengers there will be a contradiction) , print 0.",
    "note": "In the first example initially in the bus could be 0 , 1 or 2 passengers. In the second example initially in the bus could be 1 , 2 , 3 or 4 passengers. In the third example initially in the bus could be 0 or 1 passenger.",
    "topics": [
      "combinatorics",
      "math"
    ],
    "id": "978E"
  },
  {
    "title": "Almost Arithmetic Progression",
    "url": "https://codeforces.com/problemset/problem/978/D",
    "history": "Polycarp likes arithmetic progressions. A sequence [ a_ 1, a_ 2, . . . , a_ n] is called an arithmetic progression if for each i ( 1 \u2264 i < n ) the value a_ i+ 1 - a_ i is the same. For example, the sequences [ 42] , [ 5, 5, 5] , [ 2, 11, 20, 29] and [ 3, 2, 1, 0] are arithmetic progressions, but [ 1, 0, 1] , [ 1, 3, 9] and [ 2, 3, 1] are not. It follows from the definition that any sequence of length one or two is an arithmetic progression. Polycarp found some sequence of positive integers [ b_ 1, b_ 2, . . . , b_ n] . He agrees to change each element by at most one. In the other words, for each element there are exactly three options: an element can be decreased by 1 , an element can be increased by 1 , an element can be left unchanged. Determine a minimum possible number of elements in b which can be changed ( by exactly one) , so that the sequence b becomes an arithmetic progression, or report that it is impossible. It is possible that the resulting sequence contains element equals 0 .",
    "input": "The first line contains a single integer n ( 1 \u2264 n \u2264 100 000) \u2014 the number of elements in b . The second line contains a sequence b_ 1, b_ 2, . . . , b_ n ( 1 \u2264 b_ i \u2264 10^ 9) .",
    "output": "If it is impossible to make an arithmetic progression with described operations, print - 1. In the other case, print non- negative integer \u2014 the minimum number of elements to change to make the given sequence becomes an arithmetic progression. The only allowed operation is to add/ to subtract one from an element ( can' t use operation twice to the same position) .",
    "note": "In the first example Polycarp should increase the first number on 1 , decrease the second number on 1 , increase the third number on 1 , and the fourth number should left unchanged. So, after Polycarp changed three elements by one, his sequence became equals to [ 25, 20, 15, 10] , which is an arithmetic progression. In the second example Polycarp should not change anything, because his sequence is an arithmetic progression. In the third example it is impossible to make an arithmetic progression. In the fourth example Polycarp should change only the first element, he should decrease it on one. After that his sequence will looks like [ 0, 3, 6, 9, 12] , which is an arithmetic progression.",
    "topics": [
      "brute force",
      "implementation",
      "math"
    ],
    "id": "978D"
  },
  {
    "title": "Divide by three, multiply by two",
    "url": "https://codeforces.com/problemset/problem/977/D",
    "history": "Polycarp likes to play with numbers. He takes some integer number x , writes it down on the board, and then performs with it n - 1 operations of the two kinds: divide the number x by 3 ( x must be divisible by 3 ) ; multiply the number x by 2 . After each operation, Polycarp writes down the result on the board and replaces x by the result. So there will be n numbers on the board after all. You are given a sequence of length n \u2014 the numbers that Polycarp wrote down. This sequence is given in arbitrary order, i. e. the order of the sequence can mismatch the order of the numbers written on the board. Your problem is to rearrange ( reorder) elements of this sequence in such a way that it can match possible Polycarp' s game in the order of the numbers written on the board. I. e. each next number will be exactly two times of the previous number or exactly one third of previous number. It is guaranteed that the answer exists.",
    "input": "The first line of the input contatins an integer number n ( 2 \u2264 n \u2264 100 ) \u2014 the number of the elements in the sequence. The second line of the input contains n integer numbers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 3 \u00b7 10^ 18 ) \u2014 rearranged ( reordered) sequence that Polycarp can wrote down on the board.",
    "output": "Print n integer numbers \u2014 rearranged ( reordered) input sequence that can be the sequence that Polycarp could write down on the board. It is guaranteed that the answer exists.",
    "note": "In the first example the given sequence can be rearranged in the following way: [ 9, 3, 6, 12, 4, 8] . It can match possible Polycarp' s game which started with x = 9 .",
    "topics": [
      "dfs and similar",
      "math",
      "sortings"
    ],
    "id": "977D"
  },
  {
    "title": "Lara Croft and the New Game",
    "url": "https://codeforces.com/problemset/problem/976/B",
    "history": "You might have heard about the next game in Lara Croft series coming out this year. You also might have watched its trailer. Though you definitely missed the main idea about its plot, so let me lift the veil of secrecy. Lara is going to explore yet another dangerous dungeon. Game designers decided to use good old 2D environment. The dungeon can be represented as a rectangle matrix of n rows and m columns. Cell ( x, y) is the cell in the x- th row in the y- th column. Lara can move between the neighbouring by side cells in all four directions. Moreover, she has even chosen the path for herself to avoid all the traps. She enters the dungeon in cell ( 1, 1) , that is top left corner of the matrix. Then she goes down all the way to cell ( n, 1) \u2014 the bottom left corner. Then she starts moving in the snake fashion \u2014 all the way to the right, one cell up, then to the left to the cell in 2- nd column, one cell up. She moves until she runs out of non- visited cells. n and m given are such that she always end up in cell ( 1, 2) . Lara has already moved to a neighbouring cell k times. Can you determine her current position?",
    "input": "The only line contains three integers n, m and k ( 2 \u2264 n, m \u2264 109, n is always even, 0 \u2264 k < n\u00b7m) . Note that k doesn' t fit into 32- bit integer type!",
    "output": "Print the cell ( the row and the column where the cell is situated) where Lara ends up after she moves k times.",
    "note": "Here is her path on matrix 4 by 3:",
    "topics": [
      "implementation",
      "math"
    ],
    "id": "976B"
  },
  {
    "title": "Ghosts",
    "url": "https://codeforces.com/problemset/problem/975/D",
    "history": "Ghosts live in harmony and peace, they travel the space without any purpose other than scare whoever stands in their way. There are n ghosts in the universe, they move in the OXY plane, each one of them has its own velocity that does not change in time: V = V_ xi + V_ yj where V_ x is its speed on the x - axis and V_ y is on the y - axis. A ghost i has experience value EX_ i , which represent how many ghosts tried to scare him in his past. Two ghosts scare each other if they were in the same cartesian point at a moment of time. As the ghosts move with constant speed, after some moment of time there will be no further scaring ( what a relief! ) and the experience of ghost kind GX = \u2211_ i= 1^ n EX_ i will never increase. Tameem is a red giant, he took a picture of the cartesian plane at a certain moment of time T , and magically all the ghosts were aligned on a line of the form y = a \u00b7 x + b . You have to compute what will be the experience index of the ghost kind GX in the indefinite future, this is your task for today. Note that when Tameem took the picture, GX may already be greater than 0 , because many ghosts may have scared one another at any moment between [ - \u221e, T] .",
    "input": "The first line contains three integers n , a and b ( 1 \u2264 n \u2264 200000 , 1 \u2264 | a| \u2264 10^ 9 , 0 \u2264 | b| \u2264 10^ 9 ) \u2014 the number of ghosts in the universe and the parameters of the straight line. Each of the next n lines contains three integers x_ i , V_ xi , V_ yi ( - 10^ 9 \u2264 x_ i \u2264 10^ 9 , - 10^ 9 \u2264 V_ x i, V_ y i\u2264 10^ 9 ) , where x_ i is the current x - coordinate of the i - th ghost ( and y_ i = a \u00b7 x_ i + b ) . It is guaranteed that no two ghosts share the same initial position, in other words, it is guaranteed that for all ( i, j) x_ i = \u0338 x_ j for i j .",
    "output": "Output one line: experience index of the ghost kind GX in the indefinite future.",
    "note": "There are four collisions ( 1, 2, T- 0. 5) , ( 1, 3, T- 1) , ( 2, 4, T+ 1) , ( 3, 4, T+ 0. 5) , where ( u, v, t) means a collision happened between ghosts u and v at moment t . At each collision, each ghost gained one experience point, this means that GX = 4 \u00b7 2 = 8 . In the second test, all points will collide when t = T + 1 . The red arrow represents the 1- st ghost velocity, orange represents the 2- nd ghost velocity, and blue represents the 3- rd ghost velocity.",
    "topics": [
      "geometry",
      "math"
    ],
    "id": "975D"
  },
  {
    "title": "Watering System",
    "url": "https://codeforces.com/problemset/problem/967/B",
    "history": "Arkady wants to water his only flower. Unfortunately, he has a very poor watering system that was designed for n flowers and so it looks like a pipe with n holes. Arkady can only use the water that flows from the first hole. Arkady can block some of the holes, and then pour A liters of water into the pipe. After that, the water will flow out from the non- blocked holes proportionally to their sizes s_ 1, s_ 2, . . . , s_ n . In other words, if the sum of sizes of non- blocked holes is S , and the i - th hole is not blocked, s_ i \u00b7 A/ S liters of water will flow out of it. What is the minimum number of holes Arkady should block to make at least B liters of water flow out of the first hole?",
    "input": "The first line contains three integers n , A , B ( 1 \u2264 n \u2264 100 000 , 1 \u2264 B \u2264 A \u2264 10^ 4 ) \u2014 the number of holes, the volume of water Arkady will pour into the system, and the volume he wants to get out of the first hole. The second line contains n integers s_ 1, s_ 2, . . . , s_ n ( 1 \u2264 s_ i \u2264 10^ 4 ) \u2014 the sizes of the holes.",
    "output": "Print a single integer \u2014 the number of holes Arkady should block.",
    "note": "In the first example Arkady should block at least one hole. After that, 10 \u00b7 2/ 6\u2248 3. 333 liters of water will flow out of the first hole, and that suits Arkady. In the second example even without blocking any hole, 80 \u00b7 3/ 10 = 24 liters will flow out of the first hole, that is not less than 20 . In the third example Arkady has to block all holes except the first to make all water flow out of the first hole.",
    "topics": [
      "math",
      "sortings"
    ],
    "id": "967B"
  },
  {
    "title": "Greedy Arkady",
    "url": "https://codeforces.com/problemset/problem/965/C",
    "history": "k people want to split n candies between them. Each candy should be given to exactly one of them or be thrown away. The people are numbered from 1 to k , and Arkady is the first of them. To split the candies, Arkady will choose an integer x and then give the first x candies to himself, the next x candies to the second person, the next x candies to the third person and so on in a cycle. The leftover ( the remainder that is not divisible by x ) will be thrown away. Arkady can' t choose x greater than M as it is considered greedy. Also, he can' t choose such a small x that some person will receive candies more than D times, as it is considered a slow splitting. Please find what is the maximum number of candies Arkady can receive by choosing some valid x .",
    "input": "The only line contains four integers n , k , M and D ( 2 \u2264 n \u2264 10^ 18 , 2 \u2264 k \u2264 n , 1 \u2264 M \u2264 n , 1 \u2264 D \u2264min( n, 1000) , M \u00b7 D \u00b7 k \u2265 n ) \u2014 the number of candies, the number of people, the maximum number of candies given to a person at once, the maximum number of times a person can receive candies.",
    "output": "Print a single integer \u2014 the maximum possible number of candies Arkady can give to himself. Note that it is always possible to choose some valid x .",
    "note": "In the first example Arkady should choose x = 4 . He will give 4 candies to himself, 4 candies to the second person, 4 candies to the third person, then 4 candies to the fourth person and then again 4 candies to himself. No person is given candies more than 2 times, and Arkady receives 8 candies in total. Note that if Arkady chooses x = 5 , he will receive only 5 candies, and if he chooses x = 3 , he will receive only 3 + 3 = 6 candies as well as the second person, the third and the fourth persons will receive 3 candies, and 2 candies will be thrown away. He can' t choose x = 1 nor x = 2 because in these cases he will receive candies more than 2 times. In the second example Arkady has to choose x = 4 , because any smaller value leads to him receiving candies more than 1 time.",
    "topics": [
      "math"
    ],
    "id": "965C"
  },
  {
    "title": "Paper Airplanes",
    "url": "https://codeforces.com/problemset/problem/965/A",
    "history": "To make a paper airplane, one has to use a rectangular piece of paper. From a sheet of standard size you can make s airplanes. A group of k people decided to make n airplanes each. They are going to buy several packs of paper, each of them containing p sheets, and then distribute the sheets between the people. Each person should have enough sheets to make n airplanes. How many packs should they buy?",
    "input": "The only line contains four integers k , n , s , p ( 1 \u2264 k, n, s, p \u2264 10^ 4 ) \u2014 the number of people, the number of airplanes each should make, the number of airplanes that can be made using one sheet and the number of sheets in one pack, respectively.",
    "output": "Print a single integer \u2014 the minimum number of packs they should buy.",
    "note": "In the first sample they have to buy 4 packs of paper: there will be 12 sheets in total, and giving 2 sheets to each person is enough to suit everyone' s needs. In the second sample they have to buy a pack for each person as they can' t share sheets.",
    "topics": [
      "math"
    ],
    "id": "965A"
  },
  {
    "title": "Messages",
    "url": "https://codeforces.com/problemset/problem/964/B",
    "history": "There are n incoming messages for Vasya. The i- th message is going to be received after ti minutes. Each message has a cost, which equals to A initially. After being received, the cost of a message decreases by B each minute ( it can become negative) . Vasya can read any message after receiving it at any moment of time. After reading the message, Vasya' s bank account receives the current cost of this message. Initially, Vasya' s bank account is at 0. Also, each minute Vasya' s bank account receives C\u00b7k, where k is the amount of received but unread messages. Vasya' s messages are very important to him, and because of that he wants to have all messages read after T minutes. Determine the maximum amount of money Vasya' s bank account can hold after T minutes.",
    "input": "The first line contains five integers n, A, B, C and T ( 1 \u2264 n, A, B, C, T \u2264 1000) . The second string contains n integers ti ( 1 \u2264 ti \u2264 T) .",
    "output": "Output one integer \u2014 the answer to the problem.",
    "note": "In the first sample the messages must be read immediately after receiving, Vasya receives A points for each message, n\u00b7A = 20 in total. In the second sample the messages can be read at any integer moment. In the third sample messages must be read at the moment T. This way Vasya has 1, 2, 3, 4 and 0 unread messages at the corresponding minutes, he gets 40 points for them. When reading messages, he receives ( 5 - 4\u00b73) + ( 5 - 3\u00b73) + ( 5 - 2\u00b73) + ( 5 - 1\u00b73) + 5 = - 5 points. This is 35 in total.",
    "topics": [
      "math"
    ],
    "id": "964B"
  },
  {
    "title": "Splits",
    "url": "https://codeforces.com/problemset/problem/964/A",
    "history": "Let' s define a split of n as a nonincreasing sequence of positive integers, the sum of which is n . For example, the following sequences are splits of 8 : [ 4, 4] , [ 3, 3, 2] , [ 2, 2, 1, 1, 1, 1] , [ 5, 2, 1] . The following sequences aren' t splits of 8 : [ 1, 7] , [ 5, 4] , [ 11, - 3] , [ 1, 1, 4, 1, 1] . The weight of a split is the number of elements in the split that are equal to the first element. For example, the weight of the split [ 1, 1, 1, 1, 1] is 5 , the weight of the split [ 5, 5, 3, 3, 3] is 2 and the weight of the split [ 9] equals 1 . For a given n , find out the number of different weights of its splits.",
    "input": "The first line contains one integer n ( 1 \u2264 n \u2264 10^ 9 ) .",
    "output": "Output one integer \u2014 the answer to the problem.",
    "note": "In the first sample, there are following possible weights of splits of 7 : Weight 1: [ 7 ] Weight 2: [ 3 , 3 , 1] Weight 3: [ 2 , 2 , 2 , 1] Weight 7: [ 1 , 1 , 1 , 1 , 1 , 1 , 1 ]",
    "topics": [
      "math"
    ],
    "id": "964A"
  },
  {
    "title": "Circles of Waiting",
    "url": "https://codeforces.com/problemset/problem/963/E",
    "history": "A chip was placed on a field with coordinate system onto point ( 0, 0) . Every second the chip moves randomly. If the chip is currently at a point ( x, y) , after a second it moves to the point ( x - 1, y) with probability p1, to the point ( x, y - 1) with probability p2, to the point ( x + 1, y) with probability p3 and to the point ( x, y + 1) with probability p4. It' s guaranteed that p1 + p2 + p3 + p4 = 1. The moves are independent. Find out the expected time after which chip will move away from origin at a distance greater than R ( i. e. will be satisfied) .",
    "input": "First line contains five integers R, a1, a2, a3 and a4 ( 0 \u2264 R \u2264 50, 1 \u2264 a1, a2, a3, a4 \u2264 1000) . Probabilities pi can be calculated using formula .",
    "output": "It can be shown that answer for this problem is always a rational number of form , where . Print P\u00b7Q - 1 modulo 109 + 7.",
    "note": "In the first example initially the chip is located at a distance 0 from origin. In one second chip will move to distance 1 is some direction, so distance to origin will become 1. Answers to the second and the third tests: and .",
    "topics": [
      "math"
    ],
    "id": "963E"
  },
  {
    "title": "Cutting Rectangle",
    "url": "https://codeforces.com/problemset/problem/963/C",
    "history": "A rectangle with sides A and B is cut into rectangles with cuts parallel to its sides. For example, if p horizontal and q vertical cuts were made, ( p + 1) \u00b7 ( q + 1) rectangles were left after the cutting. After the cutting, rectangles were of n different types. Two rectangles are different if at least one side of one rectangle isn' t equal to the corresponding side of the other. Note that the rectangle can' t be rotated, this means that rectangles a \u00d7 b and b \u00d7 a are considered different if a = \u0338 b . For each type of rectangles, lengths of the sides of rectangles are given along with the amount of the rectangles of this type that were left after cutting the initial rectangle. Calculate the amount of pairs ( A; B) such as the given rectangles could be created by cutting the rectangle with sides of lengths A and B . Note that pairs ( A; B) and ( B; A) are considered different when A = \u0338 B .",
    "input": "The first line consists of a single integer n ( 1 \u2264 n \u2264 2 \u00b7 10^ 5 ) \u2014 amount of different types of rectangles left after cutting the initial rectangle. The next n lines each consist of three integers w_ i, h_ i, c_ i ( 1 \u2264 w_ i, h_ i, c_ i\u2264 10^ 12) \u2014 the lengths of the sides of the rectangles of this type and the amount of the rectangles of this type. It is guaranteed that the rectangles of the different types are different.",
    "output": "Output one integer \u2014 the answer to the problem.",
    "note": "In the first sample there are three suitable pairs: ( 1; 9) , ( 3; 3) and ( 9; 1) . In the second sample case there are 6 suitable pairs: ( 2; 220) , ( 4; 110) , ( 8; 55) , ( 10; 44) , ( 20; 22) and ( 40; 11) . Here the sample of cut for ( 20; 22) . The third sample has no suitable pairs.",
    "topics": [
      "brute force",
      "math",
      "number theory"
    ],
    "id": "963C"
  },
  {
    "title": "Alternating Sum",
    "url": "https://codeforces.com/problemset/problem/963/A",
    "history": "You are given two integers a and b . Moreover, you are given a sequence s_ 0, s_ 1, . . . , s_ n . All values in s are integers 1 or - 1 . It' s known that sequence is k - periodic and k divides n+ 1 . In other words, for each k \u2264 i \u2264 n it' s satisfied that s_ i = s_ i - k . Find out the non- negative remainder of division of \u2211_ i= 0^ n s_ i a^ n - i b^ i by 10^ 9 + 9 . Note that the modulo is unusual!",
    "input": "The first line contains four integers n, a, b and k ( 1 \u2264 n \u2264 10^ 9, 1 \u2264 a, b \u2264 10^ 9, 1 \u2264 k \u2264 10^ 5) . The second line contains a sequence of length k consisting of characters ' + ' and ' - ' . If the i - th character ( 0- indexed) is ' + ' , then s_ i = 1 , otherwise s_ i = - 1 . Note that only the first k members of the sequence are given, the rest can be obtained using the periodicity property.",
    "output": "Output a single integer \u2014 value of given expression modulo 10^ 9 + 9 .",
    "note": "In the first example: ( \u2211_ i= 0^ n s_ i a^ n - i b^ i) = 2^ 2 3^ 0 - 2^ 1 3^ 1 + 2^ 0 3^ 2 = 7In the second example: ( \u2211_ i= 0^ n s_ i a^ n - i b^ i) = - 1^ 4 5^ 0 - 1^ 3 5^ 1 - 1^ 2 5^ 2 - 1^ 1 5^ 3 - 1^ 0 5^ 4 = - 781 \u2261 999999228 10^ 9 + 9 .",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "963A"
  },
  {
    "title": "Make a Square",
    "url": "https://codeforces.com/problemset/problem/962/C",
    "history": "You are given a positive integer n , written without leading zeroes ( for example, the number 04 is incorrect) . In one operation you can delete any digit of the given integer so that the result remains a positive integer without leading zeros. Determine the minimum number of operations that you need to consistently apply to the given integer n to make from it the square of some positive integer or report that it is impossible. An integer x is the square of some positive integer if and only if x= y^ 2 for some positive integer y .",
    "input": "The first line contains a single integer n ( 1 \u2264 n \u2264 2 \u00b7 10^ 9 ) . The number is given without leading zeroes.",
    "output": "If it is impossible to make the square of some positive integer from n , print - 1. In the other case, print the minimal number of operations required to do it.",
    "note": "In the first example we should delete from 8314 the digits 3 and 4 . After that 8314 become equals to 81 , which is the square of the integer 9 . In the second example the given 625 is the square of the integer 25 , so you should not delete anything. In the third example it is impossible to make the square from 333 , so the answer is - 1.",
    "topics": [
      "brute force",
      "implementation",
      "math"
    ],
    "id": "962C"
  },
  {
    "title": "Partitions",
    "url": "https://codeforces.com/problemset/problem/961/G",
    "history": "You are given a set of n elements indexed from 1 to n. The weight of i- th element is wi. The weight of some subset of a given set is denoted as . The weight of some partition R of a given set into k subsets is ( recall that a partition of a given set is a set of its subsets such that every element of the given set belongs to exactly one subset in partition) . Calculate the sum of weights of all partitions of a given set into exactly k non- empty subsets, and print it modulo 109 + 7. Two partitions are considered different iff there exist two elements x and y such that they belong to the same set in one of the partitions, and to different sets in another partition.",
    "input": "The first line contains two integers n and k ( 1 \u2264 k \u2264 n \u2264 2\u00b7105) \u2014 the number of elements and the number of subsets in each partition, respectively. The second line contains n integers wi ( 1 \u2264 wi \u2264 109) \u2014 weights of elements of the set.",
    "output": "Print one integer \u2014 the sum of weights of all partitions of a given set into k non- empty subsets, taken modulo 109 + 7.",
    "note": "Possible partitions in the first sample: 1, 2, 3, 4, W( R) = 3\u00b7( w1 + w2 + w3) + 1\u00b7w4 = 24; 1, 2, 4, 3, W( R) = 26; 1, 3, 4, 2, W( R) = 24; 1, 2, 3, 4, W( R) = 2\u00b7( w1 + w2) + 2\u00b7( w3 + w4) = 20; 1, 3, 2, 4, W( R) = 20; 1, 4, 2, 3, W( R) = 20; 1, 2, 3, 4, W( R) = 26; Possible partitions in the second sample: 1, 2, 3, 4, 5, W( R) = 45; 1, 2, 3, 5, 4, W( R) = 48; 1, 2, 4, 5, 3, W( R) = 51; 1, 3, 4, 5, 2, W( R) = 54; 2, 3, 4, 5, 1, W( R) = 57; 1, 2, 3, 4, 5, W( R) = 36; 1, 2, 4, 3, 5, W( R) = 37; 1, 2, 5, 3, 4, W( R) = 38; 1, 3, 4, 2, 5, W( R) = 38; 1, 3, 5, 2, 4, W( R) = 39; 1, 4, 5, 2, 3, W( R) = 40; 2, 3, 4, 1, 5, W( R) = 39; 2, 3, 5, 1, 4, W( R) = 40; 2, 4, 5, 1, 3, W( R) = 41; 3, 4, 5, 1, 2, W( R) = 42.",
    "topics": [
      "combinatorics",
      "math",
      "number theory"
    ],
    "id": "961G"
  },
  {
    "title": "Bandit Blues",
    "url": "https://codeforces.com/problemset/problem/960/G",
    "history": "Japate, while traveling through the forest of Mala, saw N bags of gold lying in a row. Each bag has some distinct weight of gold between 1 to N. Japate can carry only one bag of gold with him, so he uses the following strategy to choose a bag. Initially, he starts with an empty bag ( zero weight) . He considers the bags in some order. If the current bag has a higher weight than the bag in his hand, he picks the current bag. Japate put the bags in some order. Japate realizes that he will pick A bags, if he starts picking bags from the front, and will pick B bags, if he starts picking bags from the back. By picking we mean replacing the bag in his hand with the current one. Now he wonders how many permutations of bags are possible, in which he picks A bags from the front and B bags from back using the above strategy. Since the answer can be very large, output it modulo 998244353.",
    "input": "The only line of input contains three space separated integers N ( 1 \u2264 N \u2264 105) , A and B ( 0 \u2264 A, B \u2264 N) .",
    "output": "Output a single integer \u2014 the number of valid permutations modulo 998244353.",
    "note": "In sample case 1, the only possible permutation is [ 1] In sample cases 2 and 3, only two permutations of size 2 are possible: [ 1, 2] , [ 2, 1] . The values of a and b for first permutation is 2 and 1, and for the second permutation these values are 1 and 2. In sample case 4, out of 120 permutations of [ 1, 2, 3, 4, 5] possible, only 22 satisfy the given constraints of a and b.",
    "topics": [
      "combinatorics",
      "dp",
      "fft",
      "math"
    ],
    "id": "960G"
  },
  {
    "title": "Mahmoud and Ehab and yet another xor task",
    "url": "https://codeforces.com/problemset/problem/959/F",
    "history": "Ehab has an array a of n integers. He likes the bitwise- xor operation and he likes to bother Mahmoud so he came up with a problem. He gave Mahmoud q queries. In each of them, he gave Mahmoud 2 integers l and x, and asked him to find the number of subsequences of the first l elements of the array such that their bitwise- xor sum is x. Can you help Mahmoud answer the queries? A subsequence can contain elements that are not neighboring.",
    "input": "The first line contains integers n and q ( 1 \u2264 n, q \u2264 105) , the number of elements in the array and the number of queries. The next line contains n integers a1, a2, . . . , an ( 0 \u2264 ai < 220) , the elements of the array. The next q lines, each contains integers l and x ( 1 \u2264 l \u2264 n, 0 \u2264 x < 220) , representing the queries.",
    "output": "For each query, output its answer modulo 109 + 7 in a newline.",
    "note": "The bitwise- xor sum of the empty set is 0 and the bitwise- xor sum of a set containing one element is that element itself.",
    "topics": [
      "bitmasks",
      "dp",
      "math",
      "matrices"
    ],
    "id": "959F"
  },
  {
    "title": "Mahmoud and Ehab and the xor-MST",
    "url": "https://codeforces.com/problemset/problem/959/E",
    "history": "Ehab is interested in the bitwise- xor operation and the special graphs. Mahmoud gave him a problem that combines both. He has a complete graph consisting of n vertices numbered from 0 to n - 1. For all 0 \u2264 u < v < n, vertex u and vertex v are connected with an undirected edge that has weight ( where is the bitwise- xor operation) . Can you find the weight of the minimum spanning tree of that graph? You can read about complete graphs in https: / / en. wikipedia. org/ wiki/ Complete_ graphYou can read about the minimum spanning tree in https: / / en. wikipedia. org/ wiki/ Minimum_ spanning_ treeThe weight of the minimum spanning tree is the sum of the weights on the edges included in it.",
    "input": "The only line contains an integer n ( 2 \u2264 n \u2264 1012) , the number of vertices in the graph.",
    "output": "The only line contains an integer x, the weight of the graph' s minimum spanning tree.",
    "note": "In the first sample: The weight of the minimum spanning tree is 1+ 2+ 1= 4.",
    "topics": [
      "bitmasks",
      "dp",
      "graphs",
      "implementation",
      "math"
    ],
    "id": "959E"
  },
  {
    "title": "Mahmoud and Ehab and another array construction task",
    "url": "https://codeforces.com/problemset/problem/959/D",
    "history": "Mahmoud has an array a consisting of n integers. He asked Ehab to find another array b of the same length such that: b is lexicographically greater than or equal to a. bi \u2265 2. b is pairwise coprime: for every 1 \u2264 i < j \u2264 n, bi and bj are coprime, i. e. GCD( bi, bj) = 1, where GCD( w, z) is the greatest common divisor of w and z. Ehab wants to choose a special array so he wants the lexicographically minimal array between all the variants. Can you find it? An array x is lexicographically greater than an array y if there exists an index i such than xi > yi and xj = yj for all 1 \u2264 j < i. An array x is equal to an array y if xi = yi for all 1 \u2264 i \u2264 n.",
    "input": "The first line contains an integer n ( 1 \u2264 n \u2264 105) , the number of elements in a and b. The second line contains n integers a1, a2, . . . , an ( 2 \u2264 ai \u2264 105) , the elements of a.",
    "output": "Output n space- separated integers, the i- th of them representing bi.",
    "note": "Note that in the second sample, the array is already pairwise coprime so we printed it.",
    "topics": [
      "constructive algorithms",
      "greedy",
      "math",
      "number theory"
    ],
    "id": "959D"
  },
  {
    "title": "Mahmoud and Ehab and the even-odd game",
    "url": "https://codeforces.com/problemset/problem/959/A",
    "history": "Mahmoud and Ehab play a game called the even- odd game. Ehab chooses his favorite integer n and then they take turns, starting from Mahmoud. In each player' s turn, he has to choose an integer a and subtract it from n such that: 1 \u2264 a \u2264 n. If it' s Mahmoud' s turn, a has to be even, but if it' s Ehab' s turn, a has to be odd. If the current player can' t choose any number satisfying the conditions, he loses. Can you determine the winner if they both play optimally?",
    "input": "The only line contains an integer n ( 1 \u2264 n \u2264 109) , the number at the beginning of the game.",
    "output": "Output \" Mahmoud\" ( without quotes) if Mahmoud wins and \" Ehab\" ( without quotes) otherwise.",
    "note": "In the first sample, Mahmoud can' t choose any integer a initially because there is no positive even integer less than or equal to 1 so Ehab wins. In the second sample, Mahmoud has to choose a = 2 and subtract it from n. It' s Ehab' s turn and n = 0. There is no positive odd integer less than or equal to 0 so Mahmoud wins.",
    "topics": [
      "games",
      "math"
    ],
    "id": "959A"
  },
  {
    "title": "Guard Duty (easy)",
    "url": "https://codeforces.com/problemset/problem/958/E1",
    "history": "The Rebel fleet is afraid that the Empire might want to strike back again. Princess Heidi needs to know if it is possible to assign R Rebel spaceships to guard B bases so that every base has exactly one guardian and each spaceship has exactly one assigned base ( in other words, the assignment is a perfect matching) . Since she knows how reckless her pilots are, she wants to be sure that any two ( straight) paths \u2013 from a base to its assigned spaceship \u2013 do not intersect in the galaxy plane ( that is, in 2D) , and so there is no risk of collision.",
    "input": "The first line contains two space- separated integers R, B( 1 \u2264 R, B \u2264 10) . For 1 \u2264 i \u2264 R, the i + 1- th line contains two space- separated integers xi and yi ( | xi| , | yi| \u2264 10000) denoting the coordinates of the i- th Rebel spaceship. The following B lines have the same format, denoting the position of bases. It is guaranteed that no two points coincide and that no three points are on the same line.",
    "output": "If it is possible to connect Rebel spaceships and bases so as satisfy the constraint, output Yes, otherwise output No ( without quote) .",
    "note": "For the first example, one possible way is to connect the Rebels and bases in order. For the second example, there is no perfect matching between Rebels and bases.",
    "topics": [
      "brute force",
      "geometry",
      "greedy",
      "math"
    ],
    "id": "958E1"
  },
  {
    "title": "Hyperspace Jump (easy)",
    "url": "https://codeforces.com/problemset/problem/958/D1",
    "history": "The Rebel fleet is on the run. It consists of m ships currently gathered around a single planet. Just a few seconds ago, the vastly more powerful Empire fleet has appeared in the same solar system, and the Rebels will need to escape into hyperspace. In order to spread the fleet, the captain of each ship has independently come up with the coordinate to which that ship will jump. In the obsolete navigation system used by the Rebels, this coordinate is given as the value of an arithmetic expression of the form . To plan the future of the resistance movement, Princess Heidi needs to know, for each ship, how many ships are going to end up at the same coordinate after the jump. You are her only hope!",
    "input": "The first line of the input contains a single integer m ( 1 \u2264 m \u2264 200 000) \u2013 the number of ships. The next m lines describe one jump coordinate each, given as an arithmetic expression. An expression has the form ( a+ b) / c. Namely, it consists of: an opening parenthesis ( , a positive integer a of up to two decimal digits, a plus sign + , a positive integer b of up to two decimal digits, a closing parenthesis ) , a slash / , and a positive integer c of up to two decimal digits.",
    "output": "Print a single line consisting of m space- separated integers. The i- th integer should be equal to the number of ships whose coordinate is equal to that of the i- th ship ( including the i- th ship itself) .",
    "note": "In the sample testcase, the second and the third ship will both end up at the coordinate 3. Note that this problem has only two versions \u2013 easy and hard.",
    "topics": [
      "expression parsing",
      "math"
    ],
    "id": "958D1"
  },
  {
    "title": "Sad powers",
    "url": "https://codeforces.com/problemset/problem/955/C",
    "history": "You' re given Q queries of the form ( L, R) . For each query you have to find the number of such x that L \u2264 x \u2264 R and there exist integer numbers a > 0, p > 1 such that x = ap.",
    "input": "The first line contains the number of queries Q ( 1 \u2264 Q \u2264 105) . The next Q lines contains two integers L, R each ( 1 \u2264 L \u2264 R \u2264 1018) .",
    "output": "Output Q lines \u2014 the answers to the queries.",
    "note": "In query one the suitable numbers are 1 and 4.",
    "topics": [
      "binary search",
      "math",
      "number theory"
    ],
    "id": "955C"
  },
  {
    "title": "Feed the cat",
    "url": "https://codeforces.com/problemset/problem/955/A",
    "history": "After waking up at hh: mm, Andrew realised that he had forgotten to feed his only cat for yet another time ( guess why there' s only one cat) . The cat' s current hunger level is H points, moreover each minute without food increases his hunger by D points. At any time Andrew can visit the store where tasty buns are sold ( you can assume that is doesn' t take time to get to the store and back) . One such bun costs C roubles and decreases hunger by N points. Since the demand for bakery drops heavily in the evening, there is a special 20",
    "input": "The first line contains two integers hh and mm ( 00 \u2264 hh \u2264 23, 00 \u2264 mm \u2264 59) \u2014 the time of Andrew' s awakening. The second line contains four integers H, D, C and N ( 1 \u2264 H \u2264 105, 1 \u2264 D, C, N \u2264 102) .",
    "output": "Output the minimum amount of money to within three decimal digits. You answer is considered correct, if its absolute or relative error does not exceed 10 - 4. Formally, let your answer be a, and the jury' s answer be b. Your answer is considered correct if .",
    "note": "In the first sample Andrew can visit the store at exactly 20: 00. The cat' s hunger will be equal to 315, hence it will be necessary to purchase 315 buns. The discount makes the final answer 25200 roubles. In the second sample it' s optimal to visit the store right after he wakes up. Then he' ll have to buy 91 bins per 15 roubles each and spend a total of 1365 roubles.",
    "topics": [
      "greedy",
      "math"
    ],
    "id": "955A"
  },
  {
    "title": "Yet Another String Matching Problem",
    "url": "https://codeforces.com/problemset/problem/954/I",
    "history": "Suppose you have two strings s and t, and their length is equal. You may perform the following operation any number of times: choose two different characters c1 and c2, and replace every occurence of c1 in both strings with c2. Let' s denote the distance between strings s and t as the minimum number of operations required to make these strings equal. For example, if s is abcd and t is ddcb, the distance between them is 2 \u2014 we may replace every occurence of a with b, so s becomes bbcd, and then we may replace every occurence of b with d, so both strings become ddcd. You are given two strings S and T. For every substring of S consisting of | T| characters you have to determine the distance between this substring and T.",
    "input": "The first line contains the string S, and the second \u2014 the string T ( 1 \u2264 | T| \u2264 | S| \u2264 125000) . Both strings consist of lowercase Latin letters from a to f.",
    "output": "Print | S| - | T| + 1 integers. The i- th of these integers must be equal to the distance between the substring of S beginning at i- th index with length | T| and the string T.",
    "note": "",
    "topics": [
      "fft",
      "math"
    ],
    "id": "954I"
  },
  {
    "title": "Quirky Quantifiers",
    "url": "https://codeforces.com/problemset/problem/952/A",
    "history": "",
    "input": "The input contains a single integer a ( 10 \u2264 a \u2264 999) .",
    "output": "Output 0 or 1.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": "952A"
  },
  {
    "title": "Left-handers, Right-handers and Ambidexters",
    "url": "https://codeforces.com/problemset/problem/950/A",
    "history": "You are at a water bowling training. There are l people who play with their left hand, r people, who play with their right hand, and a ambidexters, who can play with left or right hand. The coach decided to form a team of even number of players, exactly half of the players should play with their right hand, and exactly half of the players should play with their left hand. One player should use only on of his hands. Ambidexters play as well with their right hand as with their left hand. In the team, an ambidexter can play with their left hand, or with their right hand. Please find the maximum possible size of the team, where equal number of players use their left and right hands, respectively.",
    "input": "The only line contains three integers l, r and a ( 0 \u2264 l, r, a \u2264 100) \u2014 the number of left- handers, the number of right- handers and the number of ambidexters at the training.",
    "output": "Print a single even integer \u2014 the maximum number of players in the team. It is possible that the team can only have zero number of players.",
    "note": "In the first example you can form a team of 6 players. You should take the only left- hander and two ambidexters to play with left hand, and three right- handers to play with right hand. The only person left can' t be taken into the team. In the second example you can form a team of 14 people. You have to take all five left- handers, all five right- handers, two ambidexters to play with left hand and two ambidexters to play with right hand.",
    "topics": [
      "implementation",
      "math"
    ],
    "id": "950A"
  },
  {
    "title": "A Leapfrog in the Array",
    "url": "https://codeforces.com/problemset/problem/949/B",
    "history": "Dima is a beginner programmer. During his working process, he regularly has to repeat the following operation again and again: to remove every second element from the array. One day he has been bored with easy solutions of this problem, and he has come up with the following extravagant algorithm. Let' s consider that initially array contains n numbers from 1 to n and the number i is located in the cell with the index 2i - 1 ( Indices are numbered starting from one) and other cells of the array are empty. Each step Dima selects a non- empty array cell with the maximum index and moves the number written in it to the nearest empty cell to the left of the selected one. The process continues until all n numbers will appear in the first n cells of the array. For example if n = 4, the array is changing as follows: You have to write a program that allows you to determine what number will be in the cell with index x ( 1 \u2264 x \u2264 n) after Dima' s algorithm finishes.",
    "input": "The first line contains two integers n and q ( 1 \u2264 n \u2264 1018, 1 \u2264 q \u2264 200 000) , the number of elements in the array and the number of queries for which it is needed to find the answer. Next q lines contain integers xi ( 1 \u2264 xi \u2264 n) , the indices of cells for which it is necessary to output their content after Dima' s algorithm finishes.",
    "output": "For each of q queries output one integer number, the value that will appear in the corresponding array cell after Dima' s algorithm finishes.",
    "note": "The first example is shown in the picture. In the second example the final array is [ 1, 12, 2, 8, 3, 11, 4, 9, 5, 13, 6, 10, 7] .",
    "topics": [
      "constructive algorithms",
      "math"
    ],
    "id": "949B"
  },
  {
    "title": "Weird Subtraction Process",
    "url": "https://codeforces.com/problemset/problem/946/B",
    "history": "You have two variables a and b. Consider the following sequence of actions performed with these variables: If a = 0 or b = 0, end the process. Otherwise, go to step 2; If a \u2265 2\u00b7b, then set the value of a to a - 2\u00b7b, and repeat step 1. Otherwise, go to step 3; If b \u2265 2\u00b7a, then set the value of b to b - 2\u00b7a, and repeat step 1. Otherwise, end the process. Initially the values of a and b are positive integers, and so the process will be finite. You have to determine the values of a and b after the process ends.",
    "input": "The only line of the input contains two integers n and m ( 1 \u2264 n, m \u2264 1018) . n is the initial value of variable a, and m is the initial value of variable b.",
    "output": "Print two integers \u2014 the values of a and b after the end of the process.",
    "note": "Explanations to the samples: a = 12, b = 5 a = 2, b = 5 a = 2, b = 1 a = 0, b = 1; a = 31, b = 12 a = 7, b = 12.",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "946B"
  },
  {
    "title": "Cashback",
    "url": "https://codeforces.com/problemset/problem/940/E",
    "history": "Since you are the best Wraith King, Nizhniy Magazin \u00abMir\u00bb at the centre of Vinnytsia is offering you a discount. You are given an array a of length n and an integer c. The value of some array b of length k is the sum of its elements except for the smallest. For example, the value of the array [ 3, 1, 6, 5, 2] with c = 2 is 3 + 6 + 5 = 14. Among all possible partitions of a into contiguous subarrays output the smallest possible sum of the values of these subarrays.",
    "input": "The first line contains integers n and c ( 1 \u2264 n, c \u2264 100 000) . The second line contains n integers ai ( 1 \u2264 ai \u2264 109) \u2014 elements of a.",
    "output": "Output a single integer \u2014 the smallest possible sum of values of these subarrays of some partition of a.",
    "note": "In the first example any partition yields 6 as the sum. In the second example one of the optimal partitions is [ 1, 1] , [ 10, 10, 10, 10, 10, 10, 9, 10, 10, 10] with the values 2 and 90 respectively. In the third example one of the optimal partitions is [ 2, 3] , [ 6, 4, 5, 7] , [ 1] with the values 3, 13 and 1 respectively. In the fourth example one of the optimal partitions is [ 1] , [ 3, 4, 5, 5, 3, 4] , [ 1] with the values 1, 21 and 1 respectively.",
    "topics": [
      "data structures",
      "dp",
      "greedy",
      "math"
    ],
    "id": "940E"
  },
  {
    "title": "Max History",
    "url": "https://codeforces.com/problemset/problem/938/E",
    "history": "You are given an array a of length n. We define fa the following way: Initially fa = 0, M = 1; for every 2 \u2264 i \u2264 n if aM < ai then we set fa = fa + aM and then set M = i. Calculate the sum of fa over all n! permutations of the array a modulo 109 + 7. Note: two elements are considered different if their indices differ, so for every array a there are exactly n! permutations.",
    "input": "The first line contains integer n ( 1 \u2264 n \u2264 1 000 000) \u2014 the size of array a. Second line contains n integers a1, a2, . . . , an ( 1 \u2264 ai \u2264 109) .",
    "output": "Print the only integer, the sum of fa over all n! permutations of the array a modulo 109 + 7.",
    "note": "For the second example all the permutations are: p = [ 1, 2, 3] : fa is equal to 1; p = [ 1, 3, 2] : fa is equal to 1; p = [ 2, 1, 3] : fa is equal to 1; p = [ 2, 3, 1] : fa is equal to 1; p = [ 3, 1, 2] : fa is equal to 0; p = [ 3, 2, 1] : fa is equal to 0. Where p is the array of the indices of initial array a. The sum of fa is equal to 4.",
    "topics": [
      "combinatorics",
      "math"
    ],
    "id": "938E"
  },
  {
    "title": "Vile Grasshoppers",
    "url": "https://codeforces.com/problemset/problem/937/B",
    "history": "The weather is fine today and hence it' s high time to climb the nearby pine and enjoy the landscape. The pine' s trunk includes several branches, located one above another and numbered from 2 to y. Some of them ( more precise, from 2 to p) are occupied by tiny vile grasshoppers which you' re at war with. These grasshoppers are known for their awesome jumping skills: the grasshopper at branch x can jump to branches . Keeping this in mind, you wisely decided to choose such a branch that none of the grasshoppers could interrupt you. At the same time you wanna settle as high as possible since the view from up there is simply breathtaking. In other words, your goal is to find the highest branch that cannot be reached by any of the grasshoppers or report that it' s impossible.",
    "input": "The only line contains two integers p and y ( 2 \u2264 p \u2264 y \u2264 109) .",
    "output": "Output the number of the highest suitable branch. If there are none, print - 1 instead.",
    "note": "In the first sample case grasshopper from branch 2 reaches branches 2, 4 and 6 while branch 3 is initially settled by another grasshopper. Therefore the answer is 5. It immediately follows that there are no valid branches in second sample case.",
    "topics": [
      "brute force",
      "math",
      "number theory"
    ],
    "id": "937B"
  },
  {
    "title": "Save Energy!",
    "url": "https://codeforces.com/problemset/problem/936/A",
    "history": "Julia is going to cook a chicken in the kitchen of her dormitory. To save energy, the stove in the kitchen automatically turns off after k minutes after turning on. During cooking, Julia goes to the kitchen every d minutes and turns on the stove if it is turned off. While the cooker is turned off, it stays warm. The stove switches on and off instantly. It is known that the chicken needs t minutes to be cooked on the stove, if it is turned on, and 2t minutes, if it is turned off. You need to find out, how much time will Julia have to cook the chicken, if it is considered that the chicken is cooked evenly, with constant speed when the stove is turned on and at a constant speed when it is turned off.",
    "input": "The single line contains three integers k, d and t ( 1 \u2264 k, d, t \u2264 1018) .",
    "output": "Print a single number, the total time of cooking in minutes. The relative or absolute error must not exceed 10 - 9. Namely, let' s assume that your answer is x and the answer of the jury is y. The checker program will consider your answer correct if .",
    "note": "In the first example, the chicken will be cooked for 3 minutes on the turned on stove, after this it will be cooked for . Then the chicken will be cooked for one minute on a turned off stove, it will be cooked for . Thus, after four minutes the chicken will be cooked for . Before the fifth minute Julia will turn on the stove and after 2. 5 minutes the chicken will be ready . In the second example, when the stove is turned off, Julia will immediately turn it on, so the stove will always be turned on and the chicken will be cooked in 20 minutes.",
    "topics": [
      "binary search",
      "implementation",
      "math"
    ],
    "id": "936A"
  },
  {
    "title": "Fafa and Ancient Alphabet",
    "url": "https://codeforces.com/problemset/problem/935/D",
    "history": "Ancient Egyptians are known to have used a large set of symbols to write on the walls of the temples. Fafa and Fifa went to one of the temples and found two non- empty words S1 and S2 of equal lengths on the wall of temple written one below the other. Since this temple is very ancient, some symbols from the words were erased. The symbols in the set have equal probability for being in the position of any erased symbol. Fifa challenged Fafa to calculate the probability that S1 is lexicographically greater than S2. Can you help Fafa with this task? You know that , i. e. there were m distinct characters in Egyptians' alphabet, in this problem these characters are denoted by integers from 1 to m in alphabet order. A word x is lexicographically greater than a word y of the same length, if the words are same up to some position, and then the word x has a larger character, than the word y. We can prove that the probability equals to some fraction , where P and Q are coprime integers, and . Print as the answer the value , i. e. such a non- negative integer less than 109 + 7, such that , where means that a and b give the same remainders when divided by m.",
    "input": "The first line contains two integers n and m ( 1 \u2264 n, m \u2264 105) \u2014 the length of each of the two words and the size of the alphabet , respectively. The second line contains n integers a1, a2, . . . , an ( 0 \u2264 ai \u2264 m) \u2014 the symbols of S1. If ai = 0, then the symbol at position i was erased. The third line contains n integers representing S2 with the same format as S1.",
    "output": "Print the value , where P and Q are coprime and is the answer to the problem.",
    "note": "In the first sample, the first word can be converted into ( 1) or ( 2) . The second option is the only one that will make it lexicographically larger than the second word. So, the answer to the problem will be , that is 500000004, because . In the second example, there is no replacement for the zero in the second word that will make the first one lexicographically larger. So, the answer to the problem is , that is 0.",
    "topics": [
      "math",
      "probabilities"
    ],
    "id": "935D"
  },
  {
    "title": "A Creative Cutout",
    "url": "https://codeforces.com/problemset/problem/933/D",
    "history": "Everything red frightens Nian the monster. So do red paper and. . . you, red on Codeforces, potential or real. Big Banban has got a piece of paper with endless lattice points, where lattice points form squares with the same area. His most favorite closed shape is the circle because of its beauty and simplicity. Once he had obtained this piece of paper, he prepares it for paper- cutting. He drew n concentric circles on it and numbered these circles from 1 to n such that the center of each circle is the same lattice point and the radius of the k- th circle is times the length of a lattice edge. Define the degree of beauty of a lattice point as the summation of the indices of circles such that this lattice point is inside them, or on their bounds. Banban wanted to ask you the total degree of beauty of all the lattice points, but changed his mind. Defining the total degree of beauty of all the lattice points on a piece of paper with n circles as f( n) , you are asked to figure out .",
    "input": "The first line contains one integer m ( 1 \u2264 m \u2264 1012) .",
    "output": "In the first line print one integer representing .",
    "note": "A piece of paper with 5 circles is shown in the following. There are 5 types of lattice points where the degree of beauty of each red point is 1 + 2 + 3 + 4 + 5 = 15, the degree of beauty of each orange point is 2 + 3 + 4 + 5 = 14, the degree of beauty of each green point is 4 + 5 = 9, the degree of beauty of each blue point is 5 and the degree of beauty of each gray point is 0. Therefore, f( 5) = 5\u00b715 + 4\u00b714 + 4\u00b79 + 8\u00b75 = 207. Similarly, f( 1) = 5, f( 2) = 23, f( 3) = 50, f( 4) = 102 and consequently .",
    "topics": [
      "brute force",
      "combinatorics",
      "math"
    ],
    "id": "933D"
  },
  {
    "title": "A Determined Cleanup",
    "url": "https://codeforces.com/problemset/problem/933/B",
    "history": "In order to put away old things and welcome a fresh new year, a thorough cleaning of the house is a must. Little Tommy finds an old polynomial and cleaned it up by taking it modulo another. But now he regrets doing this. . . Given two integers p and k, find a polynomial f( x) with non- negative integer coefficients strictly less than k, whose remainder is p when divided by ( x + k) . That is, f( x) = q( x) \u00b7( x + k) + p, where q( x) is a polynomial ( not necessarily with integer coefficients) .",
    "input": "The only line of input contains two space- separated integers p and k ( 1 \u2264 p \u2264 1018, 2 \u2264 k \u2264 2 000) .",
    "output": "If the polynomial does not exist, print a single integer - 1, or output two lines otherwise. In the first line print a non- negative integer d \u2014 the number of coefficients in the polynomial. In the second line print d space- separated integers a0, a1, . . . , ad - 1, describing a polynomial fulfilling the given requirements. Your output should satisfy 0 \u2264 ai < k for all 0 \u2264 i \u2264 d - 1, and ad - 1 = \u0338 0. If there are many possible solutions, print any of them.",
    "note": "In the first example, f( x) = x6 + x5 + x4 + x = ( x5 - x4 + 3x3 - 6x2 + 12x - 23) \u00b7( x + 2) + 46. In the second example, f( x) = x2 + 205x + 92 = ( x - 9) \u00b7( x + 214) + 2018.",
    "topics": [
      "math"
    ],
    "id": "933B"
  },
  {
    "title": "Team Work",
    "url": "https://codeforces.com/problemset/problem/932/E",
    "history": "You have a team of N people. For a particular task, you can pick any non- empty subset of people. The cost of having x people for the task is xk. Output the sum of costs over all non- empty subsets of people.",
    "input": "Only line of input contains two integers N ( 1 \u2264 N \u2264 109) representing total number of people and k ( 1 \u2264 k \u2264 5000) .",
    "output": "Output the sum of costs for all non empty subsets modulo 109 + 7.",
    "note": "In the first example, there is only one non- empty subset 1 with cost 11 = 1. In the second example, there are seven non- empty subsets. - 1 with cost 12 = 1- 2 with cost 12 = 1- 1, 2 with cost 22 = 4- 3 with cost 12 = 1- 1, 3 with cost 22 = 4- 2, 3 with cost 22 = 4- 1, 2, 3 with cost 32 = 9The total cost is 1 + 1 + 4 + 1 + 4 + 4 + 9 = 24.",
    "topics": [
      "combinatorics",
      "dp",
      "math"
    ],
    "id": "932E"
  },
  {
    "title": "Laboratory Work",
    "url": "https://codeforces.com/problemset/problem/931/C",
    "history": "Anya and Kirill are doing a physics laboratory work. In one of the tasks they have to measure some value n times, and then compute the average value to lower the error. Kirill has already made his measurements, and has got the following integer values: x1, x2, . . . , xn. It is important that the values are close to each other, namely, the difference between the maximum value and the minimum value is at most 2. Anya does not want to make the measurements, however, she can' t just copy the values from Kirill' s work, because the error of each measurement is a random value, and this coincidence will be noted by the teacher. Anya wants to write such integer values y1, y2, . . . , yn in her work, that the following conditions are met: the average value of x1, x2, . . . , xn is equal to the average value of y1, y2, . . . , yn; all Anya' s measurements are in the same bounds as all Kirill' s measurements, that is, the maximum value among Anya' s values is not greater than the maximum value among Kirill' s values, and the minimum value among Anya' s values is not less than the minimum value among Kirill' s values; the number of equal measurements in Anya' s work and Kirill' s work is as small as possible among options with the previous conditions met. Formally, the teacher goes through all Anya' s values one by one, if there is equal value in Kirill' s work and it is not strike off yet, he strikes off this Anya' s value and one of equal values in Kirill' s work. The number of equal measurements is then the total number of strike off values in Anya' s work. Help Anya to write such a set of measurements that the conditions above are met.",
    "input": "The first line contains a single integer n ( 1 \u2264 n \u2264 100 000) \u2014 the numeber of measurements made by Kirill. The second line contains a sequence of integers x1, x2, . . . , xn ( - 100 000 \u2264 xi \u2264 100 000) \u2014 the measurements made by Kirill. It is guaranteed that the difference between the maximum and minimum values among values x1, x2, . . . , xn does not exceed 2.",
    "output": "In the first line print the minimum possible number of equal measurements. In the second line print n integers y1, y2, . . . , yn \u2014 the values Anya should write. You can print the integers in arbitrary order. Keep in mind that the minimum value among Anya' s values should be not less that the minimum among Kirill' s values, and the maximum among Anya' s values should be not greater than the maximum among Kirill' s values. If there are multiple answers, print any of them.",
    "note": "In the first example Anya can write zeros as here measurements results. The average value is then equal to the average value of Kirill' s values, and there are only two equal measurements. In the second example Anya should write two values 100 and one value 101 ( in any order) , because it is the only possibility to make the average be the equal to the average of Kirill' s values. Thus, all three measurements are equal. In the third example the number of equal measurements is 5.",
    "topics": [
      "implementation",
      "math"
    ],
    "id": "931C"
  },
  {
    "title": "Friends Meeting",
    "url": "https://codeforces.com/problemset/problem/931/A",
    "history": "Two friends are on the coordinate axis Ox in points with integer coordinates. One of them is in the point x1 = a, another one is in the point x2 = b. Each of the friends can move by one along the line in any direction unlimited number of times. When a friend moves, the tiredness of a friend changes according to the following rules: the first move increases the tiredness by 1, the second move increases the tiredness by 2, the third \u2014 by 3 and so on. For example, if a friend moves first to the left, then to the right ( returning to the same point) , and then again to the left his tiredness becomes equal to 1 + 2 + 3 = 6. The friends want to meet in a integer point. Determine the minimum total tiredness they should gain, if they meet in the same point.",
    "input": "The first line contains a single integer a ( 1 \u2264 a \u2264 1000) \u2014 the initial position of the first friend. The second line contains a single integer b ( 1 \u2264 b \u2264 1000) \u2014 the initial position of the second friend. It is guaranteed that a = \u0338 b.",
    "output": "Print the minimum possible total tiredness if the friends meet in the same point.",
    "note": "In the first example the first friend should move by one to the right ( then the meeting happens at point 4) , or the second friend should move by one to the left ( then the meeting happens at point 3) . In both cases, the total tiredness becomes 1. In the second example the first friend should move by one to the left, and the second friend should move by one to the right. Then they meet in the point 100, and the total tiredness becomes 1 + 1 = 2. In the third example one of the optimal ways is the following. The first friend should move three times to the right, and the second friend \u2014 two times to the left. Thus the friends meet in the point 8, and the total tiredness becomes 1 + 2 + 3 + 1 + 2 = 9.",
    "topics": [
      "brute force",
      "greedy",
      "implementation",
      "math"
    ],
    "id": "931A"
  },
  {
    "title": "Coins Exhibition",
    "url": "https://codeforces.com/problemset/problem/930/E",
    "history": "Arkady and Kirill visited an exhibition of rare coins. The coins were located in a row and enumerated from left to right from 1 to k, each coin either was laid with its obverse ( front) side up, or with its reverse ( back) side up. Arkady and Kirill made some photos of the coins, each photo contained a segment of neighboring coins. Akrady is interested in obverses, so on each photo made by him there is at least one coin with obverse side up. On the contrary, Kirill is interested in reverses, so on each photo made by him there is at least one coin with its reverse side up. The photos are lost now, but Arkady and Kirill still remember the bounds of the segments of coins each photo contained. Given this information, compute the remainder of division by 109 + 7 of the number of ways to choose the upper side of each coin in such a way, that on each Arkady' s photo there is at least one coin with obverse side up, and on each Kirill' s photo there is at least one coin with reverse side up.",
    "input": "The first line contains three integers k, n and m ( 1 \u2264 k \u2264 109, 0 \u2264 n, m \u2264 105) \u2014 the total number of coins, the number of photos made by Arkady, and the number of photos made by Kirill, respectively. The next n lines contain the descriptions of Arkady' s photos, one per line. Each of these lines contains two integers l and r ( 1 \u2264 l \u2264 r \u2264 k) , meaning that among coins from the l- th to the r- th there should be at least one with obverse side up. The next m lines contain the descriptions of Kirill' s photos, one per line. Each of these lines contains two integers l and r ( 1 \u2264 l \u2264 r \u2264 k) , meaning that among coins from the l- th to the r- th there should be at least one with reverse side up.",
    "output": "Print the only line \u2014 the number of ways to choose the side for each coin modulo 109 + 7 = 1000000007.",
    "note": "In the first example the following ways are possible ( ' O' \u2014 obverse, ' R' \u2014 reverse side) : OROOR, ORORO, ORORR, RROOR, RRORO, RRORR, ORROR, ORRRO. In the second example the information is contradictory: the second coin should have obverse and reverse sides up at the same time, that is impossible. So, the answer is 0.",
    "topics": [
      "data structures",
      "dp",
      "math"
    ],
    "id": "930E"
  },
  {
    "title": "\u041a\u0440\u0430\u0441\u0438\u0432\u0430\u044f \u043a\u043e\u043c\u0430\u043d\u0434\u0430",
    "url": "https://codeforces.com/problemset/problem/929/C",
    "history": "\u0417\u0430\u0432\u0442\u0440\u0430 \u0443 \u0445\u043e\u043a\u043a\u0435\u0438\u0306\u043d\u043e\u0438\u0306 \u043a\u043e\u043c\u0430\u043d\u0434\u044b, \u043a\u043e\u0442\u043e\u0440\u043e\u0438\u0306 \u0440\u0443\u043a\u043e\u0432\u043e\u0434\u0438\u0442 \u0415\u0432\u0433\u0435\u043d\u0438\u0438\u0306, \u0432\u0430\u0436\u043d\u044b\u0438\u0306 \u043c\u0430\u0442\u0447. \u0415\u0432\u0433\u0435\u043d\u0438\u044e \u043d\u0443\u0436\u043d\u043e \u0432\u044b\u0431\u0440\u0430\u0442\u044c \u0448\u0435\u0441\u0442\u044c \u0438\u0433\u0440\u043e\u043a\u043e\u0432, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0432\u044b\u0438\u0306\u0434\u0443\u0442 \u043d\u0430 \u043b\u0435\u0434 \u0432 \u0441\u0442\u0430\u0440\u0442\u043e\u0432\u043e\u043c \u0441\u043e\u0441\u0442\u0430\u0432\u0435: \u043e\u0434\u0438\u043d \u0432\u0440\u0430\u0442\u0430\u0440\u044c, \u0434\u0432\u0430 \u0437\u0430\u0449\u0438\u0442\u043d\u0438\u043a\u0430 \u0438 \u0442\u0440\u0438 \u043d\u0430\u043f\u0430\u0434\u0430\u044e\u0449\u0438\u0445. \u0422\u0430\u043a \u043a\u0430\u043a \u044d\u0442\u043e \u0441\u0442\u0430\u0440\u0442\u043e\u0432\u044b\u0438\u0306 \u0441\u043e\u0441\u0442\u0430\u0432, \u0415\u0432\u0433\u0435\u043d\u0438\u044f \u0431\u043e\u043b\u044c\u0448\u0435 \u0432\u043e\u043b\u043d\u0443\u0435\u0442, \u043d\u0430\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u043a\u0440\u0430\u0441\u0438\u0432\u0430 \u0431\u0443\u0434\u0435\u0442 \u043a\u043e\u043c\u0430\u043d\u0434\u0430 \u043d\u0430 \u043b\u044c\u0434\u0443, \u0447\u0435\u043c \u0441\u043f\u043e\u0441\u043e\u0431\u043d\u043e\u0441\u0442\u0438 \u0438\u0433\u0440\u043e\u043a\u043e\u0432. \u0410 \u0438\u043c\u0435\u043d\u043d\u043e, \u0415\u0432\u0433\u0435\u043d\u0438\u0438\u0306 \u0445\u043e\u0447\u0435\u0442 \u0432\u044b\u0431\u0440\u0430\u0442\u044c \u0442\u0430\u043a\u043e\u0438\u0306 \u0441\u0442\u0430\u0440\u0442\u043e\u0432\u044b\u0438\u0306 \u0441\u043e\u0441\u0442\u0430\u0432, \u0447\u0442\u043e\u0431\u044b \u043d\u043e\u043c\u0435\u0440\u0430 \u043b\u044e\u0431\u044b\u0445 \u0434\u0432\u0443\u0445 \u0438\u0433\u0440\u043e\u043a\u043e\u0432 \u0438\u0437 \u0441\u0442\u0430\u0440\u0442\u043e\u0432\u043e\u0433\u043e \u0441\u043e\u0441\u0442\u0430\u0432\u0430 \u043e\u0442\u043b\u0438\u0447\u0430\u043b\u0438\u0441\u044c \u043d\u0435 \u0431\u043e\u043b\u0435\u0435, \u0447\u0435\u043c \u0432 \u0434\u0432\u0430 \u0440\u0430\u0437\u0430. \u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0438\u0433\u0440\u043e\u043a\u0438 \u0441 \u043d\u043e\u043c\u0435\u0440\u0430\u043c\u0438 13, 14, 10, 18, 15 \u0438 20 \u0443\u0441\u0442\u0440\u043e\u044f\u0442 \u0415\u0432\u0433\u0435\u043d\u0438\u044f, \u0430 \u0435\u0441\u043b\u0438, \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u043d\u0430 \u043b\u0435\u0434 \u0432\u044b\u0438\u0306\u0434\u0443\u0442 \u0438\u0433\u0440\u043e\u043a\u0438 \u0441 \u043d\u043e\u043c\u0435\u0440\u0430\u043c\u0438 8 \u0438 17, \u0442\u043e \u044d\u0442\u043e \u043d\u0435 \u0443\u0441\u0442\u0440\u043e\u0438\u0442 \u0415\u0432\u0433\u0435\u043d\u0438\u044f. \u041f\u0440\u043e \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0438\u0437 \u0438\u0433\u0440\u043e\u043a\u043e\u0432 \u0432\u0430\u043c \u0438\u0437\u0432\u0435\u0441\u0442\u043d\u043e, \u043d\u0430 \u043a\u0430\u043a\u043e\u0438\u0306 \u043f\u043e\u0437\u0438\u0446\u0438\u0438 \u043e\u043d \u0438\u0433\u0440\u0430\u0435\u0442 ( \u0432\u0440\u0430\u0442\u0430\u0440\u044c, \u0437\u0430\u0449\u0438\u0442\u043d\u0438\u043a \u0438\u043b\u0438 \u043d\u0430\u043f\u0430\u0434\u0430\u044e\u0449\u0438\u0438\u0306) , \u0430 \u0442\u0430\u043a\u0436\u0435 \u0435\u0433\u043e \u043d\u043e\u043c\u0435\u0440. \u0412 \u0445\u043e\u043a\u043a\u0435\u0435 \u043d\u043e\u043c\u0435\u0440\u0430 \u0438\u0433\u0440\u043e\u043a\u043e\u0432 \u043d\u0435 \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0438\u0434\u0443\u0442 \u043f\u043e\u0434\u0440\u044f\u0434. \u041f\u043e\u0441\u0447\u0438\u0442\u0430\u0438\u0306\u0442\u0435 \u0447\u0438\u0441\u043b\u043e \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0445 \u0441\u0442\u0430\u0440\u0442\u043e\u0432\u044b\u0445 \u0441\u043e\u0441\u0442\u0430\u0432\u043e\u0432 \u0438\u0437 \u043e\u0434\u043d\u043e\u0433\u043e \u0432\u0440\u0430\u0442\u0430\u0440\u044f, \u0434\u0432\u0443\u0445 \u0437\u0430\u0449\u0438\u0442\u043d\u0438\u043a\u043e\u0432 \u0438 \u0442\u0440\u0435\u0445 \u043d\u0430\u043f\u0430\u0434\u0430\u044e\u0449\u0438\u0445, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043c\u043e\u0436\u0435\u0442 \u0432\u044b\u0431\u0440\u0430\u0442\u044c \u0415\u0432\u0433\u0435\u043d\u0438\u0438\u0306, \u0447\u0442\u043e\u0431\u044b \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u043b\u043e\u0441\u044c \u0435\u0433\u043e \u0443\u0441\u043b\u043e\u0432\u0438\u0435 \u043a\u0440\u0430\u0441\u043e\u0442\u044b.",
    "input": "\u041f\u0435\u0440\u0432\u0430\u044f \u0441\u0442\u0440\u043e\u043a\u0430 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0442\u0440\u0438 \u0446\u0435\u043b\u044b\u0445 \u0447\u0438\u0441\u043b\u0430 g, d \u0438 f ( 1 \u2264 g \u2264 1 000, 1 \u2264 d \u2264 1 000, 1 \u2264 f \u2264 1 000) \u2014 \u0447\u0438\u0441\u043b\u043e \u0432\u0440\u0430\u0442\u0430\u0440\u0435\u0438\u0306, \u0437\u0430\u0449\u0438\u0442\u043d\u0438\u043a\u043e\u0432 \u0438 \u043d\u0430\u043f\u0430\u0434\u0430\u044e\u0449\u0438\u0445 \u0432 \u043a\u043e\u043c\u0430\u043d\u0434\u0435 \u0415\u0432\u0433\u0435\u043d\u0438\u044f. \u0412\u0442\u043e\u0440\u0430\u044f \u0441\u0442\u0440\u043e\u043a\u0430 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 g \u0446\u0435\u043b\u044b\u0445 \u0447\u0438\u0441\u0435\u043b, \u043a\u0430\u0436\u0434\u043e\u0435 \u0432 \u043f\u0440\u0435\u0434\u0435\u043b\u0430\u0445 \u043e\u0442 1 \u0434\u043e 100 000 \u2014 \u043d\u043e\u043c\u0435\u0440\u0430 \u0432\u0440\u0430\u0442\u0430\u0440\u0435\u0438\u0306. \u0422\u0440\u0435\u0442\u044c\u044f \u0441\u0442\u0440\u043e\u043a\u0430 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 d \u0446\u0435\u043b\u044b\u0445 \u0447\u0438\u0441\u0435\u043b, \u043a\u0430\u0436\u0434\u043e\u0435 \u0432 \u043f\u0440\u0435\u0434\u0435\u043b\u0430\u0445 \u043e\u0442 1 \u0434\u043e 100 000 \u2014 \u043d\u043e\u043c\u0435\u0440\u0430 \u0437\u0430\u0449\u0438\u0442\u043d\u0438\u043a\u043e\u0432. \u0427\u0435\u0442\u0432\u0435\u0440\u0442\u0430\u044f \u0441\u0442\u0440\u043e\u043a\u0430 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 f \u0446\u0435\u043b\u044b\u0445 \u0447\u0438\u0441\u0435\u043b, \u043a\u0430\u0436\u0434\u043e\u0435 \u0432 \u043f\u0440\u0435\u0434\u0435\u043b\u0430\u0445 \u043e\u0442 1 \u0434\u043e 100 000 \u2014 \u043d\u043e\u043c\u0435\u0440\u0430 \u043d\u0430\u043f\u0430\u0434\u0430\u044e\u0449\u0438\u0445. \u0413\u0430\u0440\u0430\u043d\u0442\u0438\u0440\u0443\u0435\u0442\u0441\u044f, \u0447\u0442\u043e \u043e\u0431\u0449\u0435\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0438\u0433\u0440\u043e\u043a\u043e\u0432 \u043d\u0435 \u043f\u0440\u0435\u0432\u043e\u0441\u0445\u043e\u0434\u0438\u0442 1 000, \u0442. \u0435. g + d + f \u2264 1 000. \u0412\u0441\u0435 g + d + f \u043d\u043e\u043c\u0435\u0440\u043e\u0432 \u0438\u0433\u0440\u043e\u043a\u043e\u0432 \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b.",
    "output": "\u0412\u044b\u0432\u0435\u0434\u0438\u0442\u0435 \u043e\u0434\u043d\u043e \u0446\u0435\u043b\u043e\u0435 \u0447\u0438\u0441\u043b\u043e \u2014 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u044b\u0445 \u0441\u0442\u0430\u0440\u0442\u043e\u0432\u044b\u0445 \u0441\u043e\u0441\u0442\u0430\u0432\u043e\u0432.",
    "note": "\u0412 \u043f\u0435\u0440\u0432\u043e\u043c \u043f\u0440\u0438\u043c\u0435\u0440\u0435 \u0432\u0441\u0435\u0433\u043e \u043e\u0434\u0438\u043d \u0432\u0430\u0440\u0438\u0430\u043d\u0442 \u0434\u043b\u044f \u0432\u044b\u0431\u043e\u0440\u0430 \u0441\u043e\u0441\u0442\u0430\u0432\u0430, \u043a\u043e\u0442\u043e\u0440\u044b\u0438\u0306 \u0443\u0434\u043e\u0432\u043b\u0435\u0442\u0432\u043e\u0440\u044f\u0435\u0442 \u043e\u043f\u0438\u0441\u0430\u043d\u043d\u044b\u043c \u0443\u0441\u043b\u043e\u0432\u0438\u044f\u043c, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u043e\u0442\u0432\u0435\u0442 1. \u0412\u043e \u0432\u0442\u043e\u0440\u043e\u043c \u043f\u0440\u0438\u043c\u0435\u0440\u0435 \u043f\u043e\u0434\u0445\u043e\u0434\u044f\u0442 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u0438\u0433\u0440\u043e\u0432\u044b\u0435 \u0441\u043e\u0447\u0435\u0442\u0430\u043d\u0438\u044f ( \u0432 \u043f\u043e\u0440\u044f\u0434\u043a\u0435 \u0432\u0440\u0430\u0442\u0430\u0440\u044c- \u0437\u0430\u0449\u0438\u0442\u043d\u0438\u043a- \u0437\u0430\u0449\u0438\u0442\u043d\u0438\u043a- \u043d\u0430\u043f\u0430\u0434\u0430\u044e\u0449\u0438\u0438\u0306- \u043d\u0430\u043f\u0430\u0434\u0430\u044e\u0449\u0438\u0438\u0306- \u043d\u0430\u043f\u0430\u0434\u0430\u044e\u0449\u0438\u0438\u0306) : 16 20 12 13 21 11 16 20 12 13 11 10 16 20 19 13 21 11 16 20 19 13 11 10 16 12 19 13 21 11 16 12 19 13 11 10 \u0422\u0430\u043a\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c, \u043e\u0442\u0432\u0435\u0442 \u043d\u0430 \u044d\u0442\u043e\u0442 \u043f\u0440\u0438\u043c\u0435\u0440 \u2014 6.",
    "topics": [
      "*special",
      "combinatorics",
      "math"
    ],
    "id": "929C"
  },
  {
    "title": "2-3-numbers",
    "url": "https://codeforces.com/problemset/problem/926/A",
    "history": "A positive integer is called a 2- 3- integer, if it is equal to 2x\u00b73y for some non- negative integers x and y. In other words, these integers are such integers that only have 2 and 3 among their prime divisors. For example, integers 1, 6, 9, 16 and 108 \u2014 are 2- 3 integers, while 5, 10, 21 and 120 are not. Print the number of 2- 3- integers on the given segment [ l, r] , i. e. the number of sich 2- 3- integers t that l \u2264 t \u2264 r.",
    "input": "The only line contains two integers l and r ( 1 \u2264 l \u2264 r \u2264 2\u00b7109) .",
    "output": "Print a single integer the number of 2- 3- integers on the segment [ l, r] .",
    "note": "In the first example the 2- 3- integers are 1, 2, 3, 4, 6, 8 and 9. In the second example the 2- 3- integers are 108, 128, 144, 162 and 192.",
    "topics": [
      "implementation",
      "math"
    ],
    "id": "926A"
  },
  {
    "title": "Big Secret",
    "url": "https://codeforces.com/problemset/problem/925/C",
    "history": "Vitya has learned that the answer for The Ultimate Question of Life, the Universe, and Everything is not the integer 54 42, but an increasing integer sequence a_ 1, . . . , a_ n . In order to not reveal the secret earlier than needed, Vitya encrypted the answer and obtained the sequence b_ 1, . . . , b_ n using the following rules: b_ 1 = a_ 1 ; b_ i = a_ i \u2295 a_ i - 1 for all i from 2 to n , where x \u2295 y is the bitwise XOR of x and y . It is easy to see that the original sequence can be obtained using the rule a_ i = b_ 1 \u2295. . . \u2295 b_ i . However, some time later Vitya discovered that the integers b_ i in the cypher got shuffled, and it can happen that when decrypted using the rule mentioned above, it can produce a sequence that is not increasing. In order to save his reputation in the scientific community, Vasya decided to find some permutation of integers b_ i so that the sequence a_ i = b_ 1 \u2295. . . \u2295 b_ i is strictly increasing. Help him find such a permutation or determine that it is impossible.",
    "input": "The first line contains a single integer n ( 1 \u2264 n \u2264 10^ 5 ) . The second line contains n integers b_ 1, . . . , b_ n ( 1 \u2264 b_ i < 2^ 60 ) .",
    "output": "If there are no valid permutations, print a single line containing \" No\" . Otherwise in the first line print the word \" Yes\" , and in the second line print integers b' _ 1, . . . , b' _ n \u2014 a valid permutation of integers b_ i . The unordered multisets { b_ 1, . . . , b_ n} and { b' _ 1, . . . , b' _ n} should be equal, i. e. for each integer x the number of occurrences of x in the first multiset should be equal to the number of occurrences of x in the second multiset. Apart from this, the sequence a_ i = b' _ 1 \u2295. . . \u2295 b' _ i should be strictly increasing. If there are multiple answers, print any of them.",
    "note": "In the first example no permutation is valid. In the second example the given answer lead to the sequence a_ 1 = 4 , a_ 2 = 8 , a_ 3 = 15 , a_ 4 = 16 , a_ 5 = 23 , a_ 6 = 42 .",
    "topics": [
      "constructive algorithms",
      "math"
    ],
    "id": "925C"
  },
  {
    "title": "Perpetual Subtraction",
    "url": "https://codeforces.com/problemset/problem/923/E",
    "history": "There is a number x initially written on a blackboard. You repeat the following action a fixed amount of times: take the number x currently written on a blackboard and erase it select an integer uniformly at random from the range [ 0, x] inclusive, and write it on the blackboard Determine the distribution of final number given the distribution of initial number and the number of steps.",
    "input": "The first line contains two integers, N ( 1 \u2264 N \u2264 105) \u2014 the maximum number written on the blackboard \u2014 and M ( 0 \u2264 M \u2264 1018) \u2014 the number of steps to perform. The second line contains N + 1 integers P0, P1, . . . , PN ( 0 \u2264 Pi < 998244353) , where Pi describes the probability that the starting number is i. We can express this probability as irreducible fraction P / Q, then . It is guaranteed that the sum of all Pis equals 1 ( modulo 998244353) .",
    "output": "Output a single line of N + 1 integers, where Ri is the probability that the final number after M steps is i. It can be proven that the probability may always be expressed as an irreducible fraction P / Q. You are asked to output .",
    "note": "In the first case, we start with number 2. After one step, it will be 0, 1 or 2 with probability 1/ 3 each. In the second case, the number will remain 2 with probability 1/ 9. With probability 1/ 9 it stays 2 in the first round and changes to 1 in the next, and with probability 1/ 6 changes to 1 in the first round and stays in the second. In all other cases the final integer is 0.",
    "topics": [
      "fft",
      "math",
      "matrices"
    ],
    "id": "923E"
  },
  {
    "title": "Primal Sport",
    "url": "https://codeforces.com/problemset/problem/923/A",
    "history": "Alice and Bob begin their day with a quick game. They first choose a starting number X0 \u2265 3 and try to reach one million by the process described below. Alice goes first and then they take alternating turns. In the i- th turn, the player whose turn it is selects a prime number smaller than the current number, and announces the smallest multiple of this prime number that is not smaller than the current number. Formally, he or she selects a prime p < Xi - 1 and then finds the minimum Xi \u2265 Xi - 1 such that p divides Xi. Note that if the selected prime p already divides Xi - 1, then the number does not change. Eve has witnessed the state of the game after two turns. Given X2, help her determine what is the smallest possible starting number X0. Note that the players don' t necessarily play optimally. You should consider all possible game evolutions.",
    "input": "The input contains a single integer X2 ( 4 \u2264 X2 \u2264 106) . It is guaranteed that the integer X2 is composite, that is, is not prime.",
    "output": "Output a single integer \u2014 the minimum possible X0.",
    "note": "In the first test, the smallest possible starting number is X0 = 6. One possible course of the game is as follows: Alice picks prime 5 and announces X1 = 10 Bob picks prime 7 and announces X2 = 14. In the second case, let X0 = 15. Alice picks prime 2 and announces X1 = 16 Bob picks prime 5 and announces X2 = 20.",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "923A"
  },
  {
    "title": "List Of Integers",
    "url": "https://codeforces.com/problemset/problem/920/G",
    "history": "Let' s denote as L( x, p) an infinite sequence of integers y such that gcd( p, y) = 1 and y > x ( where gcd is the greatest common divisor of two integer numbers) , sorted in ascending order. The elements of L( x, p) are 1- indexed; for example, 9, 13 and 15 are the first, the second and the third elements of L( 7, 22) , respectively. You have to process t queries. Each query is denoted by three integers x, p and k, and the answer to this query is k- th element of L( x, p) .",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 30000) \u2014 the number of queries to process. Then t lines follow. i- th line contains three integers x, p and k for i- th query ( 1 \u2264 x, p, k \u2264 106) .",
    "output": "Print t integers, where i- th integer is the answer to i- th query.",
    "note": "",
    "topics": [
      "binary search",
      "bitmasks",
      "brute force",
      "combinatorics",
      "math",
      "number theory"
    ],
    "id": "920G"
  },
  {
    "title": "Swap Adjacent Elements",
    "url": "https://codeforces.com/problemset/problem/920/C",
    "history": "You have an array a consisting of n integers. Each integer from 1 to n appears exactly once in this array. For some indices i ( 1 \u2264 i \u2264 n - 1) it is possible to swap i- th element with ( i + 1) - th, for other indices it is not possible. You may perform any number of swapping operations any order. There is no limit on the number of times you swap i- th element with ( i + 1) - th ( if the position is not forbidden) . Can you make this array sorted in ascending order performing some sequence of swapping operations?",
    "input": "The first line contains one integer n ( 2 \u2264 n \u2264 200000) \u2014 the number of elements in the array. The second line contains n integers a1, a2, . . . , an ( 1 \u2264 ai \u2264 200000) \u2014 the elements of the array. Each integer from 1 to n appears exactly once. The third line contains a string of n - 1 characters, each character is either 0 or 1. If i- th character is 1, then you can swap i- th element with ( i + 1) - th any number of times, otherwise it is forbidden to swap i- th element with ( i + 1) - th.",
    "output": "If it is possible to sort the array in ascending order using any sequence of swaps you are allowed to make, print YES. Otherwise, print NO.",
    "note": "In the first example you may swap a3 and a4, and then swap a4 and a5.",
    "topics": [
      "dfs and similar",
      "greedy",
      "math",
      "sortings",
      "two pointers"
    ],
    "id": "920C"
  },
  {
    "title": "Congruence Equation",
    "url": "https://codeforces.com/problemset/problem/919/E",
    "history": "Given an integer x . Your task is to find out how many positive integers n ( 1 \u2264 n \u2264 x ) satisfy n \u00b7 a^ n \u2261 b ( mod p) , where a, b, p are all known constants.",
    "input": "The only line contains four integers a, b, p, x ( 2 \u2264 p \u2264 10^ 6+ 3 , 1 \u2264 a, b < p , 1 \u2264 x \u2264 10^ 12 ) . It is guaranteed that p is a prime.",
    "output": "Print a single integer: the number of possible answers n .",
    "note": "In the first sample, we can see that n= 2 and n= 8 are possible answers.",
    "topics": [
      "chinese remainder theorem",
      "math",
      "number theory"
    ],
    "id": "919E"
  },
  {
    "title": "Stranger Trees",
    "url": "https://codeforces.com/problemset/problem/917/D",
    "history": "Will shares a psychic connection with the Upside Down Monster, so everything the monster knows, Will knows. Suddenly, he started drawing, page after page, non- stop. Joyce, his mom, and Chief Hopper put the drawings together, and they realized, it' s a labeled tree! A tree is a connected acyclic graph. Will' s tree has n vertices. Joyce and Hopper don' t know what that means, so they' re investigating this tree and similar trees. For each k such that 0 \u2264 k \u2264 n - 1, they' re going to investigate all labeled trees with n vertices that share exactly k edges with Will' s tree. Two labeled trees are different if and only if there' s a pair of vertices ( v, u) such that there' s an edge between v and u in one tree and not in the other one. Hopper and Joyce want to know how much work they have to do, so they asked you to tell them the number of labeled trees with n vertices that share exactly k edges with Will' s tree, for each k. The answer could be very large, so they only asked you to tell them the answers modulo 1000000007 = 109 + 7.",
    "input": "The first line of input contains a single integer n ( 2 \u2264 n \u2264 100) \u2014 the size of the tree. The next n - 1 lines contain the edges of Will' s tree. Each line contains two integers v and u ( 1 \u2264 v, u \u2264 n, v = \u0338 u) , endpoints of an edge. It is guaranteed that the given graph is a tree.",
    "output": "Print n integers in one line. i- th integer should be the number of the number of labeled trees with n vertices that share exactly i - 1 edges with Will' s tree, modulo 1000 000 007 = 109 + 7.",
    "note": "",
    "topics": [
      "dp",
      "math",
      "matrices",
      "trees"
    ],
    "id": "917D"
  },
  {
    "title": "The Monster",
    "url": "https://codeforces.com/problemset/problem/917/A",
    "history": "As Will is stuck in the Upside Down, he can still communicate with his mom, Joyce, through the Christmas lights ( he can turn them on and off with his mind) . He can' t directly tell his mom where he is, because the monster that took him to the Upside Down will know and relocate him. Thus, he came up with a puzzle to tell his mom his coordinates. His coordinates are the answer to the following problem. A string consisting only of parentheses ( ' ( ' and ' ) ' ) is called a bracket sequence. Some bracket sequence are called correct bracket sequences. More formally: Empty string is a correct bracket sequence. if s is a correct bracket sequence, then ( s) is also a correct bracket sequence. if s and t are correct bracket sequences, then st ( concatenation of s and t) is also a correct bracket sequence. A string consisting of parentheses and question marks ( ' ? ' ) is called pretty if and only if there' s a way to replace each question mark with either ' ( ' or ' ) ' such that the resulting string is a non- empty correct bracket sequence. Will gave his mom a string s consisting of parentheses and question marks ( using Morse code through the lights) and his coordinates are the number of pairs of integers ( l, r) such that 1 \u2264 l \u2264 r \u2264 | s| and the string slsl + 1. . . sr is pretty, where si is i- th character of s. Joyce doesn' t know anything about bracket sequences, so she asked for your help.",
    "input": "The first and only line of input contains string s, consisting only of characters ' ( ' , ' ) ' and ' ? ' ( 2 \u2264 | s| \u2264 5000) .",
    "output": "Print the answer to Will' s puzzle in the first and only line of output.",
    "note": "For the first sample testcase, the pretty substrings of s are: \" ( ? \" which can be transformed to \" ( ) \" . \" ? ) \" which can be transformed to \" ( ) \" . \" ( ( ? ) \" which can be transformed to \" ( ( ) ) \" . \" ( ? ) ) \" which can be transformed to \" ( ( ) ) \" . For the second sample testcase, the pretty substrings of s are: \" ? ? \" which can be transformed to \" ( ) \" . \" ( ) \" . \" ? ? ( ) \" which can be transformed to \" ( ) ( ) \" . \" ? ( ) ? \" which can be transformed to \" ( ( ) ) \" . \" ? ? \" which can be transformed to \" ( ) \" . \" ( ) ? ? \" which can be transformed to \" ( ) ( ) \" . \" ? ? ( ) ? ? \" which can be transformed to \" ( ) ( ) ( ) \" .",
    "topics": [
      "dp",
      "greedy",
      "implementation",
      "math"
    ],
    "id": "917A"
  },
  {
    "title": "Jamie and Binary Sequence (changed after round)",
    "url": "https://codeforces.com/problemset/problem/916/B",
    "history": "Jamie is preparing a Codeforces round. He has got an idea for a problem, but does not know how to solve it. Help him write a solution to the following problem: Find k integers such that the sum of two to the power of each number equals to the number n and the largest integer in the answer is as small as possible. As there may be multiple answers, you are asked to output the lexicographically largest one. To be more clear, consider all integer sequence with length k ( a1, a2, . . . , ak) with . Give a value to each sequence. Among all sequence( s) that have the minimum y value, output the one that is the lexicographically largest. For definitions of powers and lexicographical order see notes.",
    "input": "The first line consists of two integers n and k ( 1 \u2264 n \u2264 1018, 1 \u2264 k \u2264 105) \u2014 the required sum and the length of the sequence.",
    "output": "Output \" No\" ( without quotes) in a single line if there does not exist such sequence. Otherwise, output \" Yes\" ( without quotes) in the first line, and k numbers separated by space in the second line \u2014 the required sequence. It is guaranteed that the integers in the answer sequence fit the range [ - 1018, 1018] .",
    "note": "Sample 1: 23 + 23 + 22 + 21 + 20 = 8 + 8 + 4 + 2 + 1 = 23Answers like ( 3, 3, 2, 0, 1) or ( 0, 1, 2, 3, 3) are not lexicographically largest. Answers like ( 4, 1, 1, 1, 0) do not have the minimum y value. Sample 2: It can be shown there does not exist a sequence with length 2. Sample 3: Powers of 2: If x > 0, then 2x = 2\u00b72\u00b72\u00b7. . . \u00b72 ( x times) . If x = 0, then 2x = 1. If x < 0, then . Lexicographical order: Given two different sequences of the same length, ( a1, a2, . . . , ak) and ( b1, b2, . . . , bk) , the first one is smaller than the second one for the lexicographical order, if and only if ai < bi, for the first i where ai and bi differ.",
    "topics": [
      "bitmasks",
      "greedy",
      "math"
    ],
    "id": "916B"
  },
  {
    "title": "Jamie and Alarm Snooze",
    "url": "https://codeforces.com/problemset/problem/916/A",
    "history": "Jamie loves sleeping. One day, he decides that he needs to wake up at exactly hh: mm. However, he hates waking up, so he wants to make waking up less painful by setting the alarm at a lucky time. He will then press the snooze button every x minutes until hh: mm is reached, and only then he will wake up. He wants to know what is the smallest number of times he needs to press the snooze button. A time is considered lucky if it contains a digit ' 7' . For example, 13: 07 and 17: 27 are lucky, while 00: 48 and 21: 34 are not lucky. Note that it is not necessary that the time set for the alarm and the wake- up time are on the same day. It is guaranteed that there is a lucky time Jamie can set so that he can wake at hh: mm. Formally, find the smallest possible non- negative integer y such that the time representation of the time x\u00b7y minutes before hh: mm contains the digit ' 7' . Jamie uses 24- hours clock, so after 23: 59 comes 00: 00.",
    "input": "The first line contains a single integer x ( 1 \u2264 x \u2264 60) . The second line contains two two- digit integers, hh and mm ( 00 \u2264 hh \u2264 23, 00 \u2264 mm \u2264 59) .",
    "output": "Print the minimum number of times he needs to press the button.",
    "note": "In the first sample, Jamie needs to wake up at 11: 23. So, he can set his alarm at 11: 17. He would press the snooze button when the alarm rings at 11: 17 and at 11: 20. In the second sample, Jamie can set his alarm at exactly at 01: 07 which is lucky.",
    "topics": [
      "brute force",
      "implementation",
      "math"
    ],
    "id": "916A"
  },
  {
    "title": "Coprime Arrays",
    "url": "https://codeforces.com/problemset/problem/915/G",
    "history": "Let' s call an array a of size n coprime iff gcd( a1, a2, . . . , an) = 1, where gcd is the greatest common divisor of the arguments. You are given two numbers n and k. For each i ( 1 \u2264 i \u2264 k) you have to determine the number of coprime arrays a of size n such that for every j ( 1 \u2264 j \u2264 n) 1 \u2264 aj \u2264 i. Since the answers can be very large, you have to calculate them modulo 109 + 7.",
    "input": "The first line contains two integers n and k ( 1 \u2264 n, k \u2264 2\u00b7106) \u2014 the size of the desired arrays and the maximum upper bound on elements, respectively.",
    "output": "Since printing 2\u00b7106 numbers may take a lot of time, you have to output the answer in such a way: Let bi be the number of coprime arrays with elements in range [ 1, i] , taken modulo 109 + 7. You have to print , taken modulo 109 + 7. Here denotes bitwise xor operation ( ^ in C+ + or Java, xor in Pascal) .",
    "note": "Explanation of the example: Since the number of coprime arrays is large, we will list the arrays that are non- coprime, but contain only elements in range [ 1, i] : For i = 1, the only array is coprime. b1 = 1. For i = 2, array [ 2, 2, 2] is not coprime. b2 = 7. For i = 3, arrays [ 2, 2, 2] and [ 3, 3, 3] are not coprime. b3 = 25. For i = 4, arrays [ 2, 2, 2] , [ 3, 3, 3] , [ 2, 2, 4] , [ 2, 4, 2] , [ 2, 4, 4] , [ 4, 2, 2] , [ 4, 2, 4] , [ 4, 4, 2] and [ 4, 4, 4] are not coprime. b4 = 55.",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "915G"
  },
  {
    "title": "Sum the Fibonacci",
    "url": "https://codeforces.com/problemset/problem/914/G",
    "history": "You are given an array s of n non- negative integers. A 5- tuple of integers ( a, b, c, d, e) is said to be valid if it satisfies the following conditions: 1 \u2264 a, b, c, d, e \u2264 n ( sa | sb) sc ( sd ^ se) = 2i for some integer i sa sb = 0 Here, ' | ' is the bitwise OR, ' ' is the bitwise AND and ' ^ ' is the bitwise XOR operation. Find the sum of f( sa| sb) * f( sc) * f( sd^ se) over all valid 5- tuples ( a, b, c, d, e) , where f( i) is the i- th Fibonnaci number ( f( 0) = 0, f( 1) = 1, f( i) = f( i - 1) + f( i - 2) ) . Since answer can be is huge output it modulo 109 + 7.",
    "input": "The first line of input contains an integer n ( 1 \u2264 n \u2264 106) . The second line of input contains n integers si ( 0 \u2264 si < 217) .",
    "output": "Output the sum as described above, modulo 109 + 7",
    "note": "",
    "topics": [
      "bitmasks",
      "divide and conquer",
      "dp",
      "fft",
      "math"
    ],
    "id": "914G"
  },
  {
    "title": "Perfect Squares",
    "url": "https://codeforces.com/problemset/problem/914/A",
    "history": "Given an array a1, a2, . . . , an of n integers, find the largest number in the array that is not a perfect square. A number x is said to be a perfect square if there exists an integer y such that x = y2.",
    "input": "The first line contains a single integer n ( 1 \u2264 n \u2264 1000) \u2014 the number of elements in the array. The second line contains n integers a1, a2, . . . , an ( - 106 \u2264 ai \u2264 106) \u2014 the elements of the array. It is guaranteed that at least one element of the array is not a perfect square.",
    "output": "Print the largest number in the array which is not a perfect square. It is guaranteed that an answer always exists.",
    "note": "In the first sample case, 4 is a perfect square, so the largest number in the array that is not a perfect square is 2.",
    "topics": [
      "brute force",
      "implementation",
      "math"
    ],
    "id": "914A"
  },
  {
    "title": "Don't Exceed",
    "url": "https://codeforces.com/problemset/problem/913/H",
    "history": "You generate real numbers s1, s2, . . . , sn as follows: s0 = 0; si = si - 1 + ti, where ti is a real number chosen independently uniformly at random between 0 and 1, inclusive. You are given real numbers x1, x2, . . . , xn. You are interested in the probability that si \u2264 xi is true for all i simultaneously. It can be shown that this can be represented as , where P and Q are coprime integers, and . Print the value of P\u00b7Q - 1 modulo 998244353.",
    "input": "The first line contains integer n ( 1 \u2264 n \u2264 30) . The next n lines contain real numbers x1, x2, . . . , xn, given with at most six digits after the decimal point ( 0 < xi \u2264 n) .",
    "output": "Print a single integer, the answer to the problem.",
    "note": "In the first example, the sought probability is 1 since the sum of i real numbers which don' t exceed 1 doesn' t exceed i. In the second example, the probability is x1 itself. In the third example, the sought probability is 3 / 8.",
    "topics": [
      "math",
      "probabilities"
    ],
    "id": "913H"
  },
  {
    "title": "Power Substring",
    "url": "https://codeforces.com/problemset/problem/913/G",
    "history": "You are given n positive integers a1, a2, . . . , an. For every ai you need to find a positive integer ki such that the decimal notation of 2ki contains the decimal notation of ai as a substring among its last min( 100, length( 2ki) ) digits. Here length( m) is the length of the decimal notation of m. Note that you don' t have to minimize ki. The decimal notations in this problem do not contain leading zeros.",
    "input": "The first line contains a single integer n ( 1 \u2264 n \u2264 2 000) \u2014 the number of integers ai. Each of the next n lines contains a positive integer ai ( 1 \u2264 ai < 1011) .",
    "output": "Print n lines. The i- th of them should contain a positive integer ki such that the last min( 100, length( 2ki) ) digits of 2ki contain the decimal notation of ai as a substring. Integers ki must satisfy 1 \u2264 ki \u2264 1050. It can be shown that the answer always exists under the given constraints. If there are multiple answers, print any of them.",
    "note": "",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "913G"
  },
  {
    "title": "Strongly Connected Tournament",
    "url": "https://codeforces.com/problemset/problem/913/F",
    "history": "There is a chess tournament in All- Right- City. n players were invited to take part in the competition. The tournament is held by the following rules: Initially, each player plays one game with every other player. There are no ties; After that, the organizers build a complete directed graph with players as vertices. For every pair of players there is exactly one directed edge between them: the winner of their game is the startpoint of this edge and the loser is the endpoint; After that, the organizers build a condensation of this graph. The condensation of this graph is an acyclic complete graph, therefore it has the only Hamiltonian path which consists of strongly connected components of initial graph A1 \u2192 A2 \u2192 . . . \u2192 Ak. The players from the first component A1 are placed on the first places, the players from the component A2 are placed on the next places, and so on. To determine exact place of each player in a strongly connected component, all the procedures from 1 to 5 are repeated recursively inside each component, i. e. for every i = 1, 2, . . . , k players from the component Ai play games with each other again, and so on; If a component consists of a single player, then he has no more rivals, his place is already determined and the process stops. The players are enumerated with integers from 1 to n. The enumeration was made using results of a previous tournament. It is known that player i wins player j ( i < j) with probability p. You need to help to organize the tournament. Find the expected value of total number of games played by all the players. It can be shown that the answer can be represented as , where P and Q are coprime integers and . Print the value of P\u00b7Q - 1 modulo 998244353. If you are not familiar with any of the terms above, you can read about them here.",
    "input": "The first line of input contains a single integer n ( 2 \u2264 n \u2264 2000) \u2014 the number of players. The second line contains two integers a and b ( 1 \u2264 a < b \u2264 100) \u2014 the numerator and the denominator of fraction .",
    "output": "In the only line print the expected value of total number of games played by all the players. Print the answer using the format above.",
    "note": "In the first example the expected value is 4. In the second example the expected value is . In the third example the expected value is .",
    "topics": [
      "dp",
      "graphs",
      "math",
      "probabilities"
    ],
    "id": "913F"
  },
  {
    "title": "Modular Exponentiation",
    "url": "https://codeforces.com/problemset/problem/913/A",
    "history": "The following problem is well- known: given integers n and m, calculate , where 2n = 2\u00b72\u00b7. . . \u00b72 ( n factors) , and denotes the remainder of division of x by y. You are asked to solve the \" reverse\" problem. Given integers n and m, calculate .",
    "input": "The first line contains a single integer n ( 1 \u2264 n \u2264 108) . The second line contains a single integer m ( 1 \u2264 m \u2264 108) .",
    "output": "Output a single integer \u2014 the value of .",
    "note": "In the first example, the remainder of division of 42 by 24 = 16 is equal to 10. In the second example, 58 is divisible by 21 = 2 without remainder, and the answer is 0.",
    "topics": [
      "implementation",
      "math"
    ],
    "id": "913A"
  },
  {
    "title": "Prime Gift",
    "url": "https://codeforces.com/problemset/problem/912/E",
    "history": "Opposite to Grisha' s nice behavior, Oleg, though he has an entire year at his disposal, didn' t manage to learn how to solve number theory problems in the past year. That' s why instead of Ded Moroz he was visited by his teammate Andrew, who solemnly presented him with a set of n distinct prime numbers alongside with a simple task: Oleg is to find the k- th smallest integer, such that all its prime divisors are in this set.",
    "input": "The first line contains a single integer n ( 1 \u2264 n \u2264 16) . The next line lists n distinct prime numbers p1, p2, . . . , pn ( 2 \u2264 pi \u2264 100) in ascending order. The last line gives a single integer k ( 1 \u2264 k) . It is guaranteed that the k- th smallest integer such that all its prime divisors are in this set does not exceed 1018.",
    "output": "Print a single line featuring the k- th smallest integer. It' s guaranteed that the answer doesn' t exceed 1018.",
    "note": "The list of numbers with all prime divisors inside 2, 3, 5 begins as follows: ( 1, 2, 3, 4, 5, 6, 8, . . . ) The seventh number in this list ( 1- indexed) is eight.",
    "topics": [
      "binary search",
      "dfs and similar",
      "math",
      "meet-in-the-middle",
      "number theory",
      "two pointers"
    ],
    "id": "912E"
  },
  {
    "title": "Inversion Counting",
    "url": "https://codeforces.com/problemset/problem/911/D",
    "history": "A permutation of size n is an array of size n such that each integer from 1 to n occurs exactly once in this array. An inversion in a permutation p is a pair of indices ( i, j) such that i > j and ai < aj. For example, a permutation [ 4, 1, 3, 2] contains 4 inversions: ( 2, 1) , ( 3, 1) , ( 4, 1) , ( 4, 3) . You are given a permutation a of size n and m queries to it. Each query is represented by two indices l and r denoting that you have to reverse the segment [ l, r] of the permutation. For example, if a = [ 1, 2, 3, 4] and a query l = 2, r = 4 is applied, then the resulting permutation is [ 1, 4, 3, 2] . After each query you have to determine whether the number of inversions is odd or even.",
    "input": "The first line contains one integer n ( 1 \u2264 n \u2264 1500) \u2014 the size of the permutation. The second line contains n integers a1, a2, . . . , an ( 1 \u2264 ai \u2264 n) \u2014 the elements of the permutation. These integers are pairwise distinct. The third line contains one integer m ( 1 \u2264 m \u2264 2\u00b7105) \u2014 the number of queries to process. Then m lines follow, i- th line containing two integers li, ri ( 1 \u2264 li \u2264 ri \u2264 n) denoting that i- th query is to reverse a segment [ li, ri] of the permutation. All queries are performed one after another.",
    "output": "Print m lines. i- th of them must be equal to odd if the number of inversions in the permutation after i- th query is odd, and even otherwise.",
    "note": "The first example: after the first query a = [ 2, 1, 3] , inversion: ( 2, 1) ; after the second query a = [ 2, 3, 1] , inversions: ( 3, 1) , ( 3, 2) . The second example: a = [ 1, 2, 4, 3] , inversion: ( 4, 3) ; a = [ 3, 4, 2, 1] , inversions: ( 3, 1) , ( 4, 1) , ( 3, 2) , ( 4, 2) , ( 4, 3) ; a = [ 1, 2, 4, 3] , inversion: ( 4, 3) ; a = [ 1, 4, 2, 3] , inversions: ( 3, 2) , ( 4, 2) .",
    "topics": [
      "brute force",
      "math"
    ],
    "id": "911D"
  },
  {
    "title": "Minimum Sum",
    "url": "https://codeforces.com/problemset/problem/910/C",
    "history": "Petya has n positive integers a1, a2, . . . , an. His friend Vasya decided to joke and replaced all digits in Petya' s numbers with a letters. He used the lowercase letters of the Latin alphabet from ' a' to ' j' and replaced all digits 0 with one letter, all digits 1 with another letter and so on. For any two different digits Vasya used distinct letters from ' a' to ' j' . Your task is to restore Petya' s numbers. The restored numbers should be positive integers without leading zeros. Since there can be multiple ways to do it, determine the minimum possible sum of all Petya' s numbers after the restoration. It is guaranteed that before Vasya' s joke all Petya' s numbers did not have leading zeros.",
    "input": "The first line contains a single integer n ( 1 \u2264 n \u2264 1 000) \u2014 the number of Petya' s numbers. Each of the following lines contains non- empty string si consisting of lowercase Latin letters from ' a' to ' j' \u2014 the Petya' s numbers after Vasya' s joke. The length of each string does not exceed six characters.",
    "output": "Determine the minimum sum of all Petya' s numbers after the restoration. The restored numbers should be positive integers without leading zeros. It is guaranteed that the correct restore ( without leading zeros) exists for all given tests.",
    "note": "In the first example, you need to replace the letter ' a' with the digit 1, the letter ' b' with the digit 0, the letter ' d' with the digit 2, the letter ' e' with the digit 3, and the letter ' j' with the digit 4. So after the restoration numbers will look like [ 10, 23, 14] . The sum of them is equal to 47, which is the minimum possible sum of the numbers after the correct restoration. In the second example the numbers after the restoration can look like: [ 120468, 3579, 2468, 10024, 3] . In the second example the numbers after the restoration can look like: [ 11, 22, 11] .",
    "topics": [
      "constructive algorithms",
      "greedy",
      "math"
    ],
    "id": "910C"
  },
  {
    "title": "Segments",
    "url": "https://codeforces.com/problemset/problem/909/B",
    "history": "You are given an integer N. Consider all possible segments on the coordinate axis with endpoints at integer points with coordinates between 0 and N, inclusive; there will be of them. You want to draw these segments in several layers so that in each layer the segments don' t overlap ( they might touch at the endpoints though) . You can not move the segments to a different location on the coordinate axis. Find the minimal number of layers you have to use for the given N.",
    "input": "The only input line contains a single integer N ( 1 \u2264 N \u2264 100) .",
    "output": "Output a single integer - the minimal number of layers required to draw the segments for the given N.",
    "note": "As an example, here are the segments and their optimal arrangement into layers for N = 4.",
    "topics": [
      "constructive algorithms",
      "math"
    ],
    "id": "909B"
  },
  {
    "title": "New Year and Original Order",
    "url": "https://codeforces.com/problemset/problem/908/G",
    "history": "Let S( n) denote the number that represents the digits of n in sorted order. For example, S( 1) = 1, S( 5) = 5, S( 50394) = 3459, S( 353535) = 333555. Given a number X, compute modulo 109 + 7.",
    "input": "The first line of input will contain the integer X ( 1 \u2264 X \u2264 10700) .",
    "output": "Print a single integer, the answer to the question.",
    "note": "The first few values of S are 1, 2, 3, 4, 5, 6, 7, 8, 9, 1, 11, 12, 13, 14, 15, 16, 17, 18, 19, 2, 12. The sum of these values is 195.",
    "topics": [
      "dp",
      "math"
    ],
    "id": "908G"
  },
  {
    "title": "New Year and Entity Enumeration",
    "url": "https://codeforces.com/problemset/problem/908/E",
    "history": "You are given an integer m. Let M = 2m - 1. You are also given a set of n integers denoted as the set T. The integers will be provided in base 2 as n binary strings of length m. A set of integers S is called \" good\" if the following hold. If , then . If , then All elements of S are less than or equal to M. Here, and refer to the bitwise XOR and bitwise AND operators, respectively. Count the number of good sets S, modulo 109 + 7.",
    "input": "The first line will contain two integers m and n ( 1 \u2264 m \u2264 1 000, 1 \u2264 n \u2264 min( 2m, 50) ) . The next n lines will contain the elements of T. Each line will contain exactly m zeros and ones. Elements of T will be distinct.",
    "output": "Print a single integer, the number of good sets modulo 109 + 7.",
    "note": "An example of a valid set S is 00000, 00101, 00010, 00111, 11000, 11010, 11101, 11111.",
    "topics": [
      "bitmasks",
      "combinatorics",
      "dp",
      "math"
    ],
    "id": "908E"
  },
  {
    "title": "New Year and Arbitrary Arrangement",
    "url": "https://codeforces.com/problemset/problem/908/D",
    "history": "You are given three integers k, pa and pb. You will construct a sequence with the following algorithm: Initially, start with the empty sequence. Each second, you do the following. With probability pa / ( pa + pb) , add ' a' to the end of the sequence. Otherwise ( with probability pb / ( pa + pb) ) , add ' b' to the end of the sequence. You stop once there are at least k subsequences that form ' ab' . Determine the expected number of times ' ab' is a subsequence in the resulting sequence. It can be shown that this can be represented by P / Q, where P and Q are coprime integers, and . Print the value of .",
    "input": "The first line will contain three integers integer k, pa, pb ( 1 \u2264 k \u2264 1 000, 1 \u2264 pa, pb \u2264 1 000 000) .",
    "output": "Print a single integer, the answer to the problem.",
    "note": "The first sample, we will keep appending to our sequence until we get the subsequence ' ab' at least once. For instance, we get the sequence ' ab' with probability 1/ 4, ' bbab' with probability 1/ 16, and ' aab' with probability 1/ 8. Note, it' s impossible for us to end with a sequence like ' aabab' , since we would have stopped our algorithm once we had the prefix ' aab' . The expected amount of times that ' ab' will occur across all valid sequences is 2. For the second sample, the answer is equal to .",
    "topics": [
      "dp",
      "math",
      "probabilities"
    ],
    "id": "908D"
  },
  {
    "title": "New Year and Curling",
    "url": "https://codeforces.com/problemset/problem/908/C",
    "history": "Carol is currently curling. She has n disks each with radius r on the 2D plane. Initially she has all these disks above the line y = 10100. She then will slide the disks towards the line y = 0 one by one in order from 1 to n. When she slides the i- th disk, she will place its center at the point ( xi, 10100) . She will then push it so the disk\u2019s y coordinate continuously decreases, and x coordinate stays constant. The disk stops once it touches the line y = 0 or it touches any previous disk. Note that once a disk stops moving, it will not move again, even if hit by another disk. Compute the y- coordinates of centers of all the disks after all disks have been pushed.",
    "input": "The first line will contain two integers n and r ( 1 \u2264 n, r \u2264 1 000) , the number of disks, and the radius of the disks, respectively. The next line will contain n integers x1, x2, . . . , xn ( 1 \u2264 xi \u2264 1 000) \u2014 the x- coordinates of the disks.",
    "output": "Print a single line with n numbers. The i- th number denotes the y- coordinate of the center of the i- th disk. The output will be accepted if it has absolute or relative error at most 10 - 6. Namely, let' s assume that your answer for a particular value of a coordinate is a and the answer of the jury is b. The checker program will consider your answer correct if for all coordinates.",
    "note": "The final positions of the disks will look as follows: In particular, note the position of the last disk.",
    "topics": [
      "brute force",
      "geometry",
      "implementation",
      "math"
    ],
    "id": "908C"
  },
  {
    "title": "Power Tower",
    "url": "https://codeforces.com/problemset/problem/906/D",
    "history": "Priests of the Quetzalcoatl cult want to build a tower to represent a power of their god. Tower is usually made of power- charged rocks. It is built with the help of rare magic by levitating the current top of tower and adding rocks at its bottom. If top, which is built from k - 1 rocks, possesses power p and we want to add the rock charged with power wk then value of power of a new tower will be wkp. Rocks are added from the last to the first. That is for sequence w1, . . . , wm value of power will beAfter tower is built, its power may be extremely large. But still priests want to get some information about it, namely they want to know a number called cumulative power which is the true value of power taken modulo m. Priests have n rocks numbered from 1 to n. They ask you to calculate which value of cumulative power will the tower possess if they will build it from rocks numbered l, l + 1, . . . , r.",
    "input": "First line of input contains two integers n ( 1 \u2264 n \u2264 105) and m ( 1 \u2264 m \u2264 109) . Second line of input contains n integers wk ( 1 \u2264 wk \u2264 109) which is the power of rocks that priests have. Third line of input contains single integer q ( 1 \u2264 q \u2264 105) which is amount of queries from priests to you. kth of next q lines contains two integers lk and rk ( 1 \u2264 lk \u2264 rk \u2264 n) .",
    "output": "Output q integers. k- th of them must be the amount of cumulative power the tower will have if is built from rocks lk, lk + 1, . . . , rk.",
    "note": "327 = 7625597484987",
    "topics": [
      "chinese remainder theorem",
      "math",
      "number theory"
    ],
    "id": "906D"
  },
  {
    "title": "Seating of Students",
    "url": "https://codeforces.com/problemset/problem/906/B",
    "history": "Students went into a class to write a test and sat in some way. The teacher thought: \" Probably they sat in this order to copy works of each other. I need to rearrange them in such a way that students that were neighbors are not neighbors in a new seating. \" The class can be represented as a matrix with n rows and m columns with a student in each cell. Two students are neighbors if cells in which they sit have a common side. Let' s enumerate students from 1 to n\u00b7m in order of rows. So a student who initially sits in the cell in row i and column j has a number ( i - 1) \u00b7m + j. You have to find a matrix with n rows and m columns in which all numbers from 1 to n\u00b7m appear exactly once and adjacent numbers in the original matrix are not adjacent in it, or determine that there is no such matrix.",
    "input": "The only line contains two integers n and m ( 1 \u2264 n, m \u2264 105; n\u00b7m \u2264 105) \u2014 the number of rows and the number of columns in the required matrix.",
    "output": "If there is no such matrix, output \" NO\" ( without quotes) . Otherwise in the first line output \" YES\" ( without quotes) , and in the next n lines output m integers which form the required matrix.",
    "note": "In the first test case the matrix initially looks like this: 1 2 3 45 6 7 8It' s easy to see that there are no two students that are adjacent in both matrices. In the second test case there are only two possible seatings and in both of them students with numbers 1 and 2 are neighbors.",
    "topics": [
      "brute force",
      "constructive algorithms",
      "math"
    ],
    "id": "906B"
  },
  {
    "title": "Almost Difference",
    "url": "https://codeforces.com/problemset/problem/903/D",
    "history": "Let' s denote a function You are given an array a consisting of n integers. You have to calculate the sum of d( ai, aj) over all pairs ( i, j) such that 1 \u2264 i \u2264 j \u2264 n.",
    "input": "The first line contains one integer n ( 1 \u2264 n \u2264 200000) \u2014 the number of elements in a. The second line contains n integers a1, a2, . . . , an ( 1 \u2264 ai \u2264 109) \u2014 elements of the array.",
    "output": "Print one integer \u2014 the sum of d( ai, aj) over all pairs ( i, j) such that 1 \u2264 i \u2264 j \u2264 n.",
    "note": "In the first example: d( a1, a2) = 0; d( a1, a3) = 2; d( a1, a4) = 0; d( a1, a5) = 2; d( a2, a3) = 0; d( a2, a4) = 0; d( a2, a5) = 0; d( a3, a4) = - 2; d( a3, a5) = 0; d( a4, a5) = 2.",
    "topics": [
      "data structures",
      "math"
    ],
    "id": "903D"
  },
  {
    "title": "Cyclic Cipher",
    "url": "https://codeforces.com/problemset/problem/901/E",
    "history": "Senor Vorpal Kickass' o invented an innovative method to encrypt integer sequences of length n. To encrypt a sequence, one has to choose a secret sequence , that acts as a key. Vorpal is very selective, so the key should be such a sequence bi, that its cyclic shifts are linearly independent, that is, there is no non- zero set of coefficients x0, x1, . . . , xn - 1, such that for all k at the same time. After that for a sequence you should build the following cipher: In other words, you are to compute the quadratic deviation between each cyclic shift of bi and the sequence ai. The resulting sequence is the Kickass' s cipher. The cipher is in development right now and Vorpal wants to decipher a sequence after it has been encrypted. You are to solve this problem for him. You are given sequences ci and bi. You are to find all suitable sequences ai.",
    "input": "The first line contains a single integer n ( ) . The second line contains n integers b0, b1, . . . , bn - 1 ( ) . The third line contains n integers c0, c1, . . . , cn - 1 ( ) . It is guaranteed that all cyclic shifts of sequence bi are linearly independent.",
    "output": "In the first line print a single integer k \u2014 the number of sequences ai, such that after encrypting them with key bi you get the sequence ci. After that in each of k next lines print n integers a0, a1, . . . , an - 1. Print the sequences in lexicographical order. Note that k could be equal to 0.",
    "note": "",
    "topics": [
      "fft",
      "math"
    ],
    "id": "901E"
  },
  {
    "title": "GCD of Polynomials",
    "url": "https://codeforces.com/problemset/problem/901/B",
    "history": "Suppose you have two polynomials and . Then polynomial can be uniquely represented in the following way: This can be done using long division. Here, denotes the degree of polynomial P( x) . is called the remainder of division of polynomial by polynomial , it is also denoted as . Since there is a way to divide polynomials with remainder, we can define Euclid' s algorithm of finding the greatest common divisor of two polynomials. The algorithm takes two polynomials . If the polynomial is zero, the result is , otherwise the result is the value the algorithm returns for pair . On each step the degree of the second argument decreases, so the algorithm works in finite number of steps. But how large that number could be? You are to answer this question. You are given an integer n. You have to build two polynomials with degrees not greater than n, such that their coefficients are integers not exceeding 1 by their absolute value, the leading coefficients ( ones with the greatest power of x) are equal to one, and the described Euclid' s algorithm performs exactly n steps finding their greatest common divisor. Moreover, the degree of the first polynomial should be greater than the degree of the second. By a step of the algorithm we mean the transition from pair to pair .",
    "input": "You are given a single integer n ( 1 \u2264 n \u2264 150) \u2014 the number of steps of the algorithm you need to reach.",
    "output": "Print two polynomials in the following format. In the first line print a single integer m ( 0 \u2264 m \u2264 n) \u2014 the degree of the polynomial. In the second line print m + 1 integers between - 1 and 1 \u2014 the coefficients of the polynomial, from constant to leading. The degree of the first polynomial should be greater than the degree of the second polynomial, the leading coefficients should be equal to 1. Euclid' s algorithm should perform exactly n steps when called using these polynomials. If there is no answer for the given n, print - 1. If there are multiple answer, print any of them.",
    "note": "In the second example you can print polynomials x2 - 1 and x. The sequence of transitions is( x2 - 1, x) \u2192 ( x, - 1) \u2192 ( - 1, 0) . There are two steps in it.",
    "topics": [
      "constructive algorithms",
      "math"
    ],
    "id": "901B"
  },
  {
    "title": "Unusual Sequences",
    "url": "https://codeforces.com/problemset/problem/900/D",
    "history": "Count the number of distinct sequences a1, a2, . . . , an ( 1 \u2264 ai) consisting of positive integers such that gcd( a1, a2, . . . , an) = x and . As this number could be large, print the answer modulo 109 + 7. gcd here means the greatest common divisor.",
    "input": "The only line contains two positive integers x and y ( 1 \u2264 x, y \u2264 109) .",
    "output": "Print the number of such sequences modulo 109 + 7.",
    "note": "There are three suitable sequences in the first test: ( 3, 3, 3) , ( 3, 6) , ( 6, 3) . There are no suitable sequences in the second test.",
    "topics": [
      "bitmasks",
      "combinatorics",
      "dp",
      "math",
      "number theory"
    ],
    "id": "900D"
  },
  {
    "title": "Remove Extra One",
    "url": "https://codeforces.com/problemset/problem/900/C",
    "history": "You are given a permutation p of length n. Remove one element from permutation to make the number of records the maximum possible. We remind that in a sequence of numbers a1, a2, . . . , ak the element ai is a record if for every integer j ( 1 \u2264 j < i) the following holds: aj < ai.",
    "input": "The first line contains the only integer n ( 1 \u2264 n \u2264 105) \u2014 the length of the permutation. The second line contains n integers p1, p2, . . . , pn ( 1 \u2264 pi \u2264 n) \u2014 the permutation. All the integers are distinct.",
    "output": "Print the only integer \u2014 the element that should be removed to make the number of records the maximum possible. If there are multiple such elements, print the smallest one.",
    "note": "In the first example the only element can be removed.",
    "topics": [
      "brute force",
      "data structures",
      "math"
    ],
    "id": "900C"
  },
  {
    "title": "Position in Fraction",
    "url": "https://codeforces.com/problemset/problem/900/B",
    "history": "You have a fraction . You need to find the first occurrence of digit c into decimal notation of the fraction after decimal point.",
    "input": "The first contains three single positive integers a, b, c ( 1 \u2264 a < b \u2264 105, 0 \u2264 c \u2264 9) .",
    "output": "Print position of the first occurrence of digit c into the fraction. Positions are numbered from 1 after decimal point. It there is no such position, print - 1.",
    "note": "The fraction in the first example has the following decimal notation: . The first zero stands on second position. The fraction in the second example has the following decimal notation: . There is no digit 7 in decimal notation of the fraction.",
    "topics": [
      "math",
      "number theory"
    ],
    "id": "900B"
  },
  {
    "title": "Shovel Sale",
    "url": "https://codeforces.com/problemset/problem/899/D",
    "history": "There are n shovels in Polycarp' s shop. The i- th shovel costs i burles, that is, the first shovel costs 1 burle, the second shovel costs 2 burles, the third shovel costs 3 burles, and so on. Polycarps wants to sell shovels in pairs. Visitors are more likely to buy a pair of shovels if their total cost ends with several 9s. Because of this, Polycarp wants to choose a pair of shovels to sell in such a way that the sum of their costs ends with maximum possible number of nines. For example, if he chooses shovels with costs 12345 and 37454, their total cost is 49799, it ends with two nines. You are to compute the number of pairs of shovels such that their total cost ends with maximum possible number of nines. Two pairs are considered different if there is a shovel presented in one pair, but not in the other.",
    "input": "The first line contains a single integer n ( 2 \u2264 n \u2264 109) \u2014 the number of shovels in Polycarp' s shop.",
    "output": "Print the number of pairs of shovels such that their total cost ends with maximum possible number of nines. Note that it is possible that the largest number of 9s at the end is 0, then you should count all such ways. It is guaranteed that for every n \u2264 109 the answer doesn' t exceed 2\u00b7109.",
    "note": "In the first example the maximum possible number of nines at the end is one. Polycarp cah choose the following pairs of shovels for that purpose: 2 and 7; 3 and 6; 4 and 5. In the second example the maximum number of nines at the end of total cost of two shovels is one. The following pairs of shovels suit Polycarp: 1 and 8; 2 and 7; 3 and 6; 4 and 5; 5 and 14; 6 and 13; 7 and 12; 8 and 11; 9 and 10. In the third example it is necessary to choose shovels 49 and 50, because the sum of their cost is 99, that means that the total number of nines is equal to two, which is maximum possible for n = 50.",
    "topics": [
      "constructive algorithms",
      "math"
    ],
    "id": "899D"
  },
  {
    "title": "Dividing the numbers",
    "url": "https://codeforces.com/problemset/problem/899/C",
    "history": "Petya has n integers: 1, 2, 3, . . . , n. He wants to split these integers in two non- empty groups in such a way that the absolute difference of sums of integers in each group is as small as possible. Help Petya to split the integers. Each of n integers should be exactly in one group.",
    "input": "The first line contains a single integer n ( 2 \u2264 n \u2264 60 000) \u2014 the number of integers Petya has.",
    "output": "Print the smallest possible absolute difference in the first line. In the second line print the size of the first group, followed by the integers in that group. You can print these integers in arbitrary order. If there are multiple answers, print any of them.",
    "note": "In the first example you have to put integers 1 and 4 in the first group, and 2 and 3 in the second. This way the sum in each group is 5, and the absolute difference is 0. In the second example there are only two integers, and since both groups should be non- empty, you have to put one integer in the first group and one in the second. This way the absolute difference of sums of integers in each group is 1.",
    "topics": [
      "constructive algorithms",
      "graphs",
      "math"
    ],
    "id": "899C"
  },
  {
    "title": "Splitting in Teams",
    "url": "https://codeforces.com/problemset/problem/899/A",
    "history": "There were n groups of students which came to write a training contest. A group is either one person who can write the contest with anyone else, or two people who want to write the contest in the same team. The coach decided to form teams of exactly three people for this training. Determine the maximum number of teams of three people he can form. It is possible that he can' t use all groups to form teams. For groups of two, either both students should write the contest, or both should not. If two students from a group of two will write the contest, they should be in the same team.",
    "input": "The first line contains single integer n ( 2 \u2264 n \u2264 2\u00b7105) \u2014 the number of groups. The second line contains a sequence of integers a1, a2, . . . , an ( 1 \u2264 ai \u2264 2) , where ai is the number of people in group i.",
    "output": "Print the maximum number of teams of three people the coach can form.",
    "note": "In the first example the coach can form one team. For example, he can take students from the first, second and fourth groups. In the second example he can' t make a single team. In the third example the coach can form three teams. For example, he can do this in the following way: The first group ( of two people) and the seventh group ( of one person) , The second group ( of two people) and the sixth group ( of one person) , The third group ( of two people) and the fourth group ( of one person) .",
    "topics": [
      "constructive algorithms",
      "greedy",
      "math"
    ],
    "id": "899A"
  },
  {
    "title": "Restoring the Expression",
    "url": "https://codeforces.com/problemset/problem/898/F",
    "history": "A correct expression of the form a+ b= c was written; a, b and c are non- negative integers without leading zeros. In this expression, the plus and equally signs were lost. The task is to restore the expression. In other words, one character ' + ' and one character ' = ' should be inserted into given sequence of digits so that: character' + ' is placed on the left of character ' = ' , characters ' + ' and ' = ' split the sequence into three non- empty subsequences consisting of digits ( let' s call the left part a, the middle part \u2014 b and the right part \u2014 c) , all the three parts a, b and c do not contain leading zeros, it is true that a+ b= c. It is guaranteed that in given tests answer always exists.",
    "input": "The first line contains a non- empty string consisting of digits. The length of the string does not exceed 106.",
    "output": "Output the restored expression. If there are several solutions, you can print any of them. Note that the answer at first should contain two terms ( divided with symbol ' + ' ) , and then the result of their addition, before which symbol' = ' should be. Do not separate numbers and operation signs with spaces. Strictly follow the output format given in the examples. If you remove symbol ' + ' and symbol ' = ' from answer string you should get a string, same as string from the input data.",
    "note": "",
    "topics": [
      "brute force",
      "hashing",
      "math"
    ],
    "id": "898F"
  },
  {
    "title": "Rounding",
    "url": "https://codeforces.com/problemset/problem/898/A",
    "history": "Vasya has a non- negative integer n. He wants to round it to nearest integer, which ends up with 0. If n already ends up with 0, Vasya considers it already rounded. For example, if n = 4722 answer is 4720. If n = 5 Vasya can round it to 0 or to 10. Both ways are correct. For given n find out to which integer will Vasya round it.",
    "input": "The first line contains single integer n ( 0 \u2264 n \u2264 109) \u2014 number that Vasya has.",
    "output": "Print result of rounding n. Pay attention that in some cases answer isn' t unique. In that case print any correct answer.",
    "note": "In the first example n = 5. Nearest integers, that ends up with zero are 0 and 10. Any of these answers is correct, so you can print 0 or 10.",
    "topics": [
      "implementation",
      "math"
    ],
    "id": "898A"
  },
  {
    "title": "Nephren Runs a Cinema",
    "url": "https://codeforces.com/problemset/problem/896/D",
    "history": "Lakhesh loves to make movies, so Nephren helps her run a cinema. We may call it No. 68 Cinema. However, one day, the No. 68 Cinema runs out of changes ( they don' t have 50- yuan notes currently) , but Nephren still wants to start their business. ( Assume that yuan is a kind of currency in Regulu Ere. ) There are three types of customers: some of them bring exactly a 50- yuan note; some of them bring a 100- yuan note and Nephren needs to give a 50- yuan note back to him/ her; some of them bring VIP cards so that they don' t need to pay for the ticket. Now n customers are waiting outside in queue. Nephren wants to know how many possible queues are there that they are able to run smoothly ( i. e. every customer can receive his/ her change) , and that the number of 50- yuan notes they have after selling tickets to all these customers is between l and r, inclusive. Two queues are considered different if there exists a customer whose type is different in two queues. As the number can be large, please output the answer modulo p.",
    "input": "One line containing four integers n ( 1 \u2264 n \u2264 105) , p ( 1 \u2264 p \u2264 2\u00b7109) , l and r ( 0 \u2264 l \u2264 r \u2264 n) .",
    "output": "One line indicating the answer modulo p.",
    "note": "We use A, B and C to indicate customers with 50- yuan notes, customers with 100- yuan notes and customers with VIP cards respectively. For the first sample, the different possible queues that there are 2 50- yuan notes left are AAAB, AABA, ABAA, AACC, ACAC, ACCA, CAAC, CACA and CCAA, and the different possible queues that there are 3 50- yuan notes left are AAAC, AACA, ACAA and CAAA. So there are 13 different queues satisfying the first sample. Similarly, there are 35 different queues satisfying the second sample.",
    "topics": [
      "chinese remainder theorem",
      "combinatorics",
      "math",
      "number theory"
    ],
    "id": "896D"
  },
  {
    "title": "String Mark",
    "url": "https://codeforces.com/problemset/problem/895/D",
    "history": "At the Byteland State University marks are strings of the same length. Mark x is considered better than y if string y is lexicographically smaller than x. Recently at the BSU was an important test work on which Vasya recived the mark a. It is very hard for the teacher to remember the exact mark of every student, but he knows the mark b, such that every student recieved mark strictly smaller than b. Vasya isn' t satisfied with his mark so he decided to improve it. He can swap characters in the string corresponding to his mark as many times as he like. Now he want to know only the number of different ways to improve his mark so that his teacher didn' t notice something suspicious. More formally: you are given two strings a, b of the same length and you need to figure out the number of different strings c such that: 1) c can be obtained from a by swapping some characters, in other words c is a permutation of a. 2) String a is lexicographically smaller than c. 3) String c is lexicographically smaller than b. For two strings x and y of the same length it is true that x is lexicographically smaller than y if there exists such i, that x1 = y1, x2 = y2, . . . , xi - 1 = yi - 1, xi < yi. Since the answer can be very large, you need to find answer modulo 109 + 7.",
    "input": "First line contains string a, second line contains string b. Strings a, b consist of lowercase English letters. Their lengths are equal and don' t exceed 106. It is guaranteed that a is lexicographically smaller than b.",
    "output": "Print one integer \u2014 the number of different strings satisfying the condition of the problem modulo 109 + 7.",
    "note": "In first sample from string abc can be obtained strings acb, bac, bca, cab, cba, all of them are larger than abc, but smaller than ddd. So the answer is 5. In second sample any string obtained from abcdef is larger than abcdeg. So the answer is 0.",
    "topics": [
      "combinatorics",
      "math",
      "strings"
    ],
    "id": "895D"
  },
  {
    "title": "Square Subsets",
    "url": "https://codeforces.com/problemset/problem/895/C",
    "history": "Petya was late for the lesson too. The teacher gave him an additional task. For some array a Petya should find the number of different ways to select non- empty subset of elements from it in such a way that their product is equal to a square of some integer. Two ways are considered different if sets of indexes of elements chosen by these ways are different. Since the answer can be very large, you should find the answer modulo 109 + 7.",
    "input": "First line contains one integer n ( 1 \u2264 n \u2264 105) \u2014 the number of elements in the array. Second line contains n integers ai ( 1 \u2264 ai \u2264 70) \u2014 the elements of the array.",
    "output": "Print one integer \u2014 the number of different ways to choose some elements so that their product is a square of a certain integer modulo 109 + 7.",
    "note": "In first sample product of elements chosen by any way is 1 and 1 = 12. So the answer is 24 - 1 = 15. In second sample there are six different ways to choose elements so that their product is 4, and only one way so that their product is 16. So the answer is 6 + 1 = 7.",
    "topics": [
      "bitmasks",
      "combinatorics",
      "dp",
      "math"
    ],
    "id": "895C"
  },
  {
    "title": "XK Segments",
    "url": "https://codeforces.com/problemset/problem/895/B",
    "history": "While Vasya finished eating his piece of pizza, the lesson has already started. For being late for the lesson, the teacher suggested Vasya to solve one interesting problem. Vasya has an array a and integer x. He should find the number of different ordered pairs of indexes ( i, j) such that ai \u2264 aj and there are exactly k integers y such that ai \u2264 y \u2264 aj and y is divisible by x. In this problem it is meant that pair ( i, j) is equal to ( j, i) only if i is equal to j. For example pair ( 1, 2) is not the same as ( 2, 1) .",
    "input": "The first line contains 3 integers n, x, k ( 1 \u2264 n \u2264 105, 1 \u2264 x \u2264 109, 0 \u2264 k \u2264 109) , where n is the size of the array a and x and k are numbers from the statement. The second line contains n integers ai ( 1 \u2264 ai \u2264 109) \u2014 the elements of the array a.",
    "output": "Print one integer \u2014 the answer to the problem.",
    "note": "In first sample there are only three suitable pairs of indexes \u2014 ( 1, 2) , ( 2, 3) , ( 3, 4) . In second sample there are four suitable pairs of indexes( 1, 1) , ( 2, 2) , ( 3, 3) , ( 4, 4) . In third sample every pair ( i, j) is suitable, so the answer is 5 * 5 = 25.",
    "topics": [
      "binary search",
      "math",
      "sortings",
      "two pointers"
    ],
    "id": "895B"
  },
  {
    "title": "Marco and GCD Sequence",
    "url": "https://codeforces.com/problemset/problem/894/C",
    "history": "In a dream Marco met an elderly man with a pair of black glasses. The man told him the key to immortality and then disappeared with the wind of time. When he woke up, he only remembered that the key was a sequence of positive integers of some length n, but forgot the exact sequence. Let the elements of the sequence be a1, a2, . . . , an. He remembered that he calculated gcd( ai, ai + 1, . . . , aj) for every 1 \u2264 i \u2264 j \u2264 n and put it into a set S. gcd here means the greatest common divisor. Note that even if a number is put into the set S twice or more, it only appears once in the set. Now Marco gives you the set S and asks you to help him figure out the initial sequence. If there are many solutions, print any of them. It is also possible that there are no sequences that produce the set S, in this case print - 1.",
    "input": "The first line contains a single integer m ( 1 \u2264 m \u2264 1000) \u2014 the size of the set S. The second line contains m integers s1, s2, . . . , sm ( 1 \u2264 si \u2264 106) \u2014 the elements of the set S. It' s guaranteed that the elements of the set are given in strictly increasing order, that means s1 < s2 < . . . < sm.",
    "output": "If there is no solution, print a single line containing - 1. Otherwise, in the first line print a single integer n denoting the length of the sequence, n should not exceed 4000. In the second line print n integers a1, a2, . . . , an ( 1 \u2264 ai \u2264 106) \u2014 the sequence. We can show that if a solution exists, then there is a solution with n not exceeding 4000 and ai not exceeding 106. If there are multiple solutions, print any of them.",
    "note": "In the first example 2 = gcd( 4, 6) , the other elements from the set appear in the sequence, and we can show that there are no values different from 2, 4, 6 and 12 among gcd( ai, ai + 1, . . . , aj) for every 1 \u2264 i \u2264 j \u2264 n.",
    "topics": [
      "constructive algorithms",
      "math"
    ],
    "id": "894C"
  },
  {
    "title": "Ralph And His Magic Field",
    "url": "https://codeforces.com/problemset/problem/894/B",
    "history": "Ralph has a magic field which is divided into n \u00d7 m blocks. That is to say, there are n rows and m columns on the field. Ralph can put an integer in each block. However, the magic field doesn' t always work properly. It works only if the product of integers in each row and each column equals to k, where k is either 1 or - 1. Now Ralph wants you to figure out the number of ways to put numbers in each block in such a way that the magic field works properly. Two ways are considered different if and only if there exists at least one block where the numbers in the first way and in the second way are different. You are asked to output the answer modulo 1000000007 = 109 + 7. Note that there is no range of the numbers to put in the blocks, but we can prove that the answer is not infinity.",
    "input": "The only line contains three integers n, m and k ( 1 \u2264 n, m \u2264 1018, k is either 1 or - 1) .",
    "output": "Print a single number denoting the answer modulo 1000000007.",
    "note": "In the first example the only way is to put - 1 into the only block. In the second example the only way is to put 1 into every block.",
    "topics": [
      "combinatorics",
      "constructive algorithms",
      "math",
      "number theory"
    ],
    "id": "894B"
  },
  {
    "title": "Counting Arrays",
    "url": "https://codeforces.com/problemset/problem/893/E",
    "history": "You are given two positive integer numbers x and y. An array F is called an y- factorization of x iff the following conditions are met: There are y elements in F, and all of them are integer numbers; . You have to count the number of pairwise distinct arrays that are y- factorizations of x. Two arrays A and B are considered different iff there exists at least one index i ( 1 \u2264 i \u2264 y) such that Ai = \u0338 Bi. Since the answer can be very large, print it modulo 109 + 7.",
    "input": "The first line contains one integer q ( 1 \u2264 q \u2264 105) \u2014 the number of testcases to solve. Then q lines follow, each containing two integers xi and yi ( 1 \u2264 xi, yi \u2264 106) . Each of these lines represents a testcase.",
    "output": "Print q integers. i- th integer has to be equal to the number of yi- factorizations of xi modulo 109 + 7.",
    "note": "In the second testcase of the example there are six y- factorizations: - 4, - 1; - 2, - 2; - 1, - 4; 1, 4; 2, 2; 4, 1.",
    "topics": [
      "combinatorics",
      "dp",
      "math",
      "number theory"
    ],
    "id": "893E"
  },
  {
    "title": "Lust",
    "url": "https://codeforces.com/problemset/problem/891/E",
    "history": "A false witness that speaketh lies! You are given a sequence containing n integers. There is a variable res that is equal to 0 initially. The following process repeats k times. Choose an index from 1 to n uniformly at random. Name it x. Add to res the multiply of all ai' s such that 1 \u2264 i \u2264 n, but i = \u0338 x. Then, subtract ax by 1. You have to find expected value of res at the end of the process. It can be proved that the expected value of res can be represented as an irreducible fraction . You have to find .",
    "input": "The first line contains two integers n and k ( 1 \u2264 n \u2264 5000, 1 \u2264 k \u2264 109) \u2014 the number of elements and parameter k that is specified in the statement. The second line contains n space separated integers a1, a2, . . . , an ( 0 \u2264 ai \u2264 109) .",
    "output": "Output a single integer \u2014 the value .",
    "note": "",
    "topics": [
      "combinatorics",
      "math",
      "matrices"
    ],
    "id": "891E"
  },
  {
    "title": "Pride",
    "url": "https://codeforces.com/problemset/problem/891/A",
    "history": "You have an array a with length n, you can perform operations. Each operation is like this: choose two adjacent elements from a, say x and y, and replace one of them with gcd( x, y) , where gcd denotes the greatest common divisor. What is the minimum number of operations you need to make all of the elements equal to 1?",
    "input": "The first line of the input contains one integer n ( 1 \u2264 n \u2264 2000) \u2014 the number of elements in the array. The second line contains n space separated integers a1, a2, . . . , an ( 1 \u2264 ai \u2264 109) \u2014 the elements of the array.",
    "output": "Print - 1, if it is impossible to turn all numbers to 1. Otherwise, print the minimum number of operations needed to make all numbers equal to 1.",
    "note": "In the first sample you can turn all numbers to 1 using the following 5 moves: [ 2, 2, 3, 4, 6] . [ 2, 1, 3, 4, 6] [ 2, 1, 3, 1, 6] [ 2, 1, 1, 1, 6] [ 1, 1, 1, 1, 6] [ 1, 1, 1, 1, 1] We can prove that in this case it is not possible to make all numbers one using less than 5 moves.",
    "topics": [
      "brute force",
      "dp",
      "greedy",
      "math",
      "number theory"
    ],
    "id": "891A"
  },
  {
    "title": "Mod Mod Mod",
    "url": "https://codeforces.com/problemset/problem/889/E",
    "history": "You are given a sequence of integers a1, a2, . . . , an. Let , and for 1 \u2264 i < n. Here, denotes the modulus operation. Find the maximum value of f( x, 1) over all nonnegative integers x.",
    "input": "The first line contains a single integer n ( 1 \u2264 n \u2264 200000) \u2014 the length of the sequence. The second lines contains n integers a1, a2, . . . , an ( 1 \u2264 ai \u2264 1013) \u2014 the elements of the sequence.",
    "output": "Output a single integer \u2014 the maximum value of f( x, 1) over all nonnegative integers x.",
    "note": "In the first example you can choose, for example, x = 19. In the second example you can choose, for example, x = 3 or x = 2.",
    "topics": [
      "binary search",
      "dp",
      "math"
    ],
    "id": "889E"
  },
  {
    "title": "Almost Identity Permutations",
    "url": "https://codeforces.com/problemset/problem/888/D",
    "history": "A permutation p of size n is an array such that every integer from 1 to n occurs exactly once in this array. Let' s call a permutation an almost identity permutation iff there exist at least n - k indices i ( 1 \u2264 i \u2264 n) such that pi = i. Your task is to count the number of almost identity permutations for given numbers n and k.",
    "input": "The first line contains two integers n and k ( 4 \u2264 n \u2264 1000, 1 \u2264 k \u2264 4) .",
    "output": "Print the number of almost identity permutations for given n and k.",
    "note": "",
    "topics": [
      "combinatorics",
      "dp",
      "math"
    ],
    "id": "888D"
  },
  {
    "title": "Maximum Element",
    "url": "https://codeforces.com/problemset/problem/886/E",
    "history": "One day Petya was solving a very interesting problem. But although he used many optimization techniques, his solution still got Time limit exceeded verdict. Petya conducted a thorough analysis of his program and found out that his function for finding maximum element in an array of n positive integers was too slow. Desperate, Petya decided to use a somewhat unexpected optimization using parameter k, so now his function contains the following code: int fast_ max( int n, int a[ ] ) int ans = 0; int offset = 0; for ( int i = 0; i < n; + + i) if ( ans < a[ i] ) ans = a[ i] ; offset = 0; else offset = offset + 1; if ( offset = = k) return ans; return ans; That way the function iteratively checks array elements, storing the intermediate maximum, and if after k consecutive iterations that maximum has not changed, it is returned as the answer. Now Petya is interested in fault rate of his function. He asked you to find the number of permutations of integers from 1 to n such that the return value of his function on those permutations is not equal to n. Since this number could be very big, output the answer modulo 109 + 7.",
    "input": "The only line contains two integers n and k ( 1 \u2264 n, k \u2264 106) , separated by a space \u2014 the length of the permutations and the parameter k.",
    "output": "Output the answer to the problem modulo 109 + 7.",
    "note": "Permutations from second example: [ 4, 1, 2, 3, 5] , [ 4, 1, 3, 2, 5] , [ 4, 2, 1, 3, 5] , [ 4, 2, 3, 1, 5] , [ 4, 3, 1, 2, 5] , [ 4, 3, 2, 1, 5] .",
    "topics": [
      "combinatorics",
      "dp",
      "math"
    ],
    "id": "886E"
  },
  {
    "title": "Bertown Subway",
    "url": "https://codeforces.com/problemset/problem/884/C",
    "history": "The construction of subway in Bertown is almost finished! The President of Berland will visit this city soon to look at the new subway himself. There are n stations in the subway. It was built according to the Bertown Transport Law: For each station i there exists exactly one train that goes from this station. Its destination station is pi, possibly pi = i; For each station i there exists exactly one station j such that pj = i. The President will consider the convenience of subway after visiting it. The convenience is the number of ordered pairs ( x, y) such that person can start at station x and, after taking some subway trains ( possibly zero) , arrive at station y ( 1 \u2264 x, y \u2264 n) . The mayor of Bertown thinks that if the subway is not convenient enough, then the President might consider installing a new mayor ( and, of course, the current mayor doesn' t want it to happen) . Before President visits the city mayor has enough time to rebuild some paths of subway, thus changing the values of pi for not more than two subway stations. Of course, breaking the Bertown Transport Law is really bad, so the subway must be built according to the Law even after changes. The mayor wants to do these changes in such a way that the convenience of the subway is maximized. Help him to calculate the maximum possible convenience he can get!",
    "input": "The first line contains one integer number n ( 1 \u2264 n \u2264 100000) \u2014 the number of stations. The second line contains n integer numbers p1, p2, . . . , pn ( 1 \u2264 pi \u2264 n) \u2014 the current structure of the subway. All these numbers are distinct.",
    "output": "Print one number \u2014 the maximum possible value of convenience.",
    "note": "In the first example the mayor can change p2 to 3 and p3 to 1, so there will be 9 pairs: ( 1, 1) , ( 1, 2) , ( 1, 3) , ( 2, 1) , ( 2, 2) , ( 2, 3) , ( 3, 1) , ( 3, 2) , ( 3, 3) . In the second example the mayor can change p2 to 4 and p3 to 5.",
    "topics": [
      "dfs and similar",
      "greedy",
      "math"
    ],
    "id": "884C"
  },
  {
    "title": "Quadcopter Competition",
    "url": "https://codeforces.com/problemset/problem/883/M",
    "history": "Polycarp takes part in a quadcopter competition. According to the rules a flying robot should: start the race from some point of a field, go around the flag, close cycle returning back to the starting point. Polycarp knows the coordinates of the starting point ( x1, y1) and the coordinates of the point where the flag is situated ( x2, y2) . Polycarp\u2019s quadcopter can fly only parallel to the sides of the field each tick changing exactly one coordinate by 1. It means that in one tick the quadcopter can fly from the point ( x, y) to any of four points: ( x - 1, y) , ( x + 1, y) , ( x, y - 1) or ( x, y + 1) . Thus the quadcopter path is a closed cycle starting and finishing in ( x1, y1) and containing the point ( x2, y2) strictly inside. The picture corresponds to the first example: the starting ( and finishing) point is in ( 1, 5) and the flag is in ( 5, 2) . What is the minimal length of the quadcopter path?",
    "input": "The first line contains two integer numbers x1 and y1 ( - 100 \u2264 x1, y1 \u2264 100) \u2014 coordinates of the quadcopter starting ( and finishing) point. The second line contains two integer numbers x2 and y2 ( - 100 \u2264 x2, y2 \u2264 100) \u2014 coordinates of the flag. It is guaranteed that the quadcopter starting point and the flag do not coincide.",
    "output": "Print the length of minimal path of the quadcopter to surround the flag and return back.",
    "note": "",
    "topics": [
      "greedy",
      "math"
    ],
    "id": "883M"
  },
  {
    "title": "Packmen Strike Back",
    "url": "https://codeforces.com/problemset/problem/883/D",
    "history": "Game field is represented by a line of n square cells. In some cells there are packmen, in some cells there are asterisks and the rest of the cells are empty. Packmen eat asterisks. Before the game starts you can choose a movement direction, left or right, for each packman. Once the game begins all the packmen simultaneously start moving according their directions. A packman can' t change the given direction. Once a packman enters a cell containing an asterisk, packman immediately eats the asterisk. Once the packman leaves the cell it becomes empty. Each packman moves at speed 1 cell per second. If a packman enters a border cell, the packman stops. Packmen do not interfere with the movement of other packmen; in one cell there can be any number of packmen moving in any directions. Your task is to assign a direction to each packman so that they eat the maximal number of asterisks. If there are multiple ways to assign directions to eat the maximal number of asterisks, you should choose the way which minimizes the time to do that.",
    "input": "The first line contains integer number n ( 2 \u2264 n \u2264 1 000 000) \u2014 the number of cells in the game field. The second line contains n characters. If the i- th character is ' . ' , the i- th cell is empty. If the i- th character is ' * ' , the i- th cell contains an asterisk. If the i- th character is ' P' , the i- th cell contains a packman. The field contains at least one asterisk and at least one packman.",
    "output": "Print two integer numbers \u2014 the maximal number of asterisks packmen can eat and the minimal time to do it.",
    "note": "In the first example the leftmost packman should move to the right, the rightmost packman should move to the left. All the asterisks will be eaten, the last asterisk will be eaten after 4 seconds.",
    "topics": [
      "binary search",
      "dp",
      "math"
    ],
    "id": "883D"
  },
  {
    "title": "Divisiblity of Differences",
    "url": "https://codeforces.com/problemset/problem/876/B",
    "history": "You are given a multiset of n integers. You should select exactly k of them in a such way that the difference between any two of them is divisible by m, or tell that it is impossible. Numbers can be repeated in the original multiset and in the multiset of selected numbers, but number of occurrences of any number in multiset of selected numbers should not exceed the number of its occurrences in the original multiset.",
    "input": "First line contains three integers n, k and m ( 2 \u2264 k \u2264 n \u2264 100 000, 1 \u2264 m \u2264 100 000) \u2014 number of integers in the multiset, number of integers you should select and the required divisor of any pair of selected integers. Second line contains n integers a1, a2, . . . , an ( 0 \u2264 ai \u2264 109) \u2014 the numbers in the multiset.",
    "output": "If it is not possible to select k numbers in the desired way, output \u00abNo\u00bb ( without the quotes) . Otherwise, in the first line of output print \u00abYes\u00bb ( without the quotes) . In the second line print k integers b1, b2, . . . , bk \u2014 the selected numbers. If there are multiple possible solutions, print any of them.",
    "note": "",
    "topics": [
      "implementation",
      "math",
      "number theory"
    ],
    "id": "876B"
  },
  {
    "title": "Trip For Meal",
    "url": "https://codeforces.com/problemset/problem/876/A",
    "history": "Winnie- the- Pooh likes honey very much! That is why he decided to visit his friends. Winnie has got three best friends: Rabbit, Owl and Eeyore, each of them lives in his own house. There are winding paths between each pair of houses. The length of a path between Rabbit' s and Owl' s houses is a meters, between Rabbit' s and Eeyore' s house is b meters, between Owl' s and Eeyore' s house is c meters. For enjoying his life and singing merry songs Winnie- the- Pooh should have a meal n times a day. Now he is in the Rabbit' s house and has a meal for the first time. Each time when in the friend' s house where Winnie is now the supply of honey is about to end, Winnie leaves that house. If Winnie has not had a meal the required amount of times, he comes out from the house and goes to someone else of his two friends. For this he chooses one of two adjacent paths, arrives to the house on the other end and visits his friend. You may assume that when Winnie is eating in one of his friend' s house, the supply of honey in other friend' s houses recover ( most probably, they go to the supply store) . Winnie- the- Pooh does not like physical activity. He wants to have a meal n times, traveling minimum possible distance. Help him to find this distance.",
    "input": "First line contains an integer n ( 1 \u2264 n \u2264 100) \u2014 number of visits. Second line contains an integer a ( 1 \u2264 a \u2264 100) \u2014 distance between Rabbit' s and Owl' s houses. Third line contains an integer b ( 1 \u2264 b \u2264 100) \u2014 distance between Rabbit' s and Eeyore' s houses. Fourth line contains an integer c ( 1 \u2264 c \u2264 100) \u2014 distance between Owl' s and Eeyore' s houses.",
    "output": "Output one number \u2014 minimum distance in meters Winnie must go through to have a meal n times.",
    "note": "In the first test case the optimal path for Winnie is the following: first have a meal in Rabbit' s house, then in Owl' s house, then in Eeyore' s house. Thus he will pass the distance 2 + 1 = 3. In the second test case Winnie has a meal in Rabbit' s house and that is for him. So he doesn' t have to walk anywhere at all.",
    "topics": [
      "math"
    ],
    "id": "876A"
  },
  {
    "title": "Classroom Watch",
    "url": "https://codeforces.com/problemset/problem/875/A",
    "history": "Eighth- grader Vova is on duty today in the class. After classes, he went into the office to wash the board, and found on it the number n. He asked what is this number and the teacher of mathematics Inna Petrovna answered Vova that n is the answer to the arithmetic task for first- graders. In the textbook, a certain positive integer x was given. The task was to add x to the sum of the digits of the number x written in decimal numeral system. Since the number n on the board was small, Vova quickly guessed which x could be in the textbook. Now he wants to get a program which will search for arbitrary values of the number n for all suitable values of x or determine that such x does not exist. Write such a program for Vova.",
    "input": "The first line contains integer n ( 1 \u2264 n \u2264 109) .",
    "output": "In the first line print one integer k \u2014 number of different values of x satisfying the condition. In next k lines print these values in ascending order.",
    "note": "In the first test case x = 15 there is only one variant: 15 + 1 + 5 = 21. In the second test case there are no such x.",
    "topics": [
      "brute force",
      "math"
    ],
    "id": "875A"
  },
  {
    "title": "Maximum splitting",
    "url": "https://codeforces.com/problemset/problem/870/C",
    "history": "You are given several queries. In the i- th query you are given a single positive integer ni. You are to represent ni as a sum of maximum possible number of composite summands and print this maximum number, or print - 1, if there are no such splittings. An integer greater than 1 is composite, if it is not prime, i. e. if it has positive divisors not equal to 1 and the integer itself.",
    "input": "The first line contains single integer q ( 1 \u2264 q \u2264 105) \u2014 the number of queries. q lines follow. The ( i + 1) - th line contains single integer ni ( 1 \u2264 ni \u2264 109) \u2014 the i- th query.",
    "output": "For each query print the maximum possible number of summands in a valid splitting to composite summands, or - 1, if there are no such splittings.",
    "note": "12 = 4 + 4 + 4 = 4 + 8 = 6 + 6 = 12, but the first splitting has the maximum possible number of summands. 8 = 4 + 4, 6 can' t be split into several composite summands. 1, 2, 3 are less than any composite number, so they do not have valid splittings.",
    "topics": [
      "dp",
      "greedy",
      "math",
      "number theory"
    ],
    "id": "870C"
  },
  {
    "title": "The Intriguing Obsession",
    "url": "https://codeforces.com/problemset/problem/869/C",
    "history": "\u2014 This is not playing but duty as allies of justice, Nii- chan! \u2014 Not allies but justice itself, Onii- chan! With hands joined, go everywhere at a speed faster than our thoughts! This time, the Fire Sisters \u2014 Karen and Tsukihi \u2014 is heading for somewhere they' ve never reached \u2014 water- surrounded islands! There are three clusters of islands, conveniently coloured red, blue and purple. The clusters consist of a, b and c distinct islands respectively. Bridges have been built between some ( possibly all or none) of the islands. A bridge bidirectionally connects two different islands and has length 1. For any two islands of the same colour, either they shouldn' t be reached from each other through bridges, or the shortest distance between them is at least 3, apparently in order to prevent oddities from spreading quickly inside a cluster. The Fire Sisters are ready for the unknown, but they' d also like to test your courage. And you' re here to figure out the number of different ways to build all bridges under the constraints, and give the answer modulo 998 244 353. Two ways are considered different if a pair of islands exist, such that there' s a bridge between them in one of them, but not in the other.",
    "input": "The first and only line of input contains three space- separated integers a, b and c ( 1 \u2264 a, b, c \u2264 5 000) \u2014 the number of islands in the red, blue and purple clusters, respectively.",
    "output": "Output one line containing an integer \u2014 the number of different ways to build bridges, modulo 998 244 353.",
    "note": "In the first example, there are 3 bridges that can possibly be built, and no setup of bridges violates the restrictions. Thus the answer is 23 = 8. In the second example, the upper two structures in the figure below are instances of valid ones, while the lower two are invalid due to the blue and purple clusters, respectively.",
    "topics": [
      "combinatorics",
      "dp",
      "math"
    ],
    "id": "869C"
  },
  {
    "title": "The Eternal Immortality",
    "url": "https://codeforces.com/problemset/problem/869/B",
    "history": "Even if the world is full of counterfeits, I still regard it as wonderful. Pile up herbs and incense, and arise again from the flames and ashes of its predecessor \u2014 as is known to many, the phoenix does it like this. The phoenix has a rather long lifespan, and reincarnates itself once every a! years. Here a! denotes the factorial of integer a, that is, a! = 1 \u00d7 2 \u00d7 . . . \u00d7 a. Specifically, 0! = 1. Koyomi doesn' t care much about this, but before he gets into another mess with oddities, he is interested in the number of times the phoenix will reincarnate in a timespan of b! years, that is, . Note that when b \u2265 a this value is always integer. As the answer can be quite large, it would be enough for Koyomi just to know the last digit of the answer in decimal representation. And you' re here to provide Koyomi with this knowledge.",
    "input": "The first and only line of input contains two space- separated integers a and b ( 0 \u2264 a \u2264 b \u2264 1018) .",
    "output": "Output one line containing a single decimal digit \u2014 the last digit of the value that interests Koyomi.",
    "note": "In the first example, the last digit of is 2; In the second example, the last digit of is 0; In the third example, the last digit of is 2.",
    "topics": [
      "math"
    ],
    "id": "869B"
  },
  {
    "title": "El Toll Caves",
    "url": "https://codeforces.com/problemset/problem/868/G",
    "history": "The prehistoric caves of El Toll are located in Moia\u0300 ( Barcelona) . You have heard that there is a treasure hidden in one of n possible spots in the caves. You assume that each of the spots has probability 1 / n to contain a treasure. You cannot get into the caves yourself, so you have constructed a robot that can search the caves for treasure. Each day you can instruct the robot to visit exactly k distinct spots in the caves. If none of these spots contain treasure, then the robot will obviously return with empty hands. However, the caves are dark, and the robot may miss the treasure even when visiting the right spot. Formally, if one of the visited spots does contain a treasure, the robot will obtain it with probability 1 / 2, otherwise it will return empty. Each time the robot searches the spot with the treasure, his success probability is independent of all previous tries ( that is, the probability to miss the treasure after searching the right spot x times is 1 / 2x) . What is the expected number of days it will take to obtain the treasure if you choose optimal scheduling for the robot? Output the answer as a rational number modulo 109 + 7. Formally, let the answer be an irreducible fraction P / Q, then you have to output . It is guaranteed that Q is not divisible by 109 + 7.",
    "input": "The first line contains the number of test cases T ( 1 \u2264 T \u2264 1000) . Each of the next T lines contains two integers n and k ( 1 \u2264 k \u2264 n \u2264 5\u00b7108) .",
    "output": "For each test case output the answer in a separate line.",
    "note": "In the first case the robot will repeatedly search in the only spot. The expected number of days in this case is 2. Note that in spite of the fact that we know the treasure spot from the start, the robot still has to search there until he succesfully recovers the treasure. In the second case the answer can be shown to be equal to 7 / 2 if we search the two spots alternatively. In the third case the answer is 25 / 9.",
    "topics": [
      "math"
    ],
    "id": "868G"
  },
  {
    "title": "Flowers and Chocolate",
    "url": "https://codeforces.com/problemset/problem/865/G",
    "history": "It' s Piegirl' s birthday soon, and Pieguy has decided to buy her a bouquet of flowers and a basket of chocolates. The flower shop has F different types of flowers available. The i- th type of flower always has exactly pi petals. Pieguy has decided to buy a bouquet consisting of exactly N flowers. He may buy the same type of flower multiple times. The N flowers are then arranged into a bouquet. The position of the flowers within a bouquet matters. You can think of a bouquet as an ordered list of flower types. The chocolate shop sells chocolates in boxes. There are B different types of boxes available. The i- th type of box contains ci pieces of chocolate. Pieguy can buy any number of boxes, and can buy the same type of box multiple times. He will then place these boxes into a basket. The position of the boxes within the basket matters. You can think of the basket as an ordered list of box types. Pieguy knows that Piegirl likes to pluck a petal from a flower before eating each piece of chocolate. He would like to ensure that she eats the last piece of chocolate from the last box just after plucking the last petal from the last flower. That is, the total number of petals on all the flowers in the bouquet should equal the total number of pieces of chocolate in all the boxes in the basket. How many different bouquet+ basket combinations can Pieguy buy? The answer may be very large, so compute it modulo 1000000007 = 109 + 7.",
    "input": "The first line of input will contain integers F, B, and N ( 1 \u2264 F \u2264 10, 1 \u2264 B \u2264 100, 1 \u2264 N \u2264 1018) , the number of types of flowers, the number of types of boxes, and the number of flowers that must go into the bouquet, respectively. The second line of input will contain F integers p1, p2, . . . , pF ( 1 \u2264 pi \u2264 109) , the numbers of petals on each of the flower types. The third line of input will contain B integers c1, c2, . . . , cB ( 1 \u2264 ci \u2264 250) , the number of pieces of chocolate in each of the box types.",
    "output": "Print the number of bouquet+ basket combinations Pieguy can buy, modulo 1000000007 = 109 + 7.",
    "note": "In the first example, there is 1 way to make a bouquet with 9 petals ( 3 + 3 + 3) , and 1 way to make a basket with 9 pieces of chocolate ( 3 + 3 + 3) , for 1 possible combination. There are 3 ways to make a bouquet with 13 petals ( 3 + 5 + 5, 5 + 3 + 5, 5 + 5 + 3) , and 5 ways to make a basket with 13 pieces of chocolate ( 3 + 10, 10 + 3, 3 + 3 + 7, 3 + 7 + 3, 7 + 3 + 3) , for 15 more combinations. Finally there is 1 way to make a bouquet with 15 petals ( 5 + 5 + 5) and 1 way to make a basket with 15 pieces of chocolate ( 3 + 3 + 3 + 3 + 3) , for 1 more combination. Note that it is possible for multiple types of flowers to have the same number of petals. Such types are still considered different. Similarly different types of boxes may contain the same number of pieces of chocolate, but are still considered different.",
    "topics": [
      "combinatorics",
      "math",
      "matrices"
    ],
    "id": "865G"
  },
  {
    "title": "Egg Roulette",
    "url": "https://codeforces.com/problemset/problem/865/F",
    "history": "The game of Egg Roulette is played between two players. Initially 2R raw eggs and 2C cooked eggs are placed randomly into a carton. The shells are left on so there is no way to distinguish a raw egg from a cooked egg. One at a time, a player will select an egg, and then smash the egg on his/ her forehead. If the egg was cooked, not much happens, but if the egg was raw, it will make quite the mess. This continues until one player has broken R raw eggs, at which point that player is declared the loser and the other player wins. The order in which players take turns can be described as a string of ' A' and ' B' characters, where the i- th character tells which player should choose the i- th egg. Traditionally, players take turns going one after the other. That is, they follow the ordering \" ABABAB. . . \" . This isn' t very fair though, because the second player will win more often than the first. We' d like you to find a better ordering for the players to take their turns. Let' s define the unfairness of an ordering as the absolute difference between the first player' s win probability and the second player' s win probability. We' re interested in orderings that minimize the unfairness. We only consider an ordering valid if it contains the same number of ' A' s as ' B' s. You will also be given a string S of length 2( R + C) containing only ' A' , ' B' , and ' ? ' characters. An ordering is said to match S if it only differs from S in positions where S contains a ' ? ' . Of the valid orderings that minimize unfairness, how many match S?",
    "input": "The first line of input will contain integers R and C ( 1 \u2264 R, C \u2264 20, R + C \u2264 30) . The second line of input will contain the string S of length 2( R + C) consisting only of characters ' A' , ' B' , ' ? ' .",
    "output": "Print the number of valid orderings that minimize unfairness and match S.",
    "note": "In the first test case, the minimum unfairness is 0, and the orderings that achieve it are \" ABBA\" and \" BAAB\" , neither of which match S. Note that an ordering such as \" ABBB\" would also have an unfairness of 0, but is invalid because it does not contain the same number of ' A' s as ' B' s. In the second example, the only matching ordering is \" BBAAABABABBA\" .",
    "topics": [
      "bitmasks",
      "brute force",
      "divide and conquer",
      "math",
      "meet-in-the-middle"
    ],
    "id": "865F"
  },
  {
    "title": "Make a Permutation!",
    "url": "https://codeforces.com/problemset/problem/864/D",
    "history": "Ivan has an array consisting of n elements. Each of the elements is an integer from 1 to n. Recently Ivan learned about permutations and their lexicographical order. Now he wants to change ( replace) minimum number of elements in his array in such a way that his array becomes a permutation ( i. e. each of the integers from 1 to n was encountered in his array exactly once) . If there are multiple ways to do it he wants to find the lexicographically minimal permutation among them. Thus minimizing the number of changes has the first priority, lexicographical minimizing has the second priority. In order to determine which of the two permutations is lexicographically smaller, we compare their first elements. If they are equal \u2014 compare the second, and so on. If we have two permutations x and y, then x is lexicographically smaller if xi < yi, where i is the first index in which the permutations x and y differ. Determine the array Ivan will obtain after performing all the changes.",
    "input": "The first line contains an single integer n ( 2 \u2264 n \u2264 200 000) \u2014 the number of elements in Ivan' s array. The second line contains a sequence of integers a1, a2, . . . , an ( 1 \u2264 ai \u2264 n) \u2014 the description of Ivan' s array.",
    "output": "In the first line print q \u2014 the minimum number of elements that need to be changed in Ivan' s array in order to make his array a permutation. In the second line, print the lexicographically minimal permutation which can be obtained from array with q changes.",
    "note": "In the first example Ivan needs to replace number three in position 1 with number one, and number two in position 3 with number four. Then he will get a permutation [ 1, 2, 4, 3] with only two changed numbers \u2014 this permutation is lexicographically minimal among all suitable. In the second example Ivan does not need to change anything because his array already is a permutation.",
    "topics": [
      "greedy",
      "implementation",
      "math"
    ],
    "id": "864D"
  },
  {
    "title": "Bus",
    "url": "https://codeforces.com/problemset/problem/864/C",
    "history": "A bus moves along the coordinate line Ox from the point x = 0 to the point x = a. After starting from the point x = 0, it reaches the point x = a, immediately turns back and then moves to the point x = 0. After returning to the point x = 0 it immediately goes back to the point x = a and so on. Thus, the bus moves from x = 0 to x = a and back. Moving from the point x = 0 to x = a or from the point x = a to x = 0 is called a bus journey. In total, the bus must make k journeys. The petrol tank of the bus can hold b liters of gasoline. To pass a single unit of distance the bus needs to spend exactly one liter of gasoline. The bus starts its first journey with a full petrol tank. There is a gas station in point x = f. This point is between points x = 0 and x = a. There are no other gas stations on the bus route. While passing by a gas station in either direction the bus can stop and completely refuel its tank. Thus, after stopping to refuel the tank will contain b liters of gasoline. What is the minimum number of times the bus needs to refuel at the point x = f to make k journeys? The first journey starts in the point x = 0.",
    "input": "The first line contains four integers a, b, f, k ( 0 < f < a \u2264 106, 1 \u2264 b \u2264 109, 1 \u2264 k \u2264 104) \u2014 the endpoint of the first bus journey, the capacity of the fuel tank of the bus, the point where the gas station is located, and the required number of journeys.",
    "output": "Print the minimum number of times the bus needs to refuel to make k journeys. If it is impossible for the bus to make k journeys, print - 1.",
    "note": "In the first example the bus needs to refuel during each journey. In the second example the bus can pass 10 units of distance without refueling. So the bus makes the whole first journey, passes 4 units of the distance of the second journey and arrives at the point with the gas station. Then it can refuel its tank, finish the second journey and pass 2 units of distance from the third journey. In this case, it will again arrive at the point with the gas station. Further, he can refill the tank up to 10 liters to finish the third journey and ride all the way of the fourth journey. At the end of the journey the tank will be empty. In the third example the bus can not make all 3 journeys because if it refuels during the second journey, the tanks will contain only 5 liters of gasoline, but the bus needs to pass 8 units of distance until next refueling.",
    "topics": [
      "greedy",
      "implementation",
      "math"
    ],
    "id": "864C"
  },
  {
    "title": "Circle of Numbers",
    "url": "https://codeforces.com/problemset/problem/859/G",
    "history": "n evenly spaced points have been marked around the edge of a circle. There is a number written at each point. You choose a positive real number k. Then you may repeatedly select a set of 2 or more points which are evenly spaced, and either increase all numbers at points in the set by k or decrease all numbers at points in the set by k. You would like to eventually end up with all numbers equal to 0. Is it possible? A set of 2 points is considered evenly spaced if they are diametrically opposed, and a set of 3 or more points is considered evenly spaced if they form a regular polygon.",
    "input": "The first line of input contains an integer n ( 3 \u2264 n \u2264 100000) , the number of points along the circle. The following line contains a string s with exactly n digits, indicating the numbers initially present at each of the points, in clockwise order.",
    "output": "Print \" YES\" ( without quotes) if there is some sequence of operations that results in all numbers being 0, otherwise \" NO\" ( without quotes) . You can print each letter in any case ( upper or lower) .",
    "note": "If we label the points from 1 to n, then for the first test case we can set k = 1. Then we increase the numbers at points 7 and 22 by 1, then decrease the numbers at points 7, 17, and 27 by 1, then decrease the numbers at points 4, 10, 16, 22, and 28 by 1.",
    "topics": [
      "math"
    ],
    "id": "859G"
  },
  {
    "title": "Lazy Security Guard",
    "url": "https://codeforces.com/problemset/problem/859/B",
    "history": "Your security guard friend recently got a new job at a new security company. The company requires him to patrol an area of the city encompassing exactly N city blocks, but they let him choose which blocks. That is, your friend must walk the perimeter of a region whose area is exactly N blocks. Your friend is quite lazy and would like your help to find the shortest possible route that meets the requirements. The city is laid out in a square grid pattern, and is large enough that for the sake of the problem it can be considered infinite.",
    "input": "Input will consist of a single integer N ( 1 \u2264 N \u2264 106) , the number of city blocks that must be enclosed by the route.",
    "output": "Print the minimum perimeter that can be achieved.",
    "note": "Here are some possible shapes for the examples:",
    "topics": [
      "brute force",
      "geometry",
      "math"
    ],
    "id": "859B"
  },
  {
    "title": "k-rounding",
    "url": "https://codeforces.com/problemset/problem/858/A",
    "history": "For a given positive integer n denote its k- rounding as the minimum positive integer x, such that x ends with k or more zeros in base 10 and is divisible by n. For example, 4- rounding of 375 is 375\u00b780 = 30000. 30000 is the minimum integer such that it ends with 4 or more zeros and is divisible by 375. Write a program that will perform the k- rounding of n.",
    "input": "The only line contains two integers n and k ( 1 \u2264 n \u2264 109, 0 \u2264 k \u2264 8) .",
    "output": "Print the k- rounding of n.",
    "note": "",
    "topics": [
      "brute force",
      "math",
      "number theory"
    ],
    "id": "858A"
  },
  {
    "title": "Eleventh Birthday",
    "url": "https://codeforces.com/problemset/problem/856/C",
    "history": "It is Borya' s eleventh birthday, and he has got a great present: n cards with numbers. The i- th card has the number ai written on it. Borya wants to put his cards in a row to get one greater number. For example, if Borya has cards with numbers 1, 31, and 12, and he puts them in a row in this order, he would get a number 13112. He is only 11, but he already knows that there are n! ways to put his cards in a row. But today is a special day, so he is only interested in such ways that the resulting big number is divisible by eleven. So, the way from the previous paragraph is good, because 13112 = 1192 \u00d7 11, but if he puts the cards in the following order: 31, 1, 12, he would get a number 31112, it is not divisible by 11, so this way is not good for Borya. Help Borya to find out how many good ways to put the cards are there. Borya considers all cards different, even if some of them contain the same number. For example, if Borya has two cards with 1 on it, there are two good ways. Help Borya, find the number of good ways to put the cards. This number can be large, so output it modulo 998244353.",
    "input": "Input data contains multiple test cases. The first line of the input data contains an integer t \u2014 the number of test cases ( 1 \u2264 t \u2264 100) . The descriptions of test cases follow. Each test is described by two lines. The first line contains an integer n ( 1 \u2264 n \u2264 2000) \u2014 the number of cards in Borya' s present. The second line contains n integers ai ( 1 \u2264 ai \u2264 109) \u2014 numbers written on the cards. It is guaranteed that the total number of cards in all tests of one input data doesn' t exceed 2000.",
    "output": "For each test case output one line: the number of ways to put the cards to the table so that the resulting big number was divisible by 11, print the number modulo 998244353.",
    "note": "",
    "topics": [
      "combinatorics",
      "dp",
      "math"
    ],
    "id": "856C"
  },
  {
    "title": "Maxim Buys an Apartment",
    "url": "https://codeforces.com/problemset/problem/854/B",
    "history": "Maxim wants to buy an apartment in a new house at Line Avenue of Metropolis. The house has n apartments that are numbered from 1 to n and are arranged in a row. Two apartments are adjacent if their indices differ by 1. Some of the apartments can already be inhabited, others are available for sale. Maxim often visits his neighbors, so apartment is good for him if it is available for sale and there is at least one already inhabited apartment adjacent to it. Maxim knows that there are exactly k already inhabited apartments, but he doesn' t know their indices yet. Find out what could be the minimum possible and the maximum possible number of apartments that are good for Maxim.",
    "input": "The only line of the input contains two integers: n and k ( 1 \u2264 n \u2264 109, 0 \u2264 k \u2264 n) .",
    "output": "Print the minimum possible and the maximum possible number of apartments good for Maxim.",
    "note": "In the sample test, the number of good apartments could be minimum possible if, for example, apartments with indices 1, 2 and 3 were inhabited. In this case only apartment 4 is good. The maximum possible number could be, for example, if apartments with indices 1, 3 and 5 were inhabited. In this case all other apartments: 2, 4 and 6 are good.",
    "topics": [
      "constructive algorithms",
      "math"
    ],
    "id": "854B"
  },
  {
    "title": "Fraction",
    "url": "https://codeforces.com/problemset/problem/854/A",
    "history": "Petya is a big fan of mathematics, especially its part related to fractions. Recently he learned that a fraction is called proper iff its numerator is smaller than its denominator ( a < b) and that the fraction is called irreducible if its numerator and its denominator are coprime ( they do not have positive common divisors except 1) . During his free time, Petya thinks about proper irreducible fractions and converts them to decimals using the calculator. One day he mistakenly pressed addition button ( + ) instead of division button ( \u00f7) and got sum of numerator and denominator that was equal to n instead of the expected decimal notation. Petya wanted to restore the original fraction, but soon he realized that it might not be done uniquely. That' s why he decided to determine maximum possible proper irreducible fraction such that sum of its numerator and denominator equals n. Help Petya deal with this problem.",
    "input": "In the only line of input there is an integer n ( 3 \u2264 n \u2264 1000) , the sum of numerator and denominator of the fraction.",
    "output": "Output two space- separated positive integers a and b, numerator and denominator of the maximum possible proper irreducible fraction satisfying the given sum.",
    "note": "",
    "topics": [
      "brute force",
      "constructive algorithms",
      "math"
    ],
    "id": "854A"
  },
  {
    "title": "Product transformation",
    "url": "https://codeforces.com/problemset/problem/852/F",
    "history": "Consider an array A with N elements, all being the same integer a. Define the product transformation as a simultaneous update Ai = Ai\u00b7Ai + 1, that is multiplying each element to the element right to it for , with the last number AN remaining the same. For example, if we start with an array A with a = 2 and N = 4, then after one product transformation A = [ 4, 4, 4, 2] , and after two product transformations A = [ 16, 16, 8, 2] . Your simple task is to calculate the array A after M product transformations. Since the numbers can get quite big you should output them modulo Q.",
    "input": "The first and only line of input contains four integers N, M, a, Q ( 7 \u2264 Q \u2264 109 + 123, 2 \u2264 a \u2264 106 + 123, , is prime) , where is the multiplicative order of the integer a modulo Q, see notes for definition.",
    "output": "You should output the array A from left to right.",
    "note": "The multiplicative order of a number a modulo Q , is the smallest natural number x such that ax mod Q = 1. For example, .",
    "topics": [
      "combinatorics",
      "math",
      "number theory"
    ],
    "id": "852F"
  },
  {
    "title": "Digits",
    "url": "https://codeforces.com/problemset/problem/852/A",
    "history": "John gave Jack a very hard problem. He wrote a very big positive integer A0 on a piece of paper. The number is less than 10200000 . In each step, Jack is allowed to put ' + ' signs in between some of the digits ( maybe none) of the current number and calculate the sum of the expression. He can perform the same procedure on that sum and so on. The resulting sums can be labeled respectively by A1, A2 etc. His task is to get to a single digit number. The problem is that there is not much blank space on the paper. There are only three lines of space, so he can' t perform more than three steps. Since he wants to fill up the paper completely, he will perform exactly three steps. Jack must not add leading zeros to intermediate results, but he can put ' + ' signs in front of digit 0. For example, if the current number is 1000100, 10 + 001 + 00 is a valid step, resulting in number 11.",
    "input": "First line contains a positive integer N ( 1 \u2264 N \u2264 200000) , representing the number of digits of A0. Second line contains a string of length N representing positive integer number A0. Each character is digit. There will be no leading zeros.",
    "output": "Output exactly three lines, the steps Jack needs to perform to solve the problem. You can output any sequence of steps which results in a single digit number ( and is logically consistent) . Every step consists of digits and ' + ' signs. Steps should not contain several ' + ' signs in a row, whitespaces, or ' + ' signs as the first or last character. They also need to be arithmetically consistent. Solution might not be unique. Output any of them in that case.",
    "note": "In the first sample, Jack can' t put ' + ' signs anywhere, so he just writes 1 in each line and solves the problem. Here, solution is unique. In the second sample, Jack first puts ' + ' between every two consecutive digits, thus getting the result 5 + 8 + 0 + 6 = 19. He does the same on the second step, getting 1 + 9 = 10. Once more, he gets 1 + 0 = 1, so after three steps, the result is 1 and his solution is correct.",
    "topics": [
      "brute force",
      "implementation",
      "math"
    ],
    "id": "852A"
  },
  {
    "title": "Arpa and an exam about geometry",
    "url": "https://codeforces.com/problemset/problem/851/B",
    "history": "Arpa is taking a geometry exam. Here is the last problem of the exam. You are given three points a, b, c. Find a point and an angle such that if we rotate the page around the point by the angle, the new position of a is the same as the old position of b, and the new position of b is the same as the old position of c. Arpa is doubting if the problem has a solution or not ( i. e. if there exists a point and an angle satisfying the condition) . Help Arpa determine if the question has a solution or not.",
    "input": "The only line contains six integers ax, ay, bx, by, cx, cy ( | ax| , | ay| , | bx| , | by| , | cx| , | cy| \u2264 109) . It' s guaranteed that the points are distinct.",
    "output": "Print \" Yes\" if the problem has a solution, \" No\" otherwise. You can print each letter in any case ( upper or lower) .",
    "note": "In the first sample test, rotate the page around ( 0. 5, 0. 5) by . In the second sample test, you can' t find any solution.",
    "topics": [
      "geometry",
      "math"
    ],
    "id": "851B"
  },
  {
    "title": "Arpa and a research in Mexican wave",
    "url": "https://codeforces.com/problemset/problem/851/A",
    "history": "Arpa is researching the Mexican wave. There are n spectators in the stadium, labeled from 1 to n. They start the Mexican wave at time 0. At time 1, the first spectator stands. At time 2, the second spectator stands. . . . At time k, the k- th spectator stands. At time k + 1, the ( k + 1) - th spectator stands and the first spectator sits. At time k + 2, the ( k + 2) - th spectator stands and the second spectator sits. . . . At time n, the n- th spectator stands and the ( n - k) - th spectator sits. At time n + 1, the ( n + 1 - k) - th spectator sits. . . . At time n + k, the n- th spectator sits. Arpa wants to know how many spectators are standing at time t.",
    "input": "The first line contains three integers n, k, t ( 1 \u2264 n \u2264 109, 1 \u2264 k \u2264 n, 1 \u2264 t < n + k) .",
    "output": "Print single integer: how many spectators are standing at time t.",
    "note": "In the following a sitting spectator is represented as - , a standing spectator is represented as ^ . At t = 0 \u2014\u2014\u2014- number of standing spectators = 0. At t = 1 ^ \u2014\u2014\u2014 number of standing spectators = 1. At t = 2 ^ ^ \u2014\u2014\u2013 number of standing spectators = 2. At t = 3 ^ ^ ^ \u2014\u2014- number of standing spectators = 3. At t = 4 ^ ^ ^ ^ \u2014\u2014 number of standing spectators = 4. At t = 5 ^ ^ ^ ^ ^ \u2014\u2013 number of standing spectators = 5. At t = 6 - ^ ^ ^ ^ ^ \u2014- number of standing spectators = 5. At t = 7 \u2013^ ^ ^ ^ ^ \u2014 number of standing spectators = 5. At t = 8 \u2014^ ^ ^ ^ ^ \u2013 number of standing spectators = 5. At t = 9 \u2014- ^ ^ ^ ^ ^ - number of standing spectators = 5. At t = 10 \u2014\u2013^ ^ ^ ^ ^ number of standing spectators = 5. At t = 11 \u2014\u2014^ ^ ^ ^ number of standing spectators = 4. At t = 12 \u2014\u2014- ^ ^ ^ number of standing spectators = 3. At t = 13 \u2014\u2014\u2013^ ^ number of standing spectators = 2. At t = 14 \u2014\u2014\u2014^ number of standing spectators = 1. At t = 15 \u2014\u2014\u2014- number of standing spectators = 0.",
    "topics": [
      "implementation",
      "math"
    ],
    "id": "851A"
  },
  {
    "title": "Rainbow Balls",
    "url": "https://codeforces.com/problemset/problem/850/F",
    "history": "You have a bag of balls of n different colors. You have ai balls of the i- th color. While there are at least two different colored balls in the bag, perform the following steps: Take out two random balls without replacement one by one. These balls might be the same color. Color the second ball to the color of the first ball. You are not allowed to switch the order of the balls in this step. Place both balls back in the bag. All these actions take exactly one second. Let M = 109 + 7. It can be proven that the expected amount of time needed before you stop can be represented as a rational number , where P and Q are coprime integers and where Q is not divisible by M. Return the value .",
    "input": "The first line of input will contain a single integer n ( 1 \u2264 n \u2264 2 500) \u2014 the number of colors. The next line of input will contain n space separated integers a1, a2, . . . , an ( 1 \u2264 ai \u2264 105) \u2014 the number of balls of each color.",
    "output": "Print a single integer, the answer to the problem.",
    "note": "In the first sample, no matter what happens, the balls will become the same color after one step. For the second sample, we have 6 balls. Let\u2019s label the balls from 1 to 6, and without loss of generality, let\u2019s say balls 1, 2, 3 are initially color 1, balls 4, 5 are color 2, and ball 6 are color 3. Here is an example of how these steps can go: We choose ball 5 and ball 6. Ball 6 then becomes color 2. We choose ball 4 and ball 5. Ball 5 remains the same color ( color 2) . We choose ball 1 and ball 5. Ball 5 becomes color 1. We choose ball 6 and ball 5. Ball 5 becomes color 2. We choose ball 3 and ball 4. Ball 4 becomes color 1. We choose ball 4 and ball 6. Ball 6 becomes color 1. We choose ball 2 and ball 5. Ball 5 becomes color 1. At this point, the game ends since all the balls are the same color. This particular sequence took 7 seconds. It can be shown that the answer to this case is .",
    "topics": [
      "math"
    ],
    "id": "850F"
  },
  {
    "title": "Random Elections",
    "url": "https://codeforces.com/problemset/problem/850/E",
    "history": "The presidential election is coming in Bearland next year! Everybody is so excited about this! So far, there are three candidates, Alice, Bob, and Charlie. There are n citizens in Bearland. The election result will determine the life of all citizens of Bearland for many years. Because of this great responsibility, each of n citizens will choose one of six orders of preference between Alice, Bob and Charlie uniformly at random, independently from other voters. The government of Bearland has devised a function to help determine the outcome of the election given the voters preferences. More specifically, the function is ( takes n boolean numbers and returns a boolean number) . The function also obeys the following property: f( 1 - x1, 1 - x2, . . . , 1 - xn) = 1 - f( x1, x2, . . . , xn) . Three rounds will be run between each pair of candidates: Alice and Bob, Bob and Charlie, Charlie and Alice. In each round, xi will be equal to 1, if i- th citizen prefers the first candidate to second in this round, and 0 otherwise. After this, y = f( x1, x2, . . . , xn) will be calculated. If y = 1, the first candidate will be declared as winner in this round. If y = 0, the second will be the winner, respectively. Define the probability that there is a candidate who won two rounds as p. p\u00b76n is always an integer. Print the value of this integer modulo 109 + 7 = 1 000 000 007.",
    "input": "The first line contains one integer n ( 1 \u2264 n \u2264 20) . The next line contains a string of length 2n of zeros and ones, representing function f. Let bk( x) the k- th bit in binary representation of x, i- th ( 0- based) digit of this string shows the return value of f( b1( i) , b2( i) , . . . , bn( i) ) . It is guaranteed that f( 1 - x1, 1 - x2, . . . , 1 - xn) = 1 - f( x1, x2, . . . , xn) for any values of x1, x2, ldots, xn.",
    "output": "Output one integer \u2014 answer to the problem.",
    "note": "In first sample, result is always fully determined by the first voter. In other words, f( x1, x2, x3) = x1. Thus, any no matter what happens, there will be a candidate who won two rounds ( more specifically, the candidate who is at the top of voter 1' s preference list) , so p = 1, and we print 1\u00b763 = 216.",
    "topics": [
      "bitmasks",
      "brute force",
      "divide and conquer",
      "fft",
      "math"
    ],
    "id": "850E"
  },
  {
    "title": "Tournament Construction",
    "url": "https://codeforces.com/problemset/problem/850/D",
    "history": "Ivan is reading a book about tournaments. He knows that a tournament is an oriented graph with exactly one oriented edge between each pair of vertices. The score of a vertex is the number of edges going outside this vertex. Yesterday Ivan learned Landau' s criterion: there is tournament with scores d1 \u2264 d2 \u2264 . . . \u2264 dn if and only if for all 1 \u2264 k < n and . Now, Ivan wanna solve following problem: given a set of numbers S = a1, a2, . . . , am, is there a tournament with given set of scores? I. e. is there tournament with sequence of scores d1, d2, . . . , dn such that if we remove duplicates in scores, we obtain the required set a1, a2, . . . , am? Find a tournament with minimum possible number of vertices.",
    "input": "The first line contains a single integer m ( 1 \u2264 m \u2264 31) . The next line contains m distinct integers a1, a2, . . . , am ( 0 \u2264 ai \u2264 30) \u2014 elements of the set S. It is guaranteed that all elements of the set are distinct.",
    "output": "If there are no such tournaments, print string \" = ( \" ( without quotes) . Otherwise, print an integer n \u2014 the number of vertices in the tournament. Then print n lines with n characters \u2014 matrix of the tournament. The j- th element in the i- th row should be 1 if the edge between the i- th and the j- th vertices is oriented towards the j- th vertex, and 0 otherwise. The main diagonal should contain only zeros.",
    "note": "",
    "topics": [
      "constructive algorithms",
      "dp",
      "graphs",
      "greedy",
      "math"
    ],
    "id": "850D"
  },
  {
    "title": "Five Dimensional Points",
    "url": "https://codeforces.com/problemset/problem/850/A",
    "history": "You are given set of n points in 5- dimensional space. The points are labeled from 1 to n. No two points coincide. We will call point a bad if there are different points b and c, not equal to a, from the given set such that angle between vectors and is acute ( i. e. strictly less than ) . Otherwise, the point is called good. The angle between vectors and in 5- dimensional space is defined as , where is the scalar product and is length of . Given the list of points, print the indices of the good points in ascending order.",
    "input": "The first line of input contains a single integer n ( 1 \u2264 n \u2264 103) \u2014 the number of points. The next n lines of input contain five integers ai, bi, ci, di, ei ( | ai| , | bi| , | ci| , | di| , | ei| \u2264 103) \u2014 the coordinates of the i- th point. All points are distinct.",
    "output": "First, print a single integer k \u2014 the number of good points. Then, print k integers, each on their own line \u2014 the indices of the good points in ascending order.",
    "note": "In the first sample, the first point forms exactly a angle with all other pairs of points, so it is good. In the second sample, along the cd plane, we can see the points look as follows: We can see that all angles here are acute, so no points are good.",
    "topics": [
      "brute force",
      "geometry",
      "math"
    ],
    "id": "850A"
  },
  {
    "title": "Days of Floral Colours",
    "url": "https://codeforces.com/problemset/problem/848/E",
    "history": "The Floral Clock has been standing by the side of Mirror Lake for years. Though unable to keep time, it reminds people of the passage of time and the good old days. On the rim of the Floral Clock are 2n flowers, numbered from 1 to 2n clockwise, each of which has a colour among all n possible ones. For each colour, there are exactly two flowers with it, the distance between which either is less than or equal to 2, or equals n. Additionally, if flowers u and v are of the same colour, then flowers opposite to u and opposite to v should be of the same colour as well \u2014 symmetry is beautiful! Formally, the distance between two flowers is 1 plus the number of flowers on the minor arc ( or semicircle) between them. Below is a possible arrangement with n = 6 that cover all possibilities. The beauty of an arrangement is defined to be the product of the lengths of flower segments separated by all opposite flowers of the same colour. In other words, in order to compute the beauty, we remove from the circle all flowers that have the same colour as flowers opposite to them. Then, the beauty is the product of lengths of all remaining segments. Note that we include segments of length 0 in this product. If there are no flowers that have the same colour as flower opposite to them, the beauty equals 0. For instance, the beauty of the above arrangement equals 1 \u00d7 3 \u00d7 1 \u00d7 3 = 9 \u2014 the segments are 2, 4, 5, 6, 8 and 10, 11, 12. While keeping the constraints satisfied, there may be lots of different arrangements. Find out the sum of beauty over all possible arrangements, modulo 998 244 353. Two arrangements are considered different, if a pair ( u, v) ( 1 \u2264 u, v \u2264 2n) exists such that flowers u and v are of the same colour in one of them, but not in the other.",
    "input": "The first and only line of input contains a lonely positive integer n ( 3 \u2264 n \u2264 50 000) \u2014 the number of colours present on the Floral Clock.",
    "output": "Output one integer \u2014 the sum of beauty over all possible arrangements of flowers, modulo 998 244 353.",
    "note": "With n = 3, the following six arrangements each have a beauty of 2 \u00d7 2 = 4. While many others, such as the left one in the figure below, have a beauty of 0. The right one is invalid, since it' s asymmetric.",
    "topics": [
      "combinatorics",
      "divide and conquer",
      "dp",
      "fft",
      "math"
    ],
    "id": "848E"
  },
  {
    "title": "Weather Tomorrow",
    "url": "https://codeforces.com/problemset/problem/847/M",
    "history": "Vasya came up with his own weather forecasting method. He knows the information about the average air temperature for each of the last n days. Assume that the average air temperature for each day is integral. Vasya believes that if the average temperatures over the last n days form an arithmetic progression, where the first term equals to the average temperature on the first day, the second term equals to the average temperature on the second day and so on, then the average temperature of the next ( n + 1) - th day will be equal to the next term of the arithmetic progression. Otherwise, according to Vasya' s method, the temperature of the ( n + 1) - th day will be equal to the temperature of the n- th day. Your task is to help Vasya predict the average temperature for tomorrow, i. e. for the ( n + 1) - th day.",
    "input": "The first line contains a single integer n ( 2 \u2264 n \u2264 100) \u2014 the number of days for which the average air temperature is known. The second line contains a sequence of integers t1, t2, . . . , tn ( - 1000 \u2264 ti \u2264 1000) \u2014 where ti is the average temperature in the i- th day.",
    "output": "Print the average air temperature in the ( n + 1) - th day, which Vasya predicts according to his method. Note that the absolute value of the predicted temperature can exceed 1000.",
    "note": "In the first example the sequence of the average temperatures is an arithmetic progression where the first term is 10 and each following terms decreases by 5. So the predicted average temperature for the sixth day is - 10 - 5 = - 15. In the second example the sequence of the average temperatures is an arithmetic progression where the first term is 1 and each following terms equals to the previous one. So the predicted average temperature in the fifth day is 1. In the third example the average temperatures do not form an arithmetic progression, so the average temperature of the fourth day equals to the temperature of the third day and equals to - 5. In the fourth example the sequence of the average temperatures is an arithmetic progression where the first term is 900 and each the following terms increase by 100. So predicted average temperature in the third day is 1000 + 100 = 1100.",
    "topics": [
      "implementation",
      "math"
    ],
    "id": "847M"
  },
  {
    "title": "Noise Level",
    "url": "https://codeforces.com/problemset/problem/847/I",
    "history": "The Berland' s capital has the form of a rectangle with sizes n \u00d7 m quarters. All quarters are divided into three types: regular ( labeled with the character ' . ' ) \u2014 such quarters do not produce the noise but are not obstacles to the propagation of the noise; sources of noise ( labeled with an uppercase Latin letter from ' A' to ' Z' ) \u2014 such quarters are noise sources and are not obstacles to the propagation of the noise; heavily built- up ( labeled with the character ' * ' ) \u2014 such quarters are soundproofed, the noise does not penetrate into them and they themselves are obstacles to the propagation of noise. A quarter labeled with letter ' A' produces q units of noise. A quarter labeled with letter ' B' produces 2\u00b7q units of noise. And so on, up to a quarter labeled with letter ' Z' , which produces 26\u00b7q units of noise. There can be any number of quarters labeled with each letter in the city. When propagating from the source of the noise, the noise level is halved when moving from one quarter to a quarter that shares a side with it ( when an odd number is to be halved, it' s rounded down) . The noise spreads along the chain. For example, if some quarter is located at a distance 2 from the noise source, then the value of noise which will reach the quarter is divided by 4. So the noise level that comes from the source to the quarter is determined solely by the length of the shortest path between them. Heavily built- up quarters are obstacles, the noise does not penetrate into them. The values in the cells of the table on the right show the total noise level in the respective quarters for q = 100, the first term in each sum is the noise from the quarter ' A' , the second \u2014 the noise from the quarter ' B' . The noise level in quarter is defined as the sum of the noise from all sources. To assess the quality of life of the population of the capital of Berland, it is required to find the number of quarters whose noise level exceeds the allowed level p.",
    "input": "The first line contains four integers n, m, q and p ( 1 \u2264 n, m \u2264 250, 1 \u2264 q, p \u2264 106) \u2014 the sizes of Berland' s capital, the number of noise units that a quarter ' A' produces, and the allowable noise level. Each of the following n lines contains m characters \u2014 the description of the capital quarters, in the format that was described in the statement above. It is possible that in the Berland' s capital there are no quarters of any type.",
    "output": "Print the number of quarters, in which the noise level exceeds the allowed level p.",
    "note": "The illustration to the first example is in the main part of the statement.",
    "topics": [
      "dfs and similar",
      "implementation",
      "math"
    ],
    "id": "847I"
  },
  {
    "title": "Random Query",
    "url": "https://codeforces.com/problemset/problem/846/F",
    "history": "You are given an array a consisting of n positive integers. You pick two integer numbers l and r from 1 to n, inclusive ( numbers are picked randomly, equiprobably and independently) . If l > r, then you swap values of l and r. You have to calculate the expected value of the number of unique elements in segment of the array from index l to index r, inclusive ( 1- indexed) .",
    "input": "The first line contains one integer number n ( 1 \u2264 n \u2264 106) . The second line contains n integer numbers a1, a2, . . . an ( 1 \u2264 ai \u2264 106) \u2014 elements of the array.",
    "output": "Print one number \u2014 the expected number of unique elements in chosen segment. Your answer will be considered correct if its absolute or relative error doesn' t exceed 10 - 4 \u2014 formally, the answer is correct if , where x is jury' s answer, and y is your answer.",
    "note": "",
    "topics": [
      "data structures",
      "math",
      "probabilities",
      "two pointers"
    ],
    "id": "846F"
  },
  {
    "title": "Shortest Path Problem?",
    "url": "https://codeforces.com/problemset/problem/845/G",
    "history": "You are given an undirected graph with weighted edges. The length of some path between two vertices is the bitwise xor of weights of all edges belonging to this path ( if some edge is traversed more than once, then it is included in bitwise xor the same number of times) . You have to find the minimum length of path between vertex 1 and vertex n. Note that graph can contain multiple edges and loops. It is guaranteed that the graph is connected.",
    "input": "The first line contains two numbers n and m ( 1 \u2264 n \u2264 100000, n - 1 \u2264 m \u2264 100000) \u2014 the number of vertices and the number of edges, respectively. Then m lines follow, each line containing three integer numbers x, y and w ( 1 \u2264 x, y \u2264 n, 0 \u2264 w \u2264 108) . These numbers denote an edge that connects vertices x and y and has weight w.",
    "output": "Print one number \u2014 the minimum length of path between vertices 1 and n.",
    "note": "",
    "topics": [
      "dfs and similar",
      "graphs",
      "math"
    ],
    "id": "845G"
  },
  {
    "title": "Rectangles",
    "url": "https://codeforces.com/problemset/problem/844/B",
    "history": "You are given n \u00d7 m table. Each cell of the table is colored white or black. Find the number of non- empty sets of cells such that: All cells in a set have the same color. Every two cells in a set share row or column.",
    "input": "The first line of input contains integers n and m ( 1 \u2264 n, m \u2264 50) \u2014 the number of rows and the number of columns correspondingly. The next n lines of input contain descriptions of rows. There are m integers, separated by spaces, in each line. The number equals 0 if the corresponding cell is colored white and equals 1 if the corresponding cell is colored black.",
    "output": "Output single integer \u2014 the number of non- empty sets from the problem description.",
    "note": "In the second example, there are six one- element sets. Additionally, there are two two- element sets, the first one consists of the first and the third cells of the first row, the second one consists of the first and the third cells of the second row. To sum up, there are 8 sets.",
    "topics": [
      "combinatorics",
      "math"
    ],
    "id": "844B"
  },
  {
    "title": "Upgrading Tree",
    "url": "https://codeforces.com/problemset/problem/843/C",
    "history": "You are given a tree with n vertices and you are allowed to perform no more than 2n transformations on it. Transformation is defined by three vertices x, y, y' and consists of deleting edge ( x, y) and adding edge ( x, y' ) . Transformation x, y, y' could be performed if all the following conditions are satisfied: There is an edge ( x, y) in the current tree. After the transformation the graph remains a tree. After the deletion of edge ( x, y) the tree would consist of two connected components. Let' s denote the set of nodes in the component containing vertex x by Vx, and the set of nodes in the component containing vertex y by Vy. Then condition | Vx| > | Vy| should be satisfied, i. e. the size of the component with x should be strictly larger than the size of the component with y. You should minimize the sum of squared distances between all pairs of vertices in a tree, which you could get after no more than 2n transformations and output any sequence of transformations leading initial tree to such state. Note that you don' t need to minimize the number of operations. It is necessary to minimize only the sum of the squared distances.",
    "input": "The first line of input contains integer n ( 1 \u2264 n \u2264 2\u00b7105) \u2014 number of vertices in tree. The next n - 1 lines of input contains integers a and b ( 1 \u2264 a, b \u2264 n, a = \u0338 b) \u2014 the descriptions of edges. It is guaranteed that the given edges form a tree.",
    "output": "In the first line output integer k ( 0 \u2264 k \u2264 2n) \u2014 the number of transformations from your example, minimizing sum of squared distances between all pairs of vertices. In each of the next k lines output three integers x, y, y' \u2014 indices of vertices from the corresponding transformation. Transformations with y = y' are allowed ( even though they don' t change tree) if transformation conditions are satisfied. If there are several possible answers, print any of them.",
    "note": "This is a picture for the second sample. Added edges are dark, deleted edges are dotted.",
    "topics": [
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "math",
      "trees"
    ],
    "id": "843C"
  }
]