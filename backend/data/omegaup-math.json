[
  {
    "title": "Modificando SAT",
    "url": "https://omegaup.com/arena/problem/Modificando-SAT",
    "history": "El problema de satisfacibilidad booleana ( conocido como SAT) consiste en decidir, dada una fo\u0301rmula booleana, si existe alguna asignacio\u0301n de valores de verdad para las variables tal que la fo\u0301rmula se vuelva verdadera. Las conectivas ma\u0301s comunes son las conectivas ` and` , ` or` y ` neg` , correspondientes con la conjuncio\u0301n, disyuncio\u0301n y negacio\u0301n lo\u0301gicas. Una variante del problema SAT es 3- SAT, donde la fo\u0301rmula se expresa como una conjuncio\u0301n de disyunciones con a lo mucho tres literales en cada disyuncio\u0301n ( una literal es una variable posiblemente negada) . Todas las disyunciones deben ser verdaderas para que la fo\u0301rmula completa tambie\u0301n lo sea. En este problema nos interesa una variacio\u0301n de 3- SAT, donde una disyuncio\u0301n se considera verdadera so\u0301lo si una o tres literales ( pero no dos) son verdaderas. Escribe un programa que determine si una fo\u0301rmula booleana tiene solucio\u0301n en esta variacio\u0301n del problema.",
    "input": "La primera li\u0301nea contiene dos enteros N y V que denotan el nu\u0301mero de clau\u0301sulas y el nu\u0301mero de variables de la fo\u0301rmula, respectivamente. Cada una de las siguientes N li\u0301neas contiene la descripcio\u0301n de una clau\u0301sula de la fo\u0301rmula, donde el grupo de literales aparece entre pare\u0301ntesis y donde las literales aparecen separadas por cadenas ` or` y donde la cadena ` and` aparece como conectiva al final de todas las clau\u0301sulas excepto la u\u0301ltima. Cada literal esta\u0301 formada por una variable con cadena ` x` _ i opcionalmente negada por la cadena ` not` . Hay exactamente un espacio separando las conectivas y variables, pero no los pare\u0301ntesis. Puedes suponer que 1 \u2264 N, V \u2264 2000 y que 1 \u2264 i \u2264 V.",
    "output": "Si la fo\u0301rmula no tiene solucio\u0301n, imprimir la palabra ` imposible` . Si la fo\u0301rmula si\u0301 tiene solucio\u0301n, imprimir una cadena de N caracteres ` 0` y ` 1` que denoten las asignaciones de valores de verdad para cada una de las variables, desde ` x` _ 0 hasta ` x` _ V- 1. Si la fo\u0301rmula tiene ma\u0301s de una solucio\u0301n, debera\u0301s imprimir aque\u0301lla cuya cadena sea la ma\u0301xima lexicogra\u0301fica.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 15618
  },
  {
    "title": "Competencia de Iguanas",
    "url": "https://omegaup.com/arena/problem/Competencia-de-Iguanas",
    "history": "Los estudiantes de la OVI ( Organizacio\u0301n Venezolana de Iguanas) pueden participar en la competencia de Iguanas que se realiza anualmente. Una iguana participa en la competencia u\u0301nicamente cuando quiere hacerlo. Juan es una iguana y nosotros queremos saber si e\u0301l ganara\u0301 o no la competencia. Primero, Juan debe participar en la competencia para poder ganar. Adema\u0301s, sabemos que si Juan participa y estudia siempre gana. Por otra parte, si Juan participa pero no estudia, gana cuando ocurre lo siguiente: 1) Juan es el u\u0301nico participante de la competencia, 2) los dema\u0301s estudiantes tampoco estudiaron o 3) Juan tiene un talento natural sin igual en las competencias de Iguanas. Si Juan no estudia y no ocurre ninguna de las tres condiciones mencionadas entonces pierde la competencia.",
    "input": "Recibira\u0301s 5 enteros ( a, b, c, d y e) , cada uno indica la veracidad de las siguientes proposiciones, donde 1 significa que proposicio\u0301n asociada es verdadera, y 0 significa que es falsa. a. Juan participa en la competencia. b. Juan estudio\u0301 para la competencia. c. Juan es el u\u0301nico participante de la competenciad. Los dema\u0301s participantes estudiaron para la competencia. e. Juan tiene un talento natural sin igual para las competencias de iguanas.",
    "output": "Imprime \" Juan gana\" si Juan gana con las condiciones dadas, o \" Juan pierde\" si Juan no gana.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 14113
  },
  {
    "title": "Procesador de palabras",
    "url": "https://omegaup.com/arena/problem/procesador_de_palabras",
    "history": "Bessie la vaca esta\u0301 trabajando en un ensayo en su clase de escritura documental. Debido a que sus escritura no es del todo buena, decidio\u0301 escribir el ensayo usando un procesador de palabrasEl ensayo consiste en N palabras ( 1 \u2264 N \u2264 100) separadas por espacios. Cada palabra tiene un largo es de 1 a 15 letras, inclusive, y so\u0301lo consiste en letras minu\u0301sculas o mayu\u0301sculas. De acuerdo con las instrucciones de la asignatura, el formato del ensayo debe de que tener un formato muy especi\u0301fico: cada li\u0301nea no debe de contener ma\u0301s de K ( 1 \u2264 K \u2264 80) caracteres, sin contar los espacios. Afortunadamente, el procesador que utiliza Bessie puede manejar este requerimiento usando la siguiente estrategia: * Si Bessie teclea una palabra y esa puede estar en la li\u0301nea actual, la deja en esa li\u0301nea* De otra forma, poner la palabra en la siguiente li\u0301nea y agregarla a esa li\u0301neaClaro que si hay palabras seguidas en la misma li\u0301nea debera\u0301n estar separadas por un espacio. Y no debe de haber ningu\u0301n espacio al final de cada li\u0301neaDesafortunadamente, el procesador de Bessie se ha dan\u0303ado. Ayu\u0301dala a formatear el ensayo de manera apropiada!",
    "input": "La primera li\u0301nea de la entrada contiene dos enteros separados por un espacio N y KLa siguiente li\u0301nea contiene N palabras separadas por un espacio. Ninguna palabra sera\u0301 ma\u0301s larga que K caracteres, el ma\u0301ximo nu\u0301mero de caracteres en una li\u0301nea",
    "output": "El ensayo de Bessie formateado correctamente",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 14074
  },
  {
    "title": "Parque de Diversiones",
    "url": "https://omegaup.com/arena/problem/parque-de-diversiones-ovi",
    "history": "Cesar y Luis quieren ir al parque de diversiones pero no saben si tienen la edad necesaria para poder asistir. Adema\u0301s, si uno de los dos no puede ir, el otro tampoco ira\u0301. Dada la edad necesaria para entrar y las edades de Cesar y Luis, debes responderles si pueden ir al parque o no.",
    "input": "La u\u0301nica li\u0301nea de entrada tendra\u0301 tres nu\u0301meros enteros A, B, y C: la edad mi\u0301nima para entrar al parque, la edad de Cesar y la edad de Luis respectivamente.",
    "output": "Debes imprimir 1 si pueden ir y 0 si no.",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 14032
  },
  {
    "title": "Manada de vacas robot",
    "url": "https://omegaup.com/arena/problem/manada_de_vacas_robot",
    "history": "La vaca Bessie quiere hacerle una broma al ti\u0301o de Zagreb, construyendo una manada de K vacas robot hiper- realistas ( 1 \u2264 K \u2264 100, 000) El construir una vaca robot es algo complicado. Hay N ( 1 \u2264 N \u2264 100, 000) ubicaciones u\u0301nicas en las cuales los microcontroladores del robot pueden ser conectados ( un solo microcontrolador debe estar conectado en cada ubicacio\u0301n) . Para cada una de estas ubicaciones, Bessie puede seleccionar un nu\u0301mero de modelo diferente de microcontrolador, que puede variar en costoPara que la manada de vacas robot se vea ma\u0301s convincente y pueda engan\u0303arse al ti\u0301o de Zagreb, dos vacas robot no deben de ser ide\u0301nticas. Por lo tanto, dos vacas robot no pueden tener exactamente la misma serie de microcontroladores. Para un parte de robots debe de haber al menos una ubicacio\u0301n en la cual ellas dos, usen un modelo de microcontrolador diferente. Se garantiza que siempre habra\u0301 suficientes modelos de microcontroladores que satisfagan esa restriccio\u0301nBessie desea que su manada de vacas robot sea la ma\u0301s barata posible de fabricar. Ayu\u0301dala a determinar el mi\u0301nimo costo posible, de hacer esto!",
    "input": "La primer li\u0301nea de la entrada contiene a N y a K, separados por un espacioLas siguientes N li\u0301neas contienen una descripcio\u0301n de los diferentes modelos de microcontroladores disponibles para cada ubicacio\u0301n. Tal que la li\u0301nea i- e\u0301sima inicia con M_ i ( 1 \u2264 M_ i \u2264 10) el nu\u0301mero de modelos disponibles para la ubicacio\u0301n i. Luego le sigue los M_ i enteros separados por un espacio que son los costos de estos diferentes modelos ( 1 \u2264 P_ i, j\u2264 100, 000, 000)",
    "output": "Muestre en una sola li\u0301nea, el mi\u0301nimo costo necesario para construir las K vacas robot",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 14008
  },
  {
    "title": "Promocionando",
    "url": "https://omegaup.com/arena/problem/promocionando",
    "history": "La vaca Bessie esta\u0301 ayudando al ti\u0301o de Zagreb a organizar la USACO ( USA Cow Olympiad) , que es un concurso organizado en li\u0301nea donde los participantes contestan preguntas para demostrar su conocimiento en la materia de lo bovinoEn respuesta al gran nu\u0301mero de participantes, el ti\u0301o de Zagreb ha expandido el concurso incluyendo cuatro divisiones de dificultad: bronce, plata, oro y platino. Todos los nuevos participantes empiezan en la divisio\u0301n bronce, y los que llegan a un puntaje perfecto en el concurso se les promueve a la divisio\u0301n del siguiente nivel. Es posible para algunos participantes ser promovidos muchas veces en el mismo Concurso. El ti\u0301o de Zagreb mantiene el registro de una lista de los participantes en los concursos y a que divisio\u0301n pertenecen, asi\u0301 que e\u0301l puede indicarle a cualquier participante el nivel exacto en todo momento cuando organice un concursoCuando se publican los resultados del ma\u0301s reciente concurso, el ti\u0301o de Zagreb quiere incluir informacio\u0301n de los participantes que fueron promovidos de bronce a plata, de plata a oro y los que fueron promovidos de oro a platino. Sin embargo se olvido\u0301 de contar las promociones que ocurrieron durante el concurso. Bessie, que es una vaca muy inteligente, se ha dado cuenta que puede deducir las promociones que han ocurrido basa\u0301ndose en el nu\u0301mero de participantes de cada nivel, que habi\u0301a antes y despue\u0301s del concurso. Por favor ayu\u0301dala a realizar los ca\u0301lculos",
    "input": "La entrada consiste en cuatro li\u0301neas, cada una de las cuales contiene dos enteros en el rango 0 . . . 1, 000, 000. La primer li\u0301nea especifica el nu\u0301mero de participantes de bronce registrados antes y despue\u0301s del concurso. La segunda li\u0301nea contiene el nu\u0301mero de los de plata antes y despue\u0301s. La tercer li\u0301nea a los de oro antes y despue\u0301s del concurso. Y la u\u0301ltima li\u0301nea especifica el nu\u0301mero de participantes platino antes y despue\u0301s del concurso",
    "output": "Por favor muestra tres li\u0301neas, cada una de ellas debe contener un so\u0301lo entero. La primer li\u0301nea debera\u0301 contener el nu\u0301mero de participantes que fueron promovidos de bronce a plata. La segunda li\u0301nea lo que fueron promovidos de plata a oro. Y la u\u0301ltima li\u0301nea el nu\u0301mero de participantes que fueron promovidos de oro a platino",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 13999
  },
  {
    "title": "Equipo",
    "url": "https://omegaup.com/arena/problem/equipos",
    "history": "Un di\u0301a, las tres mejores amigas: Petya, Vasya y Tonya decidieron formar un equipo y participar en un concurso de programacio\u0301n. Los participantes usualmente se les ponen algunos problemas durante los concursos de programacio\u0301n. Mucho antes de que empezara el concurso, ellas decidieron que resolveri\u0301an un problema si al menos dos de ellas estuvieran seguras de solucionarlo. De otra forma, no podri\u0301an escribir una solucio\u0301n al problemaEn el concurso se ponen n problemas a los participantes. Para cada uno de los problemas sabemos que amigas estuvieron seguras de la solucio\u0301n. Ayu\u0301dalas a encontrar el nu\u0301mero de problemas para los cuales podri\u0301an escribir una solucio\u0301n",
    "input": "La primer li\u0301nea de la entrada contiene al entero n ( 1 \u2264 n \u2264 1000) - el nu\u0301mero de problemas del concurso. Luego n li\u0301neas conteniendo tres enteros cada una, cada entero es 0 o\u0301 1. Si el primer nu\u0301mero de la li\u0301nea equivale a 1, entonces Petya esta\u0301 segura acerca de la solucio\u0301n del problema, de otra manera ella no esta\u0301 segura. El segundo nu\u0301mero indica el punto de vista de Vasya, y el tercer nu\u0301mero el de Tonya. Los nu\u0301meros en la li\u0301nea esta\u0301n separados por un espacio",
    "output": "Muestra un so\u0301lo nu\u0301mero - el nu\u0301mero de problemas que las amigas pudieron implementar una solucio\u0301n en el concurso",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 13995
  },
  {
    "title": "Tri\u00e1ngulos",
    "url": "https://omegaup.com/arena/problem/tri_angulos",
    "history": "El ti\u0301o de Zagreb quiere disen\u0303ar un pastizal triangular para sus vacasHay N cercas ( 3 \u2264 N \u2264 100) formadas por postes en difertenes puntos ( X_ 1, Y_ 1) . . . ( X_ N, Y_ N) en un mapa de dos dimensiones, que forma su granja. E\u0301l puede escoger tres cercas para formar los ve\u0301rtices del pastizal triangular, mientras una cerca sea paralela al eje x y otra sea paralela en el eje yCua\u0301l es el a\u0301rea ma\u0301xima del pastizal triangular que el ti\u0301o de Zagreb desea construir? Se garantiza que existe al menos un pastizal va\u0301lido",
    "input": "La primera li\u0301nea de la entrada contiene al entero N. Cada una de las siguientes N li\u0301neas contiene dos enteros: X_ i y Y_ i, cada uno en el rango - 10^ 4 . . . 10^ 4 inclusive, describiendo la ubicacio\u0301n de la cerca de postes",
    "output": "Como el a\u0301rea en si\u0301 misma no es necesariamente un entero, muestra * * dos veces* * el a\u0301rea ma\u0301xima triangular va\u0301lida, que se puede formar con las cercas de postes",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 13979
  },
  {
    "title": "Cuadrilla de cubetas",
    "url": "https://omegaup.com/arena/problem/cuadrilla_de_cubetas",
    "history": "Un gran incendio ha ocurrido en la granja del ti\u0301o de Zagreb, y las vacas han estado intentando de apagarlo! ! ! La granja esta\u0301 descrita por una cuadri\u0301cula de 10 x 10 caracteres, como esto: . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . B. . . . . . . . . . . . . . . . . . . . . . R. . . . . . . . . . . . . . . . . . . . . . . . . . . . . L. . . . . . . . . . . . . . La letra * * B* * representa la granja donde esta\u0301 ocurriendo el incendio. La letra * * L* * indica el lago, y la * * R* * representa la posicio\u0301n de una gran rocaLas vacas desean formar una \" cuadrilla de cubetas\" coloca\u0301ndose a lo largo de un tramo entre el lago y la granja, para que asi\u0301 puedan pasarse las cubetas de agua y ayudar a extinguir el fuego. Una cubeta puede ir entre las vacas si esta\u0301n juntas unas con otras, en direccio\u0301n al norte, sur, este u oeste. Lo mismo aplica para la vaca que esta\u0301 enseguida del lago - la vaca que solo puede extraer una cubeta de agua del lago, es la que este\u0301 inmediatamente junto al lago. De la misma manera, una vaca puede tirar el agua de la cubeta, hacia la granja, si ella esta\u0301 inmediatamente cerca de la granjaPor favor ayuda a determinar la mi\u0301nima cantidad de cuadros de * * . * * que deberi\u0301an ser ocupados por vacas, para formar una cuadrilla de cubetas exitosaUna vaca no puede colocarse en el cuadro que contenga a la gran roca, y, se garantiza, que la granja y el lago no esta\u0301n uno inmediatamente cerca del otro",
    "input": "La entrada contiene 10 renglones con 10 caracteres, describiendo la granja",
    "output": "Muestra un so\u0301lo entero que indicara\u0301 el mi\u0301nimo nu\u0301mero de vacas necesarias para formar una cuadrilla de cubetas viable",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 13975
  },
  {
    "title": "Basquebol uno vs uno",
    "url": "https://omegaup.com/arena/problem/basquetbol_uno_vs_uno",
    "history": "Alicia y Ba\u0301rbara jugaron algunos juegos de ba\u0301squetbol uno contra uno despue\u0301s de trabajar, y aceptaste mantener un registro del puntaje. Las reglas del juego son simples: * Cada tiro encestado por un jugador le da uno o dos puntos* El primer jugador que anote primero once puntos gana, sin excepcio\u0301n* Si el marcador esta\u0301 empatado con 10- 10, la regla anterior se reemplaza por la regla de \" ganar por dos\" : el primer jugador que tenga al menos dos puntos de diferencia, ganaPor ejemplo, 11- 7, 9- 11 y 14- 12 son marcadores va\u0301lidos, pero no 14- 13Siempre que Alicia o Ba\u0301rbara anoten puntos, tu anotaste una * * A* * o una * * B* * ( indicando que la anotacio\u0301n fue de Alicia o de Ba\u0301rbara) seguido de un * * 1* * o\u0301 un * * 2* * ( el nu\u0301mero de puntos anotados) . Tu\u0301 tienes algunos registros de los juegos. Alicia y Ba\u0301rbara jugaron en ese formato pero no recuerdan quien gano\u0301 el juego. Puedes indicarles quien fue la ganadora en base a los registros?",
    "input": "La entrada consiste en una sola li\u0301nea con no ma\u0301s de 200 caracteres: el registro del juego. El registro consiste en letras ( ya sea la * * A* * o la * * B* * ) seguida de un nu\u0301mero ( * * 1* * o\u0301 * * 2* * ) , y no se incluyen espacios u otros caracteres extran\u0303os. Cada registro estara\u0301 correctamente anotado y correspondera\u0301 a un juego completo, jugado bajo las reglas arriba descritas",
    "output": "Muestra un so\u0301lo caracter, * * A* * o * * B* * : la ganadora del juego",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 13974
  },
  {
    "title": "Soldado y bananas",
    "url": "https://omegaup.com/arena/problem/soldados_y_bananas",
    "history": "Un soldado quiere comprar w pla\u0301tanos en el mercado. E\u0301l tiene que pagar k pesos por el primer pla\u0301tano, 2k pesos por el segundo pla\u0301tano y asi\u0301 sucesivamente ( es decir, e\u0301l tiene que pagar i \u00b7 k pesos por el i- e\u0301simo pla\u0301tano) E\u0301l tiene n pesos. Cua\u0301ntos pesos debe de pedirle prestado a un amigo para que pueda comprar w pla\u0301tanos?",
    "input": "La primer li\u0301nea de la entrada contiene tres enteros positivos k, n, w ( 1 \u2264 k, w \u2264 1000, 0 \u2264 n \u2264 10^ 9) , el costo del primer pla\u0301tano, la cantidad inicial de pesos que tiene el soldado y el nu\u0301mero de pla\u0301tanos que e\u0301l desea",
    "output": "Muestra un entero - la cantidad de pesos que el soldado debera\u0301 pedirle a su amigo. Si no es necesario pedirle nada, muestra 0",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 13970
  },
  {
    "title": "Sabes tus ABC's?",
    "url": "https://omegaup.com/arena/problem/sabes_tus_abcs",
    "history": "Las vacas del ti\u0301o de Zagreb han estado participando en la plataforma de reuniones \" mooZ\" . Por diversio\u0301n, han inventado un juego simple para jugar mientras esta\u0301n en reunio\u0301n, y asi\u0301 mantenerse entretenidasLa vaca Elsie tiene tres enteros positivos A, B y C ( A \u2264 B \u2264 C) . Se supone que estos enteros son secretos, asi\u0301 que ella no lo revelara\u0301 directamente, sino que le dara\u0301 a la vaca Bessie siete ( no necesariamente distintos) enteros en el rango 1 . . . 10^ 9, afirmando de que son A, B, C, A + B, B + C, C + A y A + B + C en algu\u0301n ordenDada una lista de esos siete nu\u0301meros, por favor ayuda a Bessie a determinar A, B y C. Se sabe que la respuesta es u\u0301nica",
    "input": "La primer y u\u0301nica li\u0301nea de la entrada contiene siete enteros separados por espacios",
    "output": "Muestra A, B y C separados por un espacio",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 13953
  },
  {
    "title": "Teletransportaci\u00f3n",
    "url": "https://omegaup.com/arena/problem/teletransportacion",
    "history": "Una de las actividades que al ti\u0301o de Zagreb le desagrada, es el acarrear mucho estie\u0301rcol ( bosta) de vaca. Para acelerar este proceso e\u0301l ha tenido una brillante idea: el teletransportador de estie\u0301rcol. En lugar de transportar estie\u0301rcol entre dos puntos en la carretilla detra\u0301s de su tractor, puede usar el teletransportador de estie\u0301rcol para transportarlo instanta\u0301neamente de un lugar a otroLa granja del ti\u0301o de Zagreb esta\u0301 a lo largo de un camino recto, asi\u0301 que cualquier ubicacio\u0301n en su granja se puede describir simplemente usando la posicio\u0301n sobre el sendero ( como punto sobre una recta nume\u0301rica) . El teletransportador esta\u0301 descrito por dos nu\u0301meros x y y, donde el estie\u0301rcol se lleva a la posicio\u0301n x y puede instanta\u0301neamente ser transportado a la posicio\u0301n y, y viceversaEl ti\u0301o de Zagreb quiere transportar estie\u0301rcol de la posicio\u0301n a a la posicio\u0301n b, y e\u0301l ha construido un teletransportador que le pudiera ayudar en este proceso ( claro que no lo necesitari\u0301a usar el teletransportador si no necesitara ayuda) . Por favor ayu\u0301dale a determinar la mi\u0301nima cantidad de distancia total que necesita llevar el estie\u0301rcol en su tractor",
    "input": "La primer y u\u0301nica li\u0301nea de la entrada contiene cuatro enteros separados por espacios: a y b describen la ubicacio\u0301n inicial y final, seguidas de x y y indicando el teletransportador. Todas las posiciones son enteras en el rango 0 . . . 100; y no necesariamente distintas una de otra",
    "output": "Muestra un so\u0301lo entero indicando la mi\u0301nima distancia que el ti\u0301o de Zagreb necesitara recorrer para llevar el estie\u0301rcol en su carro",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 13952
  },
  {
    "title": "Compuertas L\u00f3gicas",
    "url": "https://omegaup.com/arena/problem/Compuertas-Logicas",
    "history": "Bill Gates, Elon Musk y Tony Stark te han patrocinado personalmente con $ 1, 000, 000, 000 USD para que disen\u0303es un programa que prediga el resultado de un conjunto indefinido de compuertas logicas. Deberas buscar las tablas de las siete compuertas logicas * * AND, OR, NOT, NAND, NOR, XOR* * y * * XNOR* * para programar su comportamiento. * * No todas las li\u0301neas tienen la cantidad correcta de pare\u0301ntesis. Debera\u0301n verificar y corregirlas si este es el caso. * *",
    "input": "Una sola li\u0301nea con una cantidad desconocida de operadores. Los operadores pueden ser los siete que son mencionados arriba y los valores * * TRUE* * y * * FALSE* * . Todas estas funciones seran escritas de la siguiente manera: * * XOR* * ( * * TRUE* * , * * FALSE* * ) con dos entradas ( menos * * NOT* * que solo tiene una entrada) . Debes interpretar y obtener el resultado final de la operacio\u0301n.",
    "output": "Un solo valor * * TRUE* * o * * FALSE* * dependiendo de el resultado de la operacio\u0301n",
    "note": "",
    "topics": [
      "implementation",
      "dp",
      "dfs and similar",
      "graphs",
      "math"
    ],
    "id": 7851
  },
  {
    "title": "3-SAT",
    "url": "https://omegaup.com/arena/problem/3-SAT",
    "history": "El problema 3- SAT consiste en, dada una conjuncio\u0301n de N disyunciones con tres literales cada una, encontrar una asignacio\u0301n de valores de verdad para las V inco\u0301gnitas que vuelva verdadera a la fo\u0301rmula booleana. Escribe un programa que determine si existe tal asignacio\u0301n para la fo\u0301rmula dada.",
    "input": "Dos enteros V y N seguido de N li\u0301neas. Cada li\u0301nea contiene un grupo de tres literales que forman una de las N disyunciones de la fo\u0301rmula conjuntiva. Una literal afirmada es de la forma + v y una literal negada es de la forma ! v donde v es una de las primeras V letras del alfabeto ingle\u0301s, en minu\u0301scula. Puedes suponer que 1 \u2264 V \u2264 26 y 1 \u2264 N \u2264 50.",
    "output": "Un 1 si la fo\u0301rmula booleana tiene solucio\u0301n y un 0 en otro caso.",
    "note": "",
    "topics": [
      "math",
      "divide and conquer",
      "brute force"
    ],
    "id": 6633
  },
  {
    "title": "IOI 2010 - Cluedo",
    "url": "https://omegaup.com/arena/problem/Cluedo",
    "history": "Llama a esta funcio\u0301n para probar una teori\u0301a sobre el homicidio. La funcio\u0301n te devolvera\u0301 un valor entero. ` 0` cuando la teori\u0301a es correcta ( recuerda terminar la ejecucio\u0301n cuando resuelvas el caso) ; ` 1` si el culpable es incorrecto; ` 2` si la ubicacio\u0301n es incorrecta; ` 3` si el arma homicida es incorrecta. # Para\u0301metros* ` c` : La suposicio\u0301n del sospechoso. * ` u` : La suposicio\u0301n de la ubicacio\u0301n. * ` a` : La suposicio\u0301n del arma homicida. # Rutina de EjemploComo ejemplo, asume que la Sen\u0303orita Escarlata asesino\u0301 al Dr. Negro en la cocina usando un candelabro. Cuando el procedimiento ` ResolverCaso( ) ` haga las siguientes teorias, los valores devueltos sera\u0301n: | | inputResolverCaso( ) | | output- | | descriptionJill tiene un nuevo caso por resolver. | | inputTeoria( 1, 1, 1) | | output1, 2 o 3| | descriptionTodos los elementos son incorrectos. | | inputTeoria( 3, 3, 3) | | output1 o 3| | descriptionSolo la ubicacio\u0301n es correcta. | | inputTeoria( 5, 3, 4) | | output1| | descriptionSolo el culpable es incorrecto. | | inputTeoria( 2, 3, 4) | | output0| | descriptionLa teori\u0301a es correcta. | | end# Li\u0301mitesSe llamara\u0301 a tu procedimiento ` ResolverCaso( ) ` un ma\u0301ximo de 360 veces. # Subtarea 1 [ 50 puntos] Por cada llamada a ` ResolverCaso( ) ` , puedes llamar a ` Teoria( ) ` a lo ma\u0301s 360 veces. # Subtarea 2 [ 50 puntos] Por cada llamada a ` ResolverCaso( ) ` , puedes llamar a ` Teoria( ) ` a lo ma\u0301s 20 veces. \u2014\u2014\u2014\u2014\u2014\u2013# Experimentacio\u0301nlibinteractive: download",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 2635
  },
  {
    "title": "XOR",
    "url": "https://omegaup.com/arena/problem/XOR",
    "history": "El XOR es un operador que se incluye en la mayori\u0301a de los lenguajes de programacio\u0301n. En el caso de C/ C+ + se utiliza el si\u0301mbolo ^ ( por ejemplo: a = b ^ c; ) y en el caso de Pascal la palabra xor ( por ejemplo: a : = b xor c; ) . La operacio\u0301n XOR funciona bit por bit. Si aplicas la operacio\u0301n XOR a un par de nu\u0301meros, el resultado es el siguiente: para cada di\u0301gito binario ( bit) , si estos los bits en ambos nu\u0301meros son iguales ( ambos 0 o ambos 1) ese bit, en el resultado, tendra\u0301 valor 0. Si los bits en ambos nu\u0301meros son distintos ( en uno 0 y en el otro 1) ese bit, en el resultado tendra\u0301 valor 1. Por ejemplo si se aplica la operacio\u0301n XOR a 7 y a 12 el resultado sera\u0301 el siguiente: 7 xor 12 = 0111xor 1100\u2014\u2014\u2014- 1011Un resultado interesante es que si se aplica la operacio\u0301n XOR a un nu\u0301mero con e\u0301l mismo, ya que todos los bits son iguales, el resultado es 0. # ProblemaEscribe un programa que dada una lista de nu\u0301meros encuentre cua\u0301ntas subsecuencias de nu\u0301meros contiguos distintas existen tales que al aplicar la operacio\u0301n XOR a los nu\u0301meros de la subsecuencia en el orden en que aparecen se obtiene como resultado 0. Una subsecuencia de nu\u0301meros contiguos es diferente de otra si inician y/ o terminan en posiciones distintas.",
    "input": "Tu programa debe leer del teclado la siguiente informacio\u0301n: * En la primera li\u0301nea el nu\u0301mero entero N, la cantidad de nu\u0301meros en la lista* En las siguientes N li\u0301neas un nu\u0301mero entero a_ i que representa al nu\u0301mero en la posicio\u0301n i- e\u0301sima de la lista.",
    "output": "Tu programa debe escribir en la pantalla un u\u0301nico nu\u0301mero entero que representa la cantidad de subsecuencias distintas tales que al aplicar la operacio\u0301n XOR entre sus elementos se obtiene como resultado 0. # Restricciones* 1 < N \u2264 1, 000, 000 Cantidad de nu\u0301meros en la lista. * 1 \u2264 a_ i \u2264 1, 000, 000 Valor ma\u0301ximo de cualquier elemento de la lista.",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 86
  },
  {
    "title": "Fechas C",
    "url": "https://omegaup.com/arena/problem/Fechas-C-IPVCEJM",
    "history": "Dada la fecha a/ b/ c, tal que a representa el dia, b el mes, y c el an\u0303o. Y la fecha p/ q/ r, tal que p representa el dia, q el mes, y r el an\u0303o. Diga cua\u0301ntos di\u0301as hay entre estas dos fechas, si se asegura que se pusieron en o\u0301rden cronolo\u0301gico",
    "input": "Una li\u0301nea con los numeros enteros a, b, c, separados por un espacio. Una siguiente li\u0301nea con los numeros enteros p, q, r, separados por un espacio.",
    "output": "Un u\u0301nico nu\u0301mero entero, correspondiente a la cantidad de di\u0301as.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 16671
  },
  {
    "title": "Fechas B",
    "url": "https://omegaup.com/arena/problem/Fechas-B",
    "history": "Dada la fecha a/ b/ c, tal que a, representa el dia, b el mes, y c el an\u0303o. Y dado un numero N, halla la fecha del di\u0301a correspondiente a N di\u0301as despue\u0301s de la fecha inicial",
    "input": "Los numeros enteros a, b, c, n, separados por un espacio",
    "output": "La fecha resultante, en el mismo formato y orden que la entrada",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 16670
  },
  {
    "title": "Fechas A",
    "url": "https://omegaup.com/arena/problem/Fechas-A",
    "history": "Dada la fecha a/ b/ c, tal que a, representa el dia, b el mes, y c el an\u0303oCalcule la fecha del dia siguiente e imprimala por consola",
    "input": "Los numeros a, b, c, separados por un espacio",
    "output": "La fecha resultante, en el mismo formato y orden que la entrada",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 16669
  },
  {
    "title": "El juego de la caravana",
    "url": "https://omegaup.com/arena/problem/El-juego-de-la-caravana",
    "history": "El juego de la caravana es un juego de cartas donde gana el que las tenga mas grandes. Se jugaran con cartas clasicas del poker con 3 barajas de cartas cada jugador. Se debera definir al ganador de la ronda por la suma de sus barajas gana quien sume mayor cantidad. # NotaSi alguna baraja de cartas supera el 24 pierde su todo su valor.",
    "input": "En la primer linea ingresan tus 3 barajas de cartas y en la segunda linea las tres barajas del rival.",
    "output": "Tu salida debera ser el XD en el caso de haber ganado y XDN' T si perdiste. | | input24 24 2424 24 23| | outputXD| | input10 11 1320 23 24| | outputXDN' T| | end",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 16468
  },
  {
    "title": "Cheems el Aventurero",
    "url": "https://omegaup.com/arena/problem/Cheems-el-Aventurero",
    "history": "Cheems es fan de Indiana Jones por eso fue en busca de aventuras y misterios, un di\u0301a mientras caminaba por la selva se topo\u0301 con un templo antiguo, en el templo habi\u0301a una puerta con un grabado que deci\u0301a \u201cGenera la Clave n\u201d , cada vez que Cheems intenta abrir la puerta se muestra el mensaje \u201cGenera la clave n\u201d, Cheems se da cuenta que n es un numero aleatorio, y para resolver la clave Cheems investiga por todo el templo y encuentra una pista. n = 55 = 3 6 11 18 27Cheems se da cuenta que debe decifrar el secreto de esta sucesio\u0301n, ya que la sucesio\u0301n es la clave. Ayuda a Cheems a descifrar la sucesio\u0301n para que puede abrir esa puerta.",
    "input": "En la primera y u\u0301nica li\u0301nea habra\u0301 un nu\u0301mero entero n representando el nu\u0301mero que aparece en el grabado de la puerta. ! [ omegaUp] ( cheems. jpg)",
    "output": "Los nu\u0301meros de la sucesio\u0301n separados por un espacio.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 16467
  },
  {
    "title": "Convertidor sistemas de numeraci\u00f3n",
    "url": "https://omegaup.com/arena/problem/Convertidor-sistemas-de-numeraci",
    "history": "Los sistemas de numeracio\u0301n juegan un papel importante en sistemas computacionales: ! [ Sistemas de numeracio\u0301n] [ 1] Sabiendo esto. Un di\u0301a Carlos necesitaba convertir del sistema decimal base 10 a otros sistemas de numeracio\u0301n y viceversa para una tarea y son muchos ejercicios y e\u0301l lo hace a mano pero es muy tardado y tu\u0301, como buen programador decides ayudarlo escribiendo un programa que realice esta tarea. Como Carlos tiene N nu\u0301meros a convertir y debe especificar a que sistemas se realiza la conversio\u0301n por lo tanto tienes las siguientes acciones: ( 10- > 2) para codificar un nu\u0301mero decimal a binario( 10- > 8) para codificar un nu\u0301mero decimal a octal( 10- > 16) para codificar un nu\u0301mero decimal a hexadecimaly por u\u0301ltimo: ( 2, 8, 16- > 10) para decodificar de un sistema a decimal* * CONSIDERACIO\u0301N: * * NO SE MEZCLARA\u0301N SISTEMAS BASE 2, 8 O 16 CON ALGUNO DE ESTOS UNICAMENTE SERA\u0301 DE DECIMAL A UN SISTEMA O DE UN SISTEMA A DECIMAL",
    "input": "* Un entero N* N Li\u0301neas que contendra\u0301n lo siguiente: Una * * cadena* * que donde indiques la conversio\u0301n a realizar. Nu\u0301mero M a codificar o decodificar.",
    "output": "N Li\u0301neas donde imprimas los nu\u0301meros M equivalentes al sistema que se indico\u0301.",
    "note": "",
    "topics": [
      "math",
      "implementation",
      "strings"
    ],
    "id": 16456
  },
  {
    "title": "Secuencia Numerica",
    "url": "https://omegaup.com/arena/problem/Secuencia-Numerica",
    "history": "Vas a construir una sucesion de numeros, el primer elemento de la sucesion sera el numero que ingrese el usuario, lo siguientes elementos se calcularan agregando la suma de los digitos del elemento inmediato anterior. Por ejemplo, si el usuario ingresa el valor 385, el siguiente elemento de la sucesion serar 401, 401= 385+ 16, el 16 se obtiene de las cifras 3+ 8+ 5= 16",
    "input": "Un numero entero positivo N",
    "output": "Mostrar 5 elementos de la sucesion.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 16356
  },
  {
    "title": "Suma Digitos",
    "url": "https://omegaup.com/arena/problem/Suma-Digitos",
    "history": "Se te solicita que realices un co\u0301digo que solicite un numero al usuario y que devuelva la suma de sus digitos",
    "input": "- Un numero entero N. Puedes suponer que 1 \u2264 N \u2264 100000",
    "output": "La suma de los digitos. Mostrar * * 0* * en caso que el numero ingresado se negativo, menor a 0 o mayor a 99999.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 16352
  },
  {
    "title": "Conectados Galacticamente",
    "url": "https://omegaup.com/arena/problem/Conectados-Galacticamente",
    "history": "Dos cifras se consideran que estan * * Conectados Galacticamente* * si la suma de sus digitos se encuentran cercanas, la cercania se refiere a que la diferencia entre las sumas no sea mayor a 15.",
    "input": "- Dos numeros enteros M y N. Puedes suponer que - 10000 \u2264 M, N \u2264 100000",
    "output": "Mostrar las sumas de los digitos de ambas cifras separados por una coma. En la siguiente linea en caso de que las sumas sean cercanas mostrar * * Conectados Galacticamente* * . De lo contrario mostrar * * Ni se topan* *",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 16351
  },
  {
    "title": "\u00c1rea de figura compuesta",
    "url": "https://omegaup.com/arena/problem/Area-de-figura-compuesta",
    "history": "Hacer un programa que calcule el a\u0301rea y el peri\u0301metro de la siguiente figura compuesta: ! [ figura 1] [ 1] \u2014\u2014\u2014-",
    "input": "Tres nu\u0301meros positivos, pueden tener decimales, un nu\u0301mero por renglo\u0301n: el primero es la medida \" a\" , el segundo es la medida \" b\" y el tercero es la medida \" h\" . \u2014\u2014\u2014-",
    "output": "El primer resultado sera\u0301 la medida del peri\u0301metro de la figura ( li\u0301nea color rojo) y el segundo resultado sera\u0301 el a\u0301rea ( sombreado) . \u2014\u2014\u2014- # Ejemplos| | input18146| | output45. 024814731040763. 7001936460191| | description* peri\u0301metro* a\u0301rea| | input10105| | output32. 853981633974440. 1825229575319| | description* peri\u0301metro* a\u0301rea| | input8105| | output30. 198293068896232. 9965005389294| | description* peri\u0301metro* a\u0301rea| | end\u2014\u2014\u2014- # Li\u0301mites0 < ( a, b, h )",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 16330
  },
  {
    "title": "Las letras del \"BASTA\"",
    "url": "https://omegaup.com/arena/problem/Las-letras-del-BASTA",
    "history": "El profe acaba de lanzar un reto entre sus dos grupos de Programacio\u0301n. Se batira\u0301n en un duelo de \" Basta\" y el grupo que resulte ganador, se llevara\u0301 30 puntos en la u\u0301ltima unidad. Para el juego se tiene una ruleta con N letras del alfabeto. La ruleta se puede girar con una fuerza F en cualquiera de los dos sentidos. Un giro con fuerza F = 1 mueve la ruleta en una posicio\u0301n en sentido de las manecillas del reloj, mientras que un giro con fuerza F = - 1, la mueve en una posicio\u0301n en el sentido inverso. Tu\u0301 quieres tener una ventaja para tu grupo, y como buen programador, has decidido crear un programa que permita saber en que\u0301 letra caera\u0301 la ruleta antes de que esta termine de girar.",
    "input": "* Un entero N que determine la cantidad de letras que tendra\u0301 la ruleta. * En seguida una cantidad indefinida de giros representados por un entero F_ i. * Puedes asumir que al inicio del juego, la ruleta siempre esta\u0301 en la posicio\u0301n de la letra A. *",
    "output": "Por cada F_ i de entrada, una li\u0301nea con la letra en la que caera\u0301 la ruleta despue\u0301s de ese giro.",
    "note": "",
    "topics": [
      "math",
      "data structures"
    ],
    "id": 16327
  },
  {
    "title": "Gasolina Magna",
    "url": "https://omegaup.com/arena/problem/Gasolina-Magna",
    "history": "Disen\u0303ar un algoritmo que calcule e imprima el costo de la gasolina Magna que distribuye la empresa Pemex al paso de los meses. Actualmente tiene un costo por litro de 19. 03, se consideran los siguientes incrementos y descuentos: * Cada an\u0303o sube un 1. 1",
    "input": "El dato de entrada es el nu\u0301mero de meses, que sera\u0301 un nu\u0301mero entero no negativo. \u2014\u2014\u2014-",
    "output": "La respuesta o salida sera\u0301 el precio despue\u0301s de todos los aumentos y descuentos. \u2014\u2014\u2014- # Ejemplos| | input5| | output19. 13| | descriptiondespue\u0301s de 5 meses se aplican 5 incrementos de 2 centavos es decir 19. 03 + 0. 10| | input12| | output20. 04813| | descriptiondespue\u0301s de un an\u0303o, son 12 incrementos de 2 centavos, dos incrementos de 28 centavos y un incremento global del 1. 1",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 16324
  },
  {
    "title": "Tablas de multiplicar v1",
    "url": "https://omegaup.com/arena/problem/Tablas-de-multiplicar-ddf2022",
    "history": "Hacer un programa que imprima una tabla de multiplicar de un nu\u0301mero que se le pregunte al usuario, la tabla inicia multiplicando por el 2 y termina en el 9, el si\u0301mbolo de multiplicar sera\u0301 la letra \" x\" minu\u0301scula. \u2014\u2014\u2014-",
    "input": "El dato de entrada es un nu\u0301mero entero positivo menor que cien. \u2014\u2014\u2014-",
    "output": "La respuesta o salida sera\u0301 la tabla de multiplicar del nu\u0301mero que se suministro\u0301 en la entrada. Nota: antes y despue\u0301s del si\u0301mbolo \" x\" o\u0301 \" = \" lleva un espacio en blanco. \u2014\u2014\u2014- # Ejemplos| | input1| | output1 x 2 = 21 x 3 = 31 x 4 = 41 x 5 = 51 x 6 = 61 x 7 = 71 x 8 = 81 x 9 = 9| | descriptionTabla del 1| | input12| | output12 x 2 = 2412 x 3 = 3612 x 4 = 4812 x 5 = 6012 x 6 = 7212 x 7 = 8412 x 8 = 9612 x 9 = 108| | descriptionTabla del 12| | input7| | output7 x 2 = 147 x 3 = 217 x 4 = 287 x 5 = 357 x 6 = 427 x 7 = 497 x 8 = 567 x 9 = 63| | descriptionTabla del 7| | end\u2014\u2014\u2014- # Li\u0301mites1 \u2264 n \u2264 99",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 16323
  },
  {
    "title": "Show Odd numbers",
    "url": "https://omegaup.com/arena/problem/Show-Odd-numbers",
    "history": "# DescriptionPrint in vertical order only the odd numbers from 0 to a number * * n* *",
    "input": "* * n* *",
    "output": "Odd numbers from 0 to * * n* * , printed in vertical order# Example| | input9| | output13579| | descriptionnumbers from 0 to 9 in vertical order| | input16| | output13579111315| | descriptionnumbers from 0 to 16 in vertical order| | end",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 16271
  },
  {
    "title": "Hard equation",
    "url": "https://omegaup.com/arena/problem/Hard-equation",
    "history": "# DescriptionYour friend is solving a very hard equation. You know Python so you can help them really easily. Print the solution to this equation. Note: you can write the square root of something as x* * ( 1/ 2)",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 16265
  },
  {
    "title": "Coding an ATM ",
    "url": "https://omegaup.com/arena/problem/Coding-an-ATM-",
    "history": "# DescriptionYour first job is at a bank, and the first task they give you, is to program the ATM. The user will want to withdraw cash quantities that go from 50 to 10000. Suppose the ATM has 10 bills of 500 pesos, 10 bills of 200 pesos, 20 bills of 100 pesos and 20 bills of 50 pesos. Write a program that, depending on * * C* * , the quantity that the person wants to withdraw, gives the correct quantity in the least possible amount of bills.",
    "input": "The quantity the user will withdraw * * C* * .",
    "output": "A text with the denomination and the quantity of bills that will be withdrawn. # Example| | input8550| | output500 pesos bills: 17200 pesos bills: 0100 pesos bills: 050 pesos bills: 1| | input600| | output500 pesos bills: 1200 pesos bills: 0100 pesos bills: 1| | end",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 16264
  },
  {
    "title": "Show pair numbers",
    "url": "https://omegaup.com/arena/problem/Show-pair-numbers",
    "history": "# DescriptionPrint in vertical order only the pair numbers from 0 to a number * * n* *",
    "input": "* * n* *",
    "output": "Pair numbers from 0 to * * n* * , printed in vertical order# Example| | input8| | output02468| | descriptionnumbers from 0 to 8 in vertical order| | input14| | output02468101214| | descriptionnumbers from 0 to 16 in vertical order| | end",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 16262
  },
  {
    "title": "Rufus Age",
    "url": "https://omegaup.com/arena/problem/Rufus-Age",
    "history": "# DescriptionWhen Tom adopted Rufus, 10 years ago, Tom was 7 times Rufus' age. Today, Tom' s age is the double of Rufus' . What is Rufus age? Tip: solve the equation yourself and use python as a calculator. Print the solution and submit the code to see if it' s correct.",
    "input": "empty",
    "output": "print the solution# Example| | inputnothing| | output12| | description| | end",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 16261
  },
  {
    "title": "Tarjeta de autob\u00fas",
    "url": "https://omegaup.com/arena/problem/Tarjeta_autobus",
    "history": "Hace un par de semanas tu amiga noto\u0301 que al recargar su tarjeta del transporte, su saldo habi\u0301a llegado a 0. 00 y se dio cuenta de que era la primera vez que esto te pasaba, pues por lo general al recargar su tarjeta queda algu\u0301n tipo de saldo restante de su recarga anterior. Tu amiga te comento\u0301 que cada vez que recarga su tarjeta, carga la misma cantidad. Y que siempre compra el mismo boleto con el mismo precio. Esto te hizo cuestionarte si habi\u0301a un programa que te pudiera ayudar a saber cua\u0301ntas recargas habi\u0301a hecho y cua\u0301ntos boletos habi\u0301a comprado antes de llegar a este saldo.",
    "input": "Una li\u0301nea que contiene la cantidad que se carga a la tarjeta en cada recarga A y el precio del boleto que se compra B",
    "output": "Imprime en 3 li\u0301neas los siguientes datos: * TOTAL : ( Dinero total gastado) * RECARGAS: ( Cantidad de recargas) * BOLETOS: ( Boletos comprados)",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 16226
  },
  {
    "title": "Maxi bases num\u00e9ricas",
    "url": "https://omegaup.com/arena/problem/MAXI_BASES",
    "history": "Tu amiga Dora la Iteradora esta\u0301 llevando una clase de bases nume\u0301ricas en el kinder y le pidieron que calculara varios casos usando la siguiente funcio\u0301n relacionada a este tema: \u03bc( B, N) , donde B es una base y N es un nu\u0301mero de di\u0301gitos. La funcio\u0301n calcula el valor ma\u0301s grande posible que se puede obtener a partir de N di\u0301gitos en base B. Por ejemplo, para calcular \u03bc( 5, 3) primero determinamos los di\u0301gitos que tiene la base 5: 0, 1, 2, 3, 4. El di\u0301gito con mayor valor es 4. Ahora calculamos el valor en decimal del 444 ( el di\u0301gito 4 repetido 3 veces) que esta\u0301 en base 5: ( 444) _ 5 = ( 4 \u00d7 5^ 2) + ( 4 \u00d7 5^ 1) + ( 4 \u00d7 5^ 0) = 124 Ayuda a tu amiga Dora a escribir un programa que le permita calcular de manera automa\u0301tica el resultado de la funcio\u0301n \u03bc para cualquier valor de B y N.",
    "input": "La primera li\u0301nea contiene a T, que es el nu\u0301mero de casos de prueba. Las siguientes T li\u0301neas contienen cada caso individual, con dos nu\u0301meros cada li\u0301nea: B y N.",
    "output": "Imprime en una li\u0301nea individual el resultado de \u03bc( B, N) de cada caso.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 16206
  },
  {
    "title": "The Incrementor",
    "url": "https://omegaup.com/arena/problem/INC_NUM",
    "history": "Tu amigo Diego \u201cEl Bucles\u201d Ma\u0301rquez necesita que le ayudes a escribir un programa que dado un nu\u0301mero entero positivo N lo incremente en 1.",
    "input": "La entrada consiste de una sola li\u0301nea con el valor de N.",
    "output": "El resultado de N + 1. # Ejemplos| | input7| | output8| | input999999| | output1000000| | end# Li\u0301mites- 0 \u2264 N \u2264 10^ 1000",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 16204
  },
  {
    "title": "A + B LL",
    "url": "https://omegaup.com/arena/problem/A--B-LL",
    "history": "Esta\u0301s a punto de enfrentarte a uno de los problemas cla\u0301sicos de un programador: sumar dos nu\u0301meros",
    "input": "Dos enteros a y b separados por un espacio.",
    "output": "Un entero indicando la suma de a y b.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 16160
  },
  {
    "title": "Alejandro y su dinero",
    "url": "https://omegaup.com/arena/problem/Alejandro-y-su-dinero",
    "history": "Alejandro tiene MUCHO dinero. E\u0301l tiene n bolivianos en el banco. Por razones de seguridad, quiere retirarlo en efectivo ( no revelaremos los motivos aqui\u0301) . Los cortes de Billetes son de 1, 5, 10, 20, 50, 100 Bs. \u00bfCua\u0301l es el nu\u0301mero mi\u0301nimo de billetes que Alejandro podri\u0301a recibir despue\u0301s de retirar todo su saldo?",
    "input": "La primera y u\u0301nica li\u0301nea de entrada contiene un solo entero n.",
    "output": "Genere la cantidad mi\u0301nima de billetes que Alejandro podri\u0301a recibir.",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 16105
  },
  {
    "title": "Matriz de evaluaci\u00f3n",
    "url": "https://omegaup.com/arena/problem/Matriz-de-evaluacion",
    "history": "La siguiente es una matriz de evaluacio\u0301n aplicada a la materia de Programacio\u0301n Ba\u0301sica en la Universidad de Tecnologi\u0301as del Estado de Guanajuato. ! [ enter image description here] [ 1] La fila de * * Total* * indica el porcentaje que el docente asigno\u0301 a cada indicador de alcance. La suma de estos porcentajes debe ser exactamente 100",
    "input": "* 6 enteros entre 1 y 100, indicando el porcentaje de cada indicador de alcance. * Un entero N entre 1 y 15 indicando la cantidad de evidencias de aprendizaje. * Por cada evidencia dos li\u0301neas: una cadena S que representara\u0301 el nombre de la evidencia y 6 nu\u0301meros enteros separados por espacios representando los valores de la matriz.",
    "output": "* Si los datos son va\u0301lidos, el listado de evidencias de aprendizaje, seguidas del porcentaje que aportan a la calificacio\u0301n final. * En caso contrario, el mensaje Datos incorrectos.",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 16065
  },
  {
    "title": "Suma y resta de vectores",
    "url": "https://omegaup.com/arena/problem/Suma-y-resta-de-vectores",
    "history": "La suma/ resta de matrices es una operacio\u0301n en la que, dadas dos matrices de iguales dimensiones, se suman/ restan sus elementos de acuerdo a la posicio\u0301n que ocupan dentro de la matriz. Asi\u0301, tenemos que: [ 6 8 1; ; 2 9 3; ; 4 5 1 ] + [ 6 8 1; ; 2 9 3; ; 4 5 1 ] = [ 12 16 2; ; 4 18 6; ; 8 10 2 ] Lo anterior es un ejemplo con matrices cuadradas; sin embargo, en este problema solo trabajara\u0301s con matrices de dimensiones 1 \u00d7 N.",
    "input": "* En la primer li\u0301nea, tendra\u0301s un entero N que indicara\u0301 el taman\u0303o del arreglo. * En seguida tendra\u0301s dos li\u0301neas ma\u0301s; en la primera recibira\u0301s los N valores enteros de la matriz A y en la siguiente los N valores enteros de matriz B.",
    "output": "Dos li\u0301neas de salida: * En la primera, la suma de las matrices ( A + B) . * En la segunda, la resta de las matrices ( A- B) .",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 16059
  },
  {
    "title": "Calculando Cargadores",
    "url": "https://omegaup.com/arena/problem/Calculando-Cargadores",
    "history": "Los desarrolladores del videojuego Kill- Z esta\u0301n realizando pruebas para un nuevo nivel que esta\u0301n disen\u0303ando. El nivel empieza con N zombis en escena y dura T minutos. Durante cada minuto se generan N + 2 zombis hayan sido eliminados o no los zombis anteriores, excepto en el u\u0301ltimo minuto en el que no se generan nuevos zombis ( ya que no habri\u0301a tiempo de eliminarlos) . Cada cargador tiene 10 balas y un disparo puede eliminar a un zombi. Cada cargador puede fallar hasta E veces. Tu trabajo es calcular la cantidad mi\u0301nima de cargadores que deben aparecer en el nivel para asegurarse de que sea posible eliminar a todos los zombis.",
    "input": "* Una li\u0301nea con un nu\u0301mero entero N, la cantidad de zombis con las que inicia la escena. * Una li\u0301nea con un nu\u0301mero entero T, la duracio\u0301n del nivel en minutos. * Una li\u0301nea con un nu\u0301mero entero E, la cantidad de veces que puede llegar a fallar un cargador.",
    "output": "Una li\u0301nea con un nu\u0301mero entero con la cantidad mi\u0301nima de cargadores.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 16043
  },
  {
    "title": "Diferencia de Cuadrados Parte II",
    "url": "https://omegaup.com/arena/problem/diferencia-de-cuadrados-parte-II",
    "history": "La comunidad matema\u0301tica se volvio\u0301 loca cuando aparecio\u0301 la diferencia de cuadrados, muy u\u0301til para la factorizacio\u0301n. Guiado por la ti\u0301pica frase de \" Si es tan bueno, \u00bfpor que\u0301 no sacan la parte 2? \" , Joaqui\u0301n decide crear La Diferencia de Cuadrados Parte II. Como casi cualquier segunda parte, no sirve de mucho pero al menos logra su objetivo de entretener. La Diferencia de Cuadrados Parte II consiste en tomar un rango [ A, B] y obtener el cuadrado de cada uno de los nu\u0301meros en este rango de mayor a menor. Luego intercalar entre estos la operacio\u0301n de resta y suma. Por ejemplo, si A = 4 y B = 10 se operari\u0301a de la siguiente forma: 10^ 2 - 9^ 2 + 8^ 2 - 7^ 2 + 6^ 2 - 5^ 2 + 4^ 2 100 - 81 + 64 - 49 + 36 - 25 + 16 = 61 Entonces el valor de La Diferencia de Cuadrados Parte II del rango [ 4, 10] es 61. Tu trabajo es calcular el valor de La Diferencia de Cuadrados Parte II de un rango dado.",
    "input": "Una li\u0301nea con dos nu\u0301meros enteros, A y B respectivamente.",
    "output": "Una li\u0301nea con el valor de La Diferencia de Cuadrados Parte II del rango [ A, B] .",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 16027
  },
  {
    "title": "Recital escolar",
    "url": "https://omegaup.com/arena/problem/recital-escolar",
    "history": "Jessica esta\u0301 super emocionada de que su familia la escuche tocar en su recital de piano. El auditorio en donde se van a sentar los estudiantes esta\u0301 formado por F filas con S sillas cada una. Los estudiantes participara\u0301n en el recital en el orden en el que esta\u0301n sentados. Primero pasara\u0301n los estudiantes de la fila 1, empezando el estudiante sentado en la silla 1. A continuacio\u0301n participara\u0301n los estudiantes sentados en la fila 2, empezando por la silla 1. Y asi\u0301, sucesivamente hasta que pasen todos los estudiantes. En el u\u0301ltimo ensayo Jessica estaba sentada en la silla j de la fila i. 5 minutos antes de empezar el recital, el maestro decide hacer un cambio en el programa. Quiere que los u\u0301ltimos k estudiantes sean los primeros en participar. \u00bfPodri\u0301as ayudar a Jessica a encontrar en que\u0301 fila y en que\u0301 silla se debe sentar? * * Ejemplo* * ! [ ] [ 1] Reacomodo de un auditorio de 5 filas con 6 sillas en cada fila. El maestro quiere que los u\u0301ltimos 3 estudiantes participen primero.",
    "input": "* Una li\u0301nea con dos nu\u0301meros enteros F y S separados por un espacio. F corresponde al nu\u0301mero de filas y S el nu\u0301mero de sillas en cada fila. * Una linea con dos nu\u0301meros enteros i y j. i corresponde al nu\u0301mero de fila y j el nu\u0301mero de silla en el cual esta\u0301 sentada Jessica en el u\u0301ltimo ensayo. * Una li\u0301nea con un nu\u0301mero entero k correspondiente al nu\u0301mero de estudiantes que el maestro quiere mover su participacio\u0301n al inicio.",
    "output": "Dos nu\u0301meros enteros separados por un espacio, el primero corresponde al nu\u0301mero de fila y el segundo al nu\u0301mero de silla en la cual se debe sentar Jessica despue\u0301s del cambio realizado por el maestro.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 16026
  },
  {
    "title": "occ22sfinns33",
    "url": "https://omegaup.com/arena/problem/occ22sfinns33",
    "history": "# \u00bfSuma de Fibonaccis? La sucesio\u0301n de Fibonacci se define por n_ 1= n_ 2= 1 y para i \u2265 3 n_ i= n_ i- 1+ n_ i- 2. Los primeros te\u0301rminosde esta sucesio\u0301n son 1, 1, 2, 3, 5, 8, 13, . . . . Dado un nu\u0301mero n determine si es o no suma de dos te\u0301rminosdela sucesio\u0301n de Fibonacci. Las respuestas posibles son \" Si\" y \" No\" . # Ejemplos| | input15| | outputSi| | input12| | outputNo| | end",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 15988
  },
  {
    "title": "occ22sfins24",
    "url": "https://omegaup.com/arena/problem/occ22sfins24",
    "history": "# \u00bfCua\u0301ntos primos? Dados dos nu\u0301meros enteros n_ 1 y n_ 2 ( 1 \u2264 n_ 1 \u2264 n_ 2 \u2264 10^ 6) encontrar cua\u0301ntos nu\u0301meros primos p hay entre n_ 1 y n_ 2, esto es, cua\u0301ntos primos p cumplen n_ 1 \u2264 p \u2264 n_ 2. Recuerde que los nu\u0301meros primos son aquellos que solo son divisibles entre ellos mismos y el 1.",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 15982
  },
  {
    "title": "occ22sfinns22",
    "url": "https://omegaup.com/arena/problem/occ22sfinns22",
    "history": "# Sucesio\u0301n Aritme\u0301ticaUna sucesio\u0301n aritme\u0301tica es una secuencia de nu\u0301meros cada uno de los cuales se llama te\u0301rmino, en la cual la diferencia entre unte\u0301rmino y el anterior es una constante d, excepto el primer te\u0301rmino que es dado, a d se llama diferencia. Dado el primer te\u0301rmino, la diferencia de una sucesio\u0301n aritme\u0301tica y un nu\u0301mero p determinar si p es un te\u0301rmino de la sucesio\u0301n. Encaso de respuesta afirmativa decir que te\u0301rmino es. Las respuestas posibles son \" Si\" y el cardinal del te\u0301rmino o \" No\" . # Ejemplos| | input2 7 14| | outputNo| | input2 7 16| | outputSi 3| | end",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 15977
  },
  {
    "title": "occ22sfipn32",
    "url": "https://omegaup.com/arena/problem/occ22sfipn32",
    "history": "# Nu\u0301meros compadresDecimos que dos nu\u0301meros son compadres si tienen la misma suma de di\u0301gitos. Por ejemplo 752 y 6134 son compadres ya que en ambosla suma de sus di\u0301gitos es 14. Haga un programa que reciba un entero n ( 2 \u2264 n \u2264 100) y a continuacio\u0301n n nu\u0301meros cada uno entre1 y 10^ 8 y que encuentre cua\u0301ntos pares de esos nu\u0301meros son compadres.",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 15975
  },
  {
    "title": "occ22sfipn22",
    "url": "https://omegaup.com/arena/problem/occ22sfipn22",
    "history": "# Nu\u0301mero de DivisoresHaga un programa que reciba un nu\u0301mero natural y que de\u0301 como salida cua\u0301ntos divisores tiene el nu\u0301mero dado en la entrada. Tengaen cuenta que tanto el nu\u0301mero 1 como el propio nu\u0301mero se consideran divisores.",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 15969
  },
  {
    "title": "occ22sfinpn21",
    "url": "https://omegaup.com/arena/problem/occ22sfinpn21",
    "history": "# Tiro al BlancoConsidere un tablero de tiro al blanco con tres ci\u0301rculos conce\u0301ntricos de adentro hacia afura c_ 1, c_ 2, c_ 3. Cada tiro que quede en el ci\u0301rculo c_ i, obtendra\u0301 p_ i puntos. Haga un programa que reciba primero p_ 1, p_ 2 y p_ 3 yque reciba a continuacio\u0301n n_ 1, n_ 2 y n_ 3, el nu\u0301mero de aciertos en cada uno de los ci\u0301rculos, y que de\u0301 como salida los puntos obtendidos.",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 15968
  },
  {
    "title": "Equilibrando las torres de bloques",
    "url": "https://omegaup.com/arena/problem/Equilibrando-las-torres-de-bloqu",
    "history": "Cuentas con N torres formadas por bloques y deseas mover algunos bloques entre las torres existentes para minimizar la diferencia de alturas entre la torre ma\u0301s baja ( la de menor cantidad de bloques) y la ma\u0301s alta ( la de mayor cantidad de bloques) . Un movimiento de bloque consiste en quitar un bloque de una torre para colocarlo en otra. Escribe un programa que calcule la menor cantidad de movimientos que necesitas hacer para lograr tu objetivo y las alturas resultantes de las N torres.",
    "input": "Un entero N seguido de las alturas originales de las N torres. Puedes suponer que 1 \u2264 N \u2264 1000 y que todas las alturas esta\u0301n entre 1 y 100.",
    "output": "Un entero que denote la menor cantidad de movimientos que necesitas hacer, seguido de N enteros que denotan las alturas finales de las torres. En caso de existir varias soluciones, puedes imprimir cualquiera de ellas.",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 15961
  },
  {
    "title": "Adicion simple",
    "url": "https://omegaup.com/arena/problem/Adicion-simple",
    "history": "La adicio\u0301n es una operacio\u0301n matema\u0301tica que resulta al reunir varias cantidades en una sola. Los nu\u0301meros que se unen se llaman sumandos y el resultado se denomina simplemente suma. Para representar la adicio\u0301n, se emplea el operador + , que se lee como \" ma\u0301s\" . Asi\u0301, la expresio\u0301n 2 + 3 = 5 la podemos leer como \" la suma de dos ma\u0301s tres es igual a cinco\" . Debera\u0301s crear un programa que realice adiciones. Simple, \u00bfverdad?",
    "input": "Dos enteros positivos A y B.",
    "output": "La adicio\u0301n de A+ B.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 15918
  },
  {
    "title": "Cuadril\u00e1tero de boxeo",
    "url": "https://omegaup.com/arena/problem/Cuadrilatero-de-boxeo",
    "history": "Como sabes, en todo ring ( cuadrila\u0301tero de boxeo) se colocan unas cuerdas de material ela\u0301stico; siempre en tres niveles, para ma\u0301s datos. Este encordado sirve para contener a quienes boxean, les ayudan a mantenerse dentro de la zona de combate e, incluso, les permiten rebotar. ! [ Estructura de un \" cuadrila\u0301tero de boxeo\" ] ( cb. jpg) En la imagen podra\u0301s apreciar la superficie del ring y sus postes en azul; se han dibujado las cuerdas de un u\u0301nico nivel en dos colores distintos ( verde y rojo) para evitar confusiones. Desde luego, para que cada cuerda cumpla con su funcio\u0301n deben seguirse ciertas reglas: Cada cuerda debe pretensarse antes de colocarla; esto quiere decir que debes considerar una longitud 5",
    "input": "Parejas de reales positivos ( largo y ancho - en ese orden- , medidos en metros, de poste a poste, de un cuadrila\u0301tero de boxeo) . Cada pareja es un caso distinto.",
    "output": "Por cada caso, un real positivo ( la medida en metros de la cuerda ela\u0301stica necesaria para colocar un encordado de tres niveles en el cuadrila\u0301tero dado) . Para su ca\u0301lculo debes tomar en cuenta las especificaciones establecidas ( el pretensado de las cuerdas y el excedente para un adecuado montaje) . # NotaPuedes usar datos de precisio\u0301n simple ( float) ; no se necesita ma\u0301s precisio\u0301n para este reto. | | input3 3| | output36. 6| | descriptionUn cuadrila\u0301tero \" chico\" | | input5 7| | output70. 8| | descriptionUn cuadrila\u0301tero \" amplio\" | | end",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 15901
  },
  {
    "title": "occ22clasns22",
    "url": "https://omegaup.com/arena/problem/occ22clasns22",
    "history": "# \u00bfCua\u0301ntos pares dan primos? Haga un programa que reciba como entrada un entero n ( 2 \u2264 n \u2264 20) y a continuacio\u0301n n nu\u0301meros enteros positivos diferentes. Suprograma debe reportar cua\u0301ntos pares de esos nu\u0301meros suman un nu\u0301mero primo.",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 15847
  },
  {
    "title": "occ22clasns14",
    "url": "https://omegaup.com/arena/problem/occ22clasns14",
    "history": "# Menor cuadrado perfectoDado un entero mayor que cero encontrar el menor cuadrado perfecto mayor o igual que e\u0301l. # Ejemplos| | input8| | output9| | input9| | output9| | end",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 15846
  },
  {
    "title": "occ22clasns12",
    "url": "https://omegaup.com/arena/problem/occ22clasns12",
    "history": "# \u00bfAritme\u0301tica o Geome\u0301trica? Una sucesio\u0301n aritme\u0301tica es una secuencia de nu\u0301meros cada uno de los cuales se llama te\u0301rmino, en la cual la diferencia entre unte\u0301rmino y el anterior es una constante d, excepto el primer te\u0301rmino que es dado, a d se llama diferencia. Por otro lado una sucesio\u0301n geome\u0301trica es una secuencia de te\u0301rminos, en la cual la divisio\u0301n entre un te\u0301rmino y elanterior es una constante r, excepto el primer te\u0301rmino que es dado, a r se llama razo\u0301n. Dados los tres primeros te\u0301rminos de una sucesio\u0301n determinar si es aritme\u0301tica ( A) o geome\u0301trica ( G) . Si es aritme\u0301tica dar la diferencia ( d) y si es geome\u0301trica dar la razo\u0301n ( r) . # Ejemplos| | input3 8 13| | outputA 5| | input3 6 12| | outputG 2| | end",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 15844
  },
  {
    "title": "occ22clasns11",
    "url": "https://omegaup.com/arena/problem/occ22clasns11",
    "history": "# PromedioDados dos nu\u0301meros, encontrar su promedio",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 15843
  },
  {
    "title": "occ22claspn23",
    "url": "https://omegaup.com/arena/problem/occ22claspn23",
    "history": "# \u00bfCua\u0301ntos pares suman un cuadrado perfecto? Dado un entero positivo n ( 2\u2264 10) y n nu\u0301meros, encontrar cua\u0301ntos pares de esos nu\u0301meros suman un cuadrado perfecto.",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 15842
  },
  {
    "title": "occ22claspn15",
    "url": "https://omegaup.com/arena/problem/occ22claspn15",
    "history": "# \u00bfEs potencia? Dados dos nu\u0301meros enteros positivos m y n, determinar si n es potencia de m, esto es si n= m^ p para algu\u0301n p. En caso de respuesta afirmativa dar el valor de p. Las salidas posibles son \" Si\" un espacio y p o \" No\" . # Ejemplos| | input2 8| | outputSi 3| | input3 24| | outputNo| | end",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 15839
  },
  {
    "title": "occ22claspn13",
    "url": "https://omegaup.com/arena/problem/occ22claspn13",
    "history": "# \u00bfEs una sucesio\u0301n aritme\u0301tica? Una sucesio\u0301n aritme\u0301tica es una secuencia de nu\u0301meros cada uno de los cuales se llama te\u0301rmino, en la cual la diferencia entre dos te\u0301rminos consecutivos es una constante d, excepto el primer te\u0301rmino que es dado. El valor de la constante d puede ser positivo o negativo. Ese valor d se llama la diferencia de la sucesio\u0301n. Por ejemplo 3, 5, 7, 9, 11, . . . es una sucesio\u0301n con primer te\u0301rmino 3 y diferencia 2. Dados tres nu\u0301meros diga si son, enel orden en que se han dado, los tres primeros te\u0301rminos de una sucesio\u0301n aritme\u0301tica. En el caso en que la respuesta sea afirmativa decir el valor de la diferencia. Las respuestas aceptadas son \" Si\" seguido por un espacio y el valor de la diferenciao \" No\" . # Ejemplos| | input3 5 7| | outputSi 2| | input3 5 3| | outputNo| | end",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 15837
  },
  {
    "title": "occ22claspn11",
    "url": "https://omegaup.com/arena/problem/occ22claspn11",
    "history": "# Producto de suma y diferenciaHaga un programa que reciba como entrada dos nu\u0301meros enteros a y b y que de\u0301 como salida ( a+ b) \u00d7( a- b) .",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 15835
  },
  {
    "title": "Divisibilidad b\u00e1sica",
    "url": "https://omegaup.com/arena/problem/Divisibilidad-basica",
    "history": "En matema\u0301ticas, se dice que A es divisible por B cuando A/ B es una divisio\u0301n exacta. En otras palabras, cuando A% B = 0. \u00bfPodra\u0301s determinar la divisibilidad de un nu\u0301mero por 2, 3, 4, 5 y 6?",
    "input": "Una cantidad desconocida de nu\u0301meros enteros de N_ i di\u0301gitos, separados por un salto de li\u0301nea.",
    "output": "Por cada nu\u0301mero de entrada, una li\u0301nea que indique la divisibilidad por 2, 3, 4, 5 y 6. Revisa el ejemplo para conocer el formato de salida esperado.",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 15688
  },
  {
    "title": "Calculadora b\u00e1sica",
    "url": "https://omegaup.com/arena/problem/Calculcadora",
    "history": "Siri es una empresaria que a diario necesita hacer operaciones aritme\u0301ticas ba\u0301sicas como sumas, restas, multiplicacio\u0301n y divisio\u0301n en papel. El hacerlo en papel le consume mucho tiempo que puede usarlo en actividades ma\u0301s importantes. Por esta razo\u0301n, vamos a crear un programa que la ayude.",
    "input": "Operando a; un operador + , - , * o / que indica la operacio\u0301n aritme\u0301tica de suma, resta, multiplicacio\u0301n o divisio\u0301n; y el segundo operando b. La entrada tiene que ser ingresada en una sola li\u0301nea y cada elemento de la operacio\u0301n separados por un espacio en blanco: operando1 operador operando2",
    "output": "El resultado de la operacio\u0301n solicitada por el usuario con una precisio\u0301n de dos o el mensaje \" Operacio\u0301n no disponible\" en caso de operaciones no va\u0301lidos. La salida se muestra en una sola li\u0301nea.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 15677
  },
  {
    "title": "Evaluando una fracci\u00f3n rara",
    "url": "https://omegaup.com/arena/problem/Evaluando-una-fraccion-rara",
    "history": "Escribe un programa que evalu\u0301e la expresio\u0301n x^ 1. 2y - z + 5. 7/ ( x + 2y + 3z/ xy)",
    "input": "Tres reales x, y, z separados por espacios. Puedes suponer que 1 \u2264 x, y, z \u2264 8.",
    "output": "Un real que sea el valor de la expresio\u0301n tras evaluarla. Tu programa se considerara\u0301 correcto si el valor calculado es razonablemente cercano a la respuesta exacta.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 15671
  },
  {
    "title": "Fibonacci y MCD",
    "url": "https://omegaup.com/arena/problem/Fibonacci-y-MCD",
    "history": "Tu profesor de matema\u0301ticas ensen\u0303o\u0301 dos temas muy interesantes: La sucesio\u0301n de Fibonacci y el ma\u0301ximo comu\u0301n divisor. Como forma de aumentar su curiosidad sobre esta sucesio\u0301n dejara\u0301 un problema muy simple, encontrar el ma\u0301ximo comu\u0301n divisor de los nu\u0301meros de Fibonacci f_ n y f_ m cualesquiera. Buscando en Google descubriste que hay una propiedad que tal vez te podri\u0301a ayudar con este problema, pues resulta que mcd( f_ n, f_ m) = f_ mcd( n, m) . Adema\u0301s sabes programar, asi\u0301 que deseas usar esta herramienta para poder resolver el problema para cualesquiera n y m.",
    "input": "Dos enteros n y m que representan los i\u0301ndices de los dos nu\u0301meros de Fibonacci a los que les quieres sacar el ma\u0301ximo comu\u0301n divisor.",
    "output": "El ma\u0301ximo comu\u0301n divisor de f_ n y f_ m.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 15517
  },
  {
    "title": "Comparando dinero",
    "url": "https://omegaup.com/arena/problem/Comparando-dinero",
    "history": "Durante la pandemia, Brian se dedico\u0301 a desarrollar apps y modificar algunas otras para poder mejorarlas. Brian era tan bueno que al poco tiempo se fue haciendo de mucho dinero. < br> < br/ > En una ocasio\u0301n, se topo\u0301 con otro programador de su nivel, que alegaba tener ma\u0301s dinero. Brian no se quedari\u0301a con los brazos cruzados y acudio\u0301 a ti para que implementes un programa, que, dadas las dos cantidades de dinero, indiques quie\u0301n posee ma\u0301s dinero, sin embargo, no debes decir quien tiene ma\u0301s dinero, sino que debes agregar el operador relacional faltante ( < , > , = ) .",
    "input": "Recibira\u0301s n li\u0301neas. En cada una de estas recibira\u0301s dos nu\u0301meros * * a* * y * * b* * , el primero denota la cantidad de dinero de Brian y el segundo es la cantidad de dinero del otro programador.",
    "output": "Imprime < , > o = ( menor que, mayor que e igual respectivamente) segu\u0301n sea el caso. Para ma\u0301s informacio\u0301n consulta los ejemplos.",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 15515
  },
  {
    "title": "Checando la tarea",
    "url": "https://omegaup.com/arena/problem/Checando-la-tarea",
    "history": "A\u0301ngel es un profesional para los juegos tipo shooter de primera persona, a tal grado que esta\u0301 a punto de disputar un torneo internacional importante. A\u0301ngel estaba listo para jugar contra los asia\u0301ticos ( que son unos semidioses jugando) , pero sus padres lo obligaron a ayudarle a su hermano con su tarea. < br> < br/ > El hermano pequen\u0303o de A\u0301ngel esta\u0301 viendo el tema de sumas y restas, esto no es problema para A\u0301ngel, sin embargo, la cantidad de operaciones son muchas y es muy tedioso revisar una por una, pero a A\u0301ngel se le ocurrio\u0301 la idea de implementar un programa que sea capaz de revisar la tarea de su hermano. Ayu\u0301dalo para que pueda ganarle a los asia\u0301ticos.",
    "input": "Recibira\u0301s un nu\u0301mero entero n, enseguida, debera\u0301s leer n li\u0301neas, en la que cada una contiene una cadena, sin espacios y con el siguiente formato: - * * nu\u0301mero* * + * * nu\u0301mero* * = * * nu\u0301mero* * - * * nu\u0301mero* * - * * nu\u0301mero* * = * * nu\u0301mero* * < br> < br/ > Se garantiza que solo recibes sumas y restas. No hay espacios y solo recibes nu\u0301meros enteros positivos. Adema\u0301s, no habra\u0301 signo al principio de la operacio\u0301n. Los nu\u0301meros solo son menores o iguales a 2000.",
    "output": "Para cada caso, imprimir el mensaje * * Correcto* * si la operacio\u0301n esta\u0301 bien, o en caso contrario imprimir * * Incorrecto* * .",
    "note": "",
    "topics": [
      "math",
      "implementation",
      "strings"
    ],
    "id": 15514
  },
  {
    "title": "Duraci\u00f3n de un Juego",
    "url": "https://omegaup.com/arena/problem/Duracion-de-un-Juego",
    "history": "Teniendo la hora de incio y fin de un juego que se sabe que es menor o igual a 24 horas, se desea saber el tiempo del juego. Si la hora fin es menor o igual a la hora de incio se tiene la fo\u0301rmula: Tiempo = 24 \u2013 inicio + finSi no se tiene la formula: Tiempo = fin - inicio# NotaTanto 0 < = inicio < = 24 como 0 < = fin < = 24 se debe cumplir",
    "input": "La primer li\u0301nea de entrada contendra\u0301 a inicio y fin| | input11 21| | output10| | end",
    "output": "",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 15492
  },
  {
    "title": "Promedio Java",
    "url": "https://omegaup.com/arena/problem/Promedio-Java",
    "history": "Nos dan el promedio y el primer parcial, hay que depejar el segundo parcial de la formula y no quedari\u0301: Segundo = Promedio * 2 - Primer# NotaRecuerde que para calcular el promedio de dos valores se aplica la fo\u0301rmula Promedio = Primer + Segundo/ 2",
    "input": "El Promedio y el Primer valor| | input8. 4 8. 1| | output8. 7| | end",
    "output": "",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 15491
  },
  {
    "title": "BuzzFizz",
    "url": "https://omegaup.com/arena/problem/BuzzFizz",
    "history": "Para cada nu\u0301mero entero dentro del rango de [ a, b] se debera\u0301 de imprimir alguna de las siguientes opciones: Si es mu\u0301ltiplo de 15, desplegar BuzzFizzSi es mu\u0301ltiplo de 3, deplegar BuzzSi es mu\u0301ltiplo de 5 desplegar Fizz. En cualquier otro caso deplegar el mismo nu\u0301mero. # NotaUtilice if' s anidados",
    "input": "La primer li\u0301nea de entrada contendra\u0301 los nu\u0301meros a y b del intervalo| | input3 17| | outputBuzz4FizzBuzz78BuzzFizz11Buzz1314BuzzFizz1617| | end",
    "output": "",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 15489
  },
  {
    "title": "Suma dos Enteros Java",
    "url": "https://omegaup.com/arena/problem/Suma-dos-Enteros-Java",
    "history": "Dados dos valores enteros a y b, Calcular: 1. Suma2. Resta3. Multiplicacio\u0301n4. Divisio\u0301n5. Residuo",
    "input": "Los valores a y b| | input21 4| | output25178451| | end",
    "output": "",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 15488
  },
  {
    "title": "Suma Decimales",
    "url": "https://omegaup.com/arena/problem/Suma-Decimales",
    "history": "Cada cantidad viene con un decimal y se desea saber la suma de los decimales de todas las cantidades. # Me\u0301todo1. Multiplicar d por 102. Convertir a entero a d, asignarlo a a3. Calcular el Residuo de a y acumular",
    "input": "La primer li\u0301nea de entrada contendra\u0301 el total de datos a trabajar N. La segunda li\u0301nea contendra\u0301 los valores flotantes a trabajar ( formato xxx. x) . | | input37. 4 0. 2 115. 6| | output12| | end",
    "output": "Mostrar el acumulador.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 15486
  },
  {
    "title": "Blackjack",
    "url": "https://omegaup.com/arena/problem/Blackjack-ASINUS",
    "history": "Casimireh el su\u0301per agente de investigaciones de la Agencia Internacional de Situaciones Extran\u0303as ( AISE) , se encuentra en un casino, en el cual hay una meza de Blackjack mejor conocido como veintiuno en la cual esta\u0301 interesado en jugar; en este juego el objetivo es tener dos cartas y sumar 21 entre ellas o un nu\u0301mero cercano de un total de 54 cartas que tiene una baraja. Para ello, debemos tomar en cuenta a nuestro detective no le gusta perder tiempo ya que tiene muchos casos que solucionar, por lo que, para ganar e\u0301l quiere obtener 21 ( blackjack) en el primer turno, lo que implica que las primeras dos cartas que le den deben sumar 21, para ello, e\u0301l sabe que esto lo puede lograr solo con las siguientes cartas: ! [ enter image description here] [ 1] Obteniendo 1 as de cualquier figura que vale 11, y un Joker o Queen o King de cualquier figura que vale 10. Antes de sentarse a jugar, al detective se le acaba de ocurrir la siguiente pregunta \u00bfDe cua\u0301ntas formas posibles puedo obtener 21 con esas cartas? , tomando en cuenta que requiere un as y otra de valor 10. # ProblemaComo su asistente, te encarga cualquier tarea que sea necesaria en su carrera o que se le ocurra, por lo que te ha pedido ayuda para saber la respuesta a la pregunta que se acaba de plantear, para ello, construye un programa que de\u0301 solucio\u0301n a la inco\u0301gnita.",
    "input": "* * A* * , como el nu\u0301mero de cartas en todo el mazo con las que se puede obtener 21 y que su valor sea 11. * * B* * , como el nu\u0301mero de cartas en todo el mazo con las que se puede obtener 21 y que su valor sea 10.",
    "output": "* * X* * - Como el nu\u0301mero que representa el total de formas posibles en que puede obtener 21, en el primer turno, con las cartas que valen 11 y las que valen 10 disponibles. # Condiciones* De alguna forma extran\u0303a en este casino son muy buenos con los jugadores y en algunas ocasiones mezclan ma\u0301s de una baraja para repartir las cartas, por lo que las posibilidades pueden cambiar.",
    "note": "",
    "topics": [
      "math",
      "combinatorics"
    ],
    "id": 15388
  },
  {
    "title": "Cableando por la ruta",
    "url": "https://omegaup.com/arena/problem/Cableando-por-la-ruta",
    "history": "Una conocida empresa proveedora deinternet ha entrado recientemente en unpartido Bonaerense, y sus tentadoraspromociones han generado el intere\u0301s deusuarios en varios pueblitos ubicados justo a un lado de una ruta. La empresa debe lograr conectar todos los pueblitos a su \u201cmegacentral\u201d proveedora de internet ( asi\u0301 la denomina laempresa en todas sus publicidades) . Estacentral tambie\u0301n se encuentra a un lado dela misma ruta. Lo\u0301gicamente, la empresaquiere realizar esta conexio\u0301n utilizando lami\u0301nima longitud posible de cable, para asi\u0301ahorrar costos. No es necesario que cada pueblo tengasu propio cable directo e ininterrumpidohasta la megacentral: Si hay un cableentre los pueblos A y B, y a su vez hay uncable entre el pueblo B y la central, esoes suficiente para abastecer de interneta ambos pueblos A y B. Estas cadenasde abastecimiento podri\u0301an ser tan largascomo se desee: Si hay un cable queconecta un pueblo A, con otro pueblo Bque ya esta\u0301 abastecido de alguna manera, el pueblo A queda a su vez automa\u0301ticamente abastecido. La figura muestra un ejemplo dondese abastece de internet a los 4 pueblospresentes en ella: ! [ enter image description here] [ 1] Utilizando solamente 4 cables, de 3, 5, 5 y 7 kilo\u0301metros, se ha logrado conectartodos los pueblitos a la megacentral, conuna longitud total de 20km de cable. Se te pide que escribas un programa quereciba el nu\u0301mero de kilo\u0301metro de ruta enel que se encuentran la megacentral y lospueblitos, y determine la mi\u0301nima cantidadde cable ( en kilo\u0301metros) que es necesarioutilizar para realizar la conexio\u0301n.",
    "input": "Se recibe: Primera li\u0301nea: Un u\u0301nico entero: La cantidad N ( 1 \u2264 N \u2264 200. 000) de pueblitosque hay que conectar en total. Segunda li\u0301nea: Un u\u0301nico entero K ( 0 \u2264K \u2264 109) : El nu\u0301mero de kilo\u0301metro de rutaen que se encuentra la megacentral. Tercera li\u0301nea: N nu\u0301meros enteros ki( 0 \u2264 ki \u2264 109) , separados por espacio. Estos son los nu\u0301meros de kilo\u0301metro deruta en que se encuentran ubicados losdistintos pueblitos.",
    "output": "Se debe escribir una u\u0301nica li\u0301nea, concon un u\u0301nico entero que indique la longitud total de cable necesaria ( en kilo\u0301metros) .",
    "note": "",
    "topics": [
      "sortings",
      "math",
      "implementation"
    ],
    "id": 15382
  },
  {
    "title": "Cazadores de picafresas",
    "url": "https://omegaup.com/arena/problem/Cazadores-de-picafresas",
    "history": "Es el an\u0303o 3050, y la civilizacio\u0301n humana sufrio\u0301 grandes cambios y dan\u0303os. Ciudades enteras fueron enterradas por cataclismos, terremotos y deslaves. Los sobrevivientes buscan entre las ruinas de las antiguas civilizaciones tesoros para vender en el mercado negro. Uno de los tesoros ma\u0301s codiciados en estos tiempos son las * * picafresas* * , ya que dejaron de existir hace ma\u0301s de 500 an\u0303os, y las u\u0301nicas que quedan esta\u0301n enterradas en las ruinas del pasado. * * N* * valientes aventureros han ido en busca de dicho tesoro a tres ruinas, manteniendo comunicacio\u0301n con la civilizacio\u0301n por radio. En cada ruina encuentran * * P* * cantidad de picafresas, las cuales se repartira\u0301n en partes iguales, y si sobran, se guardara\u0301n en un bau\u0301l. Pero, en cada ruina uno de los aventureros decide retirarse debido a los peligros que existen en los lugares. Quienes logren recorrer las tres ruinas decidira\u0301n cua\u0301l de ellos se queda con las picafresas del bau\u0301l de la manera ma\u0301s justa posible: de ti\u0301n- mari\u0301n. Ayuda a quienes mantienen comunicacio\u0301n con los aventureros a saber cu\u0301antas picafresas obtuvieron los aventureros que no se retiraron y cua\u0301ntas obtuvo el que fue elegido por ti\u0301n- mari\u0301n.",
    "input": "Una li\u0301nea con un entero * * N* * que representa el nu\u0301mero de aventureros iniciales de la expedicio\u0301n. Otra li\u0301nea con tres enteros separados por un espacio que representan la cantidad de picafresas encontradas en cada ruina.",
    "output": "Dos enteros separados por un espacio, el primero sera\u0301 la cantidad de picafresas con la que salieron todos los que logragron recorrer las tres ruinas y el segundo la cantidad de picafresas que obtuvo quien gano\u0301 el ti\u0301n- mari\u0301n.",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 15351
  },
  {
    "title": "A + B",
    "url": "https://omegaup.com/arena/problem/A--BA0B",
    "history": "",
    "input": "Dos nu\u0301meros, a y b.",
    "output": "La suma de ambos nu\u0301meros.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 15316
  },
  {
    "title": "La fila perfecta",
    "url": "https://omegaup.com/arena/problem/La-fila-perfecta",
    "history": "En una empresa de desarrollo de sistemas informa\u0301ticos han decidido premiar la precisio\u0301n de sus programadores. Y tal vez pienses que se tomara\u0301 en cuenta la precisio\u0301n con la que desarrollan sus co\u0301digos. . . \u00a1Pero no! . El u\u0301nico criterio para obtener el premio es: hacer una fila perfecta; despue\u0301s de todo, uno debe ser muy preciso para lograr ese objetivo. En un punto P_ 0 ( X_ 0, Y_ 0) se coloca el director de la empresa, listo para entregar el premio a quienes superen la prueba. Luego se forma el primer programador en el punto P_ 1 ( X_ 1, Y_ 1) , quien, por cierto, asegura su premio por ser el primero en llegar a la fila. Detra\u0301s de e\u0301l se forman el resto de los programadores intentando hacer una fila perfecta con respecto del director y del primer programador que llego\u0301 a formarse. Un dron que sobrevuela el espacio donde se lleva a cabo la prueba, captura las coordenadas del resto de los empleados y las envi\u0301a al servidor central de la empresa. So\u0301lo se premiara\u0301 a quienes este\u0301n colocados en una fila perfecta. Ya que los N programadores acudieron por el premio, no hay quie\u0301n programe la solucio\u0301n al problema. \u00bfCrees que puedas ayudarles? ! [ enter image description here] [ 1]",
    "input": "Dos enteros X_ 0 y Y_ 0 que representan las coordenadas de la ubicacio\u0301n del director, seguidos de la cantidad N de programadores que acudieron por el premio. En seguida, N pares de nu\u0301meros enteros representando las coordenadas de cada empleado en la fila.",
    "output": "La cantidad de programadores que recibieron el premio.",
    "note": "",
    "topics": [
      "geometry",
      "implementation",
      "math"
    ],
    "id": 15281
  },
  {
    "title": "Sumando segundos",
    "url": "https://omegaup.com/arena/problem/Sumando-segundos",
    "history": "Dado un di\u0301a de la semana y una hora en formato de 24 horas, calcula el di\u0301a y la hora despue\u0301s de N segundos.",
    "input": "En la primer li\u0301nea recibira\u0301s una cadena en la que se indicara\u0301 el di\u0301a de la semana y la hora inicial. Se garantiza que todas las entradas sera\u0301n en mayu\u0301sculas y sin acentos. En la segunda li\u0301nea recibira\u0301s la cantidad N de segundos transcurridos desde la hora inicial.",
    "output": "El di\u0301a de la semana y la hora final.",
    "note": "",
    "topics": [
      "data structures",
      "math"
    ],
    "id": 15274
  },
  {
    "title": "Evaluaci\u00f3n actualizada",
    "url": "https://omegaup.com/arena/problem/Evaluacion-actualizada",
    "history": "Considere los siguientes criterios de evaluacio\u0301n para las materias de programacio\u0301n en las carreras de TICS y Mecatro\u0301nica: * Examen: 30",
    "input": "Tres enteros E, P y A, representando la calificacio\u0301n de examen, pra\u0301cticas y asistencia, respectivamente.",
    "output": "* * Acreditado, sin cambios* * o * * No acreditado, sin cambios* * , en caso de que el resultado sea el mismo antes y despue\u0301s de la implementacio\u0301n de la nueva regla de evaluacio\u0301n. * * Acreditaba, pero ya no acredita* * , en caso de que el resultado haya sido afectado por la implementacio\u0301n de la nueva regla de evaluacio\u0301n.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 15232
  },
  {
    "title": "Los limones",
    "url": "https://omegaup.com/arena/problem/Los-limones-ASINUS",
    "history": "La mama\u0301 de Emiliano lo ha mandado a comprar limones para hacer un postre, para lo que ha llegado a la tiendita de la esquina y ha pedido la cantidad exacta que su mama\u0301 le solicito\u0301, pero como es muy estricta, le dijo que si no trai\u0301a la cantidad exacta o ma\u0301s cantidad de limones de los que solicita la receta, mejor no comprara nada y entonces cambiari\u0301an de opcio\u0301n para el postre. Al llegar a la tienda, se ha percatado que el precio del limo\u0301n esta\u0301 por los cielos y no sabe si podra\u0301 alcanzar a pagar por e\u0301l. El costo del limo\u0301n lo ha encontrado en * * X* * pesos el kilo, y su mama\u0301 le encargo\u0301 * * Y* * kilos, para lo cual le dio * * Z* * pesos para pagar. # ProblemaAyuda a Emiliano a saber si ajusta la cantidad de limones que su mama\u0301 le ha encargado con el dinero que le dio para ello.",
    "input": "* * X* * - Como el costo en pesos del kilogramo de limo\u0301n. * * Y* * - Como la cantidad de limones que su mama\u0301 le encargo\u0301. * * Z* * - Como la cantidad de dinero que su mama\u0301 le dio para comprar los limones.",
    "output": "\" SI\" - En caso de que el dinero que trae consigo es suficiente para comprar los limones. \" NO\" - En caso de que el dinero que trae consigo no es suficiente para comprar los limones.",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 15131
  },
  {
    "title": "Empacando mandado",
    "url": "https://omegaup.com/arena/problem/Empacando-mandado",
    "history": "Emiliano esta\u0301 trabajando como empacador en una tienda de autoservicio muy concurrida en su ciudad, sin embargo, algunas ocasiones su trabajo se le hace un poco tedioso, por lo que regularmente busca alternativas para distraerse mientras empaca el mandado. El di\u0301a de hoy, Emiliano se ha encontrado haciendo cuentas mentalmente mientras empaca, para ello, se ha propuesto, que cuando el cajero le pase los * * N* * productos uno por uno, ira\u0301 sumando su costo, con el objetivo de comparar el total a pagar por el cliente con el que e\u0301l ha obtenido. Los * * N* * productos se los ira\u0301 pasando el cajero, su precio, esta\u0301 marcado con una etiqueta verde debajo de cada producto. # ProblemaCrea un programa que le permita a Emiliano verificar la suma del costo de los * * N* * productos antes de compararla con la de la caja.",
    "input": "En el mismo orden: * * N* * - Como el nu\u0301mero de productos que va a pagar el cliente. * * C1, C2, C3, . . . Cn* * - Como el costo de cada producto a pagar.",
    "output": "* * X* * - Como el monto total a pagar por el clinete, una vez sumandos totod los costos.",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 15130
  },
  {
    "title": "El Autob\u00fas",
    "url": "https://omegaup.com/arena/problem/El-Autobus-ASINUS",
    "history": "Emiliano y sus amigos han decidido emprender su camino al festival de mu\u0301sica Codeachella, el cual sera\u0301 en la ciudad de Chambolla, que queda a 6hrs. de distancia por carretera de su pueblo, por lo que esta\u0301n por abordar el autobu\u0301s que rentaron y el cual los llevara\u0301 a su destino. El autobu\u0301s llevara\u0301 a * * N* * personas al lugar del evento, entre los cuales van los asistentes y personas que los acompan\u0303an. El costo del autobu\u0301s para llevarlos es de * * X* * pesos, por lo que entre todos debera\u0301n cubrir el gasto, sin embargo, la empresa de transportes les acaba de indicar que, dentro del costo, no esta\u0301 incluido el pago del chofer y los gastos de via\u0301ticos que requerira\u0301 para los dos di\u0301as que estara\u0301 esperando afuera del evento. Dichos gastos equivalen al 12",
    "input": "En el mismo orden: * * N* * - Como el nu\u0301mero de amigos que asistira\u0301n al festival incluido Emiliano. * * X* * - Como el costo total del autobu\u0301s sin la comisio\u0301n del 12",
    "output": "* * A* * - Como el monto a pagar con todo y el 12",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 15122
  },
  {
    "title": "Los tickest",
    "url": "https://omegaup.com/arena/problem/Los-tickest-ASINUS",
    "history": "El festival de mu\u0301sica Codeachella esta\u0301 por comenzar la siguiente semana y Emiliano y su * * X* * grupo de amigos esta\u0301n emocionados por asistir, sin embargo, antes de acudir al festival, tienen que cubrir el costo de los boletos, los cuales fueron pagados con la tarjeta de cre\u0301dito de uno de sus amigos. El costo total de los boletos fue * * Y* * ma\u0301s el 15",
    "input": "En el mismo orden: * * X* * - Como el nu\u0301mero de amigos que asistira\u0301n al festival incluido Emiliano. * * Y* * - Como el costo total que se pago\u0301 con la tarjeta de cre\u0301dito sin la comisio\u0301n del 15",
    "output": "* * A* * - Como el monto a pagar con todo y comisio\u0301n por cada amigo menor de edad para cubrir el total. * * B* * - Como el monto a pagar con todo y comisio\u0301n por cada amigo mayor de edad para cubrir el total.",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 15115
  },
  {
    "title": "Falta pintura",
    "url": "https://omegaup.com/arena/problem/Falta-pintura",
    "history": "WALL- E ( el robot) acaba de detectar que las li\u0301neas de divisio\u0301n de la carretera que recorre todos los di\u0301as ya esta\u0301n muy desgastadas y casi no se ven, asi\u0301 que se dispone a pintarlas pacientemente. La carretera mide N kilo\u0301metros y WALL- E tiene N botes de pintura amontonados al inicio de la carretera, cada bote tiene suficiente pintura para pintar las li\u0301neas de un kilo\u0301metro de carretera. WALL- E solo puede cargar un bote de pintura a la vez, asi\u0301 que inicia tomando un bote de pintura, pinta el primer kilo\u0301metro y regresa al inicio de la carretera por otro bote de pintura, regresa hasta la posicio\u0301n donde se le termino\u0301 la pintura anteriormente y pinta el siguiente kilo\u0301metro usando el nuevo bote de pintura. Luego regresa al inicio de la carretera por otro bote de pintura y asi\u0301 sucesivamente hasta terminar de pintar los N kilo\u0301metros. \u00bfCua\u0301ntos kilo\u0301metros tuvo que recorrer WALL- E para pintar los N kilo\u0301metros de carretera?",
    "input": "En la primera un entero no negativo N indicando el nu\u0301mero de kilo\u0301metros de la carretera.",
    "output": "En la primera li\u0301nea un u\u0301nico entero no negativo indicando el nu\u0301mero de kilo\u0301metros que tuvo que recorrer WALL- E para pintar los N kilo\u0301metros de carretera.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 15108
  },
  {
    "title": "Descuentos en la tienda de c\u00f3mics",
    "url": "https://omegaup.com/arena/problem/Descuentos-en-la-tienda-de-comic",
    "history": "Acaban de inaugurar una nueva tienda de co\u0301mics cerca de tu casa y fuiste a primera hora a ver que\u0301 podi\u0301as comprar. Para tu sorpresa, uno de tus vecinos tambie\u0301n es fan de los co\u0301mics y llego\u0301 segundos antes que tu\u0301. El gerente de la tienda los recibio\u0301 amablemente y les propuso\u0301 que si entre los dos compraban al menos $ 100 en productos, entonces les dari\u0301a el 10",
    "input": "Dos reales C_ 1, C_ 2 que corresponden con los montos que compraron tu vecino y tu\u0301. Puedes suponer que 0 \u2264 C_ 1, C_ 2 \u2264 200.",
    "output": "Si el gerente debe dar el descuento inicial, imprimir la li\u0301nea ` Habra descuento inicial para ambos` . En caso contrario, imprimir la li\u0301nea ` No habra descuento : ( ` . En el caso de que si\u0301 haya descuento inicial y adema\u0301s alguno de los dos compradores haya comprado ma\u0301s que el otro, imprimir la li\u0301nea ` Ademas, habra descuento especial para el primer comprador` o la li\u0301nea ` Ademas, habra descuento especial para el segundo comprador` dependiendo de cua\u0301l de C_ 1 o C_ 2 sea mayor. Finalmente, imprimir dos reales que sean los valores de C_ 1, C_ 2 despue\u0301s de aplicar los descuentos. Los reales debera\u0301n imprimirse con dos decimales.",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 15076
  },
  {
    "title": "Tablas en Tablas",
    "url": "https://omegaup.com/arena/problem/Tablas-en-Tablas",
    "history": "Roberto es un constructor muy dedicado y perfeccionista. Mando\u0301 a comprar dos tablas de madera y le llegaron dos tablas del mismo ancho, pero de diferente longitud ( longitud L1 y longitud L2) . Si Roberto quiere cortar las tablas en la ma\u0301xima longitud ( entera) posible sin desperdiciar madera, \u00bfcua\u0301ntas tablas del mismo taman\u0303o obtiene Roberto?",
    "input": "Dos enteros positivos L1 y L2 separados por un espacio que representan las diferentes longitudes de las tablas.",
    "output": "Un solo nu\u0301mero entero positivo que representa la cantidad de tablas del mismo taman\u0303o que se obtienen despue\u0301s de cortarlas.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 15071
  },
  {
    "title": "Evaluando una f\u00f3rmula con potencia",
    "url": "https://omegaup.com/arena/problem/Evaluando-una-formula-con-potenc",
    "history": "Dados los valores de x, y, z, escribe un programa que evalu\u0301e la siguiente fo\u0301rmula: 7 + ( 2x + y - z) ^ 2x + y - z/ 2x + y - z",
    "input": "Tres reales x, y, z. Puedes suponer que 1 \u2264 x, y, z \u2264 5 y que jama\u0301s ocurren divisiones entre 0.",
    "output": "Un real que sea el valor de la fo\u0301rmula. Tu programa se considerara\u0301 correcto si el valor calculado es razonablemente cercano a la respuesta exacta.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 15022
  },
  {
    "title": "Repartiendo rebanadas de pizza",
    "url": "https://omegaup.com/arena/problem/Repartiendo-rebanadas-de-pizza",
    "history": "Para celebrar el fin de la pandemia, tus amigos y tu\u0301 se reunieron para comer pizza y acaba de llegar. La pizza tiene N rebanadas y la mitad de ellas son hawaianas, mientras que la otra mitad son mexicanas. A ti y a A de tus amigos les gustan los dos sabores, pero a H de tus amigos so\u0301lo les gusta la pizza hawaiana y a M de tus amigos so\u0301lo les gusta la pizza mexicana ( hay al menos un amigo en cada uno de estos dos u\u0301ltimos grupos, por eso pediste la pizza con los dos sabores) . La pizza se repartira\u0301 de la siguiente forma. Lo primero que hara\u0301s sera\u0301 apartar para ti una rebanada de cada sabor ( es tu derecho porque tu\u0301 organizaste la fiesta y tu\u0301 pagaste la pizza) . Despue\u0301s repartira\u0301s equitativamente las rebanadas hawaianas entre todos tus amigos a los que les guste ese sabor. Despue\u0301s repartira\u0301s equitativamente las rebanadas mexicanas entre todos tus amigos a los que les guste ese sabor. Finalmente, te quedara\u0301s cualquier rebanada que no se pudo repartir equitativamente. Escribe un programa que calcule cua\u0301ntas rebanadas te comera\u0301s.",
    "input": "Cuatro enteros N, A, H, M. Puedes suponer que N \u2265 2 y es par, que 0 \u2264 N, A, H, M \u2264 100 y que H, M \u2265 1",
    "output": "Un entero que sea la cantidad de rebanadas que te comera\u0301s.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 14899
  },
  {
    "title": "Abduciendo vacas",
    "url": "https://omegaup.com/arena/problem/Abduciendo-vacas",
    "history": "Como todos sabemos, a los extraterrestres les gusta mucho abducir vacas para estudiarlas y lleva\u0301rselas a su planeta. Esta vez fue el turno de Lola la vaca, quien, en cuanto se dio cuenta de la presencia del extraterrestre, empezo\u0301 a huir a una velocidad de V metros por segundo. La nave del extraterrestre vuela a E metros por segundo, aunque tarda D segundos en despegar. Tanto el extraterrestre como Lola comienzan en el mismo punto, pero el extraterrestre so\u0301lo puede atraparla ya que su nave haya despegado. Si el extraterrestre comienza el despegue justo cuando Lola comienza a correr, \u00bfen cua\u0301nto tiempo atrapara\u0301n a la vaca? ! [ lola] [ 1]",
    "input": "Tres reales V, E, D. Puedes suponer que 0 \u2264 V, E, D \u2264 1000, que V = \u0338 E y que siempre podra\u0301n atrapar a Lola.",
    "output": "Un real que sea la cantidad de segundos que tardara\u0301n en atrapar a Lola. Tu respuesta se considerara\u0301 correcta si es razonablemente cercana al valor exacto.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 14897
  },
  {
    "title": "Sumando t\u00e9rminos de una serie peri\u00f3dica",
    "url": "https://omegaup.com/arena/problem/Sumando-terminos-de-una-serie-pe",
    "history": "Calcula la suma de los primeros N te\u0301rminos de la serie perio\u0301dica 1, 2, 3, 1, 2, 3, 1, 2, 3, . . .",
    "input": "Un entero N. Puedes suponer que 0 \u2264 N \u2264 10^ 9.",
    "output": "Un entero que sea el valor de la suma solicitada.",
    "note": "",
    "topics": [
      "math",
      "combinatorics"
    ],
    "id": 14895
  },
  {
    "title": "Redondeo",
    "url": "https://omegaup.com/arena/problem/Redondeo",
    "history": "# ProblemaEste problema consiste en redondear la divisio\u0301n entre dos nu\u0301meros. Cuando tenemos un numero con decimales como 1. 3, cuando se redondea pasa a ser el entero ma\u0301s cercano; en este caso 1. 3 redondeado pasa a ser 1. Por otro lado, 1. 74534 redondeado pasa a ser 2 ya que este es el entero ma\u0301s cercano. Hay casos en donde no se puede redondear como 1. 5 que esta tanto a la misma distancia del 1 que del 2. Para efectos pra\u0301cticos del problema, * * cuando suceda este caso siempre vamos a redondear hacia abajo* * . Se te dara\u0301n dos nu\u0301meros enteros a y b. Debera\u0301s imprimir el resultado de redondear a / b.",
    "input": "Un numero entero a y otro b",
    "output": "El resultado de redondear a / b. # Ejemplos| | input3 6| | output0| | descriptionNos da 0. 5. Entonces, se aclaro que en este caso se redondea hacia abajo. | | input3 5| | output1| | input12 4| | output3| | end# Limites- 0 < a, b < 10^ 8",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 14846
  },
  {
    "title": "Techo de la division",
    "url": "https://omegaup.com/arena/problem/TechoDivision",
    "history": "# ProblemaEn matema\u0301ticas se le conoce al techo de una divisio\u0301n, como el resultado de redondear el resultado hacia arriba siempre. Por ejemplo, sabemos que 4/ 3 = 1. 333; entonces el techo de esta divisio\u0301n resulta ser 2. En caso de que el resultado ya es un entero, el mismo es el techo. Por ejemplo 4/ 2 = 2 por lo tanto el techo de dicha divisio\u0301n es 2. Mas formalmente, el techo es el menor entero que cumple ser mayor o igual al resultado. En este programa se te dara\u0301n dos nu\u0301meros a, b y debera\u0301s imprimir el techo de la operacio\u0301n a / b.",
    "input": "Dos nu\u0301meros enteros positivos a y b.",
    "output": "Un u\u0301nico entero representando el techo de la divisio\u0301n. # Ejemplos| | input1 3| | output1| | description1/ 3 = 0. 3333 redondeando hacia arriba nos queda 1. | | input7 2| | output4| | input125 5| | output25| | end# Limites- 0 < a, b < 10^ 8",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 14845
  },
  {
    "title": " Torres al ataque (adaptaci\u00f3n)",
    "url": "https://omegaup.com/arena/problem/-Torres-al-ataque-adaptacion",
    "history": "El juego del ajedrez se juga en un tablero de cuadriculado de 8 \u00d7 8. En e\u0301l, una torre ` T` ataca todas las posiciones ` A` en su mismo renglo\u0301n o en su misma columna. Dado un tablero de ajedrez de N \u00d7 N con algunas torres en e\u0301l, nos interesa saber cua\u0301ntas posiciones son atacadas por las torres. Por ejemplo, las tres torres del siguiente tablero de 4 \u00d7 4 atacan las 12 posiciones indicadas en el tablero de la imagen. ! [ enter image description here] [ 1]",
    "input": "Un entero N seguido de un matriz de N \u00d7 N ceros y unos separados por espacios, donde un cero indica una posicio\u0301n vaci\u0301a y un uno indica una torre.",
    "output": "Una matriz de N \u00d7 N caracteres separados por espacios que representa el tablero con las casillas donde atacan las torres representadas por el caracter ` A` y las posiciones donde no ocurre esto con el caracter ` - ` ( guio\u0301n) . En principio, una casilla con una torre debe imprimirse con ` - ` salvo que sea atacada por otra torre. Adema\u0301s, imprimir dos enterosT y K que representan el numero de torres en el tablero y el numero de casillas que son atacadas.",
    "note": "",
    "topics": [
      "matrices",
      "math"
    ],
    "id": 14752
  },
  {
    "title": "\u00bfCu\u00e1ntos dulces me tocar\u00e1n?",
    "url": "https://omegaup.com/arena/problem/Cuantos-dulces-me-tocaran",
    "history": "En unos di\u0301as sera\u0301 tu cumplean\u0303os y, como en todo cumplean\u0303os, tu mama\u0301 compro\u0301 dulces para colocarlos en los dulceros que se dara\u0301n en tu fiesta. A ti te disgusta esa idea porque tu mama\u0301 siempre trata de que todos los invitados tengan muchos dulces, exceptua\u0301ndote a ti ( tu mama\u0301 piensa que es malo que comas dulces) . Eso te pone triste, porque tu cumplean\u0303os es una de las pocas oportunidades que tienes para comer dulces. Sabes que tu mama\u0301 comprara\u0301 N dulces y que le dara\u0301 la mitad truncada de ellos a tu ti\u0301a, ya que a ella le gustan mucho los dulces y es muy amiga de tu mama\u0301. Despue\u0301s, dividira\u0301 en partes iguales los dulces restantes para da\u0301rselos a tus M amigos. Si de casualidad llegaran a sobrar algunos, te los podra\u0301s quedar. Dada la cantidad de dulces que compro\u0301 tu mama\u0301 y el nu\u0301mero de amigos que tienes, \u00bfcua\u0301ntos dulces te podra\u0301s quedar?",
    "input": "Una li\u0301nea con dos enteros N y M separados por espacios, los cuales representan el nu\u0301mero de dulces que compro\u0301 tu mama\u0301 y el nu\u0301mero de amigos que ira\u0301n a tu fiesta, respectivamente.",
    "output": "Una li\u0301nea con un entero, el cual representa el nu\u0301mero de dulces que te podra\u0301s quedar.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 14713
  },
  {
    "title": "Promedio de 3 numeros reales ",
    "url": "https://omegaup.com/arena/problem/prom3real",
    "history": "Hacer un programa que calcule el promedio ( media aritme\u0301tica) de tres nu\u0301meros. \u2014\u2014\u2014- # Fo\u0301rmula promedio = a+ b+ c/ 3 \u2014\u2014\u2014-",
    "input": "De entrada el programa recibira\u0301 tres nu\u0301meros reales ( uno por cada renglo\u0301n) . \u2014\u2014\u2014-",
    "output": "Calcular y mostrar el promedio de los tres nu\u0301meros. \u2014\u2014\u2014- # Ejemplos| | input345| | output4| | description( 3+ 4+ 5) / 3 = 4| | input2. 13. 24. 7| | output3. 33333| | description( 2. 1+ 3. 2+ 4. 7) / 3 = 3. 33333| | input555| | output5| | description( 5+ 5+ 5) / 3 = 5| | end\u2014\u2014\u2014- Li\u0301mites - 10000 \u2264 a, b, c \u2264 10000",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 14612
  },
  {
    "title": "UAZ progBasica",
    "url": "https://omegaup.com/arena/problem/UAZ-cursoInvierno-P1",
    "history": "Hacer un programa que calcule el promedio de dos nu\u0301meros reales. a+ b/ 2 \u2014\u2014\u2014-",
    "input": "De entrada el programa recibira\u0301 dos nu\u0301meros reales. \u2014\u2014\u2014-",
    "output": "Calcular y mostrar el promedio de los dos datos de entrada. \u2014\u2014\u2014- # Ejemplos| | input23| | output2. 5| | descriptionEl promedio de 2 y 3 es 2. 5. | | input2. 13| | output2. 55| | descriptionEl promedio de 2. 1 y 3 es 2. 55. | | input2. 53. 8| | output3. 15| | descriptionEl promedio de 2. 5 y 3. 8 es 3. 15. | | end\u2014\u2014\u2014- Li\u0301mites- 1000 < = nu\u0301meros < = 1000",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 14607
  },
  {
    "title": "pruebaprom01",
    "url": "https://omegaup.com/arena/problem/pruebaprom01",
    "history": "Hacer un programa que calcule el promedio ( media aritme\u0301tica) de tres nu\u0301meros reales. \u2014\u2014\u2014-",
    "input": "De entrada el programa recibira\u0301 tres nu\u0301meros reales. \u2014\u2014\u2014-",
    "output": "Calcular y mostrar el promedio de los tres datos de entrada. \u2014\u2014\u2014- # Ejemplos| | input101010| | output10| | descriptionel promedio se calcula con la media artime\u0301tica| | input2. 138. 5| | output4. 53333| | input898| | output8. 33333| | end\u2014\u2014\u2014- # Li\u0301mites1 \u2264 nu\u0301meros \u2264 100",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 14605
  },
  {
    "title": "Ejemplo 02 curso invierno OmegaUp",
    "url": "https://omegaup.com/arena/problem/Ejemplo-02-curso-invierno-OmegaU",
    "history": "Hacer un programa que calcule el promedio ( media aritme\u0301tica) de tres nu\u0301meros. \u2014\u2014\u2014- # Fo\u0301rmula promedio = a+ b+ c/ 3 \u2014\u2014\u2014-",
    "input": "De entrada el programa recibira\u0301 tres nu\u0301meros reales ( uno por cada renglo\u0301n) . \u2014\u2014\u2014-",
    "output": "Calcular y mostrar el promedio de los tres nu\u0301meros. \u2014\u2014\u2014- # Ejemplos| | input345| | output4| | description( 3+ 4+ 5) / 3 = 4| | input2. 13. 24. 7| | output3. 33333| | description( 2. 1+ 3. 2+ 4. 7) / 3 = 3. 33333| | input555| | output5| | description( 5+ 5+ 5) / 3 = 5| | end\u2014\u2014\u2014- Li\u0301mites - 10000 \u2264 a, b, c \u2264 10000",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 14602
  },
  {
    "title": "Arreglos crecientes sin divisores",
    "url": "https://omegaup.com/arena/problem/Arreglos-crecientes-sin-divisore",
    "history": "Escribe un programa que calcule cua\u0301ntos arreglos A formados por N enteros y con posiciones numeradas a partir de 0 cumplen lo siguiente: - Para i= 0, el valor de A[ i] debe ser 2. - Para i> 0, el valor de A[ i] debe estar entre A[ i- 1] + 1 y A[ i- 1] + 10 inclusive. - Ningu\u0301n valor A[ i] debe ser divisible entre algu\u0301n otro valor A[ j] . Para N= 3, dos arreglos va\u0301lidos son { 2, 3, 5 } y { 2, 11, 21 } , mientras que dos arreglos inva\u0301lidos son { 2, 5, 3} ( el 3 no cumple la segunda regla) y { 2, 5, 12 } ( el 12 no cumple la tercera regla) .",
    "input": "Un entero N. Puedes suponer que 1 \u2264 N \u2264 13.",
    "output": "Un entero que sea la cantidad de arreglos que cumplen las condiciones.",
    "note": "",
    "topics": [
      "implementation",
      "dfs and similar",
      "math"
    ],
    "id": 14571
  },
  {
    "title": "Calculo de raices",
    "url": "https://omegaup.com/arena/problem/Calculo-de-raices",
    "history": "Este problema es sencillo y va directo al grano: con base en dos nu\u0301meros n y x debera\u0301s mostrar en pantalla \u221a( x) . \u2014\u2014\u2014-",
    "input": "En la primera linea un nu\u0301mero t ( 1 \u2a7d n \u2a7d 10^ 6) - la cantidad de casos a evaluar. Para cada caso, una u\u0301nica linea con dos nu\u0301meros n ( 1 \u2a7d n \u2a7d 2^ 5) , x ( 1 \u2a7d x \u2a7d 10^ 5) - los dos valores con los que se calculara lo mencionado anteriormente. \u2014\u2014\u2014-",
    "output": "Para cada caso una sola linea conteniendo un u\u0301nico nu\u0301mero - el valor resultante de \u221a( x) . \u2014\u2014\u2014-",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 14506
  },
  {
    "title": "Suma hasta N",
    "url": "https://omegaup.com/arena/problem/Suma-hasta-N",
    "history": "Dado un numero * * * N* * * , Calcula la suma desde * * * 1* * * a * * * N* * * .",
    "input": "Un numero entero * * * N* * *",
    "output": "La suma de 1 hasta * * * N* * *",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 14412
  },
  {
    "title": "N\u00fameros pares e impares",
    "url": "https://omegaup.com/arena/problem/Numeros-pares-e-impares",
    "history": "Los nu\u0301mero enteros son muy bonitos como Nati, y los nu\u0301meros enteros pueden ser pares o impares. Jorge no tiene internet ahora, asi\u0301 que te ha pedido ayuda para que hagas un programa que determine si un nu\u0301mero es par o impar, lo guardes en un USB y envi\u0301es ese USB por correo hasta su casa y asi\u0301 e\u0301l pueda cumplir con su cometido.",
    "input": "Un entero n.",
    "output": "Imprime 0 si n es par o imprime 1 si n es impar.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 14397
  },
  {
    "title": "Consejo Divertido",
    "url": "https://omegaup.com/arena/problem/Consejo-Divertido",
    "history": "# Descripcio\u0301n. El Consejo Divertido del Universo de los Seres Bellos ( conocido como CD de la USB) , es un o\u0301rgano de 3 personas encargado aprobar o rechazar peticiones de los uesebistas ( habitantes del Universo de los Seres Bellos) . Una peticio\u0301n es aprobada si recibe 2 o 3 votos a favor, y es rechazada si recibe 2 o 3 votos en contra. Dada una li\u0301nea con tres votos, donde 1 significa voto a favor y 0 voto en contra, tu tarea es imprimir \u201cAPROBADA\u201d si la peticio\u0301n recibio\u0301 2 o 3 votos a favor, o \u201cNEGADA\u201d si recibio\u0301 2 o 3 votos en contra.",
    "input": "La primera y u\u0301nica li\u0301nea contiene 3 nu\u0301meros, cuyo valor sera\u0301 0 si es un voto en contra, o 1 si es un voto a favor.",
    "output": "\u201cAPROBADA\u201d si la peticio\u0301n recibio\u0301 2 o 3 votos a favor, o \u201cNEGADA\u201d si recibio\u0301 2 o 3 votos en contra.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 14353
  },
  {
    "title": "SEC04-A-05 Volumen",
    "url": "https://omegaup.com/arena/problem/SEC04-A-05-Volumen",
    "history": "Disen\u0303e un Software en co\u0301digo C+ + , en el cual se capture el valor de un arista de un cubo y regrese el valor del volumen, hasta con 4 digitos decimales, de la siguiente manera: 4 nbsp; * * El volumen del Cubo es: * * 64. 0000( OJO: Cuide las mayu\u0301sculas, minu\u0301sculas y espacios) # NIVELPrincipiante. Se asigan valores a Variables y se realizan Operaciones Aritme\u0301ticas. Disen\u0303ada para personas que nunca han programado y empiezan a programar",
    "input": "2. 73",
    "output": "El volumen del Cubo es: 20. 3464",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 14314
  },
  {
    "title": "SEC04-A-02 C\u00e1lculo IVA",
    "url": "https://omegaup.com/arena/problem/SEC04-A-02-Calculo-IVA",
    "history": "Disen\u0303e un Software en co\u0301digo C+ + , en el cua\u0301l se ingrese el precio de un producto sin I. V. A. y muestre el total a pagar, agrega\u0301ndole el 16",
    "input": "1917",
    "output": "El total a PAGAR es: 2223. 72",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 14298
  },
  {
    "title": "Incrementando elementos a la derecha",
    "url": "https://omegaup.com/arena/problem/Incrementando-elementos-a-la-der",
    "history": "Dado un arreglo de N enteros denotados por A[ 0] , A[ 1] , A[ 2] , . . . , A[ N- 1] , cierto algoritmo ejecuta lo siguiente de arriba para abajo: - Si A[ 0] es impar, entonces incrementa todos los elementos a la derecha. - Si A[ 1] es impar, entonces incrementa todos los elementos a la derecha. - Si A[ 2] es impar, entonces incrementa todos los elementos a la derecha. - . . . ( etce\u0301tera) - Si A[ N- 2] es impar, entonces incrementa todos los elementos a la derecha. Escribe un programa que imprima el estado final del arreglo.",
    "input": "Un entero N seguido de los N enteros de A. Puedes suponer que 1 \u2264 N \u2264 2 \u00d7 10^ 5 y que los valores iniciales de los elementos del arreglo esta\u0301n entre 0 y 1000.",
    "output": "Una secuencia de N enteros que denote el estado final del arreglo.",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 14196
  },
  {
    "title": "La junta del profe",
    "url": "https://omegaup.com/arena/problem/La-junta-del-profe-ANH",
    "history": "Tu profesor de informa\u0301tica tiene una junta muy importante y no podra\u0301 darte clases hoy, esta\u0301 nervioso ya que no sabe si es para felicitarlo por los excelentes programadores que han resultado sus alumnos sin buscar co\u0301digos en internet o si es para regan\u0303arlo porque pasa ma\u0301s tiempo jugando voli que creando ejercicios para el grupo. Cuando salga de junta tiene que sacar promedios grupales asi\u0301 que, sabiendo que tu\u0301 no tendri\u0301as su clase y para que no estuvieras holgazaneando te ha pedido ayuda para automatizar algunas tareas. Debe calcular el promedio del grupo, que consta de 8 alumnos, y saber si esta\u0301 aprobado o no ( la calificacio\u0301n mi\u0301nima aprobatoria es 7) . Adema\u0301s debe encontrar cua\u0301ntas veces se repite una calificacio\u0301n * * * C* * * . Al final debe ordenar de manera descendente las calificaciones. Ayuda a tu profesor para que asi\u0301 tenga ma\u0301s tiempo de < s> jugar voleibol< / s> crear ejercicios para OmegaUp",
    "input": "Ocho nu\u0301meros flotantes que representara\u0301n las calificaciones de los alumnos seguida por la calificacio\u0301n * * * C* * * a buscar.",
    "output": "- El promedio grupal- El mensaje \" Reprobado\" si el promedio es menor a 7 o el mensaje \" Aprobado\" si es caso contrario- El nu\u0301mero de veces que se repite la calificacio\u0301n * * * C* * * en la lista. De no estar, debe mostrar el mensaje \" Calificacio\u0301n no registrada\" - La lista de las calificaciones ordenada de manera descendente ( de mayor a menor)",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 14168
  },
  {
    "title": "Formula mega",
    "url": "https://omegaup.com/arena/problem/Formula-mega",
    "history": "Disen\u0303ar un programa que pregunte los valores de las variables x, y, z y evalue la funcio\u0301n f( x, y, z) . \u2014\u2014\u2014- f( x, y, z) = \u221a( x^ 2+ y^ 2+ z^ 2) / \u221a( x^ 3+ y^ 3+ z^ 3) + sin^ 2x+ sin^ 2y+ sin^ 2z/ cosx^ 2+ cosy^ 2+ cosz^ 2/ ln| x| + ln| y| + ln| z| / log_ 10| x| + log_ 10| y| + log_ 10| z| - x/ x^ 2+ y/ y^ 2+ z/ z^ 2+ 1\u00b7 10^ 5 \u2014\u2014\u2014-",
    "input": "El programa pedira\u0301 tres nu\u0301meros, uno por renglo\u0301n, estos podra\u0301n ser positivos, negativos o cero, y pudieran tener decimales. \u2014\u2014\u2014-",
    "output": "La respuesta, o salida a la consola, sera\u0301 la parte entera del valor de la funcio\u0301n f( x, y, z) \u2014\u2014\u2014- # Ejemplos| | input234| | output32679| | descriptionValor real = 32679. 4062689724So\u0301lo la parte entera = 32679| | input2. 13. 14. 1| | output18753| | descriptionValor real = 18753. 4086754316So\u0301lo la parte entera = 18753| | input3. 24. 25. 2| | output- 57570| | descriptionValor real= - 57570. 8729997031So\u0301lo la parte entera = - 57570| | end\u2014\u2014\u2014- # Li\u0301mites* - 10 \u2264 x, y, z \u2264 10",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 14147
  },
  {
    "title": "Desglose de moneda limitado",
    "url": "https://omegaup.com/arena/problem/Desglose-de-moneda-limitado",
    "history": "Hacer un programa que reciba de entrada un dato nume\u0301rico, e\u0301ste sera\u0301 la cantidad de dinero a entregar; la salida debera\u0301 ser la cantidad de billetes y monedas o\u0301ptima, es decir, entregar la mi\u0301nima cantidad de billetes y/ o monedas. \u2014\u2014\u2014- # Denominaciones disponibles: * Billetes de: $ 100, $ 50 y $ 20* Monedas de: $ 10, $ 5, y $ 1En el negocio se cuenta so\u0301lo con 100 piezas de cada denominacio\u0301n, en total se tiene 100* ( 100+ 50+ 20+ 10+ 5+ 1) = 18, 600\u2014\u2014\u2014-",
    "input": "El dato de entrada sera\u0301 un nu\u0301mero positivo sin decimales, que es la cantidad de dinero a entregar. \u2014\u2014\u2014-",
    "output": "La respuesta, o salida, sera\u0301 una lista hecha en seis renglones, en cada uno de estos debera\u0301 salir la frase \" Billetes de $ 999 = \" o \" Monedas de $ 99 = \" , despue\u0301s, un espacio en blanco y, por u\u0301ltimo, la cantidad a entregar de esta denominacio\u0301n, y asi\u0301 en cada renglo\u0301n para todas las denominaciones disponibles. En caso de que la entrada sea mayor que 18600 y como no se cuenta con el efectivo necesario, la respuesta sera\u0301 en un so\u0301lo renglo\u0301n con el mensaje \" no se ajusta\" . Nota: Las palabras, espacios, caracteres etc. , debera\u0301n estar tal cual se ve en los ejemplos, si falta, o sobra un caracter, el juez automa\u0301tico lo calificara\u0301 como WA ( wrong answer) , es decir: respuesta incorrecta. \u2014\u2014\u2014- # Ejemplos| | input876| | outputBilletes de 100 = 8Billetes de50 = 1Billetes de 20 = 1Monedas de10 = 0Monedas de 5 = 1Monedas de1 = 1| | description8* 100+ 1* 50+ 1* 20+ 1* 5+ 1* 1| | input3798| | outputBilletes de 100 = 37Billetes de50 = 1Billetes de 20 = 2Monedas de10 = 0Monedas de 5 = 1Monedas de1 = 3| | description37* 100+ 1* 50+ 2* 20+ 1* 5+ 3* 1| | input20000| | outputno se ajusta| | descriptionNo hay suficiente efectivo| | end\u2014\u2014\u2014- # Li\u0301mites* 0 < num < 50000",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 14145
  },
  {
    "title": "Torreta de Proximidad",
    "url": "https://omegaup.com/arena/problem/Torreta-de-Proximidad",
    "history": "Los desarrolladores del juego \u201cDefensa Total\u201d ( juego Tower Defense 2D) esta\u0301n probando un nivel de juego en el cual se desea incorporar torretas centinelas que al ser activadas disparen a enemigos que se encuentren dentro de su rango de disparo. El disen\u0303ador quiere programar la torreta para que en caso de que se encuentren ma\u0301s de un enemigo en su rango, le dispare primero al ma\u0301s pro\u0301ximo. Se cuenta con las coordenadas ( x, y) tanto de la ubicacio\u0301n de la torrera como de los enemigos y se toma como premisa que los enemigos no pueden encontrarse en la misma ubicacio\u0301n y tampoco en la misma ubicacio\u0301n de la torreta. Para el primer desarrollo se asume que solamente podra\u0301n encontrarse dos enemigos en su rango, que sera\u0301n representados por: 1 ( Enemigo 1) \u2013 2 ( Enemigo 2) . Para el caso en que las distancias sean iguales, la torreta debe disparar primero al enemigo que tenga la menor diferencia absoluta entre sus ejes de coordenadas ( | x- y| ) .",
    "input": "- Dos nu\u0301meros separados por un espacio que representan las coordenadas ( x, y) de la torreta- Dos nu\u0301meros separados por un espacio que representan las coordenadas ( x, y) del Enemigo 1- Dos nu\u0301meros separados por un espacio que representan las coordenadas ( x, y) del Enemigo 2",
    "output": "- Un nu\u0301mero de un digito que representa al enemigo al que la torretale dispara primero ( 1 o 2)",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 14088
  },
  {
    "title": "Eliminar y Generar",
    "url": "https://omegaup.com/arena/problem/Eliminar-y-Generar",
    "history": "El juego Kill- Z consiste en pasar niveles eliminando Zombies, cada nivel arranca con 10 zombies en escena. Por cada zombie que se elimina se generan automa\u0301ticamente 3. Se requiere conocer cua\u0301ntos zombies se encuentran en escena conociendo la cantidad de zombies eliminados.",
    "input": "- Un nu\u0301mero N que corresponde a la cantidad de Zombi eliminados",
    "output": "- La cantidad de Zombi en escena",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 14082
  },
  {
    "title": "Hipotenusas",
    "url": "https://omegaup.com/arena/problem/Hipotenusas",
    "history": "En el universo de los enteros positivos, ser hipotenusa brinda un cache\u0301 especial. Como sabes, cualesquier terna de nu\u0301meros reales a, b, h en la que a^ 2+ b^ 2= h^ 2 se conoce como una terna pitago\u0301rica. Si, adema\u0301s, a, b, h \u2208Z^ + , la terna pitago\u0301rica es entera. Tu\u0301 debera\u0301s ayudar a los nu\u0301meros que se creen hipotenusas enteras a saber si, en efecto, existen catetos enteros que les confieran ese cache\u0301.",
    "input": "Enteros positivos no mayores de 100, 000. Cada uno de ellos representa un caso, el valor de la hipotenusa en una posible terna pitago\u0301rica entera.",
    "output": "Para cada caso de la entrada, una u\u0301nica palabra: YES si existe al menos un par de catetos enteros que den lugar a la hipotenusa considerada; o NO en el caso contrario. | | input5131725| | outputYESYESYESYES| | description3^ 2+ 4^ 2= 5^ 2, 5^ 2+ 12^ 2= 13^ 2, 8^ 2+ 15^ 2= 17^ 2, 7^ 2+ 24^ 2= 15^ 2+ 20^ 2= 25^ 2( con que exista un par de catetos es suficiente) | | input2021| | outputNO| | descriptionNo existen enteros a y b tales que a^ 2+ b^ 2= 2021^ 2| | end",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 14038
  },
  {
    "title": "N\u00fameros de bronce",
    "url": "https://omegaup.com/arena/problem/Numeros-de-bronce",
    "history": "Ante el aumento de gente interesada en dominar la programacio\u0301n, al fin se ha fundado ByteCity, \u00a1la ciudad donde queremos vivir! La Avenida Principal ( larga, largui\u0301sima) se construye con predios numerados desde cero en adelante ( como tu\u0301 y yo sabemos que se debe contar en el mundo de las computadoras) . La ferreteri\u0301a ha recibido el encargo de surtir todos los di\u0301gitos ( hechos en bronce de la mejor calidad) para numerar todos y cada uno de los predios de esta Avenida Principal. Tu trabajo es hacer un programa que, dado el total de dichos predios, determine el nu\u0301mero exacto de piezas de bronce necesarias.",
    "input": "Enteros no negativos hasta 1, 000' 000, 001 inclusive ( cada uno es un caso) , el nu\u0301mero de predios de la Avenida Principal a numerar.",
    "output": "Por cada caso de la entrada, un entero no negativo: el nu\u0301mero de piezas de bronce ( cada pieza un di\u0301gito) necesarios para enumerar ( desde cero y en orden consecutivo ascendente) todos los predios de la Avenida Principal. # NotaDesde luego, los ceros a la izquierda no se consideran. | | input1549| | output2088| | end",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 14037
  },
  {
    "title": "Esferas con bolitas y palitos",
    "url": "https://omegaup.com/arena/problem/Esferas-con-bolitas-y-palitos",
    "history": "Los paralelos son circunferencias que van desde el ecuador ( el ma\u0301s grande de todos los paralelos) hasta los polos, donde se han reducido hasta convertirse en simples puntos. Los meridianos son semicircunferencias que van de polo a polo y que se intersectan con los paralelos. Las representaciones ti\u0301picas de la esfera terrestre tienen: 19 paralelos ( polos incluidos) que van de 10\u00b0 en 10\u00b0 desde los + 90\u00b0 del Polo Norte hasta los - 90\u00b0 del Polo Sur pasando por los 0\u00b0 del Ecuador; y 24 meridianos ( uno por cada \" hora\" del di\u0301a) . Para este reto se plantea elaborar, con palitos y bolitas, una esfera dados el nu\u0301mero de paralelos y el nu\u0301mero de meridianos. ! [ Estructura de un \" so\u0301lido de alambre\" ] ( bs. jpg) Nota que la zona coloreada tiene 9 bolitas ( rojas) y 12 palitos ( verdes los que forman parte de los paralelos, azules los que forman parte de los meridianos) . Debera\u0301s hacer un programa que, dado el nu\u0301mero de meridianos y paralelos ( enteros positivos mayores que 2) determine el nu\u0301mero total de bolitas y palitos necesarios ( en ese orden) para construir la esfera completa.",
    "input": "Parejas de enteros mayores o iguales a 3 ( nu\u0301mero de paralelos, nu\u0301mero de meridianos; en ese orden) . Cada pareja es un caso distinto.",
    "output": "Por cada caso, dos enteros estrictamente positivos ( el nu\u0301mero de bolitas y el nu\u0301mero de palitos; en ese orden) que se requieren para armar el \" esqueleto\" de la superficie esfe\u0301rica. # NotaNo necesitara\u0301s preocuparte por datos de entrada ma\u0301s alla\u0301 de 10000. | | input3 3| | output5 9| | descriptionCaso mi\u0301nimo| | input19 24| | output410 840| | descriptionLa ti\u0301pica representacio\u0301n de la esfera terrestre| | end",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 14035
  },
  {
    "title": "Meridianos y paralelos",
    "url": "https://omegaup.com/arena/problem/Meridianos-y-paralelos",
    "history": "\u00bfCua\u0301l es la diferencia entre meridianos y paralelos? ! [ Conceptos de paralelo y meridiano] ( mp. jpg) Los meridianos son semicircunferencias que van de polo a polo. Los paralelos son circunferencias que atraviesan a los meridianos y que van desde el Ecuador ( el ma\u0301s grande de todos los paralelos) hasta los polos, que se han reducido hasta convertirse en simples puntos. Las representaciones ti\u0301picas de la esfera terrestre tienen 24 meridianos ( uno por cada \" hora\" del di\u0301a) y 19 paralelos ( polos incluidos) que van de 10\u00b0 en 10\u00b0 desde los + 90\u00b0 del Polo Norte hasta los - 90\u00b0 del Polo Sur pasando por los 0\u00b0 del Ecuador. Debera\u0301s hacer un programa que, dado el nu\u0301mero de meridianos y paralelos ( enteros positivos mayores o iguales a 3) determine el nu\u0301mero total de intersecciones entre paralelos y meridianos. # NotaConsideramos como una interseccio\u0301n al cruce de un meridiano con un paralelo. Por lo tanto, los polos no cuentan como intersecciones; ya que son la interseccio\u0301n de todos los meridianos y no de un meridiano con un paralelo. Pero, \u00a1ojo! , nota que, al recibir el nu\u0301mero de paralelos si\u0301 debera\u0301s considerar que incluyen a los polos ( que son \" paralelos de radio cero\" ; es decir, puntos) .",
    "input": "Parejas de enteros mayores que 2 ( nu\u0301mero de meridianos, nu\u0301mero de paralelos; en ese orden) . Cada pareja es un caso distinto.",
    "output": "Por cada caso, un entero estrictamente positivo ( el nu\u0301mero de intersecciones entre meridianos y paralelos que se forman) . | | input24 19| | output418| | descriptionEjemplo correspondiente a la ti\u0301pica representacio\u0301n de la esfera terrestre| | end",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 14029
  },
  {
    "title": "Aciertos",
    "url": "https://omegaup.com/arena/problem/Aciertos",
    "history": "El Juego Aciertos se trata de disparar a diferentes objetos que aparecen en pantalla durante cierto lapso de tiempo. Por cada disparo acertado se otorgan 2 puntos, por cada disparo errado se descuenta 1 punto. Para alcanzar el Premio debes alcanzar 10 puntos. El disen\u0303ador requiere que lo ayudes con la elaboracio\u0301n de un programa que permita realizar el ca\u0301lculo para saber si el jugador debe o no recibir el premio. Si el jugador logra el puntaje deseado, el programa debe emitir el mensaje SI, caso contrario el mensaje sera\u0301 NO.",
    "input": "- Un nu\u0301mero N que corresponde a la cantidad de disparos acertados. - Un nu\u0301mero M que corresponde a la cantidad de disparos errados.",
    "output": "- La palabra Si o No segu\u0301n corresponda.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 14024
  },
  {
    "title": "Recompensa Merecida",
    "url": "https://omegaup.com/arena/problem/recompensa",
    "history": "El juego \u201cSupervivencia\u201d es un juego Battle Royale de enfrentamiento entre escuadrones, en el cual, un escuadro\u0301n puede alcanzar como recompensa una cantidad de monedas de oro por los logros obtenidos en la partida, dicho premio es otorgado por el juego a los sobrevivientes del escuadro\u0301n ganador. Todo escuadro\u0301n tiene siempre un li\u0301der. La cantidad total de monedas se reparte de forma equitativa a todos los sobrevivientes del escuadro\u0301n, sin embargo, en oportunidades existen sobrantes. El disen\u0303ador del juego decidio\u0301 que en caso de sobrantes, si la cantidad de monedas sobrante es par, se le agrega al li\u0301der todo el sobrante, en caso de que sea impar, se agrega el sobrante al resto del escuadro\u0301n. Cuando las monedas obtenidas no alcancen para repartir de forma equitativa a todos los jugadores, no se asignara\u0301 a nadie.",
    "input": "* Una li\u0301nea con un nu\u0301mero entero N que representa la cantidad de jugadores del escuadro\u0301n, incluido el li\u0301der. * Una li\u0301nea con un nu\u0301mero entero M que representa la cantidad total de monedas obtenidas por el escuadro\u0301n.",
    "output": "* Una li\u0301nea con un entero, la cantidad de monedas que obtuvo el li\u0301der.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 14019
  },
  {
    "title": "\u00c1rea de un Romboedro",
    "url": "https://omegaup.com/arena/problem/Area-de-un-Romboedro",
    "history": "En este problema debera\u0301s calcular el a\u0301rea de un romboedro. ! [ enter image description here] [ 1] A = 6 \u00d7D \u00d7 d/ 2",
    "input": "2 nu\u0301meros enteros D y d que representan la diagonal mayor y la diagonal menor de una de las caras del romboedro.",
    "output": "La cadena * \" Area = * * A* * \" * sin comillas y donde A es el a\u0301rea total del paralelepi\u0301pedo. | | input3 3| | outputArea = 27| | input10 5| | outputArea = 150| | end# Li\u0301mites1 \u2264 D, d \u2264 100",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 14011
  },
  {
    "title": "\u00c1rea y per\u00edmetro de tri\u00e1ngulo rect\u00e1ngulo",
    "url": "https://omegaup.com/arena/problem/Area-y-perimetro-de-triangulo-re",
    "history": "Hacer un programa que reciba de entrada dos datos nume\u0301ricos, que son: un cateto y la hipotenusa de un tria\u0301ngulo recta\u0301ngulo, la salida sera\u0301 el peri\u0301metro y el area. ! [ triangulo] [ 1] \u2014\u2014\u2014- # Fo\u0301rmulas# # Teorema de Pita\u0301goras c^ 2= a^ 2+ b^ 2 # # A\u0301rea y peri\u0301metro de tria\u0301ngulo recta\u0301ngulo area= a \u00b7 b/ 2 perimetro = a+ b+ c \u2014\u2014\u2014-",
    "input": "Los datos de entrada son dos, un nu\u0301mero por renglo\u0301n, el primero corresponde a la medida de un cateto y el segundo a la hipotenusa, estos sera\u0301n positivos, con o sin decimales. \u2014\u2014\u2014-",
    "output": "Las respuestas o salida son dos valores nume\u0301ricos, uno por renglo\u0301n, el primero sera\u0301 el peri\u0301metro y el segundo el a\u0301rea. \u2014\u2014\u2014- # Ejemplos| | input35| | output126| | descriptionperimetro = 12, area= 6| | input810| | output2424| | descriptionperimetro= 24, area= 24| | input100125| | output3003750| | descriptionperimetro= 300, area= 3750| | end\u2014\u2014\u2014- # Li\u0301mites* 200 > c > a, b > 0",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 14002
  },
  {
    "title": "Calificaciones con ponderaci\u00f3n",
    "url": "https://omegaup.com/arena/problem/Calificaciones-con-ponderacion",
    "history": "Se acercan las fechas para subir calificaciones y el profe Germa\u0301n se encuentra atareado, ya que por atender a los alumnos del CPCI ( Club de Programacio\u0301n Competitiva ITSUR) no ha tenido tiempo de obtener las calificaciones de sus alumnos, asi\u0301 que te ha pedido de favor que le ayudes a disen\u0303ar un programa que calcule las calificaciones. Se sabe que el profe Germa\u0301n evalu\u0301a a sus alumnos de la siguiente forma: - * * 60",
    "input": "3 nu\u0301meros enteros E, T y A que representan la calificacio\u0301n obtenida por un alumno en el Examen, Tareas y Asistencia respectivamente.",
    "output": "Un nu\u0301mero entero. La calificacio\u0301n del alumno redondeada al entero ma\u0301s cercano. ( en caso de que la calificacion sea 69. 5, 90. 5 subiri\u0301a a 70 y 91 respectivamente) . | | input90 80 100| | output88| | input100 100 95| | output100| | end# Li\u0301mites0 \u2264 E, T, A \u2264 100",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 14001
  },
  {
    "title": "Analizando mi ansiedad",
    "url": "https://omegaup.com/arena/problem/Analizando-mi-ansiedad",
    "history": "Durante todo el tiempo que ha durado la pandemia del COVID- 19 has sentido ansiedad, pero, al mismo tiempo, algunas veces has sentido ma\u0301s ansiedad que otras veces, asi\u0301 que decidiste hacer una funcio\u0301n matema\u0301tica que represente cua\u0301nta ansiedad has tenido en cierto momento. Como eres muy inteligente, pudiste generar una funcio\u0301n polino\u0301mica f( t) de grado N: dado un tiempo t, la funcio\u0301n f( t) representa el nivel de ansiedad que tienes con respecto a la ansiedad recomendada por los psico\u0301logos, una f( t) positiva representa una ansiedad mayor a la recomendada y una f( t) negativa representa una ansiedad menor a la recomendada. Para regular tus emociones, te gustari\u0301a saber en que\u0301 momentos has tenido una ansiedad \" cresta\" , que representa un ma\u0301ximo de la funcio\u0301n f( t) , y en que\u0301 momentos has tenido una ansiedad \" valle\" , que representa un mi\u0301nimo de la funcio\u0301n. Por u\u0301ltimo, quisieras saber que\u0301 tanto te ha afectado la pandemia con respecto al tiempo donde no habi\u0301a, por lo que un t positivo representa un momento durante la pandemia y un tiempo t negativo representa un momento antes de la pandemia.",
    "input": "Un entero N que representa el grado del polinomio, seguido de N + 1 reales, desde a_ n hasta a_ 0, donde a_ i representa el coeficiente de x^ i.",
    "output": "La salida consta de dos partes. La primera inicia con la cadena \" maximos: \" seguida de las parejas ( t, f( t) ) que representan los momentos donde tuviste ansiedades cresta, despue\u0301s la cadena \" minimos: \" seguida de las parejas ( t, f( t) ) que representan los momentos donde tuviste ansiedades valle. Como eres ingeniero en computacio\u0301n solo te interesan 3 cifras tanto para t como para f( t) . Las parejas de cada parte de la salida deben de estar ordenadas de menor a mayor con respecto a t. ! [ Represetacio\u0301n de la gra\u0301fica del caso 1] [ 1]",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 13968
  },
  {
    "title": "Precio de las tortillas",
    "url": "https://omegaup.com/arena/problem/Precio-de-las-tortillas",
    "history": "En una tortilleri\u0301a de Fresnillo, Zacatecas vari\u0301an el precio de la tortilla en funcio\u0301n de los kilogramos de compra, segu\u0301n: - Menos de 10 kg el precio es 16 / kg- De 10 y hasta 20 kg el precio es 15/ kg- Y ma\u0301s de 20 kg el precio baja a 14 / kgHacer un programa que reciba de entrada un dato nume\u0301rico, que es la cantidad de kilogramos de tortilla comprados, la salida sera\u0301 el total a pagar. \u2014\u2014\u2014-",
    "input": "El dato de entrada es un nu\u0301mero que representa los kilogramos de tortilla comprados, este valor sera\u0301 positivo y podra\u0301 tener decimales. \u2014\u2014\u2014-",
    "output": "La respuesta sera\u0301 un valor nume\u0301rico, que es el total a pagar. \u2014\u2014\u2014- # Ejemplos| | input1| | output16| | description- Total 16| | input15| | output225| | description- Total225| | input30| | output420| | description- Total 420| | end\u2014\u2014\u2014- # Li\u0301mites* kilogramos > 0",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 13948
  },
  {
    "title": "eje02",
    "url": "https://omegaup.com/arena/problem/eje02",
    "history": "Calcular el a\u0301rea y peri\u0301metro de la siguiente figura: ! [ Figura] [ 1] \u2014\u2014\u2014-",
    "input": "Los datos debera\u0301n darse: - Un nu\u0301mero por renglo\u0301n- En orden a, b, c\u2014\u2014\u2014-",
    "output": "Los resultados ( salidas) sera\u0301n: - Un nu\u0301mero por renglo\u0301n- En orden area, perimetro\u2014\u2014\u2014- # Ejemplos| | input1056| | output2424| | description- area = 24- perimetro = 24| | input1157| | output2726| | description- area = 27- perimetro = 26| | end\u2014\u2014\u2014- # Li\u0301mites* a> = 0* b> = 0* c> = 0* area> = 0* perimetro> = 0",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 13927
  },
  {
    "title": "El Maestro To\u00f1o y su terreno",
    "url": "https://omegaup.com/arena/problem/El-Maestro-Tono-y-su-terreno",
    "history": "El maestro Ton\u0303o desea colocar una valla alrededor de su casa sin embargo por motivos de trabajo saldra\u0301 de viaje pro\u0301ximamente asi\u0301 que ha decidido contratar a alguien que lo haga mientras esta fuera. Esta persona le solicito la medida de su terreno para la compra de materiales, pero cuando estaban en llamada esta se corto\u0301 y el maestro Ton\u0303o solo dijo: - El a\u0301rea de mi terreno es de 117 m2 y el largo mide 4 metros ma\u0301s que el ancho o\u0301seo . . . . pip pip! Ahora la persona que pondra\u0301 la valla no sabe las dimensiones del terreno \u00bfCrees poder ayudarlo con la informacio\u0301n que el maestro Ton\u0303o le ha proporcionado?",
    "input": "Se sabe que al tener una ecuacio\u0301n cuadra\u0301tica es posible utilizar ciertos me\u0301todos GENERALES por lo que la entraba sera\u0301n los valores de a, b y c",
    "output": "Como salida se espera el valor del largo y ancho del terreno ( redondeados) junto con la m de metros.",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 13919
  },
  {
    "title": "SuperPotencias",
    "url": "https://omegaup.com/arena/problem/SuperPotencias",
    "history": "Eres un entusiasta de las potencias asi\u0301 que te tenemos un nuevo reto: hallar el resultado de la potencia de una potencia.",
    "input": "3 nu\u0301meros enteros a, b y c.",
    "output": "Imprimir a^ b^ c",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 13880
  },
  {
    "title": "occ21sfinpn31",
    "url": "https://omegaup.com/arena/problem/occ21sfinpn31",
    "history": "# Sumar tiempos. Sumarle a una hora dada en formato hh mm am o pm una cantidad de tiempo dada enformato hh mm. La respuesta tambie\u0301n debe ser en formato hh mm am o pm. Las horas vandesde la 0 0 am hasta las 11 59 am, y desde las 12 00 pm hasta las 11 59 pm.",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 13862
  },
  {
    "title": "eje01",
    "url": "https://omegaup.com/arena/problem/eje01_suma",
    "history": "Hacer un programa que pregunte dos nu\u0301meros, calcule la suma y muestre su resultado.",
    "input": "Son dos nu\u0301meros uno en cada renglo\u0301n",
    "output": "La salida es la suma de los dos nu\u0301meros.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 13853
  },
  {
    "title": "Arquitecto 2D-Landia",
    "url": "https://omegaup.com/arena/problem/P1N1-ONI2021",
    "history": "En la ciudad de 2D- landia las casas esta\u0301n formadas por un cuadrado de lado l y un tria\u0301ngulo equila\u0301tero de lado l como el techo ( similar como los nin\u0303os dibujan una casa en papel) , como se muestra en la figura. Como nuevo arquitecto principal de la ciudad tu tarea es medir el a\u0301rea que ocupan las casas. Escribe un programa que dado l calcule el a\u0301rea de la casa de lado l. La respuesta del ca\u0301lculo puede tolerar 0. 01 decimales de error. ! [ Figura] ( casa. png)",
    "input": "- Un entero que representa la longitud de l.",
    "output": "- El a\u0301rea que ocupa una casa.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 13824
  },
  {
    "title": "Poner Signos",
    "url": "https://omegaup.com/arena/problem/Poner-Signos",
    "history": "Dados cinco enteros, a, b, c, d, y x, determina si es posible reemplazar los ( ) por signos + o - tal que ( ) a ( ) b ( ) c ( ) d = x",
    "input": "* En la primera li\u0301nea, los valores de a, b, c y d. * En la segunda li\u0301nea, el entero x.",
    "output": "* Si es posible, imprime los signos correspondientes separados por un espacio. * Si no es posible, imprime \" No\" .",
    "note": "Puedes asumir que ningu\u0301n caso tendra\u0301 ma\u0301s de una secuencia de signos que cumpla la condicio\u0301n.",
    "topics": [
      "brute force",
      "math"
    ],
    "id": 13802
  },
  {
    "title": "Borrar n\u00fameros",
    "url": "https://omegaup.com/arena/problem/Borrar-Nums",
    "history": "Miguel y Zhiron juegan de la siguiente forma: Miguel escribe un nu\u0301mero n en la pizarra y Zhiron borra m di\u0301gitos de dicho nu\u0301mero. Zhiron gana si el nu\u0301mero resultante es el menor posible. Como Zhiron es tu amiga, decides ayudarla creando un programa que imprima el nu\u0301mero que le debe quedar a Zhiron para ganar.",
    "input": "* En la primera li\u0301nea, un entero positivo n. * En la segunda li\u0301nea, un entero positivo m. Puedes asumir que m es menor a la cantidad de di\u0301gitos de n.",
    "output": "* El menor valor posible resultante tras borrar m di\u0301gitos de n. Este resultado no debe contener ceros a la izquierda.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 13801
  },
  {
    "title": "Sala de espera",
    "url": "https://omegaup.com/arena/problem/edm2021n1-sala",
    "history": "El distanciamiento social es sumamente importante para la ralentizacio\u0301n de la propagacio\u0301n de virus. Por eso, en las salas de espera de distintos establecimientos se exige que se deje un asiento entre cada persona sentada. Tu trabajo es determinar la mi\u0301nima cantidad de asientos que necesita una sala de espera si quiere tener a N personas esperando simulta\u0301neamente. Los asientos siempre se ubican uno al lado del otro.",
    "input": "* Una li\u0301nea con la cantidad N de personas.",
    "output": "* Una li\u0301nea con la cantidad mi\u0301nima de asientos que una sala de espera necesita para tener a N personas simulta\u0301neamente.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 13773
  },
  {
    "title": "Perrito saltar\u00edn",
    "url": "https://omegaup.com/arena/problem/edm2021n1-perrito",
    "history": "Tu\u0301 y tu perrito, Corcho, esta\u0301n jugando un juego de persecucio\u0301n. Es el turno de Corcho de alcanzarte, e\u0301l esta\u0301 a N metros de distancia y puede dar saltos de M metros y quieres saber si es capaz de alcanzarte en hasta S saltos.",
    "input": "* Una li\u0301nea con los nu\u0301meros enteros N, M y S, la distancia de Corcho hacia ti, la distancia a la que puede saltar y la cantidad de saltos que hara\u0301, respectivamente.",
    "output": "Una li\u0301nea con un mensaje. El mensaje debe ser ` SI` , si es posible que Corcho te alcance, caso contrario, el mensaje debe ser ` NO` ( respetando las mayu\u0301sculas) .",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 13770
  },
  {
    "title": "Cambio de Base",
    "url": "https://omegaup.com/arena/problem/Cambio-de-Base",
    "history": "Han es el gran maestro de las bases nume\u0301ricas, es capaz de cambiar cualquier nu\u0301mero de base decimal a cualquier otra base que le pidas, en cuestio\u0301n de segundos. Un di\u0301a, tu amigo Yu lo desafi\u0301a a un duelo de cambio de bases, donde se les da un nu\u0301mero n y una base b a la que se debe cambiar dicho nu\u0301mero. Decidido a no perder, te pide ayuda para crear un programa que haga el trabajo por e\u0301l y asi\u0301 convertirse en un gran maestro.",
    "input": "- En la primera li\u0301nea, el nu\u0301mero n en base 10 que quieres convertir. - En la segunda li\u0301nea, la base b a la que quieres convertir el nu\u0301mero.",
    "output": "El nu\u0301mero n en base b.",
    "note": "Un nu\u0301mero n en base b se escribe como a_ ma_ m- 1. . . a_ 1a_ 0, significa que n = a_ mb^ m+ a_ m- 1b^ m- 1+ . . . + a_ 1b+ a_ 0, tal que 0\u2264 a_ i < b para todo 0\u2264 i \u2264 m. Normalmente usamos la base 10 para hacer nuestros ca\u0301lculos, lo que significa que el nu\u0301mero 1234, en base 10, es igual a 10^ 3\u00d7 1+ 10^ 2\u00d7 2+ 10\u00d7 3+ 4. Asi\u0301 como se puede representar un nu\u0301mero en base 10, tambie\u0301n se pueden usar otras bases haciendo el mismo procedimiento: 1234, en base 5, seri\u0301a 5^ 3\u00d7 1+ 5^ 2\u00d7 2+ 5\u00d7 3+ 4, equivalente a 194 en base decimal. Algo que se puede notar es que un di\u0301gito de un nu\u0301mero no puede ser mayor o igual a la base en la que esta\u0301 representado. Es decir, en base 2 se usan los nu\u0301meros 0, 1; en base 3 se usan los nu\u0301meros 0, 1, 2; en base 4 se usan 0, 1, 2, 3; y asi\u0301 sucesivamente. Para las bases mayores a 10, se usan letras para representar nu\u0301meros mayores a 9: a equivale a 10, b a 11, c a 12, . . . , z a 35. Por ejemplo, el nu\u0301mero 15 en base 10, es equivalente a 1111 en base 2 y a f en base 16.",
    "topics": [
      "math"
    ],
    "id": 13733
  },
  {
    "title": "La huida del hacker",
    "url": "https://omegaup.com/arena/problem/La-huida-del-hacker",
    "history": "Hackerman ha penetrado los servidores de una compan\u0303i\u0301a muy importante con el objetivo de sabotear su reputacio\u0301n, pero dicha empresa se dio cuenta de la intrusio\u0301n y logro\u0301 rastrear la ubicacio\u0301n del hacker. Como Hackerman siempre tiene un truco bajo la manga, programo\u0301 un software que sobreescribe los N archivos de la empresa y que funciona como se describe a continuacio\u0301n. El software cuenta con un bu\u0301fer de T bytes y puede ejecutar una operacio\u0301n que siempre tarda un segundo y que siempre sobreescribe K megabytes del bu\u0301fer. Una limitacio\u0301n del software es que so\u0301lo puede cargar un archivo de la empresa si e\u0301ste cabe completo en el bu\u0301fer ( aunque la carga del archivo es instanta\u0301nea y no consume tiempo) . Conforme el software sobreescribe algunos datos, e\u0301stos se liberan del bu\u0301fer. Ayuda a Hackerman a saber cua\u0301nto tiempo tardara\u0301 el software en sobreescribir todos los archivos, si el software debe procesarlos de forma estrictamente secuencial. Como Hackerman tiene prisa de borrar sus huellas lo ma\u0301s ra\u0301pido posible, programo\u0301 el software para que e\u0301ste intente cargar el siguiente archivo a sobreescribir en cuanto el bu\u0301fer tenga suficiente espacio para e\u0301l.",
    "input": "La primera linea contiene tres enteros N, T y K ( 1 \u2264 N \u2264 100000, 1 \u2264 K \u2264 T \u2264 10^ 9) que son el nu\u0301mero de archivos de la empresa, el taman\u0303o del bu\u0301fer y la cantidad de megabytes que el software sobrescribe en cada aplicacio\u0301n de la operacio\u0301n, respectivamente. La segunda li\u0301nea contiene N enteros que denotan el peso en MB de cada uno de los N archivos de la empresa.",
    "output": "Un entero que sea el tiempo que tarda el software en sobrescribir todos los archivos.",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 13691
  },
  {
    "title": "N\u00fameros felinos",
    "url": "https://omegaup.com/arena/problem/Numeros-felinos",
    "history": "# HistoriaPusito, el gato de Naty, compro\u0301 un nuevo tele\u0301fono con un nuevo nu\u0301mero. Pusito ama estar sucio y los * * nu\u0301meros felinos* * . \u2014\u2014\u2014- ! [ enter image description here] [ 1] \u2014\u2014\u2014- Pusito define a los * * nu\u0301meros felinos* * como aquellos de N di\u0301gitos tales que al dividirlo en NK segmentos de K di\u0301gitos consecutivos, el i- e\u0301simo segmento * * NO* * empieza con el di\u0301gito B_ i y ese mismo segmento, al convertirlo en un nu\u0301mero entero, es divisible entre el nu\u0301mero A_ i. Para esto, Naty le ha dado a Pusito dos arreglos A y B de NK nu\u0301meros. Pusito es un pensador destacado, asi\u0301 que se puso a pensar cua\u0301ntos * * nu\u0301meros felinos* * puede formar y te ha pedido ayuda porque son demasiados. # ProblemaDados los enteros N, K y los arreglos A y B, determinar cua\u0301ntos posibles * * nu\u0301meros felinos* * puede formar Pusito.",
    "input": "En la primera li\u0301nea, los enteros N y K separados por un espacio. En la segunda li\u0301nea el arreglo A, NK nu\u0301meros separados por un espacio. En la tercera li\u0301nea el arreglo B, NK nu\u0301meros separados por un espacio.",
    "output": "Imprime la cantidad de * * nu\u0301meros felinos* * mo\u0301dulo 10^ 9 + 7 que Pusito puede formar.",
    "note": "",
    "topics": [
      "number theory",
      "math"
    ],
    "id": 13665
  },
  {
    "title": "m.c.m & M.C.D.",
    "url": "https://omegaup.com/arena/problem/mcm--MCD",
    "history": "El Mi\u0301nimo Comu\u0301n Mu\u0301ltiplo ( m. c. m. ) de dos o ma\u0301s nu\u0301meros naturales es el menor mu\u0301ltiplo comu\u0301n de todos ellos; yl Ma\u0301ximo Comu\u0301n Divisor ( M. C. D. ) se define el ma\u0301ximo comu\u0301n divisor de dos o ma\u0301s nu\u0301meros enteros al mayor nu\u0301mero entero que los divide sin dejar residuo alguno. Crear un programa que calcule el MCD y el mcm de N pares de nu\u0301meros enteros a y b",
    "input": "Un entero N, seguido de N li\u0301neas cada una con un par de nu\u0301meros enteros a y b.",
    "output": "N li\u0301neas con dos nu\u0301meros enteros que representan el mcm y MCD de cada par de nu\u0301meros a y b",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 13536
  },
  {
    "title": "Tiro parab\u00f3lico",
    "url": "https://omegaup.com/arena/problem/Tiro-parabolico",
    "history": "Ca\u0301lculos de tiro para\u0301bolico.",
    "input": "Dar primero, como dato de entrada, la velocidad de salida de un proyectil en m/ s, y como segundo dato, el a\u0301ngulo de lanzamiento del proyectil con respecto a la horizontal. Considerar la aceleracio\u0301n gravitacional g = 9. 8 metros sobre segundo al cuadrado.",
    "output": "Imprimir el tiempo de vuelo del proyectil despreciando la friccio\u0301n causada por el aire, asi\u0301 como la distancia horizontal ma\u0301xima y la altura ma\u0301xima alcanzada por el proyectil.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 13468
  },
  {
    "title": "Volumen de prisma cuadrangular",
    "url": "https://omegaup.com/arena/problem/Volumen-de-prisma-cuadrangular",
    "history": "Ca\u0301lculo de volumen de pira\u0301mide cuadrangular.",
    "input": "Leer primero el dato de uno de los lados de la base y posteriormente leer la altura de la pira\u0301mide.",
    "output": "Imprimir el volumen de la pira\u0301mide.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 13467
  },
  {
    "title": "Notaci\u00f3n Desarrollada (Mensaje)",
    "url": "https://omegaup.com/arena/problem/Notacion-Desarrollada-Mensaje",
    "history": "Brithany esta aprendiendo a expresar nu\u0301meros en su notacio\u0301n desarrollada, asi\u0301 que quiere crear un programa que reciba un numero y lo exprese de esa manera. Brithany sabe que un numero en notacio\u0301n desarrollada debe expresarse de la siguiente manera: N = 1234 Notacio\u0301n desarrollada: 1000 + 200 + 30 + 4Ayuda a Brithany a crear ese programa que necesita.",
    "input": "Un entero N que es el numero a expresar en notacio\u0301n desarrollada",
    "output": "Una li\u0301nea donde se exprese N y su notacio\u0301n desarrollada",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 13461
  },
  {
    "title": "Tablas de Multiplicar",
    "url": "https://omegaup.com/arena/problem/Tablas-Multiplicar",
    "history": "Desarrolla un programa que imprima cualquier tabla de multiplicar donde puedas mostrar n X i = ni.",
    "input": "Dos enteros n, i",
    "output": "i li\u0301neas donde se muestren los resultados de la tabla de multiplicacio\u0301n de n.",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 13458
  },
  {
    "title": "Batalla espacial",
    "url": "https://omegaup.com/arena/problem/Batalla-espacial",
    "history": "* * \u00a1A SUS PUESTOS! * * Naves enemigas se acercan ra\u0301pidamente, siempre atacan primero ellos. Cada disparo de tu enemigo destruye 50",
    "input": "Un nu\u0301mero entero que representa la cantidad de naves enemigas que vienen.",
    "output": "Un nu\u0301mero entero que representa las unidades mi\u0301nimas que necesitas desplegar para salir victorioso en el ataque.",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 13429
  },
  {
    "title": "Calcular Salario",
    "url": "https://omegaup.com/arena/problem/Calcular-Salario",
    "history": "Un empleado gana N pesos por cada hora trabajada \u00bfCua\u0301l es su sueldo total si trabajo\u0301 X cantidad de horas durante un mes? Considera un descuento mensual del 9. 35",
    "input": "Un valor N que representa su sueldo por hora trabajada y un valor X que representa la cantidad de horas trabajadas en el mes.",
    "output": "El sueldo total# Ejemplos| | input50 300| | output13869. 5| | end| | input100 90| | output8321. 67| | end",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 13418
  },
  {
    "title": "Di\u00e1metro, Radio y Per\u00edmetro de un C\u00edrculo",
    "url": "https://omegaup.com/arena/problem/Diametro-Radio-Perimetro-Circulo",
    "history": "Juan Pe\u0301rez Lo\u0301pez esta aprendiendo las fo\u0301rmulas para peri\u0301metro y a\u0301rea de una circunferencia y como reto su profesor de geometri\u0301a le pidio\u0301 que creara un programa para calcular el dia\u0301metro, el radio y el peri\u0301metro de un circulo teniendo como u\u0301nico dato la superficie de este. Ayuda a Juan Pe\u0301rez a disen\u0303ar el programa que necesita y no repruebe la asignatura de geometri\u0301a.",
    "input": "Un nu\u0301mero real S que es la superficie del ci\u0301rculo en metros cuadrados",
    "output": "Tres nu\u0301meros reales d, r y P separados por un espacio que representan la medida del dia\u0301metro, el radio y el peri\u0301metro de la circunferencia. Considera lo siguiente: * ! [ enter image description here] [ 1] con una exactitud de 6 decimales. * d, r y P reducir a dos posiciones decimales.",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 13396
  },
  {
    "title": "4 bits a decimal",
    "url": "https://omegaup.com/arena/problem/4-bits-a-decimal",
    "history": "Debera\u0301s leer un nu\u0301mero binario con 4 bits y mostrar su equivalente a decimal",
    "input": "Un nu\u0301mero entero de 4 di\u0301gitos con so\u0301lo unos y ceros representando un valor en binario",
    "output": "Un nu\u0301mero entero que equivale al nu\u0301mero binario en formato decimal",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 13383
  },
  {
    "title": "Defender el castillo",
    "url": "https://omegaup.com/arena/problem/Defender-el-castillo",
    "history": "Eres un mago que esta\u0301 en la torre de su castillo y ve que viene una horda de enemigos a atacarte. Tu\u0301 como buen mago puedes crear olas de para\u0301sitos que disminuye cada uno 15",
    "input": "Un nu\u0301mero entero entre 1 y 3500 que representa la cantidad de enemigos que componen la horda.",
    "output": "Un nu\u0301mero entero, que indica la cantidad de para\u0301sitos que debes enviar",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 13382
  },
  {
    "title": "Suma de dados",
    "url": "https://omegaup.com/arena/problem/Suma-de-dados",
    "history": "Tu ti\u0301o te ha retado a jugar dados, pero le propones algo que sea menos de azar pero utilizando los dados. Le sugieres que, sin tu\u0301 ver, e\u0301l tire tres dados y te diga cua\u0301les fueron los nu\u0301meros que salieron en cada dado viendo hacia arriba y tu\u0301 debera\u0301s adivinar la suma de los nu\u0301meros que esta\u0301n ocultos tocando la superficie. \u00a1Tu ti\u0301o acepta! so\u0301lo que e\u0301l no sabe que tu\u0301 conoces co\u0301mo esta\u0301n construidos los dados.",
    "input": "Tres li\u0301neas conteniendo un nu\u0301mero entero cada una, las cuales representan los valores del dado que cayeron hacia arriba.",
    "output": "Un nu\u0301mero entero que representara\u0301 la suma de las caras ocultas que tocan la superficie.",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 13381
  },
  {
    "title": "Cajero",
    "url": "https://omegaup.com/arena/problem/Cajero",
    "history": "En tu edificio han creado un cajero automa\u0301tico para los inquilinos, pero el cajero no tiene software instalado. Te han dicho que se le puede cargar un programa en cualquier lenguaje y que por arte de magi\u0301a e\u0301l podra\u0301 dar los billetes que se indiquen si la salida tiene un formato especi\u0301fico. Te han pedido a ti\u0301 que disen\u0303es el programa que se instalara\u0301 en dicho cajero automa\u0301tico para poder obtener la menor distribucio\u0301n de billetes posibles para la cantidad que ingrese el usuario.",
    "input": "Un nu\u0301mero entero entre 50 y 5000 que representara\u0301 la cantidad que el usuario desea retirar del cajero",
    "output": "Cuatro li\u0301neas conteniendo dos nu\u0301meros en cada li\u0301nea separadas por un espacio, indicando la cantidad de billetes de $ 500, $ 200, $ 100 y $ 50 que se deben entregar.",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 13380
  },
  {
    "title": "Tri\u00e1ngulo de  Sierpi\u0144ski",
    "url": "https://omegaup.com/arena/problem/Triangulo-de-Sierpinski",
    "history": "El tria\u0301ngulo de Sierpin\u0301ski es un fractal que se puede construir a partir de cualquier tria\u0301ngulo, En cada etapa, incrementa el nu\u0301mero de tria\u0301ngulos que contiene el fractal de la siguiente manera: ! [ fractales] ( https: / / images2. imgbox. com/ a5/ be/ n0x0kthX_ o. jpg) Tu tarea es crear un programa que lea una cantidad de tria\u0301ngulos blancos de la serie y te imprima cua\u0301ntos tria\u0301ngulos blancos va a tener la siguiente iteracio\u0301n",
    "input": "Un nu\u0301mero entero que representa la cantidad de tria\u0301ngulos blancos en una iteracio\u0301n de la serie. Puedes asumir que no se introducira\u0301n cantidades que no pertenezcan a la serie.",
    "output": "La cantidad de tria\u0301ngulos blancos que habra\u0301 en la siguiente iteracio\u0301n",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 13378
  },
  {
    "title": "Adivina la Edad",
    "url": "https://omegaup.com/arena/problem/Adivina-la-Edad",
    "history": "La Sra. Transas es una gitana que por muchos an\u0303os se ha dedicado al negocio de la adivinacio\u0301n, queriendo estar siempre actualizada la Sra. Transas ha comprado una computadora para hacer ma\u0301s llamativo su negocio. Uno de los trucos de adivinacio\u0301n que ella realiza consiste en adivinar la edad de sus clientes. El proceso de la Sra. Transas sigue para adivinar es el siguiente: - Primeramente se le pide a la persona que piense el an\u0303o de su nacimiento. - Enseguida se le indica a la persona que realice las siguiente operaciones sobre el an\u0303o que tiene en mente: restarle 1900, multiplicar el resultado por 5, sumarle 17 al resultado y dividir el resultado entre 2. Una vez que la persona realizo\u0301 las operaciones sobre el an\u0303o de su nacimiento, la Sra. Transas le pide el resultado. En ese momento le adivina la edad al clienteLa Sra. Transas desea que este truco lo realize su nueva computadora a los clientes.",
    "input": "Su programa debera\u0301 capturar un nu\u0301mero * _ _ n_ _ * que representa el resultado obtenido por el cliente luego de efectuar las operaciones indicadas, el cual puede contener un di\u0301gito decimal seguido de un nu\u0301mero entero de 4 cifras * _ _ aaaa_ _ * que representa o sen\u0303ala el an\u0303o actual.",
    "output": "Un nu\u0301mero entero que representa la edad del cliente. Se debe tomar en cuenta que: * Si edad \u22640 mostrar el siguiente mensaje \" Inverosimil\" * Si edad \u226417 mostrar el siguiente mensaje \" Menor\" * Si edad \u226585 mostrar el siguiente mensaje \" Longevo\" * Si edad \u2265105 mostrar el siguiente mensaje \" Imposible\"",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 13357
  },
  {
    "title": "Millares",
    "url": "https://omegaup.com/arena/problem/Millares",
    "history": "Leer un nu\u0301mero de * * ma\u0301ximo 4 di\u0301gitos* * , e imprimir cua\u0301ntos millares, centenas, decenas y unidades tiene.",
    "input": "Un so\u0301lo nu\u0301mero de ma\u0301ximo 4 di\u0301gitos",
    "output": "La cantidad de millares, centenas, decenas y unidades separadas por un espacio",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 13350
  },
  {
    "title": "Clima en \u00b0F",
    "url": "https://omegaup.com/arena/problem/Clima-en-F",
    "history": "Juan Pe\u0301rez Lo\u0301pez acaba de obtener un trabajo para el cual necesita determinar el tipo de clima de las ciudades en el mundo por medio de la temperatura en \u00b0F que cada una tiene. El problema es que la tabla de tipo de climas esta en \u00b0C, asi que Juan Pe\u0301rez Lo\u0301pez necesita disen\u0303ar un programa que convierta los \u00b0F a \u00b0C y que indique que tipo de clima que tiene cada una con relacio\u0301n a la siguiente tabla! [ enter image description here] [ 1] Ayuda a Juan Pe\u0301rez a disen\u0303ar el programa que necesita y no lo despidan de su trabajo, considera que: \u00b0C = ( \u00b0F- 32) \u00d75/ 9",
    "input": "Una cadena ciudad con el nombre de la ciudad y un numero real temp que corresponde a la temperatura en \u00b0F para realizar el ana\u0301lisis.",
    "output": "Un mensaje compuesto de la siguiente manera: * La ciudad de ciudad con una temperatura de temp grados F tiene un clima clima*",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 13323
  },
  {
    "title": "Factorial de un numero con recursi\u00f3n",
    "url": "https://omegaup.com/arena/problem/Factorial-de-n",
    "history": "La funcio\u0301n factorial es una fo\u0301rmula matema\u0301tica representada por el signo de exclamacio\u0301n: n! En la fo\u0301rmula Factorial se deben multiplicar todos los nu\u0301meros enteros y positivos que hay entre el nu\u0301mero que aparece en la fo\u0301rmula y el nu\u0301mero 1. Es muy fa\u0301cil, aqui\u0301 tienes un ejemplo: 7! = 1 * 2 * 3 * 4 * 5 * 6 * 7 = 5040 En esta fo\u0301rmula el nu\u0301mero 7 se llamari\u0301a 7 factorial o factorialde 7 y multiplicaremos todos los nu\u0301meros que aparecen en la fo\u0301rmula hasta llegar al 1. # ProblemaEscribir el programa que calcule el factorial de un nu\u0301mero n utilizando recursio\u0301n.",
    "input": "Un nu\u0301mero entero positivo n.",
    "output": "El factorial de n.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 13318
  },
  {
    "title": "En\u00e9simo T\u00e9rmino de Sucesiones Aritm\u00e9ticas (Salida)",
    "url": "https://omegaup.com/arena/problem/An-Sucesion-Texto",
    "history": "Juanito Pe\u0301rez esta\u0301 aprendiendo a resolver sucesiones aritme\u0301ticas en sus clases de matema\u0301ticas, el profesor le pidio\u0301 encontrar el te\u0301rmino a_ n de distintas sucesiones aritme\u0301ticas, por lo que necesita disen\u0303ar un algoritmo para hacerlo de forma eficiente y terminar la tarea a tiempo para jugar * * Fortnite* * con sus amigos. Juanito sabe que: * Para calcular el termino a_ n, en las sucesiones aritme\u0301ticas, se debe obtener primero la diferencia entre sus dos primeros te\u0301rminos: d = a_ 2 - a_ 1* Despue\u0301s de obtener d aplicar la siguiente ecuacio\u0301n: a_ n = a_ 1 + d ( n- 1)",
    "input": "Tres enteros a_ 1, a_ 2 y n separados por espacios.",
    "output": "Un mensaje compuesto de la sigueinte manera: El termino n de la sucesio\u0301n aritme\u0301tica cuyos dos primeros nu\u0301meros son: a_ 1 y a_ 2 es a_ n",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 13313
  },
  {
    "title": "En\u00e9simo T\u00e9rmino de Sucesiones Aritm\u00e9ticas",
    "url": "https://omegaup.com/arena/problem/Enesimo-Sucesiones-Arit",
    "history": "Juanito Pe\u0301rez esta\u0301 aprendiendo a resolver sucesiones aritme\u0301ticas en sus clases de matema\u0301ticas, el profesor le pidio\u0301 encontrar el te\u0301rmino a_ n de distintas sucesiones aritme\u0301ticas, por lo que necesita disen\u0303ar un algoritmo para hacerlo de forma eficiente y terminar la tarea a tiempo para jugar * * Fortnite* * con sus amigos. Juanito sabe que: * Para calcular el termino a_ n, en las sucesiones aritme\u0301ticas, se debe obtener primero la diferencia entre sus dos primeros te\u0301rminos: d = a_ 2 - a_ 1* Despue\u0301s de obtener d aplicar la siguiente ecuacio\u0301n: a_ n = a_ 1 + d ( n- 1)",
    "input": "Tres enteros a_ 1, a_ 2 y n separados por espacios.",
    "output": "Un entero que representa el te\u0301rmino a_ n de la sucesio\u0301n aritme\u0301tica.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 13310
  },
  {
    "title": "Ordenando por la parte decimal",
    "url": "https://omegaup.com/arena/problem/Ordenando-por-la-parte-decimal",
    "history": "Escribe un programa que lea N reales positivos y que los ordene de la siguiente manera: - Si la parte decimal de a es menor que la parte decimal de b, entonces a debe ir antes que b. La parte decimal incluye el punto decimal ( es decir, 0. 123 < 0. 5) . - Los nu\u0301meros que empaten en la parte decimal deben quedar ordenados de menor a mayor.",
    "input": "Un entero N seguido de N reales positivos. Puedes suponer que 1 \u2264 N \u2264 10^ 5.",
    "output": "Los N reales despu\u0301es de ordenarlos.",
    "note": "",
    "topics": [
      "math",
      "sortings",
      "implementation"
    ],
    "id": 13294
  },
  {
    "title": "Mangueras",
    "url": "https://omegaup.com/arena/problem/Mangueras",
    "history": "En la estacio\u0301n de bomberos de la ciudad se aburren de vez en cuando, y decidieron aprender a programar para matar el tiempo y se hacen retos entre ellos. En la estacio\u0301n tienen mangueras de distintas longitudes ( todas en metros) , y todas los carretes donde enredan dichas mangueras miden 50 cms de dia\u0301metro. Uno de los retos fue el crear un programa que determinara cua\u0301ntas vueltas enteras se enrrolla la manguera en el carrete.",
    "input": "Un nu\u0301mero flotante, que determina la longitud de la manguera expresada en metros.",
    "output": "Un nu\u0301mero * * entero* * , que indica la cantidad de vueltas enteras que da la manguera en el carrete.",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 13285
  },
  {
    "title": "Esquites",
    "url": "https://omegaup.com/arena/problem/Esquites",
    "history": "Mi tio tiene un carrito de coctel de elotes y los vende a 15 cada vaso ( si\u0301, so\u0301lo tienen un taman\u0303o) , pero por la pandemia no puede vender ni maiz. . . y lo que vende es mai\u0301z! Entonces, nos pidio\u0301 hacerle un programa que le calculara el total a pagar y cuanto dar de cambio.",
    "input": "Dos nu\u0301meros enteros * V* y * D* , el primero representara\u0301 la cantidad de vasos que el cliente compro\u0301 y el segundo la cantidad de dinero con la que pago\u0301 el cliente.",
    "output": "Dos nu\u0301meros separados por un espacio. El total a pagar y cua\u0301nto debe dar de cambio.",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 13284
  },
  {
    "title": "Suma de suma de m\u00faltiplos",
    "url": "https://omegaup.com/arena/problem/Suma-de-suma-de-multiplos",
    "history": "Dados 4 enteros n, a, b, c debes sumar los mu\u0301ltiplos de a, los mu\u0301ltiplos de b y los mu\u0301ltiplos de c que se encuentran entre [ 1, n] .",
    "input": "Cuatro enteros 10 \u2264 n \u2264 100000, 2 \u2264 a, b, c \u2264 9.",
    "output": "Un entero, la suma de todos los mu\u0301ltiplos de los tres nu\u0301meros dados que se encuentren entre [ 1, n]",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 13259
  },
  {
    "title": "Tax\u00edmetro",
    "url": "https://omegaup.com/arena/problem/Taximetro",
    "history": "Un extran\u0303o virus ha aparecido que so\u0301lo afecta los taxi\u0301metros y los deja inservibles. Au\u0301n no saben quie\u0301n fue el autor de dicho virus, pero el problema se debe solucionar. Una manera que se encontro\u0301 fue que los taxistas midieran el kilometraje recorrido y llamar a la central por radio para poder hacer el ca\u0301lculo. Para agilizarlo te han pedido que desarrolles un programa que pueda calcular el total a pagar por el servicio de taxi. Cada kilo\u0301metro recorrido tiene un costo de 1. 20 y el banderazo de salida es de 8. 5",
    "input": "Un nu\u0301mero double que representa la cantidad de kilo\u0301metros recorridos.",
    "output": "El total a pagar",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 13242
  },
  {
    "title": "Puntos en la temporada",
    "url": "https://omegaup.com/arena/problem/Puntos-en-la-temporada",
    "history": "El director te\u0301cnico del equipo de futbol de tu escuela tiene las manos llenas con todos los equipos de la institucio\u0301n. Tanto trabajo tiene que no tiene ni tiempo para saber cuantos puntos llevan sus equipos. El DT ha pedido tu ayuda para crear un programa que pueda calcular la cantidad de puntos que llevan sus equipos en la temporada. Cada partido ganado suma 3 puntos y cada partido empatado suma 1.",
    "input": "Dos nu\u0301meros enteros. El primero indicara\u0301 la cantidad de partidos ganados y el segundo la cantidad de partidos empatados.",
    "output": "La cantidad de puntos totales en la temporada",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 13241
  },
  {
    "title": "Elefantes vs. telara\u00f1a",
    "url": "https://omegaup.com/arena/problem/Elefantes-vs-telarana",
    "history": "N elefantes se columpiaban sobre la tela de una aran\u0303a, mientras vei\u0301an que resisti\u0301a fueron a llamar a otro elefante. Escribe un programa que dado el n uacute; mero N de elefantes iniciales y el m aacute; ximo n uacute; mero R de elefantes que resiste la telara ntilde; a, imprima el m iacute; nimo n uacute; mero K de elefantes adicionales que se requieren para romper la telara ntilde; a.",
    "input": "En la primera li\u0301nea, dos enteros, N y R separados por un espacio, donde N es el nu\u0301mero de elefantes que se columpiaban sobre la telara ntilde; a, y R es el ma\u0301ximo nu\u0301mero de elefantes que pueden columpiarse sobre la telara ntilde; a sin romperla.",
    "output": "En la primera li\u0301nea, imprime el mi\u0301nimo nu\u0301mero K de elefantes adicionales que se necesitan para romper la telaran\u0303a.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 13222
  },
  {
    "title": "Claire y las Oleadas de Zombies",
    "url": "https://omegaup.com/arena/problem/Claire-y-las-Oleadas-de-Zombies",
    "history": "La situacio\u0301n se ha tornado infernal en Raccoon City, Claire Redfield se encuentra recorriendo la comisaria RPD, el teniente Marvin ha muerto a causa de las oleadas zombie, Claire decide encontrar los conectores electro\u0301nicos que le faltan para poder tomar la tarjeta llave y poder escapar, lo cual no sera\u0301 fa\u0301cil, tiene miedo de no encontrar a Leon y a Sherry, resulta que la municio\u0301n se encuentra escasa por lo que tendra\u0301 que ir con mucho cuidado si no quiere ser alimento de zombie, por lo que te pide a ti, el u\u0301nico programador de la RPD con vida que le ayudes a analizar la situacio\u0301n. Claire pudo percatarse de enfrentamientos anteriores lo siguiente: - Un zombie le toma 5 balas para eliminarlo, pero si este la muerde ella perdera\u0301 10 puntos de salud. - Un perro zombie le toma 10 balas, si la muerde ella pierde 20 puntos de salud. - Un cuervo zombie le toma 7 balas, si la muerde ella pierde 8 puntos de salud. - Un licker le toma 30 balas, si la muerde ella pierde 50 puntos de salud.",
    "input": "Un entero * * * N* * * que son el nu\u0301mero de eventos que ocurrira\u0301n, posteriormente otro entero * * * M* * * que representa la cantidad de municio\u0301n con la que Claire cuenta en ese momento, despue\u0301s un cara\u0301cter * * * o* * * que es la operacio\u0301n que se realiza: - * * * z* * * indica que se trata de un enfrentamiento con un Zombie. - * * * p* * * indica que se trata de un enfrentamiento con un Perro. - * * * c* * * indica que se trata de un enfrentamiento con un Cuervo. - * * * l* * * indica que se trata de un enfrentamiento con un Licker. - * * * m* * * indica que se trata de una recoleccio\u0301n de municio\u0301n, en este caso leera\u0301s la cantidad * * * T* * * de municio\u0301n que se recoge. - * * * v* * * indica que se trata de una restauracio\u0301n de salud parcial, en este caso leera\u0301s la cantidad * * * S* * * de salud que se restaura. Nota: Para cada enfrentamiento Claire debe contar con mayor salud a la que le pudieran quitar en dicho enfrentamiento. Caso contrario imprimir: * No tienes salud suficiente* Adema\u0301s recuerda que la salud de Claire inicialmente es de 100, adema\u0301s recuerda que si Claire no cuenta con la municio\u0301n necesaria para el enfrentamiento entonces ella pierde los puntos de salud correspondientes. Considera que * * * N* * * nunca sera\u0301 mayor a 100",
    "output": "El resultado de cada enfrentamiento, revisa los casos de prueba, finalmente verificar si la salud es mayor o igual a 80 imprimir * * * Status: Fine* * * , si la salud se encuentra entre 50 y 80 impimir * * * Status: Caution* * * , si la salud es menor a 50 imprimir * * * Status: Danger* * * , posteriormente imprimir la cantidad de balas restantes.",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 13204
  },
  {
    "title": "Convenci\u00f3n de apicultores",
    "url": "https://omegaup.com/arena/problem/Convencion-de-apicultores",
    "history": "Guillermo el apicultor esta\u0301 listo para ir a la convencio\u0301n anual de apicultores con sus amigos. Guillermo metio\u0301 su miel en tarros, pero desafortunadamente la miel de algunos tarros se agrio\u0301. Si Guillermo tiene ma\u0301s tarros de miel dulce que agria, ira\u0301 a la convencio\u0301n con sus amigos. Si Guillermo tiene ma\u0301s tarros de miel agria que dulce, sus amigos ira\u0301n a la convencio\u0301n sin e\u0301l y se quedara\u0301 rezagado. Si Guillermo tiene el mismo nu\u0301mero de tarros dulces y agrios, sus amigos estara\u0301n indecisos de ir con e\u0301l. Por u\u0301ltimo ( pero siendo lo ma\u0301s importante) , si Guillermo tiene exactamente 13 tarros en total, entonces sus amigos no le volvera\u0301n a hablar porque son demasiado supersticiosos.",
    "input": "Dos enteros 0 \u2264 D, A \u2264 1000 que indican el numero de tarros con miel dulce y agria respectivamente.",
    "output": "Dependiendo el caso que ocurra, uno de los siguientes mensajes: - ` A la convencion` - ` Rezagado` - ` Indecisos` - ` No hablar de nuevo`",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 13168
  },
  {
    "title": "Inversi\u00f3n publicitaria",
    "url": "https://omegaup.com/arena/problem/Inversion-publicitaria",
    "history": "Eres el CEO de Nasty Hacks Inc. , una empresa que se dedica a escribir pequen\u0303os programas maliciosos para que adolescentes le jueguen bromas a sus amigos. La empresa acaba de terminar su primer producto y es momento de comenzar a venderlo. Quieres ganar la mayor cantidad de dinero posible, por lo que consideras invertir en una campan\u0303a publicitaria. Contratas a un analista para que prediga las ganancias esperadas con y sin campan\u0303a publicitaria. Ahora tienes que tomar la decisio\u0301n de invertir o no en publicidad dadas las ganancias esperadas en ambos casos.",
    "input": "Tres enteros - 10^ 6 \u2264 a, b \u2264 10^ 6 y 0\u2264 c \u2264 10^ 6. a es la ganancia esperada sin invertir en publicidad, b es la ganancia esperada si se invierte en publicidad y c es el costo de la campan\u0303a publicitaria.",
    "output": "Un mensaje dependiendo que conviene mas, * * * Invertir en publicidad* * * en caso de tener mejor ganancia en ese caso, * * * No invertir en publicidad* * * en caso contrario y * * * No importa* * * si se obtiene el mismo ingreso en ambos casos.",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 13167
  },
  {
    "title": "Diversi\u00f3n con n\u00fameros",
    "url": "https://omegaup.com/arena/problem/Diversion-con-numeros",
    "history": "La maestra Greene esta tratando de disen\u0303ar un juego para sus alumnos de tercer grado de primaria con el cual puedan practicar las operaciones ba\u0301sicas; suma, resta, multiplicacio\u0301n y divisio\u0301n. Le gustari\u0301a que todos los alumnos de su clase sean capaces de pensar \" matema\u0301ticamente\" y determinar si dados dos valores estos se pueden sumar, restar, multiplicar o dividir en cualquier orden de tal forma que el resultado sea un tercer numero dado. Sin embargo le gustari\u0301a ser capaz de revisar el trabajo de sus estudiantes de forma ra\u0301pida sin tener que pensar ella en las soluciones. Ayuda a la maestra Greene a escribir un programa que reciba dos nu\u0301meros y determine si es posible obtener un tercer numero dado llevando a cabo las operaciones ba\u0301sicas con los primeros dos nu\u0301meros sin importar el orden.",
    "input": "Tres enteros 1 \u2264 a, b, c \u2264 10000.",
    "output": "La palabra * * * Posible* * * o * * * Imposible* * * dependiendo si se puede obtener c llevando a cabo una operacio\u0301n ba\u0301sica usando a y b.",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 13166
  },
  {
    "title": "Subconjunto con suma par",
    "url": "https://omegaup.com/arena/problem/Subconjunto-con-suma-par",
    "history": "Dado un arreglo a de n enteros positivos encuentra un subconjunto de los elementos de a tal que su suma es par ( divisible entre 2) o determina que no existe algu\u0301n subconjunto con dicha caracteri\u0301stica.",
    "input": "En la primera li\u0301nea un entero n, el taman\u0303o del arreglo. En la segunda li\u0301nea, n enteros a_ 1, a_ 2, . . . , a_ n separados por un espacio.",
    "output": "Impirme 9 \u00b7 10^ 180 + 1 si no existe algu\u0301n subconjunto tal que su suma sea par. En otro caso, imprime un entero k, la cantidad de elementos del subconjunto. En otra li\u0301nea k enteros positivos distintos, los i\u0301ndices de los elementos elegidos. Si hay mu\u0301ltiples soluciones imprime cualquiera de ellas.",
    "note": "",
    "topics": [
      "strings",
      "implementation",
      "math"
    ],
    "id": 13086
  },
  {
    "title": "\u00c1ngulos",
    "url": "https://omegaup.com/arena/problem/angulos-2a-ccp",
    "history": "Un a\u0301ngulo de rotacio\u0301n es una medida de giro alrededor de un eje. Un a\u0301ngulo de rotacio\u0301n \u03b1 siempre es mayor o igual que 0 y siempre es menor que 360; es decir 0 \u2264\u03b1 < 360. Cualquier a\u0301ngulo de rotacio\u0301n igual a 360 o mayor equivale al resto de la divisio\u0301n por 360. Es decir, un a\u0301ngulo de 400 es equivalente a un a\u0301ngulo de 40, y un a\u0301ngulo de 1000 es equivalente a un a\u0301ngulo de 280. Para este problema, por cada a\u0301ngulo recibido, encuentra su valor equivalente en el rango 0 \u2264\u03b1 < 360.",
    "input": "Un entero n que representa el a\u0301ngulo, tal que 0 \u2264 n \u2264 100000.",
    "output": "La representacio\u0301n del a\u0301ngulo en el rango 0 \u2264\u03b1 < 360.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 13058
  },
  {
    "title": "Contando los hoteles de la ciudad",
    "url": "https://omegaup.com/arena/problem/Contando-los-hoteles-de-la-ciuda",
    "history": "Acabas de llegar a una enorme ciudad y esta\u0301s buscando un lugar para pasar la noche. La ciudad cuenta con N hoteles y cada uno recibio\u0301 una calificacio\u0301n por parte de los usuarios conocedores ( de 1 a 5 estrellas, siempre en entero) . Te gustari\u0301a saber cua\u0301ntos hoteles tienen K estrellas y posiblemente debas responder esta pregunta repetidamente y para diferentes valores de K. Escribe un programa que te ayude en tu labor.",
    "input": "Un entero N seguido de las calificaciones de los N hoteles. Posteriormente, un entero M seguido de M valores de K. Puedes suponer que 0 \u2264 N, M \u2264 10^ 5 y que tanto la calificaciones como los valores de K son enteros que esta\u0301n en el rango de 1 a 5.",
    "output": "Para cada valor de K, un entero que sea la cantidad de hoteles con K estrellas.",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 13045
  },
  {
    "title": "Multiplicando enteros usando operaciones m\u00e1s b\u00e1sicas",
    "url": "https://omegaup.com/arena/problem/Multiplicando-enteros-usando-ope",
    "history": "Compraste una computadora muy antigua en una venta de garage, ya que es de coleccio\u0301n. El CPU de esta computadora tiene bastantes limitaciones: aunque puede sumar, multiplicar por 2 y dividir entre 2 ( todo con enteros) , no puede multiplicar valores arbitrarios ( por ejemplo, el CPU puede calcular 5 / 2, 5 \u00d7 2, 5 + 7 pero no puede calcular 5 \u00d7 7. Como eres todo un experto programando, disen\u0303aste un algoritmo recursivo producto( a, b) que sirve para multiplicar a \u00d7 b y que so\u0301lo necesita las operaciones que el CPU si\u0301 puede hacer: - Si a = 0 entonces producto( a, b) = 0. - Si a > 0 y a es par, entonces producto( a, b) = 2 \u00d7producto ( a / 2, b) . - Si a > 0 y a es impar, entonces producto( a, b) = 2 \u00d7producto( a / 2, b) + b. Escribe un programa que calcule cua\u0301ntas operaciones aritme\u0301ticas ( sumas, multiplicaciones por 2, divisiones entre 2) necesitara\u0301 el algoritmo anterior para calcular el producto de dos nu\u0301meros. La deteccio\u0301n de la paridad de a es gratuita y no necesitas contarla.",
    "input": "Dos enteros a, b. Puedes suponer que 0 \u2264 a, b \u2264 10^ 6.",
    "output": "Un entero que sea la cantidad de operaciones aritme\u0301ticas que se ejecutaron.",
    "note": "",
    "topics": [
      "dfs and similar",
      "dp",
      "math"
    ],
    "id": 13032
  },
  {
    "title": "Sumando enteros por paridad",
    "url": "https://omegaup.com/arena/problem/Sumando-enteros-por-paridad",
    "history": "Cuentas con un arreglo A de N enteros A[ 0] , A[ 1] , A[ 2] , . . . , A[ N- 1] y le sumara\u0301s valores a sus elementos de la siguiente forma. Cuando te pidan sumar un nu\u0301mero par, so\u0301lo se lo sumara\u0301s a los elementos en posiciones pares del arreglo. De forma similar, cuando te pidan sumar un nu\u0301mero impar, so\u0301lo se lo sumara\u0301s a los elementos en posiciones impares del arreglo. Imprime el arreglo que resulta al terminar el proceso.",
    "input": "Un entero N seguido los N elementos de A. Posteriormente, un entero M seguido de los M enteros a sumar. Puedes suponer que 0 \u2264 N, M \u2264 10^ 5 y que tanto los enteros del arreglo como los valores a sumar esta\u0301n en el rango de 0 a 100.",
    "output": "Los N enteros del arreglo resultante.",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 12992
  },
  {
    "title": "Desinfectando computadoras",
    "url": "https://omegaup.com/arena/problem/Desinfectando-computadoras",
    "history": "El * programador gene\u0301rico* tiene N computadoras infectadas con un virus creado por el malvado Jorge. En cada segundo que pasa la cantidad de computadoras infectadas se multiplica por N. El virus puede ser muy destructivo y por eso vino Santy a salvar a todas las computadoras del * programador gene\u0301rico* y que todos puedan programar a gusto. Santy llega con un equipo de suficientes personas para desinfectar todas las computadoras, pero cada persona puede desinfectar u\u0301nica y exactamente 10 computadoras. El equipo llego\u0301 cuando ya transcurrieron K segundos y desinfectaron instanta\u0301neamente todas las computadoras que pudieron. # ProblemaDadas la cantidad N de computadoras infectadas inicialmente y los K segundos que han pasado, decir cua\u0301ntas computadoras faltan para ser desinfectadas por Santy y su equipo.",
    "input": "Dos enteros separados por espacios N y K, la cantidad de computadoras infectadas inicialmente y los segundos que han pasado.",
    "output": "La cantidad de computadoras que au\u0301n no ha desinfectado Santy.",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 12991
  },
  {
    "title": "Uniendo puntos con segmentos cortos",
    "url": "https://omegaup.com/arena/problem/Uniendo-puntos-con-segmentos-cor",
    "history": "Tenemos cuatro puntos A, B, C, D en el plano. Deseamos unirlos usando tres segmentos de recta. \u00bfEn que\u0301 orden tenemos que unirlos si deseamos minimizar la suma de las longitudes de los segmentos de recta usados?",
    "input": "Cuatro parejas de reales que denotan las coordenadas en el plano de los puntos A, B, C, D respectivamente. Puedes suponer que todas las coordenadas esta\u0301n en el rango de - 10 a + 10.",
    "output": "El orden en el que se deben unir los cuatro puntos ( denotados con caracteres) . En caso de existir ma\u0301s de una solucio\u0301n, puedes imprimir cualquiera de ellas. Adema\u0301s, se debe imprimir un real que sea la suma de las longitudes de los segmentos usados. El real impreso se considerara\u0301 correcto si es razonablemente cercano a la respuesta exacta.",
    "note": "",
    "topics": [
      "math",
      "implementation",
      "geometry"
    ],
    "id": 12938
  },
  {
    "title": "Daisy Chains",
    "url": "https://omegaup.com/arena/problem/Daisy-Chains",
    "history": "Cada di\u0301\u00ada, como parte de su caminata alrededor de la granja, Bessie la vaca visita su pastizal favorito, el cual tiene N flores ( todas margaritas) etiquetadas de 1 a N alineadas en una fila ( 1 \u2264 N \u2264 100) . La flor i tiene p_ i pe\u0301talos ( 1\u2264pi\u22641000) . Como foto\u0301grafa aficionada, Bessie decide tomar varias fotos de esas flores. En particular, para cada par de flores ( i, j) satisfaciendo 1\u2264i\u2264j\u2264N, Bessie toma una foto de todas las flores desde la flor i hasta la flor j ( incluyendo i y j) . Despue\u0301s Bessie mira sus fotos y se da cuenta que algunas de esas fotos tienen una \" flor promedio\" \u2013 una flor que tiene P pe\u0301talos, donde P es exactamente el promedio del nu\u0301mero de pe\u0301talos de las flores en la foto. # Problema\u00bfCua\u0301ntas de las fotos de Bessie tienen una flor promedio?",
    "input": "La primera li\u0301\u00adnea de la entrada contiene a N. La segunda li\u0301\u00adnea contiene N enteros separados por espacios p_ 1, p_ 2, . . . , p_ N.",
    "output": "Imprima la cantidad de fotos que tienen una flor promedio.",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 12911
  },
  {
    "title": "Operaciones triviales sobre un arreglo",
    "url": "https://omegaup.com/arena/problem/Operaciones-triviales-sobre-un-a",
    "history": "Dado un arreglo de N enteros, escribe un programa que procese una secuencia de M comandos de los siguientes tipos: - ` SUMA` K: Sumar el entero K a todos los elementos del arreglo. - ` ORDENA` : Ordenar el arreglo.",
    "input": "El entero N seguido de los N enteros del arreglo. Posteriormente, el entero M seguido de los M comandos a procesar. Puedes suponer que 0 \u2264 N, M \u2264 10^ 5 y que tanto los elementos del arreglo como los valores a sumar esta\u0301n en el rango de - 100 a + 100.",
    "output": "Los N enteros del arreglo despue\u0301s de procesar los comandos.",
    "note": "",
    "topics": [
      "math",
      "sortings"
    ],
    "id": 12895
  },
  {
    "title": "Pensando como computadora",
    "url": "https://omegaup.com/arena/problem/Pensando-como-computadora",
    "history": "El sistema binario utiliza solamente dos si\u0301mbolos, el 1 y el 0, cualquier dato x_ i que introducimos en nuestro ordenador, se codifica en una serie de unos y ceros, por lo que tu propo\u0301sito, es que le ayudes a Elsa a convertir N nu\u0301meros base 10 a su equivalencia en el sistema binario y ver de esa manera, como trabaja un ordenador internamente.",
    "input": "La primera li\u0301nea contiene un nu\u0301mero N, en seguida se te proporcionara\u0301n N lineas con nu\u0301meros x_ i en base 10.",
    "output": "N li\u0301neas con la equivalencia de x_ i en el sistema binario.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 12892
  },
  {
    "title": "Concierto durante el almuerzo",
    "url": "https://omegaup.com/arena/problem/S3-2021-Senior-CCC",
    "history": "Llego\u0301 la hora del almuerzo en tu escuela. Tus N amigos esta\u0301n parados en una cancha larga, como siempre. La cancha puede ser representada como una recta nume\u0301rica, con el amigo nu\u0301mero i inicialmente en la posicio\u0301n de P_ i metros en la recta nume\u0301rica. El amigo i puede caminar en cualquier direccio\u0301n en la cancha a 1 metro por W_ i segundos, y su oi\u0301do es lo suficientemente bueno para poder escuchar mu\u0301sica hasta D_ i metros desde su posicio\u0301n. Mu\u0301ltiples estudiantes pueden ocupar la misma posicio\u0301n en la cancha, inicialmente y luego si esta\u0301n caminando tambie\u0301n. Vas a tener un pequen\u0303o concierto en una posicio\u0301n de c metros en la cancha ( donde c es un entero decidido por ti) , y les envi\u0301as un mensaje a tus amigos. Una vez hecho esto, cada uno camina a lo largo de la cancha por la mi\u0301nima cantidad de tiempo de tal forma que ellos terminan siendo capaces de escuchar tu concierto ( en otras palabras, que cada amigo i termina en D_ i distancia de c) . Te gustari\u0301a escoger c que minimice la suma de todos los tiempos de caminata de tus N amigos. \u00bfCua\u0301l es la mi\u0301nima suma ( en segundos) ? Por favor nota que el resultado quiza\u0301 no quepa en un entero de 32 bits.",
    "input": "La primera li\u0301nea contiene el valor de N. Las siguientes N li\u0301neas contienen tres enteros separados por un espacio P_ i, W_ i y D_ i ( 1 \u2264 i \u2264 N) .",
    "output": "Un entero que es la mi\u0301nima suma de tiempos de caminata ( en segundos) para todos tus N amigos, de tal forma que puedan escuchar tu concierto.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 12861
  },
  {
    "title": "Trompos Tuneados",
    "url": "https://omegaup.com/arena/problem/OSI-2021-Trompos",
    "history": "Cuando Cope era joven soli\u0301a aprovechar la temporada de trompos para emprender un negocio. Les ofreci\u0301a a sus amigos venderles kits de trompos personalizados para que pudieran tener el trompo ma\u0301s cool que se les ocurra. Aunque, solo vendi\u0301a trompos chicos y medianos. El detalle es que Cope quiere saber cual es el nu\u0301mero total de trompos diferentes que podri\u0301a llegar a armar, y como no es muy bueno con las matema\u0301ticas necesita que lo ayudes. ! [ enter image description here] [ 1] Un trompo puede combinarse de diferentes maneras, puedes tener o no, una estrella, al igual que puedes tener o no el aro de la cuerda. Las tapas y cuerpos deben ser del mismo taman\u0303o ( chicos o medianos) . Mientras que las puntas y las cuerdas pueden combinarse de cualquier manera.",
    "input": "Una u\u0301nica li\u0301nea con 8 nu\u0301meros enteros que indican los diferentes tipos de piezas que tiene disponibles. En orden son: * Tapas chicas* Cuerpos chicos* Tapas medianas* Cuerpos medianos* Puntas* Aros* Estrellas* Cuerdas",
    "output": "Un u\u0301nico nu\u0301mero entero que indica la cantidad de trompos diferentes que se pueden armar.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 12824
  },
  {
    "title": "Producto de submatrices",
    "url": "https://omegaup.com/arena/problem/Producto-de-submatrices",
    "history": "Una matriz cuadrada A ( de dimensio\u0301n n \u00d7 n) se puede dividir en 4 submatrices de dimension n/ 2\u00d7n/ 2. Para ejemplificar la forma en la que se componen las submatrices se presenta el siguiente ejemplo con n = 4. A= [ a_ 00 a_ 01 a_ 02 a_ 03; _ 10 a_ 11 a_ 12 a_ 13; _ 20 a_ 21 a_ 22 a_ 23; _ 30 a_ 31 a_ 32 a_ 33 ] M_ 1= [ a_ 00 a_ 01; _ 10 a_ 11 ] M_ 2= [ a_ 02 a_ 03; _ 12 a_ 13 ] M_ 3= [ a_ 20 a_ 21; _ 30 a_ 31 ] M_ 4= [ a_ 22 a_ 23; _ 32 a_ 33 ] Lo anterior aplica sin importar la dimensio\u0301n de la matriz A. Tu tarea es obtener el resultado del producto de dos submatrices de la matriz A.",
    "input": "Un entero 4\u2264 n \u2264 100 que es par siempre seguido de n lineas con n enteros cada una, es decir la matriz A. Finalmente se brindan dos enteros p y q, que indican las submatrices que se van a usar para obtener su producto.",
    "output": "La matriz correspondiente al producto de las submatrices indicadas.",
    "note": "",
    "topics": [
      "implementation",
      "math",
      "matrices"
    ],
    "id": 12804
  },
  {
    "title": "\u00c1rea de una elipse",
    "url": "https://omegaup.com/arena/problem/Area-de-una-elipse",
    "history": "El a\u0301rea de una elipse con radio menor r_ 1 y radio mayor r_ 2 se calcula como \u03c0\u00d7 r_ 1 \u00d7 r_ 2. Se te dara\u0301n las coordenadas x_ c, y_ c del centro de la elipse y las coordenadas de los puntos p_ 1 = ( x_ 1, y_ 1) y p_ 2 = ( x_ 2, y_ 2) de los extremos de los radios a partir del centro de la elipse. Escribe un programa que calcule el a\u0301rea de la elipse. ! [ imagen] [ 1]",
    "input": "La primera li\u0301nea contendra\u0301 dos enteros x_ c, y_ c. La segunda li\u0301nea contendra\u0301 dos enteros x_ 1, y_ 1. La tercera li\u0301nea contendra\u0301 dos enteros x_ 2, y_ 2.",
    "output": "Un real que sea el a\u0301rea de la elipse. E\u0301sta se debe imprimir obligatoriamente con dos decimales de precisio\u0301n.",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 12775
  },
  {
    "title": "Los asientos del jurado",
    "url": "https://omegaup.com/arena/problem/asientos-jurado",
    "history": "Por un descuido, Alicia tiro\u0301 a todos los jurados del estrado. El Rey, clavando los ojos en Alicia, anuncio\u0301 que el juicio no continuari\u0301a hasta que * todos* estuvieran en su respectivo asiento. Asi\u0301 que Alicia se apresuro\u0301 a recoger a los jurados de 3 en 3. Sin embargo, las reglas para asignar los asientos eran demasiado complicadas. Dado un trio de personas, a, b, c, se les asigna un nu\u0301mero de asiento en una fila determinada, a en la fila 1, b en la fila 2 y c en la fila 3, usando las siguientes fo\u0301rmulas: fila1( a, b, c) = a^ 2 - a + bc/ 10+ 1, fila2( a, b, c) = 1+ ( ( fila1( a, b, c) - 1 + abc) 101) , fila3( a, b, c) = 1+ fila1( a, b, c) / 2 + fila2( a, b, c) / 2. Ayuda a Alicia a calcular el nu\u0301mero de asiento de los primeros 3 jurados. Las divisiones son enteras y mod es la operacio\u0301n del residuo de la divisio\u0301n, tambie\u0301n llamada * mo\u0301dulo* .",
    "input": "Tres nu\u0301meros enteros a, b y c, separados por un espacio. Puede suponer que 0 \u2264 a, b, c \u2264 10.",
    "output": "Tres nu\u0301meros enteros separados por espacios, obtenidos al calcular fila1( a, b, c) , fila2( a, b, c) y fila3( a, b, c) . # Ejemplos| | input7 4 2| | output43 99 71| | input3 10 9| | output16 84 51| | end",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 12733
  },
  {
    "title": "Paquetes de vacunas",
    "url": "https://omegaup.com/arena/problem/Paquetes-vacunas",
    "history": "La jefa de gobierno desea comprar vacunas para los 534 trabajadores de un hospital. El problema es que los dos proveedores de vacunas, A y B, no venden dosis exactas, sino por paquetes de taman\u0303o fijo. Haz un programa que determine cua\u0301l proveedor vende el paquete con mayor cantidad de dosis y cua\u0301ntos de esos paquetes seri\u0301an necesarios para vacunar a todos los miembros del hospital.",
    "input": "Dos nu\u0301meros enteros diferentes a y b, separados por un espacio, indicando la cantidad de dosis que tiene el paquete de los proveedores A y B, respectivamente. Puede suponer que 1 \u2264 a, b \u2264 534.",
    "output": "Una letra indicando cua\u0301l proveedor vende el paquete con la mayor cantidad de dosis ( A o B) y un entero p indicando cua\u0301ntos paquetes seri\u0301an necesarios para cubrir la demanda.",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 12644
  },
  {
    "title": "Divisi\u00f3n Compleja",
    "url": "https://omegaup.com/arena/problem/Division-Compleja",
    "history": "Dados dos nu\u0301meros complejos debes obtener el resultado de dividir el primer nu\u0301mero entre el segundo.",
    "input": "Cuatro enteros 1\u2264 r1, i1, r2, i2 \u2264 100, donde r denota la parte real e i la parte imaginaria. De tal forma que los primeros dos enteros corresponden al primer nu\u0301mero complejo y los dos enteros restantes al segundo nu\u0301mero complejo.",
    "output": "Dos reales r, i, la parte real y la parte imaginaria del resultado separados por un espacio. Ambos valores deben ser impresos con tres puntos decimales.",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 12622
  },
  {
    "title": "Practicando con formulas",
    "url": "https://omegaup.com/arena/problem/Practicando-con-formulas",
    "history": "Dado un valor real a, quieres resolver una serie de ecuaciones hasta obtener el valor de z. x= 3a+ 15 y= x+ 3/ x+ 1 z= 5x+ 7y/ axy",
    "input": "Un real a. Puedes suponer que 1\u2264 a \u2264 100.",
    "output": "Un real que sea el valor de z impreso con tres puntos decimales.",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 12618
  },
  {
    "title": "Operaciones B\u00e1sicas",
    "url": "https://omegaup.com/arena/problem/Operaciones-Basicas-1",
    "history": "Dados tres valores a, b, c debes realizar una serie de operaciones ba\u0301sicas.",
    "input": "Tres enteros 1 \u2264 a, b, c \u2264 100000.",
    "output": "Tres li\u0301neas con tres enteros cada una. La primera li\u0301nea debe contener los resultados de a+ b , a+ c y b + c separados por un espacio. La segunda li\u0301nea debe contener los resultados de a- b , a- c y b- c separados por un espacio. La ultima li\u0301nea debe contener los resultados de a\u00d7 b , a\u00d7 c y b\u00d7 c separados por un espacio.",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 12617
  },
  {
    "title": "Sumas sobre arreglos completos",
    "url": "https://omegaup.com/arena/problem/Sumas-sobre-arreglos-completos",
    "history": "Escribe un programa que lea un arreglo A de N enteros y una secuencia de M enteros. Cada entero de la secuencia debera\u0301s suma\u0301rselo a todos los elementos de A. Finalmente, debera\u0301s imprimir el valor final de A.",
    "input": "Inicialmente, dos enteros N y M. Posteriormente, los N enteros del arreglo A. Finalmente, la secuencia de M enteros. Puedes suponer que 0 \u2264 N, M \u2264 10^ 5 y que los enteros del arreglo y la secuencia esta\u0301n en el rango de - 100 a + 100.",
    "output": "El valor final de los N enteros de A.",
    "note": "",
    "topics": [
      "math",
      "implementation",
      "data structures"
    ],
    "id": 12610
  },
  {
    "title": "Do You Know Your ABCs?",
    "url": "https://omegaup.com/arena/problem/Do-You-Know-Your-ABCs",
    "history": "Las vacas del Granjero John han venido realizando reuniones en li\u0301nea usando la plataforma de reuniones \" mooZ\" . Ellas han inventado, por diversio\u0301n, un juego simple de nu\u0301meros para jugar durante las reuniones para mantenerse entretenidas. Elsie tiene tres enteros positivos A, B, y C ( A\u2264B\u2264C) . Se supone que esos nu\u0301meros son secretos, por lo tanto no los revelara\u0301 directamente a su hermana Bessie. En lugar de hacer eso, ella le da a Bessie siete enteros ( no necesariamente distintos) en el intervalo [ 1, 10^ 9] , afirmando que ellos son A, B, C, A+ B, B+ C, C+ A, y A+ B+ C en algu\u0301n orden. # ProblemaDada una lista de esos siete nu\u0301meros, por favor ayuda a Bessie a determinar A, B y C. Se puede demostrar que la respuesta es u\u0301nica.",
    "input": "La u\u0301nica li\u0301nea de entrada consiste en los 7 enteros separados por espacios.",
    "output": "Los valores de A, B, y C separados por un espacio.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 12608
  },
  {
    "title": "So\u00f1ador",
    "url": "https://omegaup.com/arena/problem/Sonador",
    "history": "Eli\u0301as ha son\u0303ado mucho con que habra\u0301 un virus que desatara\u0301 una pandemia en el planeta tierra, pero eso no ocurrira\u0301, \u00bfverdad? : ( . A veces su suen\u0303o se situ\u0301a con la pandemia en curso y muchas personas infectadas, otras veces se situ\u0301a al inicio de la pandemia y con 1 persona infectada. Eli\u0301as noto\u0301 que cuando su suen\u0303o se situ\u0301a al inicio de la pandemia, al inicio aparece la letra ' I' , cuando se situ\u0301a con la pandemia en curso aparece una ' A' ( de \u00a1\u00a1ayudaaa! ! ) . El esta\u0301 tan aburrido en sus suen\u0303os que se ha puesto a calcular, si esta\u0301 al inicio de la pandemia, \u00bfcua\u0301ntas personas se infectara\u0301n * n- e\u0301simo* di\u0301a? ; si esta\u0301 en curso la pandemia, \u00bfcua\u0301ntos di\u0301as tiene la pandemia si hay k personas infectadas? Eli\u0301as tambie\u0301n sabe que una persona infectada solo infecta a 1 persona ma\u0301s por di\u0301a. Las personas se infectan instanta\u0301neamente al inicio del di\u0301a.",
    "input": "Un caracter ' I' o ' A' indicando si la pandemia inicia o esta\u0301 en curso y en la misma li\u0301nea un entero n o k, dependiendo del tipo de suen\u0303o.",
    "output": "Para cada tipo de suen\u0303o ' I' imprime la cantidad de infectados en el * n- e\u0301simo di\u0301a* . Para cada tipo de suen\u0303o ' A' imprime los di\u0301as que lleva la pandemia si hay k infectados.",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 12588
  },
  {
    "title": "Suma de dos n\u00fameros enteros",
    "url": "https://omegaup.com/arena/problem/Suma-de-dos-numeros-enteros",
    "history": "Escriba un programa que reciba dos enteros e imprima el resultado de sumarlos.",
    "input": "Dos nu\u0301meros enteros: a y b.",
    "output": "La suma de los dos nu\u0301meros enteros.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 12472
  },
  {
    "title": "Carrera de Gauss",
    "url": "https://omegaup.com/arena/problem/Carrera-de-Gauss",
    "history": "* Carlos Gauss* , tataranieto del famosi\u0301simo matema\u0301tico * Carl Friedrich Gauss* , esta\u0301 organizando una carrera, llamada * * TecnoCarrera 2020* * . Dicha carrera tiene un formato particular, en honor a su tatarabuelo, que se describe a continuacio\u0301n: - Inicialmente los corredores se ubican en la posicio\u0301n x_ 0 = 0. - El objetivo de la carrera es llegar a la posicio\u0301n final x_ f = P. - La carrera esta\u0301 compuesta por diversos turnos, tal que en el k- e\u0301simo turno, cada corredor que no haya llegado a la meta * * debe* * elegir entre avanzar k posiciones ( x_ k = x_ k- 1 + k) o retroceder k posiciones ( x_ k = x_ k- 1 - k) , siendo x_ k la posicio\u0301n de un * corredor* dado, luego del k- e\u0301simo turno. Para estar seguro que los participantes no hagan trampa, Carlos necesita saber cual es la menor cantidad de turnos con los que un corredor puede llegar a la meta, pero desafortunadamente, e\u0301l no heredo\u0301 los dones matema\u0301ticos de su antepasado, y por eso necesita tu ayuda para calcular este valor.",
    "input": "La entrada consiste de un nu\u0301mero 1 < = P < = 10^ 9, indicando la posicio\u0301n final x_ f = P a la que deben llegar los corredores.",
    "output": "Imprima un entero indicando la cantidad mi\u0301nima de turnos con los que un corredor puede llegar a la meta.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 12435
  },
  {
    "title": "Un gran reloj",
    "url": "https://omegaup.com/arena/problem/Un-gran-reloj",
    "history": "Ok, yendo ra\u0301pido necesitamos calcular el a\u0301rea de un reloj de pie, \u00bfPorque? , ni idea pero vamos! [ Reloj de pie] ( Reloj. png)",
    "input": "Tendremos que ingresar 5 nu\u0301meros enteros en orden de a hacia e",
    "output": "Debera\u0301 aparecer el texto \" El a\u0301rea es \" seguido de la respuesta",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 12259
  },
  {
    "title": "Figura 12",
    "url": "https://omegaup.com/arena/problem/Figura-12",
    "history": "Calcular la superficie de la siguiente figura. ! [ ejemplo] ( Figura. png)",
    "input": "La entrada consiste en cuatro nu\u0301meros: a, b, c y d, que son las medidas de los lados.",
    "output": "El texto \u201cSuperficie: \u201cy la superficie de la figura.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 12258
  },
  {
    "title": "Sumas Contin\u00faas II",
    "url": "https://omegaup.com/arena/problem/Sumas-Continuas-por-Rango",
    "history": "Tras revisar los datos registrados por el sistema de Monitoreo, Xander Wilde se preguntaba si podri\u0301a pensar en un planteamiento. . . menos \" trivial\" para la evaluacio\u0301n de esta nueva generacio\u0301n. Despue\u0301s de estar pensando unos minutos se le ocurrio\u0301 una ligera variante del problema \" Sumas Continu\u0301as\" . La premisa de dicha variante es la siguiente: > - Determina el resultado la siguiente suma: 589 + 590 + . . . + 3, 871 + 3, 872\u00bfPodra\u0301s resolver este nuevo desafi\u0301o? \u2014\u2014\u2014-",
    "input": "No se requieren entradas. Es un problema de * * ` Solo salida` * * . Solamente vas a escribir tu respuesta como salida de la forma que se indica a continuacio\u0301n. No necesitas escribir ningu\u0301n co\u0301digo ni programar.",
    "output": "La respuesta del problema es tu salida, y es lo que vas a escribir en la pantalla que aparecera\u0301. Para enviar tu respuesta sigue los siguientes pasos: - Da click en donde dice * * ` Nuevo envi\u0301o` * * . - Selecciona como lenguaje * * ` Solo salida` * * . - Escribe tu respuesta en la ventana que saldra\u0301. - Da click en donde dice enviar.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 12221
  },
  {
    "title": "Calculo de \u00e1reas irregulares",
    "url": "https://omegaup.com/arena/problem/EXIN-01",
    "history": "Mientras inspeccionabas tu libro de Matema\u0301ticas, notaste que habi\u0301a un tema recurrente el cual ya habi\u0301as visto en diversos libros matema\u0301ticos, esto llamo tu curiosidad y debido a esto descubriste que suele ser llamado \" Calculo de a\u0301reas irregulares\" . Un problema que veni\u0301a en tu libro se vei\u0301a muy interesante, por lo que decidiste leerlo: > | | | \u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2013| | ! [ Ilustracio\u0301n] [ 1] | < br> > - Con base en los datos proporcionados, determina el area de la regio\u0301n sombreada. > - Segmento QA = 3. 5 cm. > - Segmento WB = 4. 0 cm. > - Segmento XY = 0. 5 cm. > - Segmento DC = 7. 0 cm. > - Segmento YZ = 2. 0 cm. > < br> Tan pronto como terminaste de revisar el enunciado, te diste cuenta de que el libro no contaba con la solucio\u0301n explicada ya que dejaban la resolucio\u0301n como un ejercicio adicional para el lector. Debido a que te gustan los desafi\u0301os has decidido afrontar este reto. \u2014\u2014\u2014-",
    "input": "No se requieren entradas. Es un problema de \" solo salida\" . Solamente vas a escribir tu respuesta como salida de la forma que se indica a continuacio\u0301n. No necesitas escribir ningu\u0301n co\u0301digo, ni saber programar.",
    "output": "La respuesta del problema es tu salida, y es lo que vas a escribir en la pantalla que aparecera\u0301. Para enviar tu respuesta sigue los siguientes pasos: - Da click en donde dice * * ` Nuevo envi\u0301o` * * . - Selecciona como lenguaje * * ` So\u0301lo salida` * * . - Escribe tu respuesta en la ventana. - Da click en donde dice enviar. < br> * * NOTA IMPORTANTE: * * Tu respuesta debe lucir como el siguiente ejemplo: * * ` 0. 1234` * * . Si intentas enviar algo parecido a * * ` 12. 359cm` * * , tu respuesta sera\u0301 tomada como * * incorrecta* * . Es importante mencionar que la respuesta debe estar redondeada a 4 decimales. \u2014\u2014\u2014- # ConsideracionesPara tu comodidad, a continu\u0301acion se describe la formula necesaria para calcular el a\u0301rea de una * * circunferencia* * : A = \u03c0\u00d7 r^ 2 En este problema considera que \u03c0= 3. 1415, ya que de lo contrario no obtendra\u0301s punto alguno en este problema. Anexado a lo anterior, cuando realices cualquier operacio\u0301n aritme\u0301tica necesaria para llegar a la respuesta, redondea * * todo* * nu\u0301mero obtenido a 4 decimales, es decir, si en algu\u0301n momento realizas una divisio\u0301n como 3. 0 / 13. 0= 0. 230769. . . , el valor que debera\u0301s tomar en cuenta para futuras operaciones sera\u0301 0. 2307.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 12201
  },
  {
    "title": "Gesteg",
    "url": "https://omegaup.com/arena/problem/gesteg",
    "history": "Gesteg es un chico bastante peculiar al que le gusta las matema\u0301ticas y viajar bastante. Infelizmente, cuando se ordenaron los aislamientos domiciliarios debido a la pandemia Gesteg se quedo\u0301 solo en el 18\u00b0 piso de un edificio en la playa. No tiene familiares en la ciudad y tampoco amigos asi\u0301 que solo le quedo\u0301 su creatividad y el hermoso paisaje del mar extendie\u0301ndose en el infinito para entretenerse. En todos estos di\u0301as de aislamiento Gesteg descubrio\u0301 una gran curiosidad por las series de nu\u0301meros empezando por 1, como por ejemplo para la serie 1- > 2- > 4- > 7- > 11- > 16- > . . . encontro\u0301 que existe otra serie asociada, asi\u0301: 1 + ( 1) = 2+ ( 2) = 4+ ( 3) = 7+ ( 4) = 11+ ( 5) = 16. . . Y e\u0301l puede ver que la otra serie seri\u0301a: ( 1) , ( 2) , ( 3) , ( 4) , ( 5) , . . . Continuando con el aislamiento en su apartamento frente al mar, e\u0301l llega a una serie que le gusta bastante: 1 - > 7 - > 35 - > 103 - > 229 - > . . . la cual fue formada por la serie: 6 - > 28 - > 68 - > 126 - > 202 - > . . . y a su vez esta fue formada por la serie: 22 - > 40 - > 58 - > 76 - > . . . y esta u\u0301ltima no tiene misterio porque va de 18 en 18. Inspirado por la inmensidad del mar, Gesteg quisiera saber cua\u0301l seri\u0301a un valor millone\u0301simo en la serie. Considerando que este nu\u0301mero puede ser muy grande para su entendimiento, quisiera aplicarle mo\u0301dulo de 2020. Ayuda a Gesteg con esta curiosa tarea.",
    "input": "La entrada consistira\u0301 de varios casos de prueba. Cada caso de prueba estara\u0301 descrito en una sola li\u0301nea por un solo entero G ( 10^ 6 \u2264 G < 2^ 32) . El valor de G= 0 indicara\u0301 el final del archivo de entrada y este no debera\u0301 ser procesado.",
    "output": "Para cada salida, imprimir una sola li\u0301nea con el valor entero g representando el valor g- e\u0301simo de la serie de Gesteg con mo\u0301dulo 2020. Considere el primer valor ( 1) como el valor 0- e\u0301simo. | | input2020100000020000000| | output12011801| | end* * Nota* * : el valor de 2020 en el ejemplo de entrada no es va\u0301lido pero se coloco\u0301 por ser pequen\u0303o y para validar sus pruebas.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 12198
  },
  {
    "title": "Armando tiendas Covid",
    "url": "https://omegaup.com/arena/problem/Armando-tiendas-Covid",
    "history": "El estado ha decidido armar tiendas de campan\u0303a en diferentes parques de la ciudad para realizar pruebas ra\u0301pidas de Covid. Los hospitales ma\u0301s emblema\u0301ticos de cada ciudad han sido seleccionados como responsables y se les ha enviado los materiales par armar tales tiendas. Cada hospital recibe: * N varas de acero, * M rollos de lona ( material para el techo de la tienda) * y otros insumos extras para soldadura y costura. Las dimensiones de las tiendas sera\u0301n de 2 \u00d7 2 metros en la base y 2. 5 metros de altura pues es la misma longitud de las varas que el gobierno ha entregado. El techo de la carpa tiene una forma triangular. Los rollos de lona tienen 2 metros de anchura y 50 metros de longitud cada uno. Al ver de manera frontal a la tienda, se aprecia una forma triangular en las varas que forman el techo. Especi\u0301ficamente se trata de un tria\u0301ngulo iso\u0301sceles de 30 grados en sus a\u0301ngulos ma\u0301s agudos y de 120 en su mayor a\u0301ngulo. Los hospitales decidieron cortar las varas y soldarlas para obtener la forma correcta en el techo. Los residuos formara\u0301n parte del inventario del hospital y ya no se reutilizara\u0301n como material para nuevas tiendas covid ( Cada tienda necesita 13 varas como en la imagen) . Se aprovechan los 2 metros de la lona para realizar un solo corte en ella y de esa forma colocarla en la tienda en un solo sentido, dejando un espacio de 30 centi\u0301metros en ambos lados en donde este\u0301 la lona. En la figura a continuacio\u0301n se muestra co\u0301mo es la estructura de la tienda y co\u0301mo es que se instala el techo de la tienda dejando los 30 centi\u0301metros sobrantes en ambos extremos. ! [ Si no se muestra la imagen contacta al admin] ( tienda- campanha. png) El material que el gobierno ha entregado no esta\u0301 bien calculado asi\u0301 que probablemente o bien falte tela o bien falte varas de metal por lo que su trabajo sera\u0301 calcular hasta cua\u0301ntas tiendas se pueden construir con el material recibido del gobierno como ma\u0301ximo. No considerar los insumos extra.",
    "input": "El archivo de entrada tendra\u0301 varios casos de prueba. Cada caso de prueba estara\u0301 descrito en una sola li\u0301nea con dos enteros N ( 0 < N < 10^ 5) y M ( 0 < M < 100) que indican respectivamente la cantidad de varias y la cantidad de rollos de lona. El u\u0301ltimo caso de prueba estara\u0301 dado por los valores N= M= 0 y no debera\u0301 ser procesado.",
    "output": "Por cada caso de prueba, se debe de imprimir en una sola li\u0301nea el ma\u0301ximo nu\u0301mero de tiendas que se pueden construir con los materiales recibidos por el gobierno. Si no se encontrase una solucio\u0301n entera, aplicar la operacio\u0301n matema\u0301tica de piso a la respuesta. Para la lona, considerar que si sobrase un retazo del rollo anterior, se puede coser al siguiente rollo para no desperdiciar, adema\u0301s, considerar que dicha costura es tan pequen\u0303a que no se considerara\u0301 como una pe\u0301rdida de tela. | | input200 52000 3720000 480 0| | output15153590| | end",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 12190
  },
  {
    "title": "Una funci\u00f3n de suma triangular",
    "url": "https://omegaup.com/arena/problem/Una-funcion-de-suma-triangular",
    "history": "Dada una funcio\u0301n f( n) definida como sigue: ! [ enter image description here] [ 1] escribe un programa que calcule f( f( f( n) ) ) .",
    "input": "Un entero n en el rango de 1 a 6.",
    "output": "Un entero que sea el valor de f( f( f( n) ) ) . El resultado puede no caber en un * int* de 32 bits.",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 12092
  },
  {
    "title": "Ordenando por el valor de la potencia",
    "url": "https://omegaup.com/arena/problem/Ordenando-por-el-valor-de-la-pot",
    "history": "Escribe un programa que lea un arreglo de N parejas de enteros ( B, E) y los ordene ascendentemente segu\u0301n el valor de B^ E. En caso de empates en dicho valor, primero deben aparecer los de menor B y despue\u0301s los de menor E.",
    "input": "Un entero N seguido de N parejas de enteros ( B, E) . Puedes suponer que 1 \u2264 N \u2264 50000, que 0 \u2264 B, E \u2264 32 y que 0 \u2264 B^ E\u2264 10^ 18.",
    "output": "Las N parejas del arreglo ordenado.",
    "note": "",
    "topics": [
      "math",
      "sortings"
    ],
    "id": 12088
  },
  {
    "title": "Ordenando por distancia al origen",
    "url": "https://omegaup.com/arena/problem/Ordenando-por-distancia-al-orige",
    "history": "Escribe un programa que lea un arreglo de N puntos en el plano ( x_ i, y_ i) y los ordene segu\u0301n su distancia con respecto al origen. En caso de empates en distancia, primero deben aparecer los de menor x y despue\u0301s los de menor y.",
    "input": "Un entero N seguido de N parejas de enteros ( x_ i, y_ i) . Puedes suponer que 1 \u2264 N \u2264 10^ 5 y que las coordenadas esta\u0301n en el rango de - 25000 a + 25000.",
    "output": "Los N puntos del arreglo ordenado.",
    "note": "",
    "topics": [
      "math",
      "geometry",
      "sortings"
    ],
    "id": 12054
  },
  {
    "title": "occ20sfns23",
    "url": "https://omegaup.com/arena/problem/occ20sfns23",
    "history": "# \u00bfCua\u0301ntas palabras? Diego ha recibido un mensaje extran\u0303o en el cual en vez de espacios vienen asteriscos. E\u0301l quiere saber cua\u0301ntas palabras tiene dicho mensaje. El mensaje estara\u0301 en minu\u0301sculas y entre palabra y palabra hay al menos un asterisco. La longitud del mensaje sera\u0301 a lo ma\u0301s 1000 caracteres.",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 12045
  },
  {
    "title": "occ20sfpn22",
    "url": "https://omegaup.com/arena/problem/occ20sfpn22",
    "history": "# \u00bfCua\u0301ntos divisores? Dado un entero n ( 1 \u2264 n \u2264 10 000) encuentre cua\u0301ntos enteros lo dividen. # Ejemplos| | input5| | output2| | input6| | output4| | end",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 12042
  },
  {
    "title": "occ20sfns33",
    "url": "https://omegaup.com/arena/problem/occ20sfns33",
    "history": "# Suma nHaga un programa que reciba un entero n ( 2 \u2264 n \u2264 1000) , un entero m ( 2 \u2264 m \u2264 1000) y que determine cua\u0301ntos subconjunto de los nu\u0301meros de 1 a n existen tales tal que la suma de sus elementos sea m. Como las respuestas pueden ser muy grandes, de\u0301 su respuesta mo\u0301dulo 10^ 9+ 7. # Calificacio\u0301nEl 40",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 12036
  },
  {
    "title": "occ20sfns22",
    "url": "https://omegaup.com/arena/problem/occ20sfns22",
    "history": "# Nu\u0301mero de sumas de primosDado un nu\u0301mero n ( 1 \u2264 n \u2264 10000) determinar de cua\u0301ntas maneras se puede expresar como suma de dos nu\u0301meros primos. Los nu\u0301meros primos son aquellos enteros mayores que 1 que solamente son divisibles por 1 y por el mismo nu\u0301mero# Ejemplos| | input8| | output1| | input14| | output2| | endLa u\u0301nica manera de expresar a 8 como suma de dos primos es 3+ 5. En cambio 14= 3+ 11= 7+ 7.",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 12030
  },
  {
    "title": "occ20sfns21",
    "url": "https://omegaup.com/arena/problem/occ20sfns21",
    "history": "# Sucesio\u0301nDados dos te\u0301rminos iniciales a_ 1 y a_ 2 de una sucesio\u0301n de nu\u0301meros enteros, se definen los dema\u0301s por la fo\u0301rmula a_ i= a_ i- 2+ a_ i- 1. Es decir los te\u0301rminos siguientes son iguales a la suma de los dos te\u0301rminos que le preceden. Haga un programa que reciba como entrada los dos primeros te\u0301rminos de la sucesio\u0301n asi\u0301 y un nu\u0301mero n ( 3 \u2264 n \u2264 1000) y que imprima los te\u0301rminos del 1 al n- e\u0301simo de esa sucesio\u0301n.",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 12029
  },
  {
    "title": "occ20sfpn33",
    "url": "https://omegaup.com/arena/problem/occ20sfpn33",
    "history": "# \u00bfCua\u0301ntas di\u0301gitos? Considere un libro que tiene n ( 1 \u2264 n \u2264 100 0000) pa\u0301ginas comenzando desde la pa\u0301gina 1. Se debe calcular cua\u0301ntos di\u0301gitos se usan para numerar todas las pa\u0301ginas.",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 12028
  },
  {
    "title": "occ20sfpn24",
    "url": "https://omegaup.com/arena/problem/occ20sfpn24",
    "history": "# Suma de di\u0301gitosDado un nu\u0301mero n de a lo ma\u0301s 50 di\u0301gitos haga un programa que calcule la suma de sus di\u0301gitos.",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 12024
  },
  {
    "title": "occ20sfpn23",
    "url": "https://omegaup.com/arena/problem/occ20sfpn23",
    "history": "# Alcanci\u0301a de DiegoDiego acaba de abrir su alcanci\u0301a y quiere saber cua\u0301nto dinero tiene. Haga un programa que reciba como entrada n ( 1\u2264 n \u2264 100) , el nu\u0301mero de denominaciones diferentes de monedas que tiene la alcanci\u0301a y luego n pares de nu\u0301meros d_ i, c_ i ( 1\u2264 d_ i, c_ i\u2264 100) indicando la i- e\u0301sima denominacio\u0301n y el nu\u0301mero de monedas que hay de esa denominacio\u0301n. Su programa debe dar como salida la cantidad total de dinero en la alcanci\u0301a.",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 12023
  },
  {
    "title": "occ20spn22",
    "url": "https://omegaup.com/arena/problem/occ20spn22",
    "history": "# \u00bfCua\u0301ntos divisores? Dado un entero n ( 1 \u2264 n \u2264 10 000) encuentre cua\u0301ntos enteros lo dividen. # Ejemplos| | input5| | output2| | input6| | output4| | end",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 12022
  },
  {
    "title": "occ20sfpn21",
    "url": "https://omegaup.com/arena/problem/occ20sfpn21",
    "history": "# Lista de potencias mHaga un programa que reciba dos enteros n y m ( 1\u2264 n, m \u2264 500) y que de\u0301 como salida una lista de los nu\u0301meros n^ 1 n^ 2 n^ 3 . . . n^ m separados por un espacio.",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 12021
  },
  {
    "title": "Aprobado o reprobado",
    "url": "https://omegaup.com/arena/problem/Aprobado-o-reprobado",
    "history": "Tu profesor de qui\u0301mica evaluara\u0301 el curso de la siguiente forma: - Habra\u0301n tres exa\u0301menes y tres tareas. Cada evaluacio\u0301n obtendra\u0301 una calificacio\u0301n del 0 al 10. - 40",
    "input": "Seis reales E_ 1, E_ 2, E_ 3, T_ 1, T_ 2, T_ 3 que corresponden con las calificaciones de los tres exa\u0301menes y las tres tareas, respectivamente.",
    "output": "Si aprobaste el curso, la palabra * aprobado* seguida de tu calificacio\u0301n final ( tu programa se considerara\u0301 correcto si el valor calculado es razonablemente cercano a la respuesta exacta) . Si reprobaste el curso, la palabra * reprobado* .",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 11984
  },
  {
    "title": "Fila Sana",
    "url": "https://omegaup.com/arena/problem/Fila-Sana",
    "history": "La jefa de gobierno quiere hacer un evento donde acudira\u0301n P nu\u0301mero de personas. Antes de entrar al edificio, esas personas hara\u0301n una u\u0301nica fila a lo largo de un pasillo y deben mantener \" la sana distancia\" . El pasillo tiene un largo total de L centi\u0301metros y la \" sana distancia\" aconsejada es de S centi\u0301metros entre persona y persona. Ayu\u0301danos a decidir si el pasillo es lo suficientemente largo para que quepa toda la fila. Consideraremos que las personas son puntos ( sin grosor) , y se permite que una persona este\u0301 exactamente sobre un extremo del pasillo [ p. ej. en un pasillo de largo 30 cm, con 10cm de \" sana distancia\" , caben 4 personas: una a los 0cm, otra a los 10cm, a los 20cm y otra en el extremo final ( 30 cm) ] .",
    "input": "Consiste de tres nu\u0301meros enteros, P, L, S, separados por espacios. Puede suponer que P < 10 000 y que 0 < S < L < 100 000.",
    "output": "El mensaje \" CABEN\" , si la fila cabe completa en el pasillo, o \" RIESGO\" en caso contrario.",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 11940
  },
  {
    "title": "Sumando intervalos de enteros",
    "url": "https://omegaup.com/arena/problem/Sumando-intervalos-de-enteros",
    "history": "Escribe un programa que calcule la suma \u2211_ i= a^ b i para cada pareja de enteros a, b dada.",
    "input": "Un entero n seguido de n parejas de enteros a, b. Puedes suponer que 0 \u2264 n \u2264 10^ 5 y que 1 \u2264 a \u2264 b \u2264 2\u00d710^ 9.",
    "output": "Para cada pareja, la suma resultante.",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 11910
  },
  {
    "title": "Una f\u00f3rmula con muchas divisiones",
    "url": "https://omegaup.com/arena/problem/Una-formula-con-muchas-divisione",
    "history": "Dados dos reales x y y, escribe un programa que calcule el valor de z dado por: = x^ 3 + x^ 2/ y^ 2 - y - ( x/ y + 5) / 2x",
    "input": "Dos reales x, y. Puedes suponer que - 10 \u2264 x, y \u2264 10 y que no se producira\u0301n divisiones entre cero.",
    "output": "Un real que sea el valor de z. Tu programa se considerara\u0301 correcto si el valor calculado es razonablemente cercano a la respuesta exacta.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 11884
  },
  {
    "title": "Las tartas horneadas de la Reina Roja",
    "url": "https://omegaup.com/arena/problem/Las-tartas-de-la-reina-roja",
    "history": "Un di\u0301a de verano, la Reina Roja horneo\u0301 N deliciosas tartas y las acomodo\u0301 en una hilera al aire libre. La Sota de Corazones decidio\u0301 robarlas de poco en poco para evitar que se dieran cuenta. El primer di\u0301a, la Sota respeto\u0301 las primeras dos tartas de la hilera, robo\u0301 la tercera, respeto\u0301 las siguientes dos tartas, robo\u0301 la sexta y asi\u0301 sucesivamente. Como nadie se dio\u0301 cuenta de lo ocurrido, el segundo di\u0301a la Sota volvio\u0301 a robar: de lo que quedaba de la hilera, la Sota respeto\u0301 la primera tarta, robo\u0301 la segunda, respeto\u0301 la tercera, robo\u0301 la cuarta y asi\u0301 sucesivamente. Como nadie se dio\u0301 cuenta de lo ocurrido, el tercer di\u0301a la Sota se robo\u0301 todas las que quedaban. Cuando finalmente la Reina Roja se dio\u0301 cuenta, ordeno\u0301 que se investigara quie\u0301n robo\u0301 las tartas \u00a1para cortarle la cabeza! \u00bfCua\u0301ntas tartas se robo\u0301 la Sota de Corazones el primer di\u0301a, el segundo di\u0301a y el tercer di\u0301a?",
    "input": "Un entero N que es el nu\u0301mero original de tartas de la hilera. Puedes suponer que 0 \u2264 N \u2264 1000000.",
    "output": "Tres enteros que sean la cantidad de tartas que la Sota de Corazones robo\u0301 el primer, segundo y tercer di\u0301a respectivamente.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 11809
  },
  {
    "title": "Watermelon",
    "url": "https://omegaup.com/arena/problem/Watermel",
    "history": "> ! [ Small] [ 1] < kbd> Se actualizaro\u0301n casos a las 11: 30 AM ( Agosto 10, 2020) < / kbd> > # Descripcio\u0301n> Un caluroso di\u0301a de verano, Pete y su amigo Billy decidieron comprar una sandi\u0301a. Eligieron la ma\u0301s grande y madura ( en su opinio\u0301n) . Despue\u0301s se peso\u0301 la sandi\u0301a y la balanza mostro\u0301 w kilos. Se apresuraron a casa, muriendo de sed, y decidieron dividir la sandia, sin embargo, enfrentaron un problema difi\u0301cil. > Pete y Billy son grandes admiradores de los nu\u0301meros pares, por eso quieren dividir la sandi\u0301a de tal manera que cada una de las dos partes pese un nu\u0301mero par de kilos, al mismo tiempo no es obligatorio que las partes sean iguales. Los nin\u0303os esta\u0301n extremadamente cansados \u200b\u200by quieren comenzar su comida lo antes posible, por eso debes ayudarlos y averiguar si pueden dividir la sandi\u0301a de la manera que quieran. Por supuesto, cada uno de ellos deberi\u0301a obtener una parte de peso positivo. \u2014\u2013> # Entrada> La primera ( y u\u0301nica) li\u0301nea de entrada contiene el nu\u0301mero entero w ( 1 \u2264 w \u2264 100 ) - el peso de la sandi\u0301a comprada por los nin\u0303os. > # Salida> Escriba< kbd> SI< / kbd> , si los nin\u0303os pueden dividir la sandi\u0301a en dos partes, cada una de ellas con un * * nu\u0301mero par de kilos* * ; y < kbd> NO< / kbd> en el caso contrario. \u2014\u2014\u2014# Ejemplo: | | input8| | outputSI| | end\u2014\u2014\u2014> # Nota: > Por ejemplo, los nin\u0303os pueden dividir la sandi\u0301a en dos partes de 2 y 6 kilos respectivamente. ( Otra variante - dos partes de 4 y 4 kilos) .",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "number theory",
      "math",
      "implementation"
    ],
    "id": 11611
  },
  {
    "title": "Producto punto de dos vectores",
    "url": "https://omegaup.com/arena/problem/Producto-punto-de-dos-vectores",
    "history": "Escribe un programa que calcule el producto de dos vectores a y b de n elementos cada uno. El producto punto de los vectores esta\u0301 dado por \u2211_ i= 0^ n- 1 a_ i b_ i.",
    "input": "Un entero n seguido de una li\u0301nea con los n enteros de a y de otra li\u0301nea con los n enteros de b. Los enteros de los vectores aparecen separados por espacios. Puedes suponer que 1 \u2264 n, a_ i, b_ i \u2264 100.",
    "output": "Un entero que sea el valor del producto punto.",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 11453
  },
  {
    "title": "Evaluando una f\u00f3rmula gigante",
    "url": "https://omegaup.com/arena/problem/Evaluando-una-formula-gigante",
    "history": "Tu profesor de matema\u0301ticas quiere reprobarte y de tarea te pone a evaluar fo\u0301rmulas cada vez ma\u0301s grandes y complicadas. Afortunadamente, aprendiste un poco de computacio\u0301n en la universidad y esta\u0301s usando la computadora para obtener las respuestas correctas y ganarle a tu profesor. La u\u0301ltima fo\u0301rmula que tu profesor de matema\u0301ticas te dejo\u0301 de tarea es la siguiente: ( 2x + y/ z) ( y^ 3 - z) / x + 2y + 3z/ z - 2y - 3x + x^ 2 + z^ 2 Escribe un programa que calcule el valor de la fo\u0301rmula dados x, y, z.",
    "input": "Tres reales x, y, z. Puedes suponer que 1 \u2264 x, y, z \u2264 100 y que jama\u0301s ocurren divisiones entre 0.",
    "output": "Un real que sea el valor de la fo\u0301rmula. Tu programa se considerara\u0301 correcto si el valor calculado es razonablemente cercano a la respuesta exacta.",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 11450
  },
  {
    "title": "Simulador de cajero autom\u00e1tico",
    "url": "https://omegaup.com/arena/problem/Simulador-de-cajero-automatico",
    "history": "Escribir un programa que simule un cajero automa\u0301tico. El saldo disponible de la cuenta siempre empieza en 1000. El usuario tiene tres opciones. Para hacer un retiro, el usuario ingresa el cara\u0301cter ' R' , seguido del monto a retirar. Para hacer un deposito, el usuario ingresa el cara\u0301cter ' D' , seguido del monto a depositar. Para consultar su saldo, el usuario ingresa el cara\u0301cter ' C' , en este caso, el cajero debe imprimir en pantalla el saldo disponible, con el prefijo ' ' . Finalmente, para salir y terminar de usar el cajero, el usuario ingresa el cara\u0301cter ' S' . MUY IMPORTANTE: El programa debe estar estructurado en modulos, no todo en la funcion principal.",
    "input": "n lineas que contienen un caracter \" x\" , seguido del monto \" y\" en caso de ser necesario.",
    "output": "El saldo disponible en la cuenta cada que el usuario haga una consulta.",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 11399
  },
  {
    "title": "Calculadora de salario",
    "url": "https://omegaup.com/arena/problem/Calculadora-de-salario-UAMA-PE",
    "history": "Escriba un programa que reciba el numero de horas de trabajo ' x' y el sueldo ' y' por hora de un empleado. El programa debe calcular e imprimir el sueldo de empleado para esa semana. El trabajador recibe su sueldo ( salario mi\u0301nimo) normal por las primeras 40 horas; 1. 5 veces su sueldo ( una vez y media) por cada vez despue\u0301s de las primeras 40 ( pero no ma\u0301s de 50) ; y 2 veces su sueldo normal ( tiempo extra doble) por cada hora en exceso de 50 horas. MUY IMPORTANTE: El programa debe estar estructurado en modulos, no todo en la funcion principal.",
    "input": "Un entero ' x' y un numero real ' y' separados por un espacio.",
    "output": "El salario tota correspondiente a esa semana.",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 11394
  },
  {
    "title": "Sumatoria B\u00e1sica",
    "url": "https://omegaup.com/arena/problem/Sumatoria-Basica",
    "history": "Dado un numero N imprimir la sumatoria de los numeros del 1 hasta el N. \u2211_ i= 1^ N",
    "input": "Un numero entero N.",
    "output": "La suma de los numeros de 1 al N. donde x es la posicio\u0301n donde vas a dejar a tu nave estacionada.",
    "note": "",
    "topics": [
      "math",
      "number theory",
      "implementation"
    ],
    "id": 11352
  },
  {
    "title": "M\u00ednimo com\u00fan m\u00faltiplo de varios enteros",
    "url": "https://omegaup.com/arena/problem/Minimo-comun-multiplo-de-varios-",
    "history": "Denotaremos el ma\u0301ximo comu\u0301n divisor de dos enteros positivos a, b como mcd( a, b) y a su mi\u0301nimo comu\u0301n mu\u0301ltiplo como mcm( a, b) . Se sabe que e\u0301stos se pueden calcular como sigue: ! [ enter image description here] [ 1] Se sabe que la funcio\u0301n del mi\u0301nimo comu\u0301n mu\u0301ltiplo es asociativa por izquierda y por derecha, es decir, mcm( a, b, c) = mcm( a, mcm( b, c) ) = mcm( mcm( a, b) , c) . Escribe un programa que calcule el mi\u0301nimo comu\u0301n mu\u0301ltiplo de una secuencia de n enteros.",
    "input": "Un entero n seguido de una secuencia de n enteros. Puedes suponer que 1 \u2264 n \u2264 10, que los n enteros esta\u0301n en el rango de 1 a 50 y que es posible realizar todos los ca\u0301lculos usando el tipo * int* .",
    "output": "Un entero que sea el mi\u0301nimo comu\u0301n mu\u0301ltiplo de los n enteros de la secuencia.",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 11347
  },
  {
    "title": "Suma de N",
    "url": "https://omegaup.com/arena/problem/Suma-de-N",
    "history": "",
    "input": "Un entero N",
    "output": "La suma de los digitos de N.",
    "note": "",
    "topics": [
      "math",
      "implementation",
      "strings"
    ],
    "id": 11309
  },
  {
    "title": "Multiplos dentro de un intervalo",
    "url": "https://omegaup.com/arena/problem/MDUI-UAMA",
    "history": "Hacer un programa que imprima todos los nu\u0301meros enteros en desde el entero ' a' hasta el entero ' b' , que sean multiplos de ' a' .",
    "input": "Un entero ' a' y un entero ' b' separados por un espacio.",
    "output": "Todos los numeros enteros desde el entero ' a' hasta el entero ' b' , que sean multiplos de ' a' .",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 11266
  },
  {
    "title": "Llamadas telef\u00f3nicas",
    "url": "https://omegaup.com/arena/problem/Llamadas-telefonicas",
    "history": "El costo de las llamadas telefo\u0301nicas internacionales depende de la zona geogra\u0301fica en la que se encuentre el pai\u0301s destino y del nu\u0301mero de minutos hablados. En la siguiente tabla se presenta el costo del minuto por zona. A cada zona se le ha asociado una clave. ! [ Claves] [ 1] Construya un programa que le permita calcular e imprimir el costo total de una llamada. # NotaCLAVE es una variable entera que representa la clave de la zona geogra\u0301fica a la que se llamo\u0301. NUMIN es una variable entera que expresa la duracio\u0301n ( en minutos) de la llamada.",
    "input": "Introduce la clave y el nu\u0301mero de minutos de la llamada| | input23, 515, 415, 1029, 818, 12| | output308. 8224054| | end",
    "output": "",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 11242
  },
  {
    "title": "Ayuda a una Tienda",
    "url": "https://omegaup.com/arena/problem/Ayuda-a-una-Tienda",
    "history": "En una tienda efectu\u0301an un descuento a los clientes dependiendo del monto de la compra. El descuento se efectu\u0301a con base en el siguiente criterio: - Si el monto es menor que $ 500 \u2014 no hay descuento. - Si el monto esta\u0301 comprendido entre $ 500 y $ 1000 inclusive \u2014 5",
    "input": "Una secuencia de reales que denotan las compras realizadas.",
    "output": "Para cada compra, el monto a pagar. Tus respuestas se considerara\u0301n correctas si esta\u0301n razonablemente cercanas al valor exacto. | | input3500. 006850. 00375. 80690. 5012350. 0025314. 183750. 0014200. 50895. 801318. 50| | output3115. 006096. 50375. 80655. 9810127. 0018985. 643337. 5011644. 41851. 011173. 46| | end",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 11240
  },
  {
    "title": "Promedio",
    "url": "https://omegaup.com/arena/problem/Promedio-GCF",
    "history": "En matema\u0301ticas y estadi\u0301stica, la * * media aritme\u0301tica* * , tambie\u0301n llamada * * promedio* * o * * media* * , de un conjunto infinito de nu\u0301meros es el valor caracteri\u0301stico de una serie de datos cuantitativos, objeto de estudio que parte del principio de la esperanza matema\u0301tica o valor esperado, se obtiene a partir de la suma de todos sus valores dividida entre el nu\u0301mero de sumandos. Calcule el promedio de la lista de elementos l.",
    "input": "Un nu\u0301mero entero n seguido de la lista de elementos l. l sera\u0301 una lista de nu\u0301meros enteros menores a 1000 separados por espacio. 0< n < 1000",
    "output": "Promedio de l.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 11236
  },
  {
    "title": "Porque podemos programar",
    "url": "https://omegaup.com/arena/problem/Porque-podemos-programar",
    "history": "Antes de que aprendieras a programar, teni\u0301as que usar la calculadora cienti\u0301fica para realizar todos los ca\u0301lculos que te dejaban de tarea. Sin embargo, ahora con la computadora sientes que cualquier ca\u0301lculo se volvio\u0301 fa\u0301cil para ti. Tu profesor de matema\u0301ticas se entero\u0301 de esto y te ha desafiado a calcular lo siguiente: = ( x + x^ 2/ 5x + 3 + x) ( x + x^ 2/ 5x + 3/ x + x^ 2/ 5x + 3 + 2x) Escribe un programa que calcule el valor de y dado x.",
    "input": "Un real x. Puedes suponer que 1 \u2264 x \u2264 100.",
    "output": "Un real que sea el valor de y. Tu programa se considerara\u0301 correcto si el valor calculado es razonablemente cercano a la respuesta exacta.",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 11224
  },
  {
    "title": "FutureLab Triangulos",
    "url": "https://omegaup.com/arena/problem/FutureLab-Triangulos",
    "history": "Sabes que el peri\u0301metro de un tria\u0301ngulo con aristas de longitud a, b, c es igual a a+ b+ c y cuentas con varios palitos de diferentes longitudes. Encuentra el ma\u0301ximo peri\u0301metro posible de un tria\u0301ngulo que pueda ser construido con los palitos. Cada lado del tria\u0301ngulo debe ser construido usando un u\u0301nico palito y tampoco puedes romper los palitos existentes. Si fuera imposible construir un tria\u0301ngulo, debes diagnosticar tal situacio\u0301n. # NotaPuedes construir un tria\u0301ngulo con lados de longitud a \u2264 b \u2264 c si y so\u0301lo si a + b > c y a + c > b y b + c > a.",
    "input": "La primera li\u0301nea de la entrada contendra\u0301 un entero N. La segunda li\u0301nea contendra\u0301 las longitudes de los N palitos con los que cuentas. Puedes suponer que 3 \u2264 N \u2264 50 y que las longitudes de los palitos esta\u0301n entre 1 y 1000.",
    "output": "Un entero que sea el valor del ma\u0301ximo peri\u0301metro que puedes lograr o el valor - 1 si es imposible construir un tria\u0301ngulo. | | input62 3 2 3 2 4| | output10| | end",
    "note": "",
    "topics": [
      "implementation",
      "math",
      "sortings"
    ],
    "id": 11218
  },
  {
    "title": "Mediana-GCF",
    "url": "https://omegaup.com/arena/problem/Mediana-GCF",
    "history": "En estadi\u0301stica, la mediana es el valor de la variable que aparece en la posicio\u0301n central de un conjunto de datos ordenados. Usted recibira\u0301 una lista ordenada L de n nu\u0301meros enteros y debera\u0301 hallar su mediana.",
    "input": "En la primera li\u0301nea, el entero n. En la segunda li\u0301nea, los n enteros de L separados por espacios. Puede suponer que 0 < n \u2264 1000 y que cada elemento de L esta\u0301 en el intervalo cerrado de 0 a 1000.",
    "output": "Un entero que corresponda con la mediana de L.",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 11214
  },
  {
    "title": "Chicharronera",
    "url": "https://omegaup.com/arena/problem/formula_general",
    "history": "Juanito esta\u0301 cansado de resolver ecuaciones como esta: Ax^ 2 + Bx + C = 0 y su profesor malvado de matema\u0301ticas le ha dejado muchos problemas asi\u0301 \ud83d\ude28. \u00a1Ayuda a Juanito a hacer su tarea! . Haz un programa que utilice la famosa fo\u0301rmula chicharronera ( o fo\u0301rmula general) para hacer su tarea: x= - b\u00b1\u221a( b^ 2 - 4ac) / 2a",
    "input": "Tres nu\u0301meros enteros, A, B y C separados por un espacio, correspondientes a los coeficientes de la ecuacio\u0301n cuadra\u0301tica Ax^ 2 + Bx + C = 0.",
    "output": "Dos nu\u0301meros reales x_ 1 y x_ 2, soluciones de la ecuacio\u0301n cuadra\u0301tica, separados por un espacio. * * Para x_ 1 utiliza el signo positivo y para x_ 2 utiliza el signo negativo de la ecuacio\u0301n* * . * * Ojo: * * Las solucio\u0301nes siempre existen y todas son reales ( no te preocupes por los nu\u0301meros complejos) \ud83d\udc40. Tus respuestas se considerara\u0301n correctas si esta\u0301n razonablemente cercanas al valor exacto.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 11184
  },
  {
    "title": "Pol\u00edgonos Regulares1",
    "url": "https://omegaup.com/arena/problem/Poligonos-Regulares1",
    "history": "Haga un programa que reciba una entrada tanto para el peri\u0301metro y el apotema, asi\u0301 encontrando el a\u0301rea de esta figura.",
    "input": "Un peri\u0301metro y un apotema.",
    "output": "El a\u0301rea de un poli\u0301gono regular.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 11151
  },
  {
    "title": "Fracci\u00f3n mixta",
    "url": "https://omegaup.com/arena/problem/Fraccion-mixta",
    "history": "Estas navegando por la red cuando te encuentras una pa\u0301gina que te recuerda que en el pasado habi\u0301an muchas formas diferentes de representar fracciones: porcentajes, decimales y fracciones mixtas. No importaba lo grande que fueran los nu\u0301meros, las fracciones siempre lograban representarlos en una manera hermosa y compacta, cuando te diste cuenta que se empezo\u0301 a perder la costumbre. En este problema se te dara\u0301 una fraccio\u0301n de la manera n/ m y deberas encontrar a y b tales que 0 \u2264 b \u2264 m, y am + b = n.",
    "input": "Una sola li\u0301nea que contiene los enteros n y m.",
    "output": "Si b = \u0338 0, imprime en una li\u0301nea la representacio\u0301n en la forma a \u00b7b/ m. En caso contrario solo imprime a.",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 11148
  },
  {
    "title": "SEC03-A-09 Raiz Cuadrada",
    "url": "https://omegaup.com/arena/problem/SEC03-A-09-Raiz-Cuadrada",
    "history": "Disen\u0303e un Software en co\u0301digo C+ + , en el cua\u0301l se le asigne el valor nume\u0301rico * * ENTERO* * ( int) _ _ Positivo_ _ a una variable de \" 99\" y se obtenga la rai\u0301z cuadrada de dicha variable, asignado el resultado en otra variable de valor nume\u0301rico * * DECIMAL* * ( float) _ _ Positivo_ _ , mostrando en pantalla el Mensaje de \" El resultado de la RAIZ CUADRADA es: \" , ma\u0301s el resultado de la Operacio\u0301n de LA RAI\u0301Z considerando 6 cifras decimales despue\u0301s del punto. Mostrando en pantalla un Mensaje fijo, ma\u0301s el valor de la variable de la siguiente manera: nbsp; * * El resultado de la RAIZ CUADRADA es: * * 9. 949874( OJO: Cuide las mayu\u0301sculas, minu\u0301sculas y espacios) _ _ WARNING no olvide incluir la libreri\u0301a math. h_ _ # NIVELPrincipiante. Se asigan valores a Variables y se realizan Operaciones Aritme\u0301ticas. Disen\u0303ada para personas que nunca han programado y empiezan a programar",
    "input": "No se requiere ingresar nada",
    "output": "El resultado de la RAIZ CUADRADA es: 9. 949874",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 11146
  },
  {
    "title": "SEC03-A-08 Potencia dos Enteros",
    "url": "https://omegaup.com/arena/problem/SEC03-A-08-power-2-Enteros",
    "history": "Disen\u0303e un Software en co\u0301digo C+ + , en el cua\u0301l se le asigne el valor nume\u0301rico * * ENTERO* * ( int) _ _ Positivo_ _ a una variable de \" 4\" y un valor nume\u0301rico * * ENTERO* * ( int) _ _ Positivo_ _ a otra variable de \" 7\" respectivamente, mostrando en pantalla el Mensaje de \" El resultado de POTENCIAR es: \" , ma\u0301s el resultado de la Operacio\u0301n del resto o residuo de DIVIDIR ambos numeros. ( Puede utilizar otra variable para guardar el Resultado) Mostrando en pantalla un Mensaje fijo, ma\u0301s el valor de la variable de la siguiente manera: nbsp; * * El resultado de POTENCIAR es: * * 16384( OJO: Cuide las mayu\u0301sculas, minu\u0301sculas y espacios) WARNING: Recuerde incluir la libreri\u0301a math. h# NIVELPrincipiante. Se asigan valores a Variables y se realizan Operaciones Aritme\u0301ticas. Disen\u0303ada para personas que nunca han programado y empiezan a programar",
    "input": "No se requiere ingresar nada",
    "output": "El resultado de POTENCIAR es: 16384",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 11145
  },
  {
    "title": "SEC03-A-07 Residuo de dos Enteros",
    "url": "https://omegaup.com/arena/problem/SEC03-A-07-Residuo-2-Entero",
    "history": "Disen\u0303e un Software en co\u0301digo C+ + , en el cua\u0301l se le asigne el valor nume\u0301rico * * ENTERO* * ( int) _ _ Positivo_ _ a una variable de \" 4086\" y un valor nume\u0301rico * * ENTERO* * ( int) _ _ Positivo_ _ a otra variable de \" 54\" respectivamente, mostrando en pantalla el Mensaje de \" El resultado del RESIDUO es: \" , ma\u0301s el resultado de la Operacio\u0301n del resto o residuo de DIVIDIR ambos numeros. Mostrando en pantalla un Mensaje fijo, ma\u0301s el valor de la variable de la siguiente manera: nbsp; * * El resultado del RESIDUO es: * * 36( OJO: Cuide las mayu\u0301sculas, minu\u0301sculas y espacios) # NIVELPrincipiante. Se asigan valores a Variables y se realizan Operaciones Aritme\u0301ticas. Disen\u0303ada para personas que nunca han programado y empiezan a programar",
    "input": "No se requiere ingresar nada",
    "output": "El resultado del RESIDUO es: 36",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 11144
  },
  {
    "title": "SEC03-A-06 Divisio\u0301n de dos Enteros",
    "url": "https://omegaup.com/arena/problem/SEC03-A-06-Division2int",
    "history": "Disen\u0303e un Software en co\u0301digo C+ + , en el cua\u0301l se le asigne el valor nume\u0301rico * * ENTERO* * ( int) _ _ Positivo_ _ a una variable de \" 7486\" y un valor nume\u0301rico * * ENTERO* * ( int) _ _ Positivo_ _ a otra variable de \" 27\" respectivamente, mostrando en pantalla el Mensaje de \" El resultado de la DIVISION es: \" , ma\u0301s el resultado de la Operacio\u0301n de DIVIDIR considerando 5 cifras decimales despue\u0301s del punto. Mostrando en pantalla un Mensaje fijo, ma\u0301s el valor de la variable de la siguiente manera: nbsp; * * El resultado de la DIVISION es: * * 277. 25925( OJO: Cuide las mayu\u0301sculas, minu\u0301sculas y espacios) # NIVELPrincipiante. Se asigan valores a Variables y se realizan Operaciones Aritme\u0301ticas. Disen\u0303ada para personas que nunca han programado y empiezan a programar",
    "input": "No se requiere ingresar nada",
    "output": "El resultado de la DIVISION es: 277. 25925",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 11143
  },
  {
    "title": "SEC03-A-05 Mutiplicar 2 decimales",
    "url": "https://omegaup.com/arena/problem/SEC03-A-05-Mutiplica2decimal",
    "history": "Disen\u0303e un Software en co\u0301digo C+ + , en el cua\u0301l se le asigne el valor nume\u0301rico * * DECIMAL* * ( float) _ _ Positivo_ _ a una variable de \" 2. 306\" y un valor nume\u0301rico * * DECIMAL* * ( float) _ _ Negativo_ _ a otra variable de \" - 4. 092\" respectivamente, mostrando en pantalla el Mensaje de \" El resultado de la MULTIPLICACION es: \" , ma\u0301s el resultado de la Operacio\u0301n de MULTIPLICAR considerando 4 cifras decimales despue\u0301s del punto. Mostrando en pantalla un Mensaje fijo, ma\u0301s el valor de la variable de la siguiente manera: nbsp; * * El resultado de la MULTIPLICACION es: * * - 9. 4362( OJO: Cuide las mayu\u0301sculas, minu\u0301sculas y espacios) # NIVELPrincipiante. Se asigan valores a Variables y se realizan Operaciones Aritme\u0301ticas. Disen\u0303ada para personas que nunca han programado y empiezan a programar",
    "input": "No se requiere ingresar nada",
    "output": "El resultado de la MULTIPLICACION es: - 9. 4362",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 11142
  },
  {
    "title": "SEC03-A-04Restar dos Decimales",
    "url": "https://omegaup.com/arena/problem/SEC03-A-04Resta2Decimales",
    "history": "Disen\u0303e un Software en co\u0301digo C+ + , en el cua\u0301l se le asigne el valor nume\u0301rico * * DECIMAL* * ( float) _ _ negativo_ _ de \" - 0. 781\" y un valor nume\u0301rico * * DECIMAL* * ( float) _ _ negativo_ _ a la segunda variable de \" - 2. 869\" , mostrando en pantalla el Mensaje de \" El resultado de la RESTA es: \" , ma\u0301s el resultado de la Operacio\u0301n de RESTAR. Que muestre en pantalla un Mensaje fijo, ma\u0301s el valor de la variable de la siguiente manera: nbsp; * * El resutado de la RESTA es: * * 2. 088( OJO: Cuide las mayu\u0301sculas, minu\u0301sculas y espacios) # NIVELPrincipiante. Se asigan valores a Variables y se realizan Operaciones Aritme\u0301ticas. Disen\u0303ada para personas que nunca han programado y empiezan a programar",
    "input": "No se requiere ingresar nada",
    "output": "El resutado de la RESTA es: 2. 088",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 11141
  },
  {
    "title": "SEC03-A-03 Restar dos Enteros",
    "url": "https://omegaup.com/arena/problem/SEC03-A-03-Restar-dos-Enteros",
    "history": "Disen\u0303e un Software en co\u0301digo C+ + , en el cua\u0301l se le asigne el valor nume\u0301rico * * ENTERO* * ( int) _ _ positivo_ _ a una variable, de \" 3086\" y un valor nume\u0301rico * * ENTERO* * ( int) _ _ negativo_ _ a la segunda variable de \" - 2290\" , mostrando en pantalla el Mensaje de \" El resultado de la RESTA es: \" , ma\u0301s el valores de RESTAR a la variable positivas el valor de la variable negativa de la siguiente manera: nbsp; * * El resutado de la RESTA es: * * 5376 nbsp; ( OJO: Cuide las mayu\u0301sculas, minu\u0301sculas y espacios)",
    "input": "No se requiere ingresar nada",
    "output": "El resutado de la RESTA es: 5376",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 11140
  },
  {
    "title": "Red Ball",
    "url": "https://omegaup.com/arena/problem/Red-Ball-cpp",
    "history": "# DescripcionHola, ya esta\u0301n en el examen, sere\u0301 breve, un entero positivo es un entero estrictamente mayor a cero. nuestro personaje llamado redballtiene una clase de nu\u0301meros favoritos llamados numero redondos, un numero es considerado redondo si tiene la forma N000. . . 0 En otras palabras, un entero positivo es redondo si todos sus di\u0301gitos, excepto el extremo izquierdo ( el ma\u0301s significativo) son iguales a cero. En particular, todos los nu\u0301meros de 1 a 9 ( inclusive) son redondos. Por ejemplo los siguientes numeros se consideran redondos 5000, 1, 9, 800, 90 en cambio estos otros no son redondos 110 , 707, 222, 1001tu tarea es dado un numero entero N_ i imprime el minumo numero de numeros redondos que se pueden crear a partir de el, seguido de los numeros creados a partir de el.",
    "input": "En la primera linea recibiras un numero N en las siguientes N lineas recibiras N enteros,",
    "output": "La salida contendra 2* N lineas las cuales estan denotadas por un numero K segudo de un salto de linea y los K numeros redondos construidos a partir del entero N_ i en orden decreciente| | input37987610| | output1749000 800 70 6110| | end# Limites1 < = N < = 10^ 5. 1 < = N_ i < = 10^ 10.",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 11135
  },
  {
    "title": "SEC03-A-00 Operaciones Aritm\u00e9ticas",
    "url": "https://omegaup.com/arena/problem/SEC03-A-00-Opera-Aritmeticas",
    "history": "Disen\u0303e un software que: Asigne Valores Nume\u0301ricos * * ENTEROS* * ( int) a varias Variables ( Identificadores) para realizar las siguiente operacio\u0301n: al residuo de 18 divido entre 7, sumarle el resultado de elevar a la tercera potencia la divisio\u0301n de 45 entre 9. Al resultado sacarle la rai\u0301z cuadrada y asignarlo a una Variable ( Identificador) que utilice 3 lugares decimales despue\u0301s del punto y que muestre un Mensaje del Resultado, adema\u0301s indicando el valor que tiene la Variable del Resultado, mostrando en pantalla dos Mensajes fijos, ma\u0301s el valor de la variable de la siguiente manera: \u221a( 18 mod 7 + ( 45/ 9) ^ 3) nbsp; * * El resultado de la OPERACION es: * * 11. 358( OJO: Cuide las mayu\u0301sculas, minu\u0301sculas y espacios) AYUDA: puedes apoyarte para subir tus co\u0301digos de los siguientes problemas, viendo el siguiente video: [ Video de Apoyo] < https: / / youtu. be/ GIgHP7ZLIHQ>",
    "input": "No se requiere ingresar nada",
    "output": "El resultado de la OPERACION es: 11. 358",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 11126
  },
  {
    "title": "Pares",
    "url": "https://omegaup.com/arena/problem/Buscando-numeros-pares",
    "history": "Tu tarea es leer un arreglo de taman\u0303o * * * N* * * , despue\u0301s de eso deberas mostrar los nu\u0301meros pares del arreglo en caso de que el arreglo no contenga ningu\u0301n nu\u0301mero par deberas imprimir \" : ( \" , sin comillas.",
    "input": "En la primera linea recibira\u0301s un valor entero el cual sera\u0301 el taman\u0303o del arreglo seguido de * * * X* * * valores los cuales sera\u0301n los elementos del arreglo",
    "output": "Mostrar los nu\u0301meros pares del arreglo, estos nu\u0301meros deberan de estar encerrados entre [ ] .",
    "note": "",
    "topics": [
      "math",
      "brute force"
    ],
    "id": 11106
  },
  {
    "title": "No divisibles por C",
    "url": "https://omegaup.com/arena/problem/No-divisibles-por-C",
    "history": "Janis y Diana esta\u0301n jugando un juego. Diana dice tres nu\u0301meros enteros, A, B y C y Janis debe indicar la suma de todos los nu\u0301meros entre A y B incluye\u0301ndolos que no sean divisibles por C. Diana esta\u0301 decidida a decir una cantidad enorme de nu\u0301meros a Janis y Janis le ha pedido su ayuda para escribir un programa que resuelva este problema. \u00bfPodra\u0301 usted ayudarla?",
    "input": "La primera li\u0301nea tiene un nu\u0301mero T ( 1< = T< = 100000) indicando la cantidad de tri\u0301os que Diana va a decir. Las siguientes T li\u0301neas tienen los tres nu\u0301meros enteros dictados por Diana, separados por un espacio A, B, C ( 1< = A, B, C< = 10000000)",
    "output": "La salida sera\u0301n T li\u0301neas, una li\u0301nea por cada suma",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 11100
  },
  {
    "title": "Expresion P y Q",
    "url": "https://omegaup.com/arena/problem/Expresion-P-y-Q",
    "history": "Escriba un programa tal que, dado como datos los valores enteros P yQ, determine si los mismos satisfacen la siguiente expresio\u0301n: P^ 3 + Q^ 4 - 2P^ 2 < 680 En caso afirmativo, debe imprimir los valores de P y Q.",
    "input": "Los valores enteros P y Q en una misma li\u0301nea y separados por un espacio. Puede suponer que la expresio\u0301n puede evaluarse con enteros de 32 bits.",
    "output": "Si la expresio\u0301n es verdadera, los valores de P y Q en li\u0301neas distintas. Si la expresio\u0301n es falsa, no se debe imprimir nada. | | input3 5| | output35| | input6 8| | output| | input2 4| | output24| | input7 5| | output| | input2 6| | output| | end",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 11096
  },
  {
    "title": "El castigo de Aveam",
    "url": "https://omegaup.com/arena/problem/El-castigo-de-Aveam",
    "history": "_ Aveam_ es una estudiante de preparatoria que le gusta mucho la informa\u0301tica. A su mama\u0301 no le agrada mucho la idea de que se la pase todo el di\u0301a en la computadora, asi\u0301 que decidio\u0301 castigarla. Hay una habitacio\u0301n en su casa que se utiliza como bodega, la cual tiene muchos objetos tirados en el piso. El castigo consiste en que tiene que contar cuantos objetos de cada tipo hay en el piso de la bodega ( ver casos de ejemplo para comprender mejor) . La habitacio\u0301n se representa como una cuadri\u0301cula de 1\u2264M\u2264100 filas por 1\u2264N\u2264100 columnas, y los tipos de objetos se representan con un nu\u0301mero 1\u2264X\u22642, 500. _ Aveam_ decidio\u0301 hacer uso de sus conocimientos para realizar esta tarea. Desarrollo\u0301 un programa que por medio de una fotografi\u0301a, pudiera asignarle un nu\u0301mero a cada tipo de objeto y representarlo en una cuadri\u0301cula del mismo taman\u0303o que la bodega, como se muestra a continuacio\u0301n: ! [ Representacio\u0301n de la bodega] [ 1] # ProblemaDado un conjunto de objetos, debera\u0301s imprimir cua\u0301ntos objetos de cada tipo hay en la bodega.",
    "input": "En la primera li\u0301nea, los enteros M y N que denotan el taman\u0303o de la habitacio\u0301n. En cada una de las siguientes M li\u0301neas, N enteros que denotan el tipo de objeto que se encuentra tirado en la bodega.",
    "output": "La cantidad de cada tipo de objeto que se encuentra en la bodega ordenados de _ menor a mayor_ por el _ tipo_ . Siendo el primer elemento la cantidad de objetos del tipo de menor valor, y el u\u0301ltimo elemento la cantidad de objetos del tipo de mayor valor ( es decir, si se tienen objetos de tipo 5, 2, 7 y 4, la salida tiene que ser la cantidad de objetos de tipo 2, 4, 5 y 7 respectivamente) .",
    "note": "",
    "topics": [
      "matrices",
      "implementation",
      "math"
    ],
    "id": 10959
  },
  {
    "title": "Sana o insana distancia",
    "url": "https://omegaup.com/arena/problem/Sana-o-insana-distancia",
    "history": "La labor de Susana Distancia es la de exhortar a la poblacio\u0301n a que mantengan la sana distancia durante la contingencia del COVID- 19. Dos personas * A* y * B* mantienen la sana distancia si esta\u0301n al menos a 150 cm entre si\u0301, de lo contrario tienen una insana distancia. Suponiendo que tienes las coordenadas ( X_ A, Y_ A) y ( X_ B, Y_ B) en centi\u0301metros de * A* y * B* , determina si mantienen una sana o insana distancia.",
    "input": "Cuatro enteros X_ A, Y_ A, X_ B, Y_ B separados por espacios.",
    "output": "La palabra \" sana\" o \" insana\" segu\u0301n sea el caso. # Li\u0301mites- 10^ 7 \u2264 X_ A \u2264 + 10^ 7- 10^ 7 \u2264 Y_ A \u2264 + 10^ 7- 10^ 7 \u2264 X_ B \u2264 + 10^ 7- 10^ 7 \u2264 Y_ B \u2264 + 10^ 7",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 10904
  },
  {
    "title": "\u00bfPar  o impar? (potencias)",
    "url": "https://omegaup.com/arena/problem/Par-o-impar-potencias",
    "history": "",
    "input": "Un entero * * A* * y un entero * * B* *",
    "output": "* * Par o impar* * segun ( * * A^ B* * )",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 10896
  },
  {
    "title": "Operaciones algo b\u00e1sicas.",
    "url": "https://omegaup.com/arena/problem/Operaciones-algo-basicas",
    "history": "Crea un programa en C+ + que muestre en pantalla lasoperaciones de suma, resta, divisio\u0301n, multiplicacio\u0301n yla suma usarla como potencia para 2 en ese orden conun salto de linea a partir de 2 nu\u0301meros ingresados por teclado",
    "input": "2 nu\u0301meros A y B enteros ingresados por teclado",
    "output": "valor nume\u0301rico entero de las operaciones mencionadas anteriormente con un salto de linea por cada resultado.",
    "note": "",
    "topics": [
      "dp",
      "implementation",
      "math"
    ],
    "id": 10880
  },
  {
    "title": "Pagando los platos rotos",
    "url": "https://omegaup.com/arena/problem/Pagando-los-platos-rotos",
    "history": "En tus vacaciones anteriores trabajaste un tiempo como lavaplatos, pero apenas te mandaron el cheque por tus servicios. Cuando viste que el pago era menor a lo esperado, de inmediato contactaste a tu ex- jefe para preguntarle. Tu ex- jefe te recordo\u0301 que rompiste muchos platos mientras trabajabas y el pago refleja lo que te desconto\u0301. Tu ex- jefe tambie\u0301n te mando\u0301 la tabla de precios de cada uno de los platos que se usan en el restaurante: hay cuatro tipos de vajillas en el restaurante ( * A* , * B* , * C* y * D* ) y hay cuatro taman\u0303os de plato ( * 1* , * 2* , * 3* , * 4* ) en cada una. La tabla menciona los precios unitarios por plato, pero comprar una vajilla completa ( un plato de cada taman\u0303o de la vajilla) tiene un descuento de $ 10 sobre la suma de los precios de los cuatro platos. Dada la lista de los N platos que rompiste, calcula cua\u0301nto te debio\u0301 descontar tu ex- jefe.",
    "input": "Una matriz de 4 \u00d7 4 enteros, donde cada fila ( en el orden * A* , * B* , * C* y * D* ) describe los precios de los platos de una vajilla ( dados en el orden del taman\u0303o del plato) . Posteriormente, un entero N seguido de N cadenas que describen los platos que rompiste. Puedes suponer que 0 \u2264 N \u2264 1000 y que todos los precios esta\u0301n entre 10 y 100.",
    "output": "Un entero que sea el monto que te debieron descontar de tu cheque.",
    "note": "",
    "topics": [
      "math",
      "matrices",
      "implementation"
    ],
    "id": 10862
  },
  {
    "title": "Tesla y las Constantes Enigm\u00e1ticas",
    "url": "https://omegaup.com/arena/problem/ConstantesEnigmaticas",
    "history": "> # Descripcio\u0301n> > Hace mucho tiempo Nikola Tesla se encontraba analizando las> propiedades de los numeros 3, 6 y 9. De entre todas ellas> encontro una que le permitia saber si un numero extremadamente> * * grande* * era divisible por 9 de manera relativamente rapida ( Puede que alguien mas ya hubiese descubierto dicha propiedad antes, pero ese> no es el punto de este problema) . Ahora tu como programador quieres> seguir los pasos de Tesla y disen\u0303ar un programa que te permita hacer> lo enunciado arriba. > \u2014\u2014\u2014- > # Problema> > Tienes la simple y sencilla labor de indicar si un numero n> es divisible por 9, de ser asi\u0301 debera\u0301s mostrar la frase> ` Divisibilidad\u00a1, en caso contrario debera\u0301s mostrar ` No es multiplo. ` > > Decimos que un numero A es divisible por B, si A mod B = 0. > > \u201cSi supieras la magnificencia de los nu\u0301meros> 3, 6, y 9 tendrias la llave del universo. \" > > - Nikola Tesla. ( ? \u2014\u2014\u2014- > # Entrada> > En la primera y u\u0301nica linea solo habra un entero n ( 1\u2264 n \u2264 10^ 38) - el nu\u0301mero cuyo valor se quiere evaluar. > > Hint: En C+ + los limites de n no * \" entran\" * siquiera < br> en un < kbd> unsigned long long< / kbd> . < br> > # Salida> > La frase correspondiente dependiendo de el valor que posea n. \u2014\u2014\u2014- # Ejemplos: | | input123381| | outputDivisibilidad! | | input277777788888899| | outputNo es multiplo. | | input1184| | outputNo es multiplo. | | end\u2014\u2014\u2014- > # Consideraciones : > - Cada caracter en la salida cuenta ( Eso incluye el ` . ` y el ` \u00a1) . > - El evaluador distingue entre mayu\u0301sculas y minu\u0301sculas. >",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "number theory",
      "strings",
      "math"
    ],
    "id": 10851
  },
  {
    "title": "Cara o escudo",
    "url": "https://omegaup.com/arena/problem/Cara-o-Escudo",
    "history": "Jaime acaba de aprender el juego de \u201ccara o escudo\u201d ( o \u201ccara o corona\u201d) . Este juego consiste en lanzar una moneda hacia el aire, permitie\u0301ndole girar y observar si la moneda aterriza con la \u201ccara\u201d o el \u201cescudo\u201d boca arriba. El profesor de matema\u0301ticas le explico\u0301 a Jaime que jugando el juego de cara o escudo varias veces, se puede obtener una secuencia de resultados. Por ejemplo, la lista completa de las secuencias posibles al jugar cara o escudo 3 veces, es la siguiente: CCC, CCE, CEE, CEC, EEE, ECE, EEC, ECC* Fig 1. Todas las secuencias de cara o escudo de longitud 3. C singifica cara, E escudo* El profesor le explico\u0301 que aunque los resultados de cada juego sean aleatorios, se pueden obtener todas las posibles permutaciones de una longitud n, si se juega cara o escudo suficientes veces. Jaime quiere comprobar si lo que le dijo su profesor es cierto, y para eso, escribe un programa que identifica si todas las combinaciones para una secuencia de longitud n existen en un string input. Por ejemplo, en la siguiente cadena de caracteres, se pueden obtener todas las posibles secuencias de resultados de longitud 2. ECECCEEECCE* Fig 2. Un string the longitud total k = 11, donde se encuentran todas las posibles secuencias de longitud n = 2. * E| CE| CC| EE| EC| CE* Fig 3. Divisiones necesarias para obtener todas las posibles secuencias de longitud n = 2, Empezando despue\u0301s del primer caracter, p = 1* \u00bfPuedes ayudarle a Jaime? Escribe un programa, que calcule, dado input string S, si es posible obtener todas las combinaciones de una secuencia de \u201ccara o escudo\u201d de taman\u0303o n. Se debe dar un n\u0301umero p, que indica en que\u0301 posicio\u0301n se empieza a dividir y contar las secuencias. Si hay varias soluciones para el problema, da cual sea tenga el valor de n ma\u0301s alto. Una secuencia no puede ser repetida en la sucesio\u0301n.",
    "input": "La entrada correspondera\u0301 al string que simboliza el resultado de muchos juegos de cara o escudo. La entrada puede tener hasta 11000 caracteres.",
    "output": "La salida consistira\u0301 de dos nu\u0301meros. Primero un nu\u0301mero * n* y * p* , en este orden, descritos en el problema. Si hay varios valores de * n* o * p* que satisfagan una solucio\u0301n, escoge la solucio\u0301n que primero tenga el mayor valor de * n* , y despue\u0301s el menor valor de * p* .",
    "note": "",
    "topics": [
      "math",
      "strings",
      "sortings",
      "implementation"
    ],
    "id": 10810
  },
  {
    "title": "Decimal a hexadecimal",
    "url": "https://omegaup.com/arena/problem/Decimal-a-hexadeciamal",
    "history": "En el sistema decimal podemos escribir nu\u0301meros como 451, 672, 30, etc, es decir, es un sistema de nu\u0301meros ( con base de diez) teniendo asi\u0301 diez valores posibles ( 0, 1, 2, 3, 4, 5, 6, 7, 8, 9) por cada valor posicional. Mientras que en el caso del sistema hexadecimal podemos escribir nu\u0301meros como 3E2ADF3, 1A1B1C0D, 01B31, DAB2, etc, es decir, es un sistema de nu\u0301meros y letras ( con base de diecise\u0301is) cuyos posibles valores nume\u0301ricos y letras pueden ser ( 0, 1, 2, 3, 4, 5, 6, 7, 8, 9) para nu\u0301meros y ( A, B, C, D, E, F) para letras por cada valor posicional. ! [ enter image description here] [ 1] Dicho proceso de conversio\u0301n se realiza dividiendo entre 16 el numero decimal que queremos convertir, tratando la divisio\u0301n como una divisio\u0301n entera sin decimales, anotar el resto y continuar dividendo el cociente obtenido entre diecise\u0301is hasta conseguir un cociente final de entre 1 y 15.",
    "input": "Un nu\u0301mero entero * * * N* * *",
    "output": "Su representacio\u0301n del * * * N* * * en Hexadecimal",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 10793
  },
  {
    "title": "Tarea 3 Curso Robot C ULAM",
    "url": "https://omegaup.com/arena/problem/Tarea-3-Curso-Robot-C-ULAM",
    "history": "La siguiente se llama conjetura de ULAM en honor del matematico S. UlamComience con cualquier entero positivo N. Si es par, dividalo entre 2; si es impar, multipliquelo por 3 y agreguele 1. Obtenga enteros sucesivamente repitiendo el procesoAl final, obtendra el nu\u0301mero 1, independientemente del entero inicial, Por ejemplo, cuando el entero inicial es 12, la secuencia sera\u0301: 12, 6, 3, 10, 5, 16, 8, 4, 2, 1. # NotaUsar en el programa los ciclos usados en clase, y condicionales.",
    "input": "Una li\u0301nea con el entero N.",
    "output": "Los nu\u0301meros de la serie ULAM separados por un espacio. | | input12| | output12 6 3 10 5 16 8 4 2 1| | end",
    "note": "",
    "topics": [
      "number theory",
      "implementation",
      "math",
      "brute force"
    ],
    "id": 10749
  },
  {
    "title": "Hipotenusa",
    "url": "https://omegaup.com/arena/problem/Hipotenusa",
    "history": "Escriba un programa que lea de la entrada esta\u0301ndar los dos catetos de un tria\u0301ngulo recta\u0301ngulo y escriba en la salida esta\u0301ndar su hipotenusa.",
    "input": "Dos nu\u0301meros reales los cuales sera\u0301n el cateto 1 y el cateto 2",
    "output": "El resultado de la hipotenusa mostrando dos decimales.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 10704
  },
  {
    "title": "Binario a decimal",
    "url": "https://omegaup.com/arena/problem/Binario-a-decimal",
    "history": "# Binario a decimalEste sistema utiliza so\u0301lo dos di\u0301gitos: 0 y 1. El valor de cada posicio\u0301n se obtiene de una potencia de base 2, elevada a un exponente igual a la posicio\u0301n del di\u0301gito menos uno. Su popularidad radica en que es el utilizado por las computadoras y dispositivos electro\u0301nicos, internamente estos equipos usan el cero para inhibir y el 1 para generar impulsos ele\u0301ctricos en su comunicacio\u0301n interna.",
    "input": "Leer un nu\u0301mero binario.",
    "output": "Imprimir en valor decimal la conversio\u0301n del nu\u0301mero ingresado.",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 10680
  },
  {
    "title": "SEC03-A-02  Sumar dos Decimales",
    "url": "https://omegaup.com/arena/problem/SEC03-A-02-Sumar-Decimales",
    "history": "Disen\u0303e un Software en co\u0301digo C+ + , en el cua\u0301l se le asigne el valor nume\u0301rico * * DECIMAL* * ( float) _ _ positivo_ _ a dos variables, de \" 34. 203\" y \" 1. 9034\" respectivamente, mostrando en pantalla dos Mensajes fijos, ma\u0301s los valores de las variables positivas de la siguiente manera: nbsp; * * El resutado de la SUMA es: * * 36. 1064 nbsp; ( OJO: Cuide las mayu\u0301sculas, minu\u0301sculas y espacios)",
    "input": "No se requiere ingresar nada",
    "output": "El resutado de la SUMA es: 36. 1064",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 10669
  },
  {
    "title": "SEC03-A-01 Sumar dos Enteros",
    "url": "https://omegaup.com/arena/problem/SEC03-A-01-Sumar-dos-Enteros",
    "history": "Disen\u0303e un Software en co\u0301digo C+ + , en el cua\u0301l se le asigne el valor nume\u0301rico * * ENTERO* * ( int) _ _ positivo_ _ a dos variables, de \" 486\" y \" 390\" respectivamente, mostrando en pantalla UN Mensaje fijo, ma\u0301s el resultado de la Operacio\u0301n de SUMAR dichos los valores de las variables de la siguiente manera: nbsp; * * El resutado de la SUMA es: * * 876 nbsp; ( OJO: Cuide las mayu\u0301sculas, minu\u0301sculas y espacios)",
    "input": "No se requiere ingresar nada",
    "output": "El resutado de la SUMA es: 876 nbsp;",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 10668
  },
  {
    "title": "Area del circulo",
    "url": "https://omegaup.com/arena/problem/Area-del-circulo",
    "history": "Escribe un programa que calcule el a\u0301rea de un ci\u0301rculo dado su radio.",
    "input": "Un entero R que denota el radio del ci\u0301rculo. Puedes suponer que 0 < R < \u221a( 2 \u00d7 10^ 9) .",
    "output": "Un real impreso con dos cifras decimales que denote el a\u0301rea del ci\u0301rculo.",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 10629
  },
  {
    "title": "Alumnos calificaci\u00f3n",
    "url": "https://omegaup.com/arena/problem/Alumnos-calificacion",
    "history": "Laura es maestra de la secundaria Benito Juarez, ella atiende 5 grupos pero pierdedemasiado tiempo para sacar la calificacio\u0301n de cada uno de ellos, ayuda a Laura a que con un algoritmo pueda sacarla calificacio\u0301n de un alumno si hacer cuentas ella solo poniendo los siguientes rasgos: 1. Examen= 60",
    "input": "3 entradas de numeros enteros solamente.",
    "output": "calificacio\u0301n final del estudiante",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 10626
  },
  {
    "title": "Tienda de tel\u00e9fonos",
    "url": "https://omegaup.com/arena/problem/Tienda-de-telefonos",
    "history": "* * Descripcio\u0301n: * * Giovanny quiere saber cua\u0301nto cuesta el nuevo tele\u0301fono Huawei que salio\u0301 a la venta esta semana, por lo que se dispone a ir a su tienda de tele\u0301fonos ma\u0301s cercana. Al llegar, se da cuenta que el tele\u0301fono que salio\u0301 cuesta 10000, por lo que le gustari\u0301a saber cua\u0301nto dinero le costara\u0301 si compra unos cuantos. Ayuda a Giovanny a saber cua\u0301nto costara dependiendo de la cantidad de dinero que quiera. * * Entrada: * * Un solo nu\u0301mero representando la cantidad de tele\u0301fonos. * * Salida: * * Un nu\u0301mero entero representando la cantidad de dinero dependiendo de la cantidad* * Li\u0301mites: * * Los valores tienen que ser nu\u0301meros enteros y menores de 100",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "trees",
      "graphs",
      "math"
    ],
    "id": 10581
  },
  {
    "title": "Adrian En la Clase",
    "url": "https://omegaup.com/arena/problem/Adrian-En-la-Clase",
    "history": "",
    "input": "Dos nu\u0301meros, a y b.",
    "output": "La suma de ambos nu\u0301meros.",
    "note": "",
    "topics": [
      "math",
      "implementation",
      "brute force"
    ],
    "id": 10545
  },
  {
    "title": "Mayor y menor",
    "url": "https://omegaup.com/arena/problem/Mayor-menor",
    "history": "Escribe un programa que lea cinco nu\u0301meros enteros A, B, C, D, E y que escriba al menor de ellos P seguido del mayor de ellos Q. Por ejemplo, si los cinco nu\u0301meros lei\u0301dos son A= 3, B= 1, C= 4, D= 1, E= 5, entonces P= 1, Q= 5.",
    "input": "Consiste de cinco nu\u0301meros enteros, A, B, C, D, E, separados por espacios, que tendra\u0301n un valor entre - 1 000 y 1 000.",
    "output": "Consiste de dos nu\u0301meros enteros, P, Q, separados por un espacio.",
    "note": "",
    "topics": [
      "sortings",
      "games",
      "implementation",
      "math"
    ],
    "id": 10484
  },
  {
    "title": "El ni\u00f1o  autista aburrido",
    "url": "https://omegaup.com/arena/problem/El-nino-autista-aburrido",
    "history": "Un nin\u0303o autista quiere saber el punto medio entre dos nu\u0301meros",
    "input": "un numero n y m, la suma siempre sera par",
    "output": "El punto medio",
    "note": "",
    "topics": [
      "math",
      "implementation",
      "meet-in-the-middle"
    ],
    "id": 10469
  },
  {
    "title": "El flojo",
    "url": "https://omegaup.com/arena/problem/El-flojo",
    "history": "Carlitos es un aluno del ITSUR, el es muy flojo a si que cuando esta asciendo sus apuntes y escucha una palabra larga solo apunta la primera letra , el numero de letras entre la primera y la ultima letra, para el las palabras largas son las que tienen mas de 4 letras, ejemplo la palabra Milanesa la escribiri\u0301a asi\u0301 M6a, la palabra ingeniero seria asi i7o, la palabra hola se queda igual",
    "input": "Una cadena m",
    "output": "La palabra de forma acortada",
    "note": "",
    "topics": [
      "strings",
      "implementation",
      "math"
    ],
    "id": 10325
  },
  {
    "title": "D\u00edas a segundos",
    "url": "https://omegaup.com/arena/problem/Dias-a-segundos",
    "history": "Cree un programa que calcule e imprima el nu\u0301mero de segundosque hay en un determinado nu\u0301mero de di\u0301as. # NotaDi\u0301as es de tipo entero",
    "input": "La primera linea de entrada contendra\u0301 la cantidad de di\u0301as. | | input715116283| | output6048001296000100224002419200259200| | end",
    "output": "",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 10288
  },
  {
    "title": "Brincando escalones",
    "url": "https://omegaup.com/arena/problem/Brincando-escalones",
    "history": "Un nin\u0303o esta\u0301 subiendo una escalera, la cual contiene n escalones. El nin\u0303o es un poco travieso y le gusta subir saltando 1 o 2 escalones a la vez. \u00bfDe cua\u0301ntas maneras distintas puedes subir a la cima?",
    "input": "El nu\u0301mero de escalones de la escalera: 1 \u2264 n \u2264 100.",
    "output": "El nu\u0301mero de formas posibles en las que el nin\u0303o puede llegar a la cima de la escalera. | | input1| | output1| | descriptionSo\u0301lo hay un escalo\u0301n, por lo que el nin\u0303o so\u0301lo sube dicho ecalo\u0301n. | | input3| | output3| | descriptionSe puede llegar a la cima de 3 formas: 1) subiendo de a un escalo\u0301n a la vez 2) brincando 2 escalones y luego subiendo un escalo\u0301n 3) subiendo un escalo\u0301n y luego brincando 2 escalones. | | end",
    "note": "",
    "topics": [
      "math",
      "dfs and similar",
      "dp"
    ],
    "id": 10222
  },
  {
    "title": "Oro del sabio",
    "url": "https://omegaup.com/arena/problem/Oro-del-sabio",
    "history": "Cuenta la historia que existi\u0301a un viejo sabio que regalaba oro a todo aquel que pudiera contestar su problema de forma eficiente, un di\u0301a este sabio se le acerco\u0301 al grupo organizador de la Olimpiada de Yucata\u0301n y les dijo el problema. Al ser personas muy ha\u0301biles pudieron con el problema con facilidad y uno le dieron el oro a uno de ellos. . . ya nunca volvimos a saber de aquella persona, ni el oro. Como personas creativas los organizadores decidieron poner este problema como parte del selectivo estatal y en vez de dar oro a quien lo responda, se dara\u0301n puntos ( mucho mejor) : DEl problema consiste en que tienes una li\u0301nea de n montones monedas, tu conoces la cantidad inicial de cada monto\u0301n. Luego el sabio te hara\u0301 preguntas, cada pregunta consiste en agregarle cierta cantidad de monedas a todos los montones de un rango y despue\u0301s de agregarles dicha cantidad decir cua\u0301nto es el total de monedas que hay en toda la fila. Por ejemplo, si tienes una li\u0301nea de monedas 3, 6, 2, 4, entonces el total es de 3+ 6+ 2+ 4= 15. Luego el sabio le agrega 5 a todos los montones desde el segundo hasta el cuarto y queda como 3, 11, 7, 9 y ahora hay 30# ProblemaSe te dan los n montones iniciales de monedas, luego se te hara\u0301n k preguntas en donde la pregunta i consiste en aumentar los montones desde x_ i hasta y_ i en r_ i. Por cada una de esas preguntas debes decir la cantidad de monedas que hay en total.",
    "input": "En la primera li\u0301nea dos nu\u0301meros enteros n y k que representan el nu\u0301mero de montes y el nu\u0301mero preguntas, respectivamente. En la segunda li\u0301nea n enteros que representan los montones iniciales m_ iLas siguientes k li\u0301neas son tercias de nu\u0301meros x_ i, y_ i y r_ i, los primeros dos son el rango de aumento y el tercero en cuanto aumentan los montones.",
    "output": "k nu\u0301meros enteros que representan la respuesta a cada pregunta.",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 10220
  },
  {
    "title": "El primer juego del parque",
    "url": "https://omegaup.com/arena/problem/El-primer-juego-del-parque",
    "history": "Acabas de llegar al parque de diversiones y esta\u0301s ansioso por subirte a un juego. El parque tiene N juegos indexados de 1 a N y todos los juegos comienzan a dar servicio en el minuto 0, pero no todos tienen la misma duracio\u0301n. Por ejemplo, un juego con duracio\u0301n de 3 minutos dara\u0301 servicio en los minutos 0, 3, 6, 9, 12, etc. Esta\u0301s en la entrada del parque y te tomara\u0301 cierta cantidad de minutos dirigirte a cada juego. Si tu objetivo es subirte a cualquier juego lo ma\u0301s ra\u0301pido posible, \u00bfen que\u0301 juego debes formarte y en que\u0301 minuto te atendera\u0301n?",
    "input": "Un entero N seguido de N parejas de enteros D y T donde la i- e\u0301sima pareja denota la duracio\u0301n del i- e\u0301simo juego y el tiempo que te tomara\u0301 llegar al mismo, respectivamente. Puedes suponer que 1 \u2264 N \u2264 1000 y 1 \u2264 D, T \u2264 100.",
    "output": "Dos enteros que sean el nu\u0301mero del juego en el que debes formarte y el minuto en el que te atendera\u0301n. En caso de haber ma\u0301s de una solucio\u0301n, debes formarte en el juego con el menor i\u0301ndice.",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 10145
  },
  {
    "title": "Jorge y el concurso",
    "url": "https://omegaup.com/arena/problem/Jorge-y-el-concurso",
    "history": "* * Jorge* * , es conocido en su escuela por ser capaz de resolver diversos acertijos matema\u0301ticos con facilidad y en poco tiempo. Esto se le ha subido un poco a la cabeza y lo ha hecho presumir ciertas habilidades matema\u0301ticas que en realidad no ha desarrollado. * * Jorge* * participara\u0301 en un concurso de matema\u0301ticas en do\u0301nde debera\u0301 responder la suma de todos los nu\u0301meros naturales de 1 a N en el menor tiempo posible. Esta tarea no es fa\u0301cil por lo que * * Jorge* * ha acudido a ti para que lo ayudes a hacer trampa, su plan es que desarrolles un programa que se conecte a los lentes de Jorge y le otorgue las respuestas a las distintas preguntas de su concurso.",
    "input": "Un valor entero N.",
    "output": "Un valor entero que sea la suma de 1 a N ( Inclusiva)",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 9526
  },
  {
    "title": "Formando Precios",
    "url": "https://omegaup.com/arena/problem/Precios",
    "history": "En un tipo de caja registradora antigua, para mostrar los precios, se utilizaba un carrete con los di\u0301gitos del 0 al 9 escritos alrededor, para representar cada una de las cifras. este carrete podi\u0301a girar, hacia delante o hacia atra\u0301s, avanzando de uno en uno los di\u0301gitos hasta llegar al nu\u0301mero deseado y girando cada uno hacia el sentido que requiera menor nu\u0301mero de pasos Tu\u0301 deseas conocer cua\u0301ntos de estos pasos realiza la ma\u0301quina para cambiar de un precio a otro. * * Problema* * Debes realizar un programa que, conociendo la cantidad de carretes que tiene la ma\u0301quina, el precio inicial y el precio final, calcule el nu\u0301mero de pasos que realizara\u0301 el mecanismo para llegar de uno a otro. * * Entrada* * Tu programa debera\u0301 leer del teclado los siguientes datos: en la primera li\u0301nea el nu\u0301mero de carretes N, que puede ser desde 2 hasta 200. En la segunda li\u0301nea, el precio inicial como una cadena de N caracteres y en la tercera li\u0301nea el precio final. Como otra cadena de caracteres. * * Salida* * Tu programa debe escribir en pantalla el nu\u0301mero total de pasos que realizara\u0301 la ma\u0301quina para llegar del precio inicial al precio final. * * ` Ejemplo` * * \u2014\u2014- | | input457321598| | output14| | input51112299999| | output12| | end",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 9517
  },
  {
    "title": "Es hoy",
    "url": "https://omegaup.com/arena/problem/Es-hoy",
    "history": "\u00a1Ha llegado el di\u0301a! Por fin, ahora puedes HACKEAR LA NASA. Pero antes de ello tienes que solucionar este problema. MUAHAHAHA. El profesor Carlos, ha comprado muchas cajas llenas de pelotas. A la hora de recibirlas, se dio\u0301 cuenta que le enviaron dos tipos de cajas A y B de las cuales hay N cajas de tipo A y M de tipo B, En cada caja hay un cantidad diferente de pelotas, asi\u0301 que te pide a ti ( Supremo Dios de la Programacio\u0301n Tebana) a que le ayudes a saber cuantas pelotas hay en total de cada tipo de caja A y B. # NotaToma en cuenta que si fallas, te va a reprobar y tampoco tendras permiso de hacker la nasa.",
    "input": "La primera y segunda li\u0301neas de entrada contendra\u0301n los numeros 1 \u2264 N y M \u2264 100 respectivamente. La siguientes N li\u0301neas contendra\u0301n la cantidad de pelotas en las cajas de tipo A y las proximas M lineas las de B.",
    "output": "La cantidad de pelotas que hay de tipo A y las de tipo B. | | input3 510 5 88 7 3 8 7| | output23 33| | end",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 9417
  },
  {
    "title": "Sumatoria con Salto",
    "url": "https://omegaup.com/arena/problem/Sumatoria-con-Salto",
    "history": "Ya conoces la famosa fo\u0301rmula: sumatoria = n( n + 1) / 2 que nos sirve para realizar el ca\u0301lculo de la sumatoria de los nu\u0301meros comprendidos entre 1 y n ( incluye\u0301ndolos) . Ahora bien, tu\u0301 quieres ir ma\u0301s alla\u0301 y realizar un algoritmo/ fo\u0301rmula que te de\u0301 la respuesta para sumatorias con incrementos s. Un incremento s es representado por la cantidad adicional que se agregara\u0301 a cada numero i. - Teniendo salto s = 2 y n = 9, la sumatoria seri\u0301a: 1 + 3 + 5 + 7 + 9 = 25Tu\u0301 trabajo es, dado un nu\u0301mero n y un nu\u0301mero s determinar la sumatoria de los nu\u0301meros que se encuentran entre 1 y n ( incluye\u0301ndolos) considerando el salto s.",
    "input": "2 nu\u0301meros separados por un espacio que representan s y n ( respectivamente) . Se asegura que, para todos los casos de prueba, n formara\u0301 parte de la secuencia nume\u0301rica deseada.",
    "output": "El resultado de la sumatoria con salto s.",
    "note": "",
    "topics": [
      "implementation",
      "number theory",
      "math"
    ],
    "id": 9412
  },
  {
    "title": "Samuel y sus lapiceras",
    "url": "https://omegaup.com/arena/problem/Samuel-y-sus-lapiceras",
    "history": "Samuel esta aburrido en clases, y cuando el se aburre decide realizar algu\u0301n calculo de cosas que parecen ser absurdas, en esta ocasio\u0301n el ha decidido calcular el promedio de lapiceras negras que hay \u0301por alumno en su salo\u0301n, por lo que, aprovechando que el profesor no se encontraba, empezo\u0301 a preguntarle a cada uno de sus compan\u0303eros por la cantidad de lapiceras negras que tenia, y posteriormente calculo el promedio; una vez que lo hizo, decidio\u0301 hacer lo mismo en toda la escuela, por lo que le pidio\u0301 a sus amigos en cada salo\u0301n que le mandaran la informacio\u0301n de las lapiceras negras; ahora que tiene mucha informacio\u0301n, necesita un programa que lo ayude a calcular el promedio con la informacio\u0301n recibida, ayudalo a calcular el promedio de lapiceras.",
    "input": "Recibira\u0301s un numero n, que indica el numero de alumnos en el salo\u0301n, despue\u0301s recibira\u0301s n nu\u0301meros, que sera la cantidad de lapiceras por cada alumno en el salo\u0301n.",
    "output": "Debera\u0301s mostrar el promedio de lapiceras que hay en el salo\u0301n analizado.",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 9386
  },
  {
    "title": "Las cajas",
    "url": "https://omegaup.com/arena/problem/SB08-Las-cajas",
    "history": "Mauricio tiene 3 cajas de volu\u0301menes a, b y c. Como Mauricio reprobo\u0301 matema\u0301ticas necesita un programa que le diga cua\u0301nto es el volumen v total de las cajas para saber cua\u0301nto puede guardar en ellas.",
    "input": "Tres nu\u0301meros enteros a, b y c ( 0 < a, b, c \u2264 10^ 9) separados por un espacio.",
    "output": "El volumen v total de las cajas.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 9331
  },
  {
    "title": "\u00c1rea de la figura",
    "url": "https://omegaup.com/arena/problem/Area-de-la-figura",
    "history": "En la UPIIZ- IPN, los chicos y chicas del club de algoritmia del periodo 2020- 1 les gusta mucho las figuras y las sucesiones. Se define un n- poli\u0301gono- interesante. Tu tarea es encontrar el a\u0301rea de un poli\u0301gono dada una n. Un 1- poli\u0301gono- interesante es so\u0301lo un cuadrado con lado de longitud 1. Un n- poli\u0301gono- interesante es obtenido tomando un ( n- 1) - poli\u0301gono- interesante y adjuntando 1- poli\u0301gonos- interesantes en sus bordes, es decir, agregando en cada lado un cuadrado de lado 1. En la imagen de abajo se pueden verlos 1- , 2- , 3- y 4- poli\u0301gonos- interesantes. ! [ enter image description here] [ 1] Escribe un programa que calcule el a\u0301rea de un n- poli\u0301gono interesante.",
    "input": "Un entero n. Puedes suponer que 1 \u2264 n \u2264 10^ 4.",
    "output": "Un entero que sea el a\u0301rea del n- poli\u0301gono- interesante.",
    "note": "",
    "topics": [
      "math",
      "dfs and similar",
      "dp"
    ],
    "id": 9310
  },
  {
    "title": "rango hacker",
    "url": "https://omegaup.com/arena/problem/rango-hacker-cpp",
    "history": "# Descripcionlearsi ha retado a otrevor con un problema muy sencillo ( ya que learsi no se le dan bein las sumas) a learsi lepidieron sumar los numero del 1 . . . N el cual no presento problemas para el, pero ahora le han cambiado un pocoel juego, dandole un rango N M determinar la suma de los numeros entre el rango inclusives con los indices es decirS( N) = S( N) + S( N+ 1) + S( N+ 2) . . . . S( M) , como otrevor es una persona muy ocupada decidio dejarle la tarea a Hackerman",
    "input": "se te daran dos numeros N y M que denotan el inicio del rango y el final",
    "output": "la suma de los numeros del rango| | input2 3| | output5| | input1 5| | output15| | input3 20| | output207| | end# Limites* 1 < = N < = 10^ 12* 1 < = M < = 10^ 12# Consideraciones* los rangos N M pueden ir en incremento o decremento",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 9013
  },
  {
    "title": "Foraneo hambriento",
    "url": "https://omegaup.com/arena/problem/Foraneo-hambriento",
    "history": "Fernanda, Andrea, Diego, Sebastia\u0301n y Gatica son voluntarios del Coding Rush y acostumbran a comer pizza juntosdespue\u0301s de cada sesio\u0301n. Dado que uno de ellos es fora\u0301neo ( no diremos quien para conservar su anonimato) , si sobra pizza esta personita se la queda para cenar. Como la falta de comida afecta su habilidad para programar, te han pedido a ti que escribas un co\u0301digo para saber si el fora\u0301neo se va a quedar pizza para cenar o no. Sabemos que cada pizza esta\u0301 dividida en 8 rebanadas. Y que cada quien come segu\u0301n el hambre que tenga.",
    "input": "Primero recibira\u0301s un nu\u0301mero entero P que representa el nu\u0301mero de pizzas que compraron. Seguido de 5 nu\u0301meros enteros que representan cuantas rebanadas de pizza comio\u0301 cada uno de los amigos.",
    "output": "Imprime FF de \" Fora\u0301neo Feliz\" en caso de que sobre al menos 1 rebanada de pizza. Imprime FH de \" Fora\u0301neo Hambriento\" si no sobra ninguna.",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 9011
  },
  {
    "title": "Generar un vector con los primeros N n\u00fameros de la serie Fibonacci.",
    "url": "https://omegaup.com/arena/problem/Generar-vector-Fibonacci",
    "history": "Generar un vector con los primeros N nu\u0301meros de la serie Fibonacci. | | input6| | output1 1 2 3 5 8| | end",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "math",
      "number theory",
      "implementation"
    ],
    "id": 8890
  },
  {
    "title": "VELOCIPITAL",
    "url": "https://omegaup.com/arena/problem/VELOCIPITAL",
    "history": "2 VEHICULOS SE DESPLAZAN EN SENTIDO CONTRARIO EN UNA CARRETERA, UNO VA A 60 KM/ H Y EL OTRO VA A 30 KM/ H, SI SE ENCUENTRAN A 360 KM, ENCUENTRA EN CUANTOS MINUTOS ESTOS SE ENCUENTRAN. ! [ enter image description here] [ 1]",
    "input": "NO HAY ENTRADA.",
    "output": "UN CODIGO QUE DA LA CANTIDAD DE MINUTOS QUE TARDARON EN ENCONTRARSE.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 8887
  },
  {
    "title": "C\u00e1lculo de sumatoria",
    "url": "https://omegaup.com/arena/problem/Calculo-de-sumatoria",
    "history": "Dado un entero positivo N, calcula el valor de 1 + 2 + 3 + . . . + N.",
    "input": "Un entero N. Puedes suponer que 1 \u2264 N \u2264 10^ 9.",
    "output": "Un entero que sea el valor de la suma pedida.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 8788
  },
  {
    "title": "Promedio Calificaciones ",
    "url": "https://omegaup.com/arena/problem/Promedio-Calificaciones-",
    "history": "Para ti y tu familia es muy importante ese di\u0301a al final de semestre donde entregan tus calificaciones y vez el excelente desempen\u0303o que has tenido durante todo ese tiempo. Tus papa\u0301s esta\u0301n muy orgullosos de ti y quieres ser el primero en darles la noticia de las excelentes calificaciones que tienes. # ProblemaCalcula el promedio de tus 7 calificaciones con un solo decimal.",
    "input": "Siete nu\u0301meros de 0 a 10 separados por espacios.",
    "output": "Un nu\u0301mero que representa el promedio de tus calificaciones finales con un solo decimal.",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 8783
  },
  {
    "title": "Suma de Enteros",
    "url": "https://omegaup.com/arena/problem/Suma-de-Enteros",
    "history": "Ahora que conoces lo que son las variables enteras vamos a realizar una pequen\u0303a operacio\u0301n. Para poder hacer sumas solo necesitas hacerlo de la siguiente manera ` suma = a + b` . Ahora bien tendra\u0301s que leer dos nu\u0301meros desde la pantalla, guardarlos en una variable y sumarlos. # ProblemaRealiza la suma de dos nu\u0301meros enteros",
    "input": "Dos nu\u0301meros enteros A y B separados por un espacio",
    "output": "La suma de dos nu\u0301meros enteros",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 8768
  },
  {
    "title": "Sumando con pilas",
    "url": "https://omegaup.com/arena/problem/Sumando-con-pilas",
    "history": "Escribe un programa que comience con una pila P de enteros inicialmente vaci\u0301a y que ejecute una lista de las siguientes operaciones: - * AGREGA v* : Agregar v a P. Por ejemplo, si P = ( 3, 1, 4) y v = 5 entonces P = ( 3, 1, 4, 5) . - * CONSUME* : Quitar los dos u\u0301ltimos elementos de P, calcular su suma y agregarla a P. Por ejemplo, si P = ( 3, 1, 4) entonces P = ( 3, 5) . - * IMPRIME* : Imprimir el u\u0301ltimo elemento de P. Por ejemplo, si P = ( 3, 1, 4) entonces se debe imprimir 4.",
    "input": "Un entero N seguido de las N operaciones a realizar sobre P. Puedes suponer que 0 \u2264 N \u2264 10^ 5 y que nunca se pedira\u0301 consumir o imprimir un elemento que no existe.",
    "output": "Cada para operacio\u0301n de impresio\u0301n, el valor del entero correspondiente.",
    "note": "",
    "topics": [
      "data structures",
      "implementation",
      "math"
    ],
    "id": 8672
  },
  {
    "title": "El hechicero y los tri\u00e1ngulos",
    "url": "https://omegaup.com/arena/problem/El-hechicero-y-los-triangulos",
    "history": "Para invocar a un poderoso demonio, un hechicero debe debe colocar tres i\u0301dolosen el piso en forma de tria\u0301ngulo, despue\u0301s cubrir este tria\u0301ngulo con polvosma\u0301gicos y finalmente recitar el conjuro. Sin embargo, justo cuando cuando sedisponi\u0301a a colocar sus i\u0301dolos nuestro hechicero se resbalo\u0301 y termino regando Ni\u0301dolos por todo el suelo. Como el ritual debe realizarse en una hora especi\u0301fica el hechicero no tienetiempo de reacomodar todo otra vez. Para maximizar la efectividad del conjuro, el hechicero debe seleccionar los tres i\u0301dolos que forman el tria\u0301ngulo de a\u0301reama\u0301xima. \u00bfPuedes ayudar a este hechicero a invocar a su demonio?",
    "input": "Un entero N y a continuacio\u0301n N parejas de reales que representan lascoordenadas x, y de cada i\u0301dolo. Puedes asumir que 3 \u2264 N \u2264 500 y que- 1000 \u2264 x, y \u2264 1000.",
    "output": "Un real con tres posiciones decimales que representa el a\u0301rea que debe sercubierta con polvos ma\u0301gicos.",
    "note": "",
    "topics": [
      "implementation",
      "brute force",
      "math"
    ],
    "id": 8663
  },
  {
    "title": "Cuadrados blancos y negros",
    "url": "https://omegaup.com/arena/problem/Cuadrados-blancos-y-negros",
    "history": "Considere tres cuadrados uno al lado del otro. Cada cuadrado tiene un vecinoizquierdo y uno derecho. Por ejemplo, el cuadrado del centro tiene como vecinoizquierdo al primer cuadrado y como vecino derecho al ultimo cuadrado. De manerasimilar el primer cuadrado tiene como vecino izquierdo al ultimo cuadrado y comovecino derecho al cuadrado del centro. Cada cuadrado cambia de color ( blanco o negro) tomando en cuenta su propio colory el de sus dos vecinos de acuerdo a la siguiente tabla. | Izquierdo | Cuadrado | Derecho | Nuevo Color | | \u2014\u2014\u2014\u2014- | : \u2014\u2014\u2014\u2014- : | \u2014\u2013: | \u2014 | | Negro | Negro | Negro | Negro | | Negro | Negro | Blanco | Blanco | | Negro | Blanco | Negro | Negro | | Negro | Blanco | Blanco | Blanco | | Blanco | Negro | Negro | Negro | | Blanco | Negro | Blanco | Blanco | | Blanco | Blanco | Negro | Negro | | Blanco | Blanco | Blanco | Blanco | Por ejemplo si al inicio los colores de los tres cuadrados son negro, blanco, blanco y se aplica la regla descrita en la tabla una vez, entonces los nuevoscolores de los cuadrados sera\u0301n: blanco, blanco, negro. Escriba un programa que determine el color de los cuadrados despue\u0301s de aplicarla regla n veces.",
    "input": "Un entero n que indica el nu\u0301mero de veces que debe aplicarse la regla y acontinuacio\u0301n 3 enteros que representan los colores iniciales de los cuadrados: 0para negro y 1 para blanco. Puede asumir que 0 \u2264 n \u2264 1000.",
    "output": "Tres enteros separados por un espacio que representan los colores de loscuadrados despue\u0301s de aplicar la regla n veces.",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 8630
  },
  {
    "title": "Calculadora-Factorial",
    "url": "https://omegaup.com/arena/problem/Calculadora-Factorial",
    "history": "Los amigos de James estan batallando para calcular el factorial de varios numeros ya que no tienen calculadoras y no tienen acceso a internet porque utilizaron el router para controlar un robot. Por lo que te pidio ayuda a ti\u0301 para que le programes una calculadora de factorial.",
    "input": "La entrada sera\u0301 un numero entero * * N* * del cual debes obtener su factorial ( Los numeros son menores a 15) .",
    "output": "Debes imprimir unicamente el resultado del factorial de * * N* *",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 8586
  },
  {
    "title": "Tri\u00e1ngulos acut\u00e1ngulos",
    "url": "https://omegaup.com/arena/problem/triang-acut",
    "history": "Para que tres nu\u0301meros enteros a , b , c sean las longitudes de los lados de un tria\u0301ngulo deben satisfacer las tres desigualdades a + b > c; b + c > a; c + a > b. Para que un tria\u0301ngulo sea acuta\u0301ngulo debe satisfacer que cada uno de sus tres a\u0301ngulos mida menos de 90\u00b0. Recuerda que cada a\u0301ngulo \u03b1 de un tria\u0301ngulo se puede calcular usando la ley de cosenos: a^ 2 = b^ 2 + c^ 2 - 2bc cos\u03b1. Dados dos nu\u0301meros enteros, m , n, podemos encontrar la cantidad t de ternas ( a , b , c ) tales que m \u2264 a \u2264 b \u2264 c \u2264 n y que a , b , c sean las longitudes de los lados de un tria\u0301ngulo acuta\u0301ngulo. Por ejemplo, si m = 3, n = 5, entonces hay t = 8 ternas como las descritas, que son ( 3, 3, 3) , ( 3, 3, 4) , ( 3, 4, 4) , ( 3, 5, 5) , ( 4, 4, 4) , ( 4, 4, 5) , ( 4, 5, 5) y ( 5, 5, 5) .",
    "input": "Consiste de dos nu\u0301meros enteros, m , n, separados por un espacio, que tendra\u0301n un valor entre 1 y 1 000.",
    "output": "Consiste de un nu\u0301mero entero t, es decir, la cantidad de ternas con las propiedades deseadas.",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 8573
  },
  {
    "title": "D\u00eda de la semana",
    "url": "https://omegaup.com/arena/problem/dia-semana",
    "history": "Uno de los problemas que se tiene que resolver al escribir un programa que trabaje confechas es el de decir que\u0301 di\u0301a de la semana corresponde con una cierta fecha dada. Porejemplo, el 23 de mayo de 2005 es lunes, el di\u0301a anterior doming o y el siguiente martes. Dada una fecha como tres nu\u0301meros enteros, a, m , d ( donde a es el an\u0303o, m el mes y d eldi\u0301a) , el di\u0301a de la semana se puede encontrar con el siguiente algoritmo: 1. Si m > 2, entonces ve\u0301 al paso 3. 2. Haz m = m + 10, tambie\u0301n a = a- 1 y ve\u0301 al paso 4. 3. Haz m = m - 2. 4. Haz c = a/ 100 y tambie\u0301n e = a 100. 5. Haz b = ( 13m - 1) / 5 + e/ 4+ c/ 4. 6. Haz f = ( b + e + d + 5c) 7. En este algoritmo todas las divisiones son enteras, mod es el residuo de la divisio\u0301n y f = 0 significa domingo, f = 1 significa lunes, etc. Dada una fecha, debera\u0301s determinar que\u0301 di\u0301a de la semana fue el di\u0301a anterior ( f_ 1) , ese di\u0301a ( f_ 2 ) y el di\u0301a siguiente ( f_ 3) .",
    "input": "Consiste de tres nu\u0301meros enteros, a , m , d, separados por espacios y donde0 \u2264 a \u2264 10 000, 1 \u2264 m \u2264 12 y 1 \u2264 d \u2264 31, adema\u0301s de que a , m , d representan una fecha va\u0301lida.",
    "output": "Consiste de tres nu\u0301meros enteros, f_ 1 , f_ 2 , f_ 3, separados por espacios.",
    "note": "",
    "topics": [
      "implementation",
      "sortings",
      "math"
    ],
    "id": 8567
  },
  {
    "title": "Fracciones continuas",
    "url": "https://omegaup.com/arena/problem/fContinuas",
    "history": "Considera el siguiente proceso: comienza con un nu\u0301mero x que no sea negativo. Mientras x sea diferente de cero, calcule su parte entera z, re\u0301stasela a x y asi\u0301gnale a x su inverso. Por ejemplo, si comienza con x = 3. 15 el anterior proceso producira\u0301, en orden, los siguientes valores de z: 3, 6, 1, 2. Ahora observa que: 3. 15 = 3 + 1/ 6 + 1/ 1 + 1/ 2. A esta expresio\u0301n se le llama la * fraccio\u0301n continua* de 3. 15. Nosotros consideraremos el proceso inverso, es decir, comenzando con la sucesio\u0301n de nu\u0301meros enteros que define a una fraccio\u0301n continua, queremos calcular el nu\u0301mero original. Para ser ma\u0301s precisos, dado un nu\u0301mero entero positivo n y una sucesio\u0301n z_ 1, z_ 2, z_ 3, . . . , z_ n de n enteros, calcula el valor del nu\u0301mero x cuya fraccio\u0301n continua esta\u0301 representada por: z_ 1 + 1/ z_ 2 + 1/ z_ 3 + 1/ . . . + 1/ z_ n.",
    "input": "Consiste de un nu\u0301mero entero n, que tendra\u0301 un valor entre 1 y 1 000, seguido de un renglo\u0301n con n nu\u0301meros enteros, z_ 1, z_ 2, z_ 3, . . . , z_ n, separados por espacios, cada uno con valor entre 0 y 999.",
    "output": "Consiste del nu\u0301mero x de punto flotante, el cual debe estar redondeado a 6 cifras ( aunque se permiten ceros a la derecha) .",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 8554
  },
  {
    "title": "Parejas disparejas",
    "url": "https://omegaup.com/arena/problem/Disparejas",
    "history": "Si m , n son dos nu\u0301meros enteros positivos, decimos que m divide a n si n es un mu\u0301ltiplo de m. Por ejemplo, 1, 2, 3 y 6 dividen a 6, pero ni 4, ni 5, ni tampoco 7 dividen a 6. Definamos la funcio\u0301n s( n ) como la suma de todos los divisores de n ( excepto n) . Por ejemplo, s ( 6) = 1 + 2 + 3 = 6, s ( 9) = 1 + 3 = 4 y s ( 12) = 1 + 2 + 3 + 4 + 6 = 16. Sean m , n dos nu\u0301meros enteros positivos. Definimos cuatro tipos de parejas ( m , n ) : * * Tipo 0: * * Si s ( m ) = n, s ( n ) = m, decimos que ( m , n ) es una pareja * perfecta* . * * Tipo 1: * * Si s( m ) \u2264 n, s ( n ) \u2264 m, decimos que ( m , n ) es una pareja * defectuosa* . * * Tipo 2: * * Si s ( m ) \u2265 n, s ( n ) \u2265 m, decimos que ( m , n ) es una pareja * afectuosa* . * * Tipo 3: * * De lo contrario, decimos que ( m , n ) es una pareja * dispareja* . Dados dos nu\u0301meros x , y debes decidir que\u0301 tipos de parejas son ( x , y) , ( x , x ) , ( y , y) . Por ejemplo, si x = 6, y = 12, entonces ( 6, 12) es una pareja dispareja, ( 6, 6) es una pareja perfecta y ( 12, 12) es una pareja afectuosa.",
    "input": "Consiste de dos nu\u0301meros enteros positivos, x, y, separados por un espacio, donde x, y < 1 000 000.",
    "output": "Consiste de tres nu\u0301meros enteros, p, q, r, separados por espacios, representando cada uno de ellos el tipo de las parejas ( x , y ) , ( x , x ) , ( y , y ) , respectivamente.",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 8553
  },
  {
    "title": "FuncionX",
    "url": "https://omegaup.com/arena/problem/FuncionX",
    "history": "Para un entero positivo N definamos una funcio\u0301n f: f ( N) = - 1 + 2 - 3 + 4 - 5 + . . + ( - 1) nnSu tarea es calcular f ( N) para un entero n dado.",
    "input": "La li\u0301nea u\u0301nica contiene el entero positivo N ( 1 < = N < = 10^ 15) .",
    "output": "Imprimir f ( N) en una sola li\u0301nea.",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 8501
  },
  {
    "title": "Inversiones",
    "url": "https://omegaup.com/arena/problem/InversionesBanco",
    "history": "Despue\u0301s de mucho pensarlo has decidido invertir tu dinero. El banco que elegisteofrece tres tipos de inversiones cada una con distintas tasas de intere\u0301smensual. Como no te consideras un gran inversionista decidiste simplementedividir tu dinero e invertir por igual en cada tipo de inversio\u0301n durante un an\u0303o. Por supuesto, el banco tambie\u0301n quiere tener ganancias, por lo cual tiene lapoli\u0301tica de quedarse con un porcentaje de las ganancias totales que genere eldinero de un cliente.",
    "input": "Un entero x que representa la cantidad de dinero que sera\u0301 invertida, seguidode 4 flotantes que representan las tasas de intere\u0301s de cada tipo de inversio\u0301n, asi\u0301 como el porcentaje de las ganancias totales que recibira\u0301 el banco. Puedeasumir que 0 \u2264 x \u2264 10000000 y que la tasa de intere\u0301s de cada producto deinversio\u0301n asi\u0301 como el porcentaje de ganancias del banco son reales entre cero yuno.",
    "output": "Un real con tres posiciones decimales que representa el total de dinero que setiene despue\u0301s de un an\u0303o.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 8486
  },
  {
    "title": "Calculando el \u00e1rea de un tri\u00e1ngulo",
    "url": "https://omegaup.com/arena/problem/Calculando-el-area-de-un-triangu",
    "history": "Considere el tria\u0301ngulo definido por los vectores de posicio\u0301n p_ 1 = ( x_ 1, y_ 1) , p_ 2 = ( x_ 2, y_ 2) y p_ 3 = ( x_ 3, y_ 3) Escriba un programa que determine el a\u0301rea de este tria\u0301ngulo.",
    "input": "Seis reales x_ 1, y_ 1, x_ 2, y_ 2, x_ 3, y_ 3 que representan las coordenadas de losvectores de posicio\u0301n p_ 1, p_ 2 y p_ 3. Puede asumir que - 1 \u2264 x_ 1, y_ 2, x_ 2, y_ 2, x_ 3, y_ 3 \u2264 1.",
    "output": "Un real que representa el a\u0301rea del tria\u0301ngulo.",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 8458
  },
  {
    "title": "Dados apilados",
    "url": "https://omegaup.com/arena/problem/Dados-apilados",
    "history": "Un di\u0301a mientras Juan jugaba con sus amigos, noto\u0301 que al apilar un nu\u0301mero n dedados sobre una mesa, la suma que resulta de todos los valores en las carasvisibles se encuentra acotada entre un valor inferior y uno superior.",
    "input": "Un entero n que representa el nu\u0301mero de dados apilados. Puedes suponer que 1\u2264 n \u2264 1000000.",
    "output": "Dos enteros separados por un espacio que representan el valor inferior ysuperior de la suma de todas las caras visibles de los dados.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 8457
  },
  {
    "title": "M\u00e1ximo subarreglo",
    "url": "https://omegaup.com/arena/problem/Maximo-subarreglo",
    "history": "Dada una secuencia de enteros * * N* * , encuentra el valor del subarreglo ma\u0301ximo, un subarreglo se define como un arreglo tal que sus intervalos cumplen: a, b con x\u2264 a, b \u2264 y, siempre respetando a \u2264 b con x, y los limites del arreglo original, considerando esto un elemento puede ser visto como un subarreglo, por ejemplo para la secuencia de nu\u0301meros [ a_ 0, a_ 1, a_ 2] los intervalos de sus subarreglos seri\u0301an [ 0, 0] , [ 0, 1] , [ 0, 2] , [ 1, 1] , [ 1, 2] , [ 2, 2] tu trabajo sera calcular el ma\u0301ximo \u2211_ i= a^ { b arreglo[ i] .",
    "input": "Un nu\u0301mero n seguido de n enteros, a_ 0, a_ 1, . . . , a_ n- 1.",
    "output": "La suma ma\u0301s grande posible generada por los elementos de algu\u0301n subarreglo.",
    "note": "",
    "topics": [
      "implementation",
      "dp",
      "math"
    ],
    "id": 8431
  },
  {
    "title": "Suma de Multiplicaci\u00f3n de Pares",
    "url": "https://omegaup.com/arena/problem/Suma-de-Multiplicacion-de-Pares",
    "history": "Dado un nu\u0301mero de entrada n, se procede a capturar una lista de valores nume\u0301ricos de taman\u0303o n. El objetivo es realizar la suma de la multiplicacio\u0301n de cada pareja de datos.",
    "input": "La entrada constara\u0301 en capturar un numero n, que servira\u0301 para determinar la cantidad de elementos que contendra\u0301 la lista que sera\u0301 evaluada.",
    "output": "La salida sera\u0301 el resultado de la suma de la multiplicacio\u0301n de cada pareja de datos.",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 8318
  },
  {
    "title": "Per\u00edmetro de poligono",
    "url": "https://omegaup.com/arena/problem/Perimetro-de-poligono",
    "history": "Un ingeniero esta\u0301 tratando de calcular el peri\u0301metro de una figura de mu\u0301ltiples lados y desea que le ayudemos creando un programa para dicha tarea. El desea que el programa pueda leer mu\u0301ltiples nu\u0301meros que representan la longitud de cada uno de los lados y terminar con un cero. Sin embargo, el teclado de su computadora esta\u0301 fallando y de vez en cuanto escribe - ( signos negativos, convenientemente solo antes de escribir nu\u0301meros) . El ingeniero desea que el programa esta\u0301 preparado para estos errores y corrija dichos nu\u0301meros negativos.",
    "input": "La entrada tendra\u0301 varios numeros enteros positivos y negativos, siendo el u\u0301ltimo un cero.",
    "output": "La salida sera\u0301 el valor de la suma de los lados de la figura, cambiando los valores negativos a positivos.",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 8309
  },
  {
    "title": "Productos gigantes",
    "url": "https://omegaup.com/arena/problem/Productos-gigantes",
    "history": "Seguramente esta\u0301s harto de los problemas difi\u0301ciles, asi\u0301 que aqui\u0301 va uno fa\u0301cil. # ProblemaMultiplicar 2 nu\u0301meros enteros X, Y ( 0 < = X, Y < = 10^ 250)",
    "input": "Dos li\u0301neas, la primera contiene al nu\u0301mero X y la segunda al nu\u0301mero Y.",
    "output": "El resultado de multiplicar X * Y.",
    "note": "",
    "topics": [
      "strings",
      "math",
      "implementation"
    ],
    "id": 8159
  },
  {
    "title": "Suma de rangos",
    "url": "https://omegaup.com/arena/problem/Suma-de-rangos",
    "history": "Juan ha decidido anotar en una lista los nu\u0301meros de 1 a n, y luego los nu\u0301meros de n- 1 a 1. Despue\u0301s de esto decide calcular la suma desde el nu\u0301mero en la posicio\u0301n 1 hasta el nu\u0301mero en la posicio\u0301n n+ 1, a esta suma agregarle la suma desde el nu\u0301mero en la posicio\u0301n 2 hasta el nu\u0301mero en la posicio\u0301n n+ 2, y asi\u0301 sucesivamente hasta calcular la suma desde el nu\u0301mero en la posicio\u0301n n- 1 hasta el nu\u0301mero en la posicio\u0301n 2n- 1. Por ejemplo en caso de que n sea cinco los nu\u0301meros que anotari\u0301a seri\u0301an los siguientes: * * 1 2 3 4 5 4 3 2 1* * En este caso, Juan calcularia la suma de la siguiente forma: ( 1+ 2+ 3+ 4+ 5+ 4) + ( 2+ 3+ 4+ 5+ 4+ 3) + ( 3+ 4+ 5+ 4+ 3+ 2) + ( 4+ 5+ 4+ 3+ 2+ 1) = 80# ProblemaDado un nu\u0301mero n calcula la suma de sus rangos usando el mismo procedimiento que Juan.",
    "input": "Un u\u0301nico entero, n, donde 1 \u2264 n \u2264 10^ 6",
    "output": "El resultado de la suma de los rangos que se obtiene con el procedimiento de Juan.",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 8004
  },
  {
    "title": "Venta de gasolina",
    "url": "https://omegaup.com/arena/problem/Venta-de-gasolina",
    "history": "Debido a la escasez de gasolina en tu ciudad, una de las gasolineras solo deseavender L litros de combustible diariamente. Para tratar de manera equitativaa cada cliente la gasolinera ha decidido vender a cada automovilista N litrosde combustible. Si al final de un di\u0301a la gasolinera tiene combustible sobrantelo reserva para el di\u0301a siguiente. Por el contrario si en un di\u0301a la gasolineraexcede los L litros, tomara\u0301 prestado combustible de la reserva para el di\u0301asiguiente. Escriba un programa que determine la reserva diaria de combustible que tiene lagasolinera durante una semana.",
    "input": "Nueve enteros L, N, l, m, w, j, v, s y d. que representan lacantidad total de combustible para un di\u0301a, los litros que se le vendera\u0301n a cadacliente, y el nu\u0301mero de automovilistas que acuden a la gasolinera cada di\u0301adurante una semana. Puede asumir que 0 \u2264 L \u2264 10000, que N < = L y que0 \u2264 l, m, w, j, v, s, d \u2264 100.",
    "output": "Siete enteros separados por espacios que representan la reserva diaria de la gasolinera.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 8000
  },
  {
    "title": "Digitos poderosos",
    "url": "https://omegaup.com/arena/problem/Digitos-poderosos-cpp",
    "history": "# DescripcionHackerman ha despertado con un problema de seguridad muy peculiar, y el necesita resolverlo lo antes posible antes de que todos sus codigos sean expuestos al publico ( el tiene buenas ideas para ayudar al mundo, aunque aun no estan listas) tienes que ayudarlo antes de que sus codigos sean publicadosel problema que tiene que resolver es muy simple el tiene que encontrar los N_ x_ y Digitos poderosos a partir de X YDefinimos a un di\u0301gito poderoso a partir de un entero X_ Y y uusando las siguientes reglas: Si X_ Y solo tiene un di\u0301gito, entonces el di\u0301gito poderoso de X_ Y es X_ Y. De lo contrario, el di\u0301gito poderoso de X_ Y es igual al di\u0301gito poderoso de la suma de di\u0301gitos de X_ Y. Veamos. el Digito poderoso de 9875 es igual a la suma de los di\u0301gitos de 9875 ya que 9875 tiene mas de un digito el Digito poderoso de 9875se define como la suma de sus di\u0301gitos. Por ejemplo, el Di\u0301gito poderoso de 9875 se calculara\u0301 como: > digito_ poderoso ( 9875) = digito_ poderoso ( 9 + 8 + 7 + 5) . > = digito_ poderoso( 29) > = digito_ poderoso( 2 + 9) > = digito_ poderoso( 11) > = digito_ poderoso( 1 + 1) > = digito_ poderoso( 2) > digito_ poderoso ( 9875) = 2.",
    "input": "Te dan un numero entero positivo N seguido N* 2 digitos que consiste de dos nu\u0301meros enteros positivos X y Y.",
    "output": "imprime el di\u0301gito poderoso de cada X_ Y y asi evitar que los secretos de hackerman sean expuestos . cada numero X_ Y se crea cuando el nu\u0301mero X se concatena Y veces. Es decir, si X = 148 Y= 3 , entoncesX_ Y = 148148148| | input1148 3| | output3| | descriptiondigito_ poderoso ( 148148148) = digito_ poderoso ( 1+ 4+ 8+ 1+ 4+ 8+ 1+ 4+ 8) = digito_ poderoso ( 39) = digito_ poderoso ( 3+ 9) = digito_ poderoso ( 12) = digito_ poderoso ( 1+ 2) = digito_ poderoso ( 3) digito_ poderoso ( 148148148) = 3. | | input512323 4142 2273 4163 122 9| | output85319| | end# Limites1 \u2264 N \u2264 10^ 610 \u2264 X \u2264 2^ 64- 11 \u2264 Y \u22642^ 64- 1/ 10Para el 30",
    "note": "",
    "topics": [
      "dp",
      "math",
      "implementation",
      "dfs and similar"
    ],
    "id": 7915
  },
  {
    "title": "Elevando al cuadrado",
    "url": "https://omegaup.com/arena/problem/Elevando-al-cuadrado-UAM",
    "history": "Dado un entero inicial N, eleva su valor al cuadrado hasta que deje de ser menor que 30000. Por ejemplo, si comenzamos en N = 2 entonces pasamos a 4, luego a 16, luego a 256 y finalmente a 65536. Escribe un programa que calcule el valor final N y cua\u0301ntas veces tuviste que elevarlo al cuadrado.",
    "input": "Un entero N. Puedes suponer que 2 \u2264 N \u2264 1000000.",
    "output": "Dos enteros que sean respectivamente el valor final de N y la cantidad de veces que se elevo\u0301 al cuadrado.",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 7912
  },
  {
    "title": "Suma de sumas",
    "url": "https://omegaup.com/arena/problem/Suma-de-sumas",
    "history": "Juanito es muy curioso y en su preparacio\u0301n para el TMR de Jalisco esta\u0301 estudiando las matema\u0301ticas porque se le habi\u0301a olvidado por completo. Justo en medio de su estudio se topo\u0301 con un problema un tanto complicado y te quiere pedir ayuda para resolverlo. Resuelva la siguiente serie: \u2211_ i= 1^ N \u2211_ j= 1^ i i",
    "input": "Un solo entero * * N* * que representa el li\u0301mite superior de la serie.",
    "output": "Un solo entero * * K* * , la respuesta de la serie.",
    "note": "",
    "topics": [
      "math",
      "implementation",
      "number theory"
    ],
    "id": 7840
  },
  {
    "title": "Alturas equil\u00e1teros",
    "url": "https://omegaup.com/arena/problem/Alturas-equilateros",
    "history": "La maestra de Juanito le encargo\u0301 de tarea encontrar una expresio\u0301n para calcular la altura de cualquier tria\u0301ngulo equila\u0301tero dada la longitud de uno de sus lados. Como Juanito esta\u0301 muy ocupado terminando su robot, te dara\u0301 un sandwich si le ayudes a resolver su tarea. A continuacio\u0301n se muestran los apuntes descifrados de la tarea de Juanito.",
    "input": "En la primera li\u0301nea encontrara\u0301s el valor * * N* * que indicara\u0301 cuantos tria\u0301ngulos ocupas leer y en las siguientes * * N* * lineas encontrara\u0301s un entero con el valor de cualquiera de los lados de ese tria\u0301ngulo.",
    "output": "* * N* * li\u0301neas con las alturas de cada tria\u0301ngulo redondeados a dos lugares despues del punto.",
    "note": "",
    "topics": [
      "math",
      "geometry",
      "implementation"
    ],
    "id": 7837
  },
  {
    "title": "Calificaciones bien",
    "url": "https://omegaup.com/arena/problem/Calificaciones-bien",
    "history": "Tu malvado profesor de programacio\u0301n decidio\u0301 hacerte la vida imposible, a ti y a tus compan\u0303eros por lo cual en su malvada mente solo pondra\u0301 las calificaciones de * * 0* * , * * 5* * , * * 6* * y * * 7* * su forma de asignar la calificacio\u0301n es fa\u0301cil pondra\u0301 la calificacio\u0301n que se acerque ma\u0301s a la calificacio\u0301n real ( Es decir tomara el menor valor resultante al restar la calificacio\u0301n real de las cuatro calificaciones que tomara el profesor) . Tu como gran programador deseas ayudar a tus compan\u0303eros a saber sus calificaciones.",
    "input": "* Li\u0301nea 1: Un entero * * N* * que indica el numero de calificaciones a tomar* Li\u0301neas 2. . * * N* * + 1: Las siguientes lineas tendra\u0301n la calificacio\u0301n real * * M* * que obtuviste.",
    "output": "* Li\u0301nea 1. . . N: Indicando la calificacio\u0301n que asigno el profesor.",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 7802
  },
  {
    "title": "Duraci\u00f3n del juego",
    "url": "https://omegaup.com/arena/problem/Duracion-del-juego",
    "history": "Lea la hora de inicio y terminacio\u0301n de un juego, en horas. Despue\u0301s calcule la duracio\u0301n del juego, sabiendo que el juego puede iniciar un di\u0301a y terminar en otro. Indique las horas que duro\u0301 el juego con una ma\u0301xima duracio\u0301n de 24 horas.",
    "input": "Dos nu\u0301meros enteros",
    "output": "Las horas que el juego duro\u0301.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 7782
  },
  {
    "title": "Suma de Divisores",
    "url": "https://omegaup.com/arena/problem/Suma-de-Divisores",
    "history": "Calcula la suma de los mu\u0301ltiplos de A y B menores que N. Dado un nu\u0301mero N la misio\u0301n es encontrar la suma de todos los mu\u0301ltiplos de A y B que esta\u0301n antes de N.",
    "input": "Tres nu\u0301meros enteros separados por espacios en el siguiente orden: N A B",
    "output": "Un nu\u0301mero entero M con el resultado de la suma.",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 7768
  },
  {
    "title": "Maestro de la optimizaci\u00f3n",
    "url": "https://omegaup.com/arena/problem/Maestro-de-la-optimizacion",
    "history": "Una vez derrotado el 3er desafi\u0301o de los guardianes, Santy se dirige hacia el 4 guardia\u0301n, Hawkings no quiso revelarle la ubicacio\u0301n a Santy de donde se encontrari\u0301a con este guardia\u0301n, el quiso que fuera sorpresa. Lo u\u0301nico que le dijo es que se suba a la nave espacial y que ella lo llevari\u0301a hasta su destino. ( Lastimosamente como solo era un viaje Santy no podi\u0301a tirarte a ti primero para probar, ya que teni\u0301an que ir juntos, sin embargo, te puso al frente asi\u0301 cualquier cosa tu sufres primero? ? ) . Una vez completado el viaje lo primero que hizo Santy fue vomitar, despue\u0301s de eso levanto\u0301 la mirada y observo al cuarto guardia\u0301n Stan Lee, luego observo en donde esta y al parecer Santy se encontraba en el famoso \" Cuartel de los Avengers\" . ! [ enter image description here] [ 1] Una vez terminado el gran tour por todo el cuartel, Stan Lee le advirtio\u0301 que su desafio\u0301 no iba ser nada fa\u0301cil pero si lo lograba era porque en verdad mereci\u0301a ser el Gran Maestro. - El desafi\u0301o solo involucraba 2 cartas, asi\u0301 de sencillo pareci\u0301a. Tu vas a tener dos cartas, una con un valor mayor que a la otra. - A la mayor le vas a restar el valor de la menor. Una vez hecho esto te van a quedar dos cartas, una con un valor X y la que antes era menor se queda igual, despue\u0301s de hacer este paso tu ganas 1 punto. - Despue\u0301s vas a ver que carta tiene el valor mayor y el menor ahora para volver hacer lo mismo. El proceso se acaba cuando una carta ya no tiene valor ( se queda con 0) . Y Stan Lee quiere que le digas cuantos puntos vas a tener al final. Como el leal compan\u0303ero que has sido siempre, Santy quiere que hagas un programa que resuelva el problema. # ProblemaSe te van a dar dos cartas con valores A y B y despue\u0301s de hacer el proceso antes explicado debes sacar cuantos puntos tendra\u0301 Santy al final.",
    "input": "Dos nu\u0301mero enteros A y B",
    "output": "Un u\u0301nico nu\u0301mero entero representando el valor de los puntos obtenidos",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 7729
  },
  {
    "title": "0110 0101 0122 0104",
    "url": "https://omegaup.com/arena/problem/tonsOfBits2",
    "history": "0110 0101 0122 0104 0012 0012 0120 0162 0157 0142 0154 0145 0155 0141 0012 0012 0104 0141 0144 01570040 0165 0156 0040 0156 0165 0155 0145 0162 0157 0040 0162 0145 0160 0162 0145 0163 0145 0156 01640141 0144 0157 0040 0145 0156 0040 0142 0141 0163 0145 0040 0157 0143 0164 0141 0154 0054 0040 01510155 0160 0162 0151 0155 0145 0040 0145 0154 0040 0156 0165 0155 0145 0162 0157 0040 0145 0156 00400162 0145 0160 0162 0145 0163 0145 0156 0164 0141 0143 0151 0157 0156 0040 0144 0145 0143 0151 01550141 0154 0056 0012 0012 0105 0152 0145 0155 0160 0154 0157 0012 0012 0105 0156 0164 0162 0141 01440141 0072 0040 0061 0064 0063 0012 0012 0123 0141 0154 0151 0144 0141 0072 0040 0071 0071 0012 00120114 0151 0155 0151 0164 0145 0163 0012 0012 0114 0141 0040 0162 0145 0163 0160 0165 0145 0163 01640141 0040 0156 0157 0040 0156 0145 0143 0145 0163 0151 0164 0141 0162 0141 0040 0155 0141 0163 00400144 0145 0040 0066 0064 0040 0142 0151 0164 0163 0040 0160 0141 0162 0141 0040 0163 0145 0162 00400162 0145 0160 0162 0145 0163 0145 0156 0164 0141 0144 0141 0056 0012 0000",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "math",
      "strings",
      "implementation"
    ],
    "id": 7660
  },
  {
    "title": "Suma n n\u00fameros",
    "url": "https://omegaup.com/arena/problem/Suma-n-numeros",
    "history": "Realiza un programa que solicite al usuario n nu\u0301meros; y te imprima la suma de dichos nu\u0301meros.",
    "input": "En la primera li\u0301nea un nu\u0301mero n que representa cua\u0301ntos nu\u0301meros vas a introducir despue\u0301s. A partir de la segunda li\u0301nea los nu\u0301meros que se van a sumar.",
    "output": "Imprimir la suma de todos los nu\u0301meros ( menos el de la primer li\u0301nea) . Si el nu\u0301mero introducido es menor a 1 la salida debera\u0301 ser Error.",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 7654
  },
  {
    "title": "Uniendo puntos",
    "url": "https://omegaup.com/arena/problem/Uniendo-puntos",
    "history": "De nin\u0303o siempre comprabas revistas para colorear y te gustaba la seccio\u0301n en la que uni\u0301as puntos numerados para formar una figura. Esas revistas no son tan populares como antes, pero te gustari\u0301a contar con un programa que simule la misma actividad. Si unes el punto 1 con el 2 mediante una recta, el 2 con el 3, . . . , el N - 1 con el N y finalmente el N con el 1 para cerrar el dibujo, \u00bfcua\u0301l fue la longitud total del trazo realizado?",
    "input": "Un entero N seguido de N parejas enteros que denotan las coordenadas X, Y de los puntos desde el punto 1 hasta el N. Puedes suponer que 2 \u2264 N \u2264 200 y que para cada punto se cumple que 0 \u2264 X, Y \u2264 100.",
    "output": "Un real con dos decimales de precisio\u0301n que sea la longitud del trazo realizado. E\u0301ste corresponde con la suma de las longitudes de cada recta dibujada. # NotaEste problema se puede resolver con los temas vistos en * Programacio\u0301n Estructurada* de la UAM Azcapotzalco.",
    "note": "",
    "topics": [
      "implementation",
      "geometry",
      "math"
    ],
    "id": 7551
  },
  {
    "title": "occ11nssf32",
    "url": "https://omegaup.com/arena/problem/occ11nssf32",
    "history": "# AcarreosHaga un programa que reciba como entrada dos nu\u0301meros naturales de a lo ma\u0301s 10 di\u0301gitos y que determine cua\u0301ntos acarreos se producen al sumar \u201ca mano\u201d esos nu\u0301meros. # Ejemplos| | input123 784| | output1| | input1547826 5478965324| | output6| | end",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "math",
      "strings",
      "implementation"
    ],
    "id": 7536
  },
  {
    "title": "01000101 01000001 01010011 01011001",
    "url": "https://omegaup.com/arena/problem/tonsOfBits",
    "history": "01000101 01000001 01010011 01011001 00001010 00001010 01010000 01110010 01101111 01100010 0110110001100101 01101101 01100001 00001010 00001010 01000100 01100001 01100100 01101111 00100000 0111010101101110 00100000 01101110 01110101 01101101 01100101 01110010 01101111 00100000 01110010 0110010101110000 01110010 01100101 01110011 01100101 01101110 01110100 01100001 01100100 01101111 0010000001100100 01100101 00100000 01101101 01100001 01101110 01100101 01110010 01100001 00100000 0110001001101001 01101110 01100001 01110010 01101001 01100001 00101100 00100000 01101001 01101101 0111000001110010 01101001 01101101 01100101 00100000 01100101 01101100 00100000 01101110 01110101 0110110101100101 01110010 01101111 00100000 01100101 01101110 00100000 01110010 01100101 01110000 0111001001100101 01110011 01100101 01101110 01110100 01100001 01100011 01101001 01101111 01101110 0010000001100100 01100101 01100011 01101001 01101101 01100001 01101100 00101110 00001010 00001010 0100010101101010 01100101 01101101 01110000 01101100 01101111 00001010 00001010 01000101 01101110 0111010001110010 01100001 01100100 01100001 00111010 00100000 00110001 00110000 00110000 00110001 0011000000110000 00110001 00001010 00001010 01010011 01100001 01101100 01101001 01100100 01100001 0011101000100000 00110111 00110011 00001010 00001010 01001100 01101001 01101101 01101001 01110100 0110010101110011 00001010 00001010 01001100 01100001 00100000 01100011 01100001 01100100 01100101 0110111001100001 00100000 01100100 01100101 00100000 01100101 01101110 01110100 01110010 01100001 0110010001100001 00100000 01110100 01100101 01101110 01100100 01110010 01100001 00100000 01100001 0010000001101100 01101111 00100000 01101101 01100001 01110011 00100000 00110110 00110100 00100000 0110001001101001 01110100 01110011 00101110 00001010 00000000",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "implementation",
      "strings",
      "math"
    ],
    "id": 7509
  },
  {
    "title": "\u00bfBuscando a Tavo?",
    "url": "https://omegaup.com/arena/problem/Buscando-a-Tavo",
    "history": "El equipo de ba\u0301squetbol de Tavo acaba de ganar la final y han decidido ir a festejar. Los amigos de la escuela de Tavo ya saben que es peligroso que Tavo se ponga \" happy\" , entonces le pidieron que se reporte con un mensaje, asi\u0301 ellos mediante su mensaje podra\u0301n saber su estado. Cuando Tavo se empieza a poner mal escribe asteriscos, tu trabajo es hacer un programa que te imprima que\u0301 tan mal esta\u0301 Tavo de acuerdo a los siguientes criterios. Si en toda la cadena no hay asteriscos o so\u0301lo hay uno, debes imprimir \" BIEN\" . Si en toda la cadena hay dos asteriscos significa que esta\u0301 un poquito happy, es decir comenzo\u0301 a hablar mucho, entonces imprimira\u0301s \" HAPPY\" . Si en toda la cadena encuentras tres o ma\u0301s asteriscos quiere decir que Tavo ya esta\u0301 muy mal y hay que ir a buscarlo, por lo que hay que imprimir \" BUSCAR A TAVO\" .",
    "input": "Una li\u0301nea que contiene el mensaje de Tavo.",
    "output": "Una li\u0301nea con el estado de Tavo de acuerdo al mensaje.",
    "note": "",
    "topics": [
      "math",
      "implementation",
      "strings"
    ],
    "id": 7468
  },
  {
    "title": "Bonitos tri\u00e1ngulos",
    "url": "https://omegaup.com/arena/problem/Locos-por-los-triangulos",
    "history": "\u00a1Brenda ha encontrado un nuevo pasatiempo! Ella encuentra fascinante estudiar sobre los poli\u0301gonos y sus propiedades. Para esta semana, ella se ha enfocado en los poli\u0301gonos de tres lados y en co\u0301mo calcular su a\u0301rea. Ayuda a Brenda a calcular el a\u0301rea de los tria\u0301ngulos que te pide. Ella te dara\u0301 la base y la altura, adema\u0301s de que tambie\u0301n te asegura que el a\u0301rea de los tria\u0301ngulos siempre sera\u0301 un nu\u0301mero entero.",
    "input": "Dos enteros B y H, cada uno en su propia li\u0301nea, los cuales representan la base y la altura del tria\u0301ngulo, respectivamente.",
    "output": "Un entero que representa el a\u0301rea del tria\u0301ngulo. Puedes suponer que su valor cabe en un entero de 32 bits.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 7402
  },
  {
    "title": "Calculando las tablas",
    "url": "https://omegaup.com/arena/problem/Calculando-las-tablas",
    "history": "Andrea es una maestra de primaria y quiere que sus alumnos aprendan las tablas de multiplicar. Cada clase les ensen\u0303ara\u0301 una nueva tabla, desde el 0 hasta el 10. Ayuda a Andrea a obtener una tabla de multiplicar; ella te dara\u0301 el nu\u0301mero de la tabla que quiere.",
    "input": "Un nu\u0301mero entero, N, entre 0 y 10.",
    "output": "La tabla de multiplicar del nu\u0301mero N.",
    "note": "",
    "topics": [
      "math",
      "implementation",
      "number theory"
    ],
    "id": 7392
  },
  {
    "title": "Verificando Boletos",
    "url": "https://omegaup.com/arena/problem/Verificando-Boletos",
    "history": "Los boletos en el sistema de transporte pu\u0301blico tienen nu\u0301meros u\u0301nicos, y se ha establecido un me\u0301todo para verificar si estos son verdaderos o falsos: Si la suma de di\u0301gitos en la primera mitad del nu\u0301mero es igual a la suma de di\u0301gitos en la segunda mitad, tal boleto se considera verdaderos. Los datos de entrada contienen el nu\u0301mero de di\u0301gitos del boleto a verificarLas siguientes li\u0301neas contienen los di\u0301gitos que componen el nu\u0301mero del boleto con una separacio\u0301n de espacio en blanco entre cada uno de ellos.",
    "input": "Contienen el nu\u0301mero de di\u0301gitos del boleto a verificarLas siguientes li\u0301neas contienen los di\u0301gitos que componen el nu\u0301mero del boleto con una separacio\u0301n de espacio en blanco entre cada uno de ellos.",
    "output": "Debe contener suma de la mitad de los di\u0301gitos y un 1 si es va\u0301lido y la suma de todos los di\u0301gitos y un 0 si es invalido",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 7349
  },
  {
    "title": "Ordenar de mayor a menor tres n\u00fameros",
    "url": "https://omegaup.com/arena/problem/Ordenar-Mayor-a-menor-3-numeros",
    "history": "Realiza un problema que ordene de mayor a menor tres nu\u0301meros.",
    "input": "Escribe tres nu\u0301meros enteros a, b y c",
    "output": "Los tres nu\u0301meros enteros introducidos pero ordenados de mayor a menor.",
    "note": "",
    "topics": [
      "sortings",
      "math",
      "implementation"
    ],
    "id": 7343
  },
  {
    "title": "El mayor de tres n\u00fameros",
    "url": "https://omegaup.com/arena/problem/El-mayor-de-tres-numeros",
    "history": "Realiza un problema que imprima el mayor de tres nu\u0301meros.",
    "input": "Escribe tres nu\u0301meros enteros a, b y c",
    "output": "El nu\u0301mero entero mayor de los tres nu\u0301meros introducidos.",
    "note": "",
    "topics": [
      "implementation",
      "math",
      "sortings"
    ],
    "id": 7341
  },
  {
    "title": "El mayor de dos n\u00fameros",
    "url": "https://omegaup.com/arena/problem/El-mayor-de-dos-numeros",
    "history": "Realiza un problema que imprima el mayor de dos nu\u0301meros.",
    "input": "Escribe dos nu\u0301meros enteros x_ 1 y x_ 2",
    "output": "El nu\u0301mero entero mayor de los dos nu\u0301meros introducidos.",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 7334
  },
  {
    "title": "Menor a Mayor",
    "url": "https://omegaup.com/arena/problem/Menor-a-Mayor",
    "history": "Realiza un problema que ordene de menor a mayor dos nu\u0301meros.",
    "input": "Escribe dos nu\u0301meros enteros x_ 1 y x_ 2",
    "output": "Los dos nu\u0301meros enteros introducidos pero ordenados de menor a mayor.",
    "note": "",
    "topics": [
      "implementation",
      "sortings",
      "math"
    ],
    "id": 7332
  },
  {
    "title": "MCD-facil",
    "url": "https://omegaup.com/arena/problem/MCD-facil",
    "history": "Saca el MCD de 2 nu\u0301meros.",
    "input": "En la primera li\u0301nea dos nu\u0301meros positivos mayores que cero separados por un espacio, los nu\u0301meros esta\u0301n comprendidos en el rango de [ 1, 263- 1] ( a partir del 1 y hasta el 9, 223, 372, 036, 854, 775, 807) .",
    "output": "Una sola li\u0301nea conteniendo un solo nu\u0301mero que representa el ma\u0301ximo comu\u0301n divisor ( MCD) de ambos nu\u0301meros.",
    "note": "",
    "topics": [
      "implementation",
      "graphs",
      "number theory",
      "math",
      "trees"
    ],
    "id": 7319
  },
  {
    "title": "Ciclista de alto rendimiento",
    "url": "https://omegaup.com/arena/problem/CiclistaOlimpico",
    "history": "Imaginemos una etapa ciclista cuyo trayecto tiene dos tramos muy distintos, de la misma longitud. En la primera mitad la carretera es estrecha y sinuosa, en continua pendiente y culmina en un puerto de primera categori\u0301a. Por eso, los organizadores estiman que en este primer trayecto la velocidad media del peloto\u0301n sera\u0301 de * * N* * km por hora. La segunda parte del trayecto es todo lo contrario: el firme es ancho y en ligero descenso, y tiene grandes rectas, lo que lo hace apto para que los corredores aceleren. Los organizadores calculan que la velocidad media durante el conjunto de la etapa sera\u0301 de * * M* * km por hora. # Problema\u00bfA que\u0301 velocidad media suponen los organizadores que rodara\u0301 el peloto\u0301n durante el recorrido total?",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 7250
  },
  {
    "title": "La construcci\u00f3n",
    "url": "https://omegaup.com/arena/problem/La-construccion",
    "history": "En una construccio\u0301n se esta\u0301n haciendo varias casas, pero el supervisor quiere saber cua\u0301nto tiempo va a tardar en terminarse la obra. Si un trabajador tarda en poner 300 ladrillos en una hora y cada casa tiene 1500 ladrillos, ayuda al supervisor a saber cua\u0301nto tiempo tardara\u0301 en terminarse la obra.",
    "input": "Dos enteros N y M separados por un espacio, donde N es el nu\u0301mero de trabajadores y M es el nu\u0301mero de casas. Puedes suponer que 0 < N, M < 10000.",
    "output": "La cadena H ` horas. ` donde H es un real impreso a un decimal que corresponde con el nu\u0301mero de horas tardara\u0301 la obra en terminarse.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 7232
  },
  {
    "title": "Profesor Reaper",
    "url": "https://omegaup.com/arena/problem/Profesor-Reaper",
    "history": "El profesor Reaper necesita de tu ayuda, su clase de fundamentos esta\u0301 muy saturada y con tantos proyectos no se da abasto para calificar a sus alumnos, ayude al profesor a calcular el promedio de 5 calificaciones de un alumno.",
    "input": "Cinco nu\u0301meros enteros.",
    "output": "El promedio redondeado a dos decimales.",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 7227
  },
  {
    "title": "El peso de Mar\u00eda",
    "url": "https://omegaup.com/arena/problem/El-peso-de-Maria",
    "history": "Mari\u0301a siente que pesa mucho y quiere bajar de peso, pero ella quiere llegar a su peso ideal. Ayuda a Mari\u0301a a llegar a su peso ideal.",
    "input": "Un numero P que es el peso de Mari\u0301a y un nu\u0301mero K que es su peso ideal. [ 0 < K < P < 300]",
    "output": "La cantidad de kilos que Mari\u0301a necesita bajar con el formato del ejemplo.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 7226
  },
  {
    "title": "Las ganancias de Juan",
    "url": "https://omegaup.com/arena/problem/Las-ganancias-de-Juan",
    "history": "Juan tiene una cuenta de banco con mucho dinero y lleva un registro de las ganancias que se ingresan en la cuenta para conocer el total de sus ganancias de 2 di\u0301as, pero tiene problemas con las sumas.",
    "input": "La u\u0301nica li\u0301nea de entrada contiene dos enteros separados por un espacio: A, B [ 0< A, B < = 10^ 13]",
    "output": "La u\u0301nica li\u0301nea de salida contiene un numero entero[ 0 < R < = 10^ 13] como se muestra en el ejemplo",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 7225
  },
  {
    "title": "Juanito va al mercado",
    "url": "https://omegaup.com/arena/problem/Juanito-va-al-mercado",
    "history": "Juanito va al mercado Hidalgo a comprar varias frutas y verduras cada sa\u0301bado. A lado del puesto donde compra hay un menu\u0301 con los precios: 1. - Manzana: 15/ kilo2. - Limo\u0301n: 20/ kilo3. - Zanahoria: 19/ kilo4. - Bro\u0301coli: 10/ pieza5. - Pepino: 10/ kilo6. - Cilantro: 5/ kiloJuanito quiere saber cua\u0301nto dinero llevar dependiendo de lo que le mande a comprar su mama\u0301 y te pide tu ayuda.",
    "input": "6 enteros n1, n2, . . . , n6 en una sola li\u0301nea que corresponde a la cantidad de kilos o piezas que debe comprar de cada producto. 0 < = ni < = 100.",
    "output": "1 so\u0301lo entero: el precio total que debe llevar Juanito.",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 7224
  },
  {
    "title": "Contando los enteros de la l\u00ednea",
    "url": "https://omegaup.com/arena/problem/Contando-los-enteros-de-la-linea",
    "history": "Escribe un programa que lea una secuencia de li\u0301neas y calcule cua\u0301ntos enteros hay en cada li\u0301nea adema\u0301s de su suma.",
    "input": "Una secuencia de li\u0301neas, donde cada li\u0301nea contiene cero o ma\u0301s enteros. Puedes suponer que cada li\u0301nea consta de a lo mucho 1000 caracteres y que u\u0301nicamente contiene enteros y espacios en blanco ( terminando en un salto de li\u0301nea) .",
    "output": "Para cada li\u0301nea, el nu\u0301mero de enteros en la li\u0301nea y la suma de los mismos.",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 7189
  },
  {
    "title": "El problema 3n+1",
    "url": "https://omegaup.com/arena/problem/El-problema-3n1",
    "history": "Dado un entero positivo N, el problema * 3n+ 1* consiste en determinar si es posible llegar a N = 1 aplicando repetidamente las siguientes operaciones: - Si N es par, divi\u0301delo entre 2. - Si N es impar, multipli\u0301calo por 3 y su\u0301male 1. Por ejemplo, si N comienza en 26 entonces N toma los valores 26, 13, 40, 20, 10, 5, 16, 8, 4, 2, 1. Se cree que siempre es posible llegar a 1 sin importar en que\u0301 entero positivo se comience. Escribe un programa que calcule el nu\u0301mero de pasos que se necesitan para que N se vuelva 1 y el valor ma\u0301s grande que toma N durante el ca\u0301lculo.",
    "input": "Un entero N. Puedes suponer que 1 \u2264 N \u2264 1000.",
    "output": "Dos enteros que denoten el nu\u0301mero de pasos que se necesitan para que N se vuelva 1 y el valor ma\u0301s grande que toma N durante el ca\u0301lculo.",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 7167
  },
  {
    "title": "Una sumatoria muy extra\u00f1a",
    "url": "https://omegaup.com/arena/problem/Sumatoria-de-sumatorias",
    "history": "Escribe un programa que evalu\u0301e el valor de \u2211_ i= m^ n i donde m = \u2211_ i= 1^ a i n = \u2211_ i= 1^ b i .",
    "input": "Dos enteros a, b. Puedes suponer que 1 \u2264 a \u2264 b \u2264 100.",
    "output": "Un entero que sea el valor de la fo\u0301rmula evaluada.",
    "note": "",
    "topics": [
      "implementation",
      "trees",
      "math",
      "divide and conquer",
      "graphs"
    ],
    "id": 7151
  },
  {
    "title": "Numeros al cubo?",
    "url": "https://omegaup.com/arena/problem/Numeros-al-cubo",
    "history": "Tendras que elevar un numero al cubo y luego dividirlo entre dos.",
    "input": "Un numero entero n.",
    "output": "El numero elevado al cubo y dividido entre dos ( Si la respuesta es decimal, truncar el decimal) .",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 7139
  },
  {
    "title": "Modificando un arreglo",
    "url": "https://omegaup.com/arena/problem/Modificando-un-arreglo",
    "history": "Dado un arreglo de N enteros que comienzan valiendo 0, escribe un programa que lea M i\u0301ndices y para cada i\u0301ndice incremente la variable correspondiente del arreglo.",
    "input": "Dos enteros N, M seguidos de una secuencia de M enteros. Puedes suponer que 1 \u2264 N \u2264 100, que 0 \u2264 M \u2264 1000 y que todos los i\u0301ndices esta\u0301n en el rango de 0 a N - 1.",
    "output": "Los N enteros del arreglo despue\u0301s de haber aplicado todos los incrementos.",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 7131
  },
  {
    "title": "La moda y sus signos",
    "url": "https://omegaup.com/arena/problem/La-moda-y-sus-signos",
    "history": "Dada una secuencia de N di\u0301gitos del 1 al 9 donde cada di\u0301gito puede aparecer con signo + o - , escribe un programa que determine que\u0301 di\u0301gito aparecio\u0301 ma\u0301s veces ( independientemente de los signos) y cua\u0301ntas veces aparecio\u0301 en su forma positiva y negativa.",
    "input": "Un entero N seguido de N di\u0301gitos del 1 al 9 en versiones positivas o negativas. Puedes suponer que 1 \u2264 N \u2264 1000.",
    "output": "Un entero que sea el di\u0301gito que aparecio\u0301 ma\u0301s veces, seguido de dos enteros que sean la cantidad de veces que aparecio\u0301 dicho di\u0301gito en su forma positiva y negativa. En caso de empate en apariciones, debe da\u0301rsele preferencia al di\u0301gito nume\u0301ricamente menor ( en magnitud) .",
    "note": "",
    "topics": [
      "implementation",
      "math",
      "strings"
    ],
    "id": 7126
  },
  {
    "title": "C\u00e1lculos iterativos",
    "url": "https://omegaup.com/arena/problem/Calculos-iterativos",
    "history": "Dado un entero N con valor inicial 0, modifi\u0301calo realizando los siguientes pasos en el orden indicado: - Su\u0301male al valor actual de N todos los nu\u0301meros impares que existen de 1 a A. - Re\u0301stale al valor actual de N todas las potencias de 2 que existen de 1 a B. - Si el valor actual de N es un mu\u0301ltiplo de C, divi\u0301delo entre C hasta que deje de serlo.",
    "input": "Tres enteros A, B, C. Puedes suponer que 2 \u2264 A, B, C \u2264 1000.",
    "output": "Un entero que sea el valor final de N.",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 7107
  },
  {
    "title": "Factorial Enorme",
    "url": "https://omegaup.com/arena/problem/Factorial-Enorme",
    "history": "Un nu\u0301mero Factorial esta\u0301 definido por: 0! = 1n! = n \u00d7( n- 1) ! Dado un entero n calcula el nu\u0301mero de di\u0301gitos que contiene n! .",
    "input": "Un entero n.",
    "output": "El nu\u0301mero de di\u0301gitos que contiene n!",
    "note": "",
    "topics": [
      "implementation",
      "number theory",
      "math"
    ],
    "id": 7106
  },
  {
    "title": "Los cargadores perdidos",
    "url": "https://omegaup.com/arena/problem/Los-cargadores-perdidos",
    "history": "En los u\u0301ltimos di\u0301as Fer ha perdido varios de sus cargadores, cada que pierde uno, su mama\u0301 termina compra\u0301ndole uno nuevo, sin embargo, cuando perdio\u0301 el u\u0301ltimo, su mama\u0301 le dijo que ya no le comprari\u0301a ma\u0301s y que adema\u0301s tendri\u0301a que pagarle a su mama\u0301 $ 1 peso por cada cargador que haya perdido. Lo u\u0301ltimo que recuerda Fer es que habi\u0301a perdido N cargadores, es decir, le teni\u0301a que pagar N pesos. Para pagarle a su mama\u0301, Fer reviso\u0301 su alcanci\u0301a y se dio cuenta que teni\u0301a muchas monedas, pero so\u0301lo eran monedas de M pesos. Co\u0301mo existi\u0301a la posibilidad de que no pudiera sumar exactamente N pesos con sus monedas, penso\u0301 en dos posibles opciones: a) podri\u0301a decirle a su mama\u0301 que habi\u0301a perdido menos de N cargadores o b) decirle que habi\u0301a perdido ma\u0301s de N cargadores; lo anterior lo penso\u0301 con la finalidad de que fuera posible pagarle usando u\u0301nicamente sus monedas de M pesos. Por ejemplo, si habi\u0301a perdido N= 5 cargadores y tuviera so\u0301lo monedas de M= 4 pesos, entonces no podri\u0301a formar exactamente $ 5 pesos con sus monedas de $ 4 pesos, por lo que podri\u0301a decirle a su mama\u0301 que perdio\u0301 0, 4, 8, 12, 16, 20, etc. . cargadores; pues cualquier de esas cantidades puede ser formada exactamente con monedas de $ 4 pesos. Al principio ambas opciones pareci\u0301an muy buenas ideas, pero luego se dio cuenta que si optaba por la opcio\u0301n de pagarle menos a su mama\u0301, sentiri\u0301a remordimiento, incluso sabi\u0301a que por cada peso menos que le pagara a su mama\u0301, su remordimiento aumentari\u0301a en B ( remordimiento por decir mentiras) ; y por otro lado, su coraje aumentari\u0301a en A por cada peso adicional que pagara ( coraje por regalar dinero) . Ante la indecisio\u0301n de si aumenta o disminuye la cantidad de dinero que le debe a su mama\u0301, quiere determinar cua\u0301l * \" sentimiento\" * ( remordimiento o coraje) seri\u0301a el que tendri\u0301a en menor cantidad.",
    "input": "Una li\u0301nea con cuatro nu\u0301mero enteros N, M, A, B, separados por espacio, que representan la cantidad de cargadores perdidos, el valor de cada moneda de Fer, la cantidad en la que aumentari\u0301a su coraje y la cantidad en la que aumentari\u0301a su remordimiento.",
    "output": "Imprime un u\u0301nico nu\u0301mero que represente el valor del sentimiento que tendri\u0301a en menor cantidad.",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 7096
  },
  {
    "title": "Jugando a los dardos",
    "url": "https://omegaup.com/arena/problem/Jugando-a-los-dardos",
    "history": "Considere un tablero de dardos formado por cinco ci\u0301rculos conce\u0301ntricos con radios a, b, c, d y e. Cada vez que un jugador lanza un dardo el puntaje obtenido sedetermina de acuerdo a las siguientes reglas: * El jugador obtiene 10 puntos si el dardo acierta en el ci\u0301rculo de radio a. * El jugador obtiene 8 puntos si el dardo acierta en el ci\u0301rculo de radio b. * El jugador obtiene 6 puntos si el dardo acierta en el ci\u0301rculo de radio c. * El jugador obtiene 4 puntos si el dardo acierta en el ci\u0301rculo de radio d. * El jugador obtiene 2 puntos si el dardo acierta en el ci\u0301rculo de radio e. Determine el puntaje total que puede obtener un jugador si puede lanzar 3 dardos.",
    "input": "Once reales p, q, r, s, t, u, a, b, c, d y e querepresentan las coordenadas x, y de cada dardo, asi\u0301 como los radios de cadaci\u0301rculo que forma el tablero. Puede asumir que 0 < a < b < c < d < e < 10 yque - 10 \u2264 p, q, r, s, t, v, \u2264 10.",
    "output": "Un entero que representa el puntaje total obtenido despue\u0301s de lanzar 3 dardos.",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 7094
  },
  {
    "title": "El lado m\u00e1s corto",
    "url": "https://omegaup.com/arena/problem/El-lado-mas-corto",
    "history": "Escribe un programa que, dadas las coordenadas de los ve\u0301rtices de un cuadrila\u0301tero, calcule la longitud de su lado ma\u0301s corto. ! [ enter image description here] [ 1]",
    "input": "Ocho reales x_ 1, y_ 1, x_ 2, y_ 2, x_ 3, y_ 3, x_ 4, y_ 4. Puedes suponer que 0 \u2264 x_ i, y_ i \u2264 100 y que los ve\u0301rtices se listan ordenados en el sentido de las manecillas del reloj.",
    "output": "Un real que sea la longitud del lado ma\u0301s corto del cuadrila\u0301tero. Tu programa se considerara\u0301 correcto si el valor calculado es razonablemente cercano a la respuesta exacta.",
    "note": "",
    "topics": [
      "math",
      "sortings",
      "implementation"
    ],
    "id": 7093
  },
  {
    "title": "\u00bfQu\u00e9 probabilidad hay?",
    "url": "https://omegaup.com/arena/problem/Que-probabilidad-hay",
    "history": "Como es bien sabido, cuando dejas a oli\u0301mpicos juntos sin cuidador, pronto empezaran a realizar juegos y travesuras. Esta noche, despue\u0301s de comer pizza se dispusieron a jugar \" \u00bfQue\u0301 probabilidad hay? \" Un juego de retos en el que dos personas dicen dos nu\u0301meros entre 1, 2 y 3; si son iguales, la persona retada debe cumplir lo que se acordo\u0301; si no, no pasa nada. Pasado el rato se empezaron a aburrir, por lo que decidieron cambiar las reglas. Ahora el retador escribira\u0301 un numero oculto, el retado dira\u0301 tres nu\u0301meros diferentes entre 1 y K, si uno de ellos es el mismo que el numero escrito, entonces el retado debe cumplir el reto. Con estas reglas se preguntaron cual deberi\u0301a ser la mejor K, por ello decidieron crear un programa que dado la K les diga la posibilidad de que se tenga que cumplir el reto.",
    "input": "El nu\u0301mero K.",
    "output": "La probabilidad de que el reto se deba cumplir con una precision de 10^ - 5.",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 7071
  },
  {
    "title": "Podran resolverlo?",
    "url": "https://omegaup.com/arena/problem/Podran-resolverlo",
    "history": "Kuko ha recibido el primer problema de los oli\u0301mpicos para los pequen\u0303os padawans ( aprendices) y esta\u0301 preocupado porque no sabe si podra\u0301n resolverlo. Actualmente hay 8 olimpiquitos, y cada uno de ellos tiene un nivel de habilidad. Los niveles de habilidad de los oli\u0301mpicos son a_ 1, a_ 2, a_ 3, a_ 4, a_ 5, a_ 6, a_ 7 y a_ 8 . Podra\u0301n resolver un problema con dificultad K, si el promedio de las habilidades de todos los oli\u0301mpicos es mayor o igual a K, es decir: a_ 1+ a_ 2+ a_ 3+ a_ 4+ a_ 5+ a_ 6+ a_ 7+ a_ 8/ 8\u2265 K Ayuda a Kuko a saber si podra\u0301n o no resolverlo",
    "input": "Uni\u0301ca u\u0301nica li\u0301nea con los 8 niveles de habilidad de los oli\u0301mpicos a_ 1, a_ 2, a_ 3, a_ 4, a_ 5, a_ 6, a_ 7, a_ 8 y un nu\u0301mero K la dificultad del problema. Todos estos nu\u0301meros son enteros.",
    "output": "Imprime \" lo lograran! \" en caso de que puedan resolverlos o \" Aun son muy malos\" en el caso contrario. La salida NO debe llevar comillas.",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 7070
  },
  {
    "title": "El tablero en forma de dona",
    "url": "https://omegaup.com/arena/problem/El-tablero-en-forma-de-dona",
    "history": "Despue\u0301s de jugar un juego de ajedrez con uno de tus amigos se te ocurrio\u0301 unaidea extran\u0303a. \u00bfQue\u0301 sucederi\u0301a si pudieras enrollar el tablero de manera que losbordes del tablero estuvieran conectados? . Es decir el borde izquierdo estari\u0301aconectado con el borde derecho y el borde superior estari\u0301a conectado con elborde inferior. ! El resultado seri\u0301a un tablero de ajedrez en forma de dona! Cualquier pieza quese moviera ma\u0301s alla de alguno de los bordes del tablero acabari\u0301a por pasar alborde opuesto. Esto deberi\u0301a ocurrir incluso si el tablero fuera ma\u0301s pequen\u0303o oma\u0301s grande de lo normal. Para probar tu idea tomaste una hoja de papel y dibujaste un tablero de ajedrezasignando una coordenada a cada casilla, empezando por la esquina superiorizquierda a la que le asignaste la coordenada ( 0, 0) . Una vez hecho estoenrollaste el tablero para dejarlo en forma de dona y ver que sucedi\u0301a con elmovimiento de una pieza.",
    "input": "Seis enteros W, H, X, Y, R, S que denotan el ancho W y alto Hdel tablero, la coordenada inicial ( X, Y) de la pieza, el nu\u0301mero de casillasR que la pieza se mueve de manera horizontal y el nu\u0301mero de casillas S quese mueve de manera vertical. Puedes asumir que 1 \u2264 W, H \u2264 10, X, Y \u2264 H y que - 20 \u2264 R, S \u2264 20. Asuma que la pieza se mueveprimero en la direccio\u0301n horizontal y despue\u0301s en la direccio\u0301n vertical.",
    "output": "Dos enteros que represental las coordenadas finales de la pieza.",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 7066
  },
  {
    "title": "C\u00e1lculos condicionales",
    "url": "https://omegaup.com/arena/problem/Calculos-condicionales",
    "history": "Eres muy bueno evaluando fo\u0301rmulas y realizando ca\u0301lculos directos, pero te cuesta trabajo decidir en que\u0301 situaciones se deben hacer que\u0301 operaciones. Un compan\u0303ero te sugirio\u0301 un ejercicio de ca\u0301lculo mental que consiste en, dado un nu\u0301mero inicial N, realizar las siguientes operaciones en el orden indicado y con enteros: 1. Si el valor actual de N es par, divi\u0301delo entre 2. En caso contrario, su\u0301male 1. 2. Si el valor actual de N tiene tres o ma\u0301s cifras, divi\u0301delo entre 100. Pero si tiene exactamente dos cifras, divi\u0301delo entre 10. 3. Si el valor actual de N es un mu\u0301ltiplo de tres, re\u0301stale uno. Escribe un programa que te ayude a calcular el valor final de N y el nu\u0301mero de veces que N fue modificado.",
    "input": "Un entero N. Puedes suponer que 1 \u2264 N \u2264 1000.",
    "output": "Dos enteros que correspondan con el valor final de N y el nu\u0301mero de veces que N fue modificado respectivamente.",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 7050
  },
  {
    "title": "Selecci\u00f3n de estudiantes",
    "url": "https://omegaup.com/arena/problem/Seleccion-de-estudiantes",
    "history": "U\u0301ltimamente en la Escuela Superior de Co\u0301mputo el concurso anual de programacio\u0301n ha tomado mucha importancia. Esto se debe a que los mejores competidores se reunen para demostrar sus habilidades y llevar el honor a casa, es por eso que en esta edicio\u0301n los directivos propusieron un problema con la intencio\u0301n de ir detectando a los mejores talentos de la escuela que nos podri\u0301an representar en las siguientes finales mundiales. Este problema no fue fa\u0301cil de escoger, largas horas de discusio\u0301n tuvieron que pasar para llegar a un acuerdo, inclusive dentro de estas discusiones surgieron otros problemas al hablar de este problema, pero eso es otra historia. Sin embargo, los directivos plantearon el problema y tuvieron que continuar con los preparativos, lo u\u0301nico malo es que no esta\u0301n seguros si la solucio\u0301n del problema es polinomial, quiza\u0301 tu\u0301 puedas ayudarlos. Ellos dejaron dos nu\u0301meros anotados en el pizarro\u0301n, tu tarea consiste en multiplicarlos e imprimir el u\u0301ltimo di\u0301gito de dicha multiplicacio\u0301n.",
    "input": "Las primeras 2 li\u0301neas contendra\u0301n los nu\u0301meros A y B ( 1 \u2264 A, B \u2264 10^ 1000000) .",
    "output": "El u\u0301ltimo di\u0301gito de la multiplicacio\u0301n de los 2 nu\u0301meros.",
    "note": "",
    "topics": [
      "math",
      "strings"
    ],
    "id": 7040
  },
  {
    "title": "Los tacos de Juan",
    "url": "https://omegaup.com/arena/problem/Los-tacos-de-Juan",
    "history": "Juan estaba organizando una taquiza para sus amigos, despue\u0301s de mucho pensarlo determino\u0301 que una cantidad N de tacos seri\u0301a suficiente para dejar satisfechos a todos. La taqueri\u0301a favorita de Juan ofrece los siguientes precios a sus clientes: * Cada taco tiene un costo de 10 pesos. * Una orden de O tacos cuesta 50 pesos. * Un plato\u0301n de P tacos cuesta 250 pesos. * Una canasta de C tacos cuesta 1500 pesos. Sabes que el costo por taco de una canasta es menor que el costo por taco de un plato\u0301n, que este costo es menor al costo por taco de una orden y que este costo es menor que el costo de comprar un taco individual. Adema\u0301s, Juan siempre querra\u0301 gastar lo menos posible. \u00bfCua\u0301ntos tacos individules, ordenes, platones y canastas de tacos compro\u0301 Juan? \u00bfCua\u0301l es el costo total?",
    "input": "Cuatro enteros N, O, P, C que denotan el nu\u0301mero de tacos que necesitacomprar Juan, y el nu\u0301mero de tacos en una orden, plato\u0301n y canastarespectivamete. Puede suponer que 1 \u2264 N \u2264 1000000 y que 2 \u2264 O, P, C\u2264 10000.",
    "output": "Cinco enteros que denotan el costo total de los tacos, asi\u0301 como el nu\u0301mero detacos individuales, ordenes, platones y canastas que compro Juan.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 7014
  },
  {
    "title": "La banda robatamales",
    "url": "https://omegaup.com/arena/problem/La-banda-robatamales",
    "history": "La banda robatamales ha asestado un nuevo golpe y esta\u0301n por repartirse el delicioso boti\u0301n. El li\u0301der de la banda se quedara\u0301 con la mitad de los tamales ( si el total es impar, tambie\u0301n se quedara\u0301 con el tamal sobrante) y los dema\u0301s se repartira\u0301n de manera equitativa entre el resto de la banda. Los tamales que no puedan repartirse equitativamente sin partirlos tambie\u0301n se los quedara\u0301 su li\u0301der. \u00bfCua\u0301ntos tamales se comera\u0301 el li\u0301der de la banda?",
    "input": "Dos enteros T, B que denotan el nu\u0301mero de tamales robados y el nu\u0301mero de miembros de la banda ( incluyendo al li\u0301der) . Puedes suponer que 0 \u2264 T \u2264 1, 000, 000 y que 2 \u2264 B \u2264 100.",
    "output": "Un entero que sea el nu\u0301mero de tamales que se comera\u0301 el li\u0301der de la banda.",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 7008
  },
  {
    "title": "Sistemas de ecuaciones con una soluci\u00f3n",
    "url": "https://omegaup.com/arena/problem/Sistemas-de-ecuaciones-1sol",
    "history": "Dado un sistema de dos ecuaciones lineales con una u\u0301nica solucio\u0301n: a_ 1x + b_ 1y = c_ 1 a_ 2x + b_ 2y = c_ 2 Encuentra los valores x, y de su solucio\u0301n.",
    "input": "Seis reales a_ 1, b_ 1, c_ 1, a_ 2, b_ 2, c_ 2. Puedes suponer que todos los reales esta\u0301n en el rango de 1 a 100 y que el sistema tiene exactamente una solucio\u0301n.",
    "output": "Dos reales que corresponden con los valores de x, y de la solucio\u0301n del sistema. Tu programa se considerara\u0301 correcto si los valores calculados son razonablemente cercanos a las respuestas exactas.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 7007
  },
  {
    "title": "La hora en un planeta lejano",
    "url": "https://omegaup.com/arena/problem/La-hora-en-un-planeta-lejado",
    "history": "En un planeta muy extran\u0303o, los minutos son de 50 segundos, las horas de 70 minutos y los di\u0301as de 12 horas. Ya que planeas ir de vacaciones a ese planeta, te gustari\u0301a tener un reloj que dado un nu\u0301mero de segundos S, te despliegue el nu\u0301mero de di\u0301as, horas, minutos y segundos de ese planeta. Por ejemplo, para S = 3553 han transcurrido 0 di\u0301as, 1 hora, 1 minuto y 3 segundos. Escriba un programa para que tu reloj funcione correctamente.",
    "input": "Un entero S. Puedes suponer que 0 \u2264 S \u2264 1, 000, 000.",
    "output": "Cuatro enteros que denoten el nu\u0301mero de di\u0301as, horas, minutos y segundos que han transcurrido.",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 7004
  },
  {
    "title": "Evaluando f\u00f3rmulas en sucesi\u00f3n",
    "url": "https://omegaup.com/arena/problem/Evaluando-formulas-en-sucesion",
    "history": "Cada vez eres mejor en matema\u0301ticas y ahora esta\u0301s practicando con mu\u0301ltiples fo\u0301rmulas en sucesio\u0301n. Es decir, el resultado de una fo\u0301rmula lo usara\u0301s para evaluar otra fo\u0301rmula y asi\u0301 sucesivamente hasta obtener el resultado final. Como esta\u0301s aprendiendo a programar, crees que podri\u0301as ayudarte de programas de computadora para facilitar tu labor. Las fo\u0301rmulas con las que trabajara\u0301s esta vez son: y = x + 5/ 2( x + 1) z = y^ 2 + x( x - 2y) / xy Escribe un programa que calcule el valor de z dado x.",
    "input": "Un real x. Puedes suponer que 1 \u2264 x \u2264 100.",
    "output": "Un real que sea el valor de z. El valor se considerara\u0301 correcto si esta\u0301 razonablemente cercano a la respuesta exacta.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 7002
  },
  {
    "title": "C\u00e1lculos mentales competitivos",
    "url": "https://omegaup.com/arena/problem/Calculos-mentales-competitivos",
    "history": "Tu mejor amigo y tu\u0301 siempre sacan la mejor calificacio\u0301n en matema\u0301ticas ( y adema\u0301s acaban los exa\u0301menes al mismo tiempo) , por lo que siempre han tenido la duda de quie\u0301n es el mejor haciendo ca\u0301lculos. Un di\u0301a, un compan\u0303ero de ambos los reto\u0301 a que jugaran un reto de ca\u0301lculo mental; el que lo resolviera primero seri\u0301a el mejor en matema\u0301ticas de la escuela. El reto consiste en, dado un nu\u0301mero inicial R: - Calcular el resultado de R + 5. - Al resultado anterior, elevarlo al cuadrado. - Al resultado anterior, dividirlo entre un tercio del nu\u0301mero original R. - Al resultado anterior, elevarlo al cubo. Como el ti\u0301tulo de ser el mejor de matema\u0301ticas en la escuela es sumamente importante, tendra\u0301s un di\u0301a para practicar. Escribe un programa que te ayude a verificar los resultados que vas realizando a cada paso.",
    "input": "Un real R. Puedes suponer que 1 \u2264 R \u2264 20.",
    "output": "Cinco reales separados por espacios, donde el primer real es el nu\u0301mero original y los siguientes cuatro son los resultados obtenidos despue\u0301s de aplicar cada paso en sucesio\u0301n. Tu programa se considerara\u0301 correcto si los valores calculados son razonablemente cercanos a las respuestas exactas.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 7001
  },
  {
    "title": "Programando f\u00f3rmulas raras",
    "url": "https://omegaup.com/arena/problem/Programando-formulas",
    "history": "Te gustan mucho las matema\u0301ticas pero no eres muy ra\u0301pido haciendo los ca\u0301lculos manualmente. Como esta\u0301s aprendiendo a programar, crees que podri\u0301as solucionar este problema haciendo un programa que sea capaz de evaluar ra\u0301pidamente ciertas expresiones aritme\u0301ticas. Para probar tus habilidades, has dedicido escribir un programa que evalu\u0301e una fo\u0301rmula que tu\u0301 inventaste, la cual es: x + x( y + z^ 2) / ( x + \u03c0) ( y + \u03c0) Escribe un programa que calcule el resultado de evaluar la fo\u0301rmula anterior.",
    "input": "Tres reales x, y, z. Puedes suponer que 0 \u2264 x, y, z \u2264 1000.",
    "output": "Un real que sea el valor de la fo\u0301rmula evaluada. Tu programa se considerara\u0301 correcto si el valor calculado es razonablemente cercano a la respuesta exacta.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 6995
  },
  {
    "title": "alemova el olvidadizo",
    "url": "https://omegaup.com/arena/problem/el-olvidadizo",
    "history": "# descripcionComo ya era de esperarse el buen alemova no pudo pasar al nacional : ( y ya es hora de regresar a clases, sin embargo de tanto tiempo encerrado con su amigo velazquez12, pues alemova olvido como contar despues de tantos codigos, y desagraciadamen su prfesora de literatura lo puso contar cuantas letras contenia un texto. # problemaalemova olvido contar y tu como su gran amigo crearas un programa que le ayudara saber cuantas letras contiene un texto con el numero de palabras desconocidas, la unica ayuda que se proporciona es que el texto terminara en un punto \" . \" el cual estara separado de la ultima palabra y ademas los espacios tampoco cuentan.",
    "input": "un texto de taman\u0303o desconocido.",
    "output": "un solo entero que te dira cuantas letras hay en total en el texto. | | inputaprende a contar . | | output14| | end# limitesno hay limites rifate krnal.",
    "note": "",
    "topics": [
      "math",
      "implementation",
      "strings"
    ],
    "id": 6992
  },
  {
    "title": "la venganza de velazquez12",
    "url": "https://omegaup.com/arena/problem/la-venganza-12",
    "history": "# descripcionomar me esta ensen\u0303ando a hacer problemas en Omegaup ( saludos racita) # problemacomo omar se enojo conmigo por etiquetarlo en una publicacion de su ex la ya conocida Tia el me va a etiquetar en N publicaciones por cada K veces que le recuerde a su gran amor",
    "input": "reciviras N y K segun corresponda",
    "output": "numero en memes que sere etiquetado. | | input4 2| | output8| | end# limiteslos limites seran las veces que omar lloro por la tia",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 6991
  },
  {
    "title": "Torres De Hanoi",
    "url": "https://omegaup.com/arena/problem/TDH",
    "history": "# DescripcionUn dia despertaste muy RecursivoDpsisimoMatematico y decidiste resolver un problema de logica ( rara forma de espertar la tuya) , entonces buscas en los juguetes de la primaria u encuentras 3 torres con N aros, el juego consiste en que debes de mover todos los arosque estan en la torre 1 a la torre 3, en el menor numero de pasos para lograr una puntuacion exelente. # Reglaspara poder resolver este puzzle logico MatematicoDinamicosorecursivisimo constas de las siguientes reglas1) los aros en la torre uno siempre empezaran ordenados de menor a mayor de arriba hacia abajo. 2) para moverlos puedes utilizar la torre 2 que te servira como auxiliar. 3) la pila en la torre final siempre tiene que quedar igual que al principio es decir del aro mas pequen\u0303o al mas grande ( de arriba hacia abajo) . 4) no puedes pones un disco mas grande sobre uno mas pequen\u0303o, ya que se romperan por ser chinos ademas es trampa, incluso un simeo lo sabe. 5) solo se puede mover un disco a la vez. # Problemarecibiras un numero N donde N es el numero de discosy en donde ( 1 < = N < = 100)",
    "input": "",
    "output": "el numero de pasos minimos que necesitas para mover la pila de discos a la ultima torre# Ejemplo Basicopara mover 3 discos de la torre 1 a la torre 3 necesitamos 7 pasos ya que podemos tomar el disco 1 y moverlo a la torre 3 ( llevando 1 paso) tomar el disco 2 y ponerlo en la torre 2 ( llevando 2 pasos) tomar el disco 1 y ponerlo arriba del disco 2 en la torre 2 ( llevando 3 pasos) , movemos el disco 3 ( el mas grande) y lo ponemor en la torre 3 ( llevando 4 pasos) , movemos el disco 1 de la torre 2 a la torre uno ( llevando 5 pasos) tomamos el disco 2 de la torre 2 y lo ponemos en la torre 3 ( llevando 6 pasos) y por ultimo tomamos el disco 1 y lo ponemos en la torre 3 asi terminandoel puzzle con 7 pasos| | input24| | output16777215| | input16| | output65535| | input1| | output1| | input3| | output7| | end# limitessiempre diviertete : )",
    "note": "",
    "topics": [
      "number theory",
      "dp",
      "math"
    ],
    "id": 6978
  },
  {
    "title": "Ahorros",
    "url": "https://omegaup.com/arena/problem/Ahorros",
    "history": "Stanley es bastante precavido con su dinero, por lo que el siempre esta\u0301 al tanto de cada centavo que gasta. Los pocos amigos que tiene lo consideran econo\u0301mico, abstemio y parsimonioso. En otras palabras, Stanley es un tacan\u0303o. Stanley nunca va de compras sin cupones, pero en este momento de encuentra un poco confundido. Hay tres productos que quiere comprar, cuyos precios son p_ 1, p_ 2, p_ 3. Los cupones que e\u0301l trae ofrecen lo siguiente: uno de ellos le permite ahorrar el c_ 1",
    "input": "La entrada consiste en dos li\u0301neas. La primera contiene tres enteros positivos p_ 1 , p_ 2 , p_ 3 que son los precios de los tres objetos que se van a comprar . La segunda linea contiene tres enteros positivos c_ 1 , c_ 2 , c_ 3 donde c_ 1 es el cupo\u0301n cuyo descuento aplica en toda la compra ( no puede ser utilizado con ningu\u0301n otro cupo\u0301n) , mientras que c_ 2 y c_ 3 son cupones que se pueden aplicar a un solo producto ( se puede usar juntos, pero no sobre el mismo producto) .",
    "output": "Si usar u\u0301nicamente c_ 1 le permite ahorrar a Stanley ma\u0301s dinero, muestra la palabra one seguido de la cantidad ahorrada por Stanley. En caso de que le sea mas conveniente usar c_ 2 y c_ 3, muestra la palabra two seguido de la cantidad ahorrada . La cantidad ahorrada debe ser desplegada con dos di\u0301gitos despue\u0301s del punto decimal",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 6961
  },
  {
    "title": "Voltaje",
    "url": "https://omegaup.com/arena/problem/Voltaje",
    "history": "* * Alessandro Giuseppe Antonio Anastasio Volta* * ha pedido tu ayuda para calcular el * * voltaje* * , da\u0301ndote como datos la Intensidad I y la Resistencia R, * * \u00bfCrees poder ayudarlo? * * . ! [ enter image description here] [ 1]",
    "input": "Los nu\u0301meros I seguido de la letra * * A* * * ( Amperios) * y R seguido de la palabra * * Ohmios* * .",
    "output": "El nu\u0301mero V seguido de la letra * * V* *",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 6959
  },
  {
    "title": "Cada Segundo Cuenta ",
    "url": "https://omegaup.com/arena/problem/Cada-Segundo-Cuenta-",
    "history": "Meredith tiene un servicio de taxis llamado Ruber , el cual ofrece viajes a clientes en pequen\u0303os pueblos ubicados al oeste de Pennsylvania . Ella quiere obtener hasta el u\u0301ltimo centavo posible de cada cliente que viaje en alguno de sus taxis , por lo que sus conductores cobran una tarifa fija no por minuto , por segundo . Dada esta tarifa tan peculiar , es muy importante saber con exactitud el tiempo que pasa desde que los clientes entran a un taxi , hasta que llegan a su destino . Meredith ha tenido problemas tratando de escribir un programa que haga eso , por lo que te ha pedido ayuda.",
    "input": "La entrada consiste en dos lineas : la primera contiene la hora de inicio de un viaje , mientras que la segunda contiene la hora en la que el viaje termino ( esto para un solo taxi) . Cada hora esta dada con el siguiente formato : hh : mm : ss , horas , minutos y segundos , respectivamente . Meredith usa un reloj de 24 horas , por lo que 0 : 0 : 0 representa medianoche y 23 : 59 : 59 representa un segundo antes de medianoche . Observa que la hora en la que termina un viaje puede ser menor a la hora de inicio , esto en caso de que el viaje abarque medianoche ( observa el ultimo ejemplo) .",
    "output": "El nu\u0301mero de segundos que han pasado desde el comienzo del viaje hasta el final de este . Ningu\u0301n viaje tendra\u0301 una duracio\u0301n mayor o igual a 24 horas .",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 6952
  },
  {
    "title": "Intensidad de la Corriente El\u00e9ctrica",
    "url": "https://omegaup.com/arena/problem/Intensidad",
    "history": "* * Charly- Augus* * te ha encargado calcular la * * Intensidad de la Corriente Ele\u0301ctrica* * * ( I) * , a partir de los datos de la * * Carga Ele\u0301ctrica* * * ( Q) * y el * * Tiempo* * * ( t) * . ! [ enter image description here] [ 1]",
    "input": "Los nu\u0301meros Q seguido de la letra * * C* * * ( culombio) * y t seguido de la letra * * s* * * ( segundos) * .",
    "output": "El nu\u0301mero I seguido de la letra * * A* * * ( Amperios) * .",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 6945
  },
  {
    "title": "IMC",
    "url": "https://omegaup.com/arena/problem/IMC",
    "history": "Para * * calcular* * el * * IMC* * de una persona, se necesita saber su estatura h y peso p. ! [ enter image description here] [ 1]",
    "input": "La estatura h y el peso p.",
    "output": "Su * * IMC redondeado a 2 decimales* * y si es * * Infra Peso* * , * * Peso Normal* * , * * Sobre Peso* * , * * Obesidad Leve* * , * * Obesidad Media* * u * * Obesidad Morbida* * .",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 6944
  },
  {
    "title": "Temperatura",
    "url": "https://omegaup.com/arena/problem/Temperatura",
    "history": "* * Andy Celsius* * quiere saber a cua\u0301nto equivale su temperatura * ( \u00b0C) * en * * otras escalas de temperatura* * de sus bros * * Gaby Dani Fahrenheit* * * ( \u00b0F) * , * * Willy Thompson Kelvin* * * ( \u00b0K) * y * * Willy Rankine* * * ( \u00b0R) * . ! [ enter image description here] [ 1]",
    "input": "El nu\u0301mero entero C que representa a la * * temperatura* * de * * Andy* * .",
    "output": "Los nu\u0301meros F, K y R, representando a las * * temperaturas* * de los * * bros* * de * * Andy* * .",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 6943
  },
  {
    "title": "Hom\u00f3logo",
    "url": "https://omegaup.com/arena/problem/Homologo",
    "history": "Tu\u0301 profe de Mate te ha impartido el tema de * * Semejanza* * . E\u0301l te dara\u0301 los valores a y b de un tria\u0301ngulo y el valor a_ 1 de otro tria\u0301ngulo, y te ha pedido que calcules el valor faltante x de ese tria\u0301ngulo. ! [ enter image description here] [ 1]",
    "input": "Los nu\u0301meros enteros a, b y a_ 1.",
    "output": "El nu\u0301mero x.",
    "note": "",
    "topics": [
      "math",
      "implementation",
      "constructive algorithms"
    ],
    "id": 6941
  },
  {
    "title": "Programa de amor",
    "url": "https://omegaup.com/arena/problem/Programa-de-amor",
    "history": "Estas en el laboratorio de informa\u0301tica, eres un gran programador y a tu lado esta tu cruhs y le dices que has hecho un programa que indica si \" ELLA TE AMA\" osi \" ELLA NO TE AMA\" . Si los tres nu\u0301meros que te da son diferente la salida es ella no te ama en caso contrario ella te ama.",
    "input": "Tres numeros enteros N, M y A.",
    "output": "Solo hay dos respuestas \" ELLA TE AMA\" o\" ELLA NO TE AMA\" ( sin comillas) .",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 6936
  },
  {
    "title": "Convertidor",
    "url": "https://omegaup.com/arena/problem/OMI2018-Convertidor",
    "history": "La numeracio\u0301n biyectiva es un sistema en que todos los enteros positivos pueden ser representados de exactamente una forma. La numeracio\u0301n biyectiva base 26 usa el alfabeto para representar 26 di\u0301gitos del 1 al 26( A= 1, B= 2, C= 3, . . . , Z= 26, AA= 27, AB= 28, . . . ) . En la numeracio\u0301n biyectiva 26 no se usala letra N\u0303. Esta numeracio\u0301n se usa en las hojas de ca\u0301lculo. # ProblemaEscribe un programa que convierta un entero de sistema decimal a una cadena que representa su valor biyectivo 26 y viceversa.",
    "input": "En la primera li\u0301nea un entero T que indica el tipo de conversio\u0301n que vas a hacer ( 0 = de decimal a cadena, 1 = de cadena a decimal) En la segunda li\u0301nea un entero X o una cadena S dependiendo del tipo de conversio\u0301n.",
    "output": "La cadena S que representa a X si la conversio\u0301n es de tipo 0, o el entero X que representa a la cadena S si la conversio\u0301n es de tipo 1.",
    "note": "",
    "topics": [
      "math",
      "implementation",
      "strings"
    ],
    "id": 6918
  },
  {
    "title": "pH",
    "url": "https://omegaup.com/arena/problem/pH",
    "history": "* * El Sr. pH* * te ha pedido * * calcular* * si su valor n representa un * * A\u0301cido, Base o Neutro* * , es por esto, que pide tu ayuda. \u00bfTe crees capaz?",
    "input": "Debera\u0301s ingresar un nu\u0301mero entero n, do\u0301nde n representa al * * valor del pH* * .",
    "output": "La palabra * * Acido, Base o Neutro* * dependiendo de los valores del pH, en caso de que el valor del pH no exista imprime * * Are you kidding me? * * .",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 6910
  },
  {
    "title": "Porcentaje Volumen a Volumen",
    "url": "https://omegaup.com/arena/problem/Porcentaje-Volumen-a-Volumen",
    "history": "* * Un qui\u0301mico loco* * te ha pedido * * calcular* * el * * porcentaje en volumen* * p de una sustancia cualquiera. E\u0301l dice que no podra\u0301s ayudarle, \u00bfCrees poder?",
    "input": "Debera\u0301s ingresar 3 nu\u0301meros, n, k y s, do\u0301nde n y k representando cada uno el * * volumen del soluto* * y s el * * volumen del solvente* * .",
    "output": "El nu\u0301mero p representado al * * porcentaje en volumen* * de la sustancia redondeado a * * dos decimales* * .",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 6909
  },
  {
    "title": "Avogadro",
    "url": "https://omegaup.com/arena/problem/Avogadro",
    "history": "* * Amedeo Avogadro* * te ha pedido calcular que\u0301 * * volumen* * v, ocupara\u0301 n moles de una mole\u0301cula cualquiera en condiciones normales de temperatura y presio\u0301n.",
    "input": "El nu\u0301mero n * ( moles) * .",
    "output": "El nu\u0301mero v * ( volumen) * , * * redondeado a 3 decimales* * .",
    "note": "",
    "topics": [
      "graphs",
      "trees",
      "implementation",
      "math"
    ],
    "id": 6901
  },
  {
    "title": "Mol",
    "url": "https://omegaup.com/arena/problem/Mol",
    "history": "Tu\u0301 maestra de qui\u0301mica te ha encargado calcular * * cua\u0301ntos moles* * hay en n gr. de una mole\u0301cula cualquiera, da\u0301ndote el pm * ( peso molecular) * .",
    "input": "El nu\u0301mero n seguido del nu\u0301mero pm.",
    "output": "El nu\u0301mero m * ( mol) * , que contiene una mole\u0301cula cualquiera, * * redondeado a 2 decimales* * .",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 6899
  },
  {
    "title": "Porcentaje en masa",
    "url": "https://omegaup.com/arena/problem/Lavoisier",
    "history": "Nuestro padre * * Antoine Lavoisier* * nos ha pedido * * calcular* * el * * porcentaje en masa* * de las sustancias. \u00bfPodra\u0301s ayudarlo con esta tarea?",
    "input": "Debera\u0301s ingresar dos enteros positivos n y k, do\u0301nde n representa a la * * masa del soluto* * y k a la * * masa del solvente* * .",
    "output": "El nu\u0301mero p representado al * * porcentaje en masa* * de la sustancia redondeado a dos decimales.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 6897
  },
  {
    "title": "Pastes al tanteo",
    "url": "https://omegaup.com/arena/problem/itp18-pastes",
    "history": "\u00a1Llego\u0301 la hora de la comida en el * * 1er Concurso de Programacio\u0301n del Instituto Tecnolo\u0301gico de Pachuca* * ! Para la comida los organizadores pidieron una caja llena de pastes de los siguientes sabores: - Papa con carne- Mole verde- Hawaiano- ZarzamoraLos organizadores habi\u0301an ya preguntado a cada concursante cua\u0301ntos pastes iban a querer de cada sabor; pero cuando fueron a comprarlos olvidaron la lista y para no regresar con las manos vaci\u0301as compraron lo que se les ocurrio\u0301 en el momento. Tu tarea es decir si los organizadores compraron suficientes pastes para satisfacer lo que los concursantes pidieron originalmente.",
    "input": "- Cuatro enteros indicando la cantidad de pastes de cada sabor que se compraron. El formato es ` P M H Z` donde: - P cantidad de pastes de papa con carne- M cantidad de pastes de mole verde- H cantidad de pastes hawaianos- Z cantidad de pastes de zarzamora- Un entero, N, indicando el nu\u0301mero de concursantes- N renglones. Cada renglo\u0301n seguira\u0301 el formato ` p m h z` donde: - p pastes de papa con carne que originalmente pidio\u0301 el concursante- m pastes de mole verde que originalmente pidio\u0301 el concursante- h pastes hawaianos que originalmente pidio\u0301 el concursante- z pastes de zarzamora que originalmente pidio\u0301 el concursante",
    "output": "- Imprime ` # epicfail` si los organizadores no compraron suficientes pastes para satisfacer lo que los concursantes pidieron originalmente- Imprime ` # win` si todos van a poder comer lo que pidieron originalmente ( * * no importa que sobren pastes* * ) # Ejemplos| | input3 3 3 320 2 1 00 1 0 2| | output# win| | descriptionSe pidieron suficientes pastes de cada sabor para satisfacer a los concursantes| | input3 3 3 320 0 2 11 0 2 0| | output# epicfail| | descriptionLos organizadores no pidieron suficientes pastes hawaianos. . . # epicfail| | end",
    "note": "- 1 \u2264 N \u2264 100- 0 \u2264 P, M, H, Z, p, m, h, z \u2264 100",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 6852
  },
  {
    "title": "Mataron a Kenny 2.0",
    "url": "https://omegaup.com/arena/problem/Mataron-a-Kenny-20",
    "history": "Erick Cartman quiere saber el numero de muertes que tendra Kenny por cierta cantidad de horas, como Erick ahora esta ocupado y Luis se fue a jugar fortnite con Castor, Potter Y Hairam se te solicita que realices un programa que calcule lo anterior. ! [ enter image description here] [ 1]",
    "input": "En la primera linea un entero N que determina el numero de Horas de las cuales se debe calcular el numero de muertes.",
    "output": "Un entero M que representa el numero de muertes que tendra Kenny en las N horas.",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 6846
  },
  {
    "title": "Mataron a Kenny",
    "url": "https://omegaup.com/arena/problem/Mataron-a-Kenny",
    "history": "KENNY quiere saber el mayor de N nu\u0301meros, para hacerlo mas interesante el quiere sumarle el numeromas pequen\u0303o y multiplicarlo por N, como KENNY esta muerto quiere que hagas un programa que realice\u0301 estos ca\u0301lculos por el. ! [ enter image description here] [ 1] < / center>",
    "input": "En la primera linea un entero N que indica la cantidad de nu\u0301meros a leer en la segunda linea separados por un espacio.",
    "output": "Un entero L que representa la suma del mayor con el menor y su multiplicacio\u0301n por N",
    "note": "",
    "topics": [
      "math",
      "sortings",
      "greedy"
    ],
    "id": 6845
  },
  {
    "title": "Suma ENTEROS",
    "url": "https://omegaup.com/arena/problem/Suma-ENTEROSs",
    "history": "Potter esta harto de sumar, crea un programa que lo ayude con esto.",
    "input": "2 enteros A Y B.",
    "output": "La suma de A Y B.",
    "note": "",
    "topics": [
      "dp",
      "math"
    ],
    "id": 6842
  },
  {
    "title": "PRIMER PROBLEMA",
    "url": "https://omegaup.com/arena/problem/PRIMER-PROBLEMA",
    "history": "Este es un problema de prueba. Tu programa debera leer dos numeros, sumarlos y multiplicarlos por 2.",
    "input": "Dos numeros a y b.",
    "output": "El resultado de a+ b* 2.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 6820
  },
  {
    "title": "DP - Multiplicacion ",
    "url": "https://omegaup.com/arena/problem/DP---Multiplicacion-",
    "history": "# DescripcionA Carlitoscraft le gusta come mucho verengena asi que a el se le daran N numero de cajas con K nuemro de venjenas cada una# ProblemaEscribe el numero de verengenas que se comera Carlitoscraft",
    "input": "se te dara K y N",
    "output": "el numero de verengenas a comer| | input3 5| | output15| | end# LimitesN < = 10000X < = N",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 6805
  },
  {
    "title": "Porfirio y las Donas",
    "url": "https://omegaup.com/arena/problem/Porfirio-y-las-Donas",
    "history": "Como sabes, a Porfirio le encantan organizar fiestas e invitar a toda la gente del pueblo. En esta ocasio\u0301n, el va a celebrar el Di\u0301a Mundial de la Dona. Un di\u0301a antes de la fiesta, Porfirio va a la u\u0301nica tienda de donas de la ciudad \" Lazadonas\" . Esta tienda es propiedad de su archienemigo La\u0301zaro, por lo que Porfirio no quiere comprar donas extras y asi\u0301 darle ma\u0301s dinero a su archirrival. Sin embargo, tampoco quiere que le falten donas en la celebracio\u0301n, pues la reputacio\u0301n de sus grandes fiestas quedari\u0301an en peligro. Es por esto que Porfirio quiere comprar exactamente una dona por cada invitado de la fiesta. El problema es que \u201cLazadonas\u201d solo vende las donas en paquetes. Tienen paquetes pequen\u0303os que contienen A donas cada uno, y paquetes grandes que contienen B donas cada uno. La fiesta esta cerca de empezar, y Porfirio no recuerda a cuanta gente invito\u0301. Porfirio sabe que eres muy bueno con los nu\u0301meros, es por eso que te hara\u0301 N preguntas: Si asisten X personas a la fiesta, \u00bfseri\u0301a posible comprar exactamente X donas? Ayuda a Porfirio y contesta sus preguntas para que decida si puede realizar la fiesta, o si tendra\u0301 que cancelarla para evitar arruinar su reputacio\u0301n.",
    "input": "La primera linea contendra\u0301 tres enteros: N ( el nu\u0301mero de preguntas de Porfirio ) , A ( el nu\u0301mero de donas que contienen los paquetes pequen\u0303os ) y B ( el nu\u0301mero de donas que contienen los paquetes grandes ) Las siguientes N lineas contendra\u0301n cada un entero: X< sub> i< / sub>",
    "output": "Debera\u0301s imprimir N lineas. Para la i- esima linea debera\u0301s imprimir \" Si\" ( sin las comillas ) si es posible comprar exactamente X< sub> i< / sub> donas para la fiesta, o \" No\" ( sin las comillas ) si no es posible.",
    "note": "En \" Lazadonas\" existen cajas de donas ilimitadas. A \u2264 B# Li\u0301mites1 \u2264 N \u2264 3001 \u2264 A , B \u2264 3001 \u2264 X< sub> i< / sub> \u2264 300Para el 30",
    "topics": [
      "brute force",
      "math"
    ],
    "id": 6775
  },
  {
    "title": "PSP y tama\u00f1os relativos",
    "url": "https://omegaup.com/arena/problem/PSP-y-tamanos-relativos",
    "history": "Personal Software Process ( PSP) , es un conjunto de pra\u0301cticas desarrolladas para la administracio\u0301n del tiempo y las actividades personales de programadores o ingenieros de software. Esta\u0301 alineado y disen\u0303ado para emplearse en organizaciones con modelos de procesos CMMI o ISO 15504. Fue propuesto por Watts Humphrey en 1995. Uno de los muchos procesos que se incluyen en PSP implica el ca\u0301lculo de una tabla de taman\u0303os relativos usando desviacio\u0301n esta\u0301ndar. En esta tabla se deben calcular los siguientes taman\u0303os: muy pequen\u0303o ( VS) , pequen\u0303o( S) , medio ( M) , grande( L) y muy grande( VL) utilizando desviacio\u0301n esta\u0301ndar. Para calcular una tabla de taman\u0303os relativos usando desviacio\u0301n esta\u0301ndar se usa el siguiente proceso: - Leer n datos de entrada. - Transformar cada uno de los datos a su logarirmo natural. Esto es necesario porque no se deben tener taman\u0303os negativos y los valores pequen\u0303os tienden a amontonarse. - Calcular el promedio de estos n valores logari\u0301tmicos: avg = \u2211_ i= 1^ nln( x_ i) / n - Calcular la varianza: var = \u03c3^ 2= \u2211_ i= 1^ n( ln( x_ i) - avg) ^ 2/ ( n- 1) - Calcular la desviacio\u0301n esta\u0301ndar: \u03c3 = \u221a( var) - Calcular los rangos: ln( VS) = avg - 2 \u03c3 ln( S) = avg - \u03c3 ln( M) = avg ln( L) = avg + \u03c3 ln( VL) = avg + 2 \u03c3 - Por u\u0301ltimo, convertir los valores logari\u0301tmicos a su taman\u0303o natural usando el anti- logaritmo. VS = e^ ln( VS) S = e^ ln( S) M = e^ ln( M) L = e^ ln( L) VL = e^ ln( VL)",
    "input": "Primero se leera\u0301 el valor de n que representa el nu\u0301mero de datos a recibir donde 3< = n< = 100. A continuacio\u0301n se leera\u0301n n datos de tipo real.",
    "output": "Imprimir los valores de los rangos VS, S, M , L y por u\u0301ltimo VL. Cada uno de ellos en un renglo\u0301n y redondeados a dos decimales.",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 6705
  },
  {
    "title": "HCF-Diferencia absoluta m\u00ednima",
    "url": "https://omegaup.com/arena/problem/HFC-Diferencia-absoluta-minima",
    "history": "Dado un conjunto de N nu\u0301meros enteros, encuentra la diferencia absoluta mi\u0301nima entre cualquier pareja posible.",
    "input": "En la primera li\u0301nea un entero N que denota el nu\u0301mero de elementos a procesar. En la segunda li\u0301nea N enteros.",
    "output": "En la primera li\u0301nea la diferencia absoluta mi\u0301nima. En la segunda li\u0301nea los nu\u0301meros que generaron la diferencia absoluta mi\u0301nima, en caso de que dos parejas o ma\u0301s hagan la diferencia mi\u0301nima, imprimir la primera que aparezca respecto a la entrada. En la tercera li\u0301nea la posicio\u0301n de los nu\u0301meros que tomaste para calcular la respuesta ( contando desde 0 de izquierda a derecha) . # Ejemplos| | input64 62 35 22 10 53| | output64 100 4| | descriptionLa diferencia absoluta mi\u0301nima se logra con la pareja | 4- 10| = 6 y se encuentra en las posiciones 0 y 4. | | input851 47 13 89 2 6 39 27| | output451 470 1| | descriptionPara este ejemplo la diferencia mi\u0301nima es 4 y se puede lograr con las parejas | 51- 47| y | 6- 2| , sin embargo, el problema dice que en caso de empates consideres como respuesta la pareja que aparezca primero. | | end# Li\u0301mites2 \u2264 N \u2264 1000",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 6675
  },
  {
    "title": "Ana arreglando",
    "url": "https://omegaup.com/arena/problem/Ana-arreglando",
    "history": "Ana tiene un arreglo que consiste de n enteros a_ 1, a_ 2, . . . , a_ n. Ana le gusta cuando los nu\u0301meros coinciden en su arreglo. Es por ello que busca tener la mayor cantidad posible de nu\u0301meros iguales en el arreglo. Para ello, Ana realizara\u0301 las siguiente operacio\u0301n mu\u0301ltiples veces- Ella elige dos elementos del arreglo a_ i, a_ j ( i= \u0338 j) - Ella, de manera simultanea, incrementa el nu\u0301mero a_ i en uno y decrementa el nu\u0301mero a_ j en uno, esto es, ejecuta a_ i= a_ i+ 1 y a_ j= a_ j- 1La operacio\u0301n dada cambia exactamente dos elementos del arreglo. Ana puede aplicar la operacio\u0301n descrita una cantidad infinita de veces. Ahora ella necesita saber cua\u0301l es la ma\u0301xima cantidad de elementos iguales que puede conseguir si realiza una cantidad arbitraria de operaciones.",
    "input": "La primera li\u0301nea contiene el entero n ( 1\u2264 n \u2264 10^ 5) - El taman\u0303o del arreglo. La segunda li\u0301nea contiene n enteros separados por un espacio a_ 1, a_ 2, . . . , a_ n ( | a_ i| \u2264 10^ 4) - El arreglo original.",
    "output": "Imprime\u0301 un solo entero - El ma\u0301ximo nu\u0301mero de elementos iguales en el arreglo que ella puede conseguir realizando una cantidad arbitraria de veces la operacio\u0301n dada.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 6660
  },
  {
    "title": "Dime Quien Gano",
    "url": "https://omegaup.com/arena/problem/Dime-Quien-Gano",
    "history": "\u00a1Bienvenidos a \" Dime Quie\u0301n Gano\u0301\" ! Hoy se encuentran dos participantes quie\u0301nes competira\u0301n para ganar el gran premio. La meca\u0301nica del juego es la siguiente: Cada participante tendra\u0301 un acto para dar lo mejor de si\u0301. Una vez acabada la presentacio\u0301n del concursante, 3 jueces dara\u0301n su veredicto ( calificacio\u0301n entre 0. 0 y 10. 0) . Cuando se tengan los resultados de ambos participantes se dara\u0301 a conocer el ganador. Tu\u0301 eres el encargado de crear un co\u0301digo para decirle al anfitrio\u0301n del concurso quie\u0301n fue el ganador. Si el concursante A fue el ganador imprime ' Gano\u0301 A' Si el concursante B fue el ganador imprime ' Gano\u0301 B' Si existe un empate imprime ' Hubo empate' * * GANADOR: * * La forma de determinar al ganador es un poco distinta a la convencional. Para este concurso, se compara la calificacio\u0301n de cada juez y se anota un punto al concursante que haya ganado con dicho juez, si resulta un empate, no se le anota punto a ningu\u0301n concursante. El ganador es el concursante que tenga ma\u0301s puntos. * * EJEMPLO: * * concursante A tiene las siguientes calificaciones: 6. 7, 8. 9, 9. 2 ( juez1, juez2, juez3) concursante B tiene las siguientes calificaciones: 8. 4, 7. 5, 9. 3 ( juez1, juez2, juez3) Comparamos la calificacio\u0301n del juez 1 de cada participante y vemos que gano\u0301 el concursante B, entonces se le anota unpunto al concursante B. Hacemos lo mismo con el juez 2 y se le anota un punto al concursante A y asi\u0301 sucesivamente. En este ejemplo debes imprimir ' Gano\u0301 B' porque el marcador quedo\u0301 1- 2 a favor del concursante B.",
    "input": "6 nu\u0301meros entre 0. 0 y 10. 0, los tres primeros representan las calificaciones del concursante A y los u\u0301ltimos 3 los del participante B.",
    "output": "Si el concursante A fue el ganador imprime ' Gano A' Si el concursante B fue el ganador imprime ' Gano B' Si existe un empate imprime ' Hubo empate'",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 6595
  },
  {
    "title": "Los Adornos del Se\u00f1or Marcial",
    "url": "https://omegaup.com/arena/problem/Los-Adornos-del-Senor-Marcial",
    "history": "# DescripcionSe acercan las fiestas de Independencia, y el sen\u0303or de la Biblioteca, Don Marcial, quiere adornar la biblioteca. Esta vez quiere hacer una tira de papel china de una esquina a otra del cuarto, en forma diagonal. Desafortunadamente, so\u0301lo conoce las medidas de las paredes de su biblioteca, por lo que ha pedido tu ayuda. # ProblemaDadas las medidas x y y de las paredes del cuarto, determina cua\u0301l sera\u0301 el taman\u0303o de la tira que el Sen\u0303or Marcial tendra\u0301 que colocar.",
    "input": "Dos numeros, x y y, que sera\u0301n las medidas de las paredes del cuarto.",
    "output": "Un nu\u0301mero indicando la longitud que debe tener la tira. | | input3 4| | output5| | descriptionSi la biblioteca tuviera lados de 4 y 5, la longitud de la tira seri\u0301a de 5. | | input7. 53 8. 94| | output11. 6886| | descriptionSi la biblioteca tuviera lados de 7. 53 y 8. 94, la longitud de la tira seri\u0301a de 11. 6886. | | end# Consideraciones* No todos los lados van a ser siempre enteros. # Limites* 0 < = x, y < = 50, 000",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 6562
  },
  {
    "title": "Aburrido",
    "url": "https://omegaup.com/arena/problem/Aburrido-Coding-Rush",
    "history": "Ricardo estaba muy aburrido en su casa viendo la televisio\u0301n, cuando se le ocurrio\u0301 un juego para entretenerse. El juego consiste en multiplicar cada nu\u0301mero que ve en la televisio\u0301n por su nu\u0301mero favorito, el cual es el 7. Tu tarea es comprobar, mediante un co\u0301digo, que las multiplicaciones realizadas por Ricardo fueron correctas.",
    "input": "3 nu\u0301meros que representan los nu\u0301meros que Ricardo vio\u0301 en la televisio\u0301n.",
    "output": "3 lineas con el resultado de las operaciones.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 6503
  },
  {
    "title": "Suma muy b\u00e1sica",
    "url": "https://omegaup.com/arena/problem/Suma-muy-basica",
    "history": "En este problema solamente vas a realizar la suma de dos nu\u0301meros. Debes leer 2 valores enteros y sumarlos. No muestre ningu\u0301n mensaje adema\u0301s de lo que se especifica y no olvide imprimir un salto de li\u0301nea luego del resultado.",
    "input": "La entrada contiene 2 valores enteros, uno en cada li\u0301nea.",
    "output": "Muestre la suma de acuerdo al siguiente ejemplo, con un espacio en blanco antes y despue\u0301s del signo igual. ' X' esta\u0301 en mayu\u0301sculas.",
    "note": "",
    "topics": [
      "math",
      "brute force"
    ],
    "id": 6495
  },
  {
    "title": "Suma de 3 Datos en n lineas",
    "url": "https://omegaup.com/arena/problem/Suma-de-3-Datos-en-n-lineas",
    "history": "* * Descripcio\u0301n* * Es el ejercicio mostrado en clase.",
    "input": "un nu\u0301mero n que indica el nu\u0301mero de casos, seguido de n lineas cada una con 3 nu\u0301meros enteros",
    "output": "la suma de los 3 nu\u0301meros por cada uno de los casos.",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 6332
  },
  {
    "title": "Centro de un vector",
    "url": "https://omegaup.com/arena/problem/Centro-vector",
    "history": "Considera un vector x cuyas coordenadas van de la 0 a la n y contienen valores enteros. A una coordenada c ( entre 0 y n) se le dice el centro de x si cumple que la suma desde i = 0 hasta i = c - 1 de ( c - i ) \u00b7 x_ i es igual a la suma desde i = c + 1 hasta n de ( i - c ) \u00b7 x_ i. Observa que la entrada en la coordenada c no participa en ninguna de las dos sumas. Por ejemplo, si x es el vector ( 6, 2, 3, 0, 1) , entonces c = 1 es un centro de x, pues la primera suma ( 1 - 0) \u00b7 6 es igual a la segunda suma ( 2 - 1) \u00b7 3 + ( 3 - 1) \u00b7 0 + ( 4 - 1) \u00b7 1 ( ambas valen 6) . No todos los vectores tienen centro. Por ejemplo, el vector ( 1, 2, 1, 1) no tiene centro porque ninguna de sus coordenadas cumple que las dos sumas son iguales. Advierte que el centro de un vector tiene interpretacio\u0301n fi\u0301sica: si se considera a los valores contenidos en el vector como pesos, entonces un centro del vector ( si acaso existe) corresponde con el centro de gravedad.",
    "input": "Consiste de un nu\u0301mero entero n que tendra\u0301 un valor entre 1 y 1 000 seguido de un renglo\u0301n con n + 1 nu\u0301meros enteros, x_ 0, x_ 1 , . . . , x_ n, separados por espacios, cada uno con valor entre 1 y 1 000.",
    "output": "Consiste de dos nu\u0301meros enteros, c, s, separados por un espacio. El primero es el centro de x y el segundo es el valor de la suma. Si x no tiene centro, entonces c = - 1, s = 0. # Ejemplos| | input46 2 3 0 1| | output1 6| | input31 2 1 1| | output- 1 0| | end",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 6275
  },
  {
    "title": "Un algoritmo de Gauss poco conocido",
    "url": "https://omegaup.com/arena/problem/Algoritmo-de-Gauss",
    "history": "La Pascua cae en el primer domingo que sigue a la primera luna llena que ocurra el 21 de marzo o despue\u0301s. El siguiente algoritmo, propuesto por Gauss, calculara\u0301, dado un an\u0303o A \u2265 1583, un nu\u0301mero que representa la fecha de la Pascua de la siguiente forma: si J \u2264 31, entonces la Pascua sera\u0301 el J de marzo; en otro caso la Pascua sera\u0301 el J - 31 de abril. 1. Haz B = A/ 100 + 1. 2. Haz C = 3B/ 4 - 12. 3. Haz E = ( A 19) + 1. 4. Haz F = ( 8B + 5) / 25 - ( 5 + C) . 5. Haz G = 5A/ 4 - ( C + 10) . 6. Haz H = ( 11E + 20 + F) 30. 7. Si H no vale 25 entonces ir al paso 9. 8. Si E es mayor que 11 entonces suma 1 a H. 9. Si H vale 24 entonces suma 1 a H. 10. Haz I = 44 - H. 11. Si I es menor que 21 entonces suma 30 a I. 12. Haz J = I + 7 - [ ( G + I) 7] . En este algoritmo todas las divisiones son enteras y mod es el residuo de la divisio\u0301n. Dado un an\u0303o A, debera\u0301s calcular el di\u0301a D y el mes M en el que cae la Pascua en el an\u0303o A.",
    "input": "Consiste de un nu\u0301mero entero A que tendra\u0301 un valor entre 1583 y 9999.",
    "output": "Consiste de dos nu\u0301meros enteros, D, M, separados por un espacio ( M = 3 significa marzo y M = 4 significa abril) .",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 6273
  },
  {
    "title": "Conversi\u00f3n de temperaturas",
    "url": "https://omegaup.com/arena/problem/Conversion-temperaturas",
    "history": "A pesar de que Me\u0301xico utiliza el sistema internacional de unidades ( SI) , asi\u0301 como los si\u0301mbolos internacionales de ese sistema, seguimos indicando la temperatura en grados centi\u0301grados ( \u00b0C) . Adema\u0301s de los Kelvin ( K) , en algunas partes del mundo se indica la temperatura en grados Fahrenheit ( \u00b0F) o en grados Re\u0301aumur ( \u00b0R) . Como existen fo\u0301rmulas de conversio\u0301n para todos estos tipos de grados, si sabemos la temperatura C en grados centi\u0301grados, entonces podemos calcular la temperatura aproximada K en Kelvin, F en grados Fahrenheit y R en grados Re\u0301aumur. Por ejemplo, si latemperatura es de 0\u00b0C, entonces es aproximadamente de 273K, 32\u00b0F y 0\u00b0R ( con los decimales truncados) .",
    "input": "Consiste de un nu\u0301mero entero C que tendra\u0301 un valor entre - 273 y 1 000.",
    "output": "Consiste de tres nu\u0301meros enteros, K, F, R, separados por espacios.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 6270
  },
  {
    "title": "El calendario de la cuenta larga",
    "url": "https://omegaup.com/arena/problem/Calendario-cuenta-larga",
    "history": "Los mayas usaban tres calendarios, pero en este ejercicio nos concentraremos solamente en el calendario * choltu\u0301n* , o calendario de la cuenta larga. En e\u0301ste, un di\u0301a se llama * kin* , 20 * kines* forman un * uinal* , 18 * uinales* forman un * tun* , 20 * tunes* forman un * katu\u0301n* y 20 * katunes* forman un * baktu\u0301n* ( tambie\u0301n existen periodos de tiempo ma\u0301s grandes, pero no nos ocuparemos de ellos) . Una fecha se especifica como el nu\u0301mero b de baktunes, seguido del nu\u0301mero k de katunes, el nu\u0301mero t de tunes, el nu\u0301mero u de uinales y el nu\u0301mero d de kines ocurridos a partir de una fecha inicial llamada 0. 0. 0. 0. 0 que corresponde al 11 de agosto del an\u0303o 3113 antes de nuestra era, segu\u0301n el calendario gregoriano. Si sabemos el nu\u0301mero n de di\u0301as transcurridos a partir de esa fecha, se puede calcular fa\u0301cilmente la fecha correspondiente del calendario choltu\u0301n. Por ejemplo, si han transcurrido 314 159 265 di\u0301as a partir de la fecha inicial, entonces la fecha correspondiente es 2181. 13. 4. 11. 5, es decir b = 2181, k = 13, t = 4, u = 11, d = 5.",
    "input": "Consiste de un nu\u0301mero entero n que tendra\u0301 un valor entre 0 y 2 000 000 000.",
    "output": "Consiste de cinco nu\u0301meros enteros, b, k, t, u, d, separados por espacios.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 6269
  },
  {
    "title": "Unidades brit\u00e1nicas de volumen",
    "url": "https://omegaup.com/arena/problem/Unidades-britanicas-de-volumen",
    "history": "Con toda seguridad te has enfrentado a las unidades brita\u0301nicas de volumen. Lo que no todo el mundo sabe es co\u0301mo se relacionan unas con otras. Un * galo\u0301n* es igual a 4 * cuartas* , una * cuarta* es igual a 2 * pintas* , una * pinta* es igual a 2 * tazas* y una * taza* es igual a 8 * onzas* . Dada una cierta cantidad g_ 1 de galones, c_ 1 de cuartas, p_ 1 de pintas, t_ 1 de tazas y o_ 1 de onzas, debera\u0301s determinar cua\u0301ntos galones g_ 2, cuartas c_ 2, pintas p_ 2, tazas t_ 2 y onzas o_ 2 completas representan. Por ejemplo, si g_ 1 = 31, c_ 1 = 41, p_ 1 = 59, t_ 1 = 26, o_ 1 = 57, entonces g_ 2 = 50, c_ 2 = 2, p_ 2 = 1, t_ 2 = 1, o_ 2 = 1.",
    "input": "Consiste de cinco nu\u0301meros enteros, g_ 1, c_ 1, p_ 1, t_ 1, o_ 1, separados por espacios; cada uno tendra\u0301 un valor entre 0 y 1000.",
    "output": "Consiste de cinco nu\u0301meros enteros, g_ 2, c_ 2, p_ 2, t_ 2, o_ 2, separados por espacios.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 6267
  },
  {
    "title": "Combinaciones",
    "url": "https://omegaup.com/arena/problem/Combinaciones",
    "history": "Calcular el nu\u0301mero exacto de formas en que se pueden tomar N cosas, M a la vez puede ser un gran desafi\u0301o cuando N y/ o M se vuelven muy grandes. Los desafi\u0301os son atractivos en los concursos de programacio\u0301n. Por lo tanto, se te pide hacer el siguiente ca\u0301lculo: Dados* 5 \u2264 N \u2264 100* 5 \u2264 M \u2264 100* M \u2264 NCalcula el valor exacto deC = N! / ( N- M) ! \u00d7 M! Puedes considerar que el valor final de C cabra\u0301 en un entero de 64. So\u0301lo como referencia, \u00a1el valor exacto de 100! es: 93, 326, 215, 443, 944, 152, 681, 699, 238, 856, 266, 700, 490, 715, 968, 264, 381, 621, nbsp; nbsp; nbsp; nbsp; nbsp; 468, 592, 963, 895, 217, 599, 993, 229, 915, 608, 941, 463, 976, 156, 518, 286, 253, nbsp; nbsp; nbsp; nbsp; nbsp; 697, 920, 827, 223, 758, 251, 185, 210, 916, 864, 000, 000, 000, 000, 000, 000, 000, 000",
    "input": "Recibira\u0301s dos nu\u0301meros indicando los valores de N y M, respectivamente.",
    "output": "Muestra el valor de C",
    "note": "",
    "topics": [
      "number theory",
      "math",
      "implementation",
      "combinatorics"
    ],
    "id": 6248
  },
  {
    "title": "Gran Triangulo de Pascal ",
    "url": "https://omegaup.com/arena/problem/Triangulo-de-Pascal-bignum",
    "history": "Este problema consiste en calcular los primeros N renglones del tria\u0301ngulo de pascal e imprimir la u\u0301ltima li\u0301nea. Por ejemplo, las primeras 7 li\u0301neas del tria\u0301ngulo de Pascal son: < pre> 1 11 2 11 3 3 11 4 6 4 11 5 10 10 5 11 6 15 20 15 6 11 7 21 35 35 21 7 1< / pre> Tranquil@ , so\u0301lo debera\u0301s imprimir la u\u0301ltima li\u0301nea B- )",
    "input": "Recibira\u0301s un valor entero N ( 1 \u2264 N \u2264 1000)",
    "output": "Imprimir la N- e\u0301sima li\u0301nea del tria\u0301ngulo de Pascal. Los nu\u0301meros en la li\u0301nea debera\u0301n estar separados por espacios.",
    "note": "",
    "topics": [
      "math",
      "implementation",
      "strings"
    ],
    "id": 6233
  },
  {
    "title": "Sumas con n\u00fameros grandes",
    "url": "https://omegaup.com/arena/problem/sumas-con-numeros-grandes",
    "history": "Dados dos enteros A, B ( 0 \u2264 A, B \u2264 10^ 1000) , imprima la suma de ambos nu\u0301meros.",
    "input": "Recibira\u0301s dos valores enteros positivos con hasta 1001 di\u0301gitos. Los nu\u0301meros no estara\u0301n necesariamente en la misma li\u0301nea.",
    "output": "Mostrar la suma de A + B",
    "note": "",
    "topics": [
      "math",
      "implementation",
      "strings"
    ],
    "id": 6227
  },
  {
    "title": "Tareas",
    "url": "https://omegaup.com/arena/problem/CEP2017-Tareas",
    "history": "A la profesora de Alfredo se le ha ocurrido nuevamente dejar una tarea muy aburrida y bastante larga. Esta vez, les ha pedido calcular el a\u0301rea de muchos trapecios. Como Alfredo aprendio\u0301 a programar con los chicos del ACM, decide hacer un programa para resolver su tarea. Cada ejercicio es dado por 3 nu\u0301meros a, b y h, los cuales son la bases del trapecio y la altura, respectivamente.",
    "input": "Un u\u0301nica li\u0301nea conteniendo los 3 enteros a, b y h.",
    "output": "Un u\u0301nica li\u0301nea con el resultado del a\u0301rea del trapecio. Si el a\u0301rea es entera, puedes incluir o no decimales.",
    "note": "",
    "topics": [
      "geometry",
      "math"
    ],
    "id": 6210
  },
  {
    "title": "Haciendo cuentas",
    "url": "https://omegaup.com/arena/problem/CEP2017-Haciendo-cuentas",
    "history": "Estas vacaciones, tu padre te pidio\u0301 que le ayudaras a administrar el negocio familiar de venta de frutas al pormayor. Ahora que las vacaciones han acabado, es momento de hacer las cuentas. Las vacaciones duraron un total de d di\u0301as. Cada di\u0301a llegaba un camio\u0301n con las mejores manzanas y naranjas del valle de Majes, por un total de p_ i kilogramos, donde i es el nu\u0301mero de di\u0301a. Asimismo, el kilo de manzanasera vendido ese di\u0301a a m_ i nuevos soles y el de naranjas a n_ i nuevos soles. Todo el mundo sabi\u0301a de la excelente calidad de las frutas que se vendi\u0301an en tu negocio, asi\u0301 que nunca sobraba ni una sola fruta al final del di\u0301a. En total, se recolectaban t_ i soles por di\u0301a. Para propo\u0301sitos de estudio de mercado, tu padre te pregunta cu\u0301antos kilogramos de manzanas y de naranjas se vendieron en total durante tus vacaciones. \u00a1Oh, no! Te acabas de dar cuenta que no registraste estos nu\u0301meros cada di\u0301a. Pero, no importa. Le pides unos minutos a tu padre para ir a buscar los datos, aunque en realidad corres a tu computadora a escribir un programa que te salve de esta situacio\u0301n.",
    "input": "La primera li\u0301nea contiene un entero d, el nu\u0301mero de di\u0301as de tus vacaciones. Las siguientes d li\u0301neas esta\u0301n conformadas por 4 enteros p_ i, m_ i, n_ i y t_ i, describiendo lo que paso\u0301 en el di\u0301a i. Esta\u0301 garantizadoque m_ i= \u0338 n_ i.",
    "output": "Consiste de una u\u0301nica li\u0301nea conteniendo 2 nu\u0301meros: los totales de kilogramos vendidos de manzanas y de naranjas, respectivamente. Esta\u0301 garantizado que, cada di\u0301a, los nu\u0301meros de kilogramos vendidos de manzanas y de naranajas son nu\u0301meros enteros.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 6196
  },
  {
    "title": "sumar matrices",
    "url": "https://omegaup.com/arena/problem/sumar-matrices",
    "history": "Hacer un programa que sume dos arreglos bidimensionales de NxN elementos hacia un tercer arreglo.",
    "input": "En la primera linea el entero N. < br> En los siguientes N conjuntos de lineas, N enteros que indican los elementos de una fila de la primer matriz. En los siguientes N conjuntos de lineas, N enteros que indican los elementos de una fila de la segunda matriz.",
    "output": "La matriz final.",
    "note": "",
    "topics": [
      "matrices",
      "implementation",
      "math"
    ],
    "id": 6180
  },
  {
    "title": "Consonantes y vocales",
    "url": "https://omegaup.com/arena/problem/Consonantes-y-vocales",
    "history": "Escribe un programa que lea una palabra S formada exclusivamente por letras mayu\u0301sculas ( sin acentos, ni N\u0303) y que escriba el nu\u0301mero C de consonantes y el nu\u0301mero V de vocales que contiene. Por ejemplo, la palabra CONSONANTES contiene 7 consonantes y 4 vocales.",
    "input": "Consiste de una cadena S formada por un ma\u0301ximo de 80 letras mayu\u0301sculas.",
    "output": "Consiste de dos nu\u0301meros enteros, C, V, separados por un espacio.",
    "note": "",
    "topics": [
      "math",
      "strings",
      "implementation"
    ],
    "id": 6171
  },
  {
    "title": "Ko\u0161nja COCI 2017/2018",
    "url": "https://omegaup.com/arena/problem/Kosnja-COCI-20172018",
    "history": "# DescriptionMirko wants to buy land on which he will build a house for his family. So far, he\u2019s seen K pieces of land. Each of them is in the shape of a rectangle and we can think of it as a matrix with N rows and M columns, N \u00d7 M fields in total. Mirko is aware that, before construction begins, the property needs to be regularly maintained and the lawn needs to be mowed. Because of this, Mirko bought a lawn mower. In order to mow the entire lawn of N rows and M columns, he needs to go over each field at least once. He can start from any field facing one of the four main directions ( up, down, left, and right) . His lawn mower can only go forwards ( to the adjacent field facing the current direction) or make a 90 degree turn. Additionally, because of his own safety, Mirko can only use the lawn mower on his land, so he cannot leave the matrix. Since making the lawn mower turn isn\u2019t simple, Mirko wants to mow the lawn with the minimal amount of turns. For each piece of land he saw so far, Mirko wants to know the minimal number of turns he can make so that the entire lawn is mowed. Help Mirko solve this problem.",
    "input": "The first line of input contains the positive integer K ( 1 \u2264 K \u2264 50 000) , the number from the task. Each of the following K lines contains two positive integers N and M ( 1 \u2264 N, M \u2264 1 000 000) , the numbers from the task.",
    "output": "For each piece of land Mirko saw so far, output in a separate line the minimal amount of turns he can take so that the entire lawn is mowed. # ScoringIn test cases worth 50",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 6163
  },
  {
    "title": "Ko\u0161nja",
    "url": "https://omegaup.com/arena/problem/Kosnja",
    "history": "Mirko wants to buy land on which he will build a house for his family. So far, he\u2019s seen K pieces of land. Each of them is in the shape of a rectangle and we can think of it as a matrix with N rows and M columns, N \u00d7 M fields in total. Mirko is aware that, before construction begins, the property needs to be regularly maintained and the lawn needs to be mowed. Because of this, Mirko bought a lawn mower. In order to mow the entire lawn of N rows and M columns, he needs to go over each field at least once. He can start from any field facing one of the four main directions ( up, down, left, and right) . His lawn mower can only go forwards ( to the adjacent field facing the current direction) or make a 90 degree turn. Additionally, because of his own safety, Mirko can only use the lawn mower on his land, so he cannot leave the matrix. Since making the lawn mower turn isn\u2019t simple, Mirko wants to mow the lawn with the minimal amount of turns. For each piece of land he saw so far, Mirko wants to know the minimal number of turns he can make so that the entire lawn is mowed. Help Mirko solve this problem. * * INPUT* * The first line of input contains the positive integer K ( 1 \u2264 K \u2264 50 000) , the number from the task. Each of the following K lines contains two positive integers N and M ( 1 \u2264 N, M \u2264 1 000 000) , the numbers from the task. * * OUTPUT* * For each piece of land Mirko saw so far, output in a separate line the minimal amount of turns he can take so that the entire lawn is mowed. SCORINGIn test cases worth 50",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 6162
  },
  {
    "title": "Cezar COCI 2017/2018",
    "url": "https://omegaup.com/arena/problem/Cezar-COCI-20172018",
    "history": "# DescriptionLittle Caesar likes card games. Everytime he comes to Zagreb, he plays blackjack, the famous card game, with his friends. In this game, the player draws cards while the sum of the cards in his hand is less than or equal to 21 or until he says \u201cDOSTA\u201d ( Croatian for \u201cSTOP\u201d) . At the beginning of the game, there are 52 cards in the deck, thirteen ranks of each of the four suits. The card ranks are two, three, . . . , ten, Jack, Queen, King and Ace. The card values are the following: the cards with numbers on them are worth that number ( e. g. , \u201cnine\u201d is 9) , the cards with pictures ( Jack, Queen, and King) are worth 10, whereas the Ace is worth 11. Caesar has found himself in an interesting situation. During the game, he already drew N cards whose sum is less than or equal to 21 and is now having second thoughts about drawing one more card or not. Let\u2019s assume X is the difference from the sum of the cards so far to 21. Everybody knows that you don\u2019t draw a card if the number of the remaining cards in the deck whose value is greater than X is greater than or equal to the number of the remaining cards in the deck whose value is less than or equal to X. Since Caesar is having a difficult time calculating whether he needs to draw another card or not, he\u2019s asking you to do it for him.",
    "input": "The first line of input contains the positive integer N ( 1 \u2264 N \u2264 52) , the number of cards Caesar has drawn so far. Each of the following \u200b N lines contains a single positive integer, the value of the i^ th card Caesar drew.",
    "output": "If Caesar should draw another card, output \u201cVUCI\u201d ( Croatian for \u201cDRAW\u201d) , otherwise output \u201cDOSTA\u201d ( Croatian for \u201cSTOP\u201d) . # Sample test| | input6232323| | outputDOSTA| | input110| | outputVUCI| | input256| | outputVUCI| | end* * Clarification of the first test* * : The sum of the already drawn cards is 15, and the difference X to 21 is 6. The number of cards in the deck with a value greater than 6 is 32 ( 4 Aces, 4 Kings, 4 Queens, 4 Jacks, 4 tens, 4 nines, 4 eights, and 4 sevens) , whereas the number of cards in the deck with a value less than or equal to 6 is 14 ( one two, one three, 4 fours, 4 fives, and 4 sixes) .",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 6156
  },
  {
    "title": "Normalizaci\u00f3n de datos",
    "url": "https://omegaup.com/arena/problem/Normalizacion-de-datos",
    "history": "La efectividad de una red neuronal artificial puede mejorar si los datos de las instancias se encuentran normalizados. Un problema que puede ocurrir si la normalizacio\u0301n no se lleva a cabo es que, en el caso de la funcio\u0301n logi\u0301stica, f( x) \u2248 f( x' ) \u2200 x, x' \u2264 - 6 y \u2200 x, x' \u2265 + 6, por lo que a veces los datos de entrada son indistinguibles para la red neuronal aunque los valores difieran bastante. Un algoritmo para llevar a cabo la normalizacio\u0301n es el algoritmo * min- max* , el cual le asigna nuevos valores V_ min y V_ max a los valores mi\u0301nimo y ma\u0301ximo que aparecen en la misma componente para todas las instancias y aplica una regla de tres para valores intermedios. Escribe un programa que normalice de manera individual cada una de las componentes de la entrada al rango [ V_ mi\u0301n = - 6, V_ ma\u0301x = + 6] y que adema\u0301s normalice de manera individual cada una de las componentes de la salida al rango de [ V_ mi\u0301n = 0, V_ ma\u0301x = 1] .",
    "input": "Tres enteros E, S, N que denotan el nu\u0301mero de componentes de la entrada y salida asi\u0301 como el nu\u0301mero de instancias. Posteriormente N tuplas de E + S nu\u0301meros reales que denotan las E componentes de la entrada x_ 0, x_ 1, . . . , x_ E - 1 y las S componentes de la salida y_ 0, y_ 1, . . . , y_ S - 1 de una instancia. Puedes suponer que 1 \u2264 E, S \u2264 5, - 1000 \u2264 x_ i, y_ i \u2264 + 1000 y 0 \u2264 N \u2264 500.",
    "output": "El mismo archivo de entrada pero con los valores de las componentes normalizadas. Los valores reales emitidos debera\u0301n ser correctos con una precisio\u0301n mi\u0301nima de cente\u0301simas.",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 6155
  },
  {
    "title": "Jugando con Congruencias",
    "url": "https://omegaup.com/arena/problem/COMI-Congruencias",
    "history": "Por muchos an\u0303os, a los matema\u0301ticos les ha gustado divertirse con lo que se conoce como * * Congruencias* * . Pero, \u00bfque\u0301 son las congruencias? . Primeramente lucen de esta manera: A \u2261 B C La anterior expresio\u0301n se lee co\u0301mo * * A es congruente con B, mo\u0301dulo C* * . Ahora, para que entiendas mejor el concepto de congruencias, te lo explicaremos mediante un pequen\u0303o experimento que utiliza la operacio\u0301n normal de mo\u0301dulo que conoces. Imagina que calculamos * * mod( 5) * * para * * TODOS* * los nu\u0301meros enteros. ! [ congruences] ( congruences. png) Supongamos que rebanamos un circulo en 5 partes y las etiquetamos como 0, 1, 2, 3 y 4. Entonces para cada uno de los enteros a los que se le aplico\u0301 la operacio\u0301n * * mod( 5) * * , los pondremos dentro de la rebanada con la cual corresponda. Piensa que estas rebanadas son como contenedores los cuales van a guardar conjuntos de nu\u0301meros. Por ejemplo, el nu\u0301mero 26 iri\u0301a en la rebanada marcada con 1, porque 26 5 = 1. Ahora bien, \u00bfacaso no seri\u0301a muy u\u0301til tener una manera de expresar los nu\u0301meros que pertenecen a una misma rebanada? . Por ejemplo, el nu\u0301mero 26 esta\u0301 en la misma rebanada que los nu\u0301meros 1, 6, 11, 16, 21, . . . . La forma ma\u0301s comu\u0301n de decir que dos nu\u0301meros pertencen a la misma rebanada, es decir, que ellos esta\u0301n en la misma * * clase de equivalencia* * . Y, \u00bfcua\u0301l crees que sea la forma en la que se expresa esto matema\u0301ticamente? . . . \u00a1Exacto! Se expresa como A \u2261 B C. Si hacemos la analogi\u0301a con el ejemplo del nu\u0301mero 26 y 11, quedari\u0301a expresado como 26 \u2261 11 5. # ProblemaAhora bien, en este problema se te pide algo sencillo. Tomando en cuenta la simbologi\u0301a A \u2261 B C, se te proporcionara\u0301 los valores de B y C, y posteriormente se te dara\u0301n N valores los cuales tendra\u0301s que analizar y decir, cua\u0301ntos de ellos pertenecen a la misma * * rebanada* * , es decir, a la misma clase de equivalencia.",
    "input": "En la primera li\u0301nea recibira\u0301s 2 nu\u0301meros que representara\u0301n a B y C respectivamente. Como este es uno de nuestros primeros acercamientos a las congruencias, los valores de estas variables siempre sera\u0301n positivas. En la segunda li\u0301nea recibira\u0301s el valor de N, y en las siguientes N li\u0301neas recibira\u0301s 1 nu\u0301mero por li\u0301nea ( llamemos a estos nu\u0301meros n_ i) .",
    "output": "Un entero que represente cua\u0301ntos de los nu\u0301meros n_ i pertenecen a la misma clase de equivalencia.",
    "note": "",
    "topics": [
      "number theory",
      "implementation",
      "math"
    ],
    "id": 6150
  },
  {
    "title": "Funciones Matem\u00e1ticas",
    "url": "https://omegaup.com/arena/problem/COMI-Funciones-Matematicas",
    "history": "Histo\u0301ricamente las computadoras han ido evolucionando conforme a la cantidad de operaciones matema\u0301ticas que pueden hacer en determinado tiempo. Las operaciones manejadas tambien han ido evolucionando hasta llegar al punto en que la computadora puede hacer operaciones muy complejas. En este problema vamos a usar algunas operaciones ba\u0301sicas, las cuales se te presentan a continuacio\u0301n. \u2014\u2014\u2014- 1. - Valor Absoluto2. - Ma\u0301ximo de dos nu\u0301meros3. - Mi\u0301nimo de dos nu\u0301meros4. - Rai\u0301z Cuadrada5. - Potencias\u2014\u2014\u2014- Cada una de las anteriores operaciones van a ser representadas con el respectivo nu\u0301mero que tienen a su izquierda. Para este problema, en los casos particulares de las operaciones * Rai\u0301z Cuadrada* y * Potencias* , se tomara\u0301n en cuenta raices cuadradas con entrada entera y salida redondeada a * * dos decimales* * , y potencias con entradas y salidas enteras ( entero largo) .",
    "input": "En la primera li\u0301nea recibira\u0301s un nu\u0301mero N el cual representara\u0301 el nu\u0301mero de operaciones que se te pedira\u0301 realizar. En las siguientes N li\u0301neas primeramente recibira\u0301s un nu\u0301mero M el cual te indicara\u0301 la operacio\u0301n ha realizarse. Posteriormente a recibir dicho nu\u0301mero, en la misma li\u0301nea recibira\u0301s los nu\u0301meros con los que realizara\u0301s la operacio\u0301n seleccionada. De manera particular, para los casos de * Valor Absoluto* y * Rai\u0301z Cuadrada* recibira\u0301s un u\u0301nico numero, y las dema\u0301s operaciones recibira\u0301n dos nu\u0301meros.",
    "output": "La salida sera\u0301 N li\u0301neas las cuales representara\u0301n el resultado de cada una de las operaciones que se pidio\u0301 en la entrada. El orden de dichos resultados debera\u0301 de ser el mismo con el cual se puso en la entrada.",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 6136
  },
  {
    "title": "Simplificar Fracciones",
    "url": "https://omegaup.com/arena/problem/COMI-Simplificar-Fracciones",
    "history": "Uno de los problemas con el que todos nos enfrentamos en algu\u0301n momento de la vida, es el de simplificar una fraccio\u0301n. En la escuela nos ensen\u0303aron diversos me\u0301todos para ello, sin embargo, el ma\u0301s usado esta\u0301 basado en la obtencio\u0301n del * * Maximo Comu\u0301n Divisor ( MCD) * * . La regla para realizar lo anterior se enuncia a continuacio\u0301n. \u2014\u2014\u2014- * * Regla* * Para reducir una fraccio\u0301n cualquiera ab, so\u0301lo se necesita dividir a y b entre su ma\u0301ximo comu\u0301n divisor ( MCD) . \u2014\u2014\u2014- Esta\u0301 muy fa\u0301cil la regla, \u00bfno? . Entonces ahora te preguntara\u0301s, * \u00bfco\u0301mo ca\u0301culo el MCD? * . No te asustes, eso es muy fa\u0301cil. El MCD se puede calcular fa\u0301cilmente mediante lo que se conoce como el * * Algoritmo de Euclides* * , el cual nos dice lo siguiente: \u2014\u2014\u2014- * * Algoritmo de Euclides* * Se tienen dos nu\u0301meros a y b. El MCD se obtiene co\u0301mo sigue. Paso 1: Se divide el nu\u0301mero mayor entre el menor. Paso 2: Si, 1. - La divisio\u0301n es exacta, el divisor es el m. c. d. 2. - La divisio\u0301n no es exacta, dividimos el divisor entre el resto obtenido y se continu\u0301a de esta forma hasta obtener una divisio\u0301n exacta, siendo el u\u0301ltimo divisor el m. c. d. \u2014\u2014\u2014- # ProblemaEn este problema se te dara\u0301n N fracciones las cuales tendra\u0301s que simplificar utilizando lo anteriormente mencionado.",
    "input": "En la primera li\u0301nea recibira\u0301s un nu\u0301mero N el cual representa el nu\u0301mero de li\u0301neas que recibira\u0301s posteriormente. En las siguientes N li\u0301neas recibira\u0301s dos nu\u0301meros por li\u0301nea, a y b, do\u0301nde a sera\u0301 el denominador y b el denominador de la fraccio\u0301n.",
    "output": "Tu salida debera\u0301n de ser N li\u0301neas que representara\u0301n las fracciones simplificadas de la entrada. Es importante destacar que las N li\u0301neas que escribas en la salida, debera\u0301n de estar en el mismo orden en que se puso en la entrada, sino se considerara\u0301 como fallida la salida. Adema\u0301s, tambie\u0301n las tendra\u0301s que poner por parejas de nu\u0301meros, donde el primer nu\u0301mero sera\u0301 el numerador y el segundo el denominador.",
    "note": "",
    "topics": [
      "number theory",
      "implementation",
      "math"
    ],
    "id": 6124
  },
  {
    "title": "Canchas",
    "url": "https://omegaup.com/arena/problem/COMI-Canchas",
    "history": "El director de la escuela necesita tu ayuda para redistribuir la cancha de baskety de volley en el patio de la escuela. Ambas canchas ahora sera\u0301n recta\u0301ngulos cuyas esquinasestara\u0301n en coordenadas enteras dentro del nuevo patio. El director te dara\u0301 las coordenadas de las esquinas opuestas de cada cancha nuevay quiere que calcules cua\u0301l sera\u0301 el a\u0301rea total del patio que quedara\u0301 cubierta porambas canchas. A pesar del taman\u0303o del patio de la escuela, puede ser que ambas canchas puedan encimarse, por lo que debera\u0301s tomar eso en cuenta para no contar dos veces el a\u0301rea. # TareaEscribe un programa que dadas las coordenadas de un par de esquinas opuestas de cadacancha calcule el a\u0301rea total cubierta por ambas canchas.",
    "input": "Tu programa debera\u0301 leer del teclado dos li\u0301neas, cada una con 4 nu\u0301meros enteros separadospor un espacio que representan las coordendas x_ 1, y_ 1, x_ 2, y_ 2de cada una de las canchas.",
    "output": "Tu programa debera\u0301 escribir en la pantalla un u\u0301nico nu\u0301mero entero que represente ela\u0301rea total cubierta por ambas canchas",
    "note": "",
    "topics": [
      "math",
      "implementation",
      "geometry"
    ],
    "id": 6120
  },
  {
    "title": "Troyo el cometri\u00e1ngulos",
    "url": "https://omegaup.com/arena/problem/COMI-Troyo",
    "history": "Troyo el cometria\u0301ngulos esta\u0301 hambriento! El requiere de tus asosmbrosas habilidades como programador, para alimentarlo. El tiene infinitos tria\u0301ngulos, pero solo quiere comerse uno de ellos, el tria\u0301ngulo N. Los tria\u0301ngulos de Troyo son algo especial, el tria\u0301ngulo k tiene exactamente k puntos en cada uno de sus tres lados, y sus tria\u0301ngulos esta\u0301n ordenados de acuerdo a cuantos puntos tienen sus lados. Tu sabes que Troyo tiene en su coleccio\u0301n todos los tria\u0301ngulos con una cantidad de puntos entre 1 y n. Ve el ejemplo para que te quede ma\u0301s claro. ! [ holi] ( triangulin. jpg) # ProblemaTu tarea es decirle a Troyo cuantos puntos tiene el n- e\u0301simo tria\u0301ngulo.",
    "input": "La primera y u\u0301nica linea de entrada consiste unicamente de un entero n.",
    "output": "En la primera y u\u0301nica linea debera\u0301s imprimir la cantidad de puntos que tiene el n- e\u0301simo tria\u0301ngulo.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 6119
  },
  {
    "title": "Triples",
    "url": "https://omegaup.com/arena/problem/COMI-Triples",
    "history": "Escribe un programa que lea una lista de enteros no negativos y encuentre todos los \" triples\" ( mu\u0301ltiplos de 3) . Para el propo\u0301sito de este problema un triple se define como cualquier nu\u0301mero que se pueda expresar como 3 \u00d7 x. Por ejemplo, 0, 3, y 27 se consideran triples. Para complicar un poco ma\u0301s las cosas, una vez que identifiques todos los triples debes imprimir su ubicacio\u0301n en la lista original.",
    "input": "La primera li\u0301nea de entrada consiste de un entero, n, la longitud la lista. Las siguientes n li\u0301neas representan los enteros de la lista.",
    "output": "Si hubo mu\u0301ltiplos de 3 en la lista, la primera li\u0301nea de salida debe ser un enteroindicando el nu\u0301mero de triples encontrados. La segunda li\u0301nea contiene enteros separados por espacios, describiendo los i\u0301ndices de los triples en orden ascendiente. Si no hay triples so\u0301lo debes imprimir ` No hay triples. ` . # Ejemplo 1| | input710128932930| | output42 4 5 7| | description4 enteros en la lista son triples: el segundo, cuarto quinto y se\u0301ptimo. ( Sus valores son 12 = 3 \u00d7 4, 9 = 3 \u00d7 3, 3 = 3 \u00d7 1, y 30 = 3 \u00d7 10. ) | | end# Ejemplo 2| | input71649210285531| | outputNo hay triples. | | descriptionNingu\u0301n nu\u0301mero en la lista es un mu\u0301ltiplo de 3. | | end# Li\u0301mites* 1 \u2264 n \u2264 50, 000* 0 \u2264 l_ i\u2264 2, 000, 000, 000",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 6117
  },
  {
    "title": "A + B",
    "url": "https://omegaup.com/arena/problem/COMI-a-b",
    "history": "Debera\u0301s escribir un programa que tome dos nu\u0301meros y los sume.",
    "input": "La entrada consiste en dos enteros, a y b, separados por un espacio en blanco.",
    "output": "Tu salida debe ser un solo nu\u0301mero entero, la suma de a y b.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 6115
  },
  {
    "title": "Sequia",
    "url": "https://omegaup.com/arena/problem/COMI-Sequia",
    "history": "An\u0303os de sequi\u0301a han afectado duramente a Australia. Con los niveles de captacio\u0301n en su punto ma\u0301s bajo, decides comprar un tanque de agua de lluvia. Pronto llegan las lluvias de invierno y el tanque comienza a llenarse lentamente. Comienzas a preguntarse cua\u0301ndo estara\u0301 completamente lleno el tanque. Un amigo de la oficina meteorolo\u0301gica te compartio\u0301 las predicciones de lluvia para los pro\u0301ximos di\u0301as. # ProblemaTeniendo en cuenta estas predicciones, y el taman\u0303o de tu tanque de agua de lluvia, escribe un programa para determinar en cua\u0301ntos se llenara\u0301 el tanque.",
    "input": "La primera li\u0301nea de entrada tendra\u0301 la forma n, c, donde n es el nu\u0301mero de predicciones meteorolo\u0301gicas, y c es la capacidad de tu tanque de agua de lluvia en litros. Se garantiza que c es un entero positivo no mayor que la cantidad total de lluvia que cae durante los n di\u0301as. Las n li\u0301neas de entrada restantes describira\u0301n los niveles de precipitacio\u0301n para cada di\u0301a en orden. cada linea i, contendra\u0301 un entero L_ i: la cantidad de lluvia ( en litros) que caera\u0301 sobre tu tanque de agua de lluvia el di\u0301a i.",
    "output": "Tu salida debe consistir en un entero u\u0301nico: la cantidad de di\u0301as hasta que se llene el tanque de agua de lluvia. | | input6 10233224| | output4| | end# Li\u0301mites* 1 \u2264 n \u2264 1, 000* 0 \u2264 L_ i \u2264 1, 000, 000",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 6085
  },
  {
    "title": "Revancha",
    "url": "https://omegaup.com/arena/problem/COMI-Comida-Fria",
    "history": "Los estadi\u0301sticos no te caen bien, ni tu a ellos. Desde que teni\u0301as 4 an\u0303os, tu enojo contra estos traga- nu\u0301meros ha ido en aumento. Pero esto esta\u0301 a punto de cambiar. Despue\u0301s de muchas noches de insomnio, se te ha ocurrido la mejor de las revanchas: ganarles en su propio juego. Vas a escribir un paquete para estadi\u0301stica tan completo que los vas a dejar sin trabajo. Decides que lo primero que tu progama debe hacer es ana\u0301lisis de datos ba\u0301sico, que consiste en leer un conjunto de datos ( una lista de enteros) y va a calcular las siguientes medidas de dispersio\u0301n: * Valor mi\u0301nimo: el valor ma\u0301s pequen\u0303o en la lista. Por ejemplo el valor ma\u0301s pequen\u0303o ( mi\u0301nimo) de los nu\u0301meros 5, 6, 5, 3 es 3. * Valor ma\u0301ximo: el valor ma\u0301s grande en la lista. El valor ma\u0301s grande ( ma\u0301ximo) de los nu\u0301meros 5, 6, 5, 3 es 6. * Media ( valor promedio) : la suma de todos los nu\u0301meros en la lista, dividida entre la cantidad de nu\u0301meros que hay en ella. La media de los nu\u0301meros 5, 6, 5, 3 es ( 5+ 6+ 5+ 3) / 4 = 19/ 4 = 4. 75. Por sencillez, te piden que tu programa redondee los resultados al nu\u0301mero entero mas grande, pero que sea menor o igual que el resultado. Por ejemplo: 4. 75 se redondea a 4.",
    "input": "La primer li\u0301nea de entrada contiene un solo entero, n ( 1 \u2264 n \u2264 1000) , el taman\u0303o de la lista de nu\u0301meros. En las siguientes n li\u0301neas hay un entero, x_ i ( 0 \u2264 x_ i \u2264 1000000) , en cada linea.",
    "output": "La salida contiene 3 enteros separados por un espacio: el mi\u0301nimo, el ma\u0301ximo, y el promedio de la lista de nu\u0301meros.",
    "note": "",
    "topics": [
      "math",
      "sortings",
      "implementation"
    ],
    "id": 6084
  },
  {
    "title": "Fracci\u00f3n mixta",
    "url": "https://omegaup.com/arena/problem/comi-Fraccion-mixta",
    "history": "En el pasado habi\u0301an muchas formas diferentes de representar fracciones: porcentajes, decimales y fracciones mixtas. Las fracciones mixtas eran tus favoritaspor su escritura hermosa y compacta. Sin embargo, te diste cuenta quese empezo\u0301 a perder la costumbre de usarlas. # ProblemaEscribe un problema que lea una fraccio\u0301n de la forma n/ m ylo escriba como fraccio\u0301n mixta: ab/ m = n/ m.",
    "input": "Una sola li\u0301nea que contiene los enteros n y m.",
    "output": "Si b = \u0338 0, imprime en una li\u0301nea la representacio\u0301n en la formaa \u00b7b/ m. En caso contrario solo imprime a. Miralos ejemplos para que te quede ma\u0301s claro. No debes simplificar la fraccio\u0301n.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 6083
  },
  {
    "title": "\u00bfSentados o parados?",
    "url": "https://omegaup.com/arena/problem/COMI-Sentados-o-parados",
    "history": "Un mu\u0301sico de la ciudad va a dar un concierto para recabar fondos para la caridad. El concierto se realizara\u0301 en un teatro, con un espacio perfectamente designado, en el quehay r filas de asientos con s asientos cada una. En cada asiento se puede sentar comoma\u0301ximo una persona ( es decir, dos personas no pueden sentarse en un mismo asiento) . Pero hay un problema: los boletos para el concierto se han sobrevendido, por lo quealgunas personas van a tener que estar paradas para ver el concierto. # ProblemaEl mu\u0301sico te ha pedido tu ayuda para que respondas la siguiente pregunta: Si todos los que compraron boleto vienen al concierto, \u00bfcua\u0301ntas personas estara\u0301n sentadas y cua\u0301ntas estara\u0301n paradas?",
    "input": "La primer li\u0301nea de la entrada consistira\u0301 en dos enteros, r y s, el nu\u0301mero de filas y el nu\u0301mero de asientos por fila. La segunda li\u0301nea contendra\u0301 un so\u0301lo entero, b, que representa entre el nu\u0301mero de boletosque se han vendido.",
    "output": "La salida debera\u0301 consistir en dos enteros separados por un espacio: el nu\u0301mero de personas que estara\u0301n sentadas y las que permanecera\u0301n paradas, respectivamente. Recuerda que todos intentara\u0301n sentarse si pueden.",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 6082
  },
  {
    "title": "Fibonacci",
    "url": "https://omegaup.com/arena/problem/Fibonacci",
    "history": "Hacer un programa que calcule los N primeros te\u0301rminos de la serie de Fibonacci. Enesta serie cada valor se obtiene de la suma de los dos anteriores. < br> 1, 1, 2, 3, 5, 8, 13, 21, 34, . . . . < br>",
    "input": "Un entero N",
    "output": "Los primeros N nu\u0301meros de la serie de Fibonacci separados por salto de linea.",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 6050
  },
  {
    "title": "Primos menores a n",
    "url": "https://omegaup.com/arena/problem/Primos-menores-a-n",
    "history": "Hacer un programa que muestre los primeros N nu\u0301meros primos.",
    "input": "Un entero N",
    "output": "Los nu\u0301meros primos menores a N separados por un salto de linea.",
    "note": "",
    "topics": [
      "math",
      "number theory",
      "implementation"
    ],
    "id": 6046
  },
  {
    "title": "Cezar",
    "url": "https://omegaup.com/arena/problem/Cezar",
    "history": "Little Caesar likes card games. Everytime he comes to Zagreb, he plays blackjack, the famous card game, with his friends. In this game, the player draws cards while the sum of the cards in his hand is less than or equal to 21 or until he says \u201cDOSTA\u201d ( Croatian for \u201cSTOP\u201d) . At the beginning of the game, there are 52 cards in the deck, thirteen ranks of each of the four suits. The card ranks are two, three, . . . , ten, Jack, Queen, King and Ace. The card values are the following: the cards with numbers on them are worth that number ( e. g. , \u201cnine\u201d is 9) , the cards with pictures ( Jack, Queen, and King) are worth 10, whereas the Ace is worth 11. Caesar has found himself in an interesting situation. During the game, he already drew N cards whose sum is less than or equal to 21 and is now having second thoughts about drawing one more card or not. Let\u2019s assumeX is the difference from the sum of the cards so far to 21. Everybody knows that you don\u2019t draw a card if the number of the remaining cards in the deck whose value is greater than X is greater than or equal to the number of the remaining cards in the deck whose value is less than or equal to X. Since Caesar is having a difficult time calculating whether he needs to draw another card or not, he\u2019s asking you to do it for him. * * INPUT* * The first line of input contains the positive integer \u200bN ( 1 \u2264 \u200bN \u2264 52) , the number of cards Caesar\u200b \u200bhas\u200b \u200bdrawn\u200b \u200bso\u200b \u200bfar. Each of the following \u200bN lines contains a single positive integer, the value of the i\u200bth card Caesar\u200b \u200bdrew. * * OUTPUT* * If Caesar should draw another card, output \u201cVUCI\u201d ( Croatian for \u201cDRAW\u201d) , otherwise output \u201cDOSTA\u201d\u200b \u200b( Croatian\u200b \u200bfor\u200b \u200b\u201cSTOP\u201d) . SAMPLE\u200b\u200bSAMPLE TESTS",
    "input": "110",
    "output": "VUCI",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 6037
  },
  {
    "title": "Tri\u00e1ngulo de n\u00fameros",
    "url": "https://omegaup.com/arena/problem/Triangulo-de-numeros",
    "history": "Dado un nu\u0301mero entero n ( 1 < n \u2264 100) , debera\u0301s imprimir * * n* * li\u0301neas del tria\u0301ngulo segu\u0301n la serie descrita en los ejemplos.",
    "input": "La entrada contiene un nu\u0301mero entero * * n* * ( 1 < n \u2264 100) . Que indica que debera\u0301s imprimir * * n* * li\u0301neas de la serie.",
    "output": "Debera\u0301s mostrar en la primer li\u0301nea el nu\u0301mero * * 1* * , en la siguiente li\u0301nea * * 2 3* * , en la siguiete * * 4 5 6* * , y asi\u0301 sucesivamente. Los nu\u0301meros debera\u0301n estar separados por espacios.",
    "note": "",
    "topics": [
      "divide and conquer",
      "combinatorics",
      "implementation",
      "math"
    ],
    "id": 6018
  },
  {
    "title": "Kaijus",
    "url": "https://omegaup.com/arena/problem/Kaijus",
    "history": "# Kaijus! [ ] ( kaijus. jpg) Los kaijus son mounstros que por alguna razo\u0301n misteriosa salen de una abertura en el oce\u0301ano. La cantidad de Kaijus que aparecen cada an\u0303o se duplica. El 2018 se espera que salga un Kaiju, en el 2019, saldra\u0301n 2 Kaijus, en el 2020, 4 Kaijus, en el 2021, 8 Kaijus, y asi\u0301 sucesivamente. Para defenderse de los Kaijus los humanos han creado sus propios mounstros llamados \" Jaegers\" , que son robots piloteados por dos humanos, y que tienen bastantes moneri\u0301as, como espadas, cohetes, etc. Hay un total de n Jaegers, y las peleas con los Kaijus son uno a uno. Escribe un programa que determine el an\u0303o en el que los Kaijus superara\u0301n a los Jaegers en nu\u0301mero. Ese an\u0303o es de gran importancia, pues puede ser el an\u0303o en que el ser humano deje de existir : ( < b> Nota: < / b> El material con que se hacen los Jaegers se termino despue\u0301s de hacer el n- e\u0301simo Jaeger, asi\u0301 que ya no se pueden hacer ma\u0301s : ' ( .",
    "input": "Un nu\u0301mero n ( 1 \u2264 n \u2264 10^ 9) , indicando la cantidad de Jaegers que existen.",
    "output": "El an\u0303o en que los Kaijus superara\u0301n a los Jaegers en nu\u0301mero| | input1| | output2019| | input8| | output2022| | end",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 6010
  },
  {
    "title": "Suma De Potencias (original)",
    "url": "https://omegaup.com/arena/problem/Suma-De-Potencias-original",
    "history": "En tus cursos de ca\u0301lculo ( o en cualquier otro curso donde te hayan hablado de la induccio\u0301n matema\u0301tica) te habra\u0301s enfrentado a la necesidad de sumar las potencias de varios nu\u0301meros consecutivos. Por ejemplo, la suma de los cubos de los nu\u0301meros del 5 al 9 es igual a 5^ 3 + 6^ 3 + 7^ 3 + 8^ 3 + 9^ 3 = 125 + 216 + 343 + 512 + 729 = 1925. Dados dos nu\u0301meros enteros a, b ( con a < b) y un nu\u0301mero entero positivo n, debes calcular la suma s de las potencias n- e\u0301simas de los nu\u0301meros a, a + 1, . . . , b, es decir: s = a^ n + ( a + 1) ^ n + \u00b7\u00b7\u00b7+ b^ n.",
    "input": "Consiste de tres nu\u0301meros enteros, a, b, n, separados por espacios, que cumplen - 100 \u2264 a < b \u2264 100 y 0 < n < 10.",
    "output": "Consiste de un nu\u0301mero entero s cuyo valor absoluto siempre sera\u0301 menor que 2 000 000 000.",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 6006
  },
  {
    "title": "Comida del maestro carlos",
    "url": "https://omegaup.com/arena/problem/Comida-del-maestro-carlos",
    "history": "El maestro Carlos decidio\u0301 dejarle a cada alumno una cantidad M de cada tipo G de galletas, pero quiere saber cuantas galletas tienen todos en total",
    "input": "Primera linea: A y G los cuales son la cantidad de alumnos y las cantidad de tipos de galleta. En las siguientes A lineas, van G enteros M que es la cantidad de galletas tipo G_ i que tiene el alumno A_ i",
    "output": "A enteros en lineas distintas que es la cantidad de galletas totales que tiene el alumno A_ i",
    "note": "",
    "topics": [
      "implementation",
      "math",
      "matrices"
    ],
    "id": 5986
  },
  {
    "title": "El mejor programador",
    "url": "https://omegaup.com/arena/problem/Comparacion-programadores",
    "history": "Santiago decidio\u0301 hacer un programa capaz de decir el mejor de dos programadores conforme su calificacio\u0301n en sus practicas, curiosamente no hubo empates# ProblemaDado dos programadores con su calificaciones decir el nombre del mejor",
    "input": "- * * Primera linea: * * Un nombre del primer programador y un entero A que simboliza sus puntos- * * Segunda linea: * * Un nombre del primer programador y un entero B que simboliza sus puntos",
    "output": "Nombre del mejor programador",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 5978
  },
  {
    "title": "Buscando el negativo",
    "url": "https://omegaup.com/arena/problem/Buscando-el-negativo",
    "history": "Escribe un programa que lea una serie de nu\u0301meros enteros e imprima la suma de todos los nu\u0301meros que esten en el rango 10 a 100. La serie de nu\u0301meros termina cuando lees un nu\u0301mero negativo.",
    "input": "Una lista de nu\u0301meros enteros separados por un espacio. La lista siempre termina con un valor negativo.",
    "output": "En la primera li\u0301nea un entero correspondiente a la suma de los nu\u0301meros que estuvieron en el rango 10 a 100. # Ejemplos# | | input20 2 30 40 8 - 1| | output90| | descriptionSe sumaron 20+ 30+ 40= 90| | end",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 5954
  },
  {
    "title": "\u00bfPrimo o Compuesto?",
    "url": "https://omegaup.com/arena/problem/Primo-o-Compuesto",
    "history": "Dado un entero N, determina si se trata de un nu\u0301mero primo o un nu\u0301mero compuesto. * Un nu\u0301mero primo es aquel que solo se puede dividir entre si\u0301 mismo y entre la unidad. * Un nu\u0301mero compuesto es producto potencias de primos, si un nu\u0301mero no es primo, entonces es compuesto.",
    "input": "Recibira\u0301s el entero N",
    "output": "Debes imprimir PRIMO si el nu\u0301mero lo es, en caso contrario imprime COMPUESTO# Ejemplos| | input11| | outputPRIMO| | description| | end| | input24| | outputCOMPUESTO| | description( 2^ 3) * ( 3^ 1) | | end",
    "note": "",
    "topics": [
      "number theory",
      "math",
      "implementation"
    ],
    "id": 5952
  },
  {
    "title": "Secuencia de Collatz",
    "url": "https://omegaup.com/arena/problem/Secuencia-de-Collatz",
    "history": "La conjetura de collatz propone que para cualquier entero positivo n es posible llegar al nu\u0301mero 1 si se le aplica repetidamente la siguiente operacio\u0301n: - Si n es par, divide a n entre 2- Si n es impar, multiplica n por 3 y suma 1 al resultadoPor ejemplo, para n= 5, se obtendra\u0301 la serie 5, 16, 8, 4, 2, 1 cuya longitud es 6.",
    "input": "Un entero n que sera\u0301 evaluado por el procedimiento mencionado.",
    "output": "Un entero, que representa la longitud de la serie generada aplicando la conjetura de Collatz.",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 5936
  },
  {
    "title": "Unidades brit\u00e1nicas de longitud",
    "url": "https://omegaup.com/arena/problem/britanicas-longitud",
    "history": "Con toda seguridad te has enfrentado a las unidades brita\u0301nicas de longitud. Lo que no todo el mundo sabe es co\u0301mo se relacionan unas con las otras. Una * milla* son 8 * furlongs* , un * furlong* son 220 * yardas* , una * yarda* son 3 * pies* , un * pie* son 12 pulgadas y una pulgada son. . . bueno, mejor alli\u0301 lo dejamos ( como vera\u0301n, los brita\u0301nicos se complicaron demasiado la vida y, no conformes, inventaron otras unidades de longitud extran\u0303as como el * rod* que mide 5. 5 * yardas* y el * fathom* que mide 6 * pies* ) . Dada una cierta cantidad de pulgadas u, debera\u0301s determinar cua\u0301ntas millas m, furlongs f, yardas y, pies p y pulgadas q completas representan. Por ejemplo, si se tiene que u = 40 000 000, entonces m = 631, f = 2, y = 111, p = 0, q = 4.",
    "input": "Consiste de un nu\u0301mero entero u que tendra\u0301 un valor entre 0 y 2 000 000 000.",
    "output": "Consiste de cinco nu\u0301meros enteros, m, f, y, p, q, separados por espacios.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 5927
  },
  {
    "title": "Suma Fibonacci",
    "url": "https://omegaup.com/arena/problem/Suma-Fibonacci",
    "history": "La sucesio\u0301n de Fibonacci comienza con F( 1) = 1, F( 2) = 2 y continua con F( n) = F( n- 1) + F( n- 2) para toda n ? 3. Todo nu\u0301mero entero positivo se puede escribir como suma de elementos de la sucesio\u0301n de Fibonacci, por ejemplo, el nu\u0301mero 10 se puede escribir como F( 4) + F( 4) , F( 4) + F( 3) + F( 2) o F( 5) + F( 2) . Sin embargo, existe una u\u0301nica forma de escribir cada entero positivo como sumas de elementos distintos de la sucesio\u0301n de Fibonacci que no sean consecutivos, en nuestro caso 10 = F( 5) + F( 2) seri\u0301a la u\u0301nica forma valida. Escribe un programa que dado un entero positivo n encuentre esta suma u\u0301nica.",
    "input": "Un numero entero n. Puedes suponer que 10 ? n ? 1, 000, 000, 000.",
    "output": "Un numero entero k, la cantidad de sumandos, seguido de k nu\u0301meros enteros que indican la posicio\u0301n de los sumandos en la sucesio\u0301n",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 5926
  },
  {
    "title": "Calculando potencias de 2.",
    "url": "https://omegaup.com/arena/problem/Calculando-potencias-de-2",
    "history": "# DescriptionDado un entero N, determina la potencia a la que se eleva el 2 para llegar a N, es decir 2^ k= N. Debes determinar k.",
    "input": "El entero N",
    "output": "Debes imprimir un entero que represente la potencia de 2 para alcanzar N.",
    "note": "",
    "topics": [
      "number theory",
      "math",
      "implementation"
    ],
    "id": 5917
  },
  {
    "title": "DiferentesDigitos",
    "url": "https://omegaup.com/arena/problem/DiferentesDigitos",
    "history": "Los habitantes de Nlogonia son muy supersticiosos. Una de sus creencias es que los nu\u0301meros de las casas de la calle que tienen un di\u0301gito repetido trae mala suerte para los residentes. Por lo tanto, nunca podri\u0301an vivir en una casa que tiene un nu\u0301mero de calle como 838 o 1004. La Reina de Nlogonia ordeno\u0301 una nueva avenida costera que se construira\u0301, y que quiere asignar a las nuevas casas so\u0301lo nu\u0301meros sin di\u0301gitos repetidos, para evitar malestar entre sus su\u0301bditos. Usted ha sido nombrado por Su Majestad para escribir un programa que, dados dos enteros N y M, determine el nu\u0301mero ma\u0301ximo de viviendas que se pueden asignar nu\u0301meros de la calle entre N y M, incluyente, que no tengan di\u0301gitos repetidos.",
    "input": "Valor de N y M.",
    "output": "Cantidad de nu\u0301meros de las viviendas de la calle",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 5909
  },
  {
    "title": "Sumando horas",
    "url": "https://omegaup.com/arena/problem/sumando-horas",
    "history": "Por haber puente y adema\u0301s trabajar semana inglesa, Brandon so\u0301lo ha trabajado tres di\u0301as, sin embargo a e\u0301l le pagan por la cantidad de tiempo que trabajan en total las ma\u0301quinas que tiene a su cargo. Para este problema tendra\u0301s que sumar la cantidad de tiempo que trabajaron las ma\u0301quinas cada uno de los tres di\u0301as, y mostrar el total en un formato de * * h: mm: ss* * .",
    "input": "La entrada son tres cantidades de tiempo de la forma * * h: mm: ss* * , un tiempo en cada li\u0301nea, con 0 \u2264 h \u2264 150 y 00 \u2264 mm, ss \u2264 59. Ten en cuenta que * * H* * puede representarse con hasta tres di\u0301gitos ; mm y ss siempre se representan con 2 di\u0301gitos.",
    "output": "Es un u\u0301nico valor * * h: mm: ss* * con los mismos criterios para la entrada, es decir, * * h* * puede tener hasta 3 di\u0301gitos y * * mm* * y * * ss* * siempre sera\u0301n de 2 di\u0301gitos.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 5891
  },
  {
    "title": "occ10nsfd21",
    "url": "https://omegaup.com/arena/problem/occ10nsfd21",
    "history": "# Sucesio\u0301n CollatzLa Sucesio\u0301n Collatz es calculada de la siguiente forma. Comience con un entero, C. * Si C es 1, la sucesio\u0301n ha terminado* En otro caso* Si C es par, entonces divi\u0301dalo por dos dando un nuevo C* Si C es impar, entonces reempla\u0301celo por 3\u00d7 C+ 1Continu\u0301e estas reglas hasta que la sucesio\u0301n termine. Considere la Sucesio\u0301n Collatz que empieza con el entero 10: 10, 5, 16, 8, 4, 2, 1. Tiene longitud 7. Haga un programa que reciba como entrada un nu\u0301mero entero C ( 1 \u2264 C \u2264 32 000) encuentrela longitud de la sucesio\u0301n Collatz que empieza con C.",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 5887
  },
  {
    "title": "occ10pnsf32",
    "url": "https://omegaup.com/arena/problem/occ10pnsf32",
    "history": "# Reduciendo fraccionariosHaga un programa que reciba como entrada dos nu\u0301meros enteros n y d ( 1\u2264 n, d \u2264 100) que representan el numerador y denominador de un fraccionario n/ d ydiga cua\u0301l es el numerador y el denominador del fraccionario reducido. # Ejemplos| | input24 9| | output8 3| | input15 16| | output15 16| | end",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 5885
  },
  {
    "title": "occ10pnsf31",
    "url": "https://omegaup.com/arena/problem/occ10pnsf31",
    "history": "# AjedrezHaga un programa que reciba como entrada una posicio\u0301n de un tablero de ajedrez, y diga si la casilla es BLANCA o NEGRA. Dicha posicio\u0301nse debe recibir en el sistema que usan los ajedrecistas, es decir, que las filas se representan por los nu\u0301meros de 1 a 8 y las columnas por lasletras de A a H( A1 es NEGRA) .",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 5884
  },
  {
    "title": "occ10pnsf23",
    "url": "https://omegaup.com/arena/problem/occ10pnsf23",
    "history": "# Cuadrado perfectoHaga un programa que reciba como entrada un nu\u0301mero entero y que determine si es el cuadrado de otro y reporte cua\u0301l es, si la respuesta es afirmativa. # Ejemplos| | input25| | outputSI 5| | input86| | outputNO| | end",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 5881
  },
  {
    "title": "pb-calcula su swag",
    "url": "https://omegaup.com/arena/problem/calcula-su-swag",
    "history": "snoop dogg te acaba de pedir que hagas un programa que calcule su nivel de swag con tan soloescribir su nombre , pero ademas quiere comprartelo para usarlo en su fiesta con el dios edgar ( el que se cayo al rio ) , el quiere que su programa consista en leer su nombre , posteriormente darle su nivel de swag . ! [ enter image description here] [ 1]",
    "input": "introduciras el nombre solicitado",
    "output": "imprime su nivel de swag",
    "note": "",
    "topics": [
      "math",
      "strings"
    ],
    "id": 5853
  },
  {
    "title": "Base de un triangulo",
    "url": "https://omegaup.com/arena/problem/Base-de-un-triangulo",
    "history": "Un di\u0301a Miguelito se senti\u0301a muy frustado ya que no habi\u0301a pasado la olimpiada de matema\u0301ticas, asi\u0301 que decidio\u0301 pasar la de informa\u0301tica como venganza. A miguelito le gustaba la de informa\u0301tica ya que no habi\u0301a problemas de geometri\u0301a pero \u00a1Oh, sorpresa! de repente vio un problema de un triangulo en la plataforma el cual te deci\u0301a * * * \" Halla la base de triangulo teniendo la altura\" * * * , el dijo \" Que fa\u0301cil\" pero al parecer como Diosito no lo quiere su computadora fallaba y le dividi\u0301a la altura entre dos, asi\u0301 que a el no lo detuvo eso y consiguio\u0301 resolver el problema# ProblemaDecrifa cual era el programa que creo miguel con su computadora fallada",
    "input": "Dos enteros A y B, la media altura del triangulo y su a\u0301rea respectivamente",
    "output": "La base del triangulo",
    "note": "",
    "topics": [
      "math",
      "implementation",
      "geometry"
    ],
    "id": 5845
  },
  {
    "title": "Apenas Pas\u00e9",
    "url": "https://omegaup.com/arena/problem/CR-Apenas-Pase",
    "history": "Gilberto tuvo muchos examenes esta semana, uno por cada materia de este semestre. Giberto quiere mantener un promedio alto para poder presumir de alguna cosa, o al menos quiere tener un promedio mas alto que el de sus amigos. Tu tarea es ayudar a Gilberto a dos cosas: 1- . Conocer el promedio de sus exa\u0301menes. 2. - Saber si su promedio fue mas alto que el de sus amiguitos.",
    "input": "En la primera li\u0301nea leera\u0301s un numero K que representa la calificacio\u0301n promedio de sus amigos. Despue\u0301s leera\u0301s un nu\u0301mero N que representa cuantas materias Gilberto lleva este semestre. A continuacio\u0301n leera\u0301s N li\u0301neas, cada una contiene una calificacio\u0301n para una de las N materias que Gilberto cursa.",
    "output": "Debera\u0301s imprimir \" Presume\" si el promedio de Gilberto es MAYOR al de sus amigos y\" Ladra\" en caso contrario.",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 5842
  },
  {
    "title": "Calor\u00edas Odiosas",
    "url": "https://omegaup.com/arena/problem/Calorias-Odiosas",
    "history": "Jorge esta\u0301 obsesionado con su peso y con hacer ejercicio, a tal punto que cada vez que come calcula las calori\u0301as de sus alimentos y diario va al gym. U\u0301ltimamente se ha sentido gordo, cree que no esta\u0301 haciendo suficiente ejercicio y que deberi\u0301a correr ma\u0301s. Para ver si tiene razo\u0301ndecidio\u0301 registrar cua\u0301nto tiempo corre cada di\u0301a. Su nutrio\u0301logo le dijo que necesita quemar 180 calori\u0301as al di\u0301a. Jorge quiere saber cua\u0301ntascalori\u0301as quema en un di\u0301a si por cada minuto que corre quema 15 calori\u0301as, pero esta\u0301 un poco confundido con la equivalencia, entonces te pide que lo ayudes. Tu tarea es hacer un programa que dados los minutos que Jorge corre cada di\u0301a de la semana ( la cantidadvari\u0301a dependiendo del a\u0301nimo de Jorge) diga cua\u0301ntas calori\u0301as quemo\u0301 en un di\u0301a en especi\u0301fico, Jorge te dira\u0301 el di\u0301a del cual le interesasaber esta informacio\u0301n. Adema\u0301s, Jorge quiere averiguar si ese di\u0301a al menos quemo\u0301 las calori\u0301as que su nutrio\u0301logo le recomendo\u0301, por lo queel programa debera\u0301 desplegar un mensaje que diga \" Bien hecho ; ) \" si es que quemo\u0301 180 o ma\u0301s calori\u0301as, y en caso contrario, elmensaje a mostrar sera\u0301 \" Muy mal, no puedo creerlo : ( \" .",
    "input": "Primero leera\u0301s 7 li\u0301neas cada una con un nu\u0301mero que dice cua\u0301ntos minutos corrio\u0301 Jorge en cada uno de los di\u0301as de la semana, despue\u0301sleera\u0301s 1 li\u0301nea con un nu\u0301mero que indica el di\u0301a sobre el cua\u0301l Jorge quiere saber cua\u0301ntas calori\u0301as quemo\u0301.",
    "output": "Un nu\u0301mero n que indica cua\u0301ntas calori\u0301as quemo\u0301 Jorge en el di\u0301a en el que te dijo, y adema\u0301s su correspondiente mensaje, ya sea\" Bien hecho ; ) \" si quemo 180 o mas calori\u0301as, o bien, \" Muy mal, no puedo creerlo : ( \" en caso contrario.",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 5841
  },
  {
    "title": "Fahrenheit a Centigrados (agua fr\u00eda y caliente)",
    "url": "https://omegaup.com/arena/problem/Fahrenheit-a-Centigrados",
    "history": "Escriba un programa que lea una temperatura F en grados Fahrenheit y que escriba la temperatura equivalente C en grados centi\u0301grados. Recuerde que 9 C = 5 ( F - 32) . Adema\u0301s, su programa debe decir si a esa temperatura el agua estari\u0301a fri\u0301a ( C \u2264 36) o caliente ( C > 36) . Use u\u0301nicamente enteros para realizar los ca\u0301lculos.",
    "input": "Consiste de un nu\u0301mero entero F que tendra\u0301 un valor entre - 450 y 1000.",
    "output": "Consiste de dos nu\u0301meros enteros C y E en ese orden y separados por un espacio, donde E = 0 si el agua esta\u0301 fri\u0301a y E = 1 si esta\u0301 caliente.",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 5835
  },
  {
    "title": "\u00bfTriangulo?",
    "url": "https://omegaup.com/arena/problem/TrianguloUASLP",
    "history": "Hacer un programa que reciba el taman\u0303o de los tres lados de un triangulo, y determinesi con dichos lados se puede formar este tria\u0301ngulo. Para formar un tria\u0301ngulo, uno delos lados ha de ser ma\u0301s pequen\u0303o que la suma de los otros dos.",
    "input": "El taman\u0303o de los tres lados del triangulo.",
    "output": "Si se puede formar un triangulo imprimir SI, si no se puede, imprimir NO.",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 5832
  },
  {
    "title": "Suma Fibonacci",
    "url": "https://omegaup.com/arena/problem/Suma-Fibo",
    "history": "La sucesio\u0301n de Fibonacci comienza con F( 1) = 1, F( 2) = 2 y continua con F( n) = F( n- 1) + F( n- 2) para toda n ? 3. Todo nu\u0301mero entero positivo se puede escribir como suma de elementos de la sucesio\u0301n de Fibonacci, por ejemplo, el nu\u0301mero 10 se puede escribir como F( 4) + F( 4) , F( 4) + F( 3) + F( 2) o F( 5) + F( 2) . Sin embargo, existe una u\u0301nica forma de escribir cada entero positivo como sumas de elementos distintos de la sucesio\u0301n de Fibonacci que no sean consecutivos, en nuestro caso 10 = F( 5) + F( 2) seri\u0301a la u\u0301nica forma valida. Escribe un programa que dado un entero positivo n encuentre esta suma u\u0301nica.",
    "input": "Un numero entero n. Puedes suponer que 10 ? n ? 1, 000, 000, 000.",
    "output": "Un numero entero k, la cantidad de sumandos, seguido de k nu\u0301meros enteros que indican la posicio\u0301n de los sumandos en la sucesio\u0301nEjemplo de entradan= 10Ejemplo de salidak= 2 porque F( 5) + F( 2) Ejemplo de entradan= 51Ejemplo de salidak= 4 porque F( 8) + F( 6) + F( 3) + F( 1)",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 5826
  },
  {
    "title": "\u00c1rea de un tri\u00e1ngulo ",
    "url": "https://omegaup.com/arena/problem/area-triangulo-inout",
    "history": "En la escuela a Carlitos le han ensen\u0303ado a calcular el a\u0301rea de un tria\u0301ngulo usando los valores de los lados. La maestra le ha indicado que lo primero que debe calcular es el valor: S = L_ 1 + L_ 2 + L_ 3/ 2 El siguiente paso es aplicar la fo\u0301rmula para calcular el a\u0301rea. area = \u221a( s ( s- L_ 1) ( s- L_ 2) ( s- L_ 3) ) Carlitos esta\u0301 empezando sus cursos, por ello te pide que le apoyes escribiendo un programa que permita verificar si esta\u0301 haciendo bien sus ca\u0301lculos.",
    "input": "Recibira\u0301s 3 valores de tipo real. Estos lados corresponden siempre a un tria\u0301ngulo va\u0301lido.",
    "output": "Mostrar cada uno de los lados lei\u0301dos en la entrada y el a\u0301rea del tria\u0301ngulo. Considera 15 caracteres para imprimir cada nu\u0301mero y cuatro decimales. Los detalles puedes consultarlos en los ejemplos.",
    "note": "",
    "topics": [
      "implementation",
      "geometry",
      "math"
    ],
    "id": 5821
  },
  {
    "title": "Bienaventurado Palad\u00edn",
    "url": "https://omegaup.com/arena/problem/Bienaventurado-Paladin",
    "history": "En una de sus aventuras Popotes ( el poderoso paladi\u0301n de Silvermoon) se encontro\u0301 un mazo especial que le da ma\u0301s ataque tomando en cuenta la defensa que tenga su armadura ( PORQUE ES MA\u0301GICO) . Cuando Popotes usa el mazo su ataque incrementa en 3 VECES la cantidad de defensa que tenga su armadura, aunque el mazo tiene un ataque base. Popotes necesita tu ayuda para saber cua\u0301nto incrementa su ataque cuando equipa el mazo.",
    "input": "En la primera li\u0301nea un entero A que representa la cantidad de ataque base que tiene el mazo. En la segunda li\u0301nea un entero D que representa la cantidad de defensa que tiene la armadura de Popotes.",
    "output": "Un entero que represente la cantidad de ataque final que el mazo le dari\u0301a a Popotes.",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 5807
  },
  {
    "title": "Antig\u00fcedades Africanas",
    "url": "https://omegaup.com/arena/problem/Antiguedades-Africanas",
    "history": "El geo\u0301logo Alfonso realizaba una expedicio\u0301n por A\u0301frica y durante su viaje encontro\u0301 distintos restos de animales, plantas y objetos en la tierra dentro de los cua\u0301les se encontraban huesos de dinosaurios. Cada resto se puede representar con un nu\u0301mero y Alfonso habi\u0301a estudiado el territorio, por ello sabi\u0301a que si el resultado de multiplicar los restos que se encontraban al norte, sur, este y oeste ( de donde se encontraba) resultara par, se trataba de un fo\u0301sil de dinosaurio. Por el contrario, si la multiplicacio\u0301n de las 4 zonas resultaba impar, seri\u0301a un fo\u0301sil de cualquier otra cosa. Tu tarea es ayudar a Alfonso a saber si los restos que encontro\u0301 son de dinosaurio o no.",
    "input": "Cuatro nu\u0301meros, cada uno en una li\u0301nea distinta, que representan los restos que Alfonso encontro\u0301 en las 4 direcciones mencionadas.",
    "output": "Debes imprimir \" Dinosaurio\" en caso de que los restos encontrados por Alfonso correspondan a uno, y \" No Dinosaurio\" en caso contrario.",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 5806
  },
  {
    "title": "El problema de Pit\u00e1goras",
    "url": "https://omegaup.com/arena/problem/Pitagoricas",
    "history": "El ma\u0301s famoso teorema de Pita\u0301goras dice que si los catetos de un tria\u0301ngulo recta\u0301ngulo miden a, b unidades, y la hipotenusa del tria\u0301ngulo recta\u0301ngulo mide c unidades, entonces se cumple que a^ 2 + b^ 2 = c^ 2. Se dice que tres nu\u0301meros naturales a, b, c forman una terna pitago\u0301rica si cumplen la relacio\u0301n a^ 2 + b^ 2 = c^ 2. La ma\u0301s famosa es tal vez 3^ 2 + 4^ 2 = 5^ 2. Antes de los griegos, los egipcios ya conoci\u0301an varias ternas pitago\u0301ricas, aunque so\u0301lo para valores pequen\u0303os de a, b, c. Dados dos nu\u0301meros enteros, m , n, podri\u0301amos encontrar todas las ternas pitago\u0301ricas ( a , b , c) tales que m \u2264 a \u2264 b \u2264 c \u2264 n. Por ejemplo, si m = 6, n = 20, entonces hay 4 ternas pitago\u0301ricas en ese intervalo, que son ( 6, 8, 10) , ( 8, 15, 17) , ( 9, 12, 15) y ( 12, 16, 20) .",
    "input": "Dos nu\u0301meros enteros, m, n, separados por un espacio, que tendra\u0301n un valor entre 1 y 1 000 000.",
    "output": "Un nu\u0301mero entero p, esto es, la cantidad de ternas pitago\u0301ricas con las propiedades deseadas. # Ejemplos| | input6 20| | output4| | input1000 2000| | output158| | end",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 5800
  },
  {
    "title": "Introducci\u00f3n a OmegaUp",
    "url": "https://omegaup.com/arena/problem/Introduccion-a-OmegaUp",
    "history": "Escribe un programa que lea dos nu\u0301meros enteros n, m, y entregue su suma.",
    "input": "Dos nu\u0301meros enteros n, m con valores entre - 1000 y + 1000.",
    "output": "El entero resultante de la suma: n+ m.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 5799
  },
  {
    "title": "Divisores",
    "url": "https://omegaup.com/arena/problem/NumDivisores",
    "history": "Escribe un programa que lea un nu\u0301mero entero positivo N y que escriba la cantidad D de divisores positivos de N. Por ejemplo, el 6 tiene 4 divisores ( que son 1, 2, 3 y 6) .",
    "input": "Consiste de un nu\u0301mero entero N que tendra\u0301 un valor entre 1 y 1 000 000.",
    "output": "Consiste de un nu\u0301mero entero D.",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 5798
  },
  {
    "title": "Tipo de tri\u00e1ngulo",
    "url": "https://omegaup.com/arena/problem/Tipo-de-triangulo",
    "history": "Tres nu\u0301meros enteros a, b, c son las longitudes de los lados de un tria\u0301ngulo si son positivos y satisfacen las tres desigualdades del tria\u0301ngulo: a + b > c; b + c > a; c + a > b. En este ejercicio nos interesan tres tipos de tria\u0301ngulos: equila\u0301teros, iso\u0301sceles y escalenos. Dados tres nu\u0301meros enteros a, b, c, se desea saber si ellos son las longitudes de los lados de un tria\u0301ngulo. Si lo son, se desea saber de que tipo es el tria\u0301ngulo. Si no lo son, se desea calcular el mi\u0301nimo nu\u0301mero entero d tal que a + d, b + d, c + d sean las longitudes de los lados de un tria\u0301ngulo. Por ejemplo, si a = 3, b = 4, c = 5, entonces estamos hablando de un tria\u0301ngulo escaleno; pero si a = 3, b = 1, c = 2, entonces no tenemos un tria\u0301ngulo y necesitamos sumar d = 1 para obtener un tria\u0301ngulo de lados a+ d= 4, b+ d= 2, c+ d= 3.",
    "input": "Consiste de tres nu\u0301meros enteros, a, b, c, separados por espacios, que tendra\u0301n valores cada uno entre - 1 000 000 000 y 1 000 000 000.",
    "output": "Consiste de dos nu\u0301meros enteros, t, d, separados por un espacio. El valor de t sera\u0301 0 si no es tria\u0301ngulo, 1 si es equila\u0301tero, 2 si es iso\u0301sceles y 3 si es escaleno. El valor de d sera\u0301 0 ( salvo que t = 0) . # Ejemplos| | input3 4 5| | output3 0| | input3 1 2| | output0 1| | end",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 5797
  },
  {
    "title": "El Caracol",
    "url": "https://omegaup.com/arena/problem/El-Caracol",
    "history": "Un caracol ha cai\u0301do en un agujero de p metros de profundidad. En su intento de salir del agujero, el caracol sube s metros cada di\u0301a, pero se resbala r metros cada noche. Si s es mayor que r, el caracol lograra\u0301 salir finalmente del agujero. Por ejemplo, si el agujero tiene 10 metros de profundidad y el caracol sube 5 metros cada di\u0301a y se resbala 2 metros cada noche, entonces el caracol lograra\u0301 salir al tercer di\u0301a. Dados los nu\u0301meros p, s, r, debera\u0301s determinar el nu\u0301mero d de di\u0301as que tardara\u0301 en salir el caracol.",
    "input": "Tres nu\u0301meros enteros, p, s, r ( con s> r) , separados por espacios, que tendra\u0301n un valor entre 1 y 1 000 000.",
    "output": "El nu\u0301mero entero d.",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 5796
  },
  {
    "title": "Aprovechando los dedos",
    "url": "https://omegaup.com/arena/problem/dedosbinarios",
    "history": "Ricardo es un joven altruista y en el verano se dedico a ayudar personas mudas a aprender lenguaje de sen\u0303as en una escuela por su pueblo, sin embargo, tambie\u0301n es un matema\u0301tico raro y se dio cuenta de lo ineficiente que es representar los nu\u0301meros del uno al diez con lasdos manos, asi que penso que podrian representar aun ma\u0301s nu\u0301meros con una mano si utilizaran notacio\u0301n binaria. Asi que les ensen\u0303oa representar nu\u0301meros del 0 al 31 con una sola mano! ! ! ! [ Ejemplo de coomo funciona el conteo con los dedos] ( dedos. png) Logro esto haciendo que cada dedo de sus manos representara una potencia de dos, siendo el men\u0303ique 2^ 0 y el pulgar 2^ 4, y si dicha potencia se debe sumar o no, dependiendo de si el dedo esta levantado. Ahora te ha pedido que escribas un programa que traduzca el nu\u0301mero que los alumnos de Ricardo quieren representar dados que dedos tienen levantados en orden de izquierda a derecha y que mano usaron( Ricardo tiene alumnos zurdos) .",
    "input": "En la primera linea recibira\u0301s un caracter L o R dependiendo de si la mano usada fue la izquierda o derecha respectivamente. Las siguientes 5 lineas contendra\u0301n 1 si el alumno tiene el i- e\u0301simo dedo levantado o 0 de lo contrario.",
    "output": "Debera\u0301s imprimir el nu\u0301mero decimal que el alumno represento con su mano.",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 5789
  },
  {
    "title": "2018_1 Cuadraticas",
    "url": "https://omegaup.com/arena/problem/2018_1_Cuadraticas",
    "history": "Dada la ecuacio\u0301n cuadra\u0301tica de la forma general Ax^ 2+ Bx+ C= 0, donde A, B, C \u2208 R, encuentra sus soluciones utilizando la fo\u0301rmula: x= - b \u00b1\u221a( b^ 2- 4ac) / 2a Sabiendo que si el determinante D= b^ 2- 4ac es positivo, la ecuacio\u0301n tiene dos soluciones, si D es 0, la ecuacio\u0301n tiene una solucio\u0301n, y si D es negativo, no tiene soluciones.",
    "input": "Tres nu\u0301meros decimales que representan los te\u0301rminos A, B y C de la ecuacio\u0301n cuadra\u0301tica, respectivamente.",
    "output": "Si la ecuacio\u0301n tiene dos soluciones, la salida constara\u0301 de las dos soluciones, cada una en un renglo\u0301n, donde la primera solucio\u0301n sera\u0301 la ma\u0301s pequen\u0303a y la segunda, la de mayor valor. Si la ecuacio\u0301n tiene una so\u0301la solucio\u0301n dentro de los nu\u0301meros reales, so\u0301lo se mostrara\u0301 una solucio\u0301n. Si la ecuacio\u0301n no tiene soluciones dentro de los nu\u0301meros reales, se mostrara\u0301 el mensaje \" NA\" .",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 5771
  },
  {
    "title": "Sumar 2 numeros enteros",
    "url": "https://omegaup.com/arena/problem/Sumar-2-numeros-enteros",
    "history": "Sumar 2 numeros enteros y dar el resultado al final del problema sin decimales",
    "input": "1 2",
    "output": "3",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 5765
  },
  {
    "title": "Adrian",
    "url": "https://omegaup.com/arena/problem/VIRGEN",
    "history": "Dado un vector de taman\u0303o N, calcular S. S = v[ 0] - v[ 1] + v[ 2] - v[ 3] + . . . + / - v[ n- 1]",
    "input": "En la primer linea un entero N. En la segunda linea N enteros que respresentan el vector.",
    "output": "En una linea un entero S ya descrito en la descripcion.",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 5762
  },
  {
    "title": "2018_1_CONDICIONES3",
    "url": "https://omegaup.com/arena/problem/2018_1_CONDICIONES3",
    "history": "El impuesto del ISR es escalonado, lo que quiere decir que mientras ma\u0301s ganas, ma\u0301s porcentaje de impuestos debes pagar, pero so\u0301lo si pasas de ciertos li\u0301mites. La manera de calcularlo es viendo en que\u0301 nivel de la tabla se encuentra un salario. Dependiendo de ese nivel, se paga una cuota fija. La parte del salario que se pase del li\u0301mite inferior en nuestro nivel de la paga, paga una tasa porcentual de ISR. Al final se unen esos dos valores. Una tabla simplificada de impuestos es como sigue: ! [ Tabla de datos ISR] ( isr. png) A partir de la tabla, calcular el ISR para un salario dado.",
    "input": "El salario de una persona, como nu\u0301mero decimal. 0< = N< = 200, 000",
    "output": "La cantidad de impuesto ISR que se debe pagar, como nu\u0301mero decimal.",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 5754
  },
  {
    "title": "Extravagant Versioning",
    "url": "https://omegaup.com/arena/problem/Extravagant-Versioning",
    "history": "# Descripcion del problemaHace algunos an\u0303os, a un ingeniero exce\u0301ntrico se le ocurrio\u0301 que seri\u0301a una excelente idea expresar las versiones del firmware en el hardware con nu\u0301meros romanos. Por ejemplo, la primera versio\u0301n fue denominada RioFirmware I y la quinta RioFirmware V. Debido a cambios en la arquitectura del driver, ahora es necesario que la versio\u0301n del firmware se almacene en la memoria del producto, sin embargo, esto no fue previsto por los ingenieros que disen\u0303aron el producto inicialmente y el espacio en memoria que dejaron disponible no es suficiente para almacenar el valor en ASCII de la versio\u0301n. Es por esto que tu trabajo consiste en transformar la versio\u0301n actual del firmware de cada producto de nu\u0301meros romanos a su representacio\u0301n en hexadecimal para que pueda ser almacenada en la memoria del producto. # EntradasLa primer linea de la entrada contiene un enter D, la cantidad de versiones que tiene que traducirse. Las siguientes D lineas contienen Strings S cada una con K caracteres, con la version a traducir. # SalidasD lineas cada una con la version en representacion decimal# Limites1 \u2264 D \u2264 6, 0001 \u2264 K \u2264 15# Muestra de Entradas< pre> 3DIVMMMDCCCLXXXVIII< / pre> # Muestra de Salidas< pre> 50043888< / pre>",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "strings",
      "implementation",
      "math"
    ],
    "id": 5751
  },
  {
    "title": "CB-Intro-Fraccion Mixta",
    "url": "https://omegaup.com/arena/problem/CB-Intro-Fraccion-Mixta",
    "history": "En algu\u0301n lejano momento de tu vida, estudiaste en la escuela las _ fracciones_ . Algo que siempre llamo\u0301 tu atencio\u0301n fueron las llamadas _ fracciones mixtas_ , una extran\u0303a forma de representacio\u0301n que no utiliza ni nu\u0301meros enteros ni fracciones, sino una confusa mezcla de ambos. Las fracciones mixtas, por supuesto, nunca te hicieron ningu\u0301n sentido e incluso fuiste testigo de lo mucho que confundieron a tus compan\u0303eros. Por eso, te prometiste nunca volver a escribir una fraccio\u0301n mixta. Tristemente tu actual profesor de matema\u0301ticas dejo\u0301 un ejercicio de escribir fracciones como fracciones mixtas. No queriendo romper tu promesa decidiste hacer un programa que se encargue de ese sucio trabajo por ti. # TareaEscribe un programa que dado el numerador N y el denominador D de una fraccio\u0301n, escriba la fraccio\u0301n mixta equivalente conservando el mismo denominador.",
    "input": "Tu programa debera\u0301 leer del teclado dos nu\u0301meros enteros separados por un espacio, N y D ( numerador y denominador) respectivamente.",
    "output": "Tu programa debera\u0301 escribir en la pantalla la fraccio\u0301n mixta, escribiendo primero la parte entera ( si existe) , un espacio y luego el numerador y denominador de la parte fraccionaria ( si existe parte fraccionaria) separados por el caracter / .",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 5723
  },
  {
    "title": "CB-Intro-Factorial",
    "url": "https://omegaup.com/arena/problem/CB-Intro-Factorial",
    "history": "La funcio\u0301n _ factorial de n_ escrito normalmente como n! se define como el producto de todos los nu\u0301meros naturales desde 1 hasta n. Es dedirn! = 1 * 2 * 3 * . . . * ( n- 2) * ( n- 1) * nPor definicio\u0301n 0! = 1# TareaEscribe un programa que dado n calcule el valor de n! .",
    "input": "Tu programa debera\u0301 leer del teclado un u\u0301nico nu\u0301mero entero, n.",
    "output": "Tu programa debera\u0301 escribir en la pantalla un u\u0301nico nu\u0301mero entero, el valor de n! .",
    "note": "",
    "topics": [
      "math",
      "implementation",
      "number theory"
    ],
    "id": 5721
  },
  {
    "title": "CB-Intro-Valor Absoluto",
    "url": "https://omegaup.com/arena/problem/CB-Intro-Valor-Absoluto",
    "history": "El valor absoluto de un nu\u0301mero se refiere al valor nume\u0301rico del mismo sin importar su signo. Asi\u0301, el valor absoluto de 5 es 5 y el valor absoluto de ( - 5) tambie\u0301n es 5. # TareaEscribe un programa que dados dos nu\u0301meros enteros a y b escriba el valor absoluto de su diferencia.",
    "input": "Tu programa debera\u0301 leer del teclado dos nu\u0301meros enteros separados por un espacio, a y b respectivamente.",
    "output": "Tu programa debera\u0301 escribir en la pantalla un u\u0301nico nu\u0301mero entero. El valor absoluto de la diferencia entre a y b",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 5720
  },
  {
    "title": "CB-Intro-Operaciones aritm\u00e9ticas",
    "url": "https://omegaup.com/arena/problem/CB-Operaciones-aritmeticas",
    "history": "Las computadoras saben ba\u0301sicamente hacer operaciones con datos. De ahi\u0301 el origen de su nombre. Si deseas aprender a programar, lo primero que tienes que hacer es aprender a indicarle a una computadora co\u0301mo hacer operaciones. Para resolver este problema necesitara\u0301s hacer un programa que pueda sumar, restar, multiplicar y dividir un par de nu\u0301meros. # TareaEscribe un programa que reciba dos nu\u0301meros a y b y realice las operaciones: * a + b* a - b* a * b* a / b",
    "input": "Tu programa debera\u0301 leer del teclado dos nu\u0301meros enteros separados por un espacio, a y b respectivamente.",
    "output": "Tu programa debera\u0301 escribir en la pantalla cuatro li\u0301neas, cada una con el resultado de una de las operaciones descritas arriba. Para el caso de la divisio\u0301n tu programa debera\u0301 escribir el resultado con 6 decimales.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 5717
  },
  {
    "title": "Dot Product",
    "url": "https://omegaup.com/arena/problem/Dot-Product",
    "history": "The dot product of two lists ` A` and ` B` with length ` N` is defined as \u2211_ i= 0^ N- 1 A[ i] \u00b7 B[ i] . Given two lists, write a function that computes and returns their dot product. # Samples| | inputA = [ 1, 2, 3] B = [ 1, 2, 3] | | output14| | description1 + 4 + 9| | inputA = [ 1, - 1] B = [ 1, 1] | | output0| | description1 - 1| | end# Templateusing System; class Programstatic void Main( string[ ] args) int N = Int32. Parse( Console. ReadLine( ) ) ; int[ ] A = new int[ N] ; int[ ] B = new int[ N] ; for ( int i = 0; i < N; i+ + ) A[ i] = Int32. Parse( Console. ReadLine( ) ) ; for ( int i = 0; i < N; i+ + ) B[ i] = Int32. Parse( Console. ReadLine( ) ) ; int answer = dotProduct( A, B) ; Console. WriteLine( answer) ; / / write dotProduct here",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 5688
  },
  {
    "title": "Fancy Sum",
    "url": "https://omegaup.com/arena/problem/Fancy-Sum",
    "history": "We define the fancy sum of a zero- indexed array ` A` to be \u2211_ i= 0^ A. Length - 1 A[ i] % ( i+ 1) . Write a function that takes in an ` int` array, and returns its fancy sum. # Samples| | input[ 1, 2, 3] | | output0| | description1 % 1 + 2 % 2 + 3 % 3 = 0 + 0 + 0| | input[ 3, 2, 1] | | output1| | description3 % 1 + 2 % 2 + 1 % 3 = 0 + 0 + 1| | end# Templateusing System; class Programstatic void Main( string[ ] args) int N = Int32. Parse( Console. ReadLine( ) ) ; int[ ] A = new int[ N] ; for ( int i = 0; i < N; i+ + ) A[ i] = Int32. Parse( Console. ReadLine( ) ) ; int answer = fancySum( A) ; Console. WriteLine( answer) ; / / write fancySum here",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 5686
  },
  {
    "title": "Even and Odd Sums",
    "url": "https://omegaup.com/arena/problem/Even-and-Odd-Sums",
    "history": "Write a function that takes an int array and two ints by reference ( even and odd) . Your function should store the sum of the elements of the array with even indicesin even, and the sum of the elements with odd indices in odd. # Samples| | input1, 2, 3, 4| | outputeven = 1 + 3 = 4odd = 2 + 4 = 6| | input100, 1, - 100| | outputeven = 100 - 100 = 0odd = 1| | end# Templateusing System; class Programstatic void Main( string[ ] args) int N = Int32. Parse( Console. ReadLine( ) ) ; int[ ] A = new int[ N] ; for ( int i = 0; i < N; i+ + ) A[ i] = Int32. Parse( Console. ReadLine( ) ) ; int even = 0, odd = 0; evenOddSum( A, ref even, ref odd) ; Console. WriteLine( even) ; Console. WriteLine( odd) ; static void evenOddSum( int[ ] A, ref int even, ref int odd) for ( int i = 0; i < A. Length; i+ + ) if ( i",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 5680
  },
  {
    "title": "Triangulos locos",
    "url": "https://omegaup.com/arena/problem/Triangulos-locos",
    "history": "Tienes un triangulo equilatero de lado L y esta dividido en triangulos unitarios ( triangulos equilateros de lado 1 ) . En la siguiente imagen vemos como seria los triangulos para un triangulo de lado L = 4, 5 y 6. ! [ n^ 2xd] ( lolzanoimg. png) Tu tarea es calcular en numero de triangulos unitarios que hay dentro de un triangulo de lado L. Por ejemplo: si L = 5, hay 25 triangulos unitarios dentro; si L = 2, hay 4 triangulos unitarios.",
    "input": "Un entero L.",
    "output": "El numero de triangulos unitarios dentro del triangulo de lado L.",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 5661
  },
  {
    "title": "Un viaje aburrido",
    "url": "https://omegaup.com/arena/problem/Un-viaje-aburrido",
    "history": "La pequen\u0303a Leidy esta de viaje, ella no conoce a nadie en el bus y para no aburrirse ella escucha musica, se dice que mientras ella esta escuchando musica esta divertida, pero cuando no, se aburre. Ella tiene en su celular n canciones, y cada una de ellas dura t_ i minutos, tu tarea es calcular el numero de minutos que ella no estara aburrida. En otras palabras el numero de minutos que ella estara escuchando musica.",
    "input": "En la primera linea un numero entero n que indica la cantidad de canciones que ella tiene para escuchar durante el viaje. En la segunda linea vienen n enteros, t_ i que indica los minutos que dura la cancion i.",
    "output": "El tiempo en minutos que ella no estara aburrida, o que ella estara escuchando musica.",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 5660
  },
  {
    "title": "Division de factorial",
    "url": "https://omegaup.com/arena/problem/Division-de-factorial",
    "history": "El factorial de un numero entero positivo n, se representa como n! y se calcula multiplicando todos los numeros enteros positivos desde 1 hasta n, por ejemplo: 5! = 1x2x3x4x5 = 1204! = 24. Dados 2 numeros enteros a, y b se te pide calcular la division de a! entre b! , en otras palabras a! / b! , por ejemplo: si a = 5, b = 3; 5! / 3! = 1x2x3x4x5/ 1x2x3 = 20.",
    "input": "La entrada consiste de 2 enteros positivos a y b, se garantiza que b< = a.",
    "output": "Un numero entero que representa la division de a! entre b! .",
    "note": "",
    "topics": [
      "dfs and similar",
      "dp",
      "implementation",
      "number theory",
      "math"
    ],
    "id": 5658
  },
  {
    "title": "A kunga le gusta  sumar",
    "url": "https://omegaup.com/arena/problem/A-kunga-le-gusta-sumar",
    "history": "kunga es un nin\u0303o al que le encantan las sumas. Un dia el estaba con su cuaderno y dicidio hacer una suma muy interesante el escribio un numero N y hizo la suma de todos los numero menores que N , ejem: 1+ 2+ 3+ 4+ 5+ . . . . N.",
    "input": "la entrada cosiste en multiples casos e entrada hasta que N= 0.",
    "output": "La suma de todos los numeros hasta N.",
    "note": "",
    "topics": [
      "number theory",
      "implementation",
      "math"
    ],
    "id": 5656
  },
  {
    "title": "Area de un triangulo",
    "url": "https://omegaup.com/arena/problem/Area-de-un-triangulo",
    "history": "Un programa que capture la base y la altura de un triangulo y devuelva su area",
    "input": "La base y la altura del triangulo",
    "output": "El area del triangulo",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 5655
  },
  {
    "title": "Suma de reales",
    "url": "https://omegaup.com/arena/problem/Suma-de-reales",
    "history": "Elabora un programa que sume dos numeros",
    "input": "Dos numeros reales",
    "output": "La suma de los dos numeros con dos decimales",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 5654
  },
  {
    "title": "Brayan y su bendicion",
    "url": "https://omegaup.com/arena/problem/Brayan-y-su-bendicion",
    "history": "En un universo muy paralelo Brayan es padre de 7 bendiciones. Se acerca el cumplean\u0303os de uno de sus hijos, pero como Brayan en un pasado de luchador recibio varios golpes, sillas, escaleras y un monton de cosas en su cabeza; no se acuerda de cuantos an\u0303os cumplira su hijo este an\u0303o ( * * * 2017* * * ) . Por suerte, el todavia se acuerda el lugar donde estan los certificados de nacimiento de cada uno, donde indica la fecha en la que su hijo nacio. Como Brayan es muy malo para las matematicas : v te pidio ayuda a vos para que teniendo la informacion del an\u0303o en que nacio, le digas cuantos an\u0303os esta cumpliendo este an\u0303o ( * * * 2017* * * ) , pero como tu tambien eres malo en matematicas, pero sabes programar : v disen\u0303as un programa que te diga la respuesta.",
    "input": "Un numero entero n que indica el an\u0303o en el que nacio el hijo de Brayan.",
    "output": "Un numero entero a que indica los an\u0303os que cumple el hijo de Brayan el * * * 2017* * *",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 5651
  },
  {
    "title": "Los cuadrados semim\u00e1gicos",
    "url": "https://omegaup.com/arena/problem/Los-cuadrados-semimagicos",
    "history": "Te gustan mucho los acertijos y esta\u0301s estudiando el tema de los cuadrados semima\u0301gicos ( los cuadrados ma\u0301gicos todavi\u0301a se te complican un poco) . Un cuadrado semima\u0301gico es una matriz de N \u00d7 N nu\u0301meros que tiene la propiedad de que la suma de los elementos de cada fila, cada columna y ambas diagonales vale lo mismo. Crees ser capaz de escribir un programa que te diga si una matriz cuadrada es o no un cuadrado semima\u0301gico.",
    "input": "Un entero N seguido de N \u00d7 N enteros que representan los elementos de una matriz cuadrada dada de arriba hacia abajo y de izquierda a derecha. Puedes suponer que 1 \u2264 N \u2264 100 y que los enteros de la matriz caben en un * int* .",
    "output": "Un 1 si la matriz dada es un cuadrado semima\u0301gico y un 0 en otro caso.",
    "note": "",
    "topics": [
      "implementation",
      "matrices",
      "math"
    ],
    "id": 5638
  },
  {
    "title": "Forzando la caja fuerte",
    "url": "https://omegaup.com/arena/problem/Forzando-la-caja-fuerte",
    "history": "Tus ahorros de toda la vida han quedado atrapados en una caja fuerte y has olvidado la combinacio\u0301n. Como toda buena caja fuerte, e\u0301sta tiene una rueda con nu\u0301meros enteros grabados y puedes girar la rueda hacia la izquierda o hacia la derecha. La rueda de tu caja fuerte tiene grabados cinco enteros del 1 al 5 e inicialmente esta\u0301n en el orden 1 2 3 4 5. Si hacemos girar la rueda una posicio\u0301n hacia la izquierda, los nu\u0301meros quedara\u0301n en el orden 2 3 4 5 1. En cambio, si giramos la rueda una posicio\u0301n hacia la derecha los nu\u0301meros quedara\u0301n en el orden 5 1 2 3 4. Nos gustari\u0301a escribir un programa que, dada una cantidad I de movimientos hacia la izquierda y una cantidad D de movimientos hacia la derecha, nos diga en que\u0301 orden quedaron los nu\u0301meros.",
    "input": "Dos enteros I y D. Puedes suponer que 0 \u2264 I, D \u2264 1, 000, 000, 000.",
    "output": "Cinco enteros separados por un espacio que representen el orden en el cual quedaron los nu\u0301meros de la rueda de tu caja fuerte.",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 5637
  },
  {
    "title": "Colegiatura",
    "url": "https://omegaup.com/arena/problem/Colegiatura",
    "history": "La mama\u0301 de Esteban quiere inscribirlo en la mejor preparatoria de Cuernavaca, pero le preocupa cuanto vaya a pagar, y te pide ayuda para que hagas un programa que le diga cuanto tenga que pagar. El esquema que maneja la prepa es este: Plan de pagos: * La colegiatura de los alumnos se determina segu\u0301n el numero de materias que cursan. El costo de cada una de las materias es de 1600. * Se ha establecido un programa para estimular a los alumnos, el cual consiste en lo siguiente: si el promedio obtenido por un alumno en el ultimo periodo es mayor o igual que 9, se le hara\u0301 un descuento del 30",
    "input": "El numero de materias A que Esteban va a cursar. Y un numero con decimales B que es el promedio de Esteban.",
    "output": "Un numero entero C con el precio a pagar. Debe de ir con un .",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 5630
  },
  {
    "title": "Fracciones de Mixta a Impropia",
    "url": "https://omegaup.com/arena/problem/Fracciones-de-Mixta-a-Impropia",
    "history": "# ProblemaDado tres nu\u0301meros A siendo el nu\u0301mero entero, B siendo el numerador y C el denominador, convertir la fraccio\u0301n de mixta a impropia. 135/ 7 = 96/ 7",
    "input": "Tres nu\u0301meros enteros A, B y C separados por un espacio.",
    "output": "Dos nu\u0301meros enteros D el numerador y E el denominador. D y E esta\u0301n separados por \" / \" .",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 5620
  },
  {
    "title": "Triangulo, Cuadrado y Poligonos",
    "url": "https://omegaup.com/arena/problem/Triangulo-Cuadrado-y-Poligonos",
    "history": "En la escuela Hamilton, a las maestras de matema\u0301ticas se les olvido\u0301 como sacar el a\u0301rea de todas las figuras que existen en el planeta. Como buen matema\u0301tico y programador que eres, tienes que crear un programa que te diga el a\u0301rea de la figura. Para el 42",
    "input": "El primer dato es el nu\u0301mero de lados que tiene la figura. Dependiendo el nu\u0301mero de lados: * Si es triangulo: el segundo dato es la base, despue\u0301s separado por un espacio, la altura. * Si es un cuadrado o recta\u0301ngulo: primero la base y despue\u0301s la altura. * Si es un poli\u0301gono: primero la medida de uno de sus lados y despue\u0301s el apotema.",
    "output": "Un nu\u0301mero entero que es el a\u0301rea de la figura.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 5616
  },
  {
    "title": "Descifrando El C\u00f3digo",
    "url": "https://omegaup.com/arena/problem/Descifrando-El-Codigo",
    "history": "El agente secreto JEMI ( por sus siglas ya explicadas en otro problema) se ha aventurado en una misio\u0301n mas por salvar al mundo mientras su esclava busca que darle de comer. En esta misio\u0301n, JEMI, tendra\u0301 que infiltrarse a la base secreta de sus enemigos. Hasta el momento todo iba de maravilla, solo habi\u0301a un inconveniente: no teni\u0301a la contrasen\u0303a completa para entrar. Solo sabe que la contrasen\u0303a inicia con \" 123456789\" y que hace falta un di\u0301gito ( 0 - 9) . Por suerte, sus compan\u0303eros le han mandado el di\u0301gito desconocido aunque por motivos de seguridad lo han enviado de manera cifrada como un nu\u0301mero en el rango [ 10, 100] . # ProblemaAyuda a JEMI a terminar su misio\u0301n da\u0301ndole el di\u0301gito que le hace falta. Sabiendo que el di\u0301gito es el mismo con el que termina el nu\u0301mero dado. ( ver ejemplos para mayor claridad) .",
    "input": "Un entero x que es el nu\u0301mero cifrado enviado por los compan\u0303eros de JEMI.",
    "output": "Un entero que representa el di\u0301gito que JEMI necesita. ( Siempre es el nu\u0301mero con el que termina x)",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 5604
  },
  {
    "title": "Mi Cumplea\u00f1os",
    "url": "https://omegaup.com/arena/problem/Mi-Cumpleanos",
    "history": "Hoy es tu fiesta de cumplean\u0303os, y quieres atender bien a los invitados, por lo que decides ayudar a el mesero, al revisar que en cada lugar dela mesa este un vaso para las bebidas, te das cuenta que en algunos lugaresel mesero dejo correctamente un vaso, que en otros lugares falta el vasoy en algunos lugares de la mesa dejo mas de un vaso.",
    "input": "La mesa con N lugares para sentarse, un 0 indica que falta el vaso en ese lugar, un numero entero mayor que cero indica cuantos vasos dejo el mesero en ese lugar.",
    "output": "Un numero negativo indica cuantos vasos faltan en la mesa. El numero cero indica que todos los lugares de la mesa tienen 1 vaso. Un numero positivo que indica si sobran vasos en dicha mesa.",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 5601
  },
  {
    "title": "Adivina el n\u00famero",
    "url": "https://omegaup.com/arena/problem/Adivina-el-numero",
    "history": "# Problema# De un conjunto de N nu\u0301meros, se borro\u0301 uno de ellos. Dado el conjunto inicial de nu\u0301meros y el conjunto de nu\u0301meros despue\u0301s de borrar uno, \u00bfPodra\u0301s determinar cu\u0301al fue\u0301 el nu\u0301mero que fue\u0301 borrado?",
    "input": "En la primera li\u0301nea el entero N. En la segunda li\u0301nea, los N nu\u0301meros del conjunto inicial separados por espacios. En la tercera li\u0301nea, N- 1 nu\u0301meros ( como quedo\u0301 el conjunto despue\u0301s de borrar un elemento)",
    "output": "Un entero que denota el nu\u0301mero que fue\u0301 borrado del conjunto original.",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 5600
  },
  {
    "title": "Logias",
    "url": "https://omegaup.com/arena/problem/OMI-2017-Logias",
    "history": "# HistoriaHace mucho tiempo, N oli\u0301mpicos de la OMI fueron de visita a la escuela de Matema\u0301gicos. Charly, el director de dicha escuela, decidio\u0301 separar a los N oli\u0301mpicos en M grupos, de tal manera que en cada grupo hubiera al menos una persona. Al hacer esto algo muy curioso sucedio\u0301: despue\u0301s de la visita a la escuela de Matema\u0301gicos, cada pareja de oli\u0301mpicos que estuvo en el mismo grupo se volvieron amigos. # ProblemaDados N y M, el nu\u0301mero de participantes y el nu\u0301mero de grupos respectivamente, escribe un programa que encuentre el mi\u0301nimo y el ma\u0301ximo nu\u0301mero de parejas de amigos que se pudieron haber formado despue\u0301s de la visita a la escuela de Matema\u0301gicos.",
    "input": "La primera y u\u0301nica li\u0301nea de entrada consta de dos enteros N y M representando el nu\u0301mero de oli\u0301mpicos y el nu\u0301mero de equipos respectivamente.",
    "output": "La u\u0301nica li\u0301nea de salida debe contener dos enteros k_ min y k_ max: el mi\u0301nimo nu\u0301mero posible de parejas de amigos, y el ma\u0301ximo nu\u0301mero posible de parejas de amigos respectivamente.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 5546
  },
  {
    "title": "Divide y sumar\u00e1s",
    "url": "https://omegaup.com/arena/problem/Divide-y-sumaras",
    "history": "Dado un entero N, evalu\u0301a el valor de la suma \u2211_ i = 0^ \u221e\u230aN/ 2^ i\u230b = \u230aN/ 1\u230b + \u230aN/ 2\u230b + \u230aN/ 4\u230b + \u22ef donde \u230aN/ 2^ i\u230b es la parte entera de la divisio\u0301n.",
    "input": "El entero N. Puedes suponer que 1 \u2264 N \u2264 1000000.",
    "output": "Un entero que sea el valor de la suma.",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 5525
  },
  {
    "title": "Buscar y contar",
    "url": "https://omegaup.com/arena/problem/Buscar-y-contar",
    "history": "Dada una secuencia de N enteros y un entero B, calcula cua\u0301ntas veces aparece B en la secuencia.",
    "input": "El entero N seguido de una secuencia de N enteros y posteriormente el entero B. Puedes suponer que 1 \u2264 N \u2264 1000 y que tanto B como los enteros de la secuencia esta\u0301n en un rango de 0 a 1000000.",
    "output": "Un entero que sea el nu\u0301mero de veces que aparece B en la secuencia.",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 5524
  },
  {
    "title": "Mensajer\u00eda",
    "url": "https://omegaup.com/arena/problem/OMI-2017-Mensajeria",
    "history": "Andrea, la matema\u0301gica alfa, administra toda la mensajeri\u0301a ultra secreta de la logia de los matema\u0301gicos. Como Andrea es muy buena en su trabajo, quiere minimizar el costo de enviar un mensaje a todos los cuarteles de la logia. Andrea sabe que la logia tiene N cuarteles ultra secretos en el estado de Quere\u0301taro y que esta\u0301n numerados de 0 a N- 1. Tambie\u0301n sabe que las rutas para enviar los mensajes van de cuartel a cuartel y funcionan de la siguiente manera: - El cuartel 0 tiene una ruta de envi\u0301o con el cuartel 1. - El cuartel 1 tiene una ruta de envi\u0301o con el cuartel 2. - Y asi\u0301 sucesivamente hasta el cuartel N- 1 que tiene una ruta de mensajeri\u0301a con el cuartel 0. Las rutas de envi\u0301o de un cuartel a otro tienen un costo ( a_ i) y funcionan en ambos sentidos, es decir, la ruta del cuartel 0 al cuartel 1 tambie\u0301n funciona del cuartel 1 al cuartel 0 con el mismo costo. Para minimizar los costos, Andrea puede poner centrales de envi\u0301o en cualquier cuartel y enviar el mensaje desde todas las centrales disponibles al mismo tiempo. Poner una central de envi\u0301o tiene un costo K. Sin embargo, la ventaja de poner nuevas centrales de envi\u0301o en otros cuarteles es que estos cuarteles ahora pueden enviar mensajes a los dema\u0301s cuarteles sin ningu\u0301n costo adicional ma\u0301s que el de las rutas usadas. Para poder enviar el mensaje, Andrea siempre debe poner al menos la primer central de envi\u0301o en alguno de los cuarteles. # ProblemaAyuda a Andrea a minimizar el costo total de enviar un mensaje a todos los cuarteles de la logia.",
    "input": "En la primera li\u0301nea se encuentran los enteros N y K. En la segunda li\u0301nea se encuentran N enteros separados por un espacio. Cada entero a_ i representando el costo de la ruta de mensajeri\u0301a del cuartel i al cuartel i+ 1.",
    "output": "La suma que minimice el costo de enviar un mensaje, considerando el costo de poner las nuevas centrales de envi\u0301o y el costo de todas las rutas usadas para enviar el mensaje a toda la logia.",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 5506
  },
  {
    "title": "A+B",
    "url": "https://omegaup.com/arena/problem/ASUMAB",
    "history": "El primer problema de hoy es tan simple como a+ b. < BR> Recibira\u0301s una cadena de caracteres con di\u0301gitos. < BR> Tendra\u0301s que reacomodar esos di\u0301gitos para construir dos enteros no negativos, a y b, tal que la suma de a+ b sea la ma\u0301s grande posible. < BR> Cada nu\u0301mero debe tener al menos un di\u0301gito. < BR> No se permitira\u0301n ceros a la izquierda, sin embargo el nu\u0301mero cero hecho con un solo 0 es permitido. < BR> Tendra\u0301s que usar cada digito exactamente la misma cantidad de veces que aparezca en la cadena de caracteres inicial.",
    "input": "La primera li\u0301nea contendra\u0301 un entero t especificando el nu\u0301mero de casos. Cada caso consistira\u0301 en una li\u0301nea con una cadena de caracteres con di\u0301gitos de taman\u0303o n. Si hay ma\u0301s de dos di\u0301gitos, no todos sera\u0301n ceros.",
    "output": "Por cada caso, imprime una li\u0301nea con la suma ma\u0301s grande que puede ser conseguida.",
    "note": "",
    "topics": [
      "sortings",
      "number theory",
      "strings",
      "math",
      "implementation"
    ],
    "id": 5416
  },
  {
    "title": "LIAUVAQ-Restas Sucesivas",
    "url": "https://omegaup.com/arena/problem/LIAUVAQ-Restas-Sucesivas",
    "history": "# DescriptionLa gente en villas, esta teniendo problemas con sus calculadoras, puesto que ninguna puede hacer divisiones correctamente, esto es un problema generalizado y dado que remplazar todas las calculadoras de villas costaria mucho, debes de darles una solucion a su problema, una idea loca dice que si restas muchas veces puedes llegar al resultado, \u00bfSera correcto? . # # Observaciones- Ninguna",
    "input": "- Dos numeros enteros ( Dividendo y Divisor)",
    "output": "* Cociente y el Residuo. # # Limites* Ninguno",
    "note": "",
    "topics": [
      "graphs",
      "math",
      "implementation",
      "trees"
    ],
    "id": 5399
  },
  {
    "title": "La suma",
    "url": "https://omegaup.com/arena/problem/La-suma",
    "history": "# DescriptionLas personas deben sumar. # # Observaciones- Ejemplo:",
    "input": "- La entrada dos numeros enteros",
    "output": "* La suma de los dos numeros enteros ingresados. # # Limites* Ninguno",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 5363
  },
  {
    "title": "Superacion",
    "url": "https://omegaup.com/arena/problem/Superacion",
    "history": "Omar lleva una racha de problemas pero lastimosamente todos son sobre desamor, despue\u0301s de la borrachera, Omar conocio muchas ladys en el bar, el quiere salir con todas y llevar amigos pero como sabe que son bien pillinos, necesita saber cuanto dinero se gastaran en total el y sus amigos en preservativos tanto de hombres como de mujer.",
    "input": "Recibiras un entero N que son el numero de amigos que llevara a Omar, seguido de dos enteros M y X, que es el costo de preservativos de hombre y mujer.",
    "output": "Un unico entero que es total de pesos que se gastaron Omar y sus amigos, al inicio del numero un signo de pesos . Checa la salida.",
    "note": "",
    "topics": [
      "math",
      "brute force"
    ],
    "id": 5339
  },
  {
    "title": "Resolviendo El Acertijo Matem\u00e1tico",
    "url": "https://omegaup.com/arena/problem/Matematico",
    "history": "# RESOLVIENDO EL ACERTIJO MATEMA\u0301TICOMario es un joven apasionado por la matema\u0301ticas, y entre tanto estudiar, se ha encontrado con un acertijo matema\u0301tico que no ha podido resolver. Tu tarea es ayudar a Mario a resolver el acertijo.",
    "input": "Leera\u0301s * * N* * elementos dado por teclado y posteriormente imprimira\u0301s el resultado del acertijo.",
    "output": "Imprimir la respuesta",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 5334
  },
  {
    "title": "Aventando Chuzas",
    "url": "https://omegaup.com/arena/problem/Aventando-Chuzas",
    "history": "A Gatica le gusta jugar mucho boliche, se propuso ir una semana a jugar. Decidio\u0301 jugar dos li\u0301neas por di\u0301a e ira\u0301 anotando su puntuacio\u0301n total de cada di\u0301a. Al finalizar la semana Gatica tuvo la curiosidad de ver su promedio semanal y tambie\u0301n de conocer cua\u0301l fue su mayor puntaje en la semana. Ayu\u0301dalo a obtener su promedio y su mayor puntaje. # NOTA: * * El resultado debe ser un nu\u0301mero entero. NO USES NU\u0301MEROS CON DECIMALES. * *",
    "input": "Recibira\u0301s 7 li\u0301neas, cada una con un entero que representa la cantidad de puntos que Gatica anoto\u0301 ese di\u0301a de la semana.",
    "output": "El promedio obtenido en la semana, seguido por el mayor puntaje obtenido en la semana.",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 5304
  },
  {
    "title": "Beca de donas",
    "url": "https://omegaup.com/arena/problem/Beca-de-donas",
    "history": "En cierta escuela, consientes de lo difi\u0301cil que puede resultar la vida de estudiante, la direccio\u0301n de la escuela otorga becas alimenticias a los alumnos. Cada beca consiste en una dotacio\u0301n de ma\u0301ximo N donas al di\u0301a, durante el semestre actual. Por si fuera poco, la cantidad de donas disponibles para comer son acumulables, por lo que si un di\u0301a no consumiste tu ma\u0301ximo de donas, al di\u0301a siguiente dispondra\u0301s de las donas que te sobraron el di\u0301a anterior ma\u0301s del nuevo di\u0301a ( * \u00bfverdad que es una escuela genial? * ) . Resulta entonces, que recie\u0301n han otorgado la beca de donas a Zita, y como siempre, quiere invitar a sus amigas. Dada la cantidad de donas que se otorgan al di\u0301a, y conociendo el consumo de los primeros K di\u0301as de beca, ayuda a Zita a determinar la cantidad de donas de las que dispone en el di\u0301a K+ 1.",
    "input": "En la primer li\u0301nea los enteros N y K del problema separados por un espacio. Las siguientes K lineas tendra\u0301n el consumo de donas de ese di\u0301a.",
    "output": "La cantidad de donas de las que dispone Zita en el di\u0301a K+ 1.",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 5280
  },
  {
    "title": "888",
    "url": "https://omegaup.com/arena/problem/888",
    "history": "Directo al grano, tu trabajo es encontrar el N- e\u0301simo nu\u0301mero cuyo cubo termina en los di\u0301gitos 888.",
    "input": "Primero una linea con un nu\u0301mero T la cantidad de casos de prueba. Las siguientes T lineas contienen un entero N.",
    "output": "Para cada linea de entrada, una linea con el N- e\u0301simo nu\u0301mero cuyo cubo termina en 888.",
    "note": "",
    "topics": [
      "implementation",
      "number theory",
      "math",
      "constructive algorithms"
    ],
    "id": 5259
  },
  {
    "title": "Ra\u00edces",
    "url": "https://omegaup.com/arena/problem/Raices",
    "history": "Carlos se esta\u0301 preparando para un examen de matema\u0301ticas principalmente en el ca\u0301lculo de rai\u0301ces de polinomios de segundo grado, es decir, de la forma ax ^ 2 + bx + c, pero antes de eso necesita saber si este polinomio tiene solucio\u0301n ( aunque no necesariamente u\u0301nica) . \u00bfPuedes hacer un programa para ayudarlo?",
    "input": "La primera li\u0301nea de la entrada contiene un nu\u0301mero 1 \u2264 T \u2264 200, el nu\u0301mero de casos de prueba. Las siguientes T li\u0301neas contienen los 3 coeficientes del polinomio ( a, b, c) .",
    "output": "Para cada caso de prueba debe imprimir SI, si es que el polinomia tiene una solucio\u0301n real. En caso opuesto se debera\u0301 imprimir NO. | | input21 2 13 3 3| | outputSINO| | end",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 5230
  },
  {
    "title": "Acumulando Banda",
    "url": "https://omegaup.com/arena/problem/Acumulando-Banda",
    "history": "Alfonso y su bandita tienen ganas de ir a un sonidero, pero como se organiza en el deportivo Oceani\u0301a tienen que armar una cooperacha para pagar el taxi. Como tambie\u0301n esta\u0301s invitado a nuestra expedicio\u0301n se te dio la tarea de saber cua\u0301nto dinero se lleva recaudado hasta alguna persona de las que van al sonidero. La Pandilla Pesadilla siempre tiene los mismos integrantes: Alfonso, Ricardo, Pablito Mix, Brondon y tu\u0301.",
    "input": "Recibira\u0301s 5 li\u0301neas, cada una con un entero que representa la cantidad de dinero que cada persona aportara\u0301 a la cooperacha. Despue\u0301s leera\u0301s un nu\u0301mero entero, K, que representa el nu\u0301mero de la persona hasta la cual debes contar el dinero acumulado.",
    "output": "La suma de las aportaciones de las primeras K personas.",
    "note": "",
    "topics": [
      "implementation",
      "dp",
      "math"
    ],
    "id": 5208
  },
  {
    "title": "Pit\u00e1goras",
    "url": "https://omegaup.com/arena/problem/Pitagoras",
    "history": "Es un problema ba\u0301sico el cual consiste en imprimir el valor de la hipotenusa * * C* * de un triangulo cualquiera mediante el valor de sus lados * * A* * y * * B* * .",
    "input": "La entrada consta u\u0301nicamente de dos nu\u0301meros enteros * * A* * y * * B* * ( separados por un salto de linea) los culaes representan los lados del triangulo.",
    "output": "Imprimir * * C* * el cual representa el valor de la hipotenusa. * * NOTA: * * El resultado se mostrara\u0301 con una precisio\u0301n exacta de 3 decimales.",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 5206
  },
  {
    "title": "Distancia Manhattan",
    "url": "https://omegaup.com/arena/problem/Distancia-Manhattan",
    "history": "Dados dos puntos en el plan ( X, Y) determinar la distancia Manhattan que existe entre ellos. La distancia Manhattan es la diferencia que existe entre las X' s, ma\u0301s la diferencia de la Y' s.",
    "input": "La primera li\u0301nea contiene un nu\u0301mero entero 1 \u2264 T \u2264 10^ 4 que es el nu\u0301mero de casos de prueba. Despue\u0301s de este T casos existen. Cada caso de prueba consta de cuatro nu\u0301meros enteros X1, Y1, X2 y Y2 . . . en una li\u0301nea por si\u0301 mismo que denotan las coordenadas de los puntos. Los valores para las coordenadas de todos los puntos estara\u0301n siempre entre - 10^ 4 y 10^ 4.",
    "output": "Para cada caso de prueba de salida de una sola li\u0301nea con un nu\u0301mero entero: la distancia de Manhattan entre los puntos dados. | | input32 3 4 56 7 8 32 8 6 4| | output468| | end",
    "note": "",
    "topics": [
      "geometry",
      "implementation",
      "math"
    ],
    "id": 5195
  },
  {
    "title": "004_DevTequila Convertir a moneda",
    "url": "https://omegaup.com/arena/problem/004_DevTequila",
    "history": "Uno de los problemas que tienen los nin\u0303os cuando empiezan a contar y conocer los numeros es convertir esos numeros en moneda, en este caso se requiere hacer un programa basado en una cantidad mencione con que cantidad y piezas de dinero ( MX) pueda formarse dicha cantidad. Esto es un poco confuso porque tenemos muchas maneras de armar una cantidad por lo que 100 pesos puede ser creado por 100 monedas de 1 o\u0301 1 billete de 100, por lo que consideraremos la regla que siempre le daremos preferencia al dinero con mayor valor, por lo tanto tenemos que 134 pesos se puede formar de la siguiente manera: 1 billete de 100, 1 billete de 20, 1 moneda de 10 y 2 monedas de 2. La moneda mexicana tiene las siguientes piezas: - Billetes de 1000, 500, 200, 100, 50, 20- Monedas 10, 5 , 2 y de 1",
    "input": "| Entrada | | \u2014\u2014\u2014\u2014\u2014\u2014| | 4785 < br>",
    "output": "| Salida | | \u2014\u2014\u2014\u2014\u2014\u2013| | 4 billete( s) de 1000 < br> 1 billete( s) de 500 < br> 1 billete( s) de 200 < br> 1 billete( s) de 50 < br> 1 billete( s) de 20 < br> 1 moneda( s) de 10 < br> 1 moneda( s) de 5 |",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 5192
  },
  {
    "title": "Montones de Caramelos",
    "url": "https://omegaup.com/arena/problem/Montones-de-Caramelos",
    "history": "# DescripcionEl tio Carlos ha organizado N ( 1< = N< = 10, 000) tarrosde caramelos, todos con la misma cantidad. Sin embargo, cuando e\u0301l no esta mirando sus sobrinos ( que son muymalosos) , mueven algunos caramelos entre los tarros, porlo tanto los contenidos ya no son necesariamente iguales. Dados los nuevos contenidos en cada uno de los tarros, por ayuda al tio Carlos a determinar el mi\u0301nimo numerode caramelos que e\u0301l necesita mover con el propo\u0301sito derestaurar cada tarro a sus contenidos originales, todosiguales.",
    "input": "* Linea 1: El nu\u0301mero de tarros, N ( 1< = N< = 10, 000) . * Linea 2. . 1+ N: Cada linea contiene el nu\u0301mero de caramelos en un tarro ( un entero en un rango de 1 . . . 10, 000) .",
    "output": "* Linea 1: Un entero dando el numero mi\u0301nimo de dulces que necesitan ser movidos para que todos los tarros vuelvan a tener el mismo numero de caramelos. | | input421071| | output7| | descriptionMoviendo 7 dulces ( 3 del tarro 2 al tarro 1, 2 del tarro 2 altarro 4, 2 del tarro 3 al tarro 4) , podemos hacer que todos los tarrostengan de contenido 5 caramelos. | | end",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 5174
  },
  {
    "title": "Factorial Simple",
    "url": "https://omegaup.com/arena/problem/Factorial-Simple",
    "history": "A Pol le gusta mucho coleccionar nu\u0301meros grandes, pero desgraciadamente suamigo Alejandro so\u0301lo le regala nu\u0301meros entre 1 y 50, por ello para no decirle aAlejandro que no le gustan sus nu\u0301mero ha decidido sacar el factorial del nu\u0301meroque le regale.",
    "input": "Un nu\u0301mero entero n ( 1 \u2264 n \u2264 50) , que representa el nu\u0301mero que Alejandrole regalo a Pol.",
    "output": "El resultado de sacar el factorial del nu\u0301mero n",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 5159
  },
  {
    "title": "Divisores_par/impar",
    "url": "https://omegaup.com/arena/problem/Divisores_parimpar",
    "history": "Un di\u0301a Mayra y Deby discuti\u0301an de que nu\u0301meros eran los mejores, Mayra deci\u0301a los nu\u0301meros pares eran los mejores y Deby deci\u0301a que los mejores eran los impares. Para resolver su problema preguntaron a Charly un nu\u0301mero aleatorio n, y si la suma de los divisores pares de n era mayor que la suma de los divisores impares del mismo nu\u0301mero Mayra tendri\u0301a la razo\u0301n, en caso contrario Deby tendri\u0301a la razo\u0301n. Ayuda a estas 2 amigas a saber quie\u0301n tiene la razo\u0301n.",
    "input": "Una li\u0301nea el nu\u0301mero entero n que les dio Charly ( 1 \u2264 10^ 9 \u2264100) .",
    "output": "Imprime \" Mayra\" , sin comillas en caso de que ella tenga la razo\u0301n, si no la tiene imprime \" Deby\" , sin comillas.",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 5156
  },
  {
    "title": "Ropa",
    "url": "https://omegaup.com/arena/problem/Ropa",
    "history": "Un di\u0301a para salir una fiesta Fa\u0301tima no teni\u0301a ni idea de que ponerse, al revisar en su closet vio que teni\u0301a n blusas, m faldas, l sue\u0301teres y p zapatos, y se pregunto \u00bfCua\u0301ntas posibles combinaciones de conjuntos podi\u0301a formar?",
    "input": "Una li\u0301nea con cuatro nu\u0301meros enteros n, m, l y p en ese orden ( 1 \u2264 n, m, l, p \u2264100) .",
    "output": "Ayuda a Fa\u0301tima a saber cuantos conjuntos es posible obtener, imprime un nu\u0301mero entero que represente la solucio\u0301n.",
    "note": "",
    "topics": [
      "math",
      "combinatorics"
    ],
    "id": 5154
  },
  {
    "title": "003_DevTequila_Operaciones_aritmeticas",
    "url": "https://omegaup.com/arena/problem/003_DevTequila",
    "history": "Dados dos nu\u0301meros A y B muestra la suma, resta y multiplicacio\u0301n de esos nu\u0301meros",
    "input": "# # # 3 numeros que representan la cantidad de los elementos# # # # Producto A, B , C| Entrada | | \u2014\u2014\u2014\u2014\u2014\u2014| | 4 < br> 2",
    "output": "# # # Numero que contiene el archivo| Salida | | \u2014\u2014\u2014\u2014\u2014\u2013| | 6 < br> 2 < br> 2 < br> 8 |",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 5131
  },
  {
    "title": "002_DevTequila La Tarea de chonito",
    "url": "https://omegaup.com/arena/problem/002_DevTequila",
    "history": "La maestra le dejo a Chonito que hiciera un programa en donde lea un nu\u0301mero entero por teclado y obtenga y muestra por pantalla el doble y el triple de ese nu\u0301mero como lo hara\u0301 chonito",
    "input": "# # # 3 numeros que representan la cantidad de los elementos# # # # Producto A, B , C| Entrada | | \u2014\u2014\u2014\u2014\u2014\u2014| | 4 < br>",
    "output": "# # # Numero que contiene el archivo| Salida | | \u2014\u2014\u2014\u2014\u2014\u2013| | 16 < br> 64 |",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 5130
  },
  {
    "title": "001_DevTequila: Juan al supermercado",
    "url": "https://omegaup.com/arena/problem/001_DevTequila",
    "history": "Juan va al supermercado y sus esposa le pide que le compre tres productos para la cocina, como juan es un poco distrai\u0301do le generaras un programa que pida el valor de los tres productos y te muestre la cantidad de dinero que debe llevar.",
    "input": "# # # 3 numeros que representan la cantidad de los elementos# # # # Producto A, B , C| Entrada | | \u2014\u2014\u2014\u2014\u2014\u2014| | 200 < br> 176 < br> 300",
    "output": "# # # Numero que contiene el archivo| Salida | | \u2014\u2014\u2014\u2014\u2014\u2013| | 676 |",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 5129
  },
  {
    "title": "Buscando Inversos Reloaded",
    "url": "https://omegaup.com/arena/problem/Buscando-Inversos-Reloaded",
    "history": "En la primera semana de ca\u0301lculo en el ITAM tu profesor demostro\u0301 que todo nu\u0301mero entero X tiene un inverso aditivo Y= - X tal que X+ Y= 0. Sin embargo, sigues estando inseguro de esto, por lo cual quieres calcular todos los inversos aditivos de los enteros desde A hasta B.",
    "input": "Dos enteros: A y B.",
    "output": "Los inversos aditivos de A hasta B, inclusive, uno por li\u0301nea.",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 5128
  },
  {
    "title": "A Contar L\u00e1pices 2",
    "url": "https://omegaup.com/arena/problem/A-Contar-Lapices-2",
    "history": "# HistoriaPablo es un gran dibujante a la\u0301piz. Tiene sus la\u0301pices de diferentes nu\u0301meros ordenados en una caja. Ayer su hermanito pequen\u0303o tiro\u0301 su caja y ahora tiene que ordenarla. Como sabe que acabas de ir al Coding Rush te ha pedido que le ayudes a ordenarlos. E\u0301l te dara\u0301 el nu\u0301mero de la\u0301piz que debes contar y tu\u0301 debes decirle, de todos los la\u0301pices que hay en el suelo, cua\u0301ntos hay que tengan ese nu\u0301mero.",
    "input": "Leera\u0301s un nu\u0301mero N seguido por un di\u0301gito K. Despue\u0301s leera\u0301s N li\u0301neas de nu\u0301meros. Debes de contar el nu\u0301mero de veces que aparece el di\u0301gito K.",
    "output": "Debera\u0301s imprimir el nu\u0301mero de la\u0301pices que hay de ese tipo.",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 5127
  },
  {
    "title": "Adivina El Operador",
    "url": "https://omegaup.com/arena/problem/Adivina-El-Operador",
    "history": "El gato Joven, Elegante, Malhumorado e Impaciente, o JEMI, como sus cuates le dicen, esta aprendiendo a hacer operaciones con los nu\u0301meros enteros. Para eso su mascota, mientras le daba de comer, le escribio\u0301 un ejercicio en un pedazo de papel. Despue\u0301s de un rato, la humana recogio\u0301 papel para verificar que estuviera bien la operacio\u0301n. Pero habi\u0301a un problema, el gato rasgo\u0301 el papel y solo se puede distinguir los dos operandos asi\u0301 como tambie\u0301n el resultado y como la humana no tiene muy buena memoria, se le olvido\u0301 que operador utilizo\u0301 para el ejercicio. # ProblemaAyuda a la humana a verificar si es posible que JEMI haya contestado correctamente, de ser asi\u0301, imprime el operador utilizado, si hay mas de un operador posible, imprime cualquiera. Y sino, imprime \" D: \" ( sin comillas) .",
    "input": "Tres enteros: A, B y C que representan los datos rescatados del papel.",
    "output": "\" D: \" ( sin comillas) en caso de no haber soluco\u0301n o uno de los siguientes caracteres: + , - , * o / para representar que la respuesta al problema es la suma, resta, multiplicacio\u0301n o divisio\u0301n respectivamente.",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 5125
  },
  {
    "title": "\u00bfQui\u00e9n es el elegido?",
    "url": "https://omegaup.com/arena/problem/Quien-es-el-elegido-emh",
    "history": "Durante la infancia de algunos nin\u0303os, habi\u0301a juegos en los que uno de los nin\u0303os teni\u0301a que hacer algo importante para iniciar el juego, y existi\u0301an muchas formas de elegir a este nin\u0303o. Una de las formas ma\u0301s comunes era preguntar: \u00bfAlguien diga un nu\u0301mero? . Cuando uno de los nin\u0303os gritaba el nu\u0301mero, digamos N, entonces uno de ellos comenzaba a contar desde 11 hasta N de la siguiente forma: + Primero se poni\u0301an todos los nin\u0303os en una fila+ Comienza a contar de izquierda a derecha empezando por el primero de la fila: 1, luego 2, luego 3 y asi\u0301 sucesivamente hasta llegar al final de fila. + Si faltan nu\u0301meros por contar entonces sigue contando pero ahora de derecha a izquierda empezando por el penu\u0301ltimo nin\u0303o. + Se repite el proceso de contar de izquierda a derecha y de derecha a izquierda ( tantas veces como sea necesario) hasta llegar al nu\u0301mero N. + < strong> Nota: cuando se llega al final o inicio de la fila, no se cuenta dos veces. El nin\u0303o en el que se termine de contar, sera\u0301 el nin\u0303o elegido. < / strong> En el juego hay M nin\u0303os y Atsa no quiere ser el nin\u0303o elegido, asi\u0301 que quiere saber do\u0301nde NO se tiene que poner en la fila para NO ser elegido.",
    "input": "Una li\u0301nea con dos nu\u0301meros M y N separados por espacio que representan la cantidad de nin\u0303os en el juego y el nu\u0301mero que uno de los nin\u0303os dijo.",
    "output": "Un u\u0301nico nu\u0301mero que representa en que lugar de la fila NO debe ponerse.",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 5090
  },
  {
    "title": "Que f\u00e1cil es dar cambio",
    "url": "https://omegaup.com/arena/problem/Que-facil-es-dar-cambio-emh",
    "history": "Atsa acaba de abrir una tienda de abarrotes en medio de la ciudad; despue\u0301s de unos di\u0301as se dio cuenta que la cantidad de clientes que teni\u0301a era demasiada. Cierto di\u0301a se dispuso a analizar cual podri\u0301a ser la razo\u0301n por la cual siempre teni\u0301a mucha clientela y se di cuenta que el problema no era que hubiera mucha gente sino que e\u0301l tardaba mucho en dar el cambio, es decir, que cuando un cliente le pagaba el tardaba mucho en regresarle su cambio. Como Atsa quiere mejorar esta labor, decidio\u0301 cambiar su forma de hacerlo. En la ciudad solo hay monedas de $ 10, $ 5, $ 2 y de $ 1 pesos; la nueva forma de dar el cambio sera\u0301 dar tantas monedas de $ 10 como sea posible, si hace falta dar ma\u0301s cambio dara\u0301 la mayor cantidad de monedas de $ 5 que sea posible, si nuevamente es necesario dar cambio dara\u0301 la mayor cantidad de monedas de $ 2 pesos y finalmente hara\u0301 lo mismo con la moneda de $ 1.",
    "input": "Una u\u0301nica linea que contiene un nu\u0301mero entero C que representa la cantidad en pesos que debe dar de cambio.",
    "output": "Una u\u0301nica li\u0301nea con cuatro nu\u0301meros separados por espacio que representen la cantidad de monedas de $ 10, $ 5, $ 2 y $ 1 respectivamente que debe dar para la cantidad de C.",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 5074
  },
  {
    "title": "\u00bfQu\u00e9 hora es en segundos?",
    "url": "https://omegaup.com/arena/problem/Que-hora-es-en-segundos",
    "history": "Con la llegada de los relojes digitales, ha resultado muy fa\u0301cil para todos saber que hora es; sin embargo, para Atsa sigue siendo muy difi\u0301cil y prefiere saber que hora es sabiendo cuantos segundos han pasado desde el inicio del di\u0301a. Para saber los segundos, Atsa solo necesita saber que hora es en formato H: M: S, pero como esto le llevo mucho tiempo, quiere que le ayudes a hacer un programa que le permita calcular los segundos de manera ra\u0301pida.",
    "input": "Una u\u0301nica linea con tres nu\u0301meros enteros ( H, M y S) separados por espacio que representan la hora, los minutos y segundos respectivamente de la hora actual.",
    "output": "Un u\u0301nico nu\u0301mero que indique la cantidad de segundos que han pasado desde que inicio el di\u0301a.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 5073
  },
  {
    "title": ".A+.B",
    "url": "https://omegaup.com/arena/problem/puntoA_puntoB",
    "history": "# . A+ . B# HistoriaMarco esta\u0301 aprendiendo a sumar nu\u0301meros con parte decimal, su profesor para ayudarle con esta tarea so\u0301lo le ha pedido sumar la parte decimal de ciertos nu\u0301meros con un solo decimal, pero esto es muy complicado para e\u0301l, asi\u0301 que te ha pedido ayuda para lograrlo. # ProblemaDado un conjunto de nu\u0301meros con siempre una parte decimal tu tarea es calcular la suma de todas las partes decimales. El formato de de estos nu\u0301meros siempre sera\u0301 a. b, donde a es la parte entera.",
    "input": "La primera li\u0301nea tendra\u0301 un nu\u0301mero N, la cantidad de nu\u0301meros en la entrada. Seguira\u0301n N li\u0301neas con un solo nume\u0301ro. Cada uno de estos nu\u0301meros sera\u0301 de la forma a. b.",
    "output": "Un solo nu\u0301mero, la suma de la parte decimal de los nu\u0301meros.",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 5047
  },
  {
    "title": "Duraci\u00f3n de juego",
    "url": "https://omegaup.com/arena/problem/Duracion-de-juego",
    "history": "Lea la hora de inicio y terminacio\u0301n de un juego, en horas. Despue\u0301s calcule la duracio\u0301n del juego, sabiendo que el juego puede iniciar un di\u0301a y terminar en otro. Indique las horas que duro\u0301 el juego con una ma\u0301xima duracio\u0301n de 24 horas.",
    "input": "Dos nu\u0301meros enteros",
    "output": "Las horas que el juego duro\u0301.",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 5042
  },
  {
    "title": "Bello Campo",
    "url": "https://omegaup.com/arena/problem/Bello-Campo",
    "history": "Tienes un campo de 5 x 5 metros dividido en cuadros de 1x1, de los cuales 24 esta\u0301n vaci\u0301os y hay un u\u0301nico brote de a\u0301rbol. Para que el campo se vea bello el a\u0301rbol debe crecer en el centro, por lo tanto, si nacio\u0301 ahi\u0301 se debera\u0301 mover. Solo puedes mover el a\u0301rbol un cuadro a la vez y u\u0301nicamente se permiten movimientos horizontales( izquierda- derecha) y verticales ( arriba- abajo) . Necesitas saber cua\u0301l es la mi\u0301nima cantidad de pasos que necesitas para llevar el a\u0301rbol de su posicio\u0301n inicial al centro del campo.",
    "input": "Consiste en 5 li\u0301neas, y cada li\u0301nea contiene 5 enteros. Donde existen 24 cero ( 0) los cuales representan un espacio vaci\u0301o en el campo y un u\u0301nico uno ( 1) que representa el brote de a\u0301rbol que debera\u0301s mover al centro del campo.",
    "output": "Imprime un u\u0301nico numero entero \u2013 El mi\u0301nimo nu\u0301mero de movimientos que necesitas para llevar el a\u0301rbol al centro.",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 5037
  },
  {
    "title": "Pensando en equipo",
    "url": "https://omegaup.com/arena/problem/Pensando-en-equipo",
    "history": "Un di\u0301a tres amigos Marti\u0301n, Armando y Abraham decidieron formar un equipo y participar en una competencia de programacio\u0301n. En esta competencia a los participantes por lo general se les ofrece varios problemas durante la competencia. Mucho antes de comenzar los amigos decidieron que tratari\u0301an de implementar un problema si al menos dos de ellos esta\u0301n seguros acerca de la solucio\u0301n de lo contrario los amigos no intentari\u0301an resolver el problema. Este concurso ofrece n problemas a los participantes. Para cada problema sabemos, si cada uno de los amigos conoce la solucio\u0301n o no. Ayuda a los amigos a encontrar el nu\u0301mero de problemas para los que van a escribir la solucio\u0301n.",
    "input": "La primer li\u0301nea de entrada contiene un u\u0301nico entero N( 0\u2264N\u22641000) que es el nu\u0301mero de problemas en el concurso, las siguientes n li\u0301neas contienen tres enteros cada una, cada entero puede 0 o 1, si el primer nu\u0301mero de la li\u0301nea es igual a 1 entonces Martin esta\u0301 seguro acerca de la solucio\u0301n de problema de lo contrario no esta\u0301 seguro, el segundo numero muestra la visio\u0301n de Armando de la solucio\u0301n, el tercer numero entonces es la visio\u0301n de Abraham. Los nu\u0301meros en cada fila esta\u0301n separadas por espacio.",
    "output": "Imprimir un u\u0301nico entero ( el nu\u0301mero de problemas que los amigos implementaran en el concurso)",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 5034
  },
  {
    "title": "Contando Monedas",
    "url": "https://omegaup.com/arena/problem/Contando-Monedas",
    "history": "El sen\u0303or Mordechai tiene una pequen\u0303a tienda, y como a el le gusta ser organizado te ha pedido ayuda ya que sabe que eres un buen programador, por lo tanto te ha pedido realizar un programa que separe una cantidad cualquiera, este programa debe de ser capaz de contar cuantas monedas de 500, 200, 100, 50, 25, 10, 5, 1 hay.",
    "input": "Debes leer una cantidad cualquiera y dividirla en monedas.",
    "output": "Debes de mostrar la cantidad correspondiente",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 5017
  },
  {
    "title": "El nuevo delegado",
    "url": "https://omegaup.com/arena/problem/El-nuevo-delegado",
    "history": "Como todos sabemos, al dejar Angel Chi el puesto de delegado de la OMI en Yucata\u0301n, Bolio inmediatamente se autopostulo\u0301 como nuevo delegado. Sin embargo, Angel Chi le dijo que es demasiado irresponsable y flojo para serlo. Ante la terquedad de Bolio por ser el nuevo delegado, Angel Chi, para demostrarle que es un flojo, le pidio\u0301 que haga un programa que reciba una lista de N enteros y otra de M intervalos [ P, Q] , y luego devuelva la suma de los enteros de la primera lista que se encuentran en cada intervalo. De hacer esto, Angel le dejari\u0301a ser el nuevo delegado. Al llegar a su casa, Bolio intento\u0301 hacer el programa, pero se canso\u0301 tanto al encender su computadora, que le dio flojera hacerlo. Luego recordo\u0301 que tu\u0301 tambie\u0301n sabes programar, asi\u0301 que decidio\u0301 pedirte de favor que hagas el programa por e\u0301l.",
    "input": "Un entero N, la cantidad de nu\u0301meros que tiene la lista. Seguido de N enteros N_ i separados por un espacio, la lista. Un entero M, la cantidad de intervalos que se te dara\u0301n. Las siguientes M li\u0301neas tendra\u0301n, cada una, dos enteros P, Q representando los i\u0301ndices de cada intervalo.",
    "output": "M li\u0301neas, cada una respondiendo a la suma de los enteros de la lista de N nu\u0301meros, que se encuentran en el intervalo [ P, Q] , en mo\u0301dulo 10^ 9+ 7",
    "note": "",
    "topics": [
      "dp",
      "math",
      "implementation"
    ],
    "id": 5014
  },
  {
    "title": "El viaje de McFly",
    "url": "https://omegaup.com/arena/problem/Potencias-McFly",
    "history": "Jose\u0301 McFly ha disen\u0303ado una ma\u0301quina para viajar en el tiempo que funciona de una manera muy particular. La ma\u0301quina no puede viajar al pasado y aparte una vez encendida la ma\u0301quina viaja una cantidad de an\u0303os determinada hacia adelante de tal manera que en cada nuevo segundo que avanza, dobla la distancia que recorrio\u0301 previamente. Es decir, en el segundo 0, avanza 1 an\u0303o de distancia. En el segundo 1, dobla ese 1 que ya avanzo\u0301 y en total habra\u0301 avanzado 1+ 1= 2 an\u0303os. En el segundo 2, dobla el 2 ya recorrido y su distancia final habra\u0301 sido 2+ 2= 4 an\u0303os, y asi\u0301 sucesivamente. Si siempre se inicia en el an\u0303o 0, McFLy quiere saber: En que\u0301 segundo debe apagar la ma\u0301quina para quedar lo ma\u0301s cercano posible a una cantidad de an\u0303os N sin pasarse.",
    "input": "Recibira\u0301s un entero N que representa el nu\u0301mero de an\u0303os al que quieres llegar",
    "output": "Debes imprimir un entero que represente el nu\u0301mero de segundo en el que se debe de apagar la ma\u0301quina para lograr llegar a N sin pasarse.",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 5008
  },
  {
    "title": "Conversi\u00f3n a decimal",
    "url": "https://omegaup.com/arena/problem/Conversion-a-decimal",
    "history": "Dado un entero E escrito en base B, escribe un programa que imprima la representacio\u0301n de E en base decimal.",
    "input": "El entero B seguido de una cadena que es la representacio\u0301n de E en base B. Puedes suponer que 2 \u2264 B \u2264 16 y que la cadena tiene a lo mucho 16 di\u0301gitos. La cadena puede contener letras mayu\u0301sculas o minu\u0301sculas indistintamente.",
    "output": "Un entero que sea la representacio\u0301n de E en base decimal. Puedes suponer que el valor de E cabe en un entero de 64 bits sin signo.",
    "note": "",
    "topics": [
      "strings",
      "implementation",
      "math"
    ],
    "id": 5007
  },
  {
    "title": "PalabraLoca",
    "url": "https://omegaup.com/arena/problem/PalabraLoca",
    "history": "Dado cierto nu\u0301mero, convertirlo utilizando la palabra loca segu\u0301n las siguientes reglas: Leyendo las letras de la palabra de izquierda a derecha: - Si es una vocal, sumar 100- Si es una consonante de la \" b\" a la \" m\" , dividir entre dos y sacar su parte entera- Si es una consonante de la \" n\" a la \" z\" excepto \" x\" , restar 10- Si es una \" x\" ignorar el resto de la frase",
    "input": "La primer li\u0301nea contiene un nu\u0301mero entero inicial. La segunda li\u0301nea contiene la palabra loca, que consiste en puras letras minu\u0301sculas del co\u0301digo ASCII",
    "output": "El nu\u0301mero resultante de aplicar la palabra loca al nu\u0301mero inicial",
    "note": "",
    "topics": [
      "math",
      "implementation",
      "strings"
    ],
    "id": 4986
  },
  {
    "title": "SumaDosGrandes",
    "url": "https://omegaup.com/arena/problem/SumaDosGrandes",
    "history": "Dada una lista de 6 nu\u0301meros enteros diferentes, encuentra la suma de los dos nu\u0301meros mayores de la lista.",
    "input": "6 nu\u0301meros enteros, uno en cada renglo\u0301n",
    "output": "La suma de los dos nu\u0301meros ma\u0301s grandes de la lista",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 4985
  },
  {
    "title": "Ovatsug el rey",
    "url": "https://omegaup.com/arena/problem/Ovatsug-el-rey",
    "history": "Un di\u0301a en el reino Abdala, el rey Ovatsug reunio\u0301 a todas las personas del reino para realizar su juego favorito. El juego consiste en que las personas son numeradas de 1 a N y se forman de manera aleatoria. Luego el rey toma a la persona que esta\u0301 formada al final y le dice que se forme al inicio, este proceso lo hace T veces. Cuando el juego termina, le pide a su bufo\u0301n que le diga en que orden estaban las N personas antes de que ocurriera algu\u0301n cambio de posicio\u0301n. Tu tarea consiste en ayudar al bufo\u0301n para que responda correctamente lo que el rey pide.",
    "input": "En la primera li\u0301nea dos enteros * * N* * y * * T* * , el nu\u0301mero de personas del reino y el nu\u0301mero de veces que el rey cambio a las personas. En la segunda li\u0301nea N enteros separados por un espacio, el orden en que las personas quedaron despue\u0301s de los T movimientos. El primer elemento representa a la persona que esta\u0301 formada al inicio y el u\u0301ltimo a la persona que esta\u0301 formada al final.",
    "output": "N enteros separados por un espacio, la forma en la que estaban acomodadas las N personas antes de que el rey las moviera.",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 4982
  },
  {
    "title": "'Cajas de dulces'",
    "url": "https://omegaup.com/arena/problem/Cajas-de-dulces",
    "history": "Carlitos fue a la tienda con su mama a comprar el mandado, y vio un estante con N cajas de dulces, entonces Carlitos le pide a su mama que si le puede comprarle algunas cajas, su mama dijo que si pero que solo agarrara K cajas y que si agarraba una caja tenia que agarrar las que esta\u0301ban junto para que no se tarde en ver cual escoger, Carlitos acepta el trato y va a agarrarlos, como su mama solo le permitio llevarse K cajas y que solo se podia llevar cajas que estuvieran juntas, entonces decide llevarse lo maximo de dulces posible, pero no sabe cuanto es el maximo de dulces que se puede llevar, entonces decides ayudarlo para saber la suma total de dulces que Carlitos se puede llevar.",
    "input": "Recibira\u0301s 2 nu\u0301meros N y K, que N representa el numero de cajas que hay en el estante y K las cajas que puede agarrar. En la siguiente linea seguira\u0301n los N_ i nu\u0301meros que es el numero de dulces que contiene cada caja",
    "output": "Un numero que represente la suma maxima de dulces que puede llevarse Carlitos.",
    "note": "",
    "topics": [
      "math",
      "implementation",
      "sortings"
    ],
    "id": 4902
  },
  {
    "title": "'Sumas Veleanas",
    "url": "https://omegaup.com/arena/problem/Sumas-Veleanas",
    "history": "En una excursio\u0301n que nunca se hizo a un lugar que nunca existio\u0301, se encontro\u0301 un papel que jamas fue escrito en el cual se hablaba de un tipo de sumas muy especial, las sumas veleanas, \u00bfen que consisti\u0301an este tipo de sumas? pues bien, dado dos series de nu\u0301meros separadas por un espacio, debi\u0301as: * Ordenar la primera serie de menor a mayor. * Ordenar la segunda en viceversa. * Sumarlas de derecha a izquierda sabiendo que como en las series normales si el numero excede los 2 di\u0301gitos solo debera\u0301s tomar el segundo y el primero suma\u0301rselo a la siguiente suma ( Ver caso de ejemplo)",
    "input": "Un numero N igual a la cantidad de nu\u0301meros que componen la serie, seguido de este ambas series cada una en una linea sabiendo que todos son di\u0301gitos menores a 10 y no existen nu\u0301meros negativos.",
    "output": "la suma total de la serie.",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 4826
  },
  {
    "title": "Hola Mundo",
    "url": "https://omegaup.com/arena/problem/ofs-hola-mundo",
    "history": "",
    "input": "Dos nu\u0301meros, a y b. # SaludaLa suma de ambos nu\u0301meros.",
    "output": "",
    "note": "",
    "topics": [
      "sortings",
      "math"
    ],
    "id": 4754
  },
  {
    "title": "La Plaza del Teatro",
    "url": "https://omegaup.com/arena/problem/La-Plaza-del-Teatro",
    "history": "La Plaza del Teatro en la ciudad capital de tiene una forma rectangular con el taman\u0303o n \u00d7 m metros. Con motivo del aniversario de la ciudad, se tomo\u0301 la decisio\u0301n de rellenar la plaza con losas de granito cuadrados. Cada losa es del taman\u0303o de a \u00d7 a. \u00bfCua\u0301l es el menor nu\u0301mero de losas necesarios para pavimentar la plaza? Esta\u0301 permitido cubrir una superficie ma\u0301s grande que la plaza del teatro, pero la plaza tiene que ser cubierta. No esta\u0301 permitido romper las losas. Los lados de losas deben ser paralelos a los lados del cuadrado.",
    "input": "La entrada contiene tres nu\u0301meros enteros positivos en la primera li\u0301nea: n , m y a ( 1 \u2264 n, m, a \u2264 10^ 9) .",
    "output": "Escribe el nu\u0301mero necesario de losas.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 4749
  },
  {
    "title": "Plan de Internet",
    "url": "https://omegaup.com/arena/problem/OMICAMP-Plan-de-Internet",
    "history": "# HistoriaLa OMI Campeche, tiene un problema muy particular, se tiene contratado un servicio de internet que nos cobra por ancho de banda consumido, donde el proveedor del servicio tiene un plan tarifario que va por rangos de consumo, en el cual cada plan tiene un costo diferente por megas consumidos, a continuacio\u0301n la lista de los posibles manes de consumo. 1. Plan N\u00b01 de 1MB a 500MB, 2 pesos por mega. 2. Plan N\u00b02 de 501MB a 1GB, 1. 80 pesos por mega. 3. Plan N\u00b03 de 1025MB a 2GB, 1. 60 pesos por mega. 4. Plan N\u00b04 de 2049MB a 4GB, 1. 40 pesos por Mega. 5. Plan N\u00b05 de 4097MB a 10GB, 0. 50 pesos por Mega. Tu deber es ayudar a la OMI a poder calcular cual es el Plan en que se encuentran segu\u0301n cuantos megas hayan consumido y saber el monto a pagar al provedor. # ProblemaCrear un programa que calcule el plan tarifario y el monto a pagar por los megas consumidos.",
    "input": "En la primera li\u0301nea se recibira\u0301 un valor entero N que representara la cantidad de megas que consumio\u0301 la OMI.",
    "output": "Tu programa debe imprimir el Plan tarifario y el monto a pagar.",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 4738
  },
  {
    "title": "Administraci\u00f3n financiera",
    "url": "https://omegaup.com/arena/problem/Administracion-financiera",
    "history": "Larry se graduo\u0301 este an\u0303o y, finalmente, tiene un trabajo. Esta\u0301 ganando un monto\u0301n de dinero, pero de alguna manera nunca parece tener suficiente. Larry ha decidido que necesita tomar control de su cartera financiera y resolver sus problemas de financiacio\u0301n. El primer paso es averiguar lo que esta\u0301 pasando con su dinero. Larry tiene sus estados de cuenta bancarios y quiere ver la cantidad de dinero que tiene. Ayuda a Larry escribiendo un programa que tome su balance de cierre de cada uno de los u\u0301ltimos doce meses y calcule su saldo promedio.",
    "input": "La entrada sera\u0301 de 12 li\u0301neas. Cada li\u0301nea contendra\u0301 el balance de cierre de su cuenta bancaria para un mes en particular. Cada nu\u0301mero sera\u0301 positivo y se muestra hasta el u\u0301ltimo centavo. No se incluira\u0301 ningu\u0301n signo de pesos.",
    "output": "La salida sera\u0301 un u\u0301nico nu\u0301mero, el promedio ( media) de los saldos de cierre de los 12 meses. Se redondeara\u0301 al centavo ma\u0301s cercano, inmediatamente precedido por un signo de pesos, y seguido por el final de la li\u0301nea. No habra\u0301 otros espacios o caracteres en la salida.",
    "note": "",
    "topics": [
      "brute force",
      "math",
      "implementation"
    ],
    "id": 4734
  },
  {
    "title": "Torneos de B\u00e9isbol",
    "url": "https://omegaup.com/arena/problem/Torneos-de-Beisbol",
    "history": "\u00a1Es casi imposible encontrar un cubano a quien no le interese el be\u0301isbol! Siendo el deporte nacional, el be\u0301isbol ahi\u0301 es una pasio\u0301n ma\u0301s que un simple juego. una de esas cosas que todo cubano sabe es que los rounds preliminares de la Serie Nacional Cubana involucra 16 equipos y que tienen que jugar 6 juegos contra cada uno de los otros, haciendo un total de 720 juegos en esa etapa. Como eres una persona muy curiosa, haz empezado a preguntarte si es posible o no determinar el total de juegos para ese tipo de torneos, dada la cantidad de equipos y cua\u0301ntos juegos deben jugar contra cada uno de los dema\u0301s equipos, incluso cuando esos nu\u0301meros sean poco realistas. Aunque eres un excelente programador, asi\u0301 que ra\u0301pidamente te das cuenta de que es posible escribir un programa de computadora que te ayude.",
    "input": "La entrada consiste en una li\u0301nea con dos enteros N y K, la cantidad de equipos y de juegos respectivamente.",
    "output": "Un u\u0301nico entero, con el nu\u0301mero total de juegos que se jugara\u0301n en la etapa preliminar del torneo de acuerdo a lo dicho anteriormente.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 4733
  },
  {
    "title": "A ? B",
    "url": "https://omegaup.com/arena/problem/A--B",
    "history": "Dados dos nu\u0301meros A y B, debes de realizar los siguientes ca\u0301lculos: - A+ B- A- B- A* B- A/ B- A mod B",
    "input": "La u\u0301nica li\u0301nea de entrada tiene dos enteros separados A y B.",
    "output": "Debes de escribir los resultados de los ca\u0301lculos, uno por li\u0301nea",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 4732
  },
  {
    "title": "Anotando Goles",
    "url": "https://omegaup.com/arena/problem/Anotando-Goles",
    "history": "Mike es un alumno del ITAM al que le gusta jugar fu\u0301tbol cada semestre, y aunque hay veces en las que pierde 16- 0 y no anota ningu\u0301n gol, lleva la cuenta de los goles que ha metido. Como es muy competitivo y quiere superar siempre a su competencia, quiere saber cua\u0301ntas personas hay con ma\u0301s goles que e\u0301l en todo el ITAM y cua\u0301ntos goles le faltan para alcanzar al que anoto\u0301 la mayor cantidad. Ayuda a Mike a lograr su objetivo.",
    "input": "En la primera li\u0301nea, M, la cantidad de goles que ha anotado Mike. En la segunda li\u0301nea, N, la cantidad de de jugadores que han metido goles en el semestre. Despue\u0301s leera\u0301s N li\u0301neas, cada una con un nu\u0301mero que representa la cantidad de goles que ha anotado cada persona. La lista de nu\u0301mero de goles estara\u0301 * * ordenada* * de menor a mayor.",
    "output": "La cantidad de goles que le faltan a Mike para alcanzar a la persona con ma\u0301s goles, seguido por la cantidad de personas que han anotado ma\u0301s goles que Mike.",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 4716
  },
  {
    "title": "DFD-Reloj",
    "url": "https://omegaup.com/arena/problem/DFD-Reloj",
    "history": "Escribe un programa que lea la hora actual en formato hora, minutos, segundos e imprima la hora que sera\u0301 despue\u0301s de pasado un segundo.",
    "input": "Tres enteros correspondientes a la hora, minuto y segundo actual.",
    "output": "0: 0: 0| | description| | end",
    "note": "",
    "topics": [
      "strings",
      "math"
    ],
    "id": 4707
  },
  {
    "title": "Comprando Manzanas",
    "url": "https://omegaup.com/arena/problem/Comprando-Manzanas",
    "history": "La pequen\u0303a Lulu\u0301 tiene solo 8 an\u0303os, pero su madre considera que ya es momento que comience a tener algunas responsabilidades. Por eso, decide enviarla a comprar n manzanas al mercado cerca de su casa. Como sabemos, en el mercado los vendedores esta\u0301n acostumbrados a que les pidan las manzanas por docenas. La pequen\u0303a Lulu\u0301 ya sabe dividir, pero au\u0301n tiene algunas dificultades en hacerlo. Escribe un programa que ayude a la pequen\u0303a Lulu\u0301 a convertir a docenas el nu\u0301mero n que su madre le dio\u0301.",
    "input": "La entrada consiste de un u\u0301nico entero n. n es siempre mu\u0301ltiplo de 12.",
    "output": "Escribe el nu\u0301mero de docenas en el siguiente formato: - ` 1 docena de manzanas. ` - ` D docenas de manzanas. ` donde D es el nu\u0301mero de docenas, segu\u0301n sea el caso. Nota el punto al final del mensaje.",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 4663
  },
  {
    "title": "Breviario Fibonacci",
    "url": "https://omegaup.com/arena/problem/Breviario-Fibonacci",
    "history": "Ana Paula esta\u0301 muy interesada en la sucesio\u0301n de Fibonacci. Ella sabe que el primer te\u0301rmino de la sucesio\u0301n es el 0 y el segundo es el 1. Tambie\u0301n sabe que a partir de los dos primeros te\u0301rminos, se pueden calcular los siguientes te\u0301rminos usando la recursio\u0301n F_ n= F_ n- 1+ F_ n- 2, es decir, F_ 0= 0 F_ 1= 1 F_ 2= 1+ 0= 1 F_ 3= 1+ 1= 2 . . . F_ n= F_ n- 1 + F_ n- 2 Aunque este procedimiento es muy fa\u0301cil, es bastante tedioso, y Ana Paula de ninguna forma quiere ponerse a calcular todos los nu\u0301meros de Fibonacci. Tu tarea es hacer un programa que dados tres nu\u0301meros: n, m, y k, imprima F_ n, F_ m, y F_ k. # Nota: Para todos los casos se cumple que: 0 \u2264 n, m, k \u2264 45",
    "input": "Tres nu\u0301meros: n, m, y k, cada uno en una li\u0301nea distinta.",
    "output": "El nu\u0301mero de Fibonacci que corresponde a cada uno de los nu\u0301meros lei\u0301dos",
    "note": "",
    "topics": [
      "number theory",
      "implementation",
      "math"
    ],
    "id": 4630
  },
  {
    "title": "Ahorrando para los Yoyos",
    "url": "https://omegaup.com/arena/problem/Ahorrando-para-los-Yoyos",
    "history": "Siempre que te encuentres a Gil en el ITAM, con altas probabilidades estara\u0301 haciendo trucos con un yoyo. Pero no solo esto, ya que tambie\u0301n los colecciona ( y los yoyos no son nada baratos) , por lo que debe ahorrar su dinero para poder comprar un yoyo para la siguiente competencia. Gil a veces es muy obsesivo con los yoyos y los compra sin pensar, es por ello que Gil te pide que le ayudes a determinar cua\u0301ntos di\u0301as de la semana se paso\u0301 de su li\u0301mite de gasto.",
    "input": "Un entero no negativo, X, el presupuesto diario que Gil tiene, seguido de 7 li\u0301neas, con un entero no negativo donde cada una representa la cantidad de dinero que Gil gasto\u0301 en ese di\u0301a de la semana.",
    "output": "Cua\u0301ntos di\u0301as Gil gasto\u0301 de ma\u0301s.",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 4627
  },
  {
    "title": "Ecuaciones de Sesos",
    "url": "https://omegaup.com/arena/problem/Ecuaciones-de-Sesos",
    "history": "Ricardo ama los tacos y hace dos semanas fue a comer con sus amigos a los famosos tacos de sesos fuera de una famosa estacio\u0301n del metro, pero la poca higiene del lugar le provoco\u0301 una enfermedad en los sesos ( LOL) . Debido a los deliciosos tacos Ricardo olvido\u0301 co\u0301mo resolver ecuaciones de segundo grado, es decir, de la forma: ax^ 2 + bx + c = 0. Como e\u0301l esta\u0301 muy orgulloso de ser matema\u0301tico y no quiere perder su prestigio, te ha pedido que hagas un programa que le diga si algunas ecuaciones tienen solucio\u0301n o no. Nota: Recuerda que para encontrar la solucio\u0301n de una ecuacio\u0301n de segundo grado se puede usar la fo\u0301rmula cuadra\u0301tica: x= b\u00b1\u221a( b^ 2 - 4ac) / 2a",
    "input": "Un entero, N, que representa la cantidad de ecuaciones que Ricardo debe resolver. A continuacio\u0301n leera\u0301s N casos, que constan de 3 li\u0301neas cada uno, donde en cada li\u0301nea esta\u0301n los nu\u0301meros a, b y c de la ecuacio\u0301n a resolver. Nota 2: a, b y c son nu\u0301meros enteros, y a = \u0338 0.",
    "output": "Para cada caso debes imprimir \" SI\" en caso de que la ecuacio\u0301n tenga solucio\u0301n ( en los nu\u0301meros reales) o \" NO\" en caso contrario.",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 4594
  },
  {
    "title": "Dificultad Matem\u00e1tica",
    "url": "https://omegaup.com/arena/problem/Dificultad-Matematica",
    "history": "Debido a que se ha juntado mucho con Ricardo, Mike se ha vuelto muy distrai\u0301do ( si\u0301, las malas costumbres se pegan entre amigos) . En particular, Mike ha comenzado a olvidar cua\u0301ndo tiene que hacer tarea. E\u0301l sabe cua\u0301ntas tareas ha dejado de hacer, y cua\u0301ntos minutos le toma cada una de ellas, pero como es tan distrai\u0301do gracias a Ricardo, te ha pedido que le ayudes a elaborar un programa que le permita calcular el tiempo promedio de todas las tareas que ha postergado.",
    "input": "En la primera li\u0301nea, el entero positivo N que representa la cantidad de tareas que Mike olvido\u0301 hacer. Posteriormente, en las siguientes N li\u0301neas, el tiempo que le toma a Mike resolver cada tarea.",
    "output": "El tiempo promedio que le tomara\u0301 a Mike realizar todas las tareas.",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 4593
  },
  {
    "title": "Construyendo Torres",
    "url": "https://omegaup.com/arena/problem/Construyendo-Torres",
    "history": "Ricardo suele ser un poco distrai\u0301do, por lo que se le ha olvidado por completo que teni\u0301a que asistir a su clase de circuitos lo\u0301gicos. Sin embargo, a Ricardo le gusta aprovechar el tiempo de una manera muy peculiar: construir torres con bloquecitos de madera con su amigo Pablo ( quien tampoco entro\u0301 a su clase) . Ricardo y Pablo son fana\u0301ticos de Maincra y es por ello que quieren construir torres de 3 tipos: cuadrada ( 1) , romboidal ( 2) o piramidal ( 3) . Sin embargo, no saben cua\u0301ntos bloques necesitara\u0301n para construir una torre de altura H. < center> ! [ Torres] [ 1] < / center> Ayuda a Ricardo y Pablo a saber cua\u0301ntos bloques necesitara\u0301n para construir una torre.",
    "input": "Un nu\u0301mero H que representa la altura de la torre. H es impar si la torre es romboidal. Un nu\u0301mero K que representa el tipo de torre que quiere construir: cuadrada ( 1) , romboidal ( 2) o piramidal ( 3)",
    "output": "Tu programa debera\u0301 imprimir el nu\u0301mero de bloques necesarios para armar la torre.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 4592
  },
  {
    "title": "Bellos Muffins",
    "url": "https://omegaup.com/arena/problem/Bellos-Muffins",
    "history": "Un grupo de amigos se reunieron para disfrutar N deliciosos muffins de chocolate y se los repartira\u0301n equitativamente, es decir, cada uno comera\u0301 la misma cantidad de muffins sin partirlos. Repartir los pastelillos equitativamente permite que algunos de ellos sobren, por lo que los amigos decidieron que le dara\u0301n todos los muffins que sobren despue\u0301s de la reparticio\u0301n a Gil ( uno de los integrantes del grupo) pues e\u0301l adora los de chocolate. Tu tarea es calcular cua\u0301ntos muffins comera\u0301 Gil.",
    "input": "Leera\u0301s un entero, N, que representa la cantidad de muffins que tienen los amigos. Luego leera\u0301s un entero, M, que representa la cantidad de amigos que se reunieron a comer muffins ( incluyendo a Gil) .",
    "output": "Un nu\u0301mero entero, la cantidad de muffins que Gil comera\u0301.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 4589
  },
  {
    "title": "Acumulando Monedas",
    "url": "https://omegaup.com/arena/problem/Acumulando-Monedas",
    "history": "A los voluntarios el Coding Rush les gusta mucho jugar MonsterBall Go, y esta\u0301n planeando hacer una excursio\u0301n al terminar esta sesio\u0301n. Mario quiere revisar cua\u0301ntos gimnasios hay en el camino, pues cada gimnasio le da 10 MonsterMonedas. Como esta\u0301 muy ocupado siendo un voluntario del Coding Rush, no tiene tiempo para hacer cuentas, asi\u0301 que te pidio\u0301 ayuda para decirle cua\u0301ntas MonsterMonedas tendra\u0301 al terminar la excursio\u0301n, si sabe que va a pasar por N gimnasios.",
    "input": "Un entero, N, que representa la cantidad de gimnasios en el camino.",
    "output": "Un nu\u0301mero, K, que representa la cantidad de MonsterMonedas que Mario tendra\u0301 al terminar la excursio\u0301n.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 4588
  },
  {
    "title": "UP Suma Impares",
    "url": "https://omegaup.com/arena/problem/UP-Suma-Impares",
    "history": "# Suma ImparesEl arreglo X se compone de n nu\u0301meros, X = x_ 0, x_ 1, . . . , x_ n- 1. Escribe un programa que calcule la suma de todos los elementos que esta\u0301n en posiciones impares de X.",
    "input": "La primera li\u0301nea contiene un numero n ( 2 \u2264 n \u2264 10^ 5) , indicando la cantidad de elementos en X. Le siguen n li\u0301neas que componen los elementos de X ( - 10^ 4 \u2264 x_ i \u2264 10^ 4) .",
    "output": "La suma de todos los elementos en posiciones impares de X. Ejemplo de Entrada 1 | Ejemplo de Salida 1\u2014\u2014\u2014\u2014- | \u2014\u2014\u2014\u2014\u2014- 4 < br> 0 < br> 3 < br> 7 < br> 1 | 4# # # Explicacio\u0301nx_ 1 + x_ 3 = 3 + 1 = 4",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 4572
  },
  {
    "title": "Cuadrados Pintados al reves",
    "url": "https://omegaup.com/arena/problem/Cuadrados-Pintados-al-reves",
    "history": "Escriba un programa que pida n nu\u0301meros y los guarde en un arreglo. Luego debe escribir el cuadrado de cada nu\u0301mero en orden inverso al que fueron introducidos.",
    "input": "la primera linea contiene un entero n que esta entre 1 y 100, le siguen n li\u0301neas con lo nu\u0301meros del arreglo",
    "output": "El cuadrado de cada elemento del arreglo, desplegado en orden inverso al que fueron introducidos.",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 4532
  },
  {
    "title": "Bases de 3",
    "url": "https://omegaup.com/arena/problem/Bases-de-3",
    "history": "Dado un entero positivo N imprimir su representacio\u0301n en base 3",
    "input": "Un entero real N en base 10",
    "output": "Un nu\u0301mero k que indica la representacion de N en base 3.",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 4485
  },
  {
    "title": "Factorial hasta el 20",
    "url": "https://omegaup.com/arena/problem/Factorial-hasta-el-20",
    "history": "El factorial de un nu\u0301mero positivo n esta\u0301 definido recursivamente como n! = n* ( n- 1) ! Con un caso base en el que 0! = 1. Encuentra el factorial de un nu\u0301mero.",
    "input": "Un nu\u0301mero entero positivo n. 0 \u2264 n \u2264 20",
    "output": "El factorial de ese nu\u0301mero",
    "note": "",
    "topics": [
      "number theory",
      "implementation",
      "math"
    ],
    "id": 4483
  },
  {
    "title": "Cuantos Cuadrados",
    "url": "https://omegaup.com/arena/problem/Cuantos-Cuadrados",
    "history": "El Dr. ( en Ciencias) Sergey B. Fortinovich dejo\u0301 las ciencias por un tiempo, por lo que ahora se dedica a disen\u0303ar tapetes. Cada tapete esta\u0301 hecho con un u\u0301nico color de estambre adema\u0301s que esta\u0301n fabricados de una forma muy particular: Tienen una forma cuadriculada y cada cuadrado tiene que tener un trozo de estambre de algu\u0301n color. Como se desea conocer la cantidad exacta de estambre que se va a utilizar, el Dr. Sergey B. Fortinovich te ha pedido que le ayudes a determinar el mayor nu\u0301mero de cuadrados que es posible formar dentro de un tapete de forma cuadrada. ! [ enter image description here] [ 1] * Ejemplo de un tapete de lado N= 6, los cuadrados de colores representan algunos de los posibles cuadrados que pueden formarse dentro del tapete. * # ProblemaDado un nu\u0301mero N que representa la dimensio\u0301n de un lado del tapete, determina la cantidad * * ma\u0301xima* * de cuadrados que es posible formar dentro de un tapete cuadriculado.",
    "input": "Un nu\u0301mero N que representa la dimensio\u0301n del lado del tapete.",
    "output": "Un u\u0301nico nu\u0301mero mostrando la cantidad ma\u0301xima de cuadrados que es posible formar.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 4481
  },
  {
    "title": "suma el ultimo digito de dos numeros",
    "url": "https://omegaup.com/arena/problem/suma_last",
    "history": "Escriba una funcio\u0301n que reciba dos enteros y regrese la suma del u\u0301ltimo di\u0301gito de los dos nu\u0301meros. Es decir si el usuario introduce 23 y 45 la funcio\u0301n regresa 8 que es igual a 3+ 5. Escriba el programa que llame esta funcion 5 veces.",
    "input": "dos enteros",
    "output": "la suma de los dos ultimos digitos",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 4432
  },
  {
    "title": "Ayudando a la catrina | ASINUS",
    "url": "https://omegaup.com/arena/problem/Ayudando-a-la-catrina--ASINUS",
    "history": "Ya es octubre, para estas fechas la catrina se prepara para comenzar su nuevo an\u0303o, el di\u0301a 2 de noviembe. Debido al tan perticular trabajo de nuestra amiga la huesuda, es necesario que planifique la cantidad de personas que se va a llevar al panteo\u0301n cada an\u0303o. Para llevar a cabo esta tarea recibe los siguientes datos: * Una cantidad * * N* * de ciudades. * Para cada una de las * * N* * ciudades recibe un nu\u0301mero * * K* * que representa la cantidad de habitantes. La catrina sabe muy bien que solo puede llevarse un 10",
    "input": "* En la primer linea un nu\u0301mero * * N* * de ciudades. * En las siguientes * * N* * lineas el nu\u0301mero * * K* * de habitantes en esa ciudad.",
    "output": "* El total * * M* * de personas que se va a llevar a la tumba. * * * N* * lineas indicando la cantidad de habitantes que se puede llevar por cada ciudad.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 4425
  },
  {
    "title": "Construccion de un Tri\u00e1ngulo",
    "url": "https://omegaup.com/arena/problem/DRMIGTriangulo",
    "history": "Un tria\u0301ngulo es construi\u0301do con tres li\u0301neas rectas, que forman sus lados. Pero no cualquier conjunto de tres li\u0301neas puede formar un tria\u0301ngulo. Dadas las longitudes de tres li\u0301neas rectas, determinar si es posible formar un tria\u0301ngulo con ellas.",
    "input": "Tres entradas que representan cada una un nu\u0301mero decimal. Cada nu\u0301mero corresponde a la longitud de una li\u0301nea recta.",
    "output": "- La palabra \" SI\" si se puede formar un tria\u0301ngulo con esos tres lados. - La palabra \" NO\" si no es posible formarlo.",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 4389
  },
  {
    "title": "Cuadrados Al Rev\u00e9s",
    "url": "https://omegaup.com/arena/problem/Cuadrados-Al-Reves",
    "history": "# Cuadrados al Reve\u0301sDado una arreglo de numeros enteros X, escribe un programa que imprima cada elemento de X al cuadrado, comenzando por el u\u0301ltimo elemento, luego el penu\u0301ltimo, y asi\u0301 sucesivamente hasta llegar al primer elemento.",
    "input": "La primera li\u0301nea contiene un entero n ( 1 \u2264 n \u2264 1000) , indicando el nu\u0301mero de elementos. Le siguen n li\u0301neas que representan los elementos de X ( 1 \u2264 X_ i \u2264 10^ 6) .",
    "output": "Cada elemento de X elevado al cuadrado, en el orden inverso al de la entrada, es decir, comenzando por el u\u0301ltimo y terminando en el primero. Ejemplo de Entrada 1 | Ejemplo de Salida 1\u2014\u2014\u2014\u2014- | \u2014\u2014\u2014\u2014\u2014- 4 < br> 1 < br> 2 < br> 3 < br> 4 | 16 < br> 9 < br> 4 < br> 1Ejemplo de Entrada 2 | Ejemplo de Salida 2\u2014\u2014\u2014\u2014- | \u2014\u2014\u2014\u2014\u2014- 4 < br> 3 < br> 2 < br> 6 < br> 5 | 25 < br> 36 < br> 4 < br> 9",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 4370
  },
  {
    "title": "Repartiendo cachorros",
    "url": "https://omegaup.com/arena/problem/Repartiendo-cachorros",
    "history": "La perrita de Don Pancho acaba de dar a luz C cachorros. Como a Don Pancho le gustan mucho los perritos, planea quedarse con al menos P de ellos y los dema\u0301s intentara\u0301 repartirlos equitativamente entre el resto de su familia, que incluye a su esposa adema\u0301s de sus H hijos. Los cachorros que no se puedan repartir equitativamente entre ellos tambie\u0301n se los quedara\u0301 e\u0301l. \u00bfCon cu\u0301antos cachorros se quedara\u0301 Don Pancho?",
    "input": "Tres enteros C, P y H. Puedes suponer que 0 \u2264 C, P, H \u2264 1000 y P \u2264 C.",
    "output": "Un entero que sea el nu\u0301mero de cachorros con los que se quedara\u0301 Don Pancho.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 4358
  },
  {
    "title": "Piso de cer\u00e1mica",
    "url": "https://omegaup.com/arena/problem/piso_de_ceramica",
    "history": "Se desea colocar piso de cera\u0301mica en una a\u0301rea de un salo\u0301n de baile. El a\u0301rea a decorar es un cuadrado de n unidades de ancho en cada lado. Abajo se muestra el disen\u0303o que debera\u0301 tener el piso. ! [ Ejemplo de disen\u0303o] ( piso_ de_ ceramica. jpg) Hay dos tipos de cera\u0301mica, una blanca y otra gris, y debera\u0301s indicar cuantos cuadros blancos y cua\u0301ntos grises se ocupara\u0301n para el piso a colocar",
    "input": "Un so\u0301lo nu\u0301mero n impar, el ancho del cuadrado que ocupara\u0301 la cera\u0301mica",
    "output": "Una so\u0301la li\u0301nea con dos nu\u0301meros: la cantidad de cera\u0301mica de color blanco y la cantidad de color gris, separados por un espacio",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 4356
  },
  {
    "title": "Calculando divisores",
    "url": "https://omegaup.com/arena/problem/CALC_DIVISORES",
    "history": "Un divisor es una cantidad que divide a otra sin dejar residuo. Por ejemplo, 4 es divisor de 20, dado que 20 \u00f7 4 = 5, y el residuo de esta divisio\u0301n es 0. Para un nu\u0301mero n, existen dos nu\u0301meros que siempre van a ser sus divisores: 1 y n. Escribe un programa que calcule todos los divisores de un nu\u0301mero entero n.",
    "input": "La entrada consiste de una sola li\u0301nea con el valor de n.",
    "output": "Todos los divisores de n, uno por li\u0301nea, empezando desde el ma\u0301s grande hasta el ma\u0301s chico.",
    "note": "",
    "topics": [
      "math",
      "trees",
      "implementation",
      "graphs"
    ],
    "id": 4353
  },
  {
    "title": "Multiplicaci\u00f3n binaria",
    "url": "https://omegaup.com/arena/problem/MULT-BIN",
    "history": "Escribe un programa que pueda multiplicar dos nu\u0301meros en binario, dando el resultado tambie\u0301n en binario.",
    "input": "La entrada consiste de dos li\u0301neas. La primera li\u0301nea tiene el primer nu\u0301mero en binario b_ 1, que consiste de k_ 1 di\u0301gitos ` 0` y ` 1` . De manera similar, la segunda li\u0301nea tiene el segundo nu\u0301mero en binario b_ 2 con k_ 2 di\u0301gitos ` 0` y ` 1` .",
    "output": "El resultado, en binario, de multiplicar b_ 1 por b_ 2.",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 4351
  },
  {
    "title": "Direc",
    "url": "https://omegaup.com/arena/problem/Direc",
    "history": "# HistoriaEl director de cierta escuela, constantemente pide informacio\u0301n a Maco con respecto a las calificaciones obtenidas por los alumnos que e\u0301l dignamente dirige. Los alumnos esta\u0301n matriculados con nu\u0301meros enteros positivos ( 1, 2, 3, . . . ) . A la vez, las materias que toman los muchachos, por efectos pra\u0301cticos, tambie\u0301n se les maneja con nu\u0301meros del 1 al 1000 ( muchas materias, pero es una escuela de hipern\u0303on\u0303os) . Las preguntas que hace el director siempre son de la forma \u201c\u00bfCua\u0301l es promedio de la suma de las calificaciones de los alumnos a al b, de las materias de la q a la r? \u201d# ProblemaAyuda a Maco a responder de manera ra\u0301pida ( en menos de un segundo) las continuas preguntas de su jefe.",
    "input": "El primer renglo\u0301n tendra\u0301 dos nu\u0301meros, n la cantidad de alumnos, 1 \u2264 n \u2264 1000, y m la cantidad de materias, 1 \u2264 m \u2264 1000. Despue\u0301s seguira\u0301n n renglones con m nu\u0301meros en cada uno de ellos, sera\u0301n las respectivas calificaciones de los estudiantes. Cada calificacio\u0301n tendra\u0301 un entero entre 0 y 100. Luego seguira\u0301 un nu\u0301mero p, 1 \u2264 p \u2264 106, la cantidad de preguntas que hizo el director. Por u\u0301ltimo, habra\u0301 p li\u0301neas con cuatro nu\u0301meros a, b, q y r, 1 \u2264 a \u2264 b \u2264 n, 1 \u2264 q \u2264 r \u2264 m, que indican que el Director quiere el promedio de los alumnos del a al b, de las materias de la q a la r.",
    "output": "La salida debera\u0301 tener p li\u0301neas, en cada una debera\u0301 estar el promedio respectivo pedido por el director. Solamente debera\u0301s escribir la parte entera, es decir, sin decimales. # Ejemplos| | input3 4100 90 80 70100 100 100 10060 60 60 6021 3 1 41 2 2 3| | output8192| | end",
    "note": "",
    "topics": [
      "matrices",
      "math",
      "implementation"
    ],
    "id": 4341
  },
  {
    "title": "Aiudaaaaaa",
    "url": "https://omegaup.com/arena/problem/Autistas",
    "history": "# Historia* * ARTO DE NO PODER RESOLVER EL REY CAPRICHOSO. . ? NECESITA USTED URGENTEMENTE 100 PUNTOS Y NO SABE QUE HACER? . . . SU MAESTRO LO PRESIONA Y USTED YA ESTA FRUSTRADO? . . ESTA LEYENDO ESTO COMO VENDEDOR DE COMERCIALES. . . ? NO SE PREOCUPE, LE TENEMOS LA SOLUCIO\u0301N ESTE NUEVO PROBLEMA LO AYUDARA A SACAR 100 PUNTOS SI O SI, PERO RECUERDE LEERLO TODO O AL MENOS EL PROBLEMA, SI NO NO FUNCIONARA* * Practicar para la OMI es muy estresante, asi\u0301 que te pones a jugar un juego de video para relajarte. En dicho juego tienes un equipo de 4 personajes. Cada personaje cuenta con un nu\u0301mero entero de puntos de energi\u0301a que pueden usar para hacer ataques. En este juego realizar cualquier ataque cuesta KK puntos de energi\u0301a. Como en los mejores juegos de este tipo, cada personaje puede atacar so\u0301lo con cierto tipo de ataques. En este juego existen 7 tipos: Normal, Fuego, Hielo, Aire, Electricidad, Luz y Oscuridad. Cada personaje puede realizar ataques de un subconjunto de estos tipos. Por ejemplo, un personaje de tu equipo podri\u0301a solamente realizar ataques de tipo Normal y de Fuego, mientras otro personaje podri\u0301a realizar ataques de tipo Aire y Electricidad, y asi\u0301 para los dema\u0301s personajes. El siguiente nivel que jugara\u0301s tiene NN enemigos, numerados del 11 al NN, cada enemigo es vulnerable a so\u0301lo un tipo de ataque, si recibe un ataque de este tipo sera\u0300 derrotado inmediatamente, ademas un ataque de este tipo es la u\u0300nica forma de vencerlo. Para terminar el nivel debes vencer a todos y cada uno de los enemigos. Lleno de determinacio\u0301n, has decidido terminar este juego de una vez por todas. # ProblemaEscribe un programa que, dada la descripcio\u0301n de los tipos de ataque que pueden realizar los personajes de tu equipo, los puntos de energi\u0301a que tiene cada uno, la cantidad de enemigos en el siguiente nivel y las vulnerabilidades de cada uno, determine la estrategia para finalizar el nivel. Se asegura que siempre habra\u0301 una forma de finalizar el nivel.",
    "input": "un simple string. Siempre sera un ayuda pero con diverso final",
    "output": "cuantas a hay al final de cada string.",
    "note": "",
    "topics": [
      "math",
      "strings",
      "implementation"
    ],
    "id": 4308
  },
  {
    "title": "La tienda de limonada",
    "url": "https://omegaup.com/arena/problem/TiendaLimonada",
    "history": "Diana necesita urgentemente comprarse el nuevo libro de Harry Potter, puesto que ella es una gran fan. Desafortunadamente no tiene el dinero suficiente para comprarse ese libro, asi\u0301 que decidio\u0301 vender limonada para compra\u0301rselo. Al principio Diana cuenta con una cantidad D de dinero con el cual invierte en la tienda y gasta un total de T, su limonada la da a un precio P y logra que una cantidad C de personas le compren limonada. # ProblemaDiana necesita saber si se le ajusta para comprar su libro o si tendra\u0301 que vender ma\u0301s limonada.",
    "input": "Cuatro enteros D, T, P, C, L respectivamente.",
    "output": "Si diana puede comprarse un libro entonces se debera\u0301 mostrar LIBRO y si tiene que vender ma\u0301s limonada mostrar LIMONADA.",
    "note": "",
    "topics": [
      "math",
      "brute force",
      "implementation"
    ],
    "id": 4307
  },
  {
    "title": "Aritmetica Elemental",
    "url": "https://omegaup.com/arena/problem/2016-Aritmetica-Elemental",
    "history": "A los nin\u0303os se les ensen\u0303a a sumar nu\u0301meros de diversos di\u0301gitos desde la derecha haci\u0301a la izquierda, un di\u0301gito cada vez. A veces se encuentran en la situacio\u0301n de que \" llevan uno\" , donde se suma uno en la siguiente posicio\u0301n. Se trata de encontrar el nu\u0301mero de veces en que durante una suma se van a encontrar con la situacio\u0301n de \" llevar uno\" .",
    "input": "Los datos de entrada se leen del teclado en el que hay dos li\u0301neas, cada una de ellas contiene un nu\u0301mero entero positivo de menos de 10 di\u0301gitos y siempre sera\u0301n mayor a cero.",
    "output": "Los datos de salida se vera\u0301n en la pantalla que contendra\u0301 una sola li\u0301nea que contendra\u0301 el nu\u0301mero de veces en que se ha producido la situacio\u0301n de \" llevar uno\" . # Ejemplos| | input123456123456| | output2| | end",
    "note": "",
    "topics": [
      "number theory",
      "implementation",
      "constructive algorithms",
      "math"
    ],
    "id": 4299
  },
  {
    "title": "Promedio UP",
    "url": "https://omegaup.com/arena/problem/Promedio-UP",
    "history": "# PromedioEscribe un programa que dada las calificaciones de un grupo con n alumnos calcule el promedio del grupo. ! [ ] ( chavo. jpg)",
    "input": "Un nu\u0301mero n ( 1 \u2264 n \u2264 1000) , representando el nu\u0301mero de alumnos en la clase. Le siguen n li\u0301neas indicando las calificaciones de cada uno de los alumnos del grupo. Las calificaciones son nu\u0301meros reales entre 0 y 10 con un so\u0301lo decimal.",
    "output": "El promedio del grupo con una precisio\u0301n de 2 decimales.",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 4261
  },
  {
    "title": "FizzBuzz",
    "url": "https://omegaup.com/arena/problem/FizzBuzz",
    "history": "Generar nu\u0301meros enteros entre el 1 y el 1000 e imprimir el nu\u0301mero dado, pero si el nu\u0301mero es mu\u0301ltiplo de 3imprimira\u0301 la palabra \u201cFizz\u201d, en el caso que sea mu\u0301ltiplo de 5 debera\u0301 imprimir \u201cBuzz\u201d, y en caso de ser mu\u0301ltiplode ambos ( 3 y 5) imprimira\u0301 \u201cFizzBuzz\u201d",
    "input": "Ninguna",
    "output": "Por cada nu\u0301mero generado, imprimir la salida descrita en el enunciado ( uno por li\u0301nea) .",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 4244
  },
  {
    "title": "Ultimo Digito",
    "url": "https://omegaup.com/arena/problem/Ultimo-Digito",
    "history": "# U\u0301ltimo Di\u0301gitoDado un nu\u0301mero entero n, escribe un programa que imprima el u\u0301ltimo di\u0301gito de n.",
    "input": "La entrada consiste de un numero, n ( 1 \u2264 n \u2264 1000000)",
    "output": "El u\u0301ltimo di\u0301gito de n. # # Ejemplos| | input3234| | output4| | input6712| | output2| | end",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 4238
  },
  {
    "title": "Contando Dinero",
    "url": "https://omegaup.com/arena/problem/ENIGMA",
    "history": "Un luchador de la EAW ( Extreme Wrestling Action) que se hace llamar Enigma, ha estado ganando mucho dinerolos ultimos meses; y aunque es muy bueno para las matematicas, aveces se le hace dificil hacer algunas sumas, ya sea que se equivoca o lo hace muy lento. El te dara una recompensa si lo haces bien y en menos tiempo de que el lo haria. . El te dara un numero N de meses y luego Ni que es es el dinero que gano en el i- esimo mes, luego te dara unnumero M de consultas a realizar, por cada consulta te da 2 numeros l y r, y tu tendras que responderlerapidamente la suma total del dinero que gano entre el mes l y el mes r. Por ejemplo, si N = 5, y el dinero que gano en cada mes es 100 200 300 400 500 respectivamente; para la consultal = 1 y r = 5, el resultado seria 1500, y si l = 2 y r = 4 entonces la suma seria 900.",
    "input": "En la primera linea un numero N ( 1 < = N < = 10^ 5) , en la 2da linea N numeros que es la cantidad de dinero queEnigma gana en el i- esimo mes( - 10^ 9 < = Ni < = 10^ 9 ) . En la tercer linea un numero M( 1 < = M < = 10^ 5) que es el numero de consultas a realizar, luego M lineas, en cadaconsulta dos enteros L y R ( 1 < = L, R < = 10^ 5 ) .",
    "output": "Por cada consulta, imprimir un entero indicando la suma total de dinero que Enigma gana entre los meses L y R.",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 4220
  },
  {
    "title": "Simple Suma",
    "url": "https://omegaup.com/arena/problem/Simple-Suma",
    "history": "# Simple SumaEscribe un programa que reciba 2 nu\u0301meros e imprima su suma.",
    "input": "La entrada consiste de dos numeros, a y b ( - 100 \u2264 a, b \u2264 100) separados por un espacio.",
    "output": "Escribe el resultado de a + b.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 4214
  },
  {
    "title": "Maizoro",
    "url": "https://omegaup.com/arena/problem/Maizoro",
    "history": "# MaizoroLufillo esta\u0301 muy contento, pues en su cereal favorito veni\u0301a dentro una potente calculadora capaz de sumar, restar, multiplicar y dividir. ! [ ] ( maizoro. jpg) Dados dos nu\u0301meros y una instruccio\u0301n, escribe el resultado indicado.",
    "input": "La primera li\u0301nea contiene 3 nu\u0301meros, a, b y k, ( 1 \u2264 a, b \u2264 100) , ( 0 \u2264 k \u2264 3) .",
    "output": "Si k= 0 escribe a+ b. < br> Si k= 1 escribe a- b. < br> Si k= 2 escribe a* b. < br> Si k= 3 escribe a/ b. < br> # # Ejemplos| | input3 1 0| | output4| | input3 1 1| | output2| | end",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 4210
  },
  {
    "title": "CABAL CASERO",
    "url": "https://omegaup.com/arena/problem/CABAL-CASERO",
    "history": "# DescripcionLa Sen\u0303ora del Kiosco del Colegio de Convenio Evangelico Buenas Nuevas, tiene dificultades al momento de realizar una transaccion de compra y venta con los estudiantes del colegio, puesto que a la hora del recreo mucha gente se asoma al kiosco a comprar, motivo que causo que ella se equivoque al dar cambio, dando de mas o a veces discutiendo con los muchachos para no darles el cambio.",
    "input": "La entra consiste en 2 numeros de punto flotante, el primero X indica el precio de un producto, y el segundo Y indica el monto que cancela el estudiante por dicho producto",
    "output": "Una salida Indicando si falta, si hay cambio, o si esta cabal, en caso de que falte o haya cambio el programa debera determinar el monto, faltante o sobrante. La salida debe tener 2 decimales depues del punto flotante. | | input5. 503| | outputFaltan 2. 50 Bs. | | descriptionEl precio del producto es 5 Bs. y el monto que cancelo el estudiante es 3 Bs. lo que quiere decir que faltan 2. 50 Bs. | | input510| | outputHay 5. 00 Bs. de cambio| | descriptionEl precio del producto es 5 Bs. y el monto que cancelo el estudiante es 10 Bs. lo que quiere decir que hay 5. 00 Bs. de cambio. | | input55| | outputCabal Casero| | descriptionEl precio del producto es 5 Bs. y el monto que cancelo el estudiante es 5 Bs. lo que quiere decir esta Cabal. | | end",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 4205
  },
  {
    "title": "Chavos y Reyes 2: La amenaza de los Robots Moduladores",
    "url": "https://omegaup.com/arena/problem/Chavos-y-Reyes-2",
    "history": "En el an\u0303o SB- 129, asi\u0301 como en an\u0303os anteriores, se reunieron un grupo de chavos y reyes para conmemorar el aniversario de la batalla de chavos y reyes del 2048. Como actividad de la celebracio\u0301n, se decidieron llevar a cabo varios enfrentamiento por diversio\u0301n. Los chavos se organizan de la siguiente forma: - Hay 2 tipos de chavos. Los chavos \" Shabos\" y los chavos \" Omega\" . - Los Shabos esta\u0301n numerados del 1 al N. - Los Omega esta\u0301n numerados del 1 al \u03a9. - Cada Shabo cuenta con una carta con un valor. Para el i- esimo Shabo, el valor de su carta sera\u0301 i. - Se indicara\u0301n \u03a9 rangos. El i- esimo rango inicia en una posicio\u0301n L_ i y termina en una posicio\u0301n D_ i. Despue\u0301s todos los shabos que su nu\u0301mero este\u0301 en el rango [ L_ i, D_ i] juntara\u0301n sus cartas y formara\u0301n una carta ma\u0301s grande ( carta omega) . Su valor sera\u0301 igual a la suma de los valores de las cartas que la formaron. - Despue\u0301s de formar la carta omega, las cartas usadas regresan a su duen\u0303o. - La carta omega formada por el i- esimo rango sera\u0301 ocupada por el i- esimo chavo Omega. Mientras tanto, los reyes se organizan asi\u0301 : - Solo hay un tipo de reyes. - Los reyes esta\u0301n numerados del 1 al K. - El i- esimo rey tendra\u0301n una carta con un valor V_ i. Para este evento, cada uno de los Omega se tendra\u0301 que enfrentar a cada uno de los reyes dando un total de \u03a9* K enfrentamientos. Los enfrentamientos los hacen con la carta que portan. El ganador es el que tenga la carta con mayor valor. Si ambos valores son iguales hay un empate. Por desgracia los reyes sabi\u0301an que podri\u0301an estar en desventaja y llevaron a sus \" Robots Moduladores\" . Estos Robots se encargaron de tomar las cartas omegas y asignarles un nuevo valor. Este valor es su valor original pero mo\u0301dulo 10^ 1^ 8+ 9. ( Si te dio\u0301 picazo\u0301n al ver este nu\u0301mero, tranquilo, es primo) . Y ahora si\u0301, una vez que los Robots Moduladores cumplieron con su trabajo, empiezan los enfrentamientos. # ProblemaComo tu eres parte de la administracio\u0301n del evento tienes que realizar un reporte con las veces que ganaron los chavos, los reyes y los empates sabiendo la cantidad de Shabos, Omegas, Reyes, los rangos y los valores de las cartas de los reyes.",
    "input": "En la primera li\u0301nea tendra\u0301s N, \u03a9 y K. Las siguientes \u03a9 li\u0301neas tendra\u0301n 2 nu\u0301meros indicando los rangos para formar las cartas omega. Para la i- esima de esta tendra\u0301n los valores L_ i y D_ i. Las ultimas K li\u0301neas tendra\u0301n los valores de las cartas de los reyes. La i- esima de esta\u0301s tendra\u0301 el valor V_ i.",
    "output": "La salida tiene que seguir este formato: Chavos : ) x XTablas : | x YReyes : ( x ZDonde X son las veces que gano\u0301 un chavo Omega un enfrentamiento, Y las veces que un enfrentamiento termino\u0301 en empate y Z la veces que un rey gano\u0301 un enfrentamiento.",
    "note": "",
    "topics": [
      "binary search",
      "math"
    ],
    "id": 4201
  },
  {
    "title": "Multiplicar Por Dos",
    "url": "https://omegaup.com/arena/problem/Multiplicar-Por-Dos",
    "history": "Dados dos nu\u0301meros enteros A y B, determina si es posible hacerlos iguales aplicando cualquier cantidad de las operaciones que se muestran a continuacio\u0301n: 1. Multiplicar el nu\u0301mero A por 2. 2. Multiplicar el nu\u0301mero B por 2.",
    "input": "Dos nu\u0301meros enteros A y B.",
    "output": "Si es posible hacer iguales A y B imprime \u0093felizmil\u0094, si no, imprime \u0093tristemil\u0094.",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 4153
  },
  {
    "title": "Tri\u00e1ngulo de Pascal (Niveles)",
    "url": "https://omegaup.com/arena/problem/Triangulo-de-Pascal-Niveles",
    "history": "El tria\u0301ngulo de Pascal es una representacio\u0301n de los coeficientes binomiales ordenados en forma triangular. Es llamado asi\u0301 en honor al matema\u0301tico france\u0301s Blaise Pascal, quien introdujo esta notacio\u0301n en 1654, en su Traite\u0301 du triangle arithme\u0301tique. Si bien las propiedades y aplicaciones del tria\u0301ngulo fueron conocidas con anterioridad al tratado de Pascal por matema\u0301ticos indios, chinos o persas, fue Pascal quien desarrollo\u0301 muchas de sus aplicaciones y el primero en organizar la informacio\u0301n de manera conjunta. ! [ Triangulo] ( triangulo. png) Para este problema debes calcular la suma de todos los triangulos de pascal iniciando en el nivel M al nivel N.",
    "input": "* En la primera li\u0301nea un nu\u0301mero T que es el nu\u0301mero de casos que tendra\u0301s. * En las siguientes T li\u0301neas dos nu\u0301meros M y N que sera\u0301n los intervalos de la suma.",
    "output": "Para cada caso de prueba debera\u0301s imprimir la suma de los niveles dados.",
    "note": "",
    "topics": [
      "dp",
      "implementation",
      "math"
    ],
    "id": 4130
  },
  {
    "title": "El Bryan",
    "url": "https://omegaup.com/arena/problem/El-Bryan",
    "history": "Ha llegado el final de semestre y todos los alumnos de la ESCOM se esta\u0301ndescontrolando, tanto que han dejado de comprar gomitas y nuestro compan\u0303ero bryanesta\u0301 muy deprimido. E\u0301l piensa que la forma en la que organiza la gran variedad de dulces que vende no es lodemasiado atractiva y ha hecho que sus ventas disminuyan, pues hace dos semanas alecharle un vistazo a sus ganancias noto\u0301 que han bajado un 30",
    "input": "Un entero N ( nu\u0301mero de gomitas) .",
    "output": "La cantidad de formas diferentes en que bryan puede acomodar sus gomitas.",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 4093
  },
  {
    "title": "El Intervalo y el divisor",
    "url": "https://omegaup.com/arena/problem/Multiplos-en-el-intervalo",
    "history": "Teniendo un intervalo de A y B, calcule cuantos nu\u0301meros son divisibles por el nu\u0301mero N.",
    "input": "Un nu\u0301mero entero N, que representa el valor del divisor y dos nu\u0301meros, A y B que representan el valor inicial y el final del intervalo respectivamente.",
    "output": "Un solo nu\u0301mero que representa la cantidad de nu\u0301meros cuyo divisor es N",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 4085
  },
  {
    "title": "Bad Luck Chimpa",
    "url": "https://omegaup.com/arena/problem/Bad-Luck-Chimpa",
    "history": "El Guerrero Chimpa Definitivo ( tambie\u0301n conocido como GCD) , viajero del tiempo del an\u0303o 207\u0303012, ha llegado a nuestros di\u0301as para realizar la misio\u0301n ma\u0301s difi\u0301cil de toda la historia: evaluar el resultado de la partida de Worms de esta noche ( el equipo de desarrollo de Team 17 arruino\u0301 los me\u0301todos de revisio\u0301n de colisiones de todas las armas del juego) y asi\u0301 arreglar el futuro y el destino de la raza humana. El juego de Worms ( desarrollado por Team 17) es un juego de estrategia por turnos que se juega entre dos o ma\u0301s jugadores quienes tienen 4 gusanos al inicio del juego; el objetivo del juego es eliminar a todos los gusanos de los otros jugadores ataca\u0301ndolos con las armas que tienes a tu disposicio\u0301n. La forma en el que las armas del juego dan\u0303an a los gusanos se basa en explosiones de forma circular, cada tipo de arma tiene un radio de explosio\u0301n definido, mientras ma\u0301s cerca este\u0301 del gusano ma\u0301s dan\u0303o realizara\u0301, aunque si no esta\u0301 lo suficientemente cerca no le hara\u0301 dan\u0303o. Cabe recalcar que cualquier gusano dentro del radio de explosio\u0301n de un arma sera\u0301 dan\u0303ado aunque sea del jugador atacante. La partida de esta noche es especial pues solamente hay dos jugadores ( Chimpa y Medina) que cuentan con un gusano cada uno con 1 punto de vida por lo que cualquier explosio\u0301n que los toque los matari\u0301a. Y si no era suficiente, Chimpa tiene ventaja pues Medina, despue\u0301s de aceptar la partida pero antes de hacer algu\u0301n movimiento, tuvo que ir a conseguir botanas antes de que la tienda cerrara por lo que Chimpa hizo todos sus movimientos seguidos antes de que Medina regresara ( Medina no hizo ningu\u0301n movimiento) . Finalmente, el juego puede acabar porque Chimpa elimine a su propio gusano ( o elimine al de Medina y al suyo con la misma explosio\u0301n) o se acaben los movimientos de la bita\u0301cora. GCD posee la bita\u0301cora de los movimientos que se realizaron en la partida; la bita\u0301cora contiene la informacio\u0301n de las n armas que se permite utilizar en la partida y los m turnos que duro\u0301 la partida ( antes de acabar por tiempo) . Adema\u0301s, cuenta con las posiciones del gusano de Chimpa ( denotado como x_ C, y_ C) y del gusano de Medina ( denotado como x_ M, y_ M) , las descripciones de las armas que se utilizaron que se definen con un caracter en mayu\u0301scula identificador para cada arma c_ i y un radio de la explosio\u0301n r_ i. Finalmente, la bita\u0301cora contiene la informacio\u0301n de cada movimiento hecho por Chimpa el cual cuenta con el caracter identificador del arma que se utilizo\u0301 y la posicio\u0301n del centro de la explosio\u0301n del arma ( x_ j, y_ j) . Ahora que GCD sabe co\u0301mo interpretar la bita\u0301cora de movimientos, necesita que le ayudes a hacer un programa que lea esta bita\u0301cora y le genere el resultado de la partida; pero eso no es todo, GCD tambie\u0301n es muy orgulloso por lo que si los ataques de Chimpa pueden eliminar al gusano de Medina mu\u0301ltiples veces antes de que acabe el juego entonces quiere que se genere ese resultado; la convencio\u0301n que sigue el juego es, en caso de que sea solo una vez \" Chimpa gana! \" o si son ma\u0301s de una, entonces \" Chimpa gana x x! \" donde x es el nu\u0301mero de veces. Finalmente, si Chimpa empata, es decir, nunca elimino\u0301 al gusano de Medina en los turnos anteriores y el ataque de Chimpa hizo que los gusanos de ambos jugadores fueran eliminados en el turno actual, entonces imprime \" Ethan dira: Au au, no puedo ganar, amo\" ( sin comillas) y si Chimpa pierde, es decir, nunca elimino\u0301 al gusano de Medina y el ataque de Chimpa elimino\u0301 a su propio gusano o ninguno de los ataques de Chimpa elimino\u0301 al gusano de Medina, entonces imprime \" El futuro esta condenado\" ( sin comillas) . Recuerda que todo movimiento en la bita\u0301cora despue\u0301s de que el gusano de Chimpa muera va a ser desechado y no importa para el resultado del juego.",
    "input": "La primera li\u0301nea de entrada contiene dos enteros n y m. La segunda li\u0301nea de entrada contiene cuatro enteros x_ C, y_ C, x_ M y y_ M. Cada una de las siguientes n lineas contiene la descripcio\u0301n de un arma con un caracter en mayu\u0301scula c_ i y un entero r_ i. Finalmente, cada una de las siguientes m lineas contiene el caracter identificador del arma que utilizo\u0301 Chimpa c_ j y la posicio\u0301n del centro de explosio\u0301n dada por los valores enteros x_ j y y_ j.",
    "output": "La salida so\u0301lo debe contener la frase de resultado como se explico\u0301 en el problema ( sin comillas) .",
    "note": "",
    "topics": [
      "geometry",
      "math",
      "implementation"
    ],
    "id": 4084
  },
  {
    "title": "CANICAS B\u00c1SICO",
    "url": "https://omegaup.com/arena/problem/CANICAS-BASICO-ASINUS",
    "history": "Pepechuy y Junior son dos nin\u0303os que todos los di\u0301as juegan a las canicas ya que esta\u0301n obsesionados con ser el mejor de los dos. Sin embargo, siempre que jugan tienen el mismo problema, ya que esta\u0301n cursando a penas el primer an\u0303o de primaria, por lo cual, saben perfectamente cuantos puntos obtiene cada uno al tirar, pero al terminar de jugar siempre olvidan la cantidad de puntos y no los pueden sumar para saber quien es el mejor, asi\u0301 que lo deciden lo mejor que su memoria les permite. # ProblemaAyuda a Pepechuy y a Junior a llevar el control de la puntuacio\u0301n que obtienen en cada turno, considerando que el juego esta\u0301 conformado por 5 turnos, y cada uno de ellos tira despue\u0301s del turno del otro. Mue\u0301strales al final del juego; quie\u0301n obtuvo la mayor puntuacio\u0301n, para asi\u0301 llamarse el rey de las canicas de la calle San Toribio. Los puntos a obtener en cada turno, pueden ir desde 0, si no golpearon o metieron ninguna canica, a 1, 2 o\u0301 3, dependiendo de que\u0301 movieron o metieron a la choya.",
    "input": "El puntaje que obtuvo Pepechuy en el primer turno, seguido del puntaje que obtuvo Junior tambie\u0301n en el primer turno, posteriormente los siguientes puntajes en el mismo orden hasta completar los 5 turnos de cada uno.",
    "output": "* \" 1\" si gano\u0301 Pepechuy, o bien \" 2\" si gano\u0301 Junior, en caso de empate debera\u0301 indicar \" EMPATE\" .",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 4071
  },
  {
    "title": "Tomando Caf\u00e9",
    "url": "https://omegaup.com/arena/problem/DOCENTES-SIN-DORMIR-ASINUS",
    "history": "Los docentes del ASINUS INSTITUTE tienen problemas de desempen\u0303o, ya que no esta\u0301n durmiendo lo suficiente para ensen\u0303ar de una forma o\u0301ptima. < div align= \" center\" > < img src= \" http: / / i. imgur. com/ E39cdzK. jpg\" alt= \" Palm Springs commercial photography\" > < / div> Han descubierto que el cafe\u0301 les brinda aquella energi\u0301a que no esta\u0301n obteniendo al dormir, sin embargo no siempre consumen la misma cantidad, por ello, a pesar de que el cafe\u0301 les ayuda, su nivel de desempen\u0303o varia mucho debido a la diferencia de e\u0301ste que consumen. Las horas que deben dormir para estar con el 100",
    "input": "El nu\u0301mero de horas que durmio\u0301 el docente.",
    "output": "El nu\u0301mero de tazas que requiere para tener el 100",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 4064
  },
  {
    "title": "Rango simple",
    "url": "https://omegaup.com/arena/problem/Rango-simple",
    "history": "Encontrar la cantidad de nu\u0301meros que hay en un rango. Como entrada se tendra\u0301n N nu\u0301meros y un rango. Lo u\u0301nico que debe hacer el programa es calcular la cantidad de nu\u0301meros que hay dicho rango.",
    "input": "Leer primero N, donde 1< = N< = 100. El dato N indica la cantidad de nu\u0301meros que se leera\u0301n desde el teclado. En las siguientes N lineas se encuentran los datos de entrada. Al finalizar se tienen dos nu\u0301meros enteros A y B que indican el rango. 0< = A< = B< = 1000",
    "output": "Imprima la cantidad de nu\u0301meros que existen en el rango desde A hasta B. # Ejemplos| | input101 2 3 4 5 6 7 8 9 100 2| | output2| | input53 25 100 23 2820 30| | output3| | end",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 4028
  },
  {
    "title": "A Esparcir Rumores",
    "url": "https://omegaup.com/arena/problem/Rumores",
    "history": "En una ciudad de N habitantes se esparce un rumor de modo que cada hora se duplica la cantidad de personas que se enteran del mismo. Muy bien, pues TU Quieres saber cuantas personas han iniciado este rumor y cuantas lo sabra\u0301n despue\u0301s de y horas",
    "input": "Dado un entero N y la cantidad X horas que tardara en esparcirse este rumor por toda tu ciudad calcula cuantas personas iniciaron el rumor. Seguido de esto recibira\u0301s un numero M El cual sera una pregunta sobre cuantas personas sabra\u0301n el rumor tras esas horas.",
    "output": "En la primera linea debera\u0301s imprimir cuantas personas iniciaron el rumor en la siguiente la respuesta a la pregunta sobre cuantas personas lo sabi\u0301an despue\u0301s de M Horas.",
    "note": "",
    "topics": [
      "implementation",
      "constructive algorithms",
      "math"
    ],
    "id": 4023
  },
  {
    "title": "Tabla para Pastel",
    "url": "https://omegaup.com/arena/problem/Tabla-para-pastel",
    "history": "Se acerca la fiesta de cumplean\u0303os de la pareja de Norman, pero como actualmente no tiene mucho dinero ( porque lo gasto\u0301 en los materiales para su curso de pintura) , penso\u0301 que un buen regalo seri\u0301a hacerle un pastel circular, puesto que contaba con un molde de esa figura. Despue\u0301s de tres largas horas en la cocina, termino\u0301 haciendo un pastel delicioso y decidio\u0301 montarlo sobre una tabla de madera que serviri\u0301a para transportarlo. Sin embargo, luego de buscar por toda su casa, solo pudo hallar una tabla cuadrada cuyas esquinas coincidi\u0301an exactamente con la circunferencia del pastel, tal como muestra el cuadrado blanco sobre la figura. Debido a que la tabla era muy pequen\u0303a para montar el pastel, decidio\u0301 ir a la madereri\u0301a a comprar otra. Estando ahi\u0301, el encargado le pregunto\u0301 de que a\u0301rea necesitaba la tabla, ya que dependiendo de eso era el precio que se teni\u0301a que pagar. Norman conoce el a\u0301rea de la tabla que encontro\u0301, pero no sabe como calcular el a\u0301rea de la tabla que contenga completamente al pastel y que sea de a\u0301rea mi\u0301nima, para no pagar mucho. \u00bfPodri\u0301as ayudarle a Norman a resolver este problema? < p style= \" text- align: center; \" > < img src= \" a8f8f0a5861d07445d76d706f7dcbc7a2c0187b0. jpeg\" > < / p>",
    "input": "La entrada comienza con un nu\u0301mero entero T, con 1\u2264 T\u2264 10^ 4 indicando el nu\u0301mero de casos de prueba a seguir. Posteriormente le siguen T li\u0301neas, cada una con un nu\u0301mero entero n con 1\u2264 n \u226410^ 8 que representa el a\u0301rea de la tabla cuadrada que encontro\u0301 Norman en su casa.",
    "output": "Para cada caso de prueba, imprimir una li\u0301nea con formato: * * Area a comprar: # * * , donde # es un entero que representa el a\u0301rea mi\u0301nima de la tabla que contiene al pastel.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 4014
  },
  {
    "title": "Durante la comida",
    "url": "https://omegaup.com/arena/problem/Durante-la-comida",
    "history": "Los estudiantes del ITAM suelen comer en fondas ubicadas en las calles aledan\u0303as al ITAM. A Miguel le gusta pedir sopa de letras para entretenerse buscando su nombre entre las letras; saca las letras de la sopa tantas veces como sea posible para formar su nombre, y si no logra encontrar letras suficientes para formar su nombre aunque sea una vez, Miguel se enoja y golpea furiosamente la mesa. Los amigos de Miguel quieren asegurarse de que e\u0301ste no golpee la mesa cuando vayan a comer, asi\u0301 que les gustari\u0301a saber cua\u0301ntas veces puede Miguel formar su nombre con una sopa de letras. Todas las letras son minu\u0301sculas.",
    "input": "Un string S que contiene todas letras que hay en la sopa.",
    "output": "El nu\u0301mero de veces que Miguel pudo formar su nombre con las letras de la sopa.",
    "note": "",
    "topics": [
      "strings",
      "math",
      "implementation"
    ],
    "id": 3996
  },
  {
    "title": "Calificaciones",
    "url": "https://omegaup.com/arena/problem/Calificaciones-cbtis",
    "history": "Tu programa debera\u0301 imprimir por salida esta\u0301ndar, si un alumno ha pasado una materia o no, de acuerdo a sus calificaciones de las tres unidades. Un alumno aprueba si tiene un promedio mi\u0301nimo de 6. De lo contrario reprueba. NOTA: El promedio no se redondea 5. 99, es reprobatorio.",
    "input": "Las tres calificaciones c_ 1, c_ 2 y c_ 3. Las calificaciones son cerradas y no tienen punto decimal.",
    "output": "1 en caso de que el alumno apruebe, 0 en caso de que repruebe.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 3995
  },
  {
    "title": "Multiplicaci\u00f3n B\u00e1sica",
    "url": "https://omegaup.com/arena/problem/Multiplicacion-Basica",
    "history": "Tu programa debera\u0301 imprimir por salida esta\u0301ndar, el resultado de una multiplicacio\u0301n ba\u0301sica entre dos nu\u0301meros.",
    "input": "Dos nu\u0301meros x y y",
    "output": "El resultado de multiplicar x y y",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 3994
  },
  {
    "title": "Leyendo Varios Datos Reloaded",
    "url": "https://omegaup.com/arena/problem/Leyendo-Varios-Datos-Reloaded",
    "history": "El siguiente problema consiste en leer un nu\u0301mero variable de datos.",
    "input": "Primero vas a leer un nu\u0301mero N. Despue\u0301s vas a leer N parejas de nu\u0301meros. Cada elemento de dicha pareja estara\u0301 en una li\u0301nea diferente.",
    "output": "Para cada una de las N parejas, debes escribir su respectiva suma.",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 3967
  },
  {
    "title": "Practica Ciclos ASINUS",
    "url": "https://omegaup.com/arena/problem/Practica-Ciclos-ASINUS",
    "history": "Practicando Ciclos. En este problema de pra\u0301ctica, tu programa debera\u0301 sumar N nu\u0301meros",
    "input": "En la primera linea, tu programa debera\u0301 leer la cantidad N de nu\u0301meros que debera\u0301n ser sumados. En las siguientes N lineas, tu programa leera\u0301 los nu\u0301meros a sumar.",
    "output": "El resultado de la suma.",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 3939
  },
  {
    "title": "Ejercitando La Mu\u00f1eca",
    "url": "https://omegaup.com/arena/problem/Ejercitando-La-Muneca",
    "history": "A Paloma le gusta molestar a Ricardo. Para hacer ma\u0301s sutiles sus intenciones decidio\u0301 inventar un juego. El juego consiste en los siguientes pasos: 1. Ricardo le da una cantidad inicial de piedras a Paloma. 2. Paloma cuenta las piedras y le da cachetadas dos veces la cantidad de piedras que conto\u0301 anteriormente. 3. Paloma tira una piedra a la basura. 4. Si ya no tiene piedras, acaba el juego. Si au\u0301n le quedan piedras, se regresa al paso dos. Por ejemplo, si Ricardo le da 3 piedras a Paloma, Paloma le dari\u0301a cachetadas 3 \u00d7 2 = 6 veces. Tirari\u0301a una piedra y ahora le quedari\u0301an 2. Le dari\u0301a otras 2 \u00d7 2 = 4 cachetadas y tirari\u0301a otra piedra. Ahora le quedari\u0301a una piedra, por lo que le dari\u0301a otras 1 \u00d7 2 = 2 cachetadas. Tirari\u0301a la u\u0301ltima piedra y se acabari\u0301a el juego. En total, Ricardo recibiri\u0301a 6 + 4 + 2 = 12 cachetadas de Paloma. Por alguna razo\u0301n extran\u0303a, Ricardo acepto\u0301 jugar. Tu tarea es contar el total de cachetadas que va a recibir Ricardo conociendo la cantidad de piedras iniciales.",
    "input": "Un nu\u0301mero natural N que representa la cantidad de piedras que Ricardo le da a Paloma.",
    "output": "El nu\u0301mero total de cachetadas que Paloma le da a Ricardo.",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 3930
  },
  {
    "title": "Calculando Porcentajes",
    "url": "https://omegaup.com/arena/problem/Calculando-Porcentajes",
    "history": "Debido al di\u0301a de la mujer, celebrado el 8 de marzo, se tuvo en el ITAM una semana de concientizacio\u0301n sobre la misma, durante la cual las representaciones de las carreras de ingenieri\u0301a, con el fin de motivar a mujeres cursando una carrera de este bloque, se dedicaron a buscar el co\u0301mo ha ido cambiando el porcentaje de mujeres que ingresan a alguna ingenieri\u0301a. Tras recopilar datos, notaron que actualmente un 30",
    "input": "Un nu\u0301mero P que representa la cantidad de mujeres que cursa una ingenieri\u0301a. Un nu\u0301mero M que representa la cantidad de mujeres que asiste a un evento. Un nu\u0301mero H, la cantidad de hombres que asiste a dicho evento.",
    "output": "Tu programa debera\u0301 imprimir cua\u0301nto cambio\u0301 el porcentaje.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 3928
  },
  {
    "title": "Decimal a Binario | ASINUS",
    "url": "https://omegaup.com/arena/problem/Binario-a-Decimal--ASINUS",
    "history": "Para complementar la clase de Circuitos Lo\u0301gicos el profesor pide a los alumnos que hagan un programa en el cual ingrese un nu\u0301mero N entero y como resultado imprima el binario de ese nu\u0301mero.",
    "input": "Un nu\u0301mero N entero. El nu\u0301mero debe ser 0< = N< = 500.",
    "output": "El nu\u0301mero N convertido en binario. Si N> 500 o N< 0 imprime error.",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 3919
  },
  {
    "title": "Diferencia de productos",
    "url": "https://omegaup.com/arena/problem/Diferencia-de-productos",
    "history": "Lea cuatro enteros A, B, C y D. Calcule e imprima la diferencia del producto A y B con el producto C y D, es decir, calcule ( A * B - C * D) .",
    "input": "Cuatro enteros A, B, C y D.",
    "output": "Imprima la diferencia, es decir, ( A * B - C * D) . # Ejemplos| | input5678| | output- 26| | end| | input0078| | output- 56| | end| | input56- 78| | output86| | end",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 3869
  },
  {
    "title": "Sentidos",
    "url": "https://omegaup.com/arena/problem/Sentidos",
    "history": "Omijal ha sido contratado para llevar a cabo un censo vial, en el cual debera\u0301 contar cuantas calles van en sentido Norte- Sur y cuantas en Este- Oeste y dar un informe detallado de los resultados obtenidos.",
    "input": "* En la Primer Li\u0301nea el nu\u0301mero de calles de la ciudad* En la siguiente N nu\u0301meros separados por un espacio que tendra\u0301n un 1 si la calle es sentido Norte- Sur o\u0301 2 si es Este- Oeste",
    "output": "Dos nu\u0301meros donde el Primero indique el total de calles tipo 1 y el Segundo nu\u0301mero que indique el total de calles tipo 2",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 3778
  },
  {
    "title": "Parejas de letras",
    "url": "https://omegaup.com/arena/problem/Parejas-de-letras",
    "history": "# HistoriaLa Omijal desea ofrecer un servicio de correo electr oacute; nico de alta seguridad a partir del pr oacute; ximo a ntilde; o. El algoritmo que utilizan para ocultar sus mensajes es secreto y no se ha revelado nada, a excepci oacute; n de una cosa: La cantidad de operaciones que realiza la ma\u0301quina que ejecuta el programa de criptografi\u0301a depende mucho de la cantidad de parejas de letras en la cadena que esta\u0301n en desorden. Por ejemplo, la palabra \" hola\" tiene 4 parejas en desorden: ( h, a) , ( o, l) , ( o, a) y ( l, a) , pues se cumple que las letras aparecen en orden contrario al alfab eacute; tico dentro de la palabra. La palabra \" hilo\" al ser ordenada no tiene ninguna pareja en desorden, por lo que su complejidad es de cero. # ProblemaEscribe un programa que ayude a calcular la cantidad de parejas en desorden que tiene una palabra.",
    "input": "En la primer l iacute; nea un n uacute; mero con la cantidad de letras que tiene la palabra, en la siguiente la palabra. La palabra solo contendr aacute; letras min uacute; sculas de la \" a\" a la \" z\" , a excepci oacute; n de la \" ntilde; \" .",
    "output": "Una sola l iacute; nea con el resultado. # L iacute; mites* Para un 50",
    "note": "",
    "topics": [
      "strings",
      "implementation",
      "math"
    ],
    "id": 3765
  },
  {
    "title": "Cola de cine",
    "url": "https://omegaup.com/arena/problem/Cola-de-cine",
    "history": "Debes escribir un programa que conociendo el nu\u0301mero de personas formadas en el \u0093tiempo\u0094 cero, y el nu\u0301mero de personas que llegan en el \u0093tiempo\u0094 i, calcule cual es el tiempo total que tardara\u0301 la sen\u0303orita de la taquilla en atender a todos los clientes, y cual sera\u0301 la longitud ma\u0301xima que llegara\u0301 a tener la cola.",
    "input": "Tu programa debera\u0301 leer del teclado los siguientes datos: - En la primera li\u0301nea el nu\u0301mero I que indica la cantidad de personas que se encuentran formadas inicialmente. - A continuacio\u0301n tu programa debe seguir leyendo un nu\u0301mero cada li\u0301nea que indica la cantidad de personas que llegaron a formarse en ese instante de tiempo. El nu\u0301mero de personas que pueden formarse en un instante de tiempo puede ser desde 0 hasta 10 personas. En el momento en el que tu programa reciba un \" - 1\" esto indica que ya no habra\u0301 ma\u0301s personas que se vayan a formar.",
    "output": "Tu programa debera\u0301 escribir en la pantalla los siguientes datos: En la primera li\u0301nea debera\u0301s escribir el tiempo total que tardara\u0301 la sen\u0303orita en atender a todos los clientes de la cola. Recuerda que la sen\u0303orita atiende u\u0301nicamente a 1 cliente por tiempo. En la segunda li\u0301nea tu programa debera\u0301 escribir el largo ma\u0301ximo que llego\u0301 a tener la cola al terminar un instante de tiempo.",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 3734
  },
  {
    "title": "Fila omijal",
    "url": "https://omegaup.com/arena/problem/Fila-omijal",
    "history": "Hoy que fuiste a recoger a tu hermano a la escuela, como siemrpe, llegaste mas temprano. Te diste cuenta que la maestra les esta\u0301 ensen\u0303ando a contar y sumar de una manera curiosa. Primero todos los nin\u0303os se ponen en una fila como vayan llegando, a continuacio\u0301n la maestra sigue estos pasos para cada nin\u0303o1. Toma al siguiente nin\u0303o de la fila2. Lo pone al frente de una segunda fila3. Mientras el nin\u0303o que tiene atras sea ma\u0301s pequen\u0303o en estatura, mueve al nin\u0303o hacia atra\u0301s y e\u0301ste cuenta cuantas veces lo movieron en la filaCuando todos los nin\u0303os se han puesto en la segunda fila estara\u0301n acomodados de menor a mayor estatura, ahora cada nin\u0303o dice en voz alta cuantas veces lo movieron y tendra\u0301n que sumar estos nu\u0301meros de tarea. Como eres un programador muy audaz, has decidido ayudar a tu hermano a terminar esta tarea ma\u0301s ra\u0301pido. Por eso escribira\u0301s un programa que dado el nu\u0301mero de alumnos, y la estatura de estos en el orden original que llegaron a la fila, calcule cual sera\u0301 el resultado de la suma de las veces que cada nin\u0303o fue movido para encontrar su posicio\u0301n en la segunda fila.",
    "input": "* La primera linea, un nu\u0301mero N, el nu\u0301mero de nin\u0303os que hay en la fila original* La segunda linea contiene N nu\u0301meros separados por un espacio, las estaturas de los nin\u0303os en el orden que fueron llegando.",
    "output": "Debera\u0301s imprimir un u\u0301nico nu\u0301mero entero. La suma de las veces que cada nin\u0303o fue movido para encontrar su posicio\u0301n en la segunda fila.",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 3702
  },
  {
    "title": "Cerillas",
    "url": "https://omegaup.com/arena/problem/Cerillas",
    "history": "Hay varias cerillas las cuales se quieren poner dentro de una caja, pero algunos de ellos no caben en la caja. Una cerilla cabe en la caja si se puede poner acostado en el fondo de la caja.",
    "input": "La primera li\u0301nea tiene un entero N ( 1 le; N le; 50) , la cantidad de cerillas, y dos entero A y B, las dimensiones de la caja ( 1 le; A le; 100, 1 le; B le; 100) . Cada una de las siguientes N li\u0301neas contiene un entero entre 1 y 1000 ( inclusive) , la longitud de cada cerilla.",
    "output": "Por cada cerilla, en el orden en que fueron dados en la entrada, imprime una li\u0301nea con \" DA\" si la cerilla cabe en la caja, imprime \" NE\" si no cabe. # Ejemplos| | input5 3 434567| | outputDADADANENE| | input2 12 172120| | outputNEDA| | end",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 3674
  },
  {
    "title": "La loca hora del t\u00e9",
    "url": "https://omegaup.com/arena/problem/La-loca-hora-del-te",
    "history": "La hora del te\u0301 en la casa de la Liebre es un poco extran\u0303a. La mesa tiene muchos asientos ( numerados de 1 a M) y al principio los N animales se sientan en los primeros N asientos. De repente, cuando alguno de ellos quiere una taza nueva, simplemente todos los animales se mueven al asiento que tiene el siguiente nu\u0301mero al que esta\u0301n sentados, excepto que si algu\u0301n animal estaba en el asiento M entonces e\u0301ste se mueve al asiento 1. Antes de acercarse a tomar el te\u0301, Alicia estuvo observando este proceso y se dio cuenta de que podi\u0301a adivinar do\u0301nde estaba cada animal despue\u0301s de cualquier cantidad de movimientos.",
    "input": "El taman\u0303o M de la mesa y la cantidad N de animales. Posteriormente los nombres de los N animales en el orden en el que estaban sentados al principio ( cada uno en un renglo\u0301n, con nombres de 1 a 10 letras minu\u0301sculas) . Despue\u0301s la cantidad C de operaciones que ocurrieron. Cada operacio\u0301n es de uno de dos tipos: la letra ' T' significa que todos los animales se mueven de la forma explicada antes, mientras que la letra ' P' seguida del nombre de un animal es una pregunta sobre en que\u0301 asiento esta\u0301 el animal en ese momento. Puedes suponer que 1 le; N le; M le; 1000 y que 1 le; C le; 1000.",
    "output": "Para cada pregunta, el nu\u0301mero del asiento que corresponda a la respuesta.",
    "note": "",
    "topics": [
      "strings",
      "implementation",
      "math"
    ],
    "id": 3608
  },
  {
    "title": "Coci 2010/2011 Enero PARKET",
    "url": "https://omegaup.com/arena/problem/Coci-20102011-Enero-PARKET",
    "history": "Ivica ha cambiado el piso de parket en su cuarto. Su cuarto tiene * * L* * deci\u0301metros de largoy * * W* * deci\u0301metros de ancho. Los bloques tienen forma cuadrada y cada uno tiene un deci\u0301metro cuadrado de a\u0301rea. Despue\u0301s que Ivicatuvo su piso nuevo, que consiste de bloques color * * cafe\u0301* * , e\u0301l decidio\u0301 pintar los bloques * * en el borde* * de* * rojo* * . La figura a continuacio\u0301n ilustra el escenario para el caso # 2 - los bloques exteriores son rojos, mientras los dos bloquesinteriores restantes son cafe\u0301: ! [ ] ( parket. jpg) Marica fue a visitar a Ivica. Mientras Ivica servia sus galletas, ella conto\u0301 el nu\u0301mero de bloques decada color. Cuando ella volvio\u0301 a casa, ella se acordo\u0301 de los dos nu\u0301meros y queri\u0301a calcular las dimensionesdel cuarto de Ivica. \u00a1Ayude\u0301la!",
    "input": "La primera li\u0301nea de la entrada contiene dos enteros separados por un espacio, * * R* * ( el nu\u0301mero de bloques rojos) y* * C* * ( el nu\u0301mero de bloques cafe\u0301s) . Se cumplen las siguientes restricciones: 8 \u2264 R \u2264 5 000, 1 \u2264 C \u2264 2 000 000.",
    "output": "La primera y u\u0301nica li\u0301nea de la salida debe contener las dimensiones del cuarto, * * L* * y * * W* * , respectivamente. Si los nu\u0301merosson diferenes, de\u0301 como salida primero el ma\u0301s grade. Los datos de entrada sera\u0301n tales que siempre existira\u0301 una solucio\u0301n u\u0301nica. # Calificacio\u0301nEn casos de prueba del 30",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 3540
  },
  {
    "title": "Alicia y la carrera de animales",
    "url": "https://omegaup.com/arena/problem/Alicia-y-la-carrera-de-animales",
    "history": "Despue\u0301s de que Alicia y varios animales quedaran empapados por el mar de la\u0301grimas, los animales decidieron secarse. Su me\u0301todo para secarse era un tanto inusual: hari\u0301an una carrera sobre una pista circular improvisada. Ya que la carrera terminari\u0301a hasta que los animales se secaran, no habi\u0301a li\u0301mite en el nu\u0301mero de vueltas. Entre los animales se encontraban un rato\u0301n y un pato, de los cuales el rato\u0301n seguramente seri\u0301a el ma\u0301s ra\u0301pido. So\u0301lo por curiosidad, Alicia se preguntaba cua\u0301ntos segundos le tomari\u0301a al rato\u0301n alcanzar al pato saca\u0301ndole una vuelta de ventaja. Ayuda a Alicia a responder su pregunta.",
    "input": "Dos enteros R, P que son el nu\u0301mero de segundos que les toma al rato\u0301n y al pato dar una vuelta completa respectivamente. Puedes suponer que 1 le; R lt; P le; 100.",
    "output": "Un real que es el tiempo en segundos que necesita el rato\u0301n para alcanzar al pato saca\u0301ndole una vuelta de ventaja. Tu respuesta se considerara\u0301 correcta si es razonablemente cercana al valor exacto.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 3504
  },
  {
    "title": "DFD-Dia de la Karelaria",
    "url": "https://omegaup.com/arena/problem/DFD-Dia-de-la-Karelaria",
    "history": "El pro\u0301ximo 6 de enero N robots de Karelapan partira\u0301n una roska, de modo que todos tomen pedazos de taman\u0303os diferentes. Como karel saldra\u0301 de vacaciones, ya ha preparado la roska, desafortunadamente, olvido\u0301 poner los mun\u0303ecos y no podra\u0301n saber quienes hara\u0301n la fiesta del dia de la Karelaria el 2 de febrero. Despue\u0301s de mucho pensar, se ha acordado que se escogera\u0301 un nu\u0301mero K y que todos los que tomen pedazos de taman\u0303o mayores o iguales a K organizara\u0301n la fiesta de la Karelaria. # Problema# Dados los enteros N, K, y los taman\u0303os de los pedazos que cada robot tomo\u0301, calcula cuantos de ellos tendra\u0301n que organizar la fiesta de la Karelaria.",
    "input": "En la primera li\u0301nea el entero N que denota cuantos robots partieron roska. En la segunda li\u0301nea el entero K. En las siguientes N li\u0301neas los taman\u0303os de los pedazos de roska que cada robot tomo\u0301.",
    "output": "Un entero que denota cuantos robots tendra\u0301n que organizar la fiesta de la karelaria. # Ejemplos# | | input7619826103| | output4| | descriptionLa salida es 4 porque solo 4 robots partieron pedazos mayores o igual a K= 6| | end",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 3466
  },
  {
    "title": "DFD-Diferencia Horaria",
    "url": "https://omegaup.com/arena/problem/DFD-Diferencia-Horaria",
    "history": "Kareli\u0301n esta\u0301 planeando sus pro\u0301ximas vacaciones y piensa visitar muchas ciudades, para poder planificar optimamente su estancia en cada ciudad, requiere una aplicacio\u0301n que le diga cuanto tiempo de diferencia hay entre el horario de dos ciudades. # Problema# Dada la hora en dos ciudades ( ciudad origen y ciudad destino) desarrolla un DFD que calcule e imprima la diferencia horaria entre las dos ciudades. # Consideraciones# - Los horarios estara\u0301n expresados en formato militar ( de 0 a 23 horas)",
    "input": "En las dos primeras li\u0301neas los enteros A, B que denotan la hora y minutos en la ciudad origen. En las u\u0301ltimas dos li\u0301neas los enteros C, D que denotan la hora y minutos en la ciudad destino.",
    "output": "En la primera li\u0301nea las horas de diferencia que hay entre las dos ciudades, en la segunda li\u0301nea los minutos de la diferencia. < strong> NOTA IMPORTANTE: PARA EL 70",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 3465
  },
  {
    "title": "DFD-ULAM",
    "url": "https://omegaup.com/arena/problem/DFD-ULAM",
    "history": "La siguiente se llama conjetura de ULAM en honor del matematico S. Ulam- Comience con cualquier entero positivo N. - Si es par, divi\u0301dalo entre 2; si es impar, multipli\u0301quelo por 3 y agre\u0301guele 1. - Obtenga enteros sucesivamente repitiendo el proceso- Al final, obtendra el nu\u0301mero 1, independientemente del entero inicial, Por ejemplo, cuando el entero inicial es 26, la secuencia sera\u0301: 26, 13, 40, 20, 10, 5, 16, 8, 4, 2, 1. Desarrolla un DFD que lea el entero positivo N e imprima la serie ULAM correspondiente.",
    "input": "Una li\u0301nea con el entero N.",
    "output": "Los nu\u0301meros de la serie ULAM, cada uno en una li\u0301nea. # Ejemplos# | | input26| | output26134020105168421| | description| | end",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 3454
  },
  {
    "title": "DFD-Conjunto Balanceado",
    "url": "https://omegaup.com/arena/problem/DFD-Conjunto-Balanceado",
    "history": "Se dice que un conjunto de N enteros esta\u0301 balanceado cuando la suma de sus elementos positivos es igual al absoluto de la suma de sus elementos negativos. Si la suma de los positivos es mayor a la suma absoluta de los negativos, entonces es un conjunto positivo y en caso contrario se trata de un conjunto negativo. Desarrolla un DFD que lea N nu\u0301meros enteros y determine si el conjunto es BALANCEADO, POSITIVO o NEGATIVO.",
    "input": "En la primera li\u0301nea el entero N. En cada una de las siguentes li\u0301neas, un nu\u0301mero del conjunto. Una li\u0301nea con el valor real correspondiente a la calificacio\u0301n.",
    "output": "POSITIVO| | descriptionEs un conjunto positivo porque la suma de sus elementos positivos ( 40+ 9+ 2= 51) , es mas grande que la suma absoluta de sus elementos negativos ( - 11- 2= - 13) . 51 es mayor que 13. | | end",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 3360
  },
  {
    "title": "DFD-Torneo de Soccer",
    "url": "https://omegaup.com/arena/problem/DFD-Tordeo-de-Soccer",
    "history": "La liga Kareliana requiere organizo\u0301 un torneo de soccer donde participaron N equipos. Dadas las diferencias de goleo de cada equipo, se requiere saber la suma de las diferencias, cuantos equipos tienen diferencia a favor y cuantos diferencia en contra. # Problema# Desarrolla un DFD que lea N valores correspondientes a las diferencias de goleo de cada equipo e imprima la sumatoria, cuantos equipos tienen diferencia cero o a favor ( positiva) y cuantos equipos tienen diferencia en contra ( negativa) .",
    "input": "En la primera li\u0301nea el entero N. En cada una de las siguientes N li\u0301neas, un valor entero que corresponde a la diferencia de goleo de un equipo.",
    "output": "742| | descriptionLa sumatoria de los 6 valores es 7, 4 equipos tienen diferencia positiva y 2 equipos negativa. | | end",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 3354
  },
  {
    "title": "DFD-Contando Estaturas",
    "url": "https://omegaup.com/arena/problem/DFD-Contando-Estaturas",
    "history": "Desarrolla un DFD que lea la estatura de N personas e imprima cuantas miden ma\u0301s de 1. 70.",
    "input": "En la primera li\u0301nea el enetero N. En cada una de las siguientes N li\u0301neas, una estatura.",
    "output": "Un valor entero correpondiente al nu\u0301mero de personas que miden ma\u0301s de 1. 70. # Ejemplos# | | input51. 681. 801. 851. 591. 66| | output2| | description| | end",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 3297
  },
  {
    "title": "DFD-\u00c1rea de un c\u00edrculo",
    "url": "https://omegaup.com/arena/problem/DFD-Area-de-un-circulo",
    "history": "Desarrolla un DFD que lea el valor del radio de un ci\u0301rculo y calcule su a\u0301rea y circunferencia.",
    "input": "En la primera li\u0301nea el valor correspondiente al radio del ci\u0301rculo.",
    "output": "En la primera li\u0301nea el valor del area. En la segunda li\u0301nea el valor de la circunferencia.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 3294
  },
  {
    "title": "Suma Columnas",
    "url": "https://omegaup.com/arena/problem/Suma-Columnas",
    "history": "# Suma ColumnasDada una matriz A de n renglones y m columnas, escribe un programa que calcule la suma de cada una de las columnas de la matriz.",
    "input": "La primera li\u0301nea contiene dos nu\u0301meros n y m, ( 1 \u2264 n, m \u2264 50) , indicando el nu\u0301mero de renglones y de columnas respectivamente. Siguen n li\u0301neas, cada una con m nu\u0301meros enteros separados por un espacio que componen la matriz A. Cada elemento de la matriz esta\u0301 dentro del intervalo [ - 100, 100] .",
    "output": "La salida consiste en m nu\u0301meros, cada uno en una li\u0301nea diferente, indicando la suma de cada una de las columnas.",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 3185
  },
  {
    "title": "occ15nsf21",
    "url": "https://omegaup.com/arena/problem/funcion_convergente",
    "history": "# f( n) Considere una funcio\u0301n f( n) definida asi\u0301: - f( n) = n/ 2 si n es par. - f( n) = 3n+ 1 si n es impar. Cuando se aplica repetidamente esta funcion a un nu\u0301mero siempre se llega a 1. Por ejemplo si se comienza con 5, se tiene- f( 5) = 16- f( 16) = 8- f( 8) = 4- f( 4) = 2- f( 2) = 1En este caso se aplica la funcio\u0301n 5 veces para llegar a 1. Haga un programa que dado un numero n diga cua\u0301ntas veces hay que aplicar f para llegar a 1.",
    "input": "Un entero n positivo",
    "output": "El nu\u0301mero de veces que hay que aplicar f para llegar a 1.",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 3172
  },
  {
    "title": "Invierte n\u00famero",
    "url": "https://omegaup.com/arena/problem/Invierte-nuemro",
    "history": "Desarrollar un programa que invierta un nu\u0301mero de ma\u0301ximo 9 cifras.",
    "input": "* Un nu\u0301mero de ma\u0301ximo 9 cifras.",
    "output": "* Un nu\u0301mero de ma\u0301ximo 9 cifras invertido con respecto a la entrada# Ejemplo 1| | input123456789| | output987654321| | end# Li\u0301mites* Valores enteros positivos",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 3167
  },
  {
    "title": "Fibonacci Facil",
    "url": "https://omegaup.com/arena/problem/Fibonacci-Facil",
    "history": "# Fibonacci 1La serie Fibonacci es una de las series ma\u0301s famosas, y tiene diversas aplicaciones en la computacio\u0301n. Incluso le sirvio\u0301 a Robert Langdon para obtener la Fleur- de- lis en el co\u0301digo da Vinci, y asi\u0301 descubrir el tesoro del Priorato de Sion. La secuencia se construye de la siguiente manera. Los primeros dos elementos de la secuencia son f( 0) = 1 y f( 1) = 1. Los siguientes elementos se calculan mediante la suma de los dos elementos previos, por lo que: f( n) = f( n- 1) + f( n- 2) Escribe un programa que dado un nu\u0301mero k, devuelva el nu\u0301mero fibonacci f( k) .",
    "input": "Un so\u0301lo nu\u0301mero k ( 1 \u2264 k \u2264 20)",
    "output": "Un so\u0301lo nu\u0301mero indicando f( k) # # Ejemplos| | input0| | output1| | input1| | output1| | input2| | output2| | end",
    "note": "",
    "topics": [
      "math",
      "number theory",
      "implementation"
    ],
    "id": 3152
  },
  {
    "title": "occ04pnsf25",
    "url": "https://omegaup.com/arena/problem/Suma-de-numeros-consecutivos",
    "history": "# Suma de nu\u0301merosHay que encontrar la suma de los nu\u0301meros entre dos nu\u0301meros enteros n y m dados ( n < = m)",
    "input": "n y m",
    "output": "n + n + 1 + n + 2 + . . . . + m",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 3078
  },
  {
    "title": "Cocina Estrellada",
    "url": "https://omegaup.com/arena/problem/Cocina-Estrellada",
    "history": "En las panaderi\u0301as que visita Daniel, todos los di\u0301as se prepara un pan muy curioso: a veces tiene 5 esquinas como una estrella y a veces se prepara pan triangular, con 3 esquinas. A Daniel le gusta ma\u0301s el pan estrellado que el triangular sin importar su taman\u0303o. Adema\u0301s, si hay dos panes del mismo tipo, prefiere el que sea ma\u0301s grande. Si\u0301 la panaderi\u0301a tiene N panes, que son de algu\u0301n tipo: ' e' si es estrellado o ' t' si estriangular, y cada uno con un taman\u0303o, \u00bfque\u0301 pan le sugeriri\u0301as a Daniel que compre?",
    "input": "En la primera li\u0301nea, N, el nu\u0301mero de panes que tiene la panaderi\u0301a. En las siguientes N li\u0301neas, una \u2018e\u2019 o una \u2018t\u2019 seguida de un entero, representando el tipo de pan ( estrellado o triangular) y taman\u0303o de cada uno de los panes, respectivamente.",
    "output": "El tipo y taman\u0303o del pan que le recomendari\u0301as a Daniel.",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 3057
  },
  {
    "title": "Bolitas de Queso",
    "url": "https://omegaup.com/arena/problem/Bolitas-de-Queso",
    "history": "Gauss, Frodo, Corta\u0301zar y Aristo\u0301teles se reunieron para platicar sobre el mejor lenguaje de programacio\u0301n. Todos llegaron con hambre a su reunio\u0301n, por lo que cuando les sirvieron la botana ( bolitas de queso) , cada uno agarro\u0301 una cantidad al instante. A Gauss no le toco\u0301 ninguna bolita de queso. Se sabe que Corta\u0301zar tomo\u0301 el triple de bolitas que Frodo y tambie\u0301n que Aristo\u0301teles agarro\u0301 2 bolitas ma\u0301s que Corta\u0301zar. Si sabes cua\u0301ntas bolitas agarro\u0301 Frodo, \u00bfpuedes saber cua\u0301ntas agarro\u0301 Aristo\u0301teles?",
    "input": "Un entero positivo que representa la cantidad bolitas que agarro\u0301 Frodo.",
    "output": "Un entero que representa la cantidad de bolitas que agarro\u0301 Aristo\u0301teles.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 3056
  },
  {
    "title": "Alcoholic Pilots",
    "url": "https://omegaup.com/arena/problem/Alcoholic-Pilots",
    "history": "In one of his many trips, Mr. Ed boarded an airplane where the captain talked like. . . well, like he was completely drunk. \u201cI would like to greet a very special person here, which has been part of our lives for so much time. His wife says from the control tower that she loves you\u201d \u2013 the captain said. Of course, Mr. Ed was really scared, how can alcoholic pilots flight with so many people on their hands? But that was not the worst part, our friend noticed that these drunken pilots like to race between them! By getting close to the captain\u2019s cabin, Mr. Ed could hear another pilot ( drunk, as expected) discussing with the captain by radio. Both of them shared information about how fast they were travelling and how far they were to the nearest airport. \u201cIf I arrive earlier to the airport, you will owe me a beer\u201d \u2013 the captain bragged, then the airplane started to move abruptly. Of course Mr. Ed survived, if not, he could not tell us this story. But weirdly, you are wondering who won the race between the pilots and their average arrival time, so you asked the velocity and distance to the airport of both planes. Assume that the planes maintained their velocity even when landing.",
    "input": "The input will contain several test cases. The only line of each test case contains 4 space- separated integers v_ 1, d_ 1, v_ 2 and d_ 2 ( 1 \u2264 v_ 1, d_ 1, v_ 2, d_ 2 \u2264 10^ 9) : the velocity and distance to the airport of the plane Mr. Ed and the captain were and the velocity and distance to the airport of the plane the captain was competing with. Velocities are expressed in miles per hour and distances in miles. The last test case is followed by a single line containing 4 zeroes.",
    "output": "Print 2 lines for each test case. In the first one, you should print \u201c\" You owe me a beer! \" \u201c if the captain won the race or \u201c\" No beer for the captain. \" \u201c if the other airplane won the race. You can safely assume there will be no draws in any test case. In the second line, print \u201c\" Avg. arrival time: \" \u201c followed by the average arrival time ( in hours) of both airplanes expressed as a simplified fraction of the form x \u2044 y, being x and y integers. If the fraction has an integer result, print the result of the division. See format below for more details. # Example| | input2 4 1 31 3 2 44 7 4 90 0 0 0| | outputCase # 1: You owe me a beer! Avg. arrival time: 5/ 2Case # 2: No beer for the captain. Avg. arrival time: 5/ 2Case # 3: You owe me a beer! Avg. arrival time: 2| | end",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 3017
  },
  {
    "title": "Suma Nones 1",
    "url": "https://omegaup.com/arena/problem/Suma-Nones-1",
    "history": "# Suma Nones 1Dado un nu\u0301mero n, la UP ( Unidad de Paridad) te pide que escribas un programa que calcule la suma de todos los nu\u0301meros impares en el intervalo [ 1, n]",
    "input": "Un nu\u0301mero n ( 1 \u2264 n \u2264 1000)",
    "output": "La suma de los nu\u0301meros impares dentro del intervalo [ 1, n] Ejemplo de Entrada 1 | Ejemplo de Salida 1\u2014\u2014\u2014\u2014- | \u2014\u2014\u2014\u2014\u2014- 1 | 1Ejemplo de Entrada 2 | Ejemplo de Salida 2\u2014\u2014\u2014\u2014- | \u2014\u2014\u2014\u2014\u2014- 4 | 4",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 3002
  },
  {
    "title": "Alex, la barba, y las pizzas",
    "url": "https://omegaup.com/arena/problem/Alex-la-barba-y-las-pizzas",
    "history": "Tu\u0301 amigo Alex, mejor conocido como el sen\u0303or de las barbas, ha perdido una apuesta ante su amo Carlos. La apuesta deci\u0301a que si el sen\u0303or de las Barbas no sacaba 10 en programacio\u0301n, el sen\u0303or de las Barbas le dari\u0301a dinero a Carlos durante N di\u0301as, donde por cada uno de esos N di\u0301as, Carlos comprari\u0301a K pizzas, si el sen\u0303or de las Barbas sacaba 10, Carlos dejari\u0301a de hurtar su iPad, pero la suerte estaba con Carlos, asi\u0301 que Alex saco 9. 99, lo que hizo que Carlos ganara. # ProblemaDado un nu\u0301mero N que denota los di\u0301as que Alex el sen\u0303or de las Barbas debe dar dinero para pizzas, y seguido de ese, un nu\u0301mero X que denota el precio de la pizza, tu trabajo es decir el dinero total que gastara\u0301 Alex el sen\u0303or de las Barbas para satisfacer su deuda.",
    "input": "Un nu\u0301mero N y un nu\u0301mero X, seguido de N nu\u0301meros enteros K, donde cada uno denota el nu\u0301mero de pizzas que el sen\u0303or Alex debe pagar por di\u0301a.",
    "output": "La cantidad de dinero total que Alex el sen\u0303or de las Barbas le debe de dar a Carlos. | | input5 1892 3 1 5 6| | output3213| | end# NotaEs importante que des el nu\u0301mero exacto de dinero que Alex el sen\u0303or de las Barbas le debe dar a Carlos, porque si le das ma\u0301s dinero, Diego se lo robara\u0301 y se comprara\u0301 Hielitos hasta agotarse el dinero, y si te falta, Diego agarrara la cartuchera de Carlos, y la abrira\u0301 y cerrara un nu\u0301mero equitativo a la cantidad de dinero que te hizo falta tomar en cuenta, pero si lo dices exacto, adema\u0301s de que Diego se quedara\u0301 en paz, pepollo sera\u0301 inmune a Tu\u0301 Gfa.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 2993
  },
  {
    "title": "PostesDF",
    "url": "https://omegaup.com/arena/problem/PostesDF",
    "history": "Cierta empresa de renta lonas para eventos sociales ( fiestas, reuniones, etc. ) . Requieren elegir \u201ck\u201d postes de los \u201cn\u201d postes que poseen de diversos taman\u0303os, mismos que sera\u0301n usados para colocar la lona. Es necesario que la distancia entre el poste de menor taman\u0303o y el poste de mayor taman\u0303o sea la mi\u0301nima para que la lona quede balanceada y luzca una apariencia agradable. # ProblemaDebes construir un programa que determine cua\u0301l es la diferencia mi\u0301nima ( entre el poste mayor y de menor taman\u0303o) de los \u201ck\u201d postes que sea posible encontrar de entre todos los postes que posee la empresa y que servira\u0301n para fijar la lona.",
    "input": "Tu programa debera\u0301 leer del teclado los siguientes datos. El primer renglo\u0301n va el nu\u0301mero 1< = k < = 10, 000 de postes que se requieren para el evento. En el segundo renglones va el nu\u0301mero k< = n < = 100, 000 de postes que tiene la empresaEn el tercer renglo\u0301n van el taman\u0303o de cada poste separado por un espacio el taman\u0303o de cada poste esta\u0301 entre 1 < = t < = 1, 000, 000.",
    "output": "La salida consistira\u0301 en un solo renglo\u0301n indicando la diferencia mi\u0301nima posible de la combinacio\u0301n de \u201ck\u201d postes que posee la empresa. # Ejemplos| | input310100 20 40 33 65 200 77 178 135 47| | output14| | end# Consideraciones\u2022 En la cinta habra\u0301 entre 3 y 1, 000, 000 de programas ( es una cinta muy larga) . \u2022 Todas las duraciones sera\u0301n nu\u0301meros enteros.",
    "note": "",
    "topics": [
      "sortings",
      "math",
      "implementation"
    ],
    "id": 2989
  },
  {
    "title": "Naranjas y Limas",
    "url": "https://omegaup.com/arena/problem/Naranjas-y-Limas",
    "history": "Despue\u0301s de un primer di\u0301a agotador, en que Karel y tu tuvieron que vencer muchos retos, para relajarse se pusieron a recordar las ya muy pasada fiestas naviden\u0303as y los cantos tradicionales, entre ellos uno muy conocido que dice \u201cNaranjas y Limas, limas y limones, mas Linda es la Virgen que todas las flores, . . . . \u201d, y mientras platicaban sobre estos bellos recuerdos en que Karel y tu cantaban la rama, se presento en la juguera un nuevo reto: de nuevo la empresa IsaccKarelov, S. A. ha urdido un nuevo plan para hacer fracasar a COVIJugos, A. C. , y logro\u0301 infiltrar un agente secreto que en tus bodegas que ha logrado mezclar costales de limas de dudosa calidad, con tus costales de naranjas, para que cuando las vendas tus clientes queden decepcionados. \u00bfQue\u0301 hacer? . Ahora es necesario distinguir cuales costales son de naranjas y cuales son limas infiltradas. Afortunadamente, tu siempre has sido cuidadoso y todos tus costales de naranjas, los has llenado con un nu\u0301mero par de naranjas y el agente inflitrado, ha llenado sus costales con un nu\u0301mero impar de limas, esta es la clave para detectarlos. # ProblemaEscribe un programa que ayude a identificar cuantos costales son de naranjas y cuantos de limas infiltradas. Los costales estara\u0301n dados por una serie de nu\u0301meros enteros E, entre 1 < = N < = 1000, donde N es el nu\u0301mero de frutas ( naranjas o\u0301 limas en el costal) . La cantidad ma\u0301xima de costales en la bodega no sera\u0301 mayor a 1, 000, 000.",
    "input": "Tu programa debera\u0301 leer del teclado los siguientes datos, la primera li\u0301nea contendra\u0301 un numero M entre 1 y 1, 000 que indica el numero de costales a leer. Cada una de las siguientes N li\u0301neas contiene un entero E, denotando la cantidad de frutas ( naranjas o\u0301 limas) en ese costal. Recuerda que los costales con un nu\u0301mero par de frutas son de las famosas naranjas y los de nu\u0301mero impar son de limas.",
    "output": "Tu programa debera\u0301 escribir en la pantalla, dos nu\u0301meros enteros X y Y do\u0301nde X, es el nu\u0301mero de costales con naranjas y Y, es el nu\u0301mero de costales con limas separados por un espacio en blanco en el mismo renglo\u0301n.",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 2987
  },
  {
    "title": "Reparte",
    "url": "https://omegaup.com/arena/problem/Reparte",
    "history": "Cierto orfanatorio recibe una cantidad de \" N\" de boslas de dulces, cada bolsa contiene una cierta cantidad de dulces y raramente dos bolsas llegan a tener la misma cantidad de dulces. La encargada reparte los dulces entre los nin\u0303os y para que no se peleen por lo recibido los reparte en partes iguales y los dulces que les sobra los guarda para ser entregados en la sigueinte recepcio\u0301n de dulces. el orfanatorio tiene \" P\" nin\u0303os. # ProblemaEscribe un programa que ayude a la encargada a calcular la cantidad de dulces a entregar a cada nin\u0303o asi como los dulces sobrantes.",
    "input": "En la primera li\u0301nea el nu\u0301meo \" P\" de nin\u0303os que viven en el orfanatorio 1< = P< = 220En la segunda linea el valo \" N\" indicando la cantidad de bolsas de dulces recibidas 1< = N < = 11En las siguientes \" N\" li\u0301neas representan la canitidad de dulces \" x\" contenidas en la bolsas el contenido de dulces de cada bolsa sera\u0301 entre cero y 100 incluyendo el 100.",
    "output": "En una solo li\u0301nea dos nu\u0301meros primero debe colocar la cantidad de dulces que se debe entregar a cada nin\u0303o y posteriomente los dulces que sobran y que la encargada guardara\u0301 para la siguiente entrega.",
    "note": "",
    "topics": [
      "math",
      "implementation",
      "divide and conquer"
    ],
    "id": 2986
  },
  {
    "title": "Evaluar polinomios",
    "url": "https://omegaup.com/arena/problem/Evaluar-polinomios",
    "history": "Escribe un programa que, dados los valores de las inco\u0301gnitas x_ 0, x_ 1, . . . , x_ n- 1, evalu\u0301e una secuencia de polinomios. Cada polinomio es una suma de productos de variables.",
    "input": "El entero N seguido de N nu\u0301meros en punto flotante, Posteriormente una secuencia de polinomios, uno por li\u0301nea, los cuales deben procesarse hasta el fin de archivo. Puedes suponer que 1 \u2264 N \u2264 10.",
    "output": "Por cada polinomio, un real que corresponda con la evaluacio\u0301n del polinomio. El valor impreso se considerara\u0301 correcto si esta\u0301 razonablemente cerca del valor exacto.",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 2981
  },
  {
    "title": "Divisores positivos",
    "url": "https://omegaup.com/arena/problem/Divisores-positivos",
    "history": "Dado un entero N, escribe un programa que cuente cua\u0301ntos divisores positivos tiene N.",
    "input": "El entero N. Puedes suponer que 1 le; N le; 1000.",
    "output": "Un entero que sea la cuenta de divisores positivos que tiene N.",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 2968
  },
  {
    "title": "Sumando numeros",
    "url": "https://omegaup.com/arena/problem/Sumando-numeros",
    "history": "Dado un conjunto de 1< = N< = 100 nu\u0301meros enteros, determina la suma de los pares y la suma de los impares.",
    "input": "En la primera li\u0301nea el entero N. En la segunda li\u0301nea y separados por espacios, los N datos del conjunto.",
    "output": "Dos enteros separados por un espacio, el primero denota la suma de los pares y el segundo la suma de los impares. # Ejemplos# | | input75 6 2 10 1 10 8| | output36 6| | description6+ 2+ 10+ 10+ 8= 365+ 1= 6| | end",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 2877
  },
  {
    "title": "Factorizaci\u00f3n prima",
    "url": "https://omegaup.com/arena/problem/Factorizacion-prima",
    "history": "Itzcoal ( El barbas) tiene ganas de ver cua\u0301l es la factorizacio\u0301n prima de un nu\u0301mero N, por lo cua\u0301l a solicitado tu ayuda, pues le ha dado una enfermedad denominada \" nenuco eruptitos\" . # ProblemaSe te dara\u0301 como entrada un nu\u0301mero N, tu deber es encontrar sus factores primos, por cada factor, debera\u0301 estar precedido por \" x \" , a excepcio\u0301n del u\u0301ltimo factor.",
    "input": "El nu\u0301mero N.",
    "output": "Los factores primos del nu\u0301mero. Cada factor debera estar precedido por \" x \" , a excepcio\u0301n del u\u0301ltimo factor, mira el ejemplo para mayor entendimiento. | | input12| | output2 x 2 x 3| | end| | input147| | output3 x 7 x 7| | end",
    "note": "",
    "topics": [
      "math",
      "number theory",
      "implementation"
    ],
    "id": 2872
  },
  {
    "title": "Promedio de calificaciones",
    "url": "https://omegaup.com/arena/problem/Promedio-de-calificaciones",
    "history": "Escribe un programa que lea N calificaciones, imprima el promedio y cua\u0301ntas son reprobatorias ( menores a 6 reprueban) .",
    "input": "En la primera li\u0301nea el entero N. En la segunda li\u0301nea y separados por espacios, las N calificaciones.",
    "output": "7. 88 2| | description| | end",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 2867
  },
  {
    "title": "Detenci\u00f3n",
    "url": "https://omegaup.com/arena/problem/Detencion",
    "history": "Pepito quiere saber cuanto minutos pasa en detencio\u0301n. Como no es muy aplicado en matema\u0301ticas no ha podido calcularlo. Solo tiene como datos la hora exacta de entrada y salida. Ayu\u0301dale escribiendo un programa que haga el ca\u0301lculo.",
    "input": "En la primera los enteros hi, mi separados por un espacio que denotan la hora de inicio. En la segunda li\u0301nea y separados por espacios, los enteros hf, mf que denotan la hora y minuto de salida. Considera que el formato de hora es militar, es de decir, de 0 a 23.",
    "output": "Un entero que denota cuantos minutos estuvo Pepito en detencio\u0301n. # Ejemplos# | | input14 2515 24| | output59| | description| | input23 0501 03| | output118| | description| | end",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 2863
  },
  {
    "title": "Contando Estaturas",
    "url": "https://omegaup.com/arena/problem/Contando-Estaturas",
    "history": "Escribe un programa que le la estatura de N personas y determina cuantas miden ma\u0301s de 1. 70",
    "input": "En la primera li\u0301nea el entero N. En la segunda li\u0301nea y separados por espacios, los N estaturas.",
    "output": "3| | description| | end",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 2862
  },
  {
    "title": "Tesoro 2",
    "url": "https://omegaup.com/arena/problem/Tesoro-2",
    "history": "Tu misio\u0301n es encontrar el nu\u0301mero que abre el cofre del tesoro del pirata que cuenta la leyenda que cada di\u0301a se llena de monedas de oro no importando si lo abrio\u0301 alguien ma\u0301s el di\u0301a anterior lo bueno es que una vez que encontraste el cofre no es tan complicado abrirlo una vez que conoces el secreto de co\u0301mo hacerlo, el secreto radica en ver cua\u0301ntas piedras que esta\u0301n alrededor y el color de dichas piedras, por ejemplo si hay 3 piedras negras y 2 blancas, la forma de abrirlo es dar 8 golpes sobre el cofre, es decir por cada piedra negra son dos golpes y por cada piedra blanca es 1 golpe.",
    "input": "un numero n que indica el nu\u0301mero de casos, seguido por dos numeros el primero indicando el nu\u0301mero de piedras negras, y el segundo el nu\u0301mero de piedras blancas",
    "output": "El nu\u0301mero de golpes que debes dar para abrir el cofre.",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 2814
  },
  {
    "title": "La gema de la mente",
    "url": "https://omegaup.com/arena/problem/La-gema-de-la-mente",
    "history": "Ultro\u0301n uso\u0301 la gema de la mente que estaba en el cetro de loki para crear a La Visio\u0301n, sin embargo, ironman la extravio\u0301 y ahora La Visio\u0301n ha quedado inerte, para empeorar las cosas la perdio\u0301 en un dispensador de caramelos, el poder de la gema ha actuado sobre algunos caramelos y los ha convertido en copias muy parecidas a ella. Una vez ma\u0301s Jarvis ha intervenido haciendo un ana\u0301lisis de los dulces, sin embargo, no ha podido determinar cual es exactamete la gema de la mente. Su ana\u0301lisis dio\u0301 como resultado un entero K y la certeza de que todos aquellos dulces cuya densidad exceda a lo ma\u0301s 3 unidades a K o tengan a lo ma\u0301s 3 unidades menos que K, pueden ser la gema. Tu tarea consiste en determinar cuales dulces, de un conjunto de 1< = N< = 100, pueden ser la gema de la mente.",
    "input": "En la primera li\u0301nea el entero N que denota cuantos dulces hay en el conjunto. En la segunda li\u0301nea N enteros separados por un espacio que denotan la densidad de cada uno de los dulces. En la tercera li\u0301nea el entero K.",
    "output": "La lista de enteros que representan a los dulces que pueden ser la gema de la mente ( separados por un espacio)",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 2802
  },
  {
    "title": "Sumando dos conjuntos",
    "url": "https://omegaup.com/arena/problem/Sumando-dos-conjuntos",
    "history": "Dados dos conjuntos de enteros de taman\u0303o N, imprimir el resultado de sumarlos. 1< = N< = 100. Por ejemplo, sea N= 4: 2 3 4 56 7 1 3El resultado de sumarlos es: 8 10 5 8",
    "input": "En la primera li\u0301nea el entero N. En la segunda li\u0301nea, separados por un espacio, los nu\u0301meros del primer conjunto. En la tercera li\u0301nea tambie\u0301n separados por un espacio, los nu\u0301meros del segundo conjunto.",
    "output": "Los nu\u0301meros resultantes de sumar ambos conjuntos, separados por un espacio. # Ejemplos# | | input42 3 4 56 7 1 3| | output8 10 5 8| | description2+ 6, 3+ 7, 4+ 1, 5+ 3. | | end",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 2765
  },
  {
    "title": "Barrancas del Cobre",
    "url": "https://omegaup.com/arena/problem/OMI2015LENGUAJE1",
    "history": "Las barrancas del cobre son uno de los puntos de intere\u0301s turi\u0301stico ma\u0301s famosos de Chihuahua. Una agencia de viajes te ha pedido ayuda para disen\u0303ar un recorrido a trave\u0301s de ellas. El recorrido a trave\u0301s de las barrancas tiene N vistas espectaculares numeradas de 1 a N. Por supuesto, hay algunas ma\u0301s llamativas que otras. Los expertos de la agencia han calificado cada una de las N vistas de acuerdo a su espectacularidad. Los recorridos que vende la agencia llevan a los turistas a un punto de inicio y a partir de ahi\u0301 visitan las siguientes K vistas. La agencia tiene una preocupacio\u0301n. Cuando llevas un turista de una vista a la siguiente, si la segunda vista es * * ma\u0301s espectacular* * el turista se siente * * emocionado* * , sin embargo si la segunda vista es * * menos espectacular* * el turista se siente * * decepcionado* * . La emocio\u0301n y decepcio\u0301n del turista pueden medirse. Cuando el turista pasa de una vista a la siguiente, su emocio\u0301n total cambia de acuerdo a las siguientes reglas: * Si la nueva vista es * * ma\u0301s espectacular* * la emocio\u0301n total * * aumenta* * una cantidad igual a la diferencia de espectacularidad entre ambas barrancas. * Si la nueva vista es * * menos espectacular* * la emocio\u0301n total * * disminuye* * una cantidad igual a la diferencia de espectacularidad entre ambas barrancas. Obviamente la agencia no puede reacomodar las barrancas, asi\u0301 que en un recorrido el turista pasara\u0301 por vistas que aumenten su emocio\u0301n y vistas que disminuyan su emocio\u0301n. La agencia quiere que le ayudes a encontrar el recorrido con el cual el turista quedara\u0301 ma\u0301s emocionado. * * NOTA: Te recomendamos ampliamente revisar la explicacio\u0301n del ejemplo para que el problema te quede ma\u0301s claro* * . # ProblemaEscribe un programa que dada la espectacularidad de cada una de las N vistas y el nu\u0301mero K de vistas que se van a incluir en el recorrido encuentre cua\u0301l es la emocio\u0301n total ma\u0301xima que se puede lograr.",
    "input": "Tu programa debe leer del teclado la siguiente informacio\u0301n: * En la primera li\u0301nea los nu\u0301mero N y K, el nu\u0301mero de vistas y la longitud del recorrido. * En la siguiente li\u0301nea habra\u0301 N nu\u0301meros no negativos separados por un espacio que indican la espectacularidad de las N vistas.",
    "output": "Tu programa debe escribir en la pantalla un u\u0301nico nu\u0301mero que representa la emocio\u0301n total ma\u0301xima posible para un recorrido de K vistas. # Restricciones2 \u2264 N \u2264 50, 000, el nu\u0301mero de vistas. 1 \u2264 K \u2264 N, la cantidad de vistas en el recorrido. 0 \u2264 e_ i \u2264 10, 000, la espectacularidad de la i- e\u0301sima vista.",
    "note": "",
    "topics": [
      "matrices",
      "graphs",
      "math",
      "implementation",
      "trees"
    ],
    "id": 2755
  },
  {
    "title": "Karel constructor de escaleras",
    "url": "https://omegaup.com/arena/problem/OMIS2015K4",
    "history": "# HistoriaKarel esta\u0301 construyendo una escalera. Ya fue a la tienda, compro\u0301 todo su material y lo acomodo\u0301 en el lugar adecuado para utilizarlo. Lo u\u0301nico que falta ahora es construir la escalera. Para construir la escalera Karel acomodo\u0301 montones de tabiques que en el mundo se representan como montones de zumbadores los cuales esta\u0301n todos en la primera fila. La tarea de Karel es apilar los tabiques de cada columna uno sobre otro. Los montones de tabiques ya esta\u0301n acomodados para que al apilarlos quede una escalera. < br> # ProblemaEscribe un programa que ayude a Karel a construir la escalera. < br> # Consideraciones* Karel inicia en la posicio\u0301n ( 1, 1) del mundo orientado al norte. * Karel inicia con 0 zumbadores en la mochila. * El mundo es un recta\u0301ngulo sin paredes internas. * No importa la posicio\u0301n ni la orientacio\u0301n final de Karel. * Para obtener puntos, tu programa debera\u0301 * * apilar los tabiques de cada columna uno sobre otro. * * * No habra\u0301 espacios entre los montones, es decir, cuando encuentres pared o el primer espacio sin tabiques habra\u0301s terminado. * El primer monto\u0301n de la escalera puede estar en cualquier posicio\u0301n de la fila 1.",
    "input": "! [ enter image description here] [ 1] Karel inicia en la posicio\u0301n 1, 1 orientado al norte. El material de la escalera ya esta\u0301 acomodado y no debes preocuparte por eso, u\u0301nicamente es necesario apilar los tabiques para construir la escalera.",
    "output": "! [ enter image description here] [ 2] Al apilar los tabiques la escalera queda construida. [ 1] : 5e587d88458b4b419b79e4e0b9dd41943d2f92bf. png[ 2] : 231e863052a2bbbc592b99847398e435055ccf14. png",
    "note": "",
    "topics": [
      "math",
      "dfs and similar",
      "implementation"
    ],
    "id": 2749
  },
  {
    "title": "Sumatoria",
    "url": "https://omegaup.com/arena/problem/Sumatoria",
    "history": "Desarrolla un programa que lea N enteros imprime la suma de todos los nu\u0301meros lei\u0301dos, cuantos son positivos y cuantos negativos.",
    "input": "En la primera li\u0301nea el entero N que denota la cantidad de enteros a leer. en la segunda li\u0301nea los N enteros separados por espacios.",
    "output": "Tres enteros separados por espacios que denotan la suma, cuantos son positivos y cuantos negativos. # Ejemplos# | | input71 2 - 3 11 - 23 13 10| | output11 5 2| | description| | end",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 2730
  },
  {
    "title": "B\u00fasqueda de Entrop\u00eda",
    "url": "https://omegaup.com/arena/problem/Busqueda-de-Entropia",
    "history": "Freddy es el primer espi\u0301a mexicano en una misio\u0301n de rango Alfa42 en la comunidad de Turing y ha obtenido algunos textos del enemigo, su misio\u0301n es transmitirlos a la base del ITAM. Antes de enviarlos necesita saber si los textos contienen informacio\u0301n valiosa, para decidir si sera\u0301n enviados o no. Para esto, Freddy ha ideado una forma de saber cua\u0301nta informacio\u0301n contiene cada uno de los textos. Para medir la informacio\u0301n de un texto Freddy ha descubierto que cada letra * * entre* * ' F' y ' K' ( exclusivo) aporta 15 unidades de informacio\u0301n, y cualquier otro si\u0301mbolo aporta 11 unidades. Tu misio\u0301n es ayudar a Freddy a encontrar la cantidad de informacio\u0301n del texto que e\u0301l te envi\u0301e. _ _ Nota: Todos los textos obtenidos por Freddy estara\u0301n en letras mayu\u0301sculas. _ _",
    "input": "El texto obtenido por Freddy, en una li\u0301nea.",
    "output": "La cantidad de informacio\u0301n que contiene el texto recibido.",
    "note": "",
    "topics": [
      "implementation",
      "math",
      "strings"
    ],
    "id": 2713
  },
  {
    "title": "Barbulla Matem\u00e1tica",
    "url": "https://omegaup.com/arena/problem/Barbulla-Matematica",
    "history": "En un libro misterioso te encontraste la siguiente fo\u0301rmula peculiar: S_ n= 1+ ( 1+ 2) + ( 1+ 2+ 3) + ( 1+ 2+ 3+ 4) + . . . + ( 1+ 2+ . . . + n) Mientras pensabas co\u0301mo evaluar S_ n recordaste la siguiente identidad: ( 1+ 2+ . . . + n) = n( n+ 1) / 2 Escribe un programa que dado n calcule S_ n.",
    "input": "Leera\u0301s un entero positivo, n.",
    "output": "El nu\u0301mero deseado: S_ n.",
    "note": "",
    "topics": [
      "math",
      "combinatorics",
      "implementation"
    ],
    "id": 2670
  },
  {
    "title": "Excede1000",
    "url": "https://omegaup.com/arena/problem/Excede1000",
    "history": "Desarrolla un programa que lea una lista de nu\u0301meros enteros hasta que la suma exceda a 1000. Imprime cuantos nu\u0301meros se leyeron.",
    "input": "La lista de enteros separados por un espacio",
    "output": "Un entero que denota cuantos nu\u0301meros se leyeron hasta exceder 1000. # Ejemplos# | | input10 20 80 400 300 200 25 30| | output6| | descriptionSi se suman las entradas 10+ 20+ 80+ 400+ 300+ 200= 1010, en el momento en que la suma es ma\u0301s grande que 1000, debe interrumpirse la lectura e imprimir cuantos elementos se lograron sumar, en este ejemplo la respuesta es 6. | | end",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 2659
  },
  {
    "title": "Acumulando",
    "url": "https://omegaup.com/arena/problem/Acumulando",
    "history": "Escribe un programa que lea N datos enteros, calcula la suma de todos los pares, la suma de todos los impares y el promedio de todos.",
    "input": "En la primera li\u0301nea el entero N, en la segunda li\u0301nea, N enteros separados por un espacio.",
    "output": "Una li\u0301nea con los nu\u0301meros A, B y P separados por un espacio, donde A denota la suma de los pares, B la suma de los impares y P el promedio de todos los nu\u0301meros formateado a un decimal. # Ejemplos# | | input51 2 3 4 5| | output6 9 3. 0| | description| | end",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 2658
  },
  {
    "title": "Gastos",
    "url": "https://omegaup.com/arena/problem/Gastos",
    "history": "Dada una lista de gastos, calcula e imprime el total gastado y cuantos gastos se totalizaron.",
    "input": "Una li\u0301nea con la lista de gastos, todos los enteros correspondientes a los gastos se separan con un espacio. Asume que la lista de gastos termina cunado se lee un cero.",
    "output": "Dos enteros M, N separados por un espacio que denotan el total gastado y el nu\u0301mero de gastos totalizados, respectivamente. # Ejemplos| | input10 20 5 60 40 0| | output135 5| | descriptionNota que el cero no se cuenta como un gasto. | | end",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 2648
  },
  {
    "title": "Fibonacci-B\u00e1sico",
    "url": "https://omegaup.com/arena/problem/Fibonacci-Basico",
    "history": "Dado un entero M, imprime todos los nu\u0301meros de la serie de fibonacci menores a M. La serie de fibonacci se calcula: 1 2 3 5 8 13 21 34. . . Donde un elemento f_ i= f_ i- 1+ f_ i- 2",
    "input": "Una li\u0301nea con el entero M.",
    "output": "Los nu\u0301meros de la serie fibonacci menores a M, separados por un espacio. # Ejemplos# | | input26| | output1 2 3 5 8 13 21| | description| | end# Limites1 \u2264 M \u2264 10^ 6",
    "note": "",
    "topics": [
      "math",
      "brute force",
      "number theory",
      "implementation"
    ],
    "id": 2647
  },
  {
    "title": "Incrementar la hora un segundo",
    "url": "https://omegaup.com/arena/problem/Incrementar-la-hora-un-segundo",
    "history": "Este programa debe ser capaz de incrementar correctamente un segundo a la hora representada en una linea de entrada. # ProblemaEscribe un programa que lea tres nu\u0301meros enteros h, m, y s. Donde 0 < = h < 24, representa las horas, 0 < = m < 60 los minutos y 0 < = s < 60 los segundos de un tiempo correspondiente. La salida debe mostrar en una linea la hora que corresponde al incremento de un segundo de la hora en la entrada.",
    "input": "En la primera linea 3 valores separados por un espacio que representen las horas minutos y segundos de un tiempo especi\u0301fico.",
    "output": "3 valores en la misma li\u0301nea, que representen el incremento de un segundo a la hora indicada en la entrada del programa.",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 2614
  },
  {
    "title": "Factorial de un n\u00famero",
    "url": "https://omegaup.com/arena/problem/Factorial-de-un-numero",
    "history": "Obtener el factorial de un nu\u0301mero N dado. # NotaRecuerda que el factorial llega hasta el nu\u0301mero 1.",
    "input": "nu\u0301mero N. | | input5| | output120| | end",
    "output": "",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 2575
  },
  {
    "title": "Sucesi\u00f3n de Fibonnacci",
    "url": "https://omegaup.com/arena/problem/Sucecion-de-Fibonnacci",
    "history": "Obtener la N posicio\u0301n de la sucecio\u0301n de Fibonnacci. # NotaRecuerda que la sucecio\u0301n de Fibonnacci, comienza en 0 y 1.",
    "input": "N posicio\u0301n de la sucecio\u0301n de Fibonnacci. | | input9| | output55| | end",
    "output": "",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 2573
  },
  {
    "title": "E-S Super Programador",
    "url": "https://omegaup.com/arena/problem/E-S-Super-Programador",
    "history": "En un futuro cercano existe un super he\u0301roe llamado Super Programador el tiene varios niveles de poder y capsulas de incremento la combinacio\u0301n de estos dos genera el dan\u0303o que causa a sus enemigos, tu tarea es recibir el nivel que tiene y las capsulas de incremento que tiene indicar su poder de ataque ( Dan\u0303o que causa a sus enemigos) la formula es sencilla simplemente es multiplicar el nivel que tiene por el nu\u0301mero de capsulas de incremento que tiene.",
    "input": "Un nu\u0301mero decimal que indica el nivel que tiene actualmente el Super Programador ejemplos de nivel: 1, 2. 5, 3, 4. 5, etc. Seguido de un nu\u0301mero entero que representa el nu\u0301mero de capsulas que tiene el Super Programador.",
    "output": "El dan\u0303o que puede causar si realiza un ataque.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 2572
  },
  {
    "title": "suma simple",
    "url": "https://omegaup.com/arena/problem/suma-simple",
    "history": "Debes sumarle 1 a la cantidad leida.",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 2568
  },
  {
    "title": "E-S Mensaje Sumas",
    "url": "https://omegaup.com/arena/problem/E-S-Mensaje-Sumas",
    "history": "Es un problema muy simple, para acostumbrarse a los jueces automa\u0301ticos, lo que tienes que hacer es recibir dos nu\u0301meros y con estos dos nu\u0301meros los sume y muestre la salida indicando el mensaje de la suma como se muestra en el ejemplo. En este problema debes tener cuidado en co\u0301mo muestras el resultado, a continuacio\u0301n se muestra un ejemplo de concatenacio\u0301n, en el que se ve que se sigue la estructura de poner entre comillas el texto tal cual co\u0301mo quieres que aparezca, seguido del operador de suma, seguido de una variable seguido del signo ma\u0301s y otra cadena de caracteres entre comillas y asi sucesivamente hasta obtener el valor deseado. System. out. println( \" La suma de \" + a+ \" + \" + b + \" es \" + ( a+ b) ) ; En este tipo de problemas debes tener especial cuidado en respetar las letras mayu\u0301sculas y minu\u0301sculas, ya que no es lo mismo \" Hola\" , que \" hola\" ,",
    "input": "Un nu\u0301mero entero a y un nu\u0301mero entero b.",
    "output": "Debe mostrar el siguiente mensaje donde a y b debe sustituirse por los valores que recibe como entrada el programa y la palabra resultado por la suma de ambos nu\u0301meros, asegu\u0301rate de respetar mayu\u0301sculas y minu\u0301sculas y los espacios en blanco intermedios. La suma de a + b es resultado",
    "note": "",
    "topics": [
      "math",
      "strings"
    ],
    "id": 2564
  },
  {
    "title": "\"Divisores\" de una cadena",
    "url": "https://omegaup.com/arena/problem/Divisores-de-una-cadena",
    "history": "\u00a1El COOI se ha vuelto loco! # ProblemaDada una cadena de caracteres, calcula cuantos \" divisores\" ( si\u0301, hablamos de divisores de matema\u0301ticas) tiene dicha cadena. Bien, el COOI ( au\u0301n dentro de su cordura) ha decidido explicarte como se hace este procedimiento raro. Considera los siguientes puntos: - Primero, necesitamos convertir la cadena en un numero x, donde x = suma de la representacio\u0301n nume\u0301rica de los caracteres. - La representacio\u0301n nume\u0301rica de los caracteres esta\u0301 basada en el co\u0301digo ASCII ( [ http: / / es. wikipedia. org/ wiki/ ASCII# Caracteres_ imprimibles_ ASCII] [ 1] ) , de tal modo que: A = 65, B = 66, C = 67 . . . Z = 90. - Una vez encontrado el valor de x, simplemente debes imprimir cuantos divisores enteros tiene. Recuerda que un nu\u0301mero a es divisor de x, si y solo si x",
    "input": "Una u\u0301nica linea con la cadena de caracteres, con solo letras mayu\u0301sculas y minu\u0301sculas. ( a- z, A- Z)",
    "output": "Un entero indicando cuantos \" divisores\" tiene la cadena, siguiendo las especificaciones arriba mencionadas. | | inputHOLa| | output6| | descriptionLa suma de la palabra es 292, pues: H = 72O = 79L = 76a = 65292, tiene 6 divisores: 1, 2, 4, 73, 146 y 292. | | inputCOoI| | output4| | end# Li\u0301mitesLa longitud de la cadena no excedera\u0301 100 caracteres- Tip: Si k es una variable de tipo char con un valor = ' A' , y n de tipo entero, entonces, el resultado de: n = 2 * k; dara\u0301 como resultado que n sea igual a 130; [ 1] : http: / / es. wikipedia. org/ wiki/ ASCII# Caracteres_ imprimibles_ ASCII",
    "note": "",
    "topics": [
      "math",
      "strings",
      "implementation"
    ],
    "id": 2532
  },
  {
    "title": "3 x 3",
    "url": "https://omegaup.com/arena/problem/3x3",
    "history": "Karel tiene una parcela de 3x3. Como le gusta el nu\u0301mero 3, todos los montones de su parcela deben tener 3 beepers# ProblemaAyuda a Karel a colocar en todas las esquinas, montones de 3 beepers# Consideraciones< ul> < li> Karel empieza en la calle 1, 1 con orientacio\u0301n al Este< / li> < li> La parcela es de taman\u0303o 3x3< / li> < li> Las esquinas podra\u0301n tener o no montones; si tiene montones podra\u0301n ser de 1, 2 o\u0301 3< / li> < li> Karel trae suficientes beepers en su mochila< / li> < li> No importa la posicio\u0301n ni orientacio\u0301n final de Karel< / li> < li> So\u0301lo importa que Karel siembre montones de 3 beeper en todas las esquinas< / li> < / ul> # Entrada ejemplo! [ Ejemplo de entrada] [ 1] # Salida ejemplo! [ Ejemplo de salida] [ 2] [ 1] : 5b2fb2d09e65ba76ed8dc0f120f639bb600aa940. jpeg[ 2] : 05f371b589f3ff031c78c732bb20786206834691. jpeg",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 2518
  },
  {
    "title": "Calcula mediana",
    "url": "https://omegaup.com/arena/problem/Calcula-mediana",
    "history": "# ProblemaEn la clase de estadi\u0301stica te pidieron calcular las medianas de variosconjuntos de datos. Como no quieres hacer los ca\u0301lculos a mano, decidisteescribir un programa que realice el ca\u0301lculo. Escribe un programa que calcu\u0301le la mediana de un conjunto de datos. Losdatos pueden tener valores entre 1 y 1000000, y pueden ser hasta 200datos. # Entrada: Una li\u0301nea con el conjunto de datos# Salida: La mediana del conjunto de datos# Ejemplo: | | input100 95 90 90 85 80 75| | output90| | input1000 1 900 2 800 3 4 5 6 7 101 102 321| | output7| | end",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "sortings",
      "math",
      "implementation"
    ],
    "id": 2514
  },
  {
    "title": "El problema de los M\u00faltiplos",
    "url": "https://omegaup.com/arena/problem/El-problema-de-los-Multiplos",
    "history": "Si hacemos una lista de todos los nu\u0301meros naturales antes del nu\u0301mero 10 que son mu\u0301ltiplos de 3 o\u0301 5, obtenemos el 3, 5, 6 y 9. La suma de esos mu\u0301ltiplos es 23. # ProblemaEncuentre la suma de todos los mu\u0301ltiplos de 3 o 5 que se localizan antes de cierto numero natural dado.",
    "input": "En una li\u0301nea un u\u0301nico nu\u0301mero natural N.",
    "output": "Una solo li\u0301nea en la cual se debera\u0301 mostrar el resultado obtenido. # Ejemplos| | input10| | output23| | descriptionCaso de prueba| | end# Li\u0301mites* 1 < = N < = 90, 000",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 2504
  },
  {
    "title": "El banco",
    "url": "https://omegaup.com/arena/problem/El-banco",
    "history": "En un banco se realizan diariamente miles de transacciones. El objetivo de esta pra\u0301ctica es simular de una manera muy ba\u0301sica lo que ocurre con las cuentas de los clientes. Generalmente todo cliente de un banco tiene asociado un nu\u0301mero de cliente nc, un nombre s y al menos una cuenta, sin embargo en esta pra\u0301ctica consideraremos que todo cliente tiene una sola cuenta y e\u0301sta es de de\u0301bito. Para abrir una cuenta de de\u0301bito es necesario realizarle un depo\u0301sito inicial A. A partir de alli\u0301 se pueden realizar tantos depo\u0301sitos D, consultas C o retiros E ( siempre que haya dinero) como el cliente desee. Si en algu\u0301n momento lo desea el cliente puede dar de baja B una cuenta y evidentemente dejarla en ceros.",
    "input": "La primer li\u0301nea de la entrada consistira\u0301 de un entero n que denota el nu\u0301mero de transacciones bancarias a procesar seguido de n li\u0301neas las transacciones. El primer valor sera un caracter c, que podra\u0301 ser alguna de las siguientes opciones: - Letra A: indicara\u0301 la apertura de una cuenta. La letra sera\u0301 seguida de un nu\u0301mero de cliente nc ( pues el cliente es nuevo) , seguido de una cadena s que denota el nombre ( el nombre no contendra\u0301 espacios) , seguido del monto inicial p de apertura de la cuenta. Ejemplo: A 7 juan 500- Letra B: indicara\u0301 la baja de una cuenta. La letra sera\u0301 seguida de un nu\u0301mero de cliente nc. Ejemplo: B 7- Letra C: indicara\u0301 la consulta del saldo de cliente. La letra sera\u0301 seguida de un nu\u0301mero de cliente nc. Ejemplo: C 7- Letra D: indicara\u0301 un depo\u0301sito en la cuenta de un cliente. La letra sera\u0301 seguida de un nu\u0301mero de cliente nc y el monto a depositar p. Ejemplo: D 7 500- Letra E: indicara\u0301 un retiro en la cuenta de un cliente. La letra sera\u0301 seguida de un nu\u0301mero de cliente nc y el monto a retirar p. Ejemplo: E 7 500Puede suponer que 1 \u2264 n \u2264 1000, 1 \u2264 nc \u2264 10, 1 \u2264 p \u2264 10000 y que la longitud del nombre sera\u0301 de a lo ma\u0301s 10 caracteres.",
    "output": "Su programa debera\u0301 imprimir una li\u0301nea de salida por cada li\u0301nea de entrada segu\u0301n sea la letra de entrada. A continuacio\u0301n se describe que hacer en cada caso. - Letra A: So\u0301lo se realizara\u0301 el alta de una cuenta si no existe ya otra cuenta con el mismo nu\u0301mero de cliente. En caso de que se pueda realizar el alta debera\u0301 imprimir la palabra OK y en caso contrario la palabra ERROR. - Letra B: So\u0301lo se realizara\u0301 la baja de una cuenta si es que el cliente existe al momento de solicitarla. En caso de que se pueda realizar la baja debera\u0301 imprimir la palabra OK y en caso contrario la palabra ERROR. - Letra C: So\u0301lo se realizara\u0301 la consulta de una cuenta si es que el cliente existe al momento de solicitarla. En caso de existir debera\u0301 imprimir el nombre del cliente seguido del monto actual en la cuenta, en caso contrario debera\u0301 imprimir la palabra ERROR. - Letra D: So\u0301lo se realizara\u0301 el depo\u0301sito a una cuenta si es que el cliente existe al momento de solicitarlo. En caso de existir debera\u0301 imprimir el nombre del cliente seguido del monto actual en la cuenta despue\u0301s del depo\u0301sito, en caso contrario debera\u0301 imprimir la palabra ERROR. - Letra E: So\u0301lo se realizara\u0301 el retiro de una cuenta si es que el cliente existe al momento de solicitarlo y el monto a retirar es menor o igual que el saldo de la cuenta. En caso de que el movimiento se pueda realizar debera\u0301 imprimir el nombre del cliente seguido del monto actual en la cuenta despue\u0301s del retiro, en caso contrario debera\u0301 imprimir la palabra ERROR.",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 2489
  },
  {
    "title": "S\u00faper sumas",
    "url": "https://omegaup.com/arena/problem/GPCNAB",
    "history": "Ahora te hemos dado la tarea mas difi\u0301cil de sumar N nu\u0301meros.",
    "input": "La primera li\u0301nea tendra\u0301 N el nu\u0301mero de enteros que tienes que sumar. Cada una de las siguientes N li\u0301neas tendra\u0301 un nu\u0301mero A_ i.",
    "output": "Imprime la suma de los N nu\u0301meros.",
    "note": "",
    "topics": [
      "brute force",
      "implementation",
      "math"
    ],
    "id": 2484
  },
  {
    "title": "Producto de matrices",
    "url": "https://omegaup.com/arena/problem/Producto-de-matrices",
    "history": "Los arreglos permiten realizar operaciones entre abstracciones matema\u0301ticas de una manera relativamente sencilla. El objetivo es realizar un programa que dadas dos matrices A y B le permita realizar el producto de e\u0301stas.",
    "input": "La primer li\u0301nea de la entrada consistira\u0301 de tres enteros n, m, o, que denotan el taman\u0303o de la matriz A[ n, m] y el de la matriz B[ m, o] . Luego aparecera\u0301n n filas con m enteros que denotan los valores de la matriz A. Finalmente, aparecera\u0301n m filas con o enteros que denotan los valores de la matriz B. Puede suponer que 1 \u2264 n, m, o \u2264 100 y que 1 \u2264 a_ ij, b_ ij\u2264 1000 para todo i, j.",
    "output": "Su programa debera\u0301 imprimir una matriz R de taman\u0303o n \u00d7 o que representa el resultado del producto de la matriz A por la matriz B.",
    "note": "",
    "topics": [
      "math",
      "matrices",
      "implementation"
    ],
    "id": 2483
  },
  {
    "title": "A + B ",
    "url": "https://omegaup.com/arena/problem/GPCTUT1",
    "history": "Este problema consiste en crear un programa que sume dos nu\u0301meros.",
    "input": "Dos nu\u0301meros A y B separados por un espacio.",
    "output": "Imprime A+ B",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 2482
  },
  {
    "title": "Bisiesto",
    "url": "https://omegaup.com/arena/problem/GPC1I",
    "history": "El maestro Zen Chan sabe que los mejores an\u0303os para alcanzar el ma\u0301s alto estado Zen, son los an\u0303os bisiestos. Es de suma importancia que le ayudes con un programa que diga si un an\u0303o es o no bisiesto. Un an\u0303o es bisiesto si es divisible entre 4, a menos que sea divisible entre 100. Sin embargo, si un an\u0303o es divisible entre 100 y adema\u0301s es divisible entre 400, tambie\u0301n resulta bisiesto.",
    "input": "La primera linea tendra\u0301 un nu\u0301mero N, que sera\u0301 la cantidad de an\u0303o para analizar. Despue\u0301s habra\u0301 N lineas representando estos an\u0303os.",
    "output": "Para cada an\u0303o, imprime \" S\" si el an\u0303o es bisiesto. Imprime \" N\" si no lo es.",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 2472
  },
  {
    "title": "Valor Absoluto",
    "url": "https://omegaup.com/arena/problem/GPC1F",
    "history": "Obtener el valor absoluto de la suma de dos nu\u0301meros.",
    "input": "Dos nu\u0301meros enteros en cada li\u0301nea.",
    "output": "El valor absoluto de la suma.",
    "note": "",
    "topics": [
      "math",
      "binary search"
    ],
    "id": 2469
  },
  {
    "title": "Resta",
    "url": "https://omegaup.com/arena/problem/Resta",
    "history": "Resta ba\u0301sica.",
    "input": "Dos nu\u0301meros enteros en cada li\u0301nea.",
    "output": "El resultado de restar el segundo nu\u0301mero al primero.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 2468
  },
  {
    "title": "Multiplicaci\u00f3n",
    "url": "https://omegaup.com/arena/problem/GPC1D",
    "history": "Multiplicacio\u0301n ba\u0301sica",
    "input": "Dos nu\u0301meros enteros en cada li\u0301nea.",
    "output": "El resultado de multiplicar los dos nu\u0301meros.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 2467
  },
  {
    "title": "SumasCuadradas",
    "url": "https://omegaup.com/arena/problem/SumasCuadradas",
    "history": "En esta ocasio\u0301n nuestro amigo Marti\u0301n tiene un pequen\u0303o problema, como qui\u0301mico loco que se respeta( decimos que se respeta para que no llore. . . ) odia las matema\u0301ticas, en la escuela le han pedido resolver un problema matema\u0301tico que consiste de lo siguiente: Una matri\u0301z de nuemros de N * N, el problema consiste en decir la suma de todas las filas y las columnas y decir la suma total de la matriz. # ProblemaAyuda a Marti\u0301n a resolver su problema para evitar reprobar Ca\u0301lculo Integral III.",
    "input": "En la primera linea N que representa las dimensiones de la matri\u0301z. En las siguientes N li\u0301neas habra\u0301 N enteros representando el nu\u0301mero en esa posicio\u0301n de la matri\u0301z.",
    "output": "Debes dejar N li\u0301neas con las sumas de las N filas, N li\u0301neas con las sumas de las N columnas, y finalmente una li\u0301nea con un entero representando la suma total de la matri\u0301z.",
    "note": "",
    "topics": [
      "matrices",
      "math",
      "implementation"
    ],
    "id": 2462
  },
  {
    "title": "Promedio",
    "url": "https://omegaup.com/arena/problem/CGPC1G",
    "history": "El profesor Ariel quiere saber el promedio de calificaciones de su grupo. Porlo que tu como programador le ayudaras codificando un programita que le pidauna cantidad de alumnos, y en seguida las calificaciones.",
    "input": "La cantidad de Alumnos y las n calificaciones en escala 0 al 100, sindecimales.",
    "output": "Mostrar el promedio con dos decimales.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 2457
  },
  {
    "title": "Minutos",
    "url": "https://omegaup.com/arena/problem/Minutos",
    "history": "Sau\u0301l simepre toma en cuenta el tiempo en minutos que tarda en codificar unprograma. Lamentablemente su nuevo reloj so\u0301lo muestra el tiempo en segundos. Ayudale con un programa que convierta minutos en segundos.",
    "input": "Un nu\u0301mero entero que representa los minutos.",
    "output": "Otro nu\u0301mero entero, que es la equivalencia en segundos.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 2456
  },
  {
    "title": "Suma de los d\u00edgitos",
    "url": "https://omegaup.com/arena/problem/Suma-de-los-digitos",
    "history": "# ProblemaEscribe un programa que lea un entero positivo y regrese la suma de susdi\u0301gitos. Por ejemplo: si el entero es 123, el programa debera\u0301 producir6, ya que 1+ 2+ 3= 6Nota: Si tu programa usa una funcio\u0301n recursiva, vale 50 puntos, si nousa una funcio\u0301n recursiva vale 30 puntos. # Entrada: Una li\u0301nea con un entero n> 0# Ejemplo: | | input123456789| | output45| | end",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "math",
      "implementation",
      "divide and conquer"
    ],
    "id": 2434
  },
  {
    "title": "N\u00fameros-perfectos",
    "url": "https://omegaup.com/arena/problem/Numeros-perfectos2",
    "history": "# ProblemaUn * * nu\u0301mero perfecto* * es un entero positivo que es igual a la suma de susdivisores positivos sin incluirse e\u0301l mismo. Por ejemplo, 6 es un nu\u0301meroperfecto porque 6= 1+ 2= 3. Escribe un programa que lea un entero n < 10000 y que te imprima todoslos nu\u0301meros perfectos que puedes encontrar entre 1 y n. # Entrada: Una li\u0301nea con un entero n# Ejemplo: | | input500| | output628496| | end# Li\u0301mites0 < n \u2264 10000",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 2433
  },
  {
    "title": "Tri\u00e1ngulos is\u00f3sceles",
    "url": "https://omegaup.com/arena/problem/Triangulos-isosceles",
    "history": "Para que tres nu\u0301meros naturales a, b, c sean las longitudes de los lados de un tria\u0301ngulo deben de satisfacer las tres desigualdades a + b > c, b + c > a, c + a > b. Para que un tria\u0301ngulo sea iso\u0301sceles debe satisfacer que exactamente dos de sus lados tengan la misma longitud ( pero el tercero debe de ser distinto, si no seri\u0301a un tria\u0301ngulo equila\u0301tero) . Dados dos enteros m y n, podemos encontrar todas las ternas ( a, b, c) tales que m \u2264 a \u2264 b \u2264 c \u2264 n y que a, b, c sean las longitudes de los lados de un tria\u0301ngulo iso\u0301sceles. Por ejemplo, si m = 2 y n = 5 entonces hay 10 tales ternas que son ( 2, 2, 3) , ( 2, 3, 3) , ( 2, 4, 4) , ( 2, 5, 5) , ( 3, 3, 4) , ( 3, 3, 5) , ( 3, 4, 4) , ( 3, 5, 5) , ( 4, 4, 5) y ( 4, 5, 5) .",
    "input": "La entrada consiste de dos enteros m y n ( en ese orden y separados por un espacio) que tendra\u0301n un valor entre 1 y 1, 000.",
    "output": "La salida consiste de un u\u0301nico nu\u0301mero t, el nu\u0301mero de tria\u0301ngulos con las propiedades deseadas.",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 2394
  },
  {
    "title": "Romanos",
    "url": "https://omegaup.com/arena/problem/Romanos",
    "history": "Escribe un programa que lea un entero entre 1 y 100 e imprima su equivalencia en nu\u0301meros romanos.",
    "input": "Una li\u0301nea con el entero a convertir.",
    "output": "LXXXIX| | description| | end",
    "note": "",
    "topics": [
      "math",
      "implementation",
      "strings"
    ],
    "id": 2392
  },
  {
    "title": "Reloj",
    "url": "https://omegaup.com/arena/problem/Reloj",
    "history": "Escribe un programa que lea la hora actual en formato hora: minutos: segundos e imprima la hora que sera\u0301 despue\u0301s de pasado un segundo.",
    "input": "Una li\u0301nea con tres enteros separados por < strong> : < / strong> correspondientes a la hora, minuto y segundo.",
    "output": "00: 00: 00| | description| | end",
    "note": "",
    "topics": [
      "math",
      "strings"
    ],
    "id": 2389
  },
  {
    "title": "Aburrido",
    "url": "https://omegaup.com/arena/problem/Aburrido_",
    "history": "Cope se encuentra aburrido porque es di\u0301a de San Valenti\u0301n y e\u0301l esta\u0301 impartiendo cursos en lugar de festejar, como esta\u0301 tan aburrido se fue\u0301 a caminar por el plantel donde esta\u0301 impartiendo los cursos, al caminar se dio\u0301 cuenta de algo muy curioso y quedo\u0301 fascinado con ello. Nuestro amigo vio\u0301 que los a\u0301rboles tienen una especie de barda alrededor de ellos, pero lo curioso es que dichas bardas esta\u0301n hechas con botellas de refresco rellenas y ban\u0303adas en cemento, se acerco\u0301 a observar y vio que las botellas forman un patron dependiendo del nu\u0301mero de botellas que hay formando una serie de la siguiente forma: 3 6 11 18 27 38. . . Cope quier saber hasta que numero llega esa serie pero como esta\u0301 tan aburrido solo vio\u0301 el nu\u0301mero de niveles en la serie pero no quizo contar las botellas que habi\u0301a al final# ProblemaAyuda a Cope a saber cuantas botellas habi\u0301a en el u\u0301ltimo nivel",
    "input": "En la primera y u\u0301nica li\u0301nea habra\u0301 un nu\u0301mero entero N representanto el nu\u0301mero de niveles que vio\u0301 Cope.",
    "output": "Una un solo nu\u0301mero representando cuantas botellas hay en el nivel N",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 2384
  },
  {
    "title": "La Medida del Tiempo",
    "url": "https://omegaup.com/arena/problem/La-Medida-del-Tiempo",
    "history": "\u00bfTe has preguntado alguna vez cua\u0301ntos segundos han pasado desde que naciste? \u00bfDesde que aprendiste a contar? \u00bfDesde que entraste a la universidad? O bien, \u00bfte has preguntado cua\u0301nto tiempo son un millo\u0301n de segundos? Como todo el mundo sabe, un minuto tiene 60 segundos, una hora tiene 60 minutos, un di\u0301a tiene 24 horas y un an\u0303o tiene 365 di\u0301as. Bueno, eso no siempre es cierto, pero lo consideraremos asi\u0301 para esta tarea. Dada una cierta cantidad de segundos s, debera\u0301s determinar cuantos an\u0303os a, di\u0301as d, horas h y minutos m completos representan, adema\u0301s de cua\u0301ntos segundos q quedan. Por ejemplo, si s = 40, 000, 000 entonces a = 1, d = 97, h = 23, m = 6 y q = 40.",
    "input": "La entrada consiste de un nu\u0301mero entero s que tendra\u0301 un valor entre 0 y 2, 000, 000, 000.",
    "output": "La salida consiste de cinco nu\u0301meros enteros a, d, h, m y q separados por un espacio.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 2377
  },
  {
    "title": "E/S-C\u00edrculo",
    "url": "https://omegaup.com/arena/problem/ES-Circulo",
    "history": "Escribe un programa que lea el valor del radio de un ci\u0301rculo, calcule e imprima el a\u0301rea y la circunferencia. < strong> A\u0301rea= # 928; * r< sup> 2< / sup> < / strong> < strong> Circunferencia= # 928; * 2 * r< / strong> Considera el valor de # 928; como 3. 1416",
    "input": "Una li\u0301nea con un u\u0301nico dato, el valor flotante del radio.",
    "output": "El valor del a\u0301rea y la circunferencia separados por un espacio y con dos di\u0301gitos de precisio\u0301n despue\u0301s del punto. # Ejemplos# | | input3. 5| | output38. 48 21. 99| | description| | end",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 2362
  },
  {
    "title": "E/S-Terna pitag\u00f3rica",
    "url": "https://omegaup.com/arena/problem/ES-Terna-pitagorica",
    "history": "Una terna pitago\u0301rica consiste de tres enteros positivos < em> a, b, c< / em> que cumplen con la expresio\u0301n < em> a< sup> 2< / sup> + b< sup> 2< / sup> = c< sup> 2< / sup> < / em> . Escribe un programa que lea los enteros < em> a, b, c< / em> y determine si se trata de una terna pitago\u0301rica.",
    "input": "3 4 5| | output",
    "output": "SI| | descriptionEs una terna pitago\u0301rica porque 3< sup> 2< / sup> + 4< sup> 2< / sup> = 5< sup> 2< / sup> < br> , es decir 9+ 16= 25| | end",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 2361
  },
  {
    "title": "E/S-Operaciones",
    "url": "https://omegaup.com/arena/problem/ES-Operaciones",
    "history": "Dados dos nu\u0301meros enteros a, b. Escribe un programa que calcule el resultado de hacer las siguientes operaciones con ellos. - Sumarlos- Restarlos- Divisio\u0301n entera- Multiplicacio\u0301n- Mo\u0301dulo",
    "input": "Una li\u0301nea con dos enteros separados por un espacio.",
    "output": "Una li\u0301nea con los enteros resultantes de cada operacio\u0301n en el orden especificado y separados por un espacio.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 2360
  },
  {
    "title": "La edad de John Carter",
    "url": "https://omegaup.com/arena/problem/La-edad-de-John-Carter",
    "history": "Me llamo John Carter. Ahora soy muy viejo, pero no se\u0301 mi edad. No puedo saberlo, pues no he envejecido como los humanos y no recuerdo mi infancia. Hasta donde recuerdo, siempre he parecido tener la misma edad. Supongo que no vivire\u0301 para siempre, pero he muerto al menos una vez y sigo vivo. Tengo anotado cua\u0301ntos di\u0301as ha durado cada una de mis vidas. \u00bfPodri\u0301as decirme cua\u0301ntos an\u0303os terrestres he vivido?",
    "input": "Un entero V seguido de V enteros D_ 1, . . . , D_ V que representan la cantidad de di\u0301as que John Carter ha vivido en cada una de sus V vidas. Puedes suponer que 2 le; V le; 250000 y que 1 le; D_ i le; 250000 para toda 1 le; i le; V.",
    "output": "Un entero A que sea la cantidad de an\u0303os completos que ha vivido John Carter. La cantidad de an\u0303os debe calcularse sumando los di\u0301as de todas las vidas de John. Puedes suponer que cada an\u0303o terrestre dura exactamente 365 di\u0301as y que so\u0301lo nos interesan los an\u0303os enteros.",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 2289
  },
  {
    "title": "El caballo de John Carter",
    "url": "https://omegaup.com/arena/problem/El-caballo-de-John-Carter",
    "history": "John Carter, temiendo que su amigo Powell fuera capturado por los indios hostiles en su bu\u0301squeda de equipo minero, decidio\u0301 seguir sus huellas a trave\u0301s de un sendero montan\u0303oso. Aunque el caballo de John iba a todo galope, lo irregular del terreno haci\u0301an que el caballo variara su velocidad. En terreno plano, el caballo de John era capaz de recorrer una unidad de distancia en P segundos, mientras que le tomaba S segundos recorrerla si el terreno estaba inclinado ( de subida) y B segundos si estaba declinado ( de bajada) . Calcula el tiempo total en segundos que le tomo\u0301 al caballo de John Carter recorrer todo el terreno.",
    "input": "Tres enteros P, S, B y una cadena de no ma\u0301s de 1000 caracteres, donde el caracter - representa una unidad de terreno plano, / una unidad de terreno inclinado y \u2216 una unidad de terreno declinado. Puedes suponer que 1 \u2264 B \u2264 P \u2264 S \u2264 1000.",
    "output": "Un entero T que sea el tiempo total en segundos que le tomo\u0301 al caballo recorrer el terreno.",
    "note": "",
    "topics": [
      "implementation",
      "math",
      "strings"
    ],
    "id": 2288
  },
  {
    "title": "AEM",
    "url": "https://omegaup.com/arena/problem/AEM",
    "history": "La AEM ( Agencia Espacial Mexicana) desea programar sus pro\u0301ximos lanzamientos denaves espaciales. Ella cuenta con los tiempos ( expresados en horas, minutos ysegundos) de cada uno de los lanzamientos asi\u0301 como los segundos que cada misio\u0301nespacial debe permanecer en o\u0301rbita.",
    "input": "Se acostumbra que el formato utilizado para denotar los tiempos de lanzamientosea con un reloj digital de 24 horas, es decir: hh: mm: ssvdonde ` hh` se utiliza para la hora del lanzamiento ` mm` y ` ss` para los minutosy los segundos respectivamente. v es el nu\u0301mero de segundos ( posiblemente dema\u0301s de un di\u0301gito) que dura el vuelo.",
    "output": "Lo que hay que calcular y desplegar son los tiempos en los que cada naveregresara\u0301 de su misio\u0301n. Utiliza el siguiente formato para desplegar el nu\u0301merode di\u0301as despue\u0301s del lanzamiento, y el tiempo en horas, minutos y segundos: dd: hh: mm: ss",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 2261
  },
  {
    "title": "N\u00fameros Amigos",
    "url": "https://omegaup.com/arena/problem/Numeros-Amigos",
    "history": "Dos nu\u0301meros enteros positivos A y B son nu\u0301meros amigos si la suma de los divisores propios de A es igual a B y la suma de los divisores propios de B es igual a A. Los divisores propios de un nu\u0301mero incluyen la unidad pero no el propio nu\u0301mero. Un ejemplo de nu\u0301meros amigos son los nu\u0301meros 220 y 284. Los divisores propios de 220 son: 1, 2, 4, 5, 10, 11, 20, 22, 44, 55 y 110. La suma de los divisores propios de 220 da como resultado 284Los divisores propios de 284 son: 1, 2, 4, 71 y 142. La suma de los divisores propios de 284 da como resultado 220. Por lo tanto 220 y 284 son amigos.",
    "input": "Como entrada se dan dos nu\u0301meros enteros A y B.",
    "output": "Imprimir el texto \" Es Amigo\" o \" No es Amigo\" .",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 2258
  },
  {
    "title": "Conversi\u00f3n de N\u00fameros Romanos",
    "url": "https://omegaup.com/arena/problem/Conversion-de-Nemeros-Romanos",
    "history": "Se te da un numero 1< = N < = 3999 , y debera\u0301s realiza la convercio\u0301n equivalente en nu\u0301meros romanos.",
    "input": "Para este ejercicio, como entrada recibe u\u0301nicamente un nu\u0301mero entero.",
    "output": "La salida debera\u0301 imprimir a consola el equivalente en romano de nu\u0301mero proporcionado.",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 2257
  },
  {
    "title": "A+B",
    "url": "https://omegaup.com/arena/problem/GPCAB",
    "history": "Este problema consiste en crear un programa que sume dos nu\u0301meros.",
    "input": "Dos nu\u0301meros A y B separados por un espacio.",
    "output": "Imprime A+ B",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 2247
  },
  {
    "title": "Leyendo matrices ",
    "url": "https://omegaup.com/arena/problem/LeyendoMatrices",
    "history": "Uno de los retos mas interesantes para un estudiante de programacio\u0301n es cuando comienza a aprender y usar matrices y en este concurso no queremos dejarlas fuera. Dada una matriz de taman\u0303o ` N* N` debes encontrar el taman\u0303o de la secuencia de numeros ascendentes no repetidos mas grande dentro de la matriz. Existen 4 formas diferentes de recorridos validos: - Comenzando de la posicio\u0301 0, 0 de izquierda a derecha y de arriba a abajo. - Comenzando de la posicio\u0301 N- 1, N- 1 de derecha a izquierda y de abajo a arriba. - Comenzando de la posicio\u0301 0, 0 de arriba a abajo y de izquierda a derecha. - Comenzando de la posicio\u0301 N- 1, N- 1 de abajo a arriba y de derecha a izquierda. Recuerda que cuando llegas al final de una fila y aun hay mas filas estas cuentan como si estubieran unidas, asi que la secuencia puede continuar de una fila a otra, de la misma manera para las columnas.",
    "input": "Un entero N que indica el numero de casos de prueba, seguido por N casos. Cada caso consta de un entero P que indica que hay P lineas con P enteros C cada una. 0 \u2264 C \u2264 100 y 0 < P \u2264 100000",
    "output": "N li\u0301neas de salida con un entero C que representa el taman\u0303o de la secuencia mas grande encontrada. | | input156 2 5 9 18 1 2 3 49 4 3 2 16 8 3 6 19 4 2 6 7| | output5| | endNota: En este caso la secuencia fue 1 2 3 4 9 , puede ser comenzar en 1, 1 y terminar en 2, 0 o\u0301 biencomenzar en 2, 4 y terminar en 2, 0",
    "note": "",
    "topics": [
      "math",
      "matrices",
      "implementation"
    ],
    "id": 2224
  },
  {
    "title": "La leche",
    "url": "https://omegaup.com/arena/problem/LaLeche",
    "history": "Como empacar leche es un negocio de tan bajo margen de ganancia, es importante mantener el precio de la materia prima ( leche) tan bajo como sea posible. Ayude a Felices Hacedores de Leche a obtener la leche que ellos necesitan de la manera m aacute; sbarata posible. La compa ntilde; ia Felices Hacedores de Leche tiene varios granjeros a los cuales ellospueden comprar leche, y cada uno tiene un precio ( potencialmente) diferente con elcual eacute; l vende a la planta envasadora de leche. A uacute; n m aacute; s, como las vacassolo pueden producir una cantidad limitada en un d iacute; a, los granjeros solotienen una cantidad limitada de leche para vender por d iacute; a. Cada d iacute; a, Felices Hacedores de Leche puede comprar una cantidad entera de lechede cada granja, menor o igual al l iacute; mite de la granja. Dado el requerimiento diario de Felices Hacedores de Leche, junto con elcosto por gal oacute; n y la cantidad disponible de leche para cada granja, calcule lacantidad m iacute; nima de dinero que se necesita para cumplir los requerimientos de FelicesHacedores de Leche. Nota: El total de la leche producida por d iacute; a por los granjeros ser aacute; suficientepara cumplir las demandas de los Hacedores Felices de Leche. # # # FORMATO DE ENTRADALa primer linea sera un numero con el total de casos de prueba. Cada caso de prueba se define de la siguiente manera: < / p> < b> L iacute; nea 1: < / b> : Dos enteros, N y M. < br> El primer valor, N, ( 0 le; N le; 2, 000, 000) es la cantidad de leche que Hacedores Felices de Lechequiere por d iacute; a. El segundo, M, ( 0 le; M le; 5, 000) es el n uacute; mero de granjeros a los cuales les pueden comprar. L iacute; neas 2 a M+ 1: < / b> : Las siguientes M l iacute; neas contienen dos enteros, P< sub> i< / sub> y A< sub> i< / sub> . < br> P< sub> i< / sub> ( 0 le; P< sub> i< / sub> le; 1, 000) es el precio en centavosque el granjero i cobra. < br> A< sub> i< / sub> ( 0 le; Ai le; 2, 000, 000) es la cantidad de lecheque el granjero i puede vender a Felices Hacedores de Leche por d iacute; a. # # # FORMATO DE SALIDAUna sola l iacute; nea con un solo entero que es la m iacute; nima cantidad de dinero con el queFelices Hacedores de Leche puede comprar su leche para un d iacute; a| | input1100 55 209 403 108 806 30| | output630| | end< h4> Fuente: USACO Training< / h4>",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "implementation",
      "sortings",
      "math"
    ],
    "id": 2210
  },
  {
    "title": "Extincion Maya",
    "url": "https://omegaup.com/arena/problem/ExtincionMaya",
    "history": "La civilizacion Maya fue una de las mas desarrolladas e inteligentes de la era precolombina en la antigua mesoamerica, sus conocimientos y descubrimientos han aportado al desarrollo humano hoy en dia. Se dice que desaparecieron sin dejar rastro alguno, pero la verdad ha sido ocultada durante an\u0303os. Realmente fueron exterminados por alienigenas que temian ser superados por los conocimientos de nuestros ancestros, solo algunos o mejor dicho muy pocos lograron escapar de aquella masacre. Recordemos que esta cultura es recordada como mistica y misteriosa. Entonces para lograr esconderse desarrollaron una habilidad magica y matematica, la cual consistia en escalar una de sus piramides, colocarse en uno de los escalones y pronunciar el numero de rocas que habian sido utilizadas para construir la piramide desde el tope ( escalon 1) hasta dicho escalon, y asi traspasar la piramide hasta un lugar seguro. Ahora tu mision es ayudar a los pocos mayas que quedan vivos dentro de la piramide, tendras que invertir el proceso que ellos realizaron para esconderse. La entrada sera un numero * n* que contiene el numero de piedras usadas para construir la piramide desde el tope de la piramide hasta cierto escalon. Tu debes encontrar a que escalon pertenece. Para ello tienes que saber que los escalones se acomodan de la siguiente manera: 1 * tope 1 piedras en el escalon 1121 4 piedras en el escalon 212321 9 piedras en el escalon 3 . 1234321123454321123456543211234567654321123456787654321123456789876543211234567890987654321123456789010987654321123456789012109876543211234567890123210987654321. . . Entonces se usaron 14 ( 1+ 4+ 9) piedras hasta el escalon 3.",
    "input": "\u2014\u2014- La entrada consiste en un entero * p* menor a 1000 que es el numero de casos de prueba, le siguen * p* lineas con el entero * n* donde 1 < * n* < 2< sup> 29< / sup> que es el numero de piedras usadas desde el tope hasta cierto escalon.",
    "output": "\u2014\u2014La salida debe mostrar el escalon donde se encuentra el maya.",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 2205
  },
  {
    "title": "Digital Root",
    "url": "https://omegaup.com/arena/problem/DigitalRoot",
    "history": "La raiz digital de un entero positivo es calculada mediante la suma de cada digito de ese entereo. Si el resultado es un entero de un solo digito entonces esa es su raiz digital. Si el resultado tiene dos o mas digitos, esos digitos son sumados y el proceso se repite hazta obtener un numero de un solo digito. Por ejemplo, considere el entero poditivo 24. Sumar 2 y 4 resulta en 6. Ya que 6 es un solo digito, 6 es la raiz digital de 24. Ahora considere el entero positivo 39. Sumar 3 y 9 resulta en 12. Ya que 12 no es un solo digito, el proceso debe ser repetido. Sumando 1 y 2 resulta en 3, de un solo digito y por tanto la raiz digital de 39.",
    "input": "La entrada consistira de una lista de enteros positivos, uno por linea. El fin de la entrada estara marcada por un entero igual a 0. # # # SalidaPor cada entero en la entrada, escriba su raiz digital, uno por linea en la salida. # # # Entrada de Ejemplo| | input24390| | output63| | end",
    "output": "",
    "note": "",
    "topics": [
      "dfs and similar",
      "dp",
      "implementation",
      "math"
    ],
    "id": 2199
  },
  {
    "title": "Palindromos Duales",
    "url": "https://omegaup.com/arena/problem/PalindromosDuales",
    "history": "Un nu\u0301mero que se lee lo misma de derecha a izquierda que cuando se lee de derecha a izquierda. El nu\u0301mero 123321 es pali\u0301ndromo, el nu\u0301mero 777778 no lo es. Por supuesto, los pali\u0301ndromos no tienen ceros iniciales ni finales, por lo tanto 0220 no es un pali\u0301ndromo. . El nu\u0301mero 21 ( base 10) no es un pali\u0301ndromo en base 10, pero el nu\u0301mero 21 ( base 10) es, de hecho, un pali\u0301ndromo en base 2 ( 10101) . Escriba un programa que lea dos nu\u0301meros ( expresados en base 10) : - N ( 1 \u2264 N \u2264 15) - S ( 0 < S < 10000) y encuentre e imprima ( en base 10) los primeros N nu\u0301meros estrictamente mayores que S que son pali\u0301ndromos cuando se escriben en dos o ma\u0301s bases nume\u0301ricas ( 2 \u2264 base \u2264 10) . Las soluciones a este problema no requieren manipular enteros mayores que los esta\u0301ndares de 32 bits. FORMATO DE ENTRADA\u2014\u2014\u2014\u2014\u2014\u2014Un entero K que indica el numero de casos siguientes. Cada caso K contienen una sola li\u0301nea con los enteros N y S separados por un espacio. FORMATO DE SALIDA\u2014\u2014\u2014\u2014\u2014\u2013Por cada caso de prueba, K, imprima las N li\u0301neas, cada una con un nu\u0301mero en base 10 que es pali\u0301ndromo cuando se expresa en al menos dos bases 2. . 10. Los nu\u0301meros deben estar impresos del menor al mayor. ENTRADA Y SALIDA DE EJEMPLO\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014- | | input13 25| | output262728| | end# # # # Mario Cruz ( Colombia) y Hugo Rickeboer ( Argentina)",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "math",
      "strings",
      "implementation",
      "string suffix structures"
    ],
    "id": 2192
  },
  {
    "title": "El misterio de la ecuacion",
    "url": "https://omegaup.com/arena/problem/ElMisterioDeLaEcuacion",
    "history": "Fuente: [ Abierto Nacional de Programacio\u0301n ANTS 2009] ( http: / / www. anpa. com. mx/ ) - RepechajeHistoria\u2014\u2014\u2013Juanito ha entrado a la primaria y las reglas parecen ser muy estrictas. Por ejemplo en su clase de matema\u0301ticas su maestra le ha pedido que debe escribir las ecuaciones con dos colores de tinta ( azul y rojo) . Pero Juanito perdio\u0301 su pluma azul entonces ha decidido copiar solo los nu\u0301meros de sus ecuaciones y despue\u0301s reconstruir las ecuaciones. Se ha dado cuenta que no es una tarea tan fa\u0301cil y ha solicitado tu ayuda. Los signos que le faltan a las ecuaciones son 5 ( suma, resta, divisio\u0301n, multiplicacio\u0301n e igualdad) .",
    "input": "\u2014\u2013Cada caso contiene 3 nu\u0301meros positivos menores que 1000 separados por espacios.",
    "output": "\u2014\u2014Para cada caso imprime la ecuacio\u0301n va\u0301lida, que incluya un signo de igualdad. Se garantiza que existe al menos una solucio\u0301n, en caso de mu\u0301ltiples soluciones cualquiera es va\u0301lida. Sample Input/ Output\u2014\u2014\u2014\u2014\u2014\u2014- | | input5 6 11 2 3| | output5 = 6 - 11 + 2 = 3| | end",
    "note": "",
    "topics": [
      "math",
      "brute force"
    ],
    "id": 2189
  },
  {
    "title": "1979",
    "url": "https://omegaup.com/arena/problem/1979",
    "history": "Shakedown 1979Cool kids never have the timeOn a live wire right up off the streetYou and I should meet* * \u2014 Smashing Pumpkins, 1979* * Billy, as well as most of you, was born in the 80' s. The 2980' s, that is. He likes his decade so much, he wants to know how many years in a given year range correspond to some specific decade. For instance, if he wanted to know how many 80' s years have happened from 1986 through 2082, the answer would be 7: 1986, 1987, 1988, 1989, 2080, 2081, and 2082. Given a closed interval representing years, find out how many years are in a given decade.",
    "input": "\u2014\u2013The first line of the input consists of a single number, * N* ( 1 \u2264 * N* \u2264 50) , the number of test cases to follow. Each test case consists of a single line that contains 3 numbers, * d* ( * d* \u2208 00, 10, 20, 30, 40, 50, 60, 70, 80, 90) , * a* , and * b* ( 1 \u2264 * a* \u2264 * b* \u2264 10< sup> 6< / sup> ) .",
    "output": "\u2014\u2014For each test case, you must print a line \" Case * c* : * y* \" , * c* being the consecutive case number, and * y* being the number of years between * a* and * b* ( inclusive) that are in the decade given by * d* . Sample Input/ Output\u2014\u2014\u2014\u2014\u2014\u2014- | | input180 1986 2082| | outputCase 1: 7| | end",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 2183
  },
  {
    "title": "Empacando recipientes ecologicos",
    "url": "https://omegaup.com/arena/problem/EmpacandoRecipientesEcologicos",
    "history": "Empacar en recipientes, o la colocacio\u0301n de objetos de cierto peso dentro de diferentes recipientes tiene restricciones, es un problema historicamente interesante. Algunos problemas de empaque en recipientes no son de resolucio\u0301n de fuerza bruta, pero pueden ser tratados con programacio\u0301n dina\u0301mica o solucionados optimamente con me\u0301todos heuri\u0301sticos. En este problema debes resolver un problema de empaquetado en recipientes que se trata de reciclado de vidrio. # # # El problemaPara reciclar vidrio se requiere que el vidrio sea separado por colores dentro de una o tres categori\u0301as: vidrio cafe\u0301, vidrio verde, y vidrio claro. En este problema tienes tres depo\u0301sitos, cada uno conteniendo un especi\u0301fico nu\u0301mero de botellas cafe\u0301s, verdes y claras, con el propo\u0301sito de ser recicladas, las botellas necesitan desplazarse a fin de que cada depo\u0301sito contenga botellas de un solo color. El problema es para minimizar el nu\u0301mero de botellas que tienen que ser movidas. Puedes asumir que el problema esta en minimizar el nu\u0301mero de movimientos entre cajas. Para la resolucio\u0301n de este problema, cada recipiente tiene capacidad infinita y la u\u0301nica restriccio\u0301n es el mover las botellas a fin de que cada recipiente contenga botellas de un solo color. El nu\u0301mero total de botellas nunca excedera\u0301 2^ 31. # # # La entradaLa entrada consiste de una serie de li\u0301neas, donde cada li\u0301nea contiene 9 enteros. Los primeros tres nu\u0301meros en una li\u0301nea representan el nu\u0301mero de botellas cafe\u0301s, verdes y claras ( respectivamente) en el recipiente nu\u0301mero 1, los siguientes tres representan el nu\u0301mero de botellas cafe\u0301s, verdes y claras ( respectivamente) en el recipiente nu\u0301mero 2, y los u\u0301ltimos tres representan el nu\u0301mero de botellas cafe\u0301s, verdes y claras ( respectivamente) en el empaque nu\u0301mero 3. Por ejemplo: la li\u0301nea 10 15 20 30 12 8 15 8 31 indica que estan 20 botellas claras en el empaque nu\u0301mero 1, 12 botellas verdes en el empaque nu\u0301mero 2 y 15 botellas cafe\u0301s en el empaque nu\u0301mero 3. Los enteros en cada li\u0301nea pueden estar separados por uno o ma\u0301s espacios. Tu programa debe procesar todas las li\u0301neas en el archivo de entrada. # # # La salidaPor cada li\u0301nea de entrada tiene que haber una li\u0301nea de salida indicando que colores de botellas van en que empaque para minimizar el nu\u0301mero de movientos de las botellas. Debes tambie\u0301n imprimir el mi\u0301nimo nu\u0301mero de movimientos de botellas. Tu salida debe consistir en una cadena de los tres caracteres en mayu\u0301sculas ' G' , ' B' , ' C' ( representado los colores verde, cafe\u0301 y claro) representando el color asociado con cada empaque. El primer caracter de la cadena representa el color asociado con el primer empaque, el segundo caracter de la cadena representa el color asociado con el segundo empaque, y el tercer caracter representa el color asociado con el tercer empaque. El entero indicando el mi\u0301nimo nu\u0301mero de movimiento de botellas debe seguir a la cadena. Si hay ma\u0301s de un orden de empaques cafe\u0301s, verdes y claros que produce el mismo nu\u0301mero de movimientos entonces se debe imprimir la primera cadena ordenada alfabe\u0301ticamente. | | input1 2 3 4 5 6 7 8 95 10 5 20 10 5 10 20 10| | outputBCG 30CBG 50| | end",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "brute force",
      "math",
      "implementation"
    ],
    "id": 2179
  },
  {
    "title": "Media Armonica",
    "url": "https://omegaup.com/arena/problem/MediaArmonica",
    "history": "La media armo\u0301nica ( HN) de N nu\u0301meros a1, a2, a3, . . . an- 1, an se define asi\u0301: ! [ ] ( img/ media1. png) Asi\u0301 que la media armo\u0301nica de cuatro nu\u0301meros a, b, c, d se define como: ! [ ] ( img/ media2. png) En este problema tu tarea es muy simple: dados N ( 0 < N < = 10) enteros, debes encontrar su media armo\u0301nica.",
    "input": "\u2014\u2014- La primer li\u0301nea de la entrada contiene un entero S ( 0 < S < = 500) , que indica el nu\u0301mero de casos de prueba. Cada una de las siguientes S li\u0301neas contiene un conjunto de entrada. Cada conjunto comienza con un entero N ( 0 < N < = 10) , que indica cua\u0301ntos nu\u0301vmeros hay en el conjunto. Este nu\u0301mero esta\u0301 seguido por N enteros a1, a2, a3, . . . an ( 0 < ai < = 100) .",
    "output": "\u2014\u2014Para cada caso de prueba despliega la li\u0301nea \" Caso k: H\" , donde H es la media armo\u0301nica expresada como un nu\u0301mero de punto flotante redondeado al diezmile\u0301simo ma\u0301s cercano ( 4 decimales de precisio\u0301n) y k corresponde el nu\u0301mero de caso de prueba ( esta\u0301n numerados secuencialmente, empezando por 1) . Entrada y salida de prueba\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2013| | input24 1 2 3 44 2 2 3 1| | outputCaso 1: 1. 9200Caso 2: 1. 7143| | end# # # # The 2005 ACM ASIA Programming Contest # 150; Dhaka Site1er Concurso Local de Programacion del Club de Progra",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 2172
  },
  {
    "title": "Viernes Trece",
    "url": "https://omegaup.com/arena/problem/ViernesTrece",
    "history": "* * \u00bfQue un viernes caiga 13 es realmente un evento poco usual? * * Esto es, \u00bfel 13 del mes cae en un Viernes menos frecuentemente que cualquier otro di\u0301a de la semana? Para responder esta pregunta, escriba un programa que calculara\u0301 la frecuencia con que el 13 de cada mes cae en Domingo, Lunes, Martes, Mie\u0301rcoles, Jueves, Viernes, y Sa\u0301bado sobre un peri\u0301odo dado de N an\u0303os. El peri\u0301odo de tiempo a examinar sera\u0301 desde el 1 de Enero de 1900 al 31 de Diciembre de 1900+ N+ 1 para un nu\u0301mero dado de an\u0303os N. N es un nu\u0301mero no negativo y no excedera\u0301 400. Hay unos pocos hechos que usted debe conocer antes de resolver este problema: - El 1 de Enero de 1900 fue un Lunes. - Septiembre, Abril, Junio y Noviembre tienen 30 di\u0301as, todos los dema\u0301s tienen 31 excepto Febrero el cual tiene 28 di\u0300as excepto en los an\u0303os bisiestos los cuales tienen 29- Cada an\u0303o divisible por 4 es un an\u0303o bisiesto ( 1992= 4* 498, por lo tanto 1992 es un an\u0303o bisiesto, pero 1990 no es un an\u0303o bisiesto) - La anterior regla no se cumple para an\u0303os de siglo. Los an\u0303os de siglo divisibles por 400 son bisiestos, los otros no. Por lo tanto los an\u0303os de siglo 1700, 1800, 1900 y 2100 no son bisiestos, pero 200 si es bisiesto. * * No use ninguna funcio\u0301n de fecha en su lenguaje de programacio\u0301n. Tampoco precalcule las respuestas, por favor. * *",
    "input": "Una linea con un entero C, le siguen C lineas con los enteros N. # # # FORMATO DE SALIDAC lineas. Donde cada una contiene siete enteros separados por espacio en una li\u0301nea. Estos enteros representan el nu\u0301mero de veces que el 13 cae en Sa\u0301bado, Domingo, Lunes, Martes, . . , Viernes| | input120| | output36 33 34 33 35 35 34| | endFUENTE: USACO TRAINIG",
    "output": "",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 2169
  },
  {
    "title": "Tu viaje esta aqui.",
    "url": "https://omegaup.com/arena/problem/TuViajeEstaAqui",
    "history": "Es un hecho bien conocido que detra\u0301s de cada buen cometa hay un OVNI. Estos OVNIs vienen frecuentemente a reclutar apoyos de aqui\u0301 en la tierra. Desdichadamente, ellos solamente tienen espacio para recoger a un grupo de seguidores en cada viaje. Ellos, sin embargo, permiten que los grupos sepan de antemano cua\u0301les sera\u0301n recogidos por cada cometa usando un me\u0301todo inteligente: ellos eligen un nombre para el cometa, el cual, junto con el nombre del grupo, puede ser usado para determinar si es el turno para un grupo particular para irse ( \u00bfQuie\u0301n piensas que pone los nombres de los cometas? ) . Los detalles del me\u0301todo de determinacio\u0301n son dados a continuacio\u0301n; tu trabajo es escribir un programa el cual tome el nombre de un grupo y el nombre de un cometa y luego determine si el grupo deberi\u0301a irse con el OVNI detra\u0301s de ese cometa o no. Tanto el nombre del grupo y el nombre del cometa son convertidos en un nu\u0301mero de la siguiente manera: el nu\u0301mero final es simplemente el producto de todas las letras en el nombre, donde \" A\" es 1 y \" Z\" es 26. Por ejemplo, el grupo \" USACO\" seri\u0301a 21 * 19 * 1 * 3 * 15 = 17955. Si el nu\u0301mero del grupo mo\u0301dulo 47 es el mismo que el nu\u0301mero del cometa mo\u0301dulo 47, entonces tu\u0301 necesitas decirle al grupo \u00a1Ali\u0301stense\u00a1 ( Recuerda que \" a mod b\" es el residuo despue\u0301s de dividir a por b; 34 mod 10 es 4. ) Escribe un programa el cual lea el nombre de un cometa y el nombre de un grupo y encuentre si de acuerdo al me\u0301todo antes descrito el grupo debe ir en el OVNI detra\u0301s de ese cometa y en ese caso imprima \" GO\" , y si no \" STAY\" . Los nombres de los grupos y de los cometas sera\u0301n cadenas de letras mayu\u0301sculas sin espacios ni caracteres de puntuacio\u0301n, hasta de 6 caracteres de longitud. Ejemplos: | | inputCOMETQHVNGATABSTARUSACO| | outputGOSTAY| | end",
    "input": "La primer linea contendra un entero ` n` menor a 20. Le siguen ` n` casos de prueba, los cuales estar formados por dos lineas cada uno. La primer linea es una cadena de caracteres en mayu\u0301scula de longitud 1. . 6 que es el nombre del cometa. Y la segunda es una cadena de caracteres en mayu\u0301scula de longitud 1. . 6 que es el nombre del grupo.",
    "output": "La salida contendra ` n` lineas conteniendo la palabra \" GO\" o la palabra \" STAY\" . | | inputCOMETQHVNGATABSTARUSACO| | outputGOSTAY| | endFUENTE: USACO TRAINING",
    "note": "",
    "topics": [
      "implementation",
      "strings",
      "math"
    ],
    "id": 2168
  },
  {
    "title": "Contando uno por uno",
    "url": "https://omegaup.com/arena/problem/ContandoUnoPorUno",
    "history": "Dados dos numeros, ` a` y ` b` , donde siempre ` a < = b` , contar cuantos 1' s hay en una cuenta progresiva desde ` a` hasta ` b` ( incluyendo ` a` y ` b` ) . Es decir si ` a = 5` y ` b = 11` , la respuesta seria 3. Hay un uno en \" 10\" , y hay dos unos en \" 11\" . El archivo de entrada contendra un entero ` n` , donde ` 0 < n < 1000` , que indicara los casos de prueba siguientes. Las siguentes ` n` lineas contendran dos enteros separados por un espacio indicando a y b respectivamente. La salida seran ` n` lineas conteniendo el numero de unos que se aparecen en la cuenta de a hasta b. | | input30 12 90 10| | output102| | end",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 2164
  },
  {
    "title": "KBN1 Deja Dos trompos",
    "url": "https://omegaup.com/arena/problem/KBN1-Deja-Dos-trompos",
    "history": "Karel inicia con dos trompos en su mochila de trompos o zumbadores, y su tarea es dejar los dos tromppos en la misma esquina en donde inicia su tarea, y ahi apagarse. # Consideraciones* Karel inicia con dos trompos en su mochila. * No se conoce la direccion u orientacion inicial de Karel. * No importa la direccion u orientacion final de Karel. # Mundo de Entrada! [ Entrada] ( img1. png) # Mundo de Salida! [ Salida] ( img2. png)",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 2159
  },
  {
    "title": "2 Grandote",
    "url": "https://omegaup.com/arena/problem/pow-2",
    "history": "La tarea a realizar es simple, recibira\u0301s un u\u0301nico entero n, tendra\u0301s que calcular la suma de las potencias de 2 hasta 2^ n incluyendo 2^ 0, e imprimirla.",
    "input": "Un u\u0301nico entero no negativo n.",
    "output": "La suma de las potencias de 2 desde 2^ 0 hasta 2^ n.",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 2148
  },
  {
    "title": "Carrera de Larga Distancia",
    "url": "https://omegaup.com/arena/problem/Carrera-de-Larga-Distancia",
    "history": "Bessie esta\u0301 entrenando para su pro\u0301xima carrera corriendo en un camino que incluye colinas de tal manera que ella estara\u0301 preparada para cualquier terreno. Ella ha planeado un camino recto y quiere correr tan lejos como ella puede, pero ella debe estar de regreso en la granja dentro de < b> M< / b> segundos. Todo el camino que ella ha elegido tiene T unidades de longitud y consiste de porciones de la misma longitud de subida, plano o bajada. En los datos de entrada describe un segmento de camino i con un solo cara\u0301cter S_ i que es U, F, o D, indicando respectivamente subida, plano o bajada. Bessie gasta U segundos para correr una unidad de camino en subida, F segundos para correr una unidad de camino plano, y D segundos para una unidad de camino en bajada. Note que, cuando regresa a casa, los caminos en subida se vuelven en bajada y los caminos en bajada se vuelven en subida. Encuentre la distancia ma\u0301s lejana a la cual Bessie puede llegar desde la granja y todavi\u0301a regresar a tiempo.",
    "input": "* Li\u0301nea 1: Cinco enteros separados por espacios: M, T, U, F, y D* Li\u0301neas 2. . T+ 1: La li\u0301nea i+ 1 describe un segmento de camino con una sola letra por renglo\u0301n.",
    "output": "* Li\u0301nea 1: Un solo entero que es la distancia ma\u0301s lejana ( nu\u0301mero de unidades) que Bessie puede hacer desde la granja y regresar a tiempo.",
    "note": "",
    "topics": [
      "strings",
      "implementation",
      "math"
    ],
    "id": 2085
  },
  {
    "title": "Volumen de la Casa",
    "url": "https://omegaup.com/arena/problem/Volumen-de-la-Casa",
    "history": "Juanito esta intentando construir su nueva casa, se sabe e\u0301l es bastante pra\u0301ctico por lo que la forma de su casa sera\u0301 la de un prisma rectangular. # ProblemaComo Juanito es realmente malo en matema\u0301ticas te dio a la tarea de calcular el volumen que tendra\u0301 al finalizar la construccio\u0301n.",
    "input": "En la primera y u\u0301nica linea se te dara\u0301n 3 enteros con el valor del ancho, largo y alto de su casa.",
    "output": "Un so\u0301lo entero que representa el volumen de su hogar.",
    "note": "",
    "topics": [
      "math",
      "brute force"
    ],
    "id": 1993
  },
  {
    "title": " El subterr\u00e1neo camino de Shamash",
    "url": "https://omegaup.com/arena/problem/subterraneo-camino-shamash",
    "history": "En su bu\u0301squeda de Utanapi\u0301shtim, Gilgamesh llego\u0301 a las montan\u0303as Mashu. Al llegar, los hombres escorpio\u0301n le informaron que tendri\u0301a que tomar el camino de Shamash, un largui\u0301simo camino subterra\u0301neo que medi\u0301a P pasos. Gilgamesh decidio\u0301 anotar esa cantidad, por supuesto, en numerales babilo\u0301nicos. Estos forman un sistema posicional base 60 que so\u0301lo usa dos si\u0301mbolos para denotar cualquier cantidad de 0 a 59: una barra ( I) para denotar el uno y una cun\u0303a ( L) para denotar el diez. Por ejemplo, el 42 se representa como LLLLII. Adicionalmente, para los nu\u0301meros ma\u0301s grandes se usa un separador ( . ) . Por ejemplo, como 2014 = 33* 60+ 34, entonces se representa como LLLIII. LLLIIII en babilonio. Escribe un programa que lea P y que lo escriba en este sistema babilonio.",
    "input": "Un entero P. Puedes suponer que 1 \u2264 P \u2264 2, 000, 000, 000.",
    "output": "El entero P escrito en el sistema babilonio.",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 1985
  },
  {
    "title": "pb Sumando",
    "url": "https://omegaup.com/arena/problem/pb-Sumando",
    "history": "# ProblemaSe tiene un matriz cuadrada de taman\u0303o \u201cn\u201d y se requiere saber cua\u0301nto suma cada columna.",
    "input": "En el primer renglo\u0301n un valor \u201cn\u201d indicando el taman\u0303o de la matriz donde 1< = n< = 1000 y en los siguientes \u201cn\u201d renglones habra\u0301n \u201cn\u201d valores correspondientes los valores de cada renglo\u0301n de la matriz donde 1< = V< = 1000.",
    "output": "Un renglo\u0301n con \u201cn\u201d cantidades, cada cantidad representa la sumatoria de cada columna de la matriz, el primer valor corresponde a la columna 1, el segundo a la columna 2 , . . . y el u\u0301ltimo valor corresponde a la columna \u201cn\u201d. # ConsideracionesTu programa se evaluara\u0301 con varios casos de prueba. # Ejemplos| | input31 2 33 5 67 8 9| | output11 15 18| | descriptionCase # 1: | | input43 2 4 32 3 3 27 8 5 31 1 1 1| | output13 14 13 9| | descriptionCase # 2: | | end",
    "note": "",
    "topics": [
      "math",
      "implementation",
      "matrices"
    ],
    "id": 1963
  },
  {
    "title": "pb Frecuencias",
    "url": "https://omegaup.com/arena/problem/pb-Frecuencias",
    "history": "Cierta escuela realiza cuestionarios para conocer al profesor favorito de los alumnos. Y lo realiza de la siguiente manera; a cada profesor se le asigna un nu\u0301mero posteriormente a cada alumno se le pregunta cual es su profesor favorito, posteriormente, se calcula una tabla de frecuencia indicando en cada profesor cual es la cantidad de alumnos que lo eligieron. # ProblemaEscribe un programa que ayude a la escuela a escribir la tabla de frecuencias.",
    "input": "En la primera li\u0301nea el nu\u0301mero \u201cP\u201d que indica la cantidad de profesores que tiene la escuela donde 1< = P < = 100 y el nu\u0301mero \u201cn\u201d que indica la cantidad de alumnos en la escuela donde 1< = n< = 1000. en la siguiente li\u0301nea habra\u0301n \u201cn\u201d nu\u0301meros que representan el nu\u0301mero de profesor favorito \u201cF\u201d de cada alumno donde 1< = F< = P.",
    "output": "Debera\u0301 haber \u201cP\u201d cantidad de li\u0301neas y en cada una dos nu\u0301meros separados por un guio\u0301n, el primer nu\u0301mero sera\u0301 el nu\u0301mero del profesor y el segundo nu\u0301mero la cantidad de alumnos que lo eligieron. # ConsideracionesTu programa se evaluara\u0301 con varios casos de prueba. # Ejemplos| | input4 101 1 2 1 1 2 3 2 3 4| | output1- 42- 33- 24- 1| | descriptionCase # 1: | | input4 81 2 4 1 2 4 1 2| | output1- 32- 33- 04- 2| | descriptionCase # 2: | | end",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 1962
  },
  {
    "title": "pb Cuadrado",
    "url": "https://omegaup.com/arena/problem/pb-Cuadrado",
    "history": "# Descripcio\u0301n. A continuacio\u0301n te mostramos un giro de 90 grados a la derecha de una matriz de 2 por 2 cuyos valores son: Matriz original1 23 4Matriz Girada 90\u00b0 a la derecha3 14 2# ProblemaDada una matriz cuadrada de taman\u0303o \u201cn\u201d , debes hacer que tu programa la gire 90 grados a la derecha.",
    "input": "En la primera li\u0301nea el valor \u201cn\u201d indicando el taman\u0303o de la matriz donde 1< = n< = 1000, en los siguientes \u201cn\u201d renglones habra\u0301n \u201cn\u201d valores de la matriz separados por un espacio.",
    "output": "\u201cn\u201d renglones cada renglo\u0301n con \" n\" valores mostrando la matriz girada 90 grados. ConsideracionesTu programa se evaluara\u0301 con varios casos de prueba",
    "note": "",
    "topics": [
      "math",
      "implementation",
      "matrices"
    ],
    "id": 1961
  },
  {
    "title": "pb Bardeando",
    "url": "https://omegaup.com/arena/problem/pb-Bardeando",
    "history": "Se tiene un conjunto de \u201cn\u201d trozos de malla ciclo\u0301nica y un terreno de peri\u0301metro \u201cP\u201d el terreno es cuadrado. # ProblemaDebes escribir un programa que nos diga cua\u0301ntos metros de malla ciclonica nos hace falta para poder bardear el terreno.",
    "input": "En la primera li\u0301nea dos nu\u0301meros \u201cP\u201d y \" n\" , donde \" P\" representa el peri\u0301metro del terreno con un rango de valores de 1< = P < = 2, 000, 000, 000 y \u201cn\u201d representa la cantidad de trozos de malla ciclo\u0301nica que tenemos, donde 1< = n< = 100, 000. En las siguientes \u201cn\u201d li\u0301neas es el taman\u0303o de cada trozo de malla que tenemos. La suma de todos los trozos siempre sera\u0301 menor a 2147483648.",
    "output": "Un u\u0301nico valor entero indicando los metros de malla que nos hacen falta para bardear el terreno. # Ejemplos| | input100 3252010| | output45| | descriptionCaso # 1| | input100 210002000| | output0| | descriptionCaso # 2| | input21 120| | output1| | descriptionCaso # 3| | end# ConsideracionesTu programa se ejecutara con varios casos de prueba.",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 1947
  },
  {
    "title": "Los Caminos de la Vida",
    "url": "https://omegaup.com/arena/problem/Los-Caminos-de-la-Vida",
    "history": "En tu escuela, han organizado un viaje de estudios hacia una tierra muy lejana, y esta\u0301n planeando una ruta para llegar a su destino, y te han encargado a ti que busques la ruta ma\u0301s o\u0301ptima para el viaje, es decir, la que atraviese por la menor cantidad de casetas de cobro posibles, y tenga el camino ma\u0301s corto. Te han proporcionado un mapa, el cual esta dividido en 100 secciones cuadradas del mismo taman\u0303o, las cuales esta\u0301n enumeradas del 0 al 99, y el punto de salida sera\u0301 desde la seccio\u0301n 0. Algunas de las secciones tienen una caseta de cobro, pero en las secciones alrededor de una seccio\u0301n con caseta, nunca hay otra caseta. Adema\u0301s, te diste cuenta de que por alguna extran\u0303a razo\u0301n, en las secciones que esta\u0301n en la orilla del mapa, no tienen casetas.",
    "input": "En la primer linea, recibira\u0301s el nu\u0301mero de seccio\u0301n a donde quieren llegar, en la segunda linea un numero N indicando la cantidad de casetas que hay en el mapa, y el la u\u0301ltima li\u0301nea, N nu\u0301meros indicando las secciones en donde se encuentran las casetas.",
    "output": "Debera\u0301s imprimir un u\u0301nico nu\u0301mero, que indique la cantidad de secciones por las cuales debera\u0301s pasar, eligiendo el camino que atraviese por la menor cantidad de casetas de cobro. Si existen varios caminos con la menor cantidad de casetas, se tomaran como respuesta correcta cualquiera que tenga la menor longitud. # Ejemplos| | input74511 24 32 61 64| | output11| | description! [ Ejemplo1] ( https: / / programacionitz. files. wordpress. com/ 2014/ 10/ caso1. png) | | input451111 23 27 35 42 54 57 61 73 75 88| | output9| | description! [ Ejemplo2] ( https: / / programacionitz. files. wordpress. com/ 2014/ 10/ caso2. png) | | end# Consideraciones* Solo puedes pasar de una seccio\u0301n a otra hacia el este, oeste, norte o sur, nunca en diagonal. * Se considera que pasaste por una caseta, si en algu\u0301n momento del trayecto, te encuentras sobre una seccio\u0301n con caseta. * Siempre habra\u0301 al menos una caseta de cobro en el mapa.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 1934
  },
  {
    "title": "pb Tri\u00e1ngulo",
    "url": "https://omegaup.com/arena/problem/pb-Triangulo",
    "history": "Un tria\u0301ngulo es formado por 3 segmentos ( con valor entero) de recta unidos por sus extremos, sin embargo no todas las combinaciones de 3 segmentos pueden formar un tria\u0301ngulo. # ProblemaEscriba un programa que dados 3 nu\u0301meros que representan 3 segmentos de rectas, diga si pueden formar un tria\u0301ngulo recta\u0301ngulo.",
    "input": "En la primera li\u0301nea 3 nu\u0301meros \u201ca\u201d, \u201cb\u201d y \u201cc\u201d representando las longitudes de 3 segmentos de recta en un rango de entre 1 y 32, 000.",
    "output": "Una sola li\u0301nea en donde si es posible generar un tria\u0301ngulo recta\u0301ngulo debes imprimir la hipotenusa, el cateto mayor y el cateto menor y si no es posible formar un tria\u0301ngulo recta\u0301ngulo imprime la palabra \u201cimposible\u201d. # ConsideracionesTu programa se evaluara\u0301 con varios casos de prueba, para cada caso de prueba ( entrada) # Ejemplos| | input1 1 1| | outputimposible| | descriptionCaso # 1| | input3 4 5| | output5 4 3| | descriptionCaso # 2| | end# ConsideracionesTu programa se ejecutara con varios casos de prueba. # TipsEl teorema de Pita\u0301goras la hipotenusa es igual a la rai\u0301z cuadrada de la suma de los cuadrados de sus catetos. \u00bfEs necesario hacer el ca\u0301lculo de la rai\u0301z cuadrada?",
    "note": "",
    "topics": [
      "math",
      "implementation",
      "sortings"
    ],
    "id": 1932
  },
  {
    "title": "pb Figuras Rectangulares",
    "url": "https://omegaup.com/arena/problem/pb-Figuras-Rectangulares",
    "history": "Tenemos un conjunto de cuadrados y recta\u0301ngulos cuyos medidas de sus diferentes lados son cantidades enteras y mayores a 1 y , si tenemos el a\u0301rea de la figura, es posible que sea un cuadrado o un recta\u0301ngulo. # ProblemaConstruye un programa que nos ayude a resolver este problema ( dada el a\u0301rea de una figura determinar si es cuadrado o recta\u0301ngulo) , la lectura la debes hacer de la entrada esta\u0301ndar ( teclado) y la escritura se debe hacer a la salida esta\u0301ndar ( pantalla) .",
    "input": "La primera li\u0301nea contendra\u0301 un nu\u0301mero \" N\" entre 1 y 1, 000, 000, 000, representando el a\u0301rea.",
    "output": "Una sola li\u0301nea indicando la figura que se puede formar, si el a\u0301rea puede formar un cuadrado debes imprimir la palabra \u201ccuadrado\u201d si el a\u0301rea puede formar un recta\u0301ngulo, debes imprimir la palabra \u201crectangulo\u201d y si el a\u0301rea puede formar ambos debe imprimir la palabra \u201cambos\u201d ( note no hay acentos ni mayusculas) , en caso de que no se pueda formar un cuadrado o recta\u0301ngulo escriba \" ninguno\" # Ejemplos| | input9| | outputcuadrado| | input6| | outputrectangulo| | input36| | outputambos| | end# ConsideracionesTu programa se ejecutara con varios casos de prueba. # Tips* A\u0301rea de un cuadrado = lado * lado* A\u0301rea de un recta\u0301ngulo= ( base * altura ) * \u00bfHasta que valor con respecto a \u201cN\u201d debo probar ? * Observa que solo debes probar desde 2 hasta rai\u0301z de \" N\" , si un nu\u0301mero es divisible entre 2 significa que tambie\u0301n es divisible entre N/ 2 por tanto si probamos con el numero 2, estamos al mismo tiempo probando con el numero N/ 2.",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 1930
  },
  {
    "title": "Abundancia de palabras",
    "url": "https://omegaup.com/arena/problem/Abundancia-de-Palabras",
    "history": "Recibira\u0301s un string que contiene varias veces \u201cCodingRush2014\u201d y varios espacios. Debes decir cua\u0301ntas veces aparece \u201cCodingRush2014\u201d.",
    "input": "Un string en una li\u0301nea.",
    "output": "Cua\u0301ntas veces aparece \" CodingRush2014\" en el string. # Ejemplos| | inputCodingRush2014 CodingRush2014 CodingRush2014 CodingRush2014| | output4| | end# Li\u0301mitesEl string no tiene ma\u0301s de 10, 000 caracteres.",
    "note": "",
    "topics": [
      "implementation",
      "math",
      "strings"
    ],
    "id": 1914
  },
  {
    "title": "N\u00fameros pitag\u00f3ricos",
    "url": "https://omegaup.com/arena/problem/Numeros-pitagoricos",
    "history": "Es bien conocido que las ternas pitago\u0301ricas son aquellas donde la suma de los cuadrados de dos de los numeros, te da el tercero al cuadrado. \u00bfPodri\u0301as identificar una terna pitago\u0301rica?",
    "input": "Una sola linea. Tres nu\u0301meros enteros, a, b, c tales que 0 < = a, b, c < = 1000.",
    "output": "Una sola palabra, en una linea, Si o No si la terna es pitago\u0301rica o no.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 1900
  },
  {
    "title": "N\u00fameros de cinco d\u00edgitos",
    "url": "https://omegaup.com/arena/problem/M-Numeros-de-cinco-digitos",
    "history": "# Descripcio\u0301n del problema\u00bfCua\u0301ntos enteros de 5 di\u0301gitos no repetidos se pueden formar con nu\u0301merostomados del conjunto { 0, 1, 2, 3, 4, 5, 6} . \u00bfCua\u0301ntos de estos nu\u0301meros sonpares? \u00bfCua\u0301ntos de estos nu\u0301meros son impares?",
    "input": "No se requieren entradas. Es un problema de \" solo salida\" . Solamente vasa escribir tu respuesta como salida de la forma que se indica acontinuacio\u0301n. No necesitas escribir ningu\u0301n co\u0301digo ni programar.",
    "output": "La respuesta del problema es tu salida, y es lo que vas a escribir en lapantalla que aparecera\u0301. Para enviar tu respuesta sigue los siguientes pasos: 1. Da click en donde dice \u201c nuevo envi\u0301o \u201c. 2. Selecciona como lenguaje \u201csolo salida\u201c. 3. Escribe tu respuesta en la ventana indicando los tres nu\u0301meros de turespuesta de la siguiente forma: T _ total de nu\u0301meros que se pueden formar_ P _ nu\u0301meros pares_ I _ nu\u0301meros impares_ 4. Da click en donde dice \u201cenviar\u201c.",
    "note": "",
    "topics": [
      "combinatorics",
      "implementation",
      "math"
    ],
    "id": 1887
  },
  {
    "title": "Saludos de mano",
    "url": "https://omegaup.com/arena/problem/M-Saludos-de-mano",
    "history": "# Descripcio\u0301n del problemaEn una fiesta se encuentran 5 amigos, si cada uno saluda de mano a losotros, \u00bfcua\u0301ntos saludos de mano se realizaron?",
    "input": "No se requieren entradas. Es un problema de \" solo salida\" . Solamente vasa escribir tu respuesta como salida de la forma que se indica acontinuacio\u0301n. No necesitas escribir ningu\u0301n co\u0301digo ni programar.",
    "output": "La respuesta del problema es tu salida, y es lo que vas a escribir en lapantalla que aparecera\u0301. Para enviar tu respuesta sigue los siguientes pasos: 1. Da click en donde dice \u201c nuevo envi\u0301o \u201c. 2. Selecciona como lenguaje \u201csolo salida\u201c. 3. Escribe tu respuesta en la ventana indicando u\u0301nicamente el resultadode tu respuesta. 4. Da click en donde dice \u201cenviar\u201c.",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 1884
  },
  {
    "title": "Faena Triangular",
    "url": "https://omegaup.com/arena/problem/Faena-Triangular",
    "history": "En clase de geometri\u0301a te contaron acerca de los tria\u0301ngulos recta\u0301ngulos. Resulta que Pita\u0301goras entre otras cosas encontro\u0301 una relacio\u0301n entre * los cuadrados* de las longitudes de los lados de un tria\u0301ngulo recta\u0301ngulo. Si un tria\u0301ngulo recta\u0301ngulo tiene catetos con longitud a y b e hipotenusa c, la relacio\u0301n entre ellos es a^ 2+ b^ 2= c^ 2. Para aprovechar tus nuevos conocimientos, decidiste escribir un programa que te ayude a calcular el cuadrado de la longitud de la hipotenusa.",
    "input": "Dos enteros, a y b.",
    "output": "El cuadrado de la longitud de la hipotenusa ( es decir, c^ 2) del tria\u0301ngulo recta\u0301ngulo con catetos a y b.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 1861
  },
  {
    "title": "Desenterrando el Tesoro",
    "url": "https://omegaup.com/arena/problem/Desenterrando-el-tesoro",
    "history": "Como el buen pirata que eres, tienes un mapa del tesoro representado como una cuadri\u0301cula de N \u00d7 N. Te encuentras en tu guarida ( esquina superior izquierda) y tu objetivo es llegar al tesoro ( esquina inferior derecha) antes que cualquier otro pirata. Sin embargo, no sabes cua\u0301nta energi\u0301a requerira\u0301 tu viaje, ya que cada que avanzas una casilla pierdes una unidad de energi\u0301a. Tu tarea es, dado el mapa del tesoro pirata, determinar el mi\u0301nimo de energi\u0301a inicial V necesaria para llegar al tesoro con al menos M unidades de energi\u0301a. La ruta que tomara\u0301s para llegar al tesoro esta\u0301 marcada por 0' s en el mapa. Se te asegura que la ruta no es ambigua, es decir, * * en ningu\u0301n momento tendra\u0301s que elegir* * entre dos opciones para continuar tu camino.",
    "input": "En la primer li\u0301nea dos enteros, N y M, que representan las dimensiones del mapa y la energi\u0301a con la que quieres llegar. Despue\u0301s N li\u0301neas. Cada li\u0301nea contiene N 0' s o 1' s que representan el mapa y la ruta que tomara\u0301s.",
    "output": "V, un entero que representa la energi\u0301a mi\u0301nima inicial para llegar al tesoro con al menos M unidades de energi\u0301a.",
    "note": "",
    "topics": [
      "implementation",
      "math",
      "matrices"
    ],
    "id": 1859
  },
  {
    "title": "Buscando Inversos",
    "url": "https://omegaup.com/arena/problem/Buscando-inversos",
    "history": "En la primera semana de ca\u0301lculo en el ITAM tu profesor demostro\u0301 que todo nu\u0301mero entero X tiene un inverso aditivo Y= - X tal que X+ Y= 0. Sin embargo, sigues estando inseguro de esto, por lo cual quieres calcular todos los inversos aditivos de los enteros desde A hasta B.",
    "input": "Dos enteros: A y B.",
    "output": "Los inversos aditivos de A hasta B, inclusive, uno por li\u0301nea.",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 1857
  },
  {
    "title": "Las hachas de Gilgamesh y Enkidu",
    "url": "https://omegaup.com/arena/problem/Las-hachas-de-Gilgamesh-y-Enkidu",
    "history": "Gilgamesh decide dirigirse al bosque de cedros, el lugar donde vive el feroz Humbaba. Su amigo Enkidu le recuerda que Humbaba esta\u0301 protegido por Adad, el dios de la tempestad. A lo que le responde Gilgamesh que no tenga miedo, pues ira\u0301n armados. Asi\u0301, fueron a la forja y pidieron a los fundidores que les hicieran N hachas de H talentos y M espadas de E talentos. \u00bfCua\u0301ntos talentos T pesara\u0301n en total las armas de Gilgamesh y Enkidu?",
    "input": "Cuatro enteros N, H, M y E. Puedes suponer que 1 \u2264 N, H, M, E \u2264 1000.",
    "output": "Un entero T.",
    "note": "",
    "topics": [
      "divide and conquer",
      "math"
    ],
    "id": 1837
  },
  {
    "title": "Generando rect\u00e1ngulos",
    "url": "https://omegaup.com/arena/problem/Generando-rectangulos",
    "history": "Escribe un programa que calcule los anchos y alturas de una coleccio\u0301n de n recta\u0301ngulos, de modo que se satisfagan las siguientes condiciones: - Las longitudes de los lados de los recta\u0301ngulos deben estar en el intervalo de 1 a 10000. - Si un recta\u0301ngulo tiene un lado de longitud l, ningu\u0301n otro recta\u0301ngulo puede tener un lado de la misma longitud. - Ningun recta\u0301ngulo puede tener el mismo peri\u0301metro que otro. Lo mismo debe ocurrir para el a\u0301rea. - La proporcio\u0301n de un recta\u0301ngulo, definida como max( ancho, alto) / min( ancho, alto) , debe ser u\u0301nica entre la coleccio\u0301n. - La diferencia de dimensiones de un recta\u0301ngulo, definida como max( ancho, alto) - min( ancho, alto) , debe ser u\u0301nica entre la coleccio\u0301n.",
    "input": "Un entero n en el intervalo de 0 a 1000.",
    "output": "El entero n seguido de n parejas de enteros que denotan el ancho y la altura de cada uno de los recta\u0301ngulos generados.",
    "note": "",
    "topics": [
      "math",
      "implementation",
      "brute force"
    ],
    "id": 1797
  },
  {
    "title": "Supermercado",
    "url": "https://omegaup.com/arena/problem/Supermercado",
    "history": "Juan Pe\u0301rez ha ido al supermercado varias veces en el an\u0303o y ha anotado en unalista los precios de los productos que ha comprado durante cada di\u0301a. Ayude a JuanPe\u0301rez a determinar el gasto que tuvo durante cada visita al supermercado.",
    "input": "La entrada consiste de un nu\u0301mero arbitrario de li\u0301neas de entrada, cada li\u0301nea contienelos precios de los productos que Juan Perez compro\u0301 durante una visita al supermercado. Cada li\u0301nea contendra\u0301 un nu\u0301mero arbitrario de enteros separados por uno o varios espaciosen blanco o tabulaciones.",
    "output": "La suma de los precios de cada li\u0301nea de la entrada. Puede suponer que la suma de la listade los precios cabe en un entero de 32 bits con signo.",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 1794
  },
  {
    "title": "El toro celeste de Ishtar",
    "url": "https://omegaup.com/arena/problem/toro",
    "history": "Despue\u0301s de que Gilgamesh despreciara a la diosa Ishtar, e\u0301sta en venganzaenvio\u0301 al gran toro celeste a aterrorizar la ciudad de Uruk. El pequen\u0303o eje\u0301rcitode la ciudad fue tomado por sorpresa, pero decidio\u0301 enfrentar a la bestia. Aunque el toro es muy fuerte, los hombres se dieron cuenta de que despue\u0301sde cada pelea, e\u0301ste se debilita un poco: si el toro tiene fuerza inicial T y peleacontra un hombre con fuerza H, la fuerza del toro despue\u0301s de dicha pelea sera\u0301T- H. El toro ganara\u0301 la batalla si despue\u0301s de luchar contra los N hombres deleje\u0301rcito de Uruk, uno tras otro, todavi\u0301a le queda fuerza. Escribe un programaque determine quie\u0301n sera\u0301 el ganador de la batalla.",
    "input": "Dos enteros T y N seguido de N enteros H_ 1, H_ 2, . . . , H_ N que representan lafuerza de cada uno de los N hombres del eje\u0301rcito de Uruk. El toro luchara\u0301 contraellos en el orden de la entrada.",
    "output": "Un entero G que sea la cantidad de hombres necesarios para dejar al torosin fuerza, o el valor 0 si el toro gano\u0301 la batalla.",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 1747
  },
  {
    "title": "La barca c\u00fabica de Shuripak",
    "url": "https://omegaup.com/arena/problem/barca",
    "history": "Al encontrarse con el inmortal Utanapi\u0301shtim, Gilgamesh se sorprende deque no son tan distintos. Al preguntarle co\u0301mo es que ha logrado la vida eterna, Utanapi\u0301shtim le contesta que es una larga historia, pero que comenzo\u0301cuando el dios Enki descubrio\u0301 el plan divino para inundar la corrupta ciudadShuripak y ahogar a sus habitantes. Siendo Utanapi\u0301shtim una buena persona, Enki le advirtio\u0301 que para salvar su vida y la de su familia debi\u0301a construiruna barca cu\u0301bica de lado L; la barca debi\u0301a tener P pisos y cada piso debi\u0301adividirse en N partes a lo largo y M partes a lo ancho. Como la barca debi\u0301aser de madera, habi\u0301a que sellarla, por lo que Utanapi\u0301shtim barnizo\u0301 con breala superficie externa y con betu\u0301n todas las superficies internas. Escribe unprograma que calcule el a\u0301rea de las superficies que fueron barnizadas.",
    "input": "Cuatro enteros L, P, N y M.",
    "output": "Dos enteros A y B que sean las superficies que se barnizaron con brea ybetu\u0301n, respectivamente.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 1743
  },
  {
    "title": "Si te da",
    "url": "https://omegaup.com/arena/problem/siteda",
    "history": "No tienes nada que hacer y un amigo te comento que existe un problema de teori\u0301a de nu\u0301meros que se te ha hecho muy interesante y quieres resolverlo a trave\u0301s de una programa de computo. # ProblemaSe tienen 2 nu\u0301meros de un digito cada uno, el tercer numero se forma de la suma de los 2 nu\u0301meros anteriores, tomando de el, solo la posicio\u0301n del digito, y asi\u0301 sucesivamente hasta que el ciclo regresa a los 2 numero originales.",
    "input": "Dos nu\u0301meros enteros de un solo di\u0301gito, en li\u0301neas separadas.",
    "output": "En la primera li\u0301nea tu programa debera\u0301 escribir la serie completa separada por espacios. En la segunda li\u0301nea tu programa debera\u0301 imprimir el nu\u0301mero de pasos para regresar a los nu\u0301meros iniciales.",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 1605
  },
  {
    "title": "Tu Viaje Est\u00e1 Aqu\u00ed",
    "url": "https://omegaup.com/arena/problem/ride",
    "history": "Es un hecho bien conocido que detra\u0301s de cada buen cometa hay un OVNI. Estos OVNIs vienen frecuentemente a reclutar apoyos de aqui\u0301 en la tierra. Desdichadamente, ellos solamente tienen espacio para recoger a un grupo de seguidores en cada viaje. Ellos, sin embargo, permiten que los grupos sepan de antemano cua\u0301les sera\u0301n recogidos por cada cometa usando un me\u0301todo inteligente: ellos eligen un nombre para el cometa el cual, junto con el nombre del grupo, puede ser usado para determinar si es el turno para un grupo particular para irse ( Quie\u0301n piensas que pone los nombres de los cometas? ) . Los detalles del me\u0301todo de determinacio\u0301n son dados a continuaco\u0301in; tu trabajo es escribir un programa el cual tome el nombre de un grupo y el nombre de un cometa y luego determine si el grupo debera irse con el OVNI detra\u0301s de ese cometa o no. Tanto el nombre del grupo y el nombre del cometa son convertidos en un nu\u0301mero de la siguiente manera: el nmero final es simplemente el producto de todas las letras en el nombre, donde \" A\" es 1 y \" Z\" es 26. Por ejemplo, el grupo \" USACO\" sera 21 * 19 * 1 * 3 * 15 = 17955. Si el nu\u0301mero del grupo mo\u0301dulo 47 es el mismo que el nmero del cometa mo\u0301dulo 47, entonces tu\u0301 necesitas decirle al grupo Alstense ( Recuerda que \" a mod b\" es el residuo despue\u0301s de dividir a entre b; 34 mod 10 es 4. ) # ProblemaEscribe un programa el cual lea el nombre de un cometa y el nombre de un grupo y encuentre si de acuerdo al mtodo antes descrito si el grupo debe ir en el OVNI detrs de ese cometa y ese caso , imprima \" GO\" , y si no \" STAY\" . Los nombres de los grupos y de los cometas sera\u0301n cadenas de letras maysculas sin espacios o caracteres de puntuacio\u0301n, hasta de 72 caracteres de longitud.",
    "input": "En la linea 1 una cadena de caracteres en mayu\u0301scula de longitud 1. . 72 que es el nombre del cometaEn la linea 2 una cadena de caracteres en mayu\u0301scula de longitud 1. . 72 que es el nombre del grupo.",
    "output": "Una sola li\u0301nea conteniendo o la palabra \" GO\" o la palabra \" STAY\" .",
    "note": "",
    "topics": [
      "math",
      "strings",
      "implementation"
    ],
    "id": 1583
  },
  {
    "title": "Potencias de Dos",
    "url": "https://omegaup.com/arena/problem/ptwo",
    "history": "Dado un entero N ( 0 \u2264 N \u2264 265) , imprima exactamente el valor de 2 a la N- e\u0301sima potencia ( sin ceros a la izquierda o espacios, por supuesto) .",
    "input": "En la primera li\u0301nea el entero N",
    "output": "Una sola li\u0301nea que contiene 2 a la N- e\u0301sima potencia. . .",
    "note": "",
    "topics": [
      "math",
      "implementation",
      "strings"
    ],
    "id": 1568
  },
  {
    "title": "Pizzas",
    "url": "https://omegaup.com/arena/problem/pizzas",
    "history": "Durante el Primer Encuentro Inter- Estatal hacia la OMI, los entrenadores de los estados de Chihuahua, Puebla y Guanajuato se enfrentaron a un problema. Se quern encargar pizzas para los oli\u0301mpicos, pero como ellos comen mucho y son muy quisquillosos, tienen unas preferencias alimenticias algo peculiares. Para comenzar, Los oli\u0301mpicos de Puebla comen muy poco, y cada uno de ellos come exactamente un cuarto ( 1\u20444) de pizza, y nada ma\u0301s. Los de Chihuahua esta\u0301n un poco ma\u0301s mal alimentados, y requieren de media ( 1\u20442) pizza exactamente para llenarse, sin embargo, por ningu\u0301n motivo son capaces de comerse dos cuartos sobrantes de pizzas distintas. Para terminar, los oli\u0301mpicos de Guanajuato se alimentan como pelones de hospicio y requieren de tres cuartas partes ( 3\u20444) de pizza para llenarse ( inclui\u0301do Carlos) . Como es el caso de los de Chihuahua, los guanajuatenses no aceptan trozos que hayan sido dejados por otros oli\u0301mpicos ( de otras pizzas) . Es decir, lo que le toque a cada oli\u0301mpico debe provenir de la misma pizza, y nunca de dos o ma\u0301s pizzas distintas. # ProblemaDada la cantidad n de oli\u0301mpicos de Puebla, m de oli\u0301mpicos de Chihuahua y k de oli\u0301mpicos de Guanajuato, escribe la mi\u0301nima cantidad de pizzas que es necesario comprar para alimentar a todos los oli\u0301mpicos. ( NOTA: puede haber desperdicio, pero no te preocupes, dado que los entrenadores se dara\u0301n a la abnegada tarea de comerse el resto) .",
    "input": "La entrada contiene una u\u0301nica li\u0301nea de texto con tres nu\u0301meros 0 \u2264 n \u2264 100, y 0 \u2264 m \u2264 100 y 0 \u2264 k \u2264 100, separados entre ellos por un u\u0301nico espacio.",
    "output": "La salida debe contener una sola li\u0301nea con un nu\u0301mero indicando la mi\u0301nima cantidad de pizzas necesarias para alimentar a los oli\u0301mpicos.",
    "note": "",
    "topics": [
      "math",
      "brute force",
      "implementation"
    ],
    "id": 1559
  },
  {
    "title": "N\u00famero de D\u00edgitos",
    "url": "https://omegaup.com/arena/problem/numdig",
    "history": "Se puede obtener una secuencia de digitos escribiendo la representacion decimal de todos los numeros desde 1 hasta N consecutivamente como se muestra a continuacion: 1234567891011121314. . . . N# ProblemaEscribe un programa que compute el numero de digitos de esa secuencia.",
    "input": "Tu programa debera leer del teclado el numero N.",
    "output": "Tu programa debera escribir el numero de digitos de la secuencia. # Ejemplos| | input5| | output5| | end| | input15| | output21| | end| | input120| | output252| | end# ConsideracionesN tendra valores entre 1 y 100, 000, 000.",
    "note": "",
    "topics": [
      "math",
      "strings",
      "implementation"
    ],
    "id": 1541
  },
  {
    "title": "A+B Env\u00edo de Soluciones",
    "url": "https://omegaup.com/arena/problem/aplusb",
    "history": "# \u00a1Bienvenido OmegaUp! Antes que nada, es necesario que aprendas a mandar soluciones para un problema. Para poder resolver un problema, debera\u0301s leer algunos datos de entrada de teclado ( stdin) e imprimir en pantalla ( stdout) otros datos de salida, la especificacio\u0301n de que datos leer y que datos imprimir vendra\u0301 descrita en la redaccio\u0301n del problema. Ma\u0301s adelante podra\u0301s ver un ejemplo de como son estas especificaciones. . El problema sera\u0301 evaluado con varios datos de entrada que no se describen en el problema. Es importante que recuerdes que * * tu programa sera\u0301 evaluado con muchos datos de entrada* * , si tu programa funciona bien con los datos que se muestran de ejemplo, tomate un minuto para pensar en otros conjuntos de datos que hagan tu programa fallar. Para que tu programa sea considerado correcto debera\u0301 producir la salida correcta a su respectivo conjunto de datos de entrada. Tu programa sera\u0301 evaluado por una maquina, * * NO* * por una persona. Por ello, * * abstente de imprimir cualquier otra cosa en pantalla ( stdout) o de leer cualquier otra cosa del teclado ( stdin) que NO este\u0301 especificado en las secciones de Entrada y Salida* * , de lo contrario, tu solucio\u0301n sera\u0301 calificada como erronea por el juez en li\u0301nea. Por ejemplo, no imprimas ` Introduce el numero A: ` o algo asi\u0301. En el caso de C / C+ + , los compiladores oficiales son gcc y g+ + respectivamente. Adema\u0301s, los co\u0301digos son evaluados en un entorno Linux, por ello no es posible hacer uso de libreri\u0301as como ` conio. h` . Para un listado completo de libreri\u0301as esta\u0301ndar de C y C+ + puedes checar < a href= \" http: / / www. cplusplus. com/ reference/ \" > la referencia oficial de C+ + < / a> . Finalmente, esta\u0301 prohibido abrir archivos, utilizar instrucciones de ensamblador, hacer llamadas al sistema o crear procesos durante la ejecucio\u0301n de tu programa. \u00a1Apoya el fair play! Para asegurarnos de que has entendido todo lo anterior, se te pedira\u0301 que resuelvas un problema muy sencillo. # ProblemaDados dos nu\u0301meros enteros A y B, debes hacer un programa que calcule el resultado de A + B.",
    "input": "Esta es la especificacio\u0301n de los datos que debes leer de teclado ( stdin) . El archivo con el que se te evaluara\u0301 contendra\u0301 una li\u0301nea con 2 nu\u0301meros enteros A y B separados por un espacio.",
    "output": "Esta es la especificacio\u0301n de los datos que debes imprimir en pantalla ( stdout) . Para que tu solucio\u0301n sea considerada correcta, imprime 3 li\u0301neas. En la primera li\u0301nea imprime el nu\u0301mero A, en la segunda li\u0301nea el nu\u0301mero B y finalmente, en la tercera li\u0301nea imprime el resultado de A + B.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 1403
  },
  {
    "title": "Abriendo La Puerta",
    "url": "https://omegaup.com/arena/problem/abre",
    "history": "El primer paso esta dado, ya encontraste la tumba, sin embargo, tus problemas apenas comienzan, primero debera\u0301 abrir la puerta y una vez adentro debera\u0301s sortear todas la trampas en el camino al tesoro. \u00a1Pero comencemos por el principio, antes que cualquier cosa hay que abrir la puerta! Al llegar a la tumba te encuentras con una puerta repleta de palancas, todas las palancas son negras, salvo una de ellas, la cual es de un color rojo sangre. En la puerta hay adema\u0301s una inscripcio\u0301n y una secuencia de nu\u0301meros. Tras leer la inscripcio\u0301n descubres que para abrir la puerta es necesario bajar todas las palancas, sin embargo, las palancas se debera\u0301n ir bajando siguiendo la secuencia de nu\u0301meros en la puerta, con la condicio\u0301n de que la u\u0301ltima palanca que se baje sea la palanca roja. Hay que ser muy cuidadoso, porque la inscripcio\u0301n dice que si se rompe la secuencia o si se baja la palanca roja antes de bajar todas las negras \" . . . su alma sera\u0301 condenada a los fuegos eternos mientras dure la era del quinto sol. \" La forma de ir bajando las palancas es la siguiente: inicialmente se baja una palanca, que puede ser cualquiera. A partir de e\u0301sta se cuenta un nu\u0301mero x1 de palancas, donde x1 es el primer nu\u0301mero de la secuencia escrita en la puerta y se baja la palanca en donde quedaste, de ahi\u0301, cuentas x2 palancas do\u0301nde x2 es el segundo nu\u0301mero de la secuencia y nuevamente bajas la palanca correspondiente. Continuando con la secuencia hasta que todas las palancas este\u0301n abajo. Las palancas siempre se cuentan en el mismo sentido, es decir, siempre hacia la derecha y si llegas al final debes de seguir contando por el principio. Al contar las palancas no debes tomar en cuenta las que ya este\u0301n abajo. # ProblemaDebes escribir un programa que conociendo el nu\u0301mero de palancas, la posicio\u0301n de la palanca roja y la secuencia de nu\u0301meros, te diga cual es la primera palanca que debes bajar para que siguiendo la secuencia de nu\u0301meros, la u\u0301ltima palanca que bajes sea la palanca roja.",
    "input": "Tu programa debera\u0301 leer los siguientes datos: en la primera li\u0301nea el nu\u0301mero 9 \u2264 P \u2264 20000 de palancas en la puerta, en la segunda li\u0301nea el nu\u0301mero R, do\u0301nde 1 \u2264 R \u2264 P que indica la posicio\u0301n de la palanca roja contando a partir de 1 y por u\u0301ltimo en la tercera li\u0301nea P- 1 nu\u0301meros separados por un espacio que indican la secuencia que se debe llevar en el conteo de palancas. Los nu\u0301meros de la secuencia de saltos son todos entre 1 y 16.",
    "output": "Tu programa debera\u0301 un u\u0301nico nu\u0301mero indicando la posicio\u0301n de la primera palanca que se debe bajar.",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 1377
  },
  {
    "title": "\u00bfCulto?",
    "url": "https://omegaup.com/arena/problem/Canicas",
    "history": "La aplicacio\u0301n de un juego, permite retar a tus oponentes a una partida, donde se hacen una serie de preguntas de diferentes categori\u0301as, gana el primero que logre obtener todos los personajes de todas las categori\u0301as. Sin embargo a ti\u0301 no interesa saber cuantas partidas has ganado, quieres medir tu cultura general, por lo tanto, quieres saber cuantas respuestas correctas e incorrectas has tenido totalizando todas las partidas que has jugado. Si el nu\u0301mero total de respuestas correctas es mayor que el de incorrectas entonces puedes considerarte culto, si tienes ma\u0301s errores que aciertos eres inculto y si el nu\u0301mero de errores y aciertos es igual es indeterminado. Por ejemplo, supo\u0301n que has jugado 3 partidas y el nu\u0301mero de respuestas correctas e incorrectas de cada partida son: 24 178 2050 12Entonces tienes un total de 24+ 8+ 50= 82 respuestas correctas y 17+ 20+ 12= 49 respuestas incorrectas, por lo tanto eres culto. Desarrolla un DFD/ programa que lea el nu\u0301mero de partidas jugadas, las respuestas correctas e incorrectas de cada partida y determine si eres culto, inculto o es indeterminado.",
    "input": "En la primera li\u0301nea el nu\u0301mero de partidas que se jugaron. En cada una de las siguientes N li\u0301neas, dos enteros C, I separados por un espacio, que denotan el nu\u0301mero de respuestas correctas( C) e incorrectas ( I) en esa partida.",
    "output": "Imprime CULTO si es que el nu\u0301mero total de respuestas correctas de todas las partidas es mayor que el total de incorrectas, INCULTO si el total de las incorrectas es mayor al total de las correctas o INDETERMINADO si son iguales. # Ejemplos# | | input324 178 2050 12| | outputCULTO| | end",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 1355
  },
  {
    "title": "La medida del tiempo",
    "url": "https://omegaup.com/arena/problem/la_medida_del_tiempo",
    "history": "\u00bfTe has preguntado alguna vez cua\u0301ntos segundos han pasado desde que naciste? \u00bfDesde que aprendiste a contar? \u00bfDesde que entraste a la universidad? O bien, \u00bfte has preguntado cua\u0301nto tiempo son un millo\u0301n de segundos? Como todo el mundo sabe, un minuto tiene 60 segundos, una hora tiene 60 minutos, un di\u0301a tiene 24 horas y un an\u0303o tiene 365 di\u0301as. Bueno, eso no siempre es cierto, pero lo consideraremos asi\u0301 para esta tarea. Dada una cierta cantidad de segundos s, debera\u0301s determinar cuantos an\u0303os a, di\u0301as d, horas h y minutos m completos representan, adema\u0301s de cua\u0301ntos segundos q quedan.",
    "input": "Un nu\u0301mero entero s que tendra\u0301 un valor entre 0 y 2 000 000 000",
    "output": "Cinco nu\u0301meros enteros a, d, h, m y q separados por un espacio# Ejemplos| | input10| | output0 0 0 0 10| | input70000| | output0 0 19 26 40| | input40000000| | output1 97 23 6 40| | end",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 1345
  },
  {
    "title": "Ra\u00edz cuadrada entrada y salida",
    "url": "https://omegaup.com/arena/problem/Raiz-cuadrada-entrada-y-salida",
    "history": "Elaborar un programa para calcular la rai\u0301z cuadrada de un numero.",
    "input": "2 nu\u0301meros enteros N y D separados por un espacio en blanco.",
    "output": "La rai\u0301z cuadrada de N con expresada con D decimales.",
    "note": "",
    "topics": [
      "math",
      "number theory",
      "implementation"
    ],
    "id": 1334
  },
  {
    "title": "Divisores Iguales",
    "url": "https://omegaup.com/arena/problem/Divisores-Iguales",
    "history": "Todos sabemos que cualquier nu\u0301mero natural puede ser dividido por una cierta cantidad de nu\u0301meros naturales, a los cuales se les conoce como los divisores del nu\u0301mero. Es muy claro tambie\u0301n que esa cantidad de divisores, vari\u0301a entre cada nu\u0301mero. Por ejemplo, el nu\u0301mero 12 tiene 6 divisores ( 1, 2, 3, 4, 6, 12) y el nu\u0301mero 7 solo tiene 2 divisores ( 1, 7) . # ProblemaEscribe un programa que recibiendo un nu\u0301mero N, encuentre el numero natural ma\u0301s cercano que tenga exactamente la misma cantidad de divisores que N. Si existen dos nu\u0301meros que se encuentren a la misma distancia, toma como solucio\u0301n el mayor de ellos.",
    "input": "Tu programa debe leer del teclado una unica linea con el nu\u0301mero entero N.",
    "output": "Tu programa debe escribir en la pantalla un u\u0301nico nu\u0301mero que cumpla lo antes descrito.",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 1332
  },
  {
    "title": "Permutaci\u00f3n Hermosa",
    "url": "https://omegaup.com/arena/problem/Permutacion-Hermosa",
    "history": "A Loro le encantan las permutaciones. Una permutacio\u0301n de longitud n es una secuencia de n nu\u0301meros enteros positivos distintos, ninguno mayor que n. Asumiremos que el valor de mcd( a, b) es el ma\u0301ximo comu\u0301n divisor de a y b. Para Loro, el elemento p_ i de la permutacio\u0301n p_ 1, p_ 2, . . . , p_ n es bueno si mcd( i, p_ i) > 1. Loro considera una permutacio\u0301n hermosa, si tiene exactamente k elementos buenos. Desafortunadamente Loro no conoce ninguna permutacio\u0301n hermosa. Ayu\u0301dalo a encontrar al menos una de ellas.",
    "input": "La linea de entrada contiene dos enteros n y k.",
    "output": "En una sola linea imprime cualquier permutacio\u0301n hermosa o\u0301 - 1, si no existe ninguna.",
    "note": "",
    "topics": [
      "greedy",
      "math",
      "implementation",
      "dfs and similar"
    ],
    "id": 1327
  },
  {
    "title": "N\u00fameros Libres",
    "url": "https://omegaup.com/arena/problem/Numeros-Libres",
    "history": "# Numeros LibresDados dos nu\u0301meros square- free a y b, determina si su producto tambie\u0301n es square- free. Decimos que un nu\u0301mero x es square- free si para todo primo p, p^ 2 no divide a x. Por ejemplo, 6 es square free porque el cuadrado de ningu\u0301n primo lo divide. En cambio, 12 si\u0301, porque 2^ 2 = 4 si\u0301 lo divide.",
    "input": "En la primera linea contiene un entero N el numero de casos a resolver. En las siguientes N lineas, dos numeros enteros a y b.",
    "output": "Para cada caso de prueba, decir \" SI\" ( sin comillas) si el producto de a y b es square- free, de caso contrario \" NO\" ( sin comillas)",
    "note": "",
    "topics": [
      "implementation",
      "math",
      "number theory"
    ],
    "id": 1301
  },
  {
    "title": "Suma Manhattan",
    "url": "https://omegaup.com/arena/problem/Suma-Manhattan",
    "history": "Dada una lista S de N puntos en el plano cartesiano, calcula la suma de las distancias Manhattan entre todaslas parejas posibles de puntos. En otras palabras, calcula el valor de la siguiente expresio\u0301n: \u2211_ 0 \u2264 i < j < N manhattan( S_ i, S_ j) . Recuerda que la distancia Manhattan entre dos puntosmanhattan( ( p_ 1, p_ 2) , ( q_ 1, q_ 2) ) es | p_ 1 - q_ 1| + | p_ 2 - q_ 2| , donde | x| representa el valor absoluto de x.",
    "input": "En la primer li\u0301nea un entero, N, la cantidad de puntos. En las siguientes N li\u0301neas, dos enteros representando las coordenadas de un punto.",
    "output": "Un so\u0301lo entero: el resultado de evaluar la expresio\u0301n requerida. Imprime el resultado mo\u0301dulo 1, 000, 000, 007 ( 10^ 9 + 7) .",
    "note": "",
    "topics": [
      "sortings",
      "math",
      "implementation"
    ],
    "id": 1300
  },
  {
    "title": "Cuadro M\u00e1gico",
    "url": "https://omegaup.com/arena/problem/Cuadro-Magico",
    "history": "Dado un tablero de tres filas por tres columnas con di\u0301gitos ( 1 a 9) en cada casilla, determina si se trata de un cuadrado ma\u0301gico. En un cuadrado ma\u0301gico la suma de los valores en cada fila, cada columna y cada diagonal, siempre es 15.",
    "input": "6 1 87 5 32 9 4| | output",
    "output": "SI| | end# Explicacio\u0301n de la salida# 6+ 1+ 8= 157+ 5+ 3= 152+ 9+ 4= 156+ 7+ 2= 151+ 5+ 9= 158+ 3+ 4= 156+ 5+ 4= 158+ 5+ 2= 15",
    "note": "",
    "topics": [
      "matrices",
      "math",
      "implementation"
    ],
    "id": 1293
  },
  {
    "title": "Herencia",
    "url": "https://omegaup.com/arena/problem/herencia",
    "history": "< p> Una acaudalada empresaria esta\u0301 muy vieja para decidir como repartir su herencia entre sus N adorables hijas, que han empezado a tener discusiones para ver cuanto les toca a cada una de ellas. < / p> < p> La ma\u0301s joven, molesta de tanto discutir, ha decidido tomar su parte que le corresponde de la herencia. Sabe exactamente donde guarda su madre las monedas de oro - dentro de un pequen\u0303o calcetin en el tercer cajo\u0301n enseguida del espejo del pasillo. La astuta jovencita encontro\u0301 una pila de monedas de oro, las dividio\u0301 en N partes iguales y, ella aduce, que el resto lo coloco\u0301 de nuevo dentro del calceti\u0301n. Si las monedas no pueden ser divididas en N partes ide\u0301nticas, entonces las partes fueron divididas en lo ma\u0301s cercano posible a que fueran ide\u0301nticas: cada parte difiere de la otra por una moneda, a lo mucho. En ese caso, la hija indica que tomo una de las partes ma\u0301s pequen\u0303as para ella. < / p> < p> Las dema\u0301s hijas se dieron cuenta de la situacio\u0301n y vieron cuantas monedas de oro habi\u0301an sobrado y, quieren saber cual era el nu\u0301mero de monedas que habi\u0301a en el calceti\u0301n inicialmente, antes de que la ma\u0301s joven tomara su parte. Es tu tarea contestar a esta pregunta. Dado de que puede haber ma\u0301s de una posible respuesta, debera\u0301s indicar la cantidad ma\u0301s pequen\u0303a y la ma\u0301s grande. < / p>",
    "input": "< p> En la primera li\u0301nea de la entrada contendra\u0301 el entero positivo N ( 2 \u2264 N \u2264 15) , el nu\u0301mero de hijas. < / p> < p> La segunda li\u0301nea de la entrada contiene el entero O ( N \u2264 O \u2264 100) , el nu\u0301mero de monedas sobrantes. < / p>",
    "output": "La primera y u\u0301nica li\u0301nea debera\u0301 contener dos enteros: el total mi\u0301nimo y el total ma\u0301ximo posible de monedas. # Ejemplos| | input25| | output9 10| | input35| | output7 7| | end# NotaEn el primer ejemplo hay dos hijas, significa que la ma\u0301s joven tomo\u0301 la mitad de las monedas. Si hubiera inicialmente 9 monedas, la ma\u0301s joven tomari\u0301a 4, asi\u0301 que 5 es el resto. Si, por alguna razo\u0301n, inicialmente fueran 10 monedas, ella tomari\u0301a 5 asi\u0301 que tambie\u0301n hay 5 restantes. Por lo tanto, las respuestas posibles son 9 y 10.",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 1292
  },
  {
    "title": "Diferenecia M\u00ednima",
    "url": "https://omegaup.com/arena/problem/Difrenecia-Minima",
    "history": "Dado un conjunto de 1< = N< = 1000 elementos enteros, determina la diferencia mi\u0301nima entre cualquier pareja posible.",
    "input": "55 20 3 21 1| | output",
    "output": "1| | end# Explicacio\u0301n de la salida# La diferencia mi\u0301nima en el ejemplo se logra restando 21 y 20",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 1290
  },
  {
    "title": "La novia de Karel",
    "url": "https://omegaup.com/arena/problem/novia_de_karel_la",
    "history": "Karel ha organizado una fiesta, en la cual esta\u0301 invitando a sus amigos, familiares y a su novia. Aunque Karel ha estado esperando a su novia toda la tarde, ha tenido que ir a la cocina para servir ma\u0301s botanas a sus invitados y ha descuidado la puerta por lo cual no pudo ver cuando entro\u0301 su novia. Como todo esta\u0301 a oscuras ( para un mejor ambiente) tampoco la puede ver. # ProblemaKarel ha pedido tu ayuda para encontrar a su novia en sala de su casa, sabiendo que en la fiesta de karel hay amigos, familiares y su novia. Los amigos esta\u0301n representados por montones de 1 beeper, los familiares por montones de 2 beepers y su novia esta\u0301 representado por 3 beepers, Karel debera\u0301 encontrar a su novia y cuando la encuentre se debera\u0301 quedar con ella. # Consideraciones< ul> < li> Karel empieza a buscar en algu\u0301n lado de la sala< / li> < li> La sala de karel tiene forma de un recta\u0301ngulo regular< / li> < li> La novia de Karel no tiene celular< / li> < li> El taman\u0303o de la sala es desconocido< / li> < li> Karel no debera\u0301 quitar de su lugar a sus invitados ( beepers) ya que es de mala educacio\u0301n< / li> < li> Karel debera\u0301 apagarse cuando encuentre a su novia< / li> < li> Karel tiene beepers infinitos en su mochila< / li> < li> No importa su orientacio\u0301n final< / li> < / ul> # Entrada ejemplo! [ Entrada] [ 1] # Salida ejemplo! [ Salida] [ 2]",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "implementation",
      "dp",
      "math",
      "dfs and similar"
    ],
    "id": 1255
  },
  {
    "title": "Chavos y Reyes",
    "url": "https://omegaup.com/arena/problem/Chavos-y-Reyes",
    "history": "En el an\u0303o 2048, en un universo diferente al nuestro se desencadeno\u0301 una gran pelea entre chavos y caballeros ( Caballeros como los de la era medieval) , esto lo haci\u0301an mediante cartas, cada carta con valores y ganaban los que tuvieran la mayor suma. Frente a este el rey que gobernaba las tierras donde se dio esta pelea se entero\u0301 de tal y decidio\u0301 ir a acabar con el esca\u0301ndalo que hicieron los chavos. Se sabe que habi\u0301a N chavos numerados del 1 al N y adema\u0301s el rey llevaba consigo una carta con un valor K. Algo curioso es que el chavo C_ i teni\u0301a una carta con valor i, es decir el chavo 1 teni\u0301a una carta con valor 1, el chavo 2 con una carta de valor 2, el 3 una carta con valor 3 . . el chavo N una carta con valor N. Uno de los asistentes del rey va a llamar a los chavos que su nu\u0301mero se encuentre entre I y D ( inclusive) , estos van a sumar los valores de sus cartas y pelearan contra el rey. Esto se va a repetir Q veces y un programador que se encontraba cerca decidio\u0301 ir registrando resultados. # ProblemaDado N ( El nu\u0301mero de chavos en la pelea) , Q ( El nu\u0301mero de veces que un grupo de chavos se enfrento\u0301 al rey) , K ( El valor de la carta del rey) , y los rangos I y D para cada enfrentamiento, dar el registro de quien gano\u0301 en cada enfrentamiento. Si el rey gana el enfrentamiento i- e\u0301simo enfrentaminto, el i- e\u0301simo registro debe decir \u0093\" Rey : ( \" \u0094 , si ganan los chavos \u0093\" Chavos : ) \" \u0094 , en caso de empate \" \u0093Tablas\" .",
    "input": "En la primera li\u0301nea los nu\u0301meros entereos N, Q y K. En las siguientes Q li\u0301neas 2 enteros I y D para cada enfrentamiento.",
    "output": "Los registros que hizo el programador como se menciona en la descripcio\u0301n.",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 1251
  },
  {
    "title": "Mediana",
    "url": "https://omegaup.com/arena/problem/Mediana",
    "history": "Dado un conjunto de N elementos enteros, Determina su mediana. La mediana de un conjunto de datos, es el dato que queda justo enmedio despue\u0301s de ordenarlos, si el conjunto tiene un nu\u0301mero par de elementos, entonces la mediana se calcula promediando los dos datos de en medio. Por ejemplo: Sea N= 5Datos: 2 5 1 7 3Datos Ordenados: 1 2 3 5 7Salida: 3. 0Sea N= 6Datos: 4 9 6 2 3 5Datos Ordenados: 2 3 4 5 6 9Salida: 4. 5",
    "input": "64 9 6 2 3 5| | output",
    "output": "4. 5| | end",
    "note": "",
    "topics": [
      "sortings",
      "math",
      "implementation"
    ],
    "id": 1230
  },
  {
    "title": "Promedio reloaded",
    "url": "https://omegaup.com/arena/problem/Mayor-a-la-media",
    "history": "Dado un conjunto de entrada de N datos enteros, Calcula el promedio de todos y determina cuantos son mayores que el promedio.",
    "input": "En la primera li\u0301nea el entero N que denota cuantos datos se leeran. En la segunda li\u0301nea y separados por espacios, los N datos.",
    "output": "U\u0301nicamente un entero que denota cuantos datos son estrictamente mayores al promedio| | input58 2 10 5 5| | output2| | end# Li\u0301mites1 \u2264 N \u2264 100",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 1226
  },
  {
    "title": "Men\u00fa de pastes",
    "url": "https://omegaup.com/arena/problem/OMI2014LENGUAJE1",
    "history": "En los di\u0301as previos a la competencia, en el COMI quisimos probar los tradicionales pastes. Sin dudarlo entramos en una sucursal de pastes Kikos y pedimos un menu\u0301. El menu\u0301 era una cuadri\u0301cula de m filas por n columnas con un sabor de paste en cada cuadro. Siempre buscando sistematizar y optimizar, numeramos los sabores de la siguiente forma: * Los sabores de la fila superior se numeraron del 1 al n comenzando por la izquierda. * Los de la siguiente fila hacia abajo se numeraron del n+ 1 al 2n comenzando, de nuevo, por la izquierda. * Y asi\u0301 con cada fila hasta que los sabores de la fila inferior quedaron con los nu\u0301meros del n( m- 1) + 1 a nmLos miembros del COMI pidieron entonces p pastes diciendo el nu\u0301mero de sabor que queri\u0301an. Desgraciadamente, al tomar la orden giraron el menu\u0301 90 grados en el sentido de las manecillas del reloj cambiando asi\u0301 los sabores que recibio\u0301 cada miembro del COMI ( * * para que te quede ma\u0301s claro, revisa la explicacio\u0301n del ejemplo* * ) . # ProblemaEscribe un programa que dadas las dimensiones del menu\u0301: m, n, el nu\u0301mero p de pastes que se pidieron y la lista de nu\u0301meros de sabores pedidos entregue como resultado los nu\u0301meros de sabor que realmente se recibieron en el mismo orden en que fueron pedidos.",
    "input": "Tu programa debe leer del teclado la siguiente informacio\u0301n: * En la primera li\u0301nea los nu\u0301meros m, n, las dimensiones del menu\u0301. * En la segunda li\u0301nea el nu\u0301mero p de pastes a pedir. * En la tercera li\u0301nea p nu\u0301meros enteros separados por un espacio que representan los pastes que se ordenaron.",
    "output": "Tu programa debe escribir en la pantalla p nu\u0301meros enteros separados por una li\u0301nea que representan los nu\u0301meros de paste que se recibieron despue\u0301s de que se giro\u0301 el menu\u0301. # Restricciones* 1 \u2264 m, n \u2264 2, 000, 000 Dimensiones del menu\u0301* 1 \u2264 p \u2264 1, 000 Nu\u0301mero de pastes que se pidieron.",
    "note": "",
    "topics": [
      "implementation",
      "math",
      "matrices"
    ],
    "id": 1222
  },
  {
    "title": "Nieves Pizzero",
    "url": "https://omegaup.com/arena/problem/OMI2014LENGUAJE3",
    "history": "Nieves, un famoso integrante del COMI, se ha aficionado a cocinar pizzas. Lo que diferencia a Nieves de cualquier otro pizzero es que Nieves puede cocinar pizzas de cualquier dia\u0301metro. Por si fuera poco, Nieves esta\u0301 haciendo su maestri\u0301a en visio\u0301n computacional. Nieves cocina pizzas una por una. Cada que termina una pizza, Nieves la coloca encima de las pizzas anteriores de modo que su centro quede alineado con los centros de todas las pizzas anteriores. Cuando alguien le pide una de las pizzas de la pila, Nieves toma esa pizza y tira a la basura todas las pizzas que estaban arriba de ella. Como proyecto de maestri\u0301a Nieves ha desarrollado un sistema de visio\u0301n computacional para supervisar sus pizzas, dicho sistema funciona de la siguiente manera: hay una ca\u0301mara colocada en el techo, justo encima del centro de la pila de pizzas. En cualquier momento, Nieves puede solicitarle a su sistema que le diga \u00bfcua\u0301ntas pizzas ve? . Dado que la ca\u0301mara esta\u0301 arriba, las pizzas de mayor dia\u0301metro tapan a las pizzas pequen\u0303as que esta\u0301n debajo de ellas en la pila. Si hay dos pizzas del mismo dia\u0301metro juntas, la ca\u0301mara so\u0301lo ve la que este\u0301 ma\u0301s arriba. Nieves desea que le ayudes a comprobar si su sistema funciona correctamente. # # # ProblemaEscribe un programa que sea capaz de procesar 3 tipos de comandos: * Comando 0: Al recibir este comando tu programa debera\u0301 contestar cua\u0301ntas pizzas ve la ca\u0301mara en ese momento. * Comando 1 d: Este comando le indica a tu programa que Nieves apilo\u0301 una nueva pizza de dia\u0301metro d. * Comando 2 q: Este comando le indica a tu programa que Nieves quito\u0301 q pizzas de la pila. Nieves nunca quita ma\u0301s pizzas de las que hay en la pila en un momento dado.",
    "input": "Tu programa debe leer del teclado la siguiente informacio\u0301n: * En la primer li\u0301nea el nu\u0301mero N, la cantidad de comandos que recibira\u0301 tu programa. * En las siguientes N li\u0301neas puede haber 1 o\u0301 2 nu\u0301meros. El primer nu\u0301mero sera\u0301 un 0, 1 o\u0301 2 e indicara\u0301 el tipo del comando. En el caso de los comandos 1 y 2 habra\u0301 un segundo nu\u0301mero que indica el valor de d o q respectivamente.",
    "output": "Por cada comando del tipo 0 que haya en la entrada tu programa debera\u0301 escribir una li\u0301nea con un nu\u0301mero que indique la cantidad de pizzas que vei\u0301a la ca\u0301mara en ese momento. # # # Restricciones* 1 \u2264 N \u2264 500, 000 La cantidad de comandos a ejecutar. * 1 \u2264 q \u2264 N El nu\u0301mero de pizzas que se quitan de una pila en un comando. * 1 \u2264 d \u2264 1, 000, 000, 000 Dia\u0301metro de una pizza.",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 1221
  },
  {
    "title": "Tablero",
    "url": "https://omegaup.com/arena/problem/tablero",
    "history": "# HistoriaUn muchacho tiene un tablero ( no importa el taman\u0303o) muy grande, coloreado al estilo del tablero de ajedrez ( cada casilla puede ser blanca o negra, no hay dos blancas juntas y no hay dos negras juntas) . E\u0301l quiere saber de que\u0301 colores son ciertas casillas, pero so\u0301lo recuerda el color de una casilla. Ayu\u0301dale a responder sus preguntas, para esto, se han numerado las filas de abajo hacia arriba y las columnas de izquierda a derecha. # ProblemaDado el color de cierta casilla de un tablero, decir el color de otras N casillas.",
    "input": "La primera li\u0301nea tendra\u0301 tres enteros X, Y y C. X y Y son los nu\u0301meros de la fila ( X) y columna ( Y) respectivamente, de la casilla de la que se conoce el color. La C representa el color ( C es cero \u201c0\u201d si la casilla es blanca, y es uno \u201c1\u201d si es negra) . La segunda li\u0301nea tendra\u0301 un entero N, el nu\u0301mero de casillas de las cuales deseas conocer el color. A partir de la tercera li\u0301nea, habra\u0301 N li\u0301neas. En la i- e\u0301sima de estas li\u0301neas habra\u0301 dos enteros A_ i y B_ i que representan el nu\u0301mero de fila y columna respectivamente de la casilla de la cual se quiere conocer el color. Todos los nu\u0301meros sera\u0301n menores a 1000.",
    "output": "Por cada una de las u\u0301ltimas N li\u0301neas de la entrada escribir un uno \u201c1\u201d si la casilla es negra, o un cero \u201c0\u201d si la casilla es blanca.",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 1113
  },
  {
    "title": "sedes",
    "url": "https://omegaup.com/arena/problem/sedes",
    "history": "Ahora que esta\u0301s en la preseleccio\u0301n de Veracruz, debes prepararte mucho para ser seleccionado. Como parte de este proceso, se deben realizar algunos entrenamientos y de preferencia en varias sedes del estado, por ejemplo Coatzacoalcos, Veracruz, Xalapa, Tuxpan, etc. Puesto que a ti te gusta viajar mucho, quieres asistir a las dos sedes que este\u0301n ma\u0301s lejos entre si\u0301. Suponiendo que todas las sedes se encontraran en li\u0301nea recta, una tras de otra, identifica, cua\u0301l es la distancia ma\u0301s larga que deberi\u0301as recorrer entre dos sedes.",
    "input": "En la primera li\u0301nea el nu\u0301mero n, que indica la cantidad de sedes para este an\u0303o. 1< = n< = 100000. En las siguientes n li\u0301neas un nu\u0301mero indicando la distancia de esa sede con respecto a tu ubicacio\u0301n actual entre 0< = d < = 5000. Supo\u0301n que tu ubicacio\u0301n actual es el inicio de la li\u0301nea recta, por lo que todas las distancias sera\u0301n positivas. Siempre te encuentras en el km 0, y en el ejemplo la primera sede esta\u0301 a 7 kilo\u0301metros de tu ubicacio\u0301n, la segunda a 5, la tercera a 13, y la cuarta a 4 kilo\u0301metros de tu ubicac",
    "output": "Un solo nu\u0301mero con un salto de li\u0301nea, indicando la distancia ma\u0301xima que hay entre dos sedes.",
    "note": "",
    "topics": [
      "math",
      "implementation",
      "sortings"
    ],
    "id": 1102
  },
  {
    "title": "Cifrado de Vigen\u00e8re",
    "url": "https://omegaup.com/arena/problem/vigenere",
    "history": "Para cifrar una palabra con el me\u0301todo Cifrado de Vigene\u0300re, se hace una tabla como la que se muestra y se escoge una palabra clave. ! [ Image] ( imagen. jpeg) Con un ejemplo explicaremos la forma de cifrar. Supongamos que el mensaje que queremos cifrar es la palabra AGUASCALIENTES y la palabra clave es OMIAGS. Paso 1: Se hacen corresponder las letras de la palabra que se tiene que cifrar con la letras de la palabra clave, ( en caso de que la palabra clave sea ma\u0301s corta que el mensaje, se repite tantas veces como sea necesario) : AGUASCALIENTESOMIAGSOMIAGSOMPaso 2: Sustituimos cada letra del mensaje con la letra de la tabla que se encuentra en el renglo\u0301n de la letra de la palabra y la columna de la letra del mensaje. Por ejemplo, para sustituir la primera A, buscamos en el renglo\u0301n de la O y la columna de la A, encontrando la O. La G se sustituira\u0301 por la letra que se encuentra en el renglo\u0301n de la M y la columna de G, es decir, la S. La U se sustituira\u0301 por la letra que se encuentra en el renglo\u0301n de la I y la columna de U, la C. Y asi\u0301 sucesivamente, la palabra AGUASCALIENTES se convertiri\u0301a en OSCAYUOXQETLSE. # ProblemaCifrar o descifrar un mensaje dado usando el Cifrado Vigene\u0300re.",
    "input": "La primera li\u0301nea tendra\u0301 un 1 o un 2. La segunda li\u0301nea tendra\u0301 la palabra que tendra\u0301s que cifrar o descifrar. La tercera li\u0301nea tendra\u0301 la palabra clave. La palabras sera\u0301n de longitud a lo ma\u0301s 100 y estara\u0301n formadas solamente por mayu\u0301sculas.",
    "output": "Si en la entrada la primera li\u0301nea era un 1, debes imprimir la palabra cifrada. Si en la entrada la primera li\u0301nea era un 2, debes imprimir la descifrada.",
    "note": "",
    "topics": [
      "implementation",
      "math",
      "strings"
    ],
    "id": 1099
  },
  {
    "title": "Zuma",
    "url": "https://omegaup.com/arena/problem/Zuma",
    "history": "En una secuencia de ZUMA, t1, t2, t3, , tm cada te\u0301rmino es un entero mayor o igual a 0. Adema\u0301s, cada te\u0301rmino, comenzando con el tercero, es la diferencia de los dos u\u0301ltimos te\u0301rminos ( es decir, tn+ 2 = tn - tn + 1 para n> = 1) . La secuencia termina en tm Si tm- 1 < tm. Por ejemplo, si tenemos 120 y 71, entonces la secuencia de ZUMA generada es como sigue120, 71, 49, 22, 27La longitud de la secuencia es de 5.",
    "input": "12071| | output5| | end# Explicacio\u0301n del ejemplo# El tercer te\u0301rmino de la secuencia se obtiene restando 120- 71= 49. los dos u\u0301ltimos elementos de la secuencia seri\u0301an 71 y 49, como el penu\u0301ltimo elemento, no es menor que el u\u0301ltimo ( 71 no es menor que 49) la secuencia sigue y el siguiente elemento se calcula: 71- 49= 22, despue\u0301s: 49- 22= 27, 22- 27= - 5, la serie se rompe y - 5 ya no forma a\u0301rte de ella, por lo tanto, para el caso de ejemplo el nu\u0301mero de elementos en la serie es 5. # Li\u0301mites# 0 < t2 < t1 < 10000.",
    "output": "Un entero que representa la longitud de la secuencia seguido de un salto de li\u0301nea.",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 1095
  },
  {
    "title": "Casa de Cambio",
    "url": "https://omegaup.com/arena/problem/Casa-de-Cambio",
    "history": "Ramo\u0301n ha dejado su puesto de delegado de Sonora, y ha colocado su propia casa de cambio de moneda, donde recibe de todo tipo de moneda y la cambia por monedas de cincuenta centavos ( si, monedas de cincuenta centavos, le han pedido que use denominaciones ma\u0301s altas, pero, como es algo terco lo mejor es no cuestionarlo demasiado) Para eso Ramo\u0301n cuenta con un i\u0301ndice de inflacio\u0301n Xi por el cual multiplica siempre la cantidad N que le den a cambiar, y despue\u0301s de aplicar su algoritmo de \u0093inflacio\u0301n\u0094 regresa C monedas de 50 centavos que debe dar. # ProblemaComo sospechas que Ramo\u0301n hace mano negra por ahi\u0301, quieres saber la cantidad que te debe de dar en monedas de 50 centavos. Ramo\u0301n atiende A clientes diarios, con A i\u0301ndices de inflacio\u0301n cada uno, esa es tu mayor pista para descubrir su algoritmo y saber cuantas monedas te tiene que dar.",
    "input": "En la primera li\u0301nea el nu\u0301mero A que indica el nu\u0301mero de clientes e indices de inflacio\u0301nSiguientes A li\u0301neas dos enteros separados por un espacio representando N y X_ i representando la cantidad que lleva a cambiar el cliente y su i\u0301ndice de inflacio\u0301n respectivamente.",
    "output": "A li\u0301neas con un entero cada una representando el valor C de monedas a dar a cada cliente",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 1090
  },
  {
    "title": "1 Valor Absoluto",
    "url": "https://omegaup.com/arena/problem/Valor-Absoluto",
    "history": "# Valor absolutoTu tarea es escribir un programa que dados dos nu\u0301meros enteros M y N imprima el valor absoluto de la suma de ambos nu\u0301meros.",
    "input": "Dos enteros M Y N separados por un espacio en blanco",
    "output": "El valor absoluto de la suma de ambos nu\u0301meros",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 1071
  },
  {
    "title": "5 y 6",
    "url": "https://omegaup.com/arena/problem/5_y_6",
    "history": "Despue\u0301s de que la maestra se dio cuenta que Mary se estaba aburriendo de nuevo, ella le dio otro problema. Escribio\u0301 dos enteros, A y B, en el pizarro\u0301n y le pregunto\u0301 que los sumara. Mary nunca comete errores en sus operaciones, pero algunas veces no copia correctamente los nu\u0301meros. El u\u0301nico error que hace al copiar, es poner un ' 5' por un ' 6' , y viceversa. Se te dara\u0301n dos nu\u0301meros, A y B, calcula la suma mi\u0301nima y ma\u0301xima que Mary podri\u0301a obtener.",
    "input": "La primer y u\u0301nica li\u0301nea de entrada contiene dos enteros positivos A y B ( 1 \u2264 A, B \u2264 1 000 000) .",
    "output": "En una so\u0301la li\u0301nea de la salida, imprimir dos enteros separados por un espacio, la suma mi\u0301nima y ma\u0301xima que Mary podri\u0301a obtener. # Ejemplos| | input11 25| | output36 37| | input1430 4862| | output6282 6292| | input16796 58786| | output74580 85582| | end",
    "note": "",
    "topics": [
      "strings",
      "math"
    ],
    "id": 1059
  },
  {
    "title": "Soluciones enteras de una ecuaci\u00f3n",
    "url": "https://omegaup.com/arena/problem/see",
    "history": "Escribe un programa que determine la cantidad n de soluciones enteras que tiene la ecuacio\u0301n ax + by = c con x \u2265 0, y \u2265 0. Observa que es posible que esta ecuacio\u0301n no tenga ninguna solucio\u0301n ( es decir n = 0) o que tenga un nu\u0301mero infinito de soluciones ( en cuyo caso debes reportar n = - 1) . Por ejemplo, si a = 2, b = 5 y c = 20 entonces n = 3 ya que la ecuacio\u0301n 2x + 5y = 20 tiene las soluciones x = 0, y = 4; x = 5, y = 2; x = 10, y = 0.",
    "input": "Tres nu\u0301meros enteros a, b y c separados por espacios y todos ellos en el intervalo de - 1, 000, 000 a 1, 000, 000 ( incluye\u0301ndolos) .",
    "output": "Un nu\u0301mero entero n.",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 1041
  },
  {
    "title": "Soluciones enteras de una ecuaci\u00f3n cuadr\u00e1tica",
    "url": "https://omegaup.com/arena/problem/sec",
    "history": "Escribe un programa que determine la cantidad s de soluciones enteras que tiene la ecuacio\u0301n cuadra\u0301tica ax^ 2 + bx + c = 0. Observa que es posible que esta ecuacio\u0301n no tenga soluciones enteras ( en este caso debes reportar s = 0) o que tenga un nu\u0301mero infinito de soluciones enteras ( y en este caso debes reportar s = - 1) . Por ejemplo, si a = 3, b = 1 y c = - 4 entonces s = 1 ya que la ecuacio\u0301n 3x^ 2 + x - 4 = 0 tiene so\u0301lo una solucio\u0301n entera.",
    "input": "Tres nu\u0301meros enteros a, b y c en el intervalo de - 1, 000, 000 a 1, 000, 000 ( incluye\u0301ndolos) .",
    "output": "Un nu\u0301mero entero s.",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 1039
  },
  {
    "title": "Diferencias de cuadrados",
    "url": "https://omegaup.com/arena/problem/ddc",
    "history": "Algunos enteros se pueden representar como diferencia de dos enteros al cuadrado, por ejemplo 15 = 4^ 2 - 1^ 2 = 8^ 2 - 7^ 2. Escribe un programa que determine la cantidad de formas distintas t en las que se puede escribir un nu\u0301mero entero n como diferencia de dos cuadrados a^ 2 - b^ 2 donde a \u2265 b \u2265 0.",
    "input": "Un nu\u0301mero entero n tal que 0 \u2264 n \u2264 1, 000, 000.",
    "output": "Un nu\u0301mero entero t.",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 1032
  },
  {
    "title": "Sumas de dos cuadrados",
    "url": "https://omegaup.com/arena/problem/sdc",
    "history": "Algunos nu\u0301meros enteros se pueden representar como suma de dos enteros al cuadrado, por ejemplo 50 = 1^ 2 + 7^ 2 = 5^ 2 + 5^ 2. Escribe un programa que determine la cantidad de formas distintas t en las que se puede escribir un nu\u0301mero entero n como suma de dos cuadrados a^ 2 + b^ 2 donde 0 \u2264 a \u2264 b \u2264 n. Por ejemplo, si n = 50 entonces hay dos formas, por lo que t = 2.",
    "input": "Un nu\u0301mero entero n tal que 1 \u2264 n \u2264 2, 000, 000, 000.",
    "output": "Un nu\u0301mero entero t.",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 1031
  },
  {
    "title": "Extremos de una funci\u00f3n racional",
    "url": "https://omegaup.com/arena/problem/efr",
    "history": "Escribe un programa que determine el valor ma\u0301ximo p y el valor mi\u0301nimo q que toma la funcio\u0301n f( x) = ax + b/ cx + d en los enteros que se encuentran en el intervalo dado por m y n ( incluye\u0301ndolos) . Observa que es posible que la funcio\u0301n no este\u0301 definida en todos los puntos de ese intervalo. Adema\u0301s, debera\u0301 determinar los enteros r y s en los cuales se alcanzan estos valores ( es decir, tales que f( r) = p y f( s) = q) . En caso de que haya varios enteros r y s con esa propiedad, se deben dar aquellos cuyos valores sean los menores posibles. Por ejemplo, si f( x) = x + 2/ x - 2 y el intervalo esta\u0301 dado por m = - 2 y n = 3 entonces vemos que f( - 2) = 0, f( - 1) = - 1/ 3, f( 0) = - 1, f( 1) = - 3, f( 2) no esta\u0301 definida y f( 3) = 5, por lo que r = 3 y s = 1.",
    "input": "Seis nu\u0301meros enteros a, b, c, d, m y n ( con m \u2264 n) separados por espacios y todos ellos en el intervalo de - 1000 a 1000 ( incluye\u0301ndolos) . Puedes suponer que el intervalo m \u2264 x \u2264 n contiene al menos un entero x en el cual la funcio\u0301n f( x) esta\u0301 definida ( y por lo tanto el ma\u0301ximo y el mi\u0301nimo existen) .",
    "output": "Dos nu\u0301meros enteros r y s, separados por espacios.",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 1029
  },
  {
    "title": "Tri\u00e1ngulos de lados pares e impares",
    "url": "https://omegaup.com/arena/problem/tpi",
    "history": "Tres nu\u0301meros positivos a, b y c son las longitudes de los lados de un tria\u0301ngulo si a + b > c, b + c > a y c + a > b. Escribe un programa que determine la cantidad de tria\u0301ngulos distintos ( dos tria\u0301ngulos son distintos si no se pueden girar de ninguna forma para que coincidan) tales que las longitudes de sus lados son nu\u0301meros enteros impares ( llamemos a este nu\u0301mero p) y la cantidad de tria\u0301ngulos distintos tales que las longitudes de sus lados son nu\u0301meros enteros pares ( llamemos a este nu\u0301mero q) . En ambos casos, las longitudes de los lados deben estar en el intervalo dado por m y n ( incluye\u0301ndolos) .",
    "input": "Dos nu\u0301meros enteros m y n, separados por un espacio, con 1 \u2264 m \u2264 n \u2264 1000.",
    "output": "Dos nu\u0301meros enteros p y q separados por un espacio.",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 1027
  },
  {
    "title": "Extremos de una funci\u00f3n c\u00fabica",
    "url": "https://omegaup.com/arena/problem/Extremos-de-una-funcion-cubica",
    "history": "Escribe un programa que determine el valor ma\u0301ximo p y el valor mi\u0301nimo q que toma la funcio\u0301n f( x) = ax^ 3 + bx^ 2 + cx + d en los enteros que se encuentran en el intervalo dado por m y n ( incluye\u0301ndolos) . Adema\u0301s, debera\u0301 determinar los puntos r y s en los cuales se alcanzan estos valores ( es decir, tales que f( r) = p y f( s) = q) . En caso de que haya varios puntos r y s con esa propiedad, se deben dar aquellos cuyos valores sean los menores posibles.",
    "input": "Seis nu\u0301meros enteros a, b, c, d, m y n ( con m \u2264 n) separados por espacios y todos ellos en el intervalo de - 1000 a 1000 ( incluye\u0301ndolos) .",
    "output": "Cuatro nu\u0301meros enteros p, q, r y s, separados por espacios.",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 1023
  },
  {
    "title": "Recuperaci\u00f3n de amino\u00e1cidos ",
    "url": "https://omegaup.com/arena/problem/rda",
    "history": "En bioinforma\u0301tica, los aminoa\u0301cidos son formados a partir de tripletas de nucleo\u0301tidos a los cuales se les llama codones. Cada tripleta que forma un aminoa\u0301cido para todas las combinaciones posibles, recibe un nombre y a esto es lo que se le conoce como co\u0301digo gene\u0301tico. Dicho co\u0301digo, al ser codificado como cadena puede contener solamente las letras A, C, G y T. En el laboratorio se han mezclado por accidente secuencias de co\u0301digos gene\u0301ticos con otros tipos de co\u0301digos que por el momento no nos interesan. Dichos co\u0301digos esta\u0301n formados por todas las letras del alfabeto menos la A, C, G y T. A pesar de la mezcla, en ocasiones es posible recuperar la secuencia de co\u0301digo gene\u0301tico siempre que se mantenga la propiedad de que sea posible formar tripletas y so\u0301lo este\u0301n involucradas las letras A, C, G y T. Las dema\u0301s letras pueden ser eliminadas. Escribe un programa que, dada una secuencia alterada, encuentre la cantidad t de tripletas formadas correctamente y la cantidad f de letras que falten para formar un correcto co\u0301digo gene\u0301tico.",
    "input": "Una cadena de n letras mayu\u0301sculas, con 1 \u2264 n \u2264 1, 000, 000.",
    "output": "Un nu\u0301mero entero t y un nu\u0301mero entero f.",
    "note": "",
    "topics": [
      "math",
      "strings"
    ],
    "id": 1010
  },
  {
    "title": "Boletos por besos",
    "url": "https://omegaup.com/arena/problem/bpb",
    "history": "Para ir hacia su escuela, Juan aborda un camio\u0301n. Cuando Juan sube al camio\u0301n y deposita las monedas en la alcanci\u0301a, el conductor le da un boleto con un nu\u0301mero de serie consecutivo, el cual generalmente llega a la basura. Sin embargo, un di\u0301a el se entera de algo interesante. Si la suma de los di\u0301gitos de dicho boleto es 21, e\u0301l lo puede cambiar con quien quiera por un beso. Juan quiere conseguir muchos besos de la persona que esta\u0301 enamorado y ella ha aceptado da\u0301rselos a cambio de dichos boletos, pero no es tan fa\u0301cil conseguirlos. Juan ha decidido que si el boleto que le da el conductor no suma 21 esperara\u0301 hasta que el de una persona que suba despue\u0301s de e\u0301l sume 21 y se lo pedira\u0301. Para lograrlo Juan debe ir realizando las cuentas a mano, cosa que es muy tediosa. Ayuda a Juan escribiendo un programa que dado un nu\u0301mero n de 7 di\u0301gitos, le proporcione el nu\u0301mero p de personas que deben abordar despue\u0301s de e\u0301l para que obtenga el boleto deseado y m, donde m representa los 7 di\u0301gitos de dicho boleto. Cuando un tiraje de boletos termina, es decir se entrega el 9999999, el conductor toma otro tiraje comenzando nuevamente en el nu\u0301mero 0000000.",
    "input": "Un nu\u0301mero entero n de 7 di\u0301gitos ( que posiblemente comienza con ceros) .",
    "output": "Un nu\u0301mero entero p y un nu\u0301mero m de 7 di\u0301gitos",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 1008
  },
  {
    "title": "\u00c1rea de la intersecci\u00f3n de dos rect\u00e1ngulos",
    "url": "https://omegaup.com/arena/problem/air",
    "history": "Considere que tiene dos recta\u0301ngulos con lados paralelos a los ejes de coordenadas: uno con ve\u0301rtices opuestos ( u, v) y ( x, z) y el otro con ve\u0301rtices opuestos ( p, q) y ( r, s) . Escribe un programa que calcule el a\u0301rea a de la interseccio\u0301n de esos dos recta\u0301ngulos. Por ejemplo, si un recta\u0301ngulo tiene ve\u0301rtices opuestos ( 3, 1) y ( 1, 4) y el otro tiene ve\u0301rtices opuestos ( 2, 7) y ( 1, 2) entonces su interseccio\u0301n tiene a\u0301rea a = 2.",
    "input": "Ocho nu\u0301meros enteros u, v, x, z, p, q, r y s separados por espacios y todos ellos en el intervalo de 0 a 10^ 6.",
    "output": "Un nu\u0301mero entero a.",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 1007
  },
  {
    "title": "\u00c1rea m\u00e1xima de un trapecio",
    "url": "https://omegaup.com/arena/problem/amt",
    "history": "Un carpintero tiene cuatro tablas de madera de longitudes a, b, c, d con las cuales desea construir los lados de una caja con forma detrapecio ( es decir, un cuadrila\u0301tero que tiene dos lados paralelos) . Aunque sabe co\u0301mo construir dicha caja, no sabe cua\u0301l sera\u0301 el a\u0301rea delfondo resultante. Escribe un programa que determine el a\u0301rea que tendra\u0301 el fondo de la caja considerando que ha sido construida con una\u0301rea ma\u0301xima. Puedes suponer que con las longitudes dadas se puede construir al menos un trapecio.",
    "input": "Cuatro nu\u0301meros enteros a, b, c, d con 1 \u2264 a, b, c, d \u2264 1000.",
    "output": "El a\u0301rea ma\u0301xima m que puede tener la caja. Si dicha a\u0301rea tiene una parte decimal, e\u0301sta debe ser truncada.",
    "note": "",
    "topics": [
      "brute force",
      "math",
      "implementation",
      "geometry"
    ],
    "id": 999
  },
  {
    "title": "Tarifas de taxi",
    "url": "https://omegaup.com/arena/problem/tdt",
    "history": "Generalmente los usuarios de taxis no quedan conformes con la tarifa indicada por los taxi\u0301metros pues la mayori\u0301a piensa que varios de los taxis en la ciudad utilizan taxi\u0301metros alterados. Un taxi\u0301metro funciona de la siguiente manera: en el momento que un usuario aborda la unidad, el conductor del taxi presiona un boto\u0301n que reinicializa el taxi\u0301metro marcando una tarifa inicial B llamada banderazo y a partir de ahi\u0301 se realiza un incremento de un peso cada que se avanza una distancia M de metros o bien cada S segundos, lo que ocurra primero. Una vez que se realiza el incremento, los contadores de metros y segundos son inicializados nuevamente a 0. Los valores de B, M y S siempre son visibles al momento de abordar el taxi. Betito ha desarrollado una aplicacio\u0301n que utiliza el sistema GPS de los celulares y le permite conocer cua\u0301l fue el tiempo total del viaje asi\u0301 como la posicio\u0301n, en metros, en la que se encontraba durante cada segundo del recorrido a partir de la posicio\u0301n inicial que siempre se toma como 0. Escribe un programa que, con base en los datos registrados por la aplicacio\u0301n de Betito y los valores conocidos B, M y S, permita verificar a los usuarios de esta aplicacio\u0301n si efectivamente el costo indicado en el taxi\u0301metro es el reportado por la aplicacio\u0301n. Por ejemplo suponga que se tiene B = 10, M = 10, S = 2, que el recorrido total duro\u0301 T = 8 segundos y que la posicio\u0301n del taxi a cada segundo esta\u0301 dada por ( 7, 11, 18, 20, 45, 49, 49, 59) . Suponga que P representa el valor indicado por el contador de metros, Q el de segundos y C el costo actual del recorrido. En T_ 1 el taxi se encuentra en el metro 7, por lo tanto P = 7, Q = 1 y C = 10; en T_ 2 se encuentra en la posicio\u0301n 11, con P = 1, Q = 0 y C = 11 ( tenga en cuenta que P llego a 10 y esto provoca reiniciar ambos contadores, pero P requiere sumar el metro adicional avanzado despue\u0301s de los 10 metros) ; en T_ 3 tenemos que P = 8, Q = 1 y C = 11; en T_ 4, P = 0, Q = 0 y C = 12; en T_ 5, P = 5, Q = 0 y C = 14; en T_ 6, P = 9, Q = 1 y C = 14; en T_ 7, P = 0, Q = 0 y C = 15; finalmente en T_ 8, los contadores terminan con P = 0, Q = 0 y C = 16.",
    "input": "Cuatro enteros B, M, S, T que son el banderazo, metros, segundos y el tiempo de recorrido, seguidos de una li\u0301nea con T enteros que denotan la ubicacio\u0301n del taxi al tiempo T_ i. Puedes suponer que 1 \u2264 B, M, S \u2264 1000, 1 \u2264 T \u2264 100000, 0 \u2264 Ti \u2264 100000, y que todos los valores T_ i esta\u0301n dados en orden ascendente.",
    "output": "Un entero C que corresponde al costo total del viaje.",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 997
  },
  {
    "title": "A\u00f1o bisiesto marciano",
    "url": "https://omegaup.com/arena/problem/abm",
    "history": "Finalmente los humanos han acondicionado Marte para poder vivir en e\u0301l y hay muchas personas que desean vivir alla\u0301. Sin embargopara poder organizar adecuadamente la actividad humana en dicho planeta se necesita elegir un calendario. La gente que vivira\u0301 enMarte ha votado por un calendario parecido al de la Tierra por lo que su an\u0303o ( que tiene una duracio\u0301n de 686 di\u0301as) tambie\u0301n se dividira\u0301en 12 meses y las semanas tendra\u0301n 7 di\u0301as. Se ha decidido que en Marte todos los meses tengan 57 di\u0301as, excepto febrero que tendra\u0301 59 di\u0301as. Desafortunadamente algo parecido alan\u0303o bisiesto tambie\u0301n existira\u0301 en aquel planeta y cuando el an\u0303o sea mu\u0301ltiplo de cinco entonces febrero tendra\u0301 un di\u0301a menos. Ya que senecesita empezar a coordinar las actividades futuras en el planeta vecino te han pedido que escribas un programa que dada una fechamarciana te indique que\u0301 di\u0301a de la semana es. En Marte el 1 de enero de 2001 sera\u0301 considerado lunes.",
    "input": "Tres enteros D, M, A que son el di\u0301a, mes y an\u0303o marcianos. Puedes suponer que 1 \u2264 D \u2264 59, 1 \u2264 M \u2264 12, 2001 \u2264 A \u2264 100000y que la fecha es va\u0301lida.",
    "output": "Un entero 1 \u2264 S \u2264 7 que corresponde al di\u0301a de la semana, donde S = 1 significa lunes, S = 2 significa martes, etc.",
    "note": "",
    "topics": [
      "implementation",
      "divide and conquer",
      "math"
    ],
    "id": 992
  },
  {
    "title": "Contando Letras",
    "url": "https://omegaup.com/arena/problem/Contando-Letras",
    "history": "En una imprenta han decidido implementar un nuevo me\u0301todo de cobranza. El duen\u0303o se ha dado cuenta que gastan ma\u0301s en tinta con ciertas letras y ha decidido empezar a cobrar por letra. Como los textos que imprimen son muy largos - libros incluso- te han pedido que les ayudes a crear un programa que cuente letras. Adema\u0301s, dado que los ti\u0301tulos y subti\u0301tulos se cobrara\u0301n distinto, ellos te dira\u0301n en que cara\u0301cter iniciar y en cual terminar de contar.",
    "input": "Dos nu\u0301meros enteros, I ( inicio) y F ( final) y un texto.",
    "output": "Para cada letra en el abecedario, el nu\u0301mero de caracteres que contiene esa porcio\u0301n de texto.",
    "note": "",
    "topics": [
      "math",
      "implementation",
      "strings"
    ],
    "id": 972
  },
  {
    "title": "Estudiando",
    "url": "https://omegaup.com/arena/problem/Estudiando",
    "history": "Esta\u0301s ayudando a tu hermanita a estudiar para su examen de matema\u0301ticas pero como tu\u0301 tambie\u0301n tienes exa\u0301menes has decidido hacer un programa que le diga si los ejercicios que esta\u0301 haciendo esta\u0301n bien en lugar de revisarlos tu\u0301. Tu hermanita va a ingresar dos nu\u0301meros y despue\u0301s el resultado de cada una de las operaciones en el siguiente orden: 1. Suma1. Resta1. Multiplicacio\u0301n1. Divisio\u0301n1. Mo\u0301duloTu programa debera\u0301 decirle si sus ca\u0301lculos son correctos o no y en caso de que no lo este\u0301n, le dara\u0301 la respuesta correcta.",
    "input": "Dos nu\u0301meros enteros, seguidos de 5 enteros que representan el resultado de cada una de las operaciones mencionadas arriba.",
    "output": "\u201cCorrecto\u201d si los ca\u0301lculos esta\u0301n bien e \u201cIncorrecto\u201d y los resultados correctos si al menos uno de los resultados esta\u0301 mal.",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 936
  },
  {
    "title": "D\u00f3lares",
    "url": "https://omegaup.com/arena/problem/Dolares",
    "history": "Dentro de poco sera\u0301 Semana Santa y como vives en Coyoaca\u0301n, sabes que habra\u0301 muchos turistas pidiendo tu ayuda para ubicarse y manejar dinero mexicano. Como consideras que siempre es bueno practicar tu france\u0301s o ingle\u0301s y eres buena persona, decides ayudarles y crear una aplicacio\u0301n que convierta do\u0301lares en pesos para que no vayan a pagar de ma\u0301s \u2013o de menos- en los museos y establecimientos.",
    "input": "Un entero N que representa la cantidad en do\u0301lares y un entero K que representa el tipo de cambio de do\u0301lares por pesos.",
    "output": "La equivalencia en pesos de los N do\u0301lares introducidos.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 935
  },
  {
    "title": "Mediana promedio",
    "url": "https://omegaup.com/arena/problem/mediana_promedio",
    "history": "El promedio de tres enteros A, B y C es ( A + B + C) / 3. La mediana de tres enteros es aquel que estari\u0301a enmedio si son ordenados de manera ascendente. Dados dos enteros A y B, regresar el entero C mi\u0301nimo posible tal que el promedio y la mediana de A, B y C sean iguales.",
    "input": "Se te dara\u0301n, en una sola li\u0301nea, dos enteros A y B ( 1 \u2264 A \u2264 B \u2264 10^ 9) .",
    "output": "El entero C mi\u0301nimo posible, tal que sean iguales el promedio y la mediana de A, B y C. # Ejemplos| | input1 2| | output0| | input6 10| | output2| | input1 1000000000| | output- 999999998| | end",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 931
  },
  {
    "title": "Cada Segundo Cuenta",
    "url": "https://omegaup.com/arena/problem/Cada-Segundo-Cuenta",
    "history": "Te has dado cuenta que tu reloj esta\u0301 desfasado por unos cuantos segundos, y como cada segundo cuenta, te has dado a la tarea de realizar un programa que te diga cua\u0301ntos segundos adelantar o retroceder para que tu reloj este\u0301 en la hora correcta.",
    "input": "| | output",
    "output": "| | input513| | outputADELANTAR 8 SEGUNDOS| | input595| | outputATRASAR 54 SEGUNDOS| | input65| | outputATRASAR 1 SEGUNDO| | end# Li\u0301mites* Se te asegura que la cantidad de horas y minutos que marca tu reloj, siempre sera\u0301 la correcta. * Al inicio, tu reloj nunca marcara\u0301 la cantidad de segundos correcta. * 0 < = S < 60, siendo S la cantidad de segundos de los relojes.",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 916
  },
  {
    "title": "\u00bfQui\u00e9n tiene m\u00e1s dinero?",
    "url": "https://omegaup.com/arena/problem/Quien-tiene-mas-dinero",
    "history": "Todos los di\u0301as a Juan y Pedro discuten por quien tiene ma\u0301s dinero de los dos, pues resulta que a Juan siempre le dan 3 monedas, y a Pedro solo dos monedas tu trabajo es realizar un programa que indique si Juan o Pedro tienen ma\u0301s dinero.",
    "input": "Recibira\u0301s el valor de cada moneda, primero las 3 monedas juan y luego las dos monedas de pedro.",
    "output": "El nombre del nin\u0303o con mayor dinero.",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 867
  },
  {
    "title": "Calcular el descuento",
    "url": "https://omegaup.com/arena/problem/Calcular-el-descuento",
    "history": "En el Super Rangel se hace un 15",
    "input": "Recibe un nu\u0301mero entero que indica la cantidad a pagar",
    "output": "Indica el total a pagar ya con el descuento, si es que se aplico.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 866
  },
  {
    "title": "Suma de 3 n\u00fameros",
    "url": "https://omegaup.com/arena/problem/Suma-de-3-numeros",
    "history": "",
    "input": "Recibe tres nu\u0301meros enteros.",
    "output": "Retorna el total de la suma de los 3 nu\u0301meros",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 847
  },
  {
    "title": "Linea m\u00e1s larga",
    "url": "https://omegaup.com/arena/problem/Linea-mas-larga",
    "history": "El juego de la li\u0301nea ma\u0301s larga, es un juego para dos personas que se desarrolla de la siguiente manera, inicialmente se tiene un tablero vaci\u0301o que puede tener hasta 100, 000 casillas, estas casillas esta\u0301n ordenadas en forma de una larga li\u0301nea. Cada jugador tiene fichas de un color diferente, el jugador uno tiene fichas negras y el jugador dos tiene fichas grises. Durante su turno cada jugador puede colocar una de sus fichas en cualquiera de las casillas del tablero que este vaci\u0301a. El ganador del juego es aque\u0301l que despue\u0301s de un cierto nu\u0301mero de turnos que se determino\u0301 al inicio del juego, haya formado la li\u0301nea de fichas de su color consecutivas ma\u0301s larga. # ProblemaEres el jugador nu\u0301mero dos, y te encuentras en la u\u0301ltima tirada del juego. Tu tarea consiste en hacer un programa que determine cual es el taman\u0303o de la mayor li\u0301nea de tu color ( gris) que quedara\u0301 en el tablero despue\u0301s de realizar tu mejor jugada posible, independientemente de cua\u0301l jugador ganara\u0301 el juego. NOTA: La mejor jugada posible es aquella que deja en el tablero la li\u0301nea ma\u0301s larga de tu color.",
    "input": "En la primera li\u0301nea leera\u0301s el nu\u0301mero 4< = N< = 100, 000 el cual indica el nu\u0301mero de casillas del tableroEn la segunda li\u0301nea habra\u0301n N nu\u0301meros separados por un espacio. Estos nu\u0301meros representan el estado de cada casilla del tablero al momento de la u\u0301ltima tirada. Cada uno de estos nu\u0301meros puede tomar el valor 0, 1 o 2, donde el nu\u0301mero 0 ( cero) indica que la casilla esta vaci\u0301a, el nu\u0301mero 1 indica que la casilla tiene una ficha del jugador uno y el nu\u0301mero 2 indica una ficha del jugador dos, en este caso, una de tus fichas.",
    "output": "Tu programa debera\u0301 escribir un nu\u0301mero que indique el taman\u0303o de la li\u0301nea ma\u0301s larga de tu color que quedo\u0301 en el tablero despue\u0301s de realizar tu mejor jugada",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 839
  },
  {
    "title": "El Mayor Impar",
    "url": "https://omegaup.com/arena/problem/El-Mayor-Impar",
    "history": "Debera\u0301s leer 5 nu\u0301meros desde consola, en los cuales tu debera\u0301s imprimir el numero mayor que sea impar.",
    "input": "5 nu\u0301meros enteros separados cada uno separado por un salto de linea.",
    "output": "El numero mayor, que no sea par. Cualquier otra cosa que se imprima que no sea este numero, hara incorrecta tu respuesta.",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 834
  },
  {
    "title": "L-OMI2009-Rangos",
    "url": "https://omegaup.com/arena/problem/rangos",
    "history": "Se tiene un renglo\u0301n con casillas numeradas del 1 al N. Inicialmente cada casilla contiene el nu\u0301mero 0. Los valores en las casillas del renglo\u0301n se pueden actualizar utilizando el siguiente mecanismo: - Se define un rango de casillas del renglo\u0301n como i, j, donde i < j. Por ejemplo i= 3, j= 6. - Se le suma 1 a la casilla i, 2 a la casilla i+ 1, 3 a la i+ 2, y asi\u0301 hasta llegar a la casilla j. Por ejemplo, si N= 7 se tiene un renglo\u0301n de 7 posiciones que originalmente esta\u0301 lleno con 7 ceros 0, 0, 0, 0, 0, 0, 0, al actualizar el rango 3, 6 el renglo\u0301n queda 0, 0, 1, 2, 3, 4, 0, una siguiente actualizacio\u0301n al rango 4, 7 dejari\u0301a el renglo\u0301n como sigue: 0, 0, 1, 3, 5, 7, 4. Despue\u0301s de aplicar actualizaciones al renglo\u0301n, se requiere poder responder preguntas del siguiente tipo: - Se define un rango de casillas del renglo\u0301n como u, v, donde u < v. Por ejemplo u= 4, v= 6. - Se debe dar como respuesta la suma de los valores de todas las casillas comprendidas en el rango, mo\u0301dulo 10, 000, es decir, el residuo que se obtiene si se divide el total entre 10, 000. # ProblemaDado el nu\u0301mero N y una serie de A rangos de actualizacio\u0301n escribe un programa que sea capaz de contestar P preguntas en el tiempo dado.",
    "input": "Tu programa debera\u0301 leer de la entrada esta\u0301ndar los siguientes datos: - La primera li\u0301nea contiene 3 nu\u0301meros enteros separados por un espacio: N, A y P que representan el largo del renglo\u0301n, el nu\u0301mero de actualizaciones y el nu\u0301mero de preguntas respectivamente. - Las siguientes A li\u0301neas contienen 2 nu\u0301meros enteros cada una y representan un rango de actualizacio\u0301n. - Las siguientes P li\u0301neas contienen 2 nu\u0301meros enteros cada una y representan el rango de una pregunta.",
    "output": "Tu programa debera\u0301 escribir a la salida esta\u0301ndar P li\u0301neas, cada una con un nu\u0301mero entero que representa la respuesta a la pregunta correspondiente. * * NOTA: Recuerda que las respuestas a las preguntas debera\u0301n ser mo\u0301dulo 10, 000* * .",
    "note": "",
    "topics": [
      "implementation",
      "math",
      "divide and conquer"
    ],
    "id": 816
  },
  {
    "title": "\u00c1rea agr\u00edcola",
    "url": "https://omegaup.com/arena/problem/area_agricola",
    "history": "Una gran Corporacio\u0301n Agri\u0301cola tiene una auditori\u0301a de sus n propiedades de tierra. Como primer paso, desea saber cual es el a\u0301rea total de todas sus propiedades. Cada propiedad tiene una forma rectangular y no hay propiedades que se traslapen. Escribe un programa que dada las dimensiones de las n propiedades de tierra, determine la suma de sus a\u0301reas. # Consideraciones1 \u2264 n \u2264 500, 000< br> 1 \u2264 A_ k, B_ k \u2264 20, 000",
    "input": "Tu programa debera\u0301 leer de la entrada esta\u0301ndar los siguientes datos: < ol type= disk> < li> La primer li\u0301nea contiene un so\u0301lo entero: el nu\u0301mero n de propiedades< li> Las siguientes n li\u0301neas describen las propiedades, una propiedad por li\u0301nea. La k li\u0301nea describe la propiedad nu\u0301mero k y contiene dos enteros separados por un espacio: la longitud de los lados de la propiedad A_ k y B_ k, dadas en metros. < / ol>",
    "output": "Tu programa debera\u0301 escribir a la salida esta\u0301ndar una solo li\u0301nea conteniendo un so\u0301lo entero: el a\u0301rea total de todas las propiedades, medidas en metros cuadrados.",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 791
  },
  {
    "title": "1 Obtener promedio",
    "url": "https://omegaup.com/arena/problem/1-Obtener-promedio",
    "history": "EL maestro Melquiades quiere saber el promedio de calificaciones de su grupo, Por lo que tu como programador le ayudaras codificando un programita quele pida una cantidad de alumnos, y en seguida las calificaciones",
    "input": "La cantidad de Alumnos y las \" n\" calificaciones en escala 0 al 100, sin decimales.",
    "output": "Mostrar el promedio con dos decimales.",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 774
  },
  {
    "title": "0 Multiplicacion basica",
    "url": "https://omegaup.com/arena/problem/0-Multiplicacion-basica",
    "history": "Multiplicacion",
    "input": "Pide dos numeros enteros",
    "output": "mostrar el resultado de la multiplicacion de los numeros pedidos",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 772
  },
  {
    "title": "0 Resta basica",
    "url": "https://omegaup.com/arena/problem/0-Resta-basica",
    "history": "Restando ! ! !",
    "input": "Pide dos numeros enteros",
    "output": "mostrar el resultado de la resta de los numeros pedidos",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 771
  },
  {
    "title": "Arriba del promedio",
    "url": "https://omegaup.com/arena/problem/arriba_del_promedio",
    "history": "Se dice que el 90",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 737
  },
  {
    "title": "Cara o cruz",
    "url": "https://omegaup.com/arena/problem/cara_o_cruz",
    "history": "John y Mary han sido amigos desde la escuela de enfermeri\u0301a. Desde entonces han jugado a la Cara o Cruz con una moneda, y el que gane tiene el privilegio de decidir que jugar durante el di\u0301a. Mary siempre elige cara, y Juan siempre elige cruz. Ya no esta\u0301n en la misma escuela pero continu\u0301an siendo buenos amigos. Y au\u0301n siguen jugando a Cara o Cruz cuando se ven y el que gana decide que peli\u0301cula ver, o a que\u0301 restaurant ir a cenar juntos. Ayer, Mary le confio\u0301 a Juan que ha mantenido un registros de los resultados de los juegos desde la escuela de enfermeri\u0301a. Y co\u0301mo respuesta Juan ha decidido sorprenderla, debido a que estudia Ciencias de la Computacio\u0301n, seri\u0301a muy buena oportunidad de demostrar a Mary sus habilidades en la programacio\u0301n.",
    "input": "La entrada contiene un nu\u0301mero n que indica el nu\u0301mero de juegos que han jugado ( 1 \u2264 n \u2264 10000) . Las siguientes n li\u0301neas contienen r_ i, separados por un espacio, que son la lista de resultados. Si r_ i= 0, significa que Mary gano\u0301 el < k> i< / k> , si r_ i= 1 quiere decir que Juan gano\u0301 el < k> i< / k> juego ( 1 \u2264 i \u2264 n) .",
    "output": "Una frase que contenga \" Mary won x times and John won y times\" , donde x \u2265 0 y y \u2265 0.",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 734
  },
  {
    "title": "Supresores de picos",
    "url": "https://omegaup.com/arena/problem/supresores_de_picos",
    "history": "Roy se ha mudado a su nuevo departamente. Este departamento no es muy nuevo y so\u0301lo tiene un tomacorriente en toda la casa, asi\u0301 que Roy so\u0301lo puede tener conectado un aparato ele\u0301ctrico a la vez. Roy quiere ver la televisio\u0301n mientras trabaja en la computadora y escucha su sistema de sonido de alta fidelidad ( a un volumen muy alto) mientras aspira, asi\u0301 que usar un so\u0301lo tomacorriente no es la opcio\u0301n adecuada. Ha decidido conectar todos estos aparatos en unos supresores de picos que tiene y desea saber si todos los aparatos pueden funcionar al mismo tiempo. ! [ Imagen] ( outlets. jpg) Tu tarea es ayudar a Roy a calcular cuantos aparatos pueden estar conectados a la vez dado una serie de supresores de picos. Sabemos que so\u0301lo hay un tomacorriente en toda la casa y que los supresores tienen determinado nu\u0301mero de tomas y pueden estar conectados entre si, para proveer de electricidad a ma\u0301s aparatos.",
    "input": "La entrada iniciara con un entero 1 \u2264 n \u2264 20, que indica el nu\u0301mero de casos. Le siguen n li\u0301neas, cada una de ellas contiene a un caso. Cada caso empieza por un entero 1 \u2264 k \u2264 10, que se refiere al nu\u0301mero de supresores de picos de ese caso. Le siguen, en la misma li\u0301nea, k enteros separados por un espacio, O_ 1 O_ 2 . . . O_ k, donde 2 \u2264 O_ i \u2264 10, que indica el nu\u0301mero de tomas que tiene cada supresor de picos.",
    "output": "Una sola li\u0301nea por caso con el ma\u0301ximo nu\u0301mero de aparatos que pueden conectarse.",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 733
  },
  {
    "title": "Gusano escalador",
    "url": "https://omegaup.com/arena/problem/gusano_escalador",
    "history": "Un gusano esta\u0301 en el fondo de un pozo de n pulgadas. Tiene suficiente energi\u0301a para subir u pulgadas cada minuto, pero despue\u0301s descansa un minuto antes de escalar de nuevo. Durante el descanso, se resbala hacia abajo d pulgadas. El proceso de escalar y descansar se repite. Que tanto pasara\u0301 antes de que el gusano salga del pozo? . Siempre se contara\u0301 como una porcio\u0301n de un minuto como uno completo y si el gusano ha llegado hasta el tope del agujero la escalada ha terminado, de tal manera que asumiremos que el gusano lo ha logrado, sin importar el largo del gusano.",
    "input": "La entrada contiene 3 nu\u0301meros positivos enteros n, u y d. Estos valores se mencionan en el pa\u0301rrafo anterior. Adema\u0301s asumiremos que d < u y n < 1 000",
    "output": "Un so\u0301lo entero que indique el nu\u0301mero de minutos que le tomara\u0301 al gusano escalar y lograr salir del pozo. # Ejemplos| | input10 2 1| | output17| | input20 3 1| | output19| | end",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 725
  },
  {
    "title": "\u00c1rea de un tri\u00e1ngulo",
    "url": "https://omegaup.com/arena/problem/area_de_un_triangulo",
    "history": "Se te dara\u0301 la base y la altura de un tria\u0301ngulo, debera\u0301s desplegar su a\u0301rea.",
    "input": "Do\u0301s nu\u0301meros b y a",
    "output": "La salida debera\u0301 ser el a\u0301rea del tria\u0301ngulo con dos decimales despue\u0301s del punto.",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 712
  },
  {
    "title": "\u00c1rea de un rect\u00e1ngulo",
    "url": "https://omegaup.com/arena/problem/area_de_un_rectangulo",
    "history": "Se te dara\u0301 la base b y la altura a de un recta\u0301ngulo. Escribe un programa que calcule su a\u0301rea.",
    "input": "Dos enteros b y a separados por un espacio.",
    "output": "Un entero que sea el a\u0301rea del recta\u0301ngulo dado. Puedes suponer que su valor cabe en un entero de 32 bits.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 711
  },
  {
    "title": "Suma de dados",
    "url": "https://omegaup.com/arena/problem/suma_de_dados",
    "history": "Johnny lanza N dados de 6 caras, obteniendo diversos resultados. Encuentra cua\u0301l es la parejade dados lanzados cuya suma sea mi\u0301nima, y la pareja de dados cuya suma sea ma\u0301xima.",
    "input": "Un nu\u0301mero N entre 2 y 100. A continuacio\u0301n, N li\u0301neas con un nu\u0301mero entre 1 y 6 cada una, indicando las puntuaciones de los respectivos N dados.",
    "output": "Escribe dos li\u0301neas con un entero cada una: la suma de la pareja de dados con el resultadoma\u0301s pequen\u0303o, y la suma de la pareja de dados con el resultado ma\u0301s grande. # Ejemplo 1| | input261| | output77| | end# Ejemplo 2| | input43663| | output612| | end",
    "note": "",
    "topics": [
      "sortings",
      "math",
      "implementation"
    ],
    "id": 658
  },
  {
    "title": "Impacto",
    "url": "https://omegaup.com/arena/problem/conacup_impacto",
    "history": "# # Prueba de ImpactoUna compan\u0303i\u0301a de tecnologi\u0301a de materiales ha estado trabajando en el desarrollo de un nuevo material parecido al vidrio con propiedades capacitivas ( como las necesarias para elaborar una pantalla tipo touch) . El objetivo de su investigacio\u0301n es lograr que dicho material que sea muy resistente a los impactos por cai\u0301da ( muy deseable en este tipo de dispositivos) . De hecho creen que en el estado actual en el que se encuentra ya es capaz de resistir cai\u0301das desde varios pisos de altura. Sin embargo, el desarrollo del material au\u0301n se encuentra en la etapa de prototipo, por lo que su construccio\u0301n au\u0301n es difi\u0301cil y costosa. Es por eso que actualmente solo se tienen dos muestras del material. Problema: La compan\u0303i\u0301a te ha puesto al frente del equipo de pruebas de impacto para determinar cua\u0301l es la altura ma\u0301xima desde la que se puede dejar caer el material sin romperse. Para lograrlo, te han entregado las dos muestras de material moldeado en forma de esferas y te han enviado a un edificio en construccio\u0301n con N pisos de altura, el objetivo es determinar cua\u0301l es el piso ma\u0301s alto desde el cual se puede dejar caer una de las esferas sin que la esfera se rompa al impactar en el piso. Este dato le dara\u0301 al equipo de desarrollo la informacio\u0301n necesaria para determinar la resistencia real del material. Una consideracio\u0301n ma\u0301s: como el edificio en donde se realizara\u0301n las pruebas au\u0301n se encuentra en construccio\u0301n, pasar de un piso a otro es muy tardado, por lo que necesitas determinar el nu\u0301mero mi\u0301nimo de lanzamientos que tienes que hacer para obtener los resultados requeridos mientras ahorras tiempo. Por la naturaleza destructiva de una prueba de impacto se te permite romper ambas esferas siempre y cuando puedas determinar cua\u0301l es el piso ma\u0301s alto desde el cual se puede dejar caer una esfera del material investigado sin que se rompa. # Notas: * El material posee una propiedad u\u0301nica: si al caer de una determinada altura no se rompe, entonces ningu\u0301n impacto desde esa altura lo rompera\u0301. * Si el material se rompe desde una determinada altura entonces cualquier cai\u0301da desde un piso a mayor altura tambie\u0301n rompera\u0301 las esferas. * Recuerda el piso ma\u0301s alto desde el cual la esfera no se rompe al caer es completamente desconocido. * Es posible que la esfera se pueda romper en el piso 1. # Entrada: Un u\u0301nico numero entero N ( 0 \u2264 N \u2264 1\u2019000\u2019000\u2019000\u2019000\u2019000, 000 = 10^ 18) que representa el nu\u0301mero de pisos del edificio. # Salida: Un u\u0301nico nu\u0301mero entero que representa el nu\u0301mero mi\u0301nimo de lanzamientos necesarios para encontrar el piso ma\u0301s alto desde el cual al tirar otra esfera ide\u0301ntica no se rompera\u0301. # Ejemplo de entrada: 8# Ejemplo de salida: 4# Notas: * Para el 10",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "math",
      "constructive algorithms"
    ],
    "id": 631
  },
  {
    "title": "Primos",
    "url": "https://omegaup.com/arena/problem/conacup_primos",
    "history": "# # PrimosHay problemas que ni son complicados, ni necesitan explicaciones complejas. Digamos que en uno de esos momentos de ocio en los que la gente se pone a pensar en la inmortalidad del cangrejo a los programadores nos da por resolver el siguiente tipo de problemas por el puro gusto de hacerlo: alguien nos da una lista de N nu\u0301meros y pregunta cua\u0301ntos nu\u0301meros primos hay entre 1 y cada nu\u0301mero de dicho listado. Claro que lo menos que podemos hacer es escribir un programa que responda dicha pregunta en todos los casos. # Problema: En la primera li\u0301nea un numero 1 < = N < = 5, 000 a continuacio\u0301n N li\u0301neas con un numero 1 < = K < = 50, 000, 000 en cada li\u0301nea. Debes regresar N li\u0301neas en cada una un nu\u0301mero indicando cua\u0301ntos nu\u0301meros primos positivos hay menores a K. En el 20",
    "input": "21020",
    "output": "48# Nota: En matema\u0301ticas, un nu\u0301mero primo es un nu\u0301mero natural mayor que 1 que tiene u\u0301nicamente dos divisores distintos: e\u0301l mismo y el 1.",
    "note": "",
    "topics": [
      "divide and conquer",
      "data structures",
      "number theory",
      "implementation",
      "math"
    ],
    "id": 619
  },
  {
    "title": "Tutorial",
    "url": "https://omegaup.com/arena/problem/Tutorial2",
    "history": "# TutorialConacup es una competencia de programacio\u0301n orientada a la resolucio\u0301n de problemas de tipo algori\u0301tmico. Como queremos que el verdadero problema sea resolver el problema ( aunque parezca redundante) , este an\u0303o hemos decidido agregar un problema que sirva como gui\u0301a ba\u0301sica de co\u0301mo se tendri\u0301a que resolver un problema muy sencillo usando C, C+ + o Java. De esta forma el u\u0301nico problema restante es resolver los verdaderos problemas. # Problema: Dados dos nu\u0301meros enteros A y B que esta\u0301n entre ( - 2147483648, 2147483647) inclusive, calcula la suma de esos nu\u0301meros. # Solucio\u0301n ( C) : # include < stdio. h> int main( ) int a, b, r; scanf( \" d",
    "input": "10 20",
    "output": "30# NotaAsegurate de envi\u0301ar una solucio\u0301n para este problema ( solo copia y pega) , tambie\u0301n da puntos : ) .",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 618
  },
  {
    "title": "Midiendo la distancia",
    "url": "https://omegaup.com/arena/problem/midiendo_la_distancia",
    "history": "# ProblemaDebes escribir un programa que permita que Karel mida la distancia entre su posicio\u0301n inicial y una pared. Como resultado, Karel debera\u0301 dejar en la esquina inferior izquierda del mundo, una pila de beepers de altura igual a la distancia entre la posicio\u0301n inicial de Karel y la pared. # Entrada ejemplo! [ Ejemplo de entrada] ( midiendo_ la_ distancia_ entrada. jpg) # Salida ejemplo! [ Ejemplo de salida] ( midiendo_ la_ distancia_ salida. jpg) # Condiciones< ul> < li> Inicialmente Karel se encuentra orientado hacia el ESTE en la esquina inferior izquierda de su mundo< / li> < li> A la derecha de Karel, a una distancia desconocida hay una pared vertical< / li> < li> Karel tiene 100 beepers en su mochila< / li> < li> No importa la orientacio\u0301n y posicio\u0301n con la que termine Karel< / li> < / ul>",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 599
  },
  {
    "title": "Deuda",
    "url": "https://omegaup.com/arena/problem/Deuda",
    "history": "Nuestro amigo Cope tiene un problema pues le debe algunas cosas a cierta persona con la cual no puede quedar mal, sin embargo dicha persona es muy mala con Cope y trata de hacer que le pague ma\u0301s de lo que le debe, para esto le dice que los intereses han subido y pone mil cosas para cobrar de ma\u0301s. # ProblemaAyuda a Cope a llevar un buen control de su deuda sabiendo cuanto debe y cuanto abona, se sabe que originalmente no se hablo\u0301 de intereses asi\u0301 que no los hay.",
    "input": "En la primera li\u0301nea dos enteros N y M separados por un espacio representando el nu\u0301mero de cosas que debe Cope y los pagos que hara\u0301 respectivamente. Siguiente M li\u0301neas un entero representando el pago de Cope.",
    "output": "Un entero representando como finaliza la cuenta de Cope. | | input10 236| | output1| | end# Consideraciones* 0< = N< = 1000000* 1< = M< = 10",
    "note": "",
    "topics": [
      "dfs and similar",
      "implementation",
      "math"
    ],
    "id": 557
  },
  {
    "title": "Nivel \u00d3ptimo",
    "url": "https://omegaup.com/arena/problem/Nivel-Optimo",
    "history": "Platicando con los redactores de problemas aplicados en la OMISon nos hemos dado cuenta de que los problemas no tienen el mismo nivel de dificultad y eso disgusta a los alumnos. # ProblemaAyuda a los redactores de problemas de la OMISon a que los problemas tengan el mismo nivel de dificultad.",
    "input": "En la primera y u\u0301nica li\u0301nea recibira\u0301s dos nu\u0301meros separados por un espacio indicando la dificultad de cada examen.",
    "output": "Dos enteros separados por un espacio. El primero indicando a cua\u0301l de ellos le tienes que aumentar de nivel y el segundo nu\u0301mero indicando que tanto debe aumentar para que queden al mismo nivel ( checar el caso de ejemplo) .",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 556
  },
  {
    "title": "Promedios Falsos",
    "url": "https://omegaup.com/arena/problem/Promedios-Falsos",
    "history": "\u00a1Hazziel se ha vuelto padre! Y como buen padre debe cuidar de las calificaciones de su monto\u0301n de hijos, por eso cuando llega el tiempo de entregar calificaciones le gusta observar de cerca el promedio de sus hijos, asi\u0301 como ver por si\u0301 mismo si en verdad es el promedio que deben de tener ( y no es porque desconfie\u0301 de que los profesores se equivoquen al pasarlo, si no que sus hijos son muy man\u0303osos y les gusta maquillar sus calificaciones) . # ProblemaDada una cantidad de n hijos, verificar si el promedio entregado por ellos, es el correspondiente al que deberi\u0301a de dar sus calificaciones. Anotando al final, el nu\u0301mero del hijo que mintio\u0301, y su promedio verdadero.",
    "input": "En la primera li\u0301nea el nu\u0301mero N la cantidad de hijos de Hazziel. En las siguientes N li\u0301neas estara\u0301n 6 enteros separados por espacios representando las 5 calificaciones y el promedio en duda del hijo N_ i.",
    "output": "Por cada hijo que mintio\u0301 sobre su promedio una li\u0301nea con 2 enteros representando el nu\u0301mero de hijo y el promedio real respectivamente.",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 515
  },
  {
    "title": "Excursi\u00f3n",
    "url": "https://omegaup.com/arena/problem/Excursion",
    "history": "Cope ha conseguido trabajo como asistente en una escuela, sin embargo, cada vez que sale de excursio\u0301n, e\u0301l es el encargado de formar los equipos de excursio\u0301n, prefiriendo asi\u0301 formar los grupos lo mayores posibles pero que sean mu\u0301ltiplos de ambos grupos, para asi\u0301, tener que llevar menos encargados de grupos. # ProblemasAyu\u0301dale a determinar, dado dos grupos de alumnos, el taman\u0303o del mayor nu\u0301mero de alumnos que deben formar un equipo, asi\u0301 como tambie\u0301n, dar la cantidad de encargados que ira\u0301n en el grupo.",
    "input": "En la primera li\u0301nea el nu\u0301mero A representando el primer grupo. En la segunda li\u0301nea el nu\u0301mero B representando el segundo grupo.",
    "output": "Dos nu\u0301meros enteros separados por un espacio representando el taman\u0303o de los equipos y la cantidad de equipos a formar.",
    "note": "",
    "topics": [
      "implementation",
      "math",
      "number theory"
    ],
    "id": 513
  },
  {
    "title": "Duraci\u00f3n de un juego",
    "url": "https://omegaup.com/arena/problem/duracion_de_juego",
    "history": "Lea la hora de inicio y te\u0301rmino de un juego, en horas. Despue\u0301s calcule la duracio\u0301n del juego, sabiendo que el juego puede iniciar un di\u0301a y terminar en otro. Indique las horas que duro\u0301 el juego con una ma\u0301xima duracio\u0301n de 24 horas.",
    "input": "Dos nu\u0301meros enteros",
    "output": "Las horas que el juego duro\u0301.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 489
  },
  {
    "title": "Resta y multiplicaci\u00f3n",
    "url": "https://omegaup.com/arena/problem/resta_y_multiplicacion",
    "history": "Haz un sencillo programa que lea 4 variables nombradas A, B, C y D. Y calcula e imprima la multiplicacio\u0301n de la diferencia de A y B con la diferencia de C y D. ( A - B * C - D)",
    "input": "Cuatro nu\u0301meros enteros",
    "output": "El producto de la diferencia con 4 variables de acuerdo al ejemplo.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 486
  },
  {
    "title": "Promedio de 5 calificaciones",
    "url": "https://omegaup.com/arena/problem/promedio_5_calificaciones",
    "history": "Se te dara\u0301n 5 calificaciones, desplegar el promedio de ellas.",
    "input": "5 nu\u0301meros enteros como calificaciones.",
    "output": "El promedio de las 5 calificaciones a una decimal",
    "note": "",
    "topics": [
      "math",
      "implementation",
      "matrices"
    ],
    "id": 484
  },
  {
    "title": "Sedim\u00e1rip saidem",
    "url": "https://omegaup.com/arena/problem/sedimarip_saidem",
    "history": "El malvado Carelerak, hermano gemelo de Karelerac, ha descubierto que su hermano ha construido una media pira\u0301mide en el otro extremo de la ciudad. Enojado, ha decido construir su propia media pira\u0301mide, pero para evitar que lo acusen de plagio, la va a hacer creciente hacia la izquierda, y le llamara\u0301 Edima\u0301rip aidem. # ProblemaAyuda a Carelerak a construir su Edima\u0301rip aidem creciente hacia la izquierda con los beepers que tiene en la mochila. # Salida ejemplo con 6 beepers! [ Ejemplo de salida] ( sedimarip_ saidem_ salida. jpg) # Condiciones< ul> < li> Karel inicia en la posicio\u0301n ( 1, 1) orientado al norte< / li> < li> Karel lleva en su mochila un nu\u0301mero \" triangular\" de beepers, que siempre le alcanzara\u0301n en la construccio\u0301n< / li> < li> No importa la posicio\u0301n ni la orientacio\u0301n final de Karel< / li> < / ul>",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "implementation",
      "math",
      "constructive algorithms"
    ],
    "id": 473
  },
  {
    "title": "Cifrado Af\u00edn",
    "url": "https://omegaup.com/arena/problem/Cifrado-Afin",
    "history": "El cifrado afi\u0301n es un tipo de cifrado por sustitucio\u0301n en el que a cada si\u0301mbolo del alfabeto se le da un valor, este valor se sustituye en una expresio\u0301n del tipo < strong> < i> ( ax+ b) mod m< / i> < / strong> , y a lo que resulte se le asigna el si\u0301mbolo correspondiente. Para garantizar que a letras distintas le correspondan una letra distinta en el cifrado, se pide que < strong> < i> a< / i> < / strong> sea primo relativo a < strong> < i> m< / i> < / strong> . Para este problema usaremos < strong> < i> m< / i> < / strong> = 26 y los valores para cada letra sera\u0301n los que se muestran en la siguiente tabla: < TABLE CLASS= \" data\" > < tbody> < TR > < td> < STRONG> A< / STRONG> < / TD> < td> < STRONG> B< / TD> < td> < STRONG> C< STRONG> < / TD> < td> < STRONG> D< STRONG> < / TD> < td> < STRONG> E< STRONG> < / TD> < td> < STRONG> F< STRONG> < / TD> < td> < STRONG> G< STRONG> < / TD> < td> < STRONG> H< STRONG> < / TD> < td> < STRONG> I< STRONG> < / TD> < td> < STRONG> J< STRONG> < / TD> < td> < STRONG> K< / TD> < td> < STRONG> L< / TD> < td> < STRONG> M< / TD> < td> < STRONG> N< / TD> < td> < STRONG> O< / TD> < td> < STRONG> P< / TD> < td> < STRONG> Q< / TD> < td> < STRONG> R< / TD> < td> < STRONG> S< / TD> < td> < STRONG> T< / TD> < td> < STRONG> U< / TD> < td> < STRONG> V< / TD> < td> < STRONG> W< / TD> < td> < STRONG> X< / TD> < td> < STRONG> Y< / TD> < td> < STRONG> Z< / STRONG> < / TD> < / STRONG> < / TR> < TR> < td> 0< / TD> < td> 1< / TD> < td> 2< / TD> < td> 3< / TD> < td> 4< / TD> < td> 5< / TD> < td> 6< / TD> < td> 7< / TD> < td> 8< / TD> < td> 9< / TD> < td> 10< / TD> < td> 11< / TD> < td> 12< / TD> < td> 13< / TD> < td> 14< / TD> < td> 15< / TD> < td> 16< / TD> < td> 17< / TD> < td> 18< / TD> < td> 19< / TD> < td> 20< / TD> < td> 21< / TD> < td> 22< / TD> < td> 23< / TD> < td> 24< / TD> < td> 25< / TD> < / TR> < / tbody> < / TABLE> < br> Veamos un ejemplo. Supongamos que queremos cifrar la palabra \u0093CUPA\u0094, y que < strong> < i> a< / i> < / strong> = 3 y < strong> < i> b< / i> < / strong> = 12, entonces: < br> < TABLE CLASS= \" data\" > < tbody> < TR > < TD ALIGN= CENTER> < STRONG> Letra original< / STRONG> < / TD> < TD ALIGN= CENTER> < STRONG> Valor< / TD> < TD ALIGN= CENTER> < STRONG> Valor cifrado< STRONG> < / TD> < TD ALIGN= CENTER> < STRONG> Letra cifrada< STRONG> < / TD> < / TR> < TR > < TD ALIGN= CENTER> C< / TD> < TD ALIGN= CENTER> 2< / TD> < TD ALIGN= CENTER> ( 3\u00d72+ 12) mod 26 = 18 mod 26 = 18< / TD> < TD ALIGN= CENTER> S< / TD> < / TR> < TR > < TD ALIGN= CENTER> U< / TD> < TD ALIGN= CENTER> 20< / TD> < TD ALIGN= CENTER> ( 3\u00d720+ 12) mod 26 = 72 mod 26 = 20< / TD> < TD ALIGN= CENTER> U< / TD> < / TR> < TR > < TD ALIGN= CENTER> P< / TD> < TD ALIGN= CENTER> 15< / TD> < TD ALIGN= CENTER> ( 3\u00d715+ 12) mod 26 = 57 mod 26 = 5< / TD> < TD ALIGN= CENTER> F< / TD> < / TR> < TR > < TD ALIGN= CENTER> A< / TD> < TD ALIGN= CENTER> 0< / TD> < TD ALIGN= CENTER> ( 3\u00d70+ 12) mod 26 = 12 mod 26 = 12< / TD> < TD ALIGN= CENTER> M< / TD> < / TR> < / tbody> < / table> Entonces, el cifrado de CUPA es SUFM. # ProblemaCifra un mensaje sabiendo los valores de < strong> < i> a< / i> < / strong> y < strong> < i> b< / i> < / strong> .",
    "input": "La primera li\u0301nea tendra\u0301 dos enteros < strong> < i> a< / i> < / strong> y < strong> < i> b< / i> < / strong> , 0 < < strong> < i> a< / i> < / strong> < 2< sup> 31< / sup> , 0 le; < strong> < i> b< / i> < / strong> < 2< sup> 31< / sup> , a sera\u0301 primo relativo con 26. < br> La segunda li\u0301nea tendra\u0301 un mensaje con solamente letras mayu\u0301sculas del alfabeto ingle\u0301s. El mensaje no tendra\u0301 ma\u0301s de 255 caracteres.",
    "output": "Una sola li\u0301nea con el mensaje cifrado.",
    "note": "",
    "topics": [
      "strings",
      "math"
    ],
    "id": 471
  },
  {
    "title": "CR Cadenas Suaves",
    "url": "https://omegaup.com/arena/problem/Cadenas-Suaves",
    "history": "# HistoriaDecimos que una cadena es * suave* si todos sus caracteres son iguales. Como te gustan las cadenas * suaves* , quieres calcular cua\u0301nto tiempo te tomari\u0301a transformar cualquier cadena a una cadena * suave* . La u\u0301nica operacio\u0301n que puedes hacer sobre la cadena es escoger una letra X y una letra Y y cambiar todas las letras de la cadena que sean X a Y. Cada letra que cambies te toma un segundo. Por ejemplo, la cadena \u201ccadena\u201d, si X= \u2019a\u2019 y Y= \u2019c\u2019, despue\u0301s de dos segundos quedari\u0301a como \u201cccdenc\u201d.",
    "input": "Varias cadenas, una por li\u0301nea.",
    "output": "Para cada cadena, imprime la menor cantidad de segundos que tomari\u0301a volver la cadena en * suave* .",
    "note": "",
    "topics": [
      "implementation",
      "sortings",
      "strings",
      "math"
    ],
    "id": 457
  },
  {
    "title": "CR Buzz-Fizz",
    "url": "https://omegaup.com/arena/problem/Buzz-Fizz",
    "history": "# HistoriaE\u0301sta es una variacio\u0301n del problema popular \u201cFizz- Buzz\u201d. Tu tarea consiste en procesar todos los nu\u0301meros en un rango predeterminado. Por cada nu\u0301mero procesado, debera\u0301s imprimir \u201cBuzz\u201d si es divisible entre 3, \u201cFizz\u201d si es divisible entre 5, y \u201cBuzzFizz\u201d si es divisible entre ambos. En caso contrario debera\u0301s imprimir el nu\u0301mero en cuestio\u0301n.",
    "input": "Dos enteros: el primer nu\u0301mero que debes contar y el u\u0301ltimo.",
    "output": "Una palabra o nu\u0301mero por li\u0301nea, como esta\u0301 descrito anteriormente.",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 456
  },
  {
    "title": "Suma simple",
    "url": "https://omegaup.com/arena/problem/suma_simple",
    "history": "Se te dara\u0301n dos nu\u0301meros enteros que debera\u0301s sumar.",
    "input": "La entrada contiene una li\u0301nea con dos nu\u0301meros enteros separados por un espacio.",
    "output": "La salida debera\u0301 contener la suma de los dos valores.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 453
  },
  {
    "title": "C\u00e1lculo simple",
    "url": "https://omegaup.com/arena/problem/calculo_simple",
    "history": "En este problema, la tarea es leer un co\u0301digo para el producto 1, el nu\u0301mero de unidades del producto 1, el precio de una unidad del producto 1, el co\u0301digo para el producto 2, el nu\u0301mero de unidades del producto 2, el precio de una unidad del producto 2 y calcular e imprimir la cantidad a pagar.",
    "input": "La entrada contiene dos li\u0301neas de datos. Cada una contiene 3 nu\u0301meros: dos enteros y un de punto flotante con dos di\u0301gitos despue\u0301s del punto decimal.",
    "output": "La salida debera\u0301 contener el valor a pagar con dos di\u0301gitos despue\u0301s del punto.",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 452
  },
  {
    "title": "Contando d\u00edgitos",
    "url": "https://omegaup.com/arena/problem/Contando-digitos",
    "history": "Es comu\u0301n que en las camisetas de fu\u0301tbol se estampe el nu\u0301mero del jugador. Imagina que debes escribir el software para una imprenta de etiquetas. Cuando alguien contrata tus servicios te proporciona los nu\u0301meros de sus jugadores y necesitas saber cua\u0301ntas estampas de cada di\u0301gito debes imprimir.",
    "input": "Vas a leer un nu\u0301mero * * N* * , posteriormente leera\u0301s * * N* * nu\u0301meros enteros positivos, uno por fila. Debes contar cua\u0301ntos di\u0301gitos necesitas para escribir todos.",
    "output": "Por cada di\u0301gito, debes decir cua\u0301ntas estampas debes imprimir. Sigue el formato del ejemplo.",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 449
  },
  {
    "title": "M\u00faltiples calificaciones con validaci\u00f3n",
    "url": "https://omegaup.com/arena/problem/1031",
    "history": "Escribe un programa que lea dos calificaciones. Calcula e imprime el promedio. El programa debe de aceptar so\u0301lo valores va\u0301lidos, una calificacio\u0301n debe de estar en el rango de ( 0, 10) . Cada calificacio\u0301n debe de ser validada por separado. El programa debe de imprimir el mensaje de \" < strong> Nuevo calculo ( 1- Si 2- no) ? < / strong> \" y la entrada sera\u0301 un 1 o\u0301 un 2. 1 significa un nuevo ca\u0301lculo, 2 significa que la ejecucio\u0301n del programa debe terminar.",
    "input": "La entrada contiene muchos nu\u0301meros de punto flotante positivos o negativos. Despue\u0301s de que se introduzcan dos valores va\u0301lidos, un nu\u0301mero entero x debe ser lei\u0301do. Si 2< x< 1 el mensaje de \" < strong> Nuevo calculo ( 1- Si 2- no) ? < / strong> \" debe ser desplegado de nuevo y un nuevo entero debe ser lei\u0301do.",
    "output": "Si una calificacio\u0301n inva\u0301lida es leida, se debe imprimir el mensaje de \" < strong> Calificacion invalida< / strong> \" . Cuando dos valores de calificaciones son lei\u0301dos, el mensaje de \" < strong> Promedio = < / strong> \" debe ser impreso, seguido del promedio de las dos calificaciones. El promedio desplegado debe ser impreso con 2 di\u0301gitos despue\u0301s del punto decimal.",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 447
  },
  {
    "title": "CR A contar 2.0",
    "url": "https://omegaup.com/arena/problem/CR-A-contar-20",
    "history": "Un gran problema con las computadoras es que, como ya viste, hay diferentes tipos de datos ( int, double, String ) y en ocasiones esto complica las cosas. Hoy tu papa\u0301 recibio\u0301 una carta del banco con su saldo y se te ocurrio\u0301 que, para hacer todo ma\u0301s fa\u0301cil, podri\u0301as hacer un co\u0301digo que sume todos los nu\u0301meros que existen en la carta, pero la carta es un texto y por ello, un String. Asi\u0301 que primero practicara\u0301s haciendo un co\u0301digo que sume los di\u0301gitos ( 0, 1, 2, 3, 4, 5, 6, 7, 8, 9) que encuentres en un texto.",
    "input": "| | output",
    "output": "| | inputEsto es la prueba 5, he hecho 4 pruebas antes. | | output9| | inputRevisar es importante para que no me penalicen con 10 minutos extras, ayer mi tiempo fue de 35 minutos. | | output9| | end",
    "note": "",
    "topics": [
      "math",
      "strings",
      "implementation"
    ],
    "id": 427
  },
  {
    "title": "Encontrando D\u00edgitos",
    "url": "https://omegaup.com/arena/problem/Iterando-con-los-digitos",
    "history": "Necesitas contar el nu\u0301mero de veces que aparece cada uno de los di\u0301gitos del 0 al 9 en un texto, pero te da mucha flojera utilizar muchas sentencias if - else. Debe existir una manera ma\u0301s fa\u0301cil e interesante de hacerlo. En efecto, con este problema aprendera\u0301s a utilizar un arreglo para contar el nu\u0301mero de veces que aparece cada di\u0301gito. En la posicio\u0301n 0 contara\u0301s el nu\u0301mero de veces que aparece el di\u0301gito cero, en la posicio\u0301n 1 contara\u0301s el nu\u0301mero de veces que aparece el di\u0301gito uno y asi\u0301 sucesivamente hasta la posicio\u0301n 9 que contara\u0301 el nu\u0301mero de veces que aparece el di\u0301gito nueve.",
    "input": "| | output",
    "output": "| | input3Hay 10 tipos de personas, las que saben binario y las que noTengo 1 gato en mis 2 botas16 people like this! | | outputEl 0 aparece 1 veces. El 1 aparece 3 veces. El 2 aparece 1 veces. El 3 aparece 0 veces. El 4 aparece 0 veces. El 5 aparece 0 veces. El 6 aparece 1 veces. El 7 aparece 0 veces. El 8 aparece 0 veces. El 9 aparece 0 veces. | | end",
    "note": "",
    "topics": [
      "math",
      "implementation",
      "strings"
    ],
    "id": 426
  },
  {
    "title": "Aprendiendo a leer cadenas",
    "url": "https://omegaup.com/arena/problem/Aprendiendo-a-leer-cadenas",
    "history": "El siguiente problema te ayudara\u0301 a aprender a leer e imprimir cadenas de texto.",
    "input": "| | output",
    "output": "| | input2Hola mundoEsto es Coding Rush! | | output\" Hola mundo\" tiene 10 caracteres\" Esto es Coding Rush! \" tiene 20 caracteres| | input2Hasta la vista. . . baby! | | output\" Hasta la vista. . . \" tiene 17 caracteres\" baby! \" tiene 5 caracteres| | end",
    "note": "",
    "topics": [
      "math",
      "strings",
      "implementation"
    ],
    "id": 418
  },
  {
    "title": "Rifa",
    "url": "https://omegaup.com/arena/problem/Rifa",
    "history": "Los alumnos de la Olimpiada ya esta\u0301n un poco estresados de tanta asesori\u0301a y han buscado la manera de distraerse un poco, para ello han buscado diferentes estrategias que les ayuden. Hubo varias propuestas, pero la ma\u0301s votada fue salir a jugar basquetbol en su tiempo libre, pero se encontraron con un problema ya que no tienen un balo\u0301n. Como todos buenos programadores se han dedicado a buscar posibles soluciones de co\u0301mo conseguir dinero para poder comprar uno y llego la idea de hacer una rifa para tener ganancias y asi\u0301 adquirir el anhelado balo\u0301n. La rifa consiste en el famoso \u0093rascadito\u0094, esto es: el nu\u0301mero que rasques es la cantidad de dinero que vas a pagar. Los alumnos no saben que tanto dinero van a recolectar si tienen N tarjetas con M nu\u0301meros cada una de ellas por ejemplo: Si tienen 2 tarjetas, una con 6 nu\u0301meros y otra con 13 el dinero que obtendri\u0301an seri\u0301a de 112 por que 1+ 2+ 3+ 4+ 5+ 6= 21 y 1+ 2+ 3+ 4+ 5+ 6+ 7+ 8+ 9+ 10+ 11+ 12+ 13= 91 por lo tanto 21+ 91= 112. # ProblemaAyuda a los alumnos a determinar cua\u0301nto dinero van a recolectar sabiendo la cantidad de tarjetas que existira\u0301n y cuantos nu\u0301meros tienen cada una de ellas.",
    "input": "En la primera li\u0301nea el numero NEn la segunda li\u0301nea N nu\u0301meros separados por un espacio representando la cantidad M de nu\u0301meros que tiene cada tarjeta.",
    "output": "Un solo entero representando la cantidad de dinero que se obtendra\u0301 en dicha rifa.",
    "note": "",
    "topics": [
      "implementation",
      "combinatorics",
      "number theory",
      "constructive algorithms",
      "math"
    ],
    "id": 417
  },
  {
    "title": "Caja Negra...",
    "url": "https://omegaup.com/arena/problem/Caja-Negra",
    "history": "# Descipcio\u0301nComo ya es sabido Karel_ 1 fallecio\u0301 en un desafortunado accidente hace poco , pero su hermano Karel_ 2 siente la necesidad de saber a ciencia cierta que\u0301 fue lo que paso\u0301 y para ello planea utilizar la caja negra que llevaba consigo en el camio\u0301n Karel_ 1. # ProblemaAyuda a Karel_ 2 a saber cua\u0301l es la contrasen\u0303a para abrir la caja negra y tener acceso a las grabaciones. La caja tiene una contrasen\u0303a que consiste en la letra que ma\u0301s se repite de una cadena de caracteres( palabra) que esta\u0301 inscrita en ella, tu tarea consiste en decirnos cua\u0301l es la letra que ma\u0301s se repite( ver ejemplo) .",
    "input": "Una li\u0301nea con N_ 1, la longitud de la palabra de la caja, despue\u0301s una li\u0301nea con una palabra que es la que contiene la contrasen\u0303a.",
    "output": "Una li\u0301nea con una letra la cual indica la letra que ma\u0301s se repite en la palabra. # Co\u0301digos ASCII! [ Codigos] ( codigo- ascii. gif)",
    "note": "",
    "topics": [
      "strings",
      "math",
      "implementation"
    ],
    "id": 415
  },
  {
    "title": "Leyendo Varios Datos",
    "url": "https://omegaup.com/arena/problem/CR-Leyendo-Varios-datos",
    "history": "El siguiente problema consiste en leer un nu\u0301mero variable de datos.",
    "input": "Primero vas a leer un nu\u0301mero N. Despue\u0301s vas a leer N parejas de nu\u0301meros.",
    "output": "Para cada una de las N parejas, debes escribir su respectiva suma.",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 390
  },
  {
    "title": "Lectura y Escritura",
    "url": "https://omegaup.com/arena/problem/CR-Lectura-y-escritura",
    "history": "Esta\u0301s llevando a cabo una receta de cocina. Acabas de llegar a la parte donde dice que lo debes cocinar por 5 minutos, pero so\u0301lamente cuentas con un crono\u0301metro que se configura en segundos. \u00bfCua\u0301ntos segundos debes poner para que sean 5 minutos? Para estar preparado para cualquier otra receta vas a escribir un programa que haga la conversio\u0301n por ti. Vas a leer una cantidad de minutos y debes escribir a cua\u0301ntos segundos equivale.",
    "input": "Un nu\u0301mero entero que representa los minutos.",
    "output": "Otro nu\u0301mero entero, que es la equivalencia en segundos.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 388
  },
  {
    "title": "Estaturas",
    "url": "https://omegaup.com/arena/problem/Estaturas",
    "history": "# HistoriaJorge viajo\u0301 recientemente a EUA para hacer un internship en Microsoft. Un di\u0301a lo llevaron a un concierto, pero habi\u0301a tanta gente que no podi\u0301an ver bien; como buen ingeniero, se le ocurrio\u0301 ordenar a todos por estaturas, pero se encontro\u0301 con el problema de que los estadounidenses utilizan un sistema de mediciones diferente al del resto del mundo. Ellos utilizan el Sistema Imperial de Unidades ( pies y pulgadas) y los dema\u0301s utilizan el Sistema Internacional de Medidas ( metro y centi\u0301metros) . Como a Jorge le cuesta mucho trabajo ordenarlos si le dan las estaturas con el Sistema Imperial, debera\u0301s convertir las estaturas que le den los asistentes al concierto a centi\u0301metros. Recuerda que: * 1 pie = 30. 48 cm.",
    "input": "| | output",
    "output": "| | input60. 143. 012. 34| | output182. 8842. 6791. 44376. 12| | input4. 15| | output126. 49| | endNota: se imprime con un formato de dos decimales. ( ve la plantilla) .",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 378
  },
  {
    "title": "Divisores",
    "url": "https://omegaup.com/arena/problem/Divisores",
    "history": "# HistoriaDurante tu camino al concurso Coding Rush ITAM, habi\u0301a mucho tra\u0301fico y como estabas muy aburrido te pusiste a ver los nu\u0301meros en las placas de los coches y a calcular sus divisores primos. Despue\u0301s de lo que aprendiste hoy, sabes que calcular los divisores primos de un nu\u0301mero es ma\u0301s fa\u0301cil si lo programas. Recuerda que un nu\u0301mero es divisor del otro si cuando realizas la operacio\u0301n de divisio\u0301n, no hay residuo. * 5 no es divisor de 12. * 2 si\u0301 es divisor de 12.",
    "input": "| | output",
    "output": "| | input153657674| | output2 33 772| | end# RestriccionesPara hacer ma\u0301s fa\u0301cil el ca\u0301lculo, los nu\u0301meros dados tendra\u0301n como divisores primos u\u0301nicamente los nu\u0301meros 2, 3, 5, 7. 0 \u2264 N \u2264 3, 000",
    "note": "",
    "topics": [
      "number theory",
      "implementation",
      "math"
    ],
    "id": 377
  },
  {
    "title": "Bolsas de dulces",
    "url": "https://omegaup.com/arena/problem/Bolsas-de-dulces",
    "history": "# HistoriaAnita va en la primaria y debido a la nueva restriccio\u0301n del gobierno que impide que las tiendas escolares vendan dulces, ha decidido poner su propia tiendita clandestina. Anita hace bolsas de dulces que vende a sus compan\u0303eros a diferentes precios. Como ha tenido muchas ventas, te ha pedido ayuda para calcular sus ventas finales.",
    "input": "| | output",
    "output": "| | input51 32 53 158 452 31| | output480| | end# Restricciones0 \u2264 N \u2264 10, 000",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 375
  },
  {
    "title": "La clave escondida",
    "url": "https://omegaup.com/arena/problem/ClaveSecreta",
    "history": "# La clave escondida. A un alumno, en sus tiempos de ocio en laescuela, se le ocurrio\u0301 una forma sencilli\u0301sima de esconder lasrespuestas para sus exa\u0301menes. Estas respuestas tienen la forma P- O, donde P es un enteropositivo, que representa el nu\u0301mero de la pregunta, y O es unaletra mayu\u0301scula del alfabeto ingle\u0301s, que representa la respuesta ala pregunta P. Su manera de codificar ambos datos es muy sencilla. Primero escribeun nu\u0301mero, n_ 1, y una cadena, L_ 1. La longitud de L_ 1 es unmu\u0301ltiplo de n_ 1. Ahora, separa la cadena en subcadenas de longitudn_ 1 y las coloca una por una verticalmente como muestra la figura. Despue\u0301s, le asigna un nu\u0301mero a cada letra, correspondiendo a laletra A el nu\u0301mero 1, a B el nu\u0301mero 2 y asi\u0301 sucesivamente, y, paracada columna, suma los valores de cada una de las letras y lo escribemo\u0301dulo 10 debajo de la misma. Las letras mayu\u0301sculas y minu\u0301sculas tienenel mismo valor. < img src= \" https: / / scontent. felp1- 1. fna. fbcdn. net/ hphotos- frc3/ v/ t1. 0- 9/ 1010723_ 524196367629240_ 80653176_ n. jpg? oh= 6ab989c67d47244cd6cda2697a266105 oe= 562D2FAA\" > Una vez obtenida la suma, a cada di\u0301gito le suma 1 y multiplica todoslos di\u0301gitos entre si\u0301. En el ejemplo anterior, el valor que seobtendri\u0301a seri\u0301a ( 7+ 1) \u00d7 ( 0+ 1) \u00d7 ( 8+ 1) \u00d7 ( 0+ 1) = 72, y, finalmente, toma u\u0301nicamente el u\u0301ltimo di\u0301gito de ese nu\u0301mero, le suma 1, y obtiene a P. Para obtener a O, escribe un entero n_ 2 y una cadena L_ 2, ysigue los mismos pasos descritos anteriormente, pero, en vez deobtener un entero este se convierte en letra, toma ese u\u0301ltimodi\u0301gito de la siguiente manera, siendo 1 la letra A, 2 la letra B, y asi\u0301 sucesivamente.",
    "input": "En la primera li\u0301nea, el entero n_ 1, precedido por un \" ! \" . En la segunda li\u0301nea, la cadena L_ 1. En la tercera li\u0301nea, el entero n_ 2, precedido por un \" ! \" . En la u\u0301ltima li\u0301nea, la cadena L_ 2.",
    "output": "La cadena P- O.",
    "note": "",
    "topics": [
      "strings",
      "implementation",
      "math"
    ],
    "id": 238
  },
  {
    "title": "Tablas",
    "url": "https://omegaup.com/arena/problem/tablas",
    "history": "# TablasPepito estaba muy estresado con las tablas de multiplicar asi\u0301 que necesita tu ayuda. El te pedira\u0301 que le pases varias tablas de multiplicar.",
    "input": "| | output",
    "output": "| | input37 3 9| | output7x1= 77x2= 147x3= 217x4= 287x5= 357x6= 427x7= 497x8= 567x9= 637x10= 703x1= 33x2= 63x3= 93x4= 123x5= 153x6= 183x7= 213x8= 243x9= 273x10= 309x1= 99x2= 189x3= 279x4= 369x5= 459x6= 549x7= 639x8= 729x9= 819x10= 90| | end",
    "note": "Se sabe que Pepito no quiere quitarte mucho tiempo, por lo que a lo ma\u0301ximo te preguntara\u0301 10 tablas. Las tablas de multiplicar que preguntara\u0301 no tendra\u0301n un valor mayor a 100.",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 158
  },
  {
    "title": "Promedios",
    "url": "https://omegaup.com/arena/problem/promedios",
    "history": "# PromediosEl profe de Pepito tiene que sacar los promedios de sus alumnos, por lo que quiere que disen\u0303es un programa que le ayude a calcular su calificacio\u0301n final promediando la calificacio\u0301n de los 5 exa\u0301menes. Ten en cuenta que la calificacio\u0301n no admite decimales y se evalua sobre 10.",
    "input": "| | output",
    "output": "| | input6 7 9 8 10| | output8| | end",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 157
  },
  {
    "title": "Botas",
    "url": "https://omegaup.com/arena/problem/botas",
    "history": "# BotasUn lindo gatito se encontraba ordenando sus cosas. Entre sus pertenencias tenia espadas, sombreros, tazones, ratones de juguete y una coleccio\u0301n de botellas de leche. Pero su tesoro mas preciado era una coleccio\u0301n de botas. Como tenia un desorden total de las botas, queri\u0301a reordenarlas y deshacerse de todas las botas que habi\u0301an quedado huerfanitas. El gato tenia una gran coleccio\u0301n, por que podri\u0301a tener tantas botas como puedas imaginar. # ProblemaRealiza un programa que dadas la cantidad de botas que tenia, y un identificador de cada bota, decir de cuantas botas se puede deshacer el gato, es decir, todas las que han perdido su par. Dos botas son del mismo par si tienen el mismo identificador.",
    "input": "| | output",
    "output": "| | input102 4 3 2 2 3 5 5 8 10| | output4| | end# Li\u0301mites* Para el 30",
    "note": "* Ninguna bota tendra\u0301 un identificador mayor a 10^ 6. * Las botas para gato son iguales tanto la izquierda como la derecha.",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 154
  },
  {
    "title": "Promedio",
    "url": "https://omegaup.com/arena/problem/promedio",
    "history": "# Calificacio\u0301n perdidaPetronilo ha perdido la calificacio\u0301n de su segundo departamental de fi\u0301sica y el profe so\u0301lo le ha dicho su calificacio\u0301n final y la del primer parcial. La duda no lo deja dormir y quiere saber cuanto saco en el segundo parcial sabiendo que la calificacio\u0301n final es el promedio de ambos examenes",
    "input": "| | output",
    "output": "| | input10 9| | output8| | input56 90| | output124| | end# Li\u0301mites* Los examenes pueden tener una calificacio\u0301n ma\u0301xima muy alta, pero siempre sera\u0301 la misma para ambos.",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 153
  },
  {
    "title": "Prueba",
    "url": "https://omegaup.com/arena/problem/prueba",
    "history": "# PruebaUn grupo de sabios muy respetados son famosos por sus grandes conocimientos nume\u0301ricos. Han hecho la invitacio\u0301n a jo\u0301venes estudiantes para compartir sus conocimientos con ellos. La prueba consiste en decir si para una lista de nu\u0301meros, en cada numero se cumple que la sumatoria de todos los nu\u0301meros de 0 a N, entie\u0301ndase como N el nu\u0301mero actual de la lista, es divisible por N.",
    "input": "| | output",
    "output": "| | input3450| | outputSINOSI| | end# Li\u0301mites* n< 4294967295",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 152
  },
  {
    "title": "Buscaminas",
    "url": "https://omegaup.com/arena/problem/buscaminas1",
    "history": "Todos hemos jugado el cla\u0301sico juego de computadora conocido como \" Buscaminas\" . Pues bien, este problema esta\u0301 inspirado en dicho juego, pero, por supuesto, con pequen\u0303as variaciones. Para empezar, comenzaremos con una matriz cuyos valores solo pueden ser ` 0` o ` 1` , como esta: ! [ Matriz A] [ 1] A partir de esta matriz, debes generar una segunda matriz ( de las mismas dimensiones) a la cual denotaremos por B, en la que el nu\u0301mero contenido en cada casilla representara\u0301 el nu\u0301mero de bombas con las cuales esta\u0301 en contacto esa casilla en especi\u0301fico ( incluye\u0301ndose a si\u0301 misma) . ! [ Matriz B] [ 2] # ProblemaConsiderar una matriz a la que denotaremos por A de M \u00d7 N ( 1 \u2264 M, N \u2264 200) con M filas y N columnas cuyos valores solo pueden ser ` 0` o ` 1` , a partir de esta se genera una segunda matriz a la que denotaremos por B de las mismas dimensiones, en la que cada casilla X de B tiene una valor entre ` 0` y ` 9` inclusive, que es igual a la suma de las casillas de la matriz A que son adyacentes a la casilla X en A ma\u0301s el valor de la casilla X en A ( dos casillas son adyacentes si tienen un ve\u0301rtice en comu\u0301n) . Genera la matriz B a partir de la matriz A.",
    "input": "En la primera li\u0301nea dos nu\u0301meros M y N separados por un u\u0301nico espacio que nos indica el taman\u0303o de la matriz. En las siguientes M li\u0301neas habra\u0301 por li\u0301nea N nu\u0301meros separados por un espacio entre ellos que sera\u0301n los datos de la matriz",
    "output": "M li\u0301neas cada una con N nu\u0301meros separados por un espacio entre ellos que nos demuestra la cantidad de bombas que tiene en contacto cada una de las casillas.",
    "note": "",
    "topics": [
      "math",
      "implementation",
      "matrices"
    ],
    "id": 129
  },
  {
    "title": "Bisiesto",
    "url": "https://omegaup.com/arena/problem/bisiesto",
    "history": "Un an\u0303o es bisiesto si es divisible entre 4, a menos que sea divisible entre 100. Sin embargo, si un an\u0303o es divisible entre 100 y adema\u0301s es divisible entre 400, tambie\u0301n resulta bisiesto.",
    "input": "La primera li\u0301nea tendra\u0301 un nu\u0301mero N, la cantidad de an\u0303os por analizar. Despue\u0301s habra\u0301 N li\u0301neas con un solo nu\u0301mero entero, que representa el an\u0303o que tendra\u0301s que decidir si es o no bisiesto. Todos los an\u0303os sera\u0301n mayores a 1600 y menores a 3, 000.",
    "output": "Por cada an\u0303o de la entrada escribe una \" S\" o una \" N\" , dependiendo de si el an\u0303o es bisiesto o no respectivamente.",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 111
  },
  {
    "title": "Cadenas de Potencias de 2",
    "url": "https://omegaup.com/arena/problem/cadenasp2",
    "history": "Si hicieras listas del 1 a una potencia de 2, las primeras cinco listas seri\u0301an: < br> 1< br> 1 2< br> 1 2 3 4< br> 1 2 3 4 5 6 7 8< br> 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16< br> Si solamente te quedaras con la cifra de las unidades y juntas todas esas cifras quedari\u0301a una cadena de este tipo: 1121234123456781234567890123456Ahora imagina que se hace lo anterior para una infinidad de listas, \u00bfpodri\u0301as decir que\u0301 cifra esta\u0301 en el lugar n y a que\u0301 nu\u0301mero corresponde dicha cifra? # ProblemaDar cifra que esta\u0301 en el lugar n y el nu\u0301mero al cual le corresponde de la cadena definida en el pa\u0301rrafo anterior.",
    "input": "La primera li\u0301nea tendra\u0301 un entero n, la cantidad de nu\u0301meros en la lista, 0 < n le; 2^ 62.",
    "output": "Una li\u0301nea con dos nu\u0301meros separados por un espacio, la cifra y el nu\u0301mero al que corresponde.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 102
  },
  {
    "title": "Barn",
    "url": "https://omegaup.com/arena/problem/barn",
    "history": "# Separacio\u0301n de EstabloFue una noche oscura y tormentosa que arranco\u0301 el techo y las puertas de las pesebreras donde estaban las vacas del Granjero Juan. Afortunadamente, muchas de las vacas estaban de vacaciones, por lo tanto el establo no estaba totalmente lleno. Las vacas pasan la noche en pesebreras que esta\u0301n dispuestas adyacentes unas a las otras en una li\u0300nea larga. Algunas pesebreras tienen vacas en ellas; otras no. Todas las pesebreras tienen la misma longitud. El Granjero Juan debe erigir ra\u0301pidamente nuevas tablas en la parte frontal de los establos, pues se perdieron las puertas. Su nuevo proveedor de len\u0303a le dara\u0301 tablas de cualquier largo que e\u0301l desee, pero el proveedor puede u\u0301nicamente llevar un pequen\u0303o nu\u0301mero de tablas en total. El granjero Juan quiere minimizar la longitud total de tablas que e\u0301l debe comprar. Dados M ( 1 le; M le; 100 000) , el nu\u0301mero ma\u0301ximo de tablas que pueden ser comprados; S ( 1 le; S le; 100 000 000) , el nu\u0301mero total de pesebreras; C ( 1 le; C le; min( S, 150 000) ) el nu\u0301mero de vacas en las pesebreras y los nu\u0301meros de las C pesebreras ocupadas ( 1 le; nu\u0301mero_ de_ pesebrerale; S) , calcule el mi\u0301nimo nu\u0301mero de pesebreras que deben ser bloqueadas con el fin de bloquear todas las pesebreras que tienen vacas en ellas. Imprima su respuesta como el nu\u0301mero total de pesebreras bloqueadas.",
    "input": "Li\u0301nea 1: M, S, y C ( separados por espacios) Li\u0301neas 2- C+ 1: Cada li\u0300nea contiene un nu\u0301mero, los nu\u0301meros de las pesebreras ocupadas.",
    "output": "Una sola li\u0300nea con un entero que representa el nu\u0301mero total de pesebreras bloqueadas.",
    "note": "",
    "topics": [
      "sortings",
      "math"
    ],
    "id": 15
  },
  {
    "title": "multiplicaciones",
    "url": "https://omegaup.com/arena/problem/multiplicaciones",
    "history": "Este es * otro* problema de prueba. Puedes usarlo para familiarizarte con el ambiente de omegaUp.",
    "input": "Dos nu\u0301meros enteros, a y b.",
    "output": "El producto interior ( a, 1) \u00b7 ( 1, b)",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 4
  },
  {
    "title": "Sumas",
    "url": "https://omegaup.com/arena/problem/sumas",
    "history": "Este es un problema de prueba. Puedes usarlo para familiarizarte con el ambiente de omegaUp.",
    "input": "Dos nu\u0301meros enteros, a y b.",
    "output": "La suma de ambos nu\u0301meros.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 3
  },
  {
    "title": "Suma de d\u00edgitos de un entero",
    "url": "https://omegaup.com/arena/problem/Suma-de-digitos-de-un-entero",
    "history": "Implementar un programa que sume los di\u0301gitos de un nu\u0301mero entero no negativo. Por ejemplo, la suma de los di\u0301gitos del 3465 es 18. Para darle un poco ma\u0301s de emocio\u0301n, el programa no se limitara\u0301 a escribir el resultado de la suma, sino que tambie\u0301n escribira\u0301 todos los sumandos utilizados: 3 + 4 + 6 + 5 = 18. Una pista: Si divides 3465 entre 1000, la parte entera de la divisio\u0301n te otorga el 3, di\u0301gito correspondiente a los millares, y el residuo es 465. \u2014\u2014\u2014-",
    "input": "Cada caso de prueba es una simple li\u0301nea con un nu\u0301mero no negativo menor que 100, 000 del que habra\u0301 que sumar todos sus di\u0301gitos. \u2014\u2014\u2014-",
    "output": "Para cada caso de prueba se mostrara\u0301 una li\u0301nea en la que aparecera\u0301n cada uno de los di\u0301gitos separados por el signo + , tras lo cual aparecera\u0301 el si\u0301mbolo = y la suma de todos los di\u0301gitos. Ten en cuenta que antes y despue\u0301s de cada si\u0301mbolo ( + y = ) hay un espacio. \u2014\u2014\u2014- # Ejemplos| | input3433| | output3 + 4 + 3 + 3 = 13| | description| | input64323| | output6 + 4 + 3 + 2 + 3 = 18| | description| | input8| | output8 = 8| | description| | end\u2014\u2014\u2014- # Li\u0301mites0 \u2264 num \u2264 99999",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 16326
  },
  {
    "title": "Plus1",
    "url": "https://omegaup.com/arena/problem/Plus1",
    "history": "# Mas uno ( + 1) Se le es dado un * * entero* * representado como un arreglo de digitos ` digitos` , en donde cada ` digit[ i] ` es el ` i` - esimo digito del entero. Los digitos estan ordenados desde el mas significativo al menos significativo de izquierda a derecha. El * * entero* * no contiene ninguna secuencia de ` 0` ' s a la izquierda. Incremente el * * entero* * por uno e * * imprima* * el numero resultante. * * Restriccion* * : A lo sumo, solo puede existir * * UN UNICO* * condicional en la solucion ( ` if` / ` switch` ) . * * Sugerencia* * : Use modulo y division entera para trabajar con el acarreo. * * Ejemplo 1: * * \u201c` Input: 31 2 3Output: 124Explanation: 123 + 1 = 124\u201c` * * Ejemplo 2: * * \u201c` Input: 44 3 2 1Output: 4322Explanation: 4321 + 1 = 4322\u201c` * * Ejemplo 3: * * \u201c` Input: 19Output: 10Explanation: 9 + 1 = 10\u201c`",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 14722
  },
  {
    "title": "Luhn's Algorithm",
    "url": "https://omegaup.com/arena/problem/Luhns-Algorithm",
    "history": "# PA LA CASA: Luhn' s AlgorithmEl algoritmo de luhn es usado para verificar la validez de cosas como: tarjetas de credito, numero de IMEI, Identificaciones, . . . . Su funcionamiento es el siguiente: 1. - Tome el numero original, y empezando desde el digito mas a la derecha, moviendose hacia la izquierda, duplique el valor de cada segundo digito ( excluyendo el valor mas a la derecha) . 2. - Reemplace el valor resultante en cada posicion con la suma de los digitos de la posicion. 3. - Sume los valores resultantes de todas las posiciones. 4. - Un numero es valido si esta suma es equivalente a ` 0` modulo ` 10` . Ejemplo, si el numero es: ` 79927398713` . Paso 1: \u201c` 7 9 9 2 7 3 9 8 7 1 3* 1 2 1 2 1 2 1 2 1 2 1\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u20137 18 9 4 7 6 9 16 7 2 3\u201c` Paso 2: \u201c` 7 18 9 4 7 6 9 16 7 2 3- > 7 1+ 8 9 4 7 6 9 1+ 6 7 2 3- > 7 9 9 4 7 6 9 7 7 2 3\u201c` Paso 3: ` 7 + 9 + 9 + 4 + 7 + 6 + 9 + 7 + 7 + 2 + 3 = 70` Paso 4: \u201c` 70 ` mod` 10 = 0, valido\u00a1\u201c\u201c` input: 79927398713output: 1explanation: 1 porque es verdad\u201c`",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 14721
  },
  {
    "title": "Multiplos en rango",
    "url": "https://omegaup.com/arena/problem/Multiplos-en-rango",
    "history": "Hacer un programa que imprima todos los nu\u0301meros enteros desde el entero ' a' hasta el entero ' b' , que sean mu\u0301ltiplos de 3, pero no de 5. \u2014\u2014\u2014-",
    "input": "Un entero ' a' y un entero ' b' cada uno en un renglo\u0301n. \u2014\u2014\u2014-",
    "output": "Todos los nu\u0301meros enteros desde el entero ' a' hasta el entero ' b' , que sean mu\u0301ltiplos de 3, pero no de 5, cada uno en un renglo\u0301n. \u2014\u2014\u2014- # Ejemplos| | input523| | output69121821| | descriptionTodos los nu\u0301meros enteros desde el 5 hasta el 23, que son mu\u0301ltiplos de 3, pero no de 5. | | input321| | output369121821| | descriptionTodos los nu\u0301meros enteros desde el 3 hasta el 21, que son mu\u0301ltiplos de 3, pero no de 5. | | input933| | output9121821242733| | descriptionTodos los nu\u0301meros enteros desde el 9 hasta el 33, que son mu\u0301ltiplos de 3, pero no de 5. | | end",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 14143
  },
  {
    "title": "Desglose de moneda",
    "url": "https://omegaup.com/arena/problem/Desglose",
    "history": "Hacer un programa que reciba de entrada un dato nume\u0301rico, este sera\u0301 la cantidad de dinero a entregar; la salida debera\u0301 ser la cantidad de billetes y monedas o\u0301ptima, es decir entregar la mi\u0301nima cantidad de billetes y/ o monedas. \u2014\u2014\u2014- # Denominaciones disponibles: * Billetes de: $ 1000, $ 500, $ 200, $ 100, $ 50 y $ 20* Monedas de: $ 10, $ 5, $ 2 y $ 1\u2014\u2014\u2014-",
    "input": "El dato de entrada sera\u0301 un nu\u0301mero positivo sin decimales, que es la cantidad de dinero a entregar. \u2014\u2014\u2014-",
    "output": "La respuesta o salida sera\u0301 una lista hecha en diez renglones, en cada uno de estos debera\u0301 salir la frase \" Billetes de $ 9999 = \" o \" Monedas de $ 999 = \" , despue\u0301s un espacio en blanco y por u\u0301ltimo la cantidad a entregar de esta denominacio\u0301n, y asi\u0301 en cada renglo\u0301n para todas las denominaciones disponibles. Nota: Las palabras, espacios, caracteres etc. , debera\u0301n estar tal cual se ve en los ejemplos, si falta o sobra un caracter, el juez automa\u0301tico lo calificara\u0301 como WA ( wrong answer) , es decir: respuesta incorrecta. \u2014\u2014\u2014- # Ejemplos| | input876| | outputBilletes de 1000 = 0Billetes de500 = 1Billetes de 200 = 1Billetes de100 = 1Billetes de 50 = 1Billetes de20 = 1Monedas de 10 = 0Monedas de5 = 1Monedas de 2 = 0Monedas de1 = 1| | description1* 500+ 1* 200+ 1* 100+ 1* 50+ 1* 20+ 1* 5+ 1* 1| | input3798| | outputBilletes de 1000 = 3Billetes de500 = 1Billetes de 200 = 1Billetes de100 = 0Billetes de 50 = 1Billetes de20 = 2Monedas de 10 = 0Monedas de5 = 1Monedas de 2 = 1Monedas de1 = 1| | description3* 1000+ 1* 500+ 1* 200+ 1* 50+ 2* 20+ 1* 5+ 1* 2+ 1* 1| | input1888| | outputBilletes de 1000 = 1Billetes de500 = 1Billetes de 200 = 1Billetes de100 = 1Billetes de 50 = 1Billetes de20 = 1Monedas de 10 = 1Monedas de5 = 1Monedas de 2 = 1Monedas de1 = 1| | description1* 1000+ 1* 500+ 1* 200+ 1* 100+ 1* 50+ 1* 20+ 1* 10+ 1* 5+ 1* 2+ 1* 1| | end\u2014\u2014\u2014- # Li\u0301mites* 0 < num < 5000000",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 14044
  },
  {
    "title": "Kaguya y el Juego Feliz",
    "url": "https://omegaup.com/arena/problem/Kaguya-y-el-Juego-Feliz",
    "history": "# La historia. . . Para descansar del consejo estudiantil, y por aburrimiento, Kaguya invento\u0301 un nuevo juego. Dada una secuencia de n valores y un factor de felicidad k, quiere calcular la felicidad ma\u0301xima que puede obtener entre todos los subarreglos continuos de taman\u0303o k. Al entrar en un trance espiritual, Kaguya decide que la felicidad de un subarreglo esta dada por la cantidad de armoni\u0301as diferentes en el subarreglo. Dos nu\u0301meros tienen la misma armoni\u0301a si la diferencia entre ambos es algu\u0301n mu\u0301ltiplo del factor de felicidad k. Crear este juego agoto\u0301 la mente y el espi\u0301ritu de Kaguya, asi\u0301 que pide tu ayuda para que calcules la felicidad ma\u0301xima posible. ! [ ] ( kaguya_ aburrida. gif)",
    "input": "Dos enteros, n y k, que indica el nu\u0301mero de elementos y el factor de felicidad respectivamente, seguido de n enteros.",
    "output": "Imprime la felicidad ma\u0301xima que Kaguya puede alcanzar en el juego.",
    "note": "En el primer ejemplo, los tres subarreglos [ 1, 2, 3] , [ 2, 3, 4] y [ 3, 4 , 5] tienen la misma cantidad de armoni\u0301as, 3. En el segundo ejemplo, los subarreglos [ 4, 1, 6, 2] y [ 1, 6, 2, 3] tienen la misma cantidad de armoni\u0301as, 3, mientras que el subarreglo [ 6, 2, 3, 6] solo tiene 2 armoni\u0301as. # Li\u0301mites* Para el 50",
    "topics": [
      "math",
      "two pointers"
    ],
    "id": 13556
  },
  {
    "title": "Ajustando Relojes",
    "url": "https://omegaup.com/arena/problem/Ajustando-Relojes",
    "history": "Es el an\u0303o 2023 y por fin le toco\u0301 a Oscari\u0301n vacunarse contra el covid- 19, por lo que decidio\u0301 compensar todo el tiempo perdido y salir a conocer el mundo. Oscari\u0301n nunca sale de casa sin su reloj analo\u0301gico, el u\u0301nico problema es que cada vez que llega a un nuevo pai\u0301s tiene que ajustarlo con la zona horaria local. Dado la hora que marca el reloj en este momento, y la diferencia en minutos en la nueva zona horaria, tu tarea sera\u0301 ayudarlo a calcular la nueva hora.",
    "input": "Tres enteros H, M y D indicando la hora, el minuto y la diferencia horaria expresada en minutos.",
    "output": "La nueva hora y minuto en formato de 12 horas, separado por dos puntos ( HH: MM) .",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 13435
  },
  {
    "title": "Mintiendo sobre las cifras de \u03c0",
    "url": "https://omegaup.com/arena/problem/Mintiendo-sobre-las-cifras-de-",
    "history": "El nu\u0301mero \u03c0 = 3. 1415926535 . . . tiene una representacio\u0301n infinita y es imposible memorizarla, pero siempre aprovechas que tus amigos no son buenos en matema\u0301ticas y les mientes dicie\u0301ndoles que te sabes todas las cifras. Tus amigos constantemente te preguntan \u00bfcua\u0301l es la K- e\u0301sima cifra de la parte decimal de \u03c0? y se sorprenden cuando les respondes inmediatamente. Sin embargo, tus amigos no se han dado cuenta que realmente so\u0301lo te sabes diez cifras y que las repites ci\u0301clicamente ( es decir, calculas la respuesta como si \u03c0 = 3. 1415926535 1415926535 1415926535 1415926535 . . . etce\u0301tera) . Recientemente aprendiste a programar y quieres hacer un programa que emplee el mismo truco para contestarles a tus amigos y asombrarlos.",
    "input": "Un entero K que es la posicio\u0301n de la cifra que tus amigos preguntan. Puedes suponer que 1 \u2264 K \u2264 10^ 9.",
    "output": "La cifra a responder.",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 13234
  },
  {
    "title": "The Addams Return ",
    "url": "https://omegaup.com/arena/problem/Los-Locos-Adams-Return-cpp",
    "history": "# DescripcionBard \u00bfRecuerdas a los Locos Addams! ! ? volvieron! ! , y no en forma de fichas, regresaron en su nueva presentacio\u0301n de Banda Addams la banda de metal ma\u0301s escuchada de los u\u0301ltimos tiempos, esa loca familia ha vuelto, y ha llegado al gran estadio OVILOTITLAN a dar el concierto ma\u0301s grande jama\u0301s antes visto a todos los habitantes de karelotitlan, como la familia Addams siempre ha sido muy Loca ellos escriben sus canciones de una forma particularmente extran\u0303a, ellos en lugar de tocar metal con guitarras, bateri\u0301a, bajos, y vocales. Solo hacen acapella en donde cada integrante vari\u0301a sus tonos vocales y ninguno de ellos vuelve a cantar un tono que ya canto antes, todo esto para crear notas musicales, esa fo\u0301rmula de crear mu\u0301sica ha sido la que los ha llevado a la fama, pero, ahora ellos tienen un problema, los karelhabitantes quieren que las notas que haya en ese concierto sean u\u0301nicas y originales jama\u0301s antes escuchadas, por lo que les han dado a los Addams las siguientes condiciones. - Cada nota debe estar formadas por 2 tonos distintos- las notas deben ser distintas durante toda la cancio\u0301n. ( dos notas ( t_ i, t_ j ) y ( q_ i, q_ j ) se consideran diferentes entre ellas si t_ i q_ j o t_ j q_ i ) . - La diferencia absoluta de los tonos de cada nota debe ser exactamente un mu\u0301ltiplo de k. el nu\u0301mero favorito de los karelhabitantes en ese momento. Despue\u0301s de conocer las condiciones que los karelhabitantes les dieron, los Addams se rascaron la cabeza y se preguntaron \u00bfCua\u0301ntas notas distintas podemos formar para una cancio\u0301n? . Ayuda a los Addams con esta importante tarea.",
    "input": "En la primera li\u0301nea recibira\u0301s dos enteros n y k ( 1 \u2264 n \u2264 10^ 6) y ( 1 \u2264 k \u2264 n ) que denota el nu\u0301mero de tonos distintos que la banda de la familia Addams cantara, y el nu\u0301mero favorito de los Karelhabitantes en ese momento, respectivamente. En la segunda li\u0301nea recibira\u0301s n enteros t_ i donde ( 1 \u2264 t_ i \u2264 10^ 12) que denotan los tonos que la banda addams cantara. * * Se te asegura* * que para cada t_ i t_ j.",
    "output": "El nu\u0301mero de notas distintas que la familia Addams puede usar en su cancio\u0301n. | | input6 34 6 2 9 13 1| | output4| | descriptionlas notas que se pueden formar combinando sus tonos son. - ( 13 , 1) - ( 6 , 9) - ( 13 , 4) - ( 1 , 4) por lo que la salida es 4| | input6 31 3 4 7 15 19| | output7| | end# Sub Task 1- Por un valor de 10 puntos* 1 \u2264 n \u2264 10^ 4* 1 \u2264 k \u2264 n* para cada t_ i, 0 \u2264 t_ i \u2264 2 \u00d7 10^ 5# Para el Resto de puntos- No hay li\u0301mites adicionales# A resolver! ! : )",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 13070
  },
  {
    "title": "Yu-Gi-Oh!",
    "url": "https://omegaup.com/arena/problem/Yu-Gi-Oh",
    "history": "Jorge se encontraba jugando Yu- Gi- Oh! con sus n cartas cuando de pronto adquirio\u0301 un poder que le permiti\u0301a ver el nivel de cada carta en su pila de cartas ( deck) . Las cartas esta\u0301n numeradas de 1 a n desde el fondo hasta la cima de la pila. El deck esta\u0301 representado por un arreglo con las puntuaciones p_ i ( 1 \u2264 i \u2264 n) de cada carta. La carta con puntuacio\u0301n p_ 1 esta\u0301 en el fondo y la carta con puntuacio\u0301n p_ n esta\u0301 en la cima. Jorge esta\u0301 a punto de revolver su deck, por lo que quiere utilizar este poder para maximizar la fuerza de su deck y vencer a Santy, su malvado oponente. La fuerza del deck se define como: \u2211_ i= 1^ n n^ n - i\u00b7 p_ i Jorge revuelve su deck de la siguiente manera: - Elige un entero k ( 0 < k) . - Toma las primeras k cartas de la cima de su deck y las pone, en el orden en el que esta\u0301n, en la cima de una segunda pila que va a ser su deck revuelto. - Repite el proceso hasta que no queden cartas en su deck original. Por ejemplo, si el deck es 1 2 3 4 5, puede revolverlo de la siguiente manera: - k = 1: se toma la primer carta de la cima del deck original y se ponen en la cima del segundo deck. - Original: 1 2 3 4- Segundo: 5- k = 3: se toman las primeras 3 cartas de la cima del deck original y se ponen en la cima del segundo deck. - Original: 1- Segundo: 5 2 3 4- k = 1: se toma la primer carta de la cima del deck original y se ponen en la cima del segundo deck. - Original: - Segundo: 5 2 3 4 1Jorge sabe que eres un buen programador y quiere ganar a toda costa, por lo que te ha pedido que le ayudes a revolver su deck y calcules la fuerza obtenida. # ProblemaDado un arreglo con las puntuaciones p_ i de las n cartas del deck de Jorge ( desde el fondo hasta la cima) , revuelve el deck y calcula la fuerza obtenida. El puntaje obtenido para cada caso sera\u0301 mayor si tu respuesta se acerca a la fuerza ma\u0301xima posible, o menor si se aleja de la fuerza ma\u0301xima posible. Si imprimes la ma\u0301xima fuerza posible, obtendra\u0301s todos los puntos.",
    "input": "En la primera li\u0301nea un entero n, la cantidad de cartas del deck de Jorge. En la segunda li\u0301nea, n enteros p_ i, las puntuaciones de cada carta empezando por el fondo y terminando en la cima del deck.",
    "output": "Una li\u0301nea con un entero indicando la fuerza calculada, mo\u0301dulo 10^ 9 + 7.",
    "note": "",
    "topics": [
      "math",
      "sortings",
      "implementation",
      "number theory",
      "greedy"
    ],
    "id": 13002
  },
  {
    "title": "Huge Fibonacci",
    "url": "https://omegaup.com/arena/problem/Huge-Fibonacci",
    "history": "# ProblemaDados dos enteros * * n* * y * * m* * , la salida * * Fibonacci( n) * * mod * * m* * ( es decir, el resto de * * Fn* * cuando se divide por * * m* * ) . ! [ enter image description here] [ 1]",
    "input": "Dos enteros * * n* * y * * m* * separados por un espacio",
    "output": "* * Fn mod m* *",
    "note": "",
    "topics": [
      "math",
      "dfs and similar",
      "implementation",
      "dp"
    ],
    "id": 11898
  },
  {
    "title": "Problemas de memoria",
    "url": "https://omegaup.com/arena/problem/Problemas-de-memoria",
    "history": "Es el an\u0303o 2420 y los cienti\u0301ficos quieren crear un nuevo robot con toda la inteligencia e informacio\u0301n acumulada de la humanidad. Pero para ello no podemos usar la base binaria de hace siglos. La memoria del robot debe ser de varios yottabytes ( 1 yottabyte = 1 trillo\u0301n de megabytes) . Afortunadamente unos an\u0303os atra\u0301s se descubrio\u0301 la computacio\u0301n con base x. Esto quiere decir que en un solo bit se puede guardar ma\u0301s de dos estados distintos. Una variable como saben tiene cierto nu\u0301mero de bits. Tu tarea es determinar, con esta base x y una cantidad n de bits, cua\u0301ntos estados distintos guarda esa variable. Como este nu\u0301mero puede ser gigantesco, imprime la respuesta mo\u0301dulo 1e9+ 7.",
    "input": "En la primer y u\u0301nica li\u0301nea dos enteros 2\u2264 x \u2264 1e18 y 1 \u2264 n \u2264 1e18",
    "output": "Un entero, la cantidad de valores distintos que se pueden almacenar en la variable.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 11256
  },
  {
    "title": "Mi amigo \u00f1o\u00f1OVI ",
    "url": "https://omegaup.com/arena/problem/OVI2019---Mi-amigo-nonOVI-",
    "history": "Finalmente has llegado a la OVI, bienvenido. El comite\u0301 organizador ( COVI) quiere que adema\u0301s de llevarte la experiencia te lleves nuevos amigos, sin embargo, los integrantes del COVI son gente complicada y nunca ponen las cosas fa\u0301ciles. El COVI ha dispuesto un mecanismo para determinar quien podri\u0301a ser la persona ideal para ser tu nuevo amigo, de acuerdo a alguna caracteri\u0301stica de intere\u0301s. Tanto los participantes como las caracteri\u0301sticas se representan con un identificador entero. El mecanismo de amistad funciona de la siguiente manera: Si un persona con identificador P quiere encontrar el identificador Q de la persona ideal con caracteri\u0301stica C para entablar una amistad, debe calcular el mu\u0301ltiplo de C ma\u0301s cercano a P, Por ejemplo: Si el participante con identificador P= 20 quiere encontrar un amigo con identificador Q que tenga la caracteri\u0301stica C= 6 entonces debe calcular el mu\u0301ltiplo ma\u0301s cercano de C= 6, es decir, Q= 18. # ProblemaDado un entero N que denota el nu\u0301mero de consultas de la forma P, C, determina para cada consulta, el entero Q que represente el identificador del nuevo amigo. \u2014\u2014\u2014-",
    "input": "En la primera li\u0301nea el entero N. En cada una de las siguientes N li\u0301neas dos enteros P, C separados por un espacio.",
    "output": "Para cada pareja P, C, imprimir el entero Q seguido de un salto de li\u0301nea. \u2014\u2014\u2014-",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 9189
  },
  {
    "title": "Cesar y el modulo (ETITC Ejercicio 1_ condicionales )",
    "url": "https://omegaup.com/arena/problem/David-y-el-modulo-ETITC",
    "history": "Cesar acaba de recibir una clase de matema\u0301ticas. En esta su profesor le ensen\u0303o\u0301 que se puede saber si un nu\u0301mero es mu\u0301ltiplo de otro siempre y cuando a/ b tenga como residuo 0 siendo \u2018a\u2019 el nu\u0301mero en cuestio\u0301n por el que se quiere saber si es mu\u0301ltiplo de \u2018b\u2019. Su profesor le dejo\u0301 la siguiente tarea: Al sumar los dos nu\u0301meros \u2018a\u2019 y \u2018b\u2019 se quiere saber si es mu\u0301ltiplo de \u2018s\u2019. Lastimosamente Cesar tiene un profesor llamado Ardila que lo hace escribir como mil hojas examen para un 3. Ayuda a Cesar a resolver su tarea de matema\u0301ticas, pues no tiene tiempo y quiere dormir.",
    "input": "Ingresan 3 nu\u0301meros a, b y s. Los dos primeros representan la suma y s sera\u0301 el nu\u0301mero del cual se revisa ser mu\u0301ltiplo.",
    "output": "Si la suma es mu\u0301ltiplo de s mostrar \" SI\" ( exceptuando las comillas) y \" NO\" de lo contrario ( exceptuando las comillas) .",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 8178
  },
  {
    "title": "Exponenciales for Dummies",
    "url": "https://omegaup.com/arena/problem/Exponenciales-for-Dummies",
    "history": "Habi\u0301a una vez, un grupo de tres olimpicos foraneos que se dedicaban toda la semana a no hacer absolutamente nada, o al menos nada que se pueda escribir en este problema sin que lo reporten. Un di\u0301a, estaban aprendiendo a usar funciones recursivas, y se les presento\u0301 el siguiente problema. \" Dados dos nu\u0301meros a y b, calcula a^ b",
    "input": "Dos nu\u0301meros a y b.",
    "output": "a^ b",
    "note": "",
    "topics": [
      "implementation",
      "math",
      "constructive algorithms",
      "number theory"
    ],
    "id": 8164
  },
  {
    "title": "Mod de dos n\u00fameros",
    "url": "https://omegaup.com/arena/problem/Mod-de-dos-numeros",
    "history": "Realiza un programa que solicite dos nu\u0301meros e imprima el mod de ambos nu\u0301meros.",
    "input": "Escribe dos nu\u0301meros a y b",
    "output": "El resultado del mod de ambos nu\u0301meros.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 7391
  },
  {
    "title": "Rutina en un Gimnasio Lleno",
    "url": "https://omegaup.com/arena/problem/Rutina-en-un-Gimnasio-Lleno",
    "history": "Jim se acaba de inscribir en un gimnasio local . Esta\u0301 muy emocionado por una rutina que consta de una secuencia de 10 ma\u0301quinas , las cuales usara ciclicamente , y tiene que usar cada una 3 veces . Tiene un tiempo fijo para el uso de de cada ma\u0301quina , asi\u0301 como el tiempo de recuperacio\u0301n ( descanso) que usa para cada una . Jim no es la persona ma\u0301s brillante del mundo , pero ese no es obsta\u0301culo para que el pueda calcular el tiempo que le tomara\u0301 terminar su rutina . Sin embargo , Jim no es la u\u0301nica persona en el gimnasio , cada que e\u0301l llega , ya hay 10 personas , cada una usando una ma\u0301quina diferente de las que Jim tiene que usar para su rutina . Cada una de esas 10 personas tienen un tiempo fijo de uso y de recuperacio\u0301n . Eso significa que en algunas ocasiones , Jim tendra\u0301 que esperar para poder usar alguna ma\u0301quina , y que algunas personas tengan que esperar para usar la ma\u0301quina si es que Jim la esta\u0301 utilizando ( aunque si\u0301 Jim y otra persona van a comenzar a usar una ma\u0301quina al mismo tiempo , el es bastante educado y dejara\u0301 que la otra persona la use primero) . Ayuda a Jim a saber cua\u0301nto tiempo le tomara\u0301 terminar su rutina teniendo en cuenta a las dema\u0301s personas en el gimnasio .",
    "input": "La primera li\u0301nea contiene 20 enteros , los primeros dos son el tiempo que Jim usa la primera ma\u0301quina , y el tiempo de recuperacio\u0301n que usa para dicha ma\u0301quina , los siguientes dos enteros lo mismo pero en este caso para la segunda ma\u0301quina , y asi\u0301 sucesivamente . La siguiente li\u0301nea contiene 3 enteros , u, r, t , u es el tiempo de uso , r el tiempo de recuperacio\u0301n , esto para la persona que esta\u0301 usando la primera ma\u0301quina , mientras que t es el tiempo en el que comienza a usar la ma\u0301quina . Las siguientes 9 li\u0301neas representan lo mismo para las ma\u0301quinas 2 a 10 . Puedes asumir que Jim esta\u0301 listo para usar la primera ma\u0301quina en el tiempo 0 .",
    "output": "El tiempo transcurrido hasta que Jim termina su rutina , es decir , cuando acaba de usar la de\u0301cima ma\u0301quina por tercera vez ( no tomes en cuenta el u\u0301ltimo periodo de recuperacio\u0301n para esa ma\u0301quina) .",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 6965
  },
  {
    "title": "Calculando numeros de fibonacci",
    "url": "https://omegaup.com/arena/problem/Caclulando-numeros-de-fibonacci",
    "history": "La serie de fibonacci comienza con 1, 1 y a partir de ahi\u0301 cada nu\u0301mero siguiente es la suma de los 2 nu\u0301meros anteriores, de la forma siguiente: 1, 1, 2, 3, 5, 8, 13, 21, . . . Se te pide encontrar el residuo del termino n de fibonacci al ser dividido entre 2017.",
    "input": "un solo numero n.",
    "output": "El residuo del termino n de fibonacci al ser dividido entre 2017.",
    "note": "",
    "topics": [
      "number theory",
      "divide and conquer",
      "dp",
      "math",
      "dfs and similar"
    ],
    "id": 6873
  },
  {
    "title": "Serie de sumas",
    "url": "https://omegaup.com/arena/problem/Serie-de-sumas",
    "history": "La serie 1^ 1+ 2^ 2+ 3^ 3. . . . . . + 9^ 9+ 10^ 10 = 10405071317Encuentra los ultimos 7 digitos de la serie hasta N , esto es 1^ 1+ 2^ 2+ 3^ 3. . . + N^ N",
    "input": "Un nu\u0301mero , N .",
    "output": "Los ultimos 7 digitos de la serie.",
    "note": "",
    "topics": [
      "math",
      "divide and conquer"
    ],
    "id": 6810
  },
  {
    "title": "Potencias y M\u00f3dulos",
    "url": "https://omegaup.com/arena/problem/potencias-y-modulos",
    "history": "Santiago esta\u0301 en medio de su examen de matema\u0301ticas, y de pronto se encuentra con una serie de preguntas que parece que se va a tardar un buen rato. Estas preguntas son del tipo, calcula: x^ y = a( mod z) . # ProblemaSon varias preguntas de ese tipo, por lo que Santiago ha decidido desarrollar un programa que le haga esas operaciones y que lo haga ra\u0301pido. \u00a1Ayu\u0301dale a Santiago a hacerlo!",
    "input": "Tres nu\u0301meros: * x Un nu\u0301mero base para la potencia. * y Un exponente no negativo. * z El mo\u0301dulo.",
    "output": "El resultado de ejecutar esa operacio\u0301n.",
    "note": "",
    "topics": [
      "number theory",
      "math"
    ],
    "id": 6777
  },
  {
    "title": "binario",
    "url": "https://omegaup.com/arena/problem/binario_cpp",
    "history": "# descripciontu maestra te ah dejado que practiques los numeros binarios, pero como eres muy flojo decidiste hacer un programa que lo haga por ti",
    "input": "recibiras un numero N donde ( 0< = N < = 1000)",
    "output": "tendras que imprimir el numero en binario| | input3| | output1 1| | end",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 6767
  },
  {
    "title": "K-tree",
    "url": "https://omegaup.com/arena/problem/K-tree",
    "history": "Recientemente una estudiante creativa, Lesha, tuvo una conferencia sobre los a\u0301rboles. Despue\u0301s de la conferencia Lesha se inspiro\u0301 y se le ocurrio\u0301 su propio a\u0301rbol, al cual llamo\u0301 k- tree. Un k- tree es un a\u0301rbol con rai\u0301ces infinitas donde: - Cada ve\u0301rtice tiene exactamente k hijos; - Cada arista tiene cierto peso; - Si miramos las aristas que van de algu\u0301n ve\u0301rtice asus hijos ( exactamente k aristas) , entonces sus pesos sera\u0301n iguales a 1, 2, 3, . . . , k . La imagen de abajo muestra una parte de un 3- a\u0301rbol. ! [ ] ( http: / / codeforces. com/ predownloaded/ d8/ 06/ d806ea87722907ab843e197d329bceb3e8403972. png) Tan pronto como Dima, un buen amigo de Lesha, se entero\u0301 del a\u0301rbol, se pregunto\u0301 de inmediato: * \u00bfCua\u0301ntos caminos de peso total n ( la suma de todos los pesos de las aristas en el camino) esta\u0301n ahi\u0301, partiendo de la rai\u0301z de un k- tree y que contiene tambie\u0301n al menos una arista de peso al menos d ? . * Ayuda a Dima a encontrar una respuesta a su pregunta. Como el nu\u0301mero de formas puede ser bastante grande, imprima el resultado mo\u0301dulo 10 ^ 9 + 7.",
    "input": "Una li\u0301nea con tres enteros separados por espacios: n, k, d.",
    "output": "Un entero, la respuesta a la pregunta de Dima en mo\u0301dulo 10^ 9 + 7.",
    "note": "",
    "topics": [
      "dfs and similar",
      "dp",
      "combinatorics",
      "math",
      "graphs",
      "trees"
    ],
    "id": 5692
  },
  {
    "title": "Dividiendo en bases",
    "url": "https://omegaup.com/arena/problem/Dividiendo-en-bases",
    "history": "Dado un numero entero n con k di\u0301gitos en base a. Debera\u0301s decir si a+ 1 divide a n.",
    "input": "El nu\u0301mero k de di\u0301gitos que tendra\u0301 n. El nu\u0301mero a. El nu\u0301mero n.",
    "output": "Un solo valor de salida con * * S* * si a+ 1| n o\u0301 * * N* * si no lo hace",
    "note": "",
    "topics": [
      "math",
      "number theory"
    ],
    "id": 5594
  },
  {
    "title": "Sumas",
    "url": "https://omegaup.com/arena/problem/Sumas_Multiplo",
    "history": "Dados N nu\u0301meros enteros positivos, encuentra un subconjunto no vaci\u0301o de ellos cuya suma sea mu\u0301ltiplo de N. Los nu\u0301meros no son necesariamente diferentes.",
    "input": "La primera li\u0301nea contiene N, la cantidad de nu\u0301meros. La segunda li\u0301nea contiene los N nu\u0301meros a_ i.",
    "output": "La primera li\u0301nea debe indicar el taman\u0303o del subconjunto. La siguiente li\u0301nea debe contener los nu\u0301meros del subconjunto, separados por un espacio. Eres libre de imprimir cualquier subconjunto. En caso de no haber solucio\u0301n, debes imprimir una u\u0301nica li\u0301nea conteniendo el valor 0.",
    "note": "",
    "topics": [
      "dp",
      "math"
    ],
    "id": 5590
  },
  {
    "title": "Stevie y los n\u00fameros malvados I",
    "url": "https://omegaup.com/arena/problem/Stevie-y-los-numeros-malvados-I",
    "history": "En un di\u0301a lluvioso, nuestro amigo Stevie, leyendo sus libros de Teori\u0301a de Nu\u0301meros se encontro\u0301 con el siguiente enunciado: \" Un nu\u0301mero N es llamado Malvado si la suma de su di\u0301gitos en binario es Par. \" Le ha dado tanta curiosidad, que ha escrito los primeros 5 nu\u0301meros malvados; enlistados a continuacio\u0301n: 0, 3, 5, 6, 9. Y como sabemos, nuestro amigo Stevie es muy curioso y nos ha pedido encontrar la Sumatoria de los nu\u0301meros malvados contenidos en el rango [ A, B] , de la siguiente manera: m_ A + m_ A+ 1 + m_ A+ 2 + . . . + m_ BPor ejemplo del rango [ 2, 5] la sumatoria quedari\u0301a de la siguiente forma: 3 + 5 + 6 + 9 = 23.",
    "input": "La entrada consiste en varios casos, por cada linea, contiene dos nu\u0301meros enteros 1 < = A < = B < = 10^ 5.",
    "output": "Por cada linea imprimir la sumatoria dado el rango A y B.",
    "note": "",
    "topics": [
      "games",
      "math",
      "number theory"
    ],
    "id": 5537
  },
  {
    "title": "Tin Marin b\u00e1sico",
    "url": "https://omegaup.com/arena/problem/Tin-Marin-basico",
    "history": "Seguramente conoces el popular juego tin marin que se usa para eliminar a una persona de un conjunto. En el juego se dice una rima y por cada palabra se sen\u0303ala a un elemento del conjunto, el elemento que sea sen\u0303alado de u\u0301ltimo sale del juego. La rima que se usa es \" De tin mari\u0301n de Do pingu\u0308e, cu\u0301cara ma\u0301cara ti\u0301tere fue, yo no fui, fue tete\u0301, pe\u0301gale, pe\u0301gale que ella fue\" . Como buen informa\u0301tico sabes que basta con contar las palabras en la rima para saber de antemano quie\u0301n sera\u0301 el perdedor, y para tener completo dominio del fraude quieres hacer un programa que dado el nu\u0301mero N de personas en el conjunto, el nu\u0301mero de palabras en la rima y los nombres de las pesonas ( expresados como nu\u0301meros enteros) determine que\u0301 persona sera\u0301 eliminada. Asume que la rima se inicia siempre a partir de la primera persona y que si se llega a la u\u0301ltima y la rima no ha terminado, debes volver a la primera persona y continuar.",
    "input": "En la primera li\u0301nea los enteros N y K que denotan el nu\u0301mero de personas en el juego y la cantidad de palabras en la rima respectivamente. En la segunda li\u0301nea y separados por un espacio, los nu\u0301meros que identifican a cada persona.",
    "output": "El nu\u0301mero que identifica a la persona que sera\u0301 eliminada. # Ejemplos# | | input10 620 4 5 2 3 98 33 21 18 54| | output98| | descriptionComa la rima tiene 6 palabras y se inicia contado desde la primera persona, entonces la sexta persona pierde, es decir la persona en sexto lugar en la entrada: 98| | end| | input10 1820 4 5 2 3 98 33 21 18 54| | output21| | descriptionComo cuentas de izquierda a derecha, cuando llegas al final del conjunto debes regresar al primer elemento y seguir contando en este caso hasta el elemento no. 18. 20 4 5 2 3 98 22 21 18 54 20 4 5 2 3 98 33 21| | end# Li\u0301mites# 1 \u2264 N \u2264 1001 \u2264 K \u2264 1, 000, 000< strong> Para el 50",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 5517
  },
  {
    "title": "\u00daltimo D\u00edgito de N\u00e9stor",
    "url": "https://omegaup.com/arena/problem/Ultimo-Digito-de-Nestor",
    "history": "Ne\u0301stor esta\u0301 haciendo su tarea de matema\u0301ticas. Una actividad en la que ha tenido que hacer muchas operaciones en los u\u0301ltimos tres di\u0301as y esta\u0301 muy cansado. La tarea es que dado dos nu\u0301meros A y B quieren encontrar el u\u0301ltimo di\u0301gito de A ^ B. Debes ayudar a Ne\u0301stor con esta tarea. Se dara\u0301n dos nu\u0301meros: la base A ( 0 \u2264 A \u2264 20) y el i\u0301ndice B ( 0 \u2264 B \u2264 2147483000) .",
    "input": "La primera li\u0301nea de la entrada contiene un nu\u0301mero 1 \u2264 T \u2264 100, el nu\u0301mero de casos de prueba. Las li\u0301neas T siguen. Para cada caso de prueba, una li\u0301nea con A y B separados por un espacio.",
    "output": "Para cada caso de prueba debe imprimir una li\u0301nea con el resultado. | | input23 106 2| | output96| | end",
    "note": "",
    "topics": [
      "math",
      "number theory",
      "divide and conquer",
      "brute force"
    ],
    "id": 5229
  },
  {
    "title": "Potencia",
    "url": "https://omegaup.com/arena/problem/Potencia",
    "history": "Crea un programa que reciba como entrada 3 nu\u0301meros enteros x, y, z y devuelva como salida el residuo de x^ y al ser dividido entre z.",
    "input": "Una sola linea con los nu\u0301meros x, y, z en ese orden.",
    "output": "Una sola linea con el residuo de x^ y al ser dividido entre z.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 5198
  },
  {
    "title": "El cl\u00e1sico problema de big mod",
    "url": "https://omegaup.com/arena/problem/El-clasico-problema-de-big-mod",
    "history": "Dados tres numeros b, p y m, imprime \" Si\" ( sin las comillas) si b^ p \u2261 0 ( m)",
    "input": "Tres enteros, b, p, y m.",
    "output": "Imprime \" Si\" o \" No\" segun el caso.",
    "note": "",
    "topics": [
      "number theory",
      "math"
    ],
    "id": 4216
  },
  {
    "title": "Divisores de N!",
    "url": "https://omegaup.com/arena/problem/Divisores-de-N",
    "history": "Para que no pierdas mas tiempo leyendo tantos problemas, los organizadores sera\u0301n buena onda y pondra\u0301n al menos este problema con redaccio\u0301n corta. Es un problema fa\u0301cil de entender, pero de responder, quie\u0301n sabe. Tu tarea consiste en calcular cuantos divisores tiene el factorial de un nu\u0301mero N. El factorial de un nu\u0301mero es la multiplicacio\u0301n de todos los nu\u0301meros de 1 a N, por ejemplo 4! = 1\u00d72\u00d73\u00d74 = 24 y es divisible por 1, 2, 3, 4, 6, 8, 12, 24 por lo tanto tiene 8 divisores. \u00bfSuena fa\u0301cil? , Pues bien, 0 le; N le; 1, 000, 000, ya no es tan fa\u0301cil como se vei\u0301a. . . \u00bfo si?",
    "input": "Una li\u0301nea con un solo nu\u0301mero entero N",
    "output": "Un u\u0301nico nu\u0301mero entero, la cantidad de divisores en N! , como este nu\u0301mero puede ser muy grande debera\u0301s imprimir su residuo( mo\u0301dulo) con el nu\u0301mero 987654321",
    "note": "",
    "topics": [
      "math",
      "number theory"
    ],
    "id": 3755
  },
  {
    "title": "Chicos Mosby",
    "url": "https://omegaup.com/arena/problem/OMI-2016-Chicos-Mosby",
    "history": "# HistoriaMientras estabas practicando arduamente para la OMI 2016, el estafador William Zabka se ha robado tu pin\u0303a de la suerte. Bien sabes que sin tu pin\u0303a de la suerte no vas a conseguir ninguna medalla en la olimpiada, asi\u0301 que le pides al detective/ arquitecto Ted Mosby que, junto a los famosos chicos Mosby, te ayude a encontrar a Zabka. Zabka se escondio\u0301 en una cuadri\u0301cula rectangular de N \u00d7 M. Por suerte Ted y sus chicos desarrollaron un dron que les permite buscar a Zabka dentro de un cuadrado, sin importar su taman\u0303o, en tan solo un minuto. Con su dron, los chicos Mosby piensan ubicar a Zabka con el siguiente me\u0301todo: + Primero encuentran el cuadrado ma\u0301s grande que quepa en el a\u0301rea de la cuadri\u0301cula que au\u0301n no han revisado. + Ubican ese cuadrado pegado a uno de los extremos del a\u0301rea de la cuadri\u0301cula que au\u0301n no se ha revisado. + Revisar el a\u0301rea cuadrada en 1 minuto. + Volver al paso 1 hasta que el a\u0301rea rectangular haya sido revisada completamente. # ProblemaEscribe un programa que dadas las dimensiones de N y M de la cuadri\u0301cula donde se escondio\u0301 Zabka, calcule cua\u0301l sera\u0301 la cantidad ma\u0301xima de minutos que tardara\u0301n en encontrarlo. Es decir, la cantidad de cuadrados que tendra\u0301n que revisar.",
    "input": "Tu programa debe leer del teclado la siguiente informacio\u0301n: * Una li\u0301nea con dos nu\u0301meros enteros: N y M, las dimensiones de la cuadricula rectangular.",
    "output": "Tu programa debe escribir en la pantalla un u\u0301nico nu\u0301mero que representa el tiempo que tomara\u0301 revisar toda la cuadri\u0301cula.",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 3692
  },
  {
    "title": "El tesoro del Kikirisquiaga",
    "url": "https://omegaup.com/arena/problem/El-tesoro-del-Kikirisquiaga",
    "history": "En su ultima misio\u0301n, el Dr. Bucketbranch fue a explorar una tumba abandonada en el valle del Kikirisquiaga, ahi\u0301 se encontro\u0301 con un epitafio que teni\u0301a una leyenda inscrita que deci\u0301a mas o menos asi\u0301: * \" So\u0301lo aquel sabio que logre dar respuesta a la siguiente interrogante, vivira\u0301 una vida llena de riquezas\" * # ProblemaDado un valor N el cual representa la medida de la base de un tablero de 3 X N. Determinar de cua\u0301ntas maneras puede llenarse con fichas de 2X1. ! [ ejemplo] ( ejemplo. png) La imagen de ejemplo muestra una posible solucio\u0301n para N = 6.",
    "input": "Un nu\u0301mero entero positivo N que representa la medida de la base de un recta\u0301ngulo.",
    "output": "Un entero positivo indicando la respuesta mod 1000000000",
    "note": "",
    "topics": [
      "math",
      "dp"
    ],
    "id": 3533
  },
  {
    "title": "Domino's",
    "url": "https://omegaup.com/arena/problem/Dominos",
    "history": "Un di\u0301a estabas jugando ajedrez, y pensaste: \u00bfde cua\u0301ntas formas se puede llenar un tablero de 2 x N con fichas de domino\u0301 ( fichas de 2x1) ? , te desconcentraste tanto, porque la pregunta no teni\u0301a que ver con el juego, que perdiste. Molesto porque perdiste, decidiste hacer un programa que responda a tu duda.",
    "input": "Un entero no negativo N.",
    "output": "La cantidad de formas de llenar el tablero usando fichas de domino mo\u0301dulo 1 000 000 007.",
    "note": "",
    "topics": [
      "dp",
      "math",
      "number theory",
      "dfs and similar",
      "combinatorics"
    ],
    "id": 3434
  },
  {
    "title": "Agrupando Limones",
    "url": "https://omegaup.com/arena/problem/Agrupando-Limones",
    "history": "Ricardo tiene dos amores en la vida: los tacos y las matema\u0301ticas. Cuando va a comer tacos con sus amigos siempre lo hace de una forma particular: pide T tacos desde el inicio, porque sabe que esos son los que se acabara\u0301 y adema\u0301s pide limones, pero como el kilo esta\u0301 muy caro, so\u0301lo le dan una cantidad L de e\u0301stos. Como Ricardo vive haciendo ca\u0301lculos de cosas sin sentido dice que su vida es \" regular\" si puede repartir de forma equitativa los L limones que le dan en los T tacos que pidio\u0301, sin que sobren limones y sin partirlos. Tu tarea es ayudar a Ricardo a saber si su vida es regular dadas parejas de tacos y limones.",
    "input": "Un nu\u0301mero N que representa la cantidad de parejas que Ricardo te dara\u0301. Las siguientes N li\u0301neas son parejas que contienen la cantidad de tacos T y limones L de la orden de Ricardo ( en ese orden) .",
    "output": "Para cada pareja, si Ricardo puede destinar los limones de forma regular imprime \" R\" , de lo contrario imprime \" I\" .",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 3055
  },
  {
    "title": "Monumento",
    "url": "https://omegaup.com/arena/problem/Monumento",
    "history": "Nadie sabi\u0301a esto( y muy posiblemente tampoco sea cierto) , pero los Mayas adoraron a un dios llamado Tioteotl. Se preguntara\u0301n \u00bfque\u0301 le atribui\u0301an a esta deidad? , \u00bfel cielo, los a\u0301rboles, los rios, la tierra? , no, le atribui\u0301an algo mucho mas importante, la programacio\u0301n. He aqui\u0301 el significado de su nombre: nahuatia ohtli teotlnatia oht teotlti oh teotlnahuatia: mandarohtli: caminoTeotl: dios/ maravillosoSignificado: El dios de mandar definiendo un camino o el dios de los algoritmos. ! [ Ejemplo de un monumento] ( figura1. jpg) Recientemente, todos los arqueologos de la OMI, descubrieron un monumento maya a Tioteotl que consta de una cuadricula de N x 2 sobre la cual se cubri\u0301a completamente con piedras de 2x1 de manera que ninguna piedra( o fragmento de piedra) quedara fuera de la cuadricula y no quedaran piedras encima de otras( la figura es un ejemplo de una forma de cubrir una cuadricula de 8x2) . # ProblemaDebes hacer un programa que dado N, determine F, donde F es el nu\u0301mero de formas en que pudieron haber cubierto la cuadricula de N x 2 cumpliendo las condiciones antes mencionadas.",
    "input": "La primera y unica li\u0301nea contendra\u0301 un entero: N.",
    "output": "Una u\u0301nica li\u0301nea con un entero: M mod 1, 000, 000. # Ejemplos| | input4| | output5| | end# ConsideracionesPuedes asumir que 0< = N< = 1 000 000, adema\u0301s, en el 50",
    "note": "",
    "topics": [
      "dfs and similar",
      "dp",
      "math",
      "implementation"
    ],
    "id": 2984
  },
  {
    "title": "Arreglo Supersaiyajin",
    "url": "https://omegaup.com/arena/problem/Arreglo-Supersaiyajin",
    "history": "# Arreglo SupersaiyajinLa leyenda dice que todo arreglo es un arreglo supersaiyajin fase 0. Cuando este arreglo incrementasu Ki puede transformarse en un arreglo supersaiyajin fase 1. Si aumenta au\u0301n ma\u0301s su Ki se transformaen un arreglo supersaiyajin fase 2. . . De manera general, si un arreglo supersaiyajin fase k eleva su Ki, se transforma entonces en un arreglo supersaiyajin fase k+ 1. Cuando un arreglo supersaiyajin fase k se transforma en fase k+ 1, el i- e\u0301simo nu\u0301mero en el arreglo esreemplazado por la suma de todos los nu\u0301meros en el arreglo fase k exceptuando al propio i- e\u0301simo nu\u0301mero. A los nu\u0301meros resultantes se les aplica mo\u0301dulo 1, 000, 000, 007. Escribe un programa que, dado un arreglo inicial A de n nu\u0301meros y un valor de k, calcule la suma de losnu\u0301meros del arreglo mo\u0301dulo 1, 000, 000, 007 cuando este se transforma en supersaiyajin fase k.",
    "input": "En la primer li\u0301nea dos enteros: n y k. La segunda li\u0301nea contendra\u0301 n enteros: los valores en el arreglo inicial A.",
    "output": "Un solo entero: la suma de todos los nu\u0301meros del arreglo cuando se transforma en supersaiyajin fase k. | | input4 11 2 3 4| | output30| | input4 21 2 3 4| | output90| | end# Explicacio\u0301nEl arreglo [ 1, 2, 3, 4] al transformarse en supersaiyajin fase 1 quedari\u0301a: [ 9, 8, 7, 6] . Sumando un total de 30. Si el arreglo anterior aumenta su Ki, pasari\u0301a a ser [ 21, 22, 23, 24] , que suma en total 90. # Li\u0301mites* Todos los casos cumplen que 1\u2264 n \u2264 1, 000* Cada valor en el arreglo sera\u0301 un entero positivo menor a 100. * * Subtarea 1 [ 20 puntos] * * * 0\u2264 k \u2264 1, 000* * Subtarea 2 [ 40 puntos] * * * 0\u2264 k \u2264 1, 000, 000* * Subtarea 3 [ 40 puntos] * * * 0\u2264 k \u2264 1, 000, 000, 000",
    "note": "",
    "topics": [
      "math",
      "number theory"
    ],
    "id": 2889
  },
  {
    "title": "Cadenas Fibonacci",
    "url": "https://omegaup.com/arena/problem/Cadenas-Fibonacci",
    "history": "Los nu\u0301meros Fibonacci se definira\u0301n asi\u0301 F1= 1, F2= 1, Fn= Fn- 1+ Fn- 2. Una cadena Fibonacci la definimos como: F1+ F2+ . . . + Fn. Dado un nu\u0301mero N Calcule la suma de las primeras N cadenas Fibonacci mo\u0301dulo 1000000007",
    "input": "N el nu\u0301mero ya descrito.",
    "output": "El valor que se solicita.",
    "note": "",
    "topics": [
      "dp",
      "number theory",
      "math",
      "dfs and similar",
      "matrices",
      "divide and conquer"
    ],
    "id": 2842
  },
  {
    "title": "Miguelito 2.0",
    "url": "https://omegaup.com/arena/problem/Miguelito-20",
    "history": "Este problema es tan fa\u0301cil que ni siquiera lleva descripcio\u0301n. Solo estas pequen\u0303as lineas diciendote que no hay descripcio\u0301n, asi que quiza\u0301 despue\u0301s de leer la primera li\u0301nea te habra\u0301s dado cuenta que esta no es una descripcio\u0301n y, por lo tanto, ya deberi\u0301as haber dejado de leer estas palabras y deberi\u0301as ya estar leyendo el verdadero problema. Lo unico que podemos decirte es que es una tarea de Miguelito! [ enter image description here] [ 1] # ProblemaDados los nu\u0301meros enteros a, n y m. Escribe el resultado de la operacio\u0301n a^ n mod m. * Nota* : mod significa mo\u0301dulo (",
    "input": "Tres li\u0301neas: El nu\u0301mero aEl nu\u0301mero nEl nu\u0301mero m",
    "output": "Un u\u0301nico nu\u0301mero indicando el resultado de la operacio\u0301n. | | input2310| | output8| | description2^ 3 = 88 mod 10 = 8| | input3177| | output5| | description3^ 17 = 129, 140, 163129, 140, 163 mod 7 = 5| | end# Li\u0301mites1 < = a < = 2^ 310 < = n < = 10^ 181 < = m < = 20# Evaluacio\u0301n- Para un conjunto de casos con valor de 25 puntos0< = n< = 10- Para un conjunto de casos con valor de 30 puntos0< = n< = 1, 000, 000- Para un conjunto de casos con valor de 45 puntos 0 < = n < = 10^ 18[ 1] : d0a8dcf8fbc8ace8650eda2d47634296febefb1d. jpeg",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 2624
  },
  {
    "title": "GCC",
    "url": "https://omegaup.com/arena/problem/GCC",
    "history": "The GNU Compiler Collection ( usually shortened to GCC) is a compiler system produced by the GNU Project supporting various programming languages. But it doesn\u2019t contain the math operator ` \u00a1. In mathematics, this symbol represents the factorial operation. The expression ` n\u00a1 means \" the product of the integers from 1 to n\" . For example, ` 4\u00a1 ( read four factorial) is 4 \u00d7 3 \u00d7 2 \u00d7 1 = 24. ( 0! is defined as 1, which is a neutral element in multiplication, not multiplied by anything. ) We want you to help us with this formation: ` ( 0! + 1! + 2! + 3! + 4! + . . . + n! )",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "strings",
      "implementation",
      "math"
    ],
    "id": 2229
  },
  {
    "title": "Casino",
    "url": "https://omegaup.com/arena/problem/Casino",
    "history": "En un casino pusieron unas nuevas ma\u0301quinas tragamonedas. En estas ma\u0301quinas hay tres nu\u0301meros G, S y M. G indica cua\u0301ntas monedas gano\u0301 la u\u0301ltima persona que jugo\u0301 mientras que S y M sirven para decidir cuantas monedas se le dara\u0301n al siguiente jugador. Cada vez que alguien deposita una moneda puede decidir que ganancia quiere tener, puede quedarse con G+ S M, o bien, quedarse con G* S M. Una vez que se toma la decisio\u0301n, la ma\u0301quina le da al jugador su ganancia y se coloca un nuevo valor de S en la pantalla. Las siguientes li\u0301neas son un ejemplo de una secuencia de juegos en los que M= 5 y el nu\u0301mero total de monedas ganadas es 11: | G | S | Decisio\u0301n | | \u2014| \u2014| \u2014\u2014\u2014\u2014\u2014| | 0 | 3 | 0+ 3 mod 5 = 3 | | 3 | 3 | 3* 3 mod 5 = 4 | | 4 | 1 | 4* 1 mod 5 = 4 | * * Nota* * : \u0093X M\u0094 indica el residuo al hacer la divisio\u0301n X/ M, por ejemplo: 15 mod 8 = 710 mod 2 = 03 mod 10 = 3Despue\u0301s de jugar un rato en la ma\u0301quina te preguntas \u00bfCua\u0301l sera\u0301 la mayor cantidad de monedas que me puedo llevar si conociera los valores de S que me van a salir en los siguientes juegos y supiera que G= 0 al principio? # ProblemaHacer un programa que lea la secuencia de los valores de S y escriba cual es la mayor cantidad de monedas que puedes obtener.",
    "input": "Para cada caso de prueba debes leer primero dos enteros, el primero de ellos es M ( 2 \u2264 M \u2264 100) y el segundo es K ( 1 \u2264 K \u2264 100) que indica el taman\u0303o de la secuencia. A continuacio\u0301n tienes que leer la secuencia de los valores de S ( 0 \u2264 S < M) .",
    "output": "Para cada caso de prueba debes escribir una li\u0301nea de texto con el mensaje ` \u0093Al final me puedo quedar con T monedas. \u0094` , siendo T la mayor cantidad de monedas que te puedes llevar.",
    "note": "",
    "topics": [
      "dp",
      "math"
    ],
    "id": 2181
  },
  {
    "title": "Counting Substhreengs",
    "url": "https://omegaup.com/arena/problem/Counting-Substhreengs",
    "history": "Substrings are strings formed by choosing a subset of contiguous charactersfrom a string. This is well known. A little more obscure is the definition ofsubsthreengs. A substhreeng is a substring which complies to the followingadditional requirements: 1. It is non- empty, and composed entirely of base 10 digits. 2. Interpreted in base 10 ( allowing extra leading zeros) , the resulting integer is a multiple of 3. For instance, the string ` 130a303` contains 9 substhreengs: the substhreeng ` 3` three times, the substhreengs ` 30` and ` 0` twice each, and the substhreengs` 303` and ` 03` once each. The substring ` 30a3` is not a substhreeng because itis not composed entirely of base 10 digits, while the substring ` 13` is not asubsthreeng because 13 is not a multiple of 3. Notice that two substhreengs are considered different if they are different inlength or start at a different position, even if the selected characters arethe same. Given a string, you are asked to count the number of substhreengs it contains.",
    "input": "The input consists of a single line that contains a non- empty string S of atmost 10^ 6 Each character of S is either a digit or a lowercase letter.",
    "output": "Output a line with an integer representing the number of substhreengs containedin S. # Examples| | input130a303| | output9| | input0000000000| | output55| | inputicpc2014regional| | output2| | end",
    "note": "",
    "topics": [
      "math",
      "number theory",
      "dp",
      "strings"
    ],
    "id": 2060
  },
  {
    "title": "Factoriales extremos",
    "url": "https://omegaup.com/arena/problem/Factoriales-extremos",
    "history": "Hugo el Huro\u0301n estaba resolviendo su tarea de matema\u0301ticas, pero como no le gusta hacer ca\u0301lculos a mano, utilizaba su nueva calculadora OMI- 9000 que compro\u0301 por 10 pesos en el Sistema de Transporte Colectivo Metro de la Ciudad de Me\u0301xico. Pero llego\u0301 un momento en el que su calculadora no le ayudo\u0301 de mucho, ya que no soportaba ma\u0301s de 6 di\u0301gitos para hacer operaciones ( no podi\u0301a esperar mucho de una calculadora de 10 pesos) . Es por eso que requiere de un programa que le ayude a calcular la operacio\u0301n matema\u0301ticaN!",
    "input": "Una u\u0301nica li\u0301nea con dos enteros positivos N y M.",
    "output": "El resultado de la operacio\u0301n N!",
    "note": "",
    "topics": [
      "math",
      "number theory",
      "implementation"
    ],
    "id": 2007
  },
  {
    "title": "El algoritmo IDEA",
    "url": "https://omegaup.com/arena/problem/idea",
    "history": "En criptografi\u0301a, el Algoritmo Internacional para el Cifrado de Datos ( * IDEA International Data Encryption Algorithm* ) es un cifrador por bloques disen\u0303ado por Xuejia Lai y James L. Massey en 1991. Fue un algoritmo propuesto como reemplazo del DES ( * Data Encryption Standard* ) , pues no requiere del uso de cajas S y su implementacio\u0301n es mucho ma\u0301s simple. IDEA fue una revisio\u0301n menor de PES ( * Proposed Encryption Standard* ) , un algoritmo de cifrado anterior. El nombre original de IDEA era IPES ( * Improved PES* ) . Puede encontrar ma\u0301s informacio\u0301n acerca de este algoritmo y la manera de realizar su correcta implementacio\u0301n en el libro de Meneses, * Handbook of Applied Cryptography* , capi\u0301tulo 7, o bien en http: / / computacion. cs. cinvestav. mx/ sperez/ cursos/ ss/ IDEA. pdf. El objetivo consiste en realizar una implementacio\u0301n eficiente del algoritmo IDEA.",
    "input": "Un entero N que denota el nu\u0301mero de casos a procesar. Cada una de las siguientes N li\u0301neas contendra\u0301 los valores T, M y K. T sera\u0301 el nu\u0301mero 1 si la operacio\u0301n a realizar es de cifrado y 0 si la operacio\u0301n a realizar es de descifrado. La cadena M representa el mensaje de 64 bits a cifrar o descifrar y la cadena K la llave de 128 bits a utilizar. M sera\u0301 una cadena de 16 caracteres hexadecimales y K de 32 caracteres hexadecimales. So\u0301lo se utilizaran letras minu\u0301sculas para los valores hexadecimales. Puede suponer que 1 \u2264 N \u2264 10, 000.",
    "output": "La salida sera\u0301n N li\u0301neas con 16 caracteres cada una que corresponden a la salida que el algoritmo IDEA devuelve segu\u0301n se haya requerido una operacio\u0301n de cifrado o de descifrado.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 1872
  },
  {
    "title": "Un Final C\u00fabico",
    "url": "https://omegaup.com/arena/problem/Final-Cubico",
    "history": "Dada una cadena de di\u0301gitos, que termine en 1, 3, 7 o\u0301 9, siempre existe un nu\u0301mero entero, que al elevarlo al cubo su representacio\u0301n decimal termina en la cadena dada de di\u0301gitos. El nu\u0301mero no puede tener ma\u0301s di\u0301gitos que la cadena dada. Escribe un programa que tome\u0301 como entrada una cadena de di\u0301gitos que termina en 1, 3, 7 o\u0301 9 y encuentra un nu\u0301mero con menor o\u0301 igual cantidad de di\u0301gitos, que al elevarlo al cubo, termine en la cadena dada.",
    "input": "Una cadena de taman\u0303o entre 1 y 10 di\u0301gitos decimales que termina en 1, 3, 7 o\u0301 9.",
    "output": "La salida consiste en un nu\u0301mero, que elevado al cubo, termine en la cadena de di\u0301gitos dada. El nu\u0301mero no debe tener ceros a la izquierda.",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 1762
  },
  {
    "title": "Fibonacci Modular",
    "url": "https://omegaup.com/arena/problem/modfib",
    "history": "La sucesion de Fibonacci se define de la siguiente manera: * F* < sub> 0< / sub> = 0* F* < sub> 1< / sub> = 1* F< sub> n< / sub> * = * F< sub> n< / sub> < sub> - 1< / sub> * + * F< sub> n< / sub> * < sub> - 2< / sub> para * n* > 1# ProblemaEscribe un programa que dados dos enteros * n* y * M* encuentre * F< sub> n< / sub> * * * mod* * * M*",
    "input": "Li\u0301nea 1: Los dos enteros * n* y * M* separados por un espacio( y en ese o\u0301rden) * * Ejemplo: * * 9 20",
    "output": "Li\u0301nea 1: Un solo entero representando * F< sub> n< / sub> * * * mod* * * M* * * Ejemplo: * * 14# Li\u0301mites* 0 \u2264 * n* \u2264 1000000000* 1 \u2264 * m* \u2264 200000",
    "note": "",
    "topics": [
      "implementation",
      "matrices",
      "number theory",
      "math"
    ],
    "id": 1527
  },
  {
    "title": "Cuenta \u00c1rboles",
    "url": "https://omegaup.com/arena/problem/carboles",
    "history": "Un a\u0301rbol binario, como su nombre lo dice, es un a\u0301rbol en el cual cada nodo tiene a lo ma\u0301s dos hijos, y por lo general se denotan como hijo derecho e hijo izquierdo. Es trivial darse cuenta que existe una gran cantidad de a\u0301rboles que se pueden formar con exactamente N nodos. Por ejemplo, con 3 nodos se pueden formar 5 a\u0301rboles binarios: ! [ ] ( arboles. jpeg) No\u0301tese que los a\u0301rboles iso\u0301meros ( iguales bajo rotaciones y reflexiones) se consideran distintos. # ProblemaDado N, determinar cua\u0301ntos a\u0301rboles binarios se pueden formar con N nodos.",
    "input": "Un u\u0301nico nu\u0301mero N.",
    "output": "El nu\u0301mero de a\u0301rboles que se pueden formar mod 1 000 000 ( 10^ 6) .",
    "note": "",
    "topics": [
      "dfs and similar",
      "combinatorics",
      "dp",
      "math"
    ],
    "id": 1430
  },
  {
    "title": "Fibonacci R\u00e1pido",
    "url": "https://omegaup.com/arena/problem/Fibonacci-Rapido",
    "history": "La secuencia de Fibonacci F se define comoF_ i = F_ i- 1 + F_ i- 2 para i > 1, conF_ 0 = 0, y F_ 1 = 1. Dado i, calcula F_ i 98765431.",
    "input": "Un entero, i.",
    "output": "F_ i 98765431.",
    "note": "",
    "topics": [
      "math",
      "number theory"
    ],
    "id": 906
  },
  {
    "title": "Contenedores",
    "url": "https://omegaup.com/arena/problem/Contenedores",
    "history": "# ContenedoresSe tienen N pelotas iguales y K contendores distintos. Escribe un programa que dados N y K calcule el nu\u0301mero de formas en que se pueden distribuir las N pelotas entre los K contenedores.",
    "input": "En la primera linea, los nu\u0301meros N y K separados por un espacio.",
    "output": "En la salida, el nu\u0301mero de formas en que se pueden distribuir las N pelotas entre los K contenedores. Imprime el resultado mo\u0301dulo 1000000009.",
    "note": "",
    "topics": [
      "math",
      "combinatorics"
    ],
    "id": 178
  },
  {
    "title": "Pulseras",
    "url": "https://omegaup.com/arena/problem/pulseras",
    "history": "Deseas averiguar cua\u0301ntas pulseras diferentes pueden crearse con la siguientes consideraciones: 1. Una pulsera es una secuencia de cuentas blancas o negras, con un inicio y un final ( los extremos que se atan) . 2. No puede haber dos cuentas negras juntas. Esto aplica tambie\u0301n para la inicial y la final, pues al atarla quedaran una a lado de la otra. 3. La longitud de la secuencia sera\u0301 3 \u2264 n \u2264 1 000 000Como el nu\u0301mero de pulseras puede ser muy grande, solo deseas averiguar su congruencia mo\u0301dulo 1 000 000 007 ( 10^ 9 + 7) .",
    "input": "La primera y u\u0301nica li\u0301nea tendra\u0301 un entero 5 \u2264 n \u2264 1 000 000 que indica el taman\u0303o de las pulseras.",
    "output": "Un u\u0301nico nu\u0301mero, la cantidad de diferentes pulseras que se pueden formar de longitud n mo\u0301dulo 1 000 000 007. # Ejemplos| | input3| | output4| | descriptionSi representamos con ` b` las cuentas blancas y con ` n` las negras, las pulseras seri\u0301an: bbbnbbbnbbbn| | input4| | output7| | descriptionLas pulseras seri\u0301an: bbbbnbbbbnbbbbnbbbbnnbnbbnbn| | end# Li\u0301mites* 3 \u2264 n \u2264 1 000 000",
    "note": "",
    "topics": [
      "math",
      "dp"
    ],
    "id": 160
  },
  {
    "title": "Resolviendo una recurrencia algo rara",
    "url": "https://omegaup.com/arena/problem/Resolviendo-una-recurrencia-algo",
    "history": "La siguiente recurrencia para n = b^ k con k siendo una potencia de 2, tiene una solucio\u0301n exacta de la forma log_ x( y) + z obtenida mediante la te\u0301cnica de sustitucio\u0301n repetida. - Si n= b entonces T( n) = c. - Si n> b entonces T( n) = T( \u221a( n) ) + d. Escribe un programa que, dados los valores de n, b, c, d, determine los valores de w, x, y, z que correspondan con el patro\u0301n obtenido por sustitucio\u0301n repetida.",
    "input": "Cuatro enteros n, b, c, d. Puedes suponer que 2 \u2264 n \u2264 5^ 16, 2 \u2264 b \u2264 5, 0 \u2264 c, d \u2264 5 y que n = b^ k con k siendo una potencia de 2.",
    "output": "Cuatro enteros w, x, y, z que provengan del patro\u0301n algebraico que se obtiene mediante sustitucio\u0301n repetida.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 14260
  },
  {
    "title": "Resolviendo una recurrencia (la venganza)",
    "url": "https://omegaup.com/arena/problem/Resolviendo-una-recurrencia-la-v",
    "history": "La siguiente recurrencia para n \u2264 c tiene una solucio\u0301n exacta de la forma + ( x - y) z obtenida mediante la te\u0301cnica de sustitucio\u0301n repetida. - Si n = c entonces T( n) = 1- Si n < c entonces T( n) = T( n+ 1) + b. Escribe un programa que, dados los valores de b, c y n, determine los valores de w, x, y, z que correspondan con el patro\u0301n obtenido por sustitucio\u0301n repetida.",
    "input": "Tres enteros b, c, n. Puedes suponer que 0 \u2264 b, c, n \u2264 1000 y que n \u2264 c.",
    "output": "Cuatro enteros w, x, y, z que provengan del patro\u0301n algebraico que se obtiene mediante sustitucio\u0301n repetida.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 13722
  },
  {
    "title": "Resolviendo una recurrencia (apocalipsis)",
    "url": "https://omegaup.com/arena/problem/Resolviendo-una-recurrencia-apoc",
    "history": "La siguiente recurrencia para n = b^ k tiene una solucio\u0301n exacta de la forma ( t^ w/ x^ \u03a3y) z donde \u03a3y = 1+ 2+ . . . + y, obtenida mediante la te\u0301cnica de sustitucio\u0301n repetida. - Si n= 1 entonces T( n) = c- Si n> 1 entonces T( n) = nT( n/ b) . Escribe un programa que, dados los valores de b, c y n, determine los valores de t, w, x, y, z que correspondan con el patro\u0301n obtenido por sustitucio\u0301n repetida.",
    "input": "Tres enteros b, c, n. Puedes suponer que 2 \u2264 b, c, n \u2264 1000 y que n = b^ k con k \u2265 0.",
    "output": "Cinco enteros t, w, x, y, z que provengan del patro\u0301n algebraico que se obtiene mediante sustitucio\u0301n repetida.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 13721
  },
  {
    "title": "Exponenciaci\u00f3n optimizada parte 2",
    "url": "https://omegaup.com/arena/problem/binex",
    "history": "Generalizar el problema de arriba para que calcule cualquier potencia de manera recursiva.",
    "input": "En la primera li\u0301nea un entero b: la base. ( 2 < = b < 5) En la segunda li\u0301nea, un entero e: el exponente al que se quiere elevar la base. NO se garantiza que e es una potencia de dos. ( 1 < = e < = 10^ 18)",
    "output": "El resultado de su funcio\u0301n en mo\u0301dulo 9973. | | input25| | output32| | end",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 12513
  },
  {
    "title": "Analizando quicksort",
    "url": "https://omegaup.com/arena/problem/Analizando-quicksort",
    "history": "Un algoritmo de ordenamiento muy conocido es * quicksort* ( ordenamient ra\u0301pido de Hoare) . Este algoritmo primero particiona los n elementos en dos grupos y luego ordena cada grupo recursivamente. Una recurrencia que resume el tiempo de ejecucio\u0301n de * quicksort* es: - Si n \u2264 1 entonces T( 0) = 0- Si n > 1 entonces T( n) = n + T( k) + T( n - k) para alguna k tal que 1 \u2264 k \u2264 n - 1. En la recurrencia anterior, el valor de k depende de lo que ocurra en la particio\u0301n. Por ejemplo, si k= 1 entonces la particio\u0301n esta\u0301 muy desbalanceada y la recurrencia es T( n) = n + T( 1) + T( n - 1) , mientras que si k = n/ 2 entonces la particio\u0301n esta\u0301 lo ma\u0301s balanceada posible y la recurrencia es T( n) = n + T( n/ 2) + T( n/ 2) . Escribe un programa que calcule el tiempo promedio esperado de * quicksort* , si todos los valores de k son igualmente posibles en cada nivel recursivo.",
    "input": "Un entero n. Puedes suponer que 0 \u2264 n \u2264 10.",
    "output": "Un real que sea el tiempo promedio de T( n) . Tu programa se considerara\u0301 correcto si el valor calculado es razonablemente cercano a la respuesta exacta.",
    "note": "",
    "topics": [
      "math",
      "divide and conquer"
    ],
    "id": 11493
  },
  {
    "title": "La recurrencia de un algoritmo h\u00edbrido",
    "url": "https://omegaup.com/arena/problem/La-recurrencia-de-un-algoritmo-h",
    "history": "Dos algoritmos de ordenamiento muy conocidos son * merge sort* ( ordenamient por mezcla) y * selection sort* ( ordenamiento por seleccio\u0301n) . Una recurrencia que resume nu\u0301mero de operaciones que realiza * merge sort* es: - Si n \u2264 1 entonces T_ m( 0) = 0- Si n > 1 entonces T_ m( n) = T_ m( \u230an/ 2\u230b) + T_ m( \u2308n/ 2\u2309) + n. Una recurrencia que resume nu\u0301mero de operaciones que realiza * selection sort* es: - Si n \u2264 1 entonces T_ s( 0) = 0- Si n > 1 entonces T_ s( n) = T_ s( n - 1) + n. Se desea crear un algoritmo recursivo hi\u0301brido, donde el primer nivel recursivo emplee la estrategia de * merge sort* , el segundo nivel recursivo emplee la estrategia de * selection sort* , y se continu\u0301en alternando las estrategias en los siguientes niveles. Determina la cantidad de operaciones que realizara\u0301 este algoritmo.",
    "input": "Un entero n. Puedes suponer que 0 \u2264 n \u2264 5000.",
    "output": "Un entero que sea la cantidad de operaciones.",
    "note": "",
    "topics": [
      "math",
      "divide and conquer"
    ],
    "id": 11320
  },
  {
    "title": "Resolviendo una recurrencia (reloaded)",
    "url": "https://omegaup.com/arena/problem/Resolviendo-una-recurrencia-relo",
    "history": "La siguiente recurrencia para n = 2k tiene una solucio\u0301n exacta de la forma \u2211_ i= 1^ t( u^ i) + x^ yz obtenida mediante la te\u0301cnica de sustitucio\u0301n repetida. - Si n = 0 entonces T( 0) = c- Si n \u2265 2 entonces T( n) = aT( n- 2) + a. Escribe un programa que, dados los valores de a, c y n, determine los valores de t, u, x, y, z que correspondan con el patro\u0301n obtenido por sustitucio\u0301n repetida.",
    "input": "Tres enteros a, c, n. Puedes suponer que 0 \u2264 a, c, n \u2264 1000 y que n = 2k con k \u2265 0.",
    "output": "Cinco enteros t, u, x, y, z.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 11219
  },
  {
    "title": "Resolviendo una recurrencia (la revancha)",
    "url": "https://omegaup.com/arena/problem/Resolviendo-una-recurrencia-la-r",
    "history": "La siguiente recurrencia para n = 2^ k tiene una solucio\u0301n exacta de la forma wx\u2211_ i= 0^ y( 1/ 2^ i) + z obtenida mediante la te\u0301cnica de sustitucio\u0301n repetida. - Si n= 1 entonces T( 1) = c- Si n> 1 entonces T( n) = T( n/ 2) + an. Escribe un programa que, dados los valores de a, c y n, determine los valores de w, x, y, z que correspondan con el patro\u0301n obtenido por sustitucio\u0301n repetida.",
    "input": "Tres enteros a, c, n. Puedes suponer que 0 \u2264 a, c, n \u2264 1000 y que n = 2^ k con k \u2265 0.",
    "output": "Cuatro enteros w, x, y, z. En caso de existir ma\u0301s de una respuesta, puedes imprimir cualquiera de ellas.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 11206
  },
  {
    "title": "Resolviendo una recurrencia",
    "url": "https://omegaup.com/arena/problem/Resolviendo-una-recurrencia",
    "history": "La siguiente recurrencia para n = 2^ k tiene una solucio\u0301n exacta de la forma \u2211_ i= 0^ t( u^ iw) + x^ yz obtenida mediante la te\u0301cnica de sustitucio\u0301n repetida. - Si n= 1 entonces T( 1) = c- Si n> 1 entonces T( n) = aT( n/ 2) + b. Escribe un programa que, dados los valores de a, b, c y n, determine los valores de t, u, w, x, y, z que correspondan con el patro\u0301n obtenido por sustitucio\u0301n repetida.",
    "input": "Cuatro enteros a, b, c, n. Puedes suponer que 0 \u2264 a, b, c, n \u2264 1000 y que n = 2^ k con k \u2265 0.",
    "output": "Seis enteros t, u, w, x, y, z.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 11205
  },
  {
    "title": "Coeficiente binomial recursivo",
    "url": "https://omegaup.com/arena/problem/Coeficiente-binomial-recursivo",
    "history": "El coeficiente binomial NK puede definirse de forma recursiva como NK = N - 1K + N - 1K - 1 y N0 = NN = 1. Escribe un programa que calcule el valor de NK y cua\u0301ntas llamadas a funcio\u0301n hace la implementacio\u0301n recursiva ( incluyendo la llamada original) .",
    "input": "Dos enteros N y K. Puedes suponer que 0 \u2264 K \u2264 N \u2264 30.",
    "output": "Dos enteros que sean el valor de NK y el nu\u0301mero de llamadas a funcio\u0301n que realiza la implementacio\u0301n recursiva, respectivamente.",
    "note": "",
    "topics": [
      "math",
      "dfs and similar",
      "dp"
    ],
    "id": 8546
  },
  {
    "title": "Analizando merge-sort",
    "url": "https://omegaup.com/arena/problem/Analizando-merge-sort",
    "history": "El algoritmo de ordenamiento * merge sort* consiste en ordenar recursivamente las dos mitades de la secuencia desordenada para luego mezclar los elementos de las mitades ya ordenadas. Se sabe que * merge sort* siempre realiza \u0398( N log_ 2 N) comparaciones, pero el nu\u0301mero exacto depende de lo que ocurra durante las mezclas. Dadas dos subsecuencias ordenadas con N/ 2 elementos cada una y N \u2265 2, el mejor caso de la mezcla ocurre cuando una subsecuencia completa va antes que la otra y se requieren so\u0301lo N/ 2 comparaciones. El peor caso de la mezcla ocurre cuando los elementos de ambas subsecuencias deben intercalarse elemento a elemento y se requieren N - 1 comparaciones. Escribe un programa que calcule el nu\u0301mero de comparaciones que realizara\u0301 * merge sort* en el mejor y peor caso.",
    "input": "Un entero N. Puedes suponer que N es potencia de 2 y N \u2264 2^ 20.",
    "output": "Dos enteros que sean el nu\u0301mero de comparaciones que realiza * merge sort* en el mejor y peor caso respectivamente.",
    "note": "",
    "topics": [
      "dp",
      "math",
      "sortings",
      "dfs and similar",
      "divide and conquer"
    ],
    "id": 6498
  },
  {
    "title": "1.Sumar-2-numeros_Di\u00e1gnostico",
    "url": "https://omegaup.com/arena/problem/1Sumar-2-numeros_Diagnostico",
    "history": "Elaborar un programa que lea dos nu\u0301mero enteros, y devuelva la suma de las entradas. ! [ La clave es sumar] ( ejemplo. png)",
    "input": "x_ 1x_ 2",
    "output": "y = x_ 1 + x_ 2",
    "note": "",
    "topics": [
      "math",
      "combinatorics"
    ],
    "id": 15092
  },
  {
    "title": "Invertir un n\u00famero",
    "url": "https://omegaup.com/arena/problem/Invertir-numero",
    "history": "Elabora un programa que permita invertir un nu\u0301mero de T di\u0301gitos, con T> = 2| | input5689| | output9865| | end",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "math",
      "number theory"
    ],
    "id": 13175
  },
  {
    "title": "Contando toros",
    "url": "https://omegaup.com/arena/problem/Contando-toros",
    "history": "Felipe ya harto de no lograr las cosas decide dedicarse a la vida sencilla del campo. Asi\u0301 que Felipe se va enfoncar en el cuidado de las vacas y toros. Para realizar esta tarea de forma rapida felipe decide comprar una granja ya trabajada ( una que ya tiene toros y vacas cuidadas por un granjero) . Al llegar a la granja felipe cuenta un total de X vacas. Cuando llega con el granjero encargado le pregunta cuantos toros hay a lo cua\u0301l granjero responde que no sabe exacatamente cuantos hay; pero sabe que si hay n toros, entonces por cada toro existen n vacas. Por ejemplo, si hay 3 toros por cada toro que hay, existen 3 vacas. Ayuda a felipe a saber cuantos toros hay. # ProblemaDado el nu\u0301mero de vacas existentes X, decir cuantos toros hay.",
    "input": "Se te da un u\u0301nico nu\u0301mero X que representa la cantidad de vacas.",
    "output": "Un unico nu\u0301mero n que representa la cantidad de toros.",
    "note": "",
    "topics": [
      "binary search",
      "math"
    ],
    "id": 11088
  },
  {
    "title": "Suma m\u00ednima de d\u00edgitos",
    "url": "https://omegaup.com/arena/problem/Suma-minima-de-digitos",
    "history": "# HistoriaFelipe estaba jugando muy tranquilamente, cuando de repente llega Santy con un juego super divertido el cua\u0301l le encantaba. El juego consisti\u0301a en que cada quien tiene n bloques con un nu\u0301mero pintado ( ambos teni\u0301an los mismo bloquees; es decir, uno teni\u0301a una copia del otro) . Luego, teni\u0301as que formar 2 nu\u0301meros uniendo dichos bloques, quien dijera la suma ma\u0301s chica de ambos nu\u0301mero primero era el ganador. Como Felipe no le gusta perder decidio\u0301 hacer un algoritmo que fuera capaz de resolver el problema de forma ra\u0301pida. # ProblemaSe te da una lista de n nu\u0301meros, donde cada nu\u0301mero es solo un digito ( nu\u0301meros del 0 al 9) . Se quieren armar 2 nu\u0301meros \" pegando\" los digitos dados, talque la suma de ambos nu\u0301meros sea mi\u0301nima y se usen todos los digitos dados exactamente una vez. A \" pegar\" nos referimos que si tenemos los digitos 1, 3, 7 podemos formar el nu\u0301mero 137 juntando los digitos, igual se puede formar 317 y 713, entre otros. ( Son validos los nu\u0301meros que empiezan con 0 como 045)",
    "input": "Se te da el nu\u0301mero n que son la cantidad de digitos que tienes. Luego se te dan los n digitos.",
    "output": "Un u\u0301nico nu\u0301mero que es la suma de los dos nu\u0301meros formados.",
    "note": "",
    "topics": [
      "sortings",
      "math"
    ],
    "id": 10589
  },
  {
    "title": "Resistencia",
    "url": "https://omegaup.com/arena/problem/OMI-2019-Resistencia",
    "history": "Antes de desaparecer a la mitad de la poblacio\u0301n, Thanos practico\u0301 su chasquido en muchos simuladores, unos ma\u0301s inusuales que otros. Thanos probo\u0301 uno cuyo fin es reducir cualquier nu\u0301mero entero a un nu\u0301mero de un u\u0301nico di\u0301gito. El simulador funciona de la siguiente manera: Dado el nu\u0301mero x, cada que Thanos chasquea los dedos, x se reduce al nu\u0301mero que se obtiene al multiplicar todos sus di\u0301gitos entre si\u0301. Se le llama _ resistencia_ de x al nu\u0301mero de veces que Thanos debe chasquear los dedos para reducir x a un nu\u0301mero de un solo di\u0301gito. Por ejemplo, el nu\u0301mero 333 tiene resistencia 3: Chasquido 1. 333: 3 \u00d7 3 \u00d7 3 = 27Chasquido 2. 27: 2 \u00d7 7 = 14Chasquido 3. 14: 1 \u00d7 4 = 4 ( Despue\u0301s del tercer chasquido se llega a un nu\u0301mero de 1 digito) # ProblemaAyuda a Thanos a encontrar el nu\u0301mero con mayor resistencia. En caso de encontrar ma\u0301s de un nu\u0301mero con la misma resistencia, debes elegir el menor. # Evaluacio\u0301nEste problema es de _ so\u0301lo salida_ , no es necesario que envi\u0301es co\u0301digo. Debes enviar so\u0301lo un nu\u0301mero, el nu\u0301mero que tenga la resistencia ma\u0301s grande que puedas encontrar. Entre ma\u0301s grande sea la resistencia del nu\u0301mero que envi\u0301es, ma\u0301s puntos obtendra\u0301s. En caso de que encuentres varios nu\u0301meros con la misma resistencia, el menor de ellos te dara\u0301 ma\u0301s puntos. # Li\u0301mites* El numero X debe tener a lo ma\u0301s 1000 di\u0301gitos.",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 8437
  },
  {
    "title": "Sera... Duelo a muerte con Clash",
    "url": "https://omegaup.com/arena/problem/Clash_en_la_13",
    "history": "Despues de dar semanas de curso en el club de algoritmia Angel y Jose\u0301 Juan decidiero\u0301n tomarse un descanso de 3 minutos, jugando una partida de * Clash Royale* . Todo estaba listo para dar inicio a la batalla pero un segundo antes de iniciar la partida llego Kevin a interrumpir. . . Como Kevin observo que Angel tiene un mazo muy * Chacalero* ha decidido que le ganara por ser tan sucio ( todos sabemos que Kevin en secreto es un dios del Clash Royale) , por esta razon, Kevin no solo le ha quitado su celular a Jose\u0301 Juan para retar a Angel, sino que ha decidido apostar su casa y todas sus pertenecias con Angel, por que esta seguro que lo humillara\u0301, por desgracia Angel piensa que Kevin no sabe jugar y acepta el trato. Tu como alma caritativa y representante de la paz que eres, abogaras por que Angel no pierda su casa, ayudandole a Angel en todo lo que el te pida para que al menos empate a Kevin. Angel sabe que solo hay un mazo con el cual, el sera capaz de hacerle frente a Kevin, tu con tus poderes prrones de Dr. Strange, viajaras al futuro para ver todos los resultados posibles y asi poder decirle a Angel que estaba equivocado, en todos pierde : c ( * * spoiler* * ) , pero como dato curioso le quieres decirle a cuantas realidades diferentes viajaste. ! [ Angel en cualquiera de los posibles futuros] [ 1] # NotaUn mazo de clash royale esta formado por 8 cartas diferentes, y desde luego no importa como las acomodes, siguen siendo las mismas con las que jugaras.",
    "input": "Un numero n de cartas diferentes de las cuales Angel dispone para formar su mazo perdedor.",
    "output": "Un numero X de realidades distintas a las que viajaste para ver a Angel perder. Si el numero n de cartas de las cuales Angel dispone es menor a 8 entonces Angel no podra formar ningun mazo, por lo cual tu no habras podido viajas a ninguna realidad, por lo que imprimiras \" 0\" , sin comillas.",
    "note": "",
    "topics": [
      "math",
      "number theory",
      "combinatorics",
      "brute force"
    ],
    "id": 8215
  },
  {
    "title": "Buddy y el pollo.",
    "url": "https://omegaup.com/arena/problem/Buddy-y-el-pollo",
    "history": "En un di\u0301a normal, Buddy el perro iba caminando por la calle, pensando en lo rico que seri\u0301a comerse un pollo. Al tratar de comunicarle a su duen\u0303a su necesidad de comer pollo, se dio cuenta de que no teni\u0301a suficientes croquetas para decirle este mensaje ( si\u0301, Buddy y su duen\u0303a se entienden con croquetas) . Triste pero no derrotado, Buddy se decidio\u0301 salir de casa en busca de delicioso pollo frito, rostizado o en salsa verde. Al cabo de unos di\u0301as, un misterioso pollo de taman\u0303o n aparecio\u0301 en su camino, este fue el mejor di\u0301a de su vida. Como Buddy es un perro muy compartido, considero\u0301 repartirlo entre sus amigos perrunos, y analizo\u0301 de que\u0301 manera podi\u0301a repartir el pollo en partes iguales sin que sobrara ningu\u0301n pellejito, hueso o carne. Ayuda a Buddy da\u0301ndole todas las opciones en las que puede repartir su pollo.",
    "input": "La entrada consiste de una sola li\u0301nea con n: el taman\u0303o del pollo.",
    "output": "Debera\u0301s imprimir en una sola li\u0301nea una lista con las opciones en las que Buddy puede repartir su pollo en partes iguales. Como Buddy quiere evitar la fatiga, debera\u0301s imprimir esta lista en orden ascendente. Si dicha lista no existe entonces debera\u0301s dejar una li\u0301nea en blanco.",
    "note": "",
    "topics": [
      "sortings",
      "math",
      "number theory"
    ],
    "id": 7410
  },
  {
    "title": "Transiciones en cadenas binarias",
    "url": "https://omegaup.com/arena/problem/Transiciones-en-cadenas-binarias",
    "history": "El nu\u0301mero de transiciones de una cadena binaria b_ 1, b_ 2, . . . , b_ N es el nu\u0301mero de parejas b_ i, b_ i + 1 tales que b_ i = \u0338 b_ i + 1. Por ejemplo, en la cadena 001011 existen tres transiciones: la cadena comienza con 0 y luego cambia a 1, luego cambia otra vez a 0 y luego cambia otra vez a 1. Escribe un programa que sume el nu\u0301mero de transiciones que ocurren en las 2^ N cadenas binarias de longitud N e imprima el valor de dicha suma.",
    "input": "Un entero N. Puedes suponer que 0 \u2264 N \u2264 50.",
    "output": "Un entero que es la suma del nu\u0301mero de transiciones que ocurren en las 2^ N cadenas binarias de longitud N.",
    "note": "",
    "topics": [
      "implementation",
      "strings",
      "divide and conquer",
      "math",
      "dfs and similar"
    ],
    "id": 6487
  },
  {
    "title": "Fibonacci's grandes",
    "url": "https://omegaup.com/arena/problem/Fibonaccis-grandes",
    "history": "Este problema consiste en calcular los nu\u0301meros de la serie de Fibonacci, considerando: f( 0) = 0f( 1) = 1f( n) = f( n- 1) + f( n- 2)",
    "input": "Recibira\u0301s mu\u0301ltiples valores enteros positivos N ( 0 \u2264 N \u2264 3000) .",
    "output": "Para cada valor de N, mostrar f( N) . Cada valor generado debe aparecer en una li\u0301nea.",
    "note": "",
    "topics": [
      "strings",
      "math"
    ],
    "id": 6231
  },
  {
    "title": "Que gane el mejor exponencial",
    "url": "https://omegaup.com/arena/problem/El-mejor-exponencial",
    "history": "Roberto y sus amigos esta\u0301n jugando un juego muy especial de cartas. El juego consiste en que cada carta tiene un valor n y ese valor significa el numero de veces que n se multiplicara por si mismo - 1 ves, esto quiere decir que si tengo un 2 se va a multiplicar 1 vez por si mismo 2 * 2. Pero al momento de pedir a cada quien su carta ganadora tiene que decir con cuantos puntos gana, si dice el numero incorrecto pierde. Algunos haci\u0301an trampa y deci\u0301an un nu\u0301mero alto y como Roberto no sabia si era verdad lo dejaba pasar, asi\u0301 que pedro decidio\u0301 hacer un programa que diga cual es el valor ganador.",
    "input": "En la primera linea recibira\u0301s un valor k que es igual al numero de personas jugandoEn la segunda linea recibira\u0301s k nu\u0301meros los cuales significaran el valor de la mejor carta de cada quien ( algunos pueden tener el mismo valor)",
    "output": "Debera\u0301s sacar con cuantos puntos gano la mejor carta ( pueden haber mas de un ganador pero basta con solo arrojar los puntos de 1)",
    "note": "",
    "topics": [
      "games",
      "constructive algorithms",
      "math",
      "implementation"
    ],
    "id": 4931
  },
  {
    "title": "Tabla de factoriales",
    "url": "https://omegaup.com/arena/problem/Tabla-de-factoriales",
    "history": "El factorial de un nu\u0301mero entero positivo n se denota n! y consiste en la multiplicacio\u0301n de todos los enteros sucesivos desde 1 hasta n. Matema\u0301ticamente se define asi\u0301: n! = \u220f_ i= 1^ ni= 1\u00d7 2\u00d7 3 \u00d7\u22ef\u00d7 n Como caso especial, el factorial de cero es uno, es decir, 0! = 1. Se requiere que escribas un programa que calcule e imprima todos los factoriales desde cero hasta cien.",
    "input": "Tu programa no recibe entrada alguna.",
    "output": "Para cada valor de i del 0 al 100, se debe imprimir en la salida esta\u0301ndar una li\u0301nea de texto que tenga: - El valor de i- Un signo de admiracio\u0301n ( ! ) - Un espacio en blanco- Un signo de igual ( = ) - Un espacio en blanco- El valor del factorial de i",
    "note": "",
    "topics": [
      "implementation",
      "math",
      "strings",
      "number theory"
    ],
    "id": 4347
  },
  {
    "title": "N\u00fameros Gigantes",
    "url": "https://omegaup.com/arena/problem/Numeros_Gigantes",
    "history": "Un cienti\u0301fico ha encontrado un me\u0301todo para generar plasma pero en el proceso tiene que hacer multiplicaciones de nu\u0301meros grandes los cuales no pueden ser almacenados en un int , double etc. Asi\u0301 que tu labor es ayudar al cienti\u0301fico con un programa que logre hacer esas multiplicaciones.",
    "input": "Dos nu\u0301meros A y B, uno en cada li\u0301nea",
    "output": "El resultado de la operacio\u0301n A * B",
    "note": "",
    "topics": [
      "implementation",
      "strings",
      "math"
    ],
    "id": 2603
  },
  {
    "title": "Peque\u00f1o Factorial",
    "url": "https://omegaup.com/arena/problem/PFOM",
    "history": "# Pequen\u0303o FactorialA Marco le han encargado una tarea algo tediosa, e\u0301l tiene que calcular el factorial de un conjunto de nu\u0301meros C. \u00bf Puedes ayudar a Marco con su tarea? .",
    "input": "Un entero que representa el valor de C, las siguientes C li\u0301neas contendra\u0301n un entero D que repesenta el factorial a cualcular.",
    "output": "Para cada caso debera\u0301s imprimir el factorial del nu\u0301mero en cuestio\u0301n.",
    "note": "",
    "topics": [
      "math",
      "implementation",
      "number theory"
    ],
    "id": 1154
  },
  {
    "title": "El Vendedor de NFTs",
    "url": "https://omegaup.com/arena/problem/El-Vendedor-de-NFTs",
    "history": "Tras su reciente viaje a Colombia tu compa el Germa\u0301n anda corto de efectivo, tu\u0301 como su amigo decides ayudarle a conseguir dinero y para ello se te ocurre que puedes emprender un negocio. Recordando el reciente auge de los tokens no fungibles ( NFTs, por sus siglas en ingle\u0301s) piensas que puedes convertirte en un vendedor de NFTs para conseguir el dinero, pero para ello primero necesitas crearlos y dado que no eres tan buen pintor, pero si\u0301 un gran programador, decides que lo mejor sera\u0301 automatizar el proceso de creacio\u0301n construyendo un robot pintor. Te gustari\u0301a que tu robot funcionara de la siguiente manera: - Dado un lienzo con una red cuadrada de puntos de F filas y C columnas, el robot comenzara\u0301 a trazar sobre un punto y sin dejar de pintar continuara\u0301 su recorrido hasta conectar todos los puntos, esto haciendo movimientos estrictamente verticales y horizontales que vayan de un punto a otro y sin pasar dos veces por un mismo punto. ! [ Figura1] ( figura1. png) * Posibles NFT creado sobre un lienzo con una red de 6 filas y 6 columnas. * Como eres un joven muy precavido, antes de comenzar a desarrollar el robot quieres saber si los ingresos que obtendra\u0301s sera\u0301n mayores que tu inversio\u0301n, por lo que te preguntas si tu robot podra\u0301 crear suficientes NFTs distintos, dadas las dimensiones de la red de puntos, como para que el negocio se vuelva rentable. # ProblemaEscribe un programa que dadas las dimensiones de la red cuadrada de puntos plasmada sobre tus lienzos determine cua\u0301ntos NFTs distintos seri\u0301a capaz de crear tu robot si lo construyeras.",
    "input": "- En la primera li\u0301nea los nu\u0301meros F y C. La cantidad de filas y columnas de la red.",
    "output": "- Una li\u0301nea con un nu\u0301mero que represente la cantidad de NFTs distintos que podri\u0301a crear tu robot.",
    "note": "",
    "topics": [
      "brute force",
      "math",
      "dfs and similar",
      "dp"
    ],
    "id": 15629
  },
  {
    "title": "El entero solitario",
    "url": "https://omegaup.com/arena/problem/El-entero-solitario",
    "history": "Se tiene una coleccio\u0301n de nu\u0301meros enteros cuyos valores oscilan entre 0 y 1000. Todos los nu\u0301meros cuentan con un par dentro de la coleccio\u0301n, excepto uno de ellos. \u00bfPuedes identificar al entero solitario?",
    "input": "Se proporcionara\u0301 una cantidad desconocida de nu\u0301meros enteros; cada uno en una li\u0301nea independiente.",
    "output": "El entero solitario.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 15509
  },
  {
    "title": "Sleeping Baker",
    "url": "https://omegaup.com/arena/problem/Sleeping-Baker",
    "history": "# DescriptionMost cats love to sleep in well defined spots and Baker is not the exception, he loves to sleep in rectangular shape places. His owner decided to create for him a rectangular shape in her room. To do this, she will tie a piece of rope to different objects she has in the room to create rectangles with the rope. In the following figure, the black sections are places in the room where the owner has an object where she can tie the piece of rope to create the rectangles. The red lines show possible rectangles she can create. ! [ Valid Configurations] ( baker. jpg) Help Baker\u2019s owner to discover how many different rectangles she can make for her beloved cat.",
    "input": "There are multiple test cases. Each test case starts with a line with two integers separated by aspace n and m describing the size of the room. The next n lines contain m characters eachwith the value 1 or 0, where 1 means that there is an object in that position were the rope can be tied of. - 1 \u2264 n, m \u2264 2500",
    "output": "For each test case print \u201ccase y: d\u201d ( without the quotes) where y is the number of test case starting with 1 and d is the number of different rectangles Baker\u2019s owner can make for him to sleep. # Example| | input5 501001011001000001101000002 211115 51111111111111111111111111| | outputcase 1: 2case 2: 1case 3: 100| | end",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 14799
  },
  {
    "title": "Agrupamiento de bits",
    "url": "https://omegaup.com/arena/problem/Agrupamiento-de-bits",
    "history": "Un di\u0301a descubriste el maravilloso mundo de los bits y despue\u0301s de practicar lo que aprendiste, te topaste con un problema que hablaba sobre operaciones entre mu\u0301ltiples grupos de bits. Dicho problema era el siguiente: A partir de un nu\u0301mero n, recibira\u0301s una serie de n operaciones. Las operaciones que puedes recibir son: - < kbd> + < / kbd> - Recibira\u0301s un nu\u0301mero x el cual debera\u0301s * * an\u0303adir* * al grupo de nu\u0301meros denominado como B. - < kbd> - < / kbd> - Recibira\u0301s un cara\u0301cter k, si dicho cara\u0301cter es * * ` B` * * debera\u0301s * * eliminar* * el ultimo nu\u0301mero del grupo. Si el cara\u0301cter es * * ` F` * * debera\u0301s eliminar el primer nu\u0301mero del grupo. - < kbd> @ < / kbd> - Recibira\u0301s un nu\u0301mero m_ i, y a continuacio\u0301n debera\u0301s * * imprimir* * el valor del nu\u0301mero en la posicio\u0301n m_ i del grupo. - < kbd> ? < / kbd> - Recibira\u0301s dos nu\u0301meros m_ i, b_ i; a continuacio\u0301n debera\u0301s * * mostrar en pantalla* * el valor del bit b_ i del nu\u0301mero en la posicio\u0301n m_ i del grupo. - < kbd> A< / kbd> - Recibira\u0301s dos nu\u0301meros m_ i, b_ i; a continuacio\u0301n debera\u0301s * * apagar* * el bit b_ i del nu\u0301mero en la posicio\u0301n m_ i del grupo. - < kbd> B< / kbd> - Recibira\u0301s dos nu\u0301meros m_ i, b_ i; a continuacio\u0301n debera\u0301s * * encender* * el bit b_ i del nu\u0301mero en la posicio\u0301n m_ i del grupo. - < kbd> C< / kbd> - Recibira\u0301s dos nu\u0301meros m_ i, b_ i; a continuacio\u0301n debera\u0301s * * alternar* * el bit b_ i del nu\u0301mero en la posicio\u0301n m_ i del grupo ( si el bit es 1, este pasa a ser 0 y viceversa) . \u2014\u2014\u2014-",
    "input": "En la primera linea, un nu\u0301mero entero n ( 1 \u2a7d n \u2a7d 10 ^ 8) - la cantidad de operaciones a realizar. En las siguientes n- 1 lineas, las operaciones que se realizaran. \u2014\u2014\u2014-",
    "output": "Para cada instruccio\u0301n < kbd> @ < / kbd> o < kbd> ? < / kbd> debera\u0301s imprimir el valor correspondiente seguido de un salto de linea. \u2014\u2014\u2014-",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 14681
  },
  {
    "title": "M\u00e1ximo Xor",
    "url": "https://omegaup.com/arena/problem/maximo-xor-cf",
    "history": "Se te dan dos enteros l \u2264 r. Tu tarea es hallar la siguiente expresio\u0301n: max_ l \u2264 a \u2264 b \u2264 r a \u2295 b Donde \u2295 es la funcio\u0301n Bitwise XOR.",
    "input": "La primera linea de entrada contiene dos enteros l y r, los li\u0301mites para hallar la expresio\u0301n.",
    "output": "Imprima un entero, el ma\u0301ximo Bitwise XOR de dos enteros dentro del rango [ l, r] .",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 13658
  },
  {
    "title": "Decimal a BCD",
    "url": "https://omegaup.com/arena/problem/Decimal-a-BCD",
    "history": "En el codigo de Decimal codificado en binario ( BCD) , es convertir cada digito del numero decimal en binario de 4 bits. Por ejemplo, el nu\u0301mero 123 es 000100100011 en BCD. Haz un programa que lea un numero entero y lo convierta en BCD.",
    "input": "Un numero entero positivo",
    "output": "El numero convertido en BCD",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 13474
  },
  {
    "title": "De complemento a dos a Decimal",
    "url": "https://omegaup.com/arena/problem/De-complemento-a-dos-a-Decimal",
    "history": "Gabriela por fin se titulo de licenciatura, sin embargo ha sido atrapada en un calabozo electro\u0301nico de la MOCA. Para salir de el debe descifrar una serie de numeros que se encuentran en forma de complemento a dos. Cada nu\u0301mero es una secuencia de 31 bits en forma de complemento a dos, si el numero empieza con 0 es un nu\u0301mero binario normal, pero si el nu\u0301mero empieza con 1, se trata de un nu\u0301mero entero negativo en formato de complemento a dos. Por ejemplo, el nu\u0301mero 1111111111111111111111111111111 seri\u0301a - 1, dado que primero se invierten los valores de la bits: 0000000000000000000000000000000, luego se calcula el valor decimal 0, suma 1 y por u\u0301ltimo se multiplica por - 1 para llegar al valor decimal: - 1. Ayuda a Grabiela a salir del calabozo.",
    "input": "Una cadena de 31 bits",
    "output": "El nu\u0301mero en decimal",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 13442
  },
  {
    "title": "Maquina Dispensadora",
    "url": "https://omegaup.com/arena/problem/Maquina-Dispensadora",
    "history": "La empresa Bimbo te ha contratado para crear controladores \" drivers\" para sistemas embebidos de las maquinas expendedoras de sodas y productos de venta, tu eres el ingeniero encargado de programar el sistema embebido de dispensado que se encarga de empujar los productos para que salgan cuando el cliente ingresa el dinero en la maquina e ingresa el co\u0301digo de producto. El ingeniero que programo el sistema de teclado \" el dispositivo que detecta el dinero y donde escribe el co\u0301digo del producto\" ya termino de programarlo y este sistema te va a enviar un numero decimal que es potencia de 2, ya que el decidio\u0301 que esta era una manera fa\u0301cil y eficiente para implementar en su sistema. El problema a resolver es que en funcio\u0301n del numero que te mande ese sistema debes determinar cual producto es al que se refiere ese numero y asi\u0301 saber cual producto debe liberar tu sistema \" cual producto arroja la maquina\" . EL protocolo de Dispensado es el siguiente: Co\u0301digo Posicio\u0301n2 = = = = = > 1 \u2014\u2014\u2014\u2014\u2014\u2014 2^ 1= 24 = = = = = > 2 \u2014\u2014\u2014\u2014\u2014\u2014 2^ 2= 48 = = = = = > 3 \u2014\u2014\u2014\u2014\u2014\u2014 2^ 3= 816 = = = = = > 4 \u2014\u2014\u2014\u2014\u2014\u2014 2^ 4= 1632 = = = = = > 5 \u2014\u2014\u2014\u2014\u2014\u2014 2^ 5= 3264 = = = = = > 6 \u2014\u2014\u2014\u2014\u2014\u2014 2^ 6= 64128 = = = = = > 7 \u2014\u2014\u2014\u2014\u2014\u2014 2^ 7= 128asi\u0301 sucesivamente . . . . * * Explicacio\u0301n: * * Como podemos ver el co\u0301digo de entrada es el resultado de elevar 2 a la Posicio\u0301n. Entonces dado el co\u0301digo debemos encontrar un numero tal que 2 elevado a la N sea igual al co\u0301digo. Dicho numero N es el resultado que debera\u0301s imprimir y ese numero indica la Posicio\u0301n en la cual se activa el resorte para liberar el producto.",
    "input": "Un numero decimal NO negativo que es potencia de 2. \" Co\u0301digo de Entrada\"",
    "output": "Un numero decimal indicando la posicio\u0301n de la maquina \" Posicio\u0301n\" . En caso de no encontrar el valor imprimir \" No existe\"",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 12667
  },
  {
    "title": "Clave ",
    "url": "https://omegaup.com/arena/problem/Clave-",
    "history": "Tu envi\u0301o debe implementar este procedimiento. Este procedimiento debe usar la funcion del evaluador ` sumaRangoPot2( ) ` paradeterminar la suma de ciertos rangos cumpliendo las condiciones descritas de la funcion. # # # Para\u0301metros* ` a` : El inicio el rango. * ` b` : El final del rango. * Regresa: La suma de ` a` hasta ` b` . | | inputsumaRango( 4, 8) | | output- | | descriptionSe llama a la funcion ` sumaRango( ) ; ` en el parametro de 4 a 8. | | inputsumaRamgoPot2( 4, 7) | | output- | | descriptionSe llama a la suma de los elentos del rango [ 4, 7] . | | inputsumaRangoPot2( 8, 8) | | output- | | descriptionSe llama a la suma de los elentos del rango [ 8, 8] . | | end# ConsideracionesTu puntaje estara\u0301 dado por 2^ n/ r - 1 , en donde n= mi\u0301nimo numero de llamadas necesarias, r= llamadas realizadas por el usuario de la funcio\u0301n ` sumaRamgoPot2( ) ` . # Li\u0301mites- 1 \u2264 n \u2264 2^ 20- Se cumple que a + 2 \u00b7 ( ( b - a) + 1) \u2264 taman\u0303o del arreglo n. # Experimentacio\u0301nlibinteractive: download",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 11974
  },
  {
    "title": "Xornacci",
    "url": "https://omegaup.com/arena/problem/Xornacci-cpp",
    "history": "# DescripcionHackerman recien aprendio los numeros Fibonacci y ahora esta estudiando diferentes algoritmos para encontrarlos. Despue\u0301s de aburrirse de leerlos, llego\u0301 con su propio nuevo tipo de nu\u0301meros que llamo\u0301 nu\u0301meros XORinacci . Los definio\u0301 de la siguiente manera: * F( 0 ) = a* F( 1 ) = b* F( n ) = F( n - 1 ) \u2295 F( n - 2 ) donde \u2295 denota XOR bit a bittu tarea es simple ayudar a hackerman respondiendo a Xornacci de n",
    "input": "En la primera linea recibiras un numero entero T ( 1 \u2264 T \u2264 10^ 5 ) en cada una de las T lineas recibes 3 enteros a, b y n ( 0 \u2264 a , b , n \u2264 10^ 9)",
    "output": "Imprime el resultado de F( n) | | input33 4 24 5 015 30 7| | output7430| | end",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 11549
  },
  {
    "title": "Y^3 + X^5 = N^7",
    "url": "https://omegaup.com/arena/problem/Y3--X5--N7",
    "history": "# HistoriaUn dia, Sebas estaba leyendo un Tzaloa de la OMM, y se encontro un problema muy dificil: \" Dado un entero N, determina si se cumple la igualdad Y^ 3 + X^ 5 = N^ 7 para algun X, Y entero. \" , cuya solucion no encontro. Tu como buen programador que eres, escribe un codigo que resuelva dicho problema.",
    "input": "Un entero N.",
    "output": "Imprime 1 o - 1 si existen o no dichos enteros respectivamente.",
    "note": "",
    "topics": [
      "meet-in-the-middle",
      "constructive algorithms",
      "combinatorics",
      "graph matchings",
      "dfs and similar",
      "flows",
      "number theory",
      "greedy",
      "trees",
      "implementation",
      "binary search",
      "data structures",
      "shortest paths",
      "geometry",
      "strings",
      "graphs",
      "math",
      "games",
      "string suffix structures",
      "dp",
      "matrices",
      "brute force",
      "sortings"
    ],
    "id": 9724
  },
  {
    "title": "Sumita cuadrada",
    "url": "https://omegaup.com/arena/problem/Sumita-cuadrada",
    "history": "Sebas esta\u0301 en un entrenamiento de matematicas, y le presentaron un problema: \" Demuestra que para toda N existe una suma de N nu\u0301meros tal que su suma sea un cuadrado perfecto. \" , Sebas esta muy ocupado para resolver ese problema, y tu\u0301 como buen programador que eres, te ha pedido que demuestres el problema con \" casitos\" .",
    "input": "Un entero N",
    "output": "Los N nu\u0301meros distintos entre si\u0301 separados por un espacio y ordenados en orden creciente tal que su suma sea un cuadrado perfecto",
    "note": "",
    "topics": [
      "brute force",
      "sortings",
      "matrices",
      "geometry",
      "implementation",
      "math",
      "string suffix structures",
      "greedy",
      "games",
      "graph matchings",
      "combinatorics",
      "dfs and similar",
      "graphs",
      "number theory",
      "shortest paths",
      "constructive algorithms",
      "dp",
      "flows",
      "meet-in-the-middle",
      "binary search",
      "data structures",
      "trees",
      "strings"
    ],
    "id": 9723
  },
  {
    "title": "Magical Bits",
    "url": "https://omegaup.com/arena/problem/Magical-Bits",
    "history": "En este problema tienes la simple tarea de recibir N veces, dos nu\u0301meros en binario, A y B, para posteriormente realizar una operacio\u0301n k a nivel de bits sobre los mismos, ya sea ` AND` , ` OR` u ` XOR` . Estos se representaran en el problema usando los * * caracteres* * ` ( ) ` , ` ( | ) ` , y ` ( ^ ) ` respectivamente. Ejemplo de A B: / & \u21d2 Luego, despue\u0301s de haber realizado dicha operacio\u0301n, debera\u0301s de mostrarle al usuario la conversio\u0301n a decimal de A y B. Una vez que se le mostro\u0301 al usuario dichas conversiones, debes mostrar en pantalla el resultado ( en binario) de la operacio\u0301n A ( k) B, para, posteriormente, imprimir ese mismo resultado convertido a base decimal. \u2014\u2014\u2014-",
    "input": "En la primera linea recibira\u0301s un numero N, el cual representa la cantidad de valores A y B que se leera\u0301n ( claro, ademas de la operacio\u0301n k) . Las siguientes N* 3 lineas se compondra\u0301n de los siguientes elementos: - Un numero entero A_ i en base binaria. - Un numero entero B_ i, igual en base binaria. - Un cara\u0301cter k, el cual indicara la operacio\u0301n a realizar entre los numeros A_ i y B_ i. * Los valores que k puede adoptar indican las siguientes operaciones: - ` ( ) ` : Realiza la operacio\u0301n A_ i and B_ i. - ` ( | ) ` : Realiza la operacio\u0301n A_ i or B_ i. - ` ( ^ ) ` : Realiza la operacio\u0301n A_ i xor B_ i. * Tanto el numero A, como el numero B, tendran la misma cantidad de bits. \u2014\u2014\u2014-",
    "output": "Habran N* 3 lineas, las cuales estaran compuestas por: - La conversion a decimal de A_ i y B_ i, separadas por espacios. - El numero binario resultante de la operacio\u0301n A_ i ( k) B_ i. - La conversio\u0301n a decimal de Z= A_ i ( k) B_ i. \u2014\u2014\u2014- # Ejemplos: | | input2110110101101^ 1100110110001110| | | output54 451101127205 14211001111207| | input111011001 | | output13 910019| | end\u2014\u2014\u2014- # Li\u0301mites* 1 \u2264 A_ i, B_ i\u2264 2^ 32- 1. * 1 \u2264 N \u2264 5\u00d710^ 5.",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 8804
  },
  {
    "title": "Rango de Bits",
    "url": "https://omegaup.com/arena/problem/Rango-de-Bits",
    "history": "Los bits de tu computadora se esta\u0301n escapando, asi que tu ocupas crear un programa para calcule cuantos bits activados esta\u0301n dentro de un rango de nu\u0301meros# EntradasUn nu\u0301mero * * N* * , seguido por * * N* * casos. Cada caso tiene dos enteros, un valor mi\u0301nimo * * A* * ( exclusivo) y un valor ma\u0301ximo * * B* * ( inclusivo) . # SalidasLa suma del nu\u0301mero de bits prendidos entre todos los nu\u0301meros del rango * * ( A, B] * * , es decir A + 1, A + 2, A + 3 . . . B.",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "data structures",
      "math",
      "dp",
      "number theory",
      "implementation",
      "combinatorics"
    ],
    "id": 8626
  },
  {
    "title": "B-I-N-A-R-Y",
    "url": "https://omegaup.com/arena/problem/B-I-N-A-R-Y",
    "history": "Despue\u0301s de su grandiosa aventura los amigos pudieron superar a los polici\u0301as y a los malvados contrincantes de su cartel. Ahora los super- amigos teni\u0301an que encargarse de vender un \" dulce\" llamado * * B. I. N. A. R. Y. * * , al eliminar a su competencia los super- amigos podi\u0301an vender este dulce tan solicitado al precio que se les pegara la gana. Para su mala suerte las personas en la tierra de los problemas ya sabi\u0301an cual era el precio esta\u0301ndar de dicho dulce, asi\u0301 que si lo vendi\u0301an ma\u0301s alto las personas iban a saber que los estaban engan\u0303ando y eso los iba molestar mucho al punto de hacer una revolucio\u0301n. Sin embargo, para su buena suerte el dulce causa un efecto especial en las personas. Las personas no podi\u0301an recordar el precio exacto al que compraron el dulce, lo u\u0301nico que recordaban las personas es cuantos \" 1\" teni\u0301a el precio en su representacio\u0301n binaria ( base 2. Se explicara ma\u0301s abajo que es esto, por si no lo sabes) . Y tambie\u0301n podi\u0301an recordar el taman\u0303o de la representacio\u0301n binaria del nu\u0301mero, para que no pudieras engan\u0303arlos tan fa\u0301cil. Los super- amigos se dieron cuenta que podi\u0301an vender el dulce en varios precios posibles con esas condiciones pero ellos queri\u0301an venderlos al pu\u0301blico al mayor precio posible. Santy y Joel tambie\u0301n teni\u0301an * personas reconocidas* que eran como amigos, asi\u0301 que a estas personas le queri\u0301an vender el dulce al menor precio posible con las condiciones dadas. # Representacio\u0301n binariaTodo nu\u0301mero decimal puede ser representado como la suma de * * diferentes* * potencias de 2 ( 2^ n) . Ejemplo: 7 = 2^ 0 + 2^ 1 + 2^ 2 = 1 + 2 + 421 = 2^ 0 + 2^ 2 + 2^ 4 = 1 + 4 + 16Para representar un nu\u0301mero en el sistema binario se usa una cadena ( a) de puros \" 0\" y \" 1\" ( taman\u0303o n) . Cada posicio\u0301n ( a_ i , N < i < = 0) representa \" por cuanto se esta multiplicando dicha potencia ( 2^ i) \" . Y se lee de izquierda a derecha. En donde la u\u0301ltima posicio\u0301n es 2^ 0. Ejemplo: ( 111) _ 2 = ( 2^ 2) ( 1) + ( 2^ 1) ( 1) + ( 2^ 0) ( 1) = 4 + 2 + 1 = 7( 10101) _ 2 = ( 2^ 4) ( 1) + ( 2^ 3) ( 0) + ( 2^ 2) ( 1) + ( 2^ 1) ( 0) + ( 2^ 0) ( 1) = 16 + 0 + 4 + 0 + 1 = 21( 100101) _ 2 = ( 2^ 5) ( 1) + ( 2^ 4) ( 0) + ( 2^ 3) ( 0) + ( 2^ 2) ( 1) + ( 2^ 1) ( 0) + ( 2^ 0) ( 1) = 32 + 0 + 0 + 4 + 0 + 1 = 37El taman\u0303o de la cadena esta dado por el primer \" 1\" , ya que los ceros que hayan antes no importan. Ejemplo10001, 10101, 10011; Taman\u0303o = 5. 0001001, 0001100; Taman\u0303o = 4. Dato curioso, asi\u0301 se representan los nu\u0301mero en una computadora. El sistema que usamos es base 10 ( 10^ n) y nuestras cadenas son con caracteres de \" 0- 9\" . # ProblemaDado un nu\u0301mero N ( precio esta\u0301ndar) , decir cual es el mayor y menor nu\u0301mero que se puede formar con: - El mismo nu\u0301mero de \" 1\" en su representacio\u0301n binaria- El mismo taman\u0303o en la cadena de su representacio\u0301n binaria",
    "input": "N nu\u0301mero entero positivo que representa el precio esta\u0301ndar",
    "output": "El mayor y el menor precio al que puedes vender el dulce con las condiciones dichas anterior mente.",
    "note": "",
    "topics": [
      "implementation",
      "math",
      "divide and conquer",
      "number theory"
    ],
    "id": 7872
  },
  {
    "title": "La Risa en Vacaciones 3",
    "url": "https://omegaup.com/arena/problem/La-Risa-en-Vacaciones-3",
    "history": "# La Risa en Vacaciones 3Existen 30 ciudades, numeradas del 0 al 29. Esta\u0301s a punto de salir de vacaciones, en las cuales visitara\u0301s una o ma\u0301s de e\u0301stas ciudades. En el trabajo te estan preguntando constantemente que ciudades visitara\u0301s, pero tu no quieres decirles, para que no te vayan a encontrar y a molestar con asuntos de trabajo durante tus vacaciones. Para lidiar con este problema has ideado una forma de codificar tu itinerario para tus vacaciones que consiste en representar las ciudades como bits en un nu\u0301mero binario. Si visitas la ciudad k, entonces el bit k tendra\u0301 en un 1, sino tendra\u0301 un 0. Por ejemplo, si visitas las ciudades 2 y 3, esto equivale al nu\u0301mero 1100, que representa el nu\u0301mero 12. Entonces si alguie\u0301n te pregunta que ciudades visitaras, tu dices 12. Otra cosa importante es que dado que eres muy original y siempre quieres ser diferente a los dema\u0301s, < b> so\u0301lo visitara\u0301s ciudades que NO hayan sido visitadas por ninguno de tus amigos anteriormente. < / b> Dados los itinierarios codificados de tus amigos, escribe un programa que indique las ciudades que visitara\u0301s en las vacaciones.",
    "input": "Un nu\u0301mero n ( 0 \u2264 n \u2264 10) , indicando la cantidad de amigos que te dijeron sus itinerarios de viajes previos. Le siguen n li\u0301neas con los itinerarios codificados de tus amigos.",
    "output": "Las ciudades que visitara\u0301s en las vacaciones, en orden ascendente y en li\u0301neas separadas. Si NO hay ciudades que visitar, imprimir el mensaje \u201dSin vacaciones\u201d. | | input3459767323663244158630702156| | output7| | end",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 6355
  },
  {
    "title": "La Risa en Vacaciones 2",
    "url": "https://omegaup.com/arena/problem/La-Risa-en-Vacaciones-2",
    "history": "# La Risa en Vacaciones 2Existen 30 ciudades, numeradas del 0 al 29. Esta\u0301s a punto de salir de vacaciones, en las cuales visitara\u0301s una o ma\u0301s de e\u0301stas ciudades. En el trabajo te estan preguntando constantemente que ciudades visitara\u0301s, pero tu no quieres decirles, para que no te vayan a encontrar y a molestar con asuntos de trabajo durante tus vacaciones. Pero tampoco eres buena para decir mentiras. Para lidiar con este problema has ideado una forma de codificar tu itinerario para tus vacaciones que consiste en representar las ciudades como bits en un nu\u0301mero binario. Si visitas la ciudad k, entonces el bit k tendra\u0301 en un 1, sino tendra\u0301 un 0. Por ejemplo, si visitas las ciudades 2 y 3, esto equivale al nu\u0301mero 1100, que representa el nu\u0301mero 12. Entonces si alguie\u0301n te pregunta que ciudades visitaras, tu dices 12. La otra persona no sabra\u0301 de que estas hablando y dejara\u0301 de molestarte. Y a su vez tu estara\u0301s diciendo la verdad, asi\u0301 que tu alma puede estar tranquila. Escribe un programa que dadas las ciudades que visitara\u0301s en tus vacaciones, imprima un nu\u0301mero indicando el itinerario codificado.",
    "input": "Un nu\u0301mero n ( 0 \u2264 n \u2264 30) , indicando la cantidad de ciudades que visitara\u0301s. Le siguen n li\u0301neas indicando cada una de las ciudades que visitara\u0301s.",
    "output": "Un so\u0301lo nu\u0301mero indicando el itinerario codificado.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 6354
  },
  {
    "title": "La Risa en Vacaciones",
    "url": "https://omegaup.com/arena/problem/La-Risa-en-Vacaciones",
    "history": "# La Risa en Vacaciones 1Existen n ciudades, numeradas del 0 al n- 1. Esta\u0301s a punto de salir de vacaciones, en las cuales visitara\u0301s una o ma\u0301s de e\u0301stas ciudades. En el trabajo te estan preguntando constantemente que ciudades visitara\u0301s, pero tu no quieres decirles, para que no te vayan a encontrar y a molestar con asuntos de trabajo durante tus vacaciones. Pero tampoco eres buena para decir mentiras. Para lidiar con este problema has ideado una forma de codificar tu itinerario para tus vacaciones que consiste en representar las ciudades como bits en un nu\u0301mero binario. Si visitas la ciudad k, entonces el bit k tendra\u0301 en un 1, sino tendra\u0301 un 0. Por ejemplo, si visitas las ciudades 2 y 3, esto equivale al nu\u0301mero 1100, que representa el nu\u0301mero 12. Entonces si alguie\u0301n te pregunta que ciudades visitaras, tu dices 12. La otra persona no sabra\u0301 de que estas hablando y dejara\u0301 de molestarte. Y a su vez tu estara\u0301s diciendo la verdad, asi\u0301 que tu alma puede estar tranquila. Escribe un programa que dado el itinerario codificado, imprima las ciudades que visitara\u0301s en tus vacaciones.",
    "input": "Un nu\u0301mero k ( 0 \u2264 k < 2^ 30) , indicando tu itinierario codificado.",
    "output": "Las ciudades que visitara\u0301s durante tus vacaciones, cada una en una li\u0301nea por separado y en orden ascendente. Si no visitara\u0301s ninguna ciudad, imprimir el mensaje \u201dNo hay risas sin vacaciones > ( \u201d.",
    "note": "",
    "topics": [
      "math",
      "number theory",
      "implementation"
    ],
    "id": 6353
  },
  {
    "title": "Cuantos Unos",
    "url": "https://omegaup.com/arena/problem/Cuantos-Unos",
    "history": "# \u00bfCu\u0301antos Unos? Un nu\u0301mero en base 2 contiene so\u0301lo 1' s y 0' s. Por ejemplo el nu\u0301mero 6 en base 2 se escribe como 110. Que es igual a 1 \u00d7 2^ 2 + 1 \u00d7 2^ 1 + 0 \u00d7 2^ 0. Escribe un programa que dado un nu\u0301mero en base 10, escriba cuantos 1' s tiene al escribirlo en base 2.",
    "input": "Un nu\u0301mero n ( 0 \u2264 n \u2264 30000) .",
    "output": "La cantidad de 1' s al representar n en base 2.",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 6352
  },
  {
    "title": "Invirtiendo aristas",
    "url": "https://omegaup.com/arena/problem/Invirtiendo-aristas",
    "history": "Tienes una gra\u0301fica simple de N ve\u0301rtices aislados ( numerados de 0 a N - 1) y realizara\u0301s una secuencia de M operaciones sobre ella. Existen dos tipos de operaciones: la operacio\u0301n A I J agrega una arista entre los ve\u0301rtices I y J o la quita si ya existi\u0301a, mientras que la operacio\u0301n V I agrega aristas de I hacia todos los dema\u0301s ve\u0301rtices, quitando las que ya existi\u0301an. Escribe un programa que calcule que\u0301 aristas tiene la gra\u0301fica despue\u0301s de aplicar todas las operaciones.",
    "input": "Los enteros N y M seguidos de una secuencia de M operaciones, una por li\u0301nea. Puedes suponer que 2 \u2264 N \u2264 1000, 0 \u2264 M \u2264 100000 y 0 \u2264 I = \u0338 J \u2264 N - 1.",
    "output": "Para cada arista de la gra\u0301fica resultante, una li\u0301nea con una pareja de enteros que denotan los ve\u0301rtices en los extremos de la arista. Tanto las aristas como los dos extremos de una misma arista pueden imprimirse en cualquier orden.",
    "note": "",
    "topics": [
      "graphs",
      "matrices",
      "math"
    ],
    "id": 5644
  },
  {
    "title": "Super Numeros de la suerte",
    "url": "https://omegaup.com/arena/problem/Super-Numeros-de-la-suerte",
    "history": "Tu amiga ama los numeros de la suerte. Todos sabemos que los numeros de la suerte son aquellos numeros que en su representacion decimal no tienen otros digitos que no sean 4 o 7. Por ejemplo: 744, 7474, 4 son numeros de la suerte en cambio 40, 567, 470 no lo son. Los super numeros de la suerte son numeros de la suerte que tienen la misma cantidad de 4' s y 7' s, por ejemplo 47, 7744 son super numeros de la suerte en cambio 7, 774 no lo son. Tu tarea es dado un numero entero n, encontrar el minimo super numero de la suerte que no sea menor que n.",
    "input": "En la primera linea un entero TC el numero de casos de prueba. Cada caso en una linea con un numero entero n.",
    "output": "Para cada caso imprimir el minimo super numero de la suerte que no sea menor que n.",
    "note": "",
    "topics": [
      "binary search",
      "math"
    ],
    "id": 5562
  },
  {
    "title": "Call of Soldiers 3",
    "url": "https://omegaup.com/arena/problem/Call-of-Soldiers-3",
    "history": "Estas con un amigo a punto de jugar el nuevo juego en su computadora llamado: \" Call of Soldier 3\" . En el juego hay ( m+ 1) jugadores y n tipos de soldados en total. Los jugadores en \" Call of soldiers 3\" estan enumerados de 1 a ( m+ 1) y los tipos de soldados estan enumerados de 0 a ( n- 1) . Cada jugador tiene un ejercito, el ejercito del i- esimo jugador esta representado con un numero entero no negativo x_ i. Consideremos la representacio\u0301n binaria de x_ i: Si el j- e\u0301simo bit del nu\u0301mero x_ i es igual a uno, entonces el eje\u0301rcito del i- e\u0301simo jugador tiene soldados del tipo j- e\u0301simo. Aqui un ejemplo: Si x_ i es: 7 y n es igual a 5 entonces su representacion binaria es 00111 donde este jugador tiene soldados de tipo 0, de tipo 1, de tipo 2, pero no tiene de tipo 3, ni 4. Tu amigo es el jugador ( m+ 1) del juego. Supone que dos jugadores pueden convertirse en amigos si sus eje\u0301rcitos difieren en no mas de k tipos de soldados ( en otras palabras, las representaciones binarias de los nu\u0301meros correspondientes difieren en no mas de k bits) . Ayuda a tu amigo y cuenta cua\u0301ntos jugadores pueden convertirse en sus amigos.",
    "input": "En la primera linea un entero T que indica el numero de casos de prueba. Para cada caso en la primera linea 3 enteros n, m, k. Las siguientes ( m+ 1) lineas un entero x_ i que describe el ejecito del i- esimo jugador. No olvides que tu amigo es el jugador # ( m+ 1) .",
    "output": "Para cada caso imprima en una linea el numero de los amigos que puede tener tu amigo.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 5561
  },
  {
    "title": "Preparando el contest",
    "url": "https://omegaup.com/arena/problem/Preparando-el-contest",
    "history": "Tu tienes n problemas y definiste la dificultad del i- esimo problema como c_ i, ahora tu quieres preparar un problemset para un contest usando algunos de los problemas que tienes. Un problemset en un contest consiste en por lo menos 2 problemas. El nivel de dificultad de un problemset se define como la suma de las dificultades de todos sus problemas. Y tu quieres que la dificultad del contest este entre l y r inclusive. Y tambien quieres que la diferencia entre el problema mas facil, y mas dificil sea por lo menos x. Encuentra el numero de maneras para hacer un problemset para un contest.",
    "input": "En la primera linea de entrada viene un entero tc que indica los casos de prueba, ahora le siguen tc casos, En la primera linea de cada caso vienen cuatro enteros n, l, r, x ya descritos en el problema. En la segunda linea de cada caso vienen n enteros, c_ 1, c_ 2, c_ 3, . . . , c_ n, la dificultad de cada problema.",
    "output": "Para cada caso imprima el numero de maneras que puedes hacer un problemset para un contest.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 5560
  },
  {
    "title": "Max XOR par",
    "url": "https://omegaup.com/arena/problem/Max-XOR-par",
    "history": "Dados N nu\u0301meros, encuentra el par cuyo XOR es el ma\u0301ximo de entre todas los pares posibles. Imprime el XOR entre esos dos nu\u0301meros.",
    "input": "La primera li\u0301nea tiene a N ( 2 < = N < = 10^ 5) . En la siguiente li\u0301nea tendremos N nu\u0301meros ( 0 < = N_ i < 2 ^ 14 )",
    "output": "El resultado de hacer XOR con el mejor par de nu\u0301meros.",
    "note": "",
    "topics": [
      "string suffix structures",
      "math",
      "data structures",
      "strings"
    ],
    "id": 5558
  },
  {
    "title": "Compresi\u00f3n de cadenas",
    "url": "https://omegaup.com/arena/problem/Compresion-de-cadenas",
    "history": "Dada una cadena S, diremos que una subcadena de S es homoge\u0301nea si no es vaci\u0301a y todos sus caracteres son iguales. Cuando no es posible agrandar una subcadena homoge\u0301nea por ninguno de sus dos extremos, diremos que la subcadena es homoge\u0301nea maximal. Por ejemplo, la secuencia de subcadenas homoge\u0301neas maximales de aabccccbaaa es ( aa, b, cccc, b, aaa) . Cuando la cadena S consta u\u0301nicamente de caracteres ASCII, es posible comprimirla usando el algoritmo que se describe a continuacio\u0301n. Sea x_ i la i- e\u0301sima subcadena homoge\u0301nea maximal de S: - Si la longitud de x_ i es N = 1, entonces la representacio\u0301n comprimida de x_ i es x_ i misma. - Si la longitud de x_ i es N \u2265 2, entonces la representacio\u0301n comprimida de x_ i consta de un preludio seguido del caracter que se repite en x_ i. El preludio se construye como sigue: - Sea M = N- 2 y sea b_ w b_ w- 1. . . b_ 3 b_ 2 b_ 1 la representacio\u0301n binaria de M. Sea K la menor posicio\u0301n en la representacio\u0301n binaria de M tal que todos los bits en posiciones mayores valen 0. - El preludio consta de exactamente T = \u2308k/ 7\u2309 octetos ( bytes) . La representacio\u0301n binaria del preludio es 1 b_ 7 b_ 6 b_ 5 b_ 4 b_ 3 b_ 2 b_ 1 1 b_ 14 b_ 13 b_ 12 b_ 11 b_ 10 b_ 9 b_ 8 . . . 1 b_ 7T b_ 7T- 1 b_ 7T- 2 b_ 7T- 3 b_ 7T- 4 b_ 7T- 5 b_ 7T- 5 b_ 7T- 6 y se construye a partir de los bits correspondientes de la representacio\u0301n binaria de M. La representacio\u0301n comprimida de S es la secuencia de las representaciones comprimidas de sus subcadenas homoge\u0301neas maximales. Escribe un programa que sea capaz de comprimir y descomprimir cadenas segu\u0301n la especificacio\u0301n anterior.",
    "input": "La entrada inicia con el caracter P y un espacio. El resto de la entrada contiene una secuencia de caracteres no nulos, la cual debe procesarse hasta el fin de archivo. Si P = ' C' entonces la secuencia denota una cadena que se desea comprimir. Si P = ' D' entonces la secuencia denota una cadena comprimida la cual se desea descomprimir. Puedes suponer que las secuencias cumplen la especificacio\u0301n y que tendra\u0301n entre 1 y 1, 000, 000 caracteres.",
    "output": "Si P = ' C' entonces debera\u0301 imprimirse la representacio\u0301n comprimida de la cadena dada en la entrada. Si P = ' D' entonces debera\u0301 imprimirse la cadena descrita por la representacio\u0301n comprimida dada en la entrada.",
    "note": "",
    "topics": [
      "bitmasks",
      "math",
      "strings",
      "*special"
    ],
    "id": 5157
  },
  {
    "title": "Lanzamiento de moneda",
    "url": "https://omegaup.com/arena/problem/Lanzamiento-de-moneda",
    "history": "Fernando se encontraba lanzando una moneda durante un lapso de aburrimiento, como su hermano tambie\u0301n se aburri\u0301a decidio\u0301 desafiarlo a un juego de lanzamiento de las monedas con unas reglas raras. En el juego se lanzara\u0301 N veces la moneda y dependiendo de como termine Fer o su hermano deben hablar al reve\u0301s. Pero eso no le importa ahora a Fer, primero quiere saber cuales son los posibles resultados de lanzar la moneda N veces.",
    "input": "Un entero N que represente la cantidad de lanzamientos.",
    "output": "Todos los posibles resultados representados en una palabra cada uno ordenados lexicograficamente. * * NOTA* * los lados son representados con la letra A y X.",
    "note": "",
    "topics": [
      "implementation",
      "strings",
      "math",
      "brute force"
    ],
    "id": 5097
  },
  {
    "title": "Asignaci\u00f3n \u00d3ptima",
    "url": "https://omegaup.com/arena/problem/Asignacion-Optima",
    "history": "Sea S_ i, j una matriz 0- indexada de N \u00d7 Nenteros. Decimos que una asignacio\u0301n en Ses un arreglo de N elementos, [ a_ 0, a_ 1, . . . , a_ n- 1] tales que las a_ i son una permutacio\u0301n de los enterosdel 0 al N- 1. Adema\u0301s, definimos el valor de una asignacio\u0301n como\u2211_ i= 0^ n- 1 S_ i, a_ i. ( En otras palabras, para la fila i de S, sumar la columna a_ i) . Tu tarea es, dados N y S, encontrar el valor ma\u0301ximoentre todas las asignaciones en S posibles.",
    "input": "En la primera li\u0301nea, N. En las siguientes N li\u0301neas, la matriz S.",
    "output": "El valor ma\u0301ximo lograble entre todas las asignaciones posibles en S.",
    "note": "",
    "topics": [
      "math",
      "bitmasks",
      "implementation",
      "dp",
      "matrices"
    ],
    "id": 2959
  },
  {
    "title": "El C\u00f3digo Gray",
    "url": "https://omegaup.com/arena/problem/gray",
    "history": "El co\u0301digo Gray es una forma especial de numeracio\u0301n binaria en el cual un nu\u0301mero so\u0301lo difiere en un bit del nu\u0301mero predecesor. Por ejemplo: ! [ Codigo gray] ( gray. png) # ProblemaEscribe un programa que dado un nu\u0301mero n, encuentre su codificacio\u0301n en Gray, para luego imprimirlo con si fuera un nu\u0301mero binario normal.",
    "input": "En la primera y u\u0301nica li\u0301nea, el nu\u0301mero n.",
    "output": "Una sola li\u0301nea indicando el nu\u0301mero decimal que corresponde con la codificacio\u0301n Gray de n.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 2869
  },
  {
    "title": "Number of the Beast",
    "url": "https://omegaup.com/arena/problem/NumberOfTheBeast",
    "history": "Woe to You Oh Earth and Seafor the Devil sends the beast with wrathbecause he knows the time is shortLet him who hath understandingreckon the number of the beastfor it is a human number* * \u2014 Iron Maiden, Number of the Beast* * Recientemente se hizo un importante descubrimiento: unos antiguos pergaminos que se rumoraba conteni\u0301an la respuesta a muchas de las interrogantes de la humanidad. El primer pergamino estaba escrito en algu\u0301n lenguaje cai\u0301do en desuso y estaba firmado por la Bestia. Los dema\u0301s pergaminos conteni\u0301an tres nu\u0301meros grandes seguidos de si\u0301mbolos sin sentido. Al poco tiempo, se termino\u0301 la traduccio\u0301n del primer pergamino, el cual describi\u0301a un me\u0301todo de encriptacio\u0301n utilizado en los dema\u0301s pergaminos. Para la e\u0301poca en la que los pergaminos fueron escritos, este me\u0301todo era demasiado avanzado. Tambie\u0301n describi\u0301a que era posible calcular la clave de encriptacio\u0301n utilizando los tres nu\u0301meros grandes ( llamados * a* , * b* y * n* ) que se encontraban en cada pergamino. Para calcular la clave, es necesario contar cua\u0301ntos nu\u0301meros en el intervalo cerrado [ * a* , * b* ] , en su representacio\u0301n binaria tienen exactamente * n* bits encendidos.",
    "input": "La primer li\u0301nea de la entrada contiene un nu\u0301mero entero n ( 1 < n \u2264 1000) que nos indica el nu\u0301mero de casos de prueba. Cada caso contiene tres enteros a ( 1 \u2264 a < 2< sup> 31< / sup> ) , b ( a \u2264 b < 2< sup> 31< / sup> ) y n ( 1 \u2264 n < 31) .",
    "output": "Para cada caso, imprime la cantidad de nu\u0301meros entre * a* y * b* ( inclusive) que contengan exactamente * n* bits encendidos. | | input51 10 11 10 21 10 31 98305 341249 60398 12| | output451666666| | endLuis He\u0301ctor Cha\u0301vez Freire, 20081er Concurso Local de Programacion del Club de Progra",
    "note": "",
    "topics": [
      "math",
      "divide and conquer",
      "combinatorics"
    ],
    "id": 2173
  },
  {
    "title": "IOI 2011 - Loros",
    "url": "https://omegaup.com/arena/problem/parrots",
    "history": "< center> ! [ Logo IOI 2011] ( / img/ fe20303134dc7e1432cd3abc9c07c67b21c59a89. jpg) < / center> \u2014\u2014\u2014\u2014\u2014\u2013# ParrotsYanee es una entusiasta de los pa\u0301jaros. Tras leer [ IP sobre Transportes Aereos] ( https: / / www. ietf. org/ rfc/ rfc1149. txt) ( IPoAC) , ha dedicado tiempo a entrenar pericos inteligentes para que lleven mensajes agrandes distancias. El suen\u0303o de Yanee es utilizar pa\u0301jaros para enviar un mensaje M a una tierralejana. El mensaje M es una secuencia de N enteros ( no necesariamentedistintos) cada uno entre 0 y 255 inclusive. Yanee tiene K pericos igualesimposibles de diferenciar. Cada perico puede recordar un u\u0301nico entero entre 0 yR inclusive. El primer esquema que Yanee intento\u0301 fue dejar salir los pericos de su jaula unopor uno. Antes de que cada perico iniciara su vuelo le ensen\u0303aba un nu\u0301mero de lasecuencia del mensaje en orden. Desafortunadamente el esquema no funciono\u0301. Eventualmente todos los pericos llegaban al destino, pero no necesariamente lohaci\u0301an en el orden en el que habi\u0301an salido. Con este esquema, Yanee podi\u0301arecuperar todos los nu\u0301meros del mensaje, pero era incapaz de ponerlos en orden. Para lograr su suen\u0303o, Yanee necesita tu ayuda para crear un mejor esquema. Dadoun mensaje M, ella planea dejar salir los pericos uno a uno como antes. Ellanecesita que escribas un programa que realice las siguientes dos operaciones: * Primero, tu programa debe ser capaz de leer el mensaje M y transformarlo enuna secuencia de a lo ma\u0301s K enteros entre 0 y R los cuales se leensen\u0303ara\u0301n a los pericos. * Segundo, tu programa debe poder leer la lista de enteros entre 0 y R segu\u0301nhayan llegado los pericos al destino y transformarlo de nuevo en el mensajeoriginal M. Puedes asumir que todos los pericos llegara\u0301n al destino y que cada uno recuerdael nu\u0301mero que se le asigno\u0301, sin embargo debes recordar que los pericos puedenllegar en cualquier orden. Recuerda que Yanee so\u0301lo tiene K pericos, asi\u0301 quela secuencia de enteros entre 0 y R que genere tu programa debera\u0301 contener alo ma\u0301s K enteros. # Tu tareaEscribe dos procedimientos. Uno sera\u0301 usado para enviar ( ` encode` ) y el otropara recibir ( ` decode` ) . El proceso global se muestra en la siguiente figura. ! [ Diagrama] ( parrots. png) Los dos procedimientos que debes escribir son: * Procedimiento ` encode( N, M) ` que recibe los siguientes para\u0301metros: * N \u2013 la longitud del mensaje. * M \u2013 arreglo unidimensional de N enteros que representa el mensaje. Puedes asumir que 0 \u2264 M[ i] \u2264 255 para 0 \u2264 i < N. Este procedimiento debe codificar el mensaje M en una secuencia de enterosentre 0 y R, inclusive, que sera\u0301 enviada utilizando los pericos. Parareportar esta secuencia, tu procedimiento ` encode` debe llamar alprocedimiento ` send( a) ` para cada entero a que deseas asignar a uno de lospa\u0301jaros. * Procedimiento ` decode( N, L, X) ` que recibe los siguientes para\u0301metros: * N \u2013 la longitud del mensaje original. * L \u2013 la longitud del mensaje recibido ( total de pericos enviados) . * X \u2013 arreglo unidimensional de L enteros que representan los nu\u0301merosrecibidos. Los nu\u0301meros X[ i] para 0 \u2264 i < L son exactamente losnu\u0301meros que tu procedimiento ` encode` produjo, pero posiblemente en unorden distinto. Este procedimiento debe recuperar el mensaje original. Para reportarlo, ` decode` debe llamar al procedimiento ` output( b) ` para cada b en el mensajedecodificado en el orden correcto. R y K no son dados como para\u0301metros de entrada. Por favor revisa lasdescripciones de las subtareas abajo para ver los valores correspondientes. Para poder resolver satisfactoriamente una subtarea, tus procedimientos debera\u0301nsatisfacer que: * Todos los enteros que genere tu procedimiento ` encode` este\u0301n en el rangoespecificado en la subtarea. * El nu\u0301mero de veces que tu procedimiento ` encode` llame al procedimiento` send` no debe exceder el li\u0301mite K especificado en la subtarea. Por favorfi\u0301jate que K depende de la longitud del mensaje. * El procedimiento ` decode` debe recuperar correctamente el mensaje originalM y llamar al procedimiento ` output( b) ` exactamente N times, con bsiendo igual a M[ 0] , M[ 1] , . . . , M[ N- 1] , en cada llamada, respectivamente. En la u\u0301ltima subtarea tu puntuacio\u0301n vari\u0301a dependiendo de la relacio\u0301n delongitud entre el mensaje codificado y el mensaje original.",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 1988
  },
  {
    "title": "bits-bits-bits",
    "url": "https://omegaup.com/arena/problem/bits-bits-bits",
    "history": "# Bits- Bits- BitsEl problema mas fa\u0301cil es este. Ojala\u0301 puedas aprovechar los puntos de este problema y ganar, pero antes responde. Dados 3 nu\u0301meros a, b y k, \u00bfcua\u0301ntos nu\u0301meros existen en el intervalo [ a, b] cuya representacio\u0301n en binario tienen una cantidad k de unos? Por ejemplo, entre el 2 y 8, hay 3 nu\u0301meros que tienen 2 unos: 0011, 0101, 0110.",
    "input": "Sera\u0301n mu\u0301ltiples casos de prueba, en la primer li\u0301nea un numero T con la cantidad de casos. Por cada caso, 3 nu\u0301meros separados por un espacio, a, b y k.",
    "output": "Por cada caso en una li\u0301nea, la cantidad de nu\u0301meros que cumplen tal condicio\u0301n.",
    "note": "",
    "topics": [
      "dp",
      "math"
    ],
    "id": 1281
  },
  {
    "title": "N\u00fameros en binario al rev\u00e9s",
    "url": "https://omegaup.com/arena/problem/Numeros-en-binario-al-reves",
    "history": "Considere un entero positivo n que se escribe b_ m b_ m- 1. . . b_ 1 b_ 0 en binario, donde m \u2265 0 y b_ m = 1. El complemento de n es el entero que se escribe a_ m a_ m- 1. . . a_ 1 a_ 0 en binario, donde a_ i= 1- b_ i para toda 0 \u2264 i \u2264 m. El reverso de n es el entero que se escribe b_ 0 b_ 1 . . . b_ m- 1 b_ m en binario. Escribe un programa que calcule el complemento p y el reverso q de un entero n. Por ejemplo, si n = 2006 ( 11111010110 en binario) entonces su complemento es p = 41 ( 00000101001 en binario) y su reverso es q = 863 ( 01101011111 en binario) .",
    "input": "Un nu\u0301mero entero n tal que 1 \u2264 n \u2264 4, 000, 000, 000.",
    "output": "Dos nu\u0301meros enteros p, q separados por un espacio.",
    "note": "",
    "topics": [
      "strings",
      "math"
    ],
    "id": 1033
  },
  {
    "title": "Al rev\u00e9s",
    "url": "https://omegaup.com/arena/problem/Al-reves",
    "history": "En clase de Principios de Mecatro\u0301nica esta\u0301s haciendo una computadora en equipos, sin embargo, no te pusiste de acuerdo con tus compan\u0303eros y la li\u0301nea que regresa tu co\u0301digo \u2013que es una serie de \u20181\u2019 y \u20180\u2019- \u00a1esta al reve\u0301s! Como no quieres programar todo de nuevo has decidido que es ma\u0301s fa\u0301cil escribir un co\u0301digo que cambie tus \u20181\u2019 por \u20180\u2019 y tus \u20180\u2019 por \u20181\u2019.",
    "input": "Una li\u0301nea que contiene ' 0' s y ' 1' s u\u0301nicamente, separados por un espacio.",
    "output": "La entrada con los \u20180\u2019 y \u20181\u2019 invertidos, separados por un espacio.",
    "note": "",
    "topics": [
      "math",
      "implementation",
      "strings"
    ],
    "id": 932
  },
  {
    "title": "Bit counting",
    "url": "https://omegaup.com/arena/problem/bitcounting",
    "history": "Definimos N_ i como un entero mayor que 0. Sea N_ 1 la cantidad de unos de la representacio\u0301n binaria de N_ 0 ( por ejemplo, si N_ 0 = 27 entonces N_ 1 = 4) . Ana\u0301logamente N_ i es la cantidad de unos de la representacio\u0301n binaria de N_ i- 1. Definimos K como al mi\u0301nimo valor de i ge; 0 tal que N_ i = 1. Por ejemplo si N_ 0 = 35 entonces N_ 1 = 3, N_ 2 = 2, N_ 3 = 1 por lo tanto K = 3. Dado un intervalo cerrado de nu\u0301meros y un valor X, encuentra cua\u0301ntos nu\u0301meros existen dentro de ese intervalo tal que su valor K sea igual a X.",
    "input": "Tres enteros LO HI X, el intervalo cerrado [ LO, HI] y el valor X.",
    "output": "La cantidad de numeros en el intervalo [ LO, HI] tal que su K es igual a X.",
    "note": "",
    "topics": [
      "bitmasks",
      "combinatorics",
      "implementation",
      "divide and conquer",
      "math"
    ],
    "id": 14
  },
  {
    "title": "Logarithm base M of N",
    "url": "https://omegaup.com/arena/problem/LogaritmoMdeN",
    "history": "# DescriptionA logarithm is the exponent that indicates the power to which a base number M is raised to produce a given number N. For example, log_ 2( 2) = 1, log_ 10( 1) = 0, log_ 20( 400) = 2, and so on. Write a program that compute the logarithm base M of an integer N.",
    "input": "Two integer values M and N. You can assume that M\u2264N\u2264M ^ 30 and that N is of the form M^ i where i is an integer.",
    "output": "An integer, the logarithm base M of N. # Example| | input2 8| | output3| | description2^ 3= 8| | input10 1| | output0| | description10^ 0= 1| | input7 49| | output2| | description7^ 2= 49| | end",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 13188
  },
  {
    "title": "Fibonaccis r\u00e1pidos",
    "url": "https://omegaup.com/arena/problem/fast-fibos",
    "history": "Este problema consiste en calcular los nu\u0301meros de la serie de Fibonacci, considerando: f( 0) = 0f( 1) = 1f( n) = f( n- 1) + f( n- 2) So\u0301lo que ahora, tendra\u0301s que calcularlos muy ra\u0301pido.",
    "input": "Recibira\u0301s un u\u0301nico valor de entrada N ( 0 \u2264 N < 1000000)",
    "output": "Para cada valor de N, mostrar f( N) mod 100000009. Esto debido a que de otra forma, los nu\u0301meros sera\u0301n demasiado grandes.",
    "note": "",
    "topics": [
      "number theory",
      "matrices",
      "math"
    ],
    "id": 6246
  },
  {
    "title": "Los frutos del \u00e1rbol cornalina",
    "url": "https://omegaup.com/arena/problem/frutos",
    "history": "Al salir del camino subterra\u0301neo de la montan\u0303a Mashu, Gilgamesh se admiro\u0301 al ver un a\u0301rbol cornalina. Los a\u0301rboles cornalina crecen de una forma curiosa: el tronco principal se divide en K troncos ma\u0301s delgados, y lo mismo ocurre con cada uno de los troncos ma\u0301s delgados. Esto ocurre durante un total de N veces, la primera vez se aplica sobre el tronco original, la segunda sobre los K troncos nuevos y asi\u0301 sucesivamente. Los troncos ma\u0301s delgados del a\u0301rbol, que finalmente se convierten en las ramas, ya no se dividen ma\u0301s. Cada rama tiene un racimo de R frutas de piedra cornalina. Dados los valores de K, N y R Gilgamesh desea saber cua\u0301ntas frutas tiene todo el a\u0301rbol.",
    "input": "Tres enteros K, N y R que representan el nu\u0301mero de troncos en que se divide cada tronco, el nu\u0301mero de veces que ocurren las divisiones y la cantidad de frutas de piedra cornalina que tendra\u0301 cada rama en el a\u0301rbol. Puede suponer que 1 \u2264 K, N, R \u2264 1000.",
    "output": "Un entero F que sea la cantidad de frutas cornalina que tendra\u0301 todo el a\u0301rbol. Puede suponer que F siempre cabra\u0301 en un entero de 64 bits con signo.",
    "note": "",
    "topics": [
      "dfs and similar",
      "math",
      "dp"
    ],
    "id": 1817
  },
  {
    "title": "Area cuadrado",
    "url": "https://omegaup.com/arena/problem/Area-cuadrado-diagonal",
    "history": "Se te dara\u0301 la diagonal de un cuadrado, tu tarea sera\u0301 sacar el a\u0301rea Del cuadrado.",
    "input": "Un entero que indica el taman\u0303o de la diagonal.",
    "output": "El a\u0301rea del cuadrado indicada en * * cm2* * .",
    "note": "",
    "topics": [
      "number theory",
      "math"
    ],
    "id": 15947
  },
  {
    "title": "Eliminaci\u00f3n Gaussiana",
    "url": "https://omegaup.com/arena/problem/Eliminacion-Gaussiana",
    "history": "Se te dara\u0301 un sistema de n ecuaciones lineales con n inco\u0301gnitas de la siguiente forma: c_ 0, 0 x_ 0 + c_ 0, 1 x_ 1 + . . . c_ 0, n- 1 x_ n- 1 = b_ 0 c_ 1, 0 x_ 0 + c_ 1, 1 x_ 1 + . . . c_ 1, n- 1 x_ n- 1 = b_ 1 . . . c_ n- 1, 0 x_ 0 + c_ n- 1, 1 x_ 1 + . . . c_ n- 1, n- 1 x_ n- 1 = b_ n- 1 Escribe un programa que determine la solucio\u0301n de tal sistema.",
    "input": "Un entero n seguido de una matriz de n \u00d7 n + 1 reales que denotan el sistema. Puedes suponer que 1 \u2264 n \u2264 100, que todos los reales esta\u0301n entre - 1000 y + 1000 y que el sistema tiene una u\u0301nica solucio\u0301n.",
    "output": "Una secuencia de n reales impresos con dos decimales, los cuales denotan los valores de x_ 0, x_ 1, . . . , x_ n- 1.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 15647
  },
  {
    "title": "A complex Chicharronera",
    "url": "https://omegaup.com/arena/problem/The-Chicharronera",
    "history": "# DescriptionImplement a program that, given the coefficients a, b and c of a quadratic equation of the form ax2+ bx+ c = 0, finds its solutions, regardless of whether they are real or imaginary ( complex) .",
    "input": "Three real numbers a, b y c \u2208R, with a= \u03380.",
    "output": "Both roots of the equation, x_ 1= ( r_ 1, c_ 1) and x_ 2= ( r_ 2, c_ 2) , one on each line, where r_ 1 and r_ 2 are the real parts of the solution and c_ 1, c_ 2 are the imaginary parts. If the roots are real, their imaginary part will be equal to 0. # Example| | input1 1 - 272| | outputx1= ( 16 0) x2= ( - 17 0) | | descriptiona= 1, b= 1, c= - 272, so that x_ 1 = - 1+ \u221a( 1^ 2- ( 4) ( 1) ( - 272) ) / ( 2) ( 1) = 16+ 0i= ( 16 0) and x_ 2 = - 1- \u221a( 1^ 2- ( 4) ( 1) ( - 272) ) / ( 2) ( 1) = - 17+ 0i= ( - 17 0) | | input1 6 9| | outputx1= ( - 3 0) x2= ( - 3 0) | | descriptiona= 1, b= 6, c= 9, so that x_ 1 = - 6+ \u221a( 6^ 2- ( 4) ( 1) ( 9) ) / ( 2) ( 1) = - 3+ 0i= ( - 3 0) and x_ 2 = - 6- \u221a( 6^ 2- ( 4) ( 1) ( 9) ) / ( 2) ( 1) = - 3+ 0i= ( - 3 0) | | input1 0 9| | outputx1= ( 0 3) x2= ( 0 - 3) | | descriptiona= 1, b= 0, c= 9, so that x_ 1 = - 0+ \u221a( 0^ 2- ( 4) ( 1) ( 9) ) / ( 2) ( 1) = 0+ 3i= ( 03) and x_ 2 = - 0- \u221a( 0^ 2- ( 4) ( 1) ( 9) ) / ( 2) ( 1) = 0- 3i= ( 0- 3) | | end# Li\u0301mitesa, b, c\u2208R, a= \u03380",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 14887
  },
  {
    "title": "TecnoMate y Pizzas",
    "url": "https://omegaup.com/arena/problem/TecnoMate-y-Pizzas",
    "history": "Solicite la descripcio\u0301n de este problema a su profesor.",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 14215
  },
  {
    "title": "Eructos espartanos",
    "url": "https://omegaup.com/arena/problem/Eructos-espartanos",
    "history": "En un concurso de eructos espartanos, el comandante Sonrics y el general Leo\u0301nidas deciden participar, por ser un concurso para machos alfa sus eructos son tan fuertes que han decidido hacer el concurso de la siguiente manera: * Cada participante tiene 5 monedas. * Cada participante lanza sus 5 monedas con un eructo. * Ganan todos aquellos que consigan que todas sus monedas caigan a\u0301guila o que todas sus monedas caigan sol, sin importar cuantos intentos hagan. * Como estos machos alfa son muy calculadores quieren saber cual es la probabilidad porcentual (",
    "input": "",
    "output": "La probabilidad porcentual (",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 12218
  },
  {
    "title": "Guardia campestre",
    "url": "https://omegaup.com/arena/problem/Guardia-campestre",
    "history": "El comandante Sonrics esta\u0301 encargado de la seguridad de su campamento, debe colocar a sus compan\u0303eros haciendo guardia en puntos estrate\u0301gicos en el peri\u0301metro exterior, para ello debes ayudar al comandante Sonrics a calcular cuantas unidades mide el peri\u0301metro exterior. * Se sabe que para tener una defensa sime\u0301trica el campamento se forma por diferentes peri\u0301metros, compuestos por circunferencias y cuadrados tangentes, como se muestra en el diagrama. * Por cada 2 unidades lineales del peri\u0301metro exterior el comandante Sonrics debe colocar un guardia. * El peri\u0301metro interior el cual es de color naranja tiene un radio que mide 10 unidades, encontrar cuantos guardias debe colocar el comandante Sonrics en el peri\u0301metro exterior el cual es de color rojo. * En caso de que la cantidad de guardias tenga fraccio\u0301n decimal, el comandante Sonrics debe agregar un guardia extra a la parte entera de la cantidad de guardias, para otorgar mayor seguridad. ! [ enter image description here] [ 1]",
    "input": "",
    "output": "La cantidad de guardias que debe colocar en el peri\u0301metro exterior de color rojo, el comandante Sonrics. # Como debe ir tu solucio\u0301n- Escoger lenguaje Solo salidaEnviar tu respuesta nume\u0301rica.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 12217
  },
  {
    "title": "Sonrics el erradicador",
    "url": "https://omegaup.com/arena/problem/Sonrics-el-erradicador",
    "history": "El comandante Sonrics ha sido enviado a una misio\u0301n de erradicacio\u0301n de planti\u0301os, de los cuales debe tomar una cantidad representativa como evidencia. Ayuda al comandante Sonrics a encontrar de cuantos kg sera\u0301 el cargamento que debera\u0301 transportar como evidencia, si el planti\u0301o a erradicar tiene forma rectangular y las medidas que aparecen en el digrama, y el a\u0301rea que debe tomar como evidencia es el a\u0301rea sombreada. * Se sabe que por unidad cuadrada de planti\u0301os hay 10 kg de enherbantes. * Se sabe que \" M\" es punto medio de \" AC\" , que \" P\" es punto medio de \" MC\" y que \" K\" es punto medio de \" BC\" . ! [ enter image description here] [ 1]",
    "input": "",
    "output": "El cargamento en kg de enherbantes que el comandante Sonrics debe transportar como evidencia. # Como debe ir tu solucio\u0301n- Escoger como lenguaje Solo salidaEnviar tu respuesta nume\u0301rica.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 12216
  },
  {
    "title": "El Traca desencriptador",
    "url": "https://omegaup.com/arena/problem/El-Traca-desencriptador",
    "history": "El comandante Sonrics se encuentra en una misio\u0301n de reconocimiento en la sierra con su compan\u0303ero el Traca quien ha recibido las coordenadas a donde quieren llegar encriptadas de la siguiente forma: * El asterisco en la ecuacio\u0301n planteada que aparece en el diagrama representa un di\u0301gito. * Para encontrar las coordenadas el valor del asterisco: Se multiplica por 1234 para el eje x, se multiplica por 4321 para las del eje1, y se multiplica por 2112 para el eje z. Ayuda al Traca a desencriptar las coordenadas para que se las pueda entregar al comandante Sonrics y asi\u0301 poder llegar al lugar donde se les fue indicado. ! [ enter image description here] [ 1]",
    "input": "",
    "output": "La coordenadas que Sonrics le debe entregar al Traca en el siguiente orden, separadas por un espacio: X Y Z# Como debe ir tu solucio\u0301n- Escoger como lenguaje Solo salidaEnviar las coordenadas separadas por un espacio: X Y ZEnviar tu respuesta nume\u0301rica.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 12215
  },
  {
    "title": "Despliegue veloz",
    "url": "https://omegaup.com/arena/problem/Despliegue-veloz",
    "history": "El comandante Sonrics y su compan\u0303ero el Traca fueron enviados a una misio\u0301n en la sierra, por lo que un camio\u0301n los transporto\u0301 a una distancia \" d\" de la base a una velocidad de 60 km/ h hasta un punto de insercio\u0301n donde el camio\u0301n no se podi\u0301a adentrar ma\u0301s, una vez en el punto de insercio\u0301n, se adentran en la sierra la mitad de la distancia \" d\" a una velocidad de 20 km/ h. El Traca debe reportar a la base mediante el uso de su radio la velocidad promedio del recorrido de la base hasta su adentramiento en la sierra, es decir la velocidad con que se llevo\u0301 acabo todo el despliegue. Ayudalos a calcular la velocidad del despliegue.",
    "input": "",
    "output": "La velocidad del despliegue en km/ h! [ enter image description here] [ 1] # Como debe ir tu solucio\u0301n- Escoger lenguaje Solo salidaTu respuesta nume\u0301rica",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 12212
  },
  {
    "title": "Demoliendo la competencia",
    "url": "https://omegaup.com/arena/problem/Demoliendo-la-competencia",
    "history": "El COBAEV 18 se encuentra en guerra be\u0301lica con el Buckingham, por esto el COBAEV 18 quiere demoler las instalaciones del Buckingham por lo que en su laboratorio han desarrollado 4 tipos de explosivos, los explosivos negros, los verdes, los rojos y los cafe\u0301s, cada uno con diferentes potencia de impacto. Se sabe que la potencia una cantidad de explosivos de un tipo equivale a la potencia de otra determinada cantidad de explosivos de otro tipo como aparece en el diagrama. El comandante Sonrics esta\u0301 entre nustras filas y ha determinado que se necesita la potencia de impacto que generan 10 explosivos negros para destruir las instalaciones del Buckingham, pero por cuestiones estrate\u0301gicas usaran explosivos cafe\u0301s, ayudalo a determinar cuantos explosivos cafe\u0301s necesitaran tus compatriotas para lograr su cometido. ! [ enter image description here] [ 1]",
    "input": "",
    "output": "La cantidad de explosivos cafe\u0301s que necesitaran tus compatriotas para demoler el Buckingham. # Como debe ir tu solucio\u0301n- Escoger como lenguaje Solo salidaEnviar tu respuesta nume\u0301rica.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 12211
  },
  {
    "title": "Carritos chocones",
    "url": "https://omegaup.com/arena/problem/Carritos-chocones",
    "history": "Varios carritos esta\u0301n en una recta nume\u0301rica infinita y esta\u0301n por emprender un gran viaje. Los carritos tiene posiciones iniciales y esta\u0301n numerados de 1 a N segu\u0301n e\u0301stas, de izquierda a derecha. Adema\u0301s, cada carrito tiene una velocidad constante hacia la derecha. \u00bfEn que\u0301 momento ocurre el primer choque entre carritos, si es que ocurre alguno? , \u00bfque\u0301 pareja de carritos son los involucrados?",
    "input": "Un entero N seguido de N parejas de enteros P, V donde la i- e\u0301sima pareja denota la posicio\u0301n inicial del i- e\u0301simo carrito y su velocidad, respectivamente. Puedes suponer que 0 \u2264 N \u2264 10^ 5, que 1 \u2264 P, V \u2264 10^ 6 y que no hay posiciones iniciales repetidas.",
    "output": "En caso de que no ocurran choques, imprimir el entero - 1. En caso de que si\u0301 ocurran choques, un real T y dos enteros I_ 1 < I_ 2 que sean el tiempo en el que ocurre el primer choque y los i\u0301ndices de los carritos involucrados, respectivamente. El real se considerara\u0301 correcto si nume\u0301ricamente esta\u0301 razonablemente cerca del valor exacto. En caso de ocurrir varios choques al mismo tiempo ( o que un mismo choque involucre a ma\u0301s de dos carritos) , imprimir la menor pareja de i\u0301ndices de carritos chocados.",
    "note": "",
    "topics": [
      "implementation",
      "math"
    ],
    "id": 10146
  },
  {
    "title": "Sistema de ecuaciones diofantinas",
    "url": "https://omegaup.com/arena/problem/sed",
    "history": "Escribe un programa que determine la cantidad n de soluciones enteras que tiene el sistema de ecuaciones ax + by = c, dx + ey = f. Observa que es posible que este sistema no tenga ninguna solucio\u0301n entera ( es decir n = 0) o que tenga un nu\u0301mero infinito de soluciones enteras ( en cuyo caso debes reportar n = - 1) . Por ejemplo, si a = 2, b = 1, c = 3, d = 2, e = 3, f = 1 entonces n = 1 ya que el sistema u\u0301nicamente tiene la solucio\u0301n x = 2, y = - 1.",
    "input": "Seis nu\u0301meros enteros a, b, c, d, e y f separados por espacios y todos ellos en el intervalo de - 1, 000, 000 a 1, 000, 000 ( incluye\u0301ndolos) .",
    "output": "Un nu\u0301mero entero n.",
    "note": "",
    "topics": [
      "implementation",
      "math",
      "number theory"
    ],
    "id": 1015
  },
  {
    "title": "Los caminos de Ulises",
    "url": "https://omegaup.com/arena/problem/Los-caminos-de-Ulises",
    "history": "Un di\u0301a Ulises vio a Briares y le dijo: Oye chairo, a que no sabes cua\u0301ntos caminos hay tales que no cruzan la diagonal en una cuadri\u0301cula de NxN. Y Briares le respondio\u0301: tu\u0301 tampoco. Al llegar a su casa, Briares intento\u0301 hacer un programa que responda a la pregunta de Ulises, pero al no conseguirlo decidio\u0301 pedirte ayuda. # ProblemaAyuda a Briares a resolver la pregunta de Ulises. Cua\u0301ntos caminos hay tales que no cruzan la diagonal en una cuadri\u0301cula de NxN y van de la esquina inferior izquierda a la esquina superior derecha avanzando solo hacia a la derecha y hacia arriba. ! [ ] ( https: / / upload. wikimedia. org/ wikipedia/ commons/ thumb/ a/ a0/ Catalan_ number_ 3x3_ grid_ example. svg/ 525px- Catalan_ number_ 3x3_ grid_ example. svg. png)",
    "input": "Un entero N que representa las dimensiones de la cuadri\u0301cula.",
    "output": "La cantidad de caminos que existen tales que no cruzan la diagonal en mo\u0301dulo 1 000 000 007.",
    "note": "",
    "topics": [
      "combinatorics",
      "math",
      "number theory"
    ],
    "id": 3421
  },
  {
    "title": "El agente viajero",
    "url": "https://omegaup.com/arena/problem/El-agente-viajero",
    "history": "El problema del agente viajero consiste en encontrar un recorrido que visite todos los ve\u0301rtices de una gra\u0301fica, sin repetir y a costo mi\u0301nimo. Escribe un programa que resuelva la versio\u0301n del problema en la que el agente viajero puede comenzar en cualquier ve\u0301rtice y no necesita regresar al ve\u0301rtice inicial.",
    "input": "Un entero N seguido de N \u00d7 N enteros que denotan los costos en la matriz de adyacencia de una gra\u0301fica completa de N ve\u0301rtices. Puedes suponer que 1 \u2264 N \u2264 15 y que los costos de las aristas esta\u0301n en el rango de 0 a 10^ 6.",
    "output": "El costo del recorrido o\u0301ptimo del agente viajero.",
    "note": "",
    "topics": [
      "dfs and similar",
      "math"
    ],
    "id": 8544
  },
  {
    "title": "Alejando la bomba del origen",
    "url": "https://omegaup.com/arena/problem/Alejando-la-bomba-del-origen",
    "history": "Hay N robots en la recta y una bomba en el origen: tu objetivo es usar los robots para alejar la bomba lo ma\u0301s posible del origen, sin importar si es a la derecha o a la izquierda. Cada robot cuenta con una posicio\u0301n inicial P, una cantidad de energi\u0301a E y gasta una unidad de energi\u0301a para recorrer una unidad de distancia sobre la recta. Cuando un robot alcanza la bomba, e\u0301ste puede cargarla y lleva\u0301rsela ( el robot gasta la misma cantidad de energi\u0301a caminando con o sin la bomba) ; el robot puede soltar la bomba en cualquier momento o bien, soltarla hasta que se acabe su energi\u0301a y ya no pueda avanzar ma\u0301s. Si fuera posible, otro robot puede ir a recoger la bomba en la posicio\u0301n en la que quedo\u0301 para seguir aleja\u0301ndola del origen. Los robots pueden programarse en cualquier orden. Escribe un programa que determine a cua\u0301nta distancia del origen puede alejarse la bomba si se usan los robots de manera o\u0301ptima.",
    "input": "Un entero N seguido de N parejas de enteros P, E que determinan la posicio\u0301n y energi\u0301a de cada robot. Puedes suponer que 0 \u2264 N \u2264 10, - 100 \u2264 P \u2264 + 100 y 0 \u2264 E \u2264 100.",
    "output": "Un entero positivo que sea la magnitud de la distancia con respecto al origen a la que puede alejarse la bomba.",
    "note": "",
    "topics": [
      "brute force",
      "math"
    ],
    "id": 8525
  },
  {
    "title": "Permutaciones divisibles",
    "url": "https://omegaup.com/arena/problem/Permutaciones-divisibles",
    "history": "Escribe un programa que encuentre todas las permutaciones A_ 1, A_ 2, . . . , A_ N del conjunto de si\u0301mbolos { 1, 2, . . . , N } tales que A_ i- 1 + A_ i sea divisible entre i para toda 1 < i \u2264 N. Por ejemplo, para N = 3 la u\u0301nica permutacio\u0301n de { 1, 2, 3 } que cumple estas condiciones es ( 3, 1, 2) puesto que 3+ 1 es divisible entre 2 y 1+ 2 es divisible entre 3.",
    "input": "Un entero N. Puedes suponer que 2 \u2264 N \u2264 20.",
    "output": "Las permutaciones que cumplan la condicio\u0301n, una por li\u0301nea y con sus elementos separados por un espacio.",
    "note": "",
    "topics": [
      "math",
      "dfs and similar"
    ],
    "id": 6511
  },
  {
    "title": "K-Permutaciones",
    "url": "https://omegaup.com/arena/problem/K-Permutaciones",
    "history": "Decimos que un conjunto B es una permutacio\u0301n de A si B contiene los mismos elementos de A pero en un orden distinto. Por ejemplo, ( 2, 3, 1) es una permutacio\u0301n de ( 1, 2, 3) . Una permutacio\u0301n A se considera lexicogra\u0301ficamente menor que otra permutacio\u0301n B si el primer elemento en el que difieren es menor en A. Por ejemplo ( 1, 2, 3) < ( 2, 3, 1) . Dado dos enteros N y K escribe un programa que imprima la K- e\u0301sima permutacio\u0301n del conjunto ( 1, 2, . . , N) .",
    "input": "En la primera li\u0301nea los enteros N y K.",
    "output": "Una u\u0301nica li\u0301nea con N enteros separados por un espacio: la K- e\u0301sima permutacio\u0301n de ( 1, 2, . . , N) .",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 5096
  },
  {
    "title": "Sophie y las permutaciones",
    "url": "https://omegaup.com/arena/problem/Sophie-y-las-permutaciones",
    "history": "Definamos una permuitacio\u0301n de longitud n como un arreglo p = [ p_ 1, p_ 2, . . . , p_ n] que consiste en n enteros distintos del rango 1 al n. Decimos que esta permutacio\u0301n mapea el valor 1 en el valor p_ 1, el valor 2 en el valor p_ 2 y asi\u0301 consecutivamente. Sophie aprendio\u0301 que existe la * representacio\u0301n ci\u0301clica* de una permutacio\u0301n. Un ciclo es una secuencia de nu\u0301meros de tal forma que cada elemento de la secuencia es mapeado al siguiente elemento de la secuencia ( y el u\u0301ltimo elemento de la secuencia es mapeado al primer elemento) . La * representacio\u0301n ci\u0301clica* es una representacio\u0301n de p como una coleccio\u0301n de * ciclos* que forman * p* . Por ejemplo, la permutacio\u0301n p = [ 4, 1, 6, 2, 5, 3] puede tener la siguiente representacio\u0301n ci\u0301clica: ( 142) ( 36) ( 5) . En este caso, en el primer ciclo 1 es remplazado por 4, 4 es remplazado por 2 y 2 es remplazado por 1. En el siguiente ciclo, 3 y 6 son intercambiados y en el u\u0301ltimo ciclo 5 se queda en el mismo lugar. Una permutacio\u0301n puede tener varias * representaciones ci\u0301clicas* , por eso Sophie definio\u0301 la * representacio\u0301n ci\u0301clica esta\u0301ndar* de la siguiente manera. Primero, rota los elementos de cada ciclo de tal manera que el primer elemento es el ma\u0301s grande posible. Despue\u0301s, ordena los ciclos de tal manera que queden ordenados de menor a mayor por el primer elemento de cada ciclo. Por ejemplo, en el ejemplo anterior, la * representacio\u0301n ci\u0301clica esta\u0301ndar* de [ 4, 1, 6, 2, 5, 3] es ( 421) ( 5) ( 63) . Sophie se dio cuenta que si remueve los pare\u0301ntesis de la * representacio\u0301n ci\u0301clica esta\u0301ndar* , obtiene otra permutacio\u0301n. Por ejemplo [ 4, 1, 6, 2, 5, 3] se convierte en [ 4, 2, 1, 5, 6, 3] Sophie noto\u0301 que algunas permutaciones no cambian despue\u0301s de aplicar la operacio\u0301n anterior. E\u0301lla escribio\u0301 todas las permutaciones de longitud n en orden lexicogra\u0301fico que no cambian despue\u0301s aplicar la operacio\u0301n. Desafortunadamente perdio\u0301 la lista y ahora necesita tu ayuda. Dado los enteros n y k, imprime la permutacio\u0301n que iba en la posicio\u0301n k- e\u0301sima de la lista.",
    "input": "La primera linea contiene dos enteros, n y k.",
    "output": "n enteros separados por en espacio, que representan la k- e\u0301sima permutacio\u0301n de la lista perdida.",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 5087
  },
  {
    "title": "Permutaciones de una Cadena",
    "url": "https://omegaup.com/arena/problem/Permutaciones-de-una-Cadena",
    "history": "* * Descripcio\u0301n* * En este problema el COOI te ha encargado una tarea muy importante, las contrasen\u0303as de acceso de sus servidores principales se basan en las diferentes combinaciones que puede tener una cadena de caracteres, es decir, sus permutaciones. Tu tarea es mostrar las diferentes permutaciones posibles de una cadena y el nu\u0301mero de ellas que se puede formar. Las permutaciones de un conjunto son las distintas maneras de colocar sus elementos, usando todos ellos sin repetir alguno. * * Entrada* * Una sola li\u0301nea con una cadena de caracteres en mayu\u0301sculas. * * Salida* * N li\u0301neas con cada una de las permutaciones posibles de la cadena, una li\u0301nea con un entero N que representa el numero de permutaciones de la cadena. * * Ejemplo* * * * Entrada* * ABC* * Salida* * ABCACBBACBCACABCBA6* * Limites* * cadena < = 8 caracteres",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "math",
      "dfs and similar"
    ],
    "id": 2606
  },
  {
    "title": "El pelot\u00f3n de soldados marcianos",
    "url": "https://omegaup.com/arena/problem/El-peloton-de-soldados-marcianos",
    "history": "John Carter acaba de tener su primer encuentro con los marcianos verdes, y tanto e\u0301l como los soldados que lo encontraron esta\u0301n confundidos. Tars Tarkas, el jefe de los soldados, se acerco\u0301 a saludar a John. Despue\u0301s de un cruce de gestos, Tars Tarkas ordeno\u0301 a sus soldados a acercarse. Los soldados lo hicieron de manera salvaje y desordenada, y temiendo que John se asustase, Tars Tarkas les ordeno\u0301 reagruparse. Dado que existen tres categori\u0301as de soldados, el grupo de soldados debe ordenarse de modo que los soldados de una misma categori\u0301a queden juntos ( el orden entre categori\u0301as no importa) . Ayuda a los soldados a acomodarse en una formacio\u0301n va\u0301lida usando la menor cantidad de intercambios.",
    "input": "Una cadena C con caracteres ' A' , ' B' , ' C' que denotan las categori\u0301as de los soldados en el orden actual. Puedes suponer que existe la misma cantidad de soldados de cada categori\u0301a y que la cadena tiene menos de 1000000 caracteres.",
    "output": "Un entero N que sea el nu\u0301mero mi\u0301nimo de intercambios necesarios para llegar a una formacio\u0301n va\u0301lida.",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 2420
  },
  {
    "title": "Suma de matrices rectangulares",
    "url": "https://omegaup.com/arena/problem/Suma-de-matrices-rectangulares",
    "history": "Dadas dos matrices de N filas y M columnas que se te dara\u0301n en la entrada, tu misio\u0301n es imprimir la suma de e\u0301stas.",
    "input": "En la primera li\u0301nea, dos enteros N y M que representan, respectivamente, el nu\u0301mero de filas y columnas de las matrices. Despue\u0301s, en las siguientes N li\u0301neas, M enteros que representan los elementos de las filas de la primera matriz. Despue\u0301s, en las siguientes N li\u0301neas, M enteros que representan los elementos de las fila de la segunda matriz.",
    "output": "Una matriz de N filas y M columnas que representa la suma de las dos matrices de la entrada.",
    "note": "",
    "topics": [
      "matrices",
      "math"
    ],
    "id": 16659
  },
  {
    "title": "Ultima Terna Creciente",
    "url": "https://omegaup.com/arena/problem/Ultima-Terna-Creciente",
    "history": "Solicite el enunciado al profesor",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "math",
      "matrices"
    ],
    "id": 16406
  },
  {
    "title": "Operaciones en filas y columnas sobre una matriz (reloaded)",
    "url": "https://omegaup.com/arena/problem/Operaciones-en-filas-y-columnas2",
    "history": "Un generador de enteros pseudo- aleatorios de 32 bits sin signo se puede implementar en te\u0301rminos de tres enteros A, C, X. Diremos que X es el primer nu\u0301mero aleatorio y que los siguientes nu\u0301meros los podemos generar con la instruccio\u0301n X ( A) ( X) + C. Por ejemplo, si A= 5, C= 2, X= 7 entonces 7 es el primer nu\u0301mero aleatorio, ( 5) ( 7) + 2 = 37 es el segundo nu\u0301mero aleatorio, ( 5) ( 37) + 2 = 187 es el tercer nu\u0301mero aleatorio, ( 5) ( 187) + 2 = 937 es el cuarto nu\u0301mero aleatorio, etce\u0301tera. Dados los valores de A, C, X, escribe un programa que use el generador anterior para sumarle valores a una matriz M de N \u00d7 16 enteros tambie\u0301n de 32 bits sin signo, inicialmente con ceros. Tu programa debe visitar la matriz T veces: en la primera visita la matriz debe recorrerse por filas ( de arriba para abajo, cada fila de izquierda a derecha) , en la segunda visita la matriz debe recorrerse por columnas ( de izquierda a derecha, cada columna de arriba para abajo) y asi\u0301 sucesivamente de forma alternada para las dema\u0301s visitas. Al recorrer los elementos de la matriz durante una visita, al elemento actual se le debe sumar el nu\u0301mero aleatorio actual, de modo de que al siguiente elemento se le sume el siguiente nu\u0301mero aleatorio ( el primer nu\u0301mero aleatorio a sumar es el valor inicial de X) . El generador no se debe reiniciar al terminar una visita: la siguiente visita debe usar los siguientes nu\u0301meros aleatorios. Una vez hecho lo anterior, tu programa debe ordenar ascendentemente los elementos de cada fila individual de la matriz. Finalmente, tu programa debe imprimir la suma de los elementos de cada columna individual de la matriz ( de izquierda a derecha) usando aritme\u0301tica de 32 bits sin signo.",
    "input": "Cinco enteros A, C, X, N, T. Puedes suponer que 0 \u2264 A, C, X \u2264 10^ 9, que 1 \u2264 N \u2264 1750000 y que 0 \u2264 T \u2264 40.",
    "output": "Una secuencia de 16 enteros que sean las sumas de las columnas despue\u0301s de llevar a cabo el proceso descrito.",
    "note": "",
    "topics": [
      "sortings",
      "*special",
      "matrices",
      "math"
    ],
    "id": 16197
  },
  {
    "title": "Caballo Saltar\u00edn",
    "url": "https://omegaup.com/arena/problem/Caballo-Saltarin",
    "history": "Durante el ultimo campeonato del mundo de Ajedrez, en una rueda de prensa le preguntaron al campeo\u0301n del mundo, acerca del movimiento del caballo, puesto que es el u\u0301nico capaz de resolver dicho enigma. En resumen, el caballo se puede mover en forma de * L* , avanzando 2 casillas en linea recta y girando una casilla perpindicularmente. ! [ ] ( https: / / images. chesscomfiles. com/ uploads/ v1/ images_ users/ tiny_ mce/ pdrpnht/ phpVZb3tN. png) Dado este gran descubrimiento, el Grupo Estudiantil de Ajedrez UPAEP, se cuestiona si dado un tablero de NxN, \u00bfEs posible llegar con el caballo desde cualquier punto A a un punto B?",
    "input": "La primer linea se compone de un nu\u0301mero entero N que representa la dimensio\u0301n del tablero. La segunda linea se compone de dos nu\u0301meros enteros A_ i y A_ j que representan la cordenada de inicial del caballo. La tercera linea se compone de dos nu\u0301meros enteros B_ i y B_ j que representan la cordenada de objetivo del caballo.",
    "output": "Si desde la coordenada A es posible llegar a la coordenada B imprimir \" SI\" , en caso contrario imprimir \" NO\"",
    "note": "",
    "topics": [
      "matrices",
      "implementation",
      "math"
    ],
    "id": 16192
  },
  {
    "title": "Operaciones en filas y columnas sobre una matriz",
    "url": "https://omegaup.com/arena/problem/Operaciones-en-filas-y-columnas-",
    "history": "Un generador de enteros pseudo- aleatorios de 32 bits sin signo se puede implementar en te\u0301rminos de tres enteros A, C, X. Diremos que X es el primer nu\u0301mero aleatorio y que los siguientes nu\u0301meros los podemos generar con la instruccio\u0301n X ( A) ( X) + C. Por ejemplo, si A= 5, C= 2, X= 7 entonces 7 es el primer nu\u0301mero aleatorio, ( 5) ( 7) + 2 = 37 es el segundo nu\u0301mero aleatorio, ( 5) ( 37) + 2 = 187 es el tercer nu\u0301mero aleatorio, ( 5) ( 187) + 2 = 937 es el cuarto nu\u0301mero aleatorio, etce\u0301tera. Dados los valores de A, C, X, escribe un programa que use el generador anterior para sumarle valores a una matriz M de N \u00d7 16 enteros tambie\u0301n de 32 bits sin signo, inicialmente con ceros. Tu programa debe visitar la matriz T veces: en la primera visita la matriz debe recorrerse por filas ( de arriba para abajo, cada fila de izquierda a derecha) , en la segunda visita la matriz debe recorrerse por columnas ( de izquierda a derecha, cada columna de arriba para abajo) y asi\u0301 sucesivamente de forma alternada para las dema\u0301s visitas. Al recorrer los elementos de la matriz durante una visita, al elemento actual se le debe sumar el nu\u0301mero aleatorio actual, de modo de que al siguiente elemento se le sume el siguiente nu\u0301mero aleatorio ( el primer nu\u0301mero aleatorio a sumar es el valor inicial de X) . El generador no se debe reiniciar al terminar una visita: la siguiente visita debe usar los siguientes nu\u0301meros aleatorios. Una vez hecho lo anterior, tu programa debe calcular la suma con aritme\u0301tica de 32 bits sin signo de todos los ( M[ i] [ j] ) ( i + j + 1) , donde i es el nu\u0301mero de fila y j es el nu\u0301mero de columna del elemento M[ i] [ j] de M. Las filas se numeran de 0 a N- 1 de arriba para abajo y las columnas se numeran de 0 a 15 de izquierda a derecha.",
    "input": "Cinco enteros A, C, X, N, T. Puedes suponer que 0 \u2264 A, C, X \u2264 10^ 9, que 1 \u2264 N \u2264 1750000 y que 0 \u2264 T \u2264 40.",
    "output": "Un entero que sea el valor de la suma final calculada.",
    "note": "",
    "topics": [
      "matrices",
      "math",
      "*special"
    ],
    "id": 16175
  },
  {
    "title": "Regalando palomitas",
    "url": "https://omegaup.com/arena/problem/Regalando-palomitas",
    "history": "\u00a1Felicidades! Acabas de conseguir una posicio\u0301n como jefe en un cine, y como todo buen jefe, quieres asegurarte de tener el mejor e\u0301xito que sea posible. Para tener e\u0301xito, tienes que hacer que tus clientes sean felices, asi\u0301 que se te ocurrio\u0301 la mejor idea del mundo, dar palomitas gratis. # ProblemaLas salas de cine esta\u0301n conformadas por N filas de M asientos cada una, y en cada asiento hay una persona que esta\u0301 disfrutando de la peli\u0301cula. Cada persona tiene una cierta cantidad de palomitas en el momento que decides darles las palomitas. Todas las personas van a recibir K palomitas ( si por ejemplo K = 5, entonces a cada quie\u0301n le regalas 5 palomitas) . Tu\u0301 quieres saber cua\u0301ntas palomitas tendra\u0301 cada quie\u0301n tras regalarle sus K palomitas.",
    "input": "En la primera li\u0301nea de entrada, habra\u0301 dos enteros N y M, estos siendo la cantidad de filas, y la cantidad de asientos por fila, respectivamente. En las siguientes N li\u0301neas de la entrada habra\u0301 M enteros, indicando cua\u0301ntas palomitas tiene cada persona. En la u\u0301ltima li\u0301nea, un u\u0301nico entero K, la cantidad de palomitas que le vas a regalar a cada quie\u0301n.",
    "output": "N li\u0301neas con M enteros, siendo la cantidad de palomitas que va a tener cada quie\u0301n tras regalarle sus palomitas.",
    "note": "",
    "topics": [
      "matrices",
      "math"
    ],
    "id": 15673
  },
  {
    "title": "Los n\u00fameros de Lucas",
    "url": "https://omegaup.com/arena/problem/Los-numeros-de-Lucas",
    "history": "La sucesio\u0301n de los nu\u0301meros de Lucas se define de forma recursiva como sigue: - L( 0) = 2- L( 1) = 1- L( n) = L( n- 1) + L( n- 2) para n \u2265 2Escribe un programa que lea el valor de n y calcule el valor de L( n) 1000000007.",
    "input": "Un entero n en el rango de 0 a 10^ 18.",
    "output": "El valor de L( n) 1000000007.",
    "note": "",
    "topics": [
      "dfs and similar",
      "divide and conquer",
      "dp",
      "math",
      "matrices"
    ],
    "id": 15650
  },
  {
    "title": "Cyclock",
    "url": "https://omegaup.com/arena/problem/Cyclock",
    "history": "La zona turi\u0301stica \" Time ticks\" destaca como un centro de exposicio\u0301n de distintos relojes y todo aquello que se relaciona con el tiempo. Una de sus atracciones mas interesantes es el \" Cyclock\" , que al inicio de cada semana introduce una matriz de nu\u0301meros enteros que giran en el sentido de la manecillas del reloj con cada di\u0301a que pase. Hoy se muestra el estado actual de Cyclock y quieres saber como se vera Cyclock el siguiente di\u0301a ( el di\u0301a actual no es domingo, no te asustes) . Entonces con tus conocimientos de informa\u0301tica, te has decidido obtener el estado que Cyclock tendra\u0301 en el siguiente di\u0301a.",
    "input": "La primera li\u0301nea: N y M, las dimensiones de Cyclock. Para cada una de las N li\u0301neas: M enteros.",
    "output": "El estado que Cyclock tendra\u0301 man\u0303ana.",
    "note": "",
    "topics": [
      "math",
      "matrices"
    ],
    "id": 15621
  },
  {
    "title": "Matriz suma semipositiva",
    "url": "https://omegaup.com/arena/problem/OFMI-2022-Matriz-Positiva",
    "history": "Tienes una matriz de enteros a la cual quieres aplicar cualquier nu\u0301mero de veces alguna de las siguientes operaciones: - Tomar una fila completa de la matriz y cambiar el signo de cada una de sus entradas. - Tomar una columna completa de la matriz y cambiar el signo de cada una de sus entradas. Tu objetivo es lograr que la suma de cada fila y de cada columna en la matriz sea semipositiva; es decir, mayor o igual a 0. # Implementacio\u0301nDebera\u0301s implementar la funcio\u0301n ` void matrizSumaSemipositiva( int N, int M, int matriz[ ] [ 100] ) ` que recibe como para\u0301metros N, M que indican que el taman\u0303o de la matriz es de N \u00d7 M y una matriz de taman\u0303o N \u00d7 100. * * Nota* * : La matriz tendra\u0301 taman\u0303o ` N` x` 100` por cuestiones te\u0301cnicas, pero realmente so\u0301lo tendra\u0301n valores las primeras M columnas. Para cambiar de signo una fila de la matriz, tu funcio\u0301n debera\u0301 llamar a la funcio\u0301n ` void cambiaFila( int fila) ` que recibe el i\u0301ndice ( 0 \u2264 fila < N) de la fila a cambiar. Para cambiar de signo una columna de la matriz, tu funcio\u0301n debera\u0301 llamar a la funcio\u0301n ` void cambiaColumna( int columna) ` que recibe el i\u0301ndice ( 0 \u2264 columna < M) de la columna a cambiar. # Ejemplos| | examplefilesample| | descriptionAplicando la operacio\u0301n ` cambiarColumna( 1) ` tenemos la matriz [ [ - 2, 3, 4] , [ 3, 5, 2] ] cuyas filas y columnas suman positivo. | | end# Li\u0301mites- Todos los nu\u0301meros de la matriz esta\u0301n entre - 100 y 100# Subtareas- ( 10 puntos) : N = 1, 1 \u2264 M \u2264 100- ( 30 puntos) : 1 \u2264 N, M \u2264 10- ( 40 puntos) : 1 \u2264 N, M < 100. - ( 20 puntos) : N, M = 100. Adema\u0301s, no puedes cambiar la misma fila o columna ma\u0301s de una vez. # Experimentacio\u0301nlibinteractive: downloadEl evaluador de prueba recibe el archivo ` sample. in` que contiene en la primera li\u0301nea los enteros N y M, y en las siguientes li\u0301neas la matriz. Este archivo sera\u0301 usado para mandar los para\u0301metros de la funcio\u0301n ` matrizSumaSemipositiva` . _ IMPORTANTE: _ El evaluador de prueba y el evaluador final que se usara\u0301 para calificar tu solucio\u0301n son diferentes. El evaluador de prueba tiene la depuracio\u0301n de tu solucio\u0301n y puede implementar algunas de sus funciones de distinta manera.",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "math",
      "matrices"
    ],
    "id": 15591
  },
  {
    "title": "Panel de Pon",
    "url": "https://omegaup.com/arena/problem/Panel-de-Pon",
    "history": "Panel de Pon ( \u30cf\u309a\u30cd\u30eb\u3066\u3099\u30db\u309a\u30f3 * Paneru de Pon* , conocido como * Tetris Attack* en occidente) es un juego basado en fichas del tipo \" 3 en li\u0301nea\" . El campo de juego esta\u0301 formado por una rejilla de 12 \u00d7 6 celdas donde algunas de ellas tienen fichas de distintos tipos y el jugador controla un cursor de 1 \u00d7 2 que permite intercambiar el contenido de dos celdas adyacentes. Cuando el jugador forma un segmento horizontal o vertical de tres o ma\u0301s fichas del mismo tipo, e\u0301stas desaparecen y dejan un espacio libre ( una ficha puede formar parte de un segmento horizontal y de uno vertical al mismo tiempo, y e\u0301stos desapareceri\u0301an simulta\u0301neamente) . Las fichas caen por el efecto de la gravedad cuando hay espacios libres debajo de ellas ( mientras una ficha cae, e\u0301sta no puede formar un segmento) . Es posible que un intercambio realizado por el jugador provoque un efecto en cadena que elimine fichas originalmente no afectadas por el intercambio. ! [ ejemplo] [ 1] ! [ ejemplo] [ 2] El objetivo del juego es eliminar todas fichas del campo de juego. En este problema basta realizar un u\u0301nico intecambio para lograr el objetivo. Escribe un programa que calcule la coordenada en la que debes colocar la parte izquierda del cursor para realizar tal intercambio.",
    "input": "Una matriz de 12 \u00d7 6 caracteres que denotan el campo de juego. Los espacios libres se indican con puntos y los distintos tipos de fichas se indican con di\u0301gitos del 1 al 6. Puedes suponer que la entrada no contiene fichas que deban caer antes de que el jugador realice su intercambio.",
    "output": "Dos enteros que sean las coordenadas de fila y columna en donde debes colocar la parte izquierda del cursor. Las coordenadas sobre el campo de juego coinciden con las de una matriz ti\u0301pica: la fila superior es la fila 0 y la columna de la izquierda es la columna 0. En caso de existir ma\u0301s de una solucio\u0301n, debes imprimir la de menor fila y, en caso de empate en fila, la de menor columna.",
    "note": "",
    "topics": [
      "strings",
      "matrices",
      "math"
    ],
    "id": 15541
  },
  {
    "title": "Terminando sudokus",
    "url": "https://omegaup.com/arena/problem/Termnando-sudokus",
    "history": "Chamito esta\u0301 estudiando con sus amigos, pero despue\u0301s de tanto estudiar, uno de ellos propone resolver los u\u0301ltimos movimientos de varios sudokus, es decir que en cada fila y columna falta un nu\u0301mero; quien los resuelva antes se ganara\u0301 una bolsa de canicas \ud83d\ude0e. A Chamito le gustan mucho las canicas, ayu\u0301dalo a ganar. * * \u00bfCo\u0301mo se juega al sudoku? * * Se juega en una cuadri\u0301cula de 9 x 9 espacios. Dentro de las filas y columnas hay 9 \" cuadrados\" ( compuestos de 3 x 3 espacios) . Cada fila, columna y \" cuadrado\" debe completarse con los nu\u0301meros del 1 al 9, sin repetir ningu\u0301n nu\u0301mero dentro de la fila, columna o \" cuadrado\" . ! [ enter image description here] [ 1]",
    "input": "Sudoku de 9 columnas con 9 filas, cada una con un cero \" 0\" , el cual indica el nu\u0301mero faltante; y con nu\u0301meros del 1 al 9 ( sin repetir) .",
    "output": "El sudoku completado.",
    "note": "",
    "topics": [
      "matrices",
      "math"
    ],
    "id": 15414
  },
  {
    "title": "Tiro al blanco",
    "url": "https://omegaup.com/arena/problem/Tiro-al-blanco2",
    "history": "Recientemente fui a la feria y estaba el juego del tiro al blanco, en el hay unas tablas con figuritas de metal, canicas y tornillos. Te dan un rifle con 15 tiros y debes derribar los que puedas. ! [ Tiro al blanco] ( feriante. jpg) Dado un nu\u0301mero n que representa un tablero de n x n, en el que hay una figura en cada posicio\u0301n, y despue\u0301s 15 pares de nu\u0301meros ( x, y) que representan donde pegaron los tiros; dime cuantas figuritas tire\u0301.",
    "input": "Un nu\u0301mero n, seguido de 15 pares de nu\u0301meros.",
    "output": "El nu\u0301mero de figuritas que tire\u0301.",
    "note": "",
    "topics": [
      "matrices",
      "math"
    ],
    "id": 15385
  },
  {
    "title": "La Matrix transpuesta",
    "url": "https://omegaup.com/arena/problem/La-Matrix-transpuesta",
    "history": "Se tiene una matriz| | | | | \u2013| \u2013| \u2013| | 1 | 2 | 3 | | 4 | 5 | 6 | | 7 | 8 | 9 | Crea una funcio\u0301n en Python que retorne la matriz transpuesta| | | | | \u2013| \u2013| \u2013| | 1 | 4 | 7 | | 2 | 5 | 8 | | 3 | 6 | 9 | # Nota",
    "input": "Una lista de listas| | input[ [ 1, 2, 3] , [ 4, 5, 6] , [ 7, 8, 9] ] | | output[ [ 1, 4, 7] , [ 2, 5, 8] , [ 3, 6, 9] ] | | end",
    "output": "",
    "note": "",
    "topics": [
      "matrices",
      "math"
    ],
    "id": 15180
  },
  {
    "title": "Contando rectangulos",
    "url": "https://omegaup.com/arena/problem/Contando-rectangulos",
    "history": "Se te dara\u0301n N recta\u0301ngulos descritos por las coordenadas enteras ( de fila y columna) de dos de sus esquinas opuestas. Debera\u0301s responder M peticiones, donde cada peticio\u0301n consta de las coordenadas entera de un punto y para el que debera\u0301s responder cua\u0301ntos recta\u0301ngulos incluyen ese punto.",
    "input": "Un nu\u0301mero N seguido de N parejas de coordenadas enteras ( f_ 1, c_ 1) , ( f_ 2, c_ 2) que corresponden con las esquinas opuestas de un recta\u0301ngulo. Posteriormente, un nu\u0301mero M seguido de M coordenadas enteras ( f, c) que denotan respectivamente las ubicaciones de los puntos de las M peticiones.",
    "output": "Para cada peticio\u0301n, una li\u0301nea con el nu\u0301mero de recta\u0301ngulos que incluyen el punto respectivo.",
    "note": "",
    "topics": [
      "matrices",
      "implementation",
      "math"
    ],
    "id": 14755
  },
  {
    "title": "Volteando una Imagen",
    "url": "https://omegaup.com/arena/problem/Volteando-una-Imagen",
    "history": "Dada una matriz cuadrada de taman\u0303o ` n x n` binaria ( de ` 0` s y ` 1` s) ` image` , voltee la imagen * * horizontalmente* * , y retorne el resultado de la imagen * * invertida* * Voltear una imagien * * horizontalmente* * significa que cada fila de la imagen esta en orden inverso: - Por ejemplo, voltear ` [ 1, 1, 0] ` horizontalmente resulta en ` [ 0, 1, 1] ` * * Invertir* * una imagen significa que cada ` 0` es reemplazado por un ` 1` y cada ` 1` por un ` 0` : - Por ejemplo, invertir ` [ 0, 1, 1] ` resulta en ` [ 1, 0, 0] ` La forma del input es: \u201c` < Linea 1: numero de filas> < Linea 2: numero de columnas> < Linea 3: lista de numeros separados por espacios representando los elementos de la matriz> \u201c` * * Ejemplo 1: * * \u201c` Input: 331 1 0 1 0 1 0 0 0Output: 1 0 0 0 1 0 1 1 1Explanation: La primera matriz es: [ 1, 1, 0] [ 1, 0, 1] [ 0, 0, 0] Al voltearla horizontalmente se convierte en: [ 0, 1, 1] [ 1, 0, 1] [ 0, 0, 0] Al invertirla obtenemos: [ 1, 0, 0] [ 0, 1, 0] [ 1, 1, 1] Que es exactamente: 1 0 0 0 1 0 1 1 1\u201c`",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "matrices",
      "math"
    ],
    "id": 14651
  },
  {
    "title": "Nidos de tortuga",
    "url": "https://omegaup.com/arena/problem/Nidos-de-tortuga",
    "history": "Ha llegado el verano, y Mili ha decidido ir a un campamento en la playa. Llegando a la playa se da cuenta que hay personas que roban los nidos de tortugas marinas, asi\u0301 que se propuso hacer un modelo de una trampa anti- ladrones para proteger los nidos de tortuga. Ahora lo que falta es saber cuantas trampas necesita elaborar, pero la playa es muy grande para recorrerla a pie, asi\u0301 que ha capturado una imagen ae\u0301rea de la parte de arena donde es posible que se encuentren los nidos, y te ha pedido que hagas un programa que analice la imagen dada y diga el nu\u0301mero de nidos de tortuga que hay en ese espacio.",
    "input": "Se te dara\u0301 n y m, el largo y ancho de la imagen, en las siguientes n li\u0301neas vendra\u0301n m caracteres, ya sea ` ' o' ` o ` ' x' ` . Unnido de tortuga solo puede estar representado de la siguiente manera: ! [ enter image description here] [ 1] \u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014-",
    "output": "Imprime el nu\u0301mero de nidos de tortuga que hay en la imagen.",
    "note": "",
    "topics": [
      "matrices",
      "math"
    ],
    "id": 14299
  },
  {
    "title": "Anuncio costoso",
    "url": "https://omegaup.com/arena/problem/Anuncio-costoso",
    "history": "La publicidad cada vez es ma\u0301s cara, por tu suerte tu eres duen\u0303o de la compan\u0303i\u0301a ma\u0301s exitosa de publicidad en todo Times Triangle. En esta ocasio\u0301n tienes una pantalla representada como una matriz de N x N caracteres ( 1 \u2264 N \u2264 1000) . Cada uno puede ser . o # donde . significa un pixel blanco y # un pixel negro. Se veri\u0301a de la siguiente manera: | | input6# # . . . . . . . . # . . # . . # . . # # # # # . . . # # # . . . . # # | | endTu tarea es encontrar el a\u0301rea ma\u0301s grande de pi\u0301xeles negros que este\u0301n unidos, ya que esto tiene un precio ma\u0301s elevado. Dos pi\u0301xeles esta\u0301n unidos, cuando estos compartenal menos uno de sus laterales ( arriba, abajo, izquierda, derecha) . Adema\u0301s, debes calcular el peri\u0301metro de esta a\u0301rea. Si dos a\u0301reas son del mismo taman\u0303o, debes seleccionar la que tenga elperi\u0301metro ma\u0301s pequen\u0303o, porque de esta forma se disminuye el costo de usar pantallas demasiado largas y angostas.",
    "input": "En la primer li\u0301nea recibes un entero N. Las siguientes N li\u0301neas recibes N caracteres seguidos que pueden ser . o #",
    "output": "Dos enteros, el a\u0301rea y el perime\u0301tro",
    "note": "",
    "topics": [
      "matrices",
      "math"
    ],
    "id": 14293
  },
  {
    "title": "PRUEBA DE TRIANGULOS",
    "url": "https://omegaup.com/arena/problem/PRUEBA-DE-TRIANGULOS",
    "history": "El peri\u0301metro de un tria\u0301ngulo con aristas de largo a, b, c es a+ b+ c. Tienes varias palos de diferentes longitudes. Regresa el ma\u0301ximo peri\u0301metro posible de un tria\u0301ngulo que puede ser construido con los palos que tienes a tus disposicio\u0301n. Cada lado del tria\u0301ngulo debe ser construido usando un so\u0301lo palo. Tampoco puedes romper los palos existentes. Regresa - 1 si el tria\u0301ngulo no puede ser construido. # NotaPuedes construir un tria\u0301ngulo con aristas de largo x \u2264 y \u2264 y si y so\u0301lo si x + y z",
    "input": "La primer li\u0301nea de entrada contendra\u0301 el nu\u0301mero 3 \u2264 N \u2264 50 de elementos. La segunda li\u0301nea contendra\u0301 los 1 \u2264 N_ i \u2264 1000 elementos separados por un espacio. | | input62 3 2 3 2 4| | output10| | end",
    "output": "",
    "note": "",
    "topics": [
      "math",
      "matrices"
    ],
    "id": 14281
  },
  {
    "title": "PARCIAL 2 COMI C AEDD 2021",
    "url": "https://omegaup.com/arena/problem/PARCIAL-2-COMI-C-AEDD-2021",
    "history": "Dada una matriz de * * N* N* * elementos, siendo 1< = N< = 100, encontrar * * la cantidad de filas* * que tienen sus elementos ordenados ascendentemente, la * * cantidad de columnas* * con todos sus elementos iguales y la * * posicio\u0301n del menor valor* * de la diagonal principal.",
    "input": "La entrada consta de un nu\u0301mero * * N ( 3< = N< = 100) * * indicando el taman\u0303o de la matriz cuadrada. Luego se ingresara\u0301n * * N* N* * nu\u0301meros, cada uno correspondiente a un elemento de la matriz.",
    "output": "Se debera\u0301n imprimir * * tres nu\u0301meros separados por un espacio* * . El * * primero* * con la cantidad de filas que tienen sus elementos ordenados ascendentemente; el * * segundo* * con la cantidad de columnas con todos sus elementos iguales; y el * * tercero* * sera\u0301 la fila correspondiente del menor valor de la diagonal principal ( si hay valores repetidos mostrar la fila menor) .",
    "note": "",
    "topics": [
      "math",
      "matrices"
    ],
    "id": 14280
  },
  {
    "title": "PARCIAL 2 COM A AEDD 2021",
    "url": "https://omegaup.com/arena/problem/PARCIAL-2-COM-A-AEDD-2021",
    "history": "La * * traza* * de una matriz cuadrada es la suma de todos los valores de su * * diagonal principal* * ( que abarca todos los * * elementos diagonales* * que esta\u0301n desde la esquina superior izquierda, hasta la esquina inferior derecha) . Dada una matriz de * * N* N* * elementos, siendo * * 1< = N< = 100* * , informar * * la traza y la cantidad de filas* * que contengan elementos repetidos.",
    "input": "La entrada consta de un nu\u0301mero * * N* * indicando el taman\u0303o de la matriz cuadrada. Luego se ingresara\u0301n * * N* N* * nu\u0301meros, cada uno correspondiente a un elemento de la matriz. La matriz estara\u0301 compuesta de elementos * * Ni* * . * * 1< = Ni< = 100* *",
    "output": "Se debera\u0301 imprimir dos nu\u0301meros separados por un espacio. El primero consiste en la traza de la matriz y el segundo sera\u0301 el nu\u0301mero de filas que contengan elementos repetidos.",
    "note": "",
    "topics": [
      "matrices",
      "math"
    ],
    "id": 14277
  },
  {
    "title": "Parcial 2 COM B AEDD 2021",
    "url": "https://omegaup.com/arena/problem/Parcial-2-COM-B-AEDD-2021",
    "history": "Dada una matriz cuadrada de * * N* N* * elementos, siendo 1< = N< = 100, encontrar el * * promedio de todos los valores pertenecientes a la diagonal principal y secundaria ( en los casos donde se superpongan, tomar una ocurrencia del valor superpuesto) * * , como asi\u0301 tambie\u0301n determinar si la * * parte entera* * de dicho valor se encuentra en alguna de dichas diagonales.",
    "input": "La entrada consta de un nu\u0301mero * * N ( 3< = N< = 100) * * indicando el taman\u0303o de la matriz cuadrada. Luego se ingresara\u0301n * * N* N ( 0< = N< 100) * * nu\u0301meros, cada uno correspondiente a un elemento de la matriz.",
    "output": "Se debera\u0301n imprimir * * dos nu\u0301meros, separados por un espacio* * . El primero consiste en el * * promedio de todos los valores que se encuentran en las diagonales principal y secundaria, con dos decimales de precisio\u0301n* * . El segundo es un 1 si la parte entera del promedio forma parte de las diagonales de la matriz o 0 en otro caso.",
    "note": "",
    "topics": [
      "math",
      "matrices"
    ],
    "id": 14272
  },
  {
    "title": "Escalera de Ceros",
    "url": "https://omegaup.com/arena/problem/Escalera-de-Ceros",
    "history": "Solicite la descripcio\u0301n de este problema a su profesor.",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "math",
      "matrices"
    ],
    "id": 14220
  },
  {
    "title": "Concentricidad y Paridad",
    "url": "https://omegaup.com/arena/problem/Concentricidad-y-Paridad",
    "history": "Solicite la descripcio\u0301n de este problema a su profesor.",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "matrices",
      "math"
    ],
    "id": 14216
  },
  {
    "title": "Goteando un lienzo",
    "url": "https://omegaup.com/arena/problem/Goteando",
    "history": "Un lienzo sera\u0301 una matriz de N\u00d7 N sobre el cua\u0301l caera\u0301n G gotas de tinta negra, una por una. Cada que cae una gota en una posicio\u0301n dada, esta posicio\u0301n se * ennegrece* un poco ma\u0301s, hasta 3 niveles de intensidad. Debes mostrar co\u0301mo quedara\u0301 el lienzo al final del goteo. Una posicio\u0301n donde no ha cai\u0301do ninguna gota sera\u0301 representada por el si\u0301mbolo \" . \" ( punto) . Conforme caigan gotas en una misma posicio\u0301n, el si\u0301mbolo utilizado sera\u0301 \" - \" ( guio\u0301n) , luego \" + \" , y hasta llegar a \" # \" .",
    "input": "Las primeras dos li\u0301neas contienen los enteros N y G, respectivamente. Seguidas de G lineas, cada una con una pareja de enteros r, c separados por espacio, representando el renglo\u0301n y columna del lienzo donde cae una gota. La numeracio\u0301n de renglones y columnas empieza desde 0, y puedes suponer que 1\u2264 N \u2264 30 y que 1\u2264 G \u2264 N^ 2.",
    "output": "La matriz de N\u00d7 N, con sus si\u0301mbolos separados por espacio.",
    "note": "",
    "topics": [
      "math",
      "matrices",
      "strings"
    ],
    "id": 13976
  },
  {
    "title": "Vamos a la Namekusei",
    "url": "https://omegaup.com/arena/problem/Vamos-a-la-Namekusei",
    "history": "En el pai\u0301s \" Namekusei\" existen 10 casas, numeradas de 0 al 9, y algunas de esas casas esta\u0301n unidas por carreteras. Dadas todas las carreteras que hay en la Namekusei, escribe un programa que imprima todas las casas con la cua\u0301l esta\u0301 conectada directamente una casa. ! [ Texto alternativo] ( imagen1. jpg)",
    "input": "La primera linea sera\u0301 un entero n, indicando la cantidad de carreteras en Namekusei. Las siguientes n li\u0301neas contienen dos nu\u0301meros a y b , indicando que hay una carretera conectando a la casa a con la casa b y viceversa. La siguiente li\u0301nea es una pregunta, que esta\u0301 representada por un numero p. El programa debe imprimir en orden ascendente el numero de todas las casas con la cua\u0301l esta\u0301 conectado p",
    "output": "Imprimir en orden ascendente el numero de todas las casa con la cua\u0301l esta\u0301 conectado p",
    "note": "",
    "topics": [
      "matrices",
      "dp",
      "math",
      "graph matchings",
      "graphs"
    ],
    "id": 13925
  },
  {
    "title": "occ21sfinpn22",
    "url": "https://omegaup.com/arena/problem/occ21sfinpn22",
    "history": "# \u00bfPor do\u0301nde fue? Martina la cucaracha esta\u0301 originalmente en una celda ( x, y) del plano cartesiano. Se desplaza hacia una celdavecina horizontal o verticalmente, hacia la derecha ( D) , izquierda ( I) , arriba ( A) o abajo ( B) . Haga un programa que recibacomo entrada la posicio\u0301n inicial de Martina, su nueva posicio\u0301n y que determine la direccio\u0301n del movimiento que hizo. # Ejemplos| | input5 6 5 7| | outputA| | input- 3 - 2 - 4 - 2| | outputI| | end",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "math",
      "matrices"
    ],
    "id": 13857
  },
  {
    "title": "El juego de Jenga",
    "url": "https://omegaup.com/arena/problem/El-juego-de-Jenga",
    "history": "El popular juego de Jenga consiste en retirar una a una las piezas de una torre. Tu labor sera\u0301 escribir un programa que recree lo que sucederi\u0301a si se te proporciona una descripcio\u0301n de la torre y el orden en el que el jugador desea retirar las fichas. El estado de la torre esta\u0301 descrito por una matriz de 10 \u00d7 10 caracteres que puede contener letras mayu\u0301sculas ( denotando la seccio\u0301n de una pieza identificada por esa letra) o caracteres ` . ` ( denotando la ausencia de una pieza) . Todas las piezas son horizontales y pueden tener entre 1 y 10 secciones. El jugador intentara\u0301 retirar N piezas de la torre ( en cierto orden dado) y la torre colapsara\u0301 si cualquier pieza se queda sin al menos una seccio\u0301n de soporte contiguo debajo de ella ( ya sea de otras piezas o de suelo; la torre no podra\u0301 caer de pie) . Tu programa debera\u0301 simular la remocio\u0301n de las piezas que no provoquen un colapso y debera\u0301 detenerse si una pieza no puede ser removida sin colapsar la torre. Tu programa tambie\u0301n debera\u0301 imprimir el estado final de la torre ( sin incluir la remocio\u0301n que provoque el colapso) .",
    "input": "Una matriz de 10 \u00d7 10 caracteres seguida de un entero N y N letras mayu\u0301sculas que denoten el orden en el que las piezas sera\u0301n removidas. Puedes suponer que nunca se retira una pieza inexistente.",
    "output": "Para cada pieza que pudo removerse, imprimir el mensaje ` Pieza # removida` donde # es la letra que la identifica. Si una pieza no pudo removerse, imprimir el mensaje ` Pieza # no puede removerse` e ignorar las piezas restantes. Finalmente, una matriz de 10 \u00d7 10 caracteres que denoten el estado final de la torre.",
    "note": "",
    "topics": [
      "matrices",
      "implementation",
      "math",
      "strings"
    ],
    "id": 13810
  },
  {
    "title": "Apuntadores y memoria din\u00e1mica",
    "url": "https://omegaup.com/arena/problem/Apuntadores",
    "history": "# APUNTADORES O\u0301 PUNTEROSCuando se declara una variable, el compilador reserva un espacio de memoria para ella y asocia el nombre de esta a la direccio\u0301n de memoria desde donde comienzan los datos de esa variable. Las direcciones de memoria se suelen describir como nu\u0301meros en hexadecimal. Un apuntador es una variable cuyo valor es la direccio\u0301n de memoria de otra variable. Se dice que un apuntador \u201capunta\u201d a la variable cuyo valor se almacena a partir de la direccio\u0301n de memoria que contiene el apuntador. Por ejemplo, si un apuntador * p* almacena la direccio\u0301n de una variable * x* , se dice que \u201c* p* apunta a * x* \u201d. # DECLARACIO\u0301N DE APUNTADORESPara declarar un apuntador se especifica el tipo de dato al que apunta, el operador \u2018* \u2019, y el nombre del apuntador. La sintaxis es la siguiente: < * tipo de dato apuntado* > * < * identificador del apuntador* > ; A continuacio\u0301n se muestran varios ejemplos: ! [ enter image description here] [ 1] # APUNTADORES Y MEMORIA! [ enter image description here] [ 2] ! [ enter image description here] [ 3] # APUNTADORES Y VECTORESApuntadores y los vectores en memoria. ! [ enter image description here] [ 4] ! [ enter image description here] [ 5] # RECORRIDO DE LOS VECTORES CON APUNTADORESPodemos recorrer un vector utilizando un apuntador: ! [ enter image description here] [ 6] # VECTORES DINA\u0301MICOSHasta ahora el taman\u0303o de los vectores debi\u0301a ser fijo y conocido en tiempo de compilacio\u0301n, es decir, no podi\u0301amos alargar o acortar los vectores para que se adaptaran al taman\u0303o de una serie de datos * durante la ejecucio\u0301n del programa* . C permite una gestio\u0301n dina\u0301mica de la memoria, es decir, solicitar memoria para albergar el contenido de estructuras de datos cuyo taman\u0303o exacto no conocemos hasta que se ha iniciado la ejecucio\u0301n del programa. Afortunadamente, podemos definir, durante la ejecucio\u0301n del programa, vectores cuyo taman\u0303o es exactamente el que el usuario necesita. Utilizaremos para ello dos funciones de la biblioteca esta\u0301ndar ( disponibles incluyendo la cabecera * < stdlib. h> * ) : - * malloc* ( abreviatura de \u00abmemory allocate\u00bb, que podemos traducir por \u00abreservar memoria\u00bb) : solicita un bloque de memoria del taman\u0303o que se indique ( en bytes) ; - * free* ( que en ingle\u0301s significa \u00abliberar\u00bb) : libera memoria obtenida con * malloc* , es decir, la marca como disponible para futuras llamadas a * malloc* . Este programa se utiliza para crear un vector dina\u0301mico: ! [ enter image description here] [ 7] Recuerda: * tu programa debe efectuar una llamada a free por cada llamada a malloc* . Es * muy* importante. # CADENAS DINA\u0301MICAS! [ enter image description here] [ 8] # MATRICES DINA\u0301MICASPodemos extender la idea de los vectores dina\u0301micos a matrices dina\u0301micas. Pero el asunto se complica notablemente: se gestiona la matriz como como un \u00abvector dina\u0301mico de vectores dina\u0301micos\u00bb. En primer te\u0301rmino se requiere utilizar un apuntador doble, que se declara de la siguiente manera: int * * p; Es un puntero que almacena la direccio\u0301n de memoria de otro puntero, es decir, apunta a otro puntero. Para crear una matriz con memoria dina\u0301mica compuesta por * filas* y * columnas* de nu\u0301meros flotantes. Se solicita espacio para un nu\u0301mero de * filas* de punteros a float. Supongamos que * filas* vale 4. Tras esa peticio\u0301n, tenemos la siguiente asignacio\u0301n de memoria para * m* : ! [ enter image description here] [ 9] El vector * m* es un vector dina\u0301mico cuyos elementos son punteros ( del tipo float ) . De momento, esos punteros no apuntan a ninguna zona de memoria reservada. Se asigna un vector dina\u0301mico a cada elemento del vector * m* . El efecto es proporcionar un bloque de memoria para cada celda de m. ! [ enter image description here] [ 10] ! [ enter image description here] [ 11] # MATRICES DINA\u0301MICAS OPCIO\u0301N 2! [ enter image description here] [ 12] ! [ enter image description here] [ 13]",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "matrices",
      "math",
      "implementation"
    ],
    "id": 13782
  },
  {
    "title": "Examen07-07-21",
    "url": "https://omegaup.com/arena/problem/Examen07-07-21",
    "history": "Solicite la descripcio\u0301n del problema al profesor.",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "matrices",
      "implementation",
      "math"
    ],
    "id": 13537
  },
  {
    "title": "Directorio Descompuesto",
    "url": "https://omegaup.com/arena/problem/Directorio-Descompuesto",
    "history": "Pedrito utiliza mucho su aplicacio\u0301n de contactos para realizar llamadas con sus amigos y familiares. Una funcionalidad importante de la aplicacio\u0301n es poder sugerir al usuario contactos cuyos nombres coincidan con las letras presionadas en el teclado nume\u0301rico de la aplicacio\u0301n. La siguiente imagen es del teclado nume\u0301rico de la aplicacio\u0301n de contactos: ! [ Teclado nume\u0301rico original] [ 1] Pedrito nos da el siguiente ejemplo utilizando su directorio de contactos: - LUIS- JUDITH- ULISESSi el Pedrito ingreso\u0301 con el teclado * * 58* * , la aplicacio\u0301n debe de sugerir 2 contactos LUIS y JUDITH. Debido a que las letras del * * 5* * son: * J, K, L* y del * * 8* * son: * T, U, V* unas de las posibles combinaciones son * JU* y * LU* que coincide con las dos primeras letras de los contactos * * LU* * IS y * * JU* * DITH. El contacto de ULISES no es sugerido debido a que el orden de la secuencia de nu\u0301meros importa y debe de ser respetada. La semana pasada Pedrito actualizo\u0301 el sistema operativo de su tele\u0301fono. Y recientemente se ha dado cuenta que su aplicacio\u0301n de contactos tiene un * bug* . Despue\u0301s de la actualizacio\u0301n, el teclado nume\u0301rico cambia de forma aleatoria. Estos son algunos ejemplos: ! [ Teclados nume\u0301ricos descompuestos] [ 2] Pedrito pidio\u0301 tu ayuda para saber si una combinacio\u0301n de di\u0301gitos pueden sugerirle un determinado nombre de contacto.",
    "input": "En la primer li\u0301nea un nu\u0301mero entero N que representa las asignaciones de di\u0301gitos y letras del teclado nume\u0301rico. Cada pareja N_ i se compone de un di\u0301gito del teclado D, y una cadena de letras mayu\u0301sculas S. Despue\u0301s la siguiente li\u0301nea, es un nu\u0301mero entero Q que representa el nu\u0301mero de parejas con las que ayudaras a Pedrito. Las siguientes Q_ i parejas son una secuencia de di\u0301gitos P, y el un nombre del contacto W.",
    "output": "Por cada pareja Q_ i debera\u0301s mostrar \" SI\" si\u0301 la combinacio\u0301n de di\u0301gitos P_ i puede sugerir el nombre W_ i. En caso contrario mostrar \" NO\" .",
    "note": "",
    "topics": [
      "strings",
      "math",
      "implementation",
      "matrices"
    ],
    "id": 13464
  },
  {
    "title": "C\u00f3digo Espir\u00e1lido",
    "url": "https://omegaup.com/arena/problem/Codigo-Espiralido",
    "history": "Rudolf es un ha\u0301bil explorador y cazador de tesoros. Un di\u0301a en una de sus investigaciones encontro\u0301 un pergamino muy peculiar, cerca de la zona arqeolo\u0301gica en la cual vivieron los antiguos _ espira\u0301lidos_ , una civilizacio\u0301n que adoraba las espirales. Al examinar el pergamino, Rudolf se dio\u0301 cuenta que lo que teni\u0301a en manos era un co\u0301digo el cual le paracio\u0301 muy interesante: ! [ ] ( image. png) En el co\u0301digo se pueden observar varios si\u0301mbolos que Rudolf ya habi\u0301a identificado antes. Segu\u0301n sus investigaciones, existen 3 tipos de si\u0301mbolos: V, A y R. Agrupando estos si\u0301mbolos se pueden generar nu\u0301meros enteros. Los espira\u0301lidos acostumbraban expresar nu\u0301meros muy grandes acomodando los grupos de si\u0301mbolos en una cuadri\u0301cula y luego recorriendola en un orden en espiral. Ayuda a Rudolf a descifrar el nu\u0301mero representado en el pergamino encontrado en la zona arqeolo\u0301gica.",
    "input": "Se pide ingresar el nu\u0301mero de renglones y culumnas encontrados en el pergamino ( 3 \u2264 n, m \u2264 1000) , asi\u0301 como los grupos de si\u0301mbolos escritos ( 1 \u2264 s \u2264 25) .",
    "output": "el nu\u0301mero correspondiente al pergamino descifrado. | | input3 3V VV VVVVVVV A VAVVA VVVA VVVVA| | output123698745| | descriptionEl pergamino contiene 9 grupos de si\u0301mbolos ( 3 renglones y 3 columnas) , al descifrarlos y recorrerlos en espiral se obtiene la expresio\u0301n nume\u0301rica. | | end| | input4 5V VV VVV VVVV AVA VVA VVVA VVVVA AAVAA VVAA VVVAA VVVVAA AAAVAAA VVAAA VVVAAA VVVVAAA R| | output1234510152019181716116789141312| | descriptionEl pergamino contiene 20 grupos de si\u0301mbolos ( 4 renglones y 5 columnas) , al descifrarlos y recorrerlos en espiral se obtiene la expresio\u0301n nume\u0301rica. | | end",
    "note": "",
    "topics": [
      "matrices",
      "math"
    ],
    "id": 13441
  },
  {
    "title": "Jebus Reburujado",
    "url": "https://omegaup.com/arena/problem/Jebus-Reburujado",
    "history": "# ProblemaJebus tiene una matriz de n* n, ha decidido ordenar los valores de la matriz de una forma extran\u0303a, ordenara los nu\u0301meros de menor a mayor en diagonales como se muestra en los ejemplos. Cada valor de la matriz puede ser hasta 10< sup> 9< / sup>",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "matrices",
      "math"
    ],
    "id": 13340
  },
  {
    "title": "Mayor por fila en matriz",
    "url": "https://omegaup.com/arena/problem/Mayor-por-fila-en-matriz",
    "history": "Este es un problema sencillo: dada una matriz de n\u00d7m enteros, tendra\u0301s que imprimir n enteros a_ 1, a_ 2, a_ 3, . . . , a_ n, donde a_ i representa el nu\u0301mero mayor de la fila i de la matriz.",
    "input": "En la primera li\u0301nea los enteros n y m ( 1\u2264n, m\u22641000) , que representan las dimensiones de la matriz. En la segunda li\u0301nea recibira\u0301s n\u00d7m enteros: la matriz. Cada nu\u0301mero de la matriz podra\u0301 tomar un valor entre \u2212100000 y 100000, inclusive.",
    "output": "Imprime n enteros a_ 1, a_ 2, a_ 3, . . . a_ n, donde a_ i representa el nu\u0301mero mayor de la fila i de la matriz.",
    "note": "",
    "topics": [
      "matrices",
      "math"
    ],
    "id": 13191
  },
  {
    "title": "Matriz transpuesta o no transpuesta",
    "url": "https://omegaup.com/arena/problem/Matriz-transpuesta-o-no-transpue",
    "history": "Realice un programa que lea una matriz dina\u0301mica de * * * N* * * x * * * M* * * y cree su matriz traspuesta, en caso de no ser una matriz transpuesta debera\u0301s mostrar la matriz original junto con un mensaje que diga \" MATRIZ NO TRANSPUESTA\" , sin comillas. NOTA: La Matriz nunca sera\u0301 mayor a 50* 50",
    "input": "En la primera li\u0301nea el nu\u0301meros de filas, en la segunda li\u0301nea el nu\u0301mero de columnas",
    "output": "Debes de imprimir la matriz transpuesta en caso de que lo sea, por otro lado, si esta no es transpuesta mostrar el mensaje mencionado con anterioridad.",
    "note": "",
    "topics": [
      "math",
      "matrices"
    ],
    "id": 13113
  },
  {
    "title": "Matriz solo pares",
    "url": "https://omegaup.com/arena/problem/Matriz-solo-pares",
    "history": "Leer valores enteros de un nu\u0301mero de filas m, y un nu\u0301mero de columnas n y llenar una matriz de m x n con valores enteros, debera\u0301 imprimir el contenido en forma de matriz, acompan\u0303ando con un asterisco aquellos nu\u0301meros que sean pares. # NotaPuedes construir un tria\u0301ngulo con * de largo x segu\u0301n la fila",
    "input": "Nu\u0301mero de filas mNu\u0301mero de columnas nLos valores contenidos en la matriz sera\u0301n valores enteros| | input3 411 10 32 3356 89 16 9543 75 67 12| | outputTaman\u0303o de la Matriz: 3 x 4Nu\u0301meros pares marcados con un asterisco en la matriz son: 11 * 10 * 32 33* 56 89 * 16 9543 75 67 * 12| | end",
    "output": "",
    "note": "",
    "topics": [
      "matrices",
      "math"
    ],
    "id": 12932
  },
  {
    "title": "Comfortable Cows",
    "url": "https://omegaup.com/arena/problem/Comfortable-Cows",
    "history": "El campo de pasteo del Granjero John se puede considerar una cuadri\u0301\u00adcula de dos dimensiones de \" celdas\" cuadradas ( piense en un gran tablero de ajedrez) . Inicialmente, el campo esta\u0301 vaci\u0301o. El Granjero John an\u0303adira\u0301 N ( 1 \u2264 N \u2264 10^ 5) vacas al campo, una por una. La i- e\u0301sima vaca ocupara\u0301 la celda ( x_ i, y_ i) y es distinta a todas la celdas ocupadas por todas las dema\u0301s vacas ( 0 \u2264 x_ i , y_ i \u2264 1000) . Se dice que una vaca esta\u0301 \" co\u0301moda\" si es adyacente horizontal o verticalmente a exactamente otras 3 vacas. El Granjero John esta\u0301 interesado en contar las vacas co\u0301modas en su campo. # ProblemaPara cada i en el rango [ 1, N] , imprime como salida el nu\u0301mero total de vacas co\u0301modas despue\u0301s que la vaca i- e\u0301sima se an\u0303ade al campo.",
    "input": "La primera li\u0301nea contiene un solo entero N. Cada una de las siguientes N li\u0301\u00adneas contiene dos enteros separados por espacios, indicando las coordenadas ( x, y) de la celda de una vaca. Se garantiza que todas las celdas son distintas.",
    "output": "La i- e\u0301sima li\u0301nea de la salida debe contener el nu\u0301mero total de vacas co\u0301modas despue\u0301s que i vacas son an\u0303adidas al campo.",
    "note": "",
    "topics": [
      "matrices",
      "math",
      "implementation"
    ],
    "id": 12890
  },
  {
    "title": "Arte moderno",
    "url": "https://omegaup.com/arena/problem/S2-2021-Senior-CCC",
    "history": "Un artista contempora\u0301neo tiene una forma u\u0301nica de crear patrones cuadriculados. La idea es usar un lienzo de M por N que inicialmente es totalmente negro. El artista hace una eleccio\u0301n repetitivamente donde escoge una fila o una columna y le pasa su pincel ma\u0301gico a dicha fila o columna. El pincel cambia el color de cada fila o columna de negro a dorado o de dorado a negro. Dadas las elecciones del artista, tu tarea es determinar cua\u0301nto dorado aparece en el patro\u0301n cuadriculado luego de aplicarle las elecciones del artista.",
    "input": "La primera li\u0301nea contiene un entero positivo M. La segunda li\u0301nea contiene un entero positivo N. La tercera li\u0301nea contiene un entero positivo K. El resto de la entrada, contiene K li\u0301neas que representan las elecciones del artista. Cada una de estas li\u0301neas sera\u0301 una letra ' R' seguida de un espacio y luego un entero que representa el nu\u0301mero de Fila, o una letra ' C' seguida de un espacio por un entero que representa el nu\u0301mero de la columna. Las filas esta\u0301n numeradas de arriba a abajo del 1 al M. Las columnas esta\u0301n numeradas de izquierda a derecha del 1 al N.",
    "output": "Un entero no- negativo que es igual al nu\u0301mero de casillas que esta\u0301n pintadas de dorado en el patro\u0301n cuadriculado determinadas por las elecciones del artista.",
    "note": "",
    "topics": [
      "math",
      "matrices"
    ],
    "id": 12860
  },
  {
    "title": "Filas repetidos",
    "url": "https://omegaup.com/arena/problem/Filas-repetidos",
    "history": "Luis no es muy bueno para las matema\u0301ticas y esta buscando que le ayudes a escribir un programa que determine si una matriz cuenta con filas repetidas.",
    "input": "La primer linea de entrada es un par de enteros F y C que presentan el taman\u0303o de la matriz, y a partir de la segunda linea las F filas con las C columnas de datos con la que cuenta la matriz.",
    "output": "Debe mostrar si la matriz cuenta con renglones repetidos y en que numero de renglo\u0301n fueron encontradas, en caso contrario debera indicar el taman\u0303o de la matriz como lo indica el ejemplo.",
    "note": "",
    "topics": [
      "matrices",
      "math"
    ],
    "id": 12519
  },
  {
    "title": "Haciendo Jueguito",
    "url": "https://omegaup.com/arena/problem/Haciendo-Jueguito",
    "history": "# DescripcionCarlitos es un chico de 14 an\u0303os que juega en las inferiores de un club santafesino, hace poco descubrio\u0301 los videos de Maradona, Ronaldinho y Messi en YouTube, y quedo\u0301 fascinado vie\u0301ndolos hacer \" jueguitos\" ( cuando los futbolistas le pegan a la pelota con un pie\u0301 u el otro, o con la cabeza, y tratan de que no se les caiga, es decir que no toque el suelo) . Como una forma de mejorar su control del balo\u0301n, aprender a usar las dos piernas, y divertirse, decidio\u0301 dedicar un tiempo y ponerse todos los di\u0301as a hacer jueguito, adema\u0301s estudia programacio\u0301n y entonces decidio\u0301 registrar las secuencias de toque de una forma muy particular: le agrego\u0301 un sensor a la pelota, y con una app puede registrar la altura ma\u0301xima que alcanza la pelota cada vez que e\u0301l la impacta) . De esta manera, cada vez que se pone a hacer jueguito registra la serie de alturas que alcanzo\u0301 la pelota durante la sesio\u0301n, cuando se le cae la pelota, el sensor registra un cero ( 0) , y cuando se cansa y decide terminar la sesio\u0301n el sensor registra un - 1 ( que para nosotros indicara\u0301 el final de la secuencia de los datos de entrada) .",
    "input": "Se ingresan por teclado una serie de valores enteros que terminan con - 1 ( los valores ingresados, salvo el u\u0301ltimo son mayores o iguales que cero, y como mi\u0301nimo viene un valor mayor que cero) . Estos valores representan las alturas ( medidas en cm) que alcanza la pelota, segu\u0301n se explico\u0301 en Descripcio\u0301n.",
    "output": "Se debe imprimir la longitud de la \" secuencia creciente estricta\" ( a Carlitos le gusta pegarle cada vez ma\u0301s alto) ma\u0301s larga de toda la sesio\u0301n de entrenamiento ( una sesio\u0301n puede tener un registro de hasta 15000 alturas) . Aclaracio\u0301n: los valores 0 no se cuentan en ningu\u0301n caso como parte de una \" secuencia creciente\" . | | input120 80 85 0 80 120 150 165 132 0 200 300 100 0 410 230 0 - 1| | output4| | input310 220 0 80 30 0 200 250 0 140 0 - 1| | output2| | end",
    "note": "",
    "topics": [
      "math",
      "matrices"
    ],
    "id": 12434
  },
  {
    "title": "Matriz Triangular Fuerte",
    "url": "https://omegaup.com/arena/problem/Matriz-Triangular-Fuerte",
    "history": "# DescripcionSe ingresa un valor entero N ( 1< = N< = 100) , y a continuacio\u0301n N filas conteniendo cada una N valores enteros, que son los elementos de la matriz, por filas, de izquierda a derecha. Si la suma de todos los elementos por debajo de la diagonal principal es mayor que la suma de todos los elementos por arriba de la misma, decimos que la matriz es Triangular Inferior Fuerte, y mostramos un \" SI\" como salida, en otro caso, mostramos \" NO\"",
    "input": "La primer li\u0301nea de entrada contendra\u0301 el valor N. Luego vendra\u0301n N li\u0301neas con 1 \u2264 X_ i \u2264 1000 valores enteros separados por un espacio. | | input41 0 0 01 2 0 01 1 3 01 1 1 4| | outputSI| | end",
    "output": "",
    "note": "",
    "topics": [
      "math",
      "matrices"
    ],
    "id": 12432
  },
  {
    "title": "Triangular 6",
    "url": "https://omegaup.com/arena/problem/Triangular-6",
    "history": "Este problema no tiene todavi\u0301a un enunciado pu\u0301blico. Solicite el mismo a su profesor.",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "matrices",
      "math"
    ],
    "id": 12411
  },
  {
    "title": "Triangular 5",
    "url": "https://omegaup.com/arena/problem/Triangular-5",
    "history": "Este problema no tiene todavi\u0301a un enunciado pu\u0301blico. Solicite el mismo a su profesor.",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "matrices",
      "math"
    ],
    "id": 12410
  },
  {
    "title": "Triangular 4",
    "url": "https://omegaup.com/arena/problem/Triangular-4",
    "history": "Este problema no tiene todavi\u0301a un enunciado pu\u0301blico. Solicite el mismo a su profesor.",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "matrices",
      "math"
    ],
    "id": 12409
  },
  {
    "title": "Triangular 3",
    "url": "https://omegaup.com/arena/problem/Triangular-Tres",
    "history": "Este problema no tiene todavi\u0301a un enunciado pu\u0301blico. Solicite el mismo a su profesor.",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "matrices",
      "math"
    ],
    "id": 12404
  },
  {
    "title": "Triangular 2",
    "url": "https://omegaup.com/arena/problem/Triangular-Inferior-2",
    "history": "Este problema no tiene todavi\u0301a un enunciado pu\u0301blico. Solicite el mismo a su profesor.",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "matrices",
      "math"
    ],
    "id": 12403
  },
  {
    "title": "Triangular 1",
    "url": "https://omegaup.com/arena/problem/Triangular-Inferior",
    "history": "Este problema no tiene todavi\u0301a un enunciado pu\u0301blico. Solicite el mismo a su profesor.",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "math",
      "matrices"
    ],
    "id": 12402
  },
  {
    "title": "Clase por Zoom",
    "url": "https://omegaup.com/arena/problem/Clase-por-Zoom-ANH",
    "history": "Despue\u0301s de 3 meses de clases en li\u0301nea por Zoom, el profesor por fin se canso\u0301 de ver que sus alumnos no prendi\u0301an la ca\u0301mara. Siente que es una falta de respeto, y el pretexto que la ca\u0301mara no funciona no se los cree ni sus mismos compan\u0303eros. Asi\u0301 que decidio\u0301 sacar de la sesio\u0301n a todo aquel alumno que no tenga encendida la ca\u0301mara. En su pantalla siempre tiene a los alumnos desplegados en una cuadri\u0301cula de 4 x 5 y e\u0301l siempre se encuentra en la posicio\u0301n 0, 2. Debes determinar la estructura final e imprimirla despue\u0301s de sacar a los alumnos que tienen la ca\u0301mara apagada",
    "input": "Una matriz de 4 x 5 donde los si\u0301mbolos A indicara\u0301n los alumnos con ca\u0301mara encendida, P al profesor y X a los que tienen la ca\u0301mara apagada",
    "output": "Una matriz con so\u0301lo los elementos A y P.",
    "note": "",
    "topics": [
      "math",
      "matrices"
    ],
    "id": 12363
  },
  {
    "title": "El grupo m\u00e1s querido",
    "url": "https://omegaup.com/arena/problem/El-grupo-mas-querido-ANH",
    "history": "En la sala de maestros se comenzo\u0301 a debatir cua\u0301l era el grupo favorito de los profesores, ( si\u0301, se debaten esas cosas en receso) y se comenzo\u0301 a votar entre ellos para por fin finalizar ese debate. Los 15 docentes del plantel votaron por alguno de los 6 grupos de la escuela, son ma\u0301s pero uno de ellos no es querido por los profesores. Tu tarea es, a pesar que de seguro no votaron por tu grupo, graficar los resultados e indicar cua\u0301l fue la mayor cantidad de votos.",
    "input": "5 nu\u0301meros enteros que representan los votos para cada grupo",
    "output": "Una gra\u0301fica de barras horizontales formada por el caracter * * # * * . Uno por cada voto y una barra por li\u0301nea. Despue\u0301s de la gra\u0301fica, se indicara\u0301 cua\u0301l fue el mayor nu\u0301mero de votos.",
    "note": "",
    "topics": [
      "math",
      "matrices",
      "combinatorics"
    ],
    "id": 12362
  },
  {
    "title": "Rebecca y los Vagones",
    "url": "https://omegaup.com/arena/problem/Rebecca-y-los-Vagones",
    "history": "La noche es oscura y tenebrosa en el fri\u0301o bosque de Raccoon, hay un fugitivo de la milicia que ha usado el tren abandonado para refugiarse, Rebecca Chambers para tratar de impresionar al equipo bravo de STARS decide ir capturar al fugitivo por si sola, pero no sabe que el tren esta\u0301 plagado de zombies y criaturas infernales, por lo que te pide a ti, el mejor programador del equivo bravo, que le ayudes a detectar en que vagon del tren hay mayor cantidad de zombies y en cual hay menos.",
    "input": "Un entero * * * N* * * que representa la cantidad de vagones que existen en el tren seguido de * * * N* * * enteros que representan la cantidad de zombies que hay en los vagones.",
    "output": "Dos enteros * * * A* * * y * * * B* * * que son los vagones en los cuales hay ma\u0301s zombies y menor zombies.",
    "note": "",
    "topics": [
      "matrices",
      "implementation",
      "math"
    ],
    "id": 12352
  },
  {
    "title": "Ordenando la Guardia Imperial",
    "url": "https://omegaup.com/arena/problem/Ordenando-la-Guardia-Imperial",
    "history": "El Emperador de Francia, Napoleo\u0301n Bonaparte, acaba de encomendarte la misio\u0301n de ordenar a las tropas de su Guardia Imperial, antes de enfrentarse al duque de Wellington en los campos de Waterloo. Tu decides que lo mejor para las tropas es que nadie obstruya la visio\u0301n de nadie. La Guardia Imperial esta formada en \u2018m\u2019 filas de \u2018n\u2019 soldados cada una. Cada soldado tiene una altura denotada por un entero \u2018a\u2019 que va del 150 al 210. Tu misio\u0301n es que cada soldado de cada fila \u2018n\u2019 este ordenado de mayor a menor, de tal forma que no obstruya la vista del soldado que esta detra\u0301s de el. Para evitar confusio\u0301n en los soldados, decides ordenarlos solo teniendo en cuenta una columna a la vez, hasta formar todas las columnas.",
    "input": "Dos enteros \u2018m\u2019 y \u2018n\u2019, seguidos de \u2018m\u2019 filas de \u2018n\u2019 enteros \u2018a\u2019, separados por un espacio, que denotan la altura de cada soldado.",
    "output": "\u2018m\u2019 renglones con \u2018n\u2019 enteros \u2018a\u2019, separados por un espacio, correspondientes a la altura de cada soldado, ordenado por altura de mayor a menor, por columnas.",
    "note": "",
    "topics": [
      "math",
      "matrices"
    ],
    "id": 12261
  },
  {
    "title": "Las flores multicolores del jard\u00edn",
    "url": "https://omegaup.com/arena/problem/Las-flores-multicolores-del-jard",
    "history": "El lugar favorito de Alicia en el pai\u0301s de las maravillas era el jardi\u0301n de flores multicolores que rodeaba el territorio de la Reina Roja. La primera vez que Alicia entro\u0301 al jardi\u0301n, ella se maravillo\u0301 de ver flores de colores y taman\u0303os tan distintos, \u00a1incluso de colores que jama\u0301s habi\u0301a visto! Cerca de la entrada del jardi\u0301n habi\u0301a un rosal de rosas blancas y tres jardineros trabajando. Llena de curiosidad, Alicia les pregunto\u0301 a los jardineros co\u0301mo podi\u0301an mantener el jardi\u0301n tan bonito. Los jardineros le explicaron que el color de una flor depende de su taman\u0303o y que, conforme transcurren los di\u0301as, algunas flores crecen y entonces cambian de color. Alicia quedo\u0301 au\u0301n ma\u0301s intrigada y les pidio\u0301 que le explicaran el proceso exacto que siguen las flores para crecer. Los jardineros le respondieron: \" Inicialmente todas las flores del jardi\u0301n se vei\u0301an igual y teni\u0301an taman\u0303o 1. Si una flor de taman\u0303o T esta\u0301 completamente rodeada de flores de taman\u0303o T durante el di\u0301a, entonces ella crece durante la noche. Adema\u0301s, el taman\u0303o ma\u0301s grande que una flor puede tener es 9\" . Dado el estado inicial del jardi\u0301n, ayuda a Alicia a determinar co\u0301mo se vera\u0301 cuando sus flores dejen de crecer.",
    "input": "Un entero N seguido una matriz de N \u00d7 N enteros que pueden valer 0 o 1. El valor 0 indica la ausencia de una flor. Puedes suponer que 1 \u2264 N \u2264 100.",
    "output": "Una matriz de N \u00d7 N enteros que denoten el estado final del jardi\u0301n.",
    "note": "",
    "topics": [
      "matrices",
      "implementation",
      "math"
    ],
    "id": 12222
  },
  {
    "title": "Frecuencias en un histograma",
    "url": "https://omegaup.com/arena/problem/Frecuencias-en-un-histograma",
    "history": "Dada la representacio\u0301n de un histograma vertical, determinar la altura de cada una de sus barras.",
    "input": "La primera li\u0301nea contiene dos enteros n y m. Posteriormente aparecen n li\u0301neas, cada una con m di\u0301gitos binarios separados por espacios. La representacio\u0301n del histograma se construye como sigue: los di\u0301gitos ` 1` forman parte de una barra vertical mientras que los di\u0301gitos ` 0` representan un espacio vaci\u0301o en el histograma. Puedes suponer que 3 \u2264 n, m \u2264 20.",
    "output": "Una secuencia de m enteros separados por espacios, donde cada entero representa la altura de la i- esima barra del histograma.",
    "note": "",
    "topics": [
      "math",
      "implementation",
      "matrices"
    ],
    "id": 12149
  },
  {
    "title": "Suma de la diagonal",
    "url": "https://omegaup.com/arena/problem/Suma-de-la-diagonal",
    "history": "Dada una matriz de n \u00d7 n elementos, imprimir la suma de su diagonal.",
    "input": "La primera li\u0301nea contiene un entero n. Posteriormente aparecen n li\u0301neas con n enteros por li\u0301nea separados por espacios, los cuales denotan los elementos de la matriz. Puedes suponer que 3 \u2264 n \u2264 20 y que los elementos de la matriz esta\u0301n entre - 10^ 6 y + 10^ 6.",
    "output": "Un entero que corresponda con la suma de la diagonal de la matriz ingresada.",
    "note": "",
    "topics": [
      "matrices",
      "math",
      "implementation"
    ],
    "id": 12146
  },
  {
    "title": "Diagonales Inversas de matriz",
    "url": "https://omegaup.com/arena/problem/Diagonales-Inversas-de-matriz",
    "history": "Dado un numero n tendra\u0301s que crear una matriz de n* n posiciones y posteriormente llenarla con nu\u0301meros desde 1 hasta n^ 2Por ejemplo de entrada tenemos n= 3, entonces la matriz quedaria1 2 34 5 67 8 9Despue\u0301s de esto tendra\u0301s que imprimir solamente las diagonales pero invertidas y en los lugares que no sean diagonal colocar un guion",
    "input": "Un unico numero N",
    "output": "Las diagonales invertidas separadas por guiones",
    "note": "",
    "topics": [
      "matrices",
      "implementation",
      "math"
    ],
    "id": 12141
  },
  {
    "title": "Transpuesta 1",
    "url": "https://omegaup.com/arena/problem/Transpuesta-1",
    "history": "Dada una matriz de n \u00d7 n elementos, imprimir su transpuesta.",
    "input": "La primera li\u0301nea contiene un entero n. Posteriormente aparecen n li\u0301neas con n enteros por li\u0301nea separados por espacios, los cuales denotan los elementos de la matriz. Puedes suponer que 2 \u2264 n \u2264 20 y que los elementos de la matriz esta\u0301n entre - 10^ 6 y + 10^ 6.",
    "output": "Los n \u00d7 n enteros de la matriz transpuesta, cada fila en su propia li\u0301nea y separando los elementos de la misma fila por espacios.",
    "note": "",
    "topics": [
      "matrices",
      "implementation",
      "math"
    ],
    "id": 12129
  },
  {
    "title": "Entrada al templo",
    "url": "https://omegaup.com/arena/problem/Entrada-al-templo",
    "history": "# HistoriaDespue\u0301s de la persecucio\u0301n con el malvado Robot OMI, llegaron al * * Templo* * ( si, el mismo donde conocieron al hombre misterioso) , sin embargo, en esta ocasio\u0301n la seguridad del mismo fue reforzada por un acertijo matema\u0301tico. Dado el taman\u0303o de una cuadricula de N \u00d7 M, el cual esta\u0301 indexado en 1 e inicializada con los primeros N \u00d7 M nu\u0301meros especiales con la propiedad de que su u\u0301nico divisor es el 1 y e\u0301l mismo. Tienes que contestar K pruebas para poder infiltrarte en la seguridad del templo, en cada prueba se te daran un rango rectangular de la cuadricula y si ingresas la suma de elementos en dicho rango, podras pasar a la siguiente prueba de seguridad. El rango esta dado por la primera coordenada ( x_ f, y_ f) que indica el inicio del rectangulo, las coordenadas ( x_ s, y_ s) indican el fin del rectangulo, se te asegura que x_ f \u2264 x_ s y y_ f \u2264 y_ s. # ProblemaDado las K pruebas, ingresa la suma del rango dado por las coordenadas ( x_ f, y_ f) y ( x_ s, y_ s) para poder filtrar la seguridad y derrotar al malvado robot OMI.",
    "input": "En la primeria li\u0301nea los enteros N, M y K, donde N \u00d7 M indican el taman\u0303o de la cuadricula y K el nu\u0301mero de pruebas. Seguido de K li\u0301neas con cuatro enteros cada uno ( x_ f, y_ f) y ( x_ s, y_ s) que indican el rango la prueba K_ i.",
    "output": "K enteros separados por un salto de li\u0301nea, en donde el i- e\u0301simo entero contiene la suma del rango de la K_ i prueba. | | input10 10 71 1 1 11 1 10 11 1 1 101 1 2 23 3 6 61 4 3 61 8 2 10| | output22167129732738461270| | input3 3 51 1 1 31 1 1 21 1 3 11 1 3 32 2 2 2| | output1052610011| | end# Li\u0301mites- 1 \u2264 N \u00b7 M \u2264 10^ 4- 1 \u2264 K \u2264 10^ 6* * Para 1/ 4 de los casos* * - 1 \u2264 N \u00b7 M \u2264 10^ 2- 1 \u2264 K \u2264 10^ 2* * Para otro 1/ 4 de los casos* * - 1 \u2264 K \u2264 10^ 4* * Para 1/ 2 de los casos* * - No hay restricciones.",
    "note": "",
    "topics": [
      "math",
      "matrices"
    ],
    "id": 11978
  },
  {
    "title": "Laberinto final",
    "url": "https://omegaup.com/arena/problem/Laberinto-final",
    "history": "El Malvado Robot OMI ha bloqueado las salidas del templo mientras entrenaban, entonces la prueba final sera\u0301 escapar del templo. El templo se puede ver como una matriz de N \u00d7 M en donde esta representado por un \u201d . \u201d un camino libre y una \u201cX\u201d una pared, con la posibilidad de hacer movimientos de tipo ( i- 1, j) , ( i, j+ 1) , ( i+ 1, j) y ( i, j- 1) . Para esta prueba desarrollaron el poder de * bola de fuego* que les permite destruir paredes, sin embargo, no pueden destruir ma\u0301s de k paredes, si no el templo se derrumbari\u0301a y todos moriri\u0301an: ( . # ProblemaAyuda a los programadores mayas a encontrar el camino ma\u0301s corto a la salida del templo representada por un \u201cM\u201d su posicio\u0301n en la matriz y una \u201cS\u201d la posicio\u0301n de la salida.",
    "input": "Tres enteros N, M, y k seguido de N li\u0301neas con M caracteres de tipo \" . \" , \" X\" , \" M\" y \" S\" descritas anteriormente.",
    "output": "Un u\u0301nico nu\u0301mero que sea el nu\u0301mero de pasos del camino ma\u0301s corto con las condiciones ya mencionadas. En caso de que no exista camino posible imprime \" F\" sin comillas para darle tus respetos a los programadores mayas. | | input5 5 3. . M . . . . X . . . . X . . . . X . . . . S . . | | output4| | input5 5 2M . . X . X X . X . . . . X . X X X X . S . . . . | | output4| | input5 5 2M . . . . X X X X XX X X X XX X X X X. . . . S| | outputF| | end# Li\u0301mites- 1 \u2264 N, M \u2264 100- 1 \u2264 k \u2264min( N \u00d7 M/ 10, 100) * * Para 6. 25 puntos* * - Numero de paredes = 0* * Para otros 6. 25 puntos* * - k = 0* * Para 25 puntos* * - k = 1* * Para el resto de puntos* * - No hay restricciones.",
    "note": "",
    "topics": [
      "math",
      "implementation",
      "matrices"
    ],
    "id": 11656
  },
  {
    "title": "Calculadora de operaciones matriciales",
    "url": "https://omegaup.com/arena/problem/Calculadora-de-operaciones-matri",
    "history": "Escriba un programa que lea dos matrices: una matriz A, de dimensiones ( Ax, Ay) y otra matriz B, de dimensiones ( Bx, By) . Despue\u0301s, calcular la suma, resta, traspuesta o multiplicacio\u0301n de esas matrices, segu\u0301n lo solicite el usuario, e imprimir la matriz resultante. En caso de la traspuesta, solo calcular e imprimir la traspuesta de la matriz A, e ignorar la matriz B. MUY IMPORTANTE: El programa debe estar estructurado en mo\u0301dulos, no todo en la funcio\u0301n principal.",
    "input": "Una linea con dos enteros separadas por un espacio correspondientes a las dimensiones Ax y Ay de la matriz A. Despue\u0301s, Ax lineas con Ay enteros separados por un espacio correspondientes a cada valor A( x, y) de la matriz A. Despue\u0301s, una linea con dos enteros separadas por un espacio correspondientes a las dimensiones Bx y By de la matriz B. Despue\u0301s, Bx lineas con By enteros separados por un espacio correspondientes a cada valor B( x, y) de la matriz B. Despue\u0301s se recibira\u0301n n cadenas correspondientes a la operacio\u0301n correspondiente, que pueden ser \" SUMA\" , \" RESTA\" , \" MULTIPLICACION\" , \" TRASPUESTA\" o \" SALIR\" .",
    "output": "En cada caso, la matriz resultante de efectuar la operacio\u0301n correspondiente. De no poder hacerse la operacio\u0301n solicitada, el programa debera\u0301 imprimir el caracter ' X' .",
    "note": "",
    "topics": [
      "math",
      "strings",
      "implementation",
      "matrices"
    ],
    "id": 11400
  },
  {
    "title": "Matrices conc\u00e9ntricas",
    "url": "https://omegaup.com/arena/problem/Matrices-concentricas",
    "history": "Llamaremos matriz conce\u0301ntrica a una matriz donde todas las celdas de su borde exterior valen 0, todas las celdas de su siguiente borde valen 1, etc. Escribe un programa que determine si una matriz es conce\u0301ntrica.",
    "input": "Un entero n seguido de una matriz cuadrada de n \u00d7 n enteros. Puedes suponer que 1 \u2264 n \u2264 350 y que n es impar.",
    "output": "Un 1 si la matriz es conce\u0301ntrica y un 0 en otro caso.",
    "note": "",
    "topics": [
      "matrices",
      "math",
      "implementation"
    ],
    "id": 11395
  },
  {
    "title": "Bienestar Azteca",
    "url": "https://omegaup.com/arena/problem/Bienestar-Azteca",
    "history": "La pa\u0301gina de Bienestar Azteca se encuentra saturada pero tu necesitas de la beca para poder ir a la OMI Zacatecas 2020 entonces tus amigos programadores te comentaron que en la escuela de Bachilleres 2 se encuentra un internet tan potente que te permite entrar a la pa\u0301gina antes que nadie, solo que tienes que estar situado en un punto y mirando a una direccio\u0301n en concreto. Tus amigos programadores no te dieron las coordenadas de esa posicio\u0301n ni la direccio\u0301n que tienes que mirar, pero te dieron las siguientes indicaciones para poder encontrarlo. - Inicias en la coordenada ( 1, 1) . - Te moveras en forma de espiral con esta secuencia de dierecciones: * * este, sur, oeste y norte* * . - Avanzas en una direccio\u0301n hasta que te encuentres una casilla por la que ya hayas pasado o el li\u0301mite de la escuela, cuando esto pase, cambias de direccio\u0301n. - Cuando ya no te puedes mover hacia ningun lado esa es la coordenada y la direccio\u0301n es la ultima direccio\u0301n que usaste para llegar a esa coordenada. Por ejemplo, cuando N= 3 y M= 3, iniciamos en la coordenada ( 1, 1) , no movemos hacia el Este hasta la coordenada ( 1, 3) , como nos encontramos con el li\u0301mite de la escuela cambiamos la direccio\u0301n hacia el Sur hasta la coordenada ( 3, 3) , cambiamos nuevamente de direccio\u0301n hacia el Oeste hasta las coordenadas ( 3, 1) porque no encontramos con el li\u0301mite, cambiamos una vez ma\u0301s la direccio\u0301n hacia el Norte y nos ubicamos en la coordenada ( 2, 1) , como nos encontramos una casilla que ya habi\u0301amos visitado reiniciamos la secuencia de direcciones y nos movemos hacia el Este, siendo nuestra ultima coordenada ( 2, 2) mirando hacia la direccio\u0301n del Este. # ProblemaEncuentra las coordenadas exactas en la que te debe ubicar y la direccio\u0301n a la que debes mirar para poder entrar a la pa\u0301gina de bienestar azteca.",
    "input": "Dos nu\u0301meros N y M que son el taman\u0303o de la escuela.",
    "output": "Dos nu\u0301meros x y y que son las coordenadas que debes estar situado y una caracter s que puede ser E( este) , S( sur) , O( oeste) o N( norte) que es la direccio\u0301n a la que debes mirar en esas coordenadas. | | input10 10| | output6 5 O| | input3 5| | output2 4 E| | input7 7| | output4 4 E| | end# Li\u0301mites* * Para 1/ 4 de los casos* * - N= M* * Para otro 1/ 4 de los casos* * - 2 \u2264 N, M \u2264 10^ 4* * Para 1/ 2 de los casos* * - 10^ 4 \u2264 N, M \u2264 10^ 7",
    "note": "",
    "topics": [
      "matrices",
      "implementation",
      "math"
    ],
    "id": 11382
  },
  {
    "title": "Volando al cielo",
    "url": "https://omegaup.com/arena/problem/Volando-al-cielo",
    "history": "< br/ > Daedalus es un famoso constructor, su ma\u0301s reciente construccio\u0301n es el robot Icarus el cual ha sido disen\u0303ado para llegar a los cielos con sus alas de cera. Sin embargo, el sol es muy fuerte y hay peligro de que el calor de este derrita las alas de Icarus hacie\u0301ndolo caer al suelo, por lo que el tiene que llegar al cielo cuidando con haber sufrido la menor cantidad de dan\u0303o por el calor. < br/ > Para llegar al cielo hay N niveles, de los cuales cada uno tiene M espacios por los cuales se pueden pasar, cada uno tiene su cantidad de calor C_ nm, Icarus decide en que espacio de la fila numero N comenzar su vuelo, si Icarus se encuentra en la posicio\u0301n ( x, y) puede decidir volar a ( x + 1, y + 1) , ( x, y + 1) , o ( x - 1, y + 1) siempre y cuando existan las posiciones. < br/ > Una vez realizado el vuelo hasta el cielo el dan\u0303o total de calor que sufrio\u0301 es la suma de todos los C_ xy los cuales paso en su recorrido, el inicio tambie\u0301n se cuenta. < br/ > Ayuda a Icarus a saber cual es la menor cantidad de dan\u0303o con la que puede llegar al cielo. < br/ >",
    "input": "< br/ > Dos nu\u0301meros positivos N y M donde N representa el nu\u0301mero de filas y M representa la cantidad de valores por fila. Luego se presentaran N filas con M nu\u0301meros donde cada nu\u0301mero indica la cantidad de calor que hay en cada posicio\u0301n.",
    "output": "< br/ > Un entero que representa la mi\u0301nima cantidad de calor con la que se puede llegar.",
    "note": "",
    "topics": [
      "dp",
      "math",
      "matrices"
    ],
    "id": 11243
  },
  {
    "title": "la_cadena_de_la_diagonal",
    "url": "https://omegaup.com/arena/problem/la_cadena_de_la_diagonal",
    "history": "Escribe un programa que en su primer li\u0301nea de entrada leera\u0301 una * * * cadena* * * de caracteres ( esta cadena siempre tendra\u0301 como mi\u0301nimo 25 y como ma\u0301ximo 33 caracteres) , y en su segunda li\u0301nea de entrada leera\u0301 un numero entero * * * n* * * que siempre sera\u0301 mayor de 3 y menor de 13. El numero * * * n* * * indica el numero de filas y columnas de una tabla ( matriz) ( arreglo bidimensional) de caracteres, que siempre sera\u0301 perfectamente cuadrada puesto que sus filas siempre sera\u0301n * * * n* * * al igual que sus columnas. La tabla la llenaras con los caracteres de la cadena, de la siguiente manera: la primer fila de la tabla con los caracteres de 0 hasta n- 1 de la cadena. la segunda fila de la tabla con los caracteres de 1 hasta n de la cadena. la tercera fila de la tabla con los caracteres de 2 hasta n+ 1 de la cadena. la cuarta fila de la tabla con los caracteres de 3 hasta n+ 2 de la cadena. etc. etc. Una vez que tengas la tabla llena de caracteres: Imprimira\u0301s la matriz de caracteres tal cual esta llena, fila por fila. Imprimir un salto de linea. imprimira\u0301s la cadena de caracteres que se forma en la diagonal de la tabla, desde la esquina inferior derecha ( donde terminamos de llenar la tabla) , hasta la esquina superior izquierda ( por donde comenzamos a llenar la tabla) .",
    "input": "Una cadena de caracteres donde su longitud siempre sera mayor o igual que 4 y menor de 34. Un entero mayor o igual que 4 y menor o igual que 12.",
    "output": "Imprimira\u0301s la matriz de caracteres tal cual esta llena, fila por fila. Imprimir un salto de linea. Imprimir la cadena de caracteres que se forma en la diagonal de la tabla, desde la esquina inferior derecha ( donde terminamos de llenar la tabla) , hasta la esquina superior izquierda ( por donde comenzamos a llenar la tabla) . | | inputabcdefghijklmnopqrstuvwxyz012345612| | outputabcdefghijklbcdefghijklmcdefghijklmndefghijklmnoefghijklmnopfghijklmnopqghijklmnopqrhijklmnopqrsijklmnopqrstjklmnopqrstuklmnopqrstuvlmnopqrstuvwwusqomkigeca| | end",
    "note": "",
    "topics": [
      "graphs",
      "math",
      "trees",
      "matrices",
      "binary search",
      "implementation"
    ],
    "id": 11239
  },
  {
    "title": "Generar Matriz X",
    "url": "https://omegaup.com/arena/problem/Generar-Matriz-X",
    "history": "Generar la matriz X, luego invertirla| | input5| | outputMatriz X: 1 0 0 0 60 2 0 7 00 0 3 0 00 8 0 4 09 0 0 0 5La matriz X invertida es: 6 0 0 0 10 7 0 2 00 0 3 0 00 4 0 8 05 0 0 0 9| | end",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "implementation",
      "matrices",
      "math"
    ],
    "id": 11093
  },
  {
    "title": "Camino a la OMI",
    "url": "https://omegaup.com/arena/problem/Camino-a-la-OMI",
    "history": "La seleccio\u0301n de Quintana Roo esta lista para ir a la OMI Zacatecas 2020, pero por el dan\u0303o econo\u0301mico que dejo el CODEVID- 10011 en el estado se quedo sin presupuesto para pagar el transporte en avio\u0301n, por tanto, la seleccio\u0301n tendra\u0301 que ir caminando a Zacatecas, definamos este estado con la letra Z, el punto de partida sera\u0301 el estado de Quintana Roo definida por la letra Q. El virus no ha sido erradicado con totalidad en el pai\u0301s, por tanto, el delegado ha conseguido un mapa de N\u00d7M el cual esta\u0301 representado por un \" . \" aquellos estados que esta\u0301n libres del virus y una X los estados que au\u0301n siguen infectados por el virus. Adema\u0301s de este mapa logro conseguir una vacuna temporal que permite pasar a la seleccio\u0301n por un estado sin ser contagiados por el virus, es decir, el efecto de la vacuna solo funciona en el transcurso de pasar por un estado, despue\u0301s de realizar dicho movimiento la seleccio\u0301n seguira\u0301 siendo vulnerable a ser contagiada por el virus. # ProblemaTu tarea sera\u0301 encontrar el camino ma\u0301s corto de Q a Z, evitando pasar por los estados que au\u0301n siguen infectados haciendo movimientos por el mapa ( i, j+ 1) , ( i+ 1, j) , ( i, j- 1) , ( i- 1, j) , siendo i las filas del mapa y j las columnas de este, con la posibilidad de usar la vacuna en cualquier estado del mapa, una vez que se haya utilizado ya no se podra\u0301 volver a utilizar puesto que solo tienen una.",
    "input": "La primera li\u0301nea dos enteros N y M que son las filas y columnas del mapa. Seguido de N filas con M enteros cada una con caracteres tales como Q, Z, X, \" . \" , explicado en la descripcio\u0301n del problema.",
    "output": "Un u\u0301nico entero que representa la distancia mi\u0301nima de Q a Z, si no existe camino posible para llegar a Z imprime * * - 1* * . | | input5 5Q. . X. . . . X. . . . . . XX. X. . . . . Z| | output8| | input5 5Q. . X. XX. X. . . . X. XXXX. Z. . . . | | output8| | input5 5QX. . . XX. . . . . . . . . . . XX. . . XZ| | output- 1| | end# Li\u0301mites* * Para el 1/ 3 de los casos* * - 2 \u2264 N, M \u2264 100- No existen estados infectados* * Para otro 1/ 3 de los casos* * - 2 \u2264 N, M \u2264 100- Existen estados infectados* * Para otro 1/ 3 de los casos* * - 2 \u2264 N, M \u2264 1000- Existen estados infectados",
    "note": "",
    "topics": [
      "shortest paths",
      "matrices",
      "math"
    ],
    "id": 10868
  },
  {
    "title": "Pies de hobbits",
    "url": "https://omegaup.com/arena/problem/Pies-de-hobbits",
    "history": "< br/ > Un di\u0301a la sagaz aventurera Vero\u0301nica esta en una travesi\u0301a por la Comarca, en la cual vivi\u0301a varios tipos de hobbits. < br/ > Como todos saben los hobbits tienen muchos tipos de pies, pero en este solo hay 3 tipos de pies diferentes que tienen los hobbits. < br/ > Unos eran pequen\u0303os, perteneci\u0301an a hobbits pequen\u0303os, a diferencia de los otros el pelo que teni\u0301an en sus pies era un poco ondulado, algo delgado y de colores claros. Esto servia porque caminaban en lugares tranquilos. < br/ > Otros eran pies medianos, estos teni\u0301an pelo muy rizado y acolchonado, era de colores cafe\u0301s y servi\u0301an para tener mucho volumen. Los resguardaba del frio\u0301 de esas zonas y se enorgulleci\u0301an de cuidarlo. Casi nunca se lo cortaban. < br/ > Otros eran pies grandes, de los cuales el vello en sus pies era muy fuerte, muy duro. Pareciera que trai\u0301an botas al estar descalzos, de color negro y muy poco cuidado. Estos servia para los peligros en el suelo, como serpientes, espinas, rocas. Nunca eran cuidados porque no habi\u0301a tal cepillo que permitiera peinar, o tijeras que cortar. < br/ > Esta aventurara conoci\u0301a todos estos * innecesarios* detalles, y no queri\u0301a delatar su presencia dejando huella de humana. Por lo cual decidio\u0301 comprar zapatos que hiciera que dejara huellas igual a ciertos hobbits, ella sabia que si comprara 3 pares de zapatos no importa que terreno estuviera, pudiera cambia\u0301rselo y dejar huellas correspondiente al terreno. Sin embargo comprar 3 pares de zapatos es caro y quiere comprar la menor cantidad de pares de zapatos. < br/ > Vero\u0301nica siempre inicia en la casilla hasta arriba y hasta la izquierda de la comarca, y quiere llegar a la casilla que esta hasta la derecha y hasta abajo, sin embargo ella solo puede hacer movimientos en horizontal y vertical. No se puede mover en diagonal o a una posicio\u0301n fuera de la Comarca. < br/ > Ayuda a Vero\u0301nica a saber cual es la menor cantidad de zapatos que tiene que comprar para hacer el recorrido. # Ejempo< br/ > ! [ Ejemplo de caminos] ( Ejemplo. jpg) < br/ > En el siguiente ejemplo se ven los casos de 1 zapato, dos zapatos, y tres zapatos. Como se puede apreciar los caminos no son necesariamente u\u0301nicos.",
    "input": "Dos enteros, n y m que representan el nu\u0301mero de filas y de columnas respectivamente de la Comarca. Seguido vendra\u0301 un tablero de n x m. Donde la posicio\u0301n a_ nm representa que tipo de hobbit habita esa celda.",
    "output": "< br/ > La cantidad mi\u0301nima de zapatos y cuales tipos son.",
    "note": "",
    "topics": [
      "implementation",
      "dfs and similar",
      "math",
      "matrices"
    ],
    "id": 10855
  },
  {
    "title": "El juego del mini-Twister",
    "url": "https://omegaup.com/arena/problem/1er-ccp-tapete",
    "history": "Desde que recuerdas, siempre te ha gustado el juego de * Twister* ya que es muy divertido ver a los adultos jugando, pero ellos siempre te dicen que esta\u0301s chiquito y no puedes. Es por eso que acabas de inventar un nuevo juego, no tan divertido pero que te ejercitara\u0301. Cuentas con un tapete de N \u00d7 N marcas, donde cada marca tiene algu\u0301n nu\u0301mero del 1 al N^ 2. Ningu\u0301n nu\u0301mero se repite y comienzas parado en la marca 1. El objetivo del juego es pisar la marca 2, luego a la 3, y asi\u0301 sucesivamente hasta pisar la marca con el u\u0301ltimo nu\u0301mero. Como esta\u0301s chiquito no puedes dar saltos largos, asi\u0301 que so\u0301lo podra\u0301s saltar vertical u horizontalmente de una marca a otra contigua. No te preocupara\u0301 pisar marcas distintas a la de tu destino conforme vas saltando, ya que intentar evitarlas volveri\u0301a el juego muy complicado ( aunque pisar una marca antes de tiempo no cuenta y tienes que volver a ella cuando ya le toque su turno) . Escribe un programa que calcule la menor cantidad de saltos que tendra\u0301s que dar para completar el juego.",
    "input": "- Un entero N, indicando la dimensio\u0301n de la matriz. - Una matriz de N \u00d7 N enteros con los nu\u0301meros del 1 al N^ 2 sin repetir. - 1 \u2264 N \u2264 100",
    "output": "Un entero que sea la menor cantidad de saltos que tendra\u0301s que dar para completar el juego.",
    "note": "",
    "topics": [
      "implementation",
      "matrices",
      "math"
    ],
    "id": 10811
  },
  {
    "title": "Calificaciones de un grupo",
    "url": "https://omegaup.com/arena/problem/Calificaciones-de-un-grupo",
    "history": "El profesor Oswaldo es una persona avanzada de edad por lo tanto tarda muchos di\u0301as elaborando su informe de calificaciones de los grupos a los cuales imparte clase, tu\u0301 como buen estudiante de informa\u0301tica le comentaste que puede optimizar mucho tiempo si genera su reporte de calificaciones de manera automatizada y ofreciste tu ayuda para realizar un programa. El profesor te comento\u0301 que si hay dos alumnos con calificacio\u0301n ma\u0301s alta debes de considerar ordenarlos de manera alfabe\u0301tica, pero solo mostrando a un so\u0301lo alumno, esta misma regla se aplica la persona con menor calificacio\u0301n, de igual manera te recordo\u0301 que las calificaciones se ponen en escala del * * * 1 al 100* * * , en donde los alumnos que obtienen un promedio mayor o igual a 60 son los que aprueban al curso, en el caso de los alumnos que tienen una calificacio\u0301n menor que 60 son los que se consideran como reprobados. Debido a que es muy comu\u0301n tener errores al momento de tipear debera\u0301s validar que la calificacio\u0301n ingresada no sea mayor a * * * 100* * * o menor a * * * 0* * * ya que si no se considera esto el reporte de calificaciones puede salir incorrecto, en caso de que se ingrese una calificacio\u0301n debera\u0301s de advertir esta situacio\u0301n no valida mostrando el siguiente mensaje \" * * UPS, ERROR! , DIGITE DE NUEVO LA CALIFICACION* * \" y posteriormente debera\u0301s solicitar de nuevo la calificacio\u0301n.",
    "input": "En la primera linea un entero * * * N* * * la cual representa el nu\u0301mero de alumnos a capturar, en las siguientes lineas 2 x * * * N* * * los nombres junto con el primer apellido y el la calificacio\u0301n de los * * * N* * * alumnos.",
    "output": "- Promedio total del grupo, en caso de tener decimales solo se deben de mostrar dos en caso contrario no mostrar ninguno. - Cantidad de alumnos aprobados- Cantidad de alumnos reprobados- La calificacio\u0301n mayor y el alumno que la obtuvo- La calificacio\u0301n menor y el alumno que la obtuvo",
    "note": "",
    "topics": [
      "strings",
      "matrices",
      "math",
      "data structures",
      "sortings",
      "implementation"
    ],
    "id": 10794
  },
  {
    "title": "Bloques cayendo",
    "url": "https://omegaup.com/arena/problem/1er-ccp-bloques",
    "history": "Deseas iniciar tu carrera como desarrollador * indie* de videojuegos y uno de tus primeros intentos sera\u0301 programar una versio\u0301n del popular juego de * Tetris* . Comenzara\u0301s programando la cai\u0301da de bloques de 2 \u00d7 2 segmentos ( la famosa ficha cuadrada) en una zona de juego de 10 filas y 10 columnas. Como el di\u0301a de hoy no tienes mucho tiempo para dedicarte a programar tu juego, la eliminacio\u0301n de filas llenas la dejara\u0301s para otro di\u0301a y no la implementara\u0301s.",
    "input": "- Un entero N, indicando el nu\u0301mero de bloques. - La siguiente li\u0301nea contiene N enteros, indicando las columnas donde caera\u0301n los bloques, en ese orden. - La columna dada para cada bloque corresponde a la columna izquierda del mismo. - Las columnas esta\u0301n numeradas a partir de 0. - Esta\u0301 garantizado que los bloques apilados nunca se saldra\u0301n de la zona de juego. - Habra\u0301n a lo mucho diez bloques, es decir, 0 \u2264 N \u2264 10.",
    "output": "Una matriz de caracteres con 10 filas y 10 columnas, la cual denota la zona de juego despue\u0301s de que cayeron los bloques. Un caracter ` . ` denota una celda desocupada y un caracter ` # ` denota una celda ocupada por un segmento de bloque.",
    "note": "",
    "topics": [
      "matrices",
      "implementation",
      "math",
      "strings"
    ],
    "id": 10792
  },
  {
    "title": "Dibujando una pir\u00e1mide",
    "url": "https://omegaup.com/arena/problem/Dibujando-una-piramide",
    "history": "Tu tarea es dibujar una pira\u0301mide de * * * N x N* * * .",
    "input": "En la primera linea recibira\u0301s un valor entero el cual sera\u0301 el taman\u0303o de la pira\u0301mide, en la segunda linea recibira\u0301s una letra cualquiera.",
    "output": "La pira\u0301mide impresa.",
    "note": "",
    "topics": [
      "matrices",
      "implementation",
      "strings",
      "dfs and similar",
      "dp",
      "math"
    ],
    "id": 10769
  },
  {
    "title": "Baker",
    "url": "https://omegaup.com/arena/problem/Baker",
    "history": "Baker e Iris son muy buenas amigas. El mes pasado, Iris se mudo\u0301 de la ciudad y ahora su u\u0301nica forma de comunicarse es usando cartas. Como tanto Baker como Iris son gatos, cada una de sus letras contiene una cadena de * * * N* * * caracteres. Para crear una forma ma\u0301s segura de comunicacio\u0301n, Iris decidio\u0301 que cifrara\u0301 los mensajes que envi\u0301a a Baker mediante el siguiente procedimiento: Primero agregue el cara\u0301cter * * * * al final de la cadena, luego creara\u0301 todas las rotaciones de la cadena en orden lexicogra\u0301fico. Considere que el cara\u0301cter * * * * es el ma\u0301s bajo lexicogra\u0301ficamente. La cadena encriptada se realiza tomando el u\u0301ltimo cara\u0301cter de cada rotacio\u0301n. ! [ enter image description here] [ 1] Su tarea es ayudar a Baker a descifrar la carta que Iris ha enviado.",
    "input": "La entrada consta de varios casos de prueba. Cada caso de prueba consiste en una li\u0301nea con una cadena * * * S* * * que contiene solo caracteres en minu\u0301scula y el si\u0301mbolo * * * * * * .",
    "output": "Para cada caso de prueba, imprima en una li\u0301nea el mensaje descifrado.",
    "note": "",
    "topics": [
      "implementation",
      "dfs and similar",
      "strings",
      "dp",
      "math",
      "matrices",
      "data structures"
    ],
    "id": 10710
  },
  {
    "title": "Matrices Caronianas",
    "url": "https://omegaup.com/arena/problem/Matrices-Caronianas",
    "history": "Polycarpio estaba jugando con matrices caronianas, las cuales solo contienen 1' s y 0' s, cuando le surgio\u0301 una duda existencial. El puede aplicar operaciones caronianas a la matriz, las cuales consisten en lo siguiente: * Toma una fila o columna cualquiera. * Elige una direccio\u0301n. ( ARRIBA, ABAJO, IZQUIERDA, DERECHA) * Recorre todas las filas o columnas adyacentes a la fila o columna elegida en la direccion que elegiste. * Si el valor en la posicion i de la fila o columna escogida es 1, todos los valores en la posicion i de las filas o columnas recorridas sera 1, o conservaran sus valores en caso de que el valor en i sea 0. Polycarpio se pregunto si puede lograr que la matriz se convierta en una matriz caroniana perfecta, la cual es una matriz compuesta de unicamente 1' s, y cual es el minimo numero de operaciones caronianas que debe aplicar para obtenerla. Ayuda a Polycarpio a encontrar la respuesta.",
    "input": "Recibiras dos enteros n y m que indican las dimensiones de la matriz. Despues recibiras la matriz caroniana con la que Policarpio esta jugando.",
    "output": "Imprime el minimo numero de operaciones caronianas que deben realizarse para obtener la matriz caroniana perfecta, o \" no puedo toy chikito\" sin comillas en caso de que no haya solucion.",
    "note": "En el segundo ejemplo, las operaciones optimas serian: 1. - Tomar la primera fila en direccion hacia abajo y aplicar la operacion, con lo que la matriz se convertiria en la siguiente1 1 0 01 1 0 01 1 0 01 1 1 12. - Tomar la ultima fila en direccion hacia arriba y aplicar la operacion, con lo que la matriz se convertiria en la matriz caroniana perfecta que buscamos1 1 1 11 1 1 11 1 1 11 1 1 1",
    "topics": [
      "math",
      "implementation",
      "matrices",
      "constructive algorithms"
    ],
    "id": 10681
  },
  {
    "title": "Rotando Submatrices",
    "url": "https://omegaup.com/arena/problem/Rotando-Submatrices",
    "history": "# HistoriaDespue\u0301s de su terrible fustracio\u0301n ante las anteriores 2 derrotas, Santiago decide recuperar sus animos en un encuentro contra Jorge. Lo reto a un juego en el cua\u0301l Santiago se habi\u0301a vuelto muy bueno, rotar matrices; pero le puso algo interesante y decidio\u0301 rotar submatrices en vez de eso. A cada uno se le da una matriz inicial de N \u00d7 M, luego se te daran Q instrucciones de la forma ( a_ 1 , b_ 1) , ( a_ 2, b_ 2) lo cua\u0301l representa la submatriz formado por las esquinas ( a_ 1 , b_ 1) , ( a_ 2, b_ 2) , rotarla 180\u00b0. El primero en completar las instrucciones y decir como quedo su matriz, es el ganador. Al igual que los dema\u0301s Jorge decidio\u0301 hacer trampa y hacer un algoritmo que sea capaz de decirle el resultado final. # DefinicionesLlamamos rotar 180\u00b0 una matrix como el tomar la matriz y cada nu\u0301mero se mueve como si \" dejaramos caer la matriz a la derecha dos veces o la voltearamos al reve\u0301s\" ; es decir, una rotacio\u0301n asi\u0301 seri\u0301a: ! [ Rotacio\u0301n de matrices] [ 1] Luego, llamamos a una submatriz como la matriz formado por los elementos dentro del rectangulo formado por las esquinas ( a_ 1, b_ 1) , ( a_ 2, b_ 2) . Por ejemplo, si tenemos la matriz! [ Matriz original] [ 2] La submatriz forma por el rectangulo ( 1, 1) , ( 3, 2) es! [ Primer corte] [ 3] Mientras que la forma por ( 2, 2) , ( 3, 3) es! [ Segundo corte] [ 4] Por tanto, con la matriz anterior si rotamos a 180\u00b0 la submatriz formada por ( 2, 1) , ( 3, 3) tenemos! [ Corte con rotacio\u0301n] [ 5] # ProblemaDada una matriz inicial de taman\u0303o N \u00d7 M y las Q operaciones, decir cua\u0301l es el resultado despue\u0301s de aplicar las Q operaciones.",
    "input": "Los nu\u0301meros N, M que representan las dimensiones de la matriz. Luego se te daran N li\u0301neas con M nu\u0301mero que representan la matriz inicial. Luego se te dara\u0301 el nu\u0301mero Q que son la cantidad de operaciones. Seguido de eso, se te daran Q li\u0301neas con 4 nu\u0301meros que representan las esquinas de la submatriz que se rotaras ( a_ 1, b_ 1) , ( a_ 2, b_ 2) .",
    "output": "",
    "note": "",
    "topics": [
      "math",
      "matrices",
      "implementation"
    ],
    "id": 10644
  },
  {
    "title": "Encuentra el tesoro",
    "url": "https://omegaup.com/arena/problem/Encuentra-el-tesoro",
    "history": "Pyke es un pirata muy desconfiado y posee mucho dinero, por lo cual el decidio\u0301 crear varias matricesde 3* 3 en diferentes islas, el problema es que no recuerda en cual matriz lo guardo, ayuda lo a ver si en la isla que esta es la correcta y encuentre su tesoro.",
    "input": "Siempre sera una solo matriz de 3* 3, debes revisar si su diagonal principal y secundaria son iguales.",
    "output": "Si esto es verdad imprimir \" Tesoro encontrado\" y si es falso imprimir \" Sigue buscando\" .",
    "note": "",
    "topics": [
      "matrices",
      "implementation",
      "math"
    ],
    "id": 10633
  },
  {
    "title": "Ataque espacial",
    "url": "https://omegaup.com/arena/problem/Ataque-espacial",
    "history": "Te encuentras en una de las lunas de Saturno a bordo del Karelante ( una nave marciana de alta tecnologi\u0301a) , el Capita\u0301n James Holden es quie\u0301n dirige la nave y esta decidido a destruir a la proto- mole\u0301cula. Frente a la nave se pueden observar un grupo de asteroides de * * MxN* * ( como si fueran casillas) . Una fuente confiable del cinturo\u0301n les mando coordenadas de ciertos asteroides portadores de la proto- mole\u0301cula. En la nave existen * * K* * proyectiles nucleares que sera\u0301n lanzados con la finalidad de acabar con este extran\u0303o ser que amenaza con destruir a la raza humana en todo el sistema solar. Una vez interpretada la informacio\u0301n proporcionada por los cinturoneros el Capita\u0301n Holden te dara\u0301 las coordenadas a donde enviara\u0301s los proyectiles. # ProblemaUna vez que la informacio\u0301n sea desencriptada se te pasara\u0301n las coordenadas donde se encuentran los asteroides infectados con proto- mole\u0301culas y cuantas proto- mole\u0301culas se encuentran en esa posicio\u0301n. El Capita\u0301n Holden te dara\u0301 * * K* * coordenadas * * X, Y* * a donde se disparara\u0301n los proyectiles. Recuerda que estos proyectiles tienen * * + 1* * unidad de expansio\u0301n en todas sus direcciones incluyendo sus diagonales. Tu tarea despue\u0301s de terminado el ataque es indicar cua\u0301ntas unidades de proto- mole\u0301culas fueron destruidas.",
    "input": "Se te informara\u0301 el taman\u0303o del cuadrante mediante los valores * * M y N* * seguido del contenido del cuadrante. Una vez interpretada esta informacio\u0301n se indicara\u0301 la cantidad * * K* * de proyectiles a utilizar seguido de las * * K* * coordenadas * * X, Y* * a donde se disparara\u0301 el proyectil.",
    "output": "Un u\u0301nico nu\u0301mero que representa la cantidad de unidades de proto- mole\u0301cula destruida. # Ejemplos| | input3 31 1 11 1 11 1 112 2| | output9| | input3 31 1 11 1 11 1 112 3| | output6| | input5 60 1 3 1 9 11 0 1 0 0 01 1 0 8 0 22 0 4 5 3 91 7 0 0 0 131 14 24 5| | output46| | end# Li\u0301mites* * * 1 \u2264 M, N \u2264 1000* * * * * 1 \u2264 k \u2264 80 000* * * El cuadrante comienza en la posicio\u0301n ( 1, 1) empezando de la esquina superior izquierda* Los proyectiles que son lanzados nunca se disparan lo suficientemente cerca para que sus ondas expansivas se sobrepongan.",
    "note": "",
    "topics": [
      "math",
      "implementation",
      "matrices"
    ],
    "id": 10359
  },
  {
    "title": "Matrices Simples",
    "url": "https://omegaup.com/arena/problem/Matrices-Simples",
    "history": "Este es un problema sencillo: dada una matriz de n \u00d7 m enteros, tendra\u0301s que imprimir m enteros a_ 1, a_ 2, a_ 3, . . . a_ n, donde a_ i representa el nu\u0301mero menor de la columna i de la matriz.",
    "input": "En la primera li\u0301nea los enteros n y m ( 1\u2264 n. m \u22641000) , que representan las dimensiones de la matriz. En la segunda li\u0301nea recibira\u0301s n\u00d7 m enteros: la matriz. Cada nu\u0301mero de la matriz podra\u0301 tomar un valor entre - 100000 y 100000, inclusive.",
    "output": "Imprime m enteros a_ 1, a_ 2, a_ 3, . . . a_ n, donde a_ i representa el nu\u0301mero menor de la columna i de la matriz.",
    "note": "",
    "topics": [
      "math",
      "implementation",
      "matrices"
    ],
    "id": 10212
  },
  {
    "title": "Gimnasio Pokimon",
    "url": "https://omegaup.com/arena/problem/Gimnasio-Pokimon",
    "history": "El di\u0301a de hoy, tu GeraSalvaje tiro toda su comida en distintas partes de la casa. Deseas aprovechar tu tiempo por que en 10 min. debes de ir al siguiente gimnasio Pokimon, por lo que decides recoger u\u0301nicamente el a\u0301rea de taman\u0303o a* b que tenga mas comida tirada, ya que tardas el mismo tiempo en recoger una casilla con poca comida o una con mucha. Como eres ra\u0301pido programando decidiste hacer un co\u0301digo que te ayude a encontrar el a\u0301rea de taman\u0303o a* b con la mayor cantidad de comida.",
    "input": "En la primer linea, recibira\u0301s n y m, el largo y el ancho de la casa. A continuacio\u0301n, n lineas con m nu\u0301meros cada una * * ( ningu\u0301n valor es negativo, y su valor maximo es 1000) * * , que indican la cantidad de comida tirada en cada espacio de la casa. En la siguiente linea recibira\u0301s a y b que es el a\u0301rea que alcanzas a limpiar antes de irte al gimnasio.",
    "output": "Debes mostrar 2 valores en la primer linea: x1 y y1 ( separadas por un espacio) , que indican la posicio\u0301n de la casilla donde inicia la zona con mayor cantidad de comida; en la segunda linea x2 y y2, que indican la ultima casilla de la misma zona; y por ultimo en la siguiente linea la suma de la comida en esa area. ( NOTA: toma en cuenta que la primer casilla de la casa es la posicio\u0301n 0, 0; y que la ultima casilla de la casa es la posicio\u0301n n- 1, m- 1) . Apu\u0301rate que yo tambie\u0301n me tengo que ir al gimnasio ti\u0301o.",
    "note": "",
    "topics": [
      "dp",
      "math",
      "matrices"
    ],
    "id": 9580
  },
  {
    "title": "DosFilasSolo2conElementosColumnasImparesImpares",
    "url": "https://omegaup.com/arena/problem/DFSDCECII",
    "history": "Leer por teclado un valor N, 3 \u2264 N \u2264 10, y luego, por filas y columnas, los valores enteros de una matriz cuadrada de NxN. Determinar si existen en la matriz, dos filas ( so\u0301lo 2) que tengan todos sus elementos impares. En caso de que sea asi\u0301 imprimir \" SI\" , en otro caso imprimir \" NO\" . Ej: Si N= 5, y los valores ingresados son1 2 3 4 55 5 5 5 56 7 8 8 71 1 1 1 12 1 1 8 1La fila 1 y la fila 3 tienen todos sus elementos impares, por lo tanto hay que imprimir \" SI\"",
    "input": "La primer li\u0301nea de entrada contendra\u0301 el valor N. Luego vendra\u0301n N li\u0301neas con los 1 \u2264 N_ i \u2264 1000 elementos separados por un espacio.",
    "output": "Si hay dos filas que tengan todos sus elementos impares imprimir \" SI\" , en otro caso imprimir \" NO\" | | input51 2 3 4 55 5 5 5 56 7 8 8 71 1 1 1 12 1 1 8 1| | outputSI| | end",
    "note": "",
    "topics": [
      "matrices",
      "math"
    ],
    "id": 9505
  },
  {
    "title": "Tres Filas Consecutivas Producto M\u00faltiplo de 3",
    "url": "https://omegaup.com/arena/problem/TFCPM3-TresFilasConsecProdMult3",
    "history": "Leer por teclado un valor N, 3 \u2264 N \u2264 10, y luego, por filas y columnas, los valores enteros de una matriz cuadrada de NxN. Determinar si existen en la matriz, tres filas consecutivas que tengan ( cada una) como producto de sus elementos, un resultado que sea mu\u0301ltiplo de 3. En caso de que sea asi\u0301 imprimir \" SI\" , en otro caso imprimir \" NO\" . Ej: Si N= 5, y los valores ingresados son1 2 3 4 55 5 5 5 56 7 8 8 71 1 1 1 12 1 1 8 1Los productos totales de cada fila son: 120, 3125, 18816, 1, 16Es decir que no hay 3 filas consecutivas que tienen productos totales con resultado mu\u0301ltiplo de 3.",
    "input": "La primer li\u0301nea de entrada contendra\u0301 el valor N. Luego vendra\u0301n N li\u0301neas con los 1 \u2264 N_ i \u2264 1000 elementos separados por un espacio.",
    "output": "Si hay tres filas consecutivas con producto totales con resultado mu\u0301ltplo de 3 imprimir \" SI\" , en otro caso imprimir \" NO\" | | input51 2 3 4 55 5 5 5 56 7 8 8 71 1 1 1 12 1 1 8 1| | outputNO| | end",
    "note": "",
    "topics": [
      "matrices",
      "math"
    ],
    "id": 9504
  },
  {
    "title": "Tres Columnas Consecutivas con Suma Par",
    "url": "https://omegaup.com/arena/problem/TCCSP-3ColsConsecSumaPar",
    "history": "Leer por teclado un valor N, 3 \u2264 N \u2264 10, y luego, por filas y columnas, los valores enteros de una matriz cuadrada de NxN. Determinar si existen en la matriz, tres columnas consecutivas que tengan sumas totales que sean un nu\u0301mero par ( el valor de las sumas) . En caso de que sea asi\u0301 imprimir \" SI\" , en otro caso imprimir \" NO\" . Ej: Si N= 5, y los valores ingresados son1 2 3 4 55 5 5 5 56 7 8 8 71 1 1 1 12 1 1 8 1Las sumas totales de las columnas son: 15, 16, 18, 26, 19Es decir que hay 3 columnas consecutivas que tienen sumas totales pares ( 16, 18 y 26) .",
    "input": "La primer li\u0301nea de entrada contendra\u0301 el valor N. Luego vendra\u0301n N li\u0301neas con los 1 \u2264 N_ i \u2264 1000 elementos separados por un espacio.",
    "output": "Si hay tres columnas consucutivas con sumas totales pares imprimir \" SI\" , en otro caso imprimir \" NO\" | | input51 2 3 4 55 5 5 5 56 7 8 8 71 1 1 1 12 1 1 8 1| | outputSI| | end",
    "note": "",
    "topics": [
      "math",
      "matrices"
    ],
    "id": 9503
  },
  {
    "title": "Invirtiendo segmentos de una matriz",
    "url": "https://omegaup.com/arena/problem/Invirtiendo-segmentos-de-una-mat",
    "history": "Dada una matriz de N \u00d7 N enteros que contiene inicialmente los nu\u0301meros de 1 a N^ 2, tu labor sera\u0301 escribir un programa que ejecute una lista de las siguientes operaciones: - * R* j i_ 1 i_ 2 nbsp; nbsp; Invierte el segmento de la columna j que abarca de la fila i_ 1 a la fila i_ 2 inclusivo. - * P* i j nbsp; nbsp; nbsp; nbsp; nbsp; nbsp; nbsp; nbsp; Imprime el valor contenido en la fila i y columna j.",
    "input": "Dos enteros N, Q seguidos de una lista de Q operaciones. Puedes suponer que 0 \u2264 N \u2264 10^ 4, 0 \u2264 Q \u2264 5 \u00d7 10^ 3, 0 \u2264 i, j < N y i_ 1 \u2264 i_ 2.",
    "output": "Para cada operacio\u0301n de impresio\u0301n, un entero con el valor correspondiente.",
    "note": "",
    "topics": [
      "math",
      "matrices",
      "*special",
      "implementation"
    ],
    "id": 8777
  },
  {
    "title": "Enemigos Musicales ASINUS",
    "url": "https://omegaup.com/arena/problem/Enemigos-Musicales-ASINUS",
    "history": "Se acerca la temporada de exa\u0301menes en ASINUS INSTITUTE, y te has prometido que te pondra\u0301s a estudiar en cuanto termines cierto nivel en el u\u0301ltimo videojuego al que te has enganchado, el problema es que esta\u0301s atorado, y una promesa es una promesa. Hay dos enemigos en particular que te son muy problema\u0301ticos; el * * Melodrago\u0301n* * , una bestia cuyo soplo musical puede atacar a una cantidad ilimitada de casillas en horizontal, y el * * Armonente* * , un espectro cuyo canto del ma\u0301s alla\u0301 puede causar dan\u0303o a una distancia ilimitada en vertical. Puesto que tu pantalla es muy pequen\u0303a y estos monstruos no esta\u0301n balanceados, terminan aniquilandote desde lugares donde no puedes verlos, por lo que has decidido burlar al sistema. Te ayudo un poco y te proporciono el mapa del nivel, ( Obtenido con cierto esca\u0301ner de memoria muy popular) , ahora es tu tarea usarlo para determinar si te encuentras en una posicio\u0301n segura o esta\u0301s a punto de ser fulminado por una orquesta.",
    "input": "- Dos enteros, N y M, el nu\u0301mero de filas y columnas del mapa- En las siguientes N li\u0301neas, M * * caracteres* * . Toma en cuenta que: - El personaje esta\u0301 representado por una ' ` X` ' - Los Melodragones esta\u0301n representados por una ' ` M` ' - Los Armonentes esta\u0301n representados por una ' ` A` ' - Las casillas vaci\u0301as esta\u0301n representadas por un ' ` . ` '",
    "output": "` 0` , si el personaje se encuentra en rango de ataque de los monstruos, o ` 1` si se encuentra en una casilla segura.",
    "note": "- Como so\u0301lo hay dos salidas posibles, los casos esta\u0301n agrupados- Los juegos de ritmo son divertidos",
    "topics": [
      "implementation",
      "math",
      "matrices"
    ],
    "id": 8736
  },
  {
    "title": "Relaciones num\u00e9ricas",
    "url": "https://omegaup.com/arena/problem/Relaciones-numericas",
    "history": "Cuando se analizan los datos de una matriz, a menudo resulta u\u0301til poderdeterminar si dos columnas esta\u0301n relacionadas. Para este problema considerara\u0301sque dos columnas A y B de una matriz esta\u0301n relacionadas si para cada valordistinto en la columna A corresponde un valor u\u0301nico en la columna B. Por ejemplo, considera la siguiente matriz: | Columna 0| Columna 1| Columna 2| Columna 3 | | : \u2014\u2014\u2014\u2014- : | : \u2014\u2014\u2014\u2014- : | : \u2014\u2013: | : \u2014: | | 1 | 2 | 3 | 4 | | 5 | 6 | 7 | 8 | | 5 | 2 | 9 | 8 | | 5 | 2 | 3 | 8 | | 5 | 6 | 10 | 8 | En esta matriz la columna 0 esta\u0301 relacionada con la columna 3 porque a cadavalor distinto en la columna 0 le corresponde un valor u\u0301nico en la columna 3. Estoes, al valor 1 le corresponde siempre el valor 4 y al valor 5 le corresponde siempreel valor 8. Observa que no se puede decir que la columna 0 esta\u0301 relacionada conla columna 1, porque si bien al valor 1 corresponde siempre el valor 2, en elcaso del valor 5 observamos que en ocasiones corresponde el valor 6 y en otrasel valor 2. Escribe un programa que determine las relaciones nume\u0301ricas entre las columnasde una matriz.",
    "input": "Dos enteros m, n que indica el nu\u0301mero de filas y columnas en la matriz, acontinuacio\u0301n los m \u00d7 n enteros que definen los datos almacenados en lamatriz. Puede asumir que cada valor en la matriz esta\u0301 en el intervalo [ 1, 10] .",
    "output": "Dos enteros separados por un espacio por cada una de las relaciones nume\u0301ricas en la matriz. Las relaciones deben aparecer en orden creciente.",
    "note": "",
    "topics": [
      "math",
      "matrices",
      "implementation"
    ],
    "id": 8651
  },
  {
    "title": "El camino de Edison (D\u00edficil)",
    "url": "https://omegaup.com/arena/problem/El-camino-de-Edison-Dificil",
    "history": "Todos sabemos que una de las actividades favoritas de nuestro buen amigo Edison es cortar mazorca en su rancho en Ecuador. Como Edison es muy curioso, en una de sus expediciones para cortar lo que aqui\u0301 llamamos elotes, decidio\u0301 contar cua\u0301ntos caminos diferentes podri\u0301a tomar para llegar desde la esquina superior izquierda hasta la esquina inferior derecha de su rancho ( considerando que su rancho es una cuadri\u0301cula de n x m cuadros) . Su buena amiga Blanca, que siempre esta\u0301 intentando hablar de filosofi\u0301a y cosas raras, siempre le dice que no hay que voltear hacia atra\u0301s, siempre hacia adelante. Por lo que Edison decide que solamente va a hacer movimientos hacia la derecha y hacia abajo en su rancho, para asi\u0301 nunca volver al inicio y siempre dirigirse hacia la esquina inferior derecha porque ahi\u0301 esta\u0301 espera\u0301ndolo Blanca. Como Blanca ya esta\u0301 desesperada porque Edison se esta\u0301 tardando mucho contando todos los caminos, tu tarea es hacer un programa que dado * * N* * y * * M* * ( las longitudes del rancho de Edison) , calcule cua\u0301ntos caminos son posibles para recorrer todo el rancho dada la lo\u0301gica de Edison. ! [ Ejemplo] [ 1]",
    "input": "Dos nu\u0301meros enteros * * N* * : 1 \u2264 N \u2264 34 y * * M* * : 1 \u2264 M \u2264 34 las dimensiones del rancho",
    "output": "La cantidad de caminos posibles para llegar desde la esquina superior izquierda a la esquina inferior derecha.",
    "note": "",
    "topics": [
      "implementation",
      "matrices",
      "constructive algorithms",
      "dfs and similar",
      "number theory",
      "math",
      "dp",
      "data structures",
      "combinatorics"
    ],
    "id": 8588
  },
  {
    "title": "El camino de Edison (F\u00e1cil)",
    "url": "https://omegaup.com/arena/problem/El-camino-de-Edison-Facil",
    "history": "Todos sabemos que una de las actividades favoritas de nuestro buen amigo Edison es cortar mazorca en su rancho en Ecuador. Como Edison es muy curioso, en una de sus expediciones para cortar lo que aqui\u0301 llamamos elotes, decidio\u0301 contar cua\u0301ntos caminos diferentes podri\u0301a tomar para llegar desde la esquina superior izquierda hasta la esquina inferior derecha de su rancho ( considerando que su rancho es una cuadri\u0301cula de n x m cuadros) . Su buena amiga Blanca, que siempre esta\u0301 intentando hablar de filosofi\u0301a y cosas raras, siempre le dice que no hay que voltear hacia atra\u0301s, siempre hacia adelante. Por lo que Edison decide que solamente va a hacer movimientos hacia la derecha y hacia abajo en su rancho, para asi\u0301 nunca volver al inicio y siempre dirigirse hacia la esquina inferior derecha porque ahi\u0301 esta\u0301 espera\u0301ndolo Blanca. Como Blanca ya esta\u0301 desesperada porque Edison se esta\u0301 tardando mucho contando todos los caminos, tu tarea es hacer un programa que dado * * N* * y * * M* * ( las longitudes del rancho de Edison) , calcule cua\u0301ntos caminos son posibles para recorrer todo el rancho dada la lo\u0301gica de Edison. ! [ Ejemplo] [ 1]",
    "input": "Dos nu\u0301meros enteros * * N* * : 1 \u2264 N \u2264 34 y * * M* * : 1 \u2264 M \u2264 34 las dimensiones del rancho",
    "output": "La cantidad de caminos posibles para llegar desde la esquina superior izquierda a la esquina inferior derecha.",
    "note": "",
    "topics": [
      "math",
      "constructive algorithms",
      "dfs and similar",
      "number theory",
      "matrices",
      "implementation",
      "data structures",
      "dp"
    ],
    "id": 8587
  },
  {
    "title": "Display Led",
    "url": "https://omegaup.com/arena/problem/Display-Led",
    "history": "! [ enter image description here] [ 1] Las pantallas de led se conforman de una gran cantidad de puntos individuales que al encenderse y apagarse pueden mostrar ima\u0301genes de alta calidad. Los leds tienden a fallar, por lo que existe un dispositivo capaz de tomar una lectura de datos que indica los leds que ya no funcionan. Realizar un programa que lea la informacio\u0301n del estatus de la pantalla led e indique cual es el taman\u0303o del a\u0301rea ma\u0301s grande de las que fallan y cua\u0301l es el taman\u0303o de a\u0301rea ma\u0301s pequen\u0303a. Es posible que todos los leds fallen pero tambie\u0301n es posible que no exista ningu\u0301n led descompuesto. Este tipo de pantallas siempre genera fallas en taman\u0303os rectangulares y adema\u0301s esas a\u0301rea de fallas son perfectamente distinguibles, nunca se tocan unas con otras de manera vertical ni horizontal ( en diagonal si podri\u0301an llegar a tocarse) . El siguiente ejemplo muestra una lectura de una pantalla led. Las \u201cX\u201d indican un led que falla, los \u201c0\u201d ( cero) indican un led que funciona correctamente. ! [ enter image description here] [ 2] Esta pantalla tiene un grupo de leds con fallas en la posicio\u0301n 2, 6 de un taman\u0303o 4 ( 2x2) . En la posicio\u0301n 4, 2 hay un led que no funciona y en la posicio\u0301n 4, 5 tambie\u0301n hay un led descompuesto. Desarrolla un programa que muestre el taman\u0303o del a\u0301rea ma\u0301s grande de leds descompuestos y el taman\u0303o del a\u0301rea ma\u0301s pequen\u0303a de leds descompuestos.",
    "input": "En la primera li\u0301nea aparecera\u0301 el nu\u0301mero de renglones * R* y el nu\u0301mero de columnas * C* de la pantalla led separados por un espacio en blanco donde * * * 1< = R< = 300* * * y * * 1< = C< = 300* * . A continuacio\u0301n, aparecera\u0301n R li\u0301neas de C caracteres cada una de ellas representando con la pantalla led. Este grupo de caracteres solo incluye la * * X* * o el * * 0* * donde la * * X* * representa un led descompuesto y el * * 0* * representa un led que funciona correctamente.",
    "output": "En la primera li\u0301nea debe aparecer un entero indicando el taman\u0303o del a\u0301rea ma\u0301s grande de leds descompuestos. La segunda li\u0301nea, un entero que representa el taman\u0303o del a\u0301rea ma\u0301s pequen\u0303a de leds descompuestos. Puede que no existan leds descompuestos, en cuyo caso, tanto el a\u0301rea ma\u0301s grande como el a\u0301rea ma\u0301s pequen\u0303a sera\u0301 0 ( cero) .",
    "note": "",
    "topics": [
      "dfs and similar",
      "dp",
      "matrices",
      "shortest paths",
      "implementation",
      "math"
    ],
    "id": 8415
  },
  {
    "title": "Matriz Binaria",
    "url": "https://omegaup.com/arena/problem/Matriz-Binaria",
    "history": "Se te da una matriz booleana ( sus entradas son todas ceros o unos) de N renglones y M columnas. Puedes realizar la siguiente operacio\u0301n: * Elegir un renglo\u0301n o una columna y cambiar el estado de cada elemento. Si el elemento es 0 entonces se cambia a 1, y si el elemento es 1 entonces se cambia a 0. Se te permite realizar un nu\u0301mero ilimitado de operaciones. Al final, se interpreta cada renglo\u0301n como la representacio\u0301n binaria de un nu\u0301mero, donde la primera columna se asocia con el bit ma\u0301s signicativo. Tu tarea es maximizar la suma de todos los N nu\u0301meros.",
    "input": "La primera li\u0301nea contiene dos enteros N y M, el taman\u0303o de la matriz. Las siguientes N li\u0301neas contienen M nu\u0301meros, representando la matriz.",
    "output": "La ma\u0301xima suma que se puede obtener.",
    "note": "",
    "topics": [
      "math",
      "greedy",
      "matrices"
    ],
    "id": 8247
  },
  {
    "title": "Cultivo de guayabas",
    "url": "https://omegaup.com/arena/problem/Cultivo-de-guayabas",
    "history": "\u00a1Es e\u0301poca de cosecha! Y por lo tanto, el sen\u0303or Calvillo esta\u0301 muy emocionado de por fin poder recolectar las guayabas que esta\u0301n creciendo en los a\u0301rboles de su cultivo. El cultivo del sen\u0303or Calvillo es muy curioso, pues consiste en varios a\u0301rboles organizados en una cuadri\u0301cula de R renglones y C columnas, donde en cada celda hay exactamente un a\u0301rbol. Guayabas de un cultivo tan especial so\u0301lo pueden recolectarse con una ma\u0301quina muy especial, que toma todas las guayabas que haya en un recta\u0301ngulo con sus lados paralelos a los bordes del cultivo. Dicha ma\u0301quina tomara\u0301 todas las guayabas de los a\u0301rboles que alcance. Este an\u0303o el sen\u0303or Calvillo ha decidido que so\u0301lo tomara\u0301 guayabas de un recta\u0301ngulo, asi\u0301 que esta\u0301 comparando varios recta\u0301ngulos diferentes para saber cua\u0301ntas guayabas obtendri\u0301a de cada uno# ProblemaAyu\u0301dale al sen\u0303or Calvillo a saber cua\u0301ntas guayabas recolectara\u0301 dependiendo del a\u0301rea en que haga su cosecha.",
    "input": "En la primera li\u0301nea habra\u0301 dos enteros, R y C, 1 \u2264 R, C \u2264 1000, indicando la cantidad de renglones y columnas en el cultivo del sen\u0303or Calvillo. A esa le siguen R li\u0301neas, cada una con C nu\u0301meros, indicando la cantidad de guayabas que hay en cada a\u0301rbol. Ningu\u0301n a\u0301rbol tiene ma\u0301s de 10 guayabas. A esto le sigue una li\u0301nea con el nu\u0301mero P, donde 1 \u2264 P \u2264 1000 la cantidad de recta\u0301ngulos que el sen\u0303or Calvillo esta\u0301 considerando para su cosecha. Ningu\u0301n a\u0301rbol tiene ma\u0301s de 10 guayabasPor u\u0301ltimo hay P li\u0301neas, cada una con cuatro nu\u0301meros: El renglo\u0301n en que empieza el P- e\u0301simo recta\u0301ngulo que el sen\u0303or Calvillo considera cosechar, el renglo\u0301n en que termina, la columna en que empieza y la columna en que termina.",
    "output": "P li\u0301neas, una por cada plan cosecha, donde la P- e\u0301sima li\u0301nea tiene que indicar la cantidad de guayabas que el sen\u0303or Calvillo obtendri\u0301a si cosecha el P- e\u0301simo recta\u0301nguo",
    "note": "",
    "topics": [
      "matrices",
      "math"
    ],
    "id": 8185
  },
  {
    "title": "\u00bfQu\u00e9 es lo que hace un taxista?",
    "url": "https://omegaup.com/arena/problem/Que-es-lo-que-hace-un-taxista",
    "history": "Ricardo es un taxista oriundo de Aguascuadrientes, una hermosa ciudad famosa por tener forma de cuadri\u0301cula. Esto hace que so\u0301lo pueda ir de una celda a aquellas con las que comparte celdas. Es decir, so\u0301lo se puede mover en cuatro direcciones: arriba, abajo, izquierda y derecha. Cada di\u0301a, a Ricardo le llega un itinerario que muestra a que\u0301 celdas debera\u0301 de ir y en que\u0301 orden. La primera celda a la que tiene que ir esta\u0301 marcada con un 1, la siguiente con un 2, y asi\u0301 sucesivamente. La celda en que vive Ricardo esta\u0301 marcada un un 0. Ricardo siempre empieza el di\u0301a en su casa y lo termina ahi\u0301. Se te asegura que visitara\u0301 todas las celdas ( todas esta\u0301n numeradas) . El vehi\u0301culo en que viaja Ricardo consume un litro de combustible yendo de una celda a otra adyacente. Sabiendo esto, quiere que le ayudes a saber cua\u0301l es la menor cantidad posible de combustible en litros que puede usar durar su jornada. # ProblemaEscribe un programa que le ayude a Ricardo a saber cua\u0301l es la menor cantidad de combustible que puede usar durante su jornada.",
    "input": "En la primera li\u0301nea habra\u0301 dos enteros R y C, 1 \u2264 R, C \u2264 1000, la cantidad de renglones y columnas que hay en Aguascadrientes respectivamente. Se te asegura que R o C son mayores o iguales a 2. Despue\u0301s habra\u0301 R renglones, cada uno con C enteros, con el nu\u0301mero asignado en el itinerario de Ricardo para la celda en el R- e\u0301simo renglo\u0301n y la C- e\u0301sima columna.",
    "output": "Un solo entero, representando la menor cantidad de combustible que puede usar Ricardo.",
    "note": "",
    "topics": [
      "math",
      "matrices"
    ],
    "id": 8003
  },
  {
    "title": "Gran Gran Depresi\u00f3n",
    "url": "https://omegaup.com/arena/problem/Gran-Gran-Depresion",
    "history": "Es el an\u0303o 2031. Tu\u0301 y tus amigos esta\u0301n desempleados en San Francisco debido a la Gran Gran Depresio\u0301n de 2029. Para fortuna de ustedes, un magnate emprendedor decidio\u0301 regalar comida a los desempleados. Tu\u0301 y tus amigos esta\u0301n formados en la fila, pero esta es tan grande que so\u0301lo alcanzan a formarse una vez. A cada persona le dan una caja con botellas de substituto de comida. ! [ Como esto, pero peor] ( https: / / upload. wikimedia. org/ wikipedia/ commons/ thumb/ 6/ 6c/ Unemployed_ men_ queued_ outside_ a_ depression_ soup_ kitchen_ opened_ in_ Chicago_ by_ Al_ Capone",
    "input": "Hay varios casos de prueba. Para cada caso de prueba: En la primera li\u0301nea esta\u0301 S, la cantidad de botellas de cada caja. En las siguientes S li\u0301neas hay 2 enteros: la cantidad de calori\u0301as c_ i y el volu\u0301men v_ i de la i- e\u0301sima botella. En la siguiente li\u0301nea esta\u0301 A, la cantidad de amigos. En las siguientes A li\u0301neas esta\u0301 e_ j, el volu\u0301men del esto\u0301mago de la j- e\u0301sima persona.",
    "output": "Para cada caso de prueba imprime la ma\u0301xima cantidad de calori\u0301as total que puede ser ingerida por el grupo.",
    "note": "",
    "topics": [
      "math",
      "dp",
      "implementation",
      "matrices"
    ],
    "id": 7809
  },
  {
    "title": "Campos de nueces",
    "url": "https://omegaup.com/arena/problem/ElsaPatito",
    "history": "Elsa Patito sembro\u0301 nogales para su amado, Jaziel. Ha llegado el tiempo de cosecha, y Elsa se ha propuesto darle a su bebe\u0301 la mayor cantidad de nueces posibles. Como estaba muy ocupada entrenando peques para la OMI, se dio cuenta que so\u0301lo podi\u0301a recoger un a\u0301rea cuadrada de lado K. Por suerte para ella los pa\u0301jaros cantores le han dicho la cantidad de nueces que hay por metro cuadrado, \u00a1Hasta lograron entregarle una tabla con los datos! Elsa puso a sus bebe\u0301s a ayudarla a encontrar la cantidad ma\u0301xima de nueces que puede recoger en un cuadrado para darle a su amado. # ProblemaDada los lados de una matriz N y M, y el lado de una submatriz cuadrada de lado K, encuentra la suma mayor de elementos de una submatriz contenida.",
    "input": "En la primera li\u0301nea los datos N, M y K. En los siguientes N renglones, M enteros e_ i, j representando la cantidad de nueces en ese metro cuadrado.",
    "output": "En la primera li\u0301nea la cantidad ma\u0301xima de nueces. En la segunda li\u0301nea dos enteros separados por un espacio que son, respectivamente, el renglo\u0301n y la columna de la esquina superior izquierda del terreno.",
    "note": "",
    "topics": [
      "matrices",
      "math"
    ],
    "id": 7795
  },
  {
    "title": "Crucigrama",
    "url": "https://omegaup.com/arena/problem/Cruci",
    "history": "Por semanas has estado resolviendo crucigramas. Ahora quieres ganar un poco de dinero vendie\u0301ndole crucigramas a los perio\u0301dicos diarios de la regio\u0301n. Como no quieres perder tiempo hacie\u0301ndolos a mano, vas a escribir un programa que los genere. Al programa le das 2 palabras: palabra A y palabra B. La palabra A la debe escribir horizontalmente, y la palabra B la debe escribir verticalmente; de tal manera que las palabras se puedan cruzar; esto es deben compartir exactamente una letra. La letra compartida debe ser la primera letra en A que aparece en B, mas preciso: debe ser la primera ocurrencia de la letra, en ambas palabras. Por ejemplo: dadas las palabras A = \" ABBA\" y B = \" CCBBD\" , el programa debe generar, en este caso, las 5 li\u0301neas que se muestran en el ejemplo mas abajo.",
    "input": "La primera y u\u0301nica li\u0301nea de entrada contiene dos palabras: A y B; de no mas de 30 letras cada una, separadas por un solo espacio. Ambas palabras esta\u0301n escritas con letras mayu\u0301sculas del alfabeto espan\u0303ol. En todos los casos habra\u0301, al menos, una letra comu\u0301n en ambas palabras.",
    "output": "Si la longitud de la palabra A es N, y la longitud de la palabra B es M. La salida deben ser M li\u0301neas con N caracteres cada linea. La figura que se forme con la salida debe contener a las 2 palabras cruzadas, como se describe en la explicacio\u0301n del problema ( por eso se llama crucigrama) . El resto de los caracteres, en cada li\u0301nea, deben ser puntos ( el cara\u0301cter punto) .",
    "note": "",
    "topics": [
      "implementation",
      "matrices",
      "math"
    ],
    "id": 7783
  },
  {
    "title": "Mayor de una matriz ",
    "url": "https://omegaup.com/arena/problem/Mayor-de-una-matriz-",
    "history": "Este problema es fa\u0301cil ya que como su nombre indica dada una matriz M X N solo debes encontrar el numero mayor",
    "input": "M y N seguido de M lineas y N lineas que representan la matriz",
    "output": "La salida debe ser el numero mayor de la matriz M X N",
    "note": "",
    "topics": [
      "math",
      "implementation",
      "matrices"
    ],
    "id": 7779
  },
  {
    "title": "Corrigiendo y Calculando",
    "url": "https://omegaup.com/arena/problem/Corrigiendo-y-Calculando-",
    "history": "El profesor de matema\u0301tica explico a sus alumnos en clase, que dada dos matrices A y B, para poder sumarlas o restarlas la regla ba\u0301sica es que el nu\u0301mero de filas y columnas de la matriz A debe ser igual al nu\u0301mero de filas y columnas de la matriz B; ! [ enter image description here] [ 1] la suma y resta de A y B, que se denota con A+ B y A- B respectivamente, da como resultado la nueva matriz C: ! [ enter image description here] [ 2] Donde cada elemento ! [ enter image description here] [ 3] esta\u0301 definido por: ! [ enter image description here] [ 4] El profesor al final de la clase entrego una serie problemas, donde a cada uno de ellos incluye 2 matrices A y B cuadradas, las cuales deben sumar o restar segu\u0301n se indique, pero reconocio\u0301 que las matrices teni\u0301an un de errores en su estructura, la matriz A estaba girada a la derecha y la matriz B estaba girada a la izquierda, ambas en 90\u00b0, ! [ enter image description here] [ 5] por lo que debi\u0301an crear un programa que las gire a la posicio\u0301n correcta y aplique la operacio\u0301n permitida de suma( + ) o resta( - ) solicitada en la entrada, o indicar si la operacio\u0301n es desconocida o bien mostrar el nu\u0301mero de filas y columnas de ambas matrices en el formato indicado si la no se cumple con la regla ba\u0301sica para la suma o resta.",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "implementation",
      "math",
      "matrices"
    ],
    "id": 7756
  },
  {
    "title": "Triple Recursion",
    "url": "https://omegaup.com/arena/problem/Triple-Recursion",
    "history": "You are filling a matrix by following a set of rules. Given a square matrix of size n \u00d7 n, where ( 0, 0) is its upper- left cell and ( n- 1, n- 1) is its bottom- right cell, fill all the cells according to the following rules: Value of a[ i] [ j] is defined recursively as follows: if i = 0 and j = 0 then a[ i] [ j] = melse if i = j then a[ i- 1] [ j- 1] + kelse if i > j then a[ i- 1] [ j] - 1else if i < j then a[ i] [ j- 1] - 1In other words, given integers m and k, the matrix is filled by putting in the upper- left cell, and then every other cell ( i, j) on the main diagonal of the matrix is filled with the value a[ i- 1] [ j- 1] + k. Remaining cells of the matrix are filled according to the two other recursive rules defined above. For example, for n= 4, m= 3, k= 1, the matrix will be: 3 2 1 02 4 3 21 3 5 40 2 4 6The task is to print the matrix after all its cells are filled with values. # Input FormatIn the first and only line of the input, there are space- separated integers n, m, and k, where n is the size of the matrix and both m and k denote values used in the recursive definition in the statement. # Constraints- 4 \u2264 n \u2264 100- 5 \u2264 m \u2264 100- 2 \u2264 k \u2264 50# Output FormatOutput the matrix with exactly n lines. In the i^ th line, print n space- separated integers denoting the i^ th row of the matrix with all cells filled with appropriate values. # Example| | input5 10 7| | output10 9 8 7 69 17 16 15 148 16 24 23 227 15 23 31 306 14 22 30 38| | descriptionSee the color- coded illustration below for the right answer: ! [ image1] ( image1. png) | | input6 5 2| | output5 4 3 2 1 04 7 6 5 4 33 6 9 8 7 62 5 8 11 10 91 4 7 10 13 120 3 6 9 12 15| | descriptionSee the color- coded illustration below for the right answer for the matrix: ! [ image2] ( image2. png) | | end",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "math",
      "implementation",
      "dp",
      "matrices"
    ],
    "id": 7431
  },
  {
    "title": "Ordenando columnas",
    "url": "https://omegaup.com/arena/problem/Ordenando-columnas",
    "history": "Dada una matriz A de m filas y n columnas. Escribe un programa que imprimaA con cada una de sus columnas ordenada de manera creciente.",
    "input": "Dos enteros m, n que representas el nu\u0301mero de filas y columnas de la matrizA. A continuacio\u0301n los m \u00d7 n enteros que representan cada una de lasentradas de la matriz. Puedes asumir que cada entrada en la matriz es unentero cuyo valor esta en el intervalo [ - 100, 100] y que 1 \u2264 m, n \u2264 100",
    "output": "La matriz A con cada una de sus columnas ordenada de manera creciente.",
    "note": "",
    "topics": [
      "matrices",
      "math",
      "sortings",
      "implementation"
    ],
    "id": 7130
  },
  {
    "title": "Cortando el C\u00e9sped ",
    "url": "https://omegaup.com/arena/problem/Cortando-el-Cesped-",
    "history": "Como programador , una de mis actividades menos preferidas es cortar el ce\u0301sped . Cada semana , hay que sacar la ma\u0301quina y hacer el mismo procedimiento tedioso ( ir y venir sobre el ce\u0301sped) hasta que se corta todo . Hace algunos meses , me canse de hacer esto y comence\u0301 a cortar u\u0301nicamente secciones de ce\u0301sped . La porcio\u0301n de ce\u0301sped en mi casa , puede ser vista como una cuadri\u0301cula de 10 x 10 , formando 100 secciones de ce\u0301sped . Cada semana , seleccione 3 filas y 3 columnas para cortar las secciones de cada una de ellas . Despue\u0301s de un tiempo , me di cuenta de que difi\u0301cilmente lograri\u0301a que la altura del ce\u0301sped fuera la misma en toda la cuadri\u0301cula . Cuando comence\u0301 con esta nueva te\u0301cnica , cada seccio\u0301n de ce\u0301sped media 1 cm de alto . Cada semana , cada seccio\u0301n crece 1 cm y corto algunas secciones como se describio\u0301 anteriormente . Cuando corto una seccio\u0301n de ce\u0301sped , su altura vuelve a ser de 1 cm . Dadas las filas y columnas que corte en las u\u0301ltimas semanas , \u00bfPodri\u0301as ayudarme a saber cuanto mide la altura cada seccio\u0301n de ce\u0301sped?",
    "input": "La primera li\u0301nea contiene un entero k , que es el nu\u0301mero de semanas en las que he llevado a cabo la nueva te\u0301cnica . Las siguientes k li\u0301neas describen cada semana . Cada una de estas li\u0301neas tiene 6 enteros ( a_ 1 , . . . , a_ 6) . Los primeros tres representan las filas que seleccione para cortar en esa semana , mientras que los siguientes tres enteros , son las columnas que corte en dicha semana . Las tres filas seleccionadas por semana sera\u0301n distintas , asi\u0301 como las columnas .",
    "output": "Una matriz 10 x 10 de enteros , que denotan la altura de el pasto inmediatamente despue\u0301s de la u\u0301ltima vez que se corto\u0301 . La primera fila es la fila 1 y la u\u0301ltima fila es la fila 10 . La primera columna es la columna 1 y la u\u0301ltima columna es la columna 10 .",
    "note": "",
    "topics": [
      "math",
      "matrices"
    ],
    "id": 6950
  },
  {
    "title": "Direcciones al Tec",
    "url": "https://omegaup.com/arena/problem/itp18-direcciones",
    "history": "\u00a1Hoy es el gran di\u0301a! Hoy se lleva a cabo el * * 1er Concurso de Programacio\u0301n del Instituto Tecnolo\u0301gico de Pachuca* * ; sin embargo de tan emocionadx que esta\u0301s se te olvido\u0301 co\u0301mo llegar al Tec y vas a tener que pedir ayuda en la calle. El mapa de tu casa al Tec es un recta\u0301ngulo de N casillas de alto por M casillas de ancho. Tu casa esta\u0301 en la esquina superior izquierda y el Tec esta\u0301 en la esquina inferior derecha. Empiezas tu recorrido en tu casa ( esquina superior izquierda) viendo hacia el Este. Dado que no sabes co\u0301mo llegar en cada casilla ( inclui\u0301da la casilla inicial) pides ayuda a la persona en esa casilla. Esa persona te puede aconsejar: - Sigue derecho- Gira a la derecha- Gira a la izquierda- Date la vueltaDespue\u0301s de recibir el consejo, lo sigues y * * avanzas una casilla* * . Al llegar a una nueva casilla vuelves a hacer el mismo proceso: preguntar, seguir consejo, avanzar una casilla. Asi\u0301 hasta que llegues al Tec ( esquina inferior derecha) o te salgas del mapa ( si te sales del mapa ya te * * perdiste* * y es un hecho que no llegara\u0301s al concurso) . Escribe un programa que dadas las respuestas de las personas en cada casilla del mapa determine si vas a llegar al Tec o te vas a perder.",
    "input": "- Dos enteros indicando las dimensiones del mapa. El formato es ` N M` donde: - N alto del mapa- M ancho del mapa- N renglones conteniendo M valores separados por espacios. Estos valores representan los consejos que vas a recibir en cada casilla. Los posibles valores son: - 0 sigue derecho- 1 gira a la derecha- 2 gira a la izquierda- 3 date la vuelta",
    "output": "- Imprime ` llegaste` si siguiendo las instrucciones llegas al Tec- Imprime ` te perdiste` si te sales del mapa# Ejemplos| | input2 30 1 00 2 0| | outputllegaste| | description- Empiezas en tu casa viendo hacia el Este ( renglo\u0301n: 0, columna: 0) . - Sigues derecho ( renglo\u0301n: 0, columna: 1) . - Giras a la derecha ( renglo\u0301n: 1, columna: 1) . - Giras a la izquierda ( renglo\u0301n: 1, columna: 2) . - Esta\u0301s en la esquina inferior derecha. \u00a1Llegaste! | | input2 30 1 01 1 0| | outputte perdiste| | description- Empiezas en tu casa viendo hacia el Este ( renglo\u0301n: 0, columna: 0) . - Sigues derecho ( renglo\u0301n: 0, columna: 1) . - Giras a la derecha ( renglo\u0301n: 1, columna: 1) . - Giras a la derecha ( renglo\u0301n: 1, columna: 0) . - Giras a la derecha ( renglo\u0301n: 0, columna: 0) . - Sigues derecho y te sales del mapa. \u00a1Te perdiste! | | input1 23 0| | outputte perdiste| | description- Empiezas en tu casa viendo hacia el Este ( renglo\u0301n: 0, columna: 0) . - Te das la vuelta y te sales del mapa. \u00a1Te perdiste! | | end",
    "note": "",
    "topics": [
      "matrices",
      "math",
      "implementation"
    ],
    "id": 6864
  },
  {
    "title": "Cricko sums",
    "url": "https://omegaup.com/arena/problem/Crazy-sums",
    "history": "Dado un conjunto A de k nu\u0301meros enteros positivos distintos y un entero positivo n, determina el nu\u0301mero total de maneras en las que podemos formar n usando la suma de algunos elementos de A. Se permiten repeticiones y el orden de los sumandos si\u0301 importa.",
    "input": "La primera li\u0301nea contiene el valor de k. La segunda li\u0301nea contiene k nu\u0301meros distintos A_ 1, A_ 2, . . . , A_ k, que son los elementos del conjunto A. La tercera li\u0301nea contiene el valor de n.",
    "output": "El nu\u0301mero de maneras en las que podemos formar el valor de n. Como este valor puede ser muy grande, impri\u0301melo mo\u0301dulo 10^ 7+ 19.",
    "note": "",
    "topics": [
      "matrices",
      "dp",
      "math"
    ],
    "id": 6577
  },
  {
    "title": "Amehc vs Citalord",
    "url": "https://omegaup.com/arena/problem/Amehc-vs-Citalord",
    "history": "Amehc, un raro ser humano nativo de Veracruz es motivo de estudio de muchos cienti\u0301ficos. Estos cienti\u0301ficos estudian principalmente su forma de desplazamiento. Para un estudio de manera mas grafica y visual, los cienti\u0301ficos recomiendan imaginar Veracruz como una cuadri\u0301cula de dimensiones N* M. Al ser una ciudad pueden existir casillas bloqueadas, ya sea por casas, automo\u0301viles o muchas otras cosas. Lo que han descubierto los cienti\u0301ficos es lo siguiente: - Amehc tiene un robot. - Por alguna extran\u0303a razo\u0301n Amehc siempre quiere salir de su casa e ir a dos lugares diferentes, llame\u0301moslos el lugar A y el lugar B. - Amech siempre se dirige al lugar A y manda a su robot al lugar B. - No deberi\u0301a ser sorpresa que tanto Amehc y su robot se mueven de una manera muy particular ( adema\u0301s de que siempre buscan llegar a su destino en el menor numero de pasos) . - En un paso tanto Amehc como su robot pueden ir a cualquier casilla adyacente, es decir, que compartan un lado. Siempre con la siguiente prioridad: Norte , Este , Sur y Oeste. - Si alguien llega a su destino antes que el otro se va a quedar sin moverse en la casilla hasta que el otro llegue a la suya, es decir, si Amehc llega al punto A antes que su robot al punto B, Amehc va a esperar sin moverse en el punto A hasta que su robot llegue. Ana\u0301logamente si su robot llega primero. - Una vez que ambos llegan a su destino deciden regresar al lugar donde comenzaron sus movimientos, ahora con la peculiaridad de que regresan exactamente por el camino en que llegaron. # ProblemaEl malvado Citalord se desperto\u0301 con ganas de molestar a Amehc y va a bloquear exactamente una casilla que antes no lo estaba, justo en el momento en que tanto Amehc y su robot esta\u0301n a su destino. Recuerda que si alguno llega primero decide esperar hasta que el otro llegue\u0301 al suyo. Va a bloquear aquella casilla talque ni Amehc ni su robot puedan llegar al comienzo y adema\u0301s que esta casilla este lo mas alejada de su casa.",
    "input": "En la primera li\u0301nea N y M, las dimensiones del mundo. En la segunda li\u0301nea dos enteros F_ c y C_ c, la fila y la columna en la que empieza tanto Amehc como su robot respectivamente. En la tercera li\u0301nea dos enteros F_ a y C_ a, la fila y la columna donde se encuentra el punto A. En la cuarta li\u0301nea dos enteros F_ b y C_ b, la fila y la columna donde se encuentra el punto B. En las siguientes N li\u0301neas habra\u0301 M caracteres que representan el mundo. - ' . ' : Representa una casilla por la que se puede pasar. - ' # ' : Representa una casilla bloqueada.",
    "output": "Las coordenadas de la casilla que Citalord debe bloquear.",
    "note": "",
    "topics": [
      "math",
      "graphs",
      "dfs and similar",
      "shortest paths",
      "matrices",
      "implementation"
    ],
    "id": 6517
  },
  {
    "title": "Escape del laberinto",
    "url": "https://omegaup.com/arena/problem/Escape-del-laberinto",
    "history": "Imagina que estas atrapado en un laberinto de celdas de * * n* * por * * m* * y pretendes escapar de e\u0301l. Se te dara\u0301 la descripcio\u0301n de un laberinto del cua\u0301l debera\u0301s indicar si existe salida o no de e\u0301l. Habra\u0301 exactamente una entrada, y exactamente una salida en el laberinto, y se encuentran en los bordes del laberinto.",
    "input": "Leera\u0301s dos nu\u0301meros enteros positivos F y C ( 3 < F, C \u2264 20) , que corresponden a las filas y columnas, respectivamente del laberinto. Enseguida aparecera\u0301n * F* li\u0301neas que contienen la informacio\u0301n del laberinto. El cara\u0301cter < code> # < / code> denota una pared. El cara\u0301cter < code> E< / code> denota la entrada y < code> S< / code> la salida, los espacios son los lugares por los que puedes moverte.",
    "output": "Determina si hay alguna ruta desde la entrada a la salida, e imprime \" Si\" si es asi\u0301, o \" No\" en caso contrario.",
    "note": "",
    "topics": [
      "dfs and similar",
      "graphs",
      "dp",
      "shortest paths",
      "math",
      "matrices",
      "graph matchings"
    ],
    "id": 6307
  },
  {
    "title": "Buscaminas-",
    "url": "https://omegaup.com/arena/problem/Buscaminas-",
    "history": "\u00bfHas jugado alguna vez al buscaminas? E\u0301ste es un juego que viene con cierto sistema operativo cuyo nombre no puedo recordar. El objetivo del juego es el de encontrar do\u0301nde esta\u0301n localizadas todas las minas en un campo de M \u00d7 N . El siguiente campo de 4 \u00d7 4 contiene 2 minas: [ \u2297 - - - - - - - - \u2297 - - - - - - ] El juego muestra un nu\u0301mero en un cuadro que te dice cua\u0301ntas minas hay adyacentes a ese cuadro. Cada cuadro tiene cuando mucho ocho cuadros adyacentes, por lo que usaremos el nu\u0301mero 9 para indicar la presencia de una mina. [ 9 1 0 02 2 1 01 9 1 01 1 1 0 ]",
    "input": "Consiste de dos nu\u0301meros enteros, M, N, separados por un espacio y cada uno con un valor entre 1 y 20, seguidos de M li\u0301neas cada una con N enteros, 0 o 1, separados por espacios ( un 1 indica la presencia de una mina en esa posicio\u0301n, un 0 indica que no hay mina) .",
    "output": "Consiste de M li\u0301neas cada una con N enteros, del 0 al 9, separados por espacios.",
    "note": "",
    "topics": [
      "math",
      "implementation",
      "matrices"
    ],
    "id": 6276
  },
  {
    "title": "Diagonales Iguales",
    "url": "https://omegaup.com/arena/problem/Diagonales-Iguales",
    "history": "Se ingresa un valor entero N ( 1 \u2264 N \u2264 100) , y a continuacio\u0301n N filas conteniendo cada una N valores enteros. Si las dos diagonales, son iguales, elemento a elemento, de arriba a abajo imprimir \" Iguales\" , en otro caso, imprimir \" No Iguales\"",
    "input": "La primer li\u0301nea de entrada contendra\u0301 el valor N. Luego vendra\u0301n N li\u0301neas con los 1 \u2264 X_ i \u2264 1000 elementos de cada fila separados por un espacio. | | input61 1 1 1 1 11 1 3 0 1 11 2 1 1 1 14 3 3 3 3 35 1 1 1 1 56 1 2 2 1 6| | outputIguales| | end",
    "output": "",
    "note": "",
    "topics": [
      "math",
      "implementation",
      "matrices"
    ],
    "id": 6255
  },
  {
    "title": "Matriz con Mitades Iguales",
    "url": "https://omegaup.com/arena/problem/Matriz-con-Mitades-Iguales",
    "history": "Se ingresa un valor entero M ( 1< = M< = 100) y un valor entero N ( 1< = N< = 100 y N es par) , y a continuacio\u0301n M filas conteniendo cada una N valores enteros. Si la primer mitad vertical de la matriz ( todas las filas y las columnas de 0 a N/ 2- 1) , es igual a la segunda mitad vertical, imprimir un \" 1\" , en otro caso imprimir \" 0\" .",
    "input": "La primer li\u0301nea de entrada contendra\u0301 los valores M y N. Luego vendra\u0301n M li\u0301neas con los 1 \u2264 X_ i \u2264 1000 elementos de cada fila separados por un espacio. | | input4 61 1 1 1 1 11 2 1 1 2 11 3 1 1 3 14 4 4 4 4 4| | output1| | end",
    "output": "",
    "note": "",
    "topics": [
      "matrices",
      "math"
    ],
    "id": 6254
  },
  {
    "title": "Matrices giradas",
    "url": "https://omegaup.com/arena/problem/Matrices-giradas",
    "history": "Dada una matriz cuadrada A de N \u00d7 N, se puede definir la operacio\u0301n de giro a la derechade A como sigue: el primer renglo\u0301n de la matriz A se convierte en la u\u0301ltima columna de la matriz girada, el segundo renglo\u0301n de la matriz A se convierte en la penu\u0301ltima columna de la matriz girada, y asi\u0301 sucesivamente hasta que el u\u0301ltimo renglo\u0301n de la matriz A se convierte en la primera columna de la matriz girada. Por ejemplo, si N = 3 y A es la matriz A = ( [ 3 1 4 1 5 9 2 6 5 ] ) ; entonces al girar A a la derecha obtenemos la matriz A' = ( [ 2 1 3 6 5 1 5 9 4 ] ) .",
    "input": "Consiste de un nu\u0301mero entero N con 1 \u2264 N \u2264 20, seguido de N renglones, cada uno de los cuales contiene N nu\u0301meros enteros entre 0 y 9, separados por espacios, describiendo a la matriz A.",
    "output": "Consiste de N renglones, cada uno de los cuales contiene N nu\u0301meros enteros separados por espacios describiendo a la matriz A' .",
    "note": "",
    "topics": [
      "math",
      "matrices",
      "implementation"
    ],
    "id": 6133
  },
  {
    "title": "Matriz serpentina",
    "url": "https://omegaup.com/arena/problem/Matriz-serpentina",
    "history": "Escribe un programa que, dados dos nu\u0301meros enteros M, N, construya una matriz con M renglones y N columnas cuyas entradas sean los nu\u0301meros 1, 2, . . . , M\u00b7N acomodados como una serpentina, comenzando con el 1 en la entrada ( 0, 0) , siguiendo hacia la derecha ( hasta el final del renglo\u0301n) , luego una posicio\u0301n hacia abajo, siguiendo hacia la izquierda ( hasta el principio del renglo\u0301n) , luego una posicio\u0301n hacia abajo y asi\u0301 sucesivamente ( ver ejemplo) .",
    "input": "Consiste de dos nu\u0301meros enteros positivos, M, N ( ambos menores que 20) , separados por un espacio.",
    "output": "La matriz requerida, debiendo haber M renglones, cada uno con N nu\u0301meros enteros separados por espacios.",
    "note": "",
    "topics": [
      "implementation",
      "matrices",
      "math"
    ],
    "id": 6123
  },
  {
    "title": "Sopa de letras 02",
    "url": "https://omegaup.com/arena/problem/Sopa-de-letras-02",
    "history": "Dada una cuadri\u0301cula de * * m* * por * * n* * de letras, ( 1 \u2264 m, n \u2264 150) , y una lista de palabras, encuentre la ubicacio\u0301n en la cuadri\u0301cula en que la palabra se puede encontrar. Cada palabra coincide con una li\u0301nea de letras en li\u0301nea recta de manera ininterrumpida en la cuadri\u0301cula. La palabra puede estar formada por letras, nu\u0301meros o si\u0301mbolos de puntuacio\u0301n imprimibles. Una palabra puede coincidir con las letras en la cuadri\u0301cula independientemente de de si son mayu\u0301sculas o minu\u0301sculas ( es decir, las letras mayu\u0301sculas y minu\u0301sculas deben tratarse del mismo modo) . La coincidencia se puede hacer en cualquiera de las ocho direcciones, ya sea horizontal, vertical o diagonalmente. sobre la cuadri\u0301cula.",
    "input": "La entrada comienza con un par de enteros, * * m* * seguido de * * n* * , 1 \u2264 m, n \u2264 150 en una li\u0301nea. Las siguientes * * m* * li\u0301neas contienen * * n* * letras cada una; esta es la cuadri\u0301cula de letras en la que debera\u0301s buscar las palabras de la lista. Las letras en la cuadri\u0301cula pueden estar en mayu\u0301sculas o minu\u0301sculas. Despue\u0301s de las * * m* * li\u0301neas que forman la cuadri\u0301cula, habra\u0301 otro entero * * k* * en una li\u0301nea ( 1 \u2264 k \u2264 20) . Las siguientes li\u0301neas de entrada contienen la lista de palabras que deben ser buscadas, una palabra por li\u0301nea. Estas palabras pueden contener letras mayu\u0301sculas y minu\u0301sculas, nu\u0301meros y otros caracteres imprimibles.",
    "output": "Para cada palabra en la lista de palabras, un par de nu\u0301meros enteros que representan la ubicacio\u0301n de la palabra correspondiente en la cuadri\u0301cula. Los enteros deben estar separados por un solo espacio. El primer entero es la li\u0301nea en la cuadri\u0301cula donde se puede encontrar la primera letra de la palabra dada ( 1 representa la primer li\u0301nea. El segundo entero es la columna en la cuadri\u0301cula donde se puede encontrar la primera letra de la palabra dada ( 1 representa la columna ma\u0301s a la izquierda en la cuadri\u0301cula) . Si se puede encontrar una palabra ma\u0301s de una vez en la cuadri\u0301cula, entonces la ubicacio\u0301n que se emite debe corresponder a la ocurrencia del menor valor para la li\u0301nea ( es decir, la coincidencia de la primera letra de la palabra ma\u0301s cercana a la parte superior de la cuadri\u0301cula) . Si dos o ma\u0301s palabras empatan en la li\u0301nea, la salida debe corresponder a la parte ma\u0301s a la izquierda de estas ocurrencias ( menor valor de la columna) . Se asegura que todas las palabras pueden ser encontrado al menos una vez en la cuadri\u0301cula.",
    "note": "",
    "topics": [
      "matrices",
      "strings",
      "math",
      "implementation"
    ],
    "id": 6017
  },
  {
    "title": "Aut\u00f3matas celulares",
    "url": "https://omegaup.com/arena/problem/Automatas-celulares",
    "history": "Un auto\u0301mata celular es un modelo matema\u0301tico que es u\u0301til para llevar a cabo simulaciones discretas. E\u0301ste consiste de una rejilla donde cada celda es llamada ce\u0301lula, de una asignacio\u0301n de estados discretos para las ce\u0301lulas, de una descripcio\u0301n de la vecindad de cada ce\u0301lula del auto\u0301mata y de un conjunto de reglas que permiten actualizar los estados de las ce\u0301lulas del tiempo t_ i al tiempo t_ i + 1. Escribe un programa que implemente un auto\u0301mata celular con una rejilla de N \u00d7 N ce\u0301lulas con estados binarios ` # ` o ` - ` . La vecindad de una ce\u0301lula consistira\u0301 de ella y de las ocho ce\u0301lulas que la rodean ( vecindad de Moore) y se debe considerar que la u\u0301ltima fila es vecina de la primera ( de manera circular) mientras que lo mismo ocurre para la u\u0301ltima y primera columnas.",
    "input": "El entero N seguido de una matriz de N \u00d7 N caracteres ` # ` o ` - ` que denotan los estados de las ce\u0301lulas de la rejilla al tiempo t_ 0. Posteriormente un entero M seguido de M matrices de 3 \u00d7 3, una al lado de la otra y separadas por espacios, las cuales denotan las vecindades para las que la ce\u0301lula central en el tiempo t_ i se vera\u0301 como ` # ` en el tiempo t_ i+ 1 ( la ce\u0301lula se vera\u0301 como ` - ` para cualquier otra vecindad) . Finalmente, un entero T. Puedes suponer que 1 \u2264 N \u2264 100, 0 \u2264 M \u2264 512 y 0 \u2264 T \u2264 10.",
    "output": "Una matriz de N \u00d7 N caracteres que muestre la rejilla del auto\u0301mata en el tiempo T. | | input4- # - # # - # \u2013# - # # - # - 01| | output\u2014\u2014\u2014\u2014\u2014- | | input4- # - # # - # \u2013# - # # - # - 3- # - - # - # # # # - # # # # # - # - # - - # - # # # 1| | output# - # \u2013# - # # - # \u2013# - # | | input4# # # # # \u2013# # \u2013# # # # # 4# # # # # # # \u2013 \u2013# # \u2013 \u2013# # \u2013 \u2013# # \u2013 \u2013# # # # # # # 1| | output\u2014\u2013# # \u2013# # \u2014\u2013| | input4# # # # # \u2013# # \u2013# # # # # 4# # # # # # # \u2013 \u2013# # \u2013 \u2013# # \u2013 \u2013# # \u2013 \u2013# # # # # # # 2| | output\u2014\u2014\u2014\u2014\u2014- | | end",
    "note": "",
    "topics": [
      "implementation",
      "matrices",
      "math",
      "sortings",
      "binary search"
    ],
    "id": 5949
  },
  {
    "title": "Mi amigo Azul",
    "url": "https://omegaup.com/arena/problem/Mi-amigo-Azul",
    "history": "Azul es una mascota que le gusta andar en ci\u0301rculos, cuando sale al parque a pasear siempre toma un camino que le permita volver exactamente al punto donde inicio\u0301, es decir, le gusta hacer circuitos. Azul es un excelente atleta y corre increiblemente ra\u0301pido, tanto que es imposible seguirle el ritmo, como tambie\u0301n es excepcionalmente inteligente, te deja pistas para que puedas seguir su camino y puedas hacer el mismo recorrido que e\u0301l. Como amigo de Azul, temes que se pierda y has decidido ponerle un gps en el collar para saber a toda hora, donde esta\u0301 y cuales son sus recorridos. Desafortunadamente, necesitas el programa que interprete la informacio\u0301n, \u00bfPodra\u0301s desarrollarlo? # Problema# El mapa del parque donde Azul pasea es una cuadricula de M filas por N columnas, en cada cada casilla de la cuadricula hay informacio\u0301n, una pista ( coordenadas) que te lleva a otra casilla del mapa. Dada la distribucio\u0301n del mapa, las pistas en las casillas y considerando que Azul siempre inicia en la coordenada 0, 0, determina cuales son las casillas por donde pasa cuando hace su paseo en circuito ( Recuerda que Azul inicia y termina en la misma casilla) . Puedes estar seguro que dadas las pistas del mapa, siempre habra\u0301 un circuito.",
    "input": "En la primera li\u0301nea los enteros M, N que denotan el taman\u0303o de la cuadricula. En cada una de las siguientes M li\u0301neas, N pares de enteros f, c ( fila, columna) que denotan la coordenada de la siguiente casilla en el circuito, es decir, cada casilla guarda la coordenada de la siguiente casilla en el camino.",
    "output": "Las coordenadas de todas las casillas que Azul visita en su paseo por el parque. Cada coordenada expresada en una li\u0301nea en el formato fila, columna ( Ver ejemplo) .",
    "note": "",
    "topics": [
      "math",
      "matrices"
    ],
    "id": 5642
  },
  {
    "title": "Valles",
    "url": "https://omegaup.com/arena/problem/Valles",
    "history": "# VallesLos valles son pedazos de terreno rodeados por montan\u0303as. Dado el mapa de una isla escribe un programa que determine la cantidad de valles que existen en la isla. La isla se puede ver como una matriz de nu\u0301meros enteros, donde las montan\u0303as son representadas con \u201d1\u201d y los terrenos planos con \u201d0\u201d. Por lo que un valle es un 0 rodeado por 1' s.",
    "input": "La primera li\u0301nea contiene dos nu\u0301meros n y m ( 1 \u2264 n, m \u2264 20) , indicando las dimensiones de la isla. Le siguen n li\u0301neas, cada una con m nu\u0301meros separados por un espacio, indicando el mapa de la isla.",
    "output": "La cantidad de valles en la isla",
    "note": "",
    "topics": [
      "math",
      "matrices",
      "implementation"
    ],
    "id": 5515
  },
  {
    "title": "Demostrando con matrices.",
    "url": "https://omegaup.com/arena/problem/Demostrando-con-matrices",
    "history": "En las clases del ITAM un profesor de algebra lineal dijo un teorema muy importante sobre matrices ( que se pueden ver como arreglos bidimensionales, un arreglo de arreglos) pero este teorema solo aplica si la matriz es simetrica, esto significa que es una reflexio\u0301n sobre su diagonal, el teorema solo aplica para matrices cuadradas. Durante el examen el profesor le pregunta a Pablo si a esta matriz se le puede aplicar el teorema, pero Pablo es muy flojo asi que prefiere escribir un programaque le ayude, pero como un secretario muy ocupado de la representacio\u0301n te pide que le ayudes con este difi\u0301cil problema matema\u0301tico. Un ejemplo de matriz sime\u0301trica es el siguiente: 1 3 2 5 4 4 6Recuerda que habra multiples casos de prueba.",
    "input": "Un numero m que sera en numero de casos de prueba, para cada uno de estos casos recibira\u0301s: Un numero natural n seguido de n lineas cada una con n nu\u0301meros que representan las entradas de la matriz.",
    "output": "n respuestas, \" Sime\u0301trica\" en caso de que sea sime\u0301trica y \" No Sime\u0301trica\" en caso de que no lo sea, ten cuidado con las respuestas pues deben ser exactamente como estan escritas arriba.",
    "note": "",
    "topics": [
      "math",
      "matrices",
      "implementation"
    ],
    "id": 5440
  },
  {
    "title": "Agentes pat\u00f3genos",
    "url": "https://omegaup.com/arena/problem/Agentes-patogenos",
    "history": "# DescripcionEn los u\u0301ltimos di\u0301as los climas han estado cambiando mucho en el estado de Sonora, incluso se han detectado nuevos casos de brotes de influenza en diferentes a\u0301reas, preocupados por no enfermarse previo al nacional, nuestros queridos alumnos decidieron hacerse a la tarea de crear un algoritmo que les ayudase a descifrar si existi\u0301a algu\u0301n agente pato\u0301geno que les provocara enfermarse# ProblemaDado la muestra del producto decir cuantos agentes pato\u0301genos se encuentran dentro de la la muestra y al igual de decir si es seguro tomar esa bebida o no",
    "input": "En la primera linea dos nu\u0301meros N y M En las siguientes N x M lineas un porta objetos donde se encuentran las parti\u0301culas de la muestra tomada, que al ingresarla al codigo maquina los agentes estan representados con 1 mientras que la superficie del porta objetos con 0",
    "output": "Un u\u0301nico numero representando la cantidad de agentes pato\u0301genos encontrados en la muestra, en caso contrario mostrar en pantalla \" es seguro consumir este producto\" .",
    "note": "",
    "topics": [
      "shortest paths",
      "matrices",
      "math",
      "dfs and similar"
    ],
    "id": 5302
  },
  {
    "title": "Leyendo archivos fragmentados",
    "url": "https://omegaup.com/arena/problem/archivos-fragmentados",
    "history": "Cierto disco esta\u0301 dividido en Q bloques de B bytes cada uno. Cuentas con el contenido del disco y tambie\u0301n con la relacio\u0301n de que\u0301 bloques ocupa cada uno de los N archivos del disco. Escribe un programa que calcule cua\u0301l es el K- e\u0301simo caracter del I- e\u0301simo archivo.",
    "input": "Dos enteros Q, B seguido de una cadena de Q \u00d7 B caracteres alfanume\u0301ricos que denota el contenido del disco. Posteriormente un entero N seguido de N li\u0301neas; cada li\u0301nea contiene una pareja de enteros I, C seguida de C enteros que denotan los bloques que ocupa el archivo I. Posteriormente un entero M seguido de M li\u0301neas; cada li\u0301nea contiene una pareja de enteros I, K que denotan el acceso al K- e\u0301simo caracter del I- e\u0301simo archivo. Los bloques, archivos y caracteres se numeran a partir de 0. Puedes suponer que 1 \u2264 Q, B \u2264 1024, 1 \u2264 N \u2264 Q, 1 \u2264 M \u2264 10000, 0 \u2264 I N y que el K- e\u0301simo caracter siempre existe. Adema\u0301s, el contenido de cada archivo se lista so\u0301lo una vez y ningu\u0301n bloque se usa por ma\u0301s de un archivo.",
    "output": "Para cada uno de los M accesos, una li\u0301nea que contiene el K- e\u0301simo caracter del I- e\u0301simo archivo.",
    "note": "",
    "topics": [
      "math",
      "implementation",
      "matrices",
      "strings"
    ],
    "id": 5056
  },
  {
    "title": "Diana Vs Sus alumnas",
    "url": "https://omegaup.com/arena/problem/Diana-Vs-Sus-alumnas",
    "history": "Una noche antes del examen Diana decidio\u0301 tomar medidas dra\u0301sticas con sus alumnas ya que estaban algo traumadas y se desvelaban programando, por lo que decidio\u0301 quitarles a todas sus computadoras, como todas son muy \" obedientes\" sin hacer tanto esca\u0301ndalo se la entregaron a excepcio\u0301n de una la cual llamaremos L ( tenemos miedo de que si ponemos su nombre real nos pueda arrojar con una baraja) , Diana un tanto eufo\u0301rica comenzo\u0301 a buscar por toda la habitacio\u0301n dicha computadora faltante. # ProblemaAyuda a Diana a encontrar la computadora antes de que Diana explote ya que por una extran\u0303a razo\u0301n todas las chicas estan cantando la cancio\u0301n de \" La camisa negra\" lacual Diana odia. En caso de que Diana encuentre la computadora muestra el mensaje \" Diana encontro la computadora\" , de lo contrario muestra el mensaje \" L se salio con las suyas\" . Por motivos que todos desconocemos la computadora solo puede ser encontrada hacia el lado derecho o hacia abajo y nunca hacia la izquierda o arriba.",
    "input": "Tres nu\u0301meros N y M los cuales representan el taman\u0303o de la habitacio\u0301n seguido de C que indica el taman\u0303o de la computadora. N lineas seguido de M enteros representando los distintos objetos que hay dentro de la habitacio\u0301n. C enteros que todos juntos representan la computadora siempre en una linea recta.",
    "output": "Una linea con la frase \" Diana encontro la computadora\" en caso de que la computadora este en la habitacio\u0301n, de caso contrario muestra la frase \" L se salio con lassuyas\" . | | input5 5 31 3 4 5 22 3 4 5 63 2 1 3 44 2 2 2 23 3 3 3 31 2 3| | outputDiana encontro la computadora| | descriptionComo se puede ver la computadora esta representada por los nu\u0301meros 1, 2 y 3, se podri\u0301a pensar que hay dos posibilidades de encontrar la computadora ya que existeeste mismo patro\u0301n iniciando en la coordenada ( 3, 3) hacia atra\u0301s pero como explica antes el problema la computadora nunca se encontrara hacia la izquierda ni haciaarriba. | | end# Limites* 2 < = N, M < = 100. * 1 < = C < = 100.",
    "note": "",
    "topics": [
      "math",
      "implementation",
      "matrices",
      "hashing"
    ],
    "id": 4776
  },
  {
    "title": "Esto no es una cubeta",
    "url": "https://omegaup.com/arena/problem/Esto-no-es-una-cubeta",
    "history": "Los alumnos de Cecyte una noche antes del examen decidieron irse al cine ( dicen que ellos quisieron pero en verdad los llevaron para que no se salieran del concurso) , lo malo de estos chicos es que son muy chiquiones( raros) y si no se sientan juntos ( uno al lado del otro) no entran a ver la peli\u0301cula y mejor se van al hotel a dormircomo todo buen estudiante. # ProblemaAyuda a los chicos de Cecyte a decidir si pueden entrar todos juntos al cine, en caso contrario muestra el mensaje \" Se fueron a dormir por raros\" . La sala de cine estara\u0301 ocupada por 0 que significan espacios vaci\u0301os y 2 que representan espacios ocupados. Si los alumnos logran entrar al cine los tendra\u0301s que representar con el numero 1 en cada asiento que ocupara respectivamente.",
    "input": "N y M que representan el taman\u0303o de la sala de cine. En las siguientes N lineas habra\u0301 M enteros que representan lugares ocupados o lugares vaci\u0301os. Un entero A que representa los alumnos que fueron al cine.",
    "output": "En caso de haber entrado a la peli\u0301cula muestra como quedo la sala de cine despue\u0301s de que los chicos de Cecyte se sentaron, en caso contrario muestra\" Se fueron a dormir por raros\" . | | input5 52 2 0 2 20 0 0 0 22 0 0 2 20 0 0 0 00 2 0 0 25| | output2 2 0 2 20 0 0 0 22 0 0 2 21 1 1 1 10 2 0 0 2| | end# Limites* 1< = N, M< = 10* 0< = A< = 10* Este no esta tan facil como el de reten : )",
    "note": "",
    "topics": [
      "math",
      "matrices",
      "implementation"
    ],
    "id": 4771
  },
  {
    "title": "Cope El Constructor",
    "url": "https://omegaup.com/arena/problem/Cope-El-Constructor",
    "history": "El gran cope esta\u0301 en un gran problema. Despue\u0301s de que su negocio donde ensen\u0303aba programacio\u0301n no dio frutos, ahora se dedica a ensen\u0303ar algo completamente distinto, ensen\u0303a todo lo relacionado con arquitectura y construcciones. Desde joven, Cope siempre ha sido un maestro de riguroso y de gran exigencia, deja muchas tareas a sus alumnos, con el fin de que estos puedan practicar lo aprendido. # ProblemaCope realizo un plano a escala de un hotel, con sus respectivos edificios, expresado en una matriz. Suponiendo que cada espacio de la matriz equivale a 1 cm, el maestro Cope deja de tarea realizar una maqueta de dicho plano de N x M dimensiones a una escala de X cm.",
    "input": "En la primera linea N x M, con las dimenciones del plano, seguido por los edificios representados por un numero entero cualquiera y a que escala X se realizara la maqueta.",
    "output": "Una matriz que represente la maqueta realizada a base del plano escala a X cm.",
    "note": "",
    "topics": [
      "implementation",
      "math",
      "matrices"
    ],
    "id": 4757
  },
  {
    "title": "Nacho el flojo",
    "url": "https://omegaup.com/arena/problem/Nacho-el-flojo",
    "history": "El nuevo Maestro de Ignacio ( Nacho, para sus amigos) ha creado un sistema que genera y revisa las tareas * * automa\u0301ticamente* * . Para este propo\u0301sito los ejercicios son de opcio\u0301n mu\u0301ltiple con incisos A, B, C, D. Con hasta 20 ejercicios por tarea, los alumnos deben entregar la cadena de respuestas correctas correspondientes, por ejemplo: DACQuiere decir que las respuestas correctas son: 1. - D2. - A3. - CEstas tareas se componen de muchos ejercicios similares, por lo que despue\u0301s de realizar los primeros 2 de ellos y con 8 ma\u0301s por resolver, Ignacio decide que si la tarea fue creada por una ma\u0301quina, debe ser resuelta por una ma\u0301quina tambie\u0301n. Esta vez la tarea es acerca de sumar vectores, asi\u0301 es que dados 2 vectores descritos en sus componentes ( x, y) debes encontrar la suma de ambos. \u00bfPodra\u0301s ayudarle?",
    "input": "En la primera linea un entero * * t* * que es el nu\u0301mero de ejercicios de la tarea. Luego para cada ejercicio: una linea que describe los vectores, conteniendo 4 enteros x_ 1, y_ 1, x_ 2, y_ 2 separados por un espacio; luego 4 lineas que describen los incisos A, B, C, D del ejercicio cada una con un par de enteros X, Y.",
    "output": "La cadena ( sin espacios) formada por las respuestas correctas a los ejercicios| | input22 3 1 81 11 33 43 111 1 1 12 20 00 11 0| | outputDA| | descriptionPara x_ 1= 2, y_ 1 = 3, x_ 2= 1, y_ 2= 8X= x_ 1+ x_ 2= 2+ 1= 3Y= y_ 1+ y_ 2= 3+ 8= 11Por lo tanto la respuesta correcta al ejercicio 1 es ' D' Para x_ 1= 1, y_ 1 = 1, x_ 2= 1, y_ 2= 1X= x_ 1+ x_ 2= 1+ 1= 2Y= y_ 1+ y_ 2= 1+ 1= 2Por lo tanto la respuesta correcta al ejercicio 2 es ' A' Y por ende la cadena de respuestas correctas es \" DA\" | | end",
    "note": "",
    "topics": [
      "implementation",
      "math",
      "matrices"
    ],
    "id": 4475
  },
  {
    "title": "Matriz Transpuesta UP",
    "url": "https://omegaup.com/arena/problem/Matriz-Transpuesta-UP",
    "history": "# Matriz TranspuestaLa matriz transpuesta de una matriz A de denota como A^ T, y donde la primera columna de A representa el primer renglo\u0301n de A^ T, la segunda columna de A representa el segundo renglo\u0301n de A^ T, y asi\u0301 sucesivamente. Asi\u0301 que si A es de taman\u0303o n \u00d7 m, A^ T tendra\u0301 un taman\u0303o de m \u00d7 n. Por ejemplo, definamos A como: A = [ [ 4 2 3; 7 1; ; endarray ] La matriz transpuesta A^ T es: A^ T = [ [ 4 5; 7; 1 ] ] Escribe un programa que dada una matriz A imprima A^ T. ]",
    "input": "La primera li\u0301nea contiene dos enteros n and m ( 1 \u2264 n, m \u2264 20) . Indicando la cantidad de renglones y de columnas de A respectivamente. Le siguen n li\u0301nes cada una con m enteros separados por espacios representando los elementos de la matriz A.",
    "output": "La matriz A^ T# # Ejemplos| | input2 34 2 35 7 1| | output4 52 73 1| | end",
    "note": "",
    "topics": [
      "implementation",
      "matrices",
      "math"
    ],
    "id": 4472
  },
  {
    "title": "Matriz X",
    "url": "https://omegaup.com/arena/problem/Matriz-X",
    "history": "Dada una matriz de MxN ( 1< = M, N< = 100) datos enteros ( ( M filas x N columnas) ) imprime los elementos que esten en coordenadas pares. por ejemplo 0, 0; 2, 4; etc.",
    "input": "En la primera li\u0301nea los enteros M, N. Donde M representa el nu\u0301mero de filas y N el nu\u0301mero de columnas. En cada una de las siguientes M li\u0301neas, N enteros.",
    "output": "Todos los nu\u0301meros de las coordenadas pares de la matriz, recorriendola de abajo hacia arriba y de izquierda a derecha. # Ejemplos# | | input3 42 5 9 104 1 6 35 3 7 8| | output5 7 2 9| | descriptionLas posiciones pares de la matriz de ejemplo recorrida de abajo hacia arriba y de izquierda a derecha son: 2, 0; 2, 2; 0, 0; 0, 2. Todas las dema\u0301s casillas de la matriz tienen alguna coordenada impar, por la tanto no deben imprimirse. | | end",
    "note": "",
    "topics": [
      "math",
      "implementation",
      "matrices"
    ],
    "id": 4141
  },
  {
    "title": "Matriz Espejo",
    "url": "https://omegaup.com/arena/problem/Matriz-Espejo",
    "history": "Dada una matriz de MxN ( 1< = M, N< = 100) datos enteros ( M filas x N columnas) imprime su matriz espejo, es decir, la matriz reflejada horizontalmente ( ver ejemplo)",
    "input": "En la primera li\u0301nea los enteros M, N. Donde M representa el nu\u0301mero de filas y N el nu\u0301mero de columnas. En cada una de las siguientes M li\u0301neas, N enteros. Donde cada entero representa una pieza.",
    "output": "La matriz espejo. # Ejemplos# | | input3 42 5 9 104 1 6 35 3 7 8| | output10 9 5 23 6 1 48 7 3 5| | description| | end",
    "note": "",
    "topics": [
      "matrices",
      "math",
      "implementation"
    ],
    "id": 4108
  },
  {
    "title": "Matriz Semejante Diagonal",
    "url": "https://omegaup.com/arena/problem/Matriz-Semejante-Diagonal",
    "history": "Una matriz semejante es aquella en donde todas las diagonales de derecha a izquierda cumplen la siguiente regla * * a [ i ] [ j ] * * es igual a * * a [ j ] [ i ] * * ; y una matriz diagonal es aquella donde la diagonal principal cumple la regla: * * a [ i ] [ j ] * * es igual a * * a[ i+ 1 ] [ j+ 1 ] * * . El problema reside en dado un nu\u0301mero N, se recibira\u0301 una matriz de N* N nu\u0301meros, y si es una matriz semejante diagonal imprima \" SI\" - sin comillas- , en caso contrario ( que sea u\u0301nicamente semejante, u\u0301nicamente diagonal o ninguna de las anteriores) , se imprimira\u0301 \" NO\" - sin comillas- .",
    "input": "Un nu\u0301mero N seguido de N* N nu\u0301meros.",
    "output": "\" SI\" - sin comillas- en caso de ser semejante diagonal o \" NO\" - igual, sin comillas- en caso de que no lo sea.",
    "note": "",
    "topics": [
      "math",
      "implementation",
      "matrices"
    ],
    "id": 4052
  },
  {
    "title": "Jugando al gato",
    "url": "https://omegaup.com/arena/problem/Gatito",
    "history": "En clase de Matema\u0301ticas estas aburrido y te has puesto a jugar gato ( 3 en Raya) . como bien sabemos en este juego solo ganas si logras formar una linea ya sea vertical o diagonal o horizontal. ! [ Gato] [ 1] Muy bien pues como no son muy atentos tu y tu amigo y no quieren que el maestro se entere que esta\u0301n jugando debera\u0301s hacer un programa que dado como finalizo el juego determine quien gano o si hubo empate.",
    "input": "Recibira\u0301s un mapa de como termino el juego representado por x y o.",
    "output": "Deberas imprimir * * Roots! : D* * en caso de que x haya ganado, * * Velafloow 8) * * en caso de que o gane y * * Bailo Verta : S* * en caso de que haya empate.",
    "note": "",
    "topics": [
      "matrices",
      "strings",
      "math",
      "implementation"
    ],
    "id": 3975
  },
  {
    "title": "Matriz de Adyacencia",
    "url": "https://omegaup.com/arena/problem/Matriz-de-Adyacencia",
    "history": "# Matriz de AdyacenciaDada una gra\u0301fica con n ve\u0301rtices y m aristas, los ve\u0301rtices esta\u0301n numerados del 0 al n- 1. Escribe un programa que imprima su matriz de adyacencia.",
    "input": "La primera li\u0301nea contiene 2 nu\u0301meros, n y m, ( 2 \u2264 n\u2264 100) , ( 0 < m \u2264 n( n- 1) / 2) , indicando el nu\u0301mero de ve\u0301rtices y aristas en la gra\u0301fica. Le siguen m li\u0301neas, cada una con dos enteros a y b, indicando que hay una arista que conecta el ve\u0301rtice a con el ve\u0301rtice b y viceversa.",
    "output": "La matriz de adyacencia de la gra\u0301fica tal como se muestra en el ejemplo. | | input4 40 10 32 30 2| | output0 1 1 11 0 0 01 0 0 11 0 1 0| | endNota: Hay un espacio entre cada elemento de la matriz de adyacencia.",
    "note": "",
    "topics": [
      "math",
      "matrices",
      "implementation"
    ],
    "id": 3965
  },
  {
    "title": "Centro-Omijal",
    "url": "https://omegaup.com/arena/problem/Centro-Omijal",
    "history": "Rectangulonia inaugurar aacute; su nuevo centro comercial este f iacute; n de semana. Este evento ha atraido la atenci oacute; n de la prensa mundial, sin embargo el administrador del nuevo centro comercial en la televisora \" Os Mantenemos Informados Jalisco\" ( OMIJal) no pudo responder a una pregunta extremadamente sencilla. \" Administrador, \u00bfPodri\u0301a usted decirnos, cuantos locales tiene el nuevo centro comercial? \" . Como podra\u0301s imaginarte este suceso desato el caos, \u00bfCo\u0301mo es posible que el administrador no sepa el nu\u0301mero de locales en el centro comercial? , simple, e\u0301l nunca vio los planos, ni siquiera el centro. El administrador del centro comercial se encuentra muy ocupado en cuestiones poli\u0301ticas u\u0301ltimamente, es por eso, que en lugar de prestar atencio\u0301n a los planos del centro comercial y contar el nu\u0301mero de locales ha venido a pedirte ayuda, e\u0301l quiere que le ayudes escribiendo un programa que cuente el nu\u0301mero de locales que hay en el centro, y a su vez, desea que este programa funcione con cualquier plano para evitar verse en esta situacio\u0301n en un futuro. Para comenzar a trabajar con tan difi\u0301cil tarea te han dado una breve explicacio\u0301n para interpretar el formato elecro\u0301nico de los planos* Al igual que todos los edificios de Rectangulonia el mapa es rectangular* Una pared se presenta con el caracter* Un espacio vacio se presenta con el caracter ' . ' - Se considera como local del centro toda aquella a\u0301rea encerrada por paredes, puede tener cualquier forma# ProblemaAyuda al administrador del nuevo centro comercial a contar el nu\u0301mero de locales del centro comercial. Sabemos que el centro comercial tendra\u0301 siempre una forma rectangular, las paredes se representan con ' # ' y los espacios vacios con ' . ' .",
    "input": "En la primer li\u0301nea dos nu\u0301meros enteros N y M que representan el nu\u0301mero de filas y columnas que tiene el mapa respectivamenteLas siguientes N li\u0301neas contienen una cadena de M caracteres de longitud que representan la i- esima fila del mapa.",
    "output": "Un solo nu\u0301mero entero, la cantidad de locales que hay en el mapa del centro.",
    "note": "",
    "topics": [
      "matrices",
      "dfs and similar",
      "math"
    ],
    "id": 3698
  },
  {
    "title": "Dibujo_simetrico",
    "url": "https://omegaup.com/arena/problem/Dibujo_simetrico",
    "history": "# HistoriaA Roco le encantan los dibujos que son altamente sime\u0301tricos. En este momento tiene lo que seri\u0301a el primer cuadrante ( superior izquierdo) del dibujo. Quiere obtener todo el dibujo de tal forma que al doblarlo a partir de un eje vertical que pase exactamente por en medio del dibujo, la parte del lado izquierda coincida con la parte derecha, y que al doblarlo de un eje horizontal que pase exactamente por en medio del dibujo, la parte superior coincida con la parte inferior. # ProblemaHacer el dibujo de Roco.",
    "input": "La primera li\u0301nea tendra\u0301 dos enteros < b> r< / b> y < b> c< / b> , ( 1 = < b> r< / b> = 1000 y 1 = < b> c< / b> = 1000) . La cantidad de renglones y columnas del dibujo respectivamente. Las siguientes < b> r< / b> renglones tendra\u0301n < b> c< / b> caracteres, representando el dibujo de Roco.",
    "output": "El dibujo de Roco.",
    "note": "",
    "topics": [
      "binary search",
      "implementation",
      "graphs",
      "strings",
      "math",
      "trees",
      "matrices"
    ],
    "id": 3604
  },
  {
    "title": "La llave dorada",
    "url": "https://omegaup.com/arena/problem/Alicia-y-la-llave-dorada",
    "history": "Despue\u0301s de que la gran cai\u0301da por el agujero termino\u0301, Alicia se encontraba ilesa y frente a un largo pasillo con muchas puertas de cerraduras diversas. Un poco ma\u0301s adelante se encontraba una mesa de cristal con una llave dorada. Alicia queri\u0301a salir de ahi\u0301 tan pronto como fuera posible y penso\u0301 que seguramente alguna puerta correspondi\u0301a con la llave, asi\u0301 tuviera que girar la llave para poder insertarla en la cerradura. Ayuda a Alicia a encontrar la puerta correcta.",
    "input": "Un entero N seguido de una matriz de N * N caracteres . y # que representa la forma de la llave. Posteriormente un entero M seguido de M matrices de caracteres que representan las cerraduras de las M puertas, numeradas de 1 a M. Puedes suponer que 1 le; N, M le; 100. La entrada puede contener saltos de li\u0301nea adicionales para separar los datos de la misma y deben ser ignorados.",
    "output": "Un entero que es el nu\u0301mero de la puerta que abre con la llave dada o - 1 si ninguna puerta abre. La llave puede girarse 90, 180 o 270 grados.",
    "note": "",
    "topics": [
      "matrices",
      "strings",
      "math",
      "implementation"
    ],
    "id": 3581
  },
  {
    "title": "occ15pnf24",
    "url": "https://omegaup.com/arena/problem/Casa_de_Christian",
    "history": "# Casa de ChristianBogota\u0301 se representa como una cuadri\u0301cula h \u00d7 w, cada casilla representa una casa. Se da como entrada una matriz de enteros, que representan el taman\u0303o de cada casa de Bogota\u0301. Christian vive inicialmente en la esquina superior izquierda. Si existe alguna casa vecina( la de arriba, abajo, derecha o izquierda, si existen) que sea mas grande que la de Christian, e\u0301l compra esa casa y se muda alli\u0301, si hay varias casas vecinas ma\u0301s grandes, e\u0301l escoje la ma\u0301s grande entre ellas. Dado el taman\u0303o de cada casa, hay que encontrar en que\u0301 casa va a terminar viviendo Christian. La casa ( i, j) es la casa en la fila i y en la columna j. Asi\u0301 que ( 0, 0) es la casa inicial de Christian, ( 1, 0) y ( 0, 1) son los vecinos iniciales de Christian ( de abajo y derecha respectivamente) .",
    "input": "Li\u0301nea 1: h y w separados por un espacio ( El nu\u0301mero de filas y columnas de Bogota\u0301) . Li\u0301neas 2. . . h+ 1: Taman\u0303o de las casas de Bogota\u0301.",
    "output": "Las coordenadas de la casa donde termina viviendo Christian.",
    "note": "",
    "topics": [
      "math",
      "implementation",
      "matrices"
    ],
    "id": 3171
  },
  {
    "title": "Matriz espiral",
    "url": "https://omegaup.com/arena/problem/Matriz-espiral",
    "history": "Dados dos enteros n * m , escriba un programa que construya una matriz con n renglones y m columnas cuyas entradas sean los nu\u0301meros 1, 2, . . . , n* macomodados en espiral, comenzando con el nu\u0301mero 1 en la entrada que esta\u0301 en la esquina superior izquierda.",
    "input": "* Dos nu\u0301meros n y m indicando las dimenciones de la matriz.",
    "output": "* Una matriz con n renglones y m columnas cuyas entradas sean los nu\u0301meros 1, 2, . . . , n * m separados por un espacio.",
    "note": "",
    "topics": [
      "implementation",
      "math",
      "matrices"
    ],
    "id": 3166
  },
  {
    "title": "Blancas Vs Negras",
    "url": "https://omegaup.com/arena/problem/Blancas-Vs-Negras",
    "history": "Dado un tablero de ajedrez de MxN ( 1< = M, N< = 100) casillas con piezas blancas y negras, determina cuantas piezas de cada color hay y si algu\u0301n jugador ha perdido a su rey. Las piezas negras esta\u0301n representadas con enteros pares y las blancas con enteros impares. El rey negro esta\u0301 representado por el entero K y el blanco con el entero L.",
    "input": "En la primera li\u0301nea los enteros M, N. Donde M representa el nu\u0301mero de filas y N el nu\u0301mero de columnas. En cada una de las siguientes M li\u0301neas, N enteros. Donde cada entero representa una pieza. En la u\u0301ltima li\u0301nea los enteros K y L.",
    "output": "En la primera li\u0301nea, los enteros A y B que denotan el nu\u0301mero de piezas negras y blancas que hay en el tablero. En la segunda li\u0301nea la frase JAQUE MATE si ALGU\u0301N rey no esta\u0301 en el tablero, en caso contrario imprime NO JAQUE. # Ejemplos# | | input3 427 5 9 1014 21 20 3525 30 22 3330 7| | output5 7JAQUE MATE| | descriptionHay 5 piezas negras ( nu\u0301meros pares) y 7 piezas blancas ( nu\u0301meros impares) . El rey negro, en el ejemplo, esta\u0301 representado por K= 30 y el blanco por L= 7. Hay jaque mate porque el rey blanco representado por L= 7 no existe en el tablero. | | end",
    "note": "",
    "topics": [
      "math",
      "matrices"
    ],
    "id": 2880
  },
  {
    "title": "Secreto",
    "url": "https://omegaup.com/arena/problem/Secreto",
    "history": "# HistoriaNieves y Lira han estado planeando el macabro examen de la fase estatal, sin embargo ellos saben que existe la posibilidad de que la informacio\u0301n sea interceptada por otra persona, por lo que decidieron emplear una forma de ocultar su informacio\u0301n. Para ocultarla empleara\u0301n una matriz llena de puntos \u0091. \u0092 y letras \u0091X\u0092 ( mayu\u0301sculas) la cual tendra\u0301 que ser rotada 90\u00b0 hacia la derecha varias veces para acomodarla y poder extraer la informacio\u0301n, despue\u0301s de esto se extraera\u0301n los nu\u0301meros de otra matriz que coincidan con las posiciones de las \u0091X\u0092 de la matriz rotada, y finalmente se colocara\u0301n en una li\u0301nea. Los nu\u0301meros se tendra\u0301n que ir colocando conforme vayan apareciendo las \u0091X\u0092 en la matriz acomodada, recorriendo la matriz de arriba hacia abajo y de izquierda a derecha. # ProblemaDadas las dos matrices ( la de nu\u0301meros y la de equis y puntos) , y sabiendo cua\u0301ntas veces se tiene que rotar la matriz para que quede en la posicio\u0301n correcta, imprime los nu\u0301meros que coincidan con las posiciones donde hay una \u0091X\u0092 ( de la matriz rotada) conforme vayan apareciendo recorriendo la matriz acomodada de arriba hacia abajo y de izquierda a derecha.",
    "input": "Un nu\u0301mero entero N que indica el largo y ancho de las matrices ( la de nu\u0301meros y la de equis y puntos) , despue\u0301s las siguientes N li\u0301neas representando la matriz de nu\u0301meros, cada una con N nu\u0301meros separados por un espacio, despue\u0301s la otra matriz sera\u0301 representada en las siguientes N li\u0301neas con N caracteres cada una los cuales pueden ser puntos o equis sin espacios entre ellos. Por u\u0301ltimo vendra\u0301 un nu\u0301mero entero M que indica el nu\u0301mero de veces que necesita ser rotada la matriz.",
    "output": "Todos los nu\u0301meros que se encuentren en la misma posicio\u0301n de las \u0091X\u0092 ( de la matriz acomodada) separados por un espacio.",
    "note": "",
    "topics": [
      "matrices",
      "math",
      "implementation"
    ],
    "id": 2701
  },
  {
    "title": "Inundaciones",
    "url": "https://omegaup.com/arena/problem/Inundaciones",
    "history": "Debido a que Karelotitla\u0301n esta\u0301 construido sobre un inmenso lago ( igual que la famosa ciudad azteca) , cuando llueve mucho, las calles se inundan. Tu\u0301, como un estudiante de postgrado del Karelme\u0301cac, requieres saber como escurre el agua a trave\u0301s del terreno. El mapa de la ciudad puede verse como un mapa de flujo, el cual es una matriz en la que cada casilla tiene una direccio\u0301n que indica a que\u0301 direccio\u0301n escurre el agua ( norte, sur, este u oeste) . En ocasiones, hay casillas que no escurren a otra casilla, esas casillas se llaman pozos. Los ri\u0301os son los caminos que sigue el agua cuando escurre de una casilla a otra hasta llegar a un pozo ( siempre se llega a un pozo) . Dos casillas pertenecen a la misma cuenca si los ri\u0301os que contienen a las casillas, terminan en el mismo pozo. # ProblemaDado el mapa de flujo de Karelotitla\u0301n y una casilla x, determinar cuales casillas pertenecen a la misma cuenca a la que pertenece x.",
    "input": "En la primera li\u0301nea hay 4 enteros ren, col, posRen y posCol en ese orden. Donde ren y col representan el nu\u0301mero de renglones y columnas del mapa de flujo y posRen y posCol indican el renglo\u0301n y columna de la casilla x. En las siguientes ren li\u0301neas vienen col enteros, separados por un espacio, representando el mapa de flujo. El valor - 1 representa un pozo. El valor 0 indica que hay flujo al norte, el 1 que hay flujo al este, el 2 al sur y el 3 al oeste.",
    "output": "Una matriz de ren X col ceros y unos, separados por espacio, donde un uno indica que la casilla pertenece a la misma cuenca y un cero a una diferente a la que pertenece x.",
    "note": "",
    "topics": [
      "shortest paths",
      "graph matchings",
      "dfs and similar",
      "math",
      "dsu",
      "graphs",
      "matrices"
    ],
    "id": 2561
  },
  {
    "title": "Buscando la casa",
    "url": "https://omegaup.com/arena/problem/Buscando-la-casa",
    "history": "El di\u0301a de ayer al terminar la concentracio\u0301n Estefany se quedo\u0301 esperando que la recogieran en el plantel pero su madre sufrio\u0301 un pequen\u0303o retraso por lo que no pudo llegar( su mama\u0301 no la quiere. . . ) , al suceder esto, nuestro amable equipo de la OSI decidio\u0301 llevar a Estefany a su casa. El equipo de la OSI no conoce la ubicacio\u0301n de la casa de Estefany, por alguna razo\u0301n ella solo recuerda que esta\u0301 ma\u0301s alta que todas las casas ma\u0301s cercanas. # ProblemaAyudanos a encontrar la casa de Estefany para poder llevarla sana y salva( aunque no la quieran en su casa. . . ) .",
    "input": "En la primera linea M y N separados por un espacio representando las filas y columnas de casa que hay. Siguientes M li\u0301neas con N enteros N_ i separados por un espacio representando las alturas de las casas.",
    "output": "Debes imprimir 2 enteros separados por un espacio ( i, j) por cada ubicacio\u0301n posible de la casa representando las coordenadas de dicha( s) casa( s) .",
    "note": "",
    "topics": [
      "math",
      "matrices"
    ],
    "id": 2466
  },
  {
    "title": "El extra\u00f1o paisaje de Marte",
    "url": "https://omegaup.com/arena/problem/El-extrano-paisaje-de-Marte",
    "history": "John Carter recuerda haber estado en el desierto de Arizona, ver una estrella roja en el horizonte, cerrar los ojos y extender los brazos. Cuando abrio\u0301 los ojos nuevamente, se encontro\u0301 ante un extran\u0303o paisaje y de inmediato supo que estaba en Marte. A su alrededor vio\u0301 plantas amarillas y rocas con blancos cristales de cuarzo. Tambie\u0301n vio\u0301 una especie de construccio\u0301n rectangular, dentro de la que habi\u0301a pequen\u0303as criaturas amarillas e inmo\u0301viles y enormes huevos blancos. Para tener un mejor panorama, John Carter dio un salto. La baja gravedad marciana hizo que el salto fuera tan alto que los objetos le resultaron indistinguibles, excepto por el color. Memorizando la posicio\u0301n y el color de los objetos que vei\u0301a y sabiendo la ubicacio\u0301n de la construccio\u0301n, John Carter desea saber cua\u0301ntas criaturas y huevos se encuentran dentro.",
    "input": "Un entero D seguido de la descripcio\u0301n de cada uno de los D objetos: sus coordenadas X, Y y el color C del mismo ( con C = ' A' ( amarillo) o C = ' B' ( blanco) ) . Despue\u0301s, un entero M seguido de las M posibles ubicaciones de la construccio\u0301n dadas por sus coordenadas N, S, E, W. Puedes suponer que 1 le; D, M le; 100000, que 1 le; X, Y le; 1000 y que no hay dos objetos en la misma posicio\u0301n. Tambie\u0301n puedes suponer que 1 le; S le; N le; 1000 y que 1 le; W le; E le; 1000.",
    "output": "M renglones, cada uno con las cantidades P y H de pequen\u0303as criaturas amarillas y de huevos blancos respectivamente, para cada posible ubicacio\u0301n de la construccio\u0301n.",
    "note": "",
    "topics": [
      "math",
      "matrices",
      "dp"
    ],
    "id": 2419
  },
  {
    "title": "Sopa de letras",
    "url": "https://omegaup.com/arena/problem/sopaletras",
    "history": "\u00bfAlguna vez has jugado sopa de letras? Esta pra\u0301ctica es tu oportunidad para que un programa te ayude en dicha labor. Dada una sopa de letras como una matriz A de taman\u0303o n \u00d7 m, escriba un programa que determine si un conjunto de palabras se encuentran en dicha sopa de forma horizontal ( ya sea de izquierda a derecha o viceversa) o vertical ( ya sea de arriba a abajo o viceversa) .",
    "input": "Dos enteros n, m seguidos de n li\u0301neas con m caracteres cada una. Puede suponer que 1 \u2264 n, m \u2264 100 y que los caracteres so\u0301lo sera\u0301n letras minu\u0301sculas del alfabeto ingle\u0301s. Seguido de un entero q, con 1 \u2264 q \u2264 1, 000 que denota el nu\u0301mero de palabras s_ i que debera\u0301 buscar en la sopa de letras. Puede suponer que 1 \u2264 | s_ i| \u2264 100 y que consistira\u0301 de so\u0301lo letras minu\u0301sculas.",
    "output": "La salida sera\u0301n q li\u0301neas con la palabra \" si\" o \" no\" ( con minu\u0301sculas) dependiendo si la palabra se encuentra o no en la sopa de letras.",
    "note": "",
    "topics": [
      "math",
      "strings",
      "matrices"
    ],
    "id": 2069
  },
  {
    "title": "pb Matriz Cuadrada",
    "url": "https://omegaup.com/arena/problem/pb-Matriz-Cuadrada",
    "history": "Tenemos una matriz de \u201cR\u201d renglones por \u201cC\u201d columnas, donde podemos enumerar las casillas de la siguiente manera, la casilla 1, 1 ( renglo\u0301n 1, columna 1) , la casilla 1, 2 ( renglo\u0301n 1, columna 2) y la casilla 1, 3 ( renglo\u0301n 1, columna 3 ) seri\u0301an respectivamente las posiciones 1, 2 y 3 como se puede ver en la figura, donde la casilla 1, 1 es la esquina superior izquierda y la celda \u201cR\u201d x \u201cC\u201d es la celda ubicada en la esquina inferior derecha. ! [ Matriz] ( imagen. jpg) En esta cuadri\u0301cula, podemos hacer preguntas de la forma, \u00bfque nu\u0301mero esta\u0301 en la casilla 1, 2 ? y su respuesta seri\u0301a 2 otro ejemplo \u00bfque\u0301 nu\u0301mero esta\u0301 en la celda 2, 3? y su respuesta es 6. # ProblemaEscribe un programa que dada las dimensiones de la cuadri\u0301cula responda una cantidad \u201cP\u201d de preguntas.",
    "input": "En la primera li\u0301nea dos valores indicando las dimensiones de la cuadri\u0301cula separados por un espacio \u2018R\u2019 cantidad de renglones donde 1< = R< = 10000 y \u201cC\u201d cantidad de columnas donde 1< = C< = 10000, En la tercera li\u0301nea el nu\u0301mero \u201cP\u201d cantidad de preguntas donde 1< = P< = 10, 000 y en las siguientes \u201cP\u201d li\u0301neas un par de coordenadas de la forma r, c, representando las coordenadas de cada pregunta en donde \u201cr\u201d indica el renglo\u0301n 1< = r< = R y \u201cc\u201d la columna 1< = c< = C por cada pregunta.",
    "output": "Por cada pregunta debe escribir en cada li\u0301nea el nu\u0301mero de casilla que le corresponde. # Ejemplos| | input3 331 12 23 3| | output1 5 9| | descriptionCaso # 1| | input3 100022 12 10| | output10011010| | descriptionCaso # 2| | end# ConsideracionesTu programa se ejecutara con varios casos de prueba. # TipTip Revise por cada renglo\u0301n de preguntas cua\u0301ntos valores debe avanzar, en la Entrada 1 para la primera pregunta debe avanzar 0, para la segunda debe avanzar 3 y para la tercer pregunta debe avanzar 6.",
    "note": "",
    "topics": [
      "math",
      "matrices",
      "implementation"
    ],
    "id": 1936
  },
  {
    "title": "Submatrices",
    "url": "https://omegaup.com/arena/problem/submatriz",
    "history": "Se tiene una matriz n con simbolos raros ( di\u0301gitos de 0 al 9) . de taman\u0303o ren X col. Tambie\u0301n se tiene una submatriz m ( tambie\u0301n de di\u0301gitos) de taman\u0303o r X c tal que r < ren y c < col. Se dice que la matriz m esta\u0301 en n, si existe una cuadri\u0301cula k de extremos ( esquina superior izquierda y esquina inferior derecha) ( x1, y1) y ( x2, Y2) tal que k es identica a m. Tu trabajo consiste en identificar los lugares en donde la submatriz m es contenida en n.",
    "input": "En la primera li\u0301nea vienen dos valores 1 < ren < 1000 y 1 < col < 1000. En las siguientes ren li\u0301neas vienen col enteros separados por un espacio y que representan los di\u0301gitos de la matriz n leida desde la esquina superior izquierda hasta la esquina inferior derecha. Despue\u0301s viene otra li\u0301nea con dos enteros que representan a r y c respectivamente. En las siguientes r li\u0301neas vienen c enteros que representan a la Matriz m.",
    "output": "Debes imprimir una matriz de ceros y unos, separados por espacio, de taman\u0303o ren X col. Una casilla es simbolizada con 1 si forma parte de una submatriz m y un cero significa que nunca forma parte.",
    "note": "",
    "topics": [
      "math",
      "matrices",
      "implementation"
    ],
    "id": 1608
  },
  {
    "title": "IOI 2006 - Pir\u00e1mide",
    "url": "https://omegaup.com/arena/problem/pyramid",
    "history": "Despue\u0301s de una gran batalla, el rey Jaguar quiere construir una pira\u0301mide que sirva para ambos como un monumento para recordar su victoria y como tumba para los bravos guerreros que murieron en batalla. La pira\u0301mide sera\u0301 construida en el campo de batalla y tendra\u0301 una base rectangular de a columnas x b filas. Dentro de ella, al nivel del suelo hay una pequen\u0303a ca\u0301mara rectangular de c \u0002columnas x d filas que contendra\u0301 los cuerpos y armas de los soldados cai\u0301dos en batalla. El arquitecto del rey ha disen\u0303ado un plano del campo de batalla como una cuadricula de m columnas y n filas y tienen medida la elevacio\u0301n de cada cuadro como un entero. El campo de batalla esta\u0301 repartido en un recta\u0301ngulo de m \u00d7 n metros, con elevaciones irregulares de tierra. El arquitecto del rey ha disen\u0303ado un plano del campo como una cuadricula de m \u00d7 n y ha medido las elevaciones de cada cuadro como un entero h_ i, j para las coordenadas ( i, j) . Ambos, pira\u0301mide y ca\u0301mara sera\u0301n construidas cubriendo completamente los cuadros de la cuadricula y con sus lados paralelos a los del campo de batalla. La elevacio\u0301n de los cuadros de la ca\u0301mara interna debera\u0301 permanecer sin cambios pero el terreno restante de la base de la pira\u0301mide sera\u0301 marcado moviendo arena de los cuadros ma\u0301s altos a los cuadros ma\u0301s bajos. La elevacio\u0301n final de la base sera\u0301 la elevacio\u0301n promedio de todos los cuadros de la base ( excluyendo los de la ca\u0301mara) . Los arquitectos son libres de ubicar la ca\u0301mara en cualquier lado del interior de la pira\u0301mide siempre y cuando al menos dejen una pared de espesor de al menos un cuadro rodee la ca\u0301mara. Ayuda a los arquitectos a escoger el mejor lugar para ubicar la ca\u0301mara para que la elevacio\u0301n final de la base sea la ma\u0301xima posible para los taman\u0303os dados. La figura muestra un ejemplo del campo de batalla, el nu\u0301mero de cada cuadro representa la elevacio\u0301n del terreno en esa posicio\u0301n en particular del campo. Los cuadros grises representa la base de la pira\u0301mide mientras que los espacios blancos encerrados\u0002representan la ca\u0301mara. Esta figura ilustra la colocacio\u0301n o\u0301ptima. El cuadro en la esquina superior izquierda de la cuadricula esta representados por las coordenadas ( 1, 1) . # ProblemaEscribe un problema que dados las dimensiones del campo, la pira\u0301mide y la ca\u0301mara junto con la elevacio\u0301n de cada cuadro del campo, localiza la pira\u0301mide en el campo y la ca\u0301mara dentro de la pira\u0301mide para que la elevacio\u0301n de la base sea la ma\u0301xima posible.",
    "input": "* * LINEA 1* * : Contiene seis enteros separados por un espacio; ` m` , ` n` , ` a` , ` b` , ` c` , y ` d` respectivamente. * * SIGUIENTES n LINEAS* * : Cada li\u0301nea contiene m enteros separados por espacios que representan una fila de la cuadricula. La primera de estas li\u0301neas representa la primer fila de la cuadricula y la u\u0301ltima representa la fila n. Los m enteros en cada li\u0301nea representan las columnas. Los m enteros en cada li\u0301nea representan las elevaciones de los cuadros de las columnas de esa fila iniciando desde la columna 1.",
    "output": "* * LINEA 1* * : Debera\u0301 contener 2 enteros separados por un espacio que representan la esquina superior izquierda de la base de la pira\u0301mide, el primer nu\u0301mero es la columna y el segundo es la fila* * LINEA 2* * : Debera\u0301 contener 2 enteros separados por un espacio que representan la esquina superior izquierda de la ca\u0301mara dentro de la pira\u0301mide, el primer nu\u0301mero es la columna y el segundo es la fila.",
    "note": "",
    "topics": [
      "dp",
      "math",
      "matrices",
      "implementation",
      "two pointers",
      "trees"
    ],
    "id": 1571
  },
  {
    "title": "Cuadrados",
    "url": "https://omegaup.com/arena/problem/cuad",
    "history": "Hay una cuadri\u0301cula cuadrada llena de 0\u2019s y 1\u2019s. Dentro de e\u0301sta cuadri\u0301cula hay varios subcuadrados de diferentes taman\u0303os que esta\u0301n formados exclusivamente por 0\u2019s. Por ejemplo en la siguiente cuadri\u0301cula: < center> ! [ Cuadri\u0301cula] ( cuadrados_ html_ 730b365b. gif) < / center> Hay 1 subcuadrado de 3 \u00d7 3 formado u\u0301nicamente por ceros, adema\u0301s hay 5 subcuadrados de 2 \u00d7 2 formados u\u0301nicamente por ceros. Por u\u0301ltimo hay 12 subcuadrados de 1 \u00d7 1 que esta\u0301n formados por ceros. # ProblemaTu tarea consiste en escribir un programa que, dada una cuadri\u0301cula de N \u00d7 N, determine cuantos subcuadrados de ceros hay que sean de 1 \u00d7 1, 2 \u00d7 2, . . . , N- 1 \u00d7 N- 1 y N \u00d7 N.",
    "input": "En la primera li\u0301nea recibira\u0301s un entero N indicando el taman\u0303o de la cuadri\u0301cula. En las siguientes N li\u0301neas habra\u0301 N caracteres ` 0` o ` 1` separados por espacios: los valores de cada cuadro en la cuadri\u0301cula.",
    "output": "Tu programa debera\u0301 imprimir N li\u0301neas. La i- e\u0301sima li\u0301nea debera\u0301 contener u\u0301nicamente un entero que indique la cantidad de subcuadrados de 0' s de taman\u0303o i \u00d7 i que hay en la cuadri\u0301cula.",
    "note": "",
    "topics": [
      "implementation",
      "math",
      "dp",
      "matrices"
    ],
    "id": 1454
  },
  {
    "title": "Cr\u00e1teres",
    "url": "https://omegaup.com/arena/problem/crateres",
    "history": "En un intento por hacer que el hombre vuelva a la luna, el COMI ( Comite\u0301 Mexicano Interespacial) ha decidido instalar un centro de investigacio\u0301n en ella. Para esto envio\u0301 a Nanobot, un pequen\u0303o robot explorador, a determinar cua\u0301l es el mejor lugar para construirlo. El objetivo del COMI es instalar el centro en el fondo de un cra\u0301ter para analizar sus rocas y, por supuesto, quiere instalarlo en el cra\u0301ter en donde haya ma\u0301s rocas. Desafortunadamente, durante el regreso de Nanobot a la Tierra, algunos datos se han perdido debido a causas desconocidas, sin embargo en la memoria del pequen\u0303o robot se conservan los mapas que este trazo\u0301 en su recorrido por la superficie lunar. Los mapas lunares se encuentran representados en matrices de F x C kilo\u0301metros, en donde cada celda representa un kilo\u0301metro cuadrado. En estos mapas los cra\u0301teres se muestran como nu\u0301meros enteros indicando la cantidad de rocas que Nanobot encontro\u0301 en ese kilo\u0301metro cuadrado. El resto de la superficie ( es decir, el espacio sin cra\u0301teres) ha sido rellenado con 0. El pequen\u0303o robot ha numerado los cra\u0301teres de 1 a N, siguiendo un estricto orden de izquierda a derecha y de arriba abajo, esto es, los cra\u0301teres que este\u0301n ma\u0301s a la izquierda sera\u0301n los primeros en ser numerados. Si dos cra\u0301teres comienzan en la misma columna, el que este\u0301 ma\u0301s arriba en esa columna tendra\u0301 prioridad. En uno de sus recorridos Nanobot trazo\u0301 un mapa de 7 x 7 kilo\u0301metros cuadrados como el que se muestra debajo. Este mapa cuenta con 3 cra\u0301teres, el primero con 39 rocas, el segundo con 31 y el u\u0301ltimo con 39. ! [ mapa] [ 1] # ProblemaDentro de los datos que se han perdido se encuentra la ubicacio\u0301n donde Nanobot decidio\u0301 seri\u0301a conveniente instalar el centro. Tu tarea consiste en recuperar estos datos a partir de los mapas y decirle al COMI en que\u0301 cra\u0301ter deberi\u0301a ser construida la base, asi\u0301 como el nu\u0301mero de rocas que se han encontrado en e\u0301l.",
    "input": "Li\u0301nea 1: Contiene dos enteros separados por un espacio que representan F y C, las dimensiones del mapa lunar. Siguientes F li\u0301neas: Cada li\u0301nea contiene C enteros separados por un espacio que indican la cantidad de rocas para cada kilo\u0301metro cuadrado del mapa. * * Ejemplo: * * 7 70 0 0 0 0 7 80 1 5 8 0 7 80 3 4 7 0 0 90 2 8 0 0 0 00 0 1 0 5 9 00 0 0 2 1 2 00 3 2 1 6 0 0",
    "output": "Li\u0301nea 1: Dos enteros separados por un espacio representando el nu\u0301mero del cra\u0301ter en que se debera\u0301 instalar el centro de investigacio\u0301n y el nu\u0301mero de rocas que se encontraron en e\u0301l. Si el mapa no contiene ningu\u0301n cra\u0301ter, debera\u0301s escribir 0 en ambos valores. Nota: En caso de haber ma\u0301s de un cra\u0301ter con el nu\u0301mero ma\u0301ximo de rocas debera\u0301s escribir el de menor numeracio\u0301n ( N) . * * Ejemplo: * * 1 39# Li\u0301mites1 \u2264 F, C \u2264 500",
    "note": "",
    "topics": [
      "math",
      "sortings",
      "matrices"
    ],
    "id": 1453
  },
  {
    "title": "El Misterioso Asesino de la Celda 5",
    "url": "https://omegaup.com/arena/problem/asesino",
    "history": "Hace algunos an\u0303os, antes de ser la orgullosa sede de la OMI, el Hotel El Gobernador fue un antiguo presidio. Cuenta una vieja historia que la celda 5 estaba maldita, ya que todos los presos que dormi\u0301an en ella al di\u0301a siguiente apareci\u0301an muertos, sin que hubiera explicacio\u0301n alguna de la causa. Varias veces se reviso\u0301 la celda sin obtener pista alguna sobre el misterioso asesino de los presos. Un di\u0301a, un valiente duranguense se atrevio\u0301 a pasar la noche en la celda para investigar los asesinatos, asi\u0301 que armado de su valor y de una vela se dispuso a develar el misterio. Cual seri\u0301a su sorpresa cuando en la madrugada aparecio\u0301 de entre las piedras de la pared un alacra\u0301n de 18cm de largo. Afortunadamente nuestro valiente soli\u0301a usar sombrero, con lo que pudo atrapar al misterioso asesino. Los alacranes, aunque peligrosos, no son animales agresivos, y por lo general u\u0301nicamente atacan cuando se les molesta. Sabemos que a los alacranes por lo general les gusta pasar la noche en los mismos lugares, por lo que podemos asumir que el asesino de la celda 5, pernoctaba siempre en alguno de sus N lugares preferidos. Como no sabes si el cuarto que te toco\u0301 corresponde a la celda 5, seguramente estara\u0301s un poco nervioso, pero no te preocupes, ya que resolviendo este problema quedara\u0301s salvado. # ProblemaTu cuarto se puede dividir en una cuadricula, en donde cada cuadro tiene un lado de longitud 1 metro. Debera\u0301s escribir un programa que reciba como entrada las coordenadas en do\u0301nde le gusta dormir al alacra\u0301n y encuentre todos los lugares adecuados para poner tu cama sin que haya posibilidad de molestar al alacra\u0301n. El alacra\u0301n se molestara\u0301 si tu cama esta\u0301 sobre alguno de los cuadros en los que le gusta dormir. Tu cama ocupa un espacio de 2x2 metros.",
    "input": "Tu programa debera\u0301 leer de entrada esta\u0301ndar los siguientes datos- En la primera li\u0301nea los nu\u0301meros 0 < L, A \u2264 100 los cuales representan el largo y el ancho de tu cuarto en metros. - En la segunda li\u0301nea el nu\u0301mero 0 < N \u2264 5 000 de lugares en donde le gusta dormir al alacra\u0301n. - Por u\u0301ltimo en las siguientes N li\u0301neas habra\u0301 2 nu\u0301meros enteros en cada una que indican una coordenada del cuarto en donde le gusta dormir al alacra\u0301n. NOTA: La esquina inferior izquierda de tu cuarto esta representada por la coordenada ( 1, 1) .",
    "output": "Tu programa debera\u0301 escribir en salida esta\u0301ndar un u\u0301nico nu\u0301mero que indique cuantas formas distintas hay de acomodar tu cama sin peligro de ser picado por el alacra\u0301n. Dos formas se consideran distintas si ocupan al menos un cuadro distinto del cuarto.",
    "note": "",
    "topics": [
      "matrices",
      "math",
      "implementation"
    ],
    "id": 1407
  },
  {
    "title": "Matriz Sim\u00e9trica",
    "url": "https://omegaup.com/arena/problem/Matriz-Simetrica",
    "history": "Dados los datos enteros de una matriz de N filas por N columnas. 1< = N< = 50. Determina si es una matriz sime\u0301trica. Una matriz es sime\u0301trica cuando el valor de la casilla i, j es igual al valor de la casilla j, i.",
    "input": "31 2 32 1 43 4 1| | output",
    "output": "SI| | end# Explicacio\u0301n de la salida# la matriz es sime\u0301trica porque para toda casilla i, j en la matriz su sime\u0301trica j, i tiene el mismo valor. Por ejemplo la casilla 1, 0 con valor 2, es igual a la casilla 0, 1 con valor 2. La casilla 2, 1 con valor 4 es igual a la casilla 1, 2 con el mismo valor.",
    "note": "",
    "topics": [
      "implementation",
      "matrices",
      "math"
    ],
    "id": 1307
  },
  {
    "title": "Matriz Transpuesta",
    "url": "https://omegaup.com/arena/problem/Matriz-Transpuesta",
    "history": "Dados los datos enteros de una matriz de F filas por C columnas. 1< = F, C< = 50. Imprime sus transpuesta, en una matriz transpuesta las columnas pasan a ser filas.",
    "input": "2 31 2 35 1 4| | output",
    "output": "1 52 13 4| | end",
    "note": "",
    "topics": [
      "matrices",
      "math",
      "implementation"
    ],
    "id": 1303
  },
  {
    "title": "Matriz",
    "url": "https://omegaup.com/arena/problem/Matriz",
    "history": "Dados los datos enteros de una matriz cuadrada de F filas por C columnas. 1< = F, C< = 50. Imprime sus datos desde la u\u0301ltima fila hasta la primera.",
    "input": "En la primera li\u0301nea los enteros F, C separados por espacios, que denotan el nu\u0301mero de filas y columnas de la matriz. En cada una de las siguientes F filas, C enteros separados por espacios.",
    "output": "F li\u0301neas, en cada li\u0301nea Los C datos separados por un espacio.",
    "note": "",
    "topics": [
      "math",
      "implementation",
      "matrices"
    ],
    "id": 1296
  },
  {
    "title": "Matriz Diagonal",
    "url": "https://omegaup.com/arena/problem/Matriz-Diagonal",
    "history": "Dados los datos enteros de una matriz cuadrada de N filas por N columnas. 1< = N< = 100. Determina si se trata de una matriz diagonal. En una matriz diagonal, todas las casillas de la diagonal desde la 0, 0 hasta la F- 1, C- 1 tienen el mismo valor.",
    "input": "41 2 3 45 1 4 98 7 1 29 9 3 1| | output",
    "output": "SI| | end# Explicacio\u0301n de la salida# El caso de ejemplo es una matriz diagonal porque las casillas 0, 0; 1, 1; 2, 2y 3, 3 tienen el valor 1, es decir, todas las casillas de la diagonal tienen el mismo valor.",
    "note": "",
    "topics": [
      "matrices",
      "math",
      "implementation"
    ],
    "id": 1294
  },
  {
    "title": "Cuadrados de colores",
    "url": "https://omegaup.com/arena/problem/cdc",
    "history": "Una cuadri\u0301cula de m por n tiene pintado cada uno de sus cuadritos de alguno de k colores. Estos cuadritos a veces forman cuadrados ma\u0301s grandes donde todos los cuadritos son del mismo color. Escribe un programa que determine la longitud g del lado ma\u0301s grande de cualquiera de estos cuadrados. Adema\u0301s, tu programa debera\u0301 determinar la cantidad c de cuadrados de ese taman\u0303o y el nu\u0301mero d de colores distintos en los que existan cuadrados de ese taman\u0303o. El ejemplo mostrado abajo tiene g = 2. Los cuadrados correspondientes son uno de color 1 y tres de color 3 ( por lo que c = 4 y d = 2) .",
    "input": "Tres nu\u0301meros enteros m, n y k en el intervalo 1 a 100 ( incluye\u0301ndolos) seguidos de m renglones con n enteros cada uno en el intervalo 1 a k ( incluye\u0301ndolos) .",
    "output": "Tres nu\u0301meros enteros g, c y d.",
    "note": "",
    "topics": [
      "brute force",
      "implementation",
      "matrices",
      "math",
      "dp"
    ],
    "id": 1036
  },
  {
    "title": "Rect\u00e1ngulos blancos y negros",
    "url": "https://omegaup.com/arena/problem/rbn",
    "history": "Considere una rejilla de m por n puntos blancos y negros. La rejilla tiene un recta\u0301ngulo blanco si los cuatro puntos en los ve\u0301rtices de un recta\u0301ngulo con sus lados paralelos a los de la rejilla son todos blancos. Los recta\u0301ngulos negros se definen de forma similar. Escribe un programa que encuentre el nu\u0301mero p de recta\u0301ngulos blancos y el nu\u0301mero q de recta\u0301ngulos negros en una rejilla. El ejemplo mostrado abajo tiene siete recta\u0301ngulos blancos con coordenadas ( 1, 1, 2, 5) , ( 1, 1, 3, 3) , ( 1, 1, 3, 5) , ( 1, 3, 3, 5) , ( 2, 1, 3, 4) , ( 2, 1, 3, 5) y ( 2, 4, 3, 5) , pero no tiene ningu\u0301n recta\u0301ngulo negro. ( a, b, c, d) significa que los cuatro puntos con coordenadas ( a, b) , ( a, d) , ( c, b) y ( c, d) tienen el mismo color.",
    "input": "Dos nu\u0301meros enteros m y n, con 2 \u2264 m, n \u2264 100, separados por un espacio, seguidos de m renglones con n nu\u0301meros separados por espacios en cada renglo\u0301n. Un 1 representa un punto blanco y un 0 representa un punto negro.",
    "output": "Dos nu\u0301meros enteros p y q separados por un espacio.",
    "note": "",
    "topics": [
      "math",
      "matrices"
    ],
    "id": 1034
  },
  {
    "title": "Matriz con entradas en diagonal",
    "url": "https://omegaup.com/arena/problem/med",
    "history": "Dados dos enteros m y n, escribe un programa que construya una matriz con m renglones y n columnas cuyas entradas sean los nu\u0301meros 1, 2, . . . , mn acomodados en diagonal, comenzando con el 1 en la entrada que esta\u0301 en la esquina superior izquierda, siguiendo con el 2 a la derecha del 1 y el 3 abajo del 1, y asi\u0301 sucesivamente.",
    "input": "Dos nu\u0301meros enteros 2 \u2264 m, n \u2264 100, separados por un espacio.",
    "output": "La matriz requerida ( ver el ejemplo de salida para el formato) .",
    "note": "",
    "topics": [
      "math",
      "matrices",
      "implementation"
    ],
    "id": 1030
  },
  {
    "title": "Matriz con entradas en espiral",
    "url": "https://omegaup.com/arena/problem/mee",
    "history": "Dados dos enteros m y n, escribe un programa que construya una matriz con m renglones y n columnas cuyas entradas sean los nu\u0301meros 1, 2, . . . , mn acomodados en espiral, comenzando con el nu\u0301mero 1 en la entrada que esta\u0301 en la esquina superior izquierda, siguiendo hacia la derecha, luego hacia abajo, luego hacia la izquierda, luego hacia arriba, y asi\u0301 sucesivamente.",
    "input": "Dos nu\u0301meros enteros m y n, separados por un espacio, cuyos valores esta\u0301n entre 1 y 100 ( incluye\u0301ndolos) .",
    "output": "La matriz requerida ( para mayor detalle, ver el ejemplo de salida, aunque no se requiere exactamente el mismo espaciado, so\u0301lo el orden) .",
    "note": "",
    "topics": [
      "math",
      "matrices"
    ],
    "id": 1024
  },
  {
    "title": "Matrices binarias giradas",
    "url": "https://omegaup.com/arena/problem/mbg",
    "history": "Una matriz binaria tiene todas sus entradas iguales a 0 o a 1. Dos matrices A y B tienen una entrada comu\u0301n si A_ ij = B_ ij. Si adema\u0301s permitimos que esas matrices se giren o reflejen de todas las formas posibles, entonces la cantidad de entradas comunes puede cambiar. Escribe un programa que lea dos matrices binarias cuadradas y que encuentre la cantidad ma\u0301xima p y mi\u0301nima q de entradas comunes cuando se permite girar o reflejar cualquiera de las dos matrices de cualquiera de las formas posibles.",
    "input": "Un nu\u0301mero entero n seguido de dos matrices A y B de n \u00d7 n. Puedes suponer que 1 \u2264 n \u2264 100.",
    "output": "Un nu\u0301mero entero p y un nu\u0301mero entero q.",
    "note": "",
    "topics": [
      "math",
      "matrices"
    ],
    "id": 1011
  },
  {
    "title": "Ganador del juego de gato",
    "url": "https://omegaup.com/arena/problem/gjg",
    "history": "El gato es un juego donde participan dos personas y se juega en un tablero cuadrado que se encuentra dividido por dos li\u0301neashorizontales y dos li\u0301neas verticales, formando una cuadri\u0301cula de taman\u0303o 3 por 3. A cada jugador se le asignan cinco fichas, que puedenser A o B. El juego comienza cuando uno de los dos jugadores coloca una de sus fichas en el tablero, luego el oponente coloca unaficha y asi\u0301 sucesivamente se van turnando ambos jugadores. Cualquiera de los dos jugadores puede comenzar el juego. El objetivo deljuego es que algu\u0301n jugador forme una li\u0301nea recta con tres fichas a lo largo del tablero. Gana el primero que cumpla esta meta. Escribeun programa que, dado un tablero que contiene una partida de gato, determine el estado de dicha partida.",
    "input": "Tres li\u0301neas cada una con tres caracteres indicando el estado del tablero. Cada cara\u0301cter sera\u0301 una \u2018A\u2019, \u2018B\u2019 o \u2018. \u2019, donde elcara\u0301cter \u2018. \u2019 denota una casilla vaci\u0301a.",
    "output": "Una ' A' si el jugador con las fichas ' A' ha ganado el juego, una ' B' si el jugador con las fichas ' B' ha ganado el juego, una ' E' si no sepuede decidir un ganador segu\u0301n el tablero dado o una ' I' si el estado del tablero es inva\u0301lido.",
    "note": "",
    "topics": [
      "math",
      "matrices"
    ],
    "id": 998
  },
  {
    "title": "Sumando vol\u00famenes de cubos",
    "url": "https://omegaup.com/arena/problem/svc",
    "history": "Por alguna razo\u0301n te gustan mucho los cubos y te la pasas jugando horas con ellos. Como todos sabemos, un cubo es unafigura tridimensional con ocho ve\u0301rtices, aunque si el cubo esta\u0301 orientado con respecto a los ejes entonces so\u0301lo se necesitan conocer dos ve\u0301rtices opuestos para poder ubicarlo en el espacio ( dos ve\u0301rtices son opuestos si sus coordenadas no tienen componentes en comu\u0301n) . Te gustari\u0301a calcular el volumen total que ocupari\u0301an N cubos, si para cada cubo conoces lascoordenadas de dos ve\u0301rtices opuestos. Desafortunadamente, los cubos pueden intersecarse y debes cuidar que elvolumen de su interseccio\u0301n so\u0301lo sea contado una vez.",
    "input": "Un entero N seguido de N li\u0301neas, donde cada li\u0301nea contiene seis enteros X_ 1, Y_ 1, Z_ 1, X_ 2, Y_ 2, Z_ 2 que son las coordenadas de dos ve\u0301rtices opuestos de un cubo orientado con respecto a los ejes. Puedes suponer que 0 \u2264 N \u2264 100 y que las componentes de las coordenadas estara\u0301n en un rango de - 100 a 100.",
    "output": "Un entero V que sea la suma del volumen ocupado por los N cubos.",
    "note": "",
    "topics": [
      "matrices",
      "implementation",
      "math"
    ],
    "id": 994
  },
  {
    "title": "Verificando rect\u00e1ngulos latinos",
    "url": "https://omegaup.com/arena/problem/vrl",
    "history": "Un recta\u0301ngulo latino es una cuadri\u0301cula de R renglones y C columnas donde cada cuadrito tiene un entero del 1 al R+ C y adema\u0301s todos los enteros de cada renglo\u0301n son distintos y todos los enteros de cada columna son distintos. Tu tarea es verificar si una matriz corresponde con un recta\u0301ngulo latino. Para ello debera\u0301s decir si cada renglo\u0301n y columna esta\u0301n bien. En el ejemplo mostrado abajo, los primeros dos renglones esta\u0301n mal ya que tienen enteros repetidos y el tercer renglo\u0301n esta\u0301 mal ya que tiene enteros fuera de rango.",
    "input": "Dos enteros R y C seguidos de una matriz de enteros con R renglones y C columnas. Puedes suponer que 1 \u2264 R \u2264 100, 1 \u2264 C \u2264 100 y que las entradas de la matriz M son enteros entre 1 y 1000.",
    "output": "Un renglo\u0301n con R enteros, uno por cada renglo\u0301n de la matriz ( 0 si el renglo\u0301n esta\u0301 mal, 1 si el renglo\u0301n esta\u0301 bien) seguido de un renglo\u0301n con C enteros, uno por cada columna de la matriz ( 0 si la columna esta\u0301 mal, 1 si la columna esta\u0301 bien) .",
    "note": "",
    "topics": [
      "implementation",
      "math",
      "matrices"
    ],
    "id": 989
  },
  {
    "title": "Frozen",
    "url": "https://omegaup.com/arena/problem/Frozen",
    "history": "Como ustedes sabra\u0301n Elsa y Anna son muy buenas hermanas, pero se han distanciado, porque Elsa con su magia congelante, hirio\u0301 a Anna en la cabeza y para que se cure, Elsa tiene que ir por la isla reuniendo todo el amor que le encarguen. # ProblemaDada la matriz que representa el amor que hay en la isla, tienes que cumplir con los encargos que te pidan para salvar a Anna",
    "input": "Dos enteros M y N que representan las dimensiones de la matriz. Las siguientes N li\u0301neas tendra\u0301n M enteros representando el amor en un punto de la isla. La siguiente li\u0301nea contendra\u0301 el entero Q que representa la cantidad de encargos que Elsa tendra\u0301 que cumplir. Las siguientes Q li\u0301neas contendra\u0301n cuatro enteros x1 y y1 que representan la esquina superior del a\u0301rea donde debera\u0301 buscar Elsa y x2 y y2 que representan la esquina inferior de la misma a\u0301rea.",
    "output": "Para cada encargo debera\u0301s imprimir la cantidad de amor reunido por ese encargo.",
    "note": "",
    "topics": [
      "math",
      "matrices"
    ],
    "id": 952
  },
  {
    "title": "L-OMI2010-Vueltas",
    "url": "https://omegaup.com/arena/problem/L-OMI2010-Vueltas",
    "history": "Se tiene un tablero de M filas por N columnas donde My N son nu\u0301meros impares mayores a uno. Sobre este tablero se desean realizar dos tipos de operaciones: Vueltas verticales y Vueltas horizontales. Una Vuelta se refiere a un giro del tablero que utiliza como eje de giro, la fila central en el caso de las vueltas verticales y la columna central en el caso de las vueltas horizontales. Por ejemplo, si sobre un tablero se realiza una vuelta vertical entonces la fila que esta\u0301 hasta arriba ahora estara\u0301 hasta abajo y viceversa, lo mismo con la segunda de arriba hacia abajo quedara\u0301 ahora como segunda de abajo hacia arriba, etc. # ProblemaEscribe un programa que reciba como entrada el tablero y la secuencia de vueltas a realizar sobre e\u0301l y escriba como salida la configuracio\u0301n final del tablero despue\u0301s de haber aplicado K vueltas.",
    "input": "Tu programa debe leer del teclado los siguientes datos: * En la primera li\u0301nea los nu\u0301meros M y N que indican el taman\u0303o del tablero. * En las siguientes M li\u0301neas habra\u0301 N nu\u0301meros enteros separados por un espacio en cada una que indican el contenido del tablero en esa fila* En la li\u0301nea siguiente a la u\u0301ltima del tablero, el nu\u0301mero K que indica la cantidad de vueltas a aplicar* En las siguientes K li\u0301neas habra\u0301 un cara\u0301cter ' V' o ' H' ( mayu\u0301sculas) que indica una vuelta Vertical o una vuelta Horizontal. Las vueltas al tablero se aplican en el orden en el que aparecen en la entrada.",
    "output": "Tu programa debe escribir a la pantalla los siguientes datos: M li\u0301neas con N enteros separados por un espacio cada uno que indiquen el estado final del tablero despue\u0301s de haber aplicado las Kvueltas en el orden que se especifica en la entrada. # Ejemplos| | input3 510 11 12 13 1415 16 17 18 1920 21 22 23 241V| | output20 21 22 23 2415 16 17 18 1910 11 12 13 14| | input3 510 11 12 13 1415 16 17 18 1920 21 22 23 241H| | output14 13 12 11 1019 18 17 16 1524 23 22 21 20| | end# Limites* 1 < M, N < 1, 000* 1 \u2264 K \u2264 50, 000* 1 \u2264 a[ i] [ j] < 1, 245",
    "note": "",
    "topics": [
      "implementation",
      "math",
      "matrices"
    ],
    "id": 843
  },
  {
    "title": "Submatrices",
    "url": "https://omegaup.com/arena/problem/Submatrices",
    "history": "Se tiene una matriz n con si\u0301mbolos raros ( di\u0301gitos de 0 al 9) . De taman\u0303o ren * col. Tambie\u0301n se tiene una submatriz m ( tambie\u0301n de di\u0301gitos) de taman\u0303o r * c tal que r < ren y c < col. Se dice que la matriz m esta\u0301 en n, si existe una cuadri\u0301cula k de extremos ( esquina superior izquierda y esquina inferior derecha) ( x_ 1, y_ 1) y ( x_ 2, y_ 2) tal que k es identica a m. Tu trabajo consiste en identificar los lugares en donde la submatriz m es contenida en n.",
    "input": "En la primera li\u0301nea vienen dos valores 1 < ren < 1000 y 1 < col < 1000. En las siguientes ren li\u0301neas vienen col enteros separados por un espacio y que representan los di\u0301gitos de la matriz n lei\u0301da desde la esquina superior izquierda hasta la esquina inferior derecha. Despue\u0301s viene otra li\u0301nea con dos enteros que representan a r y c respectivamente. En las siguientes r li\u0301neas vienen c enteros que representan a la Matriz m.",
    "output": "Debes imprimir una matriz de ceros y unos, separados por espacio, de taman\u0303o ren * col. Una casilla es simbolizada con 1 si forma parte de una submatriz m y un cero significa que nunca forma parte.",
    "note": "",
    "topics": [
      "implementation",
      "math",
      "matrices"
    ],
    "id": 829
  },
  {
    "title": "El tablero de Bety",
    "url": "https://omegaup.com/arena/problem/EltableroBety",
    "history": "Bety compro un tablero electronico muy poco comu\u0301n. Este tablero tiene forma de cuadricula con n filas y m columnas. El tablero electronico cuenta con 4 operaciones, \" Up\" , \" Down\" , \" Left, \" Right\" . \" Up\" toma la primera fila, y la pone al abajo de la ultima fila. \" Down\" toma la ultima fila, y la pone arriba de la primera fila. \" Left\" toma la primera columna, y la pone despues de la ultima columna\" \" Right\" toma la ultima columna, y la pone antes de la primer columna. Antes de empezar a jugar con el tablero, Bety quiere saber como quedara despues de aplicar k operaciones.",
    "input": "En la primera fila estaran los enteros n, m y k. Las siguientes k lineas, tendran un entero representando las operaciones que se aplicaran al tablero. \" Up\" sera representado con el entero 1, \" Down\" con el entero 2, \" Left\" con el entero 3 y \" Right\" con el entero 4. Las siguientes n lineas tendran m enteros, las cuales representaran la configuracio\u0301n inicial del tablero.",
    "output": "Una matriz de taman\u0303o n* m la cual representara la configuracio\u0301n final del tablero.",
    "note": "",
    "topics": [
      "math",
      "implementation",
      "constructive algorithms",
      "data structures",
      "matrices"
    ],
    "id": 240
  },
  {
    "title": "Amigos",
    "url": "https://omegaup.com/arena/problem/amigos",
    "history": "Despues de la u\u0301ltima olimpiada el COMI decidio\u0301 hacer una encuesta a los oli\u0301mpicos para ver las amistades que se habi\u0301an forjado durante el evento. De la encuesta se contruyo\u0301 una tabla T de N x N do\u0301nde Tij puede tener los valores 0 o\u0301 1 do\u0301nde 1 indica que el participante i considera al participante j como amigo. Tu tarea es dada esta tabla poder contestar a las preguntas \u00bfes el oli\u0301mpico x amigo del oli\u0301mpico y?",
    "input": "La primera linea contiene el nu\u0301mero N de concursantes. Las siguientes N li\u0301neas contienen los nombres de todos los concursantes ordenados alfabeticamente. Las siguientes N li\u0301neas contienen una N di\u0301gitos separados por espacios. La siguiente linea contiene un entero P que indica el numero de pregunta. Por cada pregunta habra\u0301 dos li\u0301neas con un nombre en cada una.",
    "output": "Tienes que escribir P lineas respondiendo 1 si el primer participante considera al segundo su amigo y 0 si no.",
    "note": "",
    "topics": [
      "math",
      "strings",
      "implementation",
      "matrices"
    ],
    "id": 97
  },
  {
    "title": "Pixel da\u00f1ado",
    "url": "https://omegaup.com/arena/problem/pixel_danado",
    "history": "",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "math",
      "implementation"
    ],
    "id": 10546
  },
  {
    "title": "Salvando a Santy",
    "url": "https://omegaup.com/arena/problem/Salvando-a-Santy",
    "history": "",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "math"
    ],
    "id": 6367
  }
]