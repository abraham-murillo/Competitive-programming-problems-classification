[
  {
    "title": "Algoritmo Euclides con restas",
    "url": "https://omegaup.com/arena/problem/Algoritmo-Euclides-con-restas",
    "history": "Para calcular el ma\u0301ximo comu\u0301n divisor de dos nu\u0301meros enteros se puede aplicar el algoritmo de Euclides, consiste en ir restando el nu\u0301mero ma\u0301s pequen\u0303o del nu\u0301mero ma\u0301s grande hasta que queden dos nu\u0301meros iguales, que sera\u0301n el ma\u0301ximo comu\u0301n divisor de los dos nu\u0301meros. \u2014\u2014\u2014-",
    "input": "Dos nu\u0301meros enteros positivos menores que un millo\u0301n, uno en cada renglo\u0301n. \u2014\u2014\u2014-",
    "output": "Un nu\u0301mero entero que es el ma\u0301ximo comu\u0301n divisor de los dos nu\u0301meros proporcionados. \u2014\u2014\u2014- # Ejemplos| | input4860| | output12| | description60 - 48 = 1248 - 12 = 3636 - 12 = 2424 - 12 = 1212 - 12 = 0 fin de algoritmoEl M. C. D. es 12| | input412184| | output4| | description| | input98734| | output1| | description| | end\u2014\u2014\u2014- # Li\u0301mites0 \u2264 ( n_ 1, n_ 2 ) \u2264 999999",
    "note": "",
    "topics": [
      "number theory"
    ],
    "id": 16328
  },
  {
    "title": "Area cuadrado",
    "url": "https://omegaup.com/arena/problem/Area-cuadrado-diagonal",
    "history": "Se te dara\u0301 la diagonal de un cuadrado, tu tarea sera\u0301 sacar el a\u0301rea Del cuadrado.",
    "input": "Un entero que indica el taman\u0303o de la diagonal.",
    "output": "El a\u0301rea del cuadrado indicada en * * cm2* * .",
    "note": "",
    "topics": [
      "number theory",
      "math"
    ],
    "id": 15947
  },
  {
    "title": "Primos hasta N",
    "url": "https://omegaup.com/arena/problem/Primos-hasta-N",
    "history": "Tu profesor de matema\u0301ticas, te a dejado de tarea investigar los nu\u0301meros primos hasta * * N* * como eres muy flojo. Decidiste hacer un co\u0301digo que lo haga por ti.",
    "input": "Un u\u0301nico entero * * N* * .",
    "output": "La cantidad de nu\u0301meros primos hasta * * N* * .",
    "note": "",
    "topics": [
      "number theory"
    ],
    "id": 15946
  },
  {
    "title": "Pir\u00e1mide de tareas",
    "url": "https://omegaup.com/arena/problem/Piramide-de-tareas",
    "history": "Jorge va a empezar a hacer sus tareas, pero las tiene apiladas en forma de pira\u0301mide, por lo que no puede hacerlas en cualquier orden. Para que Jorge pueda completar todas sus tareas, tiene que empezar por la que esta\u0301 en la cima de la pira\u0301mide y cuando termine esa tarea, puede continuar con cualquiera de las dos tareas que han quedado descubiertas, y asi\u0301 sucesivamente. Cada vez que se completa una tarea, siempre quedan dos nuevas tareas descubiertas para el siguiente minuto ( a menos que haya llegado a la base de la pira\u0301mide) . Al principio, la pira\u0301mide se encuentra de esta manera, ya que solo la tarea de la cima esta\u0301 disponible para hacer: ! [ Pira\u0301mide de tareas inicio] [ 2] Las tareas en verde son las que Jorge ya completo\u0301, las tareas en naranja son las tareas que Jorge ya tiene disponibles para hacer y las tareas en rojo son las tareas inaccesibles para Jorge. La pira\u0301mide de tareas en algu\u0301n momento puede verse asi\u0301: ! [ Pira\u0301mide de tareas] [ 1] Afortunadamente o desafortunadamente ( segu\u0301n sea el caso) Jorge puede hacer ma\u0301ximo p tareas en un minuto y la pira\u0301mide esta\u0301 conformada por h niveles. Ayuda a Jorge a calcular la mi\u0301nima cantidad de minutos que necesita para completar todas sus tareas.",
    "input": "Dos enteros h y p separados por un espacio.",
    "output": "Un entero indicando la cantidad mi\u0301nima de minutos que necesita Jorge para terminar todas sus tareas.",
    "note": "",
    "topics": [
      "trees",
      "graphs",
      "number theory",
      "implementation"
    ],
    "id": 15743
  },
  {
    "title": "Banderas del orgullo LGBTQ+",
    "url": "https://omegaup.com/arena/problem/Banderas-del-orgullo-LGBTQ",
    "history": "< center> ! [ ] ( fig. jpg) < / center> Los organizadores del desfile del orgullo LGBTQ+ necesitan imprimir banderas para distribuirlas entre los asistentes al desfile. Para esto, cuentan con una ma\u0301quina con dos componentes configurables: ( 1) Un rodillo giratorio con los C colores de la bandera y ( 2) una banda circular que se puede configurar para colocar M mantas. Al activar la ma\u0301quina, e\u0301sta imprime una franja del color 1 sobre la manta nu\u0301mero 1 y luego tanto el rodillo como la banda avanzan imprimiendo una franja del siguiente color sobre la siguiente manta. Tanto el rodillo como la banda avanzan simulta\u0301neamente. Cuando el rodillo alcanza el color C, regresa al color 1 y cuando la banda alcanza la manta nu\u0301mero M, regresa a la manta nu\u0301mero 1. Este proceso se repite exactamente C \u00d7 M veces. Por ejemplo, supongamos que el nu\u0301mero de colores es C= 2 y configuramos la banda para M= 3 mantas. En cada movimiento, el rodillo alternara\u0301 los dos colores. En el primer ciclo de la banda, las mantas tendra\u0301n los colores 1, 2, 1. Luego, el rodillo comenzara\u0301 con el color 2 sobre la banda 1, asi\u0301 que al final del siguiente ciclo, cada manta tendra\u0301 una franja de cada uno de los dos colores. Si la ma\u0301quina no se configura correctamente, es posible que las mantas no contengan todos los colores. Por ejemplo, en el caso anterior, si en lugar de configurar la banda para 3 mantas la configuramos para 4 mantas, entonces, al final del primer ciclo las mantas tendra\u0301n los colores 1, 2, 1, 2, y luego el rodillo regresara\u0301 al color 1 sobre la manta 1, volviendo a imprimir el mismo color en cada manta. Los organizadores del desfile necesitan imprimir al menos N banderas, cada una con todos los C colores. Ayuda a los organizadores a encontrar el mi\u0301nimo nu\u0301mero de mantas M con las que deben configurar la ma\u0301quina para asegurar que cada manta tendra\u0301 todos los C colores de la bandera del orgullo LGBTQ+ .",
    "input": "En la primera li\u0301nea, dos enteros C, N separados por un espacio, indicando el nu\u0301mero de colores de la bandera y el mi\u0301nimo nu\u0301mero de banderas que necesitamos imprimir.",
    "output": "En la primera li\u0301nea, el mi\u0301nimo nu\u0301mero M, donde M > = N de mantas con las que debemos configurar la ma\u0301quina para obtener al menos N banderas todas con los C colores.",
    "note": "",
    "topics": [
      "number theory"
    ],
    "id": 15476
  },
  {
    "title": "Calculando Funci\u00f3n",
    "url": "https://omegaup.com/arena/problem/calcfunction",
    "history": "Para cada entero positivo n definamos una funcio\u0301n f: f( n) = - 1+ 2- 3. . + ( - 1) ^ nnTu trabajo sera\u0301 calcular f( n) para un entero n.",
    "input": "Una sola li\u0301nea que contiene el entero positivo n.",
    "output": "Imprime f( n) en una sola li\u0301nea. | | input4| | output2| | descriptionf( 4) = - 1+ 2- 3+ 4= 2| | input5| | output- 3| | descriptionf( 5) = - 1+ 2- 3+ 4- 5= - 3| | end# Li\u0301mites* 1\u2264 n \u2264 10^ 15",
    "note": "",
    "topics": [
      "implementation",
      "number theory"
    ],
    "id": 15456
  },
  {
    "title": "Canicas aleatorias",
    "url": "https://omegaup.com/arena/problem/Canicas-aleatorias",
    "history": "Canicas aleatorias es un juego de mesa para dos jugadores que consiste en un tablero circular con N casillas numeradas del 1 al N y C canicas. Antes de iniciar el juego, los jugadores eligen un nu\u0301mero k al azar y colocan las canicas, tambie\u0301n al azar, sobre las casillas del tablero ( cada casilla puede tener cero o ma\u0301s canicas) . Luego el juego comienza: el primer jugador elige una casilla inicial A y recolecta todas las canicas de esa casilla, luego avanza k casillas en el sentido de las manecillas del reloj y recolecta todas las canicas de esa casilla y asi\u0301 sucesivamente hasta que regrese a su casilla original A. Luego es el turno del segundo jugador y procede de la misma manera eligiendo una casilla inicial B. El juego termina cuando ya no hay ma\u0301s canicas en el tablero. Al final del juego, gana el jugador que tenga la mayor cantidad de canicas. < center> ! [ ] ( img1. jpg) < / center> En la figura se muestra un ejemplo de un tablero de N= 14 casillas y F= 19 canicas. Suponiendo que el nu\u0301mero elegido fue k= 4, el primer jugador puede ganar el juego eligiendo, por ejemplo, A= 7 ya que de esa manera visitara\u0301 las casillas 7, 11, 1, 5, 9, 13, 3, 7, en ese orden, recolectando 10 canicas. Lo mejor que el segundo jugador puede hacer es recolectar las otras 9 canicas eligiendo por ejemplo B= 14, de esa manera visitara\u0301 las casillas 14, 4, 8, 12, 2, 6, 10, 14. Suponiendo que cada jugador intenta maximizar la cantidad de canicas que puede recolectar \u00bfcua\u0301ntas canicas obtendra\u0301 cada jugador?",
    "input": "En la primera li\u0301nea tres enteros positivos N, C y k que indican el nu\u0301mero de casillas del tablero, el nu\u0301mero de canicas y el nu\u0301mero casillas que los jugadores avanzan en cada movimiento, respectivamente. En la segunda li\u0301nea, C enteros positivos c_ i que indican el nu\u0301mero de casilla en la que se encuentra cada canica.",
    "output": "En la primera li\u0301nea, dos enteros positivos T_ 1, T_ 2 separados por un espacio indicando el total de canicas que obtendra\u0301 el primer jugador y el segundo jugador respectivamente, suponiendo que ambos juegan de manera o\u0301ptima.",
    "note": "",
    "topics": [
      "number theory"
    ],
    "id": 15205
  },
  {
    "title": "Entre Conjuntos",
    "url": "https://omegaup.com/arena/problem/Entre-Conjuntos",
    "history": "Dadas dos listas A y B de n y m enteros positivos respectivamente, tu tarea consiste en determinar cua\u0301ntos enteros positivos k existen tales que: 1. Todos los nu\u0301meros de la lista A son factores de k. 2. k es un factor de todos los elementos de la lista B.",
    "input": "- En la primera li\u0301nea, dos enteros positivos n y m separados por un espacio, que representan la cantidad de elementos de A y B, respectivamente. - En las siguientes n li\u0301neas, un elemento de A en cada li\u0301nea. - En las siguientes m li\u0301neas, un elemento de B en cada li\u0301nea.",
    "output": "Un u\u0301nico entero postivo k que denota la cantidad de enteros que cumplen las condiciones.",
    "note": "",
    "topics": [
      "number theory"
    ],
    "id": 15160
  },
  {
    "title": "Multiplos 5 y 7",
    "url": "https://omegaup.com/arena/problem/Multiplos-5-y-7",
    "history": "A Santy le encantan los juegos de cartas, en especial se encuentra viciado a las cartas de Poke\u0301mon. Sorprendentemente encontro\u0301 alguien igual de friki que el a quien le gustan estas cartas. Los pokemones favoritos de Santy son los de tipo fuego y a su amigo le gustan los tipo fantasma. Curiosamente las cartas del tipo fuego son aquellas numeradas con mu\u0301ltiplos del 5; es decir, la 5, 10, 15, . . . y las cartas del tipo fantasma son las numeradas con mu\u0301ltiplos de 7 como 7, 14, 21, . . . . Claramente existen cartas con ma\u0301s de un tipo, por ejemplo, la carta 70 es de tipo fuego y fantasma al mismo tiempo. Actualmente en el juego existe K cartas numeradas del 1 hasta el K. Santy y su amigo se preparan para un torneo de parejas. En el torneo solo se usa un mazo de cartas para ambos jugadores y no se permiten cartas repetidas. Ellos quieren crear un mazo lleno de sus cartas favoritas; ayu\u0301dalos a saber cua\u0301ntas cartas tendra\u0301 el mazo final. # ProblemaSe te dara\u0301 el nu\u0301mero de cartas que existen en el juego actualmente, K. Debera\u0301s imprimir el taman\u0303o del mazo de las cartas favoritas de Santy y su amigo teniendo en cuenta que a Santy le gustan las cartas que son mu\u0301ltiplos de 5 y a su amigo aquellas que son mu\u0301ltiplos de 7.",
    "input": "Un entero k que representa el nu\u0301mero de cartas que existen en el juego.",
    "output": "La cantidad de cartas que tendra\u0301 el mazo compuesto de las cartas favoritas de ambos.",
    "note": "",
    "topics": [
      "number theory"
    ],
    "id": 15084
  },
  {
    "title": "Helados de agua y de leche",
    "url": "https://omegaup.com/arena/problem/Helados-de-agua-y-de-leche",
    "history": "A Maria Antonieta le encantan los helados. Este domingo, su papa\u0301 le dio\u0301 un billete de N pesos para gastar y le dijo: \u201cChilindrinita, \u201d - asi\u0301 le dice de carin\u0303o su papa\u0301 - \u201c co\u0301mprate lo que quieras y me traes el cambio. \u201d Ella salio\u0301 corriendo a la heladeri\u0301a ma\u0301s cercana, donde venden dos tipos de helados: de agua y de leche. Los de agua cuestan A pesos y los de leche cuestan B pesos. Ahora, la ingeniosa Mari\u0301a Antonieta se pregunta si existira\u0301 alguna manera de gastarse absolutamente todo su dinero en helados.",
    "input": "En la primera li\u0301nea, tres nu\u0301meros N, A y B separados por espacio que indican el valor del billete de Mari\u0301a Antonieta y el precio de los helados de agua y de leche, respectivamente.",
    "output": "En la primera li\u0301nea, la palabra \u201cSI\u201d si es posible gastar todos los N pesos en helados, y la palabra \u201cNO\u201d si no es posible.",
    "note": "",
    "topics": [
      "number theory"
    ],
    "id": 15069
  },
  {
    "title": "Minimo Com\u00fan Divisor",
    "url": "https://omegaup.com/arena/problem/Minimo-Comun-Divisor",
    "history": "El < b> mi\u0301nimo< / b> comu\u0301n divisor de dos nu\u0301meros A, B es el < b> menor< / b> entero positivo que divide a ambos. Escribe un programa que dados dos enteros positivos A, B, imprima su < b> mi\u0301nimo< / b> comu\u0301n divisor.",
    "input": "En la primera li\u0301nea, dos enteros positivos A, B, separados por espacio.",
    "output": "En la primera li\u0301nea, el < b> mi\u0301nimo< / b> comu\u0301n divisor de A y B.",
    "note": "",
    "topics": [
      "number theory"
    ],
    "id": 15067
  },
  {
    "title": "Muchas pi\u00f1atas",
    "url": "https://omegaup.com/arena/problem/Muchas-pinatas",
    "history": "La mama\u0301 de Federico ( \u201cKiko\u201d, para sus amigos) le organizo\u0301 una fiesta de cumplean\u0303os con muchas pin\u0303atas ( \u00a1el nu\u0301mero de pin\u0303atas es igual al nu\u0301mero de nin\u0303os en la fiesta! ) , cada una de las cuales se rompe al darle exactamente G golpes. Durante la fiesta, a Federico se le ocurrio\u0301 formar una fila para turnarse a pegarle a las pin\u0303atas ( el primer nin\u0303o de la fila ocupa la posicio\u0301n 1, el segundo la posicio\u0301n 2, y asi\u0301 sucesivamente) . En cada turno, cada nin\u0303o le puede pegar a la pin\u0303ata una sola vez y luego se vuelve a formar al final de la fila. Todos los N nin\u0303os quieren ser quien rompa la pin\u0303ata porque entonces estara\u0301n ubicados en la mejor posicio\u0301n para recoger los dulces. Al ver la posicio\u0301n K de Kiko en la fila, su mama\u0301 se preocupo\u0301: \u00bfhabra\u0301 suficientes pin\u0303atas para que \" su Tesoro\" rompa al menos una?",
    "input": "En la primera li\u0301nea, tres enteros separados por espacio: el nu\u0301mero N de nin\u0303os en la fiesta ( igual al nu\u0301mero de pin\u0303atas) , la cantidad G de golpes que requiere cada pin\u0303ata para romperse y la posicio\u0301n K de Kiko en la fila.",
    "output": "En la primera li\u0301nea, la palabra \u201cSI\u201d si Kiko rompera\u0301 al menos una pin\u0303ata y la palabra \u201cNO\u201d si Kiko no rompera\u0301 ninguna pin\u0303ata.",
    "note": "",
    "topics": [
      "number theory"
    ],
    "id": 15066
  },
  {
    "title": "Carretera recta",
    "url": "https://omegaup.com/arena/problem/Carretera-recta",
    "history": "El gobierno de Plaquetaque quiere construir una carretera que conecte sus muchas ciudades. Las ciudades esta\u0301n representadas como puntos con valores x y y. Esta carretera sera\u0301 perfecta, por lo cual no tendra\u0301 ni una sola imperfeccio\u0301n, \u00a1Como por ejemplo tener curvas! Asi\u0301 es, la carretera sera\u0301 completamente recta, desde su comienzo hasta el fin. Esto por supuesto implica que muy probablemente no sera\u0301 posible conectar todas las ciudades con la misma carretera. Ayuda a los ingenieros a saber cual se la ma\u0301xima cantidad de ciudades que pueden ser conectadas con esta nueva carretera.",
    "input": "En la primer li\u0301nea un entero 2 \u2264 n \u2264 1000 la cantidad de ciudades en Plaquetaque. Las siguientes n li\u0301neas contienen cada una un par de enteros - 100 \u2264 x_ i, y_ i \u2264 100 las coordenadas de la i- e\u0301sima ciudad. Esta\u0301 garantizado que en cada punto solo puede existir una sola ciudad, es decir, cada par dado sera\u0301 u\u0301nico.",
    "output": "Imprime un solo entero, la ma\u0301xima cantidad de ciudades que es posible conectar con una carretera recta.",
    "note": "",
    "topics": [
      "geometry",
      "number theory"
    ],
    "id": 14759
  },
  {
    "title": "Mismos Divisores",
    "url": "https://omegaup.com/arena/problem/Mismos-Divisores",
    "history": "Dado un tablero de 1\u00d7 n, Edit desea escribir en cada una de las casillas un nu\u0301mero entre 1 y n ( inclusive) , de modo que se satisfagan las siguientes condiciones: - Cada nu\u0301mero mayor igual a 1 y menor igual a n debe aparecer exactamente 1 vez en el tablero. - Para cada posicio\u0301n 1 \u2264 k \u2264 n, el nu\u0301mero escrito en la k- e\u0301sima casilla y k deben tener la misma cantidad de divisores positivos. Formalmente, si los nu\u0301meros escritos en el tablero son x_ 1, x_ 2, . . . , x_ n en ese orden, entonces para cada 1 \u2264 k \u2264 n, el nu\u0301mero de divisores positivos de x_ k y el nu\u0301mero de divisores positivos de k es el mismo. Pablo, por su lado, ha decidido escribir m nu\u0301meros en algunas de las casillas, sin necesariamente respetar las reglas indicadas anteriormente a fin de complicar la tarea. En este problema, recibira\u0301 en la primera li\u0301nea los valores de n y m y luego m li\u0301neas, cada una con 2 enteros i, j indicando que Pablo escribio\u0301 el nu\u0301mero j en la posicio\u0301n i. Esta\u0301 garantizado que no hay 2 de las m li\u0301neas representando la entrada de Pablo con el mismo valor de i, pero si\u0301 es posible que haya 2 li\u0301neas con el mismo valor de j. Su objetivo es determinar de cua\u0301ntas maneras Edit puede escribir los nu\u0301meros en las casillas vaci\u0301as ( dejadas por Pablo) de modo que se satisfagan las 2 condiciones que deseaba inicialmente. Debido a que la respuesta puede ser un nu\u0301mero muy grande, retorne el residuo de la respuesta al efectuar la divisio\u0301n por 10^ 9 + 7 ( es decir, el residuo mo\u0301dulo 10^ 9 + 7) .",
    "input": "La primera li\u0301nea de entrada contiene 2 enteros n y m, denotando la longitud del tablero y la cantidad de casillas ya rellenadas. Luego, siguen m li\u0301neas, la t- e\u0301sima contiene 2 enteros i_ t, j_ t separados por un espacio, denotando que el tablero tiene escrito el nu\u0301mero j_ t en la casilla i_ t. Esta\u0301 garantizado que no hay 2 valores iguales de i_ t, pero si\u0301 es posible tener dos valores iguales de j_ t.",
    "output": "La cantidad de maneras diferentes de escribir nu\u0301meros en las casillas restantes de modo que se satisfagan las condiciones mencionadas arriba, mo\u0301dulo 10^ 9+ 7.",
    "note": "",
    "topics": [
      "number theory"
    ],
    "id": 14660
  },
  {
    "title": "Online Mashing International",
    "url": "https://omegaup.com/arena/problem/Online-Mashing-International",
    "history": "Ludwig es el encargado de organizar las fases de eliminacio\u0301n del torneo de Smash Bros ma\u0301s grande del an\u0303o, Online Mashing International ( OMI) . Los organizadores le pidieron que haga las eliminaciones de la siguiente manera: 1. De las personas que sigan en el torneo, escoge a 2^ n personas de forma aleatoria y has un sub- torneo. Un sub- torneo es una llave de eliminacio\u0301n donde 2^ n- 1 personas son eliminadas y una persona puede seguir jugando. 2. Repite el proceso hasta que solo quede un jugador, el ganador del torneo. Ayuda a Ludwig a encontrar la menor cantidad de sub- torneos que tiene que hacer para poder declarar al ganador del OMI.",
    "input": "N, la cantidad de jugadores inscritos al torneo.",
    "output": "La menor cantidad de sub- torneos que tiene que hacer para poder declarar al ganador del OMI.",
    "note": "",
    "topics": [
      "number theory"
    ],
    "id": 14652
  },
  {
    "title": "ANIEI 2021 - B",
    "url": "https://omegaup.com/arena/problem/ANIEI-2021---B",
    "history": "El profesor Moralov tiene una obsesio\u0301n por los nu\u0301meros primeros ( los nu\u0301meros naturales mayores que 1 que no tienen divisores propios mayores que 1) . Adema\u0301s, como es profesor de computacio\u0301n y de programacio\u0301n, tambie\u0301n esta\u0301 acostumbrado a trabajar con ni\u0301meros binarios. Como el profesor piensa que encontrar nu\u0301meros primos en un intervalo es fa\u0301cil y fastidioso, se le ha ocurrido un nuevo reto. El profesor tiene intere\u0301s en conocer cua\u0301ntas cadenas binarias de longitud K tienen una cantidad prima de ceros y una cantidad prima de unos. Por ejemplo, si K = 10 entonces el profesor esta\u0301 interesado en las cadenas con 3 ceros y 7 unos, con 7 ceros y 3 unos, y con 5 ceros y 5 unos. Ma\u0301s au\u0301n ( y para volver el reto ma\u0301s interesante) , el profesor Moralov desea calcular la cantidad total de estas cadenas si K puede estar entre X y Y inclusivo.",
    "input": "La primera li\u0301nea contiene un entero Q que es el nu\u0301mero de casos de prueba. Las siguientes Q li\u0301neas contienen dos enteros X y Y separados por un espacio.",
    "output": "Para cada caso de prueba, debes imprimir la cantidad total de cadenas que cumplen las propiedades mencionadas. Como dicho valor puede ser muy grande, debes imprimirlo mo\u0301dulo 1000000007.",
    "note": "",
    "topics": [
      "number theory"
    ],
    "id": 14234
  },
  {
    "title": "Manteniendo Distancias",
    "url": "https://omegaup.com/arena/problem/Manteniendo-Distancias",
    "history": "The past year has been difficult, with a virus spreading among the population. Fortunately, Alice knows that one of the keys to be healthy is to keep a safe distance from other people. Alice is currently in a closed room, represented in the 2D plane, with width X and height Y. There are N other people inside the room, and we' re given their ( x_ i, y_ i) coordinates. We consider Alice and the N people as points in the 2D plane. Alice' s initial position is ( 0, 0) and she wants to move to the exit at position ( X, Y) . She can move freely in any direction inside the room, but can not step outside the room bounds. Find the maximum distance Alice can keep from other people while moving from ( 0, 0) to ( X, Y) .",
    "input": "The input begins with one line containing two space- separatedintegers, X and Y, where X is the width, and Y is the heightof the room. The second line consists of a single integer N, thenumber of people in the room. Then N lines follow, each of themconsisting of two floating- point numbers x_ i and y_ i, thecoordinates of the i^ th person in the room.",
    "output": "The output consists of a single value d, the maximum safe distance, as a floating- point number. An additive or multiplicative error of 10^ - 5 is tolerated: if d is the answer, any number either within [ d - 10^ - 5; d + 10^ - 5] or within [ ( 1 - 10^ - 5) d ; ( 1 + 10^ - 5) d] is accepted. # # Limits- 1 \u2264 X, Y \u2264 1 000 000- 1 \u2264 N \u2264 1 000- 0 \u2264 x_ i \u2264 X- 0 \u2264 y_ i \u2264 Y# Examples| | input10 1013 3| | output3. 000000| | end| | input10 1017 7| | output3. 000000| | end| | input8 633 13 5. 56. 5 1. 5| | output2. 250000| | end",
    "note": "",
    "topics": [
      "number theory"
    ],
    "id": 14227
  },
  {
    "title": "Missing digit",
    "url": "https://omegaup.com/arena/problem/Missing-digit",
    "history": "El problema consiste en encontrar el di\u0301gito faltante entre 1 y n ( 1 \u2264 n \u2264 10^ 5)",
    "input": "La entrada consiste de 2 lineas. En la primera linea se dara\u0301 un nu\u0301mero n. En la segunda linea, se dara\u0301n n- 1 nu\u0301meros enteros no repetidos.",
    "output": "El u\u0301nico nu\u0301mero entero faltante.",
    "note": "",
    "topics": [
      "number theory"
    ],
    "id": 14134
  },
  {
    "title": "M\u00faltiplos Cercanos",
    "url": "https://omegaup.com/arena/problem/Multiplos-Cercanos",
    "history": "A Juan le acaban de ensen\u0303ar en su clase de Matema\u0301ticas que cualquier numero entero N puede ser representado por la multiplicacio\u0301n de otros dos nu\u0301meros enteros A y B. Sin embargo e\u0301l se dio cuenta que no solo hay una manera para representar N como producto de dos numerosPor ejemplo el numero 20= ( 1* 20) , ( 2 * 10) , ( 4 * 5) . Juan sabe que eres buena gente y quiere que le ayudes a saber cual es la manera en la que A * B = N tal que A = \u0338 B y A, B> 1 y que a su vez estos dos nu\u0301meros sean lo mas cercano posibles entre si.",
    "input": "Un numero entero N",
    "output": "Dos nu\u0301meros A y B separados por un espacio * * mostrando primero el ma\u0301s pequen\u0303o* * . En caso de no cumplir las condiciones mostrar un - 1",
    "note": "",
    "topics": [
      "implementation",
      "number theory",
      "*special"
    ],
    "id": 13971
  },
  {
    "title": "Irreducible",
    "url": "https://omegaup.com/arena/problem/Irreducible",
    "history": "* * Antonio* * realiza su tarea de matema\u0301ticas, que consiste en simplificacio\u0301n de fracciones, por ejemplo: 16/ 64 = 1/ 4 * * Antonio* * no recuerda el procedimiento para realizar dichos ejercicios, sin embargo de su clase de a\u0301lgebra recuerda que es posible realizar las siguientes cancelaciones de factores en comu\u0301n: a\u0338\u00b7 b/ c \u00b7a\u0338 = b/ c * * Antonio* * confi\u0301a en que es posible usar un me\u0301todo similar, pero ahora con di\u0301gitos similares en las fracciones, por ejemplo para reducir 26/ 65, * * Antonio* * cancelara\u0301 * * todos* * los pares di\u0301gitos que se se encuentren tanto en en el numerador, como en el denominador: 26\u0338/ 6\u0338 5 = 2/ 5 Nota 1: * * Antonio* * solo puede ir reduciendo de par en par de di\u0301gitos, por ejemplo para reducir 545/ 654, se tiene: 54\u03385\u0338/ 65\u03384\u0338 = 5/ 6 Nota 2: * * Antonio* * puede elegir dichos di\u0301gitos en cualquier orden, por ejemplo: 5\u03384\u0338 5 / 65\u03384\u0338 = 5/ 6 Nota 3: * * Antonio* * no puede eliminar todos los di\u0301gitos del numerador o denominador, ya que esto definitivamente producira\u0301 un resultado erro\u0301neo, por lo tanto, * * Antonio* * no podri\u0301a simplificar ma\u0301s, fracciones como las siguientes: 2/ 22 , 1/ 12 Ya que eres buen amigo de * * Antonio* * , decides revisar sus resultados y hacerle notar en caso de que haya cometido errores.",
    "input": "La primer li\u0301nea contiene un entero T, el nu\u0301mero de fracciones a reducir ( simplificar) , a continuacio\u0301n T li\u0301neas con dos enteros N, D separados por un espacio, los cua\u0301les indican los valores del numerador y denominador respectivamente. * * Nota 4* * : Se garantiza que N y D no forman una fraccio\u0301n irreducible desde un principio.",
    "output": "T li\u0301neas, cada una de ellas contendra\u0301 el resultado correcto de la simplificacio\u0301n y una palabra ( SI o NO) indicando si * * Antonio* * obtendra\u0301 el mismo resultado utilizando su me\u0301todo.",
    "note": "",
    "topics": [
      "number theory"
    ],
    "id": 13805
  },
  {
    "title": "N\u00fameros felinos",
    "url": "https://omegaup.com/arena/problem/Numeros-felinos",
    "history": "# HistoriaPusito, el gato de Naty, compro\u0301 un nuevo tele\u0301fono con un nuevo nu\u0301mero. Pusito ama estar sucio y los * * nu\u0301meros felinos* * . \u2014\u2014\u2014- ! [ enter image description here] [ 1] \u2014\u2014\u2014- Pusito define a los * * nu\u0301meros felinos* * como aquellos de N di\u0301gitos tales que al dividirlo en NK segmentos de K di\u0301gitos consecutivos, el i- e\u0301simo segmento * * NO* * empieza con el di\u0301gito B_ i y ese mismo segmento, al convertirlo en un nu\u0301mero entero, es divisible entre el nu\u0301mero A_ i. Para esto, Naty le ha dado a Pusito dos arreglos A y B de NK nu\u0301meros. Pusito es un pensador destacado, asi\u0301 que se puso a pensar cua\u0301ntos * * nu\u0301meros felinos* * puede formar y te ha pedido ayuda porque son demasiados. # ProblemaDados los enteros N, K y los arreglos A y B, determinar cua\u0301ntos posibles * * nu\u0301meros felinos* * puede formar Pusito.",
    "input": "En la primera li\u0301nea, los enteros N y K separados por un espacio. En la segunda li\u0301nea el arreglo A, NK nu\u0301meros separados por un espacio. En la tercera li\u0301nea el arreglo B, NK nu\u0301meros separados por un espacio.",
    "output": "Imprime la cantidad de * * nu\u0301meros felinos* * mo\u0301dulo 10^ 9 + 7 que Pusito puede formar.",
    "note": "",
    "topics": [
      "math",
      "number theory"
    ],
    "id": 13665
  },
  {
    "title": "Pociones sospechosas",
    "url": "https://omegaup.com/arena/problem/Pociones-sospechosas",
    "history": "Esta\u0301s jugando un videojuego en el mundo ma\u0301gico de Magialandia. Has decidido embarcarte en mu\u0301ltiples misiones para asi\u0301 conseguir oro. Para ayudarte a cumplirlas, has comprado varias pociones en una tienda sospechosa en un callejo\u0301n. Pensa\u0301ndolo bien, decides consultar con un alquimista con experiencia. Usando un hechizo ha descubierto la potencia de cada pocio\u0301n. La potencia es un nu\u0301mero entero el cual se obtiene multiplicando la potencia individual de los ingredientes usados en la creacio\u0301n de la pocio\u0301n. Todo ingrediente tiene una potencia mi\u0301nima de 2. Sabiendo esto, e\u0301l te advierte que muchas veces le agregan preservadores canceri\u0301genos a las pociones. Como las botellas no tienen etiqueta con una lista de ingredientes, la u\u0301nica forma en la que puedes saber si no contienen ingredientes extra es revisando la potencia. Por ejemplo, una pocio\u0301n con potencia 4 puede haber sido creada por dos ingredientes de potencia 2 cada uno. Pero una pocio\u0301n con potencia 3 solo pudo haber sido creada con un solo ingrediente de potencia 3.",
    "input": "En la primer li\u0301nea un entero 1\u2264 n \u2264 1e6, la cantidad de pociones que compraste. En la segunda li\u0301nea hay n nu\u0301meros 2 \u2264 a_ i \u2264 1e5 la potencia de la i- e\u0301sima pocio\u0301n.",
    "output": "Por cada pocio\u0301n imprimir \" Seguro\" si la pocio\u0301n solo pudo ser creada por un solo ingrediente o \" Inseguro\" si es posible que la pocio\u0301n haya sido creada por 2 o ma\u0301s ingredientes.",
    "note": "",
    "topics": [
      "number theory"
    ],
    "id": 13546
  },
  {
    "title": "Invertir un n\u00famero",
    "url": "https://omegaup.com/arena/problem/Invertir-numero",
    "history": "Elabora un programa que permita invertir un nu\u0301mero de T di\u0301gitos, con T> = 2| | input5689| | output9865| | end",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "math",
      "number theory"
    ],
    "id": 13175
  },
  {
    "title": "Concurso de multiplicar",
    "url": "https://omegaup.com/arena/problem/Concurso-de-multiplicar",
    "history": "< br/ > Hoy es el di\u0301a del galardonado concurso de multiplicacio\u0301n! El concursante del di\u0301a de hoy es el audaz Hidalgo, lleva prepara\u0301ndose todo el mes para este di\u0301a, y como buen competidor ya conoce todas las reglas ytema\u0301ticas del concurso, sin embargo aun asi\u0301 sera\u0301n repetidas para los nuevos espectadores! En la pantalla se van a mostrar K nu\u0301meros, y se quieren agarrar algunos para multiplicar, bastante sorprendente! Pero al multiplicar nu\u0301meros es muy fa\u0301cil conseguir un nu\u0301mero muy grande, o un nu\u0301mero muy pequen\u0303o, por lo que el reto es tratarde que al multiplicar los nu\u0301meros elegidos den exactamente N. Ayuda a Hidalgo a saber si puede formar exactamente N al multiplicar algu\u0301n conjunto de nu\u0301meros de la lista presentada. No es necesario usar todos los nu\u0301meros, en la lista de nu\u0301meros pueden haber repetidos lo cual hace posible agarrar cierto nu\u0301mero de copias mientras este\u0301n disponibles, si un nu\u0301mero solo aparece una vez no se puede agarrar ma\u0301s de una vez.",
    "input": "< br/ > Dos enteros N, y K, que indica el nu\u0301mero que se quiere formar, y cuantos nu\u0301meros hay en la lista. < br/ > Seguido habra\u0301n K nu\u0301meros, que representan la lista de nu\u0301meros mostrada en pantalla.",
    "output": "< br/ > Una sola palabra \" SI\" si es posible formar exactamente el nu\u0301mero, o \" NO\" si no es posible.",
    "note": "",
    "topics": [
      "dp",
      "number theory"
    ],
    "id": 13172
  },
  {
    "title": "Yu-Gi-Oh!",
    "url": "https://omegaup.com/arena/problem/Yu-Gi-Oh",
    "history": "Jorge se encontraba jugando Yu- Gi- Oh! con sus n cartas cuando de pronto adquirio\u0301 un poder que le permiti\u0301a ver el nivel de cada carta en su pila de cartas ( deck) . Las cartas esta\u0301n numeradas de 1 a n desde el fondo hasta la cima de la pila. El deck esta\u0301 representado por un arreglo con las puntuaciones p_ i ( 1 \u2264 i \u2264 n) de cada carta. La carta con puntuacio\u0301n p_ 1 esta\u0301 en el fondo y la carta con puntuacio\u0301n p_ n esta\u0301 en la cima. Jorge esta\u0301 a punto de revolver su deck, por lo que quiere utilizar este poder para maximizar la fuerza de su deck y vencer a Santy, su malvado oponente. La fuerza del deck se define como: \u2211_ i= 1^ n n^ n - i\u00b7 p_ i Jorge revuelve su deck de la siguiente manera: - Elige un entero k ( 0 < k) . - Toma las primeras k cartas de la cima de su deck y las pone, en el orden en el que esta\u0301n, en la cima de una segunda pila que va a ser su deck revuelto. - Repite el proceso hasta que no queden cartas en su deck original. Por ejemplo, si el deck es 1 2 3 4 5, puede revolverlo de la siguiente manera: - k = 1: se toma la primer carta de la cima del deck original y se ponen en la cima del segundo deck. - Original: 1 2 3 4- Segundo: 5- k = 3: se toman las primeras 3 cartas de la cima del deck original y se ponen en la cima del segundo deck. - Original: 1- Segundo: 5 2 3 4- k = 1: se toma la primer carta de la cima del deck original y se ponen en la cima del segundo deck. - Original: - Segundo: 5 2 3 4 1Jorge sabe que eres un buen programador y quiere ganar a toda costa, por lo que te ha pedido que le ayudes a revolver su deck y calcules la fuerza obtenida. # ProblemaDado un arreglo con las puntuaciones p_ i de las n cartas del deck de Jorge ( desde el fondo hasta la cima) , revuelve el deck y calcula la fuerza obtenida. El puntaje obtenido para cada caso sera\u0301 mayor si tu respuesta se acerca a la fuerza ma\u0301xima posible, o menor si se aleja de la fuerza ma\u0301xima posible. Si imprimes la ma\u0301xima fuerza posible, obtendra\u0301s todos los puntos.",
    "input": "En la primera li\u0301nea un entero n, la cantidad de cartas del deck de Jorge. En la segunda li\u0301nea, n enteros p_ i, las puntuaciones de cada carta empezando por el fondo y terminando en la cima del deck.",
    "output": "Una li\u0301nea con un entero indicando la fuerza calculada, mo\u0301dulo 10^ 9 + 7.",
    "note": "",
    "topics": [
      "sortings",
      "implementation",
      "number theory",
      "math",
      "greedy"
    ],
    "id": 13002
  },
  {
    "title": "El problema f\u00e1cil de Jorge",
    "url": "https://omegaup.com/arena/problem/El-problema-facil-de-Jorge",
    "history": "A Jorge se le acabaron los problemas para los concursos de los sa\u0301bados, asi\u0301 que decidio\u0301 buscar en lo ma\u0301s profundo de \" inserte nombre de lugar\" y encontro\u0301 k problemas. Jorge quiere saber para cua\u0301ntos concursos le alcanza de tal manera que todos los concursos tengan la misma cantidad entera de problemas y que todos los concursos tengan al menos un problema. # ProblemaDado el entero k, decir de cua\u0301ntas maneras Jorge podra\u0301 asignar la misma cantidad de problemas a los concursos y cua\u0301ntos problemas tendra\u0301 cada concurso de cada configuracio\u0301n.",
    "input": "Un entero k, la cantidad de problemas.",
    "output": "En la primera li\u0301nea un entero c indicando la cantidad de configuraciones. En la segunda li\u0301nea c enteros separados por un espacio indicando la cantidad de problemas de cada configuracio\u0301n ( en cualquier orden) .",
    "note": "",
    "topics": [
      "implementation",
      "number theory"
    ],
    "id": 12796
  },
  {
    "title": "Collatz",
    "url": "https://omegaup.com/arena/problem/CollatzFacil2",
    "history": "# La conjetura de CollatzLa conjetura de Collatz consiste en lo siguiente: \u00b7 Inicia con cualquier entero positivo. \u00b7 Si es par, divi\u0301delo entre 2; si es impar multipli\u0301calo por 3 y agre\u0301guele 1. \u00b7 Obte\u0301n enteros sucesivamente repitiendo el proceso. Al final se obtendra\u0301 el nu\u0301mero 1, independientemente del nu\u0301mero entero inicial. Por ejemplo, cuando el entero inicial es 40, la secuencia sera\u0301: 40 20 10 5 16 8 4 2 1",
    "input": "Un nu\u0301mero entero, n.",
    "output": "Secuencia de nu\u0301meros correspondiente a la conjetura de Collatz.",
    "note": "",
    "topics": [
      "number theory"
    ],
    "id": 12782
  },
  {
    "title": "Sumatoria n\u00fameros enteros",
    "url": "https://omegaup.com/arena/problem/sumatoria-numeros-enteros",
    "history": "# La suma de los primeros n nu\u0301meros enteros positivosTienes que elaborar un programa que permita ingresar un nu\u0301mero entero positivo n y luego realizar la suma de todos los nu\u0301meros comprendidos entre 1 y n. Por ejemplo, cuando el nu\u0301mero es 5 , la sumatoria es 1+ 2+ 3+ 4+ 5 = 15",
    "input": "Un nu\u0301mero entero, n.",
    "output": "LA sumatoria los los primeros n nu\u0301meros enteros positivos.",
    "note": "",
    "topics": [
      "number theory"
    ],
    "id": 12778
  },
  {
    "title": "Funciones extra\u00f1as",
    "url": "https://omegaup.com/arena/problem/Funciones-extranas",
    "history": "Definamos una funcio\u0301n f( x) ( x es un entero positivo) como lo siguiente: escribe todos los di\u0301gitos en la representacio\u0301n decimal de x al reve\u0301s, luego elimina todos los ceros a la izquierda. Por ejemplo, f( 123) = 321, f( 120) = 21, f( 1000000) = 1, f( 111) = 111. Definamos otra funcio\u0301n g( x) = xf( f( x) ) ( x es un entero positivo tambie\u0301n) . # ProblemaDado un entero positivo n, calcular la cantidad de valores diferentes de g( x) para todos los valores de x tal que 1 \u2264 x \u2264 n.",
    "input": "Un entero positivo n.",
    "output": "La cantidad de valores diferentes de g( x) si x esta\u0301 en el intervalo [ 1, n] .",
    "note": "",
    "topics": [
      "number theory"
    ],
    "id": 12598
  },
  {
    "title": "Dame pan",
    "url": "https://omegaup.com/arena/problem/Dame-pan",
    "history": "Un panadero ha contratado a Jorge y Eli\u0301as para que trabajen en su panaderi\u0301a. El panadero les ha encargado que consigan K panes para vender, pero el panadero no tiene do\u0301nde colocar sus panes, asi\u0301 que a Eli\u0301as tambie\u0301n le pide que consiga M muebles y a Jorge que construya N espacios en cada mueble. El panadero quiere repartir en partes iguales ( todos deben tener la misma cantidad de panes) los panes en los espacios de cada mueble sin que le sobren ( si sobran se lo quedan Jorge y Eli\u0301as sin pagar) . El panadero solo acepta los M muebles si puede repartir en partes iguales los panes en los muebles de tal manera que haya al menos 1 pan en cada mueble y que no le sobren panes. El panadero solo acepta los N espacios de cada mueble si puede repartir en partes iguales los panes en los espacios de un mueble de tal manera que haya al menos 1 pan en cada espacio y que no le sobren panes. Eli\u0301as y Jorge han encontrado un fallo en las condiciones del panadero y verificaron que pueden comerse unos panes gratis.",
    "input": "Dos enteros x y y que representan un intervalo de valores [ x, y] .",
    "output": "En la primera li\u0301nea los valores para M, N y K ( en ese orden) dentro del intervalo [ x, y] que Jorge y Eli\u0301as deben elegir para poder comer algunos panecitos gratis. En otra li\u0301nea la cantidad de panes que comera\u0301n Jorge y Eli\u0301as. Imprime solo un \" - 1\" ( sin las comillas) en caso de que no sea posible.",
    "note": "",
    "topics": [
      "number theory"
    ],
    "id": 12592
  },
  {
    "title": "Bloques de LEKO",
    "url": "https://omegaup.com/arena/problem/Bloques-de-LEKO",
    "history": "Eli\u0301as se aburrio\u0301 de jugar LOL y decidio\u0301 comprar bloques de LEKO para construir cosas. Por el fri\u0301o solo se le ocurrio\u0301 construir columnas de bloques y las acomodo\u0301 una tras otra, en fila. Empezo\u0301 construyendo una columna de 1 bloque, la siguiente ( la de atras) la construyo\u0301 con 2 bloques, el tercero con 3 bloques, en general, construye una columna con un bloque ma\u0301s que la anterior. Eli\u0301as sabe pago\u0301 por cada bloque 1 MXN, pero no recuerda cua\u0301nto pago\u0301 en total, ayu\u0301dale dicie\u0301ndole cua\u0301nto pago\u0301 por todos los bloques en total si construyo\u0301 N columnas y no le sobraron bloques.",
    "input": "Un entero N, la cantidad de columnas que construyo\u0301 Eli\u0301as.",
    "output": "La cantidad de dinero que Eli\u0301as pago\u0301 por los bloques.",
    "note": "",
    "topics": [
      "number theory"
    ],
    "id": 12585
  },
  {
    "title": "Watermelon",
    "url": "https://omegaup.com/arena/problem/Watermel",
    "history": "> ! [ Small] [ 1] < kbd> Se actualizaro\u0301n casos a las 11: 30 AM ( Agosto 10, 2020) < / kbd> > # Descripcio\u0301n> Un caluroso di\u0301a de verano, Pete y su amigo Billy decidieron comprar una sandi\u0301a. Eligieron la ma\u0301s grande y madura ( en su opinio\u0301n) . Despue\u0301s se peso\u0301 la sandi\u0301a y la balanza mostro\u0301 w kilos. Se apresuraron a casa, muriendo de sed, y decidieron dividir la sandia, sin embargo, enfrentaron un problema difi\u0301cil. > Pete y Billy son grandes admiradores de los nu\u0301meros pares, por eso quieren dividir la sandi\u0301a de tal manera que cada una de las dos partes pese un nu\u0301mero par de kilos, al mismo tiempo no es obligatorio que las partes sean iguales. Los nin\u0303os esta\u0301n extremadamente cansados \u200b\u200by quieren comenzar su comida lo antes posible, por eso debes ayudarlos y averiguar si pueden dividir la sandi\u0301a de la manera que quieran. Por supuesto, cada uno de ellos deberi\u0301a obtener una parte de peso positivo. \u2014\u2013> # Entrada> La primera ( y u\u0301nica) li\u0301nea de entrada contiene el nu\u0301mero entero w ( 1 \u2264 w \u2264 100 ) - el peso de la sandi\u0301a comprada por los nin\u0303os. > # Salida> Escriba< kbd> SI< / kbd> , si los nin\u0303os pueden dividir la sandi\u0301a en dos partes, cada una de ellas con un * * nu\u0301mero par de kilos* * ; y < kbd> NO< / kbd> en el caso contrario. \u2014\u2014\u2014# Ejemplo: | | input8| | outputSI| | end\u2014\u2014\u2014> # Nota: > Por ejemplo, los nin\u0303os pueden dividir la sandi\u0301a en dos partes de 2 y 6 kilos respectivamente. ( Otra variante - dos partes de 4 y 4 kilos) .",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "implementation",
      "number theory",
      "math"
    ],
    "id": 11611
  },
  {
    "title": "Collatz y sus amigos",
    "url": "https://omegaup.com/arena/problem/Collatz-y-sus-amigos",
    "history": "Juaritos es un vendedor de manzanas y de la nada llega un mago y este le dice: \" Te voy a hechizar tu puesto de manzanas. Si un cliente llega y ve que tienes un nu\u0301mero par de manzanas, este se llevara\u0301 la mitad. Sin embargo, si este ve que tienes un nu\u0301mero impar de manzanas, ma\u0301gicamente aparecera\u0301n el triple de las manzanas ma\u0301s uno. Juaritos preocupado quiere saber cua\u0301ntos clientes van a llegar hasta que se quede con una manzana. # ProblemaEscribe un programa que reciba como entrada el nu\u0301mero de manzanas de Juaritos y que regrese el nu\u0301mero de clientes que tuvo hasta que se quedo\u0301 con una sola.",
    "input": "Un solo entero con el nu\u0301mero de manzanas.",
    "output": "Un solo entero con el nu\u0301mero de clientes que pasaron.",
    "note": "",
    "topics": [
      "number theory"
    ],
    "id": 11588
  },
  {
    "title": "Sumatoria B\u00e1sica",
    "url": "https://omegaup.com/arena/problem/Sumatoria-Basica",
    "history": "Dado un numero N imprimir la sumatoria de los numeros del 1 hasta el N. \u2211_ i= 1^ N",
    "input": "Un numero entero N.",
    "output": "La suma de los numeros de 1 al N. donde x es la posicio\u0301n donde vas a dejar a tu nave estacionada.",
    "note": "",
    "topics": [
      "math",
      "implementation",
      "number theory"
    ],
    "id": 11352
  },
  {
    "title": "Raiz cubica",
    "url": "https://omegaup.com/arena/problem/Raiz-cubica",
    "history": "# HistoryQuiero un programa que me saque la raiz cubica.",
    "input": "Un numero entero N.",
    "output": "La raiz cubica de N. ( Primeros 10 digitos)",
    "note": "",
    "topics": [
      "number theory"
    ],
    "id": 11286
  },
  {
    "title": "Superposicion de particulas",
    "url": "https://omegaup.com/arena/problem/Superposicion-de-particulas",
    "history": "< br/ > En el an\u0303o 3020, la cienti\u0301fica Grecia estaba estudiando las propiedades cua\u0301nticas de parti\u0301culas. Dominando el conocimiento de la superposicio\u0301n de estados logro\u0301 un me\u0301todo para separar los estados de una parti\u0301cula en cantidades iguales. Sin embargo esta cantidad tiene que tener una cantidad par de estados a su vez para que estos se reasignen como estados y anti- estados logrando mantener un balance. < br/ > Por ejemplo, una parti\u0301cula con 24 estados de superposicio\u0301n se pueden dividir en 2 grupos de 12 estados, 4 grupos de 6, 3 grupos de 8, 6 grupos de 4, 2 grupos de 12 y un grupo de 24. Sin embargo no se podri\u0301a dividir en 8 grupos de 3 o en 24 grupos de 1. < br/ > Sin embargo Grecia no sabe exactamente de cuantas formas puede dividir los estados de una parti\u0301cula, por lo que te esta\u0301 pidiendo ayuda para poder saber ra\u0301pidamente de cua\u0301ntas formas diferentes puedes dividir los estados. < br/ >",
    "input": "Un entero N que indica la cantidad de estados de superposicio\u0301n de la parti\u0301cula.",
    "output": "< br/ > La cantidad de maneras en las que puedes dividir los N estados creando cantidades pares iguales.",
    "note": "",
    "topics": [
      "number theory"
    ],
    "id": 11247
  },
  {
    "title": "Nuevo Poder",
    "url": "https://omegaup.com/arena/problem/Nuevo-Poder",
    "history": "Despue\u0301s de todas las coas que ha pasado nuestro grna super heroe Eli\u0301as, este a aprendido un nuevo super poder. Es poder actua de forma muy extran\u0303a. Primero que nada digamos que hay una cantidad infinita de villanos y esto a su vez estan numerados ( 1, 2, 3, . . . ) . En cierto di\u0301a, el poder de Eli\u0301as tiene un parametro de costo k de energi\u0301a; esto es, que si quiere derrotar al villano i, entonces necesita k * S( i) de energi\u0301a para derrotarlo. En donde, S( i) es el nu\u0301mero de digitos que tiene i; ejemplo, S( 100) = S( 331) = 3. Para un di\u0301a Eli\u0301as igual cuenta con un maximo de energi\u0301a que puede gastar ( W) . Y adema\u0301s a e\u0301l le gustari\u0301a derrotar a una secuencia continua de villanos empezando con el m. Es decir, quiere derrotar a los villanos m, m+ 1, m+ 2, . . . . Ayudale a saber cuanto es el nu\u0301mero ma\u0301ximo de villanos que puede derrotar en dicho di\u0301a. # ProblemaDado los valores k, w, m. Decir cuantos villanos continuos ( m, m+ 1, m+ 2) puede derrotar eli\u0301as como maximo con la energi\u0301a maxima dada ( w) y coste con parametro k.",
    "input": "Tres enteros w, m , k descritos anteriormente.",
    "output": "Un unico nu\u0301mero representando la cantidad de villanos que eli\u0301as puede derrotar.",
    "note": "",
    "topics": [
      "number theory",
      "binary search"
    ],
    "id": 11089
  },
  {
    "title": "Tesla y las Constantes Enigm\u00e1ticas",
    "url": "https://omegaup.com/arena/problem/ConstantesEnigmaticas",
    "history": "> # Descripcio\u0301n> > Hace mucho tiempo Nikola Tesla se encontraba analizando las> propiedades de los numeros 3, 6 y 9. De entre todas ellas> encontro una que le permitia saber si un numero extremadamente> * * grande* * era divisible por 9 de manera relativamente rapida ( Puede que alguien mas ya hubiese descubierto dicha propiedad antes, pero ese> no es el punto de este problema) . Ahora tu como programador quieres> seguir los pasos de Tesla y disen\u0303ar un programa que te permita hacer> lo enunciado arriba. > \u2014\u2014\u2014- > # Problema> > Tienes la simple y sencilla labor de indicar si un numero n> es divisible por 9, de ser asi\u0301 debera\u0301s mostrar la frase> ` Divisibilidad\u00a1, en caso contrario debera\u0301s mostrar ` No es multiplo. ` > > Decimos que un numero A es divisible por B, si A mod B = 0. > > \u201cSi supieras la magnificencia de los nu\u0301meros> 3, 6, y 9 tendrias la llave del universo. \" > > - Nikola Tesla. ( ? \u2014\u2014\u2014- > # Entrada> > En la primera y u\u0301nica linea solo habra un entero n ( 1\u2264 n \u2264 10^ 38) - el nu\u0301mero cuyo valor se quiere evaluar. > > Hint: En C+ + los limites de n no * \" entran\" * siquiera < br> en un < kbd> unsigned long long< / kbd> . < br> > # Salida> > La frase correspondiente dependiendo de el valor que posea n. \u2014\u2014\u2014- # Ejemplos: | | input123381| | outputDivisibilidad! | | input277777788888899| | outputNo es multiplo. | | input1184| | outputNo es multiplo. | | end\u2014\u2014\u2014- > # Consideraciones : > - Cada caracter en la salida cuenta ( Eso incluye el ` . ` y el ` \u00a1) . > - El evaluador distingue entre mayu\u0301sculas y minu\u0301sculas. >",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "strings",
      "math",
      "number theory"
    ],
    "id": 10851
  },
  {
    "title": "Tarea 3 Curso Robot C ULAM",
    "url": "https://omegaup.com/arena/problem/Tarea-3-Curso-Robot-C-ULAM",
    "history": "La siguiente se llama conjetura de ULAM en honor del matematico S. UlamComience con cualquier entero positivo N. Si es par, dividalo entre 2; si es impar, multipliquelo por 3 y agreguele 1. Obtenga enteros sucesivamente repitiendo el procesoAl final, obtendra el nu\u0301mero 1, independientemente del entero inicial, Por ejemplo, cuando el entero inicial es 12, la secuencia sera\u0301: 12, 6, 3, 10, 5, 16, 8, 4, 2, 1. # NotaUsar en el programa los ciclos usados en clase, y condicionales.",
    "input": "Una li\u0301nea con el entero N.",
    "output": "Los nu\u0301meros de la serie ULAM separados por un espacio. | | input12| | output12 6 3 10 5 16 8 4 2 1| | end",
    "note": "",
    "topics": [
      "math",
      "brute force",
      "implementation",
      "number theory"
    ],
    "id": 10749
  },
  {
    "title": "Debajo del Mar",
    "url": "https://omegaup.com/arena/problem/Debajo-del-Mar",
    "history": "Rigoberto y Filiberto son medusas * Turritopsis nutricula* ( las cuales son biolo\u0301gicamente inmortales) . Adema\u0301s, son primos y desde que nacieron han sido muy unidos y saben todo el uno sobre el otro. Esta semana aprendieron que son los nu\u0301meros primos. Pronto se convirtio\u0301 en una obsesio\u0301n de ellos leer y estudiar estos nu\u0301meros. Ahora ellos se preguntan, si a di\u0301a de hoy Rigoberto tiene r an\u0303os de edad y Filiberto f an\u0303os, \u00bfCua\u0301l es la cantidad mi\u0301nima de an\u0303os tendra\u0301n que pasar para que sus edades sean nu\u0301meros primos al mismo tiempo? E\u0301sta especie de medusa logra su \" inmortalidad\" revirtiendo su edad una vez que alcanza la madurez. Lo que quiere decir que nuestro par de criaturas tienen un li\u0301mite de an\u0303os, y en lugar de cumplirlos, su edad se reinicia a 0. Por ejemplo Humberto es otra medusa cuya edad es de 9 an\u0303os y su li\u0301mite de edad es de 10, y cuando sea su cumplean\u0303os, tendra\u0301 0, no 10 an\u0303os de edad.",
    "input": "La primera li\u0301nea contiene dos enteros 0 \u2264 r, f 1e7 sus edades actuales respectivas. La segunda li\u0301nea contiene dos enteros r n \u2264 1e7 y f m \u2264 1e7 los li\u0301mites de edades de cada medusa.",
    "output": "Imprime 1 entero, cua\u0301ntos an\u0303os tendra\u0301n que pasar para que las edades de las dos medusas sean nu\u0301meros primos al mismo tiempo. Esta\u0301 garantizado que para todos los casos, es posible encontrar el entero deseado.",
    "note": "",
    "topics": [
      "number theory"
    ],
    "id": 10742
  },
  {
    "title": "Posicion Fibonacci",
    "url": "https://omegaup.com/arena/problem/Posicion-Fibonacci",
    "history": "Como ya sabemos la sucesio\u0301n de fibonacci esta compuesta por los nu\u0301meros: 1, 1, 2, 3, 5, 8, 13, 21, 34. . . Sabiendo esto tu tarea es dado un numero * * * N* * * debes encontrar la posicio\u0301n que ocupa en la sucesio\u0301n de fibonacci.",
    "input": "Un numero * * N* * solamente",
    "output": "Un u\u0301nico entero que indique en que posicio\u0301n se encuentra el numero en la sucesio\u0301n. Si el numero no se encuentra en la sucesio\u0301n imprimir un * * - 1* *",
    "note": "",
    "topics": [
      "dp",
      "math",
      "implementation",
      "number theory",
      "binary search"
    ],
    "id": 10727
  },
  {
    "title": "Factores de Dos en Coeficientes Binomiales",
    "url": "https://omegaup.com/arena/problem/Factores-de-Dos-en-Coeficientes",
    "history": "Definamos g( n, m) como el entero k ma\u0301s grande tal que 2^ k divide a nm. Por ejemplo, 125 = 792 = 2^ 3 \u00b7 3^ 2 \u00b711, entonces g( 12, 5) = 3. Luego, definamos F( n) = max [ g( n, m) : 0 \u2264 m \u2264 n ] . Luego, F( 10) = 3 y F( 100) = 6. Ahora, define S( N) = \u2211_ n= 1^ NF( n) . Escribe un programa que, dado un nu\u0301mero entero positivo N, encuentre la sumatoria S( N) .",
    "input": "Una sola li\u0301nea con un entero N.",
    "output": "Una sola li\u0301nea con el resultado a la sumatoria S( N) .",
    "note": "",
    "topics": [
      "number theory"
    ],
    "id": 10653
  },
  {
    "title": "\u00a1Hazme caso!",
    "url": "https://omegaup.com/arena/problem/Hazme-caso",
    "history": "Melanie esta destellante de alegri\u0301a debido a que su nueva pareja, Adriana, ha sido su relacio\u0301n ma\u0301s duradera. Pero. . . Adriana parece estar ma\u0301s atenta a algoritmos y programacio\u0301n que Melanie se ha empezado a sentirse celosa de ello. Todo llego a su li\u0301mite en su u\u0301ltima cita; Adriana le dijo que teni\u0301a mucha tarea de Redes y Comunicacio\u0301n por lo cual estari\u0301a ocupada pero Melanie podi\u0301a esperar en la sala. Melanie exploto\u0301 de rabia y le dijo que si no le prestaba ma\u0301s atencio\u0301n ya no le traeri\u0301a comida. . . Lo que puso muy preocupada a Adriana, Melanie era quien evita que ella muera de hambre. Por suerte Adriana le propuso a Melanie que si llegaba al final de una funcio\u0301n, ella se pondri\u0301a melosa con Melanie, quie\u0301n fruncio\u0301 el sen\u0303o pues no entendi\u0301a nada de funciones, pero acepto de todos modos. La funcio\u0301n, Adriana la definio\u0301 como: f( x) = si x es par = > f( x) = x/ 2; si x es impar = > f( x) = ( 3* x) + 1Se considera como el final de la funcio\u0301n si es que el resultado es 1. Adriana le da un ejemplo a Melanie, con x = 3f( 3) = 10 - > f( 10) = 5 - > f( 5) = 16 - > f( 16) = 8 - > f( 8) = 4 - > f( 4) = 2 - > f( 2) = 1Adriana le pide que escriba todos los nu\u0301meros hasta llegar a 1. Melanie le pide un tiempo para procesar la informacio\u0301n y te llama a ti para que le ayudes.",
    "input": "- La primer li\u0301nea de entrada contendra\u0301 un nu\u0301mero n, el primer nu\u0301mero de la funcio\u0301n.",
    "output": "Imprimir todos lo nu\u0301meros, separados por espacios y en orden de aparicio\u0301n, que se generen al aplicar la funcio\u0301n hasta llegar al final. | | input3| | output10 5 16 8 4 2 1| | end| | input21| | output64 32 16 8 4 2 1| | end| | input65| | output196 98 49 148 74 37 112 56 28 14 7 22 11 34 17 52 26 13 40 20 10 5 16 8 4 2 1| | end# Limites- 2< = n< = 1e18> NOTA: Melanie despue\u0301s de pensarlo un poco razona y le recrimina a Adriana - * * La funcio\u0301n siempre llegara\u0301 a 1 \u00bfverdad? , no sera\u0301 que es una de esas funciones que llega a un punto en que empieza a repetirse, es decir entra en bucle* * - a lo que Adriana le responde - * * Realmente no lo puedo asegurar para todos lo nu\u0301meros, pero te lo puedo asegurar para todos lo nu\u0301meros menores a 1e18* * : > - Si pasas la mitad de las pruebas tendra\u0301s 25 puntos. > - Si pasas todas las pruebas obtendra\u0301s 100 puntos.",
    "note": "",
    "topics": [
      "combinatorics",
      "number theory",
      "implementation"
    ],
    "id": 10613
  },
  {
    "title": "Reducci\u00f3n n\u00famerica",
    "url": "https://omegaup.com/arena/problem/Buscando-Cuadrados",
    "history": "# ProblemaEn este problema debes indicar la cantidad mi\u0301nima de di\u0301gitos que deben eliminarse a partir de un entero n para volverlo un cuadrado perfecto, siempre tomando en cuenta que no se puede eliminar un di\u0301gito si al numero resultante le quedan ceros a la izquierda. ( Por ejemplo, eliminar el digito \u201c1\u201d del numero 104 no seria valido) . \u2014\u2014\u2014-",
    "input": "En la primera y u\u0301nica linea, un nu\u0301mero entero n ( 1 \u2a7d n \u2a7d 10^ 9) - el numero cuyos digitos queremos eliminar. Se garantiza que al comienzo n jamas tendra\u0301 ceros a la izquierda.",
    "output": "Un unico entero - la cantidad mi\u0301nima de di\u0301gitos que deben eliminarse a partir de n para obtener un numero que cumpla con las condiciones especificadas anteriormente. En caso de no ser posible obtener dicho nu\u0301mero, se debe imprimir < kbd> - 1< / kbd> . \u2014\u2014\u2014- # Ejemplo: | | input86541| | output2| | description( 8 6 5 4 1) \u2192 841 y 29^ 2= 841. | | end\u2014\u2014\u2014- # NotaEn el primer y unico caso de ejemplo, podemos eliminar los digitos \u201c6\u201d y \u201c5\u201d para obtener el numero 841 y debido a que este es el cuadrado perfecto de 29, la respuesta seri\u0301a 2. Toma en cuenta que tambien podri\u0301amos eliminar todos los digitos a excepcio\u0301n del \u201c1\u201d para obtener un cuadrado perfecto, sin embargo, esta no seria la manera mas o\u0301ptima de hacerlo ya que deberi\u0301amos eliminar 4 digitos. \u2014\u2014\u2014- # Subtasks- Para un 13. 77% de los puntos, todos los digitos en n sera\u0301n iguales. - Para un 86. 23% de los puntos, no hay consideraciones adicionales. \u2014\u2014\u2014- < details> < summary> Reto Adicional< / summary> Con base en los envios de la comunidad, aparentemente existen * * multiples* * soluciones para este problema. \u00bfSerias capaz de obtener una respuesta cuyo tiempo total sea \u2a7d 0. 10s? < / details>",
    "note": "",
    "topics": [
      "number theory",
      "shortest paths",
      "implementation"
    ],
    "id": 10197
  },
  {
    "title": "Y^3 + X^5 = N^7",
    "url": "https://omegaup.com/arena/problem/Y3--X5--N7",
    "history": "# HistoriaUn dia, Sebas estaba leyendo un Tzaloa de la OMM, y se encontro un problema muy dificil: \" Dado un entero N, determina si se cumple la igualdad Y^ 3 + X^ 5 = N^ 7 para algun X, Y entero. \" , cuya solucion no encontro. Tu como buen programador que eres, escribe un codigo que resuelva dicho problema.",
    "input": "Un entero N.",
    "output": "Imprime 1 o - 1 si existen o no dichos enteros respectivamente.",
    "note": "",
    "topics": [
      "meet-in-the-middle",
      "combinatorics",
      "flows",
      "graphs",
      "sortings",
      "math",
      "constructive algorithms",
      "strings",
      "games",
      "greedy",
      "shortest paths",
      "string suffix structures",
      "number theory",
      "dp",
      "geometry",
      "matrices",
      "trees",
      "graph matchings",
      "data structures",
      "implementation",
      "binary search",
      "dfs and similar",
      "brute force"
    ],
    "id": 9724
  },
  {
    "title": "Sumita cuadrada",
    "url": "https://omegaup.com/arena/problem/Sumita-cuadrada",
    "history": "Sebas esta\u0301 en un entrenamiento de matematicas, y le presentaron un problema: \" Demuestra que para toda N existe una suma de N nu\u0301meros tal que su suma sea un cuadrado perfecto. \" , Sebas esta muy ocupado para resolver ese problema, y tu\u0301 como buen programador que eres, te ha pedido que demuestres el problema con \" casitos\" .",
    "input": "Un entero N",
    "output": "Los N nu\u0301meros distintos entre si\u0301 separados por un espacio y ordenados en orden creciente tal que su suma sea un cuadrado perfecto",
    "note": "",
    "topics": [
      "sortings",
      "flows",
      "data structures",
      "string suffix structures",
      "games",
      "combinatorics",
      "greedy",
      "dp",
      "trees",
      "strings",
      "graphs",
      "brute force",
      "constructive algorithms",
      "math",
      "meet-in-the-middle",
      "geometry",
      "number theory",
      "binary search",
      "graph matchings",
      "matrices",
      "implementation",
      "dfs and similar",
      "shortest paths"
    ],
    "id": 9723
  },
  {
    "title": "Ecuaciones Diof\u00e1nticas",
    "url": "https://omegaup.com/arena/problem/Ecuaciones-diofanticas",
    "history": "Encontrar enteros x e y que resuelvan la ecuacio\u0301n: Ax+ By= C",
    "input": "La entrada entrada empieza con un entero n, 1\u2264 n\u2264 20, el cual indica la cantidad de ecuaciones que se tienen que resolver. Cada una de las siguientes li\u0301neas tendra\u0301n tres enteros A, B y C, 1 \u2264 A, B, C\u2264 10^ 9, correspondientes a la ecuacio\u0301n .",
    "output": "La salida debe tener el mensaje: \" No hay valores\" si la ecuacio\u0301n no tiene solucio\u0301n. En caso de que si\u0301 tenga solucio\u0301n, se debera\u0301n es escribir los nu\u0301meros x e y, con la propiedad de que x es el menor entero no negativo que cumple con la ecuacio\u0301n Ax+ By= C.",
    "note": "",
    "topics": [
      "number theory"
    ],
    "id": 9567
  },
  {
    "title": "mcd y MCM",
    "url": "https://omegaup.com/arena/problem/mcd-y-MCM",
    "history": "Dado un conjunto de nu\u0301meros obtener el ma\u0301ximo comu\u0301n divisor y el mi\u0301nimo comu\u0301n mu\u0301ltiplo del conjunto.",
    "input": "La entrada empieza con un entero positivo n, 2\u2264 n\u2264 10. Luego en la siguiente li\u0301nea habra\u0301n n enteros positivos, cada uno de estos nu\u0301meros x no sera\u0301 mayor a 10^ 9.",
    "output": "La salida debe tener dos enteros separados por un espacio: el ma\u0301ximo comu\u0301n divisor y el mi\u0301nimo comu\u0301n mu\u0301ltiplo, respectivamente, de los n nu\u0301meros de entrada. Se te garantiza que los resultados no sera\u0301n mayores a 2\u00d7 10^ 9.",
    "note": "",
    "topics": [
      "implementation",
      "number theory"
    ],
    "id": 9566
  },
  {
    "title": "Cantidad de Divisores",
    "url": "https://omegaup.com/arena/problem/Cantidad-de-factores-primos",
    "history": "Dados n nu\u0301meros enteros, encontrar la cantidad de divisores de cada uno.",
    "input": "La entrada empieza con un entero positivo n, 1 \u2264 n \u2264 10^ 4, la cantidad de casos. Luego le seguira\u0301n n enteros positivos x, 1 \u2264 x \u2264 10^ 6.",
    "output": "Por cada nu\u0301mero de la entrada se debe imprimir la cantidad de divisores del nu\u0301mero.",
    "note": "",
    "topics": [
      "number theory"
    ],
    "id": 9565
  },
  {
    "title": "\u00bfEs Primo? 2.0",
    "url": "https://omegaup.com/arena/problem/Es-Primo-20",
    "history": "Para cada uno de los nu\u0301meros de enteros dados, decir si es primo o no.",
    "input": "La entrada empieza con un entero positivo n, 1 \u2264 n \u2264 10^ 6, la cantidad de casos. Luego le seguira\u0301n n enteros positivos x, 1 \u2264 x \u2264 10^ 6.",
    "output": "La salida debe tener n mensajes: \" Es primo\" o \" No es primo\" , segu\u0301n corresponda.",
    "note": "",
    "topics": [
      "implementation",
      "number theory"
    ],
    "id": 9563
  },
  {
    "title": "K-\u00e9simo Primo",
    "url": "https://omegaup.com/arena/problem/k-esimo-primo",
    "history": "Escribir el primo nu\u0301mero k. Recuerda que un nu\u0301mero es primo si tiene dos, y exactamente dos, divisores positivos. Los primeros cinco primos son 2, 3, 5, 7 y 11.",
    "input": "La entrada empieza con un entero positivo n, 1 \u2264 n \u2264 10, 000, la cantidad de casos del problema. Luego seguira\u0301n n enteros, cada uno de ellos no sera\u0301 mayor a 140, 000.",
    "output": "La salida debe tener n nu\u0301meros, el k- e\u0301simo primo para cada caso.",
    "note": "",
    "topics": [
      "number theory"
    ],
    "id": 9562
  },
  {
    "title": "\u00bfEs Primo?",
    "url": "https://omegaup.com/arena/problem/Es-Primo",
    "history": "Para cada uno de los nu\u0301meros de enteros dados, decir si es primo o no.",
    "input": "La entrada empieza con un entero positivo n, 1\u2264 n\u2264 100, la cantidad de casos. Luego le seguira\u0301n n enteros positivos x, 1 \u2264 x \u2264 10^ 9.",
    "output": "La salida debe tener n mensajes: \" Es primo\" o \" No es primo\" , segu\u0301n corresponda.",
    "note": "",
    "topics": [
      "number theory"
    ],
    "id": 9561
  },
  {
    "title": "Yo no quiero estar con mi primo",
    "url": "https://omegaup.com/arena/problem/M07",
    "history": "Mi amigo Rob esta preocupado porque no se quiere sentar con sus primos. Rob jamas ha visto a sus primos, solo sabe que son personas desagradables. Curiosamente, todos en la familia de Rob tienen un tatuaje en la frente con un nu\u0301mero escrito. El nu\u0301mero que tienen tatuado en la frente es el mi\u0301nimo comu\u0301n mu\u0301ltiplo de los nu\u0301meros que tienen tatuados sus padres y el i\u0301ndice del hijo. ( El hijo que nace primero tiene el i\u0301ndice 1) . Ayuda a Rob a identificar que nu\u0301meros tendra\u0301n sus primos en la frente para poder evitar sentarse junto a ellos.",
    "input": "La entrada contiene un nu\u0301mero N, que es la cantidad de parejas de ti\u0301os que tiene Rob. Las siguientes N lineas, contienen 3 nu\u0301meros: a, b, c. a es el nu\u0301mero que tiene tatuado la mama\u0301 en la frente. b es el numero que tiene tatuado el papa\u0301 en la frente. Y c es la cantidad de hijos que tiene esa pareja.",
    "output": "Una li\u0301nea con la lista de nu\u0301meros diferentes que tienen tatuados los primos de Rob.",
    "note": "",
    "topics": [
      "number theory"
    ],
    "id": 9555
  },
  {
    "title": "Globos para ICPC",
    "url": "https://omegaup.com/arena/problem/Globos-para-ICPC",
    "history": "< br/ > Te llego la noticia de que hay un grupo de competidores de ICPC( Importantes Competencias Para Calaveras) que esta\u0301n organizando su propio concurso, por lo que necesitaran un monto\u0301n de globos para entregar donde todos los globos esta\u0301n enumerados del 1 al N. Pero el grupo de competidores ICPC ha estado creciendo y ha estado generando grupos como el CAC( Club Avanzado de Calaveras) , el GOC( Gran Organizacio\u0301n de Calaveras) . Donde cada grupo pide un nu\u0301mero K y se entregaran todos los globos que sean mu\u0301ltiplos K. < br/ > Ayuda al grupo de competidores ICPC a saber cua\u0301ntos globos les quedaran despue\u0301s de que cada grupo haya pedido su nu\u0301mero de globos.",
    "input": "< br/ > Dos nu\u0301meros positivos N y M donde N representa el nu\u0301mero de globos que se tiene, y M representa el nu\u0301mero de grupos que van a pedir globos.",
    "output": "< br/ > El total de globos que quedaron despue\u0301s de que cada grupo pidio\u0301 los suyos.",
    "note": "Para conjunto de casos agrupados: * 50",
    "topics": [
      "number theory",
      "brute force"
    ],
    "id": 9542
  },
  {
    "title": "La pintura de Picasso",
    "url": "https://omegaup.com/arena/problem/La-pintura-de-Picasso",
    "history": "< br/ > Un di\u0301a como cualquier otro di\u0301a, Picasso observaba su lienzo antes de comenzar una pintura, igual que todas sus dema\u0301s pinturas Picasso eligio\u0301 las dimensiones de un recta\u0301ngulo, y dividio\u0301 el lienzo completamente usando recta\u0301ngulos de esas dimensiones, es sabido que de este modo le gustaba presentar sus artes cubistas. Si bien Picasso es un artista de imaginacio\u0301n infinita, se ha percatado que el nu\u0301mero de formas en las que puede dividir su lienzo es finita, y por lo tanto, en algu\u0301n punto, habra\u0301 hecho todas sus posibles representaciones. Picasso considera que un cuadro es un recta\u0301ngulo, y tambie\u0301n que un recta\u0301ngulo de 2 x 1 es diferente a un recta\u0301ngulo de 1 x 2 < br/ > Ayuda a Picasso a saber de cuantas maneras distintas puede dividir su lienzo de N x M .",
    "input": "< br/ > Dos nu\u0301meros positivos N y M que indican las dimensiones del lienzo.",
    "output": "< br/ > El nu\u0301mero de formas distintas en las que PIcasso puede dividir su lienzo.",
    "note": "* Para conjunto de casos agrupados: * 50",
    "topics": [
      "combinatorics",
      "number theory"
    ],
    "id": 9540
  },
  {
    "title": "M01 N\u00fameros Primos",
    "url": "https://omegaup.com/arena/problem/M01-Numeros-Primos",
    "history": "< br/ > Fernando es un chico muy interesado en las matema\u0301ticas. El dia de hoy el esta estudiando acerca de un tipo especial de nu\u0301meros, los nu\u0301meros primos. La definicio\u0301n que leyo decia \" Un numero es primo si sus unicos divisores son el 1 y el mismo\" . Lo cual lo dejo pensando, pero le parecio muy fascinante. Por lo que se dio la tarea de dado nu\u0301mero N saber si este nu\u0301mero era primo o no. Ayuda a Fernando haciendo un programa que reciba un nu\u0301mero N determine si es primo o no.",
    "input": "< br/ > Un nu\u0301mero positivo N.",
    "output": "< br/ > Imprimir \" Si\" si el nu\u0301mero es primo, en caso contrario imprimir un \" No\" , en ambos casos sin comillas.",
    "note": "",
    "topics": [
      "number theory",
      "implementation"
    ],
    "id": 9522
  },
  {
    "title": "Cuantos Primos",
    "url": "https://omegaup.com/arena/problem/CuantosPrimos",
    "history": "Isaac es conocido entre sus amigos por se un numerofi\u0301lico empedernido. Adema\u0301s a Isaac le gusta presumir que no hay acertijo matema\u0301tico que no pueda descifrar. Su amigo Godofredo, no esta\u0301 de acuerdo con las presunciones de Isaac, asi\u0301 que ha decidido ponerle el siguiente reto. Dada una secuencia de N pares de nu\u0301meros enteros, indica cuantos nu\u0301meros primos existen en el intervalo definido por cada par. Por ejemplo, si tenemos la siguiente secuencia de 3 pares de nu\u0301meros enteros ( 1, 5) , ( 2, 7) y ( 11, 15) , la respuesta correcta del reto seri\u0301a 3, 4, y 2 pues en el intervalo definido por el primer par existen 3 nu\u0301meros primos ( 2, 3 y 5) , en el intervalo definido por el segundo par existen 4 nu\u0301meros primos ( 2, 3, 5, y 7) y en el u\u0301ltimo intervalo existen 2 nu\u0301meros primos ( 11 y 13) . Nota que se consideran tambie\u0301n los nu\u0301meros que definen el intervalo. Ayuda a Isaac a resolver el reto que le ha puesto Godofredo y demostrar asi\u0301 quien es el rey de los acertijos matema\u0301ticos. Para esto, escribe un programa que lea un nu\u0301mero entero ( N) , seguido por N pares de nu\u0301meros enteros. Por cada par, indica la cantidad de nu\u0301meros primos que existen en el intervalo definido por este par de nu\u0301meros. Por cada par de nu\u0301meros a y b, el nu\u0301mero lei\u0301do primero ( a) siempre sera\u0301 menor al segundo nu\u0301mero ( b) .",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "implementation",
      "number theory"
    ],
    "id": 9410
  },
  {
    "title": "Sugar Free Bobba",
    "url": "https://omegaup.com/arena/problem/Sugar-Free-Bobba",
    "history": "Zhang Wei es un excelente programador, y pasa varias horas del di\u0301a practicando para ser el mejor. Por supuesto su bebida favorita para motivarse mientras practica es un Bobba Tea extra grande con leche de almendras, pero Zhang Wei esta un poco preocupado por su salud pues pasa muchas horas del di\u0301a sentado y sin hacer ejercicio, por lo cual ha decidido reducir su ingesta de azu\u0301car durante el di\u0301a, y para esto necesita medir las cantidades de azu\u0301car por cada Bobba Tea que ordena a su casa. < img src= \" https: / / i. pinimg. com/ originals/ 87/ 97/ 26/ 879726b93ec1f4c2f64cc2bc52a4d8ec. jpg\" width= \" 200\" / >",
    "input": "En la primera linea un numero t, representando la cantidad de casos. Por cada caso se leera\u0301 un nu\u0301mero n, con la cantidad de toppings que contendra\u0301 el Bobba. Despue\u0301s se dara\u0301n n lineas con dos numeros a, b describiendo la fraccio\u0301n de azu\u0301car a/ b que representa el topping n_ i del Bobba total. Los toppings tambie\u0301n pueden contrarrestar una cantidad de azucar, es decir, aportar una cantidad negativa de azucar.",
    "output": "Por cada Bobba, imprimir la fraccio\u0301n de azu\u0301car total con la forma a+ b/ c. Donde a representa la forma entera y b/ c el resto de la fraccio\u0301n, que es simplificada. Nunca habra una solucio\u0301n negativa y en caso de que a= 0 o b= 0, no deben imprimirse y si ambos son 0, la salida debe ser 0.",
    "note": "",
    "topics": [
      "number theory"
    ],
    "id": 9180
  },
  {
    "title": "Pastel de cumplea\u00f1os de Pupperino",
    "url": "https://omegaup.com/arena/problem/Pastel-de-cumpleanos-de-Pupperin",
    "history": "Pupperino tiene una fiesta de cumplean\u0303os el siguiente sa\u0301bado. Debido a que no se puede restringir la cantidad de pasteles que puede comer cada invitado ya que seri\u0301a grosero, y tampoco se puede repartir un pastel entero a cada invitado, Pupperino ha pedido de tu ayuda para saber la cantidad de pastel que esta\u0301 comiendo cada uno de sus invitados. A Pupperino no le interesa saber la cantidad total de pastel que ha sido consumida durante la fiesta, sino cua\u0301nto pastel consume cada uno de sus invitados. Pupperino te pidio\u0301 que le hicieras un programa que muestre en pantalla la cantidad de pastel que esta\u0301 comiendo cada invitado. Esto es muy importante para Pupperino, ya que desea hacer un estimado de cua\u0301nto pastel encargar para su pro\u0301xima fiesta de cumplean\u0303os. . . y para ir conociendo a sus invitados.",
    "input": "La primera li\u0301nea corresponde a la cantidad de invitados N en la fiesta de Pupperino. La primera li\u0301nea de cada N_ i corresponde al nu\u0301mero de momentos M en el que el invitado N_ i salio\u0301 a comer pastel. La primera li\u0301nea de cada M_ i contiene dos nu\u0301meros 0\u2264a\u2264b\u22641000 separados por un espacio que representan la fraccio\u0301n de pastel a/ b que el invitado N_ i comio\u0301 en el momento M_ i.",
    "output": "Una fraccio\u0301n con la forma a+ b/ c donde a representa la forma entera del pastel y b/ c el resto del pastel, que es simplificada. En caso de que a= 0 o b= 0 no se debe imprimir nada. Si a= b= 0 la salida debe de ser 0.",
    "note": "",
    "topics": [
      "number theory"
    ],
    "id": 9095
  },
  {
    "title": "Jorge y los n\u00fameros primos",
    "url": "https://omegaup.com/arena/problem/Jorge-y-los-numeros-primos",
    "history": "Jorge es un nin\u0303o que esta aprendiendo a calcular nu\u0301meros primos y quiere saber cuantos nu\u0301meros primos hay entre sus dos nu\u0301meros favoritos# # Problema # # Escribe un programa que le ayude a Jorge a calcular todos los nu\u0301meros primos en un rango# # Datos de entrada# # Cantidad T de casos de prueba. Dos valores ( A y B) indicando el rango. donde 0 < A < = B < 10< sup> 6< / sup> .",
    "input": "",
    "output": "cantidad de nu\u0301meros primos en el rango.",
    "note": "",
    "topics": [
      "number theory"
    ],
    "id": 9044
  },
  {
    "title": "Generar un vector con los N primeros n\u00fameros primos.",
    "url": "https://omegaup.com/arena/problem/Generar-un-vector-primos",
    "history": "Generar un vector con los N primeros nu\u0301meros primos. | | input6| | output2 3 5 7 11 13| | end",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "number theory"
    ],
    "id": 8889
  },
  {
    "title": "D\u00edgitos de Fibonacci",
    "url": "https://omegaup.com/arena/problem/Digitos-de-Fibonacci",
    "history": "Las series de Fibonacci estan de moda, asi que quisieras saber cual es el i\u0301ndice ma\u0301s pequen\u0303o de un nu\u0301mero \u03bb que tiene al menos * * M* * di\u0301gitos y pertenece a la serie de Fibonacci. Se debe de considerar que la serie empiece a partir del primer uno con i\u0301ndice 1: 1, 1, 2, 3, 5, 8, 13. . . # EntradasUn nu\u0301mero * * N* * de casos seguido por N li\u0301neas con * * M* * , el mi\u0301nimo nu\u0301mero de digitos. # SalidasEl i\u0301ndice ma\u0301s pequen\u0303o donde \u03bb tiene al menos * * M* * di\u0301gitos.",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "dp",
      "implementation",
      "number theory"
    ],
    "id": 8629
  },
  {
    "title": "Rango de Bits",
    "url": "https://omegaup.com/arena/problem/Rango-de-Bits",
    "history": "Los bits de tu computadora se esta\u0301n escapando, asi que tu ocupas crear un programa para calcule cuantos bits activados esta\u0301n dentro de un rango de nu\u0301meros# EntradasUn nu\u0301mero * * N* * , seguido por * * N* * casos. Cada caso tiene dos enteros, un valor mi\u0301nimo * * A* * ( exclusivo) y un valor ma\u0301ximo * * B* * ( inclusivo) . # SalidasLa suma del nu\u0301mero de bits prendidos entre todos los nu\u0301meros del rango * * ( A, B] * * , es decir A + 1, A + 2, A + 3 . . . B.",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "data structures",
      "math",
      "implementation",
      "number theory",
      "combinatorics",
      "dp"
    ],
    "id": 8626
  },
  {
    "title": "El camino de Edison (D\u00edficil)",
    "url": "https://omegaup.com/arena/problem/El-camino-de-Edison-Dificil",
    "history": "Todos sabemos que una de las actividades favoritas de nuestro buen amigo Edison es cortar mazorca en su rancho en Ecuador. Como Edison es muy curioso, en una de sus expediciones para cortar lo que aqui\u0301 llamamos elotes, decidio\u0301 contar cua\u0301ntos caminos diferentes podri\u0301a tomar para llegar desde la esquina superior izquierda hasta la esquina inferior derecha de su rancho ( considerando que su rancho es una cuadri\u0301cula de n x m cuadros) . Su buena amiga Blanca, que siempre esta\u0301 intentando hablar de filosofi\u0301a y cosas raras, siempre le dice que no hay que voltear hacia atra\u0301s, siempre hacia adelante. Por lo que Edison decide que solamente va a hacer movimientos hacia la derecha y hacia abajo en su rancho, para asi\u0301 nunca volver al inicio y siempre dirigirse hacia la esquina inferior derecha porque ahi\u0301 esta\u0301 espera\u0301ndolo Blanca. Como Blanca ya esta\u0301 desesperada porque Edison se esta\u0301 tardando mucho contando todos los caminos, tu tarea es hacer un programa que dado * * N* * y * * M* * ( las longitudes del rancho de Edison) , calcule cua\u0301ntos caminos son posibles para recorrer todo el rancho dada la lo\u0301gica de Edison. ! [ Ejemplo] [ 1]",
    "input": "Dos nu\u0301meros enteros * * N* * : 1 \u2264 N \u2264 34 y * * M* * : 1 \u2264 M \u2264 34 las dimensiones del rancho",
    "output": "La cantidad de caminos posibles para llegar desde la esquina superior izquierda a la esquina inferior derecha.",
    "note": "",
    "topics": [
      "math",
      "constructive algorithms",
      "number theory",
      "dp",
      "combinatorics",
      "implementation",
      "matrices",
      "dfs and similar",
      "data structures"
    ],
    "id": 8588
  },
  {
    "title": "El camino de Edison (F\u00e1cil)",
    "url": "https://omegaup.com/arena/problem/El-camino-de-Edison-Facil",
    "history": "Todos sabemos que una de las actividades favoritas de nuestro buen amigo Edison es cortar mazorca en su rancho en Ecuador. Como Edison es muy curioso, en una de sus expediciones para cortar lo que aqui\u0301 llamamos elotes, decidio\u0301 contar cua\u0301ntos caminos diferentes podri\u0301a tomar para llegar desde la esquina superior izquierda hasta la esquina inferior derecha de su rancho ( considerando que su rancho es una cuadri\u0301cula de n x m cuadros) . Su buena amiga Blanca, que siempre esta\u0301 intentando hablar de filosofi\u0301a y cosas raras, siempre le dice que no hay que voltear hacia atra\u0301s, siempre hacia adelante. Por lo que Edison decide que solamente va a hacer movimientos hacia la derecha y hacia abajo en su rancho, para asi\u0301 nunca volver al inicio y siempre dirigirse hacia la esquina inferior derecha porque ahi\u0301 esta\u0301 espera\u0301ndolo Blanca. Como Blanca ya esta\u0301 desesperada porque Edison se esta\u0301 tardando mucho contando todos los caminos, tu tarea es hacer un programa que dado * * N* * y * * M* * ( las longitudes del rancho de Edison) , calcule cua\u0301ntos caminos son posibles para recorrer todo el rancho dada la lo\u0301gica de Edison. ! [ Ejemplo] [ 1]",
    "input": "Dos nu\u0301meros enteros * * N* * : 1 \u2264 N \u2264 34 y * * M* * : 1 \u2264 M \u2264 34 las dimensiones del rancho",
    "output": "La cantidad de caminos posibles para llegar desde la esquina superior izquierda a la esquina inferior derecha.",
    "note": "",
    "topics": [
      "implementation",
      "math",
      "dp",
      "constructive algorithms",
      "matrices",
      "data structures",
      "dfs and similar",
      "number theory"
    ],
    "id": 8587
  },
  {
    "title": "Llaves Descifrables",
    "url": "https://omegaup.com/arena/problem/Llaves-Descifrables",
    "history": "Habiendo estudiando un poco de criptografi\u0301a, decides estudiar acerca de llaves RSA y te das cuenta que puedes descifrar una de estas llaves ( las llaves no son nada ma\u0301s que nu\u0301meros muy grandes) determinando sus factores primos. Estos nu\u0301meros siempre tendra\u0301n dos factores primos distintos * * A* * y * * B* * , y si encuentras estos factores podra\u0301s descifrar cualquier mensaje hecho con la llave original.",
    "input": "Un nu\u0301mero * * N* * que siempre tendra\u0301 solo dos factores primos",
    "output": "Los dos factores primos * * A* * y * * B* * , donde * * A* * < * * B* *",
    "note": "",
    "topics": [
      "implementation",
      "number theory",
      "math"
    ],
    "id": 8581
  },
  {
    "title": "Suma",
    "url": "https://omegaup.com/arena/problem/SumaLions",
    "history": "James quiere saber cuantos leds tiene en su caja de electro\u0301nicos. Su caja solo tiene dos divisiones y sabe cuantos leds hay en cada una, pero como esta\u0301 muy ocupado organizando torneos de programacio\u0301n, programando robots de soccer, y hackeando Minecraft, necesita tu ayuda para sumar las cantidades y saber cuantos leds tiene.",
    "input": "Dos enteros positivos * * A* * y * * B* * menores o iguales a 1000.",
    "output": "La suma de los dos enteros.",
    "note": "",
    "topics": [
      "number theory",
      "combinatorics"
    ],
    "id": 8577
  },
  {
    "title": "El autor no se molest\u00f3 en escribir un t\u00edtulo",
    "url": "https://omegaup.com/arena/problem/No-se-molesto-en-escribir-uno",
    "history": "Te enfadaste de agregarle historias a tus problemas porque nadie los resuelve. Por eso escribiste un problema con la siguiente redaccio\u0301n: Dado un nu\u0301mero w y otro nu\u0301mero n, decir si para todos los nu\u0301meros enteros p y q distintos mayores a 1 y menores o iguales a n se cumple que: w p \u2261\u0338w q",
    "input": "Dos nu\u0301meros w y n.",
    "output": "Imprimir \" Si\" si existen p y q y \" No\" si no existen.",
    "note": "",
    "topics": [
      "number theory"
    ],
    "id": 8057
  },
  {
    "title": "Solving the equation",
    "url": "https://omegaup.com/arena/problem/Solving-the-equation",
    "history": "Dados dos enteros positivos k y n, y enteros positivos a_ 1, a_ 2, . . . , a_ k, tu tarea es encontrar el nu\u0301mero de soluciones no negativas enteras que tiene la siguiente ecuacio\u0301n: \u2211_ i= 1^ ka_ i x_ i = nEs decir, tienes que encontrar el nu\u0301mero de tuplas distintas ( x_ 1, x_ 2, . . . , x_ k) que satisfagan la ecuacio\u0301n anterior, donde x_ 1, x_ 2, . . . , x_ k \u2208N\u222a 0. Sin embargo, dicha tarea puede parecer sencilla, por lo que tendra\u0301s que resolver el problema anterior para cada n entera tal que 0 \u2264 n \u2264 N.",
    "input": "* Primera li\u0301nea: el entero positivo k. * Segunda li\u0301nea: k enteros positivos a_ 1, a_ 2, . . . , a_ k separados por espacios. * U\u0301ltima li\u0301nea: el entero positivo N.",
    "output": "Debera\u0301s imprimir N+ 1 enteros r_ 0, r_ 1, . . . , r_ N separados por espacios en una sola li\u0301nea, donde r_ i es el nu\u0301mero de soluciones de la ecuacio\u0301n cuando n= i. Como estos nu\u0301meros pueden llegar a crecer mucho, impri\u0301melos mo\u0301dulo 998244353.",
    "note": "",
    "topics": [
      "number theory",
      "fft"
    ],
    "id": 7891
  },
  {
    "title": "Contando Primos",
    "url": "https://omegaup.com/arena/problem/Contando-Primos",
    "history": "En tu clase de matema\u0301ticas te ensen\u0303aron el algoritmo de Euclides ( para calcular el gcd de dos nu\u0301meros) , y de tarea te pidieron que para un nu\u0301mero N, calculases f( N) , siendo esta funcio\u0301n, la cantidad de nu\u0301meros menores o iguales a N, cuyo gcd= 1. # ProblemaDado un nu\u0301mero N, calcular f( N) .",
    "input": "El entero N.",
    "output": "El resultado de f( N) , la cantidad de nu\u0301meros menores o iguales a N, cuyo gcd= 1.",
    "note": "",
    "topics": [
      "number theory"
    ],
    "id": 7878
  },
  {
    "title": "B-I-N-A-R-Y",
    "url": "https://omegaup.com/arena/problem/B-I-N-A-R-Y",
    "history": "Despue\u0301s de su grandiosa aventura los amigos pudieron superar a los polici\u0301as y a los malvados contrincantes de su cartel. Ahora los super- amigos teni\u0301an que encargarse de vender un \" dulce\" llamado * * B. I. N. A. R. Y. * * , al eliminar a su competencia los super- amigos podi\u0301an vender este dulce tan solicitado al precio que se les pegara la gana. Para su mala suerte las personas en la tierra de los problemas ya sabi\u0301an cual era el precio esta\u0301ndar de dicho dulce, asi\u0301 que si lo vendi\u0301an ma\u0301s alto las personas iban a saber que los estaban engan\u0303ando y eso los iba molestar mucho al punto de hacer una revolucio\u0301n. Sin embargo, para su buena suerte el dulce causa un efecto especial en las personas. Las personas no podi\u0301an recordar el precio exacto al que compraron el dulce, lo u\u0301nico que recordaban las personas es cuantos \" 1\" teni\u0301a el precio en su representacio\u0301n binaria ( base 2. Se explicara ma\u0301s abajo que es esto, por si no lo sabes) . Y tambie\u0301n podi\u0301an recordar el taman\u0303o de la representacio\u0301n binaria del nu\u0301mero, para que no pudieras engan\u0303arlos tan fa\u0301cil. Los super- amigos se dieron cuenta que podi\u0301an vender el dulce en varios precios posibles con esas condiciones pero ellos queri\u0301an venderlos al pu\u0301blico al mayor precio posible. Santy y Joel tambie\u0301n teni\u0301an * personas reconocidas* que eran como amigos, asi\u0301 que a estas personas le queri\u0301an vender el dulce al menor precio posible con las condiciones dadas. # Representacio\u0301n binariaTodo nu\u0301mero decimal puede ser representado como la suma de * * diferentes* * potencias de 2 ( 2^ n) . Ejemplo: 7 = 2^ 0 + 2^ 1 + 2^ 2 = 1 + 2 + 421 = 2^ 0 + 2^ 2 + 2^ 4 = 1 + 4 + 16Para representar un nu\u0301mero en el sistema binario se usa una cadena ( a) de puros \" 0\" y \" 1\" ( taman\u0303o n) . Cada posicio\u0301n ( a_ i , N < i < = 0) representa \" por cuanto se esta multiplicando dicha potencia ( 2^ i) \" . Y se lee de izquierda a derecha. En donde la u\u0301ltima posicio\u0301n es 2^ 0. Ejemplo: ( 111) _ 2 = ( 2^ 2) ( 1) + ( 2^ 1) ( 1) + ( 2^ 0) ( 1) = 4 + 2 + 1 = 7( 10101) _ 2 = ( 2^ 4) ( 1) + ( 2^ 3) ( 0) + ( 2^ 2) ( 1) + ( 2^ 1) ( 0) + ( 2^ 0) ( 1) = 16 + 0 + 4 + 0 + 1 = 21( 100101) _ 2 = ( 2^ 5) ( 1) + ( 2^ 4) ( 0) + ( 2^ 3) ( 0) + ( 2^ 2) ( 1) + ( 2^ 1) ( 0) + ( 2^ 0) ( 1) = 32 + 0 + 0 + 4 + 0 + 1 = 37El taman\u0303o de la cadena esta dado por el primer \" 1\" , ya que los ceros que hayan antes no importan. Ejemplo10001, 10101, 10011; Taman\u0303o = 5. 0001001, 0001100; Taman\u0303o = 4. Dato curioso, asi\u0301 se representan los nu\u0301mero en una computadora. El sistema que usamos es base 10 ( 10^ n) y nuestras cadenas son con caracteres de \" 0- 9\" . # ProblemaDado un nu\u0301mero N ( precio esta\u0301ndar) , decir cual es el mayor y menor nu\u0301mero que se puede formar con: - El mismo nu\u0301mero de \" 1\" en su representacio\u0301n binaria- El mismo taman\u0303o en la cadena de su representacio\u0301n binaria",
    "input": "N nu\u0301mero entero positivo que representa el precio esta\u0301ndar",
    "output": "El mayor y el menor precio al que puedes vender el dulce con las condiciones dichas anterior mente.",
    "note": "",
    "topics": [
      "number theory",
      "divide and conquer",
      "math",
      "implementation"
    ],
    "id": 7872
  },
  {
    "title": "La Super-Arma de la tierra de los problemas",
    "url": "https://omegaup.com/arena/problem/La-Super-Arma",
    "history": "Como bien sabra\u0301s este an\u0303o se lleva acabo el primer encuentro de \" Yucata\u0301n vs Quintana Roo\" ( Pobre Campeche ? ? ) . Esta idea lleva puesta mucho tiempo, pero no fue hasta que los super- amigos se juntaron ( Joel y Santy) que se pudo llevar acabo. Lastimosamente como se esta en fase prueba el examen es en linea y no presencial, pero eso no es razo\u0301n para dar un mal desempen\u0303o. Por lo cual los super- amigos decidieron hacer un examen muy bueno; pero al momento de sentarse hacer el examen los super- amigos se dieron cuenta que no teni\u0301an ni idea de que problemas poner, ni que tan difi\u0301ciles debi\u0301an ser ( ma\u0301s que nada porque son todos unos cracks) . Santy dio la idea de robarse problemas de * CodeForces* ( un cla\u0301sico) y Joel dio la gran idea de robarse unos exa\u0301menes OMM y volverlos problemas OMI. Pero esas ideas eran muy tontas para lograr hacer un super examen, por lo cual decidieron visitar la tierra de los problemas. La tierra de los problemas es un lugar repleto de caos en donde toda aventura se puede hacer como un problema de cualquier olimpiada ( no, no es un alucino\u0301geno que se ingiere, # NoALasDrogas) . Joel y Santy entraron a la tierra de los problemas por primera vez. Al parecer la historia en donde estaban pareci\u0301a ser que trabajaban en una tal AJC ( Asociacio\u0301n Juvenil de Carteles) . Ellos posei\u0301an un arma ( La Super- Arma de la tierra de los problemas) un tanto peculiar, el arma tenia una pantalla donde tu podi\u0301as ponerle dos nu\u0301mero X y Y. Estos nu\u0301meros servi\u0301an para describir el arma de la siguiente manera: X * Y = poderX / Y = camuflajeEl arma teni\u0301a que cumplir la condicio\u0301n: Y | X, X \u2261 0 Y, X",
    "input": "A El camuflaje ma\u0301ximo, B El poder mi\u0301nimo y N el li\u0301mite de X y Y.",
    "output": "Si existe la pareja X , Y < = N y si no existe \" - 1\"",
    "note": "",
    "topics": [
      "number theory",
      "implementation"
    ],
    "id": 7870
  },
  {
    "title": "Suma de sumas",
    "url": "https://omegaup.com/arena/problem/Suma-de-sumas",
    "history": "Juanito es muy curioso y en su preparacio\u0301n para el TMR de Jalisco esta\u0301 estudiando las matema\u0301ticas porque se le habi\u0301a olvidado por completo. Justo en medio de su estudio se topo\u0301 con un problema un tanto complicado y te quiere pedir ayuda para resolverlo. Resuelva la siguiente serie: \u2211_ i= 1^ N \u2211_ j= 1^ i i",
    "input": "Un solo entero * * N* * que representa el li\u0301mite superior de la serie.",
    "output": "Un solo entero * * K* * , la respuesta de la serie.",
    "note": "",
    "topics": [
      "math",
      "number theory",
      "implementation"
    ],
    "id": 7840
  },
  {
    "title": "Buddy y el pollo.",
    "url": "https://omegaup.com/arena/problem/Buddy-y-el-pollo",
    "history": "En un di\u0301a normal, Buddy el perro iba caminando por la calle, pensando en lo rico que seri\u0301a comerse un pollo. Al tratar de comunicarle a su duen\u0303a su necesidad de comer pollo, se dio cuenta de que no teni\u0301a suficientes croquetas para decirle este mensaje ( si\u0301, Buddy y su duen\u0303a se entienden con croquetas) . Triste pero no derrotado, Buddy se decidio\u0301 salir de casa en busca de delicioso pollo frito, rostizado o en salsa verde. Al cabo de unos di\u0301as, un misterioso pollo de taman\u0303o n aparecio\u0301 en su camino, este fue el mejor di\u0301a de su vida. Como Buddy es un perro muy compartido, considero\u0301 repartirlo entre sus amigos perrunos, y analizo\u0301 de que\u0301 manera podi\u0301a repartir el pollo en partes iguales sin que sobrara ningu\u0301n pellejito, hueso o carne. Ayuda a Buddy da\u0301ndole todas las opciones en las que puede repartir su pollo.",
    "input": "La entrada consiste de una sola li\u0301nea con n: el taman\u0303o del pollo.",
    "output": "Debera\u0301s imprimir en una sola li\u0301nea una lista con las opciones en las que Buddy puede repartir su pollo en partes iguales. Como Buddy quiere evitar la fatiga, debera\u0301s imprimir esta lista en orden ascendente. Si dicha lista no existe entonces debera\u0301s dejar una li\u0301nea en blanco.",
    "note": "",
    "topics": [
      "math",
      "number theory",
      "sortings"
    ],
    "id": 7410
  },
  {
    "title": "Dibujando Monta\u00f1as",
    "url": "https://omegaup.com/arena/problem/Dibujando-Montanas",
    "history": "Uno de tus mas grandes suen\u0303os fue trabajar para la empresa de dibujos animados ma\u0301s grande del mundo, Neydis, y en esta ocasio\u0301n podra\u0301s cumplirlo. Fuiste contratado para dibujar los paisajes que se repiten constantemente en el fondo de las cintas animadas. De manera particular tu trabajo consiste en dibujar montan\u0303as que se mostrara\u0301n de fondo en la cinta. Pero, como tu\u0301 de nin\u0303o notabas que cada cierto tiempo se volvi\u0301a a repetir el mismo patro\u0301n de montan\u0303as, decidiste demostrarle a la empresa que existe una gran cantidad de variantes de dibujo de montan\u0303as si te dan un lienzo de taman\u0303o N. De esta manera, ya sera\u0301 muy difi\u0301cil notar cuando se repiten otra vez los patrones de dibujo. * * * Consideraciones de dibujo* * * - El largo del lienzo sera\u0301 de * * dimensio\u0301n par* * . - Se empieza el dibujo en la coordenada ( 0, 0) . - Tienes dos posibles movimientos para ir dibujando las montan\u0303as. El primero es ( 1, 1) ( moverte un cuadro a la derecha y despue\u0301s un cuadro hacia arriba) . El segundo ( 1, - 1) ( moverte un cuadro a la derecha y despue\u0301s un cuadro hacia abajo) . - No puedes descender del eje X, todo se dibuja en un cuadrante. - Se considera como dibujo va\u0301lido si siguiendo los movimientos descritos se llega a la coordenada ( N, 0) Fascinados por tu propuesta te pidieron un ejemplo, consideremos un lienzo de taman\u0303o 6. ! [ enter image description here] [ 1] Como se puede observar con un lienzo de taman\u0303o 6 podemos dibujar 5 combinaciones distintas de montan\u0303as siguiendo las reglas ya descritas.",
    "input": "Un nu\u0301mero N par.",
    "output": "Todas las formas en las que podemos dibujar paisajes de montan\u0303as en un lienzo de dimensio\u0301n N. Como la respuesta puede ser muy grande imprimirla en * * mo\u0301dulo 1234567* *",
    "note": "",
    "topics": [
      "number theory",
      "combinatorics"
    ],
    "id": 7170
  },
  {
    "title": "El Hacker Gamma",
    "url": "https://omegaup.com/arena/problem/El-Hacker-Gama",
    "history": "Fuiste contratado para ayudar a la Agencia Nacional de Seguridad Informa\u0301tica ( ANSI) para resolver un enigma. Hace unos meses un hacker de origen desconocido apodado * * * gamma* * * ( como el nu\u0301mero misterioso) logro\u0301 penetrar al sistema, pero increi\u0301blemente no robo\u0301 datos ni modifico\u0301 nada. Al parecer solo quiere dar un mensaje, enviando el mismo a distintos correos electro\u0301nicos. Una parte del contenido versaba lo siguiente: * \u201cPorque encuentras felicidad en pantallas y mensajes, cuando el hombre en sus inicios podi\u0301a serlo con el simple apreciar de la naturaleza. Tu\u0301 mismo puedes comprobar que la misma esta\u0301 envuelta de nu\u0301meros como en la cola de un camaleo\u0301n. . . \u201d* El texto continuaba y ma\u0301s adelante versaba que en pocos di\u0301as llegari\u0301a una nueva carta y en caso de no ser resuelta, lanzari\u0301a un ataque fulminante contra los servidores de la agencia. Haciendo vulnerable la red de nuestro pai\u0301s. Uno de nuestros ma\u0301s inteligentes agentes alias * * * Delciuxs* * * encontro\u0301 un mensaje oculto dentro del primer mensaje. Pero no nos quiso decir. Simplemente a la man\u0303ana siguiente se presento\u0301 con nosotros y pidio\u0301 su renuncia. Sin antes darnos unas pistas para la siguiente carta. * Le gustan los nu\u0301meros* La razo\u0301n que versa el primer mensaje fue de oro, la que viene sera\u0301 de plata. * El nu\u0301mero de palabras del mensaje es indispensable para encontrar el mensaje oculto. * El mensaje oculto se encuentra dentro de la misma carta. * Tienen 10 di\u0301as para encontrar el mensaje, suficiente como para encontrar una palabra por di\u0301a. * Es importante el orden de las palabras, el uno arroja la primera, el dos arroja la segunda, el tres la tercera. . . * El siguiente si\u0301mbolo es un grandi\u0301simo regalo de mi parte. . . ! [ enter image description here] [ 1]",
    "input": "Una linea de texto que contiene el nuevo mensaje del hacker * * gamma* * , este texto no contiene puntos ( * * . * * ) ni comas ( * * , * * ) ni saltos de linea, todas las palabras esta\u0301n en minu\u0301sculas. * * * El texto del mensaje que se te dara\u0301 como input es el que se presenta a continuacio\u0301n: * * * * sabes que si tenemos lo necesario para vivir realmente importara el que avance la tecnologi\u0301a por supuesto que si pero vale la pena gastar tu vida lo que hago y haces para a veces desarrollar entretenimiento mismo que solo convierte a nuestro semejante en un ente menos critico este mi trabajo no consiste en menospreciar dicho esfuerzo puesto que aun en estas actividades de desarrollo de software sigue existiendo esta forma de generar el arte de programar el co\u0301digo tecnolo\u0301gico es un legado correcto gama*",
    "output": "Una u\u0301nica linea que contiene el mensaje oculto, cada palabra en minu\u0301sculas y separadas con un espacio. [ 1] : simbolo. png",
    "note": "",
    "topics": [
      "implementation",
      "strings",
      "number theory"
    ],
    "id": 7132
  },
  {
    "title": "Factorial Enorme",
    "url": "https://omegaup.com/arena/problem/Factorial-Enorme",
    "history": "Un nu\u0301mero Factorial esta\u0301 definido por: 0! = 1n! = n \u00d7( n- 1) ! Dado un entero n calcula el nu\u0301mero de di\u0301gitos que contiene n! .",
    "input": "Un entero n.",
    "output": "El nu\u0301mero de di\u0301gitos que contiene n!",
    "note": "",
    "topics": [
      "implementation",
      "math",
      "number theory"
    ],
    "id": 7106
  },
  {
    "title": "MrK07. TEORIA DE N\u00daMEROS vs BUBBLESORT PARA TODOS",
    "url": "https://omegaup.com/arena/problem/MrKrista-vs-Teoria-de-Numeros",
    "history": "# DescripcionExiste un viejo dicho que dicta que existe una fo\u0301rmula y una manera iterativa para solucionar un problema. Hoy el problema dicta de la siguiente manera: \" Debes encontrar el camino ma\u0301s corto para llegar de un nu\u0301mero x a un nu\u0301mero y, tomando en cuenta que las u\u0301nicas modificaciones a los nu\u0301meros es sumar un nu\u0301mero primo, llame\u0301mosle a que sea menoro iguala un para\u0301metro n, en resumen: \" n: So\u0301lo puedes utilizar los nu\u0301meros primos menores- iguales a n ( nombremoslo \" a\" ) . ( Siempre y cuando a es primo y a< = n) . x: Nu\u0301mero inicial. y: Nu\u0301mero al cual se desea llegarNOTA: Esto es un concurso de velocidad, por lo tanto, debes escribir la manera mas cortade llegar de x a y. # ProblemaDados tres nu\u0301meros: n, x y y, determina lo siguiente: Si se puede llegar del nu\u0301mero x al nu\u0301mero y con las sumas permitidas: Imprime \" Bubblesort para todos : D\" , seguido de un salto de li\u0301nea. Tras esto, imprime el nu\u0301mero de sumas que realizaste, luego otro salto de li\u0301neay por u\u0301ltimo, los nu\u0301meros por los cuales pasaste para llegar de x a y. Si no se puede resolver el problema, imprime la famosa frase de MrKrista: \" Matematicamente tenemos oportunidad Sr Alemova\" .",
    "input": "Tres nu\u0301meros: n, x, y.",
    "output": "Las especificaciones anteriormente mencionadas. | | input10 2 8| | outputBubblesort para todos : D22 5 8| | end| | input10 2 3| | outputMatematicamente tenemos oportunidad Sr Alemova| | end# Limites10< = n< = 10000002< = x, y< = 3000000",
    "note": "",
    "topics": [
      "shortest paths",
      "number theory"
    ],
    "id": 6985
  },
  {
    "title": "Torres De Hanoi",
    "url": "https://omegaup.com/arena/problem/TDH",
    "history": "# DescripcionUn dia despertaste muy RecursivoDpsisimoMatematico y decidiste resolver un problema de logica ( rara forma de espertar la tuya) , entonces buscas en los juguetes de la primaria u encuentras 3 torres con N aros, el juego consiste en que debes de mover todos los arosque estan en la torre 1 a la torre 3, en el menor numero de pasos para lograr una puntuacion exelente. # Reglaspara poder resolver este puzzle logico MatematicoDinamicosorecursivisimo constas de las siguientes reglas1) los aros en la torre uno siempre empezaran ordenados de menor a mayor de arriba hacia abajo. 2) para moverlos puedes utilizar la torre 2 que te servira como auxiliar. 3) la pila en la torre final siempre tiene que quedar igual que al principio es decir del aro mas pequen\u0303o al mas grande ( de arriba hacia abajo) . 4) no puedes pones un disco mas grande sobre uno mas pequen\u0303o, ya que se romperan por ser chinos ademas es trampa, incluso un simeo lo sabe. 5) solo se puede mover un disco a la vez. # Problemarecibiras un numero N donde N es el numero de discosy en donde ( 1 < = N < = 100)",
    "input": "",
    "output": "el numero de pasos minimos que necesitas para mover la pila de discos a la ultima torre# Ejemplo Basicopara mover 3 discos de la torre 1 a la torre 3 necesitamos 7 pasos ya que podemos tomar el disco 1 y moverlo a la torre 3 ( llevando 1 paso) tomar el disco 2 y ponerlo en la torre 2 ( llevando 2 pasos) tomar el disco 1 y ponerlo arriba del disco 2 en la torre 2 ( llevando 3 pasos) , movemos el disco 3 ( el mas grande) y lo ponemor en la torre 3 ( llevando 4 pasos) , movemos el disco 1 de la torre 2 a la torre uno ( llevando 5 pasos) tomamos el disco 2 de la torre 2 y lo ponemos en la torre 3 ( llevando 6 pasos) y por ultimo tomamos el disco 1 y lo ponemos en la torre 3 asi terminandoel puzzle con 7 pasos| | input24| | output16777215| | input16| | output65535| | input1| | output1| | input3| | output7| | end# limitessiempre diviertete : )",
    "note": "",
    "topics": [
      "number theory",
      "dp",
      "math"
    ],
    "id": 6978
  },
  {
    "title": "Rompiendo el sistema RSA",
    "url": "https://omegaup.com/arena/problem/rompiendo-el-sistema-rsa",
    "history": "Eres un ingeniero que trabaja para la defensa de tu pai\u0301s, y esta\u0301n en medio de una guerra con otros pai\u0301ses, logras interceptar mensajes de tus enemigos y te das cuenta de que esta\u0301n cifrados de una forma peculiar, y deduces que se trata del algoritmo RSA. Este es un sistema criptogra\u0301fico de clave pu\u0301blica, y para generar el par de claves se lleva acabo el siguiente algoritmo. Se eligen dos nu\u0301meros primos: ( p) y ( q) , normalmente, de ma\u0301s de 1024 bits. El producto de estos dos, llame\u0301mosle ( n) , sera\u0301 el mo\u0301dulo de cifra ( n = pq) . Luego, se elige una clave pu\u0301blica ( e) que debera\u0301 ser mayor a 1 y menor a el indicador de euler phi de ( n) , tal que asi\u0301: ( 1 < e < phi( n) ) . El indicador de euler del producto de dos nu\u0301meros primos se calcula como ( phi( n) = ( p - 1) * ( q - 1) ) , siendo ( n) el producto de esos dos primos y, ( p) y ( q) los primos. A continuacio\u0301n, se calculara\u0301 la clave privada ( d) , calculando el inverso multiplicativo modular de ( e) , en phi( n) , entonces ( d = inv( e, phi( n) ) . En aritme\u0301tica modular, el inverso se define como ( ax = 1 ( mod b) ) , donde en la ecuacio\u0301n anterior: ( a) seri\u0301a: ( e) , ( b) seri\u0301a: ( phi( n) ) y ( x) seri\u0301a el inverso. Ajustando la ecuacio\u0301n a nuestras variables, quedari\u0301a como: ( ed = 1 ( mod phi( n) ) ) . Para asegurarnos de que exista el inverso, ( e) y ( phi( n) ) debera\u0301n ser coprimos entre si\u0301, es decir, el ma\u0301ximo comu\u0301n divisor entre ( e) y phi( n) debera\u0301 ser 1 ( mcd[ e, phi( n) ] = 1) . Para cifrar, se realiza la siguiente ecuacio\u0301n: N^ e = C ( mod n) Siendo ( C) el criptograma resultante y ( N) el nu\u0301mero a cifrar. Para descifrar: C^ d = N ( mod n) Siendo ( N) el nu\u0301mero original y ( C) el criptograma a descifrar. # ProblemaTu trabajo es tratar de romper las claves criptogra\u0301ficas y descifrar los mensajes que tus enemigos se envi\u0301an entre si\u0301. Sabes que si lo logras, podri\u0301as llegar a descubrir informacio\u0301n vital sobre sus pro\u0301ximos movimientos y anticiparte a ellos para darle fin a esta guerra.",
    "input": "* En la primera li\u0301nea: ( e) , la clave pu\u0301blica. * El la siguiente: ( n) , el mo\u0301dulo de cifra. * En la que sigue: ( l) , el taman\u0303o del criptograma. * El las ultimas ( l) li\u0301neas, cada parte del criptograma.",
    "output": "Una li\u0301nea representando el mensaje descifrado ( N) .",
    "note": "",
    "topics": [
      "number theory",
      "dp",
      "flows",
      "math"
    ],
    "id": 6875
  },
  {
    "title": "Funcion totienica de euler",
    "url": "https://omegaup.com/arena/problem/Funcion-totienica-de-euler",
    "history": "La funcio\u0301n totienica de Euler \u03c6( N) es igual al nu\u0301mero de primos relativos que tiene N menores a si mismo . Por ejemplo , \u03c6( 4) = 2 , sus primos relativos son 1 y 3. Se te daran P nu\u0301meros , para cada uno de los nu\u0301meros tienes que imprimir cual es nu\u0301mero con la mayor \u03c6( N) para 1\u2264 N \u2264 P . Si ma\u0301s de un nu\u0301mero tiene la mayor funcio\u0301n totienica deberas imprimir el menor. * * Para este problema \u03c6( 1) = 0* *",
    "input": "P el nu\u0301mero de nu\u0301meros que se te dara , seguido de P lineas , cada linea con un entero P_ i.",
    "output": "Por cada nu\u0301mero caso , devolver el nu\u0301mero con la funcio\u0301n totienica de euler ma\u0301s grande seguido de un salto de linea.",
    "note": "",
    "topics": [
      "number theory"
    ],
    "id": 6809
  },
  {
    "title": "Potencias y M\u00f3dulos",
    "url": "https://omegaup.com/arena/problem/potencias-y-modulos",
    "history": "Santiago esta\u0301 en medio de su examen de matema\u0301ticas, y de pronto se encuentra con una serie de preguntas que parece que se va a tardar un buen rato. Estas preguntas son del tipo, calcula: x^ y = a( mod z) . # ProblemaSon varias preguntas de ese tipo, por lo que Santiago ha decidido desarrollar un programa que le haga esas operaciones y que lo haga ra\u0301pido. \u00a1Ayu\u0301dale a Santiago a hacerlo!",
    "input": "Tres nu\u0301meros: * x Un nu\u0301mero base para la potencia. * y Un exponente no negativo. * z El mo\u0301dulo.",
    "output": "El resultado de ejecutar esa operacio\u0301n.",
    "note": "",
    "topics": [
      "math",
      "number theory"
    ],
    "id": 6777
  },
  {
    "title": "Caminos de Bacho",
    "url": "https://omegaup.com/arena/problem/caminos-de-bacho",
    "history": "Es el primer di\u0301a de cursos de Marco en bacho 2, y esta\u0301 en el laboratorio de informa\u0301tica. E\u0301l esta\u0301 bien agusti\u0301n programando cuando de pronto quiere ir al ban\u0303o. . . E\u0301l es medio olvidadizo. Por suerte la escuela es chica y es de 1 x M salones. Se sabe que e\u0301l no se quiere perder en la escuela, asi\u0301 que quiere saber cua\u0301ntos caminos existen, por lo que se mueve de la siguiente manera: ! [ Camino] ( camino. jpg) El salo\u0301n de informa\u0301tica esta\u0301 en la esquina inferior izquierda ( punto A) y el ban\u0303o esta\u0301 en la esquina inferior derecha ( punto B) . # Problema\u00bfCua\u0301ntos caminos puede tomar Marco?",
    "input": "Un u\u0301nico valor M.",
    "output": "Los caminos posibles.",
    "note": "",
    "topics": [
      "number theory"
    ],
    "id": 6776
  },
  {
    "title": "Divisores Training Gate",
    "url": "https://omegaup.com/arena/problem/Divisores-Training-Gate",
    "history": "Se dice que un nu\u0301mero entero a es divisor de b, si y solo si\u0301 existe un so\u0301lo nu\u0301mero natural d, tal que a* d= b. # ProblemaEn este problema recibira\u0301s un nu\u0301mero y se requiere saber cuantos divisores tiene este nu\u0301mero, y cuales son.",
    "input": "Para cada caso de prueba recibira\u0301s N ( 1 < = N < 2^ 31) , los casos terminan cuando N= 0",
    "output": "Para cada caso de prueba debes imprimir en numero de divisores que tiene el numero N, y en la siguiente li\u0301nea todos sus divisores ordenadosde menor a mayor. # ProtipPuedes calcular la rai\u0301z de un nu\u0301mero x con la funcio\u0301n sqrt( x) ;",
    "note": "",
    "topics": [
      "number theory",
      "implementation"
    ],
    "id": 6599
  },
  {
    "title": "Numero de digitos",
    "url": "https://omegaup.com/arena/problem/Numero-de-digitos",
    "history": "Dados dos enteros positivos a y b determinar el nu\u0301mero de di\u0301gitos que tiene a^ b.",
    "input": "Dos enteros positivos a, b.",
    "output": "Un entero d que corresponde al nu\u0301mero de di\u0301gitos de a^ b.",
    "note": "",
    "topics": [
      "number theory",
      "math"
    ],
    "id": 6471
  },
  {
    "title": "MasterMind",
    "url": "https://omegaup.com/arena/problem/MasterMind",
    "history": "Se require tu ayuda para vencer al antiguo rompecabezas MasterMind. La idea del rompecabezas es simple: debes determinar el co\u0301digo, hecho con una secuencia de fichas de colores, que MasterMind eligio\u0301. Tu\u0301 hacesintentos de adivinar y recibes retroalimentacio\u0301n sobre tus intentos, ma\u0301s precisamente, el nu\u0301mero de colorescorrectos en lugares correctos, y el nu\u0301mero de colores correctos en lugares incorrectos. Por ejemplo, imagina un juego con 9 colores y 4 posiciones. Digamos que el co\u0301digo secreto es \" azul, azul, amarillo, rojo\" . Al inicio tu no sabes cua\u0301l es el co\u0301digo y debes adivinar: \" azul, verde, verde, amarillo\" . La informacio\u0301n querecibes sera\u0301 que tienes 1 color correcto en el lugar correcto y un color correcto en el lugar incorrecto( la ficha amarilla, que no esta en la posicio\u0301n correcta) . Mira la figura de abajo para entender mejor esta idea. El objetivo del juego es determinar el co\u0301digo secreto, usando la minima cantidad de intentos. ! [ imgg] ( 1. png) Nosotros estamos interesados en una propiedad particular de este rompecabezas. Conociendo un intento ysu retroalimentacio\u0301n, \u00bfcua\u0301ntas combinaciones de colores son consistentes con la respuesta? Por ejemplo, imagina un juego con 9 colores y 3 posiciones. Hacemos el intento \" azul, rojo, verde\" y recibes lainformacio\u0301n de 1 color correcto en el lugar correcto y 2 colores correctos en lugares incorrectos. \u00bfCua\u0301ntas combinaciones son consistentes con esto? En otras palabras, \u00bfcua\u0301ntos posibles co\u0301digos secretos existen queregresen esta retroalimentacio\u0301n? En este caso, hay exactamente 3 co\u0301digos secretos que dan esta retroaliemtacio\u0301npara este particular intento: * Azul, verde, rojo* Verde, rojo, azul* Rojo, azul, verdeTu tarea es precisamente descubrir cua\u0301l es e\u0301ste nu\u0301mero. Dado un intento y su retroalimentacio\u0301n, tu tareaes escribir cua\u0301ntos co\u0301digos secretos son consistentes con esta informacio\u0301n. En este particular problemaestamos solo interesados en juegos con 9 colores, de 2 a 5 posiciones. Para simplificarlo, representaremos loscolores como nu\u0301meros, empezando desde el 1 y terminando con 9. El azul sera\u0301 el nu\u0301mero 1, el rojo el 2 y asi\u0301( nota que no importa que color es asignado a cada nu\u0301mero; lo importante es que un nu\u0301mero diferente representa un color diferente)",
    "input": "La primera li\u0301nea de la entrada contiene un u\u0301nico entero N, indicando el nu\u0301mero de casos ( 1< = N< = 30) . Para las siguientes N li\u0301neas, cada una contendra\u0301 un caso separado en 3 partes por un espacio. Cada caso comienza con un intento de respuesta va\u0301lido, en forma de una cadena de di\u0301gitos ( recuerda que los colores esta\u0301n codificados con di\u0301gitos del 1 al 9) . Cada cadena tendra\u0301 de 2 a 5 di\u0301gitos. Despu\u0301e\u0301s viene laretroalimentacio\u0301n recibida en forma de 2 nu\u0301meros enteros: el primero representa el nu\u0301mero de colores correctos en lugares correctos, y el segundorepresenta el nu\u0301mero de colores correctos en lugares incorrectos.",
    "output": "Para cada caso debera\u0301s imprimir en una li\u0301nea el nu\u0301mero de posibles co\u0301digos secretos que dan esa retroalimentacio\u0301n para ese intento en particular. Recuerdaque siempre son 9 colores diferentes y que el taman\u0303o del co\u0301digo secreto debe ser igual al taman\u0303o del intento",
    "note": "",
    "topics": [
      "implementation",
      "constructive algorithms",
      "number theory"
    ],
    "id": 6331
  },
  {
    "title": "Combinaciones",
    "url": "https://omegaup.com/arena/problem/Combinaciones",
    "history": "Calcular el nu\u0301mero exacto de formas en que se pueden tomar N cosas, M a la vez puede ser un gran desafi\u0301o cuando N y/ o M se vuelven muy grandes. Los desafi\u0301os son atractivos en los concursos de programacio\u0301n. Por lo tanto, se te pide hacer el siguiente ca\u0301lculo: Dados* 5 \u2264 N \u2264 100* 5 \u2264 M \u2264 100* M \u2264 NCalcula el valor exacto deC = N! / ( N- M) ! \u00d7 M! Puedes considerar que el valor final de C cabra\u0301 en un entero de 64. So\u0301lo como referencia, \u00a1el valor exacto de 100! es: 93, 326, 215, 443, 944, 152, 681, 699, 238, 856, 266, 700, 490, 715, 968, 264, 381, 621, nbsp; nbsp; nbsp; nbsp; nbsp; 468, 592, 963, 895, 217, 599, 993, 229, 915, 608, 941, 463, 976, 156, 518, 286, 253, nbsp; nbsp; nbsp; nbsp; nbsp; 697, 920, 827, 223, 758, 251, 185, 210, 916, 864, 000, 000, 000, 000, 000, 000, 000, 000",
    "input": "Recibira\u0301s dos nu\u0301meros indicando los valores de N y M, respectivamente.",
    "output": "Muestra el valor de C",
    "note": "",
    "topics": [
      "math",
      "combinatorics",
      "number theory",
      "implementation"
    ],
    "id": 6248
  },
  {
    "title": "Fibonaccis r\u00e1pidos",
    "url": "https://omegaup.com/arena/problem/fast-fibos",
    "history": "Este problema consiste en calcular los nu\u0301meros de la serie de Fibonacci, considerando: f( 0) = 0f( 1) = 1f( n) = f( n- 1) + f( n- 2) So\u0301lo que ahora, tendra\u0301s que calcularlos muy ra\u0301pido.",
    "input": "Recibira\u0301s un u\u0301nico valor de entrada N ( 0 \u2264 N < 1000000)",
    "output": "Para cada valor de N, mostrar f( N) mod 100000009. Esto debido a que de otra forma, los nu\u0301meros sera\u0301n demasiado grandes.",
    "note": "",
    "topics": [
      "matrices",
      "math",
      "number theory"
    ],
    "id": 6246
  },
  {
    "title": "MrK07. La \u00faltima, larga vida a Krista",
    "url": "https://omegaup.com/arena/problem/Larga-vida-a-Krista",
    "history": "# DescripcionMrKrista se ha convertido en un astronauta del Imperio del Jefe Supremo C+ + . Este mandatario lo ha mandado junto a un grupo l de compan\u0303eros a unaimportante misio\u0301n al planeta Marte, vaya sorpresa se encontro\u0301 nuestro protagonista, pues encontro\u0301 vida extraterrestre! Al avisar al jefe C+ + , este dijo: \" El objetivo es sencillo a partir de ahora: Identifique, la naturaleza de estos seres, sin embargo, solo tiene p di\u0301as para hacer su investigacio\u0301n, pues el cohete esta\u0301 programado para su regreso sin posibilidad de interrumpirlo\" . # ProblemaDado tres nu\u0301meros iniciales n, m y k; donde n y m son las dimensiones de el territorio que Krista revisara\u0301, se encontrara\u0301n k posiciones, todas y cadauna de ellas con dos datos x y y, que remarcan las posiciones de los alieni\u0301genas, determina su movimiento tomando en cuenta la siguiente nota enviada porel Mariscal Serpiente: * El estado de los aliens evoluciona a lo largo de unidades de tiempo discretas ( se podri\u0301a decir que por turnos) . La posicio\u0301n de todos los miembros se tiene en cuenta para calcular el estado de los mismos al turno siguiente. Todas las ce\u0301lulas se actualizan simulta\u0301neamente en cada turno, siguiendo estas reglas: * Un alien nace ( como las papas) con exactamente 3 aliens vecinos presentes ( es decir, al turno siguiente habra\u0301 un alien) . * Una alien vivo con 2 o\u0301 3 vecinos vivos sigue vivo, en otro caso muere o permanece muerto ( por \" soledad\" o \" superpoblacio\u0301n\" ) . * * NOTA: Un alien en la casilla x, y puede tener hasta 8 vecinos, en todos los puntos cardinales. Tenga cuidado.",
    "input": "Se dara\u0301n el la primera li\u0301nea tres nu\u0301meros n, m y k, luego k pares de nu\u0301meros, uno por li\u0301nea, donde se presenta x y y. Luego de los k pares, finitos nu\u0301meros 0' s y 1' s, donde un 1 significa que Krista puede pasar al siguiente di\u0301a, en caso de un 0, Krista debe regresar a casa, y mostrar la u\u0301ltimafoto de como estaban acomodados los aliens.",
    "output": "Un arreglo bidimensinal de n * m, donde se represente con una 0 en caso de no haber aliens o que estos este\u0301n muertos, y un 1 en caso de que este\u0301n vivos, todo esto, tras pasar los di\u0301as representados por los unos. | | input10 10 35 55 65 711111110| | output0000000000000000000000000000000000010000000001000000000100000000000000000000000000000000000000000000| | end# Li\u0301mites3< = n, m< = 1, 000, 0000< = k< = 35000001< = x, y< = 10, 000( 1 \u0301s ) < = 999, 999\" E\u0301xito, puedes hacerlo! : D\" . \" Auf Wiedersehen. . . \"",
    "note": "",
    "topics": [
      "graph matchings",
      "implementation",
      "number theory",
      "strings",
      "dfs and similar",
      "dp",
      "graphs",
      "constructive algorithms",
      "games"
    ],
    "id": 6198
  },
  {
    "title": "Factorizaci\u00f3n Prima",
    "url": "https://omegaup.com/arena/problem/Puertas-del-Tiempo",
    "history": "Es el problema cla\u0301sico de factorizacio\u0301n prima de T nu\u0301meros, \u00a1cuidado con los li\u0301mites! .",
    "input": "Un entero T seguido de T enteros X, Puedes suponer que 1 \u2264 T \u2264 100, 2 \u2264 X \u2264 2^ 63- 1",
    "output": "La factorizacio\u0301n prima de X_ i",
    "note": "",
    "topics": [
      "number theory"
    ],
    "id": 6193
  },
  {
    "title": "Desarrollos Binomiales",
    "url": "https://omegaup.com/arena/problem/COMI_Binomios",
    "history": "Un binomio es una expresio\u0301n algebra\u0301ica compuesta por dos te\u0301rminos distintos, por ejemplo, x+ y es un binomio. Cuando elevamos un binomio a una potencia n, donde n es un entero no negativo, obtenemos diferentes expresiones algebra\u0301icas dependiendo del valor de n. Por ejemplo, para n= 1, 2, 3 obtenemos las siguientes expresiones: ( x+ y) ^ 1= x+ y ( x+ y) ^ 2= x^ 2+ 2xy+ y^ 2 ( x+ y) ^ 3= x^ 3+ 3x^ 2y+ 3xy^ 2+ y^ 3 Tu tarea para este problema es, que dado el exponente n, encuentres el desarrollo de ( x+ y) ^ n tomando en cuenta las siguientes consideraciones: - Si el exponente de alguna de las variables es 0, entonces omitimos la variable, de modo que x^ 0y lo escribimos como y. - Si el exponente de alguna de las variables es 1, entonces omitimos el exponente, de modo que x^ 1 lo escribimos como x. - Si el coeficiente del te\u0301rmino es 1, entonces lo omitimos, de manera que 1x lo escribimos como x.",
    "input": "Un entero n, el exponente a elevar del binomio x+ y.",
    "output": "La expansio\u0301n del binomio ( x+ y) ^ n. Los te\u0301rminos debera\u0301n imprimirse en una sola li\u0301nea sin espacios y tomando en cuenta las anteriores consideraciones. Los exponentes se debera\u0301n imprimir anteponiendo el cara\u0301cter ` ^ ` .",
    "note": "",
    "topics": [
      "combinatorics",
      "implementation",
      "number theory"
    ],
    "id": 6121
  },
  {
    "title": "Sumando y reduciendo fracciones",
    "url": "https://omegaup.com/arena/problem/Suma-reduce-fracciones",
    "history": "Para este problema, tendra\u0301s que leer parejas de nu\u0301meros que representan fracciones. Tu tarea es obtener la suma de todas las fracciones y mostrarlas en forma reducida. Por ejemplo si la entrada es: < code> 2 2 < / code> < code> 3 4 < / code> < code> 4 5 < / code> < code> 4 3 < / code> < code> 3 4< / code> supongamos que se usa el algoritmo comu\u0301n ( sin reducir la fraccio\u0301n) , se obtendri\u0301a: < code> 2224 / 480< / code> Pero usando las fracciones reducidas se debe llegar a: < code> 139 / 30< / code>",
    "input": "Tu programa procesara\u0301 parejas de nu\u0301meros hasta EOF. Se garantiza que los nu\u0301meros son enteros con signo de 32 bits. No hay divisores con valor 0. Y el resultado es una fraccio\u0301n va\u0301lida. Cuando una fraccio\u0301n es negativa, el signo * * - * * aparece a la izquierda del numerador.",
    "output": "Mostrar la fraccio\u0301n reducida como dos enteros que la representan. Si el nu\u0301mero fraccionario es negativo, el signo debera\u0301 acompan\u0303ar al numerador. El numerado y denominador debera\u0301n estar separados por el si\u0301mbolo * * / * * habiendo un espacio entre e\u0301stos y el si\u0301mbolo.",
    "note": "",
    "topics": [
      "implementation",
      "number theory"
    ],
    "id": 6024
  },
  {
    "title": "\u00bfPrimo o Compuesto?",
    "url": "https://omegaup.com/arena/problem/Primo-o-Compuesto",
    "history": "Dado un entero N, determina si se trata de un nu\u0301mero primo o un nu\u0301mero compuesto. * Un nu\u0301mero primo es aquel que solo se puede dividir entre si\u0301 mismo y entre la unidad. * Un nu\u0301mero compuesto es producto potencias de primos, si un nu\u0301mero no es primo, entonces es compuesto.",
    "input": "Recibira\u0301s el entero N",
    "output": "Debes imprimir PRIMO si el nu\u0301mero lo es, en caso contrario imprime COMPUESTO# Ejemplos| | input11| | outputPRIMO| | description| | end| | input24| | outputCOMPUESTO| | description( 2^ 3) * ( 3^ 1) | | end",
    "note": "",
    "topics": [
      "math",
      "implementation",
      "number theory"
    ],
    "id": 5952
  },
  {
    "title": "CB-Intro-Factorial",
    "url": "https://omegaup.com/arena/problem/CB-Intro-Factorial",
    "history": "La funcio\u0301n _ factorial de n_ escrito normalmente como n! se define como el producto de todos los nu\u0301meros naturales desde 1 hasta n. Es dedirn! = 1 * 2 * 3 * . . . * ( n- 2) * ( n- 1) * nPor definicio\u0301n 0! = 1# TareaEscribe un programa que dado n calcule el valor de n! .",
    "input": "Tu programa debera\u0301 leer del teclado un u\u0301nico nu\u0301mero entero, n.",
    "output": "Tu programa debera\u0301 escribir en la pantalla un u\u0301nico nu\u0301mero entero, el valor de n! .",
    "note": "",
    "topics": [
      "implementation",
      "math",
      "number theory"
    ],
    "id": 5721
  },
  {
    "title": "Dividiendo en bases",
    "url": "https://omegaup.com/arena/problem/Dividiendo-en-bases",
    "history": "Dado un numero entero n con k di\u0301gitos en base a. Debera\u0301s decir si a+ 1 divide a n.",
    "input": "El nu\u0301mero k de di\u0301gitos que tendra\u0301 n. El nu\u0301mero a. El nu\u0301mero n.",
    "output": "Un solo valor de salida con * * S* * si a+ 1| n o\u0301 * * N* * si no lo hace",
    "note": "",
    "topics": [
      "math",
      "number theory"
    ],
    "id": 5594
  },
  {
    "title": "N\u00fameros odiosos",
    "url": "https://omegaup.com/arena/problem/Numeros-odiosos",
    "history": "Un di\u0301a en el Instituto Tecnolo\u0301gico de Veracruz, en la biblioteca Barcenas y Lupita encontraron un libro interesante sobre Teori\u0301a de Nu\u0301meros en el cual veni\u0301an un secuencia de nu\u0301meros odiosos, el cual un nu\u0301mero odioso se define como un nu\u0301mero tal que la cantidad de 1' s en su representacio\u0301n binaria sea * * Impar* * . < center> ! [ Nu\u0301meros Odiosos] ( odious. jpg) < / center> Entonces, ellos te piden ayuda para encontrar el ene\u0301simo nu\u0301mero Odioso.",
    "input": "La primera linea contiene un nu\u0301mero entero T ( 1 < = T < = 10^ 3) que indica la cantidad de casos de prueba, por cada caso de prueba contiene un nu\u0301mero N ( 1 < = N < = 10^ 18) que indica el ene\u0301simo nu\u0301mero odioso.",
    "output": "Por cada caso de prueba imprimir el ene\u0301simo nu\u0301mero odioso.",
    "note": "",
    "topics": [
      "number theory"
    ],
    "id": 5569
  },
  {
    "title": "Stevie y los n\u00fameros malvados II",
    "url": "https://omegaup.com/arena/problem/Stevie-y-los-numeros-malvados-II",
    "history": "En un di\u0301a lluvioso, nuestro amigo Stevie, leyendo sus libros de Teori\u0301a de Nu\u0301meros se encontro\u0301 con el siguiente enunciado: \" Un nu\u0301mero N es llamado Malvado si la suma de su di\u0301gitos en binario es Par. \" Le ha dado tanta curiosidad, que ha escrito los primeros 5 nu\u0301meros malvados; enlistados a continuacio\u0301n: 0, 3, 5, 6, 9. Y como sabemos, nuestro amigo Stevie es muy curioso y nos ha pedido encontrar la Sumatoria de los nu\u0301meros malvados contenidos en el rango [ A, B] , de la siguiente manera: m_ A + m_ A+ 1 + m_ A+ 2 + . . . + m_ BPor ejemplo del rango [ 2, 5] la sumatoria quedari\u0301a de la siguiente forma: 3 + 5 + 6 + 9 = 23.",
    "input": "La entrada consiste en varios casos, por cada linea, contiene dos nu\u0301meros enteros 1 < = A < = B < = 10^ 9.",
    "output": "Por cada linea imprimir la sumatoria dado el rango A y B.",
    "note": "",
    "topics": [
      "number theory"
    ],
    "id": 5538
  },
  {
    "title": "Stevie y los n\u00fameros malvados I",
    "url": "https://omegaup.com/arena/problem/Stevie-y-los-numeros-malvados-I",
    "history": "En un di\u0301a lluvioso, nuestro amigo Stevie, leyendo sus libros de Teori\u0301a de Nu\u0301meros se encontro\u0301 con el siguiente enunciado: \" Un nu\u0301mero N es llamado Malvado si la suma de su di\u0301gitos en binario es Par. \" Le ha dado tanta curiosidad, que ha escrito los primeros 5 nu\u0301meros malvados; enlistados a continuacio\u0301n: 0, 3, 5, 6, 9. Y como sabemos, nuestro amigo Stevie es muy curioso y nos ha pedido encontrar la Sumatoria de los nu\u0301meros malvados contenidos en el rango [ A, B] , de la siguiente manera: m_ A + m_ A+ 1 + m_ A+ 2 + . . . + m_ BPor ejemplo del rango [ 2, 5] la sumatoria quedari\u0301a de la siguiente forma: 3 + 5 + 6 + 9 = 23.",
    "input": "La entrada consiste en varios casos, por cada linea, contiene dos nu\u0301meros enteros 1 < = A < = B < = 10^ 5.",
    "output": "Por cada linea imprimir la sumatoria dado el rango A y B.",
    "note": "",
    "topics": [
      "games",
      "number theory",
      "math"
    ],
    "id": 5537
  },
  {
    "title": "Randy y los Divisores",
    "url": "https://omegaup.com/arena/problem/Randy-y-los-Divisores",
    "history": "\u00a1Randy esta\u0301 en un grave peligro! E\u0301l esta\u0301 al borde de reprobar matema\u0301ticas discretas, y eso no puede suceder dado que perderi\u0301a la beca. Randy quiere que le ayudes a hacer su tarea. La tarea consta de un u\u0301nico problema, que se describe a continuacio\u0301n. Se dice que b es divisible por a, si y solo si \u2203 k \u2208Z tal que a \u00b7 k = b. Entonces a recibe el nombre de divisor de b. Por ejemplo, 12 tiene 6 divisores positivos. Los cuales son 1, 2, 3, 4, 6 y 12. Sea D( n) el nu\u0301mero de enteros en [ 1, n] que tienen exactamente 4 divisores positivos. Entre 1 y 10 solo los enteros 6, 8, 10 tienen exactamente 4 divisores positivos. De modo que D( 10) = 3. Tu tarea es, dado n, calcular D( n) . \u00a1Ayuda a Randy a no perder la beca!",
    "input": "La primera y u\u0301nica li\u0301nea contiene un entero n.",
    "output": "Imprime un solo entero denotando el nu\u0301mero de enteros entre 1 y n con exactamente 4 divisores positivos.",
    "note": "",
    "topics": [
      "number theory"
    ],
    "id": 5536
  },
  {
    "title": "Stevie y los n\u00fameros Cuadrados",
    "url": "https://omegaup.com/arena/problem/Stevie-y-los-numeros-Cuadrados",
    "history": "Stevie es un chavo apasionado por la teori\u0301a de nu\u0301meros, entonces leyendo encontro\u0301 que un nu\u0301mero N puede ser formado como la suma de tres o menos nu\u0301meros triangulares. Dado a que el le encanta los nu\u0301meros cuadrados, el quiere saber la cantidad mi\u0301nima de nu\u0301meros cuadrados que sumados de un nu\u0301mero N.",
    "input": "La primera linea contiene los casos de entrada 1 < = T < = 10^ 4, en las T lineas siguientes contiene un nu\u0301mero N ( 1 < = N < = 10^ 5) .",
    "output": "Por cada caso de prueba imprimir, la cantidad mi\u0301nima de nu\u0301meros cuadrados para poder expresar el nu\u0301mero dado.",
    "note": "",
    "topics": [
      "divide and conquer",
      "dp",
      "number theory"
    ],
    "id": 5509
  },
  {
    "title": "MrKrista en Dinamarca",
    "url": "https://omegaup.com/arena/problem/MrKrista-en-Dinamarca",
    "history": "# DescripcionMrKrista ha sido descubierto en su fraude econo\u0301mico, sin embargo ha logrado escapar con vida de Alemania, ahora, como un hombre nuevo, empezara\u0301 en en Dinamarca, como alumno del gran qui\u0301mico Bohr. # ProblemaNielhs Bohr esta\u0301 a punto de aplicar su conocimiento para dejar sellada su fo\u0301rmula final para determinar la existencia de a\u0301tomos en un determinado elemento, elcual esta determinado por la formula 2n_ 2, en donde el tiene un determinado numero de a\u0301tomos de un elemento, y otro m numero de pipetas en donde puede colocarn nu\u0301meros de a\u0301tomos, y desafortunadamente Bohr tiene que transportar sus a\u0301tomos en pipetas.",
    "input": "Dada n numero de a\u0301tomos y m nu\u0301mero de pipetas, determine hasta cuantos atomos pueden depositarse en cada pipeta para bombardear el elemento deseado. Nota: Si le sobran a\u0301tomos sin transportar, a Bohr le cobran comisio\u0301n, por lo tanto desea tranportar tantos a\u0301tomos como pueda en cada pipeta.",
    "output": "El maximo numero de atomos a transportar por pipeta| | input1830 1170| | output30| | end",
    "note": "",
    "topics": [
      "implementation",
      "number theory"
    ],
    "id": 5274
  },
  {
    "title": "888",
    "url": "https://omegaup.com/arena/problem/888",
    "history": "Directo al grano, tu trabajo es encontrar el N- e\u0301simo nu\u0301mero cuyo cubo termina en los di\u0301gitos 888.",
    "input": "Primero una linea con un nu\u0301mero T la cantidad de casos de prueba. Las siguientes T lineas contienen un entero N.",
    "output": "Para cada linea de entrada, una linea con el N- e\u0301simo nu\u0301mero cuyo cubo termina en 888.",
    "note": "",
    "topics": [
      "constructive algorithms",
      "implementation",
      "math",
      "number theory"
    ],
    "id": 5259
  },
  {
    "title": "\u00daltimo D\u00edgito de N\u00e9stor",
    "url": "https://omegaup.com/arena/problem/Ultimo-Digito-de-Nestor",
    "history": "Ne\u0301stor esta\u0301 haciendo su tarea de matema\u0301ticas. Una actividad en la que ha tenido que hacer muchas operaciones en los u\u0301ltimos tres di\u0301as y esta\u0301 muy cansado. La tarea es que dado dos nu\u0301meros A y B quieren encontrar el u\u0301ltimo di\u0301gito de A ^ B. Debes ayudar a Ne\u0301stor con esta tarea. Se dara\u0301n dos nu\u0301meros: la base A ( 0 \u2264 A \u2264 20) y el i\u0301ndice B ( 0 \u2264 B \u2264 2147483000) .",
    "input": "La primera li\u0301nea de la entrada contiene un nu\u0301mero 1 \u2264 T \u2264 100, el nu\u0301mero de casos de prueba. Las li\u0301neas T siguen. Para cada caso de prueba, una li\u0301nea con A y B separados por un espacio.",
    "output": "Para cada caso de prueba debe imprimir una li\u0301nea con el resultado. | | input23 106 2| | output96| | end",
    "note": "",
    "topics": [
      "number theory",
      "divide and conquer",
      "brute force",
      "math"
    ],
    "id": 5229
  },
  {
    "title": "Divisible 7",
    "url": "https://omegaup.com/arena/problem/Divisible-7",
    "history": "El comite\u0301 Quinatanarroense se siente bondadoso este an\u0303o, y en tu primer problema de lenguaje te pedira\u0301 que hagas algo muy fa\u0301cil. Tu tarea consiste en identificar si un numero es divisible entre 7, es decir, si un numero al dividirlo entre 7 nos da algu\u0301n otro numero entero. Sin embargo eso no es todo, tienes que identificar cuantos nu\u0301meros son divisibles entre 7 de entre toda una lista de N nu\u0301meros. # ProblemaDada una lista de N nu\u0301meros identificar cua\u0301ntos de ellos son divisibles entre 7 y arrojarlo como resultado.",
    "input": "En la primera li\u0301nea un numero N que representa la cantidad de nu\u0301meros a analizar. En la segunda li\u0301nea tendra\u0301s N nu\u0301meros aleatorios sin ningu\u0301n orden.",
    "output": "Una u\u0301nica li\u0301nea con un numero que representa la cantidad de nu\u0301meros divisibles entre 7.",
    "note": "",
    "topics": [
      "number theory",
      "implementation"
    ],
    "id": 5018
  },
  {
    "title": "Juanito y los primos",
    "url": "https://omegaup.com/arena/problem/Juanito-y-los-primos",
    "history": "Como ya varios saben, en Diciembre se celebra el preselectivo para la IOI 201x con x \u2208N en Guanajuato. Pero lo que varios preseleccionados no saben, es que el deporte oficial del CIMAT es el ping pong. Por eso, durante el pre del 2017, Juanito se fugo\u0301 con Briaares para jugar ping pong, pero cada juego, terminaba conpuntuaciones primas. Es decir, quedaban 11- 7, 11- 5, etc. Todos los juegos que quedaban con puntuaciones primas, Briaares era el ganador, y en caso contrario Juanito ganaba. En ping pong, cuando el marcador se iguala en 10, para ganar sube a 11 + \u03bb, donde \u03bb es el nu\u0301mero de veces que se ha empatado en puntuacio\u0301n desde el 10- 10. Por lo que, como Juanitoquiere ganar a toda costa, necesita que las puntuaciones sean no primas. Pero el juego se ha alargado demasiado, al nivel de que las veces que ha empatado supera el trillo\u0301n! El problema ahora, es que Juanito no sabe si las puntuaciones actuales son primos. Por lo que necesita de tu ayuda para saber si su puntuacio\u0301n es un primo. El lo programari\u0301a, perocomo se fugo de las clases de Ethan por jugar con el Briaares, ahora tiene que hacer los problemas que Ethan le dejo\u0301. # ProblemaDado un entero \u03b4 , decir si \u03b4 es primo o no.",
    "input": "La entrada consiste en un solo entero que representa la puntuacio\u0301n de Juanito.",
    "output": "Si \u03b4 no es primo, imprimir \" no es primo\" , en caso contrario imprimir \" si es primo\" .",
    "note": "",
    "topics": [
      "number theory"
    ],
    "id": 4800
  },
  {
    "title": "Breviario Fibonacci",
    "url": "https://omegaup.com/arena/problem/Breviario-Fibonacci",
    "history": "Ana Paula esta\u0301 muy interesada en la sucesio\u0301n de Fibonacci. Ella sabe que el primer te\u0301rmino de la sucesio\u0301n es el 0 y el segundo es el 1. Tambie\u0301n sabe que a partir de los dos primeros te\u0301rminos, se pueden calcular los siguientes te\u0301rminos usando la recursio\u0301n F_ n= F_ n- 1+ F_ n- 2, es decir, F_ 0= 0 F_ 1= 1 F_ 2= 1+ 0= 1 F_ 3= 1+ 1= 2 . . . F_ n= F_ n- 1 + F_ n- 2 Aunque este procedimiento es muy fa\u0301cil, es bastante tedioso, y Ana Paula de ninguna forma quiere ponerse a calcular todos los nu\u0301meros de Fibonacci. Tu tarea es hacer un programa que dados tres nu\u0301meros: n, m, y k, imprima F_ n, F_ m, y F_ k. # Nota: Para todos los casos se cumple que: 0 \u2264 n, m, k \u2264 45",
    "input": "Tres nu\u0301meros: n, m, y k, cada uno en una li\u0301nea distinta.",
    "output": "El nu\u0301mero de Fibonacci que corresponde a cada uno de los nu\u0301meros lei\u0301dos",
    "note": "",
    "topics": [
      "number theory",
      "implementation",
      "math"
    ],
    "id": 4630
  },
  {
    "title": "MCD de N n\u00fameros",
    "url": "https://omegaup.com/arena/problem/MCD-de-N-numeros",
    "history": "Deseas conocer el ma\u0301ximo comu\u0301n divisor de N nu\u0301meros",
    "input": "Un entero N seguido de N li\u0301neas que representan los elementos de la lista.",
    "output": "Un entero que respresenta el ma\u0301ximo conu\u0301n divisor de todos los nu\u0301meros de la lista.",
    "note": "",
    "topics": [
      "number theory",
      "implementation"
    ],
    "id": 4606
  },
  {
    "title": "Factorial hasta el 20",
    "url": "https://omegaup.com/arena/problem/Factorial-hasta-el-20",
    "history": "El factorial de un nu\u0301mero positivo n esta\u0301 definido recursivamente como n! = n* ( n- 1) ! Con un caso base en el que 0! = 1. Encuentra el factorial de un nu\u0301mero.",
    "input": "Un nu\u0301mero entero positivo n. 0 \u2264 n \u2264 20",
    "output": "El factorial de ese nu\u0301mero",
    "note": "",
    "topics": [
      "math",
      "implementation",
      "number theory"
    ],
    "id": 4483
  },
  {
    "title": "El cl\u00e1sico problema de big mod",
    "url": "https://omegaup.com/arena/problem/El-clasico-problema-de-big-mod",
    "history": "Dados tres numeros b, p y m, imprime \" Si\" ( sin las comillas) si b^ p \u2261 0 ( m)",
    "input": "Tres enteros, b, p, y m.",
    "output": "Imprime \" Si\" o \" No\" segun el caso.",
    "note": "",
    "topics": [
      "math",
      "number theory"
    ],
    "id": 4216
  },
  {
    "title": "Factorial de ASINUS",
    "url": "https://omegaup.com/arena/problem/Factorizar-de-ASINUS",
    "history": "La maestra de matematicas esta enojada > : v, porque los shabos no saben como sacar el factorial de un numero asi que deja una tarea voluntaria ( voluntariamente a fuerzas) y pues como tienes mucho tiempo libre pues dices porque no hago un programa que alfin y alcabo voy a terminar aprendiendo ( : v.",
    "input": "Se ingresa un numero * * N* * y recuerda que factorial de 1 es 1 y factorial de 0 es 1* * 0> = N< = 30* *",
    "output": "Debe salir el numero y si sale con potencia se debe usar * * e* * # Ejemplos| | input0| | output1| | input1| | output1| | input6| | output720| | input30| | output2. 65253e+ 032| | end",
    "note": "",
    "topics": [
      "implementation",
      "number theory"
    ],
    "id": 3923
  },
  {
    "title": "Divisores de N!",
    "url": "https://omegaup.com/arena/problem/Divisores-de-N",
    "history": "Para que no pierdas mas tiempo leyendo tantos problemas, los organizadores sera\u0301n buena onda y pondra\u0301n al menos este problema con redaccio\u0301n corta. Es un problema fa\u0301cil de entender, pero de responder, quie\u0301n sabe. Tu tarea consiste en calcular cuantos divisores tiene el factorial de un nu\u0301mero N. El factorial de un nu\u0301mero es la multiplicacio\u0301n de todos los nu\u0301meros de 1 a N, por ejemplo 4! = 1\u00d72\u00d73\u00d74 = 24 y es divisible por 1, 2, 3, 4, 6, 8, 12, 24 por lo tanto tiene 8 divisores. \u00bfSuena fa\u0301cil? , Pues bien, 0 le; N le; 1, 000, 000, ya no es tan fa\u0301cil como se vei\u0301a. . . \u00bfo si?",
    "input": "Una li\u0301nea con un solo nu\u0301mero entero N",
    "output": "Un u\u0301nico nu\u0301mero entero, la cantidad de divisores en N! , como este nu\u0301mero puede ser muy grande debera\u0301s imprimir su residuo( mo\u0301dulo) con el nu\u0301mero 987654321",
    "note": "",
    "topics": [
      "number theory",
      "math"
    ],
    "id": 3755
  },
  {
    "title": "3 divisores",
    "url": "https://omegaup.com/arena/problem/3-divisores",
    "history": "Una propiedad de los nu\u0301meros enteros es la de la divisibilidad. Un nu\u0301mero aes un divisor de b si al dividir b por a, el residuo es cero. Porejemplo, el 15 es un divisor de 45 ya que al dividir 45 entre 15 nosobra ningu\u0301n nu\u0301mero. Los nu\u0301meros primos son aquellos que solo tienen 2divisores, el 1 y ellos mismos. Existen nu\u0301meros que tienen exactamente 3divisores, como el 4 que solamente es dividido por el 1, 2 y 4. Tutarea es crear un programa que dados 2 nu\u0301meros p y q calcules cuantosnu\u0301meros con 3 divisores existen entre p y q.",
    "input": "Dos enteros p y q separados por un espacio.",
    "output": "Un solo nu\u0301mero con el resultado",
    "note": "",
    "topics": [
      "number theory"
    ],
    "id": 3693
  },
  {
    "title": "Los caminos de Ulises",
    "url": "https://omegaup.com/arena/problem/Los-caminos-de-Ulises",
    "history": "Un di\u0301a Ulises vio a Briares y le dijo: Oye chairo, a que no sabes cua\u0301ntos caminos hay tales que no cruzan la diagonal en una cuadri\u0301cula de NxN. Y Briares le respondio\u0301: tu\u0301 tampoco. Al llegar a su casa, Briares intento\u0301 hacer un programa que responda a la pregunta de Ulises, pero al no conseguirlo decidio\u0301 pedirte ayuda. # ProblemaAyuda a Briares a resolver la pregunta de Ulises. Cua\u0301ntos caminos hay tales que no cruzan la diagonal en una cuadri\u0301cula de NxN y van de la esquina inferior izquierda a la esquina superior derecha avanzando solo hacia a la derecha y hacia arriba. ! [ ] ( https: / / upload. wikimedia. org/ wikipedia/ commons/ thumb/ a/ a0/ Catalan_ number_ 3x3_ grid_ example. svg/ 525px- Catalan_ number_ 3x3_ grid_ example. svg. png)",
    "input": "Un entero N que representa las dimensiones de la cuadri\u0301cula.",
    "output": "La cantidad de caminos que existen tales que no cruzan la diagonal en mo\u0301dulo 1 000 000 007.",
    "note": "",
    "topics": [
      "number theory",
      "combinatorics",
      "math"
    ],
    "id": 3421
  },
  {
    "title": "Numeros Naturales a un Byte",
    "url": "https://omegaup.com/arena/problem/Naturales-Byte",
    "history": "Realice un programa que convierta nu\u0301meros naturales a nu\u0301meros binarios. Queremos convertir un nu\u0301mero que sea mayor o igual que 0 y menor que 256, se representara\u0301 el nu\u0301mero en un nu\u0301mero binarios de 8 di\u0301gitos",
    "input": "Un nu\u0301mero natural que sea 0< = n< = 255",
    "output": "El nu\u0301mero transformado a un nu\u0301mero binario de 8 di\u0301gitos",
    "note": "",
    "topics": [
      "number theory",
      "bitmasks",
      "implementation",
      "constructive algorithms"
    ],
    "id": 3228
  },
  {
    "title": "Karel-En busca de la Karesmeralda",
    "url": "https://omegaup.com/arena/problem/en_busca-de_la_karesmeralda",
    "history": "Karel ha entrado a una piramide en busca de la gema karesmeralda. Sin embargo se encontro\u0301 con varias gemas. Estas esta\u0301n talladas con un numero. Gracias a una expedicio\u0301n anterior sabe que busca la u\u0301nica tallada con el numero 3, si saca una equivocada y no la devuelve ra\u0301pido se activara una trampa. Pero puede que alguien mas se la llevo antes que el asi\u0301 que debera\u0301 resignarse si no esta.",
    "input": "Karel esta situado en la avenida 1 y calle 1, orientado al norte. Enfrente de el esta todas las gemas sin espacios entre ellas. Estas esta\u0301n rodeadas a la derecha e izquierda con un muro. Tienen una casilla extra a un lado y al otro. Formando una sala cerrada( Karel sabra despue\u0301s como salir) .",
    "output": "Karel debera\u0301 estar encima del lugar de la gema y con esta en su mochila. Si no hay, estara\u0301 en la siguiente calle ( fila) despue\u0301s de la ultima gema.",
    "note": "",
    "topics": [
      "implementation",
      "number theory"
    ],
    "id": 3176
  },
  {
    "title": "Fibonacci Facil",
    "url": "https://omegaup.com/arena/problem/Fibonacci-Facil",
    "history": "# Fibonacci 1La serie Fibonacci es una de las series ma\u0301s famosas, y tiene diversas aplicaciones en la computacio\u0301n. Incluso le sirvio\u0301 a Robert Langdon para obtener la Fleur- de- lis en el co\u0301digo da Vinci, y asi\u0301 descubrir el tesoro del Priorato de Sion. La secuencia se construye de la siguiente manera. Los primeros dos elementos de la secuencia son f( 0) = 1 y f( 1) = 1. Los siguientes elementos se calculan mediante la suma de los dos elementos previos, por lo que: f( n) = f( n- 1) + f( n- 2) Escribe un programa que dado un nu\u0301mero k, devuelva el nu\u0301mero fibonacci f( k) .",
    "input": "Un so\u0301lo nu\u0301mero k ( 1 \u2264 k \u2264 20)",
    "output": "Un so\u0301lo nu\u0301mero indicando f( k) # # Ejemplos| | input0| | output1| | input1| | output1| | input2| | output2| | end",
    "note": "",
    "topics": [
      "math",
      "number theory",
      "implementation"
    ],
    "id": 3152
  },
  {
    "title": " El Rey Caprichoso",
    "url": "https://omegaup.com/arena/problem/El-Rey-Caprichoso",
    "history": "Un Rey te ha obligado a cumplir la siguiente tarea de la hora de la cena o te cortara\u0301 el cuello, \u00bfQue por que\u0301? pues porque puede, su consejero te dara\u0301 un nu\u0301mero N y una lista de N nu\u0301meros, tu tarea es encontrar la pareja de nu\u0301meros cuyo ma\u0301ximo comu\u0301n divisor sea el ma\u0301ximo de todas las parejas, sin embargo, el consejero se da cuenta de que es posible que varias parejas cumplan esto, asi\u0301 que decide que de estas parejas elijas aquella cuyo mi\u0301nimo comu\u0301n mu\u0301ltiplo sea el ma\u0301s grande. Al rey no le importa mucho la decisio\u0301n de su consejero, despue\u0301s de todo el so\u0301lo quiere ver rodar cabezas.",
    "input": "En la primera li\u0301nea el nu\u0301mero N, en la siguiente li\u0301nea N nu\u0301meros: a0, a1, . . . , an- 1 la lista que te da el consejero",
    "output": "En la primer li\u0301nea el mi\u0301nimo comu\u0301n mu\u0301ltiplo de la pareja",
    "note": "",
    "topics": [
      "number theory"
    ],
    "id": 2841
  },
  {
    "title": "Fibonacci-B\u00e1sico",
    "url": "https://omegaup.com/arena/problem/Fibonacci-Basico",
    "history": "Dado un entero M, imprime todos los nu\u0301meros de la serie de fibonacci menores a M. La serie de fibonacci se calcula: 1 2 3 5 8 13 21 34. . . Donde un elemento f_ i= f_ i- 1+ f_ i- 2",
    "input": "Una li\u0301nea con el entero M.",
    "output": "Los nu\u0301meros de la serie fibonacci menores a M, separados por un espacio. # Ejemplos# | | input26| | output1 2 3 5 8 13 21| | description| | end# Limites1 \u2264 M \u2264 10^ 6",
    "note": "",
    "topics": [
      "math",
      "implementation",
      "brute force",
      "number theory"
    ],
    "id": 2647
  },
  {
    "title": "Numeros Amigables",
    "url": "https://omegaup.com/arena/problem/Numeros-Amigables",
    "history": "Los griegos definieron una propiedad sobre los nu\u0301meros naturales ( 1, 2, 3, . . . ) que establece que dos nu\u0301meros son amigos si la suma de los divisores propios de uno da el otro. Los divisores propios de un numero natural N son aquellos que lo dividen exactamente y son menores a el. Por ejemplo los divisores propios del 6 son 1, 2, 3. Y los numeros 220 y 284 son amigos ya que 220= 1+ 2+ 4+ 71+ 142 y 284= 1+ 2+ 4+ 5+ 10+ 11+ 20+ 22+ 44+ 55+ 110 Se te dara una pareja de numeros, tu tarea es determinar si los numeros son amigos o no.",
    "input": "Dos numeros naturales a y b.",
    "output": "Un 0 si los numeros NO son amigos y un 1 si son amigos.",
    "note": "",
    "topics": [
      "number theory",
      "implementation"
    ],
    "id": 2598
  },
  {
    "title": "MCD Euclides",
    "url": "https://omegaup.com/arena/problem/MCD-Euclides",
    "history": "El algoritmo de Euclides es un procedimiento para calcular el mcd ( ma\u0301ximo comu\u0301n divisor) de dos nu\u0301meros. Los pasos son: - Se divide el nu\u0301mero mayor entre el menor. - Si la divisio\u0301n es exacta, el divisor es el mcd. - Si la divisio\u0301n no es exacta, dividimos el divisor entre el resto obtenido y se continu\u0301a de esta forma hasta obtener una divisio\u0301n exacta, siendo el u\u0301ltimo divisor el mcd. Por ejemplo si se requiere el mcd de 72 y 16: ! [ mcd de 72 y 16. ] ( ejem. png)",
    "input": "Dos enteros M, N separados por un espacio. Asume que M siempre es mayor a N.",
    "output": "el mcd de M y N. # Ejemplos# | | input72 16| | output8| | description| | end| | input173 7| | output1| | description| | end",
    "note": "",
    "topics": [
      "implementation",
      "number theory"
    ],
    "id": 2535
  },
  {
    "title": "Factoriales extremos",
    "url": "https://omegaup.com/arena/problem/Factoriales-extremos",
    "history": "Hugo el Huro\u0301n estaba resolviendo su tarea de matema\u0301ticas, pero como no le gusta hacer ca\u0301lculos a mano, utilizaba su nueva calculadora OMI- 9000 que compro\u0301 por 10 pesos en el Sistema de Transporte Colectivo Metro de la Ciudad de Me\u0301xico. Pero llego\u0301 un momento en el que su calculadora no le ayudo\u0301 de mucho, ya que no soportaba ma\u0301s de 6 di\u0301gitos para hacer operaciones ( no podi\u0301a esperar mucho de una calculadora de 10 pesos) . Es por eso que requiere de un programa que le ayude a calcular la operacio\u0301n matema\u0301ticaN!",
    "input": "Una u\u0301nica li\u0301nea con dos enteros positivos N y M.",
    "output": "El resultado de la operacio\u0301n N!",
    "note": "",
    "topics": [
      "implementation",
      "math",
      "number theory"
    ],
    "id": 2007
  },
  {
    "title": "Factorial base 2",
    "url": "https://omegaup.com/arena/problem/Factorial-base-2",
    "history": "# Factorial base kJulito quiere abrir una puerta de seguridad que tiene una pantalla donde tiene que teclear una contrasen\u0303a. El sabe que la contrasen\u0303a es un nu\u0301mero. Tambie\u0301n sabe que ese nu\u0301mero es generado con de la siguiente forma. En la pantalla aparecen dos nu\u0301meros, N y K en base decimal, y el nu\u0301mero de la contrasen\u0303a es igual al nu\u0301mero de ceros al final que tiene N! en base 2^ K. Sin embargo, el no ha podido resolver el problema aun, y si falla una vez ma\u0301s el sistema de seguridad cerrara\u0301 esa puerta para siempre. Ayu\u0301dale a encontrar la solucio\u0301n a este problema.",
    "input": "Dos nu\u0301meros N y K.",
    "output": "El nu\u0301mero de la contrasen\u0303a",
    "note": "",
    "topics": [
      "number theory"
    ],
    "id": 1796
  },
  {
    "title": "Rambo III",
    "url": "https://omegaup.com/arena/problem/Rambo-III",
    "history": "En una de sus u\u0301ltimas misiones para rescatar prisioneros de guerra, Rambo fue rodeado por k vietnamitas. Afortunadamente, Rambo ha estado en este tipo de situaciones miles de veces y sabe exactamente como proceder: comenzara\u0301 a girar disparando su M60 ( su ametralladora automa\u0301tica favorita) * * hasta agotar sus m municiones* * , esperando eliminar a la mayor cantidad posible de vietnamitas. En las peli\u0301culas, Rambo es capaz de eliminar a todos los vietnamitas que quiera, pero esto es la vida real! asi\u0301 que necesita saber en que\u0301 momento empezar a disparar su M60 para eliminar a la mayor cantidad de vietnamitas. La situacio\u0301n se ilustra en el ejemplo de la figura 1. Rambo esta\u0301 rodeado por los vietnamitas colocados en las casillas coloreadas de rojo. En este ejemplo, hay n= 12 casillas en total numeradas de 0 a n- 1 y hay k= 5 vietnamitas. Rambo comienza a girar en el sentido de las manecillas del reloj a partir de la posicio\u0301n 2 ( en esa posicio\u0301n hay un vietnamita) y su M60 disparara\u0301 una bala cada d casillas hasta agotar sus m municiones. Por ejemplo, si d= 3 y m= 3 entonces disparara\u0301 hacia las casillas 2, 5 y 8, eliminando a 3 vietnamitas. Pero si Rambo hubiera empezado apuntando hacia la casilla 10, hubiera eliminado solamente 2 vietnamitas ( en las casillas 10 y 1) y si hubiera empezado apuntando hacia la casilla 1 solamente habri\u0301a eliminado a uno ( precisamente el de la casilla 1) . ! [ Figura 1] [ 1]",
    "input": "En la primera linea, los nu\u0301meros n, d, k, m antesdescritos. En la segunda linea, k enteros en orden creciente, separados por espacios, indicando las posiciones de los k vietnamitas.",
    "output": "En la primera linea, el ma\u0301ximo nu\u0301mero de vietnamitas que Rambo puede eliminar.",
    "note": "",
    "topics": [
      "number theory"
    ],
    "id": 1335
  },
  {
    "title": "Rambo II",
    "url": "https://omegaup.com/arena/problem/Rambo-II",
    "history": "En una de sus u\u0301ltimas misiones para rescatar prisioneros de guerra, Rambo fue rodeado por k vietnamitas. Afortunadamente, Rambo ha estado en este tipo de situaciones miles de veces y sabe exactamente como proceder: comenzara\u0301 a girar disparando su M60 ( su ametralladora automa\u0301tica favorita) * * hasta agotar sus m municiones* * , esperando eliminar a la mayor cantidad posible de vietnamitas. En las peli\u0301culas, Rambo es capaz de eliminar a todos los vietnamitas que quiera, pero esto es la vida real! asi\u0301 que necesita saber en que\u0301 momento empezar a disparar su M60 para eliminar a la mayor cantidad de vietnamitas. La situacio\u0301n se ilustra en el ejemplo de la figura 1. Rambo esta\u0301 rodeado por los vietnamitas colocados en las casillas coloreadas de rojo. En este ejemplo, hay n= 12 casillas en total numeradas de 0 a n- 1 y hay k= 5 vietnamitas. Rambo comienza a girar en el sentido de las manecillas del reloj a partir de la posicio\u0301n 2 ( en esa posicio\u0301n hay un vietnamita) y su M60 disparara\u0301 una bala cada d casillas hasta agotar sus m municiones. Por ejemplo, si d= 3 y m= 3 entonces disparara\u0301 hacia las casillas 2, 5 y 8, eliminando a 3 vietnamitas. Pero si Rambo hubiera empezado apuntando hacia la casilla 10, hubiera eliminado solamente 2 vietnamitas ( en las casillas 10 y 1) y si hubiera empezado apuntando hacia la casilla 1 solamente habri\u0301a eliminado a uno ( precisamente el de la casilla 1) . ! [ enter image description here] [ 1]",
    "input": "En la primera linea, los nu\u0301meros n, d, k, m antesdescritos. En la segunda linea, k enteros en orden creciente ( a lo mas un vietnamita por casilla) , separados por espacios, indicando las posiciones de los k vietnamitas.",
    "output": "En la primera linea, dos enteros separados por un espacio indicando el ma\u0301ximo nu\u0301mero de vietnamitas que Rambo puede eliminar y el nu\u0301mero de la casilla hacia la que debe comenzar a disparar. Si hay mas de una posible casilla inicial, imprime la de menori\u0301ndice.",
    "note": "",
    "topics": [
      "number theory"
    ],
    "id": 1306
  },
  {
    "title": "Rambo",
    "url": "https://omegaup.com/arena/problem/Rambo",
    "history": "En una de sus u\u0301ltimas misiones para rescatar prisioneros de guerra, Rambo fue rodeado por k vietnamitas. Afortunadamente, Rambo ha estado en este tipo de situaciones miles de veces y sabe exactamente como proceder: comenzara\u0301 a girar disparando su M60 ( su ametralladora automa\u0301tica favorita) esperando eliminar a la mayor cantidad posible de vietnamitas. En las peli\u0301culas, Rambo es capaz de eliminar a todos los vietnamitas que quiera, pero esto es la vida real! asi\u0301 que necesita saber en que\u0301 momento empezar a disparar su M60 para eliminar a la mayor cantidad de vietnamitas. La situacio\u0301n se ilustra en el ejemplo de la figura 1. Rambo esta\u0301 rodeado por los vietnamitas colocados en las casillas coloreadas de rojo. En este ejemplo, hay n= 12 casillas en total numeradas de 0 a n- 1 y hay k= 5 vietnamitas. Rambo comienza a girar en el sentido de las manecillas del reloj a partir de la posicio\u0301n 2 ( en esa posicio\u0301n hay un vietnamita) y su M60 disparara\u0301 una bala cada d casillas. Por ejemplo, si d= 3 entonces disparara\u0301 hacia las casillas 2, 5, 8, 11, 2, 5, 8, 11, 2, 5, . . . y asi\u0301 sucesivamente hasta agotar sus municiones ( * * en este problema, puedes suponer que la M60 tiene infinitas municiones* * ) . Bajo estas condiciones, Rambo eliminara\u0301 a los vietnamitas de las casillas 2, 5 y 8. Pero si Rambo hubiera empezado apuntando hacia la casilla 1, hubiera eliminado solamente 2 vietnamitas y si hubiera empezado apuntando hacia la casilla 0. . . bueno, todos los vietnamitas se habri\u0301an divertido mucho vie\u0301ndolo girar. ! [ Figura 1] [ 1]",
    "input": "En la primera linea, los nu\u0301meros n, d, k antesdescritos. En la segunda linea, k enteros distintos separados por espacios, en orden creciente, indicando las posiciones de los k vietnamitas.",
    "output": "En la primera linea, dos enteros separados por un espacio indicando el ma\u0301ximo nu\u0301mero de vietnamitas que Rambo puede eliminar y el nu\u0301mero de la casilla hacia la que debe comenzar a disparar. Si hay mas de una posible casilla inicial, imprime la de menori\u0301ndice.",
    "note": "",
    "topics": [
      "number theory"
    ],
    "id": 1305
  },
  {
    "title": "Detective's Game",
    "url": "https://omegaup.com/arena/problem/Detectives-Game",
    "history": "# Detective\u2019s GameAs you may know, Sherlock Holmes is a brilliant english detective and Professor James Moriarty his eternal archenemy. Moriarty has designed an excellent game for Sherlock to play, of course, he\u2019s having fun making Holmes losing his mind discovering the answer of his evil puzzle. Professor Moriarty has kidnapped n people and put them in lethal traps all over London. He tells the following to Holmes: \u201cListen to me Sherlock, I have chosen an arbitrary number from 1 to n and you must guess that number in order to stop me. You can guess the number I choose as many times as you want, but for every guess, one of my traps will activate and we do not want anyone to get hurt, right? But that\u2019s not a fair game, huh? For every guess you make, I\u2019ll reveal you what is the greatest common divisor between your guessed number and the number I choose. The game is on, Holmes, you better play perfectly\u201d. For example, if n= 6 Moriarty could choose any number between 1 and 6. Sherlock can find the number Moriarty choose in at most 2 guesses. The optimal strategy is: Sherlock guess 6. If Professor Moriarty says 1 then the chosen number cannot be 2, 3, 4 or 6, so the answer is 1 or 5, just check again with 5. In other case, Moriarty could say 2, then the answer must be 2 or 4. If Professor says 3, then the answer is 3. Finally, if Professor Moriarty answered 6, Holmes correctly guess the number on the first try. You must help Sherlock find the maximum number of guesses he must make if he plays optimally.",
    "input": "An unique line with an integer n ( 2 \u2264 n \u2264 10, 000) .",
    "output": "The maximum number of guesses Sherlock must make in the worst case in order to stop Moriarty. # Example| | input6| | output2| | end",
    "note": "",
    "topics": [
      "number theory"
    ],
    "id": 1263
  },
  {
    "title": "UltraPrimo",
    "url": "https://omegaup.com/arena/problem/UltraPrimo",
    "history": "# UltraPrimoLuis y Alma han decidido crear un divertido juego en el cual Alma elige un nu\u0301mero y Luis debe decir si es un nu\u0301mero UltraPrimo o no. Alma es algo tramposa por lo que Luis te ha encargado escribir un programa que verifique su respuesta y asi\u0301 Alma no pueda mentirle. Se dice que un nu\u0301mero es UltraPrimo si la suma de sus di\u0301gitos es un nu\u0301mero primo.",
    "input": "Un nu\u0301mero entero M que representa la cantidad de nu\u0301meros que Alma le presentara\u0301 a Luis, las siguientes M_ i li\u0301neas contendra\u0301n un nu\u0301mero entero que representa el nu\u0301mero que Alma eligio\u0301 en cada turno.",
    "output": "Para cada caso debera\u0301s imprimir si el nu\u0301mero que eligio\u0301 Alma es UltraPrimo o no. Si el nu\u0301mero es UltraPrimo debera\u0301s imprimir * * \" UltraPrimo\" * * , de lo contrario se imprimira\u0301 * * \" No UltraPrimo\" * * .",
    "note": "",
    "topics": [
      "strings",
      "number theory"
    ],
    "id": 1165
  },
  {
    "title": "Sistema de ecuaciones diofantinas",
    "url": "https://omegaup.com/arena/problem/sed",
    "history": "Escribe un programa que determine la cantidad n de soluciones enteras que tiene el sistema de ecuaciones ax + by = c, dx + ey = f. Observa que es posible que este sistema no tenga ninguna solucio\u0301n entera ( es decir n = 0) o que tenga un nu\u0301mero infinito de soluciones enteras ( en cuyo caso debes reportar n = - 1) . Por ejemplo, si a = 2, b = 1, c = 3, d = 2, e = 3, f = 1 entonces n = 1 ya que el sistema u\u0301nicamente tiene la solucio\u0301n x = 2, y = - 1.",
    "input": "Seis nu\u0301meros enteros a, b, c, d, e y f separados por espacios y todos ellos en el intervalo de - 1, 000, 000 a 1, 000, 000 ( incluye\u0301ndolos) .",
    "output": "Un nu\u0301mero entero n.",
    "note": "",
    "topics": [
      "math",
      "implementation",
      "number theory"
    ],
    "id": 1015
  },
  {
    "title": "Euclides y Euler",
    "url": "https://omegaup.com/arena/problem/eye",
    "history": "Dados dos enteros positivos p y q, su ma\u0301ximo comu\u0301n divisor es el entero positivo ma\u0301s grande que los divide a ambos exactamente y se puede calcular con el algoritmo de Euclides ( el cual puedes investigar co\u0301mo funciona casi en cualquier lugar) . Si el ma\u0301ximo comu\u0301n divisor de p y q es igual a 1, entonces se dice que p y q son primos relativos. La funcio\u0301n \u03c6( n) de Euler es igual a la cantidad de enteros en el intervalo del 1 al n que son primos relativos con n. Por ejemplo, \u03c6( 9) = 6 debido a que 9 es primo relativo con los seis enteros 1, 2, 4, 5, 7 y 8. Escribe un programa que, dados dos enteros p y q, encuentre el ma\u0301ximo valor m que toma la funcio\u0301n \u03c6( n) de entre todos los enteros n en el intervalo de p a q, adema\u0301s del menor valor de n en ese intervalo tal que \u03c6( n) = m. Por ejemplo, si p = 4 y q = 10 entonces \u03c6( 4) = 2, \u03c6( 5) = 4, \u03c6( 6) = 2, \u03c6( 7) = 6, \u03c6( 8) = 4, \u03c6( 9) = 6 y \u03c6( 10) = 4 por lo que m = 6 y n = 7.",
    "input": "Dos nu\u0301meros enteros p y q tales que 1 \u2264 p \u2264 q \u2264 1, 000, 000.",
    "output": "Un nu\u0301mero entero m y un numero entero n.",
    "note": "",
    "topics": [
      "number theory"
    ],
    "id": 1012
  },
  {
    "title": "Fibonacci R\u00e1pido",
    "url": "https://omegaup.com/arena/problem/Fibonacci-Rapido",
    "history": "La secuencia de Fibonacci F se define comoF_ i = F_ i- 1 + F_ i- 2 para i > 1, conF_ 0 = 0, y F_ 1 = 1. Dado i, calcula F_ i 98765431.",
    "input": "Un entero, i.",
    "output": "F_ i 98765431.",
    "note": "",
    "topics": [
      "number theory",
      "math"
    ],
    "id": 906
  },
  {
    "title": "Karel",
    "url": "https://omegaup.com/arena/problem/karel",
    "history": "Karel se encuentra movie\u0301ndose dentro de un cuarto de W unidades horizontales por H unidades verticales, delimitado por paredes ( y sin paredes en el interior) . Las esquinas esta\u0301n numeradas de 0 a W- 1 horizontalmente de oeste a este ( izquierda a derecha) y de 0 a H- 1 verticalmente de sur a norte ( abajo a arriba) . En el cuarto hay K beepers. El movimiento de Karel depende de dos orientaciones: vertical y horizontal. La orientacio\u0301n vertical de Karel puede ser ' norte' o ' sur' y su orientacio\u0301n horizontal puede ser ' este' u ' oeste' . Karel esta\u0301 programado para dar X ' pasos horizontales' seguidos de Y ' pasos verticales' ( cuando no hay paredes que lo impidan) . Si Karel no puede dar un paso en una direccio\u0301n debido a una pared, entonces en lugar de dar el paso, cambia su orientacio\u0301n. Por ejemplo, si Karel tiene orientacio\u0301n [ este, norte] y se encuentra en la posicio\u0301n [ x= 5, y= 5] , un ' paso horizontal' llevara a Karel a la posicion [ x= 6, y= 5] si no hay una pared al este de Karel. En cambio, si hubiera una pared al este de Karel, entonces un ' paso horizontal' lo dejari\u0301a en la misma posicio\u0301n [ x= 5, y= 5] pero su nueva orientacio\u0301n seri\u0301a [ oeste, norte] . Ana\u0301logamente, un ' paso vertical' llevari\u0301a a Karel a la posicio\u0301n [ x= 5, y= 6] si no hay pared al norte, y si hubiera pared al norte, entonces Karel permaneceri\u0301a en [ x= 5, y= 5] pero su nueva orientacio\u0301n seria [ este, sur] . Inicialmente, Karel se encuentra en la posicio\u0301n [ x= 0, y= 0] con orientacio\u0301n [ este, norte] . Luego de dar X pasos horizontales y Y pasos verticales, Karel verifica si esta\u0301 sobre un beeper y de ser asi lo recoge. Lo anterior se repite indefinidamente. Dadas las dimensiones H, W, del cuarto, el numero X y Y de pasos horizontales y verticales que da Karel y el numero K de beepers y sus posiciones ( x_ i, y_ i) . Determina el nu\u0301mero de beepers que recogera\u0301 Karel.",
    "input": "En la primera linea los nu\u0301meros W, H, X, Y, K separados por espacios. En las siguientes K lineas las posiciones x_ i, y_ i de los beepers.",
    "output": "En la primera linea el nu\u0301mero de beepers que recogera\u0301 Karel.",
    "note": "",
    "topics": [
      "number theory"
    ],
    "id": 186
  },
  {
    "title": "Balanza",
    "url": "https://omegaup.com/arena/problem/balanza",
    "history": "# Balanza< img src= \" http: / / www. cimat. mx/ omar/ omegaup/ balanza. jpg\" width= 512> < / img> Tenemos una balanza con dos platos, izquierdo y derecho, que pesan G_ 1 gramos y G_ 2 gramos respectivamente. Queremos balancearla y para esto contamos con dos tipos de pesas. Las pesas de tipo 1 pesan A gramos y las pesas de tipo 2 pesan B gramos. Por ejemplo, en la figura el plato de la izquierda pesa G_ 1= 12 gramos, y el plato de la derecha pesa G_ 2= 8 gramos. Las pesas rojas pesan 7 gramos y las pesas verdes pesan 3 gramos. Una forma de balancear los platos es agregando 2 pesas rojas y 2 pesas verdes al plato de la izquierda ( para un total de 12+ 2\u00d7 7+ 2\u00d7 3 = 32) y agregando 3 pesas rojas y una pesa verde al plato de la derecha ( para un total de 8 + 3\u00d7 7 + 1\u00d7 3 = 32) . Escribe un programa que dados G_ 1, G_ 2, A y B, determine si es posible balancear los platos.",
    "input": "En cada caso de prueba, tu programa debe responder n preguntas. En la primera linea estara\u0301 el nu\u0301mero n. En cada una de las siguientes n lineas estara\u0301n los 4 nu\u0301meros G_ 1, G_ 2, A y B.",
    "output": "Para cada una de las n preguntas, tu programa debe imprimir 1 si es posble balancear los platos y 0 si no es posible ( debes imprimir los di\u0301gitos en la misma linea, sin espacios) .",
    "note": "",
    "topics": [
      "number theory"
    ],
    "id": 173
  },
  {
    "title": "Goldbach",
    "url": "https://omegaup.com/arena/problem/goldbach",
    "history": "# La conjetura de GoldbachLa conjetura de Goldbach nos dice que para todo nu\u0301mero par positivo distinto a 2 se cumple que: X= P_ 1 + P_ 2, donde P_ 1 y P_ 2 son primosEs decir, todo nu\u0301mero par puede ser representado como la suma de dos nu\u0301meros primos, a excepcio\u0301n del 2. Es considerada una conjetura, puesto que no ha sido demostrado ni comprobado un porque, ni se ha encontrado algo que la contradiga. # ProblemaDado un nu\u0301mero X, encontrar la pareja de nu\u0301meros primos que incluya al nu\u0301mero mas pequen\u0303o que cumpla con lo establecido. Por ejemplo: el 10 puede ser representado como 5+ 5 y 3+ 7. La pareja deseada es 3+ 7, ya que contiene un elemento menor al de la otra pareja.",
    "input": "| | output",
    "output": "| | input468100| | output2 23 33 53 7| | end# Li\u0301mites* 4\u2264 X \u2264 5 \u00d7 10^ 6",
    "note": "* Un nu\u0301mero primo es aquel que solo puede ser divido entre el 1 y entre si\u0301 mismo. El 1 no es considerado como un numero Primo.",
    "topics": [
      "number theory",
      "implementation"
    ],
    "id": 156
  },
  {
    "title": "Jack el factorizador",
    "url": "https://omegaup.com/arena/problem/Jack-el-factorizador",
    "history": "Jack el Factorizador es un criminal en serie que ataca a nu\u0301meros compuestos ( los nu\u0301meros \u201ccompuestos\u201d son los nu\u0301meros < b> mayores que 1< / b> , que no son primos) . Cuando Jack el Factorizador ataca a un nu\u0301mero compuesto, lo factoriza y deja en su lugar a sus factores primos. La pobre vi\u0301ctima queda irreconocible, pero al menos todos sus factores primos permanecen juntos. Jack el Factorizador acaba de atacar a algunos elementos de una lista de C nu\u0301meros compuestos. El resultado fue una lista de N enteros positivos que podri\u0301a contener nu\u0301meros primos. Las autoridades locales necesitan determinar la identidad de todos los elementos de la lista original. Afortunadamente, Jack nunca ataca a dos nu\u0301meros compuestos consecutivos en ninguna lista. Es decir, si Jack ataca a un nu\u0301mero compuesto, nunca atacara\u0301 a sus nu\u0301meros compuestos adyacentes. Ayuda a las autoridades locales en su investigacio\u0301n de estos terribles cri\u0301menes determinando el nu\u0301mero de elementos de la lista original.",
    "input": "En la primera li\u0301nea, el nu\u0301mero N de elementos en la lista final ( luego de los ataques de Jack el Factorizador) . En la segunda li\u0301nea, los N enteros positivos { a_ i } separados por espacio.",
    "output": "En la primera li\u0301nea, el nu\u0301mero C de elementos en la lista original de nu\u0301meros compuestos ( antes de los ataques de Jack el Factorizador) .",
    "note": "",
    "topics": [
      "number theory"
    ],
    "id": 14650
  },
  {
    "title": "The Real Party",
    "url": "https://omegaup.com/arena/problem/The-Real-Party",
    "history": "Los amigos Fan y Fun cumplen an\u0303os el mismo di\u0301a, y como era de esperarse, ambos esta\u0301n organizando juntos una gran fiesta. Para dar la bienvenida a sus invitados, tanto a Fan como a Fun se les ocurrio\u0301 la idea de invitar caramelos. Fan compro\u0301 a caramelos, y Fun b caramelos. Fan quiere dar a cada uno de sus invitados x caramelos de tal manera que, despue\u0301s de repartirlos, no quede ninguno de los a caramelos. Fun pretende hacer lo mismo, dara\u0301 a cada uno de sus invitados y caramelos de tal manera que reparta todos los b caramelos comprados. Fan y Fun quieren que su fiesta sea inolvidable, es por ello que decidieron aplicar algunas condiciones extra: Fan y Fun dara\u0301n a cada uno de sus invitados un nu\u0301mero primo de caramelos, y adema\u0301s, ambas cantidades deben ser diferentes. Es decir, x e y son primos y x = \u0338 yYa que el cumplean\u0303os se acerca, los padres de Fan y Fun esta\u0301n preocupados por las peticiones tan exce\u0301ntricas de sus hijos y se preguntan, \u00bfSera\u0301 posible que Fan y Fun encuentren valores va\u0301lidos para x e y?",
    "input": "La u\u0301nica linea de entrada consiste en 2 nu\u0301meros enteros a y b, el nu\u0301mero de caramelos que compraron Fan y Fun respectivamente.",
    "output": "Si existen valores va\u0301lidos para x e y, imprimir * * \" Party\" * * ( sin comillas) y en una nueva linea los valores de x e y separados por un espacio. Caso contrario imprimir * * \" Sadge\" * * ( sin comillas) . En caso existan muchos valores va\u0301lidos para x e y, imprimir cualquier respuesta.",
    "note": "",
    "topics": [
      "number theory"
    ],
    "id": 12646
  },
  {
    "title": "Arreglo de primos",
    "url": "https://omegaup.com/arena/problem/Arreglo-de-primos",
    "history": "Un elemento ba\u0301sico en programacio\u0301n es la utilizacio\u0301n de arreglos, por lo que se te pondra\u0301 a prueba para ello. Un profesor de matema\u0301ticas les cuestiono como saben si un nu\u0301mero es primo, o no. Por lo que tendra\u0301s que demostrar que es muy fa\u0301cil. A continuacio\u0301n, tendra\u0301s que encontrar nu\u0301meros primos en un rango. Como entrada tendra\u0301s X nu\u0301meros y un rango. Lo u\u0301nico que debe hacer el programa es calcular la cantidad de nu\u0301meros primos que hay en dicho rango.",
    "input": "* Leer primero X. El dato X indica la cantidad de nu\u0301meros que se leera\u0301n desde el teclado. En las siguientes X li\u0301neas se encuentran los datos de entrada. Al finalizar se tienen dos nu\u0301meros enteros A y B, que indican el rango.",
    "output": "Imprima la cantidad de nu\u0301meros que son primos en el rango desde A hasta B.",
    "note": "",
    "topics": [
      "number theory",
      "implementation"
    ],
    "id": 9458
  },
  {
    "title": "Suma de muchos primos",
    "url": "https://omegaup.com/arena/problem/suma-muchos-p",
    "history": "Un nu\u0301mero entero positivo p es primo si tiene exactamente dos divisores positivos: p y 1. Los nu\u0301meros primos ma\u0301s pequen\u0303os son 2, 3, 5, 7 y 11. Adema\u0301s, y so\u0301lo para este ejercicio, consideraremos que el nu\u0301mero 1 tambie\u0301n es primo. Dado un nu\u0301mero entero m, podemos escribirlo como suma de primos tan grandes como sea posible. Por ejemplo, si m = 10, lo podemos escribir como 7 + 3 ( porque 7 es el primo ma\u0301s grande menor o igual a 10 y 3 es primo) ; y si m = 27, lo podemos escribir como 23 + 3+ 1 ( porque 23 es el primo ma\u0301s grande menor o igual a 27, 3 es el primo ma\u0301s grande menor o igual al sobrante y finalmente sobra 1) .",
    "input": "Consiste de un nu\u0301mero entero m que tendra\u0301 un valor entre 1 y 5000.",
    "output": "Consiste de una lista de nu\u0301meros primos escritos en orden descendiente, que sumen m y este\u0301n separados por espacios.",
    "note": "",
    "topics": [
      "number theory",
      "implementation"
    ],
    "id": 8583
  },
  {
    "title": "Cadenas de primos",
    "url": "https://omegaup.com/arena/problem/Cadenas-de-primos",
    "history": "Escribe un programa que calcule cua\u0301ntas cadenas de N di\u0301gitos existen, tales que cada pareja de di\u0301gitos consecutivos ( subcadenas de taman\u0303o 2) forman un nu\u0301mero primo.",
    "input": "Un entero N. Puedes suponer que 2 \u2264 N \u2264 15.",
    "output": "Un entero que sea el nu\u0301mero de cadenas descritas.",
    "note": "",
    "topics": [
      "dfs and similar",
      "number theory"
    ],
    "id": 8547
  },
  {
    "title": "El ultimo teorema de Santy",
    "url": "https://omegaup.com/arena/problem/El-ultimo-teorema-de-Santy",
    "history": "Santy muy aburrido con su vida sin mucho que hacer, ha decidido plantear un teorema ( en realidad es una conjetura) . Pero el no cuenta con mucha creatividad asi\u0301 que es difi\u0301cil. Para su buena suerte un di\u0301a e\u0301l escucha a uno de sus amigos decir una frase, la cual se expropia como su teorema, al cual lo nombro\u0301 como su \" ultimo teorema\" porque se escucha cool. La frase deci\u0301a: Todo nu\u0301mero natural par mayor a 2 se puede descomponer como la suma de dos nu\u0301meros primos. Como Santy no es matema\u0301tico no busco forma de demostrar eso. Asi\u0301 que le dijo a Joel para ver si el podi\u0301a demostrarlo; pero como todos buenos informa\u0301ticos la forma en la cual lo demostraron ambos fue por casitos. Entonces, ellos plantearon poner esto como un problema para ver si la demostracio\u0301n por casitos funcionaba. # ProblemaSe te dara\u0301n Q nu\u0301meros pares mayores a dos, si se puede descomponer como la suma de dos primos saca cualesquiera dos primos que sumen ese nu\u0301mero, si no se puede imprime dos \" - 1\" .",
    "input": "Un entero positivo Q que son cuantos casitos hicieron joel y santiagoEn las siguientes Q li\u0301neas un entero positivo que representa el casito.",
    "output": "La Q respuestas ( pares de nu\u0301meros) , una por cada nu\u0301mero N.",
    "note": "",
    "topics": [
      "number theory"
    ],
    "id": 8402
  },
  {
    "title": "Es o No es Primo",
    "url": "https://omegaup.com/arena/problem/Es-o-No-es-Primo",
    "history": "Edwin en su clase de matema\u0301ticas aprendio\u0301 sobre los nu\u0301meros primos, por lo cual la maestra le dejo una tarea y el debe decir si el numero N que le dan es un numero primo o no. Se puede decir que un numero es primo cuando la cantidad de divisores es igual a 2 ( https: / / es. wikipedia. org/ wiki/ N",
    "input": "En la primera linea un entero N.",
    "output": "La palabra \" SI\" si el numero ingresado es un numero primo, en caso contrario imprimir \" NO\" .",
    "note": "",
    "topics": [
      "number theory",
      "implementation"
    ],
    "id": 8240
  },
  {
    "title": "Criba",
    "url": "https://omegaup.com/arena/problem/COMI-Criba",
    "history": "La Criba de Erato\u0301stenes es un algoritmo que permite hallar todos los nu\u0301meros primos menores que un nu\u0301mero natural dado n. Se forma una tabla con todos los nu\u0301meros naturales comprendidos entre 2 y n, y se van tachando los nu\u0301meros que no son primos de la siguiente manera: comenzando por el 2, se tachan todos sus mu\u0301ltiplos; comenzando de nuevo, cuando se encuentra un nu\u0301mero entero que no ha sido tachado, ese nu\u0301mero es declarado primo, y se procede a tachar todos sus mu\u0301ltiplos, asi\u0301 sucesivamente. El proceso termina cuando el cuadrado del mayor nu\u0301mero confirmado como primo o no, lo es. ! [ Criba] ( criba. gif)",
    "input": "Se te dara\u0301 k , en las siguientes k li\u0301neas se te dara\u0301 una lista de k nu\u0301meros.",
    "output": "Por cada nu\u0301mero deberas imprimir * * SI* * si k_ i es primo y * * NO* * en caso contrario.",
    "note": "",
    "topics": [
      "number theory",
      "implementation"
    ],
    "id": 6118
  },
  {
    "title": "Determina si es primo",
    "url": "https://omegaup.com/arena/problem/Determina-si-es-primo",
    "history": "Determina si un nu\u0301mero es primo.",
    "input": "El nu\u0301mero.",
    "output": "Escribir \" SI\" si el numero es primo, en caso contrario escribir \" NO\" .",
    "note": "",
    "topics": [
      "implementation",
      "number theory"
    ],
    "id": 6048
  },
  {
    "title": "Primos fractales",
    "url": "https://omegaup.com/arena/problem/Primos-fractales",
    "history": "Un primo fractal es un nu\u0301mero primo tal que su representacio\u0301n en decimal consta de un u\u0301nico di\u0301gito, o bien, al partir su representacio\u0301n en dos mitades de la misma longitud, ambas mitades tambie\u0301n son primos fractales. Escribe un programa que determine si un nu\u0301mero es primo fractal.",
    "input": "Un entero N. Puedes suponer que 1 \u2264 N < 100000000 y que su representacio\u0301n en base decimal consta de 1, 2, 4 u 8 di\u0301gitos.",
    "output": "Un 1 si N es primo fractal y un 0 en otro caso.",
    "note": "",
    "topics": [
      "dfs and similar",
      "dp",
      "number theory"
    ],
    "id": 5839
  },
  {
    "title": "Suma de primos",
    "url": "https://omegaup.com/arena/problem/Suma-de-primos",
    "history": "Un nu\u0301mero entero p es primo si es positivo y sus u\u0301nicos dos divisores positivos son 1 y p. Los nu\u0301meros primos ma\u0301s pequen\u0303os son 2, 3, 5, 7 y 11. Algunos nu\u0301meros enteros positivosno son primos, pero son la suma de dos nu\u0301meros primos. Por ejemplo: 4 = 2+ 2, 8 = 5+ 3 y 9 = 7+ 2. Advierte que algunos nu\u0301meros se pueden escribir - como suma de dos nu\u0301meros primos- de ma\u0301s de una forma ( por ejemplo el 10 que puede escribirse 7 + 3 o 5 + 5) , pero nos basta con una de ellas. Dado un nu\u0301mero entero n, podemos decidir si es primo o no y, en caso negativo, decidir si es la suma de dos primos o no.",
    "input": "Un nu\u0301mero entero n que tendra\u0301 un valor entre 1 y 1 000 000.",
    "output": "Dos nu\u0301meros enteros, p , q, separados por un espacio, tales que: si n es primo, entonces p = n, q = 0; si n es suma de dos primos p , q, entonces p \u2265 q; y en caso contrario p = 0, q = 0. # Ejemplos| | input10| | output7 3| | input17| | output17 0| | input27| | output0 0| | end",
    "note": "",
    "topics": [
      "implementation",
      "number theory"
    ],
    "id": 5801
  },
  {
    "title": "occ04nssf25",
    "url": "https://omegaup.com/arena/problem/occ04nssf25",
    "history": "# Nu\u0301mero PrimoUn nu\u0301mero entero es primo si u\u0301nicamente es divisible por 1 y por el mismo. Haga un programa que reciba como entradaun entero y diga si es primo o no. En caso de respuesta negativa debe dar el menor divisor diferente a 1 que tenga elnu\u0301mero.",
    "input": "Un nu\u0301mero entero n.",
    "output": "SI si el nu\u0301mero no es primo. NO seguido por el menor diferente a 1 ue tenta el nu\u0301mero en caso contrario.",
    "note": "",
    "topics": [
      "number theory"
    ],
    "id": 3122
  },
  {
    "title": "Factorizaci\u00f3n prima",
    "url": "https://omegaup.com/arena/problem/Factorizacion-prima",
    "history": "Itzcoal ( El barbas) tiene ganas de ver cua\u0301l es la factorizacio\u0301n prima de un nu\u0301mero N, por lo cua\u0301l a solicitado tu ayuda, pues le ha dado una enfermedad denominada \" nenuco eruptitos\" . # ProblemaSe te dara\u0301 como entrada un nu\u0301mero N, tu deber es encontrar sus factores primos, por cada factor, debera\u0301 estar precedido por \" x \" , a excepcio\u0301n del u\u0301ltimo factor.",
    "input": "El nu\u0301mero N.",
    "output": "Los factores primos del nu\u0301mero. Cada factor debera estar precedido por \" x \" , a excepcio\u0301n del u\u0301ltimo factor, mira el ejemplo para mayor entendimiento. | | input12| | output2 x 2 x 3| | end| | input147| | output3 x 7 x 7| | end",
    "note": "",
    "topics": [
      "math",
      "implementation",
      "number theory"
    ],
    "id": 2872
  },
  {
    "title": "Cuantos primos hay",
    "url": "https://omegaup.com/arena/problem/Cuantos-primos-hay",
    "history": "Imprimir la cantidad de numeros primos que hay desde 1 hasta N nu\u0301mero. # NotaUn nu\u0301mero primo es aquel que solo es divisible entre el 1 y el mismo.",
    "input": "1 solo nu\u0301mero N.",
    "output": "La cantidad de numeros primos en el conjunto. En caso de que no haya nu\u0301merosprimos imprimir: \" No existen numeros primos en la cantidad ingresada. \" sin las comillas. | | input10| | output4| | end",
    "note": "",
    "topics": [
      "implementation",
      "number theory"
    ],
    "id": 2591
  },
  {
    "title": "Primos gemelos",
    "url": "https://omegaup.com/arena/problem/Primos-gemelos",
    "history": "Se dice que un nu\u0301mero entero positivo es primo si tiene exactamente dos divisores positivos distintos. Los nu\u0301meros primos ma\u0301s pequen\u0303os son 2, 3, 5, 7 y 11. Dos nu\u0301meros primos se dicen gemelos si difieren en 2. Las parejas de nu\u0301meros primos gemelos ma\u0301s pequen\u0303as son ( 3, 5) , ( 5, 7) , ( 11, 13) y ( 17, 19) . Dado un nu\u0301mero entero m podemos encontrar la pareja ( p, q) de nu\u0301meros primos gemelos tal que m \u2264 p < q y que p es tan pequen\u0303o como sea posible. Por ejemplo, si m = 10 entonces p = 11 y q = 13.",
    "input": "La entrada consiste de un entero m que tendra\u0301 un valor entre 1 y 1, 000, 000, 000.",
    "output": "La salida consiste de los dos nu\u0301meros enteros p y q separados por un espacio.",
    "note": "",
    "topics": [
      "implementation",
      "number theory"
    ],
    "id": 2395
  },
  {
    "title": "Primos y mas Primos",
    "url": "https://omegaup.com/arena/problem/PrimosYMasPrimos",
    "history": "Fuente: [ Abierto Nacional de Programacio\u0301n ANTS 2009] ( http: / / www. anpa. com. mx/ ) - RepechajeHistoria\u2014\u2014\u2013Los nu\u0301meros primos fueron estudiados en la antigu\u0308edad por razones filoso\u0301ficas. Hoy en di\u0301a son usados en aplicaciones pra\u0301cticas, especialmente los nu\u0301meros primos grandes son usados en criptografi\u0301a. Hay un nu\u0301mero infinito de primos conocidos, sin embargo, el nu\u0301mero primo ma\u0301s grande que se conoce es un nu\u0301mero primo de Mersenne. Se dice que N es un nu\u0301mero primo de Mersenne cuando N tiene la forma especial 2< sup> p< / sup> # 150; 1, donde P es tambie\u0301n un nu\u0301mero primo. Por ejemplo 7 es un nu\u0301mero primo de Mersenne ya que 2< sup> 3< / sup> # 150; 1 = 7, y tanto 3 como 7 son nu\u0301meros primos. Sin embargo, 2047 no es un nu\u0301mero primo de Mersene porque aunque podemos darle la forma 2< sup> 11< / sup> # 150; 1 = 2047 y 11 es un nu\u0301mero primo, 2047 = 23 * 89",
    "input": "\u2014\u2013Cada caso contiene un nu\u0301mero * N* ( 1 \u2264 * N* \u2264 10< sup> 6< / sup> ) del cual se tiene que decir si es primo de Mersenne.",
    "output": "\u2014\u2014Para cada caso imprime la palabra SI o NO dependiendo si es nu\u0301mero primo de Mersenne o no. Sample Input/ Output\u2014\u2014\u2014\u2014\u2014\u2014- | | input72047| | outputSINO| | end",
    "note": "",
    "topics": [
      "number theory"
    ],
    "id": 2190
  },
  {
    "title": "Semiprimos",
    "url": "https://omegaup.com/arena/problem/semiprimos",
    "history": "Se dice que un nu\u0301mero * n* es semiprimo si y solo si\u0301 es el producto de dos primos, no necesariamente distintos. Ejemplos de estos nu\u0301meros son 4, 6, 9 y 77. # ProblemaEscribe un programa que dado un nu\u0301mero * M* , calcule cuantos semiprimos hay * * estrictamente menores* * que * M*",
    "input": "Li\u0301nea 1: Un nu\u0301mero entero positivo * M* * * Ejemplo: * * | | input30| | end",
    "output": "Li\u0301nea 1: El nu\u0301mero de semiprimos menores que * M* * * Ejemplo: * * | | input10| | end# Li\u0301mites1 \u2264 * M* \u2264 10^ 7",
    "note": "",
    "topics": [
      "number theory"
    ],
    "id": 1600
  },
  {
    "title": "N\u00fameros Libres",
    "url": "https://omegaup.com/arena/problem/Numeros-Libres",
    "history": "# Numeros LibresDados dos nu\u0301meros square- free a y b, determina si su producto tambie\u0301n es square- free. Decimos que un nu\u0301mero x es square- free si para todo primo p, p^ 2 no divide a x. Por ejemplo, 6 es square free porque el cuadrado de ningu\u0301n primo lo divide. En cambio, 12 si\u0301, porque 2^ 2 = 4 si\u0301 lo divide.",
    "input": "En la primera linea contiene un entero N el numero de casos a resolver. En las siguientes N lineas, dos numeros enteros a y b.",
    "output": "Para cada caso de prueba, decir \" SI\" ( sin comillas) si el producto de a y b es square- free, de caso contrario \" NO\" ( sin comillas)",
    "note": "",
    "topics": [
      "implementation",
      "math",
      "number theory"
    ],
    "id": 1301
  },
  {
    "title": "Las Meditaciones de Curiel",
    "url": "https://omegaup.com/arena/problem/Las-Meditaciones-de-Curiel",
    "history": "Curi, absorto en sus meditaciones, llego\u0301 a la que e\u0301l considera una verdad profusamente trascendental: \u201csi en tu canasto de mimbre traes una cantidad prima de mandarinas es ma\u0301s probable que, si una panda de ladrones te asalta, sus miembros se queden insatisfechos al ver que no pueden repartirse el boti\u0301n de forma equitativa\u201d. Como a Curi le interesa minimizar la felicidad de las pandas de ladrones de mandarinas, e\u0301l solo transportara\u0301 en su canasto cantidades primas de mandarinas. Anticipa\u0301ndose a la gran cantidad de fiestas y reuniones a las que planea asistir llevando por obsequio un canasto de mandarinas te pide tu ayuda para determinar si le sera\u0301 posible hacer esto dada la menor y la mayor cantidad de mandarinas que esta\u0301 dispuesto a obsequiar en cada fiesta. # ProblemaEscribe un programa que, dada la cantidad de fiestas a las que planea asistir Curi y la menor y la mayor cantidad de mandarinas que esta\u0301 dispuesto a regalar en cada una de estas, determine, para cada fiesta, cuantos regalos distintos podri\u0301a hacer ( dos regalos se consideran distintos si contienen una cantidad distinta de mandarinas) .",
    "input": "- En la primera li\u0301nea un nu\u0301mero T. La cantidad de fiestas a las que planea asistir Curi. - En cada una de las siguientes T li\u0301neas, dos nu\u0301meros l_ i y r_ i que representan la menor y la mayor cantidad de mandarinas que Curi esta\u0301 dispuesto a obsequiar en la i- e\u0301sima fiesta.",
    "output": "- En las primeras T li\u0301neas un nu\u0301mero x_ i que represente la cantidad de obsequios distintos que Curi podri\u0301a hacer el la i- e\u0301sima fiesta o la frase \" Sera\u0301 mejor que no asistas. \" ( sin comillas) en caso de que no hayan formas en que Curi pueda obsequiar mandarinas.",
    "note": "",
    "topics": [
      "number theory",
      "dp"
    ],
    "id": 15760
  },
  {
    "title": "Prim\u00e9simos primos",
    "url": "https://omegaup.com/arena/problem/Primesimos-primos",
    "history": "Es bien sabido que los Primatitlenses tienen fama de orgullosos. Su mayor orgullo, que los distingue del resto de los nu\u0301meros naturales, es ser nu\u0301meros primos, por supuesto. Pero algo que no es tan bien sabido, es que existe un grupo de Primatitlenses au\u0301n ma\u0301s orgullosos y son la envidia de todo Primatitla\u0301n: los prime\u0301simos primos. Decimos que el k- e\u0301simo nu\u0301mero primo es es un \u201cprime\u0301simo primo\u201d si k es primo. Por ejemplo: El 2 no es un prime\u0301simo primo porque 2 es el 1er primo ( es decir, el \u201c1- e\u0301simo\u201d) pero 1 no es primo. El 3 es un prime\u0301simo primo porque 3 es el 2do primo ( es decir, el \u201c2- e\u0301simo\u201d) y 2 es primo. El 5 es un prime\u0301simo primo porque 5 es el 3er primo ( el \u201c3- e\u0301simo\u201d) y 3 es primo. \u00bfQue\u0301 tan \u201cespeciales\u201d sera\u0301n estos orgullosos primos? O ma\u0301s precisamente, dado un nu\u0301mero N, \u00bfCua\u0301ntos prime\u0301simos primos menores o iguales que N existira\u0301n?",
    "input": "En la primera li\u0301nea el nu\u0301mero N.",
    "output": "En la primera li\u0301nea el nu\u0301mero de prime\u0301simos primos menores que N.",
    "note": "",
    "topics": [
      "number theory"
    ],
    "id": 14630
  },
  {
    "title": "Los Perez y los Garc\u00eda - Sumando Primos Secundaria",
    "url": "https://omegaup.com/arena/problem/Los-Perez-y-los-Garcia-Sumando2",
    "history": "Solicite la descripcio\u0301n de este problema a su profesor.",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "number theory"
    ],
    "id": 14223
  },
  {
    "title": "Los Perez y los Garc\u00eda - Sumando Primos AEDD",
    "url": "https://omegaup.com/arena/problem/Los-Perez-y-los-Garcia-Sumando1",
    "history": "Solicite la descripcio\u0301n de este problema a su profesor.",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "number theory"
    ],
    "id": 14222
  },
  {
    "title": "Sumas de primos",
    "url": "https://omegaup.com/arena/problem/Sumas-de-primos",
    "history": "Se dice que un numero N positivo puede ser igual a la suma de dos numeros primos. Por ejemplo el numero 100 = 47+ 53 pero tambie\u0301n 100= 11+ 89. Co\u0301mo se puede apreciar estos dos u\u0301ltimos nu\u0301meros son el menor posible y el mayor primo posible",
    "input": "Un numero entero N",
    "output": "El menor y el mayor primo posible que sumados sean igual a N",
    "note": "",
    "topics": [
      "number theory",
      "implementation",
      "*special"
    ],
    "id": 12960
  },
  {
    "title": "Primos gemelos",
    "url": "https://omegaup.com/arena/problem/Selectivo2-OIEC-2021-P3-2",
    "history": "U\u0301ltimamente has estado estudiando matema\u0301ticas y te tiene asombrado la conjetura de los primos gemelos, que dice lo siguiente: \" Existe un nu\u0301mero infinito de primos p tales que p+ 2 tambie\u0301n es primo. \" No puedes comprender co\u0301mo es posible que esta aseveracio\u0301n no ha sido demostrada. De hecho, esta\u0301s convencido de que no solamente se cumple para p y p+ 2, sino que se cumple para p y p+ d, para cualquier valor de d par. Una noche, sin poder dormir pensando en esta conjetura, te lanzas a escribir un programa que de todas las parejas de primos con diferencia d, donde d es cualquier entero positivo ( no necesariamente par) .",
    "input": "En la primera li\u0301nea el valor de n. En la segunda li\u0301nea el valor de d ( no necesariamente par) .",
    "output": "Todas las parejas de primos menores a n con diferencia d. Cada li\u0301nea consiste de dos nu\u0301meros separados por un espacio, representando una pareja de nu\u0301meros con diferencia d, con el primer nu\u0301mero siendo el menor de la pareja. La salida debe cumplir que el primer nu\u0301mero de cada li\u0301nea es menor al primer nu\u0301mero de la li\u0301nea siguiente.",
    "note": "Puedes asumir que la salida siempre tendra\u0301 al menos una pareja de primos.",
    "topics": [
      "number theory"
    ],
    "id": 12851
  },
  {
    "title": "Las fracciones de Juanito",
    "url": "https://omegaup.com/arena/problem/Las-fracciones-de-Juanito",
    "history": "Juanito estaba en su clase de matema\u0301ticas cuando vio\u0301 que la profesora utilizo\u0301 la fraccio\u0301n 22/ 7 para aproximar el constante \u03c0. Se le hizo muy curioso ese dato, y al investigar ma\u0301s encontro\u0301 que existe una cantidad infinita de aproximaciones de \u03c0, como 355/ 113 y 245850922/ 78256779. Esto cumple para cualquier nu\u0301mero irracional. Por ejemplo, \u221a( 5) puede ser aproximada como 2889/ 1292 o 219602/ 98209. A Juanito le interesa la secuencia * * S* * de fracciones racionales que converge a un nu\u0301mero irracional x. Esta secuencia empieza con la fraccio\u0301n ma\u0301s cercana a x con denominador de uno, y a partir de este valor se encuentra la siguiente fraccio\u0301n con mayor denominador que esta ma\u0301s cercana a x. Por ejemplo, dado x = \u221a( 5) \u2248 2. 23606, la secuencia seri\u0301a S = ( 2/ 1, 7/ 3, 9/ 4, 20/ 9, . . . ) . Esta secuencia no incluye fracciones como 4/ 2 o 11/ 5 porque estas no esta\u0301n ma\u0301s cercanas a \u221a( 5) que otras fracciones con denominador ma\u0301s pequen\u0303o. Como Juanito es adema\u0301s fana\u0301tico de los nu\u0301meros primos, requiere tu ayuda para encontrar las fracciones de * * S* * con numerador y denominador primo. Sabe que esta secuencia es infinita, asi que solo te pedira\u0301 que encuentres fracciones con denominador menor a 10^ 6. # Li\u0301mites0 < x < 10Para cada fraccio\u0301n A/ B en la salida, 1 \u2264 A \u2264 10^ 71 \u2264 B \u2264 10^ 6",
    "input": "El nu\u0301mero irracional x",
    "output": "Una li\u0301nea por cada fraccio\u0301n prima, donde se debe imprimir el numerador seguido por un signo * * / * * y el denominador de la fraccio\u0301n. Las fracciones deben ir ordenadas de menor denominador a mayor denominador. Se puede garantizar que para todos los casos de prueba, se tendra\u0301 que imprimir por lo menos una fraccio\u0301n",
    "note": "",
    "topics": [
      "number theory"
    ],
    "id": 12379
  },
  {
    "title": "Abigael vs Daniel",
    "url": "https://omegaup.com/arena/problem/Abigael-vs-Daniel",
    "history": "# Abigael vs DanielLos oli\u0301mpicos Daniel y Abigael crearon un juego para pasar el rato mientras termina la cuarentena. El objetivo del juego es elegir el nu\u0301mero con la mayor cantidad de factores primos diferentes que sea menor o igual a N. Durante una partida donde N era 1000, Daniel eligio\u0301 el nu\u0301mero 210. Confiado de su suerte, Abigael eligio\u0301 el 999 pensando que ese nu\u0301mero le hari\u0301a ganar. Sin embargo, despue\u0301s de hacer los ca\u0301lculos matema\u0301ticos, el ganador fue Daniel ya que 210 tiene 4 factores primos ( 2, 3, 5 y 7) mientras que 999 solo tiene 2 factores primos ( 3 y 37) . Despue\u0301s de muchas horas, se dieron cuenta que determinar quie\u0301n era el ganador les tomaba demasiado tiempo y eso no era divertido. # ProblemaAyuda a Abigael y Daniel a saber quien fue el ganador del juego.",
    "input": "Dos nu\u0301meros d y a que indican el nu\u0301mero que eligio\u0301 Daniel y Abigael, respectivamente.",
    "output": "En la primer li\u0301nea, el nombre del ganador: ` Daniel` , ` Abigael` o ` Empate` . En la segunda li\u0301nea la lista de factores primos del nu\u0301mero que eligio\u0301 Daniel, ordenados de menor a mayor. En la tercera li\u0301nea la lista de factores primos del nu\u0301mero que eligio\u0301 Abigael, ordenados de menor a mayor. | | input210 999| | outputDaniel2 3 5 73 37| | input70 30| | outputEmpate2 5 72 3 5| | input4897 3216843| | outputAbigael59 833 7 51061| | end# Li\u0301mites2 < = N < = 10^ 18",
    "note": "",
    "topics": [
      "number theory"
    ],
    "id": 11613
  },
  {
    "title": "El k-\u00e9simo n\u00famero primo",
    "url": "https://omegaup.com/arena/problem/El-k-esimo-numero-primo",
    "history": "Escribe un programa que calcule el K- e\u0301simo nu\u0301mero primo.",
    "input": "Un entero K. Puedes suponer que 1 \u2264 K \u2264 1000.",
    "output": "Un entero que es el K- e\u0301simo nu\u0301mero primo.",
    "note": "",
    "topics": [
      "number theory",
      "implementation"
    ],
    "id": 7100
  },
  {
    "title": "Primos menores a n",
    "url": "https://omegaup.com/arena/problem/Primos-menores-a-n",
    "history": "Hacer un programa que muestre los primeros N nu\u0301meros primos.",
    "input": "Un entero N",
    "output": "Los nu\u0301meros primos menores a N separados por un salto de linea.",
    "note": "",
    "topics": [
      "implementation",
      "math",
      "number theory"
    ],
    "id": 6046
  },
  {
    "title": "\u00bfD\u00f3nde qued\u00f3 el primo?",
    "url": "https://omegaup.com/arena/problem/findprime",
    "history": "Se le conoce como * nu\u0301mero primo* a todo entero mayor a 1 que no posee divisoressalvo los triviales ( 1 y el mismo nu\u0301mero) . Una propiedad tan simple, pero que asu vez les dota de importancia en diversos campos como la criptografi\u0301a ycombinatoria. Encontrar primos nunca ha sido trivial, pero la llegada de las computadoras loha vuelto ma\u0301s sencillo. \u00bfPor que\u0301 no averiguas lo sencillo que es escribiendoun programa que dado un nu\u0301mero n calcule el n- e\u0301simo nu\u0301mero primo ( empezandopor el 2) ?",
    "input": "Recibira\u0301s de entrada esta\u0301ndar una sola li\u0301nea, la cual contiene el nu\u0301mero enteron.",
    "output": "Imprime en salida enta\u0301ndar el n- e\u0301simo nu\u0301mero primo.",
    "note": "",
    "topics": [
      "implementation",
      "number theory",
      "brute force"
    ],
    "id": 4062
  },
  {
    "title": "N\u00fameros Primos",
    "url": "https://omegaup.com/arena/problem/Numeros-primos",
    "history": "Los nu\u0301meros primos tienen una gran utilidad en la seguridad y proteccio\u0301n de datos, entre otras muchas aplicaciones. Un nu\u0301mero primo es un nu\u0301mero entero mayor que 1 que u\u0301nicamente puede ser dividido por el mismo nu\u0301mero y la unidad. Los nu\u0301meros primos menores que 100 son los siguientes: 2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89 y 97. # ProblemaEscribe un programa que lea dos enteros A y B, donde 0 < A < B < 1000000000 y se generen todos los nu\u0301meros primos en forma ascendente, que se encuentren en dicho intervalo. En este problema se pretende que escribas un algoritmo con algunas optimizaciones ba\u0301sicas, por lo que el tiempo de ejecucio\u0301n debe satisfacer las condiciones establecidas. ( Sugerencia: al probar los divisores de un nu\u0301mero para determinar si es primo o no, no es necesario considerar a todos los nu\u0301meros menores que este) .",
    "input": "En la primera linea dos valores A y B enteros, separados por un espacio; que representen el li\u0301mite inferior y el li\u0301mite superior del intervalo en el que se van a generar nu\u0301meros primos.",
    "output": "Una secuencia de todos los nu\u0301meros primos que se encuentren en el intervalo cerrado [ A, B] ordenados ascendentemente y separados por un espacio.",
    "note": "",
    "topics": [
      "number theory"
    ],
    "id": 2589
  },
  {
    "title": "Esto no es un simulacro",
    "url": "https://omegaup.com/arena/problem/EstoNoEsUnSimulacro",
    "history": "Chicago 9: 36 a. m. Suenan las alarmas de uno de los rascacielos mas altos de la ciudad. El sistema electrico comienza a fallar, todo es confusion y el panico se apodera de la gente. Una bomba exploto en los primeros pisos del edificio y parece que este va a colapsar, la unica manera de salir de el es saltando por las ventanas. Los bomberos, policias y equipos de rescate hacen lo imposible por salvar vidas, pero son demasiados para salvarlos a todos. Surge un plan. Salvar unicamente a todas aquellas personas que se lancen desde un piso * n* , donde la sucesion de * 1* hasta * n* contenga una cantidad de numeros primos que sea multiplo del piso donde se lanzo. Parece confuso, pero aqui el ejemplo: Una persona se lanza del piso 27, en la sucesion de 1 a 27 ( incluyendo 1 y 27) hay 9 numeros primos, 9 es multiplo de 27, entonces la gente de ese piso sera salvada. Tu deberas decir a que gente salvar, asi como decir el numero de sobrevivientes y personas que perdieron la vida. La primera linea de entrada sera un numero * P* con el total de casos que debes evaluar, seguido de * P* lineas donde cada una tendra el numero de personas que hay en ese piso y el numero de piso donde se encuentran separados por un espacio. El numero de piso sera 0 < * n* < 1000. En la salida deberas imprimir \" * SERA SALVADA* \" o \" * NO LA SALVEN* \" de acuerdo sea el caso. Despues de lo anterior deberas imprimir el numero de sobrevivientes y en la siguiente linea el numero de decesos. | | input6256 27341 100321 915 7152 98253 67| | outputSERA SALVADASERA SALVADANO LA SALVENNO LA SALVENNO LA SALVENNO LA SALVEN597741| | end",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "number theory"
    ],
    "id": 2209
  },
  {
    "title": "Primos",
    "url": "https://omegaup.com/arena/problem/conacup_primos",
    "history": "# # PrimosHay problemas que ni son complicados, ni necesitan explicaciones complejas. Digamos que en uno de esos momentos de ocio en los que la gente se pone a pensar en la inmortalidad del cangrejo a los programadores nos da por resolver el siguiente tipo de problemas por el puro gusto de hacerlo: alguien nos da una lista de N nu\u0301meros y pregunta cua\u0301ntos nu\u0301meros primos hay entre 1 y cada nu\u0301mero de dicho listado. Claro que lo menos que podemos hacer es escribir un programa que responda dicha pregunta en todos los casos. # Problema: En la primera li\u0301nea un numero 1 < = N < = 5, 000 a continuacio\u0301n N li\u0301neas con un numero 1 < = K < = 50, 000, 000 en cada li\u0301nea. Debes regresar N li\u0301neas en cada una un nu\u0301mero indicando cua\u0301ntos nu\u0301meros primos positivos hay menores a K. En el 20",
    "input": "21020",
    "output": "48# Nota: En matema\u0301ticas, un nu\u0301mero primo es un nu\u0301mero natural mayor que 1 que tiene u\u0301nicamente dos divisores distintos: e\u0301l mismo y el 1.",
    "note": "",
    "topics": [
      "number theory",
      "implementation",
      "divide and conquer",
      "data structures",
      "math"
    ],
    "id": 619
  },
  {
    "title": "La AMDM",
    "url": "https://omegaup.com/arena/problem/La-AMDM",
    "history": "La Asociacio\u0301n Mundial Del Mar ( AMDM) quiere darse a conocer al pu\u0301blico y para ganar notoriedad esta\u0301 preparando un show mari\u0301timo en el cua\u0301l van a realizar juegos competitivos y como premio van a regalar muchas lanchas. Asistira\u0301 gente de todos los lugares del mundo, asi\u0301 que para mantener una buena organizacio\u0301n, el evento se realizara\u0301 a la costa de una playa, teniendo cada grupo de personas su lugar en la playa. # ProblemaConcretamente, a lo largo de la playa hay una li\u0301nea de N grupos de personas, cada grupo tiene una cantidad de personas distinta. Durante el di\u0301a, ira\u0301n armando juegos, para lo cua\u0301l necesitara\u0301n seleccionar distintos grupos de personas a lo largo de la playa para competir. Especi\u0301ficamente, cada vez que organicen un juego, sonara\u0301n la campana y tomara\u0301n una * * seccio\u0301n* * de la li\u0301nea de N grupos de personas, comenzando en el grupo l y terminando en el grupo r, de tal forma que todas las personas que este\u0301n en un grupo i tal que l \u2264 i \u2264 r sera\u0301n participantes. Durante el juego se van a tomar a todas las personas participantes para formar equipos, el problema es que la AMDM no sabe co\u0301mo repartir los equipos de forma que sea justa y no haya estafas, por lo que cada vez que armen un juego necesitan que les respondas la pregunta: \u00bfCua\u0301ntos taman\u0303os posibles de equipo podemos formar, de forma que cada equipo tenga la misma cantidad de personas? Por ejemplo, si los grupos elegidos para competir son conformados por [ 3, 7, 6] * ( un grupo de 3 personas, un grupo de 7, y un grupo de 6) * entonces tenemos 16 personas en total. Tenemos 4 posibles taman\u0303os de equipo. * 16 equipos de 1* 8 equipos de 2* 4 equipos de 4* 2 equipos de 8A lo largo del di\u0301a, habra\u0301 gente que se vaya y gente que llegue, cada vez que entre o salga gente del show, sonara\u0301 la campana, y a las personas que lleguen, se les asignara\u0301 un grupo. En caso de que se vayan personas, se avisara\u0301 de que\u0301 grupo fueron.",
    "input": "En la primera li\u0301nea dos enteros N, Q siendo la cantidad de grupos de personas a lo largo de la playa y la cantidad de veces que sonara\u0301 la campana * ( indicando ya sea el inicio de un juego o que se fue o llego\u0301 gente del show) * respectivamente. En la segunda li\u0301nea N enteros, siendo la cantidad inicial de gente que hay en cada grupo. En las pro\u0301ximas Q li\u0301neas, tres enteros x, l, r* Si x es 1, significa que inicia un juego, entonces l y r representan los grupos en los que inicia y termina el segmento seleccionado, respectivamente. * Si x es 2, significa que llego\u0301 o se fue gente, l indicando el grupo, y r la cantidad de gente * ( si r es positivo, llego\u0301 gente, si r es negativo, se fue gente) *",
    "output": "Para cada juego, un entero indicando la cantidad de taman\u0303os de equipo posibles.",
    "note": "",
    "topics": [
      "number theory"
    ],
    "id": 16293
  },
  {
    "title": "Minimo Comun Multiplo por factorizacion en primos",
    "url": "https://omegaup.com/arena/problem/Minimo-Comun-Multiplo-por-factor",
    "history": "El profesor Marti\u0301n ( [ Marti\u0301n Math- Teacher] [ 1] ) nos dejo de tarea calcular el Mi\u0301nimo Comu\u0301n Mu\u0301ltiplo de dos nu\u0301meros de a lo ma\u0301s 3 cifras realizando la factorizacio\u0301n en primos, me puedes ayudar a hacer un programa para verificar si mis respuestas son correctas. El Mi\u0301nimo Comu\u0301n Mu\u0301ltiplo ( mcm) es el nu\u0301mero positivo ma\u0301s pequen\u0303o que es mu\u0301ltiplo de dos o ma\u0301s nu\u0301meros. En la siguiente imagen se muestra un ejemplo del procedimiento y la salida esperada. ! [ Minimo Comun Multiplo] ( ejemplo. jpg)",
    "input": "Dos nu\u0301meros enteros de a lo ma\u0301s tres cifras y mayores a 1.",
    "output": "La factorizacio\u0301n en primos y el Minimo Comun Multiplo con el formato que se muestra a continuacio\u0301n: 128 192 | 264 96 | 232 48 | 216 24 | 28 12 | 24 6 | 22 3 | 21 3 | 31 1 | Minimo Comun Multiplo = 384",
    "note": "",
    "topics": [
      "number theory"
    ],
    "id": 15601
  },
  {
    "title": "Factores primos tarea",
    "url": "https://omegaup.com/arena/problem/Factores-primos-tarea",
    "history": "En la escuela me dejaron calcular los factores primos de varios nu\u0301meros enteros, ya es noche y son varios ejercicios, quiero llorar, \u00bfme puedes ayudar a hacer un programa que, dado un nu\u0301mero n me diga cuales son sus factores primos?",
    "input": "Un nu\u0301mero entero n.",
    "output": "Los factores primos del nu\u0301mero n, uno en cada li\u0301nea.",
    "note": "",
    "topics": [
      "number theory"
    ],
    "id": 15348
  },
  {
    "title": "Elecciones primales",
    "url": "https://omegaup.com/arena/problem/Elecciones-primales",
    "history": "Las elecciones para gobernador del Estado soberano de Primatitla\u0301n se acercan y los habitantes ( todos ellos nu\u0301meros primos) se preparan para emitir sus votos. Por ley, todos los primos tienen derecho a ser votados, por lo que todos los primos se consideran candidatos. Cada habitante puede votar por cero o ma\u0301s primos candidatos escribiendo en su boleta un nu\u0301mero positivo que representa el conjunto de candidatos por los que desea votar. Por ejemplo, si un habitante escribe en su boleta \" 1\" , eso significa que desea anular su voto, y ningu\u0301n primo obtendra\u0301 ningu\u0301n voto de esa boleta. Si un habitante escribe en su boleta \" 6\" , eso significa que desea votar por los primos candidatos \" 2\" y \" 3\" , ya que 6= 2* 3. Cada habitante puede votar por tantos primos candidatos como desee pero, para evitar fraudes, cada boleta solamente asignara\u0301 a lo ma\u0301s un voto a cada candidato. Por ejemplo, si uno de los habitantes escribe \" 120\" en su boleta, entonces los primos candidatos 2, 3 y 5 recibiran cada uno un solo voto a pesar de que 120= 2* 2* 2* 3* 5 ( el candidato 2 solamente recibira\u0301 un voto, no tres) . El Instituto Factorizador Electoral ( IFE) es el encargado de contabilizar los votos y determinar al candidato primo ganador de las elecciones. Ayuda al IFE a determinar al ganador de la eleccio\u0301n.",
    "input": "En la primera li\u0301nea el nu\u0301mero V de votos que fueron emitidos durante la eleccio\u0301n. En la segunda li\u0301nea, V enteros positivos { v_ i } , separados por espacio que representan los V votos emitidos.",
    "output": "En la primera li\u0301nea, el primo ganador de la eleccio\u0301n y el nu\u0301mero de votos que obtuvo, separados por un espacio ( se garantiza que existira\u0301 exactamente un primo con la mayor cantidad de votos) .",
    "note": "",
    "topics": [
      "number theory"
    ],
    "id": 14593
  },
  {
    "title": "Drinking Game",
    "url": "https://omegaup.com/arena/problem/Drinking-Game",
    "history": "In the way back home from the World Finals, Mr. Ed and his pals are visiting Madrid, but Mr. Ed is actually very tired and decided to rest a few days, so this problem is not about him. Ethan and the gang are going to drink some shots in the Gran Via; there, they have a good time drinking and talking about monsters and other terrifying adventures. After several minutes, Ethan came up with a fun drinking game he heard about at the World Finals called \u201cCoprime Shots\u201d, he explains: \u201cEverybody has n piles of empty shot glasses, numbered from 1 to n, the i- th pile has g_ i glasses piled up. The objective of the game is to add or remove an arbitrary number of glasses to some of your piles in a way such that, for any pair of distinct piles ( i, j) in the set G ( result of adding and removing glasses to the original n piles) , it holds that gcd\u2061( G_ i, G_ j) = 1. Sounds cool, huh? Anyway, you better play smart, because for every single shot glass you add or remove, you have to fill it up and drink! \u201dBeing a decent programmer, you have no plans on getting wasted tonight, so you decided to minimize the number of shots you have to take in order to win the game.",
    "input": "The input will contain several test cases. The first line of each test contains an integer n: the number of piles in the game ( 1 \u2264 n \u2264 100) . The next line contains n integers: the i- th integer represents g_ i, the number of shot glasses in the i- th pile ( 1 \u2264 g_ i \u2264 20) . The last test case is followed by a single line containing 1 zero.",
    "output": "For each test case, print n positive integers separated by a single space, describing a winning configuration of piles that requires the minimum number of additions and removals to accomplish. Piles should be printed in the same order as in the input. See details in the format below. If there are multiples solutions to a test, any one of them will be accepted. # Example| | input31 2 352 4 6 9 100| | outputCase # 1: 1 2 3Case # 2: 1 4 7 9 11| | end",
    "note": "",
    "topics": [
      "number theory",
      "dp"
    ],
    "id": 3020
  },
  {
    "title": "Suma Divisores",
    "url": "https://omegaup.com/arena/problem/Suma-Divisores",
    "history": "Dado N un numero natural ( 1, 2, 3, . . . ) tu tarea es obtener la suma de los divisores propios de N, los divisores propios de un numero son todos aquellos naturales que dividen a este nu\u0301mero, excepto el numero mismo. Por ejemplo los divisores propios del 6 son 1, 2 y 3.",
    "input": "Un numero natural N con 1\u2264 N \u2264 10^ 18",
    "output": "Un solo entero, la suma de los divisores propios de N",
    "note": "",
    "topics": [
      "divide and conquer",
      "number theory"
    ],
    "id": 2625
  },
  {
    "title": "Factores comunes",
    "url": "https://omegaup.com/arena/problem/factorescomunes",
    "history": "# Factores comunesEscribe un programa que dados dos enteros positivos A, B, imprima el nu\u0301mero de divisores tienen en comu\u0301n.",
    "input": "En la primera linea, los dos enteros A, B, separados por un espacio.",
    "output": "En la primera linea imprime el nu\u0301mero de factores que A y B tienen en comu\u0301n.",
    "note": "",
    "topics": [
      "implementation",
      "number theory"
    ],
    "id": 171
  },
  {
    "title": "Subprimos",
    "url": "https://omegaup.com/arena/problem/subprimos",
    "history": "La factorizacio\u0301n en primos de un nu\u0301mero X es la lista de nu\u0301meros primos que se multiplican juntos para formar a X. Por ejemplo, la factorizacio\u0301n prima de 12 es 2 \u00d7 2 \u00d7 3. Nota que 1 no es un nu\u0301mero primo. Un subprimo es un nu\u0301mero cuya factorizacio\u0301n prima contiene cantidad prima de elementos. Por ejemplo, 12 es un subprimo porque su factorizacio\u0301n prima contiene 3 elementos y 3 es un nu\u0301mero primo. Dado 2 enteros A y B, regresa el nu\u0301mero de subprimos que existen entre A y B, inclusive.",
    "input": "Dos enteros A y B. 2 \u2264 A \u2264 100000 y A \u2264 B \u2264 100000.",
    "output": "El nu\u0301mero de subprimos entre los nu\u0301meros dados, inclusive",
    "note": "",
    "topics": [
      "hashing",
      "number theory"
    ],
    "id": 90
  },
  {
    "title": "El n\u00famero de Tapia y su cobaya",
    "url": "https://omegaup.com/arena/problem/OFMI-2022-Numero-Especial",
    "history": "Tapia y su cobaya son matema\u0301ticos y como todo matema\u0301tico tienen una definicio\u0301n curiosa para nu\u0301meros especiales. En particular, dados 3 nu\u0301meros n, m y k, Tapia y su cobaya afirman que el n- e\u0301simo nu\u0301mero empezando a contar en m que * * no* * sea divisible por k es un nu\u0301mero especial. # ProblemaDado los valores de n, m y k, encuentra el nu\u0301mero especial de Tapia y su cobaya.",
    "input": "Debera\u0301s implementar una funcio\u0301n ` int numeroEspecial( int n, int m, int k) ` que reciba los tres enteros n, m y k como para\u0301metros y regrese el nu\u0301mero especial de Tapia y su cobaya, este es, el n- e\u0301simo nu\u0301mero a partir de m que no sea divisible por k. # Ejemplos| | examplefilesample| | description6 es el primer nu\u0301mero no divisible por 7. 8 es el segundo. 9 es el tercero y por lo tanto la respuesta. | | end# Li\u0301mites- 1 \u2264 n, m, k \u2264 10^ 15- k > 1# Subtareas- ( 20 puntos) : n, m, k 100- ( 40 puntos) : m = 1- ( 40 puntos) : Sin consideraciones adicionales. # Experimentacio\u0301nlibinteractive: downloadEl evaluador de prueba recibe el archivo ` sample. in` , donde la primera li\u0301nea debe contener tres enteros n, m y k, que sera\u0301n los para\u0301metros de la funcio\u0301n ` numeroEspecial` . _ IMPORTANTE: _ El evaluador de prueba y el evaluador final que se usara\u0301 para calificar tu solucio\u0301n son diferentes. El evaluador de prueba tiene la depuracio\u0301n de tu solucio\u0301n y puede implementar algunas de sus funciones de distinta manera.",
    "output": "",
    "note": "",
    "topics": [
      "number theory"
    ],
    "id": 15590
  },
  {
    "title": "Mensajes interceptados",
    "url": "https://omegaup.com/arena/problem/Mensajes-interceptados",
    "history": "Como persona encargada del departamento de logi\u0301stica del servicio secreto, te dieron la misio\u0301n de detectar si los mensajes de informacio\u0301n confidencial de tu pai\u0301s han sido interceptados a la mitad del camino por algu\u0301n espi\u0301a. Cada mensajes se codifica a un nu\u0301mero natural de N di\u0301gitos y es enviado por ondas de radio en una frecuencia especi\u0301fica. Para ayudarte con tu tarea, todos los mensajes esta\u0301n codificados como nu\u0301meros divisible entre cuatro, y si son interceptados a medio camino, e\u0301stos cambiara\u0301n automa\u0301ticamente su u\u0301ltimo di\u0301gito para dejar de ser divisibles entre cuatro. Tu orden es contar cua\u0301ntos de los M mensajes que se recibieron en este di\u0301a han sido interceptados, dados los nu\u0301meros naturales en los que se codificaron.",
    "input": "En la primera li\u0301nea dos enteros N y M que representan, respectivamente, el nu\u0301mero de di\u0301gitos que tendra\u0301n los mensajes codificados como nu\u0301meros naturales y el nu\u0301mero de mensajes del di\u0301a. Posteriormente se dan M enteros que representan la codificacio\u0301n que recibes de cada uno de los mensajes.",
    "output": "Un entero que representa el nu\u0301mero de mensajes que han sido interceptados en el di\u0301a.",
    "note": "",
    "topics": [
      "number theory"
    ],
    "id": 15516
  },
  {
    "title": "Divisibilidad por 3",
    "url": "https://omegaup.com/arena/problem/Divisibilidad-por-3",
    "history": "El nu\u0301mero 3 es el nu\u0301mero favorito de Sophia. Siempre que encuentra un nu\u0301mero quiere saber si es divisible por 3. Ahora esta\u0301 aprendiendo a programar y quiere escribir un programa que le diga si dado un nu\u0301mero este es divisible por 3 o no.",
    "input": "Un entero n.",
    "output": "Una solo li\u0301nea con la palabra Si si n es divisible por 3 o No si no es divisible.",
    "note": "",
    "topics": [
      "number theory"
    ],
    "id": 15470
  },
  {
    "title": "parImpar2",
    "url": "https://omegaup.com/arena/problem/parImpar2",
    "history": "Desarrolle un programa en lenguaje C/ C+ + que dado un nu\u0301mero entero determine si se trata de un nu\u0301mero PAR o IMPAR.",
    "input": "El programa debera\u0301 recibir por la entrada esta\u0301ndar un valor entero a.",
    "output": "El programa debera\u0301 imprimir PAR, si se trata de un nu\u0301mero PAR e IMPAR en otro caso.",
    "note": "",
    "topics": [
      "number theory"
    ],
    "id": 13233
  },
  {
    "title": "99",
    "url": "https://omegaup.com/arena/problem/99",
    "history": "# EnunciadoPaulina tiene una extran\u0303a obsesio\u0301n por el nu\u0301mero 99. Le gusta coleccionar objetos que tengan este nu\u0301mero, y recientemente se incursiono\u0301 en un nuevo tipo de coleccionismo: el de los mu\u0301ltiplos de 99. Actualmente, su coleccio\u0301n consiste de un solo nu\u0301mero, el 99, pero esta\u0301 planeando en incorporar ma\u0301s. Hoy se encuentra en la tienda de nu\u0301meros, pero necesita tu ayuda para determinar cua\u0301les de los nu\u0301meros que tienen disponibles son mu\u0301ltiplos de 99.",
    "input": "Un entero n, que indica el total de nu\u0301meros que tienen a la venta en la tienda, seguido de n enteros a_ 1, a_ 2, . . . a_ n, los nu\u0301meros en cuestio\u0301n.",
    "output": "En total n li\u0301neas, una para cada entero. En la li\u0301nea i debera\u0301s de imprimir * * Me lo llevo* * si a_ i sirve para la coleccio\u0301n de Paulina, o * * No gracias* * en caso de que no.",
    "note": "",
    "topics": [
      "number theory"
    ],
    "id": 12984
  },
  {
    "title": "Portal peninsular",
    "url": "https://omegaup.com/arena/problem/Portal-peninsular",
    "history": "# # Prologo de la historiaEl * * Malvado Robot OMI* * ( Odia Mayas Inteligentes) quiere destruir la peni\u0301nsula de Yucata\u0301n, debido a que no lo dejaron participar en ninguna competicio\u0301n estatal de informa\u0301tica por ser un robot. Con toda esta rabia contenida, el quiere acabar con todos los competidores mayas de informa\u0301tica sin importar el costo ( * \" mayas\" * porque se comparte la cultura de procedencia) . Los programadores de Quintana Roo descubrieron sus malvados planes pero no pueden acabar con el Malvado Robot OMI. Este robot esta programado en Maya+ + , un lenguaje antiguo de los primeros programadores que muy pocos conocen. Por lo tanto, decidieron unir fuerzas con los programadores de Yucata\u0301n. Para ello necesitan crear un portal para viajar al estado de Yucata\u0301n y derrotar al Malvado Robot OMI, este portal solo se puede crear con unas piedras preciosas que vende un Chaman. # # HistoriaNecesitan n piedras preciosas para crear el portal, pero el Chaman solo vende paquetes de hasta k piedras, es decir, paquetes de 1 piedra, 2 piedras, 3 piedras, . . . , k- 1 piedras y k piedras. El Chaman tiene una condicio\u0301n, solo te puede vender un tipo de paquete, es decir, si compran el paquete de 2 piedras ya no pueden comprar otro paquete de diferente cantidad de piedras. La tienda del Chaman y el lugar donde se creara\u0301 el portal esta\u0301n separados. Adema\u0301s, los programadores de Quintana Roo solo pueden llevar un paquete por vuelta. Para no tardar tanto quieren minimizar el nu\u0301mero de vueltas y que no sobre ninguna piedra. # ProblemaDado el nu\u0301mero de piedras que se necesitan para crear el portal n y la cantidad de diferentes paquetes k, decir el mi\u0301nimo nu\u0301mero de vueltas que deben dar los programadores de Quintana Roo.",
    "input": "Dos enteros n y k, el nu\u0301mero de piedras que necesita el portal y el li\u0301mite de piedras en paquetes que vende el Chaman.",
    "output": "Dos enteros a y b, que es el nu\u0301mero de piedras que tiene el paquete y el menor nu\u0301mero de vueltas que tienen que hacer los informaticos de Quintana Roo. | | input8 7| | output4 2| | input6 10| | output6 1| | input999999733 999999732| | output1 999999733| | end# Li\u0301mites* * Para el 25",
    "note": "",
    "topics": [
      "implementation",
      "number theory"
    ],
    "id": 11594
  },
  {
    "title": "MCD - Primos",
    "url": "https://omegaup.com/arena/problem/MCD---Primos",
    "history": "",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "number theory"
    ],
    "id": 4957
  }
]