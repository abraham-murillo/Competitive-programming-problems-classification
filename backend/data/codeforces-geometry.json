[
  {
    "title": "Parallel Projection",
    "url": "https://codeforces.com/problemset/problem/1781/A",
    "history": "Vika' s house has a room in a shape of a rectangular parallelepiped ( also known as a rectangular cuboid) . Its floor is a rectangle of size w \u00d7 d , and the ceiling is right above at the constant height of h . Let' s introduce a coordinate system on the floor so that its corners are at points ( 0, 0) , ( w, 0) , ( w, d) , and ( 0, d) . A laptop is standing on the floor at point ( a, b) . A projector is hanging on the ceiling right above point ( f, g) . Vika wants to connect the laptop and the projector with a cable in such a way that the cable always goes along the walls, ceiling, or floor ( i. e. does not go inside the cuboid) . Additionally, the cable should always run parallel to one of the cuboid' s edges ( i. e. it can not go diagonally) . What is the minimum length of a cable that can connect the laptop to the projector? Illustration for the first test case. One of the optimal ways to put the cable is shown in green.",
    "input": "Each test contains multiple test cases. The first line contains the number of test cases t ( 1 \u2264 t \u2264 10^ 4 ) . The description of the test cases follows. The first line of each test case contains three integers w , d , and h ( 2 \u2264 w, d, h \u2264 1000 ) \u2014 the size of the room. The second line contains four integers a , b , f , g ( 0 < a, f < w ; 0 < b, g < d ) : the laptop is located on the floor at point ( a, b) , while the projector is hanging on the ceiling right above point ( f, g) .",
    "output": "For each test case, print a single integer \u2014 the minimum length of the cable connecting the laptop and the projector that runs only along the walls, floor, and ceiling parallel to cuboid' s edges.",
    "note": "The picture in the statement illustrates the first test case.",
    "topics": [
      "geometry",
      "math"
    ],
    "id": "1781A"
  },
  {
    "title": "Chemistry Lab",
    "url": "https://codeforces.com/problemset/problem/1765/F",
    "history": "Monocarp is planning on opening a chemistry lab. During the first month, he' s going to distribute solutions of a certain acid. First, he will sign some contracts with a local chemistry factory. Each contract provides Monocarp with an unlimited supply of some solution of the same acid. The factory provides n contract options, numbered from 1 to n . The i - th solution has a concentration of x_ i% , the contract costs w_ i burles, and Monocarp will be able to sell it for c_ i burles per liter. Monocarp is expecting k customers during the first month. Each customer will buy a liter of a y% - solution, where y is a real number chosen uniformly at random from 0 to 100 independently for each customer. More formally, the probability of number y being less than or equal to some t is P( y \u2264 t) = t/ 100 . Monocarp can mix the solution that he signed the contracts with the factory for, at any ratio. More formally, if he has contracts for m solutions with concentrations x_ 1, x_ 2, . . . , x_ m , then, for these solutions, he picks their volumes a_ 1, a_ 2, . . . , a_ m so that \u2211_ i= 1^ m a_ i = 1 ( exactly 1 since each customer wants exactly one liter of a certain solution) . The concentration of the resulting solution is \u2211_ i= 1^ m x_ i \u00b7 a_ i . The price of the resulting solution is \u2211_ i= 1^ m c_ i \u00b7 a_ i . If Monocarp can obtain a solution of concentration y% , then he will do it while maximizing its price ( the cost for the customer) . Otherwise, the customer leaves without buying anything, and the price is considered equal to 0 . Monocarp wants to sign some contracts with a factory ( possibly, none or all of them) so that the expected profit is maximized \u2014 the expected total price of the sold solutions for all k customers minus the total cost of signing the contracts from the factory. Print the maximum expected profit Monocarp can achieve.",
    "input": "The first line contains two integers n and k ( 1 \u2264 n \u2264 5000 ; 1 \u2264 k \u2264 10^ 5 ) \u2014 the number of contracts the factory provides and the number of customers. The i - th of the next n lines contains three integers x_ i, w_ i and c_ i ( 0 \u2264 x_ i \u2264 100 ; 1 \u2264 w_ i \u2264 10^ 9 ; 1 \u2264 c_ i \u2264 10^ 5 ) \u2014 the concentration of the solution, the cost of the contract and the cost per liter for the customer, for the i - th contract.",
    "output": "Print a single real number \u2014 the maximum expected profit Monocarp can achieve. Your answer is considered correct if its absolute or relative error does not exceed 10^ - 6 . Formally, let your answer be a , and the jury' s answer be b . Your answer is accepted if and only if | a - b| / max( 1, | b| ) \u2264 10^ - 6 .",
    "note": "",
    "topics": [
      "dp",
      "geometry",
      "probabilities"
    ],
    "id": "1765F"
  },
  {
    "title": "Olympiad Training",
    "url": "https://codeforces.com/problemset/problem/1746/G",
    "history": "Anton decided to get ready for an Olympiad in Informatics. Ilya prepared n tasks for him to solve. It is possible to submit the solution for the i - th task in the first d_ i days only. Anton cannot solve more than one task a day. Ilya estimated the usefulness of the i - th tasks as r_ i and divided the tasks into three topics, the topic of the i - th task is type_ i . Anton wants to solve exactly a tasks on the first topic, b tasks on the second topic and c tasks on the third topic. Tell Anton if it is possible to do so, and if it is, calculate the maximum total usefulness of the tasks he may solve.",
    "input": "The first line of input contains a single integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. The first line of each test case contains four integers n, a, b, c ( 1 \u2264 n \u2264 10^ 5 , 0 \u2264 a, b, c \u2264 n ) . The following n lines contain three integers each \u2014 r_ i, type_ i, d_ i ( 0 \u2264 r_ i \u2264 10^ 9 , 1 \u2264 type_ i \u2264 3 , 1 \u2264 d_ i \u2264 n ) . The sum of n over all test cases does not exceed 10^ 5 .",
    "output": "For each test case print - 1 if Anton cannot reach his goal; otherwise, print the maximum usefulness of the tasks he will solve.",
    "note": "In the first test case from the sample test Anton can solve tasks 2 and 4 . In the second test case from the sample test it is impossible to fulfill Anton' s wish. In the third test case from the sample test it is optimal to solve tasks 2 , 3 and 4 . In the last test case from the sample test it is optimal to solve tasks 1 , 2 and 4 .",
    "topics": [
      "binary search",
      "data structures",
      "dp",
      "flows",
      "geometry",
      "implementation",
      "sortings"
    ],
    "id": "1746G"
  },
  {
    "title": "Arranging Crystal Balls",
    "url": "https://codeforces.com/problemset/problem/1740/I",
    "history": "In the world of Compfestnesia, Pak Chanek discovers a secret underground dungeon. Inside it, there is a treasure chest that is surrounded by n statues that are arranged in a circular manner. The statues are numbered from 0 to n- 1 with statue i being to the left of statue i+ 1 and statue n- 1 being to the left of statue 0 . Pak Chanek observes that each statue is holding a crystal ball with an integer between 0 and m- 1 inclusive. Let' s say the integer in the crystal ball of statue i is a_ i . The dungeon provides instructions that every integer in the crystal balls must be 0 in order to open the treasure chest. To achieve that, Pak Chanek is given an integer k , and he can do zero or more operations. In a single operation, Pak Chanek does the following: Choose exactly k consecutive statues. In other words, choose the statues p, ( p+ 1) n, ( p+ 2) n, ( p+ 3) n, . . . , ( p+ k- 1) n for some chosen index p . Do one of the following: For all chosen statues, change their values of a_ i into ( a_ i+ 1) m . For all chosen statues, change their values of a_ i into ( a_ i- 1) m . Help Pak Chanek find the minimum possible number of operations to open the treasure chest.",
    "input": "The first line contains three integers n , m , and k ( 2 \u2264 n, m \u2264 10^ 6 , nm \u2264 2 \u00b7 10^ 6 , 1 \u2264 k < n ) \u2014 the number of statues, the bound of the integers in the crystal balls, and the number of statues that can be operated in a single operation. The second line contains n integers a_ 0, a_ 1, . . . , a_ n- 1 ( 0 \u2264 a_ i < m ) \u2014 the integers in the crystal balls.",
    "output": "If it is possible to perform zero or more operations so that a_ 0= a_ 1= . . . = a_ n- 1= 0 , output the minimum number of operations required. Otherwise, output - 1 .",
    "note": "In the first example, Pak Chanek can do the following operations: Do the a_ i : = ( a_ i- 1) m operation 3 times for statues 1 , 2 , and 3 . Now a= [ 8, 7, 1, 2, 0] . Do the a_ i : = ( a_ i- 1) m operation 1 time for statues 3 , 4 , and 0 . Now a= [ 7, 7, 1, 1, 8] . Do the a_ i : = ( a_ i+ 1) m operation 2 times for statues 4 , 0 , and 1 . Now a= [ 0, 0, 1, 1, 1] . Do the a_ i : = ( a_ i- 1) m operation 1 time for statues 2 , 3 , and 4 . Now a= [ 0, 0, 0, 0, 0] .",
    "topics": [
      "data structures",
      "divide and conquer",
      "divide and conquer",
      "dp",
      "geometry",
      "graphs",
      "number theory"
    ],
    "id": "1740I"
  },
  {
    "title": "Jumbo Extra Cheese 2",
    "url": "https://codeforces.com/problemset/problem/1740/B",
    "history": "Pak Chanek has n two- dimensional slices of cheese. The i - th slice of cheese can be represented as a rectangle of dimensions a_ i \u00d7 b_ i . We want to arrange them on the two- dimensional plane such that: Each edge of each cheese is parallel to either the x- axis or the y- axis. The bottom edge of each cheese is a segment of the x- axis. No two slices of cheese overlap, but their sides can touch. They form one connected shape. Note that we can arrange them in any order ( the leftmost slice of cheese is not necessarily the first slice of cheese) . Also note that we can rotate each slice of cheese in any way as long as all conditions still hold. Find the minimum possible perimeter of the constructed shape.",
    "input": "Each test contains multiple test cases. The first line contains an integer t ( 1 \u2264 t \u2264 2 \u00b7 10^ 4 ) \u2014 the number of test cases. The following lines contain the description of each test case. The first line of each test case contains an integer n ( 1 \u2264 n \u2264 2 \u00b7 10^ 5 ) \u2014 the number of slices of cheese Pak Chanek has. The i - th of the next n lines of each test case contains two integers a_ i and b_ i ( 1 \u2264 a_ i, b_ i \u2264 10^ 9 ) \u2014 the dimensions of the i - th slice of cheese. It is guaranteed that the sum of n over all test cases does not exceed 2 \u00b7 10^ 5 .",
    "output": "For each test case, output a line containing an integer representing the minimum possible perimeter of the constructed shape.",
    "note": "In the first test case, a way of getting the minimum possible perimeter is to arrange the slices of cheese as follows. We can calculate that the perimeter of the constructed shape is 2+ 5+ 1+ 1+ 1+ 1+ 3+ 1+ 5+ 1+ 2+ 3= 26 . It can be shown that we cannot get a smaller perimeter. Consider the following invalid arrangement. Even though the perimeter of the shape above is 24 , it does not satisfy all conditions of the problem. The bottom edge of the 1 \u00d7 1 slice of cheese is not a segment of the x- axis. In the second test case, a way of getting the minimum possible perimeter is to arrange the slices of cheese as follows. We can calculate that the perimeter of the constructed shape is 2+ 2+ 2+ 3+ 2+ 3+ 2+ 2+ 2+ 4= 24 . It can be shown that we cannot get a smaller perimeter.",
    "topics": [
      "geometry",
      "greedy",
      "sortings"
    ],
    "id": "1740B"
  },
  {
    "title": "Equal Binary Subsequences",
    "url": "https://codeforces.com/problemset/problem/1736/D",
    "history": "Everool has a binary string s of length 2n . Note that a binary string is a string consisting of only characters 0 and 1 . He wants to partition s into two disjoint equal subsequences. He needs your help to do it. You are allowed to do the following operation exactly once. You can choose any subsequence ( possibly empty) of s and rotate it right by one position. In other words, you can select a sequence of indices b_ 1, b_ 2, . . . , b_ m , where 1 \u2264 b_ 1 < b_ 2 < . . . < b_ m \u2264 2n . After that you simultaneously set s_ b_ 1 : = s_ b_ m, s_ b_ 2 : = s_ b_ 1, . . . , s_ b_ m : = s_ b_ m- 1. Can you partition s into two disjoint equal subsequences after performing the allowed operation exactly once? A partition of s into two disjoint equal subsequences s^ p and s^ q is two increasing arrays of indices p_ 1, p_ 2, . . . , p_ n and q_ 1, q_ 2, . . . , q_ n , such that each integer from 1 to 2n is encountered in either p or q exactly once, s^ p = s_ p_ 1 s_ p_ 2. . . s_ p_ n , s^ q = s_ q_ 1 s_ q_ 2. . . s_ q_ n , and s^ p = s^ q . If it is not possible to partition after performing any kind of operation, report - 1 . If it is possible to do the operation and partition s into two disjoint subsequences s^ p and s^ q , such that s^ p = s^ q , print elements of b and indices of s^ p , i. e. the values p_ 1, p_ 2, . . . , p_ n .",
    "input": "Each test contains multiple test cases. The first line contains the number of test cases t ( 1 \u2264 t \u2264 10^ 5 ) . Description of the test cases follows. The first line of each test case contains a single integer n ( 1 \u2264 n \u2264 10^ 5 ) , where 2n is the length of the binary string. The second line of each test case contains the binary string s of length 2n . It is guaranteed that the sum of n over all test cases does not exceed 10^ 5 .",
    "output": "For each test case, follow the following output format. If there is no solution, print - 1 . Otherwise, In the first line, print an integer m ( 0 \u2264 m \u2264 2n ) , followed by m distinct indices b_ 1 , b_ 2 , . . . , b_ m ( in increasing order) . In the second line, print n distinct indices p_ 1 , p_ 2 , . . . , p_ n ( in increasing order) . If there are multiple solutions, print any.",
    "note": "In the first test case, b is empty. So string s is not changed. Now s^ p = s_ 1 s_ 2 = 10 , and s^ q = s_ 3s_ 4 = 10 . In the second test case, b= [ 3, 5] . Initially s_ 3= 0 , and s_ 5= 1 . On performing the operation, we simultaneously set s_ 3= 1 , and s_ 5= 0 . So s is updated to 101000 on performing the operation. Now if we take characters at indices [ 1, 2, 5] in s^ p , we get s_ 1= 100 . Also characters at indices [ 3, 4, 6] are in s^ q . Thus s^ q= 100 . We are done as s^ p= s^ q . In fourth test case, it can be proved that it is not possible to partition the string after performing any operation.",
    "topics": [
      "constructive algorithms",
      "geometry",
      "greedy",
      "implementation",
      "strings"
    ],
    "id": "1736D"
  },
  {
    "title": "Pebbles and Beads",
    "url": "https://codeforces.com/problemset/problem/1735/F",
    "history": "There are two currencies: pebbles and beads. Initially you have a pebbles, b beads. There are n days, each day you can exchange one currency for another at some exchange rate. On day i , you can exchange - p_ i \u2264 x \u2264 p_ i pebbles for - q_ i \u2264 y \u2264 q_ i beads or vice versa. It' s allowed not to perform an exchange at all. Meanwhile, if you perform an exchange, the proportion x \u00b7 q_ i = - y \u00b7 p_ i must be fulfilled. Fractional exchanges are allowed. You can perform no more than one such exchange in one day. The numbers of pebbles and beads you have must always remain non- negative. Please solve the following n problems independently: for each day i , output the maximum number of pebbles that you can have at the end of day i if you perform exchanges optimally.",
    "input": "The first line of the input contains a single integer t ( 1 \u2264 t \u2264 10^ 3 ) \u2014 the number of test cases. The description of test cases follows. The first line of each test case contains three integers n , a and b ( 1 \u2264 n \u2264 300 000 , 0 \u2264 a, b \u2264 10^ 9 ) \u2014 the number of days and the initial number of pebbles and beads respectively. The second line of each test case contains n integers: p_ 1, p_ 2, . . . , p_ n ( 1 \u2264 p_ i \u2264 10^ 9 ) . The third line of each test case contains n integers: q_ 1, q_ 2, . . . , q_ n ( 1 \u2264 q_ i \u2264 10^ 9 ) . It is guaranteed that the sum of n over all test cases doesn' t exceed 300 000 .",
    "output": "Output n numbers \u2014 the maximum number of pebbles at the end of each day. Your answer is considered correct if its absolute or relative error does not exceed 10^ - 6 . Formally, let your answer be a , and the jury' s answer be b . Your answer is accepted if and only if | a - b| / max( 1, | b| ) \u2264 10^ - 6 .",
    "note": "In the image below you can see the solutions for the first two test cases. In each line there is an optimal sequence of actions for each day. In the first test case, the optimal strategy for the first day is to do no action at all, as we can only decrease the number of pebbles. The optimal strategy for the second day is at first to exchange 1 pebble for 2 beads, which is a correct exchange, since 1 \u00b7 4 = 2 \u00b7 2 , and then to exchange 2 beads for 3 pebbles.",
    "topics": [
      "data structures",
      "geometry"
    ],
    "id": "1735F"
  },
  {
    "title": "Meeting on the Line",
    "url": "https://codeforces.com/problemset/problem/1730/B",
    "history": "n people live on the coordinate line, the i - th one lives at the point x_ i ( 1 \u2264 i \u2264 n ) . They want to choose a position x_ 0 to meet. The i - th person will spend | x_ i - x_ 0| minutes to get to the meeting place. Also, the i - th person needs t_ i minutes to get dressed, so in total he or she needs t_ i + | x_ i - x_ 0| minutes. Here | y| denotes the absolute value of y . These people ask you to find a position x_ 0 that minimizes the time in which all n people can gather at the meeting place.",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 3 ) \u2014 the number of test cases. Then the test cases follow. Each test case consists of three lines. The first line contains a single integer n ( 1 \u2264 n \u2264 10^ 5 ) \u2014 the number of people. The second line contains n integers x_ 1, x_ 2, . . . , x_ n ( 0 \u2264 x_ i \u2264 10^ 8 ) \u2014 the positions of the people. The third line contains n integers t_ 1, t_ 2, . . . , t_ n ( 0 \u2264 t_ i \u2264 10^ 8 ) , where t_ i is the time i - th person needs to get dressed. It is guaranteed that the sum of n over all test cases does not exceed 2 \u00b7 10^ 5 .",
    "output": "For each test case, print a single real number \u2014 the optimum position x_ 0 . It can be shown that the optimal position x_ 0 is unique. Your answer will be considered correct if its absolute or relative error does not exceed 10^ \u22126 . Formally, let your answer be a , the jury' s answer be b . Your answer will be considered correct if | a\u2212b| / max( 1, | b| ) \u2264 10^ \u22126 .",
    "note": "In the 1 - st test case there is one person, so it is efficient to choose his or her position for the meeting place. Then he or she will get to it in 3 minutes, that he or she need to get dressed. In the 2 - nd test case there are 2 people who don' t need time to get dressed. Each of them needs one minute to get to position 2 . In the 5 - th test case the 1 - st person needs 4 minutes to get to position 1 ( 4 minutes to get dressed and 0 minutes on the way) ; the 2 - nd person needs 2 minutes to get to position 1 ( 1 minute to get dressed and 1 minute on the way) ; the 3 - rd person needs 4 minutes to get to position 1 ( 2 minutes to get dressed and 2 minutes on the way) .",
    "topics": [
      "binary search",
      "geometry",
      "greedy",
      "implementation",
      "math",
      "ternary search"
    ],
    "id": "1730B"
  },
  {
    "title": "Mainak and the Bleeding Polygon",
    "url": "https://codeforces.com/problemset/problem/1726/H",
    "history": "Mainak has a convex polygon P with n vertices labelled as A_ 1, A_ 2, . . . , A_ n in a counter- clockwise fashion. The coordinates of the i - th point A_ i are given by ( x_ i, y_ i) , where x_ i and y_ i are both integers. Further, it is known that the interior angle at A_ i is either a right angle or a proper obtuse angle. Formally it is known that: 90 ^ \u2218\u2264\u2220 A_ i - 1A_ iA_ i + 1 < 180 ^ \u2218 , \u2200 i \u2208{ 1, 2, . . . , n} where we conventionally consider A_ 0 = A_ n and A_ n + 1 = A_ 1 . Mainak' s friend insisted that all points Q such that there exists a chord of the polygon P passing through Q with length not exceeding 1 , must be coloured red . Mainak wants you to find the area of the coloured region formed by the red points. Formally, determine the area of the region S = { Q \u2208P | Q is coloured red} . Recall that a chord of a polygon is a line segment between two points lying on the boundary ( i. e. vertices or points on edges) of the polygon.",
    "input": "The first line contains an integer n ( 4 \u2264 n \u2264 5000 ) \u2014 the number of vertices of a polygon P . The i - th line of the next n lines contain two integers x_ i and y_ i ( - 10^ 9 \u2264 x_ i, y_ i \u2264 10^ 9 ) \u2014 the coordinates of A_ i . Additional constraint on the input: The vertices form a convex polygon and are listed in counter- clockwise order. It is also guaranteed that all interior angles are in the range [ 90^ \u2218 ; 180^ \u2218 ) .",
    "output": "Print the area of the region coloured in red . Your answer is considered correct if its absolute or relative error does not exceed 10^ - 4 . Formally, let your answer be a , and the jury' s answer be b . Your answer is accepted if and only if | a - b| / max( 1, | b| ) \u2264 10^ - 4 .",
    "note": "In the first example, the polygon P can be visualised on the Cartesian Plane as:",
    "topics": [
      "binary search",
      "geometry",
      "implementation",
      "math"
    ],
    "id": "1726H"
  },
  {
    "title": "Garage",
    "url": "https://codeforces.com/problemset/problem/1725/G",
    "history": "Pak Chanek plans to build a garage. He wants the garage to consist of a square and a right triangle that are arranged like the following illustration. Define a and b as the lengths of two of the sides in the right triangle as shown in the illustration. An integer x is suitable if and only if we can construct a garage with assigning positive integer values for the lengths a and b ( a< b ) so that the area of the square at the bottom is exactly x . As a good friend of Pak Chanek, you are asked to help him find the N - th smallest suitable number.",
    "input": "The only line contains a single integer N ( 1 \u2264 N \u2264 10^ 9 ) .",
    "output": "An integer that represents the N - th smallest suitable number.",
    "note": "The 3 - rd smallest suitable number is 7 . A square area of 7 can be obtained by assigning a= 3 and b= 4 .",
    "topics": [
      "binary search",
      "geometry",
      "math"
    ],
    "id": "1725G"
  },
  {
    "title": "Circular Mirror",
    "url": "https://codeforces.com/problemset/problem/1725/C",
    "history": "Pak Chanek has a mirror in the shape of a circle. There are N lamps on the circumference numbered from 1 to N in clockwise order. The length of the arc from lamp i to lamp i+ 1 is D_ i for 1 \u2264 i \u2264 N- 1 . Meanwhile, the length of the arc between lamp N and lamp 1 is D_ N . Pak Chanek wants to colour the lamps with M different colours. Each lamp can be coloured with one of the M colours. However, there cannot be three different lamps such that the colours of the three lamps are the same and the triangle made by considering the three lamps as vertices is a right triangle ( triangle with one of its angles being exactly 90 degrees) . The following are examples of lamp colouring configurations on the circular mirror. Figure 1. an example of an incorrect colouring because lamps 1 , 2 , and 3 form a right triangleFigure 2. an example of a correct colouringFigure 3. an example of a correct colouring Before colouring the lamps, Pak Chanek wants to know the number of distinct colouring configurations he can make. Count the number of distinct possible lamp colouring configurations, modulo 998 244 353 .",
    "input": "The first line contains two integers N and M ( 1 \u2264 N \u2264 3 \u00b7 10^ 5 , 2 \u2264 M \u2264 3 \u00b7 10^ 5 ) \u2014 the number of lamps in the mirror and the number of different colours used. The second line contains N integers D_ 1, D_ 2, . . . , D_ N ( 1 \u2264 D_ i \u2264 10^ 9 ) \u2014 the lengths of the arcs between the lamps in the mirror.",
    "output": "An integer representing the number of possible lamp colouring configurations, modulo 998 244 353 .",
    "note": "In the first example, all correct lamp colouring configurations are [ 1, 1, 2, 1] , [ 1, 1, 2, 2] , [ 1, 2, 1, 2] , [ 1, 2, 2, 1] , [ 1, 2, 2, 2] , [ 2, 1, 1, 1] , [ 2, 1, 1, 2] , [ 2, 1, 2, 1] , [ 2, 2, 1, 1] , and [ 2, 2, 1, 2] .",
    "topics": [
      "binary search",
      "combinatorics",
      "geometry",
      "math",
      "two pointers"
    ],
    "id": "1725C"
  },
  {
    "title": "Crop Squares",
    "url": "https://codeforces.com/problemset/problem/1715/F",
    "history": "This is an interactive problem. Farmer Stanley grows corn on a rectangular field of size n \u00d7 m meters with corners in points ( 0, 0) , ( 0, m) , ( n, 0) , ( n, m) . This year the harvest was plentiful and corn covered the whole field. The night before harvest aliens arrived and poisoned the corn in a single 1 \u00d7 1 square with sides parallel to field borders. The corn inside the square must not be eaten, but you cannot distinguish it from ordinary corn by sight. Stanley can only collect a sample of corn from an arbitrary polygon and bring it to the laboratory, where it will be analyzed and Stanley will be told the amount of corn in the sample that was poisoned. Since the harvest will soon deteriorate, such a study can be carried out no more than 5 times. More formally, it is allowed to make no more than 5 queries, each of them calculates the area of intersection of a chosen polygon with a square of poisoned corn. It is necessary to find out the coordinates of the lower- left corner of the drawn square ( the vertex of the square with the smallest x and y coordinates) . InteractionIn order to query the area of intersection of a polygon with k ( 3 \u2264 k \u2264 1000 ) vertices at points with coordinates ( x_ 1, y_ 1) , . . . , ( x_ k, y_ k) with a square of poisoned corn print k+ 1 lines. In the first of these lines print \" ? k\" . In the i - th of the next k lines print two real numbers x_ i and y_ i ( | x_ i| , | y_ i| \u2264 10^ 4 ) with at most 15 digits after decimal place. The polygon must have strictly positive area and contain no self- intersections. In response to this query you will receive a real number s ( 0 \u2264 s \u2264 1 ) with 15 digits after decimal place \u2014 the area of intersection of the square with the given polygon. If the polygon is invalid, there is no guarantee on the valid response. When you have identified the drawn square, print on a separate line \" ! x y\" , where x and y are real numbers with at most 15 digits after decimal place representing the coordinates of its lower- left corner ( 0 \u2264 x \u2264 n - 1 , 0 \u2264 y \u2264 m - 1 ) , and then you have to terminate your program. Your answer will be considered correct if its absolute or relative error on both coordinates does not exceed 10^ - 6 . Formally let your answer be a , jury answer be b . Your answer will be considered correct if | a- b| / max( 1, | b| ) \u2264 10^ - 6 . After printing a query do not forget to output end of line and flush the output. Otherwise, you will get Idleness limit exceeded. To do this, use: fflush( stdout) or cout. flush( ) in C+ + ; System. out. flush( ) in Java; flush( output) in Pascal; stdout. flush( ) in Python; see documentation for other languages. HacksTo make a hack, use the following test format. The first line of the input should contain two integers n and m ( 1 \u2264 n, m \u2264 100 ) \u2014 field sizes. The second line should contain two real numbers x ( 0 \u2264 x \u2264 n - 1 ) and y ( 0 \u2264 y \u2264 m - 1 ) \u2014 coordinates of the lower- left corner of the square of poisoned corn.",
    "input": "First line contains two integers n and m ( 1 \u2264 n, m \u2264 100 ) \u2014 field sizes.",
    "output": "",
    "note": "In the first test from the statement, the aliens poisoned a square of corn with vertices at points with coordinates ( 1. 5, 0. 5) , ( 1. 5, 1. 5) , ( 2. 5, 1. 5) , ( 2. 5, 0. 5) . In the picture, it is red, the polygon selected in the query is blue, and their intersection is green. Picture for the first query: Picture for the second query:",
    "topics": [
      "constructive algorithms",
      "geometry",
      "interactive",
      "math"
    ],
    "id": "1715F"
  },
  {
    "title": "Long Way Home",
    "url": "https://codeforces.com/problemset/problem/1715/E",
    "history": "Stanley lives in a country that consists of n cities ( he lives in city 1 ) . There are bidirectional roads between some of the cities, and you know how long it takes to ride through each of them. Additionally, there is a flight between each pair of cities, the flight between cities u and v takes ( u - v) ^ 2 time. Stanley is quite afraid of flying because of watching \" Sully: Miracle on the Hudson\" recently, so he can take at most k flights. Stanley wants to know the minimum time of a journey to each of the n cities from the city 1 .",
    "input": "In the first line of input there are three integers n , m , and k ( 2 \u2264 n \u2264 10^ 5 , 1 \u2264 m \u2264 10^ 5 , 1 \u2264 k \u2264 20 ) \u2014 the number of cities, the number of roads, and the maximal number of flights Stanley can take. The following m lines describe the roads. Each contains three integers u , v , w ( 1 \u2264 u, v \u2264 n , u = \u0338 v , 1 \u2264 w \u2264 10^ 9 ) \u2014 the cities the road connects and the time it takes to ride through. Note that some pairs of cities may be connected by more than one road.",
    "output": "Print n integers, i - th of which is equal to the minimum time of traveling to city i .",
    "note": "In the first sample, it takes no time to get to city 1; to get to city 2 it is possible to use a flight between 1 and 2, which will take 1 unit of time; to city 3 you can get via a road from city 1, which will take 1 unit of time. In the second sample, it also takes no time to get to city 1. To get to city 2 Stanley should use a flight between 1 and 2, which will take 1 unit of time. To get to city 3 Stanley can ride between cities 1 and 2, which will take 3 units of time, and then use a flight between 2 and 3. To get to city 4 Stanley should use a flight between 1 and 2, then take a ride from 2 to 4, which will take 5 units of time.",
    "topics": [
      "data structures",
      "divide and conquer",
      "dp",
      "geometry",
      "graphs",
      "greedy",
      "shortest paths"
    ],
    "id": "1715E"
  },
  {
    "title": "Traveling Salesman Problem",
    "url": "https://codeforces.com/problemset/problem/1713/A",
    "history": "You are living on an infinite plane with the Cartesian coordinate system on it. In one move you can go to any of the four adjacent points ( left, right, up, down) . More formally, if you are standing at the point ( x, y) , you can: go left, and move to ( x - 1, y) , or go right, and move to ( x + 1, y) , or go up, and move to ( x, y + 1) , or go down, and move to ( x, y - 1) . There are n boxes on this plane. The i - th box has coordinates ( x_ i, y_ i) . It is guaranteed that the boxes are either on the x - axis or the y - axis. That is, either x_ i= 0 or y_ i= 0 . You can collect a box if you and the box are at the same point. Find the minimum number of moves you have to perform to collect all of these boxes if you have to start and finish at the point ( 0, 0) .",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 100 ) \u2014 the number of test cases. The first line of each test case contains a single integer n ( 1 \u2264 n \u2264 100 ) \u2014 the number of boxes. The i - th line of the following n lines contains two integers x_ i and y_ i ( - 100 \u2264 x_ i, y_ i \u2264 100 ) \u2014 the coordinate of the i - th box. It is guaranteed that either x_ i= 0 or y_ i= 0 . Do note that the sum of n over all test cases is not bounded.",
    "output": "For each test case output a single integer \u2014 the minimum number of moves required.",
    "note": "In the first test case, a possible sequence of moves that uses the minimum number of moves required is shown below. ( 0, 0) \u2192 ( 1, 0) \u2192 ( 1, 1) \u2192 ( 1, 2) \u2192 ( 0, 2) \u2192 ( - 1, 2) \u2192 ( - 1, 1) \u2192 ( - 1, 0) \u2192 ( - 1, - 1) \u2192 ( - 1, - 2) \u2192 ( 0, - 2) \u2192 ( 0, - 1) \u2192 ( 0, 0) In the second test case, a possible sequence of moves that uses the minimum number of moves required is shown below. ( 0, 0) \u2192 ( 0, 1) \u2192 ( 0, 2) \u2192 ( - 1, 2) \u2192 ( - 2, 2) \u2192 ( - 3, 2) \u2192 ( - 3, 1) \u2192 ( - 3, 0) \u2192 ( - 3, - 1) \u2192 ( - 2, - 1) \u2192 ( - 1, - 1) \u2192 ( 0, - 1) \u2192 ( 0, 0) In the third test case, we can collect all boxes without making any moves.",
    "topics": [
      "geometry",
      "greedy",
      "implementation"
    ],
    "id": "1713A"
  },
  {
    "title": "Rain",
    "url": "https://codeforces.com/problemset/problem/1710/B",
    "history": "You are the owner of a harvesting field which can be modeled as an infinite line, whose positions are identified by integers. It will rain for the next n days. On the i - th day, the rain will be centered at position x_ i and it will have intensity p_ i . Due to these rains, some rainfall will accumulate; let a_ j be the amount of rainfall accumulated at integer position j . Initially a_ j is 0 , and it will increase by max( 0, p_ i- | x_ i- j| ) after the i - th day' s rain. A flood will hit your field if, at any moment, there is a position j with accumulated rainfall a_ j> m . You can use a magical spell to erase exactly one day' s rain, i. e. , setting p_ i= 0 . For each i from 1 to n , check whether in case of erasing the i - th day' s rain there is no flood.",
    "input": "Each test contains multiple test cases. The first line contains the number of test cases t ( 1 \u2264 t \u2264 10^ 4 ) . The description of the test cases follows. The first line of each test case contains two integers n and m ( 1 \u2264 n \u2264 2 \u00b7 10^ 5 , 1 \u2264 m \u2264 10^ 9 ) \u2014 the number of rainy days and the maximal accumulated rainfall with no flood occurring. Then n lines follow. The i - th of these lines contains two integers x_ i and p_ i ( 1 \u2264 x_ i, p_ i \u2264 10^ 9 ) \u2014 the position and intensity of the i - th day' s rain. The sum of n over all test cases does not exceed 2 \u00b7 10^ 5 .",
    "output": "For each test case, output a binary string s length of n . The i - th character of s is 1 if after erasing the i - th day' s rain there is no flood, while it is 0, if after erasing the i - th day' s rain the flood still happens.",
    "note": "In the first test case, if we do not use the spell, the accumulated rainfall distribution will be like this: If we erase the third day' s rain, the flood is avoided and the accumulated rainfall distribution looks like this: In the second test case, since initially the flood will not happen, we can erase any day' s rain. In the third test case, there is no way to avoid the flood.",
    "topics": [
      "binary search",
      "brute force",
      "data structures",
      "geometry",
      "greedy",
      "implementation",
      "math"
    ],
    "id": "1710B"
  },
  {
    "title": "Coloring",
    "url": "https://codeforces.com/problemset/problem/1697/E",
    "history": "You are given n points on the plane, the coordinates of the i - th point are ( x_ i, y_ i) . No two points have the same coordinates. The distance between points i and j is defined as d( i, j) = | x_ i - x_ j| + | y_ i - y_ j| . For each point, you have to choose a color, represented by an integer from 1 to n . For every ordered triple of different points ( a, b, c) , the following constraints should be met: if a , b and c have the same color, then d( a, b) = d( a, c) = d( b, c) ; if a and b have the same color, and the color of c is different from the color of a , then d( a, b) < d( a, c) and d( a, b) < d( b, c) . Calculate the number of different ways to choose the colors that meet these constraints.",
    "input": "The first line contains one integer n ( 2 \u2264 n \u2264 100 ) \u2014 the number of points. Then n lines follow. The i - th of them contains two integers x_ i and y_ i ( 0 \u2264 x_ i, y_ i \u2264 10^ 8 ) . No two points have the same coordinates ( i. e. if i j , then either x_ i x_ j or y_ i y_ j ) .",
    "output": "Print one integer \u2014 the number of ways to choose the colors for the points. Since it can be large, print it modulo 998244353 .",
    "note": "In the first test, the following ways to choose the colors are suitable: [ 1, 1, 1] ; [ 2, 2, 2] ; [ 3, 3, 3] ; [ 1, 2, 3] ; [ 1, 3, 2] ; [ 2, 1, 3] ; [ 2, 3, 1] ; [ 3, 1, 2] ; [ 3, 2, 1] .",
    "topics": [
      "brute force",
      "combinatorics",
      "constructive algorithms",
      "dp",
      "geometry",
      "graphs",
      "greedy",
      "implementation",
      "math"
    ],
    "id": "1697E"
  },
  {
    "title": "Fishingprince Plays With Array Again",
    "url": "https://codeforces.com/problemset/problem/1696/G",
    "history": "Suppose you are given a 1- indexed sequence a of non- negative integers, whose length is n , and two integers x , y . In consecutive t seconds ( t can be any positive real number) , you can do one of the following operations: Select 1\u2264 i< n , decrease a_ i by x\u00b7 t , and decrease a_ i+ 1 by y\u00b7 t . Select 1\u2264 i< n , decrease a_ i by y\u00b7 t , and decrease a_ i+ 1 by x\u00b7 t . Define the minimum amount of time ( it might be a real number) required to make all elements in the sequence less than or equal to 0 as f( a) . For example, when x= 1 , y= 2 , it takes 3 seconds to deal with the array [ 3, 1, 1, 3] . We can: In the first 1. 5 seconds do the second operation with i= 1 . In the next 1. 5 seconds do the first operation with i= 3 . We can prove that it' s not possible to make all elements less than or equal to 0 in less than 3 seconds, so f( [ 3, 1, 1, 3] ) = 3 . Now you are given a 1- indexed sequence b of positive integers, whose length is n . You are also given positive integers x , y . Process q queries of the following two types: 1 k v: change b_ k to v . 2 l r: print f( [ b_ l, b_ l+ 1, . . . , b_ r] ) .",
    "input": "The first line of input contains two integers n and q ( 2\u2264 n\u2264 2\u00b7 10^ 5 , 1\u2264 q\u2264 2\u00b7 10^ 5 ) . The second line of input contains two integers x and y ( 1\u2264 x, y\u2264 10^ 6 ) . The third line of input contains n integers b_ 1, b_ 2, . . . , b_ n ( 1\u2264 b_ i\u2264 10^ 6 ) . This is followed by q lines. Each of these q lines contains three integers. The first integer op is either 1 or 2 . If it is 1 , it is followed by two integers k , v ( 1\u2264 k\u2264 n , 1\u2264 v\u2264 10^ 6 ) . It means that you should change b_ k to v . If it is 2 , it is followed by two integers l , r ( 1\u2264 l< r\u2264 n ) . It means that you should print f( [ b_ l, b_ l+ 1, . . . , b_ r] ) .",
    "output": "For each query of type 2 , print one real number \u2014 the answer to the query. Your answer is considered correct if its absolute error or relative error does not exceed 10^ - 9 .",
    "note": "Let' s analyse the sample. In the first query, we are asked to compute f( [ 3, 1, 1, 4] ) . The answer is 3. 5 . One optimal sequence of operations is: In the first 1. 5 seconds do the second operation with i= 1 . In the next 2 seconds do the first operation with i= 3 . In the third query, we are asked to compute f( [ 1, 1, 1] ) . The answer is 1 . One optimal sequence of operations is: In the first 0. 5 seconds do the second operation with i= 1 . In the next 0. 5 seconds do the first operation with i= 2 .",
    "topics": [
      "brute force",
      "data structures",
      "geometry",
      "math"
    ],
    "id": "1696G"
  },
  {
    "title": "Lena and Matrix",
    "url": "https://codeforces.com/problemset/problem/1689/D",
    "history": "Lena is a beautiful girl who likes logical puzzles. As a gift for her birthday, Lena got a matrix puzzle! The matrix consists of n rows and m columns, and each cell is either black or white. The coordinates ( i, j) denote the cell which belongs to the i - th row and j - th column for every 1\u2264 i \u2264 n and 1\u2264 j \u2264 m . To solve the puzzle, Lena has to choose a cell that minimizes the Manhattan distance to the farthest black cell from the chosen cell. More formally, let there be k \u2265 1 black cells in the matrix with coordinates ( x_ i, y_ i) for every 1\u2264 i \u2264 k . Lena should choose a cell ( a, b) that minimizes max_ i= 1^ k( | a- x_ i| + | b- y_ i| ) . As Lena has no skill, she asked you for help. Will you tell her the optimal cell to choose?",
    "input": "There are several test cases in the input data. The first line contains a single integer t ( 1\u2264 t\u2264 10 000 ) \u2014 the number of test cases. This is followed by the test cases description. The first line of each test case contains two integers n and m ( 2\u2264 n, m \u2264 1000 ) \u2014 the dimensions of the matrix. The following n lines contain m characters each, each character is either ' W' or ' B' . The j - th character in the i - th of these lines is ' W' if the cell ( i, j) is white, and ' B' if the cell ( i, j) is black. It is guaranteed that at least one black cell exists. It is guaranteed that the sum of n\u00b7 m does not exceed 10^ 6 .",
    "output": "For each test case, output the optimal cell ( a, b) to choose. If multiple answers exist, output any.",
    "note": "In the first test case the two black cells have coordinates ( 1, 1) and ( 3, 2) . The four optimal cells are ( 1, 2) , ( 2, 1) , ( 2, 2) and ( 3, 1) . It can be shown that no other cell minimizes the maximum Manhattan distance to every black cell. In the second test case it is optimal to choose the black cell ( 2, 2) with maximum Manhattan distance being 2 .",
    "topics": [
      "data structures",
      "dp",
      "geometry",
      "shortest paths"
    ],
    "id": "1689D"
  },
  {
    "title": "Very Suspicious",
    "url": "https://codeforces.com/problemset/problem/1670/D",
    "history": "Sehr Sus is an infinite hexagonal grid as pictured below, controlled by MennaFadali, ZerooCool and Hosssam. They love equilateral triangles and want to create n equilateral triangles on the grid by adding some straight lines. The triangles must all be empty from the inside ( in other words, no straight line or hexagon edge should pass through any of the triangles) . You are allowed to add straight lines parallel to the edges of the hexagons. Given n , what is the minimum number of lines you need to add to create at least n equilateral triangles as described? Adding two red lines results in two new yellow equilateral triangles.",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 5 ) \u2014 the number of test cases. Then t test cases follow. Each test case contains a single integer n ( 1 \u2264 n \u2264 10^ 9 ) \u2014 the required number of equilateral triangles.",
    "output": "For each test case, print the minimum number of lines needed to have n or more equilateral triangles.",
    "note": "In the first and second test cases only 2 lines are needed. After adding the first line, no equilateral triangles will be created no matter where it is added. But after adding the second line, two more triangles will be created at once. In the third test case, the minimum needed is 3 lines as shown below.",
    "topics": [
      "binary search",
      "brute force",
      "geometry",
      "greedy",
      "implementation",
      "math"
    ],
    "id": "1670D"
  },
  {
    "title": "Interactive Treasure Hunt",
    "url": "https://codeforces.com/problemset/problem/1666/I",
    "history": "This is an interactive problem. There is a grid of n\u00d7 m cells. Two treasure chests are buried in two different cells of the grid. Your task is to find both of them. You can make two types of operations: DIG r c : try to find the treasure in the cell ( r, c) . The interactor will tell you if you found the treasure or not. SCAN r c : scan from the cell ( r, c) . The result of this operation is the sum of Manhattan distances from the cell ( r, c) to the cells where the treasures are hidden. Manhattan distance from a cell ( r_ 1, c_ 1) to a cell ( r_ 2, c_ 2) is calculated as | r_ 1 - r_ 2| + | c_ 1 - c_ 2| . You need to find the treasures in at most 7 operations. This includes both DIG and SCAN operations in total. To solve the test you need to call DIG operation at least once in both of the cells where the treasures are hidden. InteractionYour program has to process multiple test cases in a single run. First, the testing system writes t \u2014 the number of test cases ( 1\u2264 t \u2264 100 ) . Then, t test cases should be processed one by one. In each test case, your program should start by reading the integers n and m ( 2 \u2264 n, m \u2264 16 ) . Then, your program can make queries of two types: DIG r c ( 1\u2264 r\u2264 n ; 1\u2264 c\u2264 m ) . The interactor responds with integer 1 , if you found the treasure, and 0 if not. If you try to find the treasure in the same cell multiple times, the result will be 0 since the treasure is already found. SCAN r c ( 1\u2264 r\u2264 n ; 1\u2264 c\u2264 m ) . The interactor responds with an integer that is the sum of Manhattan distances from the cell ( r, c) to the cells where the treasures were hidden. The sum is calculated for both cells with treasures, even if you already found one of them. After you found both treasures, i. e. you received 1 for two DIG operations, your program should continue to the next test case or exit if that test case was the last one.",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "brute force",
      "constructive algorithms",
      "geometry",
      "interactive",
      "math"
    ],
    "id": "1666I"
  },
  {
    "title": "Connect the Points",
    "url": "https://codeforces.com/problemset/problem/1666/C",
    "history": "You are given three points on a plane. You should choose some segments on the plane that are parallel to coordinate axes, so that all three points become connected. The total length of the chosen segments should be the minimal possible. Two points a and b are considered connected if there is a sequence of points p_ 0 = a, p_ 1, . . . , p_ k = b such that points p_ i and p_ i+ 1 lie on the same segment.",
    "input": "The input consists of three lines describing three points. Each line contains two integers x and y separated by a space \u2014 the coordinates of the point ( - 10^ 9 \u2264 x, y \u2264 10^ 9 ) . The points are pairwise distinct.",
    "output": "On the first line output n \u2014 the number of segments, at most 100. The next n lines should contain descriptions of segments. Output four integers x_ 1 , y_ 1 , x_ 2 , y_ 2 on a line \u2014 the coordinates of the endpoints of the corresponding segment ( - 10^ 9 \u2264 x_ 1, y_ 1, x_ 2, y_ 2 \u2264 10^ 9 ) . Each segment should be either horizontal or vertical. It is guaranteed that the solution with the given constraints exists.",
    "note": "The points and the segments from the example are shown below.",
    "topics": [
      "brute force",
      "constructive algorithms",
      "geometry"
    ],
    "id": "1666C"
  },
  {
    "title": "Pandemic Restrictions",
    "url": "https://codeforces.com/problemset/problem/1662/K",
    "history": "After a long time living abroad, you have decided to move back to Italy and have to find a place to live, but things are not so easy due to the ongoing global pandemic. Your three friends Fabio, Flavio and Francesco live at the points with coordinates ( x_ 1, y_ 1) , ( x_ 2, y_ 2) and ( x_ 3, y_ 3) , respectively. Due to the mobility restrictions in response to the pandemic, meetings are limited to 3 persons, so you will only be able to meet 2 of your friends at a time. Moreover, in order to contain the spread of the infection, the authorities have imposed the following additional measure: for each meeting, the sum of the lengths travelled by each of the attendees from their residence place to the place of the meeting must not exceed r . What is the minimum value of r ( which can be any nonnegative real number) for which there exists a place of residence that allows you to hold the three possible meetings involving you and two of your friends? Note that the chosen place of residence need not have integer coordinates.",
    "input": "The first line contains the two integers x_ 1, y_ 1 ( - 10^ 4 \u2264 x_ 1, y_ 1 \u2264 10^ 4 ) \u2014 the coordinates of the house of your friend Fabio. The second line contains the two integers x_ 2, y_ 2 ( - 10^ 4 \u2264 x_ 2, y_ 2 \u2264 10^ 4 ) \u2014 the coordinates of the house of your friend Flavio. The third line contains the two integers x_ 3, y_ 3 ( - 10^ 4 \u2264 x_ 3, y_ 3 \u2264 10^ 4 ) \u2014 the coordinates of the house of your friend Francesco. It is guaranteed that your three friends live in different places ( i. e. , the three points ( x_ 1, y_ 1) , ( x_ 2, y_ 2) , ( x_ 3, y_ 3) are guaranteed to be distinct) .",
    "output": "Print the minimum value of r which allows you to find a residence place satisfying the above conditions. Your answer is considered correct if its absolute or relative error does not exceed 10^ - 4 . Formally, let your answer be a , and the jury' s answer be b . Your answer is accepted if and only if | a - b| / max( 1, | b| ) \u2264 10^ - 4 .",
    "note": "In the first sample, Fabio, Flavio and Francesco live at the points with coordinates ( 0, 0) , ( 5, 0) and ( 3, 3) respectively. The optimal place of residence, represented by a green house in the picture below, is at the point with coordinates ( 2. 3842. . . , 0. 4151. . . ) . For instance, it is possible for you to meet Flavio and Francesco at the point depicted below, so that the sum of the lengths travelled by the three attendees is at most ( and in fact equal to) r= 5. 0686. . . . In the second sample, any point on the segment { ( x, 0) : - 1 \u2264 x \u2264 1 } is an optimal place of residence.",
    "topics": [
      "geometry",
      "ternary search"
    ],
    "id": "1662K"
  },
  {
    "title": "Weird Sum",
    "url": "https://codeforces.com/problemset/problem/1648/A",
    "history": "Egor has a table of size n \u00d7 m , with lines numbered from 1 to n and columns numbered from 1 to m . Each cell has a color that can be presented as an integer from 1 to 10^ 5 . Let us denote the cell that lies in the intersection of the r - th row and the c - th column as ( r, c) . We define the manhattan distance between two cells ( r_ 1, c_ 1) and ( r_ 2, c_ 2) as the length of a shortest path between them where each consecutive cells in the path must have a common side. The path can go through cells of any color. For example, in the table 3 \u00d7 4 the manhattan distance between ( 1, 2) and ( 3, 3) is 3 , one of the shortest paths is the following: ( 1, 2) \u2192 ( 2, 2) \u2192 ( 2, 3) \u2192 ( 3, 3) . Egor decided to calculate the sum of manhattan distances between each pair of cells of the same color. Help him to calculate this sum.",
    "input": "The first line contains two integers n and m ( 1 \u2264 n \u2264 m , n \u00b7 m \u2264 100 000 ) \u2014 number of rows and columns in the table. Each of next n lines describes a row of the table. The i - th line contains m integers c_ i1, c_ i2, . . . , c_ im ( 1 \u2264 c_ ij\u2264 100 000 ) \u2014 colors of cells in the i - th row.",
    "output": "Print one integer \u2014 the the sum of manhattan distances between each pair of cells of the same color.",
    "note": "In the first sample there are three pairs of cells of same color: in cells ( 1, 1) and ( 2, 3) , in cells ( 1, 2) and ( 2, 2) , in cells ( 1, 3) and ( 2, 1) . The manhattan distances between them are 3 , 1 and 3 , the sum is 7 .",
    "topics": [
      "combinatorics",
      "data structures",
      "geometry",
      "math",
      "matrices",
      "sortings"
    ],
    "id": "1648A"
  },
  {
    "title": "Hard Way",
    "url": "https://codeforces.com/problemset/problem/1642/A",
    "history": "Sam lives in Awesomeburg, its downtown has a triangular shape. Also, the following is true about the triangle: its vertices have integer coordinates, the coordinates of vertices are non- negative, and its vertices are not on a single line. He calls a point on the downtown' s border ( that is the border of the triangle) safe if he can reach this point from at least one point of the line y = 0 walking along some straight line, without crossing the interior of the triangle. In the picture the downtown is marked with grey color. The first path is invalid because it does not go along a straight line. The second path is invalid because it intersects with the interior of the downtown. The third and fourth paths are correct. Find the total length of the unsafe parts of the downtown border. It can be proven that these parts are segments and their number is finite.",
    "input": "Each test contains multiple test cases. The first line contains a single integer t ( 1 \u2264 t \u2264 1000 ) \u2014 the number of test cases. Description of the test cases follows. Each test case contains three lines, each of them contains two integers x_ i , y_ i ( 0 \u2264 x_ i, y_ i \u2264 10^ 9 ) \u2014 coordinates of the vertices of the downtown' s border.",
    "output": "For each test case print a single number \u2014 the answer to the problem. Your answer will be considered correct if its absolute or relative error does not exceed 10^ - 9 . Formally let your answer be a , jury answer be b . Your answer will be considered correct if | a - b| / max( 1, | b| ) \u2264 10^ - 9 .",
    "note": "In the picture, the downtowns of the first three test cases are illustrated. Triangles are enumerated according to the indices of test cases they belong to. In the first two test cases, all points on the borders of the downtowns are safe, thus the answers are 0 . In the following picture unsafe points for the third test case are marked with black color: In the fourth test case, all points on the border of the downtown are safe.",
    "topics": [
      "geometry"
    ],
    "id": "1642A"
  },
  {
    "title": "Covering Circle",
    "url": "https://codeforces.com/problemset/problem/1641/F",
    "history": "Sam started playing with round buckets in the sandbox, while also scattering pebbles. His mom decided to buy him a new bucket, so she needs to solve the following task. You are given n distinct points with integer coordinates A_ 1, A_ 2, . . . , A_ n . All points were generated from the square [ - 10^ 8, 10^ 8] \u00d7 [ - 10^ 8, 10^ 8] uniformly and independently. You are given positive integers k , l , such that k \u2264 l \u2264 n . You want to select a subsegment A_ i, A_ i+ 1, . . . , A_ i+ l- 1 of the points array ( for some 1 \u2264 i \u2264 n + 1 - l ) , and some circle on the plane, containing \u2265 k points of the selected subsegment ( inside or on the border) . What is the smallest possible radius of that circle?",
    "input": "Each test contains multiple test cases. The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. Descriptions of test cases follow. The first line of each test case contains three integers n , l , k ( 2 \u2264 k \u2264 l \u2264 n \u2264 50 000 , k \u2264 20 ) . Each of the next n lines contains two integers x_ i , y_ i ( - 10^ 8 \u2264 x_ i, y_ i \u2264 10^ 8 ) \u2014 the coordinates of the point A_ i . It is guaranteed that all points are distinct and were generated independently from uniform distribution on [ - 10^ 8, 10^ 8] \u00d7 [ - 10^ 8, 10^ 8] . It is guaranteed that the sum of n for all test cases does not exceed 50 000 . In the first test, points were not generated from the uniform distribution on [ - 10^ 8, 10^ 8] \u00d7 [ - 10^ 8, 10^ 8] for simplicity. It is the only such test and your solution must pass it. Hacks are disabled in this problem.",
    "output": "For each test case print a single real number \u2014 the answer to the problem. Your answer will be considered correct if its absolute or relative error does not exceed 10^ - 9 . Formally let your answer be a , jury answer be b . Your answer will be considered correct if | a - b| / max( 1, | b| ) \u2264 10^ - 9 .",
    "note": "In the first test case, we can select subsegment A_ 1, A_ 2 and a circle with center ( 0, 2) and radius 2 . In the second test case, we can select subsegment A_ 1, A_ 2, A_ 3, A_ 4 and a circle with center ( 1, 2) and radius 1 .",
    "topics": [
      "geometry"
    ],
    "id": "1641F"
  },
  {
    "title": "Spaceship Crisis Management",
    "url": "https://codeforces.com/problemset/problem/1628/F",
    "history": "NASA ( Norwegian Astronaut Stuff Association) is developing a new steering system for spaceships. But in its current state, it wouldn' t be very safe if the spaceship would end up in a bunch of space junk. To make the steering system safe, they need to answer the following: Given the target position t = ( 0, 0) , a set of n pieces of space junk l described by line segments l_ i = ( ( a_ ix, a_ iy) , ( b_ ix, b_ iy) ) , and a starting position s = ( s_ x, s_ y) , is there a direction such that floating in that direction from the starting position would lead to the target position? When the spaceship hits a piece of space junk, what happens depends on the absolute difference in angle between the floating direction and the line segment, \u03b8 : If \u03b8 < 45^ \u2218 , the spaceship slides along the piece of space junk in the direction that minimizes the change in angle, and when the spaceship slides off the end of the space junk, it continues floating in the direction it came in ( before hitting the space junk) . If \u03b8\u2265 45^ \u2218 , the spaceship stops, because there is too much friction to slide along the space junk. You are only given the set of pieces of space junk once, and the target position is always ( 0, 0) , but there are q queries, each with a starting position s_ j = ( s_ jx, s_ jy) . Answer the above question for each query.",
    "input": "The first line contains the the integer n ( 1 \u2264 n \u2264 1500 ) . Then follows n lines, the i - th of which containing the 4 integers a_ ix , a_ iy , b_ ix , and b_ iy ( | a_ ix| , | a_ iy| , | b_ ix| , | b_ iy| \u2264 1000 ) . Then follows a line containing the integer q ( 1 \u2264 q \u2264 1000 ) . Then follows q lines, the j - th of which containing the 2 integers s_ jx and s_ jy ( | s_ jx| , | s_ jy| \u2264 1000 ) . It is guaranteed that none of the segments in l cross or touch, that t is not on any segment in l , that s_ j is not on any segment in l , and that s = \u0338 t .",
    "output": "For each query s_ j print an answer. If there exists a direction such that floating from s_ j in that direction, possibly sliding along some pieces of space junk, leads to t , print \" YES\" . Otherwise, print \" NO\" ( case insensitive) .",
    "note": "The blue cross represents the target location, and the other blue line segments represent the space junk. Green dots represent starting locations where the answer is yes, and red dots represent starting locations where the answer is no. The yellow lines are possible paths to the target location for the 3 rd and 14 th queries. The black line is a possible path from the starting location in the 6 th query, but it barely misses the target location.",
    "topics": [
      "binary search",
      "data structures",
      "geometry",
      "sortings"
    ],
    "id": "1628F"
  },
  {
    "title": "Not Splitting",
    "url": "https://codeforces.com/problemset/problem/1627/F",
    "history": "There is a k \u00d7 k grid, where k is even. The square in row r and column c is denoted by ( r, c) . Two squares ( r_ 1, c_ 1) and ( r_ 2, c_ 2) are considered adjacent if | r_ 1 - r_ 2 | + | c_ 1 - c_ 2 | = 1 . An array of adjacent pairs of squares is called strong if it is possible to cut the grid along grid lines into two connected, congruent pieces so that each pair is part of the same piece. Two pieces are congruent if one can be matched with the other by translation, rotation, and reflection, or a combination of these. The picture above represents the first test case. Arrows indicate pairs of squares, and the thick black line represents the cut. You are given an array a of n pairs of adjacent squares. Find the size of the largest strong subsequence of a . An array p is a subsequence of an array q if p can be obtained from q by deletion of several ( possibly, zero or all) elements.",
    "input": "The input consists of multiple test cases. The first line contains an integer t ( 1 \u2264 t \u2264 100 ) \u2014 the number of test cases. The description of the test cases follows. The first line of each test case contains two space- separated integers n and k ( 1 \u2264 n \u2264 10^ 5 ; 2 \u2264 k \u2264 500 , k is even) \u2014 the length of a and the size of the grid, respectively. Then n lines follow. The i - th of these lines contains four space- separated integers r_ i, 1 , c_ i, 1 , r_ i, 2 , and c_ i, 2 ( 1 \u2264 r_ i, 1, c_ i, 1, r_ i, 2, c_ i, 2\u2264 k ) \u2014 the i - th element of a , represented by the row and column of the first square ( r_ i, 1, c_ i, 1) and the row and column of the second square ( r_ i, 2, c_ i, 2) . These squares are adjacent. It is guaranteed that the sum of n over all test cases does not exceed 10^ 5 , and the sum of k over all test cases does not exceed 500 .",
    "output": "For each test case, output a single integer \u2014 the size of the largest strong subsequence of a .",
    "note": "In the first test case, the array a is not good, but if we take the subsequence [ a_ 1, a_ 2, a_ 3, a_ 4, a_ 5, a_ 6, a_ 8] , then the square can be split as shown in the statement. In the second test case, we can take the subsequence consisting of the last four elements of a and cut the square with a horizontal line through its center.",
    "topics": [
      "geometry",
      "graphs",
      "greedy",
      "implementation",
      "shortest paths"
    ],
    "id": "1627F"
  },
  {
    "title": "Construct a Rectangle",
    "url": "https://codeforces.com/problemset/problem/1622/A",
    "history": "There are three sticks with integer lengths l_ 1, l_ 2 and l_ 3 . You are asked to break exactly one of them into two pieces in such a way that: both pieces have positive ( strictly greater than 0 ) integer length; the total length of the pieces is equal to the original length of the stick; it' s possible to construct a rectangle from the resulting four sticks such that each stick is used as exactly one of its sides. A square is also considered a rectangle. Determine if it' s possible to do that.",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of testcases. The only line of each testcase contains three integers l_ 1, l_ 2, l_ 3 ( 1 \u2264 l_ i \u2264 10^ 8 ) \u2014 the lengths of the sticks.",
    "output": "For each testcase, print \" YES\" if it' s possible to break one of the sticks into two pieces with positive integer length in such a way that it' s possible to construct a rectangle from the resulting four sticks. Otherwise, print \" NO\" . You may print every letter in any case you want ( so, for example, the strings yEs, yes, Yes and YES are all recognized as a positive answer) .",
    "note": "In the first testcase, the first stick can be broken into parts of length 1 and 5 . We can construct a rectangle with opposite sides of length 1 and 5 . In the second testcase, breaking the stick of length 2 can only result in sticks of lengths 1, 1, 2, 5 , which can' t be made into a rectangle. Breaking the stick of length 5 can produce results 2, 3 or 1, 4 but neither of them can' t be put into a rectangle. In the third testcase, the second stick can be broken into parts of length 2 and 2 . The resulting rectangle has opposite sides 2 and 2 ( which is a square) . In the fourth testcase, the third stick can be broken into parts of length 2 and 2 . The resulting rectangle has opposite sides 2 and 5 .",
    "topics": [
      "geometry",
      "math"
    ],
    "id": "1622A"
  },
  {
    "title": "Triangles on a Rectangle",
    "url": "https://codeforces.com/problemset/problem/1620/B",
    "history": "A rectangle with its opposite corners in ( 0, 0) and ( w, h) and sides parallel to the axes is drawn on a plane. You are given a list of lattice points such that each point lies on a side of a rectangle but not in its corner. Also, there are at least two points on every side of a rectangle. Your task is to choose three points in such a way that: exactly two of them belong to the same side of a rectangle; the area of a triangle formed by them is maximum possible. Print the doubled area of this triangle. It can be shown that the doubled area of any triangle formed by lattice points is always an integer.",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of testcases. The first line of each testcase contains two integers w and h ( 3 \u2264 w, h \u2264 10^ 6 ) \u2014 the coordinates of the corner of a rectangle. The next two lines contain the description of the points on two horizontal sides. First, an integer k ( 2 \u2264 k \u2264 2 \u00b7 10^ 5 ) \u2014 the number of points. Then, k integers x_ 1 < x_ 2 < . . . < x_ k ( 0 < x_ i < w ) \u2014 the x coordinates of the points in the ascending order. The y coordinate for the first line is 0 and for the second line is h . The next two lines contain the description of the points on two vertical sides. First, an integer k ( 2 \u2264 k \u2264 2 \u00b7 10^ 5 ) \u2014 the number of points. Then, k integers y_ 1 < y_ 2 < . . . < y_ k ( 0 < y_ i < h ) \u2014 the y coordinates of the points in the ascending order. The x coordinate for the first line is 0 and for the second line is w . The total number of points on all sides in all testcases doesn' t exceed 2 \u00b7 10^ 5 .",
    "output": "For each testcase print a single integer \u2014 the doubled maximum area of a triangle formed by such three points that exactly two of them belong to the same side.",
    "note": "The points in the first testcase of the example: ( 1, 0) , ( 2, 0) ; ( 2, 8) , ( 3, 8) , ( 4, 8) ; ( 0, 1) , ( 0, 4) , ( 0, 6) ; ( 5, 4) , ( 5, 5) . The largest triangle is formed by points ( 0, 1) , ( 0, 6) and ( 5, 4) \u2014 its area is 25/ 2 . Thus, the doubled area is 25 . Two points that are on the same side are: ( 0, 1) and ( 0, 6) .",
    "topics": [
      "geometry",
      "greedy",
      "math"
    ],
    "id": "1620B"
  },
  {
    "title": "Representative Edges",
    "url": "https://codeforces.com/problemset/problem/1616/C",
    "history": "An array a_ 1, a_ 2, . . . , a_ n is good if and only if for every subsegment 1 \u2264 l \u2264 r \u2264 n , the following holds: a_ l + a_ l + 1 + . . . + a_ r = 1/ 2( a_ l + a_ r) \u00b7 ( r - l + 1) . You are given an array of integers a_ 1, a_ 2, . . . , a_ n . In one operation, you can replace any one element of this array with any real number. Find the minimum number of operations you need to make this array good.",
    "input": "The first line of input contains one integer t ( 1 \u2264 t \u2264 100 ) : the number of test cases. Each of the next t lines contains the description of a test case. In the first line you are given one integer n ( 1 \u2264 n \u2264 70 ) : the number of integers in the array. The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( - 100 \u2264 a_ i \u2264 100 ) : the initial array.",
    "output": "For each test case, print one integer: the minimum number of elements that you need to replace to make the given array good.",
    "note": "In the first test case, the array is good already. In the second test case, one of the possible good arrays is [ 1, 1, 1, 1] ( replaced elements are underlined) . In the third test case, the array is good already. In the fourth test case, one of the possible good arrays is [ - 2. 5, - 2, - 1. 5, - 1, - 0. 5, 0] .",
    "topics": [
      "brute force",
      "geometry",
      "implementation",
      "math"
    ],
    "id": "1616C"
  },
  {
    "title": "Shortest path",
    "url": "https://codeforces.com/problemset/problem/1599/G",
    "history": "You are given N points on an infinite plane with the Cartesian coordinate system on it. N- 1 points lay on one line, and one point isn' t on that line. You are on point K at the start, and the goal is to visit every point. You can move between any two points in a straight line, and you can revisit points. What is the minimum length of the path?",
    "input": "The first line contains two integers: N ( 3 \u2264 N \u2264 2* 10^ 5 ) - the number of points, and K ( 1 \u2264 K \u2264 N ) - the index of the starting point. Each of the next N lines contain two integers, A_ i , B_ i ( - 10^ 6 \u2264 A_ i, B_ i \u2264 10^ 6 ) - coordinates of the i- th point.",
    "output": "The output contains one number - the shortest path to visit all given points starting from point K . The absolute difference between your solution and the main solution shouldn' t exceed 10^ - 6 ;",
    "note": "The shortest path consists of these moves: 2 - > 5 5 - > 4 4 - > 1 1 - > 3 There isn' t any shorter path possible.",
    "topics": [
      "brute force",
      "geometry",
      "math",
      "shortest paths"
    ],
    "id": "1599G"
  },
  {
    "title": "Training Session",
    "url": "https://codeforces.com/problemset/problem/1598/D",
    "history": "Monocarp is the coach of the Berland State University programming teams. He decided to compose a problemset for a training session for his teams. Monocarp has n problems that none of his students have seen yet. The i - th problem has a topic a_ i ( an integer from 1 to n ) and a difficulty b_ i ( an integer from 1 to n ) . All problems are different, that is, there are no two tasks that have the same topic and difficulty at the same time. Monocarp decided to select exactly 3 problems from n problems for the problemset. The problems should satisfy at least one of two conditions ( possibly, both) : the topics of all three selected problems are different; the difficulties of all three selected problems are different. Your task is to determine the number of ways to select three problems for the problemset.",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 50000 ) \u2014 the number of testcases. The first line of each testcase contains an integer n ( 3 \u2264 n \u2264 2 \u00b7 10^ 5 ) \u2014 the number of problems that Monocarp have. In the i - th of the following n lines, there are two integers a_ i and b_ i ( 1 \u2264 a_ i, b_ i \u2264 n ) \u2014 the topic and the difficulty of the i - th problem. It is guaranteed that there are no two problems that have the same topic and difficulty at the same time. The sum of n over all testcases doesn' t exceed 2 \u00b7 10^ 5 .",
    "output": "Print the number of ways to select three training problems that meet either of the requirements described in the statement.",
    "note": "In the first example, you can take the following sets of three problems: problems 1 , 2 , 4 ; problems 1 , 3 , 4 ; problems 2 , 3 , 4 . Thus, the number of ways is equal to three.",
    "topics": [
      "combinatorics",
      "data structures",
      "geometry",
      "implementation",
      "math"
    ],
    "id": "1598D"
  },
  {
    "title": "Eligible Segments",
    "url": "https://codeforces.com/problemset/problem/1584/G",
    "history": "You are given n distinct points p_ 1, p_ 2, . . . , p_ n on the plane and a positive integer R . Find the number of pairs of indices ( i, j) such that 1 \u2264 i < j \u2264 n , and for every possible k ( 1 \u2264 k \u2264 n ) the distance from the point p_ k to the segment between points p_ i and p_ j is at most R .",
    "input": "The first line contains two integers n , R ( 1 \u2264 n \u2264 3000 , 1 \u2264 R \u2264 10^ 5 ) \u2014 the number of points and the maximum distance between a point and a segment. Each of the next n lines contains two integers x_ i , y_ i ( - 10^ 5 \u2264 x_ i, y_ i \u2264 10^ 5 ) that define the i - th point p_ i= ( x_ i, y_ i) . All points are distinct. It is guaranteed that the answer does not change if the parameter R is changed by at most 10^ - 2 .",
    "output": "Print the number of suitable pairs ( i, j) .",
    "note": "In the first example, the only pair of points ( - 3, 0) , ( 3, 0) is suitable. The distance to the segment between these points from the points ( 0, 1) and ( 0, - 1) is equal to 1 , which is less than R= 2 . In the second example, all possible pairs of points are eligible.",
    "topics": [
      "geometry"
    ],
    "id": "1584G"
  },
  {
    "title": "Framing Pictures",
    "url": "https://codeforces.com/problemset/problem/1578/F",
    "history": "Life has been discovered on Venus! What is more, the life forms appear to be convex polygons. An international consortium is designing a probe to send to Venus to take pictures, but they need to estimate the bandwidth needed to send back pictures. When the probe takes a picture of a life form and wishes to send it back to Earth, the bandwidth required is proportional to the area of the bounding box ( in other words, the smallest axis- aligned rectangle that contains the life- form) . The shape and size of the life forms are known, but the orientation relative to the camera is random. You must thus determine the expected ( average) area of the bounding box across all orientations.",
    "input": "The input describes the shape of a life form as a convex polygon in two dimensions. The first line of input contains an integer n ( 3 \u2264 n \u2264 200 000 ) \u2014 the number of vertices. The remaining n lines each contain two integers x and y ( - 10^ 9 \u2264 x, y \u2264 10^ 9 ) \u2014 the coordinates of a vertex. The vertices are given in counterclockwise order, and no three vertices lie on a straight line.",
    "output": "Output a single line containing the expected area of the bounding box of the polygon. Your answer should have an absolute or relative error of at most 10^ - 6 .",
    "note": "The pictures show example life forms and various camera orientations.",
    "topics": [
      "geometry"
    ],
    "id": "1578F"
  },
  {
    "title": "Managing Telephone Poles",
    "url": "https://codeforces.com/problemset/problem/1575/M",
    "history": "Mr. Chanek' s city can be represented as a plane. He wants to build a housing complex in the city. There are some telephone poles on the plane, which is represented by a grid a of size ( n + 1) \u00d7 ( m + 1) . There is a telephone pole at ( x, y) if a_ x, y = 1 . For each point ( x, y) , define S( x, y) as the square of the Euclidean distance between the nearest pole and ( x, y) . Formally, the square of the Euclidean distance between two points ( x_ 1, y_ 1) and ( x_ 2, y_ 2) is ( x_ 2 - x_ 1) ^ 2 + ( y_ 2 - y_ 1) ^ 2 . To optimize the building plan, the project supervisor asks you the sum of all S( x, y) for each 0 \u2264 x \u2264 n and 0 \u2264 y \u2264 m . Help him by finding the value of \u2211_ x= 0^ n\u2211_ y= 0^ mS( x, y) .",
    "input": "The first line contains two integers n and m ( 0 \u2264 n, m < 2000 ) \u2014 the size of the grid. Then ( n + 1) lines follow, each containing ( m + 1) integers a_ i, j ( 0 \u2264 a_ i, j\u2264 1 ) \u2014 the grid denoting the positions of telephone poles in the plane. There is at least one telephone pole in the given grid.",
    "output": "Output an integer denoting the value of \u2211_ x= 0^ n\u2211_ y= 0^ mS( x, y) .",
    "note": "In the first example, the nearest telephone pole for the points ( 0, 0) , ( 1, 0) , ( 2, 0) , ( 0, 1) , ( 1, 1) , and ( 2, 1) is at ( 0, 0) . While the nearest telephone pole for the points ( 0, 2) , ( 1, 2) , and ( 2, 2) is at ( 0, 2) . Thus, \u2211_ x= 0^ n\u2211_ y= 0^ mS( x, y) = ( 0 + 1 + 4) + ( 1 + 2 + 5) + ( 0 + 1 + 4) = 18 .",
    "topics": [
      "data structures",
      "geometry"
    ],
    "id": "1575M"
  },
  {
    "title": "Building an Amusement Park",
    "url": "https://codeforces.com/problemset/problem/1575/B",
    "history": "Mr. Chanek lives in a city represented as a plane. He wants to build an amusement park in the shape of a circle of radius r . The circle must touch the origin ( point ( 0, 0) ) . There are n bird habitats that can be a photo spot for the tourists in the park. The i - th bird habitat is at point p_ i = ( x_ i, y_ i) . Find the minimum radius r of a park with at least k bird habitats inside. A point is considered to be inside the park if and only if the distance between p_ i and the center of the park is less than or equal to the radius of the park. Note that the center and the radius of the park do not need to be integers. In this problem, it is guaranteed that the given input always has a solution with r \u2264 2 \u00b7 10^ 5 .",
    "input": "The first line contains two integers n and k ( 1 \u2264 n \u2264 10^ 5 , 1 \u2264 k \u2264 n ) \u2014 the number of bird habitats in the city and the number of bird habitats required to be inside the park. The i - th of the next n lines contains two integers x_ i and y_ i ( 0 \u2264 | x_ i| , | y_ i| \u2264 10^ 5 ) \u2014 the position of the i - th bird habitat.",
    "output": "Output a single real number r denoting the minimum radius of a park with at least k bird habitats inside. It is guaranteed that the given input always has a solution with r \u2264 2 \u00b7 10^ 5 . Your answer is considered correct if its absolute or relative error does not exceed 10^ - 4 . Formally, let your answer be a , and the jury' s answer be b . Your answer is accepted if and only if | a - b| / max( 1, | b| ) \u2264 10^ - 4 .",
    "note": "In the first example, Mr. Chanek can put the center of the park at ( - 3, - 1) with radius \u221a( 10) \u2248 3. 162 . It can be proven this is the minimum r . The following illustrates the first example. The blue points represent bird habitats and the red circle represents the amusement park.",
    "topics": [
      "binary search",
      "geometry"
    ],
    "id": "1575B"
  },
  {
    "title": "Polygon",
    "url": "https://codeforces.com/problemset/problem/1572/E",
    "history": "You are given a strictly convex polygon with n vertices. You will make k cuts that meet the following conditions: each cut is a segment that connects two different nonadjacent vertices; two cuts can intersect only at vertices of the polygon. Your task is to maximize the area of the smallest region that will be formed by the polygon and those k cuts.",
    "input": "The first line contains two integers n , k ( 3 \u2264 n \u2264 200 , 0 \u2264 k \u2264 n- 3 ) . The following n lines describe vertices of the polygon in anticlockwise direction. The i - th line contains two integers x_ i , y_ i ( | x_ i| , | y_ i| \u2264 10^ 8 ) \u2014 the coordinates of the i - th vertex. It is guaranteed that the polygon is convex and that no two adjacent sides are parallel.",
    "output": "Print one integer: the maximum possible area of the smallest region after making k cuts multiplied by 2 .",
    "note": "In the first example, it' s optimal to make cuts between the following pairs of vertices: ( - 2, - 4) and ( 4, 2) , ( - 2, - 4) and ( 1, 5) , ( - 5, - 1) and ( 1, 5) , ( - 5, 0) and ( 0, 5) . Points ( - 5, - 1) , ( 1, 5) , ( 0, 5) , ( - 5, 0) determine the smallest region with double area of 11 . In the second example, it' s optimal to make cuts between the following pairs of vertices: ( 2, - 1) and ( 0, 2) , ( 2, - 1) and ( 1, 0) , ( - 1, 0) and ( 0, 2) . Points ( 2, - 2) , ( 2, - 1) , ( - 1, 0) determine one of the smallest regions with double area of 3 .",
    "topics": [
      "binary search",
      "dp",
      "geometry"
    ],
    "id": "1572E"
  },
  {
    "title": "Laser Beams",
    "url": "https://codeforces.com/problemset/problem/1571/H",
    "history": "Ira is developing a computer game. This game features randomized generation and difficulty of levels. To achieve randomized difficulty, some enemies in each level are randomly replaced with stronger ones. To describe how do the levels in the game look, let' s introduce a coordinate system in such a way that Ox axis goes from left to right, and Oy axis goes from bottom to top. A level is a rectangle with opposite corners in points ( 0, 0) and ( a, b) . Each enemy' s position is a point in this rectangle. As for now, Ira has implemented one type of enemy in the game, in two different versions \u2014 basic and upgraded. Both versions of enemies Ira has implemented fire laser rays in several directions: basic enemies fire four laser rays in four directions: to the right ( in the same direction as the vector ( 1, 0) ) , to the left ( in the same direction as the vector ( - 1, 0) ) , up ( in the same direction as the vector ( 0, 1) ) , and down ( in the same direction as the vector ( 0, - 1) ) ; upgraded enemies fire eight laser rays in eight directions: four directions listed for basic enemies, and four directions corresponding to vectors ( 1, 1) , ( 1, - 1) , ( - 1, 1) , ( - 1, - 1) . Laser rays pass through enemies and are blocked only by the borders of the level ( sides of the rectangle that denotes the level) . Enemies are unaffected by lasers. The level Ira is working on has n enemies. The i - th enemy is in the point ( x_ i, y_ i) , and it has a probability of p_ i to be upgraded ( it' s either upgraded with probability p_ i , or basic with probability 1- p_ i ) . All these events are independent. Ira wants to estimate the expected difficulty. She considers that a good way to evaluate the difficulty of the level is to count the number of parts in which the level is divided by the laser rays. So, she wants to calculate the expected number of these parts. Help her to do the evaluation of the level!",
    "input": "The first line contains three integers n , a and b ( 1 \u2264 n \u2264 100 ; 2 \u2264 a, b \u2264 100 ) \u2014 the number of enemies in the level and the dimensions of the level. Then n lines follow, the i - th of them contains three integers x_ i , y_ i and p' _ i ( 1 \u2264 x_ i \u2264 a - 1 ; 1 \u2264 y_ i \u2264 b - 1 ; 1 \u2264 p' _ i \u2264 999999 ) , meaning that the i - th enemy is located at ( x_ i, y_ i) and has a probability of p' _ i/ 10^ 6 to be upgraded. No two enemies are located in the same point.",
    "output": "Print one integer \u2014 the expected number of parts in which the lasers divide the level, taken modulo 998244353 ( i. e. let the expected number of parts be x/ y as an irreducible fraction; you have to print x \u00b7 y^ - 1 998244353 , where y^ - 1 is a number such that y \u00b7 y^ - 1 998244353 = 1 ) .",
    "note": "Explanation to the first example: With probability 1/ 2 , the only enemy is not upgraded and the level looks like this ( 4 parts) : With probability 1/ 2 , the only enemy is upgraded and the level looks like this ( 8 parts) : So, the expected number of parts is 4 \u00b71/ 2 + 8 \u00b71/ 2 = 6 .",
    "topics": [
      "*special",
      "geometry",
      "probabilities"
    ],
    "id": "1571H"
  },
  {
    "title": "Maximize the Intersections",
    "url": "https://codeforces.com/problemset/problem/1552/C",
    "history": "On a circle lie 2n distinct points, with the following property: however you choose 3 chords that connect 3 disjoint pairs of points, no point strictly inside the circle belongs to all 3 chords. The points are numbered 1, 2, . . . , 2n in clockwise order. Initially, k chords connect k pairs of points, in such a way that all the 2k endpoints of these chords are distinct. You want to draw n - k additional chords that connect the remaining 2( n - k) points ( each point must be an endpoint of exactly one chord) . In the end, let x be the total number of intersections among all n chords. Compute the maximum value that x can attain if you choose the n - k chords optimally. Note that the exact position of the 2n points is not relevant, as long as the property stated in the first paragraph holds.",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 100 ) \u2014 the number of test cases. Then t test cases follow. The first line of each test case contains two integers n and k ( 1 \u2264 n \u2264 100 , 0 \u2264 k \u2264 n ) \u2014 half the number of points and the number of chords initially drawn. Then k lines follow. The i - th of them contains two integers x_ i and y_ i ( 1 \u2264 x_ i, y_ i \u2264 2n , x_ i y_ i ) \u2014 the endpoints of the i - th chord. It is guaranteed that the 2k numbers x_ 1, y_ 1, x_ 2, y_ 2, . . . , x_ k, y_ k are all distinct.",
    "output": "For each test case, output the maximum number of intersections that can be obtained by drawing n - k additional chords.",
    "note": "In the first test case, there are three ways to draw the 2 additional chords, shown below ( black chords are the ones initially drawn, while red chords are the new ones) : We see that the third way gives the maximum number of intersections, namely 4 . In the second test case, there are no more chords to draw. Of course, with only one chord present there are no intersections. In the third test case, we can make at most one intersection by drawing chords 1- 3 and 2- 4 , as shown below:",
    "topics": [
      "combinatorics",
      "constructive algorithms",
      "geometry",
      "greedy",
      "sortings"
    ],
    "id": "1552C"
  },
  {
    "title": "Manhattan Subarrays",
    "url": "https://codeforces.com/problemset/problem/1550/C",
    "history": "Suppose you have two points p = ( x_ p, y_ p) and q = ( x_ q, y_ q) . Let' s denote the Manhattan distance between them as d( p, q) = | x_ p - x_ q| + | y_ p - y_ q| . Let' s say that three points p , q , r form a bad triple if d( p, r) = d( p, q) + d( q, r) . Let' s say that an array b_ 1, b_ 2, . . . , b_ m is good if it is impossible to choose three distinct indices i , j , k such that the points ( b_ i, i) , ( b_ j, j) and ( b_ k, k) form a bad triple. You are given an array a_ 1, a_ 2, . . . , a_ n . Calculate the number of good subarrays of a . A subarray of the array a is the array a_ l, a_ l + 1, . . . , a_ r for some 1 \u2264 l \u2264 r \u2264 n . Note that, according to the definition, subarrays of length 1 and 2 are good.",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 5000 ) \u2014 the number of test cases. The first line of each test case contains one integer n ( 1 \u2264 n \u2264 2 \u00b7 10^ 5 ) \u2014 the length of array a . The second line of each test case contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 9 ) . It' s guaranteed that the sum of n doesn' t exceed 2 \u00b7 10^ 5 .",
    "output": "For each test case, print the number of good subarrays of array a .",
    "note": "In the first test case, it can be proven that any subarray of a is good. For example, subarray [ a_ 2, a_ 3, a_ 4] is good since it contains only three elements and: d( ( a_ 2, 2) , ( a_ 4, 4) ) = | 4 - 3| + | 2 - 4| = 3 < d( ( a_ 2, 2) , ( a_ 3, 3) ) + d( ( a_ 3, 3) , ( a_ 4, 4) ) = 3 + 1 + 2 + 1 = 7 ; d( ( a_ 2, 2) , ( a_ 3, 3) ) < d( ( a_ 2, 2) , ( a_ 4, 4) ) + d( ( a_ 4, 4) , ( a_ 3, 3) ) ; d( ( a_ 3, 3) , ( a_ 4, 4) ) < d( ( a_ 3, 3) , ( a_ 2, 2) ) + d( ( a_ 2, 2) , ( a_ 4, 4) ) ; In the second test case, for example, subarray [ a_ 1, a_ 2, a_ 3, a_ 4] is not good, since it contains a bad triple ( a_ 1, 1) , ( a_ 2, 2) , ( a_ 4, 4) : d( ( a_ 1, 1) , ( a_ 4, 4) ) = | 6 - 9| + | 1 - 4| = 6 ; d( ( a_ 1, 1) , ( a_ 2, 2) ) = | 6 - 9| + | 1 - 2| = 4 ; d( ( a_ 2, 2) , ( a_ 4, 4) ) = | 9 - 9| + | 2 - 4| = 2 ; So, d( ( a_ 1, 1) , ( a_ 4, 4) ) = d( ( a_ 1, 1) , ( a_ 2, 2) ) + d( ( a_ 2, 2) , ( a_ 4, 4) ) .",
    "topics": [
      "brute force",
      "geometry",
      "greedy",
      "implementation"
    ],
    "id": "1550C"
  },
  {
    "title": "Gregor and the Odd Cows (Hard)",
    "url": "https://codeforces.com/problemset/problem/1548/D2",
    "history": "This is the hard version of the problem. The only difference from the easy version is that in this version the coordinates can be both odd and even. There are n fence- posts at distinct coordinates on a plane. It is guaranteed that no three fence posts lie on the same line. There are an infinite number of cows on the plane, one at every point with integer coordinates. Gregor is a member of the Illuminati, and wants to build a triangular fence, connecting 3 distinct existing fence posts. A cow strictly inside the fence is said to be enclosed. If there are an odd number of enclosed cows and the area of the fence is an integer, the fence is said to be interesting. Find the number of interesting fences.",
    "input": "The first line contains the integer n ( 3 \u2264 n \u2264 6000 ) , the number of fence posts which Gregor can choose to form the vertices of a fence. Each of the next n line contains two integers x and y ( 0 \u2264 x, y \u2264 10^ 7 , where ( x, y) is the coordinate of a fence post. All fence posts lie at distinct coordinates. No three fence posts are on the same line.",
    "output": "Print a single integer, the number of interesting fences. Two fences are considered different if they are constructed with a different set of three fence posts.",
    "note": "In the first example, there is only 1 fence. That fence is interesting since its area is 4 and there is 1 enclosed cow, marked in red. In the second example, there are 4 possible fences. Only one of them is interesting however. That fence has an area of 8 and 5 enclosed cows.",
    "topics": [
      "brute force",
      "geometry",
      "math",
      "number theory"
    ],
    "id": "1548D2"
  },
  {
    "title": "Gregor and the Odd Cows (Easy)",
    "url": "https://codeforces.com/problemset/problem/1548/D1",
    "history": "This is the easy version of the problem. The only difference from the hard version is that in this version all coordinates are even. There are n fence- posts at distinct coordinates on a plane. It is guaranteed that no three fence posts lie on the same line. There are an infinite number of cows on the plane, one at every point with integer coordinates. Gregor is a member of the Illuminati, and wants to build a triangular fence, connecting 3 distinct existing fence posts. A cow strictly inside the fence is said to be enclosed. If there are an odd number of enclosed cows and the area of the fence is an integer, the fence is said to be interesting. Find the number of interesting fences.",
    "input": "The first line contains the integer n ( 3 \u2264 n \u2264 6000 ) , the number of fence posts which Gregor can choose to form the vertices of a fence. Each of the next n line contains two integers x and y ( 0 \u2264 x, y \u2264 10^ 7 , x and y are even) , where ( x, y) is the coordinate of a fence post. All fence posts lie at distinct coordinates. No three fence posts are on the same line.",
    "output": "Print a single integer, the number of interesting fences. Two fences are considered different if they are constructed with a different set of three fence posts.",
    "note": "In the first example, there is only 1 fence. That fence is interesting since its area is 4 and there is 1 enclosed cow, marked in red. In the second example, there are 3 interesting fences. ( 0, 0) \u2014 ( 30, 14) \u2014 ( 2, 10) ( 2, 16) \u2014 ( 30, 14) \u2014 ( 2, 10) ( 30, 14) \u2014 ( 4, 6) \u2014 ( 2, 10)",
    "topics": [
      "bitmasks",
      "geometry",
      "math",
      "number theory"
    ],
    "id": "1548D1"
  },
  {
    "title": "Contest Start",
    "url": "https://codeforces.com/problemset/problem/1539/A",
    "history": "There are n people participating in some contest, they start participating in x minutes intervals. That means the first participant starts at time 0 , the second participant starts at time x , the third \u2014 at time 2 \u00b7 x , and so on. Duration of contest is t minutes for each participant, so the first participant finishes the contest at time t , the second \u2014 at time t + x , and so on. When a participant finishes the contest, their dissatisfaction equals to the number of participants that started the contest ( or starting it now) , but haven' t yet finished it. Determine the sum of dissatisfaction of all participants.",
    "input": "The first line contains a single integer k ( 1 \u2264 k \u2264 1000 ) \u2014 the number of test cases. Each of the next k lines contains three integers n , x , t ( 1 \u2264 n, x, t \u2264 2 \u00b7 10^ 9 ) \u2014 the number of participants, the start interval and the contest duration.",
    "output": "Print k lines, in the i - th line print the total dissatisfaction of participants in the i - th test case.",
    "note": "In the first example the first participant starts at 0 and finishes at time 5 . By that time the second and the third participants start, so the dissatisfaction of the first participant is 2 . The second participant starts at time 2 and finishes at time 7 . By that time the third the fourth participants start, so the dissatisfaction of the second participant is 2 . The third participant starts at 4 and finishes at 9 . By that time the fourth participant starts, so the dissatisfaction of the third participant is 1 . The fourth participant starts at 6 and finishes at 11 . By time 11 everyone finishes the contest, so the dissatisfaction of the fourth participant is 0 . In the second example the first participant starts at 0 and finishes at time 2 . By that time the second participants starts, and the third starts at exactly time 2 . So the dissatisfaction of the first participant is 2 . The second participant starts at time 1 and finishes at time 3 . At that time the third participant is solving the contest.",
    "topics": [
      "combinatorics",
      "geometry",
      "greedy",
      "math"
    ],
    "id": "1539A"
  },
  {
    "title": "Omkar and Akmar",
    "url": "https://codeforces.com/problemset/problem/1536/F",
    "history": "Omkar and Akmar are playing a game on a circular board with n ( 2 \u2264 n \u2264 10^ 6 ) cells. The cells are numbered from 1 to n so that for each i ( 1 \u2264 i \u2264 n- 1 ) cell i is adjacent to cell i+ 1 and cell 1 is adjacent to cell n . Initially, each cell is empty. Omkar and Akmar take turns placing either an A or a B on the board, with Akmar going first. The letter must be placed on an empty cell. In addition, the letter cannot be placed adjacent to a cell containing the same letter. A player loses when it is their turn and there are no more valid moves. Output the number of possible distinct games where both players play optimally modulo 10^ 9+ 7 . Note that we only consider games where some player has lost and there are no more valid moves. Two games are considered distinct if the number of turns is different or for some turn, the letter or cell number that the letter is placed on were different. A move is considered optimal if the move maximizes the player' s chance of winning, assuming the other player plays optimally as well. More formally, if the player who has to move has a winning strategy, they have to make a move after which they will still have a winning strategy. If they do not, they can make any move.",
    "input": "The only line will contain an integer n ( 2 \u2264 n \u2264 10^ 6 ) \u2014 the number of cells on the board.",
    "output": "Output a single integer \u2014 the number of possible distinct games where both players play optimally modulo 10^ 9+ 7 .",
    "note": "For the first sample case, the first player has 4 possible moves. No matter what the first player plays, the second player only has 1 possible move, so there are 4 possible games.",
    "topics": [
      "chinese remainder theorem",
      "combinatorics",
      "constructive algorithms",
      "fft",
      "games",
      "geometry",
      "math",
      "meet-in-the-middle",
      "string suffix structures"
    ],
    "id": "1536F"
  },
  {
    "title": "A New Beginning",
    "url": "https://codeforces.com/problemset/problem/1534/G",
    "history": "Annie has gotten bored of winning every coding contest and farming unlimited rating. Today, she is going to farm potatoes instead. Annie' s garden is an infinite 2D plane. She has n potatoes to plant, and the i - th potato must be planted at ( x_ i, y_ i) . Starting at the point ( 0, 0) , Annie begins walking, in one step she can travel one unit right or up ( increasing her x or y coordinate by 1 respectively) . At any point ( X, Y) during her walk she can plant some potatoes at arbitrary points using her potato gun, consuming max( | X- x| , | Y- y| ) units of energy in order to plant a potato at ( x, y) . Find the minimum total energy required to plant every potato. Note that Annie may plant any number of potatoes from any point.",
    "input": "The first line contains the integer n ( 1 \u2264 n \u2264 800 000 ) . The next n lines contain two integers x_ i and y_ i ( 0 \u2264 x_ i, y_ i \u2264 10^ 9 ) , representing the location of the i - th potato. It is possible that some potatoes should be planted in the same location.",
    "output": "Print the minimum total energy to plant all potatoes.",
    "note": "In example 1 , Annie can travel to each spot directly and plant a potato with no energy required. In example 2 , moving to ( 1, 0) , Annie plants the second potato using 1 energy. Next, she travels to ( 1, 1) and plants the first potato with 0 energy.",
    "topics": [
      "data structures",
      "dp",
      "geometry",
      "sortings"
    ],
    "id": "1534G"
  },
  {
    "title": "Off by One",
    "url": "https://codeforces.com/problemset/problem/1519/E",
    "history": "There are n points on an infinite plane. The i - th point has coordinates ( x_ i, y_ i) such that x_ i > 0 and y_ i > 0 . The coordinates are not necessarily integer. In one move you perform the following operations: choose two points a and b ( a = \u0338 b ) ; move point a from ( x_ a, y_ a) to either ( x_ a + 1, y_ a) or ( x_ a, y_ a + 1) ; move point b from ( x_ b, y_ b) to either ( x_ b + 1, y_ b) or ( x_ b, y_ b + 1) ; remove points a and b . However, the move can only be performed if there exists a line that passes through the new coordinates of a , new coordinates of b and ( 0, 0) . Otherwise, the move can' t be performed and the points stay at their original coordinates ( x_ a, y_ a) and ( x_ b, y_ b) , respectively. The numeration of points does not change after some points are removed. Once the points are removed, they can' t be chosen in any later moves. Note that you have to move both points during the move, you can' t leave them at their original coordinates. What is the maximum number of moves you can perform? What are these moves? If there are multiple answers, you can print any of them.",
    "input": "The first line contains a single integer n ( 1 \u2264 n \u2264 2 \u00b7 10^ 5 ) \u2014 the number of points. The i - th of the next n lines contains four integers a_ i, b_ i, c_ i, d_ i ( 1 \u2264 a_ i, b_ i, c_ i, d_ i \u2264 10^ 9 ) . The coordinates of the i - th point are x_ i = a_ i/ b_ i and y_ i = c_ i/ d_ i .",
    "output": "In the first line print a single integer c \u2014 the maximum number of moves you can perform. Each of the next c lines should contain a description of a move: two integers a and b ( 1 \u2264 a, b \u2264 n , a = \u0338 b ) \u2014 the points that are removed during the current move. There should be a way to move points a and b according to the statement so that there' s a line that passes through the new coordinates of a , the new coordinates of b and ( 0, 0) . No removed point can be chosen in a later move. If there are multiple answers, you can print any of them. You can print the moves and the points in the move in the arbitrary order.",
    "note": "Here are the points and the moves for the ones that get chosen for the moves from the first example:",
    "topics": [
      "constructive algorithms",
      "dfs and similar",
      "geometry",
      "graphs",
      "sortings",
      "trees"
    ],
    "id": "1519E"
  },
  {
    "title": "Fly Around the World",
    "url": "https://codeforces.com/problemset/problem/1517/H",
    "history": "After hearing the story of Dr. Zhang, Wowo decides to plan his own flight around the world. He already chose n checkpoints in the world map. Due to the landform and the clouds, he cannot fly too high or too low. Formally, let b_ i be the height of Wowo' s aircraft at checkpoint i , x_ i^ - \u2264 b_ i\u2264 x_ i^ + should be satisfied for all integers i between 1 and n , where x_ i^ - and x_ i^ + are given integers. The angle of Wowo' s aircraft is also limited. For example, it cannot make a 90 - degree climb. Formally, y_ i^ - \u2264 b_ i- b_ i- 1\u2264 y_ i^ + should be satisfied for all integers i between 2 and n , where y_ i^ - and y_ i^ + are given integers. The final limitation is the speed of angling up or angling down. An aircraft should change its angle slowly for safety concerns. Formally, z_ i^ - \u2264 ( b_ i - b_ i- 1) - ( b_ i- 1 - b_ i- 2) \u2264 z_ i^ + should be satisfied for all integers i between 3 and n , where z_ i^ - and z_ i^ + are given integers. Taking all these into consideration, Wowo finds that the heights at checkpoints are too hard for him to choose. Please help Wowo decide whether there exists a sequence of real numbers b_ 1, . . . , b_ n satisfying all the contraints above.",
    "input": "Each test contains multiple test cases. The first line contains the number of test cases t ( 1 \u2264 t \u2264 66 666 ) . Description of the test cases follows. The first line of each test case contains a single integer n ( 3 \u2264 n \u2264 100 000 ) . The i - th of the next n lines contains two integers x_ i^ - , x_ i^ + ( - 10^ 8\u2264 x_ i^ - \u2264 x_ i^ + \u2264 10^ 8 ) denoting the lower and upper bound of b_ i . The i - th of the next n- 1 lines contains two integers y_ i+ 1^ - , y_ i+ 1^ + ( - 10^ 8\u2264 y_ i+ 1^ - \u2264 y_ i+ 1^ + \u2264 10^ 8 ) denoting the lower and upper bound of b_ i+ 1- b_ i . The i - th of the next n- 2 lines contains two integers z_ i+ 2^ - , z_ i+ 2^ + ( - 10^ 8\u2264 z_ i+ 2^ - \u2264 z_ i+ 2^ + \u2264 10^ 8 ) denoting the lower and upper bound of ( b_ i+ 2- b_ i+ 1) - ( b_ i+ 1- b_ i) . It is guaranteed that the sum of n over all test cases does not exceed 200 000 . It is guaranteed that relaxing every constraint by 10^ - 6 ( i. e. , decrease x_ i^ - , y_ i^ - , z_ i^ - by 10^ - 6 and increase x_ i^ + , y_ i^ + , z_ i^ + by 10^ - 6 ) will not change the answer.",
    "output": "For each test case, output YES if a sequence b_ 1, . . . , b_ n satisfying the constraints exists and NO otherwise. The sequence b_ 1, . . . , b_ n is not required.",
    "note": "In the first test case, all b_ i ' s are in [ 0, 1] . Because of the constraints 1= y_ 2^ - \u2264 b_ 2- b_ 1\u2264 y_ 2^ + = 1 , b_ 2- b_ 1 must be 1 . So b_ 2= 1 and b_ 1= 0 must hold. Then by 1= y_ 3^ - \u2264 b_ 3- b_ 2\u2264 y_ 3^ + = 1 , b_ 3 equals 2 . This contradicts the constraint of b_ 3\u2264 1 . So no solution exists. In the second test case, we can let all b_ i ' s be 0 . In the third test case, one possible solution is b_ 1= 0 , b_ 2= 1/ 3 , b_ 3= 2/ 3 , b_ 4= 1 .",
    "topics": [
      "dp",
      "geometry"
    ],
    "id": "1517H"
  },
  {
    "title": "Phoenix and Puzzle",
    "url": "https://codeforces.com/problemset/problem/1515/B",
    "history": "Phoenix is playing with a new puzzle, which consists of n identical puzzle pieces. Each puzzle piece is a right isosceles triangle as shown below. A puzzle piece The goal of the puzzle is to create a square using the n pieces. He is allowed to rotate and move the pieces around, but none of them can overlap and all n pieces must be used ( of course, the square shouldn' t contain any holes as well) . Can he do it?",
    "input": "The input consists of multiple test cases. The first line contains an integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. The first line of each test case contains an integer n ( 1 \u2264 n \u2264 10^ 9 ) \u2014 the number of puzzle pieces.",
    "output": "For each test case, if Phoenix can create a square with the n puzzle pieces, print YES. Otherwise, print NO.",
    "note": "For n= 2 , Phoenix can create a square like this: For n= 4 , Phoenix can create a square like this: For n= 6 , it is impossible for Phoenix to create a square.",
    "topics": [
      "brute force",
      "geometry",
      "math",
      "number theory"
    ],
    "id": "1515B"
  },
  {
    "title": "Swap Pass",
    "url": "https://codeforces.com/problemset/problem/1508/D",
    "history": "Based on a peculiar incident at basketball practice, Akari came up with the following competitive programming problem! You are given n points on the plane, no three of which are collinear. The i - th point initially has a label a_ i , in such a way that the labels a_ 1, a_ 2, . . . , a_ n form a permutation of 1, 2, . . . , n . You are allowed to modify the labels through the following operation: Choose two distinct integers i and j between 1 and n . Swap the labels of points i and j , and finally Draw the segment between points i and j . A sequence of operations is valid if after applying all of the operations in the sequence in order, the k - th point ends up having the label k for all k between 1 and n inclusive, and the drawn segments don' t intersect each other internally. Formally, if two of the segments intersect, then they must do so at a common endpoint of both segments. In particular, all drawn segments must be distinct. Find any valid sequence of operations, or say that none exist.",
    "input": "The first line contains an integer n ( 3 \u2264 n \u2264 2000 ) \u2014 the number of points. The i - th of the following n lines contains three integers x_ i , y_ i , a_ i ( - 10^ 6 \u2264 x_ i, y_ i \u2264 10^ 6 , 1 \u2264 a_ i \u2264 n ) , representing that the i - th point has coordinates ( x_ i, y_ i) and initially has label a_ i . It is guaranteed that all points are distinct, no three points are collinear, and the labels a_ 1, a_ 2, . . . , a_ n form a permutation of 1, 2, . . . , n .",
    "output": "If it is impossible to perform a valid sequence of operations, print - 1 . Otherwise, print an integer k ( 0 \u2264 k \u2264n( n - 1) / 2 ) \u2014 the number of operations to perform, followed by k lines, each containing two integers i and j ( 1 \u2264 i, j \u2264 n , i= \u0338 j ) \u2014 the indices of the points chosen for the operation. Note that you are not required to minimize or maximize the value of k . If there are multiple possible answers, you may print any of them.",
    "note": "The following animation showcases the first sample test case. The black numbers represent the indices of the points, while the boxed orange numbers represent their labels. In the second test case, all labels are already in their correct positions, so no operations are necessary.",
    "topics": [
      "constructive algorithms",
      "geometry",
      "sortings"
    ],
    "id": "1508D"
  },
  {
    "title": "Balance the Cards",
    "url": "https://codeforces.com/problemset/problem/1503/F",
    "history": "A balanced bracket sequence is defined as an integer sequence that can be built with the following rules: The empty sequence is balanced. If [ a_ 1, . . . , a_ n] and [ b_ 1, . . . , b_ m] are balanced, then their concatenation [ a_ 1, . . . , a_ n, b_ 1, . . . , b_ m] is balanced. If x is a positive integer and [ a_ 1, . . . , a_ n] is balanced, then [ x, a_ 1, . . . , a_ n, - x] is balanced. The positive numbers can be imagined as opening brackets and the negative numbers as closing brackets, where matching brackets must have the same type ( absolute value) . For example, [ 1, 2, - 2, - 1] and [ 1, 3, - 3, 2, - 2, - 1] are balanced, but [ 1, 2, - 1, - 2] and [ - 1, 1] are not balanced. There are 2n cards. Each card has a number on the front and a number on the back. Each integer 1, - 1, 2, - 2, . . . , n, - n appears exactly once on the front of some card and exactly once on the back of some ( not necessarily the same) card. You can reorder the cards however you like. You are not allowed to flip cards, so numbers cannot move between the front and back. Your task is to order the cards so that the sequences given by the front numbers and the back numbers are both balanced, or report that it is impossible.",
    "input": "The first line contains a single integer n ( 1\u2264 n\u2264 2\u00b7 10^ 5 ) \u2014 the number of bracket types, and half the number of cards. The next 2n lines describe the cards. The i - th of these lines contains two integers a_ i , b_ i ( - n\u2264 a_ i, b_ i\u2264 n , a_ i 0 , b_ i 0 ) \u2014 the numbers on the front and back of the i - th card, respectively. Every integer 1, - 1, 2, - 2, . . . , n, - n appears exactly once as a_ i and exactly once as b_ i .",
    "output": "On the first line, output \" YES\" if it' s possible to reorder these cards to satisfy the condition. Otherwise, output \" NO\" . You can print each letter in any case ( upper or lower) . If it is possible, on the next 2n lines output the cards in an order so that the front and back are both balanced. If there are multiple solutions, you may output any.",
    "note": "In the first test case, the front numbers create the balanced sequence [ 1, 4, - 4, - 1, 5, 3, 2, - 2, - 3, - 5] and the back numbers create the balanced sequence [ 3, - 3, 4, - 4, 1, - 1, 2, 5, - 5, - 2] . In the second test case, the cards are given in an order so that the front numbers are balanced, but the back numbers create the unbalanced sequence [ 1, 2, - 1, - 2] . If we swapped the second and third cards, we would balance the back numbers and unbalance the front numbers. But there is no order that balances both.",
    "topics": [
      "constructive algorithms",
      "data structures",
      "divide and conquer",
      "geometry",
      "graphs",
      "implementation"
    ],
    "id": "1503F"
  },
  {
    "title": "Diamond Miner",
    "url": "https://codeforces.com/problemset/problem/1495/A",
    "history": "Diamond Miner is a game that is similar to Gold Miner, but there are n miners instead of 1 in this game. The mining area can be described as a plane. The n miners can be regarded as n points on the y- axis. There are n diamond mines in the mining area. We can regard them as n points on the x- axis. For some reason, no miners or diamond mines can be at the origin ( point ( 0, 0) ) . Every miner should mine exactly one diamond mine. Every miner has a hook, which can be used to mine a diamond mine. If a miner at the point ( a, b) uses his hook to mine a diamond mine at the point ( c, d) , he will spend \u221a( ( a- c) ^ 2+ ( b- d) ^ 2) energy to mine it ( the distance between these points) . The miners can' t move or help each other. The object of this game is to minimize the sum of the energy that miners spend. Can you find this minimum?",
    "input": "The input consists of multiple test cases. The first line contains a single integer t ( 1\u2264 t\u2264 10 ) \u2014 the number of test cases. The description of the test cases follows. The first line of each test case contains a single integer n ( 1 \u2264 n \u2264 10^ 5 ) \u2014 the number of miners and mines. Each of the next 2n lines contains two space- separated integers x ( - 10^ 8 \u2264 x \u2264 10^ 8 ) and y ( - 10^ 8 \u2264 y \u2264 10^ 8 ) , which represent the point ( x, y) to describe a miner' s or a diamond mine' s position. Either x = 0 , meaning there is a miner at the point ( 0, y) , or y = 0 , meaning there is a diamond mine at the point ( x, 0) . There can be multiple miners or diamond mines at the same point. It is guaranteed that no point is at the origin. It is guaranteed that the number of points on the x- axis is equal to n and the number of points on the y- axis is equal to n . It' s guaranteed that the sum of n for all test cases does not exceed 10^ 5 .",
    "output": "For each test case, print a single real number \u2014 the minimal sum of energy that should be spent. Your answer is considered correct if its absolute or relative error does not exceed 10^ - 9 . Formally, let your answer be a , and the jury' s answer be b . Your answer is accepted if and only if | a - b| / max( 1, | b| ) \u2264 10^ - 9 .",
    "note": "In the first test case, the miners are at ( 0, 1) and ( 0, - 1) , while the diamond mines are at ( 1, 0) and ( - 2, 0) . If you arrange the miners to get the diamond mines in the way, shown in the picture, you can get the sum of the energy \u221a( 2) + \u221a( 5) .",
    "topics": [
      "geometry",
      "greedy",
      "math",
      "sortings"
    ],
    "id": "1495A"
  },
  {
    "title": "Eastern Exhibition",
    "url": "https://codeforces.com/problemset/problem/1486/B",
    "history": "You and your friends live in n houses. Each house is located on a 2D plane, in a point with integer coordinates. There might be different houses located in the same point. The mayor of the city is asking you for places for the building of the Eastern exhibition. You have to find the number of places ( points with integer coordinates) , so that the summary distance from all the houses to the exhibition is minimal. The exhibition can be built in the same point as some house. The distance between two points ( x_ 1, y_ 1) and ( x_ 2, y_ 2) is | x_ 1 - x_ 2| + | y_ 1 - y_ 2| , where | x| is the absolute value of x .",
    "input": "First line contains a single integer t ( 1 \u2264 t \u2264 1000) \u2014 the number of test cases. The first line of each test case contains a single integer n ( 1 \u2264 n \u2264 1000) . Next n lines describe the positions of the houses ( x_ i, y_ i) ( 0 \u2264 x_ i, y_ i \u2264 10^ 9) . It' s guaranteed that the sum of all n does not exceed 1000 .",
    "output": "For each test case output a single integer - the number of different positions for the exhibition. The exhibition can be built in the same point as some house.",
    "note": "Here are the images for the example test cases. Blue dots stand for the houses, green \u2014 possible positions for the exhibition. First test case. Second test case. Third test case. Fourth test case. Fifth test case. Sixth test case. Here both houses are located at ( 0, 0) .",
    "topics": [
      "binary search",
      "geometry",
      "shortest paths",
      "sortings"
    ],
    "id": "1486B"
  },
  {
    "title": "Nezzar and Nice Beatmap",
    "url": "https://codeforces.com/problemset/problem/1477/C",
    "history": "Nezzar loves the game osu! . osu! is played on beatmaps, which can be seen as an array consisting of distinct points on a plane. A beatmap is called nice if for any three consecutive points A, B, C listed in order, the angle between these three points, centered at B , is strictly less than 90 degrees. Points A, B, C on the left have angle less than 90 degrees, so they can be three consecutive points of a nice beatmap; Points A' , B' , C' on the right have angle greater or equal to 90 degrees, so they cannot be three consecutive points of a nice beatmap. Now Nezzar has a beatmap of n distinct points A_ 1, A_ 2, . . . , A_ n . Nezzar would like to reorder these n points so that the resulting beatmap is nice. Formally, you are required to find a permutation p_ 1, p_ 2, . . . , p_ n of integers from 1 to n , such that beatmap A_ p_ 1, A_ p_ 2, . . . , A_ p_ n is nice. If it is impossible, you should determine it.",
    "input": "The first line contains a single integer n ( 3 \u2264 n \u2264 5000 ) . Then n lines follow, i - th of them contains two integers x_ i , y_ i ( - 10^ 9 \u2264 x_ i, y_ i \u2264 10^ 9 ) \u2014 coordinates of point A_ i . It is guaranteed that all points are distinct.",
    "output": "If there is no solution, print - 1 . Otherwise, print n integers, representing a valid permutation p . If there are multiple possible answers, you can print any.",
    "note": "Here is the illustration for the first test: Please note that the angle between A_ 1 , A_ 2 and A_ 5 , centered at A_ 2 , is treated as 0 degrees. However, angle between A_ 1 , A_ 5 and A_ 2 , centered at A_ 5 , is treated as 180 degrees.",
    "topics": [
      "constructive algorithms",
      "geometry",
      "greedy",
      "math",
      "sortings"
    ],
    "id": "1477C"
  },
  {
    "title": "Plane Tiling",
    "url": "https://codeforces.com/problemset/problem/1468/I",
    "history": "You are given five integers n , dx_ 1 , dy_ 1 , dx_ 2 and dy_ 2 . You have to select n distinct pairs of integers ( x_ i, y_ i) in such a way that, for every possible pair of integers ( x, y) , there exists exactly one triple of integers ( a, b, i) meeting the following constraints: x = x_ i + a \u00b7 dx_ 1 + b \u00b7 dx_ 2, y = y_ i + a \u00b7 dy_ 1 + b \u00b7 dy_ 2.",
    "input": "The first line contains a single integer n ( 1 \u2264 n \u2264 10^ 5 ) . The second line contains two integers dx_ 1 and dy_ 1 ( - 10^ 6 \u2264 dx_ 1, dy_ 1 \u2264 10^ 6 ) . The third line contains two integers dx_ 2 and dy_ 2 ( - 10^ 6 \u2264 dx_ 2, dy_ 2 \u2264 10^ 6 ) .",
    "output": "If it is impossible to correctly select n pairs of integers, print NO. Otherwise, print YES in the first line, and then n lines, the i - th of which contains two integers x_ i and y_ i ( - 10^ 9 \u2264 x_ i, y_ i \u2264 10^ 9 ) . If there are multiple solutions, print any of them.",
    "note": "",
    "topics": [
      "geometry",
      "implementation",
      "math"
    ],
    "id": "1468I"
  },
  {
    "title": "Hobbits",
    "url": "https://codeforces.com/problemset/problem/1468/G",
    "history": "The hobbits Frodo and Sam are carrying the One Ring to Mordor. In order not to be spotted by orcs, they decided to go through the mountains. The mountain relief can be represented as a polyline with n points ( x_ i, y_ i) , numbered from 1 to n ( x_ i < x_ i + 1 for 1 \u2264 i \u2264 n - 1 ) . Hobbits start their journey at the point ( x_ 1, y_ 1) and should reach the point ( x_ n, y_ n) to complete their mission. The problem is that there is a tower with the Eye of Sauron, which watches them. The tower is located at the point ( x_ n, y_ n) and has the height H , so the Eye is located at the point ( x_ n, y_ n + H) . In order to complete the mission successfully, the hobbits have to wear cloaks all the time when the Sauron Eye can see them, i. e. when there is a direct line from the Eye to the hobbits which is not intersected by the relief. The hobbits are low, so their height can be considered negligibly small, but still positive, so when a direct line from the Sauron Eye to the hobbits only touches the relief, the Eye can see them. The Sauron Eye can' t see hobbits when they are in the left position, but can see them when they are in the right position. The hobbits do not like to wear cloaks, so they wear them only when they can be spotted by the Eye. Your task is to calculate the total distance the hobbits have to walk while wearing cloaks.",
    "input": "The first line of the input contains two integers n and H ( 2 \u2264 n \u2264 2 \u00b7 10^ 5 ; 1 \u2264 H \u2264 10^ 4 ) \u2014 the number of vertices in polyline and the tower height. The next n lines contain two integers x_ i, y_ i each ( 0 \u2264 x_ i \u2264 4 \u00b7 10^ 5 ; 0 \u2264 y_ i \u2264 10^ 4 ) \u2014 the coordinates of the polyline vertices. It is guaranteed that x_ i < x_ i + 1 for 1 \u2264 i \u2264 n - 1 .",
    "output": "Print one real number \u2014 the total distance the hobbits have to walk while wearing cloaks. Your answer will be considered correct if its absolute or relative error does not exceed 10^ - 6 \u2014 formally, if your answer is a , and the jury' s answer is b , your answer will be accepted if | a - b| max( 1, b) \u2264 10^ - 6 .",
    "note": "",
    "topics": [
      "binary search",
      "geometry"
    ],
    "id": "1468G"
  },
  {
    "title": "Full Turn",
    "url": "https://codeforces.com/problemset/problem/1468/F",
    "history": "There are n persons located on a plane. The i - th person is located at the point ( x_ i, y_ i) and initially looks at the point ( u_ i, v_ i) . At the same moment of time, all persons will start to rotate clockwise synchronously with the same angular speed. They will rotate until they do one full 360 - degree turn. It is said that persons A and B made eye contact if person A looks in person B ' s direction at the same moment when person B looks in person A ' s direction. If there is a person C located between persons A and B , that will not obstruct A and B from making eye contact. A person can make eye contact with more than one person at the same time. Calculate the number of pairs of persons that will make eye contact at least once during the rotation ( including the initial moment) .",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. The first line of each test case contains a single integer n ( 1 \u2264 n \u2264 10^ 5 ) \u2014 the number of persons. The following n lines describe persons, each line containing four space- separated integers x_ i, y_ i, u_ i, v_ i ( | x_ i| , | y_ i| , | u_ i| , | v_ i| \u2264 10^ 9 ; x_ i u_ i or y_ i v_ i ) , where ( x_ i, y_ i ) are the coordinates of the point where the i - th person is located and ( u_ i , v_ i ) are the coordinates of the point that the i - th person looks at initially. Each person' s location is unique in each test case. The sum of n over all test cases does not exceed 10^ 5 .",
    "output": "For each test case, print one integer \u2014 the number of pairs of persons who will make eye contact at least once during the rotation, including the initial moment.",
    "note": "",
    "topics": [
      "geometry",
      "hashing",
      "number theory"
    ],
    "id": "1468F"
  },
  {
    "title": "Bovine Dilemma",
    "url": "https://codeforces.com/problemset/problem/1466/A",
    "history": "Argus was charged with guarding Io, which is not an ordinary cow. Io is quite an explorer, and she wanders off rather frequently, making Argus' life stressful. So the cowherd decided to construct an enclosed pasture for Io. There are n trees growing along the river, where Argus tends Io. For this problem, the river can be viewed as the OX axis of the Cartesian coordinate system, and the n trees as points with the y - coordinate equal 0 . There is also another tree growing in the point ( 0, 1) . Argus will tie a rope around three of the trees, creating a triangular pasture. Its exact shape doesn' t matter to Io, but its area is crucial to her. There may be many ways for Argus to arrange the fence, but only the ones which result in different areas of the pasture are interesting for Io. Calculate the number of different areas that her pasture may have. Note that the pasture must have nonzero area.",
    "input": "The input consists of multiple test cases. The first line contains an integer t ( 1 \u2264 t \u2264 100 ) \u2014 the number of test cases. Then t test cases follow, each one is described in two lines. In the first line of each test case there is a single integer n ( 1 \u2264 n \u2264 50 ) denoting the number of trees growing along the river. Next line contains n distinct integers x_ 1 < x_ 2 < . . . < x_ n - 1 < x_ n ( 1 \u2264 x_ i \u2264 50 ) , the x - coordinates of trees growing along the river.",
    "output": "In a single line output an integer, the number of different nonzero areas that triangles with trees as vertices may have.",
    "note": "In the first test case, we have 6 non- degenerate triangles with the following areas: 0. 5 , 0. 5 , 1 , 1. 5 , 1. 5 and 2 . The pasture can have 4 different areas, and thus 4 is the answer. In the second test case, we have 3 non- degenerate triangles with the following areas: 1 , 1 and 2 . The pasture can have 2 different areas, so 2 is the answer. The following two drawings present the situation in the second test case. The blue triangles in the first drawing have area 1 . The red triangle in the second drawing has area 2 .",
    "topics": [
      "brute force",
      "geometry",
      "math"
    ],
    "id": "1466A"
  },
  {
    "title": "Four Points",
    "url": "https://codeforces.com/problemset/problem/1455/E",
    "history": "You are given four different integer points p_ 1 , p_ 2 , p_ 3 and p_ 4 on XY grid. In one step you can choose one of the points p_ i and move it in one of four directions by one. In other words, if you have chosen point p_ i = ( x, y) you can move it to ( x, y + 1) , ( x, y - 1) , ( x + 1, y) or ( x - 1, y) . Your goal to move points in such a way that they will form a square with sides parallel to OX and OY axes ( a square with side 0 is allowed) . What is the minimum number of steps you need to make such a square?",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. Each test case consists of four lines. Each line contains two integers x and y ( 0 \u2264 x, y \u2264 10^ 9 ) \u2014 coordinates of one of the points p_ i = ( x, y) . All points are different in one test case.",
    "output": "For each test case, print the single integer \u2014 the minimum number of steps to make a square.",
    "note": "In the first test case, one of the optimal solutions is shown below: Each point was moved two times, so the answer 2 + 2 + 2 + 2 = 8 . In the second test case, one of the optimal solutions is shown below: The answer is 3 + 1 + 0 + 3 = 7 . In the third test case, one of the optimal solutions is shown below: The answer is 1 + 1 + 2 + 1 = 5 .",
    "topics": [
      "brute force",
      "constructive algorithms",
      "flows",
      "geometry",
      "greedy",
      "implementation",
      "math",
      "ternary search"
    ],
    "id": "1455E"
  },
  {
    "title": "Circle Game",
    "url": "https://codeforces.com/problemset/problem/1451/D",
    "history": "Utkarsh is forced to play yet another one of Ashish' s games. The game progresses turn by turn and as usual, Ashish moves first. Consider the 2D plane. There is a token which is initially at ( 0, 0) . In one move a player must increase either the x coordinate or the y coordinate of the token by exactly k . In doing so, the player must ensure that the token stays within a ( Euclidean) distance d from ( 0, 0) . In other words, if after a move the coordinates of the token are ( p, q) , then p^ 2 + q^ 2 \u2264 d^ 2 must hold. The game ends when a player is unable to make a move. It can be shown that the game will end in a finite number of moves. If both players play optimally, determine who will win.",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 100 ) \u2014 the number of test cases. The only line of each test case contains two space separated integers d ( 1 \u2264 d \u2264 10^ 5 ) and k ( 1 \u2264 k \u2264 d ) .",
    "output": "For each test case, if Ashish wins the game, print \" Ashish\" , otherwise print \" Utkarsh\" ( without the quotes) .",
    "note": "In the first test case, one possible sequence of moves can be ( 0, 0) ( 0, 1) ( 0, 2) . Ashish has no moves left, so Utkarsh wins.",
    "topics": [
      "games",
      "geometry",
      "math"
    ],
    "id": "1451D"
  },
  {
    "title": "Balls of Steel",
    "url": "https://codeforces.com/problemset/problem/1450/B",
    "history": "You have n distinct points ( x_ 1, y_ 1) , . . . , ( x_ n, y_ n) on the plane and a non- negative integer parameter k . Each point is a microscopic steel ball and k is the attract power of a ball when it' s charged. The attract power is the same for all balls. In one operation, you can select a ball i to charge it. Once charged, all balls with Manhattan distance at most k from ball i move to the position of ball i . Many balls may have the same coordinate after an operation. More formally, for all balls j such that | x_ i - x_ j| + | y_ i - y_ j| \u2264 k , we assign x_ j: = x_ i and y_ j: = y_ i . An example of an operation. After charging the ball in the center, two other balls move to its position. On the right side, the red dot in the center is the common position of those balls. Your task is to find the minimum number of operations to move all balls to the same position, or report that this is impossible.",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 100 ) \u2014 the number of test cases. The first line of each test case contains two integers n , k ( 2 \u2264 n \u2264 100 , 0 \u2264 k \u2264 10^ 6 ) \u2014 the number of balls and the attract power of all balls, respectively. The following n lines describe the balls' coordinates. The i - th of these lines contains two integers x_ i , y_ i ( 0 \u2264 x_ i, y_ i \u2264 10^ 5 ) \u2014 the coordinates of the i - th ball. It is guaranteed that all points are distinct.",
    "output": "For each test case print a single integer \u2014 the minimum number of operations to move all balls to the same position, or - 1 if it is impossible.",
    "note": "In the first test case, there are three balls at ( 0, 0) , ( 3, 3) , and ( 1, 1) and the attract power is 2 . It is possible to move two balls together with one operation, but not all three balls together with any number of operations. In the second test case, there are three balls at ( 6, 7) , ( 8, 8) , and ( 6, 9) and the attract power is 3 . If we charge any ball, the other two will move to the same position, so we only require one operation. In the third test case, there are four balls at ( 0, 0) , ( 0, 1) , ( 0, 2) , and ( 0, 3) , and the attract power is 1 . We can show that it is impossible to move all balls to the same position with a sequence of operations.",
    "topics": [
      "brute force",
      "geometry",
      "greedy"
    ],
    "id": "1450B"
  },
  {
    "title": "Line Distance",
    "url": "https://codeforces.com/problemset/problem/1446/F",
    "history": "You are given an integer k and n distinct points with integer coordinates on the Euclidean plane, the i - th point has coordinates ( x_ i, y_ i) . Consider a list of all the n( n - 1) / 2 pairs of points ( ( x_ i, y_ i) , ( x_ j, y_ j) ) ( 1 \u2264 i < j \u2264 n ) . For every such pair, write out the distance from the line through these two points to the origin ( 0, 0) . Your goal is to calculate the k - th smallest number among these distances.",
    "input": "The first line contains two integers n , k ( 2 \u2264 n \u2264 10^ 5 , 1 \u2264 k \u2264n( n - 1) / 2 ) . The i - th of the next n lines contains two integers x_ i and y_ i ( - 10^ 4 \u2264 x_ i, y_ i \u2264 10^ 4 ) \u2014 the coordinates of the i - th point. It is guaranteed that all given points are pairwise distinct.",
    "output": "You should output one number \u2014 the k - th smallest distance from the origin. Your answer is considered correct if its absolute or relative error does not exceed 10^ - 6 . Formally, let your answer be a , and the jury' s answer be b . Your answer is accepted if and only if | a - b| / max( 1, | b| ) \u2264 10^ - 6 .",
    "note": "There are 6 pairs of points: Line 1- 2 : distance 0 from the origin Line 1- 3 : distance \u221a( 2) / 2\u2248 0. 707106781 from the origin Line 1- 4 : distance 2 from the origin Line 2- 3 : distance 1 from the origin Line 2- 4 : distance 2 from the origin Line 3- 4 : distance 2/ \u221a( 29) \u2248 0. 371390676 from the origin The third smallest distance among those is approximately 0. 707106781 .",
    "topics": [
      "binary search",
      "data structures",
      "geometry"
    ],
    "id": "1446F"
  },
  {
    "title": "Rectangular Polyline",
    "url": "https://codeforces.com/problemset/problem/1444/D",
    "history": "One drew a closed polyline on a plane, that consisted only of vertical and horizontal segments ( parallel to the coordinate axes) . The segments alternated between horizontal and vertical ones ( a horizontal segment was always followed by a vertical one, and vice versa) . The polyline did not contain strict self- intersections, which means that in case any two segments shared a common point, that point was an endpoint for both of them ( please consult the examples in the notes section) . Unfortunately, the polyline was erased, and you only know the lengths of the horizonal and vertical segments. Please construct any polyline matching the description with such segments, or determine that it does not exist.",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 200 ) \u2014the number of test cases. The first line of each test case contains one integer h ( 1 \u2264 h \u2264 1000 ) \u2014 the number of horizontal segments. The following line contains h integers l_ 1, l_ 2, . . . , l_ h ( 1 \u2264 l_ i \u2264 1000 ) \u2014 lengths of the horizontal segments of the polyline, in arbitrary order. The following line contains an integer v ( 1 \u2264 v \u2264 1000 ) \u2014 the number of vertical segments, which is followed by a line containing v integers p_ 1, p_ 2, . . . , p_ v ( 1 \u2264 p_ i \u2264 1000 ) \u2014 lengths of the vertical segments of the polyline, in arbitrary order. Test cases are separated by a blank line, and the sum of values h + v over all test cases does not exceed 1000 .",
    "output": "For each test case output Yes, if there exists at least one polyline satisfying the requirements, or No otherwise. If it does exist, in the following n lines print the coordinates of the polyline vertices, in order of the polyline traversal: the i - th line should contain two integers x_ i and y_ i \u2014 coordinates of the i - th vertex. Note that, each polyline segment must be either horizontal or vertical, and the segments should alternate between horizontal and vertical. The coordinates should not exceed 10^ 9 by their absolute value.",
    "note": "In the first test case of the first example, the answer is Yes \u2014 for example, the following picture illustrates a square that satisfies the requirements: In the first test case of the second example, the desired polyline also exists. Note that, the polyline contains self- intersections, but only in the endpoints: In the second test case of the second example, the desired polyline could be like the one below: Note that the following polyline is not a valid one, since it contains self- intersections that are not endpoints for some of the segments:",
    "topics": [
      "constructive algorithms",
      "dp",
      "geometry"
    ],
    "id": "1444D"
  },
  {
    "title": "Prison Break",
    "url": "https://codeforces.com/problemset/problem/1427/H",
    "history": "A prisoner wants to escape from a prison. The prison is represented by the interior of the convex polygon with vertices P_ 1, P_ 2, P_ 3, . . . , P_ n+ 1, P_ n+ 2, P_ n+ 3 . It holds P_ 1= ( 0, 0) , P_ n+ 1= ( 0, h) , P_ n+ 2= ( - 10^ 18, h) and P_ n+ 3= ( - 10^ 18, 0) . The prison walls P_ n+ 1P_ n+ 2 , P_ n+ 2P_ n+ 3 and P_ n+ 3P_ 1 are very high and the prisoner is not able to climb them. Hence his only chance is to reach a point on one of the walls P_ 1P_ 2, P_ 2P_ 3, . . . , P_ nP_ n+ 1 and escape from there. On the perimeter of the prison, there are two guards. The prisoner moves at speed 1 while the guards move, remaining always on the perimeter of the prison, with speed v . If the prisoner reaches a point of the perimeter where there is a guard, the guard kills the prisoner. If the prisoner reaches a point of the part of the perimeter he is able to climb and there is no guard there, he escapes immediately. Initially the prisoner is at the point ( - 10^ 17, h/ 2) and the guards are at P_ 1 . Find the minimum speed v such that the guards can guarantee that the prisoner will not escape ( assuming that both the prisoner and the guards move optimally) . Notes: At any moment, the guards and the prisoner can see each other. The \" climbing part\" of the escape takes no time. You may assume that both the prisoner and the guards can change direction and velocity instantly and that they both have perfect reflexes ( so they can react instantly to whatever the other one is doing) . The two guards can plan ahead how to react to the prisoner movements.",
    "input": "The first line of the input contains n ( 1 \u2264 n \u2264 50 ) . The following n+ 1 lines describe P_ 1, P_ 2, . . . , P_ n+ 1 . The i - th of such lines contain two integers x_ i , y_ i ( 0\u2264 x_ i, y_ i\u2264 1, 000 ) \u2014 the coordinates of P_ i= ( x_ i, y_ i) . It is guaranteed that P_ 1= ( 0, 0) and x_ n+ 1= 0 . The polygon with vertices P_ 1, P_ 2, . . . , P_ n+ 1, P_ n+ 2, P_ n+ 3 ( where P_ n+ 2, P_ n+ 3 shall be constructed as described in the statement) is guaranteed to be convex and such that there is no line containing three of its vertices.",
    "output": "Print a single real number, the minimum speed v that allows the guards to guarantee that the prisoner will not escape. Your answer will be considered correct if its relative or absolute error does not exceed 10^ - 6 .",
    "note": "",
    "topics": [
      "binary search",
      "games",
      "geometry",
      "ternary search"
    ],
    "id": "1427H"
  },
  {
    "title": "5G Antenna Towers",
    "url": "https://codeforces.com/problemset/problem/1423/E",
    "history": "After making a strategic plan with carriers for expansion of mobile network throughout the whole country, the government decided to cover rural areas with the last generation of 5G network. Since 5G antenna towers will be built in the area of mainly private properties, the government needs an easy way to find information about landowners for each property partially or fully contained in the planned building area. The planned building area is represented as a rectangle with sides width and height . Every 5G antenna tower occupies a circle with a center in ( x, y) and radius r . There is a database of Geodetic Institute containing information about each property. Each property is defined with its identification number and polygon represented as an array of ( x, y) points in the counter- clockwise direction. Your task is to build an IT system which can handle queries of type ( x, y, r) in which ( x, y) represents a circle center, while r represents its radius. The IT system should return the total area of properties that need to be acquired for the building of a tower so that the government can estimate the price. Furthermore, the system should return a list of identification numbers of these properties ( so that the owners can be contacted for land acquisition) . A property needs to be acquired if the circle of the antenna tower is intersecting or touching it.",
    "input": "The first line contains the size of the building area as double values width , height , and an integer n \u2014 the number of properties in the database. Each of the next n lines contains the description of a single property in the form of an integer number v ( 3 \u2264 v \u2264 40 ) \u2014 the number of points that define a property, as well as 2* v double numbers \u2014 the coordinates ( x, y) of each property point. Line i ( 0 \u2264 i \u2264 n- 1 ) contains the information for property with id i . The next line contains an integer q \u2014 the number of queries. Each of the next q lines contains double values x , y , r \u2014 the coordinates of an antenna circle center ( x, y) and its radius r . 1 \u2264 n * q \u2264 10^ 6",
    "output": "For each of the q queries, your program should output a line containing the total area of all the properties that need to be acquired, an integer representing the number of such properties, as well as the list of ids of these properties ( separated by blank characters, arbitrary order) .",
    "note": "You can assume that the land not covered with properties ( polygons) is under the government' s ownership and therefore doesn' t need to be acquired. Properties do not intersect with each other. Precision being used for solution checking is 10^ - 4 .",
    "topics": [
      "geometry"
    ],
    "id": "1423E"
  },
  {
    "title": "Fence",
    "url": "https://codeforces.com/problemset/problem/1422/A",
    "history": "Yura is tasked to build a closed fence in shape of an arbitrary non- degenerate simple quadrilateral. He' s already got three straight fence segments with known lengths a , b , and c . Now he needs to find out some possible integer length d of the fourth straight fence segment so that he can build the fence using these four segments. In other words, the fence should have a quadrilateral shape with side lengths equal to a , b , c , and d . Help Yura, find any possible length of the fourth side. A non- degenerate simple quadrilateral is such a quadrilateral that no three of its corners lie on the same line, and it does not cross itself.",
    "input": "The first line contains a single integer t \u2014 the number of test cases ( 1 \u2264 t \u2264 1000 ) . The next t lines describe the test cases. Each line contains three integers a , b , and c \u2014 the lengths of the three fence segments ( 1 \u2264 a, b, c \u2264 10^ 9 ) .",
    "output": "For each test case print a single integer d \u2014 the length of the fourth fence segment that is suitable for building the fence. If there are multiple answers, print any. We can show that an answer always exists.",
    "note": "We can build a quadrilateral with sides 1 , 2 , 3 , 4 . We can build a quadrilateral with sides 12 , 34 , 56 , 42 .",
    "topics": [
      "geometry",
      "math"
    ],
    "id": "1422A"
  },
  {
    "title": "Roads",
    "url": "https://codeforces.com/problemset/problem/1402/B",
    "history": "The government of Treeland wants to build a new road network. There are 2N cities in Treeland. The unfinished plan of the road network already contains N road segments, each of which connects two cities with a straight line. No two road segments have a common point ( including their endpoints) . Your task is to determine N- 1 additional road segments satisfying the following conditions: Every new road segment must connect two cities with a straight line. If two segments ( new or old) have a common point, then this point must be an endpoint of both segments. The road network connects all cities: for each pair of cities there is a path consisting of segments that connects the two cities. Scoring [ Subtask Points Constraints; 1 0 samples; 2 15 all input segments are vertical. ; 3 15 each pair of input segments are parallel. ; 4 15 each input segment is either horizontal or vertical. ; 5 15 N \u2264 10 000; 6 40 no additional constraints; ]",
    "input": "The first line of the standard input contains N ( 2 \u2264 N \u2264 10^ 5 ) \u2013 the number of existing road segments. Each of the following N lines contains four integers: x_ 1, y_ 1, x_ 2, y_ 2 , where ( x_ 1, y_ 1) and ( x_ 2, y_ 2) are the coordinates of the endpoints of the segment ( - 10^ 7 \u2264 x_ i, y_ i\u2264 10^ 7) .",
    "output": "The standard output must contain N- 1 lines, each of them containing four integers, x_ 1, y_ 1, x_ 2, y_ 2 , where ( x_ 1, y_ 1) and ( x_ 2, y_ 2) are the coordinates of the cities that are the endpoints of a new road segment. If there are multiple solutions, your program may output any of them.",
    "note": "",
    "topics": [
      "*special",
      "geometry",
      "sortings"
    ],
    "id": "1402B"
  },
  {
    "title": "Divide Square",
    "url": "https://codeforces.com/problemset/problem/1401/E",
    "history": "There is a square of size 10^ 6 \u00d7 10^ 6 on the coordinate plane with four points ( 0, 0) , ( 0, 10^ 6) , ( 10^ 6, 0) , and ( 10^ 6, 10^ 6) as its vertices. You are going to draw segments on the plane. All segments are either horizontal or vertical and intersect with at least one side of the square. Now you are wondering how many pieces this square divides into after drawing all segments. Write a program calculating the number of pieces of the square.",
    "input": "The first line contains two integers n and m ( 0 \u2264 n, m \u2264 10^ 5 ) \u2014 the number of horizontal segments and the number of vertical segments. The next n lines contain descriptions of the horizontal segments. The i - th line contains three integers y_ i , lx_ i and rx_ i ( 0 < y_ i < 10^ 6 ; 0 \u2264 lx_ i < rx_ i \u2264 10^ 6 ) , which means the segment connects ( lx_ i, y_ i) and ( rx_ i, y_ i) . The next m lines contain descriptions of the vertical segments. The i - th line contains three integers x_ i , ly_ i and ry_ i ( 0 < x_ i < 10^ 6 ; 0 \u2264 ly_ i < ry_ i \u2264 10^ 6 ) , which means the segment connects ( x_ i, ly_ i) and ( x_ i, ry_ i) . It' s guaranteed that there are no two segments on the same line, and each segment intersects with at least one of square' s sides.",
    "output": "Print the number of pieces the square is divided into after drawing all the segments.",
    "note": "The sample is like this:",
    "topics": [
      "data structures",
      "geometry",
      "implementation",
      "sortings"
    ],
    "id": "1401E"
  },
  {
    "title": "Bad Triangle",
    "url": "https://codeforces.com/problemset/problem/1398/A",
    "history": "You are given an array a_ 1, a_ 2, . . . , a_ n , which is sorted in non- decreasing order ( a_ i \u2264 a_ i + 1) . Find three indices i , j , k such that 1 \u2264 i < j < k \u2264 n and it is impossible to construct a non- degenerate triangle ( a triangle with nonzero area) having sides equal to a_ i , a_ j and a_ k ( for example it is possible to construct a non- degenerate triangle with sides 3 , 4 and 5 but impossible with sides 3 , 4 and 7 ) . If it is impossible to find such triple, report it.",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 1000 ) \u2014 the number of test cases. The first line of each test case contains one integer n ( 3 \u2264 n \u2264 5 \u00b7 10^ 4 ) \u2014 the length of the array a . The second line of each test case contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 9 ; a_ i - 1\u2264 a_ i ) \u2014 the array a . It is guaranteed that the sum of n over all test cases does not exceed 10^ 5 .",
    "output": "For each test case print the answer to it in one line. If there is a triple of indices i , j , k ( i < j < k ) such that it is impossible to construct a non- degenerate triangle having sides equal to a_ i , a_ j and a_ k , print that three indices in ascending order. If there are multiple answers, print any of them. Otherwise, print - 1.",
    "note": "In the first test case it is impossible with sides 6 , 11 and 18 . Note, that this is not the only correct answer. In the second test case you always can construct a non- degenerate triangle.",
    "topics": [
      "geometry",
      "math"
    ],
    "id": "1398A"
  },
  {
    "title": "Boboniu and String",
    "url": "https://codeforces.com/problemset/problem/1394/C",
    "history": "Boboniu defines BN- string as a string s of characters ' B' and ' N' . You can perform the following operations on the BN- string s : Remove a character of s . Remove a substring \" BN\" or \" NB\" of s . Add a character ' B' or ' N' to the end of s . Add a string \" BN\" or \" NB\" to the end of s . Note that a string a is a substring of a string b if a can be obtained from b by deletion of several ( possibly, zero or all) characters from the beginning and several ( possibly, zero or all) characters from the end. Boboniu thinks that BN- strings s and t are similar if and only if: | s| = | t| . There exists a permutation p_ 1, p_ 2, . . . , p_ | s| such that for all i ( 1\u2264 i\u2264 | s| ) , s_ p_ i= t_ i . Boboniu also defines dist( s, t) , the distance between s and t , as the minimum number of operations that makes s similar to t . Now Boboniu gives you n non- empty BN- strings s_ 1, s_ 2, . . . , s_ n and asks you to find a non- empty BN- string t such that the maximum distance to string s is minimized, i. e. you need to minimize max_ i= 1^ n dist( s_ i, t) .",
    "input": "The first line contains a single integer n ( 1\u2264 n\u2264 3\u00b7 10^ 5 ) . Each of the next n lines contains a string s_ i ( 1\u2264 | s_ i| \u2264 5\u00b7 10^ 5 ) . It is guaranteed that s_ i only contains ' B' and ' N' . The sum of | s_ i| does not exceed 5\u00b7 10^ 5 .",
    "output": "In the first line, print the minimum max_ i= 1^ n dist( s_ i, t) . In the second line, print the suitable t . If there are several possible t ' s, you can print any.",
    "note": "In the first example dist( B, BN) = dist( N, BN) = 1 , dist( BN, BN) = 0 . So the maximum distance is 1 .",
    "topics": [
      "binary search",
      "geometry",
      "ternary search"
    ],
    "id": "1394C"
  },
  {
    "title": "Uncle Bogdan and Projections",
    "url": "https://codeforces.com/problemset/problem/1388/E",
    "history": "After returning to shore, uncle Bogdan usually visits the computer club \" The Rock\" , to solve tasks in a pleasant company. One day, uncle Bogdan met his good old friend who told him one unusual task. . . There are n non- intersecting horizontal segments with ends in integers points on the plane with the standard cartesian coordinate system. All segments are strictly above the OX axis. You can choose an arbitrary vector ( a , b ) , where b < 0 and coordinates are real numbers, and project all segments to OX axis along this vector. The projections shouldn' t intersect but may touch each other. Find the minimum possible difference between x coordinate of the right end of the rightmost projection and x coordinate of the left end of the leftmost projection.",
    "input": "The first line contains the single integer n ( 1 \u2264 n \u2264 2000 ) \u2014 the number of segments. The i - th of the next n lines contains three integers xl_ i , xr_ i and y_ i ( - 10^ 6 \u2264 xl_ i < xr_ i \u2264 10^ 6 ; 1 \u2264 y_ i \u2264 10^ 6 ) \u2014 coordinates of the corresponding segment. It' s guaranteed that the segments don' t intersect or touch.",
    "output": "Print the minimum possible difference you can get. Your answer will be considered correct if its absolute or relative error doesn' t exceed 10^ - 6 . Formally, if your answer is a and jury' s answer is b then your answer will be considered correct if | a - b| / max( 1, | b| ) \u2264 10^ - 6 .",
    "note": "In the first example if we project segments along the vector ( 1, - 1) then we get an answer 12- 3= 9 and ( it can be proven) it is impossible to get less. It is optimal to project along the vector ( 1, - 3) in the second example. The answer is 82/ 3- 21/ 3= 61/ 3",
    "topics": [
      "data structures",
      "geometry",
      "sortings"
    ],
    "id": "1388E"
  },
  {
    "title": "Mixture",
    "url": "https://codeforces.com/problemset/problem/1386/B",
    "history": "Serge, the chef of the famous restaurant \" Salt, Pepper Garlic\" is trying to obtain his first Michelin star. He has been informed that a secret expert plans to visit his restaurant this evening. Even though the expert' s name hasn' t been disclosed, Serge is certain he knows which dish from the menu will be ordered as well as what the taste preferences of the expert are. Namely, the expert requires an extremely precise proportion of salt, pepper and garlic powder in his dish. Serge keeps a set of bottles with mixtures of salt, pepper and garlic powder on a special shelf in the kitchen. For each bottle, he knows the exact amount of each of the ingredients in kilograms. Serge can combine any number of bottled mixtures ( or just use one of them directly) to get a mixture of particular proportions needed for a certain dish. Luckily, the absolute amount of a mixture that needs to be added to a dish is so small that you can assume that the amounts in the bottles will always be sufficient. However, the numeric values describing the proportions may be quite large. Serge would like to know whether it is possible to obtain the expert' s favourite mixture from the available bottles, and if so\u2014what is the smallest possible number of bottles needed to achieve that. Furthermore, the set of bottles on the shelf may change over time as Serge receives new ones or lends his to other chefs. So he would like to answer this question after each such change. For example, assume that expert' s favorite mixture is 1: 1: 1 and there are three bottles of mixtures on the shelf: [ Mixture Salt Pepper Garlic powder; 1 10 20 30; 2 300 200 100; 3 12 15 27; ] Amount of ingredient in the bottle, kg To obtain the desired mixture it is enough to use an equivalent amount of mixtures from bottles 1 and 2. If bottle 2 is removed, then it is no longer possible to obtain it. Write a program that helps Serge to solve this task! ScoringSubtasks: ( 13 points) N \u2264 50 , 0 < S_ i+ P_ i+ G_ i \u2264 10^ 2 ( 17 points) N \u2264 500 , 0 < S_ i+ P_ i+ G_ i \u2264 10^ 3 ( 30 points) N \u2264 5000 , 0 < S_ i+ P_ i+ G_ i \u2264 10^ 4 ( 40 points) No further constraints",
    "input": "The first row contains three non- negative integers S_ f , P_ f and G_ f ( 0 \u2264 S_ f, P_ f, G_ f ; 0 < S_ f+ P_ f+ G_ f \u2264 10^ 6 ) describing the amount of salt, pepper and garlic powder in the expert' s favourite mixture. For any real \u03b1> 0 , ( \u03b1S_ f, \u03b1P_ f, \u03b1G_ f) also is an expert' s favourite mixture. In the second row, there is a positive integer N ( number of changes on the shelf, N \u2264 100 000 ) . You should assume that initially the shelf is empty. Each of the next N rows describes a single change on the shelf: If a new bottle is added, the row contains capital letter A followed by three non- negative integers S_ i , P_ i and G_ i ( 0 \u2264 S_ i, P_ i, G_ i ; 0 < S_ i+ P_ i+ G_ i \u2264 10^ 6 ) describing the amount of salt, pepper and garlic powder in the added bottle. Added bottles are numbered consecutively by unique integers starting from 1 , that is, the i - th bottle corresponds to the i - th added bottle in the input data. If a particular bottle is removed from the shelf, the row contains capital letter R followed by the integer\u2014the bottle number r_ i . All values r_ i in the removals are unique, r_ i never exceeds total number of bottles added thus far.",
    "output": "Output N rows. The j - th row ( 1 \u2264 j \u2264 N ) should contain the number x_ j , the smallest number of bottles needed to prepare a mixture with the expert' s favourite proportions of salt, pepper and garlic powder using the bottles available after the first j changes on the shelf, or 0 if it is not possible.",
    "note": "Pay attention that in the example, bottles 1 and 3 contain the same proportions of salt, pepper and garlic powder.",
    "topics": [
      "*special",
      "data structures",
      "geometry",
      "math",
      "sortings"
    ],
    "id": "1386B"
  },
  {
    "title": "Origami",
    "url": "https://codeforces.com/problemset/problem/1381/E",
    "history": "After being discouraged by 13 time- limit- exceeded verdicts on an ugly geometry problem, you decided to take a relaxing break for arts and crafts. There is a piece of paper in the shape of a simple polygon with n vertices. The polygon may be non- convex, but we all know that proper origami paper has the property that any horizontal line intersects the boundary of the polygon in at most two points. If you fold the paper along the vertical line x= f , what will be the area of the resulting shape? When you fold, the part of the paper to the left of the line is symmetrically reflected on the right side. Your task is to answer q independent queries for values f_ 1, . . . , f_ q .",
    "input": "The first line contains two integers n , q ( 3\u2264 n\u2264 10^ 5, 1\u2264 q\u2264 10^ 5 ) \u2014 the number of polygon vertices and queries, respectively. Each of the next n lines contains two integers x_ i , y_ i ( | x_ i| , | y_ i| \u2264 10^ 5 ) \u2014 the coordinates of the i - th point of the polygon. The polygon has an edge connecting each pair of adjacent points in the input, and also an edge between ( x_ 1, y_ 1) and ( x_ n, y_ n) . It is guaranteed that the polygon is non- degenerate and that any horizontal line intersects the boundary of the polygon in at most two points. In particular, no boundary edge is strictly horizontal. Two adjacent sides may be collinear. Each of the next q lines contains a single integer f_ i ( min_ j= 1^ n( x_ j) < f_ i< max_ j= 1^ n( x_ j) ) \u2014 the x - coordinate of the i - th fold query. It is guaranteed that all f_ i are distinct.",
    "output": "For each query, output the area A_ i of the paper if you fold it along the line x= f_ i . Your answer is considered correct if its absolute or relative error does not exceed 10^ - 4 . Formally, let your answer be a , and the jury' s answer be b . Your answer is accepted if and only if | a - b| / max( 1, | b| ) \u2264 10^ - 4 .",
    "note": "The first test, with the fold f= - 5 : The second test, with the fold f= 1 : The third test, with the fold f= - 1 :",
    "topics": [
      "geometry",
      "math",
      "sortings"
    ],
    "id": "1381E"
  },
  {
    "title": "Cubic Lattice",
    "url": "https://codeforces.com/problemset/problem/1375/I",
    "history": "A cubic lattice L in 3 - dimensional euclidean space is a set of points defined in the following way: L= { u \u00b7r\u20d7_ 1 + v \u00b7r\u20d7_ 2 + w \u00b7r\u20d7_ 3} _ u, v, w \u2208Z Where r\u20d7_ 1, r\u20d7_ 2, r\u20d7_ 3 \u2208Z^ 3 are some integer vectors such that: r\u20d7_ 1 , r\u20d7_ 2 and r\u20d7_ 3 are pairwise orthogonal: r\u20d7_ 1 \u00b7r\u20d7_ 2 = r\u20d7_ 1 \u00b7r\u20d7_ 3 = r\u20d7_ 2 \u00b7r\u20d7_ 3 = 0 Where a\u20d7\u00b7b\u20d7 is a dot product of vectors a\u20d7 and b\u20d7 . r\u20d7_ 1 , r\u20d7_ 2 and r\u20d7_ 3 all have the same length: | r\u20d7_ 1| = | r\u20d7_ 2| = | r\u20d7_ 3| = r You' re given a set A= { a\u20d7_ 1, a\u20d7_ 2, . . . , a\u20d7_ n} of integer points, i - th point has coordinates a_ i= ( x_ i; y_ i; z_ i) . Let g_ i= ( x_ i, y_ i, z_ i) . It is guaranteed that ( g_ 1, g_ 2, . . . , g_ n) = 1 . You have to find a cubic lattice L such that A \u2282 L and r is the maximum possible.",
    "input": "First line contains single integer n ( 1 \u2264 n \u2264 10^ 4 ) \u2014 the number of points in A . The i - th of the following n lines contains integers x_ i , y_ i , z_ i ( 0 < x_ i^ 2 + y_ i^ 2 + z_ i^ 2 \u2264 10^ 16 ) \u2014 coordinates of the i - th point. It is guaranteed that ( g_ 1, g_ 2, . . . , g_ n) = 1 where g_ i= ( x_ i, y_ i, z_ i) .",
    "output": "In first line output a single integer r^ 2 , the square of maximum possible r . In following 3 lines output coordinates of vectors r\u20d7_ 1 , r\u20d7_ 2 and r\u20d7_ 3 respectively. If there are multiple possible answers, output any.",
    "note": "",
    "topics": [
      "geometry",
      "math",
      "matrices",
      "number theory"
    ],
    "id": "1375I"
  },
  {
    "title": "FashionabLee",
    "url": "https://codeforces.com/problemset/problem/1369/A",
    "history": "Lee is going to fashionably decorate his house for a party, using some regular convex polygons. . . Lee thinks a regular n - sided ( convex) polygon is beautiful if and only if he can rotate it in such a way that at least one of its edges is parallel to the OX - axis and at least one of its edges is parallel to the OY - axis at the same time. Recall that a regular n - sided polygon is a convex polygon with n vertices such that all the edges and angles are equal. Now he is shopping: the market has t regular polygons. For each of them print YES if it is beautiful and NO otherwise.",
    "input": "The first line contains a single integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of polygons in the market. Each of the next t lines contains a single integer n_ i ( 3 \u2264 n_ i \u2264 10^ 9 ) : it means that the i - th polygon is a regular n_ i - sided polygon.",
    "output": "For each polygon, print YES if it' s beautiful or NO otherwise ( case insensitive) .",
    "note": "In the example, there are 4 polygons in the market. It' s easy to see that an equilateral triangle ( a regular 3 - sided polygon) is not beautiful, a square ( a regular 4 - sided polygon) is beautiful and a regular 12 - sided polygon ( is shown below) is beautiful as well.",
    "topics": [
      "geometry",
      "math"
    ],
    "id": "1369A"
  },
  {
    "title": "Shifting Dominoes",
    "url": "https://codeforces.com/problemset/problem/1368/G",
    "history": "Bill likes to play with dominoes. He took an n \u00d7 m board divided into equal square cells, and covered it with dominoes. Each domino covers two adjacent cells of the board either horizontally or vertically, and each cell is covered exactly once with a half of one domino ( that is, there are no uncovered cells, and no two dominoes cover the same cell twice) . After that Bill decided to play with the covered board and share some photos of it on social media. First, he removes exactly one domino from the board, freeing two of the cells. Next, he moves dominoes around. A domino can only be moved along the line parallel to its longer side. A move in the chosen direction is possible if the next cell in this direction is currently free. Bill doesn' t want to lose track of what the original tiling looks like, so he makes sure that at any point each domino shares at least one cell with its original position. After removing a domino and making several ( possibly, zero) moves Bill takes a photo of the board and posts it. However, with the amount of filters Bill is using, domino borders are not visible, so only the two free cells of the board can be identified. When the photo is posted, Bill reverts the board to its original state and starts the process again. Bill wants to post as many photos as possible, but he will not post any photo twice. How many distinct photos can he take? Recall that photos are different if the pairs of free cells in the photos are different.",
    "input": "The first line contains two positive integers n and m ( nm \u2264 2 \u00b7 10^ 5 ) \u2014 height and width of the board respectively. The next n lines describe the tiling of the board, row by row from top to bottom. Each of these lines contains m characters, describing the cells in the corresponding row left to right. Each character is one of U, D, L, or R, meaning that the cell is covered with a top, bottom, left, or right half of a domino respectively. It is guaranteed that the described tiling is valid, that is, each half- domino has a counterpart in the relevant location. In particular, since tiling is possible, the number of cells in the board is even.",
    "output": "Print a single integer \u2014 the number of distinct photos Bill can take.",
    "note": "In the first sample case, no moves are possible after removing any domino, thus there are four distinct photos. In the second sample case, four photos are possible after removing the leftmost domino by independently moving/ not moving the remaining two dominoes. Two more different photos are obtained by removing one of the dominoes on the right.",
    "topics": [
      "data structures",
      "geometry",
      "graphs",
      "trees"
    ],
    "id": "1368G"
  },
  {
    "title": "Jog Around The Graph",
    "url": "https://codeforces.com/problemset/problem/1366/F",
    "history": "You are given a simple weighted connected undirected graph, consisting of n vertices and m edges. A path in the graph of length k is a sequence of k+ 1 vertices v_ 1, v_ 2, . . . , v_ k+ 1 such that for each i ( 1 \u2264 i \u2264 k) the edge ( v_ i, v_ i+ 1) is present in the graph. A path from some vertex v also has vertex v_ 1= v . Note that edges and vertices are allowed to be included in the path multiple times. The weight of the path is the total weight of edges in it. For each i from 1 to q consider a path from vertex 1 of length i of the maximum weight. What is the sum of weights of these q paths? Answer can be quite large, so print it modulo 10^ 9+ 7 .",
    "input": "The first line contains a three integers n , m , q ( 2 \u2264 n \u2264 2000 ; n - 1 \u2264 m \u2264 2000 ; m \u2264 q \u2264 10^ 9 ) \u2014 the number of vertices in the graph, the number of edges in the graph and the number of lengths that should be included in the answer. Each of the next m lines contains a description of an edge: three integers v , u , w ( 1 \u2264 v, u \u2264 n ; 1 \u2264 w \u2264 10^ 6 ) \u2014 two vertices v and u are connected by an undirected edge with weight w . The graph contains no loops and no multiple edges. It is guaranteed that the given edges form a connected graph.",
    "output": "Print a single integer \u2014 the sum of the weights of the paths from vertex 1 of maximum weights of lengths 1, 2, . . . , q modulo 10^ 9+ 7 .",
    "note": "Here is the graph for the first example: Some maximum weight paths are: length 1 : edges ( 1, 7) \u2014 weight 3 ; length 2 : edges ( 1, 2) , ( 2, 3) \u2014 weight 1+ 10= 11 ; length 3 : edges ( 1, 5) , ( 5, 6) , ( 6, 4) \u2014 weight 2+ 7+ 15= 24 ; length 4 : edges ( 1, 5) , ( 5, 6) , ( 6, 4) , ( 6, 4) \u2014 weight 2+ 7+ 15+ 15= 39 ; . . . So the answer is the sum of 25 terms: 3+ 11+ 24+ 39+ . . . In the second example the maximum weight paths have weights 4 , 8 , 12 , 16 and 20 .",
    "topics": [
      "binary search",
      "dp",
      "geometry",
      "graphs"
    ],
    "id": "1366F"
  },
  {
    "title": "RC Kaboom Show",
    "url": "https://codeforces.com/problemset/problem/1359/F",
    "history": "You know, it' s hard to conduct a show with lots of participants and spectators at the same place nowadays. Still, you are not giving up on your dream to make a car crash showcase! You decided to replace the real cars with remote controlled ones, call the event \" Remote Control Kaboom Show\" and stream everything online. For the preparation you arranged an arena \u2014 an infinite 2D- field. You also bought n remote controlled cars and set them up on the arena. Unfortunately, the cars you bought can only go forward without turning left, right or around. So you additionally put the cars in the direction you want them to go. To be formal, for each car i ( 1 \u2264 i \u2264 n ) you chose its initial position ( x_ i, y_ i ) and a direction vector ( dx_ i, dy_ i ) . Moreover, each car has a constant speed s_ i units per second. So after car i is launched, it stars moving from ( x_ i, y_ i ) in the direction ( dx_ i, dy_ i ) with constant speed s_ i . The goal of the show is to create a car collision as fast as possible! You noted that launching every car at the beginning of the show often fails to produce any collisions at all. Thus, you plan to launch the i - th car at some moment t_ i . You haven' t chosen t_ i , that' s yet to be decided. Note that it' s not necessary for t_ i to be integer and t_ i is allowed to be equal to t_ j for any i, j . The show starts at time 0 . The show ends when two cars i and j ( i j ) collide ( i. e. come to the same coordinate at the same time) . The duration of the show is the time between the start and the end. What' s the fastest crash you can arrange by choosing all t_ i ? If it' s possible to arrange a crash then print the shortest possible duration of the show. Otherwise, report that it' s impossible.",
    "input": "The first line contains a single integer n ( 1 \u2264 n \u2264 25000 ) \u2014 the number of cars. Each of the next n lines contains five integers x_ i , y_ i , dx_ i , dy_ i , s_ i ( - 10^ 3 \u2264 x_ i, y_ i \u2264 10^ 3 ; 1 \u2264 | dx_ i| \u2264 10^ 3 ; 1 \u2264 | dy_ i| \u2264 10^ 3 ; 1 \u2264 s_ i \u2264 10^ 3 ) \u2014 the initial position of the i - th car, its direction vector and its speed, respectively. It' s guaranteed that all cars start at distinct positions ( i. e. ( x_ i, y_ i) = \u0338 ( x_ j, y_ j) for i = \u0338 j ) .",
    "output": "Print the shortest possible duration of the show if it' s possible to arrange a crash by choosing all t_ i . Otherwise, print \" No show : ( \" . Your answer is considered correct if its absolute or relative error does not exceed 10^ - 6 . Formally, let your answer be a , and the jury' s answer be b . Your answer is accepted if and only if | a - b| / max( 1, | b| ) \u2264 10^ - 6 .",
    "note": "Here is the picture for the first example: The fastest cars to crash are cars 2 and 4 . Let' s launch car 2 at 0 , car 4 at about 0. 096762 and cars 1 and 3 at arbitrary time. That way cars 2 and 4 will crash into each other at about 0. 585902 . So here' s what it looks like at the moment of the collision: Here' s the picture for the second example:",
    "topics": [
      "binary search",
      "brute force",
      "data structures",
      "geometry",
      "math"
    ],
    "id": "1359F"
  },
  {
    "title": "Not So Simple Polygon Embedding",
    "url": "https://codeforces.com/problemset/problem/1354/C2",
    "history": "The statement of this problem is the same as the statement of problem C1. The only difference is that, in problem C1, n is always even, and in C2, n is always odd. You are given a regular polygon with 2 \u00b7 n vertices ( it' s convex and has equal sides and equal angles) and all its sides have length 1 . Let' s name it as 2n - gon. Your task is to find the square of the minimum size such that you can embed 2n - gon in the square. Embedding 2n - gon in the square means that you need to place 2n - gon in the square in such way that each point which lies inside or on a border of 2n - gon should also lie inside or on a border of the square. You can rotate 2n - gon and/ or the square.",
    "input": "The first line contains a single integer T ( 1 \u2264 T \u2264 200 ) \u2014 the number of test cases. Next T lines contain descriptions of test cases \u2014 one per line. Each line contains single odd integer n ( 3 \u2264 n \u2264 199 ) . Don' t forget you need to embed 2n - gon, not an n - gon.",
    "output": "Print T real numbers \u2014 one per test case. For each test case, print the minimum length of a side of the square 2n - gon can be embedded in. Your answer will be considered correct if its absolute or relative error doesn' t exceed 10^ - 6 .",
    "note": "",
    "topics": [
      "binary search",
      "brute force",
      "geometry",
      "math"
    ],
    "id": "1354C2"
  },
  {
    "title": "Simple Polygon Embedding",
    "url": "https://codeforces.com/problemset/problem/1354/C1",
    "history": "The statement of this problem is the same as the statement of problem C2. The only difference is that, in problem C1, n is always even, and in C2, n is always odd. You are given a regular polygon with 2 \u00b7 n vertices ( it' s convex and has equal sides and equal angles) and all its sides have length 1 . Let' s name it as 2n - gon. Your task is to find the square of the minimum size such that you can embed 2n - gon in the square. Embedding 2n - gon in the square means that you need to place 2n - gon in the square in such way that each point which lies inside or on a border of 2n - gon should also lie inside or on a border of the square. You can rotate 2n - gon and/ or the square.",
    "input": "The first line contains a single integer T ( 1 \u2264 T \u2264 200 ) \u2014 the number of test cases. Next T lines contain descriptions of test cases \u2014 one per line. Each line contains single even integer n ( 2 \u2264 n \u2264 200 ) . Don' t forget you need to embed 2n - gon, not an n - gon.",
    "output": "Print T real numbers \u2014 one per test case. For each test case, print the minimum length of a side of the square 2n - gon can be embedded in. Your answer will be considered correct if its absolute or relative error doesn' t exceed 10^ - 6 .",
    "note": "",
    "topics": [
      "binary search",
      "geometry",
      "math",
      "ternary search"
    ],
    "id": "1354C1"
  },
  {
    "title": "Jordan Smiley",
    "url": "https://codeforces.com/problemset/problem/1331/E",
    "history": "",
    "input": "The input contains two integers row , col ( 0 \u2264 row, col \u2264 63 ) , separated by a single space.",
    "output": "Output \" IN\" or \" OUT\" .",
    "note": "",
    "topics": [
      "*special",
      "dfs and similar",
      "geometry",
      "implementation"
    ],
    "id": "1331E"
  },
  {
    "title": "Spiderweb Trees",
    "url": "https://codeforces.com/problemset/problem/1326/G",
    "history": "Let' s call a graph with n vertices, each of which has it' s own point A_ i = ( x_ i, y_ i) with integer coordinates, a planar tree if: All points A_ 1, A_ 2, . . . , A_ n are different and no three points lie on the same line. The graph is a tree, i. e. there are exactly n- 1 edges there exists a path between any pair of vertices. For all pairs of edges ( s_ 1, f_ 1) and ( s_ 2, f_ 2) , such that s_ 1 = \u0338 s_ 2, s_ 1 = \u0338 f_ 2, f_ 1 = \u0338 s_ 2 , and f_ 1 = \u0338 f_ 2 , the segments A_ s_ 1 A_ f_ 1 and A_ s_ 2 A_ f_ 2 don' t intersect. Imagine a planar tree with n vertices. Consider the convex hull of points A_ 1, A_ 2, . . . , A_ n . Let' s call this tree a spiderweb tree if for all 1 \u2264 i \u2264 n the following statements are true: All leaves ( vertices with degree \u2264 1 ) of the tree lie on the border of the convex hull. All vertices on the border of the convex hull are leaves. An example of a spiderweb tree: The points A_ 3, A_ 6, A_ 7, A_ 4 lie on the convex hull and the leaf vertices of the tree are 3, 6, 7, 4 . Refer to the notes for more examples. Let' s call the subset S \u2282{ 1, 2, . . . , n} of vertices a subtree of the tree if for all pairs of vertices in S , there exists a path that contains only vertices from S . Note that any subtree of the planar tree is a planar tree. You are given a planar tree with n vertexes. Let' s call a partition of the set { 1, 2, . . . , n} into non- empty subsets A_ 1, A_ 2, . . . , A_ k ( i. e. A_ i \u2229 A_ j = \u2205 for all 1 \u2264 i < j \u2264 k and A_ 1 \u222a A_ 2 \u222a. . . \u222a A_ k = { 1, 2, . . . , n} ) good if for all 1 \u2264 i \u2264 k , the subtree A_ i is a spiderweb tree. Two partitions are different if there exists some set that lies in one parition, but not the other. Find the number of good partitions. Since this number can be very large, find it modulo 998 244 353 .",
    "input": "The first line contains an integer n ( 1 \u2264 n \u2264 100 ) \u2014 the number of vertices in the tree. The next n lines each contain two integers x_ i, y_ i ( - 10^ 9 \u2264 x_ i, y_ i \u2264 10^ 9 ) \u2014 the coordinates of i - th vertex, A_ i . The next n- 1 lines contain two integers s, f ( 1 \u2264 s, f \u2264 n ) \u2014 the edges ( s, f) of the tree. It is guaranteed that all given points are different and that no three of them lie at the same line. Additionally, it is guaranteed that the given edges and coordinates of the points describe a planar tree.",
    "output": "Print one integer \u2014 the number of good partitions of vertices of the given planar tree, modulo 998 244 353 .",
    "note": "The picture for the first sample. In the first test case, all good partitions are: { 1} , { 2} , { 3} , { 4} ; { 1, 2} , { 3} , { 4} ; { 1, 3} , { 2} , { 4} ; { 1, 4} , { 2} , { 3} ; { 1, 2, 3, 4} . The partition { 1, 2, 3} , { 4} isn' t good, because the subtree { 1, 2, 3} isn' t spiderweb tree, since the non- leaf vertex 1 lies on the convex hull. The partition { 2, 3, 4} , { 1} isn' t good, because the subset { 2, 3, 4} isn' t a subtree. The picture for the second sample. In the second test case, the given tree isn' t a spiderweb tree, because the leaf vertex 1 doesn' t lie on the convex hull. However, the subtree { 2, 3, 4, 5} is a spiderweb tree. The picture for the third sample. The picture for the fourth sample. In the fourth test case, the partition { 1, 2, 3, 4} , { 5, 6, 7, 8} is good because all subsets are spiderweb subtrees.",
    "topics": [
      "dp",
      "geometry",
      "trees"
    ],
    "id": "1326G"
  },
  {
    "title": "Two Regular Polygons",
    "url": "https://codeforces.com/problemset/problem/1312/A",
    "history": "You are given two integers n and m ( m < n ) . Consider a convex regular polygon of n vertices. Recall that a regular polygon is a polygon that is equiangular ( all angles are equal in measure) and equilateral ( all sides have the same length) . Examples of convex regular polygons Your task is to say if it is possible to build another convex regular polygon with m vertices such that its center coincides with the center of the initial polygon and each of its vertices is some vertex of the initial polygon. You have to answer t independent test cases.",
    "input": "The first line of the input contains one integer t ( 1 \u2264 t \u2264 10^ 4 ) \u2014 the number of test cases. The next t lines describe test cases. Each test case is given as two space- separated integers n and m ( 3 \u2264 m < n \u2264 100 ) \u2014 the number of vertices in the initial polygon and the number of vertices in the polygon you want to build.",
    "output": "For each test case, print the answer \u2014 \" YES\" ( without quotes) , if it is possible to build another convex regular polygon with m vertices such that its center coincides with the center of the initial polygon and each of its vertices is some vertex of the initial polygon and \" NO\" otherwise.",
    "note": "The first test case of the example It can be shown that the answer for the second test case of the example is \" NO\" .",
    "topics": [
      "geometry",
      "greedy",
      "math",
      "number theory"
    ],
    "id": "1312A"
  },
  {
    "title": "Cow and Friend",
    "url": "https://codeforces.com/problemset/problem/1307/B",
    "history": "Bessie has way too many friends because she is everyone' s favorite cow! Her new friend Rabbit is trying to hop over so they can play! More specifically, he wants to get from ( 0, 0) to ( x, 0) by making multiple hops. He is only willing to hop from one point to another point on the 2D plane if the Euclidean distance between the endpoints of a hop is one of its n favorite numbers: a_ 1, a_ 2, . . . , a_ n . What is the minimum number of hops Rabbit needs to get from ( 0, 0) to ( x, 0) ? Rabbit may land on points with non- integer coordinates. It can be proved that Rabbit can always reach his destination. Recall that the Euclidean distance between points ( x_ i, y_ i) and ( x_ j, y_ j) is \u221a( ( x_ i- x_ j) ^ 2+ ( y_ i- y_ j) ^ 2) . For example, if Rabbit has favorite numbers 1 and 3 he could hop from ( 0, 0) to ( 4, 0) in two hops as shown below. Note that there also exists other valid ways to hop to ( 4, 0) in 2 hops ( e. g. ( 0, 0) \u2192 ( 2, - \u221a( 5) ) \u2192 ( 4, 0) ) . Here is a graphic for the first example. Both hops have distance 3 , one of Rabbit' s favorite numbers. In other words, each time Rabbit chooses some number a_ i and hops with distance equal to a_ i in any direction he wants. The same number can be used multiple times.",
    "input": "The input consists of multiple test cases. The first line contains an integer t ( 1 \u2264 t \u2264 1000 ) \u2014 the number of test cases. Next 2t lines contain test cases \u2014 two lines per test case. The first line of each test case contains two integers n and x ( 1 \u2264 n \u2264 10^ 5 , 1 \u2264 x \u2264 10^ 9 ) \u2014 the number of favorite numbers and the distance Rabbit wants to travel, respectively. The second line of each test case contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 9 ) \u2014 Rabbit' s favorite numbers. It is guaranteed that the favorite numbers are distinct. It is guaranteed that the sum of n over all the test cases will not exceed 10^ 5 .",
    "output": "For each test case, print a single integer \u2014 the minimum number of hops needed.",
    "note": "The first test case of the sample is shown in the picture above. Rabbit can hop to ( 2, \u221a( 5) ) , then to ( 4, 0) for a total of two hops. Each hop has a distance of 3 , which is one of his favorite numbers. In the second test case of the sample, one way for Rabbit to hop 3 times is: ( 0, 0) \u2192 ( 4, 0) \u2192 ( 8, 0) \u2192 ( 12, 0) . In the third test case of the sample, Rabbit can hop from ( 0, 0) to ( 5, 0) . In the fourth test case of the sample, Rabbit can hop: ( 0, 0) \u2192 ( 5, 10\u221a( 2) ) \u2192 ( 10, 0) .",
    "topics": [
      "geometry",
      "greedy",
      "math"
    ],
    "id": "1307B"
  },
  {
    "title": "Sum of Prefix Sums",
    "url": "https://codeforces.com/problemset/problem/1303/G",
    "history": "We define the sum of prefix sums of an array [ s_ 1, s_ 2, . . . , s_ k] as s_ 1 + ( s_ 1 + s_ 2) + ( s_ 1 + s_ 2 + s_ 3) + . . . + ( s_ 1 + s_ 2 + . . . + s_ k) . You are given a tree consisting of n vertices. Each vertex i has an integer a_ i written on it. We define the value of the simple path from vertex u to vertex v as follows: consider all vertices appearing on the path from u to v , write down all the numbers written on these vertices in the order they appear on the path, and compute the sum of prefix sums of the resulting sequence. Your task is to calculate the maximum value over all paths in the tree.",
    "input": "The first line contains one integer n ( 2 \u2264 n \u2264 150000 ) \u2014 the number of vertices in the tree. Then n - 1 lines follow, representing the edges of the tree. Each line contains two integers u_ i and v_ i ( 1 \u2264 u_ i, v_ i \u2264 n , u_ i v_ i ) , denoting an edge between vertices u_ i and v_ i . It is guaranteed that these edges form a tree. The last line contains n integers a_ 1 , a_ 2 , . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 6 ) .",
    "output": "Print one integer \u2014 the maximum value over all paths in the tree.",
    "note": "The best path in the first example is from vertex 3 to vertex 1 . It gives the sequence [ 3, 3, 7, 1] , and the sum of prefix sums is 36 .",
    "topics": [
      "data structures",
      "divide and conquer",
      "geometry",
      "trees"
    ],
    "id": "1303G"
  },
  {
    "title": "Water Balance",
    "url": "https://codeforces.com/problemset/problem/1299/C",
    "history": "There are n water tanks in a row, i - th of them contains a_ i liters of water. The tanks are numbered from 1 to n from left to right. You can perform the following operation: choose some subsegment [ l, r] ( 1\u2264 l \u2264 r \u2264 n ) , and redistribute water in tanks l, l+ 1, . . . , r evenly. In other words, replace each of a_ l, a_ l+ 1, . . . , a_ r by a_ l + a_ l+ 1 + . . . + a_ r/ r- l+ 1 . For example, if for volumes [ 1, 3, 6, 7] you choose l = 2, r = 3 , new volumes of water will be [ 1, 4. 5, 4. 5, 7] . You can perform this operation any number of times. What is the lexicographically smallest sequence of volumes of water that you can achieve? As a reminder: A sequence a is lexicographically smaller than a sequence b of the same length if and only if the following holds: in the first ( leftmost) position where a and b differ, the sequence a has a smaller element than the corresponding element in b .",
    "input": "The first line contains an integer n ( 1 \u2264 n \u2264 10^ 6 ) \u2014 the number of water tanks. The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 10^ 6 ) \u2014 initial volumes of water in the water tanks, in liters. Because of large input, reading input as doubles is not recommended.",
    "output": "Print the lexicographically smallest sequence you can get. In the i - th line print the final volume of water in the i - th tank. Your answer is considered correct if the absolute or relative error of each a_ i does not exceed 10^ - 9 . Formally, let your answer be a_ 1, a_ 2, . . . , a_ n , and the jury' s answer be b_ 1, b_ 2, . . . , b_ n . Your answer is accepted if and only if | a_ i - b_ i| / max( 1, | b_ i| ) \u2264 10^ - 9 for each i .",
    "note": "In the first sample, you can get the sequence by applying the operation for subsegment [ 1, 3] . In the second sample, you can' t get any lexicographically smaller sequence.",
    "topics": [
      "data structures",
      "geometry",
      "greedy"
    ],
    "id": "1299C"
  },
  {
    "title": "Aerodynamic",
    "url": "https://codeforces.com/problemset/problem/1299/B",
    "history": "Guy- Manuel and Thomas are going to build a polygon spaceship. You' re given a strictly convex ( i. e. no three points are collinear) polygon P which is defined by coordinates of its vertices. Define P( x, y) as a polygon obtained by translating P by vector ( x, y) . The picture below depicts an example of the translation: Define T as a set of points which is the union of all P( x, y) such that the origin ( 0, 0) lies in P( x, y) ( both strictly inside and on the boundary) . There is also an equivalent definition: a point ( x, y) lies in T only if there are two points A, B in P such that AB = ( x, y) . One can prove T is a polygon too. For example, if P is a regular triangle then T is a regular hexagon. At the picture below P is drawn in black and some P( x, y) which contain the origin are drawn in colored: The spaceship has the best aerodynamic performance if P and T are similar. Your task is to check whether the polygons P and T are similar.",
    "input": "The first line of input will contain a single integer n ( 3 \u2264 n \u2264 10^ 5 ) \u2014 the number of points. The i - th of the next n lines contains two integers x_ i, y_ i ( | x_ i| , | y_ i| \u2264 10^ 9 ) , denoting the coordinates of the i - th vertex. It is guaranteed that these points are listed in counterclockwise order and these points form a strictly convex polygon.",
    "output": "Output \" YES\" in a separate line, if P and T are similar. Otherwise, output \" NO\" in a separate line. You can print each letter in any case ( upper or lower) .",
    "note": "The following image shows the first sample: both P and T are squares. The second sample was shown in the statements.",
    "topics": [
      "geometry"
    ],
    "id": "1299B"
  },
  {
    "title": "Aroma's Search",
    "url": "https://codeforces.com/problemset/problem/1292/B",
    "history": "THE SxPLAY KIV\u039b - \u6f02\u6d41 KIV\u039b Nikki Simmons - PerspectivesWith a new body, our idol Aroma White ( or should we call her Kaori Minamiya? ) begins to uncover her lost past through the OS space. The space can be considered a 2D plane, with an infinite number of data nodes, indexed from 0 , with their coordinates defined as follows: The coordinates of the 0 - th node is ( x_ 0, y_ 0) For i > 0 , the coordinates of i - th node is ( a_ x \u00b7 x_ i- 1 + b_ x, a_ y \u00b7 y_ i- 1 + b_ y) Initially Aroma stands at the point ( x_ s, y_ s) . She can stay in OS space for at most t seconds, because after this time she has to warp back to the real world. She doesn' t need to return to the entry point ( x_ s, y_ s) to warp home. While within the OS space, Aroma can do the following actions: From the point ( x, y) , Aroma can move to one of the following points: ( x- 1, y) , ( x+ 1, y) , ( x, y- 1) or ( x, y+ 1) . This action requires 1 second. If there is a data node at where Aroma is staying, she can collect it. We can assume this action costs 0 seconds. Of course, each data node can be collected at most once. Aroma wants to collect as many data as possible before warping back. Can you help her in calculating the maximum number of data nodes she could collect within t seconds?",
    "input": "The first line contains integers x_ 0 , y_ 0 , a_ x , a_ y , b_ x , b_ y ( 1 \u2264 x_ 0, y_ 0 \u2264 10^ 16 , 2 \u2264 a_ x, a_ y \u2264 100 , 0 \u2264 b_ x, b_ y \u2264 10^ 16 ) , which define the coordinates of the data nodes. The second line contains integers x_ s , y_ s , t ( 1 \u2264 x_ s, y_ s, t \u2264 10^ 16 ) \u2013 the initial Aroma' s coordinates and the amount of time available.",
    "output": "Print a single integer \u2014 the maximum number of data nodes Aroma can collect within t seconds.",
    "note": "In all three examples, the coordinates of the first 5 data nodes are ( 1, 1) , ( 3, 3) , ( 7, 9) , ( 15, 27) and ( 31, 81) ( remember that nodes are numbered from 0 ) . In the first example, the optimal route to collect 3 nodes is as follows: Go to the coordinates ( 3, 3) and collect the 1 - st node. This takes | 3 - 2| + | 3 - 4| = 2 seconds. Go to the coordinates ( 1, 1) and collect the 0 - th node. This takes | 1 - 3| + | 1 - 3| = 4 seconds. Go to the coordinates ( 7, 9) and collect the 2 - nd node. This takes | 7 - 1| + | 9 - 1| = 14 seconds. In the second example, the optimal route to collect 2 nodes is as follows: Collect the 3 - rd node. This requires no seconds. Go to the coordinates ( 7, 9) and collect the 2 - th node. This takes | 15 - 7| + | 27 - 9| = 26 seconds. In the third example, Aroma can' t collect any nodes. She should have taken proper rest instead of rushing into the OS space like that.",
    "topics": [
      "brute force",
      "constructive algorithms",
      "geometry",
      "greedy",
      "implementation"
    ],
    "id": "1292B"
  },
  {
    "title": "New Year and Castle Construction",
    "url": "https://codeforces.com/problemset/problem/1284/E",
    "history": "Kiwon' s favorite video game is now holding a new year event to motivate the users! The game is about building and defending a castle, which led Kiwon to think about the following puzzle. In a 2- dimension plane, you have a set s = { ( x_ 1, y_ 1) , ( x_ 2, y_ 2) , . . . , ( x_ n, y_ n) } consisting of n distinct points. In the set s , no three distinct points lie on a single line. For a point p \u2208 s , we can protect this point by building a castle. A castle is a simple quadrilateral ( polygon with 4 vertices) that strictly encloses the point p ( i. e. the point p is strictly inside a quadrilateral) . Kiwon is interested in the number of 4 - point subsets of s that can be used to build a castle protecting p . Note that, if a single subset can be connected in more than one way to enclose a point, it is counted only once. Let f( p) be the number of 4 - point subsets that can enclose the point p . Please compute the sum of f( p) for all points p \u2208 s .",
    "input": "The first line contains a single integer n ( 5 \u2264 n \u2264 2 500 ) . In the next n lines, two integers x_ i and y_ i ( - 10^ 9 \u2264 x_ i, y_ i \u2264 10^ 9 ) denoting the position of points are given. It is guaranteed that all points are distinct, and there are no three collinear points.",
    "output": "Print the sum of f( p) for all points p \u2208 s .",
    "note": "",
    "topics": [
      "combinatorics",
      "geometry",
      "math",
      "sortings"
    ],
    "id": "1284E"
  },
  {
    "title": "Shawarma Tent",
    "url": "https://codeforces.com/problemset/problem/1271/C",
    "history": "The map of the capital of Berland can be viewed on the infinite coordinate plane. Each point with integer coordinates contains a building, and there are streets connecting every building to four neighbouring buildings. All streets are parallel to the coordinate axes. The main school of the capital is located in ( s_ x, s_ y) . There are n students attending this school, the i - th of them lives in the house located in ( x_ i, y_ i) . It is possible that some students live in the same house, but no student lives in ( s_ x, s_ y) . After classes end, each student walks from the school to his house along one of the shortest paths. So the distance the i - th student goes from the school to his house is | s_ x - x_ i| + | s_ y - y_ i| . The Provision Department of Berland has decided to open a shawarma tent somewhere in the capital ( at some point with integer coordinates) . It is considered that the i - th student will buy a shawarma if at least one of the shortest paths from the school to the i - th student' s house goes through the point where the shawarma tent is located. It is forbidden to place the shawarma tent at the point where the school is located, but the coordinates of the shawarma tent may coincide with the coordinates of the house of some student ( or even multiple students) . You want to find the maximum possible number of students buying shawarma and the optimal location for the tent itself.",
    "input": "The first line contains three integers n , s_ x , s_ y ( 1 \u2264 n \u2264 200 000 , 0 \u2264 s_ x, s_ y \u2264 10^ 9 ) \u2014 the number of students and the coordinates of the school, respectively. Then n lines follow. The i - th of them contains two integers x_ i , y_ i ( 0 \u2264 x_ i, y_ i \u2264 10^ 9 ) \u2014 the location of the house where the i - th student lives. Some locations of houses may coincide, but no student lives in the same location where the school is situated.",
    "output": "The output should consist of two lines. The first of them should contain one integer c \u2014 the maximum number of students that will buy shawarmas at the tent. The second line should contain two integers p_ x and p_ y \u2014 the coordinates where the tent should be located. If there are multiple answers, print any of them. Note that each of p_ x and p_ y should be not less than 0 and not greater than 10^ 9 .",
    "note": "In the first example, If we build the shawarma tent in ( 4, 2) , then the students living in ( 4, 2) , ( 4, 1) and ( 5, 1) will visit it. In the second example, it is possible to build the shawarma tent in ( 1, 1) , then both students living in ( 0, 0) will visit it.",
    "topics": [
      "brute force",
      "geometry",
      "greedy",
      "implementation"
    ],
    "id": "1271C"
  },
  {
    "title": "Divide Points",
    "url": "https://codeforces.com/problemset/problem/1270/E",
    "history": "You are given a set of n\u2265 2 pairwise different points with integer coordinates. Your task is to partition these points into two nonempty groups A and B , such that the following condition holds: For every two points P and Q , write the Euclidean distance between them on the blackboard: if they belong to the same group \u2014 with a yellow pen, and if they belong to different groups \u2014 with a blue pen. Then no yellow number is equal to any blue number. It is guaranteed that such a partition exists for any possible input. If there exist multiple partitions, you are allowed to output any of them.",
    "input": "The first line contains one integer n ( 2 \u2264 n \u2264 10^ 3) \u2014 the number of points. The i - th of the next n lines contains two integers x_ i and y_ i ( - 10^ 6 \u2264 x_ i, y_ i \u2264 10^ 6 ) \u2014 the coordinates of the i - th point. It is guaranteed that all n points are pairwise different.",
    "output": "In the first line, output a ( 1 \u2264 a \u2264 n- 1 ) \u2014 the number of points in a group A . In the second line, output a integers \u2014 the indexes of points that you include into group A . If there are multiple answers, print any.",
    "note": "In the first example, we set point ( 0, 0) to group A and points ( 0, 1) and ( 1, 0) to group B . In this way, we will have 1 yellow number \u221a( 2) and 2 blue numbers 1 on the blackboard. In the second example, we set points ( 0, 1) and ( 0, - 1) to group A and points ( - 1, 0) and ( 1, 0) to group B . In this way, we will have 2 yellow numbers 2 , 4 blue numbers \u221a( 2) on the blackboard.",
    "topics": [
      "constructive algorithms",
      "geometry",
      "math"
    ],
    "id": "1270E"
  },
  {
    "title": "Point Ordering",
    "url": "https://codeforces.com/problemset/problem/1254/C",
    "history": "This is an interactive problem. Khanh has n points on the Cartesian plane, denoted by a_ 1, a_ 2, . . . , a_ n . All points' coordinates are integers between - 10^ 9 and 10^ 9 , inclusive. No three points are collinear. He says that these points are vertices of a convex polygon; in other words, there exists a permutation p_ 1, p_ 2, . . . , p_ n of integers from 1 to n such that the polygon a_ p_ 1 a_ p_ 2. . . a_ p_ n is convex and vertices are listed in counter- clockwise order. Khanh gives you the number n , but hides the coordinates of his points. Your task is to guess the above permutation by asking multiple queries. In each query, you give Khanh 4 integers t , i , j , k ; where either t = 1 or t = 2 ; and i , j , k are three distinct indices from 1 to n , inclusive. In response, Khanh tells you: if t = 1 , the area of the triangle a_ ia_ ja_ k multiplied by 2 . if t = 2 , the sign of the cross product of two vectors a_ ia_ j and a_ ia_ k . Recall that the cross product of vector a = ( x_ a, y_ a) and vector b = ( x_ b, y_ b) is the integer x_ a \u00b7 y_ b - x_ b \u00b7 y_ a . The sign of a number is 1 it it is positive, and - 1 otherwise. It can be proven that the cross product obtained in the above queries can not be 0 . You can ask at most 3 \u00b7 n queries. Please note that Khanh fixes the coordinates of his points and does not change it while answering your queries. You do not need to guess the coordinates. In your permutation a_ p_ 1a_ p_ 2. . . a_ p_ n , p_ 1 should be equal to 1 and the indices of vertices should be listed in counter- clockwise order. InteractionYou start the interaction by reading n ( 3 \u2264 n \u2264 1 000 ) \u2014 the number of vertices. To ask a query, write 4 integers t , i , j , k ( 1 \u2264 t \u2264 2 , 1 \u2264 i, j, k \u2264 n ) in a separate line. i , j and k should be distinct. Then read a single integer to get the answer to this query, as explained above. It can be proven that the answer of a query is always an integer. When you find the permutation, write a number 0 . Then write n integers p_ 1, p_ 2, . . . , p_ n in the same line. After printing a query do not forget to output end of line and flush the output. Otherwise, you will get Idleness limit exceeded. To do this, use: fflush( stdout) or cout. flush( ) in C+ + ; System. out. flush( ) in Java; flush( output) in Pascal; stdout. flush( ) in Python; see documentation for other languages. Hack formatTo hack, use the following format: The first line contains an integer n ( 3 \u2264 n \u2264 1 000 ) \u2014 the number of vertices. The i - th of the next n lines contains two integers x_ i and y_ i ( - 10^ 9 \u2264 x_ i, y_ i \u2264 10^ 9 ) \u2014 the coordinate of the point a_ i .",
    "input": "",
    "output": "",
    "note": "The image below shows the hidden polygon in the example: The interaction in the example goes as below: Contestant reads n = 6 . Contestant asks a query with t = 1 , i = 1 , j = 4 , k = 6 . Jury answers 15 . The area of the triangle A_ 1A_ 4A_ 6 is 7. 5 . Note that the answer is two times the area of the triangle. Contestant asks a query with t = 2 , i = 1 , j = 5 , k = 6 . Jury answers - 1 . The cross product of A_ 1A_ 5 = ( 2, 2) and A_ 1A_ 6 = ( 4, 1) is - 2 . The sign of - 2 is - 1 . Contestant asks a query with t = 2 , i = 2 , j = 1 , k = 4 . Jury answers 1 . The cross product of A_ 2A_ 1 = ( - 5, 2) and A_ 2A_ 4 = ( - 2, - 1) is 1 . The sign of 1 is 1 . Contestant says that the permutation is ( 1, 3, 4, 2, 6, 5) .",
    "topics": [
      "constructive algorithms",
      "geometry",
      "interactive",
      "math"
    ],
    "id": "1254C"
  },
  {
    "title": "Integer Points",
    "url": "https://codeforces.com/problemset/problem/1248/A",
    "history": "DLS and JLS are bored with a Math lesson. In order to entertain themselves, DLS took a sheet of paper and drew n distinct lines, given by equations y = x + p_ i for some distinct p_ 1, p_ 2, . . . , p_ n . Then JLS drew on the same paper sheet m distinct lines given by equations y = - x + q_ i for some distinct q_ 1, q_ 2, . . . , q_ m . DLS and JLS are interested in counting how many line pairs have integer intersection points, i. e. points with both coordinates that are integers. Unfortunately, the lesson will end up soon, so DLS and JLS are asking for your help.",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 1000 ) , the number of test cases in the input. Then follow the test case descriptions. The first line of a test case contains an integer n ( 1 \u2264 n \u2264 10^ 5 ) , the number of lines drawn by DLS. The second line of a test case contains n distinct integers p_ i ( 0 \u2264 p_ i \u2264 10^ 9 ) describing the lines drawn by DLS. The integer p_ i describes a line given by the equation y = x + p_ i . The third line of a test case contains an integer m ( 1 \u2264 m \u2264 10^ 5 ) , the number of lines drawn by JLS. The fourth line of a test case contains m distinct integers q_ i ( 0 \u2264 q_ i \u2264 10^ 9 ) describing the lines drawn by JLS. The integer q_ i describes a line given by the equation y = - x + q_ i . The sum of the values of n over all test cases in the input does not exceed 10^ 5 . Similarly, the sum of the values of m over all test cases in the input does not exceed 10^ 5 . In hacks it is allowed to use only one test case in the input, so t= 1 should be satisfied.",
    "output": "For each test case in the input print a single integer \u2014 the number of line pairs with integer intersection points.",
    "note": "The picture shows the lines from the first test case of the example. Black circles denote intersection points with integer coordinates.",
    "topics": [
      "geometry",
      "math"
    ],
    "id": "1248A"
  },
  {
    "title": "Balanced Removals (Easier)",
    "url": "https://codeforces.com/problemset/problem/1237/C1",
    "history": "This is an easier version of the problem. In this version, n \u2264 2000 . There are n distinct points in three- dimensional space numbered from 1 to n . The i - th point has coordinates ( x_ i, y_ i, z_ i) . The number of points n is even. You' d like to remove all n points using a sequence of n/ 2 snaps. In one snap, you can remove any two points a and b that have not been removed yet and form a perfectly balanced pair. A pair of points a and b is perfectly balanced if no other point c ( that has not been removed yet) lies within the axis- aligned minimum bounding box of points a and b . Formally, point c lies within the axis- aligned minimum bounding box of points a and b if and only if min( x_ a, x_ b) \u2264 x_ c \u2264max( x_ a, x_ b) , min( y_ a, y_ b) \u2264 y_ c \u2264max( y_ a, y_ b) , and min( z_ a, z_ b) \u2264 z_ c \u2264max( z_ a, z_ b) . Note that the bounding box might be degenerate. Find a way to remove all points in n/ 2 snaps.",
    "input": "The first line contains a single integer n ( 2 \u2264 n \u2264 2000 ; n is even) , denoting the number of points. Each of the next n lines contains three integers x_ i , y_ i , z_ i ( - 10^ 8 \u2264 x_ i, y_ i, z_ i \u2264 10^ 8 ) , denoting the coordinates of the i - th point. No two points coincide.",
    "output": "Output n/ 2 pairs of integers a_ i, b_ i ( 1 \u2264 a_ i, b_ i \u2264 n ) , denoting the indices of points removed on snap i . Every integer between 1 and n , inclusive, must appear in your output exactly once. We can show that it is always possible to remove all points. If there are many solutions, output any of them.",
    "note": "In the first example, here is what points and their corresponding bounding boxes look like ( drawn in two dimensions for simplicity, as all points lie on z = 0 plane) . Note that order of removing matters: for example, points 5 and 1 don' t form a perfectly balanced pair initially, but they do after point 3 is removed.",
    "topics": [
      "constructive algorithms",
      "geometry",
      "greedy"
    ],
    "id": "1237C1"
  },
  {
    "title": "Geolocation",
    "url": "https://codeforces.com/problemset/problem/1220/G",
    "history": "You are working for the Gryzzl company, headquartered in Pawnee, Indiana. The new national park has been opened near Pawnee recently and you are to implement a geolocation system, so people won' t get lost. The concept you developed is innovative and minimalistic. There will be n antennas located somewhere in the park. When someone would like to know their current location, their Gryzzl hologram phone will communicate with antennas and obtain distances from a user' s current location to all antennas. Knowing those distances and antennas locations it should be easy to recover a user' s location. . . Right? Well, almost. The only issue is that there is no way to distinguish antennas, so you don' t know, which distance corresponds to each antenna. Your task is to find a user' s location given as little as all antennas location and an unordered multiset of distances.",
    "input": "The first line of input contains a single integer n ( 2 \u2264 n \u2264 10^ 5 ) which is the number of antennas. The following n lines contain coordinates of antennas, i - th line contain two integers x_ i and y_ i ( 0 \u2264 x_ i, y_ i \u2264 10^ 8 ) . It is guaranteed that no two antennas coincide. The next line of input contains integer m ( 1 \u2264 n \u00b7 m \u2264 10^ 5 ) , which is the number of queries to determine the location of the user. Following m lines contain n integers 0 \u2264 d_ 1 \u2264 d_ 2 \u2264. . . \u2264 d_ n \u2264 2 \u00b7 10^ 16 each. These integers form a multiset of squared distances from unknown user' s location ( x; y) to antennas. For all test cases except the examples it is guaranteed that all user' s locations ( x; y) were chosen uniformly at random, independently from each other among all possible integer locations having 0 \u2264 x, y \u2264 10^ 8 .",
    "output": "For each query output k , the number of possible a user' s locations matching the given input and then output the list of these locations in lexicographic order. It is guaranteed that the sum of all k over all points does not exceed 10^ 6 .",
    "note": "As you see in the second example, although initially a user' s location is picked to have non- negative coordinates, you have to output all possible integer locations.",
    "topics": [
      "geometry"
    ],
    "id": "1220G"
  },
  {
    "title": "Guarding warehouses",
    "url": "https://codeforces.com/problemset/problem/1218/B",
    "history": "Bob Bubblestrong just got a new job as security guard. Bob is now responsible for safety of a collection of warehouses, each containing the most valuable Bubble Cup assets - the high- quality bubbles. His task is to detect thieves inside the warehouses and call the police. Looking from the sky, each warehouse has a shape of a convex polygon. Walls of no two warehouses intersect, and of course, none of the warehouses is built inside of another warehouse. Little did the Bubble Cup bosses know how lazy Bob is and that he enjoys watching soap operas ( he heard they are full of bubbles) from the coziness of his office. Instead of going from one warehouse to another to check if warehouses are secured, the plan Bob has is to monitor all the warehouses from the comfort of his office using the special X- ray goggles. The goggles have an infinite range, so a thief in any of the warehouses could easily be spotted. However, the goggles promptly broke and the X- rays are now strong only enough to let Bob see through a single wall. Now, Bob would really appreciate if you could help him find out what is the total area inside of the warehouses monitored by the broken goggles, so that he could know how much area of the warehouses he needs to monitor in person.",
    "input": "The first line contains one integer N ( 1 \u2264 N \u2264 10^ 4 ) \u2013 the number of warehouses. The next N lines describe the warehouses. The first number of the line is integer c_ i ( 3 \u2264 c_ i \u2264 10^ 4 ) \u2013 the number corners in the i^ th warehouse, followed by c_ i pairs of integers. The j^ th pair is ( x_ j, y_ j) \u2013 the coordinates of the j^ th corner ( | x_ j| , | y_ j| \u2264 3 * 10^ 4 ) . The corners are listed in the clockwise order. The total number of corners in all the warehouses is at most 5 * 10^ 4 . Bob' s office is positioned at the point with coordinates ( 0, 0) . The office is not contained within any of the warehouses.",
    "output": "Print a single line containing a single decimal number accurate to at least four decimal places \u2013 the total area of the warehouses Bob can monitor using the broken X- ray goggles.",
    "note": "Areas monitored by the X- ray goggles are colored green and areas not monitored by the goggles are colored red. The warehouses ABCD , IJK and LMNOPQ are completely monitored using the googles. The warehouse EFGH is partially monitored using the goggles: part EFW is not monitored because to monitor each point inside it, the X- rays must go through two walls of warehouse ABCD . The warehouse RUTS is not monitored from the Bob' s office, because there are two walls of the warehouse IJK between Bob' s office and each point in RUTS . The total area monitored by the goggles is P = P_ ABCD + P_ FGHW + P_ IJK + P_ LMNOPQ = 4 + 3. 333333333333 + 2 + 4 = 13. 333333333333 .",
    "topics": [
      "data structures",
      "geometry"
    ],
    "id": "1218B"
  },
  {
    "title": "White Sheet",
    "url": "https://codeforces.com/problemset/problem/1216/C",
    "history": "There is a white sheet of paper lying on a rectangle table. The sheet is a rectangle with its sides parallel to the sides of the table. If you will take a look from above and assume that the bottom left corner of the table has coordinates ( 0, 0) , and coordinate axes are left and bottom sides of the table, then the bottom left corner of the white sheet has coordinates ( x_ 1, y_ 1) , and the top right \u2014 ( x_ 2, y_ 2) . After that two black sheets of paper are placed on the table. Sides of both black sheets are also parallel to the sides of the table. Coordinates of the bottom left corner of the first black sheet are ( x_ 3, y_ 3) , and the top right \u2014 ( x_ 4, y_ 4) . Coordinates of the bottom left corner of the second black sheet are ( x_ 5, y_ 5) , and the top right \u2014 ( x_ 6, y_ 6) . Example of three rectangles. Determine if some part of the white sheet can be seen from the above after the two black sheets are placed. The part of the white sheet can be seen if there is at least one point lying not strictly inside the white sheet and strictly outside of both black sheets.",
    "input": "The first line of the input contains four integers x_ 1, y_ 1, x_ 2, y_ 2 ( 0 \u2264 x_ 1 < x_ 2 \u2264 10^ 6, 0 \u2264 y_ 1 < y_ 2 \u2264 10^ 6) \u2014 coordinates of the bottom left and the top right corners of the white sheet. The second line of the input contains four integers x_ 3, y_ 3, x_ 4, y_ 4 ( 0 \u2264 x_ 3 < x_ 4 \u2264 10^ 6, 0 \u2264 y_ 3 < y_ 4 \u2264 10^ 6) \u2014 coordinates of the bottom left and the top right corners of the first black sheet. The third line of the input contains four integers x_ 5, y_ 5, x_ 6, y_ 6 ( 0 \u2264 x_ 5 < x_ 6 \u2264 10^ 6, 0 \u2264 y_ 5 < y_ 6 \u2264 10^ 6) \u2014 coordinates of the bottom left and the top right corners of the second black sheet. The sides of each sheet of paper are parallel ( perpendicular) to the coordinate axes.",
    "output": "If some part of the white sheet can be seen from the above after the two black sheets are placed, print \" YES\" ( without quotes) . Otherwise print \" NO\" .",
    "note": "In the first example the white sheet is fully covered by black sheets. In the second example the part of the white sheet can be seen after two black sheets are placed. For example, the point ( 6. 5, 4. 5) lies not strictly inside the white sheet and lies strictly outside of both black sheets.",
    "topics": [
      "geometry",
      "math"
    ],
    "id": "1216C"
  },
  {
    "title": "Water Lily",
    "url": "https://codeforces.com/problemset/problem/1199/B",
    "history": "While sailing on a boat, Inessa noticed a beautiful water lily flower above the lake' s surface. She came closer and it turned out that the lily was exactly H centimeters above the water surface. Inessa grabbed the flower and sailed the distance of L centimeters. Exactly at this point the flower touched the water surface. Suppose that the lily grows at some point A on the lake bottom, and its stem is always a straight segment with one endpoint at point A . Also suppose that initially the flower was exactly above the point A , i. e. its stem was vertical. Can you determine the depth of the lake at point A ?",
    "input": "The only line contains two integers H and L ( 1 \u2264 H < L \u2264 10^ 6 ) .",
    "output": "Print a single number \u2014 the depth of the lake at point A . The absolute or relative error should not exceed 10^ - 6 . Formally, let your answer be A , and the jury' s answer be B . Your answer is accepted if and only if | A - B| / max( 1, | B| ) \u2264 10^ - 6 .",
    "note": "",
    "topics": [
      "geometry",
      "math"
    ],
    "id": "1199B"
  },
  {
    "title": "Geometers Anonymous Club",
    "url": "https://codeforces.com/problemset/problem/1195/F",
    "history": "Denis holds a Geometers Anonymous Club meeting in SIS. He has prepared n convex polygons numbered from 1 to n for the club. He plans to offer members of the club to calculate Minkowski sums of these polygons. More precisely, he plans to give q tasks, the i - th of them asks to calculate the sum of Minkowski of polygons with indices from l_ i to r_ i inclusive. The sum of Minkowski of two sets A and B is the set C = { a + b : a \u2208 A, b \u2208 B} . It can be proven that if A and B are convex polygons then C will also be a convex polygon. Sum of two convex polygons To calculate the sum of Minkowski of p polygons ( p > 2 ) , you need to calculate the sum of Minkowski of the first p - 1 polygons, and then calculate the sum of Minkowski of the resulting polygon and the p - th polygon. For the convenience of checking answers, Denis has decided to prepare and calculate the number of vertices in the sum of Minkowski for each task he prepared. Help him to do it.",
    "input": "The first line of the input contains one integer n \u2014 the number of convex polygons Denis prepared ( 1 \u2264 n \u2264 100 000 ) . Then n convex polygons follow. The description of the i - th polygon starts with one integer k_ i \u2014 the number of vertices in the i - th polygon ( 3 \u2264 k_ i ) . The next k_ i lines contain two integers x_ ij , y_ ij each \u2014 coordinates of vertices of the i - th polygon in counterclockwise order ( | x_ ij| , | y_ ij| \u2264 10 ^ 9 ) . It is guaranteed, that there are no three consecutive vertices lying on the same line. The total number of vertices over all polygons does not exceed 300 000 . The following line contains one integer q \u2014 the number of tasks ( 1 \u2264 q \u2264 100 000 ) . The next q lines contain descriptions of tasks. Description of the i - th task contains two integers l_ i and r_ i ( 1 \u2264 l_ i \u2264 r_ i \u2264 n ) .",
    "output": "For each task print a single integer \u2014 the number of vertices in the sum of Minkowski of polygons with indices from l_ i to r_ i .",
    "note": "Description of the example: First, second and third polygons from the example Minkowski sums of the first and second, the second and third and all polygons correspondingly",
    "topics": [
      "data structures",
      "geometry",
      "math",
      "sortings"
    ],
    "id": "1195F"
  },
  {
    "title": "Count The Rectangles",
    "url": "https://codeforces.com/problemset/problem/1194/E",
    "history": "There are n segments drawn on a plane; the i - th segment connects two points ( x_ i, 1 , y_ i, 1 ) and ( x_ i, 2 , y_ i, 2 ) . Each segment is non- degenerate, and is either horizontal or vertical \u2014 formally, for every i \u2208 [ 1, n] either x_ i, 1 = x_ i, 2 or y_ i, 1 = y_ i, 2 ( but only one of these conditions holds) . Only segments of different types may intersect: no pair of horizontal segments shares any common points, and no pair of vertical segments shares any common points. We say that four segments having indices h_ 1 , h_ 2 , v_ 1 and v_ 2 such that h_ 1 < h_ 2 and v_ 1 < v_ 2 form a rectangle if the following conditions hold: segments h_ 1 and h_ 2 are horizontal; segments v_ 1 and v_ 2 are vertical; segment h_ 1 intersects with segment v_ 1 ; segment h_ 2 intersects with segment v_ 1 ; segment h_ 1 intersects with segment v_ 2 ; segment h_ 2 intersects with segment v_ 2 . Please calculate the number of ways to choose four segments so they form a rectangle. Note that the conditions h_ 1 < h_ 2 and v_ 1 < v_ 2 should hold.",
    "input": "The first line contains one integer n ( 1 \u2264 n \u2264 5000 ) \u2014 the number of segments. Then n lines follow. The i - th line contains four integers x_ i, 1 , y_ i, 1 , x_ i, 2 and y_ i, 2 denoting the endpoints of the i - th segment. All coordinates of the endpoints are in the range [ - 5000, 5000] . It is guaranteed that each segment is non- degenerate and is either horizontal or vertical. Furthermore, if two segments share a common point, one of these segments is horizontal, and another one is vertical.",
    "output": "Print one integer \u2014 the number of ways to choose four segments so they form a rectangle.",
    "note": "The following pictures represent sample cases:",
    "topics": [
      "bitmasks",
      "brute force",
      "data structures",
      "geometry",
      "sortings"
    ],
    "id": "1194E"
  },
  {
    "title": "Scissors and Tape",
    "url": "https://codeforces.com/problemset/problem/1193/C",
    "history": "You are given a piece of paper in the shape of a simple polygon S . Your task is to turn it into a simple polygon T that has the same area as S . You can use two tools: scissors and tape. Scissors can be used to cut any polygon into smaller polygonal pieces. Tape can be used to combine smaller pieces into larger polygons. You can use each tool multiple times, in any order. The polygons given in the input have integer coordinates, but you are allowed to produce shapes with non- integer coordinates in your output. A formal definition of the task follows. A shape Q= ( Q_ 0, . . . , Q_ n- 1) is a sequence of three or more points in the plane such that: The closed polyline Q_ 0Q_ 1Q_ 2. . . Q_ n- 1Q_ 0 never touches or intersects itself, and therefore it forms the boundary of a simple polygon. The polyline goes around the boundary of the polygon in the counter- clockwise direction. The polygon whose boundary is the shape Q will be denoted P( Q) . Two shapes are called equivalent if one can be translated and/ or rotated to become identical with the other. Note that mirroring a shape is not allowed. Also note that the order of points matters: the shape ( Q_ 1, . . . , Q_ n- 1, Q_ 0) is not necessarily equivalent to the shape ( Q_ 0, . . . , Q_ n- 1) . In the figure on the left: Shapes U and V are equivalent. Shape W is not equivalent with them because the points of W are given in a different order. Regardless of the order of points, the fourth shape is not equivalent with the previous ones either as flipping a shape is not allowed. In both input and output, a shape with n points is represented as a single line that contains 2n+ 1 space- separated numbers: the number n followed by the coordinates of the points: Q_ 0, x , Q_ 0, y , Q_ 1, x , . . . Shapes have identification numbers ( IDs) . The given shape S has ID 0, the shapes you produce in your solutions are given IDs 1, 2, 3, . . . , in the order in which they are produced. Shapes B_ 1, . . . , B_ k form a subdivision of shape A if: The union of all P( B_ i) is exactly P( A) . For each i= \u0338 j , the area of the intersection of P( B_ i) and P( B_ j) is zero. The scissors operation destroys one existing shape A and produces one or more shapes B_ 1, . . . , B_ k that form a subdivision of A . In the figure: Shape A ( square) subdivided into shapes B_ 1 , B_ 2 , B_ 3 ( the three triangles) . One valid way to describe one of the B_ i is \" 3 3 1 6 1 5. 1 4\" . The tape operation destroys one or more existing shapes A_ 1, . . . , A_ k and produces one new shape B . In order to perform this operation, you must first specify shapes C_ 1, . . . , C_ k and only then the final shape B . These shapes must satisfy the following: For each i , the shape C_ i is equivalent to the shape A_ i . The shapes C_ 1, . . . , C_ k form a subdivision of the shape B . Informally, you choose the shape B and show how to move each of the existing A_ i to its correct location C_ i within B . Note that only the shape B gets a new ID, the shapes C_ i do not. ScoringA shape is called a nice rectangle if it has the form ( ( 0, 0) , ( x, 0) , ( x, y) , ( 0, y) ) for some positive integers x and y . A shape is called a nice square if additionally x= y . A shape A is called strictly convex if all inner angles of the polygon P( A) are smaller than 180 degrees. Subtask 1 ( 5 points) : S and T are nice rectangles. All coordinates of all points are integers between 0 and 10, inclusiveSubtask 2 ( 13 points) : S is a nice rectangle with x> y , and T is a nice squareSubtask 3 ( 12 points) : S and T are nice rectanglesSubtask 4 ( 14 points) : S is a triangle and T is a nice squareSubtask 5 ( 10 points) : S and T are trianglesSubtask 6 ( 16 points) : S is a strictly convex polygon and T is a nice rectangleSubtask 7 ( 11 points) : T is a nice rectangleSubtask 8 ( 19 points) : no additional constraints",
    "input": "The first line contains the source shape S . The second line contains the target shape T . Each shape has between 3 and 10 points, inclusive. Both shapes are given in the format specified above. All coordinates in the input are integers between - 10^ 6 and 10^ 6 , inclusive. In each shape, no three points form an angle smaller than 3 degrees. ( This includes non- consecutive points and implies that no three points are collinear. ) The polygons P( S) and P( T) have the same area.",
    "output": "Whenever you use the scissors operation, output a block of lines of the form: scissorsid( A) kB_ 1B_ 2. . . B_ kwhere id( A) is the ID of the shape you want to destroy, k is the number of new shapes you want to produce, and B_ 1, . . . , B_ k are those shapes. Whenever you use the tape operation, output a block of lines of the form: tapek id( A_ 1) . . . id( A_ k) C_ 1C_ 2. . . C_ kBwhere k is the number of shapes you want to tape together, id( A_ 1) , . . . , id( A_ k) are their IDs, C_ 1, . . . , C_ k are equivalent shapes showing their position within B , and B is the final shape obtained by taping them together. It is recommended to output coordinates of points to at least 10 decimal places. The output must satisfy the following: All coordinates of points in the output must be between - 10^ 7 and 10^ 7 , inclusive. Each shape in the output must have at most 100 points. In each operation the number k of shapes must be between 1 and 100 , inclusive. The number of operations must not exceed 2000 . The total number of points in all shapes in the output must not exceed 20000 . In the end, there must be exactly one shape ( that hasn' t been destroyed) , and that shape must be equivalent to T . All operations must be valid according to the checker. Solutions with small rounding errors will be accepted. ( Internally, all comparisons check for absolute or relative error up to 10^ - 3 when verifying each condition. )",
    "note": "The figure below shows the first example output. On the left is the original figure after using the scissors, on the right are the corresponding C_ i when we tape those pieces back together. In the second example output, note that it is sufficient if the final shape is equivalent to the target one, they do not have to be identical. The figure below shows three stages of the third example output. First, we cut the input rectangle into two smaller rectangles, then we cut the bigger of those two rectangles into two more. State after these cuts is shown in the top left part of the figure. Continuing, we tape the two new rectangles together to form a six- sided polygon, and then we cut that polygon into three 2- by- 1 rectangles and one smaller rectangle. This is shown in the bottom left part of the figure. Finally, we take the rectangle we still have from the first step and the four new rectangles and we assemble them into the desired 3- by- 3 square.",
    "topics": [
      "*special",
      "constructive algorithms",
      "geometry"
    ],
    "id": "1193C"
  },
  {
    "title": "Yet Another Partiton Problem",
    "url": "https://codeforces.com/problemset/problem/1175/G",
    "history": "You are given array a_ 1, a_ 2, . . . , a_ n . You need to split it into k subsegments ( so every element is included in exactly one subsegment) . The weight of a subsegment a_ l, a_ l+ 1, . . . , a_ r is equal to ( r - l + 1) \u00b7max_ l \u2264 i \u2264 r( a_ i) . The weight of a partition is a total weight of all its segments. Find the partition of minimal weight.",
    "input": "The first line contains two integers n and k ( 1 \u2264 n \u2264 2 \u00b7 10^ 4 , 1 \u2264 k \u2264min( 100, n) ) \u2014 the length of the array a and the number of subsegments in the partition. The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 2 \u00b7 10^ 4 ) \u2014 the array a .",
    "output": "Print single integer \u2014 the minimal weight among all possible partitions.",
    "note": "The optimal partition in the first example is next: 6 1 7 | 4 . The optimal partition in the second example is next: 6 | 1 | 7 4 . One of the optimal partitions in the third example is next: 5 | 1 5 | 1 | 5 .",
    "topics": [
      "data structures",
      "divide and conquer",
      "dp",
      "geometry",
      "two pointers"
    ],
    "id": "1175G"
  },
  {
    "title": "Low Budget Inception",
    "url": "https://codeforces.com/problemset/problem/1167/G",
    "history": "So we got bored and decided to take our own guess at how would \" Inception\" production go if the budget for the film had been terribly low. The first scene we remembered was the one that features the whole city bending onto itself: It feels like it will require high CGI expenses, doesn' t it? Luckily, we came up with a similar- looking scene which was a tiny bit cheaper to make. Firstly, forget about 3D, that' s hard and expensive! The city is now represented as a number line ( infinite to make it easier, of course) . Secondly, the city doesn' t have to look natural at all. There are n buildings on the line. Each building is a square 1 \u00d7 1 . Buildings are numbered from 1 to n in ascending order of their positions. Lower corners of building i are at integer points a_ i and a_ i + 1 of the number line. Also the distance between any two neighbouring buildings i and i + 1 doesn' t exceed d ( really, this condition is here just to make the city look not that sparse) . Distance between some neighbouring buildings i and i + 1 is calculated from the lower right corner of building i to the lower left corner of building i + 1 . Finally, curvature of the bend is also really hard to simulate! Let the bend at some integer coordinate x be performed with the following algorithm. Take the ray from x to + \u221e and all the buildings which are on this ray and start turning the ray and the buildings counter- clockwise around point x . At some angle some building will touch either another building or a part of the line. You have to stop bending there ( implementing buildings crushing is also not worth its money) . Let' s call the angle between two rays in the final state the terminal angle \u03b1_ x . The only thing left is to decide what integer point x is the best to start bending around. Fortunately, we' ve already chosen m candidates to perform the bending. So, can you please help us to calculate terminal angle \u03b1_ x for each bend x from our list of candidates?",
    "input": "The first line contains two integer numbers n and d ( 1 \u2264 n \u2264 2 \u00b7 10^ 5 , 0 \u2264 d \u2264 7000 ) \u2014 the number of buildings and the maximum distance between any pair of neighbouring buildings, respectively. The second line contains n integers a_ 1, a_ 2, . . . , a_ n ( a_ 1 = 0 , 0 < a_ i + 1 - a_ i \u2264 d + 1 ) \u2014 coordinates of left corners of corresponding buildings in ascending order. The third line contains single integer m ( 1 \u2264 m \u2264 2 \u00b7 10^ 5 ) \u2014 the number of candidates. The fourth line contains m integers x_ 1, x_ 2, . . . , x_ m ( 0 \u2264 x_ i \u2264 a_ n + 1 , x_ i < x_ i + 1 ) \u2014 the coordinates of bends you need to calculate terminal angles for in ascending order.",
    "output": "Print m numbers. For each bend x_ i print terminal angle \u03b1_ x_ i ( in radians) . Your answer is considered correct if its absolute error does not exceed 10^ - 9 . Formally, let your answer be a , and the jury' s answer be b . Your answer is accepted if and only if | a - b| \u2264 10^ - 9 .",
    "note": "Here you can see the picture of the city for the first example and the bend at position 2 for it. The angle you need to measure is marked blue. You can see that it' s equal to \u03c0/ 4 . You can see that no pair of neighbouring buildings have distance more than 4 between them. d = 4 would also suffice for that test.",
    "topics": [
      "brute force",
      "geometry"
    ],
    "id": "1167G"
  },
  {
    "title": "Power Transmission (Hard Edition)",
    "url": "https://codeforces.com/problemset/problem/1163/C2",
    "history": "This problem is same as the previous one, but has larger constraints. It was a Sunday morning when the three friends Selena, Shiro and Katie decided to have a trip to the nearby power station ( do not try this at home) . After arriving at the power station, the cats got impressed with a large power transmission system consisting of many chimneys, electric poles, and wires. Since they are cats, they found those things gigantic. At the entrance of the station, there is a map describing the complicated wiring system. Selena is the best at math among three friends. He decided to draw the map on the Cartesian plane. Each pole is now a point at some coordinates ( x_ i, y_ i) . Since every pole is different, all of the points representing these poles are distinct. Also, every two poles are connected with each other by wires. A wire is a straight line on the plane infinite in both directions. If there are more than two poles lying on the same line, they are connected by a single common wire. Selena thinks, that whenever two different electric wires intersect, they may interfere with each other and cause damage. So he wonders, how many pairs are intersecting? Could you help him with this problem?",
    "input": "The first line contains a single integer n ( 2 \u2264 n \u2264 1000 ) \u2014 the number of electric poles. Each of the following n lines contains two integers x_ i , y_ i ( - 10^ 4 \u2264 x_ i, y_ i \u2264 10^ 4 ) \u2014 the coordinates of the poles. It is guaranteed that all of these n points are distinct.",
    "output": "Print a single integer \u2014 the number of pairs of wires that are intersecting.",
    "note": "In the first example: In the second example: Note that the three poles ( 0, 0) , ( 0, 2) and ( 0, 4) are connected by a single wire. In the third example:",
    "topics": [
      "data structures",
      "geometry",
      "implementation",
      "math"
    ],
    "id": "1163C2"
  },
  {
    "title": "Power Transmission (Easy Edition)",
    "url": "https://codeforces.com/problemset/problem/1163/C1",
    "history": "This problem is same as the next one, but has smaller constraints. It was a Sunday morning when the three friends Selena, Shiro and Katie decided to have a trip to the nearby power station ( do not try this at home) . After arriving at the power station, the cats got impressed with a large power transmission system consisting of many chimneys, electric poles, and wires. Since they are cats, they found those things gigantic. At the entrance of the station, there is a map describing the complicated wiring system. Selena is the best at math among three friends. He decided to draw the map on the Cartesian plane. Each pole is now a point at some coordinates ( x_ i, y_ i) . Since every pole is different, all of the points representing these poles are distinct. Also, every two poles are connected with each other by wires. A wire is a straight line on the plane infinite in both directions. If there are more than two poles lying on the same line, they are connected by a single common wire. Selena thinks, that whenever two different electric wires intersect, they may interfere with each other and cause damage. So he wonders, how many pairs are intersecting? Could you help him with this problem?",
    "input": "The first line contains a single integer n ( 2 \u2264 n \u2264 50 ) \u2014 the number of electric poles. Each of the following n lines contains two integers x_ i , y_ i ( - 10^ 4 \u2264 x_ i, y_ i \u2264 10^ 4 ) \u2014 the coordinates of the poles. It is guaranteed that all of these n points are distinct.",
    "output": "Print a single integer \u2014 the number of pairs of wires that are intersecting.",
    "note": "In the first example: In the second example: Note that the three poles ( 0, 0) , ( 0, 2) and ( 0, 4) are connected by a single wire. In the third example:",
    "topics": [
      "brute force",
      "geometry"
    ],
    "id": "1163C1"
  },
  {
    "title": "Winding polygonal line",
    "url": "https://codeforces.com/problemset/problem/1158/D",
    "history": "Vasya has n different points A_ 1, A_ 2, . . . A_ n on the plane. No three of them lie on the same line He wants to place them in some order A_ p_ 1, A_ p_ 2, . . . , A_ p_ n , where p_ 1, p_ 2, . . . , p_ n \u2014 some permutation of integers from 1 to n . After doing so, he will draw oriented polygonal line on these points, drawing oriented segments from each point to the next in the chosen order. So, for all 1 \u2264 i \u2264 n- 1 he will draw oriented segment from point A_ p_ i to point A_ p_ i+ 1 . He wants to make this polygonal line satisfying 2 conditions: it will be non- self- intersecting, so any 2 segments which are not neighbors don' t have common points. it will be winding. Vasya has a string s , consisting of ( n- 2) symbols \" L\" or \" R\" . Let' s call an oriented polygonal line winding, if its i - th turn left, if s_ i = \" L\" and right, if s_ i = \" R\" . More formally: i - th turn will be in point A_ p_ i+ 1 , where oriented segment from point A_ p_ i to point A_ p_ i+ 1 changes to oriented segment from point A_ p_ i+ 1 to point A_ p_ i+ 2 . Let' s define vectors v_ 1 = A_ p_ i A_ p_ i+ 1 and v_ 2 = A_ p_ i+ 1 A_ p_ i+ 2 . Then if in order to rotate the vector v_ 1 by the smallest possible angle, so that its direction coincides with the direction of the vector v_ 2 we need to make a turn counterclockwise, then we say that i - th turn is to the left, and otherwise to the right. For better understanding look at this pictures with some examples of turns: There are left turns on this picture There are right turns on this picture You are given coordinates of the points A_ 1, A_ 2, . . . A_ n on the plane and string s . Find a permutation p_ 1, p_ 2, . . . , p_ n of the integers from 1 to n , such that the polygonal line, drawn by Vasya satisfy two necessary conditions.",
    "input": "The first line contains one integer n \u2014 the number of points ( 3 \u2264 n \u2264 2000 ) . Next n lines contains two integers x_ i and y_ i , divided by space \u2014 coordinates of the point A_ i on the plane ( - 10^ 9 \u2264 x_ i, y_ i \u2264 10^ 9 ) . The last line contains a string s consisting of symbols \" L\" and \" R\" with length ( n- 2) . It is guaranteed that all points are different and no three points lie at the same line.",
    "output": "If the satisfying permutation doesn' t exists, print - 1 . In the other case, print n numbers p_ 1, p_ 2, . . . , p_ n \u2014 the permutation which was found ( 1 \u2264 p_ i \u2264 n and all p_ 1, p_ 2, . . . , p_ n are different) . If there exists more than one solution, you can find any.",
    "note": "This is the picture with the polygonal line from the 1 test: As we see, this polygonal line is non- self- intersecting and winding, because the turn in point 2 is left. This is the picture with the polygonal line from the 2 test:",
    "topics": [
      "constructive algorithms",
      "geometry",
      "greedy",
      "math"
    ],
    "id": "1158D"
  },
  {
    "title": "Inscribed Figures",
    "url": "https://codeforces.com/problemset/problem/1156/A",
    "history": "The math faculty of Berland State University has suffered the sudden drop in the math skills of enrolling students. This year the highest grade on the entrance math test was 8. Out of 100! Thus, the decision was made to make the test easier. Future students will be asked just a single question. They are given a sequence of integer numbers a_ 1, a_ 2, . . . , a_ n , each number is from 1 to 3 and a_ i a_ i + 1 for each valid i . The i - th number represents a type of the i - th figure: circle; isosceles triangle with the length of height equal to the length of base; square. The figures of the given sequence are placed somewhere on a Cartesian plane in such a way that: ( i + 1) - th figure is inscribed into the i - th one; each triangle base is parallel to OX; the triangle is oriented in such a way that the vertex opposite to its base is at the top; each square sides are parallel to the axes; for each i from 2 to n figure i has the maximum possible length of side for triangle and square and maximum radius for circle. Note that the construction is unique for some fixed position and size of just the first figure. The task is to calculate the number of distinct points ( not necessarily with integer coordinates) where figures touch. The trick is, however, that the number is sometimes infinite. But that won' t make the task difficult for you, will it? So can you pass the math test and enroll into Berland State University?",
    "input": "The first line contains a single integer n ( 2 \u2264 n \u2264 100 ) \u2014 the number of figures. The second line contains n integer numbers a_ 1, a_ 2, . . . , a_ n ( 1 \u2264 a_ i \u2264 3 , a_ i a_ i + 1 ) \u2014 types of the figures.",
    "output": "The first line should contain either the word \" Infinite\" if the number of distinct points where figures touch is infinite or \" Finite\" otherwise. If the number is finite than print it in the second line. It' s guaranteed that the number fits into 32- bit integer type.",
    "note": "Here are the glorious pictures for the examples. Note that the triangle is not equilateral but just isosceles with the length of height equal to the length of base. Thus it fits into a square in a unique way. The distinct points where figures touch are marked red. In the second example the triangle and the square touch each other for the whole segment, it contains infinite number of points.",
    "topics": [
      "geometry"
    ],
    "id": "1156A"
  },
  {
    "title": "Satanic Panic",
    "url": "https://codeforces.com/problemset/problem/1146/H",
    "history": "You are given a set of n points in a 2D plane. No three points are collinear. A pentagram is a set of 5 points A, B, C, D, E that can be arranged as follows. Note the length of the line segments don' t matter, only that those particular intersections exist. Count the number of ways to choose 5 points from the given set that form a pentagram.",
    "input": "The first line contains an integer n ( 5 \u2264 n \u2264 300 ) \u2014 the number of points. Each of the next n lines contains two integers x_ i, y_ i ( - 10^ 6 \u2264 x_ i, y_ i \u2264 10^ 6 ) \u2014 the coordinates of the i - th point. It is guaranteed that no three points are collinear.",
    "output": "Print a single integer, the number of sets of 5 points that form a pentagram.",
    "note": "A picture of the first sample: A picture of the second sample: A picture of the third sample:",
    "topics": [
      "dp",
      "geometry"
    ],
    "id": "1146H"
  },
  {
    "title": "U2",
    "url": "https://codeforces.com/problemset/problem/1142/C",
    "history": "Recently Vasya learned that, given two points with different x coordinates, you can draw through them exactly one parabola with equation of type y = x^ 2 + bx + c , where b and c are reals. Let' s call such a parabola an U - shaped one. Vasya drew several distinct points with integer coordinates on a plane and then drew an U - shaped parabola through each pair of the points that have different x coordinates. The picture became somewhat messy, but Vasya still wants to count how many of the parabolas drawn don' t have any drawn point inside their internal area. Help Vasya. The internal area of an U - shaped parabola is the part of the plane that lies strictly above the parabola when the y axis is directed upwards.",
    "input": "The first line contains a single integer n ( 1 \u2264 n \u2264 100 000 ) \u2014 the number of points. The next n lines describe the points, the i - th of them contains two integers x_ i and y_ i \u2014 the coordinates of the i - th point. It is guaranteed that all points are distinct and that the coordinates do not exceed 10^ 6 by absolute value.",
    "output": "In the only line print a single integer \u2014 the number of U - shaped parabolas that pass through at least two of the given points and do not contain any of the given points inside their internal area ( excluding the parabola itself) .",
    "note": "On the pictures below all U - shaped parabolas that pass through at least two given points are drawn for each of the examples. The U - shaped parabolas that do not have any given point inside their internal area are drawn in red. The first example. The second example.",
    "topics": [
      "geometry"
    ],
    "id": "1142C"
  },
  {
    "title": "NN and the Optical Illusion",
    "url": "https://codeforces.com/problemset/problem/1100/C",
    "history": "NN is an experienced internet user and that means he spends a lot of time on the social media. Once he found the following image on the Net, which asked him to compare the sizes of inner circles: It turned out that the circles are equal. NN was very surprised by this fact, so he decided to create a similar picture himself. He managed to calculate the number of outer circles n and the radius of the inner circle r . NN thinks that, using this information, you can exactly determine the radius of the outer circles R so that the inner circle touches all of the outer ones externally and each pair of neighboring outer circles also touches each other. While NN tried very hard to guess the required radius, he didn' t manage to do that. Help NN find the required radius for building the required picture.",
    "input": "The first and the only line of the input file contains two numbers n and r ( 3 \u2264 n \u2264 100 , 1 \u2264 r \u2264 100 ) \u2014 the number of the outer circles and the radius of the inner circle respectively.",
    "output": "Output a single number R \u2014 the radius of the outer circle required for building the required picture. Your answer will be accepted if its relative or absolute error does not exceed 10^ - 6 . Formally, if your answer is a and the jury' s answer is b . Your answer is accepted if and only when | a- b| / max( 1, | b| ) \u2264 10^ - 6 .",
    "note": "",
    "topics": [
      "binary search",
      "geometry",
      "math"
    ],
    "id": "1100C"
  },
  {
    "title": "Polygon for the Angle",
    "url": "https://codeforces.com/problemset/problem/1096/C",
    "history": "You are given an angle ang . The Jury asks You to find such regular n - gon ( regular polygon with n vertices) that it has three vertices a , b and c ( they can be non- consecutive) with \u2220abc = ang or report that there is no such n - gon. If there are several answers, print the minimal one. It is guarantied that if answer exists then it doesn' t exceed 998244353 .",
    "input": "The first line contains single integer T ( 1 \u2264 T \u2264 180 ) \u2014 the number of queries. Each of the next T lines contains one integer ang ( 1 \u2264ang < 180 ) \u2014 the angle measured in degrees.",
    "output": "For each query print single integer n ( 3 \u2264 n \u2264 998244353 ) \u2014 minimal possible number of vertices in the regular n - gon or - 1 if there is no such n .",
    "note": "The answer for the first query is on the picture above. The answer for the second query is reached on a regular 18 - gon. For example, \u2220v_ 2 v_ 1 v_ 6 = 50^ \u2218 . The example angle for the third query is \u2220v_ 11 v_ 10 v_ 12 = 2^ \u2218 . In the fourth query, minimal possible n is 180 ( not 90 ) .",
    "topics": [
      "brute force",
      "geometry"
    ],
    "id": "1096C"
  },
  {
    "title": "The Fair Nut and Rectangles",
    "url": "https://codeforces.com/problemset/problem/1083/E",
    "history": "The Fair Nut got stacked in planar world. He should solve this task to get out. You are given n rectangles with vertexes in ( 0, 0) , ( x_ i, 0) , ( x_ i, y_ i) , ( 0, y_ i) . For each rectangle, you are also given a number a_ i . Choose some of them that the area of union minus sum of a_ i of the chosen ones is maximum. It is guaranteed that there are no nested rectangles. Nut has no idea how to find the answer, so he asked for your help.",
    "input": "The first line contains one integer n ( 1 \u2264 n \u2264 10^ 6 ) \u2014 the number of rectangles. Each of the next n lines contains three integers x_ i , y_ i and a_ i ( 1 \u2264 x_ i, y_ i \u2264 10^ 9 , 0 \u2264 a_ i \u2264 x_ i \u00b7 y_ i ) . It is guaranteed that there are no nested rectangles.",
    "output": "In a single line print the answer to the problem \u2014 the maximum value which you can achieve.",
    "note": "In the first example, the right answer can be achieved by choosing the first and the second rectangles. In the second example, the right answer can also be achieved by choosing the first and the second rectangles.",
    "topics": [
      "data structures",
      "dp",
      "geometry"
    ],
    "id": "1083E"
  },
  {
    "title": "Rain Protection",
    "url": "https://codeforces.com/problemset/problem/1071/E",
    "history": "A lot of people dream of convertibles ( also often called cabriolets) . Some of convertibles, however, don' t have roof at all, and are vulnerable to rain. This is why Melon Ask, the famous inventor, decided to create a rain protection mechanism for convertibles. The workplace of the mechanism is a part of plane just above the driver. Its functional part consists of two rails with sliding endpoints of a piece of stretching rope. For the sake of simplicity we can consider this as a pair of parallel segments in a plane with the rope segment, whose endpoints we are free to choose as any points on these rails segments. The algorithmic part of the mechanism detects each particular raindrop and predicts when and where it reaches the plane. At this exact moment the rope segment must contain the raindrop point ( so the rope adsorbs the raindrop) . You are given the initial position of the rope endpoints and all information about raindrops. You are to choose the minimal possible speed v of the endpoints sliding ( both endpoints can slide in any direction along their segments independently of each other) in such a way that it is possible to catch all raindrops moving both endpoints with speed not greater than v , or find out that it' s impossible no matter how high the speed is.",
    "input": "The first line contains three integers n , w and h ( 1 \u2264 n \u2264 10^ 5 , 1\u2264 w, h \u2264 10^ 3 ) , meaning that there are n raindrops, and two rails are represented as segments connecting ( 0, 0) and ( w, 0) and connecting ( 0, h) and ( w, h) . The second line contains two integers e_ 1 and e_ 2 , meaning that the initial ( that is, at the moment t = 0 ) positions of the endpoints are ( e_ 1, 0) and ( e_ 2, h) ( 0\u2264 e_ 1, e_ 2\u2264 w ) . The i - th of the following n lines contains three integers t_ i , x_ i and y_ i ( 1\u2264 t_ i\u2264 10^ 5 , 0\u2264 x_ i \u2264 w , 0 < y_ i < h ) meaning that the i - th raindrop touches the plane at the point ( x_ i, y_ i) at the time moment t_ i . It is guaranteed that t_ i \u2264 t_ i+ 1 for all valid i .",
    "output": "If it is impossible to catch all raindrops, print - 1 . Otherwise, print the least possible maximum speed of the rope endpoints for which it is possible to catch them all. Your answer is considered correct if the absolute or relative error doesn' t exceed 10^ - 4 . Formally, let your answer be a , and the jury' s answer be b . Your answer is considered correct if | a - b| / max( 1, | b| ) \u2264 10^ - 4 .",
    "note": "That is how one can act in the first sample test: Here is the same for the second:",
    "topics": [
      "binary search",
      "geometry"
    ],
    "id": "1071E"
  },
  {
    "title": "Algoland and Berland",
    "url": "https://codeforces.com/problemset/problem/1070/M",
    "history": "Once upon a time Algoland and Berland were a single country, but those times are long gone. Now they are two different countries, but their cities are scattered on a common territory. All cities are represented as points on the Cartesian plane. Algoland consists of a cities numbered from 1 to a . The coordinates of the i - th Algoland city are a pair of integer numbers ( xa_ i, ya_ i) . Similarly, Berland consists of b cities numbered from 1 to b . The coordinates of the j - th Berland city are a pair of integer numbers ( xb_ j, yb_ j) . No three of the a+ b mentioned cities lie on a single straight line. As the first step to unite the countries, Berland decided to build several bidirectional freeways. Each freeway is going to be a line segment that starts in a Berland city and ends in an Algoland city. Freeways can' t intersect with each other at any point except freeway' s start or end. Moreover, the freeways have to connect all a+ b cities. Here, connectivity means that one can get from any of the specified a+ b cities to any other of the a+ b cities using freeways. Note that all freeways are bidirectional, which means that one can drive on each of them in both directions. Mayor of each of the b Berland cities allocated a budget to build the freeways that start from this city. Thus, you are given the numbers r_ 1, r_ 2, . . . , r_ b , where r_ j is the number of freeways that are going to start in the j - th Berland city. The total allocated budget is very tight and only covers building the minimal necessary set of freeways. In other words, r_ 1+ r_ 2+ . . . + r_ b= a+ b- 1 . Help Berland to build the freeways so that: each freeway is a line segment connecting a Berland city and an Algoland city, no freeways intersect with each other except for the freeway' s start or end, freeways connect all a+ b cities ( all freeways are bidirectional) , there are r_ j freeways that start from the j - th Berland city.",
    "input": "Input contains one or several test cases. The first input line contains a single integer number t ( 1 \u2264 t \u2264 3000 ) \u2014 number of test cases. Then, t test cases follow. Solve test cases separately, test cases are completely independent and do not affect each other. Each test case starts with a line containing space- separated integers a and b ( 1 \u2264 a, b \u2264 3000 ) \u2014 numbers of Algoland cities and number of Berland cities correspondingly. The next line contains b space- separated integers r_ 1, r_ 2, . . . , r_ b ( 1 \u2264 r_ b \u2264 a ) where r_ j is the number of freeways, that should start in the j - th Berland city. It is guaranteed that r_ 1+ r_ 2+ . . . + r_ b= a+ b- 1 . The next a lines contain coordinates of the Algoland cities \u2014 pairs of space- separated integers xa_ i, ya_ i ( - 10000 \u2264 xa_ i, ya_ i \u2264 10000 ) . The next b lines contain coordinates of the Berland cities \u2014 pairs of space- separated integers xb_ i, yb_ i ( - 10000 \u2264 xb_ i, yb_ i \u2264 10000 ) . All cities are located at distinct points, no three of the a+ b cities lie on a single straight line. Sum of values a across all test cases doesn' t exceed 3000 . Sum of values b across all test cases doesn' t exceed 3000 .",
    "output": "For each of the t test cases, first print \" YES\" if there is an answer or \" NO\" otherwise. If there is an answer, print the freeway building plan in the next a+ b- 1 lines. Each line of the plan should contain two space- separated integers j and i which means that a freeway from the j - th Berland city to the i - th Algoland city should be built. If there are multiple solutions, print any.",
    "note": "",
    "topics": [
      "constructive algorithms",
      "divide and conquer",
      "geometry"
    ],
    "id": "1070M"
  },
  {
    "title": "Make a triangle!",
    "url": "https://codeforces.com/problemset/problem/1064/A",
    "history": "Masha has three sticks of length a , b and c centimeters respectively. In one minute Masha can pick one arbitrary stick and increase its length by one centimeter. She is not allowed to break sticks. What is the minimum number of minutes she needs to spend increasing the stick' s length in order to be able to assemble a triangle of positive area. Sticks should be used as triangle' s sides ( one stick for one side) and their endpoints should be located at triangle' s vertices.",
    "input": "The only line contains tree integers a , b and c ( 1 \u2264 a, b, c \u2264 100 ) \u2014 the lengths of sticks Masha possesses.",
    "output": "Print a single integer \u2014 the minimum number of minutes that Masha needs to spend in order to be able to make the triangle of positive area from her sticks.",
    "note": "In the first example, Masha can make a triangle from the sticks without increasing the length of any of them. In the second example, Masha can' t make a triangle of positive area from the sticks she has at the beginning, but she can spend one minute to increase the length 2 centimeter stick by one and after that form a triangle with sides 3 , 3 and 5 centimeters. In the third example, Masha can take 33 minutes to increase one of the 10 centimeters sticks by 33 centimeters, and after that take 48 minutes to increase another 10 centimeters stick by 48 centimeters. This way she can form a triangle with lengths 43 , 58 and 100 centimeters in 81 minutes. One can show that it is impossible to get a valid triangle faster.",
    "topics": [
      "brute force",
      "geometry",
      "math"
    ],
    "id": "1064A"
  },
  {
    "title": "Dwarves, Hats and Extrasensory Abilities",
    "url": "https://codeforces.com/problemset/problem/1063/C",
    "history": "This is an interactive problem. In good old times dwarves tried to develop extrasensory abilities: Exactly n dwarves entered completely dark cave. Each dwarf received a hat \u2014 white or black. While in cave, none of the dwarves was able to see either his own hat or hats of other Dwarves. Dwarves went out of the cave to the meadow and sat at an arbitrary place one after the other. When a dwarf leaves the cave, he sees the colors of all hats of all dwarves that are seating on the meadow ( i. e. left the cave before him) . However, he is not able to see the color of his own hat and none of the dwarves can give him this information. The task for dwarves was to got diverged into two parts \u2014 one with dwarves with white hats and one with black hats. After many centuries, dwarves finally managed to select the right place on the meadow without error. Will you be able to repeat their success? You are asked to successively name n different integer points on the plane. After naming each new point you will be given its color \u2014 black or white. Your task is to ensure that the named points can be split by a line in such a way that all points of one color lie on the same side from the line and points of different colors lie on different sides. Moreover, no points can belong to the line. Also, you need to report any such line at the end of the process. In this problem, the interactor is adaptive \u2014 the colors of the points in the tests are not fixed beforehand and the jury program can select them arbitrarily, in particular, depending on your program output. InteractionThe first line of the standard input stream contains an integer n ( 1 \u2264 n \u2264 30) \u2014 the number of points your program should name. Then n times your program must print two integer coordinates x and y ( 0 \u2264 x \u2264 109, 0 \u2264 y \u2264 109) . All points you print must be distinct. In response to each coordinate pair your program will receive the string \" black\" , if the point is black, or \" white\" , if the point is white. When all n points are processed, you need to print four integers x1, y1, x2 and y2 ( 0 \u2264 x1, y1 \u2264 109, 0 \u2264 x2, y2 \u2264 109) \u2014 coordinates of points ( x1, y1) and ( x2, y2) , which form a line, which separates n points into black and white. Points ( x1, y1) and ( x2, y2) should not coincide. HacksTo hack solution use the following format. The first line must contain word \" hack\" , the second line should contain the number n and the last line should contain the sequence of 0 and 1 \u2014 colors of points, which will be reported to the solution. Unlike the jury tests, colors of points in hacks are always fixed in advance. Of course, the hacked solution wouldn' t be able to get the information about the colors in advance. For example, the hack corresponding to sample test will look like this: hack50 0 1 1 0",
    "input": "",
    "output": "",
    "note": "In the sample input and output values are aligned only for simplicity of interpreting them chronologically. In real interaction no \" extra\" line breaks should appear. The following picture illustrates the first test.",
    "topics": [
      "binary search",
      "constructive algorithms",
      "geometry",
      "interactive"
    ],
    "id": "1063C"
  },
  {
    "title": "Nature Reserve",
    "url": "https://codeforces.com/problemset/problem/1059/D",
    "history": "There is a forest that we model as a plane and live n rare animals. Animal number i has its lair in the point ( x_ i, y_ i) . In order to protect them, a decision to build a nature reserve has been made. The reserve must have a form of a circle containing all lairs. There is also a straight river flowing through the forest. All animals drink from this river, therefore it must have at least one common point with the reserve. On the other hand, ships constantly sail along the river, so the reserve must not have more than one common point with the river. For convenience, scientists have made a transformation of coordinates so that the river is defined by y = 0 . Check whether it is possible to build a reserve, and if possible, find the minimum possible radius of such a reserve.",
    "input": "The first line contains one integer n ( 1 \u2264 n \u2264 10^ 5 ) \u2014 the number of animals. Each of the next n lines contains two integers x_ i , y_ i ( - 10^ 7 \u2264 x_ i, y_ i\u2264 10^ 7 ) \u2014 the coordinates of the i - th animal' s lair. It is guaranteed that y_ i= \u0338 0 . No two lairs coincide.",
    "output": "If the reserve cannot be built, print - 1 . Otherwise print the minimum radius. Your answer will be accepted if absolute or relative error does not exceed 10^ - 6 . Formally, let your answer be a , and the jury' s answer be b . Your answer is considered correct if | a - b| / max( 1, | b| ) \u2264 10^ - 6 .",
    "note": "In the first sample it is optimal to build the reserve with the radius equal to 0. 5 and the center in ( 0, 0. 5) . In the second sample it is impossible to build a reserve. In the third sample it is optimal to build the reserve with the radius equal to 5/ 8 and the center in ( 1/ 2, 5/ 8) .",
    "topics": [
      "binary search",
      "geometry",
      "ternary search"
    ],
    "id": "1059D"
  },
  {
    "title": "Cover Points",
    "url": "https://codeforces.com/problemset/problem/1047/B",
    "history": "There are n points on the plane, ( x_ 1, y_ 1) , ( x_ 2, y_ 2) , . . . , ( x_ n, y_ n) . You need to place an isosceles triangle with two sides on the coordinate axis to cover all points ( a point is covered if it lies inside the triangle or on the side of the triangle) . Calculate the minimum length of the shorter side of the triangle.",
    "input": "First line contains one integer n ( 1 \u2264 n \u2264 10^ 5 ) . Each of the next n lines contains two integers x_ i and y_ i ( 1 \u2264 x_ i, y_ i \u2264 10^ 9 ) .",
    "output": "Print the minimum length of the shorter side of the triangle. It can be proved that it' s always an integer.",
    "note": "Illustration for the first example: Illustration for the second example:",
    "topics": [
      "geometry",
      "math"
    ],
    "id": "1047B"
  },
  {
    "title": "Say Hello",
    "url": "https://codeforces.com/problemset/problem/1046/I",
    "history": "Two friends are travelling through Bubble galaxy. They say \" Hello! \" via signals to each other if their distance is smaller or equal than d_ 1 and it' s the first time they speak to each other or at some point in time after their last talk their distance was greater than d_ 2 . We need to calculate how many times friends said \" Hello! \" to each other. For N moments, you' ll have an array of points for each friend representing their positions at that moment. A person can stay in the same position between two moments in time, but if a person made a move we assume this movement as movement with constant speed in constant direction.",
    "input": "The first line contains one integer number N ( 2 \u2264 N \u2264 100 000 ) representing number of moments in which we captured positions for two friends. The second line contains two integer numbers d_ 1 and d_ 2 ( 0 < d_ 1 < d_ 2 < 1000) . The next N lines contains four integer numbers A_ x, A_ y, B_ x, B_ y ( 0 \u2264 A_ x, A_ y, B_ x, B_ y \u2264 1000 ) representing coordinates of friends A and B in each captured moment.",
    "output": "Output contains one integer number that represents how many times friends will say \" Hello! \" to each other.",
    "note": "Explanation: Friends should send signals 2 times to each other, first time around point A2 and B2 and second time during A' s travel from point A3 to A4 while B stays in point B3= B4 .",
    "topics": [
      "geometry"
    ],
    "id": "1046I"
  },
  {
    "title": "Shady Lady",
    "url": "https://codeforces.com/problemset/problem/1045/F",
    "history": "Ani and Borna are playing a short game on a two- variable polynomial. It' s a special kind of a polynomial: the monomials are fixed, but all of its coefficients are fill- in- the- blanks dashes, e. g. _ xy + _ x^ 4 y^ 7 + _ x^ 8 y^ 3 + . . . Borna will fill in the blanks with positive integers. He wants the polynomial to be bounded from below, i. e. his goal is to make sure there exists a real number M such that the value of the polynomial at any point is greater than M . Ani is mischievous, and wants the polynomial to be unbounded. Along with stealing Borna' s heart, she can also steal parts of polynomials. Ani is only a petty kind of thief, though: she can only steal at most one monomial from the polynomial before Borna fills in the blanks. If Ani and Borna play their only moves optimally, who wins?",
    "input": "The first line contains a positive integer N ( 2 \u2264 N \u2264 200 000) , denoting the number of the terms in the starting special polynomial. Each of the following N lines contains a description of a monomial: the k - th line contains two * * space* * - separated integers a_ k and b_ k ( 0 \u2264 a_ k, b_ k \u2264 10^ 9 ) which mean the starting polynomial has the term _ x^ a_ k y^ b_ k . It is guaranteed that for k = \u0338 l , either a_ k = \u0338 a_ l or b_ k = \u0338 b_ l .",
    "output": "If Borna can always choose the coefficients such that the resulting polynomial is bounded from below, regardless of what monomial Ani steals, output \" Borna\" . Else, output \" Ani\" . You shouldn' t output the quotation marks.",
    "note": "In the first sample, the initial polynomial is _ xy+ _ x^ 2 + _ y^ 2 . If Ani steals the _ y^ 2 term, Borna is left with _ xy+ _ x^ 2 . Whatever positive integers are written on the blanks, y \u2192 - \u221e and x : = 1 makes the whole expression go to negative infinity. In the second sample, the initial polynomial is _ 1 + _ x + _ x^ 2 + _ x^ 8 . One can check that no matter what term Ani steals, Borna can always win.",
    "topics": [
      "geometry",
      "math"
    ],
    "id": "1045F"
  },
  {
    "title": "Ancient civilizations",
    "url": "https://codeforces.com/problemset/problem/1045/E",
    "history": "On the surface of a newly discovered planet, which we model by a plane, explorers found remains of two different civilizations in various locations. They would like to learn more about those civilizations and to explore the area they need to build roads between some of locations. But as always, there are some restrictions: Every two locations of the same civilization are connected by a unique path of roads No two locations from different civilizations may have road between them ( explorers don' t want to accidentally mix civilizations they are currently exploring) Roads must be straight line segments Since intersections are expensive to build, they don' t want any two roads to intersect ( that is, only common point for any two roads may be at some of locations) Obviously all locations are different points in the plane, but explorers found out one more interesting information that may help you \u2013 no three locations lie on the same line! Help explorers and find a solution for their problem, or report it is impossible.",
    "input": "In the first line, integer n ( 1 \u2264 n \u2264 10^ 3) - the number of locations discovered. In next n lines, three integers x, y, c ( 0 \u2264 x, y \u2264 10^ 4, c \u2208{ 0, 1} ) - coordinates of the location and number of civilization it belongs to.",
    "output": "In first line print number of roads that should be built. In the following lines print all pairs of locations ( their 0 - based indices) that should be connected with a road. If it is not possible to build roads such that all restrictions are met, print \" Impossible\" . You should not print the quotation marks.",
    "note": "",
    "topics": [
      "constructive algorithms",
      "geometry"
    ],
    "id": "1045E"
  },
  {
    "title": "Optimal Polygon Perimeter",
    "url": "https://codeforces.com/problemset/problem/1044/C",
    "history": "You are given n points on the plane. The polygon formed from all the n points is strictly convex, that is, the polygon is convex, and there are no three collinear points ( i. e. lying in the same straight line) . The points are numbered from 1 to n , in clockwise order. We define the distance between two points p_ 1 = ( x_ 1, y_ 1) and p_ 2 = ( x_ 2, y_ 2) as their Manhattan distance: d( p_ 1, p_ 2) = | x_ 1 - x_ 2| + | y_ 1 - y_ 2| . Furthermore, we define the perimeter of a polygon, as the sum of Manhattan distances between all adjacent pairs of points on it; if the points on the polygon are ordered as p_ 1, p_ 2, . . . , p_ k ( k \u2265 3) , then the perimeter of the polygon is d( p_ 1, p_ 2) + d( p_ 2, p_ 3) + . . . + d( p_ k, p_ 1) . For some parameter k , let' s consider all the polygons that can be formed from the given set of points, having any k vertices, such that the polygon is not self- intersecting. For each such polygon, let' s consider its perimeter. Over all such perimeters, we define f( k) to be the maximal perimeter. Please note, when checking whether a polygon is self- intersecting, that the edges of a polygon are still drawn as straight lines. For instance, in the following pictures: In the middle polygon, the order of points ( p_ 1, p_ 3, p_ 2, p_ 4 ) is not valid, since it is a self- intersecting polygon. The right polygon ( whose edges resemble the Manhattan distance) has the same order and is not self- intersecting, but we consider edges as straight lines. The correct way to draw this polygon is ( p_ 1, p_ 2, p_ 3, p_ 4 ) , which is the left polygon. Your task is to compute f( 3) , f( 4) , . . . , f( n) . In other words, find the maximum possible perimeter for each possible number of points ( i. e. 3 to n ) .",
    "input": "The first line contains a single integer n ( 3 \u2264 n \u2264 3\u00b7 10^ 5 ) \u2014 the number of points. Each of the next n lines contains two integers x_ i and y_ i ( - 10^ 8 \u2264 x_ i, y_ i \u2264 10^ 8 ) \u2014 the coordinates of point p_ i . The set of points is guaranteed to be convex, all points are distinct, the points are ordered in clockwise order, and there will be no three collinear points.",
    "output": "For each i ( 3\u2264 i\u2264 n ) , output f( i) .",
    "note": "In the first example, for f( 3) , we consider four possible polygons: ( p_ 1, p_ 2, p_ 3 ) , with perimeter 12 . ( p_ 1, p_ 2, p_ 4 ) , with perimeter 8 . ( p_ 1, p_ 3, p_ 4 ) , with perimeter 12 . ( p_ 2, p_ 3, p_ 4 ) , with perimeter 12 . For f( 4) , there is only one option, taking all the given points. Its perimeter 14 . In the second example, there is only one possible polygon. Its perimeter is 8 .",
    "topics": [
      "dp",
      "geometry"
    ],
    "id": "1044C"
  },
  {
    "title": "Covered Points",
    "url": "https://codeforces.com/problemset/problem/1036/E",
    "history": "You are given n segments on a Cartesian plane. Each segment' s endpoints have integer coordinates. Segments can intersect with each other. No two segments lie on the same line. Count the number of distinct points with integer coordinates, which are covered by at least one segment.",
    "input": "The first line contains a single integer n ( 1 \u2264 n \u2264 1000 ) \u2014 the number of segments. Each of the next n lines contains four integers Ax_ i, Ay_ i, Bx_ i, By_ i ( - 10^ 6 \u2264 Ax_ i, Ay_ i, Bx_ i, By_ i \u2264 10^ 6 ) \u2014 the coordinates of the endpoints A , B ( A B ) of the i - th segment. It is guaranteed that no two segments lie on the same line.",
    "output": "Print a single integer \u2014 the number of distinct points with integer coordinates, which are covered by at least one segment.",
    "note": "The image for the first example: Several key points are marked blue, the answer contains some non- marked points as well. The image for the second example:",
    "topics": [
      "fft",
      "geometry",
      "number theory"
    ],
    "id": "1036E"
  },
  {
    "title": "Barcelonian Distance",
    "url": "https://codeforces.com/problemset/problem/1032/D",
    "history": "In this problem we consider a very simplified model of Barcelona city. Barcelona can be represented as a plane with streets of kind x = c and y = c for every integer c ( that is, the rectangular grid) . However, there is a detail which makes Barcelona different from Manhattan. There is an avenue called Avinguda Diagonal which can be represented as a the set of points ( x, y) for which ax + by + c = 0 . One can walk along streets, including the avenue. You are given two integer points A and B somewhere in Barcelona. Find the minimal possible distance one needs to travel to get to B from A .",
    "input": "The first line contains three integers a , b and c ( - 10^ 9\u2264 a, b, c\u2264 10^ 9 , at least one of a and b is not zero) representing the Diagonal Avenue. The next line contains four integers x_ 1 , y_ 1 , x_ 2 and y_ 2 ( - 10^ 9\u2264 x_ 1, y_ 1, x_ 2, y_ 2\u2264 10^ 9 ) denoting the points A = ( x_ 1, y_ 1) and B = ( x_ 2, y_ 2) .",
    "output": "Find the minimum possible travel distance between A and B . Your answer is considered correct if its absolute or relative error does not exceed 10^ - 6 . Formally, let your answer be a , and the jury' s answer be b . Your answer is accepted if and only if | a - b| / max( 1, | b| ) \u2264 10^ - 6 .",
    "note": "The first example is shown on the left picture while the second example us shown on the right picture below. The avenue is shown with blue, the origin is shown with the black dot.",
    "topics": [
      "geometry",
      "implementation"
    ],
    "id": "1032D"
  },
  {
    "title": "Vasya and Triangle",
    "url": "https://codeforces.com/problemset/problem/1030/D",
    "history": "Vasya has got three integers n , m and k . He' d like to find three integer points ( x_ 1, y_ 1) , ( x_ 2, y_ 2) , ( x_ 3, y_ 3) , such that 0 \u2264 x_ 1, x_ 2, x_ 3 \u2264 n , 0 \u2264 y_ 1, y_ 2, y_ 3 \u2264 m and the area of the triangle formed by these points is equal to nm/ k . Help Vasya! Find such points ( if it' s possible) . If there are multiple solutions, print any of them.",
    "input": "The single line contains three integers n , m , k ( 1\u2264 n, m \u2264 10^ 9 , 2 \u2264 k \u2264 10^ 9 ) .",
    "output": "If there are no such points, print \" NO\" . Otherwise print \" YES\" in the first line. The next three lines should contain integers x_ i, y_ i \u2014 coordinates of the points, one point per line. If there are multiple solutions, print any of them. You can print each letter in any case ( upper or lower) .",
    "note": "In the first example area of the triangle should be equal to nm/ k = 4 . The triangle mentioned in the output is pictured below: In the second example there is no triangle with area nm/ k = 16/ 7 .",
    "topics": [
      "geometry",
      "number theory"
    ],
    "id": "1030D"
  },
  {
    "title": "Vasya and Cornfield",
    "url": "https://codeforces.com/problemset/problem/1030/B",
    "history": "Vasya owns a cornfield which can be defined with two integers n and d . The cornfield can be represented as rectangle with vertices having Cartesian coordinates ( 0, d) , ( d, 0) , ( n, n - d) and ( n - d, n) . An example of a cornfield with n = 7 and d = 2 . Vasya also knows that there are m grasshoppers near the field ( maybe even inside it) . The i - th grasshopper is at the point ( x_ i, y_ i) . Vasya does not like when grasshoppers eat his corn, so for each grasshopper he wants to know whether its position is inside the cornfield ( including the border) or outside. Help Vasya! For each grasshopper determine if it is inside the field ( including the border) .",
    "input": "The first line contains two integers n and d ( 1 \u2264 d < n \u2264 100 ) . The second line contains a single integer m ( 1 \u2264 m \u2264 100 ) \u2014 the number of grasshoppers. The i - th of the next m lines contains two integers x_ i and y_ i ( 0 \u2264 x_ i, y_ i \u2264 n ) \u2014 position of the i - th grasshopper.",
    "output": "Print m lines. The i - th line should contain \" YES\" if the position of the i - th grasshopper lies inside or on the border of the cornfield. Otherwise the i - th line should contain \" NO\" . You can print each letter in any case ( upper or lower) .",
    "note": "The cornfield from the first example is pictured above. Grasshoppers with indices 1 ( coordinates ( 2, 4) ) and 4 ( coordinates ( 4, 5) ) are inside the cornfield. The cornfield from the second example is pictured below. Grasshoppers with indices 1 ( coordinates ( 4, 4) ) , 3 ( coordinates ( 8, 1) ) and 4 ( coordinates ( 6, 1) ) are inside the cornfield.",
    "topics": [
      "geometry"
    ],
    "id": "1030B"
  },
  {
    "title": "Rectangles",
    "url": "https://codeforces.com/problemset/problem/1028/C",
    "history": "You are given n rectangles on a plane with coordinates of their bottom left and upper right points. Some ( n- 1) of the given n rectangles have some common point. A point belongs to a rectangle if this point is strictly inside the rectangle or belongs to its boundary. Find any point with integer coordinates that belongs to at least ( n- 1) given rectangles.",
    "input": "The first line contains a single integer n ( 2 \u2264 n \u2264 132 674 ) \u2014 the number of given rectangles. Each the next n lines contains four integers x_ 1 , y_ 1 , x_ 2 and y_ 2 ( - 10^ 9 \u2264 x_ 1 < x_ 2 \u2264 10^ 9 , - 10^ 9 \u2264 y_ 1 < y_ 2 \u2264 10^ 9 ) \u2014 the coordinates of the bottom left and upper right corners of a rectangle.",
    "output": "Print two integers x and y \u2014 the coordinates of any point that belongs to at least ( n- 1) given rectangles.",
    "note": "The picture below shows the rectangles in the first and second samples. The possible answers are highlighted. The picture below shows the rectangles in the third and fourth samples.",
    "topics": [
      "geometry",
      "implementation",
      "sortings"
    ],
    "id": "1028C"
  },
  {
    "title": "Disjoint Triangles",
    "url": "https://codeforces.com/problemset/problem/1025/F",
    "history": "A point belongs to a triangle if it lies inside the triangle or on one of its sides. Two triangles are disjoint if there is no point on the plane that belongs to both triangles. You are given n points on the plane. No two points coincide and no three points are collinear. Find the number of different ways to choose two disjoint triangles with vertices in the given points. Two ways which differ only in order of triangles or in order of vertices inside triangles are considered equal.",
    "input": "The first line of the input contains an integer n ( 6 \u2264 n \u2264 2000 ) \u2013 the number of points. Each of the next n lines contains two integers x_ i and y_ i ( | x_ i| , | y_ i| \u2264 10^ 9 ) \u2013 the coordinates of a point. No two points coincide and no three points are collinear.",
    "output": "Print one integer \u2013 the number of ways to choose two disjoint triangles.",
    "note": "In the first example there are six pairs of disjoint triangles, they are shown on the picture below. All other pairs of triangles are not disjoint, for example the following pair:",
    "topics": [
      "geometry"
    ],
    "id": "1025F"
  },
  {
    "title": "Large Triangle",
    "url": "https://codeforces.com/problemset/problem/1019/D",
    "history": "There is a strange peculiarity: if you connect the cities of Rostov, Taganrog and Shakhty, peculiarly, you get a triangle\u00abUnbelievable But True\u00bbStudents from many different parts of Russia and abroad come to Summer Informatics School. You marked the hometowns of the SIS participants on a map. Now you decided to prepare an interesting infographic based on this map. The first thing you chose to do is to find three cities on this map, such that they form a triangle with area S .",
    "input": "The first line of input contains two integers n and S ( 3 \u2264 n \u2264 2000 , 1 \u2264 S \u2264 2 \u00b7 10^ 18 ) \u2014 the number of cities on the map and the area of the triangle to be found. The next n lines contain descriptions of the cities, one per line. Each city is described by its integer coordinates x_ i , y_ i ( - 10^ 9 \u2264 x_ i, y_ i \u2264 10^ 9 ) . It is guaranteed that all cities are located at distinct points. It is also guaranteed that no three cities lie on the same line.",
    "output": "If the solution doesn' t exist \u2014 print \u00abNo\u00bb. Otherwise, print \u00abYes\u00bb, followed by three pairs of coordinates ( x, y) \u2014 the locations of the three cities, which form the triangle of area S .",
    "note": "",
    "topics": [
      "binary search",
      "geometry",
      "sortings"
    ],
    "id": "1019D"
  },
  {
    "title": "The Supersonic Rocket",
    "url": "https://codeforces.com/problemset/problem/1017/E",
    "history": "After the war, the supersonic rocket became the most common public transportation. Each supersonic rocket consists of two \" engines\" . Each engine is a set of \" power sources\" . The first engine has n power sources, and the second one has m power sources. A power source can be described as a point ( x_ i, y_ i) on a 2- D plane. All points in each engine are different. You can manipulate each engine separately. There are two operations that you can do with each engine. You can do each operation as many times as you want. For every power source as a whole in that engine: ( x_ i, y_ i) becomes ( x_ i+ a, y_ i+ b) , a and b can be any real numbers. In other words, all power sources will be shifted. For every power source as a whole in that engine: ( x_ i, y_ i) becomes ( x_ i cos\u03b8 - y_ i sin\u03b8, x_ i sin\u03b8 + y_ i cos\u03b8) , \u03b8 can be any real number. In other words, all power sources will be rotated. The engines work as follows: after the two engines are powered, their power sources are being combined ( here power sources of different engines may coincide) . If two power sources A( x_ a, y_ a) and B( x_ b, y_ b) exist, then for all real number k that 0 k 1 , a new power source will be created C_ k( kx_ a+ ( 1- k) x_ b, ky_ a+ ( 1- k) y_ b) . Then, this procedure will be repeated again with all new and old power sources. After that, the \" power field\" from all power sources will be generated ( can be considered as an infinite set of all power sources occurred) . A supersonic rocket is \" safe\" if and only if after you manipulate the engines, destroying any power source and then power the engine, the power field generated won' t be changed ( comparing to the situation where no power source erased) . Two power fields are considered the same if and only if any power source in one field belongs to the other one as well. Given a supersonic rocket, check whether it is safe or not.",
    "input": "The first line contains two integers n , m ( 3 \u2264 n, m \u2264 10^ 5 ) \u2014 the number of power sources in each engine. Each of the next n lines contains two integers x_ i and y_ i ( 0\u2264 x_ i, y_ i\u2264 10^ 8 ) \u2014 the coordinates of the i - th power source in the first engine. Each of the next m lines contains two integers x_ i and y_ i ( 0\u2264 x_ i, y_ i\u2264 10^ 8 ) \u2014 the coordinates of the i - th power source in the second engine. It is guaranteed that there are no two or more power sources that are located in the same point in each engine.",
    "output": "Print \" YES\" if the supersonic rocket is safe, otherwise \" NO\" . You can print each letter in an arbitrary case ( upper or lower) .",
    "note": "The first sample: Those near pairs of blue and orange points actually coincide. First, manipulate the first engine: use the second operation with \u03b8 = \u03c0 ( to rotate all power sources 180 degrees) . The power sources in the first engine become ( 0, 0) , ( 0, - 2) , and ( - 2, 0) . Second, manipulate the second engine: use the first operation with a = b = - 2 . The power sources in the second engine become ( - 2, 0) , ( 0, 0) , ( 0, - 2) , and ( - 1, - 1) . You can examine that destroying any point, the power field formed by the two engines are always the solid triangle ( 0, 0) , ( - 2, 0) , ( 0, - 2) . In the second sample, no matter how you manipulate the engines, there always exists a power source in the second engine that power field will shrink if you destroy it.",
    "topics": [
      "geometry",
      "hashing",
      "strings"
    ],
    "id": "1017E"
  },
  {
    "title": "Rest In The Shades",
    "url": "https://codeforces.com/problemset/problem/1016/E",
    "history": "There is a light source on the plane. This source is so small that it can be represented as point. The light source is moving from point ( a, s_ y) to the ( b, s_ y) ( s_ y < 0) with speed equal to 1 unit per second. The trajectory of this light source is a straight segment connecting these two points. There is also a fence on OX axis represented as n segments ( l_ i, r_ i) ( so the actual coordinates of endpoints of each segment are ( l_ i, 0) and ( r_ i, 0) ) . The point ( x, y) is in the shade if segment connecting ( x, y) and the current position of the light source intersects or touches with any segment of the fence. You are given q points. For each point calculate total time of this point being in the shade, while the light source is moving from ( a, s_ y) to the ( b, s_ y) .",
    "input": "First line contains three space separated integers s_ y , a and b ( - 10^ 9 \u2264 s_ y < 0 , 1 \u2264 a < b \u2264 10^ 9 ) \u2014 corresponding coordinates of the light source. Second line contains single integer n ( 1 \u2264 n \u2264 2 \u00b7 10^ 5 ) \u2014 number of segments in the fence. Next n lines contain two integers per line: l_ i and r_ i ( 1 \u2264 l_ i < r_ i \u2264 10^ 9 , r_ i - 1 < l_ i ) \u2014 segments in the fence in increasing order. Segments don' t intersect or touch each other. Next line contains single integer q ( 1 \u2264 q \u2264 2 \u00b7 10^ 5 ) \u2014 number of points to check. Next q lines contain two integers per line: x_ i and y_ i ( 1 \u2264 x_ i, y_ i \u2264 10^ 9 ) \u2014 points to process.",
    "output": "Print q lines. The i - th line should contain one real number \u2014 total time of the i - th point being in the shade, while the light source is moving from ( a, s_ y) to the ( b, s_ y) . The answer is considered as correct if its absolute of relative error doesn' t exceed 10^ - 6 .",
    "note": "The 1- st point is always in the shade; the 2- nd point is in the shade while light source is moving from ( 3, - 3) to ( 6, - 3) ; the 3- rd point is in the shade while light source is at point ( 6, - 3) . the 4- th point is in the shade while light source is moving from ( 1, - 3) to ( 2. 5, - 3) and at point ( 6, - 3) ; the 5- th point is in the shade while light source is moving from ( 1, - 3) to ( 2. 5, - 3) and from ( 5. 5, - 3) to ( 6, - 3) ;",
    "topics": [
      "binary search",
      "geometry"
    ],
    "id": "1016E"
  },
  {
    "title": "Leaving the Bar",
    "url": "https://codeforces.com/problemset/problem/995/C",
    "history": "For a vector v\u20d7 = ( x, y) , define | v| = \u221a( x^ 2 + y^ 2) . Allen had a bit too much to drink at the bar, which is at the origin. There are n vectors v\u20d7_ \u20d71\u20d7, v\u20d7_ \u20d72\u20d7, \u22ef, v\u20d7_ \u20d7n\u20d7 . Allen will make n moves. As Allen' s sense of direction is impaired, during the i - th move he will either move in the direction v\u20d7_ \u20d7i\u20d7 or - v\u20d7_ \u20d7i\u20d7 . In other words, if his position is currently p = ( x, y) , he will either move to p + v\u20d7_ \u20d7i\u20d7 or p - v\u20d7_ \u20d7i\u20d7 . Allen doesn' t want to wander too far from home ( which happens to also be the bar) . You need to help him figure out a sequence of moves ( a sequence of signs for the vectors) such that his final position p satisfies | p| \u2264 1. 5 \u00b7 10^ 6 so that he can stay safe.",
    "input": "The first line contains a single integer n ( 1 \u2264 n \u2264 10^ 5 ) \u2014 the number of moves. Each of the following lines contains two space- separated integers x_ i and y_ i , meaning that v\u20d7_ \u20d7i\u20d7 = ( x_ i, y_ i) . We have that | v_ i| \u2264 10^ 6 for all i .",
    "output": "Output a single line containing n integers c_ 1, c_ 2, \u22ef, c_ n , each of which is either 1 or - 1 . Your solution is correct if the value of p = \u2211_ i = 1^ n c_ i v\u20d7_ \u20d7i\u20d7 , satisfies | p| \u2264 1. 5 \u00b7 10^ 6 . It can be shown that a solution always exists under the given constraints.",
    "note": "",
    "topics": [
      "brute force",
      "data structures",
      "geometry",
      "greedy",
      "math",
      "sortings"
    ],
    "id": "995C"
  },
  {
    "title": "Careful Maneuvering",
    "url": "https://codeforces.com/problemset/problem/993/C",
    "history": "There are two small spaceship, surrounded by two groups of enemy larger spaceships. The space is a two- dimensional plane, and one group of the enemy spaceships is positioned in such a way that they all have integer y - coordinates, and their x - coordinate is equal to - 100 , while the second group is positioned in such a way that they all have integer y - coordinates, and their x - coordinate is equal to 100 . Each spaceship in both groups will simultaneously shoot two laser shots ( infinite ray that destroys any spaceship it touches) , one towards each of the small spaceships, all at the same time. The small spaceships will be able to avoid all the laser shots, and now want to position themselves at some locations with x= 0 ( with not necessarily integer y - coordinates) , such that the rays shot at them would destroy as many of the enemy spaceships as possible. Find the largest numbers of spaceships that can be destroyed this way, assuming that the enemy spaceships can' t avoid laser shots.",
    "input": "The first line contains two integers n and m ( 1 \u2264 n, m \u2264 60 ) , the number of enemy spaceships with x = - 100 and the number of enemy spaceships with x = 100 , respectively. The second line contains n integers y_ 1, 1, y_ 1, 2, . . . , y_ 1, n ( | y_ 1, i| \u2264 10 000 ) \u2014 the y - coordinates of the spaceships in the first group. The third line contains m integers y_ 2, 1, y_ 2, 2, . . . , y_ 2, m ( | y_ 2, i| \u2264 10 000 ) \u2014 the y - coordinates of the spaceships in the second group. The y coordinates are not guaranteed to be unique, even within a group.",
    "output": "Print a single integer \u2013 the largest number of enemy spaceships that can be destroyed.",
    "note": "In the first example the first spaceship can be positioned at ( 0, 2) , and the second \u2013 at ( 0, 7) . This way all the enemy spaceships in the first group and 6 out of 9 spaceships in the second group will be destroyed. In the second example the first spaceship can be positioned at ( 0, 3) , and the second can be positioned anywhere, it will be sufficient to destroy all the enemy spaceships.",
    "topics": [
      "bitmasks",
      "brute force",
      "geometry"
    ],
    "id": "993C"
  },
  {
    "title": "Two Squares",
    "url": "https://codeforces.com/problemset/problem/993/A",
    "history": "You are given two squares, one with sides parallel to the coordinate axes, and another one with sides at 45 degrees to the coordinate axes. Find whether the two squares intersect. The interior of the square is considered to be part of the square, i. e. if one square is completely inside another, they intersect. If the two squares only share one common point, they are also considered to intersect.",
    "input": "The input data consists of two lines, one for each square, both containing 4 pairs of integers. Each pair represents coordinates of one vertex of the square. Coordinates within each line are either in clockwise or counterclockwise order. The first line contains the coordinates of the square with sides parallel to the coordinate axes, the second line contains the coordinates of the square at 45 degrees. All the values are integer and between - 100 and 100 .",
    "output": "Print \" Yes\" if squares intersect, otherwise print \" No\" . You can print each letter in any case ( upper or lower) .",
    "note": "In the first example the second square lies entirely within the first square, so they do intersect. In the second sample squares do not have any points in common. Here are images corresponding to the samples:",
    "topics": [
      "geometry",
      "implementation"
    ],
    "id": "993A"
  },
  {
    "title": "A Trance of Nightfall",
    "url": "https://codeforces.com/problemset/problem/989/E",
    "history": "The cool breeze blows gently, the flowing water ripples steadily. \" Flowing and passing like this, the water isn' t gone ultimately; Waxing and waning like that, the moon doesn' t shrink or grow eventually. \" \" Everything is transient in a way and perennial in another. \" Kanno doesn' t seem to make much sense out of Mino' s isolated words, but maybe it' s time that they enjoy the gentle breeze and the night sky \u2014 the inexhaustible gifts from nature. Gazing into the sky of stars, Kanno indulges in a night' s tranquil dreams. There is a set S of n points on a coordinate plane. Kanno starts from a point P that can be chosen on the plane. P is not added to S if it doesn' t belong to S . Then the following sequence of operations ( altogether called a move) is repeated several times, in the given order: Choose a line l such that it passes through at least two elements in S and passes through Kanno' s current position. If there are multiple such lines, one is chosen equiprobably. Move to one of the points that belong to S and lie on l . The destination is chosen equiprobably among all possible ones, including Kanno' s current position ( if it does belong to S ) . There are q queries each consisting of two integers ( t_ i, m_ i) . For each query, you' re to help Kanno maximize the probability of the stopping position being the t_ i - th element in S after m_ i moves with a proper selection of P , and output this maximum probability. Note that according to rule 1, P should belong to at least one line that passes through at least two points from S .",
    "input": "The first line contains a positive integer n ( 2 \u2264 n \u2264 200 ) \u2014 the number of points in S . The i - th of the following n lines contains two space- separated integers x_ i and y_ i ( - 10^ 4 \u2264 x_ i, y_ i \u2264 10^ 4 ) \u2014 the coordinates of the i - th point in S . The input guarantees that for all 1 \u2264 i j \u2264 n , ( x_ i, y_ i) = \u0338 ( x_ j, y_ j) holds. The next line contains a positive integer q ( 1 \u2264 q \u2264 200 ) \u2014 the number of queries. Each of the following q lines contains two space- separated integers t and m ( 1 \u2264 t_ i \u2264 n , 1 \u2264 m_ i \u2264 10^ 4 ) \u2014 the index of the target point and the number of moves, respectively.",
    "output": "Output q lines each containing a decimal number \u2014 the i - th among them denotes the maximum probability of staying on the t_ i - th point after m_ i steps, with a proper choice of starting position P . Your answer will be considered correct if each number in your output differs from the corresponding one in jury' s answer by at most 10^ - 6 . Formally, let your answer be a , and the jury' s answer be b . Your answer is considered correct if | a - b| \u2264 10^ - 6 .",
    "note": "The points in S and possible candidates for line l are depicted in the following figure. For the first query, when P = ( - 1, - 3) , l is uniquely determined to be 3x = y , and thus Kanno will move to ( 0, 0) with a probability of 1/ 2 . For the third query, when P = ( 2, 2) , l is chosen equiprobably between x + y = 4 and x = y . Kanno will then move to the other four points with a probability of 1/ 2\u00b71/ 3 = 1/ 6 each, or stay at ( 2, 2) with a probability of 1/ 3 .",
    "topics": [
      "dp",
      "geometry",
      "matrices",
      "probabilities"
    ],
    "id": "989E"
  },
  {
    "title": "A Shade of Moonlight",
    "url": "https://codeforces.com/problemset/problem/989/D",
    "history": "Gathering darkness shrouds the woods and the world. The moon sheds its light on the boat and the river. \" To curtain off the moonlight should be hardly possible; the shades present its mellow beauty and restful nature. \" Intonates Mino. \" See? The clouds are coming. \" Kanno gazes into the distance. \" That can' t be better, \" Mino turns to Kanno. The sky can be seen as a one- dimensional axis. The moon is at the origin whose coordinate is 0 . There are n clouds floating in the sky. Each cloud has the same length l . The i - th initially covers the range of ( x_ i, x_ i + l) ( endpoints excluded) . Initially, it moves at a velocity of v_ i , which equals either 1 or - 1 . Furthermore, no pair of clouds intersect initially, that is, for all 1 \u2264 i j \u2264 n , | x_ i - x_ j | \u2265 l . With a wind velocity of w , the velocity of the i - th cloud becomes v_ i + w . That is, its coordinate increases by v_ i + w during each unit of time. Note that the wind can be strong and clouds can change their direction. You are to help Mino count the number of pairs ( i, j) ( i < j ) , such that with a proper choice of wind velocity w not exceeding w_ max in absolute value ( possibly negative and/ or fractional) , the i - th and j - th clouds both cover the moon at the same future moment. This w doesn' t need to be the same across different pairs.",
    "input": "The first line contains three space- separated integers n , l , and w_ max ( 1 \u2264 n \u2264 10^ 5 , 1 \u2264 l, w_ max\u2264 10^ 8 ) \u2014 the number of clouds, the length of each cloud and the maximum wind speed, respectively. The i - th of the following n lines contains two space- separated integers x_ i and v_ i ( - 10^ 8 \u2264 x_ i \u2264 10^ 8 , v_ i \u2208{ - 1, 1} ) \u2014 the initial position and the velocity of the i - th cloud, respectively. The input guarantees that for all 1 \u2264 i j \u2264 n , | x_ i - x_ j | \u2265 l .",
    "output": "Output one integer \u2014 the number of unordered pairs of clouds such that it' s possible that clouds from each pair cover the moon at the same future moment with a proper choice of wind velocity w .",
    "note": "In the first example, the initial positions and velocities of clouds are illustrated below. The pairs are: ( 1, 3) , covering the moon at time 2. 5 with w = - 0. 4 ; ( 1, 4) , covering the moon at time 3. 5 with w = - 0. 6 ; ( 1, 5) , covering the moon at time 4. 5 with w = - 0. 7 ; ( 2, 5) , covering the moon at time 2. 5 with w = - 2 . Below is the positions of clouds at time 2. 5 with w = - 0. 4 . At this moment, the 1 - st and 3 - rd clouds both cover the moon. In the second example, the only pair is ( 1, 4) , covering the moon at time 15 with w = 0 . Note that all the times and wind velocities given above are just examples among infinitely many choices.",
    "topics": [
      "binary search",
      "geometry",
      "math",
      "sortings",
      "two pointers"
    ],
    "id": "989D"
  },
  {
    "title": "Billiard",
    "url": "https://codeforces.com/problemset/problem/982/E",
    "history": "Consider a billiard table of rectangular size n \u00d7 m with four pockets. Let' s introduce a coordinate system with the origin at the lower left corner ( see the picture) . There is one ball at the point ( x, y) currently. Max comes to the table and strikes the ball. The ball starts moving along a line that is parallel to one of the axes or that makes a 45^ \u2218 angle with them. We will assume that: the angles between the directions of the ball before and after a collision with a side are equal, the ball moves indefinitely long, it only stops when it falls into a pocket, the ball can be considered as a point, it falls into a pocket if and only if its coordinates coincide with one of the pockets, initially the ball is not in a pocket. Note that the ball can move along some side, in this case the ball will just fall into the pocket at the end of the side. Your task is to determine whether the ball will fall into a pocket eventually, and if yes, which of the four pockets it will be.",
    "input": "The only line contains 6 integers n , m , x , y , v_ x , v_ y ( 1 \u2264 n, m \u2264 10^ 9 , 0 \u2264 x \u2264 n ; 0 \u2264 y \u2264 m ; - 1 \u2264 v_ x, v_ y \u2264 1 ; ( v_ x, v_ y) = \u0338 ( 0, 0) ) \u2014 the width of the table, the length of the table, the x - coordinate of the initial position of the ball, the y - coordinate of the initial position of the ball, the x - component of its initial speed and the y - component of its initial speed, respectively. It is guaranteed that the ball is not initially in a pocket.",
    "output": "Print the coordinates of the pocket the ball will fall into, or - 1 if the ball will move indefinitely.",
    "note": "The first sample: The second sample: In the third sample the ball will never change its y coordinate, so the ball will never fall into a pocket.",
    "topics": [
      "geometry",
      "number theory"
    ],
    "id": "982E"
  },
  {
    "title": "Hag's Khashba",
    "url": "https://codeforces.com/problemset/problem/975/E",
    "history": "Hag is a very talented person. He has always had an artist inside him but his father forced him to study mechanical engineering. Yesterday he spent all of his time cutting a giant piece of wood trying to make it look like a goose. Anyway, his dad found out that he was doing arts rather than studying mechanics and other boring subjects. He confronted Hag with the fact that he is a spoiled son that does not care about his future, and if he continues to do arts he will cut his 25 Lira monthly allowance. Hag is trying to prove to his dad that the wooden piece is a project for mechanics subject. He also told his dad that the wooden piece is a strictly convex polygon with n vertices. Hag brought two pins and pinned the polygon with them in the 1 - st and 2 - nd vertices to the wall. His dad has q queries to Hag of two types. 1 f t : pull a pin from the vertex f , wait for the wooden polygon to rotate under the gravity force ( if it will rotate) and stabilize. And then put the pin in vertex t . 2 v : answer what are the coordinates of the vertex v . Please help Hag to answer his father' s queries. You can assume that the wood that forms the polygon has uniform density and the polygon has a positive thickness, same in all points. After every query of the 1- st type Hag' s dad tries to move the polygon a bit and watches it stabilize again.",
    "input": "The first line contains two integers n and q ( 3\u2264 n \u2264 10 000 , 1 \u2264 q \u2264 200000 ) \u2014 the number of vertices in the polygon and the number of queries. The next n lines describe the wooden polygon, the i - th line contains two integers x_ i and y_ i ( | x_ i| , | y_ i| \u2264 10^ 8 ) \u2014 the coordinates of the i - th vertex of the polygon. It is guaranteed that polygon is strictly convex and the vertices are given in the counter- clockwise order and all vertices are distinct. The next q lines describe the queries, one per line. Each query starts with its type 1 or 2 . Each query of the first type continues with two integers f and t ( 1 \u2264 f, t \u2264 n ) \u2014 the vertex the pin is taken from, and the vertex the pin is put to and the polygon finishes rotating. It is guaranteed that the vertex f contains a pin. Each query of the second type continues with a single integer v ( 1 \u2264 v \u2264 n ) \u2014 the vertex the coordinates of which Hag should tell his father. It is guaranteed that there is at least one query of the second type.",
    "output": "The output should contain the answer to each query of second type \u2014 two numbers in a separate line. Your answer is considered correct, if its absolute or relative error does not exceed 10^ - 4 . Formally, let your answer be a , and the jury' s answer be b . Your answer is considered correct if | a - b| / max( 1, | b| ) \u2264 10^ - 4",
    "note": "In the first test note the initial and the final state of the wooden polygon. Red Triangle is the initial state and the green one is the triangle after rotation around ( 2, 0) . In the second sample note that the polygon rotates 180 degrees counter- clockwise or clockwise direction ( it does not matter) , because Hag' s father makes sure that the polygon is stable and his son does not trick him.",
    "topics": [
      "geometry"
    ],
    "id": "975E"
  },
  {
    "title": "Ghosts",
    "url": "https://codeforces.com/problemset/problem/975/D",
    "history": "Ghosts live in harmony and peace, they travel the space without any purpose other than scare whoever stands in their way. There are n ghosts in the universe, they move in the OXY plane, each one of them has its own velocity that does not change in time: V = V_ xi + V_ yj where V_ x is its speed on the x - axis and V_ y is on the y - axis. A ghost i has experience value EX_ i , which represent how many ghosts tried to scare him in his past. Two ghosts scare each other if they were in the same cartesian point at a moment of time. As the ghosts move with constant speed, after some moment of time there will be no further scaring ( what a relief! ) and the experience of ghost kind GX = \u2211_ i= 1^ n EX_ i will never increase. Tameem is a red giant, he took a picture of the cartesian plane at a certain moment of time T , and magically all the ghosts were aligned on a line of the form y = a \u00b7 x + b . You have to compute what will be the experience index of the ghost kind GX in the indefinite future, this is your task for today. Note that when Tameem took the picture, GX may already be greater than 0 , because many ghosts may have scared one another at any moment between [ - \u221e, T] .",
    "input": "The first line contains three integers n , a and b ( 1 \u2264 n \u2264 200000 , 1 \u2264 | a| \u2264 10^ 9 , 0 \u2264 | b| \u2264 10^ 9 ) \u2014 the number of ghosts in the universe and the parameters of the straight line. Each of the next n lines contains three integers x_ i , V_ xi , V_ yi ( - 10^ 9 \u2264 x_ i \u2264 10^ 9 , - 10^ 9 \u2264 V_ x i, V_ y i\u2264 10^ 9 ) , where x_ i is the current x - coordinate of the i - th ghost ( and y_ i = a \u00b7 x_ i + b ) . It is guaranteed that no two ghosts share the same initial position, in other words, it is guaranteed that for all ( i, j) x_ i = \u0338 x_ j for i j .",
    "output": "Output one line: experience index of the ghost kind GX in the indefinite future.",
    "note": "There are four collisions ( 1, 2, T- 0. 5) , ( 1, 3, T- 1) , ( 2, 4, T+ 1) , ( 3, 4, T+ 0. 5) , where ( u, v, t) means a collision happened between ghosts u and v at moment t . At each collision, each ghost gained one experience point, this means that GX = 4 \u00b7 2 = 8 . In the second test, all points will collide when t = T + 1 . The red arrow represents the 1- st ghost velocity, orange represents the 2- nd ghost velocity, and blue represents the 3- rd ghost velocity.",
    "topics": [
      "geometry",
      "math"
    ],
    "id": "975D"
  },
  {
    "title": "Visible Black Areas",
    "url": "https://codeforces.com/problemset/problem/962/G",
    "history": "Petya has a polygon consisting of n vertices. All sides of the Petya' s polygon are parallel to the coordinate axes, and each two adjacent sides of the Petya' s polygon are perpendicular. It is guaranteed that the polygon is simple, that is, it doesn' t have self- intersections and self- touches. All internal area of the polygon ( borders are not included) was painted in black color by Petya. Also, Petya has a rectangular window, defined by its coordinates, through which he looks at the polygon. A rectangular window can not be moved. The sides of the rectangular window are parallel to the coordinate axes. Blue color represents the border of a polygon, red color is the Petya' s window. The answer in this case is 2. Determine the number of black connected areas of Petya' s polygon, which can be seen through the rectangular window.",
    "input": "The first line contain four integers x_ 1, y_ 1, x_ 2, y_ 2 ( x_ 1 < x_ 2 , y_ 2 < y_ 1 ) \u2014 the coordinates of top- left and bottom- right corners of the rectangular window. The second line contains a single integer n ( 4 \u2264 n \u2264 15 000 ) \u2014 the number of vertices in Petya' s polygon. Each of the following n lines contains two integers \u2014 the coordinates of vertices of the Petya' s polygon in counterclockwise order. Guaranteed, that the given polygon satisfies the conditions described in the statement. All coordinates of the rectangular window and all coordinates of the vertices of the polygon are non- negative and do not exceed 15 000 .",
    "output": "Print the number of black connected areas of Petya' s polygon, which can be seen through the rectangular window.",
    "note": "The example corresponds to the picture above.",
    "topics": [
      "data structures",
      "dsu",
      "geometry",
      "trees"
    ],
    "id": "962G"
  },
  {
    "title": "Pair Of Lines",
    "url": "https://codeforces.com/problemset/problem/961/D",
    "history": "You are given n points on Cartesian plane. Every point is a lattice point ( i. e. both of its coordinates are integers) , and all points are distinct. You may draw two straight lines ( not necessarily distinct) . Is it possible to do this in such a way that every point lies on at least one of these lines?",
    "input": "The first line contains one integer n ( 1 \u2264 n \u2264 105) \u2014 the number of points you are given. Then n lines follow, each line containing two integers xi and yi ( | xi| , | yi| \u2264 109) \u2014 coordinates of i- th point. All n points are distinct.",
    "output": "If it is possible to draw two straight lines in such a way that each of given points belongs to at least one of these lines, print YES. Otherwise, print NO.",
    "note": "In the first example it is possible to draw two lines, the one containing the points 1, 3 and 5, and another one containing two remaining points.",
    "topics": [
      "geometry"
    ],
    "id": "961D"
  },
  {
    "title": "Guard Duty (hard)",
    "url": "https://codeforces.com/problemset/problem/958/E3",
    "history": "Now that Heidi knows that she can assign Rebel spaceships to bases ( recall the easy subtask) , she is asking you: how exactly to do this? Now, given positions of N spaceships and N bases on a plane, your task is to connect spaceships and bases with line segments so that: The segments do not intersect. Such a connection forms a perfect matching.",
    "input": "The first line contains an integer N ( 1 \u2264 n \u2264 10000) . For 1 \u2264 i \u2264 N, the i + 1- th line contains two integers xi and yi ( | xi| , | yi| \u2264 10000) denoting the coordinates of the i- th spaceship. The following N lines have the same format, denoting the position of bases. It is guaranteed that no two points coincide and no three points are on the same line.",
    "output": "The output should have N lines. The i- th line should contain an integer pi, the index of the base to which the i- th spaceship is connected. The sequence p1, . . . , pN should form a permutation of 1, . . . , N. It is guaranteed that a solution exists. If there are multiple solutions, you can output any one of them.",
    "note": "",
    "topics": [
      "geometry"
    ],
    "id": "958E3"
  },
  {
    "title": "Guard Duty (easy)",
    "url": "https://codeforces.com/problemset/problem/958/E1",
    "history": "The Rebel fleet is afraid that the Empire might want to strike back again. Princess Heidi needs to know if it is possible to assign R Rebel spaceships to guard B bases so that every base has exactly one guardian and each spaceship has exactly one assigned base ( in other words, the assignment is a perfect matching) . Since she knows how reckless her pilots are, she wants to be sure that any two ( straight) paths \u2013 from a base to its assigned spaceship \u2013 do not intersect in the galaxy plane ( that is, in 2D) , and so there is no risk of collision.",
    "input": "The first line contains two space- separated integers R, B( 1 \u2264 R, B \u2264 10) . For 1 \u2264 i \u2264 R, the i + 1- th line contains two space- separated integers xi and yi ( | xi| , | yi| \u2264 10000) denoting the coordinates of the i- th Rebel spaceship. The following B lines have the same format, denoting the position of bases. It is guaranteed that no two points coincide and that no three points are on the same line.",
    "output": "If it is possible to connect Rebel spaceships and bases so as satisfy the constraint, output Yes, otherwise output No ( without quote) .",
    "note": "For the first example, one possible way is to connect the Rebels and bases in order. For the second example, there is no perfect matching between Rebels and bases.",
    "topics": [
      "brute force",
      "geometry",
      "greedy",
      "math"
    ],
    "id": "958E1"
  },
  {
    "title": "Fifa and Fafa",
    "url": "https://codeforces.com/problemset/problem/935/C",
    "history": "Fifa and Fafa are sharing a flat. Fifa loves video games and wants to download a new soccer game. Unfortunately, Fafa heavily uses the internet which consumes the quota. Fifa can access the internet through his Wi- Fi access point. This access point can be accessed within a range of r meters ( this range can be chosen by Fifa) from its position. Fifa must put the access point inside the flat which has a circular shape of radius R. Fifa wants to minimize the area that is not covered by the access point inside the flat without letting Fafa or anyone outside the flat to get access to the internet. The world is represented as an infinite 2D plane. The flat is centered at ( x1, y1) and has radius R and Fafa' s laptop is located at ( x2, y2) , not necessarily inside the flat. Find the position and the radius chosen by Fifa for his access point which minimizes the uncovered area.",
    "input": "The single line of the input contains 5 space- separated integers R, x1, y1, x2, y2 ( 1 \u2264 R \u2264 105, | x1| , | y1| , | x2| , | y2| \u2264 105) .",
    "output": "Print three space- separated numbers xap, yap, r where ( xap, yap) is the position which Fifa chose for the access point and r is the radius of its range. Your answer will be considered correct if the radius does not differ from optimal more than 10 - 6 absolutely or relatively, and also the radius you printed can be changed by no more than 10 - 6 ( absolutely or relatively) in such a way that all points outside the flat and Fafa' s laptop position are outside circle of the access point range.",
    "note": "",
    "topics": [
      "geometry"
    ],
    "id": "935C"
  },
  {
    "title": "A Colourful Prospect",
    "url": "https://codeforces.com/problemset/problem/933/C",
    "history": "Firecrackers scare Nian the monster, but they' re wayyyyy too noisy! Maybe fireworks make a nice complement. Little Tommy is watching a firework show. As circular shapes spread across the sky, a splendid view unfolds on the night of Lunar New Year' s eve. A wonder strikes Tommy. How many regions are formed by the circles on the sky? We consider the sky as a flat plane. A region is a connected part of the plane with positive area, whose bound consists of parts of bounds of the circles and is a curve or several curves without self- intersections, and that does not contain any curve other than its boundaries. Note that exactly one of the regions extends infinitely.",
    "input": "The first line of input contains one integer n ( 1 \u2264 n \u2264 3) , denoting the number of circles. The following n lines each contains three space- separated integers x, y and r ( - 10 \u2264 x, y \u2264 10, 1 \u2264 r \u2264 10) , describing a circle whose center is ( x, y) and the radius is r. No two circles have the same x, y and r at the same time.",
    "output": "Print a single integer \u2014 the number of regions on the plane.",
    "note": "For the first example, For the second example, For the third example,",
    "topics": [
      "geometry",
      "graphs"
    ],
    "id": "933C"
  },
  {
    "title": "Escape Through Leaf",
    "url": "https://codeforces.com/problemset/problem/932/F",
    "history": "You are given a tree with n nodes ( numbered from 1 to n) rooted at node 1. Also, each node has two values associated with it. The values for i- th node are ai and bi. You can jump from a node to any node in its subtree. The cost of one jump from node x to node y is the product of ax and by. The total cost of a path formed by one or more jumps is sum of costs of individual jumps. For every node, calculate the minimum total cost to reach any leaf from that node. Pay attention, that root can never be leaf, even if it has degree 1. Note that you cannot jump from a node to itself.",
    "input": "The first line of input contains an integer n ( 2 \u2264 n \u2264 105) \u2014 the number of nodes in the tree. The second line contains n space- separated integers a1, a2, . . . , an( - 105 \u2264 ai \u2264 105) . The third line contains n space- separated integers b1, b2, . . . , bn( - 105 \u2264 bi \u2264 105) . Next n - 1 lines contains two space- separated integers ui and vi ( 1 \u2264 ui, vi \u2264 n) describing edge between nodes ui and vi in the tree.",
    "output": "Output n space- separated integers, i- th of which denotes the minimum cost of a path from node i to reach any leaf.",
    "note": "In the first example, node 3 is already a leaf, so the cost is 0. For node 2, jump to node 3 with cost a2 \u00d7 b3 = 50. For node 1, jump directly to node 3 with cost a1 \u00d7 b3 = 10. In the second example, node 3 and node 4 are leaves, so the cost is 0. For node 2, jump to node 4 with cost a2 \u00d7 b4 = 100. For node 1, jump to node 2 with cost a1 \u00d7 b2 = - 400 followed by a jump from 2 to 4 with cost a2 \u00d7 b4 = 100.",
    "topics": [
      "data structures",
      "dp",
      "geometry"
    ],
    "id": "932F"
  },
  {
    "title": "New Year and Curling",
    "url": "https://codeforces.com/problemset/problem/908/C",
    "history": "Carol is currently curling. She has n disks each with radius r on the 2D plane. Initially she has all these disks above the line y = 10100. She then will slide the disks towards the line y = 0 one by one in order from 1 to n. When she slides the i- th disk, she will place its center at the point ( xi, 10100) . She will then push it so the disk\u2019s y coordinate continuously decreases, and x coordinate stays constant. The disk stops once it touches the line y = 0 or it touches any previous disk. Note that once a disk stops moving, it will not move again, even if hit by another disk. Compute the y- coordinates of centers of all the disks after all disks have been pushed.",
    "input": "The first line will contain two integers n and r ( 1 \u2264 n, r \u2264 1 000) , the number of disks, and the radius of the disks, respectively. The next line will contain n integers x1, x2, . . . , xn ( 1 \u2264 xi \u2264 1 000) \u2014 the x- coordinates of the disks.",
    "output": "Print a single line with n numbers. The i- th number denotes the y- coordinate of the center of the i- th disk. The output will be accepted if it has absolute or relative error at most 10 - 6. Namely, let' s assume that your answer for a particular value of a coordinate is a and the answer of the jury is b. The checker program will consider your answer correct if for all coordinates.",
    "note": "The final positions of the disks will look as follows: In particular, note the position of the last disk.",
    "topics": [
      "brute force",
      "geometry",
      "implementation",
      "math"
    ],
    "id": "908C"
  },
  {
    "title": "Find Extra One",
    "url": "https://codeforces.com/problemset/problem/900/A",
    "history": "You have n distinct points on a plane, none of them lie on OY axis. Check that there is a point after removal of which the remaining points are located on one side of the OY axis.",
    "input": "The first line contains a single positive integer n ( 2 \u2264 n \u2264 105) . The following n lines contain coordinates of the points. The i- th of these lines contains two single integers xi and yi ( | xi| , | yi| \u2264 109, xi = \u0338 0) . No two points coincide.",
    "output": "Print \" Yes\" if there is such a point, \" No\" \u2014 otherwise. You can print every letter in any case ( upper or lower) .",
    "note": "In the first example the second point can be removed. In the second example there is no suitable for the condition point. In the third example any point can be removed.",
    "topics": [
      "geometry",
      "implementation"
    ],
    "id": "900A"
  },
  {
    "title": "Little Brother",
    "url": "https://codeforces.com/problemset/problem/887/E",
    "history": "Masha' s little brother draw two points on a sheet of paper. After that, he draws some circles and gave the sheet to his sister. Masha has just returned from geometry lesson so she instantly noticed some interesting facts about brother' s drawing. At first, the line going through two points, that brother drew, doesn' t intersect or touch any circle. Also, no two circles intersect or touch, and there is no pair of circles such that one circle is located inside another. Moreover, for each circle, Masha drew a square of the minimal area with sides parallel axis such that this circle is located inside the square and noticed that there is no two squares intersect or touch and there is no pair of squares such that one square is located inside other. Now Masha wants to draw circle of minimal possible radius such that it goes through two points that brother drew and doesn' t intersect any other circle, but other circles can touch Masha' s circle and can be located inside it. It' s guaranteed, that answer won' t exceed 1012. It should be held for hacks as well.",
    "input": "First line contains four integers x1, y1, x2, y2 ( - 105 \u2264 x1, y1, x2, y2 \u2264 105) \u2014 coordinates of points that brother drew. First point has coordinates ( x1, y1) and second point has coordinates ( x2, y2) . These two points are different. The second line contains single integer n ( 1 \u2264 n \u2264 105) \u2014 the number of circles that brother drew. Next n lines contains descriptions of circles. Each line contains three integers xi, yi, ri ( - 105 \u2264 xi, yi \u2264 105, 1 \u2264 ri \u2264 105) describing circle with center ( xi, yi) and radius ri.",
    "output": "Output smallest real number, that it' s possible to draw a circle with such radius through given points in such a way that it doesn' t intersect other circles. The output is considered correct if it has a relative or absolute error of at most 10 - 4.",
    "note": "",
    "topics": [
      "binary search",
      "geometry",
      "sortings"
    ],
    "id": "887E"
  },
  {
    "title": "Symmetric Projections",
    "url": "https://codeforces.com/problemset/problem/886/F",
    "history": "You are given a set of n points on the plane. A line containing the origin is called good, if projection of the given set to this line forms a symmetric multiset of points. Find the total number of good lines. Multiset is a set where equal elements are allowed. Multiset is called symmetric, if there is a point P on the plane such that the multiset is centrally symmetric in respect of point P.",
    "input": "The first line contains a single integer n ( 1 \u2264 n \u2264 2000) \u2014 the number of points in the set. Each of the next n lines contains two integers xi and yi ( - 106 \u2264 xi, yi \u2264 106) \u2014 the coordinates of the points. It is guaranteed that no two points coincide.",
    "output": "If there are infinitely many good lines, print - 1. Otherwise, print single integer \u2014 the number of good lines.",
    "note": "Picture to the first sample test: In the second sample, any line containing the origin is good.",
    "topics": [
      "geometry"
    ],
    "id": "886F"
  },
  {
    "title": "Lazy Security Guard",
    "url": "https://codeforces.com/problemset/problem/859/B",
    "history": "Your security guard friend recently got a new job at a new security company. The company requires him to patrol an area of the city encompassing exactly N city blocks, but they let him choose which blocks. That is, your friend must walk the perimeter of a region whose area is exactly N blocks. Your friend is quite lazy and would like your help to find the shortest possible route that meets the requirements. The city is laid out in a square grid pattern, and is large enough that for the sake of the problem it can be considered infinite.",
    "input": "Input will consist of a single integer N ( 1 \u2264 N \u2264 106) , the number of city blocks that must be enclosed by the route.",
    "output": "Print the minimum perimeter that can be achieved.",
    "note": "Here are some possible shapes for the examples:",
    "topics": [
      "brute force",
      "geometry",
      "math"
    ],
    "id": "859B"
  },
  {
    "title": "Lada Malina",
    "url": "https://codeforces.com/problemset/problem/853/E",
    "history": "After long- term research and lots of experiments leading Megapolian automobile manufacturer \u00abAutoVoz\u00bb released a brand new car model named \u00abLada Malina\u00bb. One of the most impressive features of \u00abLada Malina\u00bb is its highly efficient environment- friendly engines. Consider car as a point in Oxy plane. Car is equipped with k engines numbered from 1 to k. Each engine is defined by its velocity vector whose coordinates are ( vxi, vyi) measured in distance units per day. An engine may be turned on at any level wi, that is a real number between - 1 and + 1 ( inclusive) that result in a term of ( wi\u00b7vxi, wi\u00b7vyi) in the final car velocity. Namely, the final car velocity is equal to ( w1\u00b7vx1 + w2\u00b7vx2 + . . . + wk\u00b7vxk, w1\u00b7vy1 + w2\u00b7vy2 + . . . + wk\u00b7vyk) Formally, if car moves with constant values of wi during the whole day then its x- coordinate will change by the first component of an expression above, and its y- coordinate will change by the second component of an expression above. For example, if all wi are equal to zero, the car won' t move, and if all wi are equal to zero except w1 = 1, then car will move with the velocity of the first engine. There are n factories in Megapolia, i- th of them is located in ( fxi, fyi) . On the i- th factory there are ai cars \u00abLada Malina\u00bb that are ready for operation. As an attempt to increase sales of a new car, \u00abAutoVoz\u00bb is going to hold an international exposition of cars. There are q options of exposition location and time, in the i- th of them exposition will happen in a point with coordinates ( pxi, pyi) in ti days. Of course, at the \u00abAutoVoz\u00bb is going to bring as much new cars from factories as possible to the place of exposition. Cars are going to be moved by enabling their engines on some certain levels, such that at the beginning of an exposition car gets exactly to the exposition location. However, for some of the options it may be impossible to bring cars from some of the factories to the exposition location by the moment of an exposition. Your task is to determine for each of the options of exposition location and time how many cars will be able to get there by the beginning of an exposition.",
    "input": "The first line of input contains three integers k, n, q ( 2 \u2264 k \u2264 10, 1 \u2264 n \u2264 105, 1 \u2264 q \u2264 105) , the number of engines of \u00abLada Malina\u00bb, number of factories producing \u00abLada Malina\u00bb and number of options of an exposition time and location respectively. The following k lines contain the descriptions of \u00abLada Malina\u00bb engines. The i- th of them contains two integers vxi, vyi ( - 1000 \u2264 vxi, vyi \u2264 1000) defining the velocity vector of the i- th engine. Velocity vector can' t be zero, i. e. at least one of vxi and vyi is not equal to zero. It is guaranteed that no two velosity vectors are collinear ( parallel) . Next n lines contain the descriptions of factories. The i- th of them contains two integers fxi, fyi, ai ( - 109 \u2264 fxi, fyi \u2264 109, 1 \u2264 ai \u2264 109) defining the coordinates of the i- th factory location and the number of cars that are located there. The following q lines contain the descriptions of the car exposition. The i- th of them contains three integers pxi, pyi, ti ( - 109 \u2264 pxi, pyi \u2264 109, 1 \u2264 ti \u2264 105) defining the coordinates of the exposition location and the number of days till the exposition start in the i- th option.",
    "output": "For each possible option of the exposition output the number of cars that will be able to get to the exposition location by the moment of its beginning.",
    "note": "Images describing sample tests are given below. Exposition options are denoted with crosses, factories are denoted with points. Each factory is labeled with a number of cars that it has. First sample test explanation: Car from the first factory is not able to get to the exposition location in time. Car from the second factory can get to the exposition in time if we set w1 = 0, w2 = 1. Car from the third factory can get to the exposition in time if we set , . Car from the fourth factory can get to the exposition in time if we set w1 = 1, w2 = 0.",
    "topics": [
      "data structures",
      "geometry"
    ],
    "id": "853E"
  },
  {
    "title": "Bob and stages",
    "url": "https://codeforces.com/problemset/problem/852/H",
    "history": "The citizens of BubbleLand are celebrating their 10th anniversary so they decided to organize a big music festival. Bob got a task to invite N famous singers who would sing on the fest. He was too busy placing stages for their performances that he totally forgot to write the invitation e- mails on time, and unfortunately he only found K available singers. Now there are more stages than singers, leaving some of the stages empty. Bob would not like if citizens of BubbleLand noticed empty stages and found out that he was irresponsible. Because of that he decided to choose exactly K stages that form a convex set, make large posters as edges of that convex set and hold festival inside. While those large posters will make it impossible for citizens to see empty stages outside Bob still needs to make sure they don' t see any of the empty stages inside that area. Since lots of people are coming, he would like that the festival area is as large as possible. Help him calculate the maximum area that he could obtain respecting the conditions. If there is no such area, the festival cannot be organized and the answer is 0. 00.",
    "input": "The first line of input contains two integers N ( 3 \u2264 N \u2264 200) and K ( 3 \u2264 K \u2264 min( N, 50) ) , separated with one empty space, representing number of stages and number of singers, respectively. Each of the next N lines contains two integers Xi and Yi ( 0 \u2264 Xi, Yi \u2264 106) representing the coordinates of the stages. There are no three or more collinear stages.",
    "output": "Output contains only one line with one number, rounded to exactly two decimal places: the maximal festival area. Rounding is performed so that 0. 5 and more rounds up and everything else rounds down.",
    "note": "Example explanation: From all possible convex polygon with 4 vertices and no other vertex inside, the largest is one with points ( 0, 0) , ( 2, 1) , ( 4, 4) and ( 1, 5) .",
    "topics": [
      "dp",
      "geometry"
    ],
    "id": "852H"
  },
  {
    "title": "Arpa and an exam about geometry",
    "url": "https://codeforces.com/problemset/problem/851/B",
    "history": "Arpa is taking a geometry exam. Here is the last problem of the exam. You are given three points a, b, c. Find a point and an angle such that if we rotate the page around the point by the angle, the new position of a is the same as the old position of b, and the new position of b is the same as the old position of c. Arpa is doubting if the problem has a solution or not ( i. e. if there exists a point and an angle satisfying the condition) . Help Arpa determine if the question has a solution or not.",
    "input": "The only line contains six integers ax, ay, bx, by, cx, cy ( | ax| , | ay| , | bx| , | by| , | cx| , | cy| \u2264 109) . It' s guaranteed that the points are distinct.",
    "output": "Print \" Yes\" if the problem has a solution, \" No\" otherwise. You can print each letter in any case ( upper or lower) .",
    "note": "In the first sample test, rotate the page around ( 0. 5, 0. 5) by . In the second sample test, you can' t find any solution.",
    "topics": [
      "geometry",
      "math"
    ],
    "id": "851B"
  },
  {
    "title": "Five Dimensional Points",
    "url": "https://codeforces.com/problemset/problem/850/A",
    "history": "You are given set of n points in 5- dimensional space. The points are labeled from 1 to n. No two points coincide. We will call point a bad if there are different points b and c, not equal to a, from the given set such that angle between vectors and is acute ( i. e. strictly less than ) . Otherwise, the point is called good. The angle between vectors and in 5- dimensional space is defined as , where is the scalar product and is length of . Given the list of points, print the indices of the good points in ascending order.",
    "input": "The first line of input contains a single integer n ( 1 \u2264 n \u2264 103) \u2014 the number of points. The next n lines of input contain five integers ai, bi, ci, di, ei ( | ai| , | bi| , | ci| , | di| , | ei| \u2264 103) \u2014 the coordinates of the i- th point. All points are distinct.",
    "output": "First, print a single integer k \u2014 the number of good points. Then, print k integers, each on their own line \u2014 the indices of the good points in ascending order.",
    "note": "In the first sample, the first point forms exactly a angle with all other pairs of points, so it is good. In the second sample, along the cd plane, we can see the points look as follows: We can see that all angles here are acute, so no points are good.",
    "topics": [
      "brute force",
      "geometry",
      "math"
    ],
    "id": "850A"
  },
  {
    "title": "Tell Your World",
    "url": "https://codeforces.com/problemset/problem/849/B",
    "history": "Connect the countless points with lines, till we reach the faraway yonder. There are n points on a coordinate plane, the i- th of which being ( i, yi) . Determine whether it' s possible to draw two parallel and non- overlapping lines, such that every point in the set lies on exactly one of them, and each of them passes through at least one point in the set.",
    "input": "The first line of input contains a positive integer n ( 3 \u2264 n \u2264 1 000) \u2014 the number of points. The second line contains n space- separated integers y1, y2, . . . , yn ( - 109 \u2264 yi \u2264 109) \u2014 the vertical coordinates of each point.",
    "output": "Output \" Yes\" ( without quotes) if it' s possible to fulfill the requirements, and \" No\" otherwise. You can print each letter in any case ( upper or lower) .",
    "note": "In the first example, there are five points: ( 1, 7) , ( 2, 5) , ( 3, 8) , ( 4, 6) and ( 5, 9) . It' s possible to draw a line that passes through points 1, 3, 5, and another one that passes through points 2, 4 and is parallel to the first one. In the second example, while it' s possible to draw two lines that cover all points, they cannot be made parallel. In the third example, it' s impossible to satisfy both requirements at the same time.",
    "topics": [
      "brute force",
      "geometry"
    ],
    "id": "849B"
  },
  {
    "title": "Rooter's Song",
    "url": "https://codeforces.com/problemset/problem/848/B",
    "history": "Wherever the destination is, whoever we meet, let' s render this song together. On a Cartesian coordinate plane lies a rectangular stage of size w \u00d7 h, represented by a rectangle with corners ( 0, 0) , ( w, 0) , ( w, h) and ( 0, h) . It can be seen that no collisions will happen before one enters the stage. On the sides of the stage stand n dancers. The i- th of them falls into one of the following groups: Vertical: stands at ( xi, 0) , moves in positive y direction ( upwards) ; Horizontal: stands at ( 0, yi) , moves in positive x direction ( rightwards) . According to choreography, the i- th dancer should stand still for the first ti milliseconds, and then start moving in the specified direction at 1 unit per millisecond, until another border is reached. It is guaranteed that no two dancers have the same group, position and waiting time at the same time. When two dancers collide ( i. e. are on the same point at some time when both of them are moving) , they immediately exchange their moving directions and go on. Dancers stop when a border of the stage is reached. Find out every dancer' s stopping position.",
    "input": "The first line of input contains three space- separated positive integers n, w and h ( 1 \u2264 n \u2264 100 000, 2 \u2264 w, h \u2264 100 000) \u2014 the number of dancers and the width and height of the stage, respectively. The following n lines each describes a dancer: the i- th among them contains three space- separated integers gi, pi, and ti ( 1 \u2264 gi \u2264 2, 1 \u2264 pi \u2264 99 999, 0 \u2264 ti \u2264 100 000) , describing a dancer' s group gi ( gi = 1 \u2014 vertical, gi = 2 \u2014 horizontal) , position, and waiting time. If gi = 1 then pi = xi; otherwise pi = yi. It' s guaranteed that 1 \u2264 xi \u2264 w - 1 and 1 \u2264 yi \u2264 h - 1. It is guaranteed that no two dancers have the same group, position and waiting time at the same time.",
    "output": "Output n lines, the i- th of which contains two space- separated integers ( xi, yi) \u2014 the stopping position of the i- th dancer in the input.",
    "note": "The first example corresponds to the initial setup in the legend, and the tracks of dancers are marked with different colours in the following figure. In the second example, no dancers collide.",
    "topics": [
      "constructive algorithms",
      "data structures",
      "geometry",
      "implementation",
      "sortings",
      "two pointers"
    ],
    "id": "848B"
  },
  {
    "title": "Gleb And Pizza",
    "url": "https://codeforces.com/problemset/problem/842/B",
    "history": "Gleb ordered pizza home. When the courier delivered the pizza, he was very upset, because several pieces of sausage lay on the crust, and he does not really like the crust. The pizza is a circle of radius r and center at the origin. Pizza consists of the main part \u2014 circle of radius r - d with center at the origin, and crust around the main part of the width d. Pieces of sausage are also circles. The radius of the i - th piece of the sausage is ri, and the center is given as a pair ( xi, yi) . Gleb asks you to help determine the number of pieces of sausage caught on the crust. A piece of sausage got on the crust, if it completely lies on the crust.",
    "input": "First string contains two integer numbers r and d ( 0 \u2264 d < r \u2264 500) \u2014 the radius of pizza and the width of crust. Next line contains one integer number n \u2014 the number of pieces of sausage ( 1 \u2264 n \u2264 105) . Each of next n lines contains three integer numbers xi, yi and ri ( - 500 \u2264 xi, yi \u2264 500, 0 \u2264 ri \u2264 500) , where xi and yi are coordinates of the center of i- th peace of sausage, ri \u2014 radius of i- th peace of sausage.",
    "output": "Output the number of pieces of sausage that lay on the crust.",
    "note": "Below is a picture explaining the first example. Circles of green color denote pieces of sausage lying on the crust.",
    "topics": [
      "geometry"
    ],
    "id": "842B"
  },
  {
    "title": "Mister B and Angle in Polygon",
    "url": "https://codeforces.com/problemset/problem/820/B",
    "history": "On one quiet day all of sudden Mister B decided to draw angle a on his field. Aliens have already visited his field and left many different geometric figures on it. One of the figures is regular convex n- gon ( regular convex polygon with n sides) . That' s why Mister B decided to use this polygon. Now Mister B must find three distinct vertices v1, v2, v3 such that the angle ( where v2 is the vertex of the angle, and v1 and v3 lie on its sides) is as close as possible to a. In other words, the value should be minimum possible. If there are many optimal solutions, Mister B should be satisfied with any of them.",
    "input": "First and only line contains two space- separated integers n and a ( 3 \u2264 n \u2264 105, 1 \u2264 a \u2264 180) \u2014 the number of vertices in the polygon and the needed angle, in degrees.",
    "output": "Print three space- separated integers: the vertices v1, v2, v3, which form . If there are multiple optimal solutions, print any of them. The vertices are numbered from 1 to n in clockwise order.",
    "note": "In first sample test vertices of regular triangle can create only angle of 60 degrees, that' s why every possible angle is correct. Vertices of square can create 45 or 90 degrees angles only. That' s why in second sample test the angle of 45 degrees was chosen, since | 45 - 67| < | 90 - 67| . Other correct answers are: \" 3 1 2\" , \" 3 2 4\" , \" 4 2 3\" , \" 4 3 1\" , \" 1 3 4\" , \" 1 4 2\" , \" 2 4 1\" , \" 4 1 3\" , \" 3 1 4\" , \" 3 4 2\" , \" 2 4 3\" , \" 2 3 1\" , \" 1 3 2\" , \" 1 2 4\" , \" 4 2 1\" . In third sample test, on the contrary, the angle of 90 degrees was chosen, since | 90 - 68| < | 45 - 68| . Other correct answers are: \" 2 1 4\" , \" 3 2 1\" , \" 1 2 3\" , \" 4 3 2\" , \" 2 3 4\" , \" 1 4 3\" , \" 3 4 1\" .",
    "topics": [
      "constructive algorithms",
      "geometry",
      "math"
    ],
    "id": "820B"
  },
  {
    "title": "Karen and Cards",
    "url": "https://codeforces.com/problemset/problem/815/D",
    "history": "Karen just got home from the supermarket, and is getting ready to go to sleep. After taking a shower and changing into her pajamas, she looked at her shelf and saw an album. Curious, she opened it and saw a trading card collection. She recalled that she used to play with those cards as a child, and, although she is now grown- up, she still wonders a few things about it. Each card has three characteristics: strength, defense and speed. The values of all characteristics of all cards are positive integers. The maximum possible strength any card can have is p, the maximum possible defense is q and the maximum possible speed is r. There are n cards in her collection. The i- th card has a strength ai, defense bi and speed ci, respectively. A card beats another card if at least two of its characteristics are strictly greater than the corresponding characteristics of the other card. She now wonders how many different cards can beat all the cards in her collection. Two cards are considered different if at least one of their characteristics have different values.",
    "input": "The first line of input contains four integers, n, p, q and r ( 1 \u2264 n, p, q, r \u2264 500000) , the number of cards in the collection, the maximum possible strength, the maximum possible defense, and the maximum possible speed, respectively. The next n lines each contain three integers. In particular, the i- th line contains ai, bi and ci ( 1 \u2264 ai \u2264 p, 1 \u2264 bi \u2264 q, 1 \u2264 ci \u2264 r) , the strength, defense and speed of the i- th collection card, respectively.",
    "output": "Output a single integer on a line by itself, the number of different cards that can beat all the cards in her collection.",
    "note": "In the first test case, the maximum possible strength is 4, the maximum possible defense is 4 and the maximum possible speed is 5. Karen has three cards: The first card has strength 2, defense 2 and speed 5. The second card has strength 1, defense 3 and speed 4. The third card has strength 4, defense 1 and speed 1. There are 10 cards that beat all the cards here: The card with strength 3, defense 3 and speed 5. The card with strength 3, defense 4 and speed 2. The card with strength 3, defense 4 and speed 3. The card with strength 3, defense 4 and speed 4. The card with strength 3, defense 4 and speed 5. The card with strength 4, defense 3 and speed 5. The card with strength 4, defense 4 and speed 2. The card with strength 4, defense 4 and speed 3. The card with strength 4, defense 4 and speed 4. The card with strength 4, defense 4 and speed 5. In the second test case, the maximum possible strength is 10, the maximum possible defense is 10 and the maximum possible speed is 10. Karen has five cards, all with strength 1, defense 1 and speed 1. Any of the 972 cards which have at least two characteristics greater than 1 can beat all of the cards in her collection.",
    "topics": [
      "binary search",
      "combinatorics",
      "data structures",
      "geometry"
    ],
    "id": "815D"
  },
  {
    "title": "An overnight dance in discotheque",
    "url": "https://codeforces.com/problemset/problem/814/D",
    "history": "The crowdedness of the discotheque would never stop our friends from having fun, but a bit more spaciousness won' t hurt, will it? The discotheque can be seen as an infinite xy- plane, in which there are a total of n dancers. Once someone starts moving around, they will move only inside their own movement range, which is a circular area Ci described by a center ( xi, yi) and a radius ri. No two ranges' borders have more than one common point, that is for every pair ( i, j) ( 1 \u2264 i < j \u2264 n) either ranges Ci and Cj are disjoint, or one of them is a subset of the other. Note that it' s possible that two ranges' borders share a single common point, but no two dancers have exactly the same ranges. Tsukihi, being one of them, defines the spaciousness to be the area covered by an odd number of movement ranges of dancers who are moving. An example is shown below, with shaded regions representing the spaciousness if everyone moves at the same time. But no one keeps moving for the whole night after all, so the whole night' s time is divided into two halves \u2014 before midnight and after midnight. Every dancer moves around in one half, while sitting down with friends in the other. The spaciousness of two halves are calculated separately and their sum should, of course, be as large as possible. The following figure shows an optimal solution to the example above. By different plans of who dances in the first half and who does in the other, different sums of spaciousness over two halves are achieved. You are to find the largest achievable value of this sum.",
    "input": "The first line of input contains a positive integer n ( 1 \u2264 n \u2264 1 000) \u2014 the number of dancers. The following n lines each describes a dancer: the i- th line among them contains three space- separated integers xi, yi and ri ( - 106 \u2264 xi, yi \u2264 106, 1 \u2264 ri \u2264 106) , describing a circular movement range centered at ( xi, yi) with radius ri.",
    "output": "Output one decimal number \u2014 the largest achievable sum of spaciousness over two halves of the night. The output is considered correct if it has a relative or absolute error of at most 10 - 9. Formally, let your answer be a, and the jury' s answer be b. Your answer is considered correct if .",
    "note": "The first sample corresponds to the illustrations in the legend.",
    "topics": [
      "dfs and similar",
      "dp",
      "geometry",
      "greedy",
      "trees"
    ],
    "id": "814D"
  },
  {
    "title": "Cut the pie",
    "url": "https://codeforces.com/problemset/problem/799/G",
    "history": "Arkady reached the n- th level in Township game, so Masha decided to bake a pie for him! Of course, the pie has a shape of convex n- gon, i. e. a polygon with n vertices. Arkady decided to cut the pie in two equal in area parts by cutting it by a straight line, so that he can eat one of them and give the other to Masha. There is a difficulty because Arkady has already put a knife at some point of the pie, so he now has to cut the pie by a straight line passing trough this point. Help Arkady: find a line that passes through the point Arkady has put a knife into and cuts the pie into two parts of equal area, or determine that it' s impossible. Your program has to quickly answer many queries with the same pie, but different points in which Arkady puts a knife.",
    "input": "The first line contains two integers n and q ( 3 \u2264 n \u2264 104, 1 \u2264 q \u2264 105) \u2014 the number of vertices in the pie and the number of queries. n line follow describing the polygon vertices in clockwise order. The i- th of these line contains two integers xi and yi ( - 106 \u2264 xi, yi \u2264 106) \u2014 the coordinates of the i- th vertex. It is guaranteed that the polygon is strictly convex, in particular, no three vertices line on the same line. An empty line follows. q lines follow describing the query points. The i- th of these lines contain two integers xi and yi ( - 106 \u2264 xi, yi \u2264 106) \u2014 the coordinates of the point in which Arkady puts the knife in the i- th query. In is guaranteed that in each query the given point is strictly inside the polygon, in particular, is not on its edges.",
    "output": "For each query print single integer \u2014 the polar angle of the line that is the answer for the corresponding query, in radians. The angle should be in the segment [ 0; \u03c0] , the angles are measured from the direction of OX axis in counter- clockwise order. For example, the polar angle of the OY axis is . If there is no answer in that query, print - 1. If there are several answers, print any of them. Your answer is considered correct if the difference between the areas of the parts divided by the total area of the polygon doesn' t exceed 10 - 4 by absolute value. In other words, if a and b are the areas of the parts after the cut, then your answer is correct if and only of .",
    "note": "",
    "topics": [
      "binary search",
      "data structures",
      "geometry"
    ],
    "id": "799G"
  },
  {
    "title": "Cutting Carrot",
    "url": "https://codeforces.com/problemset/problem/794/B",
    "history": "Igor the analyst has adopted n little bunnies. As we all know, bunnies love carrots. Thus, Igor has bought a carrot to be shared between his bunnies. Igor wants to treat all the bunnies equally, and thus he wants to cut the carrot into n pieces of equal area. Formally, the carrot can be viewed as an isosceles triangle with base length equal to 1 and height equal to h. Igor wants to make n - 1 cuts parallel to the base to cut the carrot into n pieces. He wants to make sure that all n pieces have the same area. Can you help Igor determine where to cut the carrot so that each piece have equal area? Illustration to the first example.",
    "input": "The first and only line of input contains two space- separated integers, n and h ( 2 \u2264 n \u2264 1000, 1 \u2264 h \u2264 105) .",
    "output": "The output should contain n - 1 real numbers x1, x2, . . . , xn - 1. The number xi denotes that the i- th cut must be made xi units away from the apex of the carrot. In addition, 0 < x1 < x2 < . . . < xn - 1 < h must hold. Your output will be considered correct if absolute or relative error of every number in your output doesn' t exceed 10 - 6. Formally, let your answer be a, and the jury' s answer be b. Your answer is considered correct if .",
    "note": "Definition of isosceles triangle: https: / / en. wikipedia. org/ wiki/ Isosceles_ triangle.",
    "topics": [
      "geometry",
      "math"
    ],
    "id": "794B"
  },
  {
    "title": "Mice problem",
    "url": "https://codeforces.com/problemset/problem/793/C",
    "history": "Igor the analyst fell asleep on the work and had a strange dream. In the dream his desk was crowded with computer mice, so he bought a mousetrap to catch them. The desk can be considered as an infinite plane, then the mousetrap is a rectangle which sides are parallel to the axes, and which opposite sides are located in points ( x1, y1) and ( x2, y2) . Igor wants to catch all mice. Igor has analysed their behavior and discovered that each mouse is moving along a straight line with constant speed, the speed of the i- th mouse is equal to ( vix, viy) , that means that the x coordinate of the mouse increases by vix units per second, while the y coordinates increases by viy units. The mousetrap is open initially so that the mice are able to move freely on the desk. Igor can close the mousetrap at any moment catching all the mice that are strictly inside the mousetrap. Igor works a lot, so he is busy in the dream as well, and he asks you to write a program that by given mousetrap' s coordinates, the initial coordinates of the mice and their speeds determines the earliest time moment in which he is able to catch all the mice. Please note that Igor can close the mousetrap only once.",
    "input": "The first line contains single integer n ( 1 \u2264 n \u2264 100 000) \u2014 the number of computer mice on the desk. The second line contains four integers x1, y1, x2 and y2 ( 0 \u2264 x1 \u2264 x2 \u2264 100 000) , ( 0 \u2264 y1 \u2264 y2 \u2264 100 000) \u2014 the coordinates of the opposite corners of the mousetrap. The next n lines contain the information about mice. The i- th of these lines contains four integers rix, riy, vix and viy, ( 0 \u2264 rix, riy \u2264 100 000, - 100 000 \u2264 vix, viy \u2264 100 000) , where ( rix, riy) is the initial position of the mouse, and ( vix, viy) is its speed.",
    "output": "In the only line print minimum possible non- negative number t such that if Igor closes the mousetrap at t seconds from the beginning, then all the mice are strictly inside the mousetrap. If there is no such t, print - 1. Your answer is considered correct if its absolute or relative error doesn' t exceed 10 - 6. Formally, let your answer be a, and the jury' s answer be b. Your answer is considered correct if .",
    "note": "Here is a picture of the first samplePoints A, B, C, D - start mice positions, segments are their paths. Then, at first time when all mice will be in rectangle it will be looks like this: Here is a picture of the second samplePoints A, D, B will never enter rectangle.",
    "topics": [
      "geometry",
      "implementation",
      "math",
      "sortings"
    ],
    "id": "793C"
  },
  {
    "title": "Mages and Monsters",
    "url": "https://codeforces.com/problemset/problem/792/F",
    "history": "Vova plays a computer game known as Mages and Monsters. Vova' s character is a mage. Though as he has just started, his character knows no spells. Vova' s character can learn new spells during the game. Every spell is characterized by two values xi and yi \u2014 damage per second and mana cost per second, respectively. Vova doesn' t have to use a spell for an integer amount of seconds. More formally, if he uses a spell with damage x and mana cost y for z seconds, then he will deal x\u00b7z damage and spend y\u00b7z mana ( no rounding) . If there is no mana left ( mana amount is set in the start of the game and it remains the same at the beginning of every fight) , then character won' t be able to use any spells. It is prohibited to use multiple spells simultaneously. Also Vova can fight monsters. Every monster is characterized by two values tj and hj \u2014 monster kills Vova' s character in tj seconds and has hj health points. Mana refills after every fight ( or Vova' s character revives with full mana reserve) , so previous fights have no influence on further ones. Vova' s character kills a monster, if he deals hj damage to it in no more than tj seconds using his spells ( it is allowed to use more than one spell in a fight) and spending no more mana than he had at the beginning of the fight. If monster' s health becomes zero exactly in tj seconds ( it means that the monster and Vova' s character kill each other at the same time) , then Vova wins the fight. You have to write a program which can answer two types of queries: 1 x y \u2014 Vova' s character learns new spell which deals x damage per second and costs y mana per second. 2 t h \u2014 Vova fights the monster which kills his character in t seconds and has h health points. Note that queries are given in a different form. Also remember that Vova' s character knows no spells at the beginning of the game. For every query of second type you have to determine if Vova is able to win the fight with corresponding monster.",
    "input": "The first line contains two integer numbers q and m ( 2 \u2264 q \u2264 105, 1 \u2264 m \u2264 1012) \u2014 the number of queries and the amount of mana at the beginning of every fight. i- th of each next q lines contains three numbers ki, ai and bi ( 1 \u2264 ki \u2264 2, 1 \u2264 ai, bi \u2264 106) . Using them you can restore queries this way: let j be the index of the last query of second type with positive answer ( j = 0 if there were none of these) . If ki = 1, then character learns spell with x = ( ai + j) mod 106 + 1, y = ( bi + j) mod 106 + 1. If ki = 2, then you have to determine if Vova is able to win the fight against monster with t = ( ai + j) mod 106 + 1, h = ( bi + j) mod 106 + 1.",
    "output": "For every query of second type print YES if Vova is able to win the fight with corresponding monster and NO otherwise.",
    "note": "In first example Vova' s character at first learns the spell with 5 damage and 10 mana cost per second. Next query is a fight with monster which can kill character in 20 seconds and has 50 health points. Vova kills it in 10 seconds ( spending 100 mana) . Next monster has 52 health, so Vova can' t deal that much damage with only 100 mana.",
    "topics": [
      "data structures",
      "geometry"
    ],
    "id": "792F"
  },
  {
    "title": "Intranet of Buses",
    "url": "https://codeforces.com/problemset/problem/780/H",
    "history": "A new bus route is opened in the city . The route is a closed polygon line in the place, with all segments parallel to one of the axes. m buses will operate on the route. All buses move in a loop along the route in the same direction with equal constant velocities ( stopping times are negligible in this problem) . Buses start their movement in the first vertex of the route with equal interval. Suppose that T is the total time for a single bus to travel the whole loop of the route. Then, the bus 1 starts moving at time 0, the bus 2 starts at time T / m, the bus 3 starts at time 2T / m, and so on; finally, the bus m starts moving at time ( m - 1) T / m. Thus, all intervals between pairs of consecutive buses ( including the interval between the last and the first bus) are equal. Buses can communicate with each other via wireless transmitters of equal power. If the transmitters have power D, then only buses within distance D of each other can communicate. The buses are also equipped with a distributed system of schedule tracking. For all buses to stick to the schedule, the system has to synchronize the necessary data between all buses from time to time. At the moment of synchronization, the bus 1 communicates with the bus 2, the bus 2 \u2014 with bus 3, and so on; also, the bus m communicates with the bus 1. As a research employee, you are tasked with finding the smallest value of D such that it is possible to find a time moment to perform synchronization once all buses have started moving.",
    "input": "The first line contains two integers n and m ( 2 \u2264 n, m \u2264 105) \u2014 the number of vertices of the polygonal line, and the number of buses respectively. Next n lines describe the vertices of the route in the traversing order. Each of these lines contains two integers xi, yi ( - 1000 \u2264 xi, yi \u2264 1000) \u2014 coordinates of respective vertex. It is guaranteed that each leg of the route ( including the leg between the last and the first vertex) is paralles to one of the coordinate axes. Moreover, no two subsequent vertices of the route coincide. The route is allowed to have self- intersections, and travel along the same segment multiple times.",
    "output": "Print one real number \u2014 the answer to the problem. Your answer will be accepted if the relative or the absolute error doesn' t exceed 10 - 6.",
    "note": "Suppose that each bus travel 1 distance unit per second. In the first sample case, in 0. 5 seconds buses will be at distance 1, hence we can choose D = 1. In the second sample case, in 0. 5 seconds both buses will be at ( 0. 5, 0) , hence we can choose D = 0.",
    "topics": [
      "binary search",
      "geometry",
      "implementation",
      "two pointers"
    ],
    "id": "780H"
  },
  {
    "title": "Sherlock's bet to Moriarty",
    "url": "https://codeforces.com/problemset/problem/776/F",
    "history": "Sherlock met Moriarty for a final battle of wits. He gave him a regular n sided convex polygon. In addition to it, he gave him certain diagonals to form regions on the polygon. It was guaranteed that the diagonals did not intersect in interior points. He took each of the region and calculated its importance value. Importance value for a region formed by vertices a1, a2, . . . , ax of the polygon will be given by 2a1 + 2a2 + . . . + 2ax. Then, he sorted these regions on the basis of their importance value in ascending order. After that he assigned each region an index from 1 to k, where k is the number of regions, and index of region is its position in the sorted array calculated above. He wants Moriarty to color the regions using not more than 20 colors, such that two regions have same color only if all the simple paths between these two regions have at least one region with color value less than the color value assigned to these regions. Simple path between two regions f and h is a sequence of regions r1, r2, . . . rt such that r1 = f, rt = h, for each 1 \u2264 i < t regions ri and ri + 1 share an edge, and ri = rj if and only if i = j. Moriarty couldn' t answer and asks Sherlock to solve it himself. Help Sherlock in doing so.",
    "input": "First line contains two integers n and m ( 3 \u2264 n \u2264 100000, 0 \u2264 m \u2264 n - 3) , the number of vertices in the polygon and the number of diagonals added. Each of the next m lines contains two integers a and b ( 1 \u2264 a, b \u2264 n) , describing a diagonal between vertices a and b. It is guaranteed that the diagonals are correct, i. e. a and b don' t coincide and are not neighboring. It is guaranteed that the diagonals do not intersect.",
    "output": "Let the number of regions be k. Output k space- separated integers, each between 1 and 20, representing the colors of the regions in the order of increasing importance. If there are multiple answers, print any of them. It can be shown that at least one answer exists.",
    "note": "In 2nd input, regions formed in order after sorting will be ( 1, 2, 3) , ( 1, 3, 4) , ( 1, 4, 5) , ( 1, 5, 6) , i. e, region ( 1, 2, 3) is first region followed by region ( 1, 3, 4) and so on. So, we can color regions 1 and 3 with same color, as region number 2 is on the path from 1 to 3 and it has color 1 which is less than color of 1 and 3, i. e. , color number 2.",
    "topics": [
      "constructive algorithms",
      "data structures",
      "divide and conquer",
      "geometry",
      "graphs",
      "implementation",
      "trees"
    ],
    "id": "776F"
  },
  {
    "title": "Volatile Kite",
    "url": "https://codeforces.com/problemset/problem/772/B",
    "history": "You are given a convex polygon P with n distinct vertices p1, p2, . . . , pn. Vertex pi has coordinates ( xi, yi) in the 2D plane. These vertices are listed in clockwise order. You can choose a real number D and move each vertex of the polygon a distance of at most D from their original positions. Find the maximum value of D such that no matter how you move the vertices, the polygon does not intersect itself and stays convex.",
    "input": "The first line has one integer n ( 4 \u2264 n \u2264 1 000) \u2014 the number of vertices. The next n lines contain the coordinates of the vertices. Line i contains two integers xi and yi ( - 109 \u2264 xi, yi \u2264 109) \u2014 the coordinates of the i- th vertex. These points are guaranteed to be given in clockwise order, and will form a strictly convex polygon ( in particular, no three consecutive points lie on the same straight line) .",
    "output": "Print one real number D, which is the maximum real number such that no matter how you move the vertices, the polygon stays convex. Your answer will be considered correct if its absolute or relative error does not exceed 10 - 6. Namely, let' s assume that your answer is a and the answer of the jury is b. The checker program will consider your answer correct if .",
    "note": "Here is a picture of the first sampleHere is an example of making the polygon non- convex. This is not an optimal solution, since the maximum distance we moved one point is \u2248 0. 4242640687, whereas we can make it non- convex by only moving each point a distance of at most \u2248 0. 3535533906.",
    "topics": [
      "geometry"
    ],
    "id": "772B"
  },
  {
    "title": "Bear and Isomorphic Points",
    "url": "https://codeforces.com/problemset/problem/771/F",
    "history": "Bearland is a big square on the plane. It contains all points with coordinates not exceeding 106 by the absolute value. There are n houses in Bearland. The i- th of them is located at the point ( xi, yi) . The n points are distinct, but some subsets of them may be collinear. Bear Limak lives in the first house. He wants to destroy his house and build a new one somewhere in Bearland. Bears don' t like big changes. For every three points ( houses) pi, pj and pk, the sign of their cross product ( pj - pi) \u00d7 ( pk - pi) should be the same before and after the relocation. If it was negative/ positive/ zero, it should still be negative/ positive/ zero respectively. This condition should be satisfied for all triples of indices ( i, j, k) , possibly equal to each other or different than 1. Additionally, Limak isn' t allowed to build the house at the point where some other house already exists ( but it can be the point where his old house was) . In the formula above, we define the difference and the cross product of points ( ax, ay) and ( bx, by) as: ( ax, ay) - ( bx, by) = ( ax - bx, ay - by) , ( ax, ay) \u00d7 ( bx, by) = ax\u00b7by - ay\u00b7bx. Consider a set of possible new placements of Limak' s house. Your task is to find the area of that set of points. Formally, let' s say that Limak chooses the new placement randomly ( each coordinate is chosen independently uniformly at random from the interval [ - 106, 106] ) . Let p denote the probability of getting the allowed placement of new house. Let S denote the area of Bearland ( S = 4\u00b71012) . Your task is to find p\u00b7S.",
    "input": "The first line of the input contains an integer T ( 1 \u2264 T \u2264 500) \u2014 the number of test cases. The description of the test cases follows. The first line of the description of a test case contains an integer n ( 3 \u2264 n \u2264 200 000) \u2014 the number of houses. The i- th of the next n lines contains two integers xi and yi ( - 106 \u2264 xi, yi \u2264 106) \u2014 coordinates of the i- th house. No two houses are located at the same point in the same test case. Limak lives in the first house. The sum of n won' t exceed 200 000.",
    "output": "Print one real value, denoting the area of the set of points that are possible new placements of Limak' s house. Your answer will be considered correct if its absolute or relative error doesn' t exceed 10 - 6. More precisely, let the jury' s answer be b, and your answer be a. Then your answer will be accepted if and only if .",
    "note": "In the sample test, there are 4 test cases. In the first test case, there are four houses and Limak' s one is in ( 5, 3) . The set of valid new placements form a triangle with vertices in points ( 0, 1) , ( 10, 1) and ( 3, 51) , without its sides. The area of such a triangle is 250. In the second test case, the set of valid new placements form a rectangle of width 50 000 and height 2 000 000. Don' t forget that the new placement must be inside the big square that represents Bearland. In the third test case, the three given points are collinear. Each cross product is equal to 0 and it should be 0 after the relocation as well. Hence, Limak' s new house must lie on the line that goes through the given points. Since it must also be inside the big square, new possible placements are limited to some segment ( excluding the two points where the other houses are) . The area of any segment is 0.",
    "topics": [
      "geometry",
      "two pointers"
    ],
    "id": "771F"
  },
  {
    "title": "Mahmoud and a Triangle",
    "url": "https://codeforces.com/problemset/problem/766/B",
    "history": "Mahmoud has n line segments, the i- th of them has length ai. Ehab challenged him to use exactly 3 line segments to form a non- degenerate triangle. Mahmoud doesn' t accept challenges unless he is sure he can win, so he asked you to tell him if he should accept the challenge. Given the lengths of the line segments, check if he can choose exactly 3 of them to form a non- degenerate triangle. Mahmoud should use exactly 3 line segments, he can' t concatenate two line segments or change any length. A non- degenerate triangle is a triangle with positive area.",
    "input": "The first line contains single integer n ( 3 \u2264 n \u2264 105) \u2014 the number of line segments Mahmoud has. The second line contains n integers a1, a2, . . . , an ( 1 \u2264 ai \u2264 109) \u2014 the lengths of line segments Mahmoud has.",
    "output": "In the only line print \" YES\" if he can choose exactly three line segments and form a non- degenerate triangle with them, and \" NO\" otherwise.",
    "note": "For the first example, he can use line segments with lengths 2, 4 and 5 to form a non- degenerate triangle.",
    "topics": [
      "constructive algorithms",
      "geometry",
      "greedy",
      "math",
      "number theory",
      "sortings"
    ],
    "id": "766B"
  },
  {
    "title": "Timofey and rectangles",
    "url": "https://codeforces.com/problemset/problem/763/B",
    "history": "One of Timofey' s birthday presents is a colourbook in a shape of an infinite plane. On the plane n rectangles with sides parallel to coordinate axes are situated. All sides of the rectangles have odd length. Rectangles cannot intersect, but they can touch each other. Help Timofey to color his rectangles in 4 different colors in such a way that every two rectangles touching each other by side would have different color, or determine that it is impossible. Two rectangles intersect if their intersection has positive area. Two rectangles touch by sides if there is a pair of sides such that their intersection has non- zero length The picture corresponds to the first example",
    "input": "The first line contains single integer n ( 1 \u2264 n \u2264 5\u00b7105) \u2014 the number of rectangles. n lines follow. The i- th of these lines contains four integers x1, y1, x2 and y2 ( - 109 \u2264 x1 < x2 \u2264 109, - 109 \u2264 y1 < y2 \u2264 109) , that means that points ( x1, y1) and ( x2, y2) are the coordinates of two opposite corners of the i- th rectangle. It is guaranteed, that all sides of the rectangles have odd lengths and rectangles don' t intersect each other.",
    "output": "Print \" NO\" in the only line if it is impossible to color the rectangles in 4 different colors in such a way that every two rectangles touching each other by side would have different color. Otherwise, print \" YES\" in the first line. Then print n lines, in the i- th of them print single integer ci ( 1 \u2264 ci \u2264 4) \u2014 the color of i- th rectangle.",
    "note": "",
    "topics": [
      "constructive algorithms",
      "geometry"
    ],
    "id": "763B"
  },
  {
    "title": "New Year and North Pole",
    "url": "https://codeforces.com/problemset/problem/750/B",
    "history": "In this problem we assume the Earth to be a completely round ball and its surface a perfect sphere. The length of the equator and any meridian is considered to be exactly 40 000 kilometers. Thus, travelling from North Pole to South Pole or vice versa takes exactly 20 000 kilometers. Limak, a polar bear, lives on the North Pole. Close to the New Year, he helps somebody with delivering packages all around the world. Instead of coordinates of places to visit, Limak got a description how he should move, assuming that he starts from the North Pole. The description consists of n parts. In the i- th part of his journey, Limak should move ti kilometers in the direction represented by a string diri that is one of: \" North\" , \" South\" , \" West\" , \" East\" . Limak isn\u2019t sure whether the description is valid. You must help him to check the following conditions: If at any moment of time ( before any of the instructions or while performing one of them) Limak is on the North Pole, he can move only to the South. If at any moment of time ( before any of the instructions or while performing one of them) Limak is on the South Pole, he can move only to the North. The journey must end on the North Pole. Check if the above conditions are satisfied and print \" YES\" or \" NO\" on a single line.",
    "input": "The first line of the input contains a single integer n ( 1 \u2264 n \u2264 50) . The i- th of next n lines contains an integer ti and a string diri ( 1 \u2264 ti \u2264 106, ) \u2014 the length and the direction of the i- th part of the journey, according to the description Limak got.",
    "output": "Print \" YES\" if the description satisfies the three conditions, otherwise print \" NO\" , both without the quotes.",
    "note": "Drawings below show how Limak' s journey would look like in first two samples. In the second sample the answer is \" NO\" because he doesn' t end on the North Pole.",
    "topics": [
      "geometry",
      "implementation"
    ],
    "id": "750B"
  },
  {
    "title": "Parallelogram is Back",
    "url": "https://codeforces.com/problemset/problem/749/B",
    "history": "Long time ago Alex created an interesting problem about parallelogram. The input data for this problem contained four integer points on the Cartesian plane, that defined the set of vertices of some non- degenerate ( positive area) parallelogram. Points not necessary were given in the order of clockwise or counterclockwise traversal. Alex had very nice test for this problem, but is somehow happened that the last line of the input was lost and now he has only three out of four points of the original parallelogram. He remembers that test was so good that he asks you to restore it given only these three points.",
    "input": "The input consists of three lines, each containing a pair of integer coordinates xi and yi ( - 1000 \u2264 xi, yi \u2264 1000) . It' s guaranteed that these three points do not lie on the same line and no two of them coincide.",
    "output": "First print integer k \u2014 the number of ways to add one new integer point such that the obtained set defines some parallelogram of positive area. There is no requirement for the points to be arranged in any special order ( like traversal) , they just define the set of vertices. Then print k lines, each containing a pair of integer \u2014 possible coordinates of the fourth point.",
    "note": "If you need clarification of what parallelogram is, please check Wikipedia page: https: / / en. wikipedia. org/ wiki/ Parallelogram",
    "topics": [
      "brute force",
      "constructive algorithms",
      "geometry"
    ],
    "id": "749B"
  },
  {
    "title": "Hongcow Draws a Circle",
    "url": "https://codeforces.com/problemset/problem/744/D",
    "history": "Hongcow really likes the color red. Hongcow doesn' t like the color blue. Hongcow is standing in an infinite field where there are n red points and m blue points. Hongcow wants to draw a circle in the field such that this circle contains at least one red point, and no blue points. Points that line exactly on the boundary of the circle can be counted as either inside or outside. Compute the radius of the largest circle that satisfies this condition. If this circle can have arbitrarily large size, print - 1. Otherwise, your answer will be accepted if it has relative or absolute error at most 10 - 4.",
    "input": "The first line of the input will contain two integers n, m ( 1 \u2264 n, m \u2264 1, 000) . The next n lines will contain two integers xi, yi ( 1 \u2264 xi, yi \u2264 104) . This denotes the coordinates of a red point. The next m lines will contain two integers xi, yi ( 1 \u2264 xi, yi \u2264 104) . This denotes the coordinates of a blue point. No two points will have the same coordinates.",
    "output": "Print - 1 if the circle can have arbitrary size. Otherwise, print a floating point number representing the largest radius circle that satisfies the conditions. Your answer will be considered correct if its absolute or relative error does not exceed 10 - 4. Namely, let' s assume that your answer is a and the answer of the jury is b. The checker program will consider your answer correct if .",
    "note": "This is a picture of the first sample This is a picture of the second sample",
    "topics": [
      "geometry"
    ],
    "id": "744D"
  },
  {
    "title": "Cowboy Beblop at his computer",
    "url": "https://codeforces.com/problemset/problem/717/I",
    "history": "Cowboy Beblop is a funny little boy who likes sitting at his computer. He somehow obtained two elastic hoops in the shape of 2D polygons, which are not necessarily convex. Since there' s no gravity on his spaceship, the hoops are standing still in the air. Since the hoops are very elastic, Cowboy Beblop can stretch, rotate, translate or shorten their edges as much as he wants. For both hoops, you are given the number of their vertices, as well as the position of each vertex, defined by the X , Y and Z coordinates. The vertices are given in the order they' re connected: the 1st vertex is connected to the 2nd, which is connected to the 3rd, etc. , and the last vertex is connected to the first one. Two hoops are connected if it' s impossible to pull them to infinity in different directions by manipulating their edges, without having their edges or vertices intersect at any point \u2013 just like when two links of a chain are connected. The polygons' edges do not intersect or overlap. To make things easier, we say that two polygons are well- connected, if the edges of one polygon cross the area of the other polygon in two different directions ( from the upper and lower sides of the plane defined by that polygon) a different number of times. Cowboy Beblop is fascinated with the hoops he has obtained and he would like to know whether they are well- connected or not. Since he\u2019s busy playing with his dog, Zwei, he\u2019d like you to figure it out for him. He promised you some sweets if you help him!",
    "input": "The first line of input contains an integer n ( 3 \u2264 n \u2264 100 000) , which denotes the number of edges of the first polygon. The next N lines each contain the integers x, y and z ( - 1 000 000 \u2264 x, y, z \u2264 1 000 000) \u2014 coordinates of the vertices, in the manner mentioned above. The next line contains an integer m ( 3 \u2264 m \u2264 100 000) , denoting the number of edges of the second polygon, followed by m lines containing the coordinates of the second polygon\u2019s vertices. It is guaranteed that both polygons are simple ( no self- intersections) , and in general that the obtained polygonal lines do not intersect each other. Also, you can assume that no 3 consecutive points of a polygon lie on the same line.",
    "output": "Your output should contain only one line, with the words \" YES\" or \" NO\" , depending on whether the two given polygons are well- connected.",
    "note": "On the picture below, the two polygons are well- connected, as the edges of the vertical polygon cross the area of the horizontal one exactly once in one direction ( for example, from above to below) , and zero times in the other ( in this case, from below to above) . Note that the polygons do not have to be parallel to any of the xy- , xz- , yz- planes in general.",
    "topics": [
      "geometry"
    ],
    "id": "717I"
  },
  {
    "title": "Beru-taxi",
    "url": "https://codeforces.com/problemset/problem/706/A",
    "history": "Vasiliy lives at point ( a, b) of the coordinate plane. He is hurrying up to work so he wants to get out of his house as soon as possible. New app suggested n available Beru- taxi nearby. The i- th taxi is located at point ( xi, yi) and moves with a speed vi. Consider that each of n drivers will move directly to Vasiliy and with a maximum possible speed. Compute the minimum time when Vasiliy will get in any of Beru- taxi cars.",
    "input": "The first line of the input contains two integers a and b ( - 100 \u2264 a, b \u2264 100) \u2014 coordinates of Vasiliy' s home. The second line contains a single integer n ( 1 \u2264 n \u2264 1000) \u2014 the number of available Beru- taxi cars nearby. The i- th of the following n lines contains three integers xi, yi and vi ( - 100 \u2264 xi, yi \u2264 100, 1 \u2264 vi \u2264 100) \u2014 the coordinates of the i- th car and its speed. It' s allowed that several cars are located at the same point. Also, cars may be located at exactly the same point where Vasiliy lives.",
    "output": "Print a single real value \u2014 the minimum time Vasiliy needs to get in any of the Beru- taxi cars. You answer will be considered correct if its absolute or relative error does not exceed 10 - 6. Namely: let' s assume that your answer is a, and the answer of the jury is b. The checker program will consider your answer correct, if .",
    "note": "In the first sample, first taxi will get to Vasiliy in time 2, and second will do this in time 1, therefore 1 is the answer. In the second sample, cars 2 and 3 will arrive simultaneously.",
    "topics": [
      "brute force",
      "geometry",
      "implementation"
    ],
    "id": "706A"
  },
  {
    "title": "Iron Man",
    "url": "https://codeforces.com/problemset/problem/704/E",
    "history": "Tony Stark is playing a game with his suits ( they have auto- pilot now) . He lives in Malibu. Malibu has n junctions numbered from 1 to n, connected with n - 1 roads. One can get from a junction to any other junction using these roads ( graph of Malibu forms a tree) . Tony has m suits. There' s a special plan for each suit. The i- th suit will appear at the moment of time ti in the junction vi, and will move to junction ui using the shortest path between vi and ui with the speed ci roads per second ( passing a junctions takes no time) , and vanishing immediately when arriving at ui ( if it reaches ui in time q, it' s available there at moment q, but not in further moments) . Also, suits move continuously ( for example if vi = \u0338 ui, at time it' s in the middle of a road. Please note that if vi = ui it means the suit will be at junction number vi only at moment ti and then it vanishes. An explosion happens if at any moment of time two suits share the same exact location ( it may be in a junction or somewhere on a road; while appearing, vanishing or moving) . Your task is to tell Tony the moment of the the first explosion ( if there will be any) .",
    "input": "The first line of the input contains two integers n and m ( 1 \u2264 n, m \u2264 100 000) \u2014 the number of junctions and the number of suits respectively. The next n - 1 lines contain the roads descriptions. Each line contains two integers ai and bi \u2014 endpoints of the i- th road ( 1 \u2264 ai, bi \u2264 n, ai = \u0338 bi) . The next m lines contain the suit descriptions. The i- th of them contains four integers ti, ci, vi and ui ( 0 \u2264 ti \u2264 10 000, 1 \u2264 ci \u2264 10 000, 1 \u2264 vi, ui \u2264 n) , meaning the i- th suit will appear at moment of time ti at the junction vi and will move to the junction ui with a speed ci roads per second.",
    "output": "If there would be no explosions at all, print - 1 in the first and only line of output. Otherwise print the moment of the first explosion. Your answer will be considered correct if its relative or absolute error doesn' t exceed 10 - 6.",
    "note": "",
    "topics": [
      "data structures",
      "geometry",
      "trees"
    ],
    "id": "704E"
  },
  {
    "title": "Chris and Road",
    "url": "https://codeforces.com/problemset/problem/703/C",
    "history": "And while Mishka is enjoying her trip. . . Chris is a little brown bear. No one knows, where and when he met Mishka, but for a long time they are together ( excluding her current trip) . However, best friends are important too. John is Chris' best friend. Once walking with his friend, John gave Chris the following problem: At the infinite horizontal road of width w, bounded by lines y = 0 and y = w, there is a bus moving, presented as a convex polygon of n vertices. The bus moves continuously with a constant speed of v in a straight Ox line in direction of decreasing x coordinates, thus in time only x coordinates of its points are changing. Formally, after time t each of x coordinates of its points will be decreased by vt. There is a pedestrian in the point ( 0, 0) , who can move only by a vertical pedestrian crossing, presented as a segment connecting points ( 0, 0) and ( 0, w) with any speed not exceeding u. Thus the pedestrian can move only in a straight line Oy in any direction with any speed not exceeding u and not leaving the road borders. The pedestrian can instantly change his speed, thus, for example, he can stop instantly. Please look at the sample note picture for better understanding. We consider the pedestrian is hit by the bus, if at any moment the point he is located in lies strictly inside the bus polygon ( this means that if the point lies on the polygon vertex or on its edge, the pedestrian is not hit by the bus) . You are given the bus position at the moment 0. Please help Chris determine minimum amount of time the pedestrian needs to cross the road and reach the point ( 0, w) and not to be hit by the bus.",
    "input": "The first line of the input contains four integers n, w, v, u ( 3 \u2264 n \u2264 10 000, 1 \u2264 w \u2264 109, 1 \u2264 v, u \u2264 1000) \u2014 the number of the bus polygon vertices, road width, bus speed and pedestrian speed respectively. The next n lines describes polygon vertices in counter- clockwise order. i- th of them contains pair of integers xi and yi ( - 109 \u2264 xi \u2264 109, 0 \u2264 yi \u2264 w) \u2014 coordinates of i- th polygon point. It is guaranteed that the polygon is non- degenerate.",
    "output": "Print the single real t \u2014 the time the pedestrian needs to croos the road and not to be hit by the bus. The answer is considered correct if its relative or absolute error doesn' t exceed 10 - 6.",
    "note": "Following image describes initial position in the first sample case:",
    "topics": [
      "geometry",
      "implementation"
    ],
    "id": "703C"
  },
  {
    "title": "Limak and Shooting Points",
    "url": "https://codeforces.com/problemset/problem/698/D",
    "history": "Bearland is a dangerous place. Limak can\u2019t travel on foot. Instead, he has k magic teleportation stones. Each stone can be used at most once. The i- th stone allows to teleport to a point ( axi, ayi) . Limak can use stones in any order. There are n monsters in Bearland. The i- th of them stands at ( mxi, myi) . The given k + n points are pairwise distinct. After each teleportation, Limak can shoot an arrow in some direction. An arrow will hit the first monster in the chosen direction. Then, both an arrow and a monster disappear. It\u2019s dangerous to stay in one place for long, so Limak can shoot only one arrow from one place. A monster should be afraid if it\u2019s possible that Limak will hit it. How many monsters should be afraid of Limak?",
    "input": "The first line of the input contains two integers k and n ( 1 \u2264 k \u2264 7, 1 \u2264 n \u2264 1000) \u2014 the number of stones and the number of monsters. The i- th of following k lines contains two integers axi and ayi ( - 109 \u2264 axi, ayi \u2264 109) \u2014 coordinates to which Limak can teleport using the i- th stone. The i- th of last n lines contains two integers mxi and myi ( - 109 \u2264 mxi, myi \u2264 109) \u2014 coordinates of the i- th monster. The given k + n points are pairwise distinct.",
    "output": "Print the number of monsters which should be afraid of Limak.",
    "note": "In the first sample, there are two stones and four monsters. Stones allow to teleport to points ( - 2, - 1) and ( 4, 5) , marked blue in the drawing below. Monsters are at ( 4, 2) , ( 2, 1) , ( 4, - 1) and ( 1, - 1) , marked red. A monster at ( 4, - 1) shouldn' t be afraid because it' s impossible that Limak will hit it with an arrow. Other three monsters can be hit and thus the answer is 3. In the second sample, five monsters should be afraid. Safe monsters are those at ( 300, 600) , ( 170, 340) and ( 90, 180) .",
    "topics": [
      "brute force",
      "geometry",
      "math"
    ],
    "id": "698D"
  },
  {
    "title": "...Dary!",
    "url": "https://codeforces.com/problemset/problem/696/F",
    "history": "Barney has finally found the one, a beautiful young lady named Lyanna. The problem is, Lyanna and Barney are trapped in Lord Loss' castle. This castle has shape of a convex polygon of n points. Like most of castles in Demonata worlds, this castle has no ceiling. Barney and Lyanna have an escape plan, but it requires some geometry knowledge, so they asked for your help. Barney knows that demons are organized and move in lines. He and Lyanna want to wait for the appropriate time so they need to watch for the demons. Each of them wants to stay in a point inside the castle ( possibly on edges or corners) , also they may stay in the same position. They both want to pick a real number r and watch all points in the circles with radius r around each of them ( these two circles may overlap) . We say that Barney and Lyanna are watching carefully if and only if for every edge of the polygon, at least one of them can see at least one point on the line this edge lies on, thus such point may not be on the edge but it should be on edge' s line. Formally, each edge line should have at least one common point with at least one of two circles. The greater r is, the more energy and focus they need. So they asked you to tell them the minimum value of r such that they can watch carefully.",
    "input": "The first line of input contains a single integer n ( 3 \u2264 n \u2264 300) \u2014 the number of castle polygon vertices. The next n lines describe the polygon vertices in counter- clockwise order. i- th of them contains two integers xi and yi ( | xi| , | yi| \u2264 104) \u2014 the coordinates of i- th point of the castle. It is guaranteed that given points form a convex polygon, in particular, any three of them do not line on the same line.",
    "output": "In the first line print the single number r \u2014 minimum radius of guys' watching circles. In the second line print the pair of coordinates of point where Barney should stay. In the third line print the pair of coordinates of point where Lyanna should stay. Points should lie inside the polygon. Coordinates may not be integers. If there are multiple answers print any of them. Your answer will be considered correct if its absolute or relative error doesn' t exceed 10 - 6.",
    "note": "In the first example guys can stay in opposite corners of the castle.",
    "topics": [
      "binary search",
      "geometry",
      "two pointers"
    ],
    "id": "696F"
  },
  {
    "title": "Recover Polygon (medium)",
    "url": "https://codeforces.com/problemset/problem/690/B2",
    "history": "Now that Heidi has made sure her Zombie Contamination level checker works, it' s time to strike! This time, the zombie lair is a strictly convex polygon on the lattice. Each vertex of the polygon occupies a point on the lattice. For each cell of the lattice, Heidi knows the level of Zombie Contamination \u2013 the number of corners of the cell that are inside or on the border of the lair. Given this information, Heidi wants to know the exact shape of the lair to rain destruction on the zombies. Help her!",
    "input": "The input contains multiple test cases. The first line of each test case contains one integer N, the size of the lattice grid ( 5 \u2264 N \u2264 500) . The next N lines each contain N characters, describing the level of Zombie Contamination of each cell in the lattice. Every character of every line is a digit between 0 and 4. Cells are given in the same order as they are shown in the picture above: rows go in the decreasing value of y coordinate, and in one row cells go in the order of increasing x coordinate. This means that the first row corresponds to cells with coordinates ( 1, N) , . . . , ( N, N) and the last row corresponds to cells with coordinates ( 1, 1) , . . . , ( N, 1) . The last line of the file contains a zero. This line should not be treated as a test case. The sum of the N values for all tests in one file will not exceed 5000.",
    "output": "For each test case, give the following output: The first line of the output should contain one integer V, the number of vertices of the polygon that is the secret lair. The next V lines each should contain two integers, denoting the vertices of the polygon in the clockwise order, starting from the lexicographically smallest vertex.",
    "note": "It is guaranteed that the solution always exists and is unique. It is guaranteed that in the correct solution the coordinates of the polygon vertices are between 2 and N - 2. A vertex ( x1, y1) is lexicographically smaller than vertex ( x2, y2) if x1 < x2 or .",
    "topics": [
      "geometry"
    ],
    "id": "690B2"
  },
  {
    "title": "Mike and Geometry Problem",
    "url": "https://codeforces.com/problemset/problem/689/E",
    "history": "Mike wants to prepare for IMO but he doesn' t know geometry, so his teacher gave him an interesting geometry problem. Let' s define f( [ l, r] ) = r - l + 1 to be the number of integer points in the segment [ l, r] with l \u2264 r ( say that ) . You are given two integers n and k and n closed intervals [ li, ri] on OX axis and you have to find: In other words, you should find the sum of the number of integer points in the intersection of any k of the segments. As the answer may be very large, output it modulo 1000000007 ( 109 + 7) . Mike can' t solve this problem so he needs your help. You will help him, won' t you?",
    "input": "The first line contains two integers n and k ( 1 \u2264 k \u2264 n \u2264 200 000) \u2014 the number of segments and the number of segments in intersection groups respectively. Then n lines follow, the i- th line contains two integers li, ri ( - 109 \u2264 li \u2264 ri \u2264 109) , describing i- th segment bounds.",
    "output": "Print one integer number \u2014 the answer to Mike' s problem modulo 1000000007 ( 109 + 7) in the only line.",
    "note": "In the first example: ; ; . So the answer is 2 + 1 + 2 = 5.",
    "topics": [
      "combinatorics",
      "data structures",
      "dp",
      "geometry",
      "implementation"
    ],
    "id": "689E"
  },
  {
    "title": "The Check of the Point",
    "url": "https://codeforces.com/problemset/problem/683/A",
    "history": "On the coordinate plane there is a square with sides parallel to the coordinate axes. The length of the square side is equal to a. The lower left corner of the square coincides with the point ( 0, 0) ( the point of the origin) . The upper right corner of the square has positive coordinates. You are given a point with coordinates ( x, y) . Your task is to determine whether this point is located strictly inside the square, on its side, or strictly outside the square.",
    "input": "The first line contains three integers a, x and y ( 1 \u2264 a \u2264 1000, - 1000 \u2264 x, y \u2264 1000) \u2014 the length of the square side and the coordinates of the point which should be checked.",
    "output": "Print one integer: 0, if the point is located strictly inside the square; 1, if the point is located on the side of the square; 2, if the point is located strictly outside the square.",
    "note": "",
    "topics": [
      "*special",
      "geometry"
    ],
    "id": "683A"
  },
  {
    "title": "Alyona and Triangles",
    "url": "https://codeforces.com/problemset/problem/682/E",
    "history": "You are given n points with integer coordinates on the plane. Points are given in a way such that there is no triangle, formed by any three of these n points, which area exceeds S. Alyona tried to construct a triangle with integer coordinates, which contains all n points and which area doesn' t exceed 4S, but, by obvious reason, had no success in that. Please help Alyona construct such triangle. Please note that vertices of resulting triangle are not necessarily chosen from n given points.",
    "input": "In the first line of the input two integers n and S ( 3 \u2264 n \u2264 5000, 1 \u2264 S \u2264 1018) are given \u2014 the number of points given and the upper bound value of any triangle' s area, formed by any three of given n points. The next n lines describes given points: ith of them consists of two integers xi and yi ( - 108 \u2264 xi, yi \u2264 108) \u2014 coordinates of ith point. It is guaranteed that there is at least one triple of points not lying on the same line.",
    "output": "Print the coordinates of three points \u2014 vertices of a triangle which contains all n points and which area doesn' t exceed 4S. Coordinates of every triangle' s vertex should be printed on a separate line, every coordinate pair should be separated by a single space. Coordinates should be an integers not exceeding 109 by absolute value. It is guaranteed that there is at least one desired triangle. If there is more than one answer, print any of them.",
    "note": "",
    "topics": [
      "geometry",
      "two pointers"
    ],
    "id": "682E"
  },
  {
    "title": "Runaway to a Shadow",
    "url": "https://codeforces.com/problemset/problem/681/E",
    "history": "Dima is living in a dormitory, as well as some cockroaches. At the moment 0 Dima saw a cockroach running on a table and decided to kill it. Dima needs exactly T seconds for aiming, and after that he will precisely strike the cockroach and finish it. To survive the cockroach has to run into a shadow, cast by round plates standing on the table, in T seconds. Shadow casted by any of the plates has the shape of a circle. Shadow circles may intersect, nest or overlap arbitrarily. The cockroach uses the following strategy: first he equiprobably picks a direction to run towards and then runs towards it with the constant speed v. If at some moment t \u2264 T it reaches any shadow circle, it immediately stops in the shadow and thus will stay alive. Otherwise the cockroach is killed by the Dima' s precise strike. Consider that the Dima' s precise strike is instant. Determine the probability of that the cockroach will stay alive.",
    "input": "In the first line of the input the four integers x0, y0, v, T ( | x0| , | y0| \u2264 109, 0 \u2264 v, T \u2264 109) are given \u2014 the cockroach initial position on the table in the Cartesian system at the moment 0, the cockroach' s constant speed and the time in seconds Dima needs for aiming respectively. In the next line the only number n ( 1 \u2264 n \u2264 100 000) is given \u2014 the number of shadow circles casted by plates. In the next n lines shadow circle description is given: the ith of them consists of three integers xi, yi, ri ( | xi| , | yi| \u2264 109, 0 \u2264 r \u2264 109) \u2014 the ith shadow circle on- table position in the Cartesian system and its radius respectively. Consider that the table is big enough for the cockroach not to run to the table edges and avoid Dima' s precise strike.",
    "output": "Print the only real number p \u2014 the probability of that the cockroach will stay alive. Your answer will be considered correct if its absolute or relative error does not exceed 10 - 4.",
    "note": "The picture for the first sample is given below. Red color stands for points which being chosen as the cockroach' s running direction will cause him being killed, green color for those standing for survival directions. Please note that despite containing a circle centered in ( - 2, 2) a part of zone is colored red because the cockroach is not able to reach it in one second.",
    "topics": [
      "geometry",
      "sortings"
    ],
    "id": "681E"
  },
  {
    "title": "Lena and Queries",
    "url": "https://codeforces.com/problemset/problem/678/F",
    "history": "Lena is a programmer. She got a task to solve at work. There is an empty set of pairs of integers and n queries to process. Each query is one of three types: Add a pair ( a, b) to the set. Remove a pair added in the query number i. All queries are numbered with integers from 1 to n. For a given integer q find the maximal value x\u00b7q + y over all pairs ( x, y) from the set. Help Lena to process the queries.",
    "input": "The first line of input contains integer n ( 1 \u2264 n \u2264 3\u00b7105) \u2014 the number of queries. Each of the next n lines starts with integer t ( 1 \u2264 t \u2264 3) \u2014 the type of the query. A pair of integers a and b ( - 109 \u2264 a, b \u2264 109) follows in the query of the first type. An integer i ( 1 \u2264 i \u2264 n) follows in the query of the second type. It is guaranteed that i is less than the number of the query, the query number i has the first type and the pair from the i- th query is not already removed. An integer q ( - 109 \u2264 q \u2264 109) follows in the query of the third type.",
    "output": "For the queries of the third type print on a separate line the desired maximal value of x\u00b7q + y. If there are no pairs in the set print \" EMPTY SET\" .",
    "note": "",
    "topics": [
      "data structures",
      "divide and conquer",
      "geometry"
    ],
    "id": "678F"
  },
  {
    "title": "Recycling Bottles",
    "url": "https://codeforces.com/problemset/problem/671/A",
    "history": "It was recycling day in Kekoland. To celebrate it Adil and Bera went to Central Perk where they can take bottles from the ground and put them into a recycling bin. We can think Central Perk as coordinate plane. There are n bottles on the ground, the i- th bottle is located at position ( xi, yi) . Both Adil and Bera can carry only one bottle at once each. For both Adil and Bera the process looks as follows: Choose to stop or to continue to collect bottles. If the choice was to continue then choose some bottle and walk towards it. Pick this bottle and walk to the recycling bin. Go to step 1. Adil and Bera may move independently. They are allowed to pick bottles simultaneously, all bottles may be picked by any of the two, it' s allowed that one of them stays still while the other one continues to pick bottles. They want to organize the process such that the total distance they walk ( the sum of distance walked by Adil and distance walked by Bera) is minimum possible. Of course, at the end all bottles should lie in the recycling bin.",
    "input": "First line of the input contains six integers ax, ay, bx, by, tx and ty ( 0 \u2264 ax, ay, bx, by, tx, ty \u2264 109) \u2014 initial positions of Adil, Bera and recycling bin respectively. The second line contains a single integer n ( 1 \u2264 n \u2264 100 000) \u2014 the number of bottles on the ground. Then follow n lines, each of them contains two integers xi and yi ( 0 \u2264 xi, yi \u2264 109) \u2014 position of the i- th bottle. It' s guaranteed that positions of Adil, Bera, recycling bin and all bottles are distinct.",
    "output": "Print one real number \u2014 the minimum possible total distance Adil and Bera need to walk in order to put all bottles into recycling bin. Your answer will be considered correct if its absolute or relative error does not exceed 10 - 6. Namely: let' s assume that your answer is a, and the answer of the jury is b. The checker program will consider your answer correct if .",
    "note": "Consider the first sample. Adil will use the following path: . Bera will use the following path: . Adil' s path will be units long, while Bera' s path will be units long.",
    "topics": [
      "dp",
      "geometry",
      "greedy",
      "implementation"
    ],
    "id": "671A"
  },
  {
    "title": "Coat of Anticubism",
    "url": "https://codeforces.com/problemset/problem/667/B",
    "history": "As some of you know, cubism is a trend in art, where the problem of constructing volumetrical shape on a plane with a combination of three- dimensional geometric shapes comes to the fore. A famous sculptor Cicasso, whose self- portrait you can contemplate, hates cubism. He is more impressed by the idea to transmit two- dimensional objects through three- dimensional objects by using his magnificent sculptures. And his new project is connected with this. Cicasso wants to make a coat for the haters of anticubism. To do this, he wants to create a sculpture depicting a well- known geometric primitive \u2014 convex polygon. Cicasso prepared for this a few blanks, which are rods with integer lengths, and now he wants to bring them together. The i- th rod is a segment of length li. The sculptor plans to make a convex polygon with a nonzero area, using all rods he has as its sides. Each rod should be used as a side to its full length. It is forbidden to cut, break or bend rods. However, two sides may form a straight angle . Cicasso knows that it is impossible to make a convex polygon with a nonzero area out of the rods with the lengths which he had chosen. Cicasso does not want to leave the unused rods, so the sculptor decides to make another rod- blank with an integer length so that his problem is solvable. Of course, he wants to make it as short as possible, because the materials are expensive, and it is improper deed to spend money for nothing. Help sculptor!",
    "input": "The first line contains an integer n ( 3 \u2264 n \u2264 105) \u2014 a number of rod- blanks. The second line contains n integers li ( 1 \u2264 li \u2264 109) \u2014 lengths of rods, which Cicasso already has. It is guaranteed that it is impossible to make a polygon with n vertices and nonzero area using the rods Cicasso already has.",
    "output": "Print the only integer z \u2014 the minimum length of the rod, so that after adding it it can be possible to construct convex polygon with ( n + 1) vertices and nonzero area from all of the rods.",
    "note": "In the first example triangle with sides 1 + 1 = 2, 2, 1 can be formed from a set of lengths 1, 1, 1, 2. In the second example you can make a triangle with lengths 20, 11, 4 + 3 + 2 + 1 = 10.",
    "topics": [
      "constructive algorithms",
      "geometry"
    ],
    "id": "667B"
  },
  {
    "title": "Pouring Rain",
    "url": "https://codeforces.com/problemset/problem/667/A",
    "history": "A lot of people in Berland hates rain, but you do not. Rain pacifies, puts your thoughts in order. By these years you have developed a good tradition \u2014 when it rains, you go on the street and stay silent for a moment, contemplate all around you, enjoy freshness, think about big deeds you have to do. Today everything had changed quietly. You went on the street with a cup contained water, your favorite drink. In a moment when you were drinking a water you noticed that the process became quite long: the cup still contained water because of rain. You decided to make a formal model of what was happening and to find if it was possible to drink all water in that situation. Thus, your cup is a cylinder with diameter equals d centimeters. Initial level of water in cup equals h centimeters from the bottom. You drink a water with a speed equals v milliliters per second. But rain goes with such speed that if you do not drink a water from the cup, the level of water increases on e centimeters per second. The process of drinking water from the cup and the addition of rain to the cup goes evenly and continuously. Find the time needed to make the cup empty or find that it will never happen. It is guaranteed that if it is possible to drink all water, it will happen not later than after 104 seconds. Note one milliliter equals to one cubic centimeter.",
    "input": "The only line of the input contains four integer numbers d, h, v, e ( 1 \u2264 d, h, v, e \u2264 104) , where: d \u2014 the diameter of your cylindrical cup, h \u2014 the initial level of water in the cup, v \u2014 the speed of drinking process from the cup in milliliters per second, e \u2014 the growth of water because of rain if you do not drink from the cup.",
    "output": "If it is impossible to make the cup empty, print \" NO\" ( without quotes) . Otherwise print \" YES\" ( without quotes) in the first line. In the second line print a real number \u2014 time in seconds needed the cup will be empty. The answer will be considered correct if its relative or absolute error doesn' t exceed 10 - 4. It is guaranteed that if the answer exists, it doesn' t exceed 104.",
    "note": "In the first example the water fills the cup faster than you can drink from it. In the second example area of the cup' s bottom equals to , thus we can conclude that you decrease the level of water by centimeters per second. At the same time water level increases by 1 centimeter per second due to rain. Thus, cup will be empty in seconds.",
    "topics": [
      "geometry",
      "math"
    ],
    "id": "667A"
  },
  {
    "title": "Chain Reaction",
    "url": "https://codeforces.com/problemset/problem/666/D",
    "history": "Group of Berland scientists, with whom you have a close business relationship, makes a research in the area of peaceful nuclear energy. In particular, they found that a group of four nanobots, placed on a surface of a plate, can run a powerful chain reaction under certain conditions. To be precise, researchers introduced a rectangular Cartesian coordinate system on a flat plate and selected four distinct points with integer coordinates where bots will be placed initially. Next each bot will be assigned with one of the four directions ( up, down, left or right) parallel to the coordinate axes. After that, each bot is shifted by an integer distance ( which may be different for different bots) along its direction. The chain reaction starts, if the bots are in the corners of a square with positive area with sides parallel to the coordinate axes. Each corner of the square must contain one nanobot. This reaction will be stronger, if bots spend less time to move. We can assume that bots move with unit speed. In other words, the lesser is the maximum length traveled by bot, the stronger is reaction. Scientists have prepared a set of plates and selected starting position for the bots for each plate. Now they ask you to assign the direction for each bot to move after landing such that the maximum length traveled by bot is as small as possible.",
    "input": "The first line contains an integer number t ( 1 \u2264 t \u2264 50) \u2014 the number of plates. t descriptions of plates follow. A description of each plate consists of four lines. Each line consists of a pair of integers numbers xi, yi ( - 108 \u2264 xi, yi \u2264 108) \u2014 coordinates of the next bot. All bots are in different locations. Note, though, the problem can include several records in one test, you can hack other people' s submissions only with the test of one plate, i. e. parameter t in a hack test should be equal to 1.",
    "output": "Print answers for all plates separately. First goes a single integer number in a separate line. If scientists have made an unfortunate mistake and nanobots are not able to form the desired square, print - 1. Otherwise, print the minimum possible length of the longest bot' s path. If a solution exists, in the next four lines print two integer numbers \u2014 positions of each bot after moving. Print bots' positions in the order they are specified in the input data. If there are multiple solution, you can print any of them.",
    "note": "",
    "topics": [
      "brute force",
      "geometry"
    ],
    "id": "666D"
  },
  {
    "title": "Bear and Bowling 4",
    "url": "https://codeforces.com/problemset/problem/660/F",
    "history": "Limak is an old brown bear. He often goes bowling with his friends. Today he feels really good and tries to beat his own record! For rolling a ball one gets a score \u2014 an integer ( maybe negative) number of points. Score for the i- th roll is multiplied by i and scores are summed up. So, for k rolls with scores s1, s2, . . . , sk, the total score is . The total score is 0 if there were no rolls. Limak made n rolls and got score ai for the i- th of them. He wants to maximize his total score and he came up with an interesting idea. He can say that some first rolls were only a warm- up, and that he wasn' t focused during the last rolls. More formally, he can cancel any prefix and any suffix of the sequence a1, a2, . . . , an. It is allowed to cancel all rolls, or to cancel none of them. The total score is calculated as if there were only non- canceled rolls. So, the first non- canceled roll has score multiplied by 1, the second one has score multiplied by 2, and so on, till the last non- canceled roll. What maximum total score can Limak get?",
    "input": "The first line contains a single integer n ( 1 \u2264 n \u2264 2\u00b7105) \u2014 the total number of rolls made by Limak. The second line contains n integers a1, a2, . . . , an ( | ai| \u2264 107) \u2014 scores for Limak' s rolls.",
    "output": "Print the maximum possible total score after cancelling rolls.",
    "note": "In the first sample test, Limak should cancel the first two rolls, and one last roll. He will be left with rolls 1, - 3, 7 what gives him the total score 1\u00b71 + 2\u00b7( - 3) + 3\u00b77 = 1 - 6 + 21 = 16.",
    "topics": [
      "binary search",
      "data structures",
      "divide and conquer",
      "geometry",
      "ternary search"
    ],
    "id": "660F"
  },
  {
    "title": "Number of Parallelograms",
    "url": "https://codeforces.com/problemset/problem/660/D",
    "history": "You are given n points on a plane. All the points are distinct and no three of them lie on the same line. Find the number of parallelograms with the vertices at the given points.",
    "input": "The first line of the input contains integer n ( 1 \u2264 n \u2264 2000) \u2014 the number of points. Each of the next n lines contains two integers ( xi, yi) ( 0 \u2264 xi, yi \u2264 109) \u2014 the coordinates of the i- th point.",
    "output": "Print the only integer c \u2014 the number of parallelograms with the vertices at the given points.",
    "note": "",
    "topics": [
      "geometry"
    ],
    "id": "660D"
  },
  {
    "title": "Bicycle Race",
    "url": "https://codeforces.com/problemset/problem/659/D",
    "history": "Maria participates in a bicycle race. The speedway takes place on the shores of Lake Lucerne, just repeating its contour. As you know, the lake shore consists only of straight sections, directed to the north, south, east or west. Let' s introduce a system of coordinates, directing the Ox axis from west to east, and the Oy axis from south to north. As a starting position of the race the southernmost point of the track is selected ( and if there are several such points, the most western among them) . The participants start the race, moving to the north. At all straight sections of the track, the participants travel in one of the four directions ( north, south, east or west) and change the direction of movement only in bends between the straight sections. The participants, of course, never turn back, that is, they do not change the direction of movement from north to south or from east to west ( or vice versa) . Maria is still young, so she does not feel confident at some turns. Namely, Maria feels insecure if at a failed or untimely turn, she gets into the water. In other words, Maria considers the turn dangerous if she immediately gets into the water if it is ignored. Help Maria get ready for the competition \u2014 determine the number of dangerous turns on the track.",
    "input": "The first line of the input contains an integer n ( 4 \u2264 n \u2264 1000) \u2014 the number of straight sections of the track. The following ( n + 1) - th line contains pairs of integers ( xi, yi) ( - 10 000 \u2264 xi, yi \u2264 10 000) . The first of these points is the starting position. The i- th straight section of the track begins at the point ( xi, yi) and ends at the point ( xi + 1, yi + 1) . It is guaranteed that: the first straight section is directed to the north; the southernmost ( and if there are several, then the most western of among them) point of the track is the first point; the last point coincides with the first one ( i. e. , the start position) ; any pair of straight sections of the track has no shared points ( except for the neighboring ones, they share exactly one point) ; no pair of points ( except for the first and last one) is the same; no two adjacent straight sections are directed in the same direction or in opposite directions.",
    "output": "Print a single integer \u2014 the number of dangerous turns on the track.",
    "note": "The first sample corresponds to the picture: The picture shows that you can get in the water under unfortunate circumstances only at turn at the point ( 1, 1) . Thus, the answer is 1.",
    "topics": [
      "geometry",
      "implementation",
      "math"
    ],
    "id": "659D"
  },
  {
    "title": "Watchmen",
    "url": "https://codeforces.com/problemset/problem/650/A",
    "history": "Watchmen are in a danger and Doctor Manhattan together with his friend Daniel Dreiberg should warn them as soon as possible. There are n watchmen on a plane, the i- th watchman is located at point ( xi, yi) . They need to arrange a plan, but there are some difficulties on their way. As you know, Doctor Manhattan considers the distance between watchmen i and j to be | xi - xj| + | yi - yj| . Daniel, as an ordinary person, calculates the distance using the formula . The success of the operation relies on the number of pairs ( i, j) ( 1 \u2264 i < j \u2264 n) , such that the distance between watchman i and watchmen j calculated by Doctor Manhattan is equal to the distance between them calculated by Daniel. You were asked to compute the number of such pairs.",
    "input": "The first line of the input contains the single integer n ( 1 \u2264 n \u2264 200 000) \u2014 the number of watchmen. Each of the following n lines contains two integers xi and yi ( | xi| , | yi| \u2264 109) . Some positions may coincide.",
    "output": "Print the number of pairs of watchmen such that the distance between them calculated by Doctor Manhattan is equal to the distance calculated by Daniel.",
    "note": "In the first sample, the distance between watchman 1 and watchman 2 is equal to | 1 - 7| + | 1 - 5| = 10 for Doctor Manhattan and for Daniel. For pairs ( 1, 1) , ( 1, 5) and ( 7, 5) , ( 1, 5) Doctor Manhattan and Daniel will calculate the same distances.",
    "topics": [
      "data structures",
      "geometry",
      "math"
    ],
    "id": "650A"
  },
  {
    "title": "Armistice Area Apportionment",
    "url": "https://codeforces.com/problemset/problem/645/G",
    "history": "After a drawn- out mooclear arms race, Farmer John and the Mischievous Mess Makers have finally agreed to establish peace. They plan to divide the territory of Bovinia with a line passing through at least two of the n outposts scattered throughout the land. These outposts, remnants of the conflict, are located at the points ( x1, y1) , ( x2, y2) , . . . , ( xn, yn) . In order to find the optimal dividing line, Farmer John and Elsie have plotted a map of Bovinia on the coordinate plane. Farmer John' s farm and the Mischievous Mess Makers' base are located at the points P = ( a, 0) and Q = ( - a, 0) , respectively. Because they seek a lasting peace, Farmer John and Elsie would like to minimize the maximum difference between the distances from any point on the line to P and Q. Formally, define the difference of a line relative to two points P and Q as the smallest real number d so that for all points X on line , | PX - QX| \u2264 d. ( It is guaranteed that d exists and is unique. ) They wish to find the line passing through two distinct outposts ( xi, yi) and ( xj, yj) such that the difference of relative to P and Q is minimized.",
    "input": "The first line of the input contains two integers n and a ( 2 \u2264 n \u2264 100 000, 1 \u2264 a \u2264 10 000) \u2014 the number of outposts and the coordinates of the farm and the base, respectively. The following n lines describe the locations of the outposts as pairs of integers ( xi, yi) ( | xi| , | yi| \u2264 10 000) . These points are distinct from each other as well as from P and Q.",
    "output": "Print a single real number\u2014the difference of the optimal dividing line. Your answer will be considered correct if its absolute or relative error does not exceed 10 - 6. Namely: let' s assume that your answer is a, and the answer of the jury is b. The checker program will consider your answer correct, if .",
    "note": "In the first sample case, the only possible line is y = x - 1. It can be shown that the point X which maximizes | PX - QX| is ( 13, 12) , with , which is . In the second sample case, if we pick the points ( 0, 1) and ( 0, - 3) , we get as x = 0. Because PX = QX on this line, the minimum possible difference is 0.",
    "topics": [
      "binary search",
      "geometry"
    ],
    "id": "645G"
  },
  {
    "title": "Product Sum",
    "url": "https://codeforces.com/problemset/problem/631/E",
    "history": "Blake is the boss of Kris, however, this doesn' t spoil their friendship. They often gather at the bar to talk about intriguing problems about maximising some values. This time the problem is really special. You are given an array a of length n. The characteristic of this array is the value \u2014 the sum of the products of the values ai by i. One may perform the following operation exactly once: pick some element of the array and move to any position. In particular, it' s allowed to move the element to the beginning or to the end of the array. Also, it' s allowed to put it back to the initial position. The goal is to get the array with the maximum possible value of characteristic.",
    "input": "The first line of the input contains a single integer n ( 2 \u2264 n \u2264 200 000) \u2014 the size of the array a. The second line contains n integers ai ( 1 \u2264 i \u2264 n, | ai| \u2264 1 000 000) \u2014 the elements of the array a.",
    "output": "Print a single integer \u2014 the maximum possible value of characteristic of a that can be obtained by performing no more than one move.",
    "note": "In the first sample, one may pick the first element and place it before the third ( before 5) . Thus, the answer will be 3\u00b71 + 2\u00b72 + 4\u00b73 + 5\u00b74 = 39. In the second sample, one may pick the fifth element of the array and place it before the third. The answer will be 1\u00b71 + 1\u00b72 + 1\u00b73 + 2\u00b74 + 7\u00b75 = 49.",
    "topics": [
      "data structures",
      "dp",
      "geometry"
    ],
    "id": "631E"
  },
  {
    "title": "Pyramids",
    "url": "https://codeforces.com/problemset/problem/630/Q",
    "history": "IT City administration has no rest because of the fame of the Pyramids in Egypt. There is a project of construction of pyramid complex near the city in the place called Emerald Walley. The distinction of the complex is that its pyramids will be not only quadrangular as in Egypt but also triangular and pentagonal. Of course the amount of the city budget funds for the construction depends on the pyramids' volume. Your task is to calculate the volume of the pilot project consisting of three pyramids \u2014 one triangular, one quadrangular and one pentagonal. The first pyramid has equilateral triangle as its base, and all 6 edges of the pyramid have equal length. The second pyramid has a square as its base and all 8 edges of the pyramid have equal length. The third pyramid has a regular pentagon as its base and all 10 edges of the pyramid have equal length.",
    "input": "The only line of the input contains three integers l3, l4, l5 ( 1 \u2264 l3, l4, l5 \u2264 1000) \u2014 the edge lengths of triangular, quadrangular and pentagonal pyramids correspondingly.",
    "output": "Output one number \u2014 the total volume of the pyramids. Absolute or relative error should not be greater than 10 - 9.",
    "note": "",
    "topics": [
      "geometry",
      "math"
    ],
    "id": "630Q"
  },
  {
    "title": "Area of a Star",
    "url": "https://codeforces.com/problemset/problem/630/P",
    "history": "It was decided in IT City to distinguish successes of local IT companies by awards in the form of stars covered with gold from one side. To order the stars it is necessary to estimate order cost that depends on the area of gold- plating. Write a program that can calculate the area of a star. A \" star\" figure having n \u2265 5 corners where n is a prime number is constructed the following way. On the circle of radius r n points are selected so that the distances between the adjacent ones are equal. Then every point is connected by a segment with two maximally distant points. All areas bounded by the segments parts are the figure parts.",
    "input": "The only line of the input contains two integers n ( 5 \u2264 n < 109, n is prime) and r ( 1 \u2264 r \u2264 109) \u2014 the number of the star corners and the radius of the circumcircle correspondingly.",
    "output": "Output one number \u2014 the star area. The relative error of your answer should not be greater than 10 - 7.",
    "note": "",
    "topics": [
      "geometry"
    ],
    "id": "630P"
  },
  {
    "title": "Arrow",
    "url": "https://codeforces.com/problemset/problem/630/O",
    "history": "Petya has recently started working as a programmer in the IT city company that develops computer games. Besides game mechanics implementation to create a game it is necessary to create tool programs that can be used by game designers to create game levels. Petya' s first assignment is to create a tool that allows to paint different arrows on the screen. A user of this tool will choose a point on the screen, specify a vector ( the arrow direction) and vary several parameters to get the required graphical effect. In the first version of the program Petya decided to limit parameters of the arrow by the following: a point with coordinates ( px, py) , a nonzero vector with coordinates ( vx, vy) , positive scalars a, b, c, d, a > c. The produced arrow should have the following properties. The arrow consists of a triangle and a rectangle. The triangle is isosceles with base of length a and altitude of length b perpendicular to the base. The rectangle sides lengths are c and d. Point ( px, py) is situated in the middle of the triangle base and in the middle of side of rectangle that has length c. Area of intersection of the triangle and the rectangle is zero. The direction from ( px, py) point to the triangle vertex opposite to base containing the point coincides with direction of ( vx, vy) vector. Enumerate the arrow points coordinates in counter- clockwise order starting from the tip.",
    "input": "The only line of the input contains eight integers px, py, vx, vy ( - 1000 \u2264 px, py, vx, vy \u2264 1000, vx2 + vy2 > 0) , a, b, c, d ( 1 \u2264 a, b, c, d \u2264 1000, a > c) .",
    "output": "Output coordinates of the arrow points in counter- clockwise order. Each line should contain two coordinates, first x, then y. Relative or absolute error should not be greater than 10 - 9.",
    "note": "",
    "topics": [
      "geometry"
    ],
    "id": "630O"
  },
  {
    "title": "Turn",
    "url": "https://codeforces.com/problemset/problem/630/M",
    "history": "Vasya started working in a machine vision company of IT City. Vasya' s team creates software and hardware for identification of people by their face. One of the project' s know- how is a camera rotating around its optical axis on shooting. People see an eye- catching gadget \u2014 a rotating camera \u2014 come up to it to see it better, look into it. And the camera takes their photo at that time. What could be better for high quality identification? But not everything is so simple. The pictures from camera appear rotated too ( on clockwise camera rotation frame the content becomes rotated counter- clockwise) . But the identification algorithm can work only with faces that are just slightly deviated from vertical. Vasya was entrusted to correct the situation \u2014 to rotate a captured image so that image would be minimally deviated from vertical. Requirements were severe. Firstly, the picture should be rotated only on angle divisible by 90 degrees to not lose a bit of information about the image. Secondly, the frames from the camera are so huge and FPS is so big that adequate rotation speed is provided by hardware FPGA solution only. And this solution can rotate only by 90 degrees clockwise. Of course, one can apply 90 degrees turn several times but for the sake of performance the number of turns should be minimized. Help Vasya implement the program that by the given rotation angle of the camera can determine the minimum number of 90 degrees clockwise turns necessary to get a picture in which up direction deviation from vertical is minimum. The next figure contains frames taken from an unrotated camera, then from rotated 90 degrees clockwise, then from rotated 90 degrees counter- clockwise. Arrows show direction to \" true up\" . The next figure shows 90 degrees clockwise turn by FPGA hardware.",
    "input": "The only line of the input contains one integer x ( - 1018 \u2264 x \u2264 1018) \u2014 camera angle in degrees. Positive value denotes clockwise camera rotation, negative \u2014 counter- clockwise.",
    "output": "Output one integer \u2014 the minimum required number of 90 degrees clockwise turns.",
    "note": "When the camera is rotated 60 degrees counter- clockwise ( the second example) , an image from it is rotated 60 degrees clockwise. One 90 degrees clockwise turn of the image result in 150 degrees clockwise total rotation and deviation from \" true up\" for one turn is 150 degrees. Two 90 degrees clockwise turns of the image result in 240 degrees clockwise total rotation and deviation from \" true up\" for two turns is 120 degrees because 240 degrees clockwise equal to 120 degrees counter- clockwise. Three 90 degrees clockwise turns of the image result in 330 degrees clockwise total rotation and deviation from \" true up\" for three turns is 30 degrees because 330 degrees clockwise equal to 30 degrees counter- clockwise. From 60, 150, 120 and 30 degrees deviations the smallest is 30, and it it achieved in three 90 degrees clockwise turns.",
    "topics": [
      "geometry",
      "math"
    ],
    "id": "630M"
  },
  {
    "title": "Global Warming",
    "url": "https://codeforces.com/problemset/problem/1666/G",
    "history": "",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "geometry",
      "math"
    ],
    "id": "1666G"
  },
  {
    "title": "Interactive Rays",
    "url": "https://codeforces.com/problemset/problem/1578/I",
    "history": "This is an interactive problem. Your goal is to find a circle on a plane by shooting rays and getting the distance to the circle as a result. Interactor has three hidden integer parameters that are determined in advance for each test, but which you don' t know \u2014 x_ c , y_ c , and r_ c . ( x_ c, y_ c) are coordinates of the circle' s center and r_ c is its radius. The absolute values of x_ c , y_ c , and r_ c do not exceed 10^ 5 , and 1 \u2264 r_ c \u2264\u221a( x_ c^ 2 + y_ c^ 2) - 1 . You can shoot rays that extend from the origin ( 0, 0) and go via a point ( x_ q, y_ q) with the integer coordinates you specify. For each ray, you get a distance from the ray to the circle or 0 if the ray intersects the circle. InteractionThe interaction starts with your program printing a query to the standard output and finishes when your program finds and prints the answer to the problem. Each query has a form of \" ? x_ q y_ q \" , where x_ q and y_ q are integers ( | x_ q| , | y_ q| \u2264 10^ 6 ; x_ q 0 or y_ q 0 ) . The interactor outputs a line with a single floating- point number \u2014 the distance between a query ray and a circle that is precise to 10^ - 10 by an absolute value. Your program can make the next query, read the output, and so on. You are allowed to do at most 60 queries. At the end of the interaction, print the answer line \" ! x_ c y_ c r_ c \" , flush the output and exit. Note, that the output of the interactor is actually rounded to the 10- th digit after a decimal point, so if you are stress- testing your solution locally, make sure that you also perform the corresponding rounding.",
    "input": "",
    "output": "",
    "note": "Illustration of the queries from the example interaction.",
    "topics": [
      "geometry",
      "interactive"
    ],
    "id": "1578I"
  },
  {
    "title": "Astronomy",
    "url": "https://codeforces.com/problemset/problem/949/F",
    "history": "",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "geometry",
      "probabilities"
    ],
    "id": "949F"
  },
  {
    "title": "Robot Arm",
    "url": "https://codeforces.com/problemset/problem/618/E",
    "history": "Roger is a robot. He has an arm that is a series of n segments connected to each other. The endpoints of the i- th segment are initially located at points ( i - 1, 0) and ( i, 0) . The endpoint at ( i - 1, 0) is colored red and the endpoint at ( i, 0) is colored blue for all segments. Thus, the blue endpoint of the i- th segment is touching the red endpoint of the ( i + 1) - th segment for all valid i. Roger can move his arm in two different ways: He can choose some segment and some value. This is denoted as choosing the segment number i and picking some positive l. This change happens as follows: the red endpoint of segment number i and segments from 1 to i - 1 are all fixed in place. Imagine a ray from the red endpoint to the blue endpoint. The blue endpoint and segments i + 1 through n are translated l units in the direction of this ray. In this picture, the red point labeled A and segments before A stay in place, while the blue point labeled B and segments after B gets translated. He can choose a segment and rotate it. This is denoted as choosing the segment number i, and an angle a. The red endpoint of the i- th segment will stay fixed in place. The blue endpoint of that segment and segments i + 1 to n will rotate clockwise by an angle of a degrees around the red endpoint. In this picture, the red point labeled A and segments before A stay in place, while the blue point labeled B and segments after B get rotated around point A. Roger will move his arm m times. These transformations are a bit complicated, and Roger easily loses track of where the blue endpoint of the last segment is. Help him compute the coordinates of the blue endpoint of the last segment after applying each operation. Note that these operations are cumulative, and Roger' s arm may intersect itself arbitrarily during the moves.",
    "input": "The first line of the input will contain two integers n and m ( 1 \u2264 n, m \u2264 300 000) \u2014 the number of segments and the number of operations to perform. Each of the next m lines contains three integers xi, yi and zi describing a move. If xi = 1, this line describes a move of type 1, where yi denotes the segment number and zi denotes the increase in the length. If xi = 2, this describes a move of type 2, where yi denotes the segment number, and zi denotes the angle in degrees. ( 1 \u2264 xi \u2264 2, 1 \u2264 yi \u2264 n, 1 \u2264 zi \u2264 359)",
    "output": "Print m lines. The i- th line should contain two real values, denoting the coordinates of the blue endpoint of the last segment after applying operations 1, . . . , i. Your answer will be considered correct if its absolute or relative error does not exceed 10 - 4. Namely, let' s assume that your answer for a particular value of a coordinate is a and the answer of the jury is b. The checker program will consider your answer correct if for all coordinates.",
    "note": "The following pictures shows the state of the arm after each operation. The coordinates of point F are printed after applying each operation. For simplicity, we only show the blue endpoints of a segment ( with the exception for the red endpoint of the first segment) . For instance, the point labeled B is the blue endpoint for segment 1 and also the red endpoint for segment 2. Initial state: Extend segment 1 by 3. Rotate segment 3 by 90 degrees clockwise. Rotate segment 5 by 48 degrees clockwise. Extend segment 4 by 1.",
    "topics": [
      "data structures",
      "geometry"
    ],
    "id": "618E"
  },
  {
    "title": "Constellation",
    "url": "https://codeforces.com/problemset/problem/618/C",
    "history": "Cat Noku has obtained a map of the night sky. On this map, he found a constellation with n stars numbered from 1 to n. For each i, the i- th star is located at coordinates ( xi, yi) . No two stars are located at the same position. In the evening Noku is going to take a look at the night sky. He would like to find three distinct stars and form a triangle. The triangle must have positive area. In addition, all other stars must lie strictly outside of this triangle. He is having trouble finding the answer and would like your help. Your job is to find the indices of three stars that would form a triangle that satisfies all the conditions. It is guaranteed that there is no line such that all stars lie on that line. It can be proven that if the previous condition is satisfied, there exists a solution to this problem.",
    "input": "The first line of the input contains a single integer n ( 3 \u2264 n \u2264 100 000) . Each of the next n lines contains two integers xi and yi ( - 109 \u2264 xi, yi \u2264 109) . It is guaranteed that no two stars lie at the same point, and there does not exist a line such that all stars lie on that line.",
    "output": "Print three distinct integers on a single line \u2014 the indices of the three points that form a triangle that satisfies the conditions stated in the problem. If there are multiple possible answers, you may print any of them.",
    "note": "In the first sample, we can print the three indices in any order. In the second sample, we have the following picture. Note that the triangle formed by starts 1, 4 and 3 doesn' t satisfy the conditions stated in the problem, as point 5 is not strictly outside of this triangle ( it lies on it' s border) .",
    "topics": [
      "geometry",
      "implementation"
    ],
    "id": "618C"
  },
  {
    "title": "Peter and Snow Blower",
    "url": "https://codeforces.com/problemset/problem/613/A",
    "history": "Peter got a new snow blower as a New Year present. Of course, Peter decided to try it immediately. After reading the instructions he realized that it does not work like regular snow blowing machines. In order to make it work, you need to tie it to some point that it does not cover, and then switch it on. As a result it will go along a circle around this point and will remove all the snow from its path. Formally, we assume that Peter' s machine is a polygon on a plane. Then, after the machine is switched on, it will make a circle around the point to which Peter tied it ( this point lies strictly outside the polygon) . That is, each of the points lying within or on the border of the polygon will move along the circular trajectory, with the center of the circle at the point to which Peter tied his machine. Peter decided to tie his car to point P and now he is wondering what is the area of \u200b\u200bthe region that will be cleared from snow. Help him.",
    "input": "The first line of the input contains three integers \u2014 the number of vertices of the polygon n ( ) , and coordinates of point P. Each of the next n lines contains two integers \u2014 coordinates of the vertices of the polygon in the clockwise or counterclockwise order. It is guaranteed that no three consecutive vertices lie on a common straight line. All the numbers in the input are integers that do not exceed 1 000 000 in their absolute value.",
    "output": "Print a single real value number \u2014 the area of the region that will be cleared. Your answer will be considered correct if its absolute or relative error does not exceed 10 - 6. Namely: let' s assume that your answer is a, and the answer of the jury is b. The checker program will consider your answer correct, if .",
    "note": "In the first sample snow will be removed from that area:",
    "topics": [
      "binary search",
      "geometry",
      "ternary search"
    ],
    "id": "613A"
  },
  {
    "title": "New Year and Cake",
    "url": "https://codeforces.com/problemset/problem/611/G",
    "history": "Limak is a little polar bear. According to some old traditions, his bear family prepared a New Year cake. And Limak likes cakes. As you may know, a New Year cake is a strictly convex polygon with n vertices. Parents won' t allow Limak to eat more than half of a cake because he would get sick. After some thinking they decided to cut a cake along one of n\u00b7( n - 3) / 2 diagonals. Then Limak will get a non- greater piece. Limak understands rules but he won' t be happy if the second piece happens to be much bigger. Limak' s disappointment will be equal to the difference between pieces' areas, multiplied by two. It can be proved that it will be integer for the given constraints. There are n\u00b7( n - 3) / 2 possible scenarios. Consider them all and find the sum of values of Limak' s disappointment, modulo 109 + 7.",
    "input": "The first line of the input contains a single integer n ( 4 \u2264 n \u2264 500 000) \u2014 the number of vertices in the polygon denoting the cake. Each of the next n lines contains two integers xi and yi ( | xi| , | yi| \u2264 109) \u2014 coordinates of the i- th point. It' s guaranteed that all points are distinct, polygon is strictly convex and points are given in the clockwise order.",
    "output": "Print the sum of values of Limak' s disappointment over all possible scenarios modulo 109 + 7.",
    "note": "In the first sample possible values of Limak' s disappointment are 0, 18, 18, 24, 30.",
    "topics": [
      "geometry",
      "two pointers"
    ],
    "id": "611G"
  },
  {
    "title": "Vika and Segments",
    "url": "https://codeforces.com/problemset/problem/610/D",
    "history": "Vika has an infinite sheet of squared paper. Initially all squares are white. She introduced a two- dimensional coordinate system on this sheet and drew n black horizontal and vertical segments parallel to the coordinate axes. All segments have width equal to 1 square, that means every segment occupy some set of neighbouring squares situated in one row or one column. Your task is to calculate the number of painted cells. If a cell was painted more than once, it should be calculated exactly once.",
    "input": "The first line of the input contains a single integer n ( 1 \u2264 n \u2264 100 000) \u2014 the number of segments drawn by Vika. Each of the next n lines contains four integers x1, y1, x2 and y2 ( - 109 \u2264 x1, y1, x2, y2 \u2264 109) \u2014 the coordinates of the endpoints of the segments drawn by Vika. It is guaranteed that all the segments are parallel to coordinate axes. Segments may touch, overlap and even completely coincide.",
    "output": "Print the number of cells painted by Vika. If a cell was painted more than once, it should be calculated exactly once in the answer.",
    "note": "In the first sample Vika will paint squares ( 0, 1) , ( 1, 1) , ( 2, 1) , ( 1, 2) , ( 1, 3) , ( 1, 4) , ( 0, 3) and ( 2, 3) .",
    "topics": [
      "constructive algorithms",
      "data structures",
      "geometry",
      "two pointers"
    ],
    "id": "610D"
  },
  {
    "title": "Cross Sum",
    "url": "https://codeforces.com/problemset/problem/607/E",
    "history": "Genos has been given n distinct lines on the Cartesian plane. Let be a list of intersection points of these lines. A single point might appear multiple times in this list if it is the intersection of multiple pairs of lines. The order of the list does not matter. Given a query point ( p, q) , let be the corresponding list of distances of all points in to the query point. Distance here refers to euclidean distance. As a refresher, the euclidean distance between two points ( x1, y1) and ( x2, y2) is . Genos is given a point ( p, q) and a positive integer m. He is asked to find the sum of the m smallest elements in . Duplicate elements in are treated as separate elements. Genos is intimidated by Div1 E problems so he asked for your help.",
    "input": "The first line of the input contains a single integer n ( 2 \u2264 n \u2264 50 000) \u2014 the number of lines. The second line contains three integers x, y and m ( | x| , | y| \u2264 1 000 000, ) \u2014 the encoded coordinates of the query point and the integer m from the statement above. The query point ( p, q) is obtained as . In other words, divide x and y by 1000 to get the actual query point. denotes the length of the list and it is guaranteed that . Each of the next n lines contains two integers ai and bi ( | ai| , | bi| \u2264 1 000 000) \u2014 the parameters for a line of the form: . It is guaranteed that no two lines are the same, that is ( ai, bi) = \u0338 ( aj, bj) if i = \u0338 j.",
    "output": "Print a single real number, the sum of m smallest elements of . Your answer will be considered correct if its absolute or relative error does not exceed 10 - 6. To clarify, let' s assume that your answer is a and the answer of the jury is b. The checker program will consider your answer correct if .",
    "note": "In the first sample, the three closest points have distances and . In the second sample, the two lines y = 1000x - 1000 and intersect at ( 2000000, 1999999000) . This point has a distance of from ( - 1000, - 1000) . In the third sample, the three lines all intersect at the point ( 1, 1) . This intersection point is present three times in since it is the intersection of three pairs of lines. Since the distance between the intersection point and the query point is 2, the answer is three times that or 6.",
    "topics": [
      "binary search",
      "geometry"
    ],
    "id": "607E"
  },
  {
    "title": "Freelancer's Dreams",
    "url": "https://codeforces.com/problemset/problem/605/C",
    "history": "Mikhail the Freelancer dreams of two things: to become a cool programmer and to buy a flat in Moscow. To become a cool programmer, he needs at least p experience points, and a desired flat in Moscow costs q dollars. Mikhail is determined to follow his dreams and registered at a freelance site. He has suggestions to work on n distinct projects. Mikhail has already evaluated that the participation in the i- th project will increase his experience by ai per day and bring bi dollars per day. As freelance work implies flexible working hours, Mikhail is free to stop working on one project at any time and start working on another project. Doing so, he receives the respective share of experience and money. Mikhail is only trying to become a cool programmer, so he is able to work only on one project at any moment of time. Find the real value, equal to the minimum number of days Mikhail needs to make his dream come true. For example, suppose Mikhail is suggested to work on three projects and a1 = 6, b1 = 2, a2 = 1, b2 = 3, a3 = 2, b3 = 6. Also, p = 20 and q = 20. In order to achieve his aims Mikhail has to work for 2. 5 days on both first and third projects. Indeed, a1\u00b72. 5 + a2\u00b70 + a3\u00b72. 5 = 6\u00b72. 5 + 1\u00b70 + 2\u00b72. 5 = 20 and b1\u00b72. 5 + b2\u00b70 + b3\u00b72. 5 = 2\u00b72. 5 + 3\u00b70 + 6\u00b72. 5 = 20.",
    "input": "The first line of the input contains three integers n, p and q ( 1 \u2264 n \u2264 100 000, 1 \u2264 p, q \u2264 1 000 000) \u2014 the number of projects and the required number of experience and money. Each of the next n lines contains two integers ai and bi ( 1 \u2264 ai, bi \u2264 1 000 000) \u2014 the daily increase in experience and daily income for working on the i- th project.",
    "output": "Print a real value \u2014 the minimum number of days Mikhail needs to get the required amount of experience and money. Your answer will be considered correct if its absolute or relative error does not exceed 10 - 6. Namely: let' s assume that your answer is a, and the answer of the jury is b. The checker program will consider your answer correct, if .",
    "note": "First sample corresponds to the example in the problem statement.",
    "topics": [
      "geometry"
    ],
    "id": "605C"
  },
  {
    "title": "Ruminations on Ruminants",
    "url": "https://codeforces.com/problemset/problem/603/D",
    "history": "Kevin Sun is ruminating on the origin of cows while standing at the origin of the Cartesian plane. He notices n lines on the plane, each representable by an equation of the form ax + by = c. He also observes that no two lines are parallel and that no three lines pass through the same point. For each triple ( i, j, k) such that 1 \u2264 i < j < k \u2264 n, Kevin considers the triangle formed by the three lines . He calls a triangle original if the circumcircle of that triangle passes through the origin. Since Kevin believes that the circles of bovine life are tied directly to such triangles, he wants to know the number of original triangles formed by unordered triples of distinct lines. Recall that the circumcircle of a triangle is the circle which passes through all the vertices of that triangle.",
    "input": "The first line of the input contains a single integer n ( 3 \u2264 n \u2264 2000) , the number of lines. The next n lines describe lines . The i- th of these lines contains three space- separated integers ai, bi, ci ( | ai| , | bi| , | ci| \u2264 10 000, ai2 + bi2 > 0) , representing the equation aix + biy = ci of line .",
    "output": "Print a single integer, the number of triples ( i, j, k) with i < j < k such that lines form an original triangle.",
    "note": "Note that in the first sample, some of the lines pass through the origin. In the second sample, there is exactly one triple of lines: y = 1, x + y = 2, x - y = - 2. The triangle they form has vertices ( 0, 2) , ( 1, 1) , ( - 1, 1) . The circumcircle of this triangle has equation x2 + ( y - 1) 2 = 1. This indeed passes through ( 0, 0) .",
    "topics": [
      "geometry",
      "math"
    ],
    "id": "603D"
  },
  {
    "title": "Area of Two Circles' Intersection",
    "url": "https://codeforces.com/problemset/problem/600/D",
    "history": "You are given two circles. Find the area of their intersection.",
    "input": "The first line contains three integers x1, y1, r1 ( - 109 \u2264 x1, y1 \u2264 109, 1 \u2264 r1 \u2264 109) \u2014 the position of the center and the radius of the first circle. The second line contains three integers x2, y2, r2 ( - 109 \u2264 x2, y2 \u2264 109, 1 \u2264 r2 \u2264 109) \u2014 the position of the center and the radius of the second circle.",
    "output": "Print the area of the intersection of the circles. The answer will be considered correct if the absolute or relative error doesn' t exceed 10 - 6.",
    "note": "",
    "topics": [
      "geometry"
    ],
    "id": "600D"
  },
  {
    "title": "Cut Length",
    "url": "https://codeforces.com/problemset/problem/598/F",
    "history": "Given simple ( without self- intersections) n- gon. It is not necessary convex. Also you are given m lines. For each line find the length of common part of the line and the n- gon. The boundary of n- gon belongs to polygon. It is possible that n- gon contains 180- degree angles.",
    "input": "The first line contains integers n and m ( 3 \u2264 n \u2264 1000; 1 \u2264 m \u2264 100) . The following n lines contain coordinates of polygon vertices ( in clockwise or counterclockwise direction) . All vertices are distinct. The following m lines contain line descriptions. Each of them contains two distict points of a line by their coordinates. All given in the input coordinates are real numbers, given with at most two digits after decimal point. They do not exceed 105 by absolute values.",
    "output": "Print m lines, the i- th line should contain the length of common part of the given n- gon and the i- th line. The answer will be considered correct if the absolute or relative error doesn' t exceed 10 - 6.",
    "note": "",
    "topics": [
      "geometry"
    ],
    "id": "598F"
  },
  {
    "title": "Nearest vectors",
    "url": "https://codeforces.com/problemset/problem/598/C",
    "history": "You are given the set of vectors on the plane, each of them starting at the origin. Your task is to find a pair of vectors with the minimal non- oriented angle between them. Non- oriented angle is non- negative value, minimal between clockwise and counterclockwise direction angles. Non- oriented angle is always between 0 and \u03c0. For example, opposite directions vectors have angle equals to \u03c0.",
    "input": "First line of the input contains a single integer n ( 2 \u2264 n \u2264 100 000) \u2014 the number of vectors. The i- th of the following n lines contains two integers xi and yi ( | x| , | y| \u2264 10 000, x2 + y2 > 0) \u2014 the coordinates of the i- th vector. Vectors are numbered from 1 to n in order of appearing in the input. It is guaranteed that no two vectors in the input share the same direction ( but they still can have opposite directions) .",
    "output": "Print two integer numbers a and b ( a = \u0338 b) \u2014 a pair of indices of vectors with the minimal non- oriented angle. You can print the numbers in any order. If there are many possible answers, print any.",
    "note": "",
    "topics": [
      "geometry",
      "sortings"
    ],
    "id": "598C"
  },
  {
    "title": "Wilbur and Swimming Pool",
    "url": "https://codeforces.com/problemset/problem/596/A",
    "history": "After making bad dives into swimming pools, Wilbur wants to build a swimming pool in the shape of a rectangle in his backyard. He has set up coordinate axes, and he wants the sides of the rectangle to be parallel to them. Of course, the area of the rectangle must be positive. Wilbur had all four vertices of the planned pool written on a paper, until his friend came along and erased some of the vertices. Now Wilbur is wondering, if the remaining n vertices of the initial rectangle give enough information to restore the area of the planned swimming pool.",
    "input": "The first line of the input contains a single integer n ( 1 \u2264 n \u2264 4) \u2014 the number of vertices that were not erased by Wilbur' s friend. Each of the following n lines contains two integers xi and yi ( - 1000 \u2264 xi, yi \u2264 1000) \u2014the coordinates of the i- th vertex that remains. Vertices are given in an arbitrary order. It' s guaranteed that these points are distinct vertices of some rectangle, that has positive area and which sides are parallel to the coordinate axes.",
    "output": "Print the area of the initial rectangle if it could be uniquely determined by the points remaining. Otherwise, print - 1.",
    "note": "In the first sample, two opposite corners of the initial rectangle are given, and that gives enough information to say that the rectangle is actually a unit square. In the second sample there is only one vertex left and this is definitely not enough to uniquely define the area.",
    "topics": [
      "geometry",
      "implementation"
    ],
    "id": "596A"
  },
  {
    "title": "Max and Bike",
    "url": "https://codeforces.com/problemset/problem/594/B",
    "history": "For months Maxim has been coming to work on his favorite bicycle. And quite recently he decided that he is ready to take part in a cyclists' competitions. He knows that this year n competitions will take place. During the i- th competition the participant must as quickly as possible complete a ride along a straight line from point si to point fi ( si < fi) . Measuring time is a complex process related to usage of a special sensor and a time counter. Think of the front wheel of a bicycle as a circle of radius r. Let' s neglect the thickness of a tire, the size of the sensor, and all physical effects. The sensor is placed on the rim of the wheel, that is, on some fixed point on a circle of radius r. After that the counter moves just like the chosen point of the circle, i. e. moves forward and rotates around the center of the circle. At the beginning each participant can choose any point bi, such that his bike is fully behind the starting line, that is, bi < si - r. After that, he starts the movement, instantly accelerates to his maximum speed and at time tsi, when the coordinate of the sensor is equal to the coordinate of the start, the time counter starts. The cyclist makes a complete ride, moving with his maximum speed and at the moment the sensor' s coordinate is equal to the coordinate of the finish ( moment of time tfi) , the time counter deactivates and records the final time. Thus, the counter records that the participant made a complete ride in time tfi - tsi. Maxim is good at math and he suspects that the total result doesn' t only depend on his maximum speed v, but also on his choice of the initial point bi. Now Maxim is asking you to calculate for each of n competitions the minimum possible time that can be measured by the time counter. The radius of the wheel of his bike is equal to r.",
    "input": "The first line contains three integers n, r and v ( 1 \u2264 n \u2264 100 000, 1 \u2264 r, v \u2264 109) \u2014 the number of competitions, the radius of the front wheel of Max' s bike and his maximum speed, respectively. Next n lines contain the descriptions of the contests. The i- th line contains two integers si and fi ( 1 \u2264 si < fi \u2264 109) \u2014 the coordinate of the start and the coordinate of the finish on the i- th competition.",
    "output": "Print n real numbers, the i- th number should be equal to the minimum possible time measured by the time counter. Your answer will be considered correct if its absolute or relative error will not exceed 10 - 6. Namely: let' s assume that your answer equals a, and the answer of the jury is b. The checker program will consider your answer correct if .",
    "note": "",
    "topics": [
      "binary search",
      "geometry"
    ],
    "id": "594B"
  },
  {
    "title": "Anton and Lines",
    "url": "https://codeforces.com/problemset/problem/593/B",
    "history": "The teacher gave Anton a large geometry homework, but he didn' t do it ( as usual) as he participated in a regular round on Codeforces. In the task he was given a set of n lines defined by the equations y = ki\u00b7x + bi. It was necessary to determine whether there is at least one point of intersection of two of these lines, that lays strictly inside the strip between x1 < x2. In other words, is it true that there are 1 \u2264 i < j \u2264 n and x' , y' , such that: y' = ki * x' + bi, that is, point ( x' , y' ) belongs to the line number i; y' = kj * x' + bj, that is, point ( x' , y' ) belongs to the line number j; x1 < x' < x2, that is, point ( x' , y' ) lies inside the strip bounded by x1 < x2. You can' t leave Anton in trouble, can you? Write a program that solves the given task.",
    "input": "The first line of the input contains an integer n ( 2 \u2264 n \u2264 100 000) \u2014 the number of lines in the task given to Anton. The second line contains integers x1 and x2 ( - 1 000 000 \u2264 x1 < x2 \u2264 1 000 000) defining the strip inside which you need to find a point of intersection of at least two lines. The following n lines contain integers ki, bi ( - 1 000 000 \u2264 ki, bi \u2264 1 000 000) \u2014 the descriptions of the lines. It is guaranteed that all lines are pairwise distinct, that is, for any two i = \u0338 j it is true that either ki = \u0338 kj, or bi = \u0338 bj.",
    "output": "Print \" Yes\" ( without quotes) , if there is at least one intersection of two distinct lines, located strictly inside the strip. Otherwise print \" No\" ( without quotes) .",
    "note": "In the first sample there are intersections located on the border of the strip, but there are no intersections located strictly inside it.",
    "topics": [
      "geometry",
      "sortings"
    ],
    "id": "593B"
  },
  {
    "title": "BCPC",
    "url": "https://codeforces.com/problemset/problem/592/E",
    "history": "BCPC stands for Byteforces Collegiate Programming Contest, and is the most famous competition in Byteforces. BCPC is a team competition. Each team is composed by a coach and three contestants. Blenda is the coach of the Bit State University( BSU) , and she is very strict selecting the members of her team. In BSU there are n students numbered from 1 to n. Since all BSU students are infinitely smart, the only important parameters for Blenda are their reading and writing speed. After a careful measuring, Blenda have found that the i- th student have a reading speed equal to ri ( words per minute) , and a writing speed of wi ( symbols per minute) . Since BSU students are very smart, the measured speeds are sometimes very big and Blenda have decided to subtract some constant value c from all the values of reading speed and some value d from all the values of writing speed. Therefore she considers ri' = ri - c and wi' = wi - d. The student i is said to overwhelm the student j if and only if ri' \u00b7wj' > rj' \u00b7wi' . Blenda doesn\u2019t like fights in teams, so she thinks that a team consisting of three distinct students i, j and k is good if i overwhelms j, j overwhelms k, and k overwhelms i. Yes, the relation of overwhelming is not transitive as it often happens in real life. Since Blenda is busy preparing a training camp in Codeforces, you are given a task to calculate the number of different good teams in BSU. Two teams are considered to be different if there is at least one student that is present in one team but is not present in the other. In other words, two teams are different if the sets of students that form these teams are different.",
    "input": "In the first line of the input three integers n, c and d ( 3 \u2264 n \u2264 345678, 1 \u2264 c, d \u2264 109) are written. They denote the number of students Blenda can use to form teams, the value subtracted from all reading speeds and the value subtracted from all writing speeds respectively. Each of the next n lines contains two integers ri and wi ( 0 < ri, wi \u2264 109, | ri - c| + | wi - d| > 0) . There are no two students, such that both their reading and writing speeds coincide, i. e. for every i = \u0338 j condition | ri - rj| + | wi - wj| > 0 holds.",
    "output": "Print the number of different teams in BSU, that are good according to Blenda' s definition.",
    "note": "In the first sample the following teams are good: ( i = 1, j = 2, k = 3) , ( i = 2, j = 5, k = 1) , ( i = 1, j = 4, k = 3) , ( i = 5, j = 1, k = 4) . Note, that for example the team ( i = 3, j = 1, k = 2) is also good, but is considered to be the same as the team ( i = 1, j = 2, k = 3) .",
    "topics": [
      "binary search",
      "geometry",
      "two pointers"
    ],
    "id": "592E"
  },
  {
    "title": "Chip 'n Dale Rescue Rangers",
    "url": "https://codeforces.com/problemset/problem/590/B",
    "history": "A team of furry rescue rangers was sitting idle in their hollow tree when suddenly they received a signal of distress. In a few moments they were ready, and the dirigible of the rescue chipmunks hit the road. We assume that the action takes place on a Cartesian plane. The headquarters of the rescuers is located at point ( x1, y1) , and the distress signal came from the point ( x2, y2) . Due to Gadget' s engineering talent, the rescuers' dirigible can instantly change its current velocity and direction of movement at any moment and as many times as needed. The only limitation is: the speed of the aircraft relative to the air can not exceed meters per second. Of course, Gadget is a true rescuer and wants to reach the destination as soon as possible. The matter is complicated by the fact that the wind is blowing in the air and it affects the movement of the dirigible. According to the weather forecast, the wind will be defined by the vector ( vx, vy) for the nearest t seconds, and then will change to ( wx, wy) . These vectors give both the direction and velocity of the wind. Formally, if a dirigible is located at the point ( x, y) , while its own velocity relative to the air is equal to zero and the wind ( ux, uy) is blowing, then after seconds the new position of the dirigible will be . Gadget is busy piloting the aircraft, so she asked Chip to calculate how long will it take them to reach the destination if they fly optimally. He coped with the task easily, but Dale is convinced that Chip has given the random value, aiming only not to lose the face in front of Gadget. Dale has asked you to find the right answer. It is guaranteed that the speed of the wind at any moment of time is strictly less than the maximum possible speed of the airship relative to the air.",
    "input": "The first line of the input contains four integers x1, y1, x2, y2 ( | x1| , | y1| , | x2| , | y2| \u2264 10 000) \u2014 the coordinates of the rescuers' headquarters and the point, where signal of the distress came from, respectively. The second line contains two integers and t ( 0 < v, t \u2264 1000) , which are denoting the maximum speed of the chipmunk dirigible relative to the air and the moment of time when the wind changes according to the weather forecast, respectively. Next follow one per line two pairs of integer ( vx, vy) and ( wx, wy) , describing the wind for the first t seconds and the wind that will blow at all the remaining time, respectively. It is guaranteed that and .",
    "output": "Print a single real value \u2014 the minimum time the rescuers need to get to point ( x2, y2) . You answer will be considered correct if its absolute or relative error does not exceed 10 - 6. Namely: let' s assume that your answer is a, and the answer of the jury is b. The checker program will consider your answer correct, if .",
    "note": "",
    "topics": [
      "binary search",
      "geometry",
      "math"
    ],
    "id": "590B"
  },
  {
    "title": "Three Logos",
    "url": "https://codeforces.com/problemset/problem/581/D",
    "history": "Three companies decided to order a billboard with pictures of their logos. A billboard is a big square board. A logo of each company is a rectangle of a non- zero area. Advertisers will put up the ad only if it is possible to place all three logos on the billboard so that they do not overlap and the billboard has no empty space left. When you put a logo on the billboard, you should rotate it so that the sides were parallel to the sides of the billboard. Your task is to determine if it is possible to put the logos of all the three companies on some square billboard without breaking any of the described rules.",
    "input": "The first line of the input contains six positive integers x1, y1, x2, y2, x3, y3 ( 1 \u2264 x1, y1, x2, y2, x3, y3 \u2264 100) , where xi and yi determine the length and width of the logo of the i- th company respectively.",
    "output": "If it is impossible to place all the three logos on a square shield, print a single integer \" - 1\" ( without the quotes) . If it is possible, print in the first line the length of a side of square n, where you can place all the three logos. Each of the next n lines should contain n uppercase English letters \" A\" , \" B\" or \" C\" . The sets of the same letters should form solid rectangles, provided that: the sizes of the rectangle composed from letters \" A\" should be equal to the sizes of the logo of the first company, the sizes of the rectangle composed from letters \" B\" should be equal to the sizes of the logo of the second company, the sizes of the rectangle composed from letters \" C\" should be equal to the sizes of the logo of the third company, Note that the logos of the companies can be rotated for printing on the billboard. The billboard mustn' t have any empty space. If a square billboard can be filled with the logos in multiple ways, you are allowed to print any of them. See the samples to better understand the statement.",
    "note": "",
    "topics": [
      "bitmasks",
      "brute force",
      "constructive algorithms",
      "geometry",
      "implementation",
      "math"
    ],
    "id": "581D"
  },
  {
    "title": "A Problem about Polyline",
    "url": "https://codeforces.com/problemset/problem/578/A",
    "history": "There is a polyline going through points ( 0, 0) \u2013 ( x, x) \u2013 ( 2x, 0) \u2013 ( 3x, x) \u2013 ( 4x, 0) \u2013 . . . - ( 2kx, 0) \u2013 ( 2kx + x, x) \u2013 . . . . We know that the polyline passes through the point ( a, b) . Find minimum positive value x such that it is true or determine that there is no such x.",
    "input": "Only one line containing two positive integers a and b ( 1 \u2264 a, b \u2264 109) .",
    "output": "Output the only line containing the answer. Your answer will be considered correct if its relative or absolute error doesn' t exceed 10 - 9. If there is no such x then output - 1 as the answer.",
    "note": "You can see following graphs for sample 1 and sample 3.",
    "topics": [
      "geometry",
      "math"
    ],
    "id": "578A"
  },
  {
    "title": "Points on Plane",
    "url": "https://codeforces.com/problemset/problem/576/C",
    "history": "On a plane are n points ( xi, yi) with integer coordinates between 0 and 106. The distance between the two points with numbers a and b is said to be the following value: ( the distance calculated by such formula is called Manhattan distance) . We call a hamiltonian path to be some permutation pi of numbers from 1 to n. We say that the length of this path is value . Find some hamiltonian path with a length of no more than 25 \u00d7 108. Note that you do not have to minimize the path length.",
    "input": "The first line contains integer n ( 1 \u2264 n \u2264 106) . The i + 1- th line contains the coordinates of the i- th point: xi and yi ( 0 \u2264 xi, yi \u2264 106) . It is guaranteed that no two points coincide.",
    "output": "Print the permutation of numbers pi from 1 to n \u2014 the sought Hamiltonian path. The permutation must meet the inequality . If there are multiple possible answers, print any of them. It is guaranteed that the answer exists.",
    "note": "In the sample test the total distance is: ( | 5 - 3| + | 0 - 4| ) + ( | 3 - 0| + | 4 - 7| ) + ( | 0 - 8| + | 7 - 10| ) + ( | 8 - 9| + | 10 - 12| ) = 2 + 4 + 3 + 3 + 8 + 3 + 1 + 2 = 26",
    "topics": [
      "constructive algorithms",
      "divide and conquer",
      "geometry",
      "greedy",
      "sortings"
    ],
    "id": "576C"
  },
  {
    "title": "Spectator Riots",
    "url": "https://codeforces.com/problemset/problem/575/E",
    "history": "It\u2019s riot time on football stadium Ramacana! Raging fans have entered the field and the police find themselves in a difficult situation. The field can be represented as a square in the coordinate system defined by two diagonal vertices in ( 0, 0) and ( 105, 105) . The sides of that square are also considered to be inside the field, everything else is outside. In the beginning, there are N fans on the field. For each fan we are given his speed, an integer vi as well as his integer coordinates ( xi, yi) . A fan with those coordinates might move and after one second he might be at any point ( xi + p, yi + q) where 0 \u2264 | p| + | q| \u2264 vi. p, q are both integers. Points that go outside of the square that represents the field are excluded and all others have equal probability of being the location of that specific fan after one second. Andrej, a young and promising police officer, has sent a flying drone to take a photo of the riot from above. The drone\u2019s camera works like this: It selects three points with integer coordinates such that there is a chance of a fan appearing there after one second. They must not be collinear or the camera won\u2019t work. It is guaranteed that not all of the initial positions of fans will be on the same line. Camera focuses those points and creates a circle that passes through those three points. A photo is taken after one second ( one second after the initial state) . Everything that is on the circle or inside it at the moment of taking the photo ( one second after focusing the points) will be on the photo. Your goal is to select those three points so that the expected number of fans seen on the photo is maximized. If there are more such selections, select those three points that give the circle with largest radius among them. If there are still more suitable selections, any one of them will be accepted. If your answer follows conditions above and radius of circle you return is smaller then the optimal one by 0. 01, your output will be considered as correct. No test will have optimal radius bigger than 1010.",
    "input": "The first line contains the number of fans on the field, N. The next N lines contain three integers: xi , yi, vi. They are the x- coordinate, y- coordinate and speed of fan i at the beginning of the one second interval considered in the task. 3 \u2264 N \u2264 105 0 \u2264 xi, yi \u2264 105 0 \u2264 vi \u2264 1000 All numbers are integers",
    "output": "You need to output the three points that camera needs to select. Print them in three lines, with every line containing the x- coordinate, then y- coordinate, separated by a single space. The order of points does not matter.",
    "note": "",
    "topics": [
      "geometry"
    ],
    "id": "575E"
  },
  {
    "title": "Sign Posts",
    "url": "https://codeforces.com/problemset/problem/568/D",
    "history": "One Khanate had a lot of roads and very little wood. Riding along the roads was inconvenient, because the roads did not have road signs indicating the direction to important cities. The Han decided that it' s time to fix the issue, and ordered to put signs on every road. The Minister of Transport has to do that, but he has only k signs. Help the minister to solve his problem, otherwise the poor guy can lose not only his position, but also his head. More formally, every road in the Khanate is a line on the Oxy plane, given by an equation of the form Ax + By + C = 0 ( A and B are not equal to 0 at the same time) . You are required to determine whether you can put signs in at most k points so that each road had at least one sign installed.",
    "input": "The input starts with two positive integers n, k ( 1 \u2264 n \u2264 105, 1 \u2264 k \u2264 5) Next n lines contain three integers each, Ai, Bi, Ci, the coefficients of the equation that determines the road ( | Ai| , | Bi| , | Ci| \u2264 105, Ai2 + Bi2 = \u0338 0) . It is guaranteed that no two roads coincide.",
    "output": "If there is no solution, print \" NO\" in the single line ( without the quotes) . Otherwise, print in the first line \" YES\" ( without the quotes) . In the second line print a single number m ( m \u2264 k) \u2014 the number of used signs. In the next m lines print the descriptions of their locations. Description of a location of one sign is two integers v, u. If u and v are two distinct integers between 1 and n, we assume that sign is at the point of intersection of roads number v and u. If u = - 1, and v is an integer between 1 and n, then the sign is on the road number v in the point not lying on any other road. In any other case the description of a sign will be assumed invalid and your answer will be considered incorrect. In case if v = u, or if v and u are the numbers of two non- intersecting roads, your answer will also be considered incorrect. The roads are numbered starting from 1 in the order in which they follow in the input.",
    "note": "Note that you do not have to minimize m, but it shouldn' t be more than k. In the first test all three roads intersect at point ( 0, 0) . In the second test all three roads form a triangle and there is no way to place one sign so that it would stand on all three roads at once.",
    "topics": [
      "brute force",
      "geometry",
      "math"
    ],
    "id": "568D"
  },
  {
    "title": "Max and Min",
    "url": "https://codeforces.com/problemset/problem/566/G",
    "history": "Two kittens, Max and Min, play with a pair of non- negative integers x and y. As you can guess from their names, kitten Max loves to maximize and kitten Min loves to minimize. As part of this game Min wants to make sure that both numbers, x and y became negative at the same time, and kitten Max tries to prevent him from doing so. Each kitten has a set of pairs of integers available to it. Kitten Max has n pairs of non- negative integers ( ai, bi) ( 1 \u2264 i \u2264 n) , and kitten Min has m pairs of non- negative integers ( cj, dj) ( 1 \u2264 j \u2264 m) . As kitten Max makes a move, it can take any available pair ( ai, bi) and add ai to x and bi to y, and kitten Min can take any available pair ( cj, dj) and subtract cj from x and dj from y. Each kitten can use each pair multiple times during distinct moves. Max moves first. Kitten Min is winning if at some moment both numbers a, b are negative simultaneously. Otherwise, the winner of the game is kitten Max. Determine which kitten wins if both of them play optimally.",
    "input": "The first line contains two integers, n and m ( 1 \u2264 n, m \u2264 100 000) \u2014 the number of pairs of numbers available to Max and Min, correspondingly. The second line contains two integers x, y ( 1 \u2264 x, y \u2264 109) \u2014 the initial values of numbers with which the kittens are playing. Next n lines contain the pairs of numbers ai, bi ( 1 \u2264 ai, bi \u2264 109) \u2014 the pairs available to Max. The last m lines contain pairs of numbers cj, dj ( 1 \u2264 cj, dj \u2264 109) \u2014 the pairs available to Min.",
    "output": "Print \u00abMax\u00bb ( without the quotes) , if kitten Max wins, or \" Min\" ( without the quotes) , if kitten Min wins.",
    "note": "In the first test from the statement Min can respond to move ( 2, 3) by move ( 3, 10) , and to move ( 3, 2) by move ( 10, 3) . Thus, for each pair of Max and Min' s moves the values of both numbers x and y will strictly decrease, ergo, Min will win sooner or later. In the second sample test after each pair of Max and Min' s moves both numbers x and y only increase, thus none of them will become negative.",
    "topics": [
      "geometry"
    ],
    "id": "566G"
  },
  {
    "title": "Randomizer",
    "url": "https://codeforces.com/problemset/problem/559/D",
    "history": "Gerald got tired of playing board games with the usual six- sided die, and he bought a toy called Randomizer. It functions as follows. A Randomizer has its own coordinate plane on which a strictly convex polygon is painted, the polygon is called a basic polygon. If you shake a Randomizer, it draws some nondegenerate ( i. e. having a non- zero area) convex polygon with vertices at some vertices of the basic polygon. The result of the roll ( more precisely, the result of the shaking) is considered to be the number of points with integer coordinates, which were strictly inside ( the points on the border are not considered) the selected polygon. Now Gerald is wondering: what is the expected result of shaking the Randomizer? During the shaking the Randomizer considers all the possible non- degenerate convex polygons with vertices at the vertices of the basic polygon. Let' s assume that there are k versions of the polygons. Then the Randomizer chooses each of them with probability .",
    "input": "The first line of the input contains a single integer n ( 3 \u2264 n \u2264 100 000) \u2014 the number of vertices of the basic polygon. Next n lines contain the coordinates of the vertices of the basic polygon. The i- th of these lines contain two integers xi and yi ( - 109 \u2264 xi, yi \u2264 109) \u2014 the coordinates of the i- th vertex of the polygon. The vertices are given in the counter- clockwise order.",
    "output": "Print the sought expected value with absolute or relative error at most 10 - 9.",
    "note": "A polygon is called strictly convex if it is convex and no its vertices lie on the same line. Let' s assume that a random variable takes values x1, . . . , xn with probabilities p1, . . . , pn, correspondingly. Then the expected value of this variable equals to .",
    "topics": [
      "combinatorics",
      "geometry",
      "probabilities"
    ],
    "id": "559D"
  },
  {
    "title": "Gerald's Hexagon",
    "url": "https://codeforces.com/problemset/problem/559/A",
    "history": "Gerald got a very curious hexagon for his birthday. The boy found out that all the angles of the hexagon are equal to . Then he measured the length of its sides, and found that each of them is equal to an integer number of centimeters. There the properties of the hexagon ended and Gerald decided to draw on it. He painted a few lines, parallel to the sides of the hexagon. The lines split the hexagon into regular triangles with sides of 1 centimeter. Now Gerald wonders how many triangles he has got. But there were so many of them that Gerald lost the track of his counting. Help the boy count the triangles.",
    "input": "The first and the single line of the input contains 6 space- separated integers a1, a2, a3, a4, a5 and a6 ( 1 \u2264 ai \u2264 1000) \u2014 the lengths of the sides of the hexagons in centimeters in the clockwise order. It is guaranteed that the hexagon with the indicated properties and the exactly such sides exists.",
    "output": "Print a single integer \u2014 the number of triangles with the sides of one 1 centimeter, into which the hexagon is split.",
    "note": "This is what Gerald' s hexagon looks like in the first sample: And that' s what it looks like in the second sample:",
    "topics": [
      "brute force",
      "geometry",
      "math"
    ],
    "id": "559A"
  },
  {
    "title": "Vanya and Triangles",
    "url": "https://codeforces.com/problemset/problem/552/D",
    "history": "Vanya got bored and he painted n distinct points on the plane. After that he connected all the points pairwise and saw that as a result many triangles were formed with vertices in the painted points. He asks you to count the number of the formed triangles with the non- zero area.",
    "input": "The first line contains integer n ( 1 \u2264 n \u2264 2000) \u2014 the number of the points painted on the plane. Next n lines contain two integers each xi, yi ( - 100 \u2264 xi, yi \u2264 100) \u2014 the coordinates of the i- th point. It is guaranteed that no two given points coincide.",
    "output": "In the first line print an integer \u2014 the number of triangles with the non- zero area among the painted points.",
    "note": "Note to the first sample test. There are 3 triangles formed: ( 0, 0) - ( 1, 1) - ( 2, 0) ; ( 0, 0) - ( 2, 2) - ( 2, 0) ; ( 1, 1) - ( 2, 2) - ( 2, 0) . Note to the second sample test. There is 1 triangle formed: ( 0, 0) - ( 1, 1) - ( 2, 0) . Note to the third sample test. A single point doesn' t form a single triangle.",
    "topics": [
      "brute force",
      "combinatorics",
      "data structures",
      "geometry",
      "math",
      "sortings"
    ],
    "id": "552D"
  },
  {
    "title": "Sasha Circle",
    "url": "https://codeforces.com/problemset/problem/549/E",
    "history": "Berlanders like to eat cones after a hard day. Misha Square and Sasha Circle are local authorities of Berland. Each of them controls its points of cone trade. Misha has n points, Sasha \u2014 m. Since their subordinates constantly had conflicts with each other, they decided to build a fence in the form of a circle, so that the points of trade of one businessman are strictly inside a circle, and points of the other one are strictly outside. It doesn' t matter which of the two gentlemen will have his trade points inside the circle. Determine whether they can build a fence or not.",
    "input": "The first line contains two integers n and m ( 1 \u2264 n, m \u2264 10000) , numbers of Misha' s and Sasha' s trade points respectively. The next n lines contains pairs of space- separated integers Mx, My ( - 104 \u2264 Mx, My \u2264 104) , coordinates of Misha' s trade points. The next m lines contains pairs of space- separated integers Sx, Sy ( - 104 \u2264 Sx, Sy \u2264 104) , coordinates of Sasha' s trade points. It is guaranteed that all n + m points are distinct.",
    "output": "The only output line should contain either word \" YES\" without quotes in case it is possible to build a such fence or word \" NO\" in the other case.",
    "note": "In the first sample there is no possibility to separate points, because any circle that contains both points ( - 1, 0) , ( 1, 0) also contains at least one point from the set ( 0, - 1) , ( 0, 1) , and vice- versa: any circle that contains both points ( 0, - 1) , ( 0, 1) also contains at least one point from the set ( - 1, 0) , ( 1, 0) In the second sample one of the possible solution is shown below. Misha' s points are marked with red colour and Sasha' s are marked with blue.",
    "topics": [
      "geometry",
      "math"
    ],
    "id": "549E"
  },
  {
    "title": "Tavas and Pashmaks",
    "url": "https://codeforces.com/problemset/problem/535/E",
    "history": "Tavas is a cheerleader in the new sports competition named \" Pashmaks\" . This competition consists of two part: swimming and then running. People will immediately start running R meters after they finished swimming exactly S meters. A winner is a such person that nobody else finishes running before him/ her ( there may be more than one winner) . Before the match starts, Tavas knows that there are n competitors registered for the match. Also, he knows that i- th person' s swimming speed is si meters per second and his/ her running speed is ri meters per second. Unfortunately, he doesn' t know the values of R and S, but he knows that they are real numbers greater than 0. As a cheerleader, Tavas wants to know who to cheer up. So, he wants to know all people that might win. We consider a competitor might win if and only if there are some values of R and S such that with these values, ( s) he will be a winner. Tavas isn' t really familiar with programming, so he asked you to help him.",
    "input": "The first line of input contains a single integer n ( 1 \u2264 n \u2264 2 \u00d7 105) . The next n lines contain the details of competitors. i- th line contains two integers si and ri ( 1 \u2264 si, ri \u2264 104) .",
    "output": "In the first and the only line of output, print a sequence of numbers of possible winners in increasing order.",
    "note": "",
    "topics": [
      "geometry",
      "math"
    ],
    "id": "535E"
  },
  {
    "title": "Points in triangle",
    "url": "https://codeforces.com/problemset/problem/530/H",
    "history": "You are given a set of points on a plane with positive integer coordinates. Find a triangle of minimum area with vertices in points ( 0, 0) , ( A, 0) and ( 0, B) ( A and B are unknown positive integers) that contains all the given points inside it ( points on the edges count towards being inside) .",
    "input": "The first line of the input contains an integer N ( 1 \u2264 N \u2264 100) \u2014 the number of points. The following N lines contain pairs of numbers X and Y ( 1 \u2264 X, Y \u2264 100) - the coordinates of the points. All points are distinct.",
    "output": "Output one floating- point number \u2014 the minimal area of the triangle. The answer is considered to be correct if its absolute or relative error does not exceed 10 - 4.",
    "note": "",
    "topics": [
      "*special",
      "geometry"
    ],
    "id": "530H"
  },
  {
    "title": "Triangles 3000",
    "url": "https://codeforces.com/problemset/problem/528/E",
    "history": "",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "geometry",
      "sortings"
    ],
    "id": "528E"
  },
  {
    "title": "Han Solo and Lazer Gun",
    "url": "https://codeforces.com/problemset/problem/514/B",
    "history": "There are n Imperial stormtroopers on the field. The battle field is a plane with Cartesian coordinate system. Each stormtrooper is associated with his coordinates ( x, y) on this plane. Han Solo has the newest duplex lazer gun to fight these stormtroopers. It is situated at the point ( x0, y0) . In one shot it can can destroy all the stormtroopers, situated on some line that crosses point ( x0, y0) . Your task is to determine what minimum number of shots Han Solo needs to defeat all the stormtroopers. The gun is the newest invention, it shoots very quickly and even after a very large number of shots the stormtroopers don' t have enough time to realize what' s happening and change their location.",
    "input": "The first line contains three integers n, x0 \u0438 y0 ( 1 \u2264 n \u2264 1000, - 104 \u2264 x0, y0 \u2264 104) \u2014 the number of stormtroopers on the battle field and the coordinates of your gun. Next n lines contain two integers each xi, yi ( - 104 \u2264 xi, yi \u2264 104) \u2014 the coordinates of the stormtroopers on the battlefield. It is guaranteed that no stormtrooper stands at the same point with the gun. Multiple stormtroopers can stand at the same point.",
    "output": "Print a single integer \u2014 the minimum number of shots Han Solo needs to destroy all the stormtroopers.",
    "note": "Explanation to the first and second samples from the statement, respectively:",
    "topics": [
      "brute force",
      "data structures",
      "geometry",
      "implementation",
      "math"
    ],
    "id": "514B"
  },
  {
    "title": "Amr and Pins",
    "url": "https://codeforces.com/problemset/problem/507/B",
    "history": "Amr loves Geometry. One day he came up with a very interesting problem. Amr has a circle of radius r and center in point ( x, y) . He wants the circle center to be in new position ( x' , y' ) . In one step Amr can put a pin to the border of the circle in a certain point, then rotate the circle around that pin by any angle and finally remove the pin. Help Amr to achieve his goal in minimum number of steps.",
    "input": "Input consists of 5 space- separated integers r, x, y, x' y' ( 1 \u2264 r \u2264 105, - 105 \u2264 x, y, x' , y' \u2264 105) , circle radius, coordinates of original center of the circle and coordinates of destination center of the circle respectively.",
    "output": "Output a single integer \u2014 minimum number of steps required to move the center of the circle to the destination point.",
    "note": "In the first sample test the optimal way is to put a pin at point ( 0, 2) and rotate the circle by 180 degrees counter- clockwise ( or clockwise, no matter) .",
    "topics": [
      "geometry",
      "math"
    ],
    "id": "507B"
  },
  {
    "title": "Crazy Town",
    "url": "https://codeforces.com/problemset/problem/498/A",
    "history": "Crazy Town is a plane on which there are n infinite line roads. Each road is defined by the equation aix + biy + ci = 0, where ai and bi are not both equal to the zero. The roads divide the plane into connected regions, possibly of infinite space. Let' s call each such region a block. We define an intersection as the point where at least two different roads intersect. Your home is located in one of the blocks. Today you need to get to the University, also located in some block. In one step you can move from one block to another, if the length of their common border is nonzero ( in particular, this means that if the blocks are adjacent to one intersection, but have no shared nonzero boundary segment, then it are not allowed to move from one to another one in one step) . Determine what is the minimum number of steps you have to perform to get to the block containing the university. It is guaranteed that neither your home nor the university is located on the road.",
    "input": "The first line contains two space- separated integers x1, y1 ( - 106 \u2264 x1, y1 \u2264 106) \u2014 the coordinates of your home. The second line contains two integers separated by a space x2, y2 ( - 106 \u2264 x2, y2 \u2264 106) \u2014 the coordinates of the university you are studying at. The third line contains an integer n ( 1 \u2264 n \u2264 300) \u2014 the number of roads in the city. The following n lines contain 3 space- separated integers ( - 106 \u2264 ai, bi, ci \u2264 106; | ai| + | bi| > 0) \u2014 the coefficients of the line aix + biy + ci = 0, defining the i- th road. It is guaranteed that no two roads are the same. In addition, neither your home nor the university lie on the road ( i. e. they do not belong to any one of the lines) .",
    "output": "Output the answer to the problem.",
    "note": "Pictures to the samples are presented below ( A is the point representing the house; B is the point representing the university, different blocks are filled with different colors) :",
    "topics": [
      "geometry"
    ],
    "id": "498A"
  },
  {
    "title": "Gears",
    "url": "https://codeforces.com/problemset/problem/497/D",
    "history": "",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "brute force",
      "geometry",
      "math"
    ],
    "id": "497D"
  },
  {
    "title": "Captain Marmot",
    "url": "https://codeforces.com/problemset/problem/474/C",
    "history": "Captain Marmot wants to prepare a huge and important battle against his enemy, Captain Snake. For this battle he has n regiments, each consisting of 4 moles. Initially, each mole i ( 1 \u2264 i \u2264 4n) is placed at some position ( xi, yi) in the Cartesian plane. Captain Marmot wants to move some moles to make the regiments compact, if it' s possible. Each mole i has a home placed at the position ( ai, bi) . Moving this mole one time means rotating his position point ( xi, yi) 90 degrees counter- clockwise around it' s home point ( ai, bi) . A regiment is compact only if the position points of the 4 moles form a square with non- zero area. Help Captain Marmot to find out for each regiment the minimal number of moves required to make that regiment compact, if it' s possible.",
    "input": "The first line contains one integer n ( 1 \u2264 n \u2264 100) , the number of regiments. The next 4n lines contain 4 integers xi, yi, ai, bi ( - 104 \u2264 xi, yi, ai, bi \u2264 104) .",
    "output": "Print n lines to the standard output. If the regiment i can be made compact, the i- th line should contain one integer, the minimal number of required moves. Otherwise, on the i- th line print \" - 1\" ( without quotes) .",
    "note": "In the first regiment we can move once the second or the third mole. We can' t make the second regiment compact. In the third regiment, from the last 3 moles we can move once one and twice another one. In the fourth regiment, we can move twice the first mole and once the third mole.",
    "topics": [
      "brute force",
      "geometry"
    ],
    "id": "474C"
  },
  {
    "title": "Restore Cube ",
    "url": "https://codeforces.com/problemset/problem/464/B",
    "history": "Peter had a cube with non- zero length of a side. He put the cube into three- dimensional space in such a way that its vertices lay at integer points ( it is possible that the cube' s sides are not parallel to the coordinate axes) . Then he took a piece of paper and wrote down eight lines, each containing three integers \u2014 coordinates of cube' s vertex ( a single line contains coordinates of a single vertex, each vertex is written exactly once) , put the paper on the table and left. While Peter was away, his little brother Nick decided to play with the numbers on the paper. In one operation Nick could swap some numbers inside a single line ( Nick didn' t swap numbers from distinct lines) . Nick could have performed any number of such operations. When Peter returned and found out about Nick' s mischief, he started recollecting the original coordinates. Help Peter restore the original position of the points or else state that this is impossible and the numbers were initially recorded incorrectly.",
    "input": "Each of the eight lines contains three space- separated integers \u2014 the numbers written on the piece of paper after Nick' s mischief. All numbers do not exceed 106 in their absolute value.",
    "output": "If there is a way to restore the cube, then print in the first line \" YES\" . In each of the next eight lines print three integers \u2014 the restored coordinates of the points. The numbers in the i- th output line must be a permutation of the numbers in i- th input line. The numbers should represent the vertices of a cube with non- zero length of a side. If there are multiple possible ways, print any of them. If there is no valid way, print \" NO\" ( without the quotes) in the first line. Do not print anything else.",
    "note": "",
    "topics": [
      "brute force",
      "geometry"
    ],
    "id": "464B"
  },
  {
    "title": "Roland and Rose",
    "url": "https://codeforces.com/problemset/problem/460/E",
    "history": "Roland loves growing flowers. He has recently grown a beautiful rose at point ( 0, 0) of the Cartesian coordinate system. The rose is so beautiful that Roland is afraid that the evil forces can try and steal it. To protect the rose, Roland wants to build n watch towers. Let' s assume that a tower is a point on the plane at the distance of at most r from the rose. Besides, Roland assumes that the towers should be built at points with integer coordinates and the sum of squares of distances between all pairs of towers must be as large as possible. Note, that Roland may build several towers at the same point, also he may build some of them at point ( 0, 0) . Help Roland build the towers at the integer points so that the sum of squares of distances between all towers is maximum possible. Note that the distance in this problem is defined as the Euclidian distance between points.",
    "input": "The first line contains two integers, n and r ( 2 \u2264 n \u2264 8; 1 \u2264 r \u2264 30) .",
    "output": "In the first line print an integer \u2014 the maximum possible sum of squared distances. In the i- th of the following n lines print two integers, xi, yi \u2014 the coordinates of the i- th tower. Each tower must be inside or on the border of the circle with radius r. Note that there may be several towers located at the same point of the plane, also some towers can be located at point ( 0, 0) . If there are multiple valid optimal arrangements, choose any of them.",
    "note": "",
    "topics": [
      "brute force",
      "geometry",
      "math",
      "sortings"
    ],
    "id": "460E"
  },
  {
    "title": "4-point polyline",
    "url": "https://codeforces.com/problemset/problem/452/B",
    "history": "You are given a rectangular grid of lattice points from ( 0, 0) to ( n, m) inclusive. You have to choose exactly 4 different points to build a polyline possibly with self- intersections and self- touching. This polyline should be as long as possible. A polyline defined by points p1, p2, p3, p4 consists of the line segments p1 p2, p2 p3, p3 p4, and its length is the sum of the lengths of the individual line segments.",
    "input": "The only line of the input contains two integers n and m ( 0 \u2264 n, m \u2264 1000) . It is guaranteed that grid contains at least 4 different points.",
    "output": "Print 4 lines with two integers per line separated by space \u2014 coordinates of points p1, p2, p3, p4 in order which represent the longest possible polyline. Judge program compares your answer and jury' s answer with 10 - 6 precision.",
    "note": "",
    "topics": [
      "brute force",
      "constructive algorithms",
      "geometry",
      "trees"
    ],
    "id": "452B"
  },
  {
    "title": "Gena and Second Distance",
    "url": "https://codeforces.com/problemset/problem/442/E",
    "history": "Gena doesn' t like geometry, so he asks you to solve this problem for him. A rectangle with sides parallel to coordinate axes contains n dots. Let' s consider some point of the plane. Let' s count the distances from this point to the given n points. Let' s sort these numbers in the non- decreasing order. We' ll call the beauty of the point the second element of this array. If there are two mimimum elements in this array, the beaty will be equal to this minimum. Find the maximum beauty of a point inside the given rectangle.",
    "input": "The first line contains three integers w, h, n ( 1 \u2264 w, h \u2264 106, 2 \u2264 n \u2264 1000) \u2014 the lengths of the rectangle sides and the number of points. Next n lines contain two integers xi, yi ( 0 \u2264 xi \u2264 w, 0 \u2264 yi \u2264 h) each \u2014 the coordinates of a point. It is possible that it will be coincident points.",
    "output": "Print a single number \u2014 the maximum beauty of a point with the absolute or relative error of at most 10 - 9.",
    "note": "The point which beauty we need to find must have coordinates ( x, y) , where 0 \u2264 x \u2264 w, 0 \u2264 y \u2264 h. Some of the n points can coincide.",
    "topics": [
      "geometry"
    ],
    "id": "442E"
  },
  {
    "title": "The Child and Polygon",
    "url": "https://codeforces.com/problemset/problem/437/E",
    "history": "This time our child has a simple polygon. He has to find the number of ways to split the polygon into non- degenerate triangles, each way must satisfy the following requirements: each vertex of each triangle is one of the polygon vertex; each side of the polygon must be the side of exactly one triangle; the area of intersection of every two triangles equals to zero, and the sum of all areas of triangles equals to the area of the polygon; each triangle must be completely inside the polygon; each side of each triangle must contain exactly two vertices of the polygon. The picture below depicts an example of a correct splitting. Please, help the child. Calculate the described number of ways modulo 1000000007 ( 109 + 7) for him.",
    "input": "The first line contains one integer n ( 3 \u2264 n \u2264 200) \u2014 the number of vertices of the polygon. Then follow n lines, each line containing two integers. The i- th line contains xi, yi ( | xi| , | yi| \u2264 107) \u2014 the i- th vertex of the polygon in clockwise or counterclockwise order. It' s guaranteed that the polygon is simple.",
    "output": "Output the number of ways modulo 1000000007 ( 109 + 7) .",
    "note": "In the first sample, there are two possible splittings: In the second sample, there are only one possible splitting:",
    "topics": [
      "dp",
      "geometry"
    ],
    "id": "437E"
  },
  {
    "title": "Tricky Function",
    "url": "https://codeforces.com/problemset/problem/429/D",
    "history": "Iahub and Sorin are the best competitive programmers in their town. However, they can' t both qualify to an important contest. The selection will be made with the help of a single problem. Blatnatalag, a friend of Iahub, managed to get hold of the problem before the contest. Because he wants to make sure Iahub will be the one qualified, he tells Iahub the following task. You' re given an ( 1- based) array a with n elements. Let' s define function f( i, j) ( 1 \u2264 i, j \u2264 n) as ( i - j) 2 + g( i, j) 2. Function g is calculated by the following pseudo- code: int g( int i, int j) int sum = 0; for ( int k = min( i, j) + 1; k < = max( i, j) ; k = k + 1) sum = sum + a[ k] ; return sum; Find a value mini = \u0338 j f( i, j) . Probably by now Iahub already figured out the solution to this problem. Can you?",
    "input": "The first line of input contains a single integer n ( 2 \u2264 n \u2264 100000) . Next line contains n integers a[ 1] , a[ 2] , . . . , a[ n] ( - 104 \u2264 a[ i] \u2264 104) .",
    "output": "Output a single integer \u2014 the value of mini = \u0338 j f( i, j) .",
    "note": "",
    "topics": [
      "data structures",
      "divide and conquer",
      "geometry"
    ],
    "id": "429D"
  },
  {
    "title": "Playing the ball",
    "url": "https://codeforces.com/problemset/problem/420/E",
    "history": "A coder cannot sit and code all day. Sometimes it is a good idea to rise from the desk, have a rest, have small talk with colleagues and even play. The coders of the F company have their favorite ball game. Let' s imagine the game on the plane with a cartesian coordinate system. The point ( 0, 0) contains the player who chooses an arbitrary direction and throws a ball in that direction. The ball hits the plane at distance d from the player' s original position and continues flying in the same direction. After the ball hits the plane for the first time, it flies on and hits the plane again at distance 2\u00b7d from the player' s original position and so on ( it continue flying in the chosen direction and hitting the plane after each d units) . All coders in the F company are strong, so the ball flies infinitely far away. The plane has n circles painted on it. If a ball hits the plane and hits a circle that is painted on the plane ( including its border) , then the player gets one point. The ball can hit multiple circles at once and get one point for each of them ( if the ball hits some circle x times during the move, the player also gets x points) . Count the maximum number of points a player can get if he throws a ball in the arbitrary direction. Note that the direction may have real cooridinates.",
    "input": "The first line contains two space- separated integers \u2014 n \u0438 d ( 1 \u2264 n \u2264 2\u00b7104; 5 \u2264 d \u2264 10) . Next n lines contain the circles' description. The i- th line contains three space- separated integers xi, yi, ri ( - 10000 \u2264 xi, yi \u2264 10000; 1 \u2264 r \u2264 50) , where ( xi, yi, ri) are the coordinates of the center and the radius of the circle, correspondingly. The point ( 0, 0) is not inside or on the border of some circle.",
    "output": "Print a single integer \u2014 the maximum number of points you can get.",
    "note": "",
    "topics": [
      "geometry"
    ],
    "id": "420E"
  },
  {
    "title": "On a plane",
    "url": "https://codeforces.com/problemset/problem/409/G",
    "history": "",
    "input": "The first line contains a single integer n ( 1 \u2264 n \u2264 1000) \u2014 the number of points on a plane. Each of the next n lines contains two real coordinates xi and yi of the point, specified with exactly 2 fractional digits. All coordinates are between - 1000 and 1000, inclusive.",
    "output": "Output a single real number \u03b8 \u2014 the answer to the problem statement. The absolute or relative error of your answer should be at most 10 - 2.",
    "note": "",
    "topics": [
      "*special",
      "geometry"
    ],
    "id": "409G"
  },
  {
    "title": "Triangle",
    "url": "https://codeforces.com/problemset/problem/407/A",
    "history": "There is a right triangle with legs of length a and b. Your task is to determine whether it is possible to locate the triangle on the plane in such a way that none of its sides is parallel to the coordinate axes. All the vertices must have integer coordinates. If there exists such a location, you have to output the appropriate coordinates of vertices.",
    "input": "The first line contains two integers a, b ( 1 \u2264 a, b \u2264 1000) , separated by a single space.",
    "output": "In the first line print either \" YES\" or \" NO\" ( without the quotes) depending on whether the required location exists. If it does, print in the next three lines three pairs of integers \u2014 the coordinates of the triangle vertices, one pair per line. The coordinates must be integers, not exceeding 109 in their absolute value.",
    "note": "",
    "topics": [
      "brute force",
      "geometry",
      "implementation",
      "math"
    ],
    "id": "407A"
  },
  {
    "title": "Hill Climbing",
    "url": "https://codeforces.com/problemset/problem/406/D",
    "history": "This problem has nothing to do with Little Chris. It is about hill climbers instead ( and Chris definitely isn' t one) . There are n hills arranged on a line, each in the form of a vertical line segment with one endpoint on the ground. The hills are numbered with numbers from 1 to n from left to right. The i- th hill stands at position xi with its top at height yi. For every two hills a and b, if the top of hill a can be seen from the top of hill b, their tops are connected by a rope. Formally, the tops of two hills are connected if the segment connecting their top points does not intersect or touch any of the other hill segments. Using these ropes, the hill climbers can move from hill to hill. There are m teams of climbers, each composed of exactly two members. The first and the second climbers of the i- th team are located at the top of the ai- th and bi- th hills, respectively. They want to meet together at the top of some hill. Now, each of two climbers move according to the following process: if a climber is at the top of the hill where the other climber is already located or will come eventually, the former climber stays at this hill; otherwise, the climber picks a hill to the right of his current hill that is reachable by a rope and is the rightmost possible, climbs this hill and continues the process ( the climber can also climb a hill whose top is lower than the top of his current hill) . For each team of climbers, determine the number of the meeting hill for this pair!",
    "input": "The first line of input contains a single integer n ( 1 \u2264 n \u2264 105) , the number of hills. The next n lines describe the hills. The i- th of them contains two space- separated integers xi, yi ( 1 \u2264 xi \u2264 107; 1 \u2264 yi \u2264 1011) , the position and the height of the i- th hill. The hills are given in the ascending order of xi, i. e. , xi < xj for i < j. The next line of input contains a single integer m ( 1 \u2264 m \u2264 105) , the number of teams. The next m lines describe the teams. The i- th of them contains two space- separated integers ai, bi ( 1 \u2264 ai, bi \u2264 n) , the numbers of the hills where the climbers of the i- th team are located. It is possible that ai = bi.",
    "output": "In a single line output m space- separated integers, where the i- th integer is the number of the meeting hill for the members of the i- th team.",
    "note": "",
    "topics": [
      "dfs and similar",
      "geometry",
      "trees"
    ],
    "id": "406D"
  },
  {
    "title": "Lightbulb for Minister",
    "url": "https://codeforces.com/problemset/problem/394/E",
    "history": "The Minister for education is coming! Naturally, nobody wants to perform poorly in front of such a honored guest. However, two hours before the arrival it turned out that one of the classes has a malfunctioning lightbulb \u2014 for some reason it doesn' t get enough energy. The solution was found quickly: all we' ve got to do is to change the location of the lightbulb so that it got the maximum amount of energy. Everybody knows that the power of the lightbulb equals , where C is some constant value and ri is the Euclidean distance from the bulb to the i- th generator. Consequently, our task is to minimize . Of course, we know the positions of all generators. The bulb should be on the ceiling of the class. The ceiling of the class is in the form of a strictly convex m- gon ( the class itself has the form of a right prism with a strictly convex m- gon at the bottom) . Help to find the optimum location for the bulb. Assume that all generators are in the plane of the class ceiling. Consider that the plane of the class ceiling has some Cartesian coordinate system introduced.",
    "input": "The first line contains integer n ( 2 \u2264 n \u2264 105) \u2014 the number of generators. Each of the next n lines contains a pair of integers xi, yi, representing the coordinates of the i- th generator in the plane of the class ceiling. It' s guaranteed that no two generators have the same location. The next line contains integer m ( 3 \u2264 m \u2264 105) \u2014 the number of vertexes in the convex polygon that describes the ceiling of the class. Each of the following m lines contains a pair of integers pi, qi, representing the coordinates of the i- th point of the polygon in the clockwise order. It' s guaranteed that the polygon is strictly convex. The absolute value of all the coordinates don' t exceed 106.",
    "output": "Print a single real number \u2014 the minimum value of the sum of squares of distances from the generators to the point of the lightbulb' s optimal position. The answer will be considered valid if its absolute or relative error doesn' t exceed 10 - 4.",
    "note": "We' ll define a strictly convex polygon as a convex polygon with the following property: no three vertices of the polygon lie on the same line.",
    "topics": [
      "geometry"
    ],
    "id": "394E"
  },
  {
    "title": "Fox and Meteor Shower",
    "url": "https://codeforces.com/problemset/problem/388/E",
    "history": "There is a meteor shower on the sky and there are n meteors. The sky can be viewed as a 2D Euclid Plane and the meteor is point on this plane. Fox Ciel looks at the sky. She finds out that the orbit of each meteor is a straight line, and each meteor has a constant velocity. Now Ciel wants to know: what is the maximum number of meteors such that any pair met at the same position at a certain time? Note that the time is not limited and can be also negative. The meteors will never collide when they appear at the same position at the same time.",
    "input": "The first line contains an integer n ( 1 \u2264 n \u2264 1000) . Each of the next n lines contains six integers: t1, x1, y1, t2, x2, y2 \u2014 the description of a meteor' s orbit: at time t1, the current meteor is located at the point ( x1, y1) and at time t2, the meteor is located at point ( x2, y2) ( - 106 \u2264 t1, x1, y1, t2, x2, y2 \u2264 106; t1 = \u0338 t2) . There will be no two meteors are always in the same position for any time.",
    "output": "Print a single integer \u2014 the maximum number of meteors such that any pair met at the same position at a certain time.",
    "note": "In example 1, meteor 1 and 2 meet in t= - 1 at ( 0, 0) . In example 2, meteor 1 and 2 meet in t= 1 at ( 1, 0) , meteor 1 and 3 meet in t= 0 at ( 0, 0) and meteor 2 and 3 meet in t= 2 at ( 0, 1) . In example 3, no two meteor meet. In example 4, there is only 1 meteor, and its velocity is zero. If your browser doesn' t support animation png, please see the gif version here: http: / / assets. codeforces. com/ images/ 388e/ example1. gifhttp: / / assets. codeforces. com/ images/ 388e/ example2. gifhttp: / / assets. codeforces. com/ images/ 388e/ example3. gifhttp: / / assets. codeforces. com/ images/ 388e/ example4. gif",
    "topics": [
      "geometry"
    ],
    "id": "388E"
  },
  {
    "title": "Bear and Floodlight",
    "url": "https://codeforces.com/problemset/problem/385/D",
    "history": "One day a bear lived on the Oxy axis. He was afraid of the dark, so he couldn' t move at night along the plane points that aren' t lit. One day the bear wanted to have a night walk from his house at point ( l, 0) to his friend' s house at point ( r, 0) , along the segment of length ( r - l) . Of course, if he wants to make this walk, he needs each point of the segment to be lit. That' s why the bear called his friend ( and yes, in the middle of the night) asking for a very delicate favor. The Oxy axis contains n floodlights. Floodlight i is at point ( xi, yi) and can light any angle of the plane as large as ai degree with vertex at point ( xi, yi) . The bear asked his friend to turn the floodlights so that he ( the bear) could go as far away from his house as possible during the walking along the segment. His kind friend agreed to fulfill his request. And while he is at it, the bear wonders: what is the furthest he can go away from his house? Hep him and find this distance. Consider that the plane has no obstacles and no other light sources besides the floodlights. The bear' s friend cannot turn the floodlights during the bear' s walk. Assume that after all the floodlights are turned in the correct direction, the bear goes for a walk and his friend goes to bed.",
    "input": "The first line contains three space- separated integers n, l, r ( 1 \u2264 n \u2264 20; - 105 \u2264 l \u2264 r \u2264 105) . The i- th of the next n lines contain three space- separated integers xi, yi, ai ( - 1000 \u2264 xi \u2264 1000; 1 \u2264 yi \u2264 1000; 1 \u2264 ai \u2264 90) \u2014 the floodlights' description. Note that two floodlights can be at the same point of the plane.",
    "output": "Print a single real number \u2014 the answer to the problem. The answer will be considered correct if its relative or absolute error doesn' t exceed 10 - 6.",
    "note": "In the first sample, one of the possible solutions is: In the second sample, a single solution is: In the third sample, a single solution is:",
    "topics": [
      "bitmasks",
      "dp",
      "geometry"
    ],
    "id": "385D"
  },
  {
    "title": "New Year Tree Decorations",
    "url": "https://codeforces.com/problemset/problem/379/E",
    "history": "Due to atheistic Soviet past, Christmas wasn' t officially celebrated in Russia for most of the twentieth century. As a result, the Russian traditions for Christmas and New Year mixed into one event celebrated on the New Year but including the tree, a Santa- like ' Grandfather Frost' , presents and huge family reunions and dinner parties all over the country. Bying a Tree at the New Year and installing it in the house is a tradition. Usually the whole family decorates the tree on the New Year Eve. We hope that Codeforces is a big and loving family, so in this problem we are going to decorate a tree as well. So, our decoration consists of n pieces, each piece is a piece of colored paper, its border is a closed polyline of a special shape. The pieces go one by one as is shown on the picture. The i- th piece is a polyline that goes through points: ( 0, 0) , ( 0, y0) , ( 1, y1) , ( 2, y2) , . . . , ( k, yk) , ( k, 0) . The width of each piece equals k. The figure to the left shows the decoration, the figure to the right shows the individual pieces it consists of. The piece number 1 ( shown red on the figure) is the outer piece ( we see it completely) , piece number 2 ( shown yellow) follows it ( we don' t see it completely as it is partially closed by the first piece) and so on. The programmers are quite curious guys, so the moment we hung a decoration on the New Year tree we started to wonder: what area of each piece can people see?",
    "input": "The first line contains two integers, n and k ( 1 \u2264 n, k \u2264 300) . Each of the following n lines contains k + 1 integers \u2014 the description of the polyline. If the i- th line contains ontegers yi, 0, yi, 1, . . . , yi, k, that means that the polyline of the i- th piece goes through points ( 0, 0) , ( 0, yi, 0) , ( 1, yi, 1) , ( 2, yi, 2) , . . . , ( k, yi, k) , ( k, 0) ( 1 \u2264 yi, j \u2264 1000) .",
    "output": "Print n real numbers \u2014 for each polyline, the area of its visible part. The answer will be considered correct if its relative or absolute error do not exceed 10 - 4.",
    "note": "",
    "topics": [
      "geometry",
      "schedules",
      "sortings"
    ],
    "id": "379E"
  },
  {
    "title": "Cookie Clicker",
    "url": "https://codeforces.com/problemset/problem/377/E",
    "history": "Kostya is playing the computer game Cookie Clicker. The goal of this game is to gather cookies. You can get cookies using different buildings: you can just click a special field on the screen and get the cookies for the clicks, you can buy a cookie factory, an alchemy lab, a time machine and it all will bring lots and lots of cookies. At the beginning of the game ( time 0) , Kostya has 0 cookies and no buildings. He has n available buildings to choose from: the i- th building is worth ci cookies and when it' s built it brings vi cookies at the end of each second. Also, to make the game more interesting to play, Kostya decided to add a limit: at each moment of time, he can use only one building. Of course, he can change the active building each second at his discretion. It' s important that Kostya is playing a version of the game where he can buy new buildings and change active building only at time moments that are multiples of one second. Kostya can buy new building and use it at the same time. If Kostya starts to use a building at the time moment t, he can get the first profit from it only at the time moment t + 1. Kostya wants to earn at least s cookies as quickly as possible. Determine the number of seconds he needs to do that.",
    "input": "The first line contains two integers n and s ( 1 \u2264 n \u2264 2\u00b7105, 1 \u2264 s \u2264 1016) \u2014 the number of buildings in the game and the number of cookies Kostya wants to earn. Each of the next n lines contains two integers vi and ci ( 1 \u2264 vi \u2264 108, 0 \u2264 ci \u2264 108) \u2014 the number of cookies the i- th building brings per second and the building' s price.",
    "output": "Output the only integer \u2014 the minimum number of seconds Kostya needs to earn at least s cookies. It is guaranteed that he can do it.",
    "note": "",
    "topics": [
      "dp",
      "geometry"
    ],
    "id": "377E"
  },
  {
    "title": "Inna and Babies",
    "url": "https://codeforces.com/problemset/problem/374/E",
    "history": "Inna, Dima and Sereja are in one room together. It' s cold outside, so Sereja suggested to play a board game called \" Babies\" . The babies playing board is an infinite plane containing n blue babies and m red ones. Each baby is a segment that grows in time. At time moment t the blue baby ( x, y) is a blue segment with ends at points ( x - t, y + t) , ( x + t, y - t) . Similarly, at time t the red baby ( x, y) is a red segment with ends at points ( x + t, y + t) , ( x - t, y - t) of the plane. Initially, at time t = 0 all babies are points on the plane. The goal of the game is to find the first integer moment of time when the plane contains a rectangle of a non- zero area which sides are fully covered by some babies. A side may be covered by multiple babies. More formally, each point of each side of the rectangle should be covered by at least one baby of any color. At that, you must assume that the babies are closed segments, that is, they contain their endpoints. You are given the positions of all babies \u2014 help Inna and Dima to find the required moment of time.",
    "input": "The first line of the input contains two integers n and m ( 1 \u2264 n, m \u2264 2000) . Next n lines contain the coordinates of the blue babies. The i- th line contains integers xi, yi \u2014 a baby' s coordinates. Next m lines contain the coordinates of m red babies in the similar form. All coordinates of the input don' t exceed 106 in their absolute value. Note that all babies stand in distinct points.",
    "output": "In the single line print a single integer \u2014 the answer to the problem. If the rectangle never appears on the plane, print \" Poor Sereja! \" without the quotes.",
    "note": "",
    "topics": [
      "binary search",
      "data structures",
      "dsu",
      "geometry",
      "implementation"
    ],
    "id": "374E"
  },
  {
    "title": "Drawing Circles is Fun",
    "url": "https://codeforces.com/problemset/problem/372/E",
    "history": "There are a set of points S on the plane. This set doesn' t contain the origin O( 0, 0) , and for each two distinct points in the set A and B, the triangle OAB has strictly positive area. Consider a set of pairs of points ( P1, P2) , ( P3, P4) , . . . , ( P2k - 1, P2k) . We' ll call the set good if and only if: k \u2265 2. All Pi are distinct, and each Pi is an element of S. For any two pairs ( P2i - 1, P2i) and ( P2j - 1, P2j) , the circumcircles of triangles OP2i - 1P2j - 1 and OP2iP2j have a single common point, and the circumcircle of triangles OP2i - 1P2j and OP2iP2j - 1 have a single common point. Calculate the number of good sets of pairs modulo 1000000007 ( 109 + 7) .",
    "input": "The first line contains a single integer n ( 1 \u2264 n \u2264 1000) \u2014 the number of points in S. Each of the next n lines contains four integers ai, bi, ci, di ( 0 \u2264 | ai| , | ci| \u2264 50; 1 \u2264 bi, di \u2264 50; ( ai, ci) = \u0338 ( 0, 0) ) . These integers represent a point . No two points coincide.",
    "output": "Print a single integer \u2014 the answer to the problem modulo 1000000007 ( 109 + 7) .",
    "note": "",
    "topics": [
      "combinatorics",
      "geometry"
    ],
    "id": "372E"
  },
  {
    "title": "Looking for Owls",
    "url": "https://codeforces.com/problemset/problem/350/D",
    "history": "Emperor Palpatine loves owls very much. The emperor has some blueprints with the new Death Star, the blueprints contain n distinct segments and m distinct circles. We will consider the segments indexed from 1 to n in some way and the circles \u2014 indexed from 1 to m in some way. Palpatine defines an owl as a set of a pair of distinct circles ( i, j) ( i < j) and one segment k, such that: circles i and j are symmetrical relatively to the straight line containing segment k; circles i and j don' t have any common points; circles i and j have the same radius; segment k intersects the segment that connects the centers of circles i and j. Help Palpatine, count the number of distinct owls on the picture.",
    "input": "The first line contains two integers \u2014 n and m ( 1 \u2264 n \u2264 3\u00b7105, 2 \u2264 m \u2264 1500) . The next n lines contain four integers each, x1, y1, x2, y2 \u2014 the coordinates of the two endpoints of the segment. It' s guaranteed that each segment has positive length. The next m lines contain three integers each, xi, yi, ri \u2014 the coordinates of the center and the radius of the i- th circle. All coordinates are integers of at most 104 in their absolute value. The radius is a positive integer of at most 104. It is guaranteed that all segments and all circles are dictinct.",
    "output": "Print a single number \u2014 the answer to the problem. Please, do not use the",
    "note": "Here' s an owl from the first sample. The owl is sitting and waiting for you to count it.",
    "topics": [
      "binary search",
      "data structures",
      "geometry",
      "hashing",
      "sortings"
    ],
    "id": "350D"
  },
  {
    "title": "Cupboard and Balloons",
    "url": "https://codeforces.com/problemset/problem/342/C",
    "history": "A girl named Xenia has a cupboard that looks like an arc from ahead. The arc is made of a semicircle with radius r ( the cupboard' s top) and two walls of height h ( the cupboard' s sides) . The cupboard' s depth is r, that is, it looks like a rectangle with base r and height h + r from the sides. The figure below shows what the cupboard looks like ( the front view is on the left, the side view is on the right) . Xenia got lots of balloons for her birthday. The girl hates the mess, so she wants to store the balloons in the cupboard. Luckily, each balloon is a sphere with radius . Help Xenia calculate the maximum number of balloons she can put in her cupboard. You can say that a balloon is in the cupboard if you can' t see any part of the balloon on the left or right view. The balloons in the cupboard can touch each other. It is not allowed to squeeze the balloons or deform them in any way. You can assume that the cupboard' s walls are negligibly thin.",
    "input": "The single line contains two integers r, h ( 1 \u2264 r, h \u2264 107) .",
    "output": "Print a single integer \u2014 the maximum number of balloons Xenia can put in the cupboard.",
    "note": "",
    "topics": [
      "geometry"
    ],
    "id": "342C"
  },
  {
    "title": "Maximal Area Quadrilateral",
    "url": "https://codeforces.com/problemset/problem/340/B",
    "history": "Iahub has drawn a set of n points in the cartesian plane which he calls \" special points\" . A quadrilateral is a simple polygon without self- intersections with four sides ( also called edges) and four vertices ( also called corners) . Please note that a quadrilateral doesn' t have to be convex. A special quadrilateral is one which has all four vertices in the set of special points. Given the set of special points, please calculate the maximal area of a special quadrilateral.",
    "input": "The first line contains integer n ( 4 \u2264 n \u2264 300) . Each of the next n lines contains two integers: xi, yi ( - 1000 \u2264 xi, yi \u2264 1000) \u2014 the cartesian coordinates of ith special point. It is guaranteed that no three points are on the same line. It is guaranteed that no two points coincide.",
    "output": "Output a single real number \u2014 the maximal area of a special quadrilateral. The answer will be considered correct if its absolute or relative error does' t exceed 10 - 9.",
    "note": "In the test example we can choose first 4 points to be the vertices of the quadrilateral. They form a square by side 4, so the area is 4\u00b74 = 16.",
    "topics": [
      "brute force",
      "geometry"
    ],
    "id": "340B"
  },
  {
    "title": "Summer Earnings",
    "url": "https://codeforces.com/problemset/problem/333/E",
    "history": "Many schoolchildren look for a job for the summer, and one day, when Gerald was still a schoolboy, he also decided to work in the summer. But as Gerald was quite an unusual schoolboy, he found quite unusual work. A certain Company agreed to pay him a certain sum of money if he draws them three identical circles on a plane. The circles must not interfere with each other ( but they may touch each other) . He can choose the centers of the circles only from the n options granted by the Company. He is free to choose the radius of the circles himself ( all three radiuses must be equal) , but please note that the larger the radius is, the more he gets paid. Help Gerald earn as much as possible.",
    "input": "The first line contains a single integer n \u2014 the number of centers ( 3 \u2264 n \u2264 3000) . The following n lines each contain two integers xi, yi ( - 104 \u2264 xi, yi \u2264 104) \u2014 the coordinates of potential circle centers, provided by the Company. All given points are distinct.",
    "output": "Print a single real number \u2014 maximum possible radius of circles. The answer will be accepted if its relative or absolute error doesn' t exceed 10 - 6.",
    "note": "",
    "topics": [
      "binary search",
      "bitmasks",
      "brute force",
      "geometry",
      "sortings"
    ],
    "id": "333E"
  },
  {
    "title": "Kalila and Dimna in the Logging Industry",
    "url": "https://codeforces.com/problemset/problem/319/C",
    "history": "Kalila and Dimna are two jackals living in a huge jungle. One day they decided to join a logging factory in order to make money. The manager of logging factory wants them to go to the jungle and cut n trees with heights a1, a2, . . . , an. They bought a chain saw from a shop. Each time they use the chain saw on the tree number i, they can decrease the height of this tree by one unit. Each time that Kalila and Dimna use the chain saw, they need to recharge it. Cost of charging depends on the id of the trees which have been cut completely ( a tree is cut completely if its height equal to 0) . If the maximum id of a tree which has been cut completely is i ( the tree that have height ai in the beginning) , then the cost of charging the chain saw would be bi. If no tree is cut completely, Kalila and Dimna cannot charge the chain saw. The chainsaw is charged in the beginning. We know that for each i < j, ai < aj and bi > bj and also bn = 0 and a1 = 1. Kalila and Dimna want to cut all the trees completely, with minimum cost. They want you to help them! Will you?",
    "input": "The first line of input contains an integer n ( 1 \u2264 n \u2264 105) . The second line of input contains n integers a1, a2, . . . , an ( 1 \u2264 ai \u2264 109) . The third line of input contains n integers b1, b2, . . . , bn ( 0 \u2264 bi \u2264 109) . It' s guaranteed that a1 = 1, bn = 0, a1 < a2 < . . . < an and b1 > b2 > . . . > bn.",
    "output": "The only line of output must contain the minimum cost of cutting all the trees completely. Please, do not write the",
    "note": "",
    "topics": [
      "dp",
      "geometry"
    ],
    "id": "319C"
  },
  {
    "title": "Sereja and Straight Lines",
    "url": "https://codeforces.com/problemset/problem/314/D",
    "history": "Sereja placed n points on a plane. Now Sereja wants to place on the plane two straight lines, intersecting at a right angle, so that one of the straight lines intersect the Ox axis at an angle of 45 degrees and the maximum distance from the points to the straight lines were minimum. In this problem we consider the distance between points ( x1, y1) and ( x2, y2) equal | x1 - x2| + | y1 - y2| . The distance between the point and the straight lines is the minimum distance from the point to some point belonging to one of the lines. Help Sereja, find the maximum distance from the points to the optimally located straight lines.",
    "input": "The first line contains integer n ( 1 \u2264 n \u2264 105) . Next n lines contain the coordinates of the lines. The i- th line contains two integers xi, yi ( | xi| , | yi| \u2264 109) .",
    "output": "In a single line print a real number \u2014 the answer to the problem. Your answer will be considered correct iff its absolute or relative error doesn' t exceed 10 - 6.",
    "note": "",
    "topics": [
      "binary search",
      "data structures",
      "geometry",
      "sortings",
      "two pointers"
    ],
    "id": "314D"
  },
  {
    "title": "Tennis Rackets",
    "url": "https://codeforces.com/problemset/problem/309/D",
    "history": "Professional sport is more than hard work. It also is the equipment, designed by top engineers. As an example, let' s take tennis. Not only should you be in great shape, you also need an excellent racket! In this problem your task is to contribute to the development of tennis and to help to design a revolutionary new concept of a racket! The concept is a triangular racket. Ant it should be not just any triangle, but a regular one. As soon as you' ve chosen the shape, you need to stretch the net. By the time you came the rocket had n holes drilled on each of its sides. The holes divide each side into equal n + 1 parts. At that, the m closest to each apex holes on each side are made for better ventilation only and you cannot stretch the net through them. The next revolutionary idea as to stretch the net as obtuse triangles through the holes, so that for each triangle all apexes lay on different sides. Moreover, you need the net to be stretched along every possible obtuse triangle. That' s where we need your help \u2014 help us to count the number of triangles the net is going to consist of. Two triangles are considered to be different if their pictures on the fixed at some position racket are different.",
    "input": "The first and the only input line contains two integers n, m .",
    "output": "Print a single number \u2014 the answer to the problem.",
    "note": "For the following picture n = 8, m = 2. White circles are the holes for ventilation, red circles \u2014 holes for net stretching. One of the possible obtuse triangles is painted red.",
    "topics": [
      "brute force",
      "geometry"
    ],
    "id": "309D"
  },
  {
    "title": "Polygon",
    "url": "https://codeforces.com/problemset/problem/306/D",
    "history": "Polycarpus loves convex polygons, especially if all their angles are the same and all their sides are different. Draw for him any such polygon with the given number of vertexes.",
    "input": "The input contains a single integer n ( 3 \u2264 n \u2264 100) \u2014 the number of the polygon vertexes.",
    "output": "Print n lines, containing the coordinates of the vertexes of the n- gon \" xi yi\" in the counter clockwise order. The coordinates of the vertexes shouldn' t exceed 106 in their absolute value. The side lengths should fit within limits [ 1, 1000] ( not necessarily integer) . Mutual comparing sides and angles of your polygon during the test will go with precision of 10 - 3. If there is no solution, print \" No solution\" ( without the quotes) .",
    "note": "",
    "topics": [
      "constructive algorithms",
      "geometry"
    ],
    "id": "306D"
  },
  {
    "title": "Ksusha and Square",
    "url": "https://codeforces.com/problemset/problem/293/D",
    "history": "Ksusha is a vigorous mathematician. She is keen on absolutely incredible mathematical riddles. Today Ksusha came across a convex polygon of non- zero area. She is now wondering: if she chooses a pair of distinct points uniformly among all integer points ( points with integer coordinates) inside or on the border of the polygon and then draws a square with two opposite vertices lying in the chosen points, what will the expectation of this square' s area be? A pair of distinct points is chosen uniformly among all pairs of distinct points, located inside or on the border of the polygon. Pairs of points p, q ( p = \u0338 q) and q, p are considered the same. Help Ksusha! Count the required expectation.",
    "input": "The first line contains integer n ( 3 \u2264 n \u2264 105) \u2014 the number of vertices of Ksusha' s convex polygon. Next n lines contain the coordinates of the polygon vertices in clockwise or counterclockwise order. The i- th line contains integers xi, yi ( | xi| , | yi| \u2264 106) \u2014 the coordinates of the vertex that goes i- th in that order.",
    "output": "Print a single real number \u2014 the required expected area. The answer will be considered correct if its absolute and relative error doesn' t exceed 10 - 6.",
    "note": "",
    "topics": [
      "geometry",
      "math",
      "probabilities",
      "two pointers"
    ],
    "id": "293D"
  },
  {
    "title": "Rectangle Puzzle",
    "url": "https://codeforces.com/problemset/problem/280/A",
    "history": "You are given two rectangles on a plane. The centers of both rectangles are located in the origin of coordinates ( meaning the center of the rectangle' s symmetry) . The first rectangle' s sides are parallel to the coordinate axes: the length of the side that is parallel to the Ox axis, equals w, the length of the side that is parallel to the Oy axis, equals h. The second rectangle can be obtained by rotating the first rectangle relative to the origin of coordinates by angle \u03b1. Your task is to find the area of the region which belongs to both given rectangles. This region is shaded in the picture.",
    "input": "The first line contains three integers w, h, \u03b1 ( 1 \u2264 w, h \u2264 106; 0 \u2264 \u03b1 \u2264 180) . Angle \u03b1 is given in degrees.",
    "output": "In a single line print a real number \u2014 the area of the region which belongs to both given rectangles. The answer will be considered correct if its relative or absolute error doesn' t exceed 10 - 6.",
    "note": "The second sample has been drawn on the picture above.",
    "topics": [
      "geometry"
    ],
    "id": "280A"
  },
  {
    "title": "Point on Spiral",
    "url": "https://codeforces.com/problemset/problem/279/A",
    "history": "Valera the horse lives on a plane. The Cartesian coordinate system is defined on this plane. Also an infinite spiral is painted on the plane. The spiral consists of segments: [ ( 0, 0) , ( 1, 0) ] , [ ( 1, 0) , ( 1, 1) ] , [ ( 1, 1) , ( - 1, 1) ] , [ ( - 1, 1) , ( - 1, - 1) ] , [ ( - 1, - 1) , ( 2, - 1) ] , [ ( 2, - 1) , ( 2, 2) ] and so on. Thus, this infinite spiral passes through each integer point of the plane. Valera the horse lives on the plane at coordinates ( 0, 0) . He wants to walk along the spiral to point ( x, y) . Valera the horse has four legs, so he finds turning very difficult. Count how many times he will have to turn if he goes along a spiral from point ( 0, 0) to point ( x, y) .",
    "input": "The first line contains two space- separated integers x and y ( | x| , | y| \u2264 100) .",
    "output": "Print a single integer, showing how many times Valera has to turn.",
    "note": "",
    "topics": [
      "brute force",
      "geometry",
      "implementation"
    ],
    "id": "279A"
  },
  {
    "title": "Set of Points",
    "url": "https://codeforces.com/problemset/problem/277/B",
    "history": "Convexity of a set of points on the plane is the size of the largest subset of points that form a convex polygon. Your task is to build a set of n points with the convexity of exactly m. Your set of points should not contain three points that lie on a straight line.",
    "input": "The single line contains two integers n and m ( 3 \u2264 m \u2264 100, m \u2264 n \u2264 2m) .",
    "output": "If there is no solution, print \" - 1\" . Otherwise, print n pairs of integers \u2014 the coordinates of points of any set with the convexity of m. The coordinates shouldn' t exceed 108 in their absolute value.",
    "note": "",
    "topics": [
      "constructive algorithms",
      "geometry"
    ],
    "id": "277B"
  },
  {
    "title": "The Last Hole!",
    "url": "https://codeforces.com/problemset/problem/274/C",
    "history": "Luyi has n circles on the plane. The i- th circle is centered at ( xi, yi) . At the time zero circles start to grow simultaneously. In other words, the radius of each circle at time t ( t > 0) is equal to t. The circles are drawn as black discs on an infinite white plane. So at each moment the plane consists of several black and white regions. Note that the circles may overlap while growing. We define a hole as a closed, connected white region. For instance, the figure contains two holes shown by red border. During growing some holes may be created and it is easy to see that each created hole will disappear eventually. Luyi asks you to find moment of time such that the last hole disappears. In other words, you should find the first moment such that no hole can be seen after that.",
    "input": "The first line of the input contains integer n ( 1 \u2264 n \u2264 100) . Each of the next n lines contains two integers xi and yi ( - 104 \u2264 xi, yi \u2264 104) , indicating the location of i- th circle. It' s guaranteed that no two circles are centered at the same point.",
    "output": "Print the moment where the last hole disappears. If there exists no moment in which we can find holes print - 1. The answer will be considered correct if the absolute or relative error does not exceed 10 - 4.",
    "note": "",
    "topics": [
      "brute force",
      "geometry"
    ],
    "id": "274C"
  },
  {
    "title": "Fancy Fence",
    "url": "https://codeforces.com/problemset/problem/270/A",
    "history": "Emuskald needs a fence around his farm, but he is too lazy to build it himself. So he purchased a fence- building robot. He wants the fence to be a regular polygon. The robot builds the fence along a single path, but it can only make fence corners at a single angle a. Will the robot be able to build the fence Emuskald wants? In other words, is there a regular polygon which angles are equal to a?",
    "input": "The first line of input contains an integer t ( 0 < t < 180) \u2014 the number of tests. Each of the following t lines contains a single integer a ( 0 < a < 180) \u2014 the angle the robot can make corners at measured in degrees.",
    "output": "For each test, output on a single line \" YES\" ( without quotes) , if the robot can build a fence Emuskald wants, and \" NO\" ( without quotes) , if it is impossible.",
    "note": "In the first test case, it is impossible to build the fence, since there is no regular polygon with angle . In the second test case, the fence is a regular triangle, and in the last test case \u2014 a square.",
    "topics": [
      "geometry",
      "implementation",
      "math"
    ],
    "id": "270A"
  },
  {
    "title": "String Theory",
    "url": "https://codeforces.com/problemset/problem/269/E",
    "history": "Emuskald is an innovative musician and always tries to push the boundaries of music production. Now he has come up with an idea for a revolutionary musical instrument \u2014 a rectangular harp. A rectangular harp is a rectangle n \u00d7 m consisting of n rows and m columns. The rows are numbered 1 to n from top to bottom. Similarly the columns are numbered 1 to m from left to right. String pins are spaced evenly across every side, one per unit. Thus there are n pins on the left and right sides of the harp and m pins on its top and bottom. The harp has exactly n + m different strings, each string connecting two different pins, each on a different side of the harp. Emuskald has ordered his apprentice to construct the first ever rectangular harp. However, he didn' t mention that no two strings can cross, otherwise it would be impossible to play the harp. Two strings cross if the segments connecting their pins intersect. To fix the harp, Emuskald can perform operations of two types: pick two different columns and swap their pins on each side of the harp, not changing the pins that connect each string; pick two different rows and swap their pins on each side of the harp, not changing the pins that connect each string; In the following example, he can fix the harp by swapping two columns: Help Emuskald complete his creation and find the permutations how the rows and columns of the harp need to be rearranged, or tell that it is impossible to do so. He can detach and reattach each string to its pins, so the physical layout of the strings doesn' t matter.",
    "input": "The first line of input contains two space- separated integers numbers n and m ( 1 \u2264 n, m \u2264 105) , the height and width of the harp in units. Each of the following n + m lines contains 4 space- separated tokens, describing a single string: two symbols ai, bi and two integer numbers pi, qi. The pair ai, pi describes the first pin, and the pair bi, qi describes the second pin of the string; A pair s, x describes the position of a single pin in a following way: s is equal to one of the symbols \" L\" , \" T\" , \" R\" or \" B\" ( without quotes) , which means that the pin is positioned on the left, top, right or bottom side of the harp accordingly; x is equal to the number of the row, if the pin is on the left or right border of the harp, and to the number of the column, if the pin is on the top or bottom border of the harp. It is guaranteed that no two different strings are connected to the same pin.",
    "output": "If it is possible to rearrange the rows and columns to fix the harp, on the first line output n space- separated integers \u2014 the old numbers of rows now placed from top to bottom in the fixed harp. On the second line, output m space- separated integers \u2014 the old numbers of columns now placed from left to right in the fixed harp. If it is impossible to rearrange the rows and columns to fix the harp, output \" No solution\" ( without quotes) .",
    "note": "",
    "topics": [
      "geometry",
      "math",
      "strings"
    ],
    "id": "269E"
  },
  {
    "title": "View Angle",
    "url": "https://codeforces.com/problemset/problem/257/C",
    "history": "Flatland has recently introduced a new type of an eye check for the driver' s licence. The check goes like that: there is a plane with mannequins standing on it. You should tell the value of the minimum angle with the vertex at the origin of coordinates and with all mannequins standing inside or on the boarder of this angle. As you spend lots of time \" glued to the screen\" , your vision is impaired. So you have to write a program that will pass the check for you.",
    "input": "The first line contains a single integer n ( 1 \u2264 n \u2264 105) \u2014 the number of mannequins. Next n lines contain two space- separated integers each: xi, yi ( | xi| , | yi| \u2264 1000) \u2014 the coordinates of the i- th mannequin. It is guaranteed that the origin of the coordinates has no mannequin. It is guaranteed that no two mannequins are located in the same point on the plane.",
    "output": "Print a single real number \u2014 the value of the sought angle in degrees. The answer will be considered valid if the relative or absolute error doesn' t exceed 10 - 6.",
    "note": "Solution for the first sample test is shown below: Solution for the second sample test is shown below: Solution for the third sample test is shown below: Solution for the fourth sample test is shown below:",
    "topics": [
      "brute force",
      "geometry",
      "math"
    ],
    "id": "257C"
  },
  {
    "title": "Building Bridge",
    "url": "https://codeforces.com/problemset/problem/250/D",
    "history": "Two villages are separated by a river that flows from the north to the south. The villagers want to build a bridge across the river to make it easier to move across the villages. The river banks can be assumed to be vertical straight lines x = a and x = b ( 0 < a < b) . The west village lies in a steppe at point O = ( 0, 0) . There are n pathways leading from the village to the river, they end at points Ai = ( a, yi) . The villagers there are plain and simple, so their pathways are straight segments as well. The east village has reserved and cunning people. Their village is in the forest on the east bank of the river, but its exact position is not clear. There are m twisted paths leading from this village to the river and ending at points Bi = ( b, y' i) . The lengths of all these paths are known, the length of the path that leads from the eastern village to point Bi, equals li. The villagers want to choose exactly one point on the left bank of river Ai, exactly one point on the right bank Bj and connect them by a straight- line bridge so as to make the total distance between the villages ( the sum of | OAi| + | AiBj| + lj, where | XY| is the Euclidean distance between points X and Y) were minimum. The Euclidean distance between points ( x1, y1) and ( x2, y2) equals . Help them and find the required pair of points.",
    "input": "The first line contains integers n, m, a, b ( 1 \u2264 n, m \u2264 105, 0 < a < b < 106) . The second line contains n integers in the ascending order: the i- th integer determines the coordinate of point Ai and equals yi ( | yi| \u2264 106) . The third line contains m integers in the ascending order: the i- th integer determines the coordinate of point Bi and equals y' i ( | y' i| \u2264 106) . The fourth line contains m more integers: the i- th of them determines the length of the path that connects the eastern village and point Bi, and equals li ( 1 \u2264 li \u2264 106) . It is guaranteed, that there is such a point C with abscissa at least b, that | BiC| \u2264 li for all i ( 1 \u2264 i \u2264 m) . It is guaranteed that no two points Ai coincide. It is guaranteed that no two points Bi coincide.",
    "output": "Print two integers \u2014 the numbers of points on the left ( west) and right ( east) banks, respectively, between which you need to build a bridge. You can assume that the points on the west bank are numbered from 1 to n, in the order in which they are given in the input. Similarly, the points on the east bank are numbered from 1 to m in the order in which they are given in the input. If there are multiple solutions, print any of them. The solution will be accepted if the final length of the path will differ from the answer of the jury by no more than 10 - 6 in absolute or relative value.",
    "note": "",
    "topics": [
      "geometry",
      "ternary search",
      "two pointers"
    ],
    "id": "250D"
  },
  {
    "title": "Donkey and Stars",
    "url": "https://codeforces.com/problemset/problem/249/D",
    "history": "In the evenings Donkey would join Shrek to look at the stars. They would sit on a log, sipping tea and they would watch the starry sky. The sky hung above the roof, right behind the chimney. Shrek' s stars were to the right of the chimney and the Donkey' s stars were to the left. Most days the Donkey would just count the stars, so he knew that they are exactly n. This time he wanted a challenge. He imagined a coordinate system: he put the origin of the coordinates at the intersection of the roof and the chimney, directed the OX axis to the left along the roof and the OY axis \u2014 up along the chimney ( see figure) . The Donkey imagined two rays emanating from he origin of axes at angles \u03b11 and \u03b12 to the OX axis. Now he chooses any star that lies strictly between these rays. After that he imagines more rays that emanate from this star at the same angles \u03b11 and \u03b12 to the OX axis and chooses another star that lies strictly between the new rays. He repeats the operation as long as there still are stars he can choose between the rays that emanate from a star. As a result, the Donkey gets a chain of stars. He can consecutively get to each star if he acts by the given rules. Your task is to find the maximum number of stars m that the Donkey' s chain can contain. Note that the chain must necessarily start in the point of the origin of the axes, that isn' t taken into consideration while counting the number m of stars in the chain.",
    "input": "The first line contains an integer n ( 1 \u2264 n \u2264 105) \u2014 the number of stars. The second line contains simple fractions representing relationships \" a/ b c/ d\" , such that and ( 0 \u2264 a, b, c, d \u2264 105; ; ; ) . The given numbers a, b, c, d are integers. Next n lines contain pairs of integers xi, yi ( 1 \u2264 xi, yi \u2264 105) \u2014 the stars' coordinates. It is guaranteed that all stars have distinct coordinates.",
    "output": "In a single line print number m \u2014 the answer to the problem.",
    "note": "In the sample the longest chain the Donkey can build consists of four stars. Note that the Donkey can' t choose the stars that lie on the rays he imagines.",
    "topics": [
      "data structures",
      "dp",
      "geometry",
      "math",
      "sortings"
    ],
    "id": "249D"
  },
  {
    "title": "Robo-Footballer",
    "url": "https://codeforces.com/problemset/problem/248/C",
    "history": "It' s a beautiful April day and Wallace is playing football with his friends. But his friends do not know that Wallace actually stayed home with Gromit and sent them his robotic self instead. Robo- Wallace has several advantages over the other guys. For example, he can hit the ball directly to the specified point. And yet, the notion of a giveaway is foreign to him. The combination of these features makes the Robo- Wallace the perfect footballer \u2014 as soon as the ball gets to him, he can just aim and hit the goal. He followed this tactics in the first half of the match, but he hit the goal rarely. The opposing team has a very good goalkeeper who catches most of the balls that fly directly into the goal. But Robo- Wallace is a quick thinker, he realized that he can cheat the goalkeeper. After all, they are playing in a football box with solid walls. Robo- Wallace can kick the ball to the other side, then the goalkeeper will not try to catch the ball. Then, if the ball bounces off the wall and flies into the goal, the goal will at last be scored. Your task is to help Robo- Wallace to detect a spot on the wall of the football box, to which the robot should kick the ball, so that the ball bounces once and only once off this wall and goes straight to the goal. In the first half of the match Robo- Wallace got a ball in the head and was severely hit. As a result, some of the schemes have been damaged. Because of the damage, Robo- Wallace can only aim to his right wall ( Robo- Wallace is standing with his face to the opposing team' s goal) . The football box is rectangular. Let' s introduce a two- dimensional coordinate system so that point ( 0, 0) lies in the lower left corner of the field, if you look at the box above. Robo- Wallace is playing for the team, whose goal is to the right. It is an improvised football field, so the gate of Robo- Wallace' s rivals may be not in the middle of the left wall. In the given coordinate system you are given: y1, y2 \u2014 the y- coordinates of the side pillars of the goalposts of robo- Wallace' s opponents; yw \u2014 the y- coordinate of the wall to which Robo- Wallace is aiming; xb, yb \u2014 the coordinates of the ball' s position when it is hit; r \u2014 the radius of the ball. A goal is scored when the center of the ball crosses the OY axis in the given coordinate system between ( 0, y1) and ( 0, y2) . The ball moves along a straight line. The ball' s hit on the wall is perfectly elastic ( the ball does not shrink from the hit) , the angle of incidence equals the angle of reflection. If the ball bounces off the wall not to the goal, that is, if it hits the other wall or the goal post, then the opposing team catches the ball and Robo- Wallace starts looking for miscalculation and gets dysfunctional. Such an outcome, if possible, should be avoided. We assume that the ball touches an object, if the distance from the center of the ball to the object is no greater than the ball radius r.",
    "input": "The first and the single line contains integers y1, y2, yw, xb, yb, r ( 1 \u2264 y1, y2, yw, xb, yb \u2264 106; y1 < y2 < yw; yb + r < yw; 2\u00b7r < y2 - y1) . It is guaranteed that the ball is positioned correctly in the field, doesn' t cross any wall, doesn' t touch the wall that Robo- Wallace is aiming at. The goal posts can' t be located in the field corners.",
    "output": "If Robo- Wallace can' t score a goal in the described manner, print \" - 1\" ( without the quotes) . Otherwise, print a single number xw \u2014 the abscissa of his point of aiming. If there are multiple points of aiming, print the abscissa of any of them. When checking the correctness of the answer, all comparisons are made with the permissible absolute error, equal to 10 - 8. It is recommended to print as many characters after the decimal point as possible.",
    "note": "Note that in the first and third samples other correct values of abscissa xw are also possible.",
    "topics": [
      "binary search",
      "geometry"
    ],
    "id": "248C"
  },
  {
    "title": "Cubes",
    "url": "https://codeforces.com/problemset/problem/243/D",
    "history": "One day Petya got a set of wooden cubes as a present from his mom. Petya immediately built a whole city from these cubes. The base of the city is an n \u00d7 n square, divided into unit squares. The square' s sides are parallel to the coordinate axes, the square' s opposite corners have coordinates ( 0, 0) and ( n, n) . On each of the unit squares Petya built a tower of wooden cubes. The side of a wooden cube also has a unit length. After that Petya went an infinitely large distance away from his masterpiece and looked at it in the direction of vector v = ( vx, vy, 0) . Petya wonders, how many distinct cubes are visible from this position. Help him, find this number. Each cube includes the border. We think that a cube is visible if there is a ray emanating from some point p, belonging to the cube, in the direction of vector - v, that doesn' t contain any points, belonging to other cubes.",
    "input": "The first line contains three integers n, vx and vy ( 1 \u2264 n \u2264 103, | vx| , | vy| \u2264 | 104| , | vx| + | vy| > 0) . Next n lines contain n integers each: the j- th integer in the i- th line aij ( 0 \u2264 aij \u2264 109, 1 \u2264 i, j \u2264 n) represents the height of the cube tower that stands on the unit square with opposite corners at points ( i - 1, j - 1) and ( i, j) .",
    "output": "Print a single integer \u2014 the number of visible cubes. Please, do not use the",
    "note": "",
    "topics": [
      "data structures",
      "dp",
      "geometry",
      "two pointers"
    ],
    "id": "243D"
  },
  {
    "title": "Mirror Box",
    "url": "https://codeforces.com/problemset/problem/241/C",
    "history": "Mirror Box is a name of a popular game in the Iranian National Amusement Park ( INAP) . There is a wooden box, 105 cm long and 100 cm high in this game. Some parts of the box' s ceiling and floor are covered by mirrors. There are two negligibly small holes in the opposite sides of the box at heights hl and hr centimeters above the floor. The picture below shows what the box looks like. In the game, you will be given a laser gun to shoot once. The laser beam must enter from one hole and exit from the other one. Each mirror has a preset number vi, which shows the number of points players gain if their laser beam hits that mirror. Also \u2014 to make things even funnier \u2014 the beam must not hit any mirror more than once. Given the information about the box, your task is to find the maximum score a player may gain. Please note that the reflection obeys the law \" the angle of incidence equals the angle of reflection\" .",
    "input": "The first line of the input contains three space- separated integers hl, hr, n ( 0 < hl, hr < 100, 0 \u2264 n \u2264 100) \u2014 the heights of the holes and the number of the mirrors. Next n lines contain the descriptions of the mirrors. The i- th line contains space- separated vi, ci, ai, bi; the integer vi ( 1 \u2264 vi \u2264 1000) is the score for the i- th mirror; the character ci denotes i- th mirror' s position \u2014 the mirror is on the ceiling if ci equals \" T\" and on the floor if ci equals \" F\" ; integers ai and bi ( 0 \u2264 ai < bi \u2264 105) represent the x- coordinates of the beginning and the end of the mirror. No two mirrors will share a common point. Consider that the x coordinate increases in the direction from left to right, so the border with the hole at height hl has the x coordinate equal to 0 and the border with the hole at height hr has the x coordinate equal to 105.",
    "output": "The only line of output should contain a single integer \u2014 the maximum possible score a player could gain.",
    "note": "The second sample is depicted above. The red beam gets 10 + 50 + 5 + 35 + 8 + 2 = 110 points and the blue one gets 120. The red beam on the picture given in the statement shows how the laser beam can go approximately, this is just illustration how the laser beam can gain score. So for the second sample there is no such beam that gain score 110.",
    "topics": [
      "geometry",
      "implementation"
    ],
    "id": "241C"
  },
  {
    "title": "Magic Box",
    "url": "https://codeforces.com/problemset/problem/231/D",
    "history": "One day Vasya was going home when he saw a box lying on the road. The box can be represented as a rectangular parallelepiped. Vasya needed no time to realize that the box is special, as all its edges are parallel to the coordinate axes, one of its vertices is at point ( 0, 0, 0) , and the opposite one is at point ( x1, y1, z1) . The six faces of the box contain some numbers a1, a2, . . . , a6, exactly one number right in the center of each face. The numbers are located on the box like that: number a1 is written on the face that lies on the ZOX plane; a2 is written on the face, parallel to the plane from the previous point; a3 is written on the face that lies on the XOY plane; a4 is written on the face, parallel to the plane from the previous point; a5 is written on the face that lies on the YOZ plane; a6 is written on the face, parallel to the plane from the previous point. At the moment Vasya is looking at the box from point ( x, y, z) . Find the sum of numbers that Vasya sees. Note that all faces of the box are not transparent and Vasya can' t see the numbers through the box. The picture contains transparent faces just to make it easier to perceive. You can consider that if Vasya is looking from point, lying on the plane of some face, than he can not see the number that is written on this face. It is enough to see the center of a face to see the corresponding number for Vasya. Also note that Vasya always reads correctly the ai numbers that he sees, independently of their rotation, angle and other factors ( that is, for example, if Vasya sees some ai = 6, then he can' t mistake this number for 9 and so on) .",
    "input": "The fist input line contains three space- separated integers x, y and z ( | x| , | y| , | z| \u2264 106) \u2014 the coordinates of Vasya' s position in space. The second line contains three space- separated integers x1, y1, z1 ( 1 \u2264 x1, y1, z1 \u2264 106) \u2014 the coordinates of the box' s vertex that is opposite to the vertex at point ( 0, 0, 0) . The third line contains six space- separated integers a1, a2, . . . , a6 ( 1 \u2264 ai \u2264 106) \u2014 the numbers that are written on the box faces. It is guaranteed that point ( x, y, z) is located strictly outside the box.",
    "output": "Print a single integer \u2014 the sum of all numbers on the box faces that Vasya sees.",
    "note": "The first sample corresponds to perspective, depicted on the picture. Vasya sees numbers a2 ( on the top face that is the darkest) , a6 ( on the right face that is the lightest) and a4 ( on the left visible face) . In the second sample Vasya can only see number a4.",
    "topics": [
      "brute force",
      "geometry"
    ],
    "id": "231D"
  },
  {
    "title": "Where do I Turn?",
    "url": "https://codeforces.com/problemset/problem/227/A",
    "history": "Trouble came from the overseas lands: a three- headed dragon Gorynych arrived. The dragon settled at point C and began to terrorize the residents of the surrounding villages. A brave hero decided to put an end to the dragon. He moved from point A to fight with Gorynych. The hero rode from point A along a straight road and met point B on his way. The hero knows that in this land for every pair of roads it is true that they are either parallel to each other, or lie on a straight line, or are perpendicular to each other. He also knows well that points B and C are connected by a road. So the hero must either turn 90 degrees to the left or continue riding straight ahead or turn 90 degrees to the right. But he forgot where the point C is located. Fortunately, a Brave Falcon flew right by. It can see all three points from the sky. The hero asked him what way to go to get to the dragon' s lair. If you have not got it, you are the falcon. Help the hero and tell him how to get him to point C: turn left, go straight or turn right. At this moment the hero is believed to stand at point B, turning his back to point A.",
    "input": "The first input line contains two space- separated integers xa, ya ( | xa| , | ya| \u2264 109) \u2014 the coordinates of point A. The second line contains the coordinates of point B in the same form, the third line contains the coordinates of point C. It is guaranteed that all points are pairwise different. It is also guaranteed that either point B lies on segment AC, or angle ABC is right.",
    "output": "Print a single line. If a hero must turn left, print \" LEFT\" ( without the quotes) ; If he must go straight ahead, print \" TOWARDS\" ( without the quotes) ; if he should turn right, print \" RIGHT\" ( without the quotes) .",
    "note": "The picture to the first sample: The red color shows points A, B and C. The blue arrow shows the hero' s direction. The green color shows the hero' s trajectory. The picture to the second sample:",
    "topics": [
      "geometry"
    ],
    "id": "227A"
  },
  {
    "title": "Parallelepiped",
    "url": "https://codeforces.com/problemset/problem/224/A",
    "history": "You' ve got a rectangular parallelepiped with integer edge lengths. You know the areas of its three faces that have a common vertex. Your task is to find the sum of lengths of all 12 edges of this parallelepiped.",
    "input": "The first and the single line contains three space- separated integers \u2014 the areas of the parallelepiped' s faces. The area' s values are positive ( > 0) and do not exceed 104. It is guaranteed that there exists at least one parallelepiped that satisfies the problem statement.",
    "output": "Print a single number \u2014 the sum of all edges of the parallelepiped.",
    "note": "In the first sample the parallelepiped has sizes 1 \u00d7 1 \u00d7 1, in the second one \u2014 2 \u00d7 2 \u00d7 3.",
    "topics": [
      "brute force",
      "geometry",
      "math"
    ],
    "id": "224A"
  },
  {
    "title": "Planar Graph",
    "url": "https://codeforces.com/problemset/problem/223/E",
    "history": "A graph is called planar, if it can be drawn in such a way that its edges intersect only at their vertexes. An articulation point is such a vertex of an undirected graph, that when removed increases the number of connected components of the graph. A bridge is such an edge of an undirected graph, that when removed increases the number of connected components of the graph. You' ve got a connected undirected planar graph consisting of n vertexes, numbered from 1 to n, drawn on the plane. The graph has no bridges, articulation points, loops and multiple edges. You are also given q queries. Each query is a cycle in the graph. The query response is the number of graph vertexes, which ( if you draw a graph and the cycle on the plane) are located either inside the cycle, or on it. Write a program that, given the graph and the queries, will answer each query.",
    "input": "The first line contains two space- separated integers n and m ( 3 \u2264 n, m \u2264 105) \u2014 the number of vertexes and edges of the graph. Next m lines contain the edges of the graph: the i- th line contains two space- separated integers ui and vi ( 1 \u2264 ui, vi \u2264 n) \u2014 the numbers of vertexes, connecting the i- th edge. The next n lines contain the positions of the planar graph vertexes on the plane: the i- th line contains a pair of space- separated integers xi and yi ( | xi| , | yi| \u2264 109) \u2014 the coordinates of the i- th vertex of the graph on the plane. The next line contains integer q ( 1 \u2264 q \u2264 105) \u2014 the number of queries. Then follow q lines that describe the queries: the i- th line contains the sequence of space- separated integers ki, a1, a2, . . . , aki ( 1 \u2264 aj \u2264 n; ki > 2) , where ki is the cycle length in the i- th query, aj are numbers of the vertexes that form a cycle. The numbers of vertexes in the cycle are given in the clockwise or counterclockwise order. The given cycles are simple, that is they cannot go through a graph vertex more than once. The total length of all cycles in all queries does not exceed 105. It is guaranteed that the given graph contains no bridges, articulation points, loops and multiple edges. It is guaranteed that the edge segments can have common points only at the graph' s vertexes.",
    "output": "For each query print a single integer \u2014 the number of vertexes inside the cycle or on it. Print the answers in the order, in which the queries follow in the input. Separate the numbers by spaces.",
    "note": "",
    "topics": [
      "flows",
      "geometry",
      "graphs"
    ],
    "id": "223E"
  },
  {
    "title": "Spider",
    "url": "https://codeforces.com/problemset/problem/223/D",
    "history": "A plane contains a not necessarily convex polygon without self- intersections, consisting of n vertexes, numbered from 1 to n. There is a spider sitting on the border of the polygon, the spider can move like that: Transfer. The spider moves from the point p1 with coordinates ( x1, y1) , lying on the polygon border, to the point p2 with coordinates ( x2, y2) , also lying on the border. The spider can' t go beyond the polygon border as it transfers, that is, the spider' s path from point p1 to point p2 goes along the polygon border. It' s up to the spider to choose the direction of walking round the polygon border ( clockwise or counterclockwise) . Descend. The spider moves from point p1 with coordinates ( x1, y1) to point p2 with coordinates ( x2, y2) , at that points p1 and p2 must lie on one vertical straight line ( x1 = x2) , point p1 must be not lower than point p2 ( y1 \u2265 y2) and segment p1p2 mustn' t have points, located strictly outside the polygon ( specifically, the segment can have common points with the border) . Initially the spider is located at the polygon vertex with number s. Find the length of the shortest path to the vertex number t, consisting of transfers and descends. The distance is determined by the usual Euclidean metric .",
    "input": "The first line contains integer n ( 3 \u2264 n \u2264 105) \u2014 the number of vertexes of the given polygon. Next n lines contain two space- separated integers each \u2014 the coordinates of the polygon vertexes. The vertexes are listed in the counter- clockwise order. The coordinates of the polygon vertexes do not exceed 104 in their absolute value. The last line contains two space- separated integers s and t ( 1 \u2264 s, t \u2264 n) \u2014 the start and the end vertexes of the sought shortest way. Consider the polygon vertexes numbered in the order they are given in the input, that is, the coordinates of the first vertex are located on the second line of the input and the coordinates of the n- th vertex are on the ( n + 1) - th line. It is guaranteed that the given polygon is simple, that is, it contains no self- intersections or self- tangencies.",
    "output": "In the output print a single real number \u2014 the length of the shortest way from vertex s to vertex t. The answer is considered correct, if its absolute or relative error does not exceed 10 - 6.",
    "note": "In the first sample the spider transfers along the side that connects vertexes 1 and 4. In the second sample the spider doesn' t have to transfer anywhere, so the distance equals zero. In the third sample the best strategy for the spider is to transfer from vertex 3 to point ( 2, 3) , descend to point ( 2, 1) , and then transfer to vertex 1.",
    "topics": [
      "geometry",
      "graphs"
    ],
    "id": "223D"
  },
  {
    "title": "Little Elephant and Triangle",
    "url": "https://codeforces.com/problemset/problem/220/D",
    "history": "The Little Elephant is playing with the Cartesian coordinates' system. Most of all he likes playing with integer points. The Little Elephant defines an integer point as a pair of integers ( x; y) , such that 0 \u2264 x \u2264 w and 0 \u2264 y \u2264 h. Thus, the Little Elephant knows only ( w + 1) \u00b7( h + 1) distinct integer points. The Little Elephant wants to paint a triangle with vertexes at integer points, the triangle' s area must be a positive integer. For that, he needs to find the number of groups of three points that form such triangle. At that, the order of points in a group matters, that is, the group of three points ( 0; 0) , ( 0; 2) , ( 2; 2) isn' t equal to the group ( 0; 2) , ( 0; 0) , ( 2; 2) . Help the Little Elephant to find the number of groups of three integer points that form a nondegenerate triangle with integer area.",
    "input": "A single line contains two integers w and h ( 1 \u2264 w, h \u2264 4000) .",
    "output": "In a single output line print an integer \u2014 the remainder of dividing the answer to the problem by 1000000007 ( 109 + 7) .",
    "note": "",
    "topics": [
      "geometry",
      "math"
    ],
    "id": "220D"
  },
  {
    "title": "Stars",
    "url": "https://codeforces.com/problemset/problem/213/D",
    "history": "Furik loves painting stars. A star is a shape that results if we take a regular pentagon and paint all diagonals in it. Recently he decided to teach Rubik to paint stars. After many years of training Rubik could paint stars easily. But now Furik decided to test Rubik and complicated the task. Rubik must paint n stars, observing the following rules: all stars must be painted in a single move ( i. e. it is forbidden to take the pen away from the paper) ; it is forbidden to paint the same segment of non- zero length more than once; the stars can intersect only in their vertexes; the length of a side of the regular pentagon, in which Rubik paints each star, must equal 10. Help Rubik to cope with this hard task.",
    "input": "A single line contains an integer ( 1 \u2264 n \u2264 100) \u2014 the number of stars to paint.",
    "output": "On the first line print an integer m ( 1 \u2264 m \u2264 5\u00b7n) . On the next m lines print coordinates of m distinct points with accuracy of at least 9 and at most 100 digits after decimal point. All coordinates should not exceed 5000 in their absolute value. On each of the next n lines print 5 integers \u2014 the indexes of the points that form the given star in the clockwise or counterclockwise order. On the next line print 5\u00b7n + 1 integers \u2014 the numbers of points in the order, in which Rubik paints stars. That is, if number with index i is ai, and number with index i + 1 is ai + 1, then points with indexes ai and ai + 1 will have a segment painted between them. You can consider all m printed points indexed from 1 to m in the order, in which they occur in the output. Separate the numbers on the lines with whitespaces. Note that the answer has an imprecise validation. Try to obtain as accurate a solution as possible. The validator performs all calculations considering that the absolute error of a participant' s answer is not more than 10 - 8.",
    "note": "The initial position of points in the sample is: The order in which Rubik can paint segments is:",
    "topics": [
      "constructive algorithms",
      "geometry"
    ],
    "id": "213D"
  },
  {
    "title": "Hit Ball",
    "url": "https://codeforces.com/problemset/problem/203/D",
    "history": "When Valera was playing football on a stadium, it suddenly began to rain. Valera hid in the corridor under the grandstand not to get wet. However, the desire to play was so great that he decided to train his hitting the ball right in this corridor. Valera went back far enough, put the ball and hit it. The ball bounced off the walls, the ceiling and the floor corridor and finally hit the exit door. As the ball was wet, it left a spot on the door. Now Valera wants to know the coordinates for this spot. Let' s describe the event more formally. The ball will be considered a point in space. The door of the corridor will be considered a rectangle located on plane xOz, such that the lower left corner of the door is located at point ( 0, 0, 0) , and the upper right corner is located at point ( a, 0, b) . The corridor will be considered as a rectangular parallelepiped, infinite in the direction of increasing coordinates of y. In this corridor the floor will be considered as plane xOy, and the ceiling as plane, parallel to xOy and passing through point ( a, 0, b) . We will also assume that one of the walls is plane yOz, and the other wall is plane, parallel to yOz and passing through point ( a, 0, b) . We' ll say that the ball hit the door when its coordinate y was equal to 0. Thus the coordinates of the spot are point ( x0, 0, z0) , where 0 \u2264 x0 \u2264 a, 0 \u2264 z0 \u2264 b. To hit the ball, Valera steps away from the door at distance m and puts the ball in the center of the corridor at point . After the hit the ball flies at speed ( vx, vy, vz) . This means that if the ball has coordinates ( x, y, z) , then after one second it will have coordinates ( x + vx, y + vy, z + vz) . See image in notes for clarification. When the ball collides with the ceiling, the floor or a wall of the corridor, it bounces off in accordance with the laws of reflection ( the angle of incidence equals the angle of reflection) . In the problem we consider the ideal physical model, so we can assume that there is no air resistance, friction force, or any loss of energy.",
    "input": "The first line contains three space- separated integers a, b, m ( 1 \u2264 a, b, m \u2264 100) . The first two integers specify point ( a, 0, b) , through which the ceiling and one of the corridor walls pass. The third integer is the distance at which Valera went away from the door. The second line has three space- separated integers vx, vy, vz ( | vx| , | vy| , | vz| \u2264 100, vy < 0, vz \u2265 0) \u2014 the speed of the ball after the hit. It is guaranteed that the ball hits the door.",
    "output": "Print two real numbers x0, z0 \u2014 the x and z coordinates of point ( x0, 0, z0) , at which the ball hits the exit door. The answer will be considered correct, if its absolute or relative error does not exceed 10 - 6.",
    "note": "",
    "topics": [
      "geometry",
      "implementation",
      "math"
    ],
    "id": "203D"
  },
  {
    "title": "Special Olympics",
    "url": "https://codeforces.com/problemset/problem/199/B",
    "history": "A renowned abstract artist Sasha, drawing inspiration from nowhere, decided to paint a picture entitled \" Special Olympics\" . He justly thought that, if the regular Olympic games have five rings, then the Special ones will do with exactly two rings just fine. Let us remind you that a ring is a region located between two concentric circles with radii r and R ( r < R) . These radii are called internal and external, respectively. Concentric circles are circles with centers located at the same point. Soon a white canvas, which can be considered as an infinite Cartesian plane, had two perfect rings, painted with solid black paint. As Sasha is very impulsive, the rings could have different radii and sizes, they intersect and overlap with each other in any way. We know only one thing for sure: the centers of the pair of rings are not the same. When Sasha got tired and fell into a deep sleep, a girl called Ilona came into the room and wanted to cut a circle for the sake of good memories. To make the circle beautiful, she decided to cut along the contour. We' ll consider a contour to be a continuous closed line through which there is transition from one color to another ( see notes for clarification) . If the contour takes the form of a circle, then the result will be cutting out a circle, which Iona wants. But the girl' s inquisitive mathematical mind does not rest: how many ways are there to cut a circle out of the canvas?",
    "input": "The input contains two lines. Each line has four space- separated integers xi, yi, ri, Ri, that describe the i- th ring; xi and yi are coordinates of the ring' s center, ri and Ri are the internal and external radii of the ring correspondingly ( - 100 \u2264 xi, yi \u2264 100; 1 \u2264 ri < Ri \u2264 100) . It is guaranteed that the centers of the rings do not coinside.",
    "output": "A single integer \u2014 the number of ways to cut out a circle from the canvas.",
    "note": "Figures for test samples are given below. The possible cuts are marked with red dotted line.",
    "topics": [
      "geometry"
    ],
    "id": "199B"
  },
  {
    "title": "Delivering Carcinogen",
    "url": "https://codeforces.com/problemset/problem/198/C",
    "history": "Qwerty the Ranger arrived to the Diatar system with a very important task. He should deliver a special carcinogen for scientific research to planet Persephone. This is urgent, so Qwerty has to get to the planet as soon as possible. A lost day may fail negotiations as nobody is going to pay for an overdue carcinogen. You can consider Qwerty' s ship, the planet Persephone and the star Diatar points on a plane. Diatar is located in the origin of coordinate axes \u2014 at point ( 0, 0) . Persephone goes round Diatar along a circular orbit with radius R in the counter- clockwise direction at constant linear speed vp ( thus, for instance, a full circle around the star takes of time) . At the initial moment of time Persephone is located at point ( xp, yp) . At the initial moment of time Qwerty' s ship is at point ( x, y) . Qwerty can move in any direction at speed of at most v ( v > vp) . The star Diatar is hot ( as all stars) , so Qwerty can' t get too close to it. The ship' s metal sheathing melts at distance r ( r < R) from the star. Find the minimum time Qwerty needs to get the carcinogen to planet Persephone.",
    "input": "The first line contains space- separated integers xp, yp and vp ( - 104 \u2264 xp, yp \u2264 104, 1 \u2264 vp < 104) \u2014 Persephone' s initial position and the speed at which it goes round Diatar. The second line contains space- separated integers x, y, v and r ( - 104 \u2264 x, y \u2264 104, 1 < v \u2264 104, 1 \u2264 r \u2264 104) \u2014 The intial position of Qwerty' s ship, its maximum speed and the minimum safe distance to star Diatar. It is guaranteed that r2 < x2 + y2, r2 < xp2 + yp2 and vp < v.",
    "output": "Print a single real number \u2014 the minimum possible delivery time. The answer will be considered valid if its absolute or relative error does not exceed 10 - 6.",
    "note": "",
    "topics": [
      "binary search",
      "geometry"
    ],
    "id": "198C"
  },
  {
    "title": "Paint Tree",
    "url": "https://codeforces.com/problemset/problem/196/C",
    "history": "You are given a tree with n vertexes and n points on a plane, no three points lie on one straight line. Your task is to paint the given tree on a plane, using the given points as vertexes. That is, you should correspond each vertex of the tree to exactly one point and each point should correspond to a vertex. If two vertexes of the tree are connected by an edge, then the corresponding points should have a segment painted between them. The segments that correspond to non- adjacent edges, should not have common points. The segments that correspond to adjacent edges should have exactly one common point.",
    "input": "The first line contains an integer n ( 1 \u2264 n \u2264 1500) \u2014 the number of vertexes on a tree ( as well as the number of chosen points on the plane) . Each of the next n - 1 lines contains two space- separated integers ui and vi ( 1 \u2264 ui, vi \u2264 n, ui = \u0338 vi) \u2014 the numbers of tree vertexes connected by the i- th edge. Each of the next n lines contain two space- separated integers xi and yi ( - 109 \u2264 xi, yi \u2264 109) \u2014 the coordinates of the i- th point on the plane. No three points lie on one straight line. It is guaranteed that under given constraints problem has a solution.",
    "output": "Print n distinct space- separated integers from 1 to n: the i- th number must equal the number of the vertex to place at the i- th point ( the points are numbered in the order, in which they are listed in the input) . If there are several solutions, print any of them.",
    "note": "The possible solutions for the sample are given below.",
    "topics": [
      "constructive algorithms",
      "divide and conquer",
      "geometry",
      "sortings",
      "trees"
    ],
    "id": "196C"
  },
  {
    "title": "Analyzing Polyline",
    "url": "https://codeforces.com/problemset/problem/195/D",
    "history": "As Valeric and Valerko were watching one of the last Euro Championship games in a sports bar, they broke a mug. Of course, the guys paid for it but the barman said that he will let them watch football in his bar only if they help his son complete a programming task. The task goes like that. Let' s consider a set of functions of the following form: Let' s define a sum of n functions y1( x) , . . . , yn( x) of the given type as function s( x) = y1( x) + . . . + yn( x) for any x. It' s easy to show that in this case the graph s( x) is a polyline. You are given n functions of the given type, your task is to find the number of angles that do not equal 180 degrees, in the graph s( x) , that is the sum of the given functions. Valeric and Valerko really want to watch the next Euro Championship game, so they asked you to help them.",
    "input": "The first line contains integer n ( 1 \u2264 n \u2264 105) \u2014 the number of functions. Each of the following n lines contains two space- separated integer numbers ki, bi ( - 109 \u2264 ki, bi \u2264 109) that determine the i- th function.",
    "output": "Print a single number \u2014 the number of angles that do not equal 180 degrees in the graph of the polyline that equals the sum of the given functions.",
    "note": "",
    "topics": [
      "geometry",
      "math",
      "sortings"
    ],
    "id": "195D"
  },
  {
    "title": "Surrounded",
    "url": "https://codeforces.com/problemset/problem/190/B",
    "history": "So, the Berland is at war with its eternal enemy Flatland again, and Vasya, an accountant, was assigned to fulfil his duty to the nation. Right now the situation in Berland is dismal \u2014 their both cities are surrounded! The armies of flatlanders stand on the borders of circles, the circles' centers are in the surrounded cities. At any moment all points of the flatland ring can begin to move quickly in the direction of the city \u2014 that' s the strategy the flatlanders usually follow when they besiege cities. The berlanders are sure that they can repel the enemy' s attack if they learn the exact time the attack starts. For that they need to construct a radar that would register any movement at the distance of at most r from it. Thus, we can install a radar at such point, that at least one point of the enemy ring will be in its detecting range ( that is, at a distance of at most r) . Then the radar can immediately inform about the enemy' s attack. Due to the newest technologies, we can place a radar at any point without any problems. But the problem is that the berlanders have the time to make only one radar. Besides, the larger the detection radius ( r) is, the more the radar costs. That' s why Vasya' s task ( that is, your task) is to find the minimum possible detection radius for the radar. In other words, your task is to find the minimum radius r ( r \u2265 0) such, that a radar with radius r can be installed at some point and it can register the start of the movements of both flatland rings from that point. In this problem you can consider the cities as material points, the attacking enemy rings - as circles with centers in the cities, the radar' s detection range \u2014 as a disk ( including the border) with the center at the point where the radar is placed.",
    "input": "The input files consist of two lines. Each line represents the city and the flatland ring that surrounds it as three space- separated integers xi, yi, ri ( | xi| , | yi| \u2264 104; 1 \u2264 ri \u2264 104) \u2014 the city' s coordinates and the distance from the city to the flatlanders, correspondingly. It is guaranteed that the cities are located at different points.",
    "output": "Print a single real number \u2014 the minimum detection radius of the described radar. The answer is considered correct if the absolute or relative error does not exceed 10 - 6.",
    "note": "The figure below shows the answer to the first sample. In this sample the best decision is to put the radar at point with coordinates ( 2, 0) . The figure below shows the answer for the second sample. In this sample the best decision is to put the radar at point with coordinates ( 0, 0) .",
    "topics": [
      "geometry"
    ],
    "id": "190B"
  },
  {
    "title": "Zoo",
    "url": "https://codeforces.com/problemset/problem/183/B",
    "history": "The Zoo in the Grid Kingdom is represented by an infinite grid. The Zoo has n observation binoculars located at the OX axis. For each i between 1 and n, inclusive, there exists a single binocular located at the point with coordinates ( i, 0) . There are m flamingos in the Zoo, located at points with positive coordinates. The flamingos are currently sleeping and you can assume that they don' t move. In order to get a good view over the flamingos, each of the binoculars can be independently rotated to face any angle ( not necessarily integer) . Then, the binocular can be used to observe all flamingos that is located at the straight line passing through the binocular at the angle it is set. In other words, you can assign each binocular a direction corresponding to any straight line passing through the binocular, and the binocular will be able to see all flamingos located on that line. Today, some kids from the prestigious Codeforces kindergarten went on a Field Study to the Zoo. Their teacher would like to set each binocular an angle to maximize the number of flamingos that can be seen by the binocular. The teacher is very interested in the sum of these values over all binoculars. Please help him find this sum.",
    "input": "The first line contains two space- separated integers n and m ( 1 \u2264 n \u2264 106, 1 \u2264 m \u2264 250) , denoting the number of binoculars and the number of flamingos, respectively. Then m lines follow, the i- th line will contain two space- separated integers xi and yi ( 1 \u2264 xi, yi \u2264 109) , which means that the i- th flamingo is located at point ( xi, yi) . All flamingos will be located at distinct points.",
    "output": "Print a single integer denoting the maximum total number of flamingos that can be seen by all the binoculars.",
    "note": "This picture shows the answer to the example test case.",
    "topics": [
      "brute force",
      "geometry"
    ],
    "id": "183B"
  },
  {
    "title": "Battlefield",
    "url": "https://codeforces.com/problemset/problem/182/A",
    "history": "Vasya lagged behind at the University and got to the battlefield. Just joking! He' s simply playing some computer game. The field is a flat platform with n trenches dug on it. The trenches are segments on a plane parallel to the coordinate axes. No two trenches intersect. There is a huge enemy laser far away from Vasya. The laser charges for a seconds, and then shoots continuously for b seconds. Then, it charges for a seconds again. Then it shoots continuously for b seconds again and so on. Vasya knows numbers a and b. He also knows that while the laser is shooting, Vasya must be in the trench, but while the laser is charging, Vasya can safely move around the field. The main thing is to have time to hide in the trench before the shot. If Vasya reaches the trench exactly at the moment when the laser starts shooting, we believe that Vasya managed to hide. Coincidentally, the length of any trench in meters numerically does not exceed b. Initially, Vasya is at point A. He needs to get to point B. Vasya moves at speed 1 meter per second in either direction. You can get in or out of the trench at any its point. Getting in or out of the trench takes no time. It is also possible to move in the trench, without leaving it. What is the minimum time Vasya needs to get from point A to point B, if at the initial time the laser has just started charging? If Vasya cannot get from point A to point B, print - 1. If Vasya reaches point B at the moment when the laser begins to shoot, it is believed that Vasya managed to reach point B.",
    "input": "The first line contains two space- separated integers: a and b ( 1 \u2264 a, b \u2264 1000) , \u2014 the duration of charging and the duration of shooting, in seconds. The second line contains four space- separated integers: Ax, Ay, Bx, By ( - 104 \u2264 Ax, Ay, Bx, By \u2264 104) \u2014 the coordinates of points \u0410 and B. It is guaranteed that points A and B do not belong to any trench. The third line contains a single integer: n ( 1 \u2264 n \u2264 1000) , \u2014 the number of trenches. Each of the following n lines contains four space- separated integers: x1, y1, x2, y2 ( - 104 \u2264 xi, yi \u2264 104) \u2014 the coordinates of ends of the corresponding trench. All coordinates are given in meters. It is guaranteed that for any trench either x1 = x2, or y1 = y2. No two trenches intersect. The length of any trench in meters doesn' t exceed b numerically.",
    "output": "If Vasya can get from point A to point B, print the minimum time he will need for it. Otherwise, print number - 1. The answer will be considered correct if the absolute or relative error does not exceed 10 - 4",
    "note": "",
    "topics": [
      "geometry",
      "graphs",
      "implementation",
      "shortest paths"
    ],
    "id": "182A"
  },
  {
    "title": "Series of Crimes",
    "url": "https://codeforces.com/problemset/problem/181/A",
    "history": "The Berland capital is shaken with three bold crimes committed by the Pihsters, a notorious criminal gang. The Berland capital' s map is represented by an n \u00d7 m rectangular table. Each cell of the table on the map represents some districts of the capital. The capital' s main detective Polycarpus took a map and marked there the districts where the first three robberies had been committed as asterisks. Deduction tells Polycarpus that the fourth robbery will be committed in such district, that all four robbed districts will form the vertices of some rectangle, parallel to the sides of the map. Polycarpus is good at deduction but he' s hopeless at math. So he asked you to find the district where the fourth robbery will be committed.",
    "input": "The first line contains two space- separated integers n and m ( 2 \u2264 n, m \u2264 100) \u2014 the number of rows and columns in the table, correspondingly. Each of the next n lines contains m characters \u2014 the description of the capital' s map. Each character can either be a \" . \" ( dot) , or an \" * \" ( asterisk) . A character equals \" * \" if the corresponding district has been robbed. Otherwise, it equals \" . \" . It is guaranteed that the map has exactly three characters \" * \" and we can always find the fourth district that meets the problem requirements.",
    "output": "Print two integers \u2014 the number of the row and the number of the column of the city district that is the fourth one to be robbed. The rows are numbered starting from one from top to bottom and the columns are numbered starting from one from left to right.",
    "note": "",
    "topics": [
      "brute force",
      "geometry",
      "implementation"
    ],
    "id": "181A"
  },
  {
    "title": "Power Defence",
    "url": "https://codeforces.com/problemset/problem/175/E",
    "history": "Vasya plays the Power Defence. He must pass the last level of the game. In order to do this he must kill the Main Villain, who moves in a straight line at speed 1 meter per second from the point ( - \u221e, 0) to the point ( + \u221e, 0) of the game world. In the points ( x, 1) and ( x, - 1) , where x is an integer number, Vasya can build towers of three types: fire- tower, electric- tower or freezing- tower. However, it is not allowed to build two towers at the same point. Towers of each type have a certain action radius and the value of damage per second ( except freezing- tower) . If at some point the Main Villain is in the range of action of k freezing towers then his speed is decreased by k + 1 times. The allowed number of towers of each type is known. It is necessary to determine the maximum possible damage we can inflict on the Main Villain. All distances in the problem are given in meters. The size of the Main Villain and the towers are so small, that they can be considered as points on the plane. The Main Villain is in the action radius of a tower if the distance between him and tower is less than or equal to the action radius of the tower.",
    "input": "The first line contains three integer numbers nf, ne and ns \u2014 the maximum number of fire- towers, electric- towers and freezing- towers that can be built ( 0 \u2264 nf, ne, ns \u2264 20, 1 \u2264 nf + ne + ns \u2264 20) . The numbers are separated with single spaces. The second line contains three integer numbers rf, re and rs ( 1 \u2264 rf, re, rs \u2264 1000) \u2014 the action radii of fire- towers, electric- towers and freezing- towers. The numbers are separated with single spaces. The third line contains two integer numbers df and de ( 1 \u2264 df, de \u2264 1000) \u2014 the damage a fire- tower and an electronic- tower can inflict on the Main Villain per second ( in the case when the Main Villain is in the action radius of the tower) . The numbers are separated with single space.",
    "output": "Print the only real number \u2014 the maximum possible damage to the Main Villain with absolute or relative error not more than 10 - 6.",
    "note": "In the first sample we' ve got one fire- tower that always inflicts the same damage, independently of its position. In the second sample we' ve got another freezing- tower of the same action radius. If we build the two towers opposite each other, then the Main Villain' s speed will be two times lower, whenever he enters the fire- tower' s action radius. That means that the enemy will be inflicted with twice more damage.",
    "topics": [
      "brute force",
      "dp",
      "geometry",
      "greedy"
    ],
    "id": "175E"
  },
  {
    "title": "Polygons",
    "url": "https://codeforces.com/problemset/problem/166/B",
    "history": "You' ve got another geometrical task. You are given two non- degenerate polygons A and B as vertex coordinates. Polygon A is strictly convex. Polygon B is an arbitrary polygon without any self- intersections and self- touches. The vertices of both polygons are given in the clockwise order. For each polygon no three consecutively following vertices are located on the same straight line. Your task is to check whether polygon B is positioned strictly inside polygon A. It means that any point of polygon B should be strictly inside polygon A. \" Strictly\" means that the vertex of polygon B cannot lie on the side of the polygon A.",
    "input": "The first line contains the only integer n ( 3 \u2264 n \u2264 105) \u2014 the number of vertices of polygon A. Then n lines contain pairs of integers xi, yi ( | xi| , | yi| \u2264 109) \u2014 coordinates of the i- th vertex of polygon A. The vertices are given in the clockwise order. The next line contains a single integer m ( 3 \u2264 m \u2264 2\u00b7104) \u2014 the number of vertices of polygon B. Then following m lines contain pairs of integers xj, yj ( | xj| , | yj| \u2264 109) \u2014 the coordinates of the j- th vertex of polygon B. The vertices are given in the clockwise order. The coordinates of the polygon' s vertices are separated by a single space. It is guaranteed that polygons A and B are non- degenerate, that polygon A is strictly convex, that polygon B has no self- intersections and self- touches and also for each polygon no three consecutively following vertices are located on the same straight line.",
    "output": "Print on the only line the answer to the problem \u2014 if polygon B is strictly inside polygon A, print \" YES\" , otherwise print \" NO\" ( without the quotes) .",
    "note": "",
    "topics": [
      "geometry",
      "sortings"
    ],
    "id": "166B"
  },
  {
    "title": "Trace",
    "url": "https://codeforces.com/problemset/problem/157/B",
    "history": "One day, as Sherlock Holmes was tracking down one very important criminal, he found a wonderful painting on the wall. This wall could be represented as a plane. The painting had several concentric circles that divided the wall into several parts. Some parts were painted red and all the other were painted blue. Besides, any two neighboring parts were painted different colors, that is, the red and the blue color were alternating, i. e. followed one after the other. The outer area of the wall ( the area that lied outside all circles) was painted blue. Help Sherlock Holmes determine the total area of red parts of the wall. Let us remind you that two circles are called concentric if their centers coincide. Several circles are called concentric if any two of them are concentric.",
    "input": "The first line contains the single integer n ( 1 \u2264 n \u2264 100) . The second line contains n space- separated integers ri ( 1 \u2264 ri \u2264 1000) \u2014 the circles' radii. It is guaranteed that all circles are different.",
    "output": "Print the single real number \u2014 total area of the part of the wall that is painted red. The answer is accepted if absolute or relative error doesn' t exceed 10 - 4.",
    "note": "In the first sample the picture is just one circle of radius 1. Inner part of the circle is painted red. The area of the red part equals \u03c0 \u00d7 12 = \u03c0. In the second sample there are three circles of radii 1, 4 and 2. Outside part of the second circle is painted blue. Part between the second and the third circles is painted red. Part between the first and the third is painted blue. And, finally, the inner part of the first circle is painted red. Overall there are two red parts: the ring between the second and the third circles and the inner part of the first circle. Total area of the red parts is equal ( \u03c0 \u00d7 42 - \u03c0 \u00d7 22) + \u03c0 \u00d7 12 = \u03c0 \u00d7 12 + \u03c0 = 13\u03c0",
    "topics": [
      "geometry",
      "sortings"
    ],
    "id": "157B"
  },
  {
    "title": "Martian Colony",
    "url": "https://codeforces.com/problemset/problem/154/E",
    "history": "The first ship with the Earth settlers landed on Mars. The colonists managed to build n necessary structures on the surface of the planet ( which can be regarded as a plane, and the construction can be regarded as points on it) . But one day the scanners recorded suspicious activity on the outskirts of the colony. It was decided to use the protective force field generating system to protect the colony against possible trouble. The system works as follows: the surface contains a number of generators of the field ( they can also be considered as points) . The active range of each generator is a circle of radius r centered at the location of the generator ( the boundary of the circle is also included in the range) . After the system is activated, it stretches the protective force field only over the part of the surface, which is within the area of all generators' activity. That is, the protected part is the intersection of the generators' active ranges. The number of generators available to the colonists is not limited, but the system of field generation consumes a lot of energy. More precisely, the energy consumption does not depend on the number of generators, but it is directly proportional to the area, which is protected by the field. Also, it is necessary that all the existing buildings are located within the protected area. Determine the smallest possible area of the protected part of the surface containing all the buildings.",
    "input": "The first line contains two integers n and r ( 1 \u2264 n \u2264 105, 1 \u2264 r \u2264 50000) \u2014 the number of buildings and the active ranges of the generators, correspondingly. Next n lines contains the buildings' coordinates. The i + 1- th ( 1 \u2264 i \u2264 n) line contains two real numbers with at most three digits after the decimal point xi and yi ( | xi| , | yi| \u2264 50000) \u2014 coordinates of the i- th building. It is guaranteed that no two buildings are located at the same point, and no two different buildings are located closer than 1. It is guaranteed that there exists a circle with radius r that contains all the buildings.",
    "output": "Print the single real number \u2014 the minimum area of the protected part containing all the buildings. The answer is accepted if absolute or relative error doesn' t exceed 10 - 4.",
    "note": "In the first sample the given radius equals the radius of the circle circumscribed around the given points. That' s why the circle that corresponds to it is the sought area. The answer is 25\u03c0. In the second sample the area nearly coincides with the square which has vertexes in the given points. The area for the third sample is shown on the picture below.",
    "topics": [
      "geometry"
    ],
    "id": "154E"
  },
  {
    "title": "Help Greg the Dwarf 2",
    "url": "https://codeforces.com/problemset/problem/142/E",
    "history": "Greg the Dwarf has been really busy recently with excavations by the Neverland Mountain. However for the well- known reasons ( as you probably remember he is a very unusual dwarf and he cannot stand sunlight) Greg can only excavate at night. And in the morning he should be in his crypt before the first sun ray strikes. That' s why he wants to find the shortest route from the excavation point to his crypt. Greg has recollected how the Codeforces participants successfully solved the problem of transporting his coffin to a crypt. So, in some miraculous way Greg appeared in your bedroom and asks you to help him in a highly persuasive manner. As usual, you didn' t feel like turning him down. After some thought, you formalized the task as follows: as the Neverland mountain has a regular shape and ends with a rather sharp peak, it can be represented as a cone whose base radius equals r and whose height equals h. The graveyard where Greg is busy excavating and his crypt can be represented by two points on the cone' s surface. All you' ve got to do is find the distance between points on the cone' s surface. The task is complicated by the fact that the mountain' s base on the ground level and even everything below the mountain has been dug through by gnome ( one may wonder whether they' ve been looking for the same stuff as Greg. . . ) . So, one can consider the shortest way to pass not only along the side surface, but also along the cone' s base ( and in a specific case both points can lie on the cone' s base \u2014 see the first sample test) Greg will be satisfied with the problem solution represented as the length of the shortest path between two points \u2014 he can find his way pretty well on his own. He gave you two hours to solve the problem and the time is ticking!",
    "input": "The first input line contains space- separated integers r and h ( 1 \u2264 r, h \u2264 1000) \u2014 the base radius and the cone height correspondingly. The second and third lines contain coordinates of two points on the cone surface, groups of three space- separated real numbers. The coordinates of the points are given in the systems of coordinates where the origin of coordinates is located in the centre of the cone' s base and its rotation axis matches the OZ axis. In this coordinate system the vertex of the cone is located at the point ( 0, 0, h) , the base of the cone is a circle whose center is at the point ( 0, 0, 0) , lying on the XOY plane, and all points on the cone surface have a non- negative coordinate z. It is guaranteed that the distances from the points to the cone surface do not exceed 10 - 12. All real numbers in the input have no more than 16 digits after decimal point.",
    "output": "Print the length of the shortest path between the points given in the input, with absolute or relative error not exceeding 10 - 6.",
    "note": "",
    "topics": [
      "geometry"
    ],
    "id": "142E"
  },
  {
    "title": "Hopscotch",
    "url": "https://codeforces.com/problemset/problem/141/B",
    "history": "So nearly half of the winter is over and Maria is dreaming about summer. She' s fed up with skates and sleds, she was dreaming about Hopscotch all night long. It' s a very popular children' s game. The game field, the court, looks as is shown in the figure ( all blocks are square and are numbered from bottom to top, blocks in the same row are numbered from left to right) . Let us describe the hopscotch with numbers that denote the number of squares in the row, staring from the lowest one: 1- 1- 2- 1- 2- 1- 2- ( 1- 2) . . . , where then the period is repeated ( 1- 2) . The coordinate system is defined as shown in the figure. Side of all the squares are equal and have length a. Maria is a very smart and clever girl, and she is concerned with quite serious issues: if she throws a stone into a point with coordinates ( x, y) , then will she hit some square? If the answer is positive, you are also required to determine the number of the square. It is believed that the stone has fallen into the square if it is located strictly inside it. In other words a stone that has fallen on the square border is not considered a to hit a square.",
    "input": "The only input line contains three integers: a, x, y, where a ( 1 \u2264 a \u2264 100) is the side of the square, x and y ( - 106 \u2264 x \u2264 106, 0 \u2264 y \u2264 106) are coordinates of the stone.",
    "output": "Print the number of the square, inside which the stone fell. If the stone is on a border of some stone or outside the court, print \" - 1\" without the quotes.",
    "note": "",
    "topics": [
      "geometry",
      "math"
    ],
    "id": "141B"
  },
  {
    "title": "New Year Snowflake",
    "url": "https://codeforces.com/problemset/problem/140/F",
    "history": "As Gerald . . . , in other words, on a New Year Eve Constantine prepared an unusual present for the Beautiful Lady. The present is the magic New Year snowflake that can make any dream come true. The New Year snowflake consists of tiny ice crystals, which can be approximately regarded as points on the plane. The beauty of the New Year snowflake is that it has a center of symmetry. This is a point such that for each crystal of the snowflake exists another crystal, symmetrical to it relative to that point. One of the crystals can be placed directly in the center of symmetry. While Constantine was choosing a snowflake among millions of other snowflakes, no less symmetrical and no less magical, then endured a difficult path through the drifts to the house of his mistress, while he was waiting with bated breath for a few long moments before the Beautiful Lady opens the door, some of the snowflake crystals melted and naturally disappeared. Constantine is sure that there were no more than k of such crystals, because he handled the snowflake very carefully. Now he is ready to demonstrate to the Beautiful Lady all the power of nanotechnology and restore the symmetry of snowflakes. You are given the coordinates of the surviving snowflake crystals, given in nanometers. Your task is to identify all possible positions of the original center of symmetry.",
    "input": "The first line contains two integers n and k ( 1 \u2264 n \u2264 200 000, 0 \u2264 k \u2264 10) \u2014 the number of the surviving snowflake crystals and the maximum number of melted crystals, correspondingly. Next n lines contain the coordinates of the crystals that are left in the following form: \" xi yi\" . The coordinates are integers and do not exceed 5\u00b7108 in absolute value. All given points are different.",
    "output": "The first line contains an integer c \u2014 the number of possible symmetry centers. Next c lines should contain the centers' descriptions. Each symmetry center is described by a couple of coordinates \" x y\" , separated by a space. Print the coordinates with absolute error not exceeding 10 - 6. You are allowed to print the symmetry centers in any order. All printed points should be different. If there exist an infinite number of possible symmetry centers, print the single number \" - 1\" .",
    "note": "",
    "topics": [
      "geometry",
      "sortings"
    ],
    "id": "140F"
  },
  {
    "title": "New Year Table",
    "url": "https://codeforces.com/problemset/problem/140/A",
    "history": "Gerald is setting the New Year table. The table has the form of a circle; its radius equals R. Gerald invited many guests and is concerned whether the table has enough space for plates for all those guests. Consider all plates to be round and have the same radii that equal r. Each plate must be completely inside the table and must touch the edge of the table. Of course, the plates must not intersect, but they can touch each other. Help Gerald determine whether the table is large enough for n plates.",
    "input": "The first line contains three integers n, R and r ( 1 \u2264 n \u2264 100, 1 \u2264 r, R \u2264 1000) \u2014 the number of plates, the radius of the table and the plates' radius.",
    "output": "Print \" YES\" ( without the quotes) if it is possible to place n plates on the table by the rules given above. If it is impossible, print \" NO\" . Remember, that each plate must touch the edge of the table.",
    "note": "The possible arrangement of the plates for the first sample is:",
    "topics": [
      "geometry",
      "math"
    ],
    "id": "140A"
  },
  {
    "title": "Rectangle and Square",
    "url": "https://codeforces.com/problemset/problem/135/B",
    "history": "Little Petya very much likes rectangles and especially squares. Recently he has received 8 points on the plane as a gift from his mother. The points are pairwise distinct. Petya decided to split them into two sets each containing 4 points so that the points from the first set lay at the vertexes of some square and the points from the second set lay at the vertexes of a rectangle. Each point of initial 8 should belong to exactly one set. It is acceptable for a rectangle from the second set was also a square. If there are several partitions, Petya will be satisfied by any of them. Help him find such partition. Note that the rectangle and the square from the partition should have non- zero areas. The sides of the figures do not have to be parallel to the coordinate axes, though it might be the case.",
    "input": "You are given 8 pairs of integers, a pair per line \u2014 the coordinates of the points Petya has. The absolute value of all coordinates does not exceed 104. It is guaranteed that no two points coincide.",
    "output": "Print in the first output line \" YES\" ( without the quotes) , if the desired partition exists. In the second line output 4 space- separated numbers \u2014 point indexes from the input, which lie at the vertexes of the square. The points are numbered starting from 1. The numbers can be printed in any order. In the third line print the indexes of points lying at the vertexes of a rectangle in the similar format. All printed numbers should be pairwise distinct. If the required partition does not exist, the first line should contain the word \" NO\" ( without the quotes) , after which no output is needed.",
    "note": "Pay attention to the third example: the figures do not necessarily have to be parallel to the coordinate axes.",
    "topics": [
      "brute force",
      "geometry",
      "math"
    ],
    "id": "135B"
  },
  {
    "title": "Birthday",
    "url": "https://codeforces.com/problemset/problem/128/E",
    "history": "Anna' s got a birthday today. She invited many guests and cooked a huge ( nearly infinite) birthday cake decorated by n banana circles of different sizes. Maria' s birthday is about to start in 7 minutes too, and while Anna is older, she decided to play the boss a little. She told Maria to cut the cake by k straight- line cuts ( the cutting lines can intersect) to divide banana circles into banana pieces. Anna has many guests and she wants everyone to get at least one banana piece. That' s why she told Maria to make the total number of banana pieces maximum. It' s not a problem if some banana pieces end up on the same cake piece \u2014 the key is to make the maximum number of banana pieces. Determine what result Maria will achieve.",
    "input": "The first line contains two integers n and k \u2014 the number of banana circles and the number of cuts Maria should perform ( 1 \u2264 n \u2264 1000, 1 \u2264 k \u2264 105) . Next n lines contain the positions and sizes of the banana circles ( all banana circles are round) . On the cake the Cartesian coordinate system is defined. Each line contains three integers x, y and r \u2014 the coordinates of the center of the corresponding banana piece and its radius ( - 1000 \u2264 x, y \u2264 1000, 1 \u2264 r \u2264 1000) . It is guaranteed that the banana circles do not intersect, do not touch each other and do not overlap with each other. Pretest 10 is big test with n = k = 1000.",
    "output": "Print the only integer \u2014 the largest number of banana pieces that Maria can get after she performs the k straight- line cuts. Please do not use the",
    "note": "",
    "topics": [
      "geometry",
      "math"
    ],
    "id": "128E"
  },
  {
    "title": "Wasted Time",
    "url": "https://codeforces.com/problemset/problem/127/A",
    "history": "Mr. Scrooge, a very busy man, decided to count the time he wastes on all sorts of useless stuff to evaluate the lost profit. He has already counted the time he wastes sleeping and eating. And now Mr. Scrooge wants to count the time he has wasted signing papers. Mr. Scrooge' s signature can be represented as a polyline A1A2. . . An. Scrooge signs like that: first it places a pen at the point A1, then draws a segment from point A1 to point A2, then he draws a segment from point A2 to point A3 and so on to point An, where he stops signing and takes the pen off the paper. At that the resulting line can intersect with itself and partially repeat itself but Scrooge pays no attention to it and never changes his signing style. As Scrooge makes the signature, he never takes the pen off the paper and his writing speed is constant \u2014 50 millimeters per second. Scrooge signed exactly k papers throughout his life and all those signatures look the same. Find the total time Scrooge wasted signing the papers.",
    "input": "The first line contains two integers n and k ( 2 \u2264 n \u2264 100, 1 \u2264 k \u2264 1000) . Each of the following n lines contains the coordinates of the polyline' s endpoints. The i- th one contains coordinates of the point Ai \u2014 integers xi and yi, separated by a space. All points Ai are different. The absolute value of all coordinates does not exceed 20. The coordinates are measured in millimeters.",
    "output": "Print one real number \u2014 the total time Scrooges wastes on signing the papers in seconds. The absolute or relative error should not exceed 10 - 6.",
    "note": "",
    "topics": [
      "geometry"
    ],
    "id": "127A"
  },
  {
    "title": "Minimum Sum",
    "url": "https://codeforces.com/problemset/problem/120/J",
    "history": "You are given a set of n vectors on a plane. For each vector you are allowed to multiply any of its coordinates by - 1. Thus, each vector vi = ( xi, yi) can be transformed into one of the following four vectors: vi1 = ( xi, yi) , vi2 = ( - xi, yi) , vi3 = ( xi, - yi) , vi4 = ( - xi, - yi) . You should find two vectors from the set and determine which of their coordinates should be multiplied by - 1 so that the absolute value of the sum of the resulting vectors was minimally possible. More formally, you should choose two vectors vi, vj ( 1 \u2264 i, j \u2264 n, i = \u0338 j) and two numbers k1, k2 ( 1 \u2264 k1, k2 \u2264 4) , so that the value of the expression | vik1 + vjk2| were minimum.",
    "input": "The first line contains a single integer n ( 2 \u2264 n \u2264 105) . Then n lines contain vectors as pairs of integers \" xi yi\" ( - 10000 \u2264 xi, yi \u2264 10000) , one pair per line.",
    "output": "Print on the first line four space- separated numbers \" i k1 j k2\" \u2014 the answer to the problem. If there are several variants the absolute value of whose sums is minimum, you can print any of them.",
    "note": "A sum of two vectors v = ( xv, yv) and u = ( xu, yu) is vector s = v + u = ( xv + xu, yv + yu) . An absolute value of vector v = ( x, y) is number . In the second sample there are several valid answers, such as: ( 3 1 4 2) , ( 3 1 4 4) , ( 3 4 4 1) , ( 3 4 4 3) , ( 4 1 3 2) , ( 4 1 3 4) , ( 4 2 3 1) .",
    "topics": [
      "divide and conquer",
      "geometry",
      "sortings"
    ],
    "id": "120J"
  },
  {
    "title": "Alternative Reality",
    "url": "https://codeforces.com/problemset/problem/119/E",
    "history": "In the year of 3000 travelling around parallel realities became a routine thing. However one has to take into consideration that travelling like that is highly dangerous as you never know beforehand where you' re gonna get. . . Little Vasya, for instance, found himself in a gaming reality and now he has to successfully complete all levels of a very weird game to get back. The gaming reality is a three- dimensional space where n points are given. The game has m levels and at the beginning of the i- th level the player is positioned at some plane Qi that passes through the origin. On each level Vasya has to use special robots to construct and activate n powerful energy spheres of the equal radius with centers at the given points. The player chooses the radius of the spheres himself. The player has to spend R units of money to construct spheres whose radius equals R ( consequently, one can construct spheres whose radius equals zero for free) . Besides, once for each level a player can choose any point in space and release a laser ray from there, perpendicular to plane Qi ( this action costs nothing) . The ray can either be directed towards the plane or from the plane. The spheres that share at least one point with the ray will be immediately activated. The level is considered completed if the player has managed to activate all spheres. Note that the centers of the spheres are the same for all m levels but the spheres do not remain: the player should construct them anew on each new level. Help Vasya find out what minimum sum of money will be enough to complete each level.",
    "input": "The first line contains two integers n and m ( 1 \u2264 n \u2264 900, 1 \u2264 m \u2264 100) \u2014 the number of energetic spheres and the number of levels in the game correspondingly. Each of the following n lines contains three integers xi, yi, zi ( 0 \u2264 xi, yi, zi \u2264 104) \u2014 the coordinates of the center of the i- th sphere. Assume that these points do not change their positions throughout the game. Then follow m lines, each containing three integers ai, bi, ci ( 0 \u2264 ai, bi, ci \u2264 100, ai2 + bi2 + ci2 > 0) . These numbers are the coefficients in the equation of plane Qi ( aix + biy + ciz = 0) , where the player is positioned at the beginning of the i- th level.",
    "output": "Print m numbers, one per line: the i- th line should contain the minimum sum of money needed to complete the i- th level. The absolute or relative error should not exceed 10 - 6.",
    "note": "",
    "topics": [
      "geometry"
    ],
    "id": "119E"
  },
  {
    "title": "Darts",
    "url": "https://codeforces.com/problemset/problem/107/E",
    "history": "The night after the graduation ceremony graduate students of German University in Cairo ( GUC) are playing darts. As there' s no real dart board available, the photographs of members of the GUC upper management are being used. So, n rectangular photos are placed on the wall. They can overlap arbitrary and even coincide. The photos are not necessarily placed horizontally or vertically, they could also be rotated before being pinned to the wall. The score of one dart throw is simply the number of photos the dart went through. Fatma has made a throw but her score was not recorded. She only remembers that she did make it into at least one photo. Assuming that the probability distribution of the throw is equal across the whole wall, what would be the expectation of Fatma' s score?",
    "input": "The first line of input contains integer n ( 1 \u2264 n \u2264 500) \u2014 the number of photos on the wall. Then follow n lines describing the photos, each containing 8 single- space- separated integers ( coordinates of 4 vertices) : x1, y1, x2, y2, x3, y3, x4, y4. Each photo is a rectangle with a nonzero area. The coordinates are integers, not exceeding 104 by absolute value. The coordinates of the rectangle are given in either clockwise or counterclockwise order.",
    "output": "Print the expected score of the throw. The answer will be accepted if it has absolute or relative error not exceeding 10 - 6.",
    "note": "",
    "topics": [
      "geometry",
      "probabilities"
    ],
    "id": "107E"
  },
  {
    "title": "Space Rescuers",
    "url": "https://codeforces.com/problemset/problem/106/E",
    "history": "The Galaxy contains n planets, there are many different living creatures inhabiting each planet. And each creature can get into troubles! Space rescuers know it perfectly well and they are always ready to help anyone who really needs help. All you need to do is call for them. Now the space rescuers plan to build the largest in the history of the Galaxy rescue station; however, the rescue station' s location is yet to be determined. As some cases are real emergencies, the rescuers want to find such a point in the Galaxy from which it would be possible to get to the remotest planet in the minimum possible time. In other words, the rescuers need such point in the space that the distance between it and the planet remotest from it was minimal ( if we compare this point with all other possible points in the space) . Unfortunately, the rescuers can' t sole this problem. As the planets are quite remote from each other, they can be considered as points in Euclidean three- dimensional space. The distance between points ( xi, yi, zi) and ( xj, yj, zj) can be calculated by the formula . The rescue station can be positioned in any point in the space. It can also coincide with some planet. Galaxy is in danger! Save the space rescuers and find the required point for them.",
    "input": "The first line of the input file contains integer n \u2014 the number of planets ( 1 \u2264 N \u2264 100) . Each of the following n lines contains information about the planets. The i- th line contains three integers xi, yi, zi \u2014 the coordinates of the i- th planet ( - 104 \u2264 xi, yi, zi \u2264 104, 1 \u2264 i \u2264 n) . No two planets coincide.",
    "output": "Print on the first line of the output file three space- separated real numbers x0, y0, z0 \u2014 the coordinates for the future base. If there are several solutions, you are allowed to print any of them. The answer will be accepted if the distance from this point to the remotest planet will differ from the juries' variant in no more than 10 - 6 in absolute or relative value.",
    "note": "",
    "topics": [
      "geometry",
      "ternary search"
    ],
    "id": "106E"
  },
  {
    "title": "Rotation",
    "url": "https://codeforces.com/problemset/problem/100/I",
    "history": "Ehsan loves geometry! Especially he likes to rotate points! Given a point in the plane, Ehsan likes to rotate it by k degrees ( counter- clockwise) , around the origin. What is the result of this rotation?",
    "input": "A single integer k ( 0 \u2264 k < 360) is given in the first line. Two integer numbers x and y are given in the second line ( - 1390 \u2264 x, y \u2264 1390) .",
    "output": "Write two numbers. The result of the rotation. Your answer must have a relative error less than 10 - 1.",
    "note": "",
    "topics": [
      "*special",
      "geometry",
      "math"
    ],
    "id": "100I"
  },
  {
    "title": "Help Greg the Dwarf",
    "url": "https://codeforces.com/problemset/problem/98/C",
    "history": "A very unusual citizen lives in a far away kingdom \u2014 Dwarf Gracula. However, his unusual name is not the weirdest thing ( besides, everyone long ago got used to calling him simply Dwarf Greg) . What is special about Dwarf Greg \u2014 he' s been living for over 200 years; besides, he lives in a crypt on an abandoned cemetery and nobody has ever seen him out in daytime. Moreover, nobody has ever seen Greg buy himself any food. That' s why nobody got particularly surprised when after the infernal dragon' s tragic death cattle continued to disappear from fields. The people in the neighborhood were long sure that the harmless dragon was never responsible for disappearing cattle ( considering that the dragon used to be sincere about his vegetarian views) . But even that' s not the worst part of the whole story. The worst part is that merely several minutes ago Dwarf Greg in some unintelligible way got inside your house and asked you to help him solve a problem. The point is that a short time ago Greg decided to order a new coffin ( knowing his peculiar character, you are not surprised at all) . But the problem is: a very long in both directions L- shaped corridor leads to Greg' s crypt, and you can' t drag just any coffin through that corridor. That' s why he asked you to help. You' ve formalized the task on a plane like this: let the corridor' s width before and after the turn be equal to a and b correspondingly ( see the picture) . The corridor turns directly at a right angle, the coffin is a rectangle whose length and width are equal to l and w ( l \u2265 w) correspondingly. Dwarf Greg has already determined the coffin' s length ( l) , which is based on his height; your task is to determine the coffin' s maximally possible width ( w) , at which it can be brought to the crypt. Besides, due to its large mass ( pure marble! ) the coffin is equipped with rotating wheels; therefore it is impossible to lift it off the ground, however, arbitrary moves and rotations of the coffin in the plane become possible. The coffin may be rotated arbitrarily just before you drag it into crypt and move through the corridor. Greg promised that if you help him, he will grant you immortality ( I wonder how? ) . And if you don' t, well. . . trust me, you don' t want to know what happens if you don' t help him. . .",
    "input": "The first line contains three space- separated integers a, b and l from the problem' s statement ( 1 \u2264 a, b, l \u2264 104) .",
    "output": "Print the maximally possible width of a coffin with absolute or relative error no more than 10 - 7. If a coffin with the given length and positive width ( the coffin that would meet the conditions from the problem' s statement) does not exist, print \" My poor head = ( \" ( without quotes) . It is guaranteed that if the answer is positive, it will be not less than 10 - 7. All the hacks will also be checked to meet that condition.",
    "note": "In the first example the answer is restricted by the coffin' s length ( remember \u2014 coffin' s widths should not be larger than it' s length) . In the second example it is possible to drag the coffin through the corridor thanks to rotating wheels: firstly, drag it forward by one side while it will not be hampered by the wall, then move it forward by adjacent side perpendicularly to the initial movement direction ( remember \u2014 arbitrary moves and rotations of the coffin are possible) .",
    "topics": [
      "geometry",
      "ternary search"
    ],
    "id": "98C"
  },
  {
    "title": "Igloo Skyscraper",
    "url": "https://codeforces.com/problemset/problem/91/E",
    "history": "Today the North Pole hosts an Olympiad in a sport called. . . toy igloo skyscrapers' building! There are n walruses taking part in the contest. Each walrus is given a unique number from 1 to n. After start each walrus begins to build his own igloo skyscraper. Initially, at the moment of time equal to 0, the height of the skyscraper i- th walrus is equal to ai. Each minute the i- th walrus finishes building bi floors. The journalists that are reporting from the spot where the Olympiad is taking place, make q queries to the organizers. Each query is characterized by a group of three numbers li, ri, ti. The organizers respond to each query with a number x, such that: 1. Number x lies on the interval from li to ri inclusive ( li \u2264 x \u2264 ri) . 2. The skyscraper of the walrus number x possesses the maximum height among the skyscrapers of all walruses from the interval [ li, ri] at the moment of time ti. For each journalists' query print the number of the walrus x that meets the above- given criteria. If there are several possible answers, print any of them.",
    "input": "The first line contains numbers n and q ( 1 \u2264 n, q \u2264 105) . Next n lines contain pairs of numbers ai, bi ( 1 \u2264 ai, bi \u2264 109) . Then follow q queries i the following format li, ri, ti, one per each line ( 1 \u2264 li \u2264 ri \u2264 n, 0 \u2264 ti \u2264 106) . All input numbers are integers.",
    "output": "For each journalists' query print the number of the walrus x that meets the criteria, given in the statement. Print one number per line.",
    "note": "",
    "topics": [
      "data structures",
      "geometry"
    ],
    "id": "91E"
  },
  {
    "title": "Space mines",
    "url": "https://codeforces.com/problemset/problem/89/D",
    "history": "Once upon a time in the galaxy of far, far away. . . Darth Wader found out the location of a rebels' base. Now he is going to destroy the base ( and the whole planet that the base is located at) , using the Death Star. When the rebels learnt that the Death Star was coming, they decided to use their new secret weapon \u2014 space mines. Let' s describe a space mine' s build. Each space mine is shaped like a ball ( we' ll call it the mine body) of a certain radius r with the center in the point O. Several spikes protrude from the center. Each spike can be represented as a segment, connecting the center of the mine with some point P, such that ( transporting long- spiked mines is problematic) , where | OP| is the length of the segment connecting O and P. It is convenient to describe the point P by a vector p such that P = O + p. The Death Star is shaped like a ball with the radius of R ( R exceeds any mine' s radius) . It moves at a constant speed along the v vector at the speed equal to | v| . At the moment the rebels noticed the Star of Death, it was located in the point A. The rebels located n space mines along the Death Star' s way. You may regard the mines as being idle. The Death Star does not know about the mines' existence and cannot notice them, which is why it doesn' t change the direction of its movement. As soon as the Star of Death touched the mine ( its body or one of the spikes) , the mine bursts and destroys the Star of Death. A touching is the situation when there is a point in space which belongs both to the mine and to the Death Star. It is considered that Death Star will not be destroyed if it can move infinitely long time without touching the mines. Help the rebels determine whether they will succeed in destroying the Death Star using space mines or not. If they will succeed, determine the moment of time when it will happen ( starting from the moment the Death Star was noticed) .",
    "input": "The first input data line contains 7 integers Ax, Ay, Az, vx, vy, vz, R. They are the Death Star' s initial position, the direction of its movement, and its radius ( - 10 \u2264 vx, vy, vz \u2264 10, | v| > 0, 0 < R \u2264 100) . The second line contains an integer n, which is the number of mines ( 1 \u2264 n \u2264 100) . Then follow n data blocks, the i- th of them describes the i- th mine. The first line of each block contains 5 integers Oix, Oiy, Oiz, ri, mi, which are the coordinates of the mine centre, the radius of its body and the number of spikes ( 0 < ri < 100, 0 \u2264 mi \u2264 10) . Then follow mi lines, describing the spikes of the i- th mine, where the j- th of them describes the i- th spike and contains 3 integers pijx, pijy, pijz \u2014 the coordinates of the vector where the given spike is directed ( ) . The coordinates of the mines' centers and the center of the Death Star are integers, their absolute value does not exceed 10000. It is guaranteed that R > ri for any 1 \u2264 i \u2264 n. For any mines i = \u0338 j the following inequality if fulfilled: . Initially the Death Star and the mines do not have common points.",
    "output": "If the rebels will succeed in stopping the Death Star using space mines, print the time from the moment the Death Star was noticed to the blast. If the Death Star will not touch a mine, print \" - 1\" ( without quotes) . For the answer the absolute or relative error of 10 - 6 is acceptable.",
    "note": "",
    "topics": [
      "geometry"
    ],
    "id": "89D"
  },
  {
    "title": "Mogohu-Rea Idol",
    "url": "https://codeforces.com/problemset/problem/87/E",
    "history": "A long time ago somewhere in the depths of America existed a powerful tribe governed by the great leader Pinnie- the- Wooh. Once the tribe conquered three Maya cities. Pinnie- the- Wooh grew concerned: there had to be some control over the conquered territories. That' s why he appealed to the priests of the supreme god Mogohu- Rea for help. The priests conveyed the god' s will to him: to control these three cities he should put an idol to Mogohu- Rea \u2014 that will create a religious field over the cities. However, the idol is so powerful that it can easily drive the people around it mad unless it is balanced by exactly three sacrifice altars, placed one in each city. To balance the idol the altars should be placed so that the center of mass of the system of these three points coincided with the idol. When counting the center of mass consider that all the altars have the same mass. Now Pinnie- the- Wooh is thinking where to put the idol. He has a list of hills, that are suitable to put an idol there. Help him to identify on which of them you can put an idol without risking to fry off the brains of the cities' population with the religious field. Each city has a shape of a convex polygon such that no three vertexes lie on a straight line. The cities can intersect. Each altar should be attached to the city through a special ceremony, besides, it must be situated on the city' s territory ( possibly at the border) . Thus, there may be several altars on a city' s territory, but exactly one of them will be attached to the city. The altars, the idol and the hills are points on the plane, some of them may coincide. The hills are taken into consideration independently from each other, the altars' location for different hills may also be different.",
    "input": "First follow descriptions of the three cities, divided by empty lines. The descriptions are in the following format: The first line contains an integer n, which represent the number of the polygon' s vertexes ( 3 \u2264 n \u2264 5\u00b7104) . Next n lines contain two integers xi, yi each, they are the coordinates of the polygon' s i- th vertex in the counterclockwise order. After the cities' description follows the integer m ( 1 \u2264 m \u2264 105) , which represents the number of hills. Next m lines each contain two integers xj, yj, they are the coordinates of the j- th hill. All the coordinates in the input data do not exceed 5\u00b7108 in the absolute value.",
    "output": "For each hill print on a single line \" YES\" ( without the quotes) or \" NO\" ( without the quotes) , depending on whether the three sacrifice altars can be put to balance the idol or not.",
    "note": "For the hill at ( 2, 1) the altars can be placed at the points ( 1, 0) , ( 7, 5) , ( - 2, - 2) , for the hill at ( 1, 1) \u2014 at the points ( 0, 0) , ( 6, 4) , ( - 3, - 1) . Many other groups of three points can do the trick. There are no suitable points for other hills.",
    "topics": [
      "geometry"
    ],
    "id": "87E"
  },
  {
    "title": "Guard Towers",
    "url": "https://codeforces.com/problemset/problem/85/E",
    "history": "In a far away kingdom lives a very greedy king. To defend his land, he built n guard towers. Apart from the towers the kingdom has two armies, each headed by a tyrannical and narcissistic general. The generals can' t stand each other, specifically, they will never let soldiers of two armies be present in one tower. During defence operations to manage a guard tower a general has to send part of his army to that tower. Each general asks some fee from the king for managing towers. As they live in a really far away kingdom, each general evaluates his fee in the following weird manner: he finds two remotest ( the most distant) towers, where the soldiers of his army are situated and asks for the fee equal to the distance. Each tower is represented by a point on the plane with coordinates ( x, y) , and the distance between two points with coordinates ( x1, y1) and ( x2, y2) is determined in this kingdom as | x1 - x2| + | y1 - y2| . The greedy king was not exactly satisfied with such a requirement from the generals, that' s why he only agreed to pay one fee for two generals, equal to the maximum of two demanded fees. However, the king is still green with greed, and among all the ways to arrange towers between armies, he wants to find the cheapest one. Each tower should be occupied by soldiers of exactly one army. He hired you for that. You should find the minimum amount of money that will be enough to pay the fees. And as the king is also very scrupulous, you should also count the number of arrangements that will cost the same amount of money. As their number can be quite large, it is enough for the king to know it as a remainder from dividing by 109 + 7. Two arrangements are distinct if the sets of towers occupied by soldiers of the first general are distinct.",
    "input": "The first line contains an integer n ( 2 \u2264 n \u2264 5000) , n is the number of guard towers. Then follow n lines, each of which contains two integers x, y \u2014 the coordinates of the i- th tower ( 0 \u2264 x, y \u2264 5000) . No two towers are present at one point. Pretest 6 is one of the maximal tests for this problem.",
    "output": "Print on the first line the smallest possible amount of money that will be enough to pay fees to the generals. Print on the second line the number of arrangements that can be carried out using the smallest possible fee. This number should be calculated modulo 1000000007 ( 109 + 7) .",
    "note": "In the first example there are only two towers, the distance between which is equal to 2. If we give both towers to one general, then we well have to pay 2 units of money. If each general receives a tower to manage, to fee will be equal to 0. That is the smallest possible fee. As you can easily see, we can obtain it in two ways.",
    "topics": [
      "binary search",
      "dsu",
      "geometry",
      "graphs",
      "sortings"
    ],
    "id": "85E"
  },
  {
    "title": "Corridor",
    "url": "https://codeforces.com/problemset/problem/82/E",
    "history": "Consider a house plan. Let the house be represented by an infinite horizontal strip defined by the inequality - h \u2264 y \u2264 h. Strictly outside the house there are two light sources at the points ( 0, f) and ( 0, - f) . Windows are located in the walls, the windows are represented by segments on the lines y = h and y = - h. Also, the windows are arranged symmetrically about the line y = 0. Your task is to find the area of the floor at the home, which will be lighted by the sources of light.",
    "input": "The first line of the input file contains three integers n, h and f ( 1 \u2264 n \u2264 500, 1 \u2264 h \u2264 10, h < f \u2264 1000) . Next, n lines contain two integers each li, ri ( - 5000 \u2264 li < ri \u2264 5000) , each entry indicates two segments. Endpoints of the first segment are ( li, h) - ( ri, h) , and endpoints of the second segment are ( li, - h) - ( ri, - h) . These segments describe location of windows. Numbers in the lines are space- separated. It is guaranteed that no two distinct segments have common points.",
    "output": "Print the single real number \u2014 the area of the illuminated part of the floor with an absolute or relative error of no more than 10 - 4.",
    "note": "The second sample test is shown on the figure. Green area is the desired area of the illuminated part of the floor. Violet segments indicate windows.",
    "topics": [
      "geometry"
    ],
    "id": "82E"
  },
  {
    "title": "Depression",
    "url": "https://codeforces.com/problemset/problem/80/B",
    "history": "Do you remember a kind cartoon \" Beauty and the Beast\" ? No, no, there was no firing from machine guns or radiation mutants time- travels! There was a beauty named Belle. Once she had violated the Beast' s order and visited the West Wing. After that she was banished from the castle. . . Everybody was upset. The beautiful Belle was upset, so was the Beast, so was Lumiere the candlestick. But the worst thing was that Cogsworth was upset. Cogsworth is not a human, but is the mantel clock, which was often used as an alarm clock. Due to Cogsworth' s frustration all the inhabitants of the castle were in trouble: now they could not determine when it was time to drink morning tea, and when it was time for an evening stroll. Fortunately, deep in the basement are lying digital clock showing the time in the format HH: MM. Now the residents of the castle face a difficult task. They should turn Cogsworth' s hour and minute mustache hands in such a way, that Cogsworth began to show the correct time. Moreover they need to find turn angles in degrees for each mustache hands. The initial time showed by Cogsworth is 12: 00. You can only rotate the hands forward, that is, as is shown in the picture: As since there are many ways too select such angles because of full rotations, choose the smallest angles in the right ( non- negative) direction. Note that Cogsworth' s hour and minute mustache hands move evenly and continuously. Hands are moving independently, so when turning one hand the other hand remains standing still.",
    "input": "The only line of input contains current time according to the digital clock, formatted as HH: MM ( 00 \u2264 HH \u2264 23, 00 \u2264 MM \u2264 59) . The mantel clock initially shows 12: 00. Pretests contain times of the beginning of some morning TV programs of the Channel One Russia.",
    "output": "Print two numbers x and y \u2014 the angles of turning the hour and minute hands, respectively ( 0 \u2264 x, y < 360) . The absolute or relative error in the answer should not exceed 10 - 9.",
    "note": "A note to the second example: the hour hand will be positioned exactly in the middle, between 4 and 5.",
    "topics": [
      "geometry",
      "math"
    ],
    "id": "80B"
  },
  {
    "title": "Archer's Shot",
    "url": "https://codeforces.com/problemset/problem/78/D",
    "history": "A breakthrough among computer games, \" Civilization XIII\" , is striking in its scale and elaborate details. Let' s take a closer look at one of them. The playing area in the game is split into congruent cells that are regular hexagons. The side of each cell is equal to 1. Each unit occupies exactly one cell of the playing field. The field can be considered infinite. Let' s take a look at the battle unit called an \" Archer\" . Each archer has a parameter \" shot range\" . It' s a positive integer that determines the radius of the circle in which the archer can hit a target. The center of the circle coincides with the center of the cell in which the archer stays. A cell is considered to be under the archer\u2019s fire if and only if all points of this cell, including border points are located inside the circle or on its border. The picture below shows the borders for shot ranges equal to 3, 4 and 5. The archer is depicted as A. Find the number of cells that are under fire for some archer.",
    "input": "The first and only line of input contains a single positive integer k \u2014 the archer' s shot range ( 1 \u2264 k \u2264 106) .",
    "output": "Print the single number, the number of cells that are under fire. Please do not use the",
    "note": "",
    "topics": [
      "binary search",
      "geometry",
      "math",
      "two pointers"
    ],
    "id": "78D"
  },
  {
    "title": "Martian Food",
    "url": "https://codeforces.com/problemset/problem/77/E",
    "history": "Have you ever tasted Martian food? Well, you should. Their signature dish is served on a completely black plate with the radius of R, flat as a pancake. First, they put a perfectly circular portion of the Golden Honduras on the plate. It has the radius of r and is located as close to the edge of the plate as possible staying entirely within the plate. I. e. Golden Honduras touches the edge of the plate from the inside. It is believed that the proximity of the portion of the Golden Honduras to the edge of a plate demonstrates the neatness and exactness of the Martians. Then a perfectly round portion of Pink Guadeloupe is put on the plate. The Guadeloupe should not overlap with Honduras, should not go beyond the border of the plate, but should have the maximum radius. I. e. Pink Guadeloupe should touch the edge of the plate from the inside, and touch Golden Honduras from the outside. For it is the size of the Rose Guadeloupe that shows the generosity and the hospitality of the Martians. Further, the first portion ( of the same perfectly round shape) of Green Bull Terrier is put on the plate. It should come in contact with Honduras and Guadeloupe, should not go beyond the border of the plate and should have maximum radius. Each of the following portions of the Green Bull Terrier must necessarily touch the Golden Honduras, the previous portion of the Green Bull Terrier and touch the edge of a plate, but should not go beyond the border. To determine whether a stranger is worthy to touch the food, the Martians ask him to find the radius of the k- th portion of the Green Bull Terrier knowing the radii of a plate and a portion of the Golden Honduras. And are you worthy?",
    "input": "The first line contains integer t ( 1 \u2264 t \u2264 104) \u2014 amount of testcases. Each of the following t lines contain three positive integers: the radii of the plate and a portion of the Golden Honduras R and r ( 1 \u2264 r < R \u2264 104) and the number k ( 1 \u2264 k \u2264 104) . In the pretests 1 \u2264 k \u2264 2.",
    "output": "Print t lines \u2014 the radius of the k- th portion of the Green Bull Terrier for each test. The absolute or relative error of the answer should not exceed 10 - 6.",
    "note": "Dish from the first sample looks like this: Dish from the second sample looks like this:",
    "topics": [
      "geometry"
    ],
    "id": "77E"
  },
  {
    "title": "Ship's Shortest Path",
    "url": "https://codeforces.com/problemset/problem/75/E",
    "history": "You have got a new job, and it' s very interesting, you are a ship captain. Your first task is to move your ship from one point to another point, and for sure you want to move it at the minimum cost. And it' s well known that the shortest distance between any 2 points is the length of the line segment between these 2 points. But unfortunately there is an island in the sea, so sometimes you won' t be able to move your ship in the line segment between the 2 points. You can only move to safe points. A point is called safe if it' s on the line segment between the start and end points, or if it' s on the island' s edge. But you are too lucky, you have got some clever and strong workers and they can help you in your trip, they can help you move the ship in the sea and they will take 1 Egyptian pound for each moving unit in the sea, and they can carry the ship ( yes, they are very strong) and walk on the island and they will take 2 Egyptian pounds for each moving unit in the island. The money which you will give to them will be divided between all workers, so the number of workers does not matter here. You can move your ship on the island edge, and it will be considered moving in the sea. Now you have a sea map, and you have to decide what is the minimum cost for your trip. Your starting point is ( xStart, yStart) , and the end point is ( xEnd, yEnd) , both points will be different. The island will be a convex polygon and there will be no more than 2 polygon points on the same line, also the starting and the end points won' t be inside or on the boundary of the island. The points for the polygon will be given in the anti- clockwise order.",
    "input": "The first line contains 4 integers, xStart, yStart, xEnd and yEnd ( - 100 \u2264 xStart, yStart, xEnd, yEnd \u2264 100) . The second line contains an integer n, which is the number of points in the polygon ( 3 \u2264 n \u2264 30) , followed by a line containing n pairs of integers x and y, which are the coordinates of the points ( - 100 \u2264 x, y \u2264 100) , the polygon points will be distinct.",
    "output": "Print one line which contains the minimum possible cost. The absolute or relative error in the answer should not exceed 10 - 6.",
    "note": "",
    "topics": [
      "geometry",
      "shortest paths"
    ],
    "id": "75E"
  },
  {
    "title": "Plane of Tanks",
    "url": "https://codeforces.com/problemset/problem/73/F",
    "history": "Vasya plays the Plane of Tanks. The tanks in this game keep trying to finish each other off. But your \" Pedalny\" is not like that. . . He just needs to drive in a straight line from point A to point B on the plane. Unfortunately, on the same plane are n enemy tanks. We shall regard all the tanks as points. At the initial moment of time Pedalny is at the point A. Enemy tanks would be happy to destroy it immediately, but initially their turrets are tuned in other directions. Specifically, for each tank we know the initial rotation of the turret ai ( the angle in radians relative to the OX axis in the counterclockwise direction) and the maximum speed of rotation of the turret wi ( radians per second) . If at any point of time a tank turret will be aimed precisely at the tank Pedalny, then the enemy fires and it never misses. Pedalny can endure no more than k shots. Gun reloading takes very much time, so we can assume that every enemy will produce no more than one shot. Your task is to determine what minimum speed of v Pedalny must have to get to the point B. It is believed that Pedalny is able to instantly develop the speed of v, and the first k shots at him do not reduce the speed and do not change the coordinates of the tank.",
    "input": "The first line contains 4 numbers \u2013 the coordinates of points A and B ( in meters) , the points do not coincide. On the second line number n is given ( 1 \u2264 n \u2264 104) . It is the number of enemy tanks. Each of the following n lines contain the coordinates of a corresponding tank xi, yi and its parameters ai and wi ( 0 \u2264 ai \u2264 2\u03c0, 0 \u2264 wi \u2264 100) . Numbers ai and wi contain at most 5 digits after the decimal point. All coordinates are integers and their absolute values do not exceed 105. Enemy tanks can rotate a turret in the clockwise as well as in the counterclockwise direction at the angular speed of not more than wi. It is guaranteed that each of the enemy tanks will need at least 0. 1 seconds to aim at any point of the segment AB and each of the enemy tanks is posistioned no closer than 0. 1 meters to line AB. On the last line is given the number k ( 0 \u2264 k \u2264 n) .",
    "output": "Print a single number with absolute or relative error no more than 10 - 4 \u2014 the minimum required speed of Pedalny in meters per second.",
    "note": "",
    "topics": [
      "brute force",
      "geometry"
    ],
    "id": "73F"
  },
  {
    "title": "Professor's task",
    "url": "https://codeforces.com/problemset/problem/70/D",
    "history": "Once a walrus professor Plato asked his programming students to perform the following practical task. The students had to implement such a data structure that would support a convex hull on some set of points S. The input to the program had q queries of two types: 1. Add a point with coordinates ( x, y) into the set S. Note that in this case the convex hull of S could have changed, and could have remained the same. 2. Say whether a point with coordinates ( x, y) belongs to an area limited by the convex hull, including the border. All the students coped with the task. What about you?",
    "input": "The first line contains an integer q ( 4 \u2264 q \u2264 105) . Then follow q lines in the following way: \" t x y\" , where t is the query type ( 1 or 2) , and ( x, y) are the coordinates of the point ( - 106 \u2264 x, y \u2264 106, x and y are integers) . There is at least one query of type 2. It is guaranteed that the three queries of the first type follow first and the points given in the queries form a non- degenerative triangle. Also all the points added in S are distinct.",
    "output": "For each query of the second type print one string containing \" YES\" , if the point lies inside the convex hull or on its border. Otherwise, print \" NO\" .",
    "note": "",
    "topics": [
      "data structures",
      "geometry"
    ],
    "id": "70D"
  },
  {
    "title": "Contact",
    "url": "https://codeforces.com/problemset/problem/68/E",
    "history": "Little Petya is preparing for the first contact with aliens. He knows that alien spaceships have shapes of non- degenerate triangles and there will be exactly 4 ships. Landing platform for a ship can be made of 3 special columns located at some points of a Cartesian plane such that these 3 points form a triangle equal to the ship with respect to rotations, translations ( parallel shifts along some vector) and reflections ( symmetries along the edges) . The ships can overlap after the landing. Each column can be used to land more than one ship, for example, if there are two equal ships, we don' t need to build 6 columns to land both ships, 3 will be enough. Petya wants to know what minimum number of columns will be enough to land all ships.",
    "input": "Each of 4 lines will contain 6 integers x1 y1 x2 y2 x3 y3 ( 0 \u2264 x1, y1, x2, y2, x3, y3 \u2264 20) , representing 3 points that describe the shape of each of 4 ships. It is guaranteed that 3 points in each line will represent a non- degenerate triangle.",
    "output": "First line should contain minimum number of columns enough to land all spaceships.",
    "note": "In the first test case columns can be put in these points: ( 0, 0) , ( 1, 0) , ( 3, 0) , ( 1, 2) . Note that the second ship can land using last 3 columns. In the second test case following points can be chosen: ( 0, 0) , ( 0, 1) , ( 1, 0) , ( 0, 2) , ( 2, 0) , ( 0, 5) , ( 5, 0) , ( 0, 17) , ( 17, 0) . It is impossible to use less than 9 columns.",
    "topics": [
      "geometry"
    ],
    "id": "68E"
  },
  {
    "title": "Save the City!",
    "url": "https://codeforces.com/problemset/problem/67/E",
    "history": "In the town of Aalam- Aara ( meaning the Light of the Earth) , previously there was no crime, no criminals but as the time progressed, sins started creeping into the hearts of once righteous people. Seeking solution to the problem, some of the elders found that as long as the corrupted part of population was kept away from the uncorrupted part, the crimes could be stopped. So, they are trying to set up a compound where they can keep the corrupted people. To ensure that the criminals don' t escape the compound, a watchtower needs to be set up, so that they can be watched. Since the people of Aalam- Aara aren' t very rich, they met up with a merchant from some rich town who agreed to sell them a land- plot which has already a straight line fence AB along which a few points are set up where they can put up a watchtower. Your task is to help them find out the number of points on that fence where the tower can be put up, so that all the criminals can be watched from there. Only one watchtower can be set up. A criminal is watchable from the watchtower if the line of visibility from the watchtower to him doesn' t cross the plot- edges at any point between him and the tower i. e. as shown in figure 1 below, points X, Y, C and A are visible from point B but the points E and D are not. Figure 1 Figure 2 Assume that the land plot is in the shape of a polygon and coordinate axes have been setup such that the fence AB is parallel to x- axis and the points where the watchtower can be set up are the integer points on the line. For example, in given figure 2, watchtower can be setup on any of five integer points on AB i. e. ( 4, 8) , ( 5, 8) , ( 6, 8) , ( 7, 8) or ( 8, 8) . You can assume that no three consecutive points are collinear and all the corner points other than A and B, lie towards same side of fence AB. The given polygon doesn' t contain self- intersections.",
    "input": "The first line of the test case will consist of the number of vertices n ( 3 \u2264 n \u2264 1000) . Next n lines will contain the coordinates of the vertices in the clockwise order of the polygon. On the i- th line are integers xi and yi ( 0 \u2264 xi, yi \u2264 106) separated by a space. The endpoints of the fence AB are the first two points, ( x1, y1) and ( x2, y2) .",
    "output": "Output consists of a single line containing the number of points where the watchtower can be set up.",
    "note": "Figure 2 shows the first test case. All the points in the figure are watchable from any point on fence AB. Since, AB has 5 integer coordinates, so answer is 5. For case two, fence CD and DE are not completely visible, thus answer is 0.",
    "topics": [
      "geometry"
    ],
    "id": "67E"
  },
  {
    "title": "Harry Potter and the Golden Snitch",
    "url": "https://codeforces.com/problemset/problem/65/C",
    "history": "Brothers Fred and George Weasley once got into the sporting goods store and opened a box of Quidditch balls. After long and painful experiments they found out that the Golden Snitch is not enchanted at all. It is simply a programmed device. It always moves along the same trajectory, which is a polyline with vertices at the points ( x0, y0, z0) , ( x1, y1, z1) , . . . , ( xn, yn, zn) . At the beginning of the game the snitch is positioned at the point ( x0, y0, z0) , and then moves along the polyline at the constant speed vs. The twins have not yet found out how the snitch behaves then. Nevertheless, they hope that the retrieved information will help Harry Potter and his team in the upcoming match against Slytherin. Harry Potter learned that at the beginning the game he will be at the point ( Px, Py, Pz) and his super fast Nimbus 2011 broom allows him to move at the constant speed vp in any direction or remain idle. vp is not less than the speed of the snitch vs. Harry Potter, of course, wants to catch the snitch as soon as possible. Or, if catching the snitch while it is moving along the polyline is impossible, he wants to hurry the Weasley brothers with their experiments. Harry Potter catches the snitch at the time when they are at the same point. Help Harry.",
    "input": "The first line contains a single integer n ( 1 \u2264 n \u2264 10000) . The following n + 1 lines contain the coordinates xi, yi, zi, separated by single spaces. The coordinates of any two consecutive points do not coincide. The next line contains the velocities vp and vs, the last line contains Px, Py, Pz, separated by single spaces. All the numbers in the input are integers, their absolute value does not exceed 104. The speeds are strictly positive. It is guaranteed that vs \u2264 vp.",
    "output": "If Harry Potter can catch the snitch while it is moving along the polyline ( including the end ( xn, yn, zn) ) , print \" YES\" in the first line ( without the quotes) . Print in the second line t, which is the earliest moment of time, when Harry will be able to catch the snitch. On the third line print three numbers X, Y, Z, the coordinates of the point at which this happens. The absolute or relative error in the answer should not exceed 10 - 6. If Harry is not able to catch the snitch during its moving along the described polyline, print \" NO\" .",
    "note": "",
    "topics": [
      "binary search",
      "geometry"
    ],
    "id": "65C"
  },
  {
    "title": "Inquisition",
    "url": "https://codeforces.com/problemset/problem/62/C",
    "history": "In Medieval times existed the tradition of burning witches at steaks together with their pets, black cats. By the end of the 15- th century the population of black cats ceased to exist. The difficulty of the situation led to creating the EIC - the Emergency Inquisitory Commission. The resolution # 666 says that a white cat is considered black when and only when the perimeter of its black spots exceeds the acceptable norm. But what does the acceptable norm equal to? Every inquisitor will choose it himself depending on the situation. And your task is to find the perimeter of black spots on the cat' s fur. The very same resolution says that the cat' s fur is a white square with the length of 105. During the measurement of spots it is customary to put the lower left corner of the fur into the origin of axes ( 0; 0) and the upper right one \u2014 to the point with coordinates ( 105; 105) . The cats' spots are nondegenerate triangles. The spots can intersect and overlap with each other, but it is guaranteed that each pair of the triangular spots' sides have no more than one common point. We' ll regard the perimeter in this problem as the total length of the boarders where a cat' s fur changes color.",
    "input": "The first input line contains a single integer n ( 0 \u2264 n \u2264 100) . It is the number of spots on the cat' s fur. The i- th of the last n lines contains 6 integers: x1i, y1i, x2i, y2i, x3i, y3i. They are the coordinates of the i- th triangular spot ( 0 < xji, yji < 105) .",
    "output": "Print a single number, the answer to the problem, perimeter of the union of triangles. Your answer should differ from the correct one in no more than 10 - 6.",
    "note": "",
    "topics": [
      "geometry",
      "implementation",
      "sortings"
    ],
    "id": "62C"
  },
  {
    "title": "Very simple problem",
    "url": "https://codeforces.com/problemset/problem/55/E",
    "history": "You are given a convex polygon. Count, please, the number of triangles that contain a given point in the plane and their vertices are the vertices of the polygon. It is guaranteed, that the point doesn' t lie on the sides and the diagonals of the polygon.",
    "input": "The first line contains integer n \u2014 the number of vertices of the polygon ( 3 \u2264 n \u2264 100000) . The polygon description is following: n lines containing coordinates of the vertices in clockwise order ( integer x and y not greater than 109 by absolute value) . It is guaranteed that the given polygon is nondegenerate and convex ( no three points lie on the same line) . The next line contains integer t ( 1 \u2264 t \u2264 20) \u2014 the number of points which you should count the answer for. It is followed by t lines with coordinates of the points ( integer x and y not greater than 109 by absolute value) .",
    "output": "The output should contain t integer numbers, each on a separate line, where i- th number is the answer for the i- th point. Please, do not use",
    "note": "",
    "topics": [
      "geometry",
      "two pointers"
    ],
    "id": "55E"
  },
  {
    "title": "Vacuum \u0421leaner",
    "url": "https://codeforces.com/problemset/problem/54/E",
    "history": "One winter evening the Hedgehog was relaxing at home in his cozy armchair and clicking through the TV channels. Stumbled on an issue of \u00abTopShop\u00bb, the Hedgehog was about to change the channel when all of a sudden he was stopped by an advertisement of a new wondrous invention. Actually, a vacuum cleaner was advertised there. It was called Marvellous Vacuum and it doesn' t even need a human to operate it while it cleans! The vacuum cleaner can move around the flat on its own: it moves in some direction and if it hits an obstacle there, it automatically chooses a new direction. Sooner or later this vacuum cleaner will travel through all the room and clean it all. Having remembered how much time the Hedgehog spends every time on cleaning ( surely, no less than a half of the day) , he got eager to buy this wonder. However, the Hedgehog quickly understood that the cleaner has at least one weak point: it won' t clean well in the room' s corners because it often won' t able to reach the corner due to its shape. To estimate how serious is this drawback in practice, the Hedgehog asked you to write for him the corresponding program. You will be given the cleaner' s shape in the top view. We will consider only the cases when the vacuum cleaner is represented as a convex polygon. The room is some infinitely large rectangle. We consider one corner of this room and want to find such a rotation of the vacuum cleaner so that it, being pushed into this corner, will leave the minimum possible area in the corner uncovered.",
    "input": "The first line contains an integer N which represents the number of vertices of the vacuum cleaner' s polygon ( 3 \u2264 N \u2264 4\u00b7104) . Then follow N lines each containing two numbers \u2014 the coordinates of a vertex of the polygon. All the coordinates are integer and their absolute values do not exceed 106. It is guaranteed that the given polygon is nondegenerate and convex ( no three points lie on the same line) . The polygon vertices are given in a clockwise or counter- clockwise direction.",
    "output": "Print the minimum possible uncovered area. The answer will be accepted if it is within 10 - 6 of absolute or relative error from the correct answer.",
    "note": "",
    "topics": [
      "geometry"
    ],
    "id": "54E"
  },
  {
    "title": "Happy Farm 5",
    "url": "https://codeforces.com/problemset/problem/50/C",
    "history": "The Happy Farm 5 creators decided to invent the mechanism of cow grazing. The cows in the game are very slow and they move very slowly, it can even be considered that they stand still. However, carnivores should always be chased off them. For that a young player Vasya decided to make the shepherd run round the cows along one and the same closed path. It is very important that the cows stayed strictly inside the area limited by the path, as otherwise some cows will sooner or later be eaten. To be absolutely sure in the cows' safety, Vasya wants the path completion time to be minimum. The new game is launched for different devices, including mobile phones. That' s why the developers decided to quit using the arithmetics with the floating decimal point and use only the arithmetics of integers. The cows and the shepherd in the game are represented as points on the plane with integer coordinates. The playing time is modeled by the turns. During every turn the shepherd can either stay where he stands or step in one of eight directions: horizontally, vertically, or diagonally. As the coordinates should always remain integer, then the length of a horizontal and vertical step is equal to 1, and the length of a diagonal step is equal to . The cows do not move. You have to minimize the number of moves the shepherd needs to run round the whole herd.",
    "input": "The first line contains an integer N which represents the number of cows in the herd ( 1 \u2264 N \u2264 105) . Each of the next N lines contains two integers Xi and Yi which represent the coordinates of one cow of ( | Xi| , | Yi| \u2264 106) . Several cows can stand on one point.",
    "output": "Print the single number \u2014 the minimum number of moves in the sought path.",
    "note": "Picture for the example test: The coordinate grid is painted grey, the coordinates axes are painted black, the cows are painted red and the sought route is painted green.",
    "topics": [
      "geometry"
    ],
    "id": "50C"
  },
  {
    "title": "Cannon",
    "url": "https://codeforces.com/problemset/problem/47/E",
    "history": "Bertown is under siege! The attackers have blocked all the ways out and their cannon is bombarding the city. Fortunately, Berland intelligence managed to intercept the enemies' shooting plan. Let' s introduce the Cartesian system of coordinates, the origin of which coincides with the cannon' s position, the Ox axis is directed rightwards in the city' s direction, the Oy axis is directed upwards ( to the sky) . The cannon will make n more shots. The cannon balls' initial speeds are the same in all the shots and are equal to V, so that every shot is characterized by only one number alphai which represents the angle at which the cannon fires. Due to the cannon' s technical peculiarities this angle does not exceed 45 angles ( \u03c0 / 4) . We disregard the cannon sizes and consider the firing made from the point ( 0, 0) . The balls fly according to the known physical laws of a body thrown towards the horizon at an angle: vx( t) = V\u00b7cos( alpha) vy( t) = V\u00b7sin( alpha) \u2013 g\u00b7t x( t) = V\u00b7cos( alpha) \u00b7t y( t) = V\u00b7sin( alpha) \u00b7t \u2013 g\u00b7t2 / 2Think of the acceleration of gravity g as equal to 9. 8. Bertown defends m walls. The i- th wall is represented as a vertical segment ( xi, 0) - ( xi, yi) . When a ball hits a wall, it gets stuck in it and doesn' t fly on. If a ball doesn' t hit any wall it falls on the ground ( y = 0) and stops. If the ball exactly hits the point ( xi, yi) , it is considered stuck. Your task is to find for each ball the coordinates of the point where it will be located in the end.",
    "input": "The first line contains integers n and V ( 1 \u2264 n \u2264 104, 1 \u2264 V \u2264 1000) which represent the number of shots and the initial speed of every ball. The second line contains n space- separated real numbers alphai ( 0 < alphai < \u03c0 / 4) which represent the angles in radians at which the cannon will fire. The third line contains integer m ( 1 \u2264 m \u2264 105) which represents the number of walls. Then follow m lines, each containing two real numbers xi and yi ( 1 \u2264 xi \u2264 1000, 0 \u2264 yi \u2264 1000) which represent the wall\u2019s coordinates. All the real numbers have no more than 4 decimal digits. The walls may partially overlap or even coincide.",
    "output": "Print n lines containing two real numbers each \u2014 calculate for every ball the coordinates of its landing point. Your answer should have the relative or absolute error less than 10 - 4.",
    "note": "",
    "topics": [
      "data structures",
      "geometry",
      "sortings"
    ],
    "id": "47E"
  },
  {
    "title": "Emperor's Problem",
    "url": "https://codeforces.com/problemset/problem/46/G",
    "history": "It happened at the times of the Great Berland Empire. Once the Emperor dreamt that the Messenger from the gods ordered to build a temple whose base would be a convex polygon with n angles. Next morning the Emperor gave the command to build a temple whose base was a regular polygon with n angles. The temple was built but soon the Empire was shaken with disasters and crop failures. After an earthquake destroyed the temple, the Emperor understood that he somehow caused the wrath of gods to fall on his people. He ordered to bring the wise man. When the wise man appeared, the Emperor retold the dream to him and asked \" Oh the wisest among the wisest, tell me how could I have infuriated the Gods? \" . \" My Lord, \" the wise man answered. \" As far as I can judge, the gods are angry because you were too haste to fulfill their order and didn' t listen to the end of the message\" . Indeed, on the following night the Messenger appeared again. He reproached the Emperor for having chosen an imperfect shape for the temple. \" But what shape can be more perfect than a regular polygon! ? \" cried the Emperor in his dream. To that the Messenger gave a complete and thorough reply. All the vertices of the polygon should be positioned in the lattice points. All the lengths of its sides should be different. From the possible range of such polygons a polygon which maximum side is minimal possible must be chosen. You are an obedient architect who is going to make the temple' s plan. Note that the polygon should be simple ( having a border without self- intersections and overlapping) and convex, however, it is acceptable for three consecutive vertices to lie on the same line.",
    "input": "The first line contains the single number n ( 3 \u2264 n \u2264 10000) .",
    "output": "Print \" YES\" ( without quotes) in the first line if it is possible to build a polygon possessing the needed qualities. In the next n lines print integer coordinates of the polygon vertices in the order in which they would be passed counter clockwise. The absolute value of the coordinates shouldn' t exceed 109. No two vertices can coincide. It is permitted to print any of the possible solutions. Print \" NO\" if to build the polygon is impossible.",
    "note": "",
    "topics": [
      "geometry"
    ],
    "id": "46G"
  },
  {
    "title": "BerPaint",
    "url": "https://codeforces.com/problemset/problem/44/F",
    "history": "Anfisa the monkey got disappointed in word processors as they aren' t good enough at reflecting all the range of her emotions, that' s why she decided to switch to graphics editors. Having opened the BerPaint, she saw a white rectangle W \u00d7 H in size which can be painted on. First Anfisa learnt to navigate the drawing tool which is used to paint segments and quickly painted on that rectangle a certain number of black- colored segments. The resulting picture didn' t seem bright enough to Anfisa, that' s why she turned her attention to the \" fill\" tool which is used to find a point on the rectangle to paint and choose a color, after which all the area which is the same color as the point it contains, is completely painted the chosen color. Having applied the fill several times, Anfisa expressed her emotions completely and stopped painting. Your task is by the information on the painted segments and applied fills to find out for every color the total area of the areas painted this color after all the fills.",
    "input": "The first input line has two integers W and H ( 3 \u2264 W, H \u2264 104) \u2014 the sizes of the initially white rectangular painting area. The second line contains integer n \u2014 the number of black segments ( 0 \u2264 n \u2264 100) . On the next n lines are described the segments themselves, each of which is given by coordinates of their endpoints x1, y1, x2, y2 ( 0 < x1, x2 < W, 0 < y1, y2 < H) . All segments have non- zero length. The next line contains preset number of fills m ( 0 \u2264 m \u2264 100) . Each of the following m lines defines the fill operation in the form of \" x y color\" , where ( x, y) are the coordinates of the chosen point ( 0 < x < W, 0 < y < H) , and color \u2014 a line of lowercase Latin letters from 1 to 15 symbols in length, determining the color. All coordinates given in the input are integers. Initially the rectangle is \" white\" in color, whereas the segments are drawn \" black\" in color.",
    "output": "For every color present in the final picture print on the single line the name of the color and the total area of areas painted that color with an accuracy of 10 - 6. Print the colors in any order.",
    "note": "Initially the black segments painted by Anfisa can also be painted a color if any of the chosen points lays on the segment. The segments have areas equal to 0. That is why if in the final picture only parts of segments is painted some color, then the area, painted the color is equal to 0.",
    "topics": [
      "geometry",
      "graphs"
    ],
    "id": "44F"
  },
  {
    "title": "Find Color",
    "url": "https://codeforces.com/problemset/problem/40/A",
    "history": "Not so long ago as a result of combat operations the main Berland place of interest \u2014 the magic clock \u2014 was damaged. The cannon' s balls made several holes in the clock, that' s why the residents are concerned about the repair. The magic clock can be represented as an infinite Cartesian plane, where the origin corresponds to the clock center. The clock was painted two colors as is shown in the picture: The picture shows only the central part of the clock. This coloring naturally extends to infinity. The balls can be taken to be points on the plane. Your task is to find the color of the area, damaged by the given ball. All the points located on the border of one of the areas have to be considered painted black.",
    "input": "The first and single line contains two integers x and y \u2014 the coordinates of the hole made in the clock by the ball. Each of the numbers x and y has an absolute value that does not exceed 1000.",
    "output": "Find the required color. All the points between which and the origin of coordinates the distance is integral- value are painted black.",
    "note": "",
    "topics": [
      "constructive algorithms",
      "geometry",
      "implementation",
      "math"
    ],
    "id": "40A"
  },
  {
    "title": "Bowls",
    "url": "https://codeforces.com/problemset/problem/36/C",
    "history": "Once Petya was in such a good mood that he decided to help his mum with the washing- up. There were n dirty bowls in the sink. From the geometrical point of view each bowl looks like a blunted cone. We can disregard the width of the walls and bottom. Petya puts the clean bowls one on another naturally, i. e. so that their vertical axes coincide ( see the picture) . You will be given the order in which Petya washes the bowls. Determine the height of the construction, i. e. the distance from the bottom of the lowest bowl to the top of the highest one.",
    "input": "The first input line contains integer n ( 1 \u2264 n \u2264 3000) . Each of the following n lines contains 3 integers h, r and R ( 1 \u2264 h \u2264 10000, 1 \u2264 r < R \u2264 10000) . They are the height of a bowl, the radius of its bottom and the radius of its top. The plates are given in the order Petya puts them on the table.",
    "output": "Output the height of the plate pile accurate to at least 10 - 6.",
    "note": "",
    "topics": [
      "geometry",
      "implementation"
    ],
    "id": "36C"
  },
  {
    "title": "Knights",
    "url": "https://codeforces.com/problemset/problem/33/D",
    "history": "Berland is facing dark times again. The army of evil lord Van de Mart is going to conquer the whole kingdom. To the council of war called by the Berland' s king Valery the Severe came n knights. After long discussions it became clear that the kingdom has exactly n control points ( if the enemy conquers at least one of these points, the war is lost) and each knight will occupy one of these points. Berland is divided into m + 1 regions with m fences, and the only way to get from one region to another is to climb over the fence. Each fence is a circle on a plane, no two fences have common points, and no control point is on the fence. You are given k pairs of numbers ai, bi. For each pair you have to find out: how many fences a knight from control point with index ai has to climb over to reach control point bi ( in case when Van de Mart attacks control point bi first) . As each knight rides a horse ( it is very difficult to throw a horse over a fence) , you are to find out for each pair the minimum amount of fences to climb over.",
    "input": "The first input line contains three integers n, m, k ( 1 \u2264 n, m \u2264 1000, 0 \u2264 k \u2264 100000) . Then follow n lines, each containing two integers Kxi, Kyi ( - 109 \u2264 Kxi, Kyi \u2264 109) \u2014 coordinates of control point with index i. Control points can coincide. Each of the following m lines describes fence with index i with three integers ri, Cxi, Cyi ( 1 \u2264 ri \u2264 109, - 109 \u2264 Cxi, Cyi \u2264 109) \u2014 radius and center of the circle where the corresponding fence is situated. Then follow k pairs of integers ai, bi ( 1 \u2264 ai, bi \u2264 n) , each in a separate line \u2014 requests that you have to answer. ai and bi can coincide.",
    "output": "Output exactly k lines, each containing one integer \u2014 the answer to the corresponding request.",
    "note": "",
    "topics": [
      "geometry",
      "graphs",
      "shortest paths",
      "sortings"
    ],
    "id": "33D"
  },
  {
    "title": "Hide-and-Seek",
    "url": "https://codeforces.com/problemset/problem/32/E",
    "history": "Victor and Peter are playing hide- and- seek. Peter has hidden, and Victor is to find him. In the room where they are playing, there is only one non- transparent wall and one double- sided mirror. Victor and Peter are points with coordinates ( xv, yv) and ( xp, yp) respectively. The wall is a segment joining points with coordinates ( xw, 1, yw, 1) and ( xw, 2, yw, 2) , the mirror \u2014 a segment joining points ( xm, 1, ym, 1) and ( xm, 2, ym, 2) . If an obstacle has a common point with a line of vision, it' s considered, that the boys can' t see each other with this line of vision. If the mirror has a common point with the line of vision, it' s considered, that the boys can see each other in the mirror, i. e. reflection takes place. The reflection process is governed by laws of physics \u2014 the angle of incidence is equal to the angle of reflection. The incident ray is in the same half- plane as the reflected ray, relative to the mirror. I. e. to see each other Victor and Peter should be to the same side of the line, containing the mirror ( see example 1) . If the line of vision is parallel to the mirror, reflection doesn' t take place, and the mirror isn' t regarded as an obstacle ( see example 4) . Victor got interested if he can see Peter, while standing at the same spot. Help him solve this problem.",
    "input": "The first line contains two numbers xv and yv \u2014 coordinates of Victor. The second line contains two numbers xp and yp \u2014 coordinates of Peter. The third line contains 4 numbers xw, 1, yw, 1, xw, 2, yw, 2 \u2014 coordinates of the wall. The forth line contains 4 numbers xm, 1, ym, 1, xm, 2, ym, 2 \u2014 coordinates of the mirror. All the coordinates are integer numbers, and don' t exceed 104 in absolute value. It' s guaranteed, that the segments don' t have common points, Victor and Peter are not on any of the segments, coordinates of Victor and Peter aren' t the same, the segments don' t degenerate into points.",
    "output": "Output YES, if Victor can see Peter without leaving the initial spot. Otherwise output NO.",
    "note": "",
    "topics": [
      "geometry",
      "implementation"
    ],
    "id": "32E"
  },
  {
    "title": "King's Problem?",
    "url": "https://codeforces.com/problemset/problem/30/D",
    "history": "Every true king during his life must conquer the world, hold the Codeforces world finals, win pink panda in the shooting gallery and travel all over his kingdom. King Copa has already done the first three things. Now he just needs to travel all over the kingdom. The kingdom is an infinite plane with Cartesian coordinate system on it. Every city is a point on this plane. There are n cities in the kingdom at points with coordinates ( x1, 0) , ( x2, 0) , . . . , ( xn, 0) , and there is one city at point ( xn + 1, yn + 1) . King starts his journey in the city number k. Your task is to find such route for the king, which visits all cities ( in any order) and has minimum possible length. It is allowed to visit a city twice. The king can end his journey in any city. Between any pair of cities there is a direct road with length equal to the distance between the corresponding points. No two cities may be located at the same point.",
    "input": "The first line contains two integers n and k ( 1 \u2264 n \u2264 105, 1 \u2264 k \u2264 n + 1) \u2014 amount of cities and index of the starting city. The second line contains n + 1 numbers xi. The third line contains yn + 1. All coordinates are integers and do not exceed 106 by absolute value. No two cities coincide.",
    "output": "Output the minimum possible length of the journey. Your answer must have relative or absolute error less than 10 - 6.",
    "note": "",
    "topics": [
      "geometry",
      "greedy"
    ],
    "id": "30D"
  },
  {
    "title": "DravDe saves the world",
    "url": "https://codeforces.com/problemset/problem/28/E",
    "history": "How horrible! The empire of galactic chickens tries to conquer a beautiful city \" Z\" , they have built a huge incubator that produces millions of chicken soldiers a day, and fenced it around. The huge incubator looks like a polygon on the plane Oxy with n vertices. Naturally, DravDe can' t keep still, he wants to destroy the chicken empire. For sure, he will start with the incubator. DravDe is strictly outside the incubator' s territory in point A( xa, ya) , and wants to get inside and kill all the chickens working there. But it takes a lot of doing! The problem is that recently DravDe went roller skating and has broken both his legs. He will get to the incubator' s territory in his jet airplane LEVAP- 41. LEVAP- 41 flies at speed V( xv, yv, zv) . DravDe can get on the plane in point A, fly for some time, and then air drop himself. DravDe is very heavy, that' s why he falls vertically at speed Fdown, but in each point of his free fall DravDe can open his parachute, and from that moment he starts to fall at the wind speed U( xu, yu, zu) until he lands. Unfortunately, DravDe isn' t good at mathematics. Would you help poor world' s saviour find such an air dropping plan, that allows him to land on the incubator' s territory? If the answer is not unique, DravDe wants to find the plan with the minimum time of his flight on the plane. If the answers are still multiple, he wants to find the one with the minimum time of his free fall before opening his parachute",
    "input": "The first line contains the number n ( 3 \u2264 n \u2264 104) \u2014 the amount of vertices of the fence. Then there follow n lines containing the coordinates of these vertices ( two integer numbers xi, yi) in clockwise or counter- clockwise order. It' s guaranteed, that the fence does not contain self- intersections. The following four lines contain coordinates of point A( xa, ya) , speeds V( xv, yv, zv) , Fdown and speed U( xu, yu, zu) . All the input numbers are integer. All the coordinates don' t exceed 104 in absolute value. It' s guaranteed, that zv > 0 and Fdown, zu < 0, and point A is strictly outside the incubator' s territory.",
    "output": "In the first line output two numbers t1, t2 such, that if DravDe air drops at time t1 ( counting from the beginning of the flight) , he lands on the incubator' s territory ( landing on the border is regarder as landing on the territory) . If DravDe doesn' t open his parachute, the second number should be equal to the duration of DravDe' s falling down. If it' s impossible for DravDe to get to the incubator' s territory, output - 1 - 1. If the answer is not unique, output the answer with the minimum t1. If the answers are still multiple, output the answer with the minimum t2. Your answer must have an absolute or relative error less than 10 - 6.",
    "note": "",
    "topics": [
      "geometry",
      "math"
    ],
    "id": "28E"
  },
  {
    "title": "Sequence of points",
    "url": "https://codeforces.com/problemset/problem/24/C",
    "history": "You are given the following points with integer coordinates on the plane: M0, A0, A1, . . . , An - 1, where n is odd number. Now we define the following infinite sequence of points Mi: Mi is symmetric to Mi - 1 according ( for every natural number i) . Here point B is symmetric to A according M, if M is the center of the line segment AB. Given index j find the point Mj.",
    "input": "On the first line you will be given an integer n ( 1 \u2264 n \u2264 105) , which will be odd, and j ( 1 \u2264 j \u2264 1018) , where j is the index of the desired point. The next line contains two space separated integers, the coordinates of M0. After that n lines follow, where the i- th line contain the space separated integer coordinates of the point Ai - 1. The absolute values of all input coordinates will not be greater then 1000.",
    "output": "On a single line output the coordinates of Mj, space separated.",
    "note": "",
    "topics": [
      "geometry",
      "implementation",
      "math"
    ],
    "id": "24C"
  },
  {
    "title": "Tetragon",
    "url": "https://codeforces.com/problemset/problem/23/D",
    "history": "You' re given the centers of three equal sides of a strictly convex tetragon. Your task is to restore the initial tetragon.",
    "input": "The first input line contains one number T \u2014 amount of tests ( 1 \u2264 T \u2264 5\u00b7104) . Each of the following T lines contains numbers x1, y1, x2, y2, x3, y3 \u2014 coordinates of different points that are the centers of three equal sides ( non- negative integer numbers, not exceeding 10) .",
    "output": "For each test output two lines. If the required tetragon exists, output in the first line YES, in the second line \u2014 four pairs of numbers \u2014 coordinates of the polygon' s vertices in clockwise or counter- clockwise order. Don' t forget, please, that the tetragon should be strictly convex, i. e. no 3 of its points lie on one line. Output numbers with 9 characters after a decimal point. If the required tetragon doen' t exist, output NO in the first line, and leave the second line empty.",
    "note": "",
    "topics": [
      "geometry",
      "math"
    ],
    "id": "23D"
  },
  {
    "title": "Triangle",
    "url": "https://codeforces.com/problemset/problem/18/A",
    "history": "At a geometry lesson Bob learnt that a triangle is called right- angled if it is nondegenerate and one of its angles is right. Bob decided to draw such a triangle immediately: on a sheet of paper he drew three points with integer coordinates, and joined them with segments of straight lines, then he showed the triangle to Peter. Peter said that Bob' s triangle is not right- angled, but is almost right- angled: the triangle itself is not right- angled, but it is possible to move one of the points exactly by distance 1 so, that all the coordinates remain integer, and the triangle become right- angled. Bob asks you to help him and find out if Peter tricks him. By the given coordinates of the triangle you should find out if it is right- angled, almost right- angled, or neither of these.",
    "input": "The first input line contains 6 space- separated integers x1, y1, x2, y2, x3, y3 \u2014 coordinates of the triangle' s vertices. All the coordinates are integer and don' t exceed 100 in absolute value. It' s guaranteed that the triangle is nondegenerate, i. e. its total area is not zero.",
    "output": "If the given triangle is right- angled, output RIGHT, if it is almost right- angled, output ALMOST, and if it is neither of these, output NEITHER.",
    "note": "",
    "topics": [
      "brute force",
      "geometry"
    ],
    "id": "18A"
  },
  {
    "title": "Four Segments",
    "url": "https://codeforces.com/problemset/problem/14/C",
    "history": "Several months later Alex finally got his brother Bob' s creation by post. And now, in his turn, Alex wants to boast about something to his brother. He thought for a while, and came to the conclusion that he has no ready creations, and decided to write a program for rectangles detection. According to his plan, the program detects if the four given segments form a rectangle of a positive area and with sides parallel to coordinate axes. As Alex does badly at school and can' t write this program by himself, he asks you to help him.",
    "input": "The input data contain four lines. Each of these lines contains four integers x1, y1, x2, y2 ( - 109 \u2264 x1, y1, x2, y2 \u2264 109) \u2014 coordinates of segment' s beginning and end positions. The given segments can degenerate into points.",
    "output": "Output the word \u00abYES\u00bb, if the given four segments form the required rectangle, otherwise output \u00abNO\u00bb.",
    "note": "",
    "topics": [
      "brute force",
      "constructive algorithms",
      "geometry",
      "implementation",
      "math"
    ],
    "id": "14C"
  },
  {
    "title": "Triangles",
    "url": "https://codeforces.com/problemset/problem/13/D",
    "history": "Little Petya likes to draw. He drew N red and M blue points on the plane in such a way that no three points lie on the same line. Now he wonders what is the number of distinct triangles with vertices in red points which do not contain any blue point inside.",
    "input": "The first line contains two non- negative integer numbers N and M ( 0 \u2264 N \u2264 500, 0 \u2264 M \u2264 500) \u2014 the number of red and blue points respectively. The following N lines contain two integer numbers each \u2014 coordinates of red points. The following M lines contain two integer numbers each \u2014 coordinates of blue points. All coordinates do not exceed 109 by absolute value.",
    "output": "Output one integer \u2014 the number of distinct triangles with vertices in red points which do not contain any blue point inside.",
    "note": "",
    "topics": [
      "dp",
      "geometry"
    ],
    "id": "13D"
  },
  {
    "title": "Letter A",
    "url": "https://codeforces.com/problemset/problem/13/B",
    "history": "Little Petya learns how to write. The teacher gave pupils the task to write the letter A on the sheet of paper. It is required to check whether Petya really had written the letter A. You are given three segments on the plane. They form the letter A if the following conditions hold: Two segments have common endpoint ( lets call these segments first and second) , while the third segment connects two points on the different segments. The angle between the first and the second segments is greater than 0 and do not exceed 90 degrees. The third segment divides each of the first two segments in proportion not less than 1 / 4 ( i. e. the ratio of the length of the shortest part to the length of the longest part is not less than 1 / 4) .",
    "input": "The first line contains one integer t ( 1 \u2264 t \u2264 10000) \u2014 the number of test cases to solve. Each case consists of three lines. Each of these three lines contains four space- separated integers \u2014 coordinates of the endpoints of one of the segments. All coordinates do not exceed 108 by absolute value. All segments have positive length.",
    "output": "Output one line for each test case. Print \u00abYES\u00bb ( without quotes) , if the segments form the letter A and \u00abNO\u00bb otherwise.",
    "note": "",
    "topics": [
      "geometry",
      "implementation"
    ],
    "id": "13B"
  },
  {
    "title": "Running Student",
    "url": "https://codeforces.com/problemset/problem/9/B",
    "history": "And again a misfortune fell on Poor Student. He is being late for an exam. Having rushed to a bus stop that is in point ( 0, 0) , he got on a minibus and they drove along a straight line, parallel to axis OX, in the direction of increasing x. Poor Student knows the following: during one run the minibus makes n stops, the i- th stop is in point ( xi, 0) coordinates of all the stops are different the minibus drives at a constant speed, equal to vb it can be assumed the passengers get on and off the minibus at a bus stop momentarily Student can get off the minibus only at a bus stop Student will have to get off the minibus at a terminal stop, if he does not get off earlier the University, where the exam will be held, is in point ( xu, yu) Student can run from a bus stop to the University at a constant speed vs as long as needed a distance between two points can be calculated according to the following formula: Student is already on the minibus, so, he cannot get off at the first bus stop Poor Student wants to get to the University as soon as possible. Help him to choose the bus stop, where he should get off. If such bus stops are multiple, choose the bus stop closest to the University.",
    "input": "The first line contains three integer numbers: 2 \u2264 n \u2264 100, 1 \u2264 vb, vs \u2264 1000. The second line contains n non- negative integers in ascending order: coordinates xi of the bus stop with index i. It is guaranteed that x1 equals to zero, and xn \u2264 105. The third line contains the coordinates of the University, integers xu and yu, not exceeding 105 in absolute value.",
    "output": "In the only line output the answer to the problem \u2014 index of the optimum bus stop.",
    "note": "As you know, students are a special sort of people, and minibuses usually do not hurry. That' s why you should not be surprised, if Student' s speed is higher than the speed of the minibus.",
    "topics": [
      "brute force",
      "geometry",
      "implementation"
    ],
    "id": "9B"
  },
  {
    "title": "Two Friends",
    "url": "https://codeforces.com/problemset/problem/8/D",
    "history": "Two neighbours, Alan and Bob, live in the city, where there are three buildings only: a cinema, a shop and the house, where they live. The rest is a big asphalt square. Once they went to the cinema, and the film impressed them so deeply, that when they left the cinema, they did not want to stop discussing it. Bob wants to get home, but Alan has to go to the shop first, and only then go home. So, they agreed to cover some distance together discussing the film ( their common path might pass through the shop, or they might walk circles around the cinema together) , and then to part each other' s company and go each his own way. After they part, they will start thinking about their daily pursuits; and even if they meet again, they won' t be able to go on with the discussion. Thus, Bob' s path will be a continuous curve, having the cinema and the house as its ends. Alan' s path \u2014 a continuous curve, going through the shop, and having the cinema and the house as its ends. The film ended late, that' s why the whole distance covered by Alan should not differ from the shortest one by more than t1, and the distance covered by Bob should not differ from the shortest one by more than t2. Find the maximum distance that Alan and Bob will cover together, discussing the film.",
    "input": "The first line contains two integers: t1, t2 ( 0 \u2264 t1, t2 \u2264 100) . The second line contains the cinema' s coordinates, the third one \u2014 the house' s, and the last line \u2014 the shop' s. All the coordinates are given in meters, are integer, and do not exceed 100 in absolute magnitude. No two given places are in the same building.",
    "output": "In the only line output one number \u2014 the maximum distance that Alan and Bob will cover together, discussing the film. Output the answer accurate to not less than 4 decimal places.",
    "note": "",
    "topics": [
      "binary search",
      "geometry"
    ],
    "id": "8D"
  },
  {
    "title": "Triangle",
    "url": "https://codeforces.com/problemset/problem/6/A",
    "history": "Johnny has a younger sister Anne, who is very clever and smart. As she came home from the kindergarten, she told his brother about the task that her kindergartener asked her to solve. The task was just to construct a triangle out of four sticks of different colours. Naturally, one of the sticks is extra. It is not allowed to break the sticks or use their partial length. Anne has perfectly solved this task, now she is asking Johnny to do the same. The boy answered that he would cope with it without any difficulty. However, after a while he found out that different tricky things can occur. It can happen that it is impossible to construct a triangle of a positive area, but it is possible to construct a degenerate triangle. It can be so, that it is impossible to construct a degenerate triangle even. As Johnny is very lazy, he does not want to consider such a big amount of cases, he asks you to help him.",
    "input": "The first line of the input contains four space- separated positive integer numbers not exceeding 100 \u2014 lengthes of the sticks.",
    "output": "Output TRIANGLE if it is possible to construct a non- degenerate triangle. Output SEGMENT if the first case cannot take place and it is possible to construct a degenerate triangle. Output IMPOSSIBLE if it is impossible to construct any triangle. Remember that you are to use three sticks. It is not allowed to break the sticks or use their partial length.",
    "note": "",
    "topics": [
      "brute force",
      "geometry"
    ],
    "id": "6A"
  },
  {
    "title": "Commentator problem",
    "url": "https://codeforces.com/problemset/problem/2/C",
    "history": "The Olympic Games in Bercouver are in full swing now. Here everyone has their own objectives: sportsmen compete for medals, and sport commentators compete for more convenient positions to give a running commentary. Today the main sport events take place at three round stadiums, and the commentator' s objective is to choose the best point of observation, that is to say the point from where all the three stadiums can be observed. As all the sport competitions are of the same importance, the stadiums should be observed at the same angle. If the number of points meeting the conditions is more than one, the point with the maximum angle of observation is prefered. Would you, please, help the famous Berland commentator G. Berniev to find the best point of observation. It should be noted, that the stadiums do not hide each other, the commentator can easily see one stadium through the other.",
    "input": "The input data consists of three lines, each of them describes the position of one stadium. The lines have the format x, y, r, where ( x, y) are the coordinates of the stadium' s center ( - 103 \u2264 x, y \u2264 103) , and r ( 1 \u2264 r \u2264 103) is its radius. All the numbers in the input data are integer, stadiums do not have common points, and their centers are not on the same line.",
    "output": "Print the coordinates of the required point with five digits after the decimal point. If there is no answer meeting the conditions, the program shouldn' t print anything. The output data should be left blank.",
    "note": "",
    "topics": [
      "geometry"
    ],
    "id": "2C"
  },
  {
    "title": "Ancient Berland Circus",
    "url": "https://codeforces.com/problemset/problem/1/C",
    "history": "Nowadays all circuses in Berland have a round arena with diameter 13 meters, but in the past things were different. In Ancient Berland arenas in circuses were shaped as a regular ( equiangular) polygon, the size and the number of angles could vary from one circus to another. In each corner of the arena there was a special pillar, and the rope strung between the pillars marked the arena edges. Recently the scientists from Berland have discovered the remains of the ancient circus arena. They found only three pillars, the others were destroyed by the time. You are given the coordinates of these three pillars. Find out what is the smallest area that the arena could have.",
    "input": "The input file consists of three lines, each of them contains a pair of numbers \u2013\u2013 coordinates of the pillar. Any coordinate doesn' t exceed 1000 by absolute value, and is given with at most six digits after decimal point.",
    "output": "Output the smallest possible area of the ancient arena. This number should be accurate to at least 6 digits after the decimal point. It' s guaranteed that the number of angles in the optimal polygon is not larger than 100.",
    "note": "",
    "topics": [
      "geometry",
      "math"
    ],
    "id": "1C"
  }
]