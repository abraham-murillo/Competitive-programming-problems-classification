[
  {
    "title": "Codificando texto",
    "url": "https://omegaup.com/arena/problem/Codificando-texto",
    "history": "Se te dara\u0301 un texto el cual tienes que codificar con un me\u0301todo de desplazamiento de tres posiciones, un poco extran\u0303o. Donde \" A\" es igual a \" D\" , \" B\" es igual\" E\" , \" C\" es igual a \" F\" . . . . ETC.",
    "input": "Una cadena de caracteres",
    "output": "La cadena de caracteres codificada",
    "note": "",
    "topics": [
      "strings",
      "string suffix structures",
      "implementation"
    ],
    "id": 16640
  },
  {
    "title": "La palabra circular",
    "url": "https://omegaup.com/arena/problem/La-palabra-circular",
    "history": "Said es un apasionado por la aritme\u0301tica modular y la programacio\u0301n competitiva. Buscando en tantos foros que existen relacionados a la programacio\u0301n competitiva encontro\u0301 un problema que simplemente le fascino\u0301. El problema consiste en recibir una palabra y recorrer esta\u0301 x veces de forma circular de manera horaria. Una palabra se escribe de forma circular recorriendola de izquierda a derecha y al llegar al u\u0301ltimo cara\u0301cter el pro\u0301ximo caracter que recorre es el primero. Por ejemplo si la entrada fuese: feliz 8! [ enter image description here] [ 1] La salida seri\u0301a l. Si la entrada fuese: hola 5! [ enter image description here] [ 2] la salida seri\u0301a h# EntadaRecibira\u0301s un string * * s* * en minu\u0301sculas, sin caracteres especiales ni tildes y un nu\u0301mero x que siempre sera\u0301 mayor al taman\u0303o del string.",
    "input": "",
    "output": "Debera\u0301s mostrar el caracter que aparece al recorrer cada letra * * x* * veces.",
    "note": "",
    "topics": [
      "strings"
    ],
    "id": 16611
  },
  {
    "title": "Contando letras en la ETITC",
    "url": "https://omegaup.com/arena/problem/Contando-letras-en-la-ETITC",
    "history": "David que esta\u0301 aprendiendo a recorrer strings ha decidido seleccionar un problema que para e\u0301l es un total desafi\u0301o. El problema consiste en leer un string de letras en minu\u0301sculas y posteriormente un cara\u0301cter, el deber del programa es contar la cantidad de apariciones del cara\u0301cter en el string. Como e\u0301l al igual que tu\u0301 esta\u0301 aprendiendo a recorrer string te pidio\u0301 ayuda en este problema, e\u0301l te prometio\u0301 recompensarte con una empanada en la cafeteri\u0301a cuando llegue el segundo descanso. # EntadaRecibira\u0301s un string * * s* * en minu\u0301sculas, sin caracteres especiales ni tildes y un cara\u0301cter * * r* * .",
    "input": "",
    "output": "Debera\u0301s mostrar un nu\u0301mero que representa la cantidad de veces que aparece el cara\u0301cter en el string.",
    "note": "",
    "topics": [
      "strings"
    ],
    "id": 16610
  },
  {
    "title": "Letras en el espejo",
    "url": "https://omegaup.com/arena/problem/Letras-en-el-espejo",
    "history": "Leonardo Da Vinci es famoso, entre muchas otras cosas, por su estilo peculiar de escritura: para que nadie le entendiera, el escribi\u0301a de modo que los textos solo se pudieran leer con laayuda de un espejo. En este ejercicio haremos algo similar. Observa que algunas letras seven casi ide\u0301nticas al reflejarse en el espejo ( A, H, I, i, l, M, m, n, O, o, T, t, U, u, V, v, W, w, X, x, Y) , otras forman parejas al reflejarse en el espejo ( b con d, p con q, S con Z, s con z) ylas dema\u0301s no parecen letras al reflejarse en el espejo. Dada una palabra, se puede obtener lapalabra reflejada en el espejo marcando las letras que no se reflejan bien. Por ejemplo, lapalabra prOgRAMAciOn se debe de convertir en nOi* AMA* * Oq al reflejarse, donde losasteriscos significan que esas letras no se reflejan bien.",
    "input": "Una cadena S formada exclusivamente por letras y con una longitud ma\u0301xima de 80caracteres.",
    "output": "Una cadena T que sea la imagen de espejo de S.",
    "note": "",
    "topics": [
      "strings"
    ],
    "id": 16596
  },
  {
    "title": "INVIRTIENDO LA PALABRA",
    "url": "https://omegaup.com/arena/problem/INVIRTIENDO-LA-PALABRA",
    "history": "El profesor O\u0301scar le solicito\u0301 a Juan una tarea. Consiste en invertir una palabra de la siguiente forma- Si la letra esta\u0301 en minu\u0301sculas pasarla a mayu\u0301sculas. - Si la letra esta\u0301 en mayu\u0301scula pasarla a minu\u0301sculas. Juan que au\u0301n no sabe recorrer strings te pidio\u0301 que le ayudaras. # EntadaRecibira\u0301s como entrada una palabra * * s* * con letras en minu\u0301sculas o mayu\u0301sculas sin caracteres especiales ni tildes.",
    "input": "",
    "output": "Debera\u0301s mostrar como resultari\u0301a la palabra al invertirla tal como se menciona en el enunciado.",
    "note": "",
    "topics": [
      "strings"
    ],
    "id": 16590
  },
  {
    "title": "CREANDO UNA PANCARTA EN LA ETITC",
    "url": "https://omegaup.com/arena/problem/CREANDO-UNA-PANCARTA-EN-LA-ETITC",
    "history": "Roger es el nuevo entrenador de programacio\u0301n competitiva en la ETITC. Por desgracia no se han inscrito la cantidad suficiente de participantes, asi\u0301 que e\u0301l ha tenido que recurrir a generar publicidad del curso. Aparte de subir historias a instagram y facebook mencionando el curso preparatorio que e\u0301l esta\u0301 organizando ha decidido crear una pancarta y ponerla en el patio central. En su mente la pancarta tendra\u0301 escrito \" Inscri\u0301bete a programacio\u0301n competitiva, no te arrepentira\u0301s\" . Ahora que lo piensa bien, se ha dado cuenta que el enunciado esta\u0301 muy simple, asi\u0301 que penso\u0301 en hacer una cosa para que sea ma\u0301s llamativa: seleccionar la frase y escribir la frase una y otra vez recorrie\u0301ndola y escribiendo solo una letra en mayu\u0301scula. Como crear una pancarta es bastante costoso, decidio\u0301 primero hacer la prueba con una palabra en minu\u0301scula y recorrerla de la misma forma que deseari\u0301a que le quedara la frase. Como inicio escogio\u0301 la palabra \" programar\" . Y despue\u0301s de crear la pancarta le quedo\u0301 algo exactamente asi\u0301: ! [ enter image description here] [ 1] La persona que le imprime las pancartas se ha ido de vacaciones y Roger quiere seguir intentando crear pancartas con otras palabras. Asi\u0301 que te pidio\u0301 el favor de crear un programa que al recibir una palabra en minu\u0301sculas muestre en consola como se veri\u0301a la pancarta. # EntadaRecibira\u0301s como entrada una palabra en minu\u0301sculas sin tildes ni caracteres especiales * * s* * .",
    "input": "",
    "output": "Debera\u0301s mostrar como quedari\u0301a la pancarta.",
    "note": "",
    "topics": [
      "implementation",
      "strings"
    ],
    "id": 16583
  },
  {
    "title": "B\u00fasqueda de cadenas por prefijos",
    "url": "https://omegaup.com/arena/problem/Busqueda-de-cadenas-por-prefijos",
    "history": "Escribe un programa que lea N cadenas y luego M prefijos. Tu programa debe imprimir cua\u0301les de las N cadenas empiezan con cada prefijo dado.",
    "input": "El entero N seguido de N cadenas no vaci\u0301as. Posteriormente el entero M seguido de M prefijos no vaci\u0301os. Puedes suponer que 1 \u2264 N, M \u2264 10^ 5, que tanto las cadenas como los prefijos so\u0301lo contienen letras minu\u0301sculas y que tienen una longitud de a lo mucho 10 caracteres. Las cadenas esta\u0301n numeradas impli\u0301citamente a partir de 1. No habra\u0301 cadenas repetidas, aunque puede haber prefijos repetidos.",
    "output": "Para cada prefijo dado, una li\u0301nea que comience con un entero que denote el nu\u0301mero de cadenas que inician con ese prefijo, seguido de una lista ascendente de enteros separados por espacios de denoten los identificadores de las cadenas que empiezan con dicho prefijo. Si dicha lista incluye ma\u0301s de diez identificadores, so\u0301lo debes imprimir los primeros diez, aunque la cuenta del nu\u0301mero de total de cadenas siempre debe calcularse bien.",
    "note": "",
    "topics": [
      "implementation",
      "data structures",
      "string suffix structures",
      "strings"
    ],
    "id": 16573
  },
  {
    "title": "No hay tiempo",
    "url": "https://omegaup.com/arena/problem/No-hay-tiempo",
    "history": "Te encuentras en un laberinto con un tiempo limitado y despue\u0301s de un rato logras llegar a la salida, pero para poder abrir la puerta de la salida, tienes que resolver un acertijo el cual consiste en dadas 2 palabras A y B ( de la misma longitud) , tienes que hacer una mi\u0301nima cantidad de movimientos hasta que las 2 palabras sean las mismas. Un movimiento consiste en cambiar una letra a la posicio\u0301n anterior o siguiente en orden alfabe\u0301tico. Por ejemplo: Si esta\u0301s en la letra ' * * e* * ' , puedes pasar a la letra ' * * d* * ' o a la letra ' * * f* * ' . Si esta\u0301s en la letra ' * * a* * ' puedes pasar a la letra ' * * z* * ' o a la letra ' * * b* * ' . Si esta\u0301s en la letra ' * * z* * ' puedes pasar a la letra ' * * y* * ' o a la letra ' * * a* * ' . ! [ enter image description here] [ 1] # ProblemaComo te tardaste mucho en encontrar la salida, ya no te queda tanto tiempo para resolver el acertijo y quieres llegar a tu competencia de ` ICPC` , no tienes tiempo para hacerlo manualmente, pero como eres un buen programador, se te ocurre hacer un programa y asi\u0301 lograr saber la mi\u0301nima cantidad de movimientos para que las 2 palabras sean las mismas.",
    "input": "Dos palabras A y B.",
    "output": "Un entero con el mi\u0301nimo nu\u0301mero de movimientos posibles para que las dos palabras sean iguales. # Ejemplo: | | inputcastacesta| | output4| | descriptionLa primera posicio\u0301n es ' * * c* * ' en ambas palabras, por lo tanto no hacemos ningu\u0301n movimiento. La segunda posicio\u0301n es ' * * a* * ' en la primera palabra y ' * * e* * ' en la segunda palabra, es conveniente convertir la letra ' * * a* * ' en ' * * e* * ' y se realiza\u0301n 4 movimientos hacia adelante. En la tercera, cuarta y quinta posicio\u0301n no hacemos ningu\u0301n movimiento. | | inputabcdeabcdf| | output1| | description| | inputsoparoma| | output4| | description| | end# Li\u0301mitesLa longitud de A y B puede ser de hasta 10^ 6 caracteres.",
    "note": "",
    "topics": [
      "implementation",
      "strings"
    ],
    "id": 16560
  },
  {
    "title": "Separando la frase",
    "url": "https://omegaup.com/arena/problem/Separando-la-frase",
    "history": "El profesor de programacio\u0301n le ha encomendado una tarea a Miguel, consiste en leer como entrada una frase y mostrar una lista de todas las palabras que aparecen en la frase. Miguel que au\u0301n no domina en la totalidad el manejo de strings te pidio\u0301 el favor de ayudarlo. # EntadaRecibira\u0301s como entrada una frase separada correctamente con espacios, sin comas ni ningu\u0301n cara\u0301cter especial.",
    "input": "",
    "output": "Debes mostrar como salida una lista de todas las palabras que aparecen en la frase sin importar si se repiten.",
    "note": "",
    "topics": [
      "implementation",
      "strings"
    ],
    "id": 16493
  },
  {
    "title": "Duerman a raulito",
    "url": "https://omegaup.com/arena/problem/Duerman-a-raulito",
    "history": "Gerardo es un estudiante de 3ro basico y le gusta esdudiar mucho pero dio la casualidad que le toco hacer grupo con raulito y a raulito le gusta mucho el fornais y no deja de cantar \" Me encanta el fortnite, lo juego todo el di\u0301a esto no es minecraft, me encanta, que bueno lo juega mi padre, lo juega mi abuelo tiene ocheeeenta y uno pero es muy bueno\" gerardo esta harto y quiere que lo duerman pero no puede por lo que decidio ignorar todas las letras menos las vocales por lo que ahora deberas interpretar lo que esta escuchando gerardo.",
    "input": "Deberas ingresar un string largo el cual contenga frases o la cancion del fornais",
    "output": "Tu salida debera ser solo las letras vocales separadas con un espacio de toda la frase completa| | inputMe encanta el fortnite, lo juego todo el dia esto no es minecraft| | outpute e a a e o i e o u e o o o e i a e o o e i e a| | inputMe encanta| | outpute e a a| | end",
    "note": "",
    "topics": [
      "implementation",
      "strings"
    ],
    "id": 16465
  },
  {
    "title": "Convertidor sistemas de numeraci\u00f3n",
    "url": "https://omegaup.com/arena/problem/Convertidor-sistemas-de-numeraci",
    "history": "Los sistemas de numeracio\u0301n juegan un papel importante en sistemas computacionales: ! [ Sistemas de numeracio\u0301n] [ 1] Sabiendo esto. Un di\u0301a Carlos necesitaba convertir del sistema decimal base 10 a otros sistemas de numeracio\u0301n y viceversa para una tarea y son muchos ejercicios y e\u0301l lo hace a mano pero es muy tardado y tu\u0301, como buen programador decides ayudarlo escribiendo un programa que realice esta tarea. Como Carlos tiene N nu\u0301meros a convertir y debe especificar a que sistemas se realiza la conversio\u0301n por lo tanto tienes las siguientes acciones: ( 10- > 2) para codificar un nu\u0301mero decimal a binario( 10- > 8) para codificar un nu\u0301mero decimal a octal( 10- > 16) para codificar un nu\u0301mero decimal a hexadecimaly por u\u0301ltimo: ( 2, 8, 16- > 10) para decodificar de un sistema a decimal* * CONSIDERACIO\u0301N: * * NO SE MEZCLARA\u0301N SISTEMAS BASE 2, 8 O 16 CON ALGUNO DE ESTOS UNICAMENTE SERA\u0301 DE DECIMAL A UN SISTEMA O DE UN SISTEMA A DECIMAL",
    "input": "* Un entero N* N Li\u0301neas que contendra\u0301n lo siguiente: Una * * cadena* * que donde indiques la conversio\u0301n a realizar. Nu\u0301mero M a codificar o decodificar.",
    "output": "N Li\u0301neas donde imprimas los nu\u0301meros M equivalentes al sistema que se indico\u0301.",
    "note": "",
    "topics": [
      "implementation",
      "math",
      "strings"
    ],
    "id": 16456
  },
  {
    "title": "Aguilas Contigo",
    "url": "https://omegaup.com/arena/problem/Aguilas-Contigo",
    "history": "A\u0301guilas Contigo es un proyecto de un grupo de estudiantes que buscan generar espacios de impacto solidario mediante donaciones. Cada cierto tiempo deciden hacer un Kilo\u0301metro de Ayuda, donde se busca que a trave\u0301s de donaciones se logre juntar consecutivamente 1 kilo\u0301metro de moneas y/ o billetes. Sin embargo, no saben cua\u0301ntas donaciones se necesitan hacer un kilo\u0301metro, por lo cual, quieren saber cua\u0301nto dinero se ha recolectado hasta el momento.",
    "input": "N li\u0301neas con un valor V que representa el monto de la donacio\u0301n.",
    "output": "La sumatoria de todas la donaciones",
    "note": "",
    "topics": [
      "strings"
    ],
    "id": 16434
  },
  {
    "title": "Dise\u00f1o Simetrico",
    "url": "https://omegaup.com/arena/problem/Diseno-Simetrico",
    "history": "Alex es un innovador disen\u0303ador que se le encargo\u0301 crear un logo lo ma\u0301s * sime\u0301trico* posible, para esta ocasio\u0301n e\u0301l modela el logo como una cadena de caracteres S de longitud N y define una medida de simetri\u0301a K, un nu\u0301mero entero tal que K divide a N. Una cadena es sime\u0301trica si cumple las siguientes condiciones: - La cadena es palindroma. - La cadena es perio\u0301dica con ciclo de longitud K, en otras palabras S[ i] = S[ K + i] para todo i tal que 0 \u2264 i < N - K. Alex tiene una cadena S y desea convertirla en sime\u0301trica, en una operacio\u0301n el puede escoger cualquier cara\u0301cter y cambiarlo a cualquier cara\u0301cter minu\u0301sculo del latin. Alex puede realizar estas operaciones muchas veces, \u00bfCua\u0301l es la mi\u0301nima cantidad de operaciones que debe realizar Alex para convertir la cadena S en una cadena sime\u0301trica?",
    "input": "La primera li\u0301nea consistira\u0301 de dos nu\u0301meros enteros N y K ( 1 \u2264 K < N \u2264 2 \u00b7 10 ^ 5) La segunda li\u0301nea consistira\u0301 de la cadena S de taman\u0303o N ( S consiste so\u0301lo de caracteres latinos en minu\u0301scula)",
    "output": "En una so\u0301la li\u0301nea imprimir la mi\u0301nima cantidad de operaciones para convertir la cadena S en una cadena Sime\u0301trica.",
    "note": "",
    "topics": [
      "strings"
    ],
    "id": 16382
  },
  {
    "title": "Int\u00e9rprete de un lenguaje de bajo nivel",
    "url": "https://omegaup.com/arena/problem/Interprete-de-un-lenguaje-de-baj",
    "history": "Escribe un inte\u0301rprete que ejecute instrucciones escritas en el lenguaje de ensamblado de una ma\u0301quina virtual que se describe a continuacio\u0301n. La ma\u0301quina virtual tiene diez registros r_ 0, r_ 1, r_ 2, . . . , r_ 9 que guardan enteros de 32 bits con signo. La ma\u0301quina virtual tambie\u0301n cuenta con una memoria principal de 2^ 24 bytes direccionables e indizados a partir de 0. Tanto los registros como los bytes de la memoria comienzan valiendo 0. Las instrucciones de un programa esta\u0301n numeradas impli\u0301citamente de arriba hacia abajo a partir de 0. El contador de programa * IP* es un registro que no se puede manipular arbitrariamente y que contiene el nu\u0301mero de la siguiente instruccio\u0301n a ejecutar ( en principio, la instruccio\u0301n que aparece abajo) . . La ma\u0301quina virtual cuenta con una pila de taman\u0303o arbitrario para contadores de programa y so\u0301lo se puede interactuar con ella mediante las instrucciones CALL y RET. A su vez, la ma\u0301quina virtual cuenta con una pila de taman\u0303o arbitrario para datos y so\u0301lo se puede interactuar con ella mediante las instrucciones PUSH y POP. Ambas pilas esta\u0301n fuera de la memoria principal. La ejecucio\u0301n del programa comienza en la primera instruccio\u0301n y cualquier accio\u0301n inva\u0301lida ( divisio\u0301n entre cero, acceder a una direccio\u0301n en memoria inva\u0301lida, hacer un RET cuando la pila de contadores de programa esta\u0301 vaci\u0301a, hacer un POP cuando la pila de datos esta\u0301 vaci\u0301a, salirse de la lista de instrucciones del programa) resulta en comportamiento indefinido. En el lenguaje de ensamblado, cada instruccio\u0301n debe aparecer en su propia li\u0301nea. Las li\u0301neas vaci\u0301as se ignoran. Los comentarios de li\u0301nea comienzan con # y no hay comentarios de bloque. Una etiqueta se declara con la notacio\u0301n * etiqueta: * como prefijo de una instruccio\u0301n. Un identificador de etiqueta puede contener letras, di\u0301gitos y guiones bajos, excepto que no puede comenzar con di\u0301gito. Los si\u0301mbolos de puntuacio\u0301n pueden estar rodeados de espacios en blanco. Los espacios entre nemo\u0301nicos o especificadores de ancho de memoria pueden aparecer en exceso. La diferencia entre mayu\u0301sculas y minu\u0301sculas se ignoran, incluso en etiquetas. Las instrucciones que toman etiquetas no pueden tomar enteros y las instrucciones que toman enteros no pueden tomar etiquetas. A continuacio\u0301n se listan las instrucciones del lenguaje de ensamblado y su sema\u0301ntica en C. Cuando un entero se use en contexto de direccio\u0301n, se hace referencia a la memoria principal de la ma\u0301quina virtual. | * * Instruccio\u0301n* * | * * Sema\u0301ntica* * | | \u2014| \u2014| | NOP | ; | | END | exit( 0) ; | | MOV r_ i, * entero* | r_ i = * entero* ; | | MOV r_ i, r_ j | r_ i = r_ j; | | GET r_ i, BYTE [ * entero* ] | r_ i = ( char) * entero* ; | | GET r_ i, WORD [ * entero* ] | r_ i = ( int) * entero* ; | | GET r_ i, BYTE [ r_ j] | r_ i = ( char) r_ j; | | GET r_ i, WORD [ r_ j] | r_ i = ( int) r_ j; | | PUT r_ i, BYTE [ * entero* ] | ( char) * entero* = r_ i; | | PUT r_ i, WORD [ * entero* ] | ( int) * entero* = r_ i; | | PUT r_ i, BYTE [ r_ j] | ( char) r_ j = r_ i; | | PUT r_ i, WORD [ r_ j] | ( int) r_ j = r_ i; | | ADD r_ i, r_ j, r_ k | r_ i = r_ j + r_ k; | | SUB r_ i, r_ j, r_ k | r_ i = r_ j - r_ k; | | MUL r_ i, r_ j, r_ k | r_ i = r_ j r_ k; | | DIV r_ i, r_ j, r_ k | r_ i = r_ j / r_ k; | | MOD r_ i, r_ j, r_ k | r_ i = r_ j",
    "input": "Una secuencia de li\u0301neas que debera\u0301n procesarse hasta el fin de la entrada y que denotan co\u0301digo de un programa escrito en lenguaje de ensamblado para la ma\u0301quina virtual descrita. Puedes suponer que el co\u0301digo es va\u0301lido y que la ejecucio\u0301n del programa denotado por el co\u0301digo cumple lo siguiente: - No provoca comportamiento indefinido. - No alcanza ninguna instruccio\u0301n ASK. - Procesara\u0301 a lo mucho 10^ 4 instrucciones.",
    "output": "La salida producida por las instrucciones SHOW ejecutadas durante el programa.",
    "note": "",
    "topics": [
      "implementation",
      "strings",
      "data structures"
    ],
    "id": 16360
  },
  {
    "title": "Reconociendo cadenas generadas por gram\u00e1ticas",
    "url": "https://omegaup.com/arena/problem/Reconociendo-cadenas-generadas-p",
    "history": "Escribe un programa que procese una secuencia de li\u0301neas y que determine si cada li\u0301nea puede ser generada mediante la grama\u0301tica que aparece a continuacio\u0301n, donde S es un si\u0301mbolo no terminal ( que tambie\u0301n es el si\u0301mbolo inicial) y donde los si\u0301mbolos w, x, y, z son terminales. S \u2192 SS S \u2192 wSxSy S \u2192 z",
    "input": "Una secuencia de li\u0301neas que debera\u0301 procesarse hasta el fin de la entrada. Puedes suponer que ninguna li\u0301nea esta\u0301 vaci\u0301a y que las li\u0301neas incluyen u\u0301nicamente caracteres ASCII gra\u0301ficos que no son mayu\u0301sculas.",
    "output": "Para cada li\u0301nea de la entrada, imprimir 1 si la li\u0301nea puede ser generada por la grama\u0301tica y 0 en caso contrario. Los valores impresos deben separarse por espacios o saltos de li\u0301nea.",
    "note": "",
    "topics": [
      "dfs and similar",
      "dp",
      "strings"
    ],
    "id": 16292
  },
  {
    "title": "Love Spell",
    "url": "https://omegaup.com/arena/problem/Love-Spell",
    "history": "# DescriptionRaul wants to send a magic love spell, and a sorcerer told him that he must say the magic spell backwards. Help Raul by printing the input spell backwards so he can read it easily.",
    "input": "The magic spell: I wish for you to return to me with this spell may we create a connection that lasts",
    "output": "The magic spell backwards# Example| | inputwith this spell may we create a connection that lasts| | outputstsal taht noitcennoc a etaerc ew yam lleps siht htiw| | end",
    "note": "",
    "topics": [
      "implementation",
      "strings"
    ],
    "id": 16263
  },
  {
    "title": "What's my name?",
    "url": "https://omegaup.com/arena/problem/Whats-my-name",
    "history": "# DescriptionYour professor thinks you don' t know her name. Prove her wrong by printing her name.",
    "input": "",
    "output": "Valeria# Example| | inputempty| | outputValeria| | descriptionprofessor' s name| | end! [ professor] [ 1]",
    "note": "",
    "topics": [
      "strings"
    ],
    "id": 16256
  },
  {
    "title": "Frases de ida y vuelta",
    "url": "https://omegaup.com/arena/problem/Frases-de-ida-y-vuelta",
    "history": "Seguramente haz escuchado de los famosos pali\u0301ndromos, palabras que pueden leerse igual si invertimos el orden de todas sus letras. Tambie\u0301n existen las frases pali\u0301ndromas, que contienen ma\u0301s de una palabra. Para considerar una frase como pali\u0301ndroma, se deben considerar exclusivamente los caracteres del alfabeto. Ignorando los espacios y los signos de puntuacio\u0301n. Escribe un programa que detecte frases pali\u0301ndromas.",
    "input": "Un texto que puede constar de una o varias li\u0301neas. Se garantiza que el texto contendra\u0301 solo letras, espacios en blando y signos de puntuacio\u0301n.",
    "output": "La palabra * * * SI* * * o la palabra * * * NO* * * , dependiendo de si la frase es pali\u0301ndroma o no.",
    "note": "",
    "topics": [
      "strings",
      "implementation",
      "string suffix structures"
    ],
    "id": 16245
  },
  {
    "title": "Torre M\u00e1gica",
    "url": "https://omegaup.com/arena/problem/Torre-Magica",
    "history": "# ProblemaTras un largo y cansado di\u0301a en la feria, tu\u0301 y tu mejor amigo se topan con un nuevo juego que esta atrayendo a mucha gente. El juego consiste en derribar una torre de bloques de colores lanzando una pelota. Sin embargo, los encargados han puesto una serie de reglas para asegurarse de que casi nadie logre ganar: - Cada lanzamiento que hagas solo servira\u0301 para derribar un bloque de la torre, sin importar la altura en la que este. - Tras realizar un lanzamiento y derribar un bloque, los encargados quitan los pares de bloques del mismo color que hayan quedado juntos u\u0301nicamente despue\u0301s de los cambios generados por el lanzamiento, revisando de la parte ma\u0301s baja a la ma\u0301s alta de la torre. - El jugador solo tiene una oportunidad de participar, y tiene que elegir cuantos tiros lanzara\u0301 antes de empezar. - La u\u0301nica forma de ganar es que la torre quede vaci\u0301a, es decir, que todos los bloques hayan sido retirados. Tu\u0301 mejor amigo esta\u0301 desesperado por ganar el peluche de Pikachu que dan como premio en el juego, no hay oportunidad para equivocarse, asi\u0301 que decides realizar un programa que te ayude a probar que lanzamientos te hara\u0301n alcanzar la victoria.",
    "input": "La primera li\u0301nea contiene un entero N que representa la cantidad de lanzamientos a realizar. La siguiente li\u0301nea contiene N enteros positivos, cada uno representando la altura del bloque que sera\u0301 derribado por cada lanzamiento. La tercera y u\u0301ltima li\u0301nea contiene una cadena de caracteres, donde cada cara\u0301cter representa la inicial del color de cada uno de los bloques en la torre, ordenados del ma\u0301s bajo al ma\u0301s alto.",
    "output": "Si los lanzamientos ingresados permitira\u0301n ganar, debera\u0301s imprimir el mensaje \u201cHAS GANADO\u201d, en caso contrario, en la primera li\u0301nea se imprimira\u0301 el mensaje \u201cHAS PERDIDO\u201d y posteriormente en la siguiente li\u0301nea se imprimira\u0301 una cadena de caracteres representando el estado final de la torre de bloques.",
    "note": "",
    "topics": [
      "strings",
      "implementation"
    ],
    "id": 16213
  },
  {
    "title": "Encryptaylor",
    "url": "https://omegaup.com/arena/problem/Encryptaylor",
    "history": "La famosa artista americana * T- Swizzle* esta\u0301 por lanzar su de\u0301cimo tercer a\u0301lbum de estudio. Y como acostumbra, ha preparado un acertijo para que la gente se mantenga emocionada por el lanzamiento. Hoy por la man\u0303ana, te diste cuenta que publico\u0301 en su cuenta de instagram una serie de palabras con las letras desordenadas. Swizzle aclaro\u0301 a trave\u0301s de un u\u0301nico ejemplo que e\u0301stas representan los nombres de las canciones de su nuevo a\u0301lbum. Como eres su fan # 1, decidiste crear e implementar un algoritmo que sea capaz de ordenar las letras y resolver su acertijo. * * TIP: * * Todas las palabras sin sentido fueron desordenadas utilizando la misma lo\u0301gica.",
    "input": "En la primera li\u0301nea, un nu\u0301mero T representando la cantidad de palabras que hay. Despue\u0301s, T li\u0301neas, cada una con una palabra compuesta por letras del alfabeto ingle\u0301s, en desorden. Las palabras no necesariamente tienen la misma longitud l, y pueden haber letras repetidas.",
    "output": "Los nombres de las canciones * * sin espacios* * , una en cada li\u0301nea.",
    "note": "",
    "topics": [
      "strings"
    ],
    "id": 16212
  },
  {
    "title": "Bati Acertijo",
    "url": "https://omegaup.com/arena/problem/BATI_ACERTIJO",
    "history": "Ciudad Go\u0301tica esta\u0301 en peligro, el Acertijo esta\u0301 causando disturbios y atentados, por lo que Batman debe detenerlo lo antes posible. Un celular pegado en una vi\u0301ctima teni\u0301a el mensaje \" Defino la exactitud de una divisio\u0301n y suelo ser clave en una reparticio\u0301n. \u00bfQue\u0301 soy? \" \" Tipo de nu\u0301mero, par o non\" dedujo Batman. Por lo que el Acertijo le dio la oportunidad de hablar con e\u0301l en un canal seguro si lograba obtener un co\u0301digo para acceder, el cual generari\u0301a durante ciertos lapsos de tiempo para tener diversas discusiones. Para obtenerlo, se le dari\u0301an 2 nu\u0301meros Num1 y Num2, con los cuales generari\u0301a un nuevo nu\u0301mero que debe comenzar con los di\u0301gitos nonesordenados y despue\u0301s los pares ordenados de ambos nu\u0301meros iniciales, pero no podri\u0301an haber di\u0301gitos repetidos. Por ejemplo, teniendo los nu\u0301meros 15506 y 684910, al acomodar los di\u0301gitos nones y pares de ambos en orden, se obtiene: ( 11559) | ( 004668) Pero como se habi\u0301a mencionado, no se aceptan repeticiones y el co\u0301digo debe tener primero a los nones y luego a los pares, por lo que el resultado es: 1590468 Batman no puede desaprovechar la oportunidad, ya que al hablar con el Acertijo en li\u0301nea durante repetidas ocasiones, podri\u0301a rastrear su ubicacio\u0301n, pero tiene muchos eventos pro\u0301ximos como Bruce Wayne, por lo que debes ayudarlo a generar un programa que le ayude a obtener los co\u0301digos de forma ra\u0301pida. Cabe mencionar que los nu\u0301meros no son aleatorios para el Acertijo, de hecho su taman\u0303o puede ser grande. El Num1 representa el dinero que fue lavado en Go\u0301tica durante un an\u0303o especi\u0301fico, mientras que Num2 representa el nu\u0301mero de personas que sufrio\u0301 una injusticia ese mismo an\u0303o, lo cual genera ciertos li\u0301mites para el programa, los cuales esta\u0301n en una seccio\u0301n de este problema.",
    "input": "La primera li\u0301nea tiene T, que es el nu\u0301mero de casos de prueba. Las siguientes T li\u0301neas tiene cada caso individual, con dos nu\u0301meros enteros cada una: Num1 y Num2.",
    "output": "Los nu\u0301meros enteros obtenidos con los di\u0301gitos nones y pares ordenados sin repeticiones de los casos.",
    "note": "",
    "topics": [
      "strings"
    ],
    "id": 16211
  },
  {
    "title": "Procesando documentos de texto",
    "url": "https://omegaup.com/arena/problem/Procesando-documentos-de-texto",
    "history": "Escribe un programa que procese una secuencia de li\u0301neas que se espera este\u0301n formadas por los siguientes cinco elementos principales, en orden: - Inicialmente, debe aparecer la palabra ` proceso` . - Posteriormente, debe aparecer un identificador formado por una secuencia de di\u0301gitos y posiblemente puntos entre di\u0301gitos consecutivos. Ejemplos de estos identificadores son ` 5` , ` 5. 7` y ` 5. 7. 36` . Es posible que haya espacios entre los puntos que separan a los nu\u0301meros. Por ejemplo, ` 12 . 8. 1` tambie\u0301n es va\u0301lido. - Posteriormente y de forma opcional, puede aparecer la palabra ` url` seguida de un espacio y una URL. Se garantiza que la URL es va\u0301lida y so\u0301lo esta\u0301 formada por un protocolo, letras minu\u0301sculas, puntos y diagonales. - Posteriormente, la palabra ` requisito` o ` requisitos` seguida de dos puntos. - Finalmente, debe aparecer una lista de frases formadas por una o ma\u0301s palabras constituidas por caracteres gra\u0301ficos. Las frases esta\u0301n separadas entre ellas por comas o por el conector ` y` . Puede haber cero o ma\u0301s espacios alrededor de las comas, pero debe haber uno o ma\u0301s espacios en ambos lados del conector ` y` . Cada frase puede contener una cantidad arbitraria de espacios pero no contiene palabras de menos de dos caracteres. Los elementos principales en una li\u0301nea estara\u0301n separados entre ellos por un espacio. Tu programa debera\u0301 reconocer las li\u0301neas va\u0301lidas y debera\u0301 reimprimirlas en otro formato. A su vez, tu programa debera\u0301 reconocer cua\u0301les li\u0301neas son inva\u0301lidas.",
    "input": "Una secuencia de li\u0301neas que debera\u0301 procesarse hasta el fin de la entrada. Las li\u0301neas esta\u0301n impli\u0301citamente numeradas a partir de 1. Puedes suponer que las li\u0301neas no incluyen letras mayu\u0301sculas, caracteres fuera del ASCII ni caracteres de control distintos a espacios, ni espacios en blanco distintos al espacio ordinario. Adema\u0301s, ninguna li\u0301nea sera\u0301 inva\u0301lida por culpa de exceso de espacios ni por errores de formato en las frases.",
    "output": "Para cada li\u0301nea va\u0301lida de la entrada, imprimir uno de los dos siguientes formatos, dependiendo del caso: - Identificador url [ frase_ 1| frase_ 2| . . . | frase_ n] Este formato aplica cuando la li\u0301nea de entrada incluye el elemento principal de la URL. El identificador no debe contener espacios y cada frase no debe contener espacios a la izquierda o a la derecha, adema\u0301s de que se deben colapsar uno ma\u0301s espacios en so\u0301lo un espacio. - Identificador [ frase_ 1| frase_ 2| . . . | frase_ n] Este formato aplica cuando la li\u0301nea de entrada no incluye el elemento principal de la URL. El manejo de espacios se debe realizar de la misma forma que en el formato anterior. Para cada li\u0301nea inva\u0301lida de la entrada, imprimir la li\u0301nea ` IGNORANDO LINEA ` i donde i es el nu\u0301mero de la li\u0301nea. Tu programa debe evitar imprimir espacios en blanco no solicitados.",
    "note": "",
    "topics": [
      "strings"
    ],
    "id": 16200
  },
  {
    "title": "El reino del rev\u00e9s",
    "url": "https://omegaup.com/arena/problem/El-reino-del-reves",
    "history": "# # El reino del reve\u0301s* Me dijeron que en el Reino del Reve\u0301s* * nada el pa\u0301jaro y vuela el pez, * * que los gatos no hacen miau y dicen yes* * porque estudian mucho ingle\u0301s. * * Me dijeron que en el Reino del Reve\u0301s* * nadie baila con los pies, * * que un ladro\u0301n es vigilante y otro es juez* * y que dos y dos son tres. * * Me dijeron que en el Reino del Reve\u0301s* * cabe un oso en una nuez, * * que usan barbas y bigotes los bebe\u0301s* * y que un an\u0303o dura un mes. * * Me dijeron que en el Reino del Reve\u0301s* * hay un perro pekine\u0301s* * que se cae para arriba y una vez* * no pudo bajar despue\u0301s. * * Me dijeron que en el Reino del Reve\u0301s* * un sen\u0303or llamado Andre\u0301s* * tiene 1. 530 chimpance\u0301s* * que si miras no los ves. * * Me dijeron que en el Reino del Reve\u0301s* * una aran\u0303a y un ciempie\u0301s* * van montados al palacio del marque\u0301s* * en caballos de ajedrez. * * Vamos a ver como es* * el Reino del Reve\u0301s. * * * Cancio\u0301n de Mari\u0301a Elena Walsh* * # El reino del reve\u0301sEn el reino del reve\u0301s nada es lo que parece, dicen que nada el pa\u0301jaro y vuela el pez. En el reino del reve\u0301s nadie baila con los pies. En el reino del reve\u0301s todo esta\u0301 al reve\u0301s. ! [ Ejemplo] ( imagen. jpg)",
    "input": "La entrada consiste en un texto de no ma\u0301s de doscientos cincuenta y cinco caracteres",
    "output": "Como es el reino del reve\u0301s la salida consiste en el texto ingresado escrito al reve\u0301s.",
    "note": "",
    "topics": [
      "strings"
    ],
    "id": 16103
  },
  {
    "title": "El Jugador del Partido",
    "url": "https://omegaup.com/arena/problem/El-Jugador-del-Partido",
    "history": "Una empresa encargada de transmitir los partidos de la seleccio\u0301n Argentina necesita desarrollar el mo\u0301dulo que permita obtener la votacio\u0301n final del \u201cJugador del Partido\u201d y la visualizacio\u0301n de los tres ma\u0301s votados en distintos momentos hasta que el juego termine. El funcionamiento del mo\u0301dulo consiste en habilitar un co\u0301digo QR en la pantalla del televisor que el usuario podra\u0301 escanear y acceder a la aplicacio\u0301n que contiene una lista de jugadores para poder votar. Luego se muestra en la pantalla del televisor los tres jugadores ma\u0301s votados. La empresa decide contratarte para que programes el primer prototipo de este mo\u0301dulo. Cada jugador tiene asignado un ID u\u0301nico. A partir de esto durante todo el partido ingresan votos por medio del ID del jugador que corresponda. Con estos datos, te solicitan que, al te\u0301rmino del primer tiempo y del partido, envi\u0301es los datos de los tres primeros puestos ma\u0301s votados. Por otra parte se requiere saber co\u0301mo fue la tendencia en base a dos posibilidades: La tendencia es TOTAL cuando los puestos de los mismos jugadores ma\u0301s votados del primer tiempo coinciden en puestos al finalizar el partido. La tendencia es PARCIAL cuando por lo menos uno cambia de puesto.",
    "input": "* Una li\u0301nea con un nu\u0301mero entero N, la cantidad de jugadores. * N li\u0301neas, cada una con un nu\u0301mero entero, ID_ i, y una cadena de caracteres, S_ i, con la ID y el nombre del i- e\u0301simo jugador. Cada nombre puede estar formado por letras del alfabeto internacional ( letras desde la ` A` hasta la ` Z` sin la ` N\u0303` ) y guiones. * Una li\u0301nea con dos nu\u0301meros entero P y Q, la cantidad de votos recibidos en el primer tiempo y la cantidad de votos recibidos en el segundo tiempo, respectivamente. * Una li\u0301nea con P nu\u0301meros enteros, cada uno con el ID de un jugador votado en el primer tiempo. * Una li\u0301nea con Q nu\u0301meros enteros, cada uno con el ID de un jugador votado en el segundo tiempo.",
    "output": "* Una li\u0301nea con el nombre del jugador del partido. * Una li\u0301nea con 3 nu\u0301mero enteros con las IDs de los jugadores ma\u0301s votados en orden decreciente de votos. * Una li\u0301nea con la tendencia al finalizar el partido: ` TOTAL` o ` PARCIAL` segu\u0301n corresponda ( en mayu\u0301sculas) .",
    "note": "",
    "topics": [
      "strings"
    ],
    "id": 16061
  },
  {
    "title": "La Calculadora H\u00edbrida",
    "url": "https://omegaup.com/arena/problem/La-Calculadora-Hibrida",
    "history": "Un maestro de escuela observo\u0301 que sus pequen\u0303os alumnos no lograban entender bien como sumar y multiplicar nu\u0301meros naturales, sin embargo, todos ellos teni\u0301an y manejaban muy bien juegos y aplicaciones en sus dispositivos mo\u0301viles. Se le ocurre entonces desarrollar una aplicacio\u0301n que consiste en una calculadora donde se mezclan nu\u0301meros y si\u0301mbolos, de esta manera espera que se entiendan mejor las operaciones matema\u0301ticas. El maestro solicita tu ayuda para el desarrollo de la Calculadora Hi\u0301brida basada en las siguientes condiciones: - La calculadora so\u0301lo puede sumar y multiplicar nu\u0301meros naturales. - La calculadora debe emitir el resultado en nu\u0301mero y en si\u0301mbolos. Paralos si\u0301mbolos se utilizara\u0301n los siguientes caracteres: S: para lasuma ( en mayu\u0301scula) y X: para la multiplicacio\u0301n ( en mayu\u0301scula) - Cuando alguno de los ca\u0301lculos de como resultado cero o el ingreso sea cero, debera\u0301 mostrar el mensaje: CERO ( en mayu\u0301scula)",
    "input": "- La primera li\u0301nea contendra\u0301 un nu\u0301mero entero a, 0 \u2264 a \u2264 10- La segunda li\u0301nea contendra\u0301 un nu\u0301mero entero b, 0 \u2264 b \u2264 10",
    "output": "- En la primer li\u0301nea se debera\u0301 presentar el resultado de la sumaexpresada en nu\u0301mero, seguido de si\u0301mbolos \u201cS\u201d segu\u0301n sean las entradas a y b, separadas por el signo \u201c + \u201d- En la segunda li\u0301nea se debera\u0301 presentar el resultado de lamultiplicacio\u0301n expresada en nu\u0301mero, seguido de si\u0301mbolos \u201cX\u201d segu\u0301n sean las entradas a y b, separadas por el o los signos \u201c + \u201dcorrespondientes.",
    "note": "",
    "topics": [
      "strings"
    ],
    "id": 16035
  },
  {
    "title": "occ22sfinns32",
    "url": "https://omegaup.com/arena/problem/occ22sfinns32",
    "history": "# Cadenas comadresDecimos que dos cadenas de minu\u0301sculas son comadres si tienen exactamente las mismas letras el mismo nu\u0301mero de veces. Por ejemplo abababab y babababa son cadenas comadresporque las dos tienen 4 a' s y 4 b' s. Haga un programa que reciba n ( 2\u2264 n \u2264 1000) y a continuacio\u0301n n cadenas y que determine cua\u0301ntos pares de esas cadenas son comadres.",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "strings"
    ],
    "id": 15986
  },
  {
    "title": "occ22sfinpn33",
    "url": "https://omegaup.com/arena/problem/occ22sfinpn33",
    "history": "# Operaciones en cadenaConsidere una cadena consistente solamente de 0 \u0301s y 1 \u0301s. Sobre esa cadena se ejecutan tres tipos de operaciones: + A n_ 1 n_ 2 Pone todos los caracteres en las posiciones entre n_ 1 y n_ 2 en 0 \u0301s. + B n_ 1 n_ 2 Pone todos los caracteres en las posiciones entre n_ 1 y n_ 2 en 1 \u0301s. + C n_ 1 n_ 2 Convierte a todos los 0 \u0301s en las posiciones entre n_ 1 y n_ 2 en 1 \u0301s y a todos los 1 \u0301s en las posiciones entre n_ 1 y n_ 2 en 0 \u0301s. En los tres casos la operacio\u0301n se hace en los caracteres en la posiciones p con n_ 1 \u2264 p \u2264 n_ 2. Su programa recibira\u0301 primero como entrada una cadena de entre dos y mil caracteres todos o 0 o 1. A continuacio\u0301n recibira\u0301 n ( 1 \u2264 n \u2264 100) . Finalmente n li\u0301neas cada una con una operacio\u0301n como las descritas anteriormente. Se garantiza que para todas las operaciones 1\u2264 n_ 1\u2264 n_ 2\u2264longitud de la cadena de entrada. La salida sera\u0301 la cadena final. Tenga en cuenta que se considera que el primer caracterde la cadena esta\u0301 en la posicio\u0301n 1.",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "strings"
    ],
    "id": 15976
  },
  {
    "title": "occ22sfipn25",
    "url": "https://omegaup.com/arena/problem/occ22sfipn25",
    "history": "# Concatenar dos cadenasDada dos cadenas de a lo ma\u0301s 1000 minu\u0301sculas cada una, concatenando las letras de la primera con las de la segunda. Si no son de la misma longitud al terminarselas letras de la ma\u0301s corta se deben poner las letras restantes de la ma\u0301s larga. # Ejemplos| | inputaaaabbbb| | outputabababab| | inputaaaaaaabbbb| | outputababababaaa| | end",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "strings"
    ],
    "id": 15972
  },
  {
    "title": "Caracteres distintos con modificaciones",
    "url": "https://omegaup.com/arena/problem/Caracteres-distintos-con-modific",
    "history": "Dada una cadena S de caracteres alfanume\u0301ricos ( letras mayu\u0301sculas, letras minu\u0301sculas y di\u0301gitos) , escribe un programa que procese una secuencia de N comandos de los siguientes tipos: - ` C` i c: Reemplaza el i- e\u0301simo cara\u0301cter de S con el caracter c. - ` Q` i f: Cuenta cua\u0301ntos caracteres distintos existen en S de las posiciones i a f, sin incluir esta u\u0301ltima.",
    "input": "La cadena S seguida del entero N y de la secuencia de N comandos. Puedes suponer que tanto N como el taman\u0303o T de S esta\u0301n entre 1 y 10^ 6, que todos los caracteres involucrados son alfanume\u0301ricos y que 0 \u2264 i \u2264 f \u2264 T.",
    "output": "Para cada comando de tipo ` Q` , un entero con la respuesta respectiva.",
    "note": "",
    "topics": [
      "strings",
      "data structures"
    ],
    "id": 15966
  },
  {
    "title": "Mimidor dormil\u00f3n programador",
    "url": "https://omegaup.com/arena/problem/Mimidor-dormilon-programador",
    "history": "La UAM finalmente regreso\u0301 a clases presenciales, pero a Daniel le gustaba mucho dormir durante sus clases en li\u0301nea y no quiere regresar a tomar clases presenciales. Para seguir durmiendo en su casa, Daniel decidio\u0301 que enviara\u0301 un robot ( al cual llamo\u0301 * Danieltron* ) para que tome las clases presenciales por e\u0301l. Sin embargo, Daniel cree que * Danieltron* debe poder hablar para que asi\u0301 su profesor no note que en realidad no esta\u0301 ahi\u0301. La inteligencia artificial que Daniel ha decidido programar es sencilla y depende de lo que diga su profesor: - Si la frase del profesor tiene diez o ma\u0301s palabras, * Danieltron* debe decir \" ` Impresionante, profe. ` \" . - Si la frase del profesor tiene menos de diez palabras y tiene ma\u0301s vocales que consonantes, * Danieltron* debe decir \" ` Nunca se me hubiera ocurrido eso, profe. ` \" . - Si la frase del profesor tiene menos de diez palabras y no tiene ma\u0301s vocales que consonantes, * Danieltron* debe decir \" ` Usted es el mejor, profe. ` \" . Como Daniel quiere seguir durmiendo, te ha pedido que lo ayudes a programar a * Danieltron* . ! [ danieltron] [ 1]",
    "input": "Una li\u0301nea de a lo mucho 120 caracteres que denota la frase que dijo el profesor de Daniel. Puedes suponer que la frase consiste u\u0301nicamente de letras minu\u0301scula y espacios, que no comienza ni termina con espacios y que no hay espacios consecutivos.",
    "output": "Una cadena que sea la frase que * Danieltron* debe decir.",
    "note": "",
    "topics": [
      "strings"
    ],
    "id": 15958
  },
  {
    "title": "Lychrel y las capicuas",
    "url": "https://omegaup.com/arena/problem/Lychrel-y-las-capicuas",
    "history": "Seguramente has escuchado el te\u0301rmino \" capicu\u0301a\" , que hace referencia a los nu\u0301meros palindro\u0301micos. . . Esos nu\u0301meros especiales que se leen igual al derecho y al reve\u0301s. Existe una teori\u0301a que dice que si tenemos un nu\u0301mero N, podri\u0301amos obtener su capicu\u0301a sumando de forma iterativa el valor de N con su reverso, hasta que el resultado sea un nu\u0301mero palindro\u0301mico. Por ejemplo: - El capicu\u0301a de 25 es 77, porque 25 + 52 = 77, que es palindro\u0301mico. - El capicu\u0301a de 75 es 363, porque 75 + 57 = 132. Luego, 132 + 231 = 363, que es palindro\u0301mico. Observa que en el segundo ejemplo fueron necesarias dos iteraciones. Ahora bien, no todos los nu\u0301meros tienen un capicu\u0301a ( al menos no se ha logrado comprobar hasta la fecha) . Los nu\u0301meros de los que no se conoce su capicu\u0301a son conocidos como nu\u0301meros de Lychrel y , para este problema, consideraremos que N es un nu\u0301mero de Lychrel si no logramos obtener su capicu\u0301a despue\u0301s de 10 iteraciones.",
    "input": "Un nu\u0301mero N.",
    "output": "- El capicu\u0301a de N, si existe. - La frase Numero de Lychrel si no obtenemos el capicu\u0301a despue\u0301s de 10 iteraciones.",
    "note": "",
    "topics": [
      "strings",
      "dfs and similar",
      "dp"
    ],
    "id": 15939
  },
  {
    "title": "Cifrado circular inverso con anclaje",
    "url": "https://omegaup.com/arena/problem/Cifrado-circular-inverso-con-anc",
    "history": "Marti\u0301n y Cuco de la clase de programacio\u0301n ba\u0301sica idearon un me\u0301todo para enviarse mensajes cifrados. A su me\u0301todo lo bautizaron como \" cifrado circular inverso con anclaje\" . Dados un mensaje sin cifrar S y un valor posicional de anclaje A, se procede a realizar lo siguiente: 1. El caracter ubicado en la posicio\u0301n de anclaje se convierte en el primer caracter de la cadena. 2. Los caracteres ubicados antes de la posicio\u0301n de anclaje, se colocan al final de la cadena. 3. Se invierte la cadena resultante. La idea les parece genial, pero no saben co\u0301mo programarlo y necesitan de tu ayuda para convertir su idea en una realidad.",
    "input": "* En le primer li\u0301nea recibira\u0301s una cadena de texto S. * En la segunda li\u0301nea recibira\u0301s la posicio\u0301n de anclaje A.",
    "output": "El mensaje cifrado.",
    "note": "",
    "topics": [
      "implementation",
      "strings",
      "data structures"
    ],
    "id": 15922
  },
  {
    "title": "El lenguaje de la X",
    "url": "https://omegaup.com/arena/problem/El-lenguaje-de-la-X",
    "history": "El lenguaje de la X consiste en cambiar cada vocal de una palabra por la bisi\u0301laba formada por dicha vocal, la letra x y nuevamente la misma vocal. Por ejemplo: CASA se traduciri\u0301a como CAXASAXA. COCHE se traduciri\u0301a como COXOCHEXE. Conociendo esto, debera\u0301s programar un traductor de lenguaje de la X a espan\u0303ol.",
    "input": "Un texto en mayu\u0301sculas de una o ma\u0301s li\u0301neas escrito en lenguaje de la X.",
    "output": "El mismo texto en lenguaje espan\u0303ol.",
    "note": "",
    "topics": [
      "strings"
    ],
    "id": 15921
  },
  {
    "title": "Un chisTEC",
    "url": "https://omegaup.com/arena/problem/Un-chisTEC",
    "history": "En su u\u0301ltima visita al Tec de Monterrey, Demetrio se dio cuenta de algo muy curioso: en el laboratorio al que fue habi\u0301a un letrero con la palabra ta\u0301paTEC escrita, pero eso no fue todo, pues una vez que vio esta primera palabra chistosa no pudo dejar de ver otras similares por todo el campus, como: biblioTECa, arquiTECtura, ludoTECa y deTECtor. Lo que no sabi\u0301a Demetrio es que este es un feno\u0301meno lingu\u0308i\u0301stico ampliamente estudiado, conocido como chisTEC. Segu\u0301n las voces expertas de los acade\u0301micos del Tec, hay dos formas de hacer un chisTEC: 1. La primera consiste en tomar una palabra en minu\u0301sculas que contenga una sola vez la subcadena ` tec` y cambiar esta a mayu\u0301sculas, pero esto solo puede ser hecho si la subcadena ` tec` se encuentra al final de la palabra o si es seguida por una consonante distinta de ` h` o por las vocales ` o` , ` a` o ` u` . Esto pues, de lo contrario, la ` c` en ` tec` representari\u0301a un fonema fricativo interdental sordo ( sonido de s) o un fonema consonante africado postalveolar sordo ( sonido de ch) , como ocurre en las palabras acontece, homotecia y techo. ( se consideran como vocales las letras ` a` , ` e` , ` i` , ` o` y ` u` ) . E. g. ludoteca se convierte en ludoTECa. 2. La segunda consiste en tomar una palabra que no haya podido ser convertida en un chisTEC con la forma 1, pero que termine con el sufijo ` te` , agregarle una ` c` al final y pasar a mayu\u0301sculas su nuevo sufijo ` tec` . E. g. chiste se convierte en chisTEC. A Demetrio le parecieron muy confusas estas dos reglas por lo que te pide a ti que le ayudes a crear un programa que determine si una palabra S puede ser convertida en un chisTEC y de ser asi\u0301, que la convierta para e\u0301l. # ProblemaEscribe un programa que, dada una palabra S imprima su correspondiente chisTEC o imprima la oracio\u0301n ` No hay chistes para Demetrio > : ( ` en caso de que S no pueda ser convertida en un chisTEC.",
    "input": "- En la primera li\u0301nea una cadena S ( formada exclusivamente por letras minu\u0301sculas de la ` a` a la ` z` sin acentos) . La palabra que se busca convertir en un chisTEC.",
    "output": "- En la primera li\u0301nea una cadena T. El chisTEC correspondiente a S o la oracio\u0301n ` No hay chistes para Demetrio > : ( ` en caso de que S no pueda ser convertida en un chisTEC.",
    "note": "",
    "topics": [
      "strings",
      "implementation"
    ],
    "id": 15853
  },
  {
    "title": "occ22clasns13",
    "url": "https://omegaup.com/arena/problem/occ22clasns13",
    "history": "# \u00bfCua\u0301ntas veces aparece cada vocal? Dada una cadena formada por vocales en minu\u0301sculas, contar cua\u0301ntas veces aparece cada vocal. La salida debe ser cinco nu\u0301meros correspondientes alnu\u0301mero de veces en que aparece a, e, i , o y, u, respectivamente.",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "strings"
    ],
    "id": 15845
  },
  {
    "title": "occ22claspn22",
    "url": "https://omegaup.com/arena/problem/occ22clapn22",
    "history": "# Quitar repetidas contiguasHaga un programa que reciba una cadena de minu\u0301sculas y que reemplace las apariciones de una letra repetida de manera contigua por una sola. | | inputaaaaaabraccccadabbbra| | outputabracadabra| | end",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "strings"
    ],
    "id": 15841
  },
  {
    "title": "occ22claspn21",
    "url": "https://omegaup.com/arena/problem/occ22claspn21",
    "history": "# Armar CadenaHaga un programa que reciba como entrada un entero positivo n ( 1 \u2264 n \u2264 10) y a continuacio\u0301n n pares de un nu\u0301mero n_ i seguido por una letra a_ i. El programadebe dar como salida la cadena formada por repetir cada a_ i n_ i veces.",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "strings"
    ],
    "id": 15840
  },
  {
    "title": "occ22claspn12",
    "url": "https://omegaup.com/arena/problem/occ22claspn12",
    "history": "# \u00bfCua\u0301ntas veces aparece? Dadas una letra y una palabra en minu\u0301sculas, encontrar cua\u0301ntas veces aparece la letra en la palabra.",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "strings"
    ],
    "id": 15836
  },
  {
    "title": "Primeros caracteres",
    "url": "https://omegaup.com/arena/problem/primeros-caracteres",
    "history": "En este problema queremos generar una variante de la secuencia [ \" mira y di\" de Conway] ( https: / / elpais. com/ ciencia/ 2020- 05- 01/ mira- y- di. html) . En esta variante, consideramos solo una cadena larga de di\u0301gitos que empieza con el 1: * 1. . . * 111. . . * 11121. . . * 111211221. . . Tu tarea es encontrar los primeros n caracteres de esta secuencia.",
    "input": "Un renglo\u0301n con un entero n indicando la longitud de la cadena que se debe imprimir.",
    "output": "Una cadena conteniendo la secuencia ma\u0301s corta con al menos n caracteres.",
    "note": "",
    "topics": [
      "strings"
    ],
    "id": 15776
  },
  {
    "title": "camelCase-transformation",
    "url": "https://omegaup.com/arena/problem/camelCase-transformation",
    "history": "Se recibe una cadena de caracteres aleatorios en donde la primera letra es MAYUSCULA, la segunda MINUSCULA, tercera MAYUSCULA nuevamente asi repitiendo el patron alternando de mayusculas a minusculas sucesivamente hasta terminar la cadena de caracteres. NOTA: puede haber numeros y caracteres especiales` YoU kNoW wAhT i MeAn\u00a1",
    "input": "Un string el cual necesita ser convertido segun la descripcion.",
    "output": "Una cadena string con la conversion correcta. # RestriccionesLa entrada es por lo menos 2 caracteres de longitud. # Ejemplos| | inputSome line with text| | outputSoMe LiNe WiTh TeXt| | input123r34ASACAssss| | output123R34aSaCaSsSs| | endCreated By [ ITM Developers] [ 1] [ 1] : https: / / bayronvazquez. github. io/ BayronVazquez/",
    "note": "",
    "topics": [
      "strings"
    ],
    "id": 15751
  },
  {
    "title": "En igualdad de condiciones",
    "url": "https://omegaup.com/arena/problem/En-igualdad-de-condiciones",
    "history": "Dado un nu\u0301mero entero N, genera una cadena binaria de longitud N tal que: * El conteo de las subsecuencias 01 en la cadena es igual al conteo de las subsecuencias 10* La cadena tiene * * al menos* * una aparicio\u0301n de 0 y 1. Si existen varias cadenas de este tipo, imprima cualquiera. Adema\u0301s, se garantiza que correspondiente a la entrada dada, siempre existe una respuesta.",
    "input": "Cada caso de prueba contiene una sola li\u0301nea de entrada, un nu\u0301mero entero N, la longitud de la cadena binaria",
    "output": "Para cada caso de prueba, genere cualquier cadena binaria de longitud N que satisfaga las condiciones dadas.",
    "note": "",
    "topics": [
      "strings"
    ],
    "id": 15736
  },
  {
    "title": "Trabalenguas de consonantes",
    "url": "https://omegaup.com/arena/problem/Trabalenguas-de-consonantes",
    "history": "Las palabras que contienen muchas consonantes consecutivas, como \" imperscrutable\" , generalmente se consideran difi\u0301ciles de pronunciar. Decimos que una palabra es difi\u0301cil de pronunciar si contiene 4 o ma\u0301s consonantes seguidas; de lo contrario, es fa\u0301cil de pronunciar. Por ejemplo, \" hola\" y \" perro\" son fa\u0301ciles de pronunciar, pero \" angstrom\" es difi\u0301cil de pronunciar. Se proporciona una cadena C que consiste de N caracteres. Determina si es fa\u0301cil de pronunciar con la regla antes descrita.",
    "input": "El formato de la entrada es el siguiente. Para cada caso de prueba la primera li\u0301nea denota N, la longitud de la cadena C. La segunda li\u0301nea contiene la cadena C.",
    "output": "Para cada caso de prueba, imprime \u201cSI\u201d si es fa\u0301cil de pronunciar y \u201cNO\u201d en caso contrario.",
    "note": "",
    "topics": [
      "strings"
    ],
    "id": 15728
  },
  {
    "title": "Reconstruyendo el texto al rev\u00e9s",
    "url": "https://omegaup.com/arena/problem/Reconstruyendo-el-texto-al-reves",
    "history": "Dadas N filas de texto, donde cada fila contiene varias palabras separadas por espacios, escribe un programa que reescriba las filas invirtiendo el orden en el que aparecen las palabras de cada fila.",
    "input": "Un entero N seguidos de las N filas de texto. Cada fila puede contener no ma\u0301s de 50 palabras y cada palabra puede contener no ma\u0301s de 50 caracteres alfabe\u0301ticos. Las li\u0301neas pueden contener espacios en exceso antes o despue\u0301s de las palabras.",
    "output": "La reconstruccio\u0301n de las N filas segu\u0301n lo pedido. No es necesario imprimir los espacios en exceso, pero si\u0301 es necesario separar dos palabras por al menos un espacio.",
    "note": "",
    "topics": [
      "strings"
    ],
    "id": 15648
  },
  {
    "title": "Buscando Car\u00e1cter",
    "url": "https://omegaup.com/arena/problem/Buscando-Caracter",
    "history": "Dada una cadena de caracteres * * \" String\" * * , mostrar en que posicio\u0301n se encuentra en cara\u0301cter * * \" # \" * * .",
    "input": "Una cadena de caracteres * * \" String. \" * *",
    "output": "La Posicio\u0301n en la que se encuentra el cara\u0301cter * * \" # \" * *",
    "note": "",
    "topics": [
      "implementation",
      "strings"
    ],
    "id": 15615
  },
  {
    "title": "Reverso de una string ",
    "url": "https://omegaup.com/arena/problem/reverso-de-una-string-",
    "history": "Dada una String, Escri\u0301bela en forma inversa.",
    "input": "Una string.",
    "output": "String inversa.",
    "note": "",
    "topics": [
      "strings",
      "implementation"
    ],
    "id": 15604
  },
  {
    "title": "Consonantes y Vocales Java",
    "url": "https://omegaup.com/arena/problem/Consonantes-y-Vocales-Java",
    "history": "Dado un string de letras mayusculas, decir cuantas vocales y consonantes se tienen: Recordar utilizar las funciones: * length( ) * charAt( int)",
    "input": "La String| | inputSUPERMAN| | output53| | end",
    "output": "Total de Consonantes y total de Vocales",
    "note": "",
    "topics": [
      "strings"
    ],
    "id": 15584
  },
  {
    "title": "Password Java",
    "url": "https://omegaup.com/arena/problem/Password-Java",
    "history": "Dado un password decir si es SEGURO o INSEGURO, dependiendo si: 1. Tiene al menos una vocal. 2. No tener 2 caracteres iguales consecutivos. 3. Tener una longitud mayor o igual a 124. Tener al menos un nu\u0301mero",
    "input": "La contrasen\u0303a| | inputMwpgwg9ef0ewh50e0| | outputSeguro| | end| | inputK9f8kpp44e150722| | outputInseguro| | end",
    "output": "Seguro o Inseguro",
    "note": "",
    "topics": [
      "strings"
    ],
    "id": 15583
  },
  {
    "title": "Escribir al rev\u00e9s Java",
    "url": "https://omegaup.com/arena/problem/Escribir-al-reves-Java",
    "history": "Dado un string, escribirlo en forma inversa. Recordar utilizar las funciones: length( ) charAt( int)",
    "input": "Un String| | inputHola Mundo| | outputodnuM aloH| | end",
    "output": "El String escrita al reve\u0301s.",
    "note": "",
    "topics": [
      "strings"
    ],
    "id": 15582
  },
  {
    "title": "Fracciones Mixtas Java",
    "url": "https://omegaup.com/arena/problem/Fracciones-Mixtas-Java",
    "history": "Dado una fraccio\u0301n regular de la froma n/ m mostrarlade la forma a+ b/ m ( Fraccio\u0301n Mixta) Recordar que: a = n / m; b = n",
    "input": "Los valores n y m| | input437| | output6+ 1/ 7| | end",
    "output": "La forma mixta a+ b/ m",
    "note": "",
    "topics": [
      "strings"
    ],
    "id": 15581
  },
  {
    "title": "Panel de Pon",
    "url": "https://omegaup.com/arena/problem/Panel-de-Pon",
    "history": "Panel de Pon ( \u30cf\u309a\u30cd\u30eb\u3066\u3099\u30db\u309a\u30f3 * Paneru de Pon* , conocido como * Tetris Attack* en occidente) es un juego basado en fichas del tipo \" 3 en li\u0301nea\" . El campo de juego esta\u0301 formado por una rejilla de 12 \u00d7 6 celdas donde algunas de ellas tienen fichas de distintos tipos y el jugador controla un cursor de 1 \u00d7 2 que permite intercambiar el contenido de dos celdas adyacentes. Cuando el jugador forma un segmento horizontal o vertical de tres o ma\u0301s fichas del mismo tipo, e\u0301stas desaparecen y dejan un espacio libre ( una ficha puede formar parte de un segmento horizontal y de uno vertical al mismo tiempo, y e\u0301stos desapareceri\u0301an simulta\u0301neamente) . Las fichas caen por el efecto de la gravedad cuando hay espacios libres debajo de ellas ( mientras una ficha cae, e\u0301sta no puede formar un segmento) . Es posible que un intercambio realizado por el jugador provoque un efecto en cadena que elimine fichas originalmente no afectadas por el intercambio. ! [ ejemplo] [ 1] ! [ ejemplo] [ 2] El objetivo del juego es eliminar todas fichas del campo de juego. En este problema basta realizar un u\u0301nico intecambio para lograr el objetivo. Escribe un programa que calcule la coordenada en la que debes colocar la parte izquierda del cursor para realizar tal intercambio.",
    "input": "Una matriz de 12 \u00d7 6 caracteres que denotan el campo de juego. Los espacios libres se indican con puntos y los distintos tipos de fichas se indican con di\u0301gitos del 1 al 6. Puedes suponer que la entrada no contiene fichas que deban caer antes de que el jugador realice su intercambio.",
    "output": "Dos enteros que sean las coordenadas de fila y columna en donde debes colocar la parte izquierda del cursor. Las coordenadas sobre el campo de juego coinciden con las de una matriz ti\u0301pica: la fila superior es la fila 0 y la columna de la izquierda es la columna 0. En caso de existir ma\u0301s de una solucio\u0301n, debes imprimir la de menor fila y, en caso de empate en fila, la de menor columna.",
    "note": "",
    "topics": [
      "strings",
      "matrices",
      "math"
    ],
    "id": 15541
  },
  {
    "title": "Checando la tarea",
    "url": "https://omegaup.com/arena/problem/Checando-la-tarea",
    "history": "A\u0301ngel es un profesional para los juegos tipo shooter de primera persona, a tal grado que esta\u0301 a punto de disputar un torneo internacional importante. A\u0301ngel estaba listo para jugar contra los asia\u0301ticos ( que son unos semidioses jugando) , pero sus padres lo obligaron a ayudarle a su hermano con su tarea. < br> < br/ > El hermano pequen\u0303o de A\u0301ngel esta\u0301 viendo el tema de sumas y restas, esto no es problema para A\u0301ngel, sin embargo, la cantidad de operaciones son muchas y es muy tedioso revisar una por una, pero a A\u0301ngel se le ocurrio\u0301 la idea de implementar un programa que sea capaz de revisar la tarea de su hermano. Ayu\u0301dalo para que pueda ganarle a los asia\u0301ticos.",
    "input": "Recibira\u0301s un nu\u0301mero entero n, enseguida, debera\u0301s leer n li\u0301neas, en la que cada una contiene una cadena, sin espacios y con el siguiente formato: - * * nu\u0301mero* * + * * nu\u0301mero* * = * * nu\u0301mero* * - * * nu\u0301mero* * - * * nu\u0301mero* * = * * nu\u0301mero* * < br> < br/ > Se garantiza que solo recibes sumas y restas. No hay espacios y solo recibes nu\u0301meros enteros positivos. Adema\u0301s, no habra\u0301 signo al principio de la operacio\u0301n. Los nu\u0301meros solo son menores o iguales a 2000.",
    "output": "Para cada caso, imprimir el mensaje * * Correcto* * si la operacio\u0301n esta\u0301 bien, o en caso contrario imprimir * * Incorrecto* * .",
    "note": "",
    "topics": [
      "math",
      "implementation",
      "strings"
    ],
    "id": 15514
  },
  {
    "title": "Detectando lenguajes",
    "url": "https://omegaup.com/arena/problem/Detectando-lenguajes",
    "history": "Xavier ya no quiere asistir a su clase de idiomas, por lo que el centro de idiomas y lenguas extranjeras le han puesto un reto. < br> < br/ > Los profesores le han encomendado una tarea especial, implementar un programa que sea capaz de reconocer un saludo e imprimir a que\u0301 idioma pertenece. El saludo solamente puede estar en castellano, ingle\u0301s, france\u0301s, italiano, alema\u0301n, japone\u0301s o ruso. En caso de que no coincida con ninguno de los idiomas mencionados, debe expresar que probablemente el saludo pertenezca a otro idioma. < br> < br/ > Si Xavier completa la tarea satisfactoriamente, ya no debera\u0301 asistir a clases de idiomas, recibira\u0301 un reconocimiento, un funko de su preferencia y un refresco del rojo. En caso de fallar, debera\u0301 asistir a todas las clases durante el resto de su vida. Ayuda a Xavier para que complete su tarea.",
    "input": "Se recibe un nu\u0301mero n. Las siguientes n li\u0301neas contienen un saludo. Esta\u0301 garantizado que el saludo solo esta\u0301 compuesto por letras mayu\u0301sculas, no contiene espacios y su longitud puede ser como ma\u0301ximo 200 caracteres. No hay acentos ni en la entrada ni en la salida.",
    "output": "Acorde a la descripcio\u0301n: - Si se recibe \" HOLA\" , la salida debera\u0301 ser * * Castellano* * . - Si se recibe \" HELLO\" , la salida debera\u0301 ser * * Ingles* * . - Si se recibe \" BONJOUR\" , la salida debera\u0301 ser * * Frances* * . - Si se recibe \" CIAO\" , la salida debera\u0301 ser * * Italiano* * . - Si se recibe \" HALLO\" , la salida debera\u0301 ser * * Aleman* * . - Si se recibe \" KONNICHIWA\" , la salida debera\u0301 ser * * Japones* * . - Si se recibe \" ZDRAVSTVUJTE\" , la salida debera\u0301 ser * * Ruso* * . - Si se recibe otra saludo diferente, la salida debera\u0301 ser * * Otro idioma ( quizas. . . ) * *",
    "note": "",
    "topics": [
      "implementation",
      "strings"
    ],
    "id": 15511
  },
  {
    "title": "ordena pablabras",
    "url": "https://omegaup.com/arena/problem/ordena-pablabras",
    "history": "Elabora un programa que lea un nu\u0301mero entero n ( 1< = n < = 100) . Despue\u0301s leera\u0301 n li\u0301neas con un entero k ( 1< = k < = 99999) y una palabra de no ma\u0301s de 24 caracteres. Imprime como resultado un texto con las palabras ordenadas de acuerdo al nu\u0301mero k. Y los nu\u0301meros k ya ordenados y separados por una coma( , ) y un espacio.",
    "input": "Una li\u0301nea con un entero n ( int) . n li\u0301neas con un entero k ( int) y una palabra.",
    "output": "una li\u0301nea con las palabras ordenadas de acuerdo al nu\u0301mero k. una segunda li\u0301nea con los nu\u0301meros k ya ordenados y separados por una coma( , ) y un espacio. | | input124 nombre2 Mi8 Maximo6 es11 Meridio10 Decimo21 de13 Comandante27 Ejercitos25 los30 Norte29 del| | outputMi nombre es Maximo Decimo Meridio Comandante de los Ejercitos del Norte2, 4, 6, 8, 10, 11, 13, 21, 25, 27, 29, 30, | | input1251 Aurelio42 las43 Legiones40 General47 del44 Fe\u0301nix46 servidor48 verdadero45 fiel41 de49 Emperador50 Marco| | outputGeneral de las Legiones Fe\u0301nix fiel servidor del verdadero Emperador Marco Aurelio40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, | | end",
    "note": "",
    "topics": [
      "implementation",
      "strings"
    ],
    "id": 15484
  },
  {
    "title": "C\u00f3digo de Vigen\u00e8re",
    "url": "https://omegaup.com/arena/problem/Codigo-de-Vigenere",
    "history": "En el co\u0301digo de Vigene\u0300re, consideraremos un alfabeto de 27 caracteres que son @ , A, B, . . . , Z y consideraremos que a e\u0301stos se les asocian los valores 0, 1, 2, . . . , 26, respectivamente. Dado un mensaje, podemos escoger una palabra llamada llave y los caracteres de la misma se le suman ( mo\u0301dulo 27) a cada uno de los caracteres del mensaje: se suma el primer cara\u0301cter de la llave con el primero del mensaje, el segundo cara\u0301cter de la llave con el segundo del mensaje, y asi\u0301 sucesivamente hasta que se terminan los caracteres de la llave y se vuelve a comenzar con el primero. Por ejemplo, si escogemos EVA como llave y el mensaje original es TAREA@ DE@ PROGRAMACION, entonces el mensaje codificado sera\u0301 YWSJWAI@ AUMPLMBRWDNJO ya que E+ T= Y, V + A = W, A + R = S, E + E = J, etce\u0301tera. Escribe un programa que, dada una llave y un mensaje, codifique el mensaje con la llave.",
    "input": "Un entero N que representa el nu\u0301mero de casos a probar seguido de N parejas de cadenas que representan la llave y el mensaje a codificar con dicha llave.",
    "output": "Las N cadenas que fueron codificadas.",
    "note": "",
    "topics": [
      "strings"
    ],
    "id": 15396
  },
  {
    "title": "Operaciones Binarias",
    "url": "https://omegaup.com/arena/problem/Operaciones-Binarias",
    "history": "Tu programa debe realizar la operacio\u0301n binaria XOR en dos nu\u0301meros binarios dados a trave\u0301s del standard input y debera\u0301s de imprimir el resultado a trave\u0301s del standard output. A continuacio\u0301n, se muestra la tabla de la verdad: | | input0 0| | output0| | input0 1| | output1| | input1 0| | output1| | input1 1| | output0| | endCabe aclarar que el nu\u0301mero de di\u0301gitos binarios debera\u0301 permanecer siendo el mismo",
    "input": "2 nu\u0301meros binarios ( n1, n2) separados por espacios.",
    "output": "El resultado de la operacio\u0301n XOR entre n1 y n2. # Ejemplos| | input001 011| | output010| | input0 1| | output1| | input00000000000111 10101010111100| | output10101010111011| | end# LimtesLos nu\u0301meros binarios tendran como ma\u0301ximo 32 di\u0301gitos. Created By [ ITM Developers] [ 1] [ 1] : https: / / bayronvazquez. github. io/ BayronVazquez/",
    "note": "",
    "topics": [
      "strings"
    ],
    "id": 15394
  },
  {
    "title": "Neofolia Vs. Oldiense",
    "url": "https://omegaup.com/arena/problem/Neofolia-Vs-Oldiense-ASINUS",
    "history": "Casimireh el su\u0301per agente de investigaciones de la Agencia Internacional de Situaciones Extran\u0303as ( AISE) , se encuentra en una investigacio\u0301n sobre espi\u0301as del pai\u0301s Neofolia en territorio Oldiense, estos pai\u0301ses han estado en guerra por 30 an\u0303os, por lo que para el resto del planeta es importante que finalicen su conflicto, ya que las consecuencias han terminado con la economi\u0301a de sus pai\u0301ses vecinos. Uno de los soldados del ejercito Oldiense ha interceptado un mensaje enviado por los Neofolios que podri\u0301a detener el conflicto, sin embargo, nadie lo ha logrado descifrar. Se corrio\u0301 el rumor de las fuertes habilidades como programador del asistente del detective, por lo que te ha trai\u0301do consigo para que le ayudes a desarrollar un programa que sea capaz de descifrar el mensaje. Para ello, por un viaje que realizo\u0301 a ese pai\u0301s el verano pasado, Casimireh conoce el idioma de los Neofolios, por lo que unira\u0301n sus habilidades para tratar de descifrar el mensaje al lenguaje Oldiense. La traduccio\u0301n de los lenguajes es como se muestra en los apuntes del detective. ! [ enter image description here] [ 1] # ProblemaConstruye un Software capaz de realizar la funcio\u0301n de traduccio\u0301n del lenguaje Neofolio a Oldiense, en el cual se introduzca palabra a palabra para que puedan descifrar el mensaje y la guerra pueda terminar.",
    "input": "* * Palabra* * , Una cadena con la palabra Neofoliense que se va a traducir.",
    "output": "La palabra en el lenguaje Oldiense para ir descifrando el mensaje.",
    "note": "",
    "topics": [
      "strings",
      "implementation"
    ],
    "id": 15393
  },
  {
    "title": "Contando Letras en una Oracion",
    "url": "https://omegaup.com/arena/problem/Contando-Letras-en-una-Oracion",
    "history": "Debe contar todas las letras de la oracio\u0301n que esta\u0301n en ASCII. Se ignorara\u0301n otros caracteres que no sean alfabe\u0301ticos.",
    "input": "Li\u0301nea 1: Una cadena con una oracio\u0301n.",
    "output": "El numero de caracteres ASCII countados en la cadena. # Ejemplos| | inputaC| | output2| | inputB d| | output2| | end# LimtesLa cadena puede tener de 1 a 100 caracteres. Created By [ ITM Developers] [ 1] [ 1] : https: / / bayronvazquez. github. io/ BayronVazquez/",
    "note": "",
    "topics": [
      "strings",
      "dfs and similar",
      "dp"
    ],
    "id": 15391
  },
  {
    "title": "El Templo Trunamali",
    "url": "https://omegaup.com/arena/problem/El-Templo-Trunamali-ASINUS",
    "history": "Casimireh el su\u0301per agente de investigaciones de la Agencia Internacional de Situaciones Extran\u0303as ( AISE) , se encuentra atrapado en una edificacio\u0301n Trunamali ( Una cultura antigua) , la cual le permitira\u0301 salir siempre y cuando logre abrir todas las puertas, en este punto, e\u0301l se encuentra en la u\u0301ltima puerta antes de ser libre, pero le esta\u0301 costando abrirla. La puerta tiene una chapa muy curiosa, la cual al parecer solo entiende el lenguaje Trunamali, sin embargo, nuestro detective lo desconoce, por lo que no sabe co\u0301mo comunicarse con ella. En su manual de lo \u201cparanormal y lo que necesita investigarse\u201d, ha encontrado un antiguo abecedario de este lenguaje, el cual es algo extran\u0303o, ya que tiene muy pocos caracteres, y varias de las letras de nuestro lenguaje son el mismo si\u0301mbolo en el de esa cultura. ! [ enter image description here] [ 1] # ProblemaComo su asistente, estas atrapado con e\u0301l, por lo que tendra\u0301n que unir habilidades para poder salir, para ello, puedes aportar a desarrollar un programa que permita traducir cualquier palabra que se le ocurra al detective al lenguaje Trunamali y probarla en la chapa para poder salir.",
    "input": "* * Palabra* * , Una cadena con la palabra que se le ocurrio\u0301 al detective y la cual vas a traducir.",
    "output": "La palabra en el lenguaje Trunamali para probar abrir la puerta.",
    "note": "",
    "topics": [
      "implementation",
      "strings"
    ],
    "id": 15389
  },
  {
    "title": "Simulaci\u00f3n de un Aut\u00f3mata Finito No Determinista",
    "url": "https://omegaup.com/arena/problem/Simulacion-de-AFN",
    "history": "Un auto\u0301mata finito no determinista ( AFN) es una 5- tupla ( Q, \u03a3, \u03b4, q_ 0, F) , donde: 1. Q es un conjunto finito llamado * * * estados* * * , 2. \u03a3 es un conjunto finito llamado * * * alfabeto* * * , 3. \u03b4: Q \u00d7\u03a3_ \u03b5\u2192P( Q) es la * * * funcio\u0301n de transicio\u0301n* * * , 4. q_ 0 \u2208 Q es el * * * estado inicial* * * , y5. F \u2286 Q es el * * * conjunto de estados de aceptacio\u0301n* * * . Para cualquier alfabeto \u03a3 se define\u03a3_ \u03b5= \u03a3\u222a\u03b5, donde \u03b5representa la cadena de longitud cero, tambie\u0301n denominada * * cadena vaci\u0301a* * . Para cualquier conjunto Q, se define P( Q) como la coleccio\u0301nde todos los subconjuntos de Q, mejor conocido como * * conjunto potencia* * de Q. Sea M= ( Q, \u03a3, \u03b4, q_ 0, F) un AFN y sea w unacadena de si\u0301mbolos del alfabeto \u03a3. Entonces, M * * * acepta* * * wsi se puede escribir w como w= y_ 1y_ 2\u22ef y_ n donde caday_ i \u2208\u03a3_ \u03b5y existe una secuencia de estados r_ 0, r_ 1, . . . , r_ n en Qcon tres condiciones: 1. r_ 0 = q_ 0, 2. r_ i+ 1\u2208\u03b4( r_ i, y_ i+ 1) , para i= 0, . . . , n- 1, y3. r_ n \u2208 F. La condicio\u0301n 1 establece que la ma\u0301quina comienza en el estado inicial. La condicio\u0301n 2 establece que el estado r_ i+ 1 es uno de los siguientesestados admisibles cuando M esta\u0301 en el estado r_ i ylee el si\u0301mbolo y_ i+ 1. La condicio\u0301n 3 establece quela ma\u0301quina acepta la cadena de entrada si termina en un estado de aceptacio\u0301n. Entonces, M * * * reconoce el lenguaje* * * A si A= w| M acepta w. Escribir un programa para determinar si un conjunto de cadenas W perteneceno no pertenecen al lenguaje A reconocido por un AFN M.",
    "input": "La primer li\u0301nea de entrada contiene seis enterosN, S, D, q_ 0, T y C, ( 1 \u2264 N, S, C \u2264 100, 0 \u2264 D \u2264 10^ 4, 1 \u2264 q_ 0 \u2264 N, 0 \u2264 T \u2264 N) , donde N= | Q| , S= | \u03a3| , D es el nu\u0301mero de transiciones en el auto\u0301mata, q_ 0 es el estado inicial, T= | F| , y C es la cantidadde cadenas a verificar si son aceptadas o nopor el auto\u0301mata M. Cada estado q \u2208 Q seidentifica de manera impli\u0301cita por un nu\u0301mero enterocon valor entre 1 y N. La segunda li\u0301nea contiene el alfabeto \u03a3, representado por una secuencia de S si\u0301mbolos s_ iseparados por espacios, tal que cada si\u0301mbolo s_ i puede ser una letra ( excepto ` E` ) , un di\u0301gitoo cualquier cara\u0301cter del co\u0301digo ASCII excepto por el espacio. * * La letra ` E` se considera un cara\u0301cter especial, y no puede usarsecomo parte del alfabeto* * , ya que sera\u0301 utilizado para representaraquellas transiciones etiquetadas con el si\u0301mbolo \u03b5. La tercer li\u0301nea contiene el conjunto de estados de aceptacio\u0301n F, representado por una secuencia de T enteros t_ i( 1 \u2264 t_ i \u2264 N) separados por espacios. Las siguientes D li\u0301neas especifican las transicionesdel auto\u0301mata, donde cada li\u0301nea define una transicio\u0301n\u03b4( I, X) = J_ 1, J_ 2, . . . J_ K. El primer elemento de la transicio\u0301n se especifica mediante un entero I, donde I representa un estado del auto\u0301mata. El segundo elemento es un cara\u0301cterX que representa un si\u0301mbolo de \u03a3_ \u03b5, el cara\u0301cter especial ` E` es equivalente al si\u0301mbolo \u03b5. El tercer elemento de la transicio\u0301n se representa por medio de un entero K, seguido de una secuencia de K enteros J_ 1, J_ 2, . . . , J_ Kseparados por espacios, el conjunto de los siguientes estados admisiblesa partir del estado I por medio del si\u0301mbolo X. Para * * el resto de transiciones nodefinidas se asume \u03b4( I, X) = \u2205* * . Finalmente, cada una de las siguientes C li\u0301neascontienen una cadena W, compuesta por si\u0301mbolos quepertenecen al alfabeto \u03a3. La longitud de lacadena W esta\u0301 entre 0 y 100 caracteres.",
    "output": "Para cada una de las C cadenas W se debera\u0301 imprimir el mensaje` ACEPTADA` si el auto\u0301mata M acepta la cadena W, o\u0301 ` RECHAZADA` en caso contrario.",
    "note": "",
    "topics": [
      "strings"
    ],
    "id": 15321
  },
  {
    "title": "Simulaci\u00f3n de un Aut\u00f3mata Finito Determinista",
    "url": "https://omegaup.com/arena/problem/Simulacion-de-AFD",
    "history": "Un auto\u0301mata finito determinista ( AFD) es una 5- tupla ( Q, \u03a3, \u03b4, q_ 0, F) , donde: 1. Q es un conjunto finito llamado * * * estados* * * , 2. \u03a3 es un conjunto finito llamado * * * alfabeto* * * , 3. \u03b4: Q \u00d7\u03a3\u2192 Q es la * * * funcio\u0301n de transicio\u0301n* * * , 4. q_ 0 \u2208 Q es el * * * estado inicial* * * , y5. F \u2286 Q es el * * * conjunto de estados de aceptacio\u0301n* * * . Sea M= ( Q, \u03a3, \u03b4, q_ 0, F) un AFD y sea w= w_ 1w_ 2\u22ef w_ n unacadena de si\u0301mbolos donde w_ i \u2208\u03a3. Entonces, M * * * acepta* * * wsi existe una secuencia de estados r_ 0, r_ 1, . . . , r_ n en Q con trescondiciones: 1. r_ 0 = q_ 0, 2. \u03b4( r_ i, w_ i+ 1) = r_ i+ 1, para i= 0, . . . , n- 1, y3. r_ n \u2208 F. La condicio\u0301n 1 establece que la ma\u0301quina comienza en el estado inicial. La condicio\u0301n 2 establece que la ma\u0301quina cambia desde un estado hacia otroestado de acuerdo a la funcio\u0301n de transicio\u0301n. La condicio\u0301n 3 establece quela ma\u0301quina acepta la cadena de entrada si termina en un estado de aceptacio\u0301n. Entonces, M * * * reconoce el lenguaje* * * A si A= w| M acepta w. Escribir un programa para determinar si un conjunto de cadenas W perteneceno no pertenecen al lenguaje A reconocido por un AFD M.",
    "input": "La primer li\u0301nea de entrada contiene seis enterosN, S, D, q_ 0, T y C, ( 1 \u2264 N, S, C \u2264 100, 1 \u2264 D \u2264 10^ 4, 1 \u2264 q_ 0 \u2264 N, 0 \u2264 T \u2264 N) , donde N= | Q| , S= | \u03a3| , D= N \u00d7 S es el nu\u0301mero de transiciones en el auto\u0301mata, q_ 0 es el estado inicial, T= | F| , y C es la cantidadde cadenas a verificar si son aceptadas o nopor el auto\u0301mata M. Cada estado q \u2208 Q seidentifica de manera impli\u0301cita por un nu\u0301mero enterocon valor entre 1 y N. La segunda li\u0301nea contiene el alfabeto \u03a3, representado por una secuencia de S si\u0301mbolos s_ iseparados por espacios, tal que cada si\u0301mbolo s_ i puede ser una letra, un di\u0301gitoo cualquier cara\u0301cter del co\u0301digo ASCII excepto por el espacio. La tercer li\u0301nea contiene el conjunto de estados de aceptacio\u0301n F, representado por una secuencia de T enteros t_ i( 1 \u2264 t_ i \u2264 N) separados por espacios. Las siguientes D li\u0301neas especifican las transicionesdel auto\u0301mata. Cada li\u0301nea define una transicio\u0301n \u03b4( I, X) = Jpor medio de un entero I, un cara\u0301cter Xy un entero J ( I, J \u2208 Q y X \u2208\u03a3) separados por espacios, representando la transicio\u0301ndesde el estado I hacia el estado J cuando el si\u0301mbolode la entrada sea X. Finalmente, cada una de las siguientes C li\u0301neascontienen una cadena W, compuesta por si\u0301mbolos quepertenecen al alfabeto \u03a3. La longitud de lacadena W esta\u0301 entre 0 y 100 caracteres.",
    "output": "Para cada una de las C cadenas W se debera\u0301 imprimir el mensaje` ACEPTADA` si el auto\u0301mata M acepta la cadena W, o\u0301 ` RECHAZADA` en caso contrario.",
    "note": "",
    "topics": [
      "strings"
    ],
    "id": 15320
  },
  {
    "title": "Estudio de primates",
    "url": "https://omegaup.com/arena/problem/Estudio-de-primates",
    "history": "La famosa primato\u0301loga y antropo\u0301loga < a href= \" https: / / en. wikipedia. org/ wiki/ Jane_ Goodall\" > Jane Goodall < / a> se dirige a Tanzania para investigar el comportamiento de mu\u0301ltiples familias de chimpance\u0301s salvajes. En preparacio\u0301n para su llegada, sus colaboradores elaboraron un mapa que indica la ubicacio\u0301n de las familias de chimpance\u0301s que la Dra. Goodall necesita investigar durante su expedicio\u0301n. El mapa consiste en una reti\u0301cula rectangular de N filas por M columnas donde cada celda esta\u0301 marcada con una letra \u2018C\u2019 si en ese lugar habita una familia de chimpance\u0301s y con un punto ( \u2018. \u2019) si en ese lugar no habita ninguna familia de chimpance\u0301s. Por ejemplo, el siguiente mapa de 5 filas por 10 columnas indica la ubicacio\u0301n de 4 familias de chimpance\u0301s: . C. . . . . . . . . . . . . . . C. . . . . C. . . . . . . . . . . . . . . . . . . . . C. . . . Ayuda a la Dra. Goodall a contar el nu\u0301mero de familias de chimpance\u0301s que estudiara\u0301 durante su expedicio\u0301n.",
    "input": "En la primera li\u0301nea el nu\u0301mero N de filas y M de columnas del mapa. En cada una de las siguientes N li\u0301neas, M caracteres indicando si en esa posicio\u0301n habita una familia de chimpance\u0301s o no.",
    "output": "El nu\u0301mero de familias de chimpance\u0301s que estudiara\u0301 la Dra. Goodall durante su expedicio\u0301n.",
    "note": "",
    "topics": [
      "strings"
    ],
    "id": 14806
  },
  {
    "title": "generando cadenas de ADN",
    "url": "https://omegaup.com/arena/problem/generando-cadenas-de-AND",
    "history": "Tu maestra de biologi\u0301a te dejo hacer todas las cadenas posibles de ADN y contarlas con la siguientes condiciones: * Una par de bases de adenina y timina AT o TA siempre le debe de seguir un par de bases de guanina y citosina GC o CG y viceversa para la guanina y citosina. Pero como eres un poco flojo decides hacer un programa que haga dicha tarea.",
    "input": "Un entero n que representa el numero de pares de bases que debe tener el ADN",
    "output": "Las cadenas de ADN que cumplen esas condiciones en el siguiente orden AT TA CG GC y un entero K que representan el numero de cadenas que cumplieron la condiciones .",
    "note": "",
    "topics": [
      "strings",
      "dfs and similar"
    ],
    "id": 14748
  },
  {
    "title": "Brayan y su diccionario",
    "url": "https://omegaup.com/arena/problem/Brayan-y-su-diccionario",
    "history": "Brayan adquirio\u0301 un diccionario virtual que cambia constantemente las palabras que contiene en el por lo que decide hacer un programa que busque si una dicha pablara esta en el diccionario o no adema\u0301s de cuantas palabras coinciden en un patro\u0301n dado y un di\u0301a decide prestarte dicho diccionario pero como le gusta verte sufrir no te pasa el co\u0301digo por lo que decides hacer el tuyo agrega\u0301ndole la funcio\u0301n de buscar una palabra por el i\u0301ndice del diccionario.",
    "input": "Dos enteros n y m que representan la cantidad de palabras del diccionario que te presto Brayan y la cantidad de instrucciones que hara\u0301s en el diccionario con tu programa. * bus busca en el diccionario la cadena s que consta de nu\u0301meros , si\u0301mbolos, y letras ( mayu\u0301sculas y minu\u0301sculas) adema\u0301s de que dichas palabras no superan los 25 caracteres. * pre buscar cuantas palabras del diccionario cumplen que son prefijo de t con la u\u0301nica condicio\u0301n de que el prefijo y la palabra sean distintos en taman\u0303o de longitud . * ejemplo pre cadena [ cadena , cadenas] solo contara como prefijo valido cadenas pero cadena no ya que coinciden en taman\u0303o* indi buscar en el diccionario que palabra esta asociada a ese i\u0301ndice.",
    "output": "La respuesta de cada instruccio\u0301n hecha. * * bus* Si la palabra esta\u0301, imprimir ` Si esta es la cadena # ` i donde i es la posicio\u0301n que ocupo\u0301 dicha palabra cuando se te dio el diccionario como entrada, empezando por 0. Si la palabra no esta\u0301, existen dos situaciones. La primera situacio\u0301n ocurre cuando la palabra buscada no tiene un prefijo en comu\u0301n con ninguna palabra del diccionario o cuando la palabra es un prefijo de alguna palabra del diccionario; en este caso debes ` No esta la cadena = ( ` . La segunda situacio\u0301n ocurre cuando la palabra buscada tiene un prefijo comu\u0301n con cualquier palabra del diccionario; en este caso debes imprimir el prefijo comu\u0301n ma\u0301s grande. * pre el numero de prefijos que cumplen la condicion* indi en caso de que dicho i\u0301ndice este asociado a una cadena imprimir la cadena en caso contrario imprimir No esta",
    "note": "",
    "topics": [
      "trees",
      "string suffix structures",
      "graphs",
      "data structures",
      "strings"
    ],
    "id": 14723
  },
  {
    "title": "Camino de cadena",
    "url": "https://omegaup.com/arena/problem/Camino-de-cadena",
    "history": "Dado un arreglo a de longitud n, definimos un subarreglo como un arreglo formado por tomar elementos consecutivos del arreglo a. Por ejemplo, ( 1, 2, 3) es un subarreglo del arreglo ( 10, 11, 1, 2, 3, 4, 5) , pero ni ( 1, 3, 2) ni ( 10, 2, 4) lo son. Denotaremos con a[ l, r] al subarreglo de a formado por los elementos con posicio\u0301n entre l y r ( en el ejemplo anterior, a[ 3, 5] = ( 1, 2, 3) ) . Adema\u0301s, definimos un \" camino\" como una secuencia de arreglos A = s_ 1, . . . , s_ m tal que se cumplan las siguientes condiciones: - A_ i es subarreglo de a para todo i va\u0301lido. - | A_ i| > | A_ i + 1| para todo i va\u0301lido, es decir, las longitudes de los elementos de A esta\u0301n en orden estrictamente decreciente. - A_ i + 1 es menor o igual lexicogra\u0301ficamente que cualquier subcadena de A_ i de longitud | A_ i + 1| . - Sea p_ i la posicio\u0301n en la que empieza A_ i en a ( es decir, a[ p_ i : p_ i + | A_ i| - 1] = A_ i) , entonces p_ i + | A_ i| \u2264 p_ i + 1 para todo i va\u0301lido. Determina el ma\u0301ximo taman\u0303o que puede tener un \" camino\" sobre el arreglo a. * * Definicio\u0301n: * * Sean x y y dos arreglos de la misma longitud, entonces x es lexicogra\u0301ficamente menor que y si x = \u0338 y y si i es la primera posicio\u0301n en la que difieren, entonces x_ i < y_ i.",
    "input": "La primera li\u0301nea de entrada contiene un entero n, la longitud del arreglo a. La segunda li\u0301nea de entrada contiene n enteros a_ i separados por un espacio, el i- e\u0301simo de los enteros es el i- e\u0301simo elemento de a.",
    "output": "Imprime una sola li\u0301nea, la respuesta al problema.",
    "note": "",
    "topics": [
      "strings"
    ],
    "id": 14670
  },
  {
    "title": "Tiroteo en Reach",
    "url": "https://omegaup.com/arena/problem/OMIYuc-Tiroteo-en-Reach",
    "history": "Despue\u0301s de que Jorge cruzo\u0301 con e\u0301xito el [ * Puente de Metro\u0301polis* ] [ 1] en la OMIYUC pasada, decidio\u0301 relajarse con una partida de tiroteo en * Halo: Reach* . Jorge vio que a veces las oleadas de enemigos segui\u0301an un patro\u0301n, el cual era que el orden en el que aparecen los enemigos es el mismo si lo ves desde la primera oleada a la u\u0301ltima que si lo ves al reve\u0301s. Jorge representa los enemigos como caracteres, asi\u0301 que para ejemplificar el patro\u0301n escribio\u0301 lo siguiente: ABCDCBAComo se puede observar, si ves el orden de los enemigos de izquierda a derecha, es el mismo que de derecha a izquierda. Este patro\u0301n le recordo\u0301 mucho al patro\u0301n de los * puentes bonitos* del * Puente de Metro\u0301polis* , por lo que decidio\u0301 llamarle a este patro\u0301n de enemigos * * oleadas bonitas* * . Jorge conoce la lista de enemigos en el orden que los enfrentara\u0301 durante toda la partida y quiere hacer una estrategia eficaz para su partida de tiroteo. \u00bfAdivinas que\u0301 necesita Jorge? Asi\u0301 es, ya lo sabes. # ProblemaDada una cadena de caracteres representando los enemigos que aparecera\u0301n en el orden de la cadena, responder una serie de preguntas del tipo: - Los enemigos en el intervalo [ a, b] , \u00bfes una * * oleada bonita* * ?",
    "input": "En la primera li\u0301nea un entero N, la cantidad de enemigos. En la segunda li\u0301nea una cadena de caracteres S de longitud N, los enemigos en el orden que sera\u0301n enfrentados. En la tercera li\u0301nea un entero P, la cantidad de preguntas que se hara\u0301n. En las siguientes P li\u0301neas recibira\u0301n en cada una dos enteros a y b representando el intervalo de la cadena por la cual se te pregunta si es una * * oleada bonita* * . * * Nota* * : hay enemigos ( Elites) con camuflaje activo, por lo que no se vera\u0301n en la lista, pero siguen estando ahi\u0301.",
    "output": "Para cada pregunta, responde en una li\u0301nea un \" Si\" si es una * * oleada bonita* * . En caso contrario, responde \" No\" .",
    "note": "",
    "topics": [
      "implementation",
      "strings"
    ],
    "id": 14664
  },
  {
    "title": "Caracteres iguales mediante inversiones",
    "url": "https://omegaup.com/arena/problem/Caracteres-iguales-mediante-inve",
    "history": "Cuentas con una cadena S formada por las letras ` a` , ` b` , ` c` y deseas modificarla para que todas las apariciones de la misma letra aparezcan juntas ( aunque el orden entre letras distintas no te importa: da lo mismo si la cadena resultante es ` aabbcc` o ` ccbbaa` o ` bbccaa` , etce\u0301tera) . Para volver ma\u0301s interesante el desafi\u0301o, la u\u0301nica operacio\u0301n que podra\u0301s aplicar sera\u0301 la de tomar alguna subcadena de S e invertirla. Por ejemplo, si S = ` caccb` entonces conviene invertir la subcadena de longitud 3 que comienza en el segundo caracter ( es decir, la subcadena ` acc` ) para asi\u0301 obtener S' = ` cccab` . Escribe un programa que calcule la menor cantidad de veces que necesitara\u0301s aplicar la operacio\u0301n descrita para obtener una cadena que te satisfaga.",
    "input": "Una cadena S formada por las letras ` a` , ` b` , ` c` con al menos una aparicio\u0301n de cada letra y con una longitud no mayor a 15 caracteres.",
    "output": "Un entero que sea la menor cantidad de operaciones que necesitas aplicar.",
    "note": "",
    "topics": [
      "shortest paths",
      "strings"
    ],
    "id": 14601
  },
  {
    "title": "Balance AB",
    "url": "https://omegaup.com/arena/problem/Balance-AB",
    "history": "Se te da una cadena de caracteres s con n letras, con caracteres que pueden ser a o b. Diremos que AB( s) es el nu\u0301mero de ocurrencias de la cadena ab en s como una subcadena. Ana\u0301logamente, BA( s) es el nu\u0301mero de ocurrencias de la cadena ba en s como una subcadena. Por ejemplo, si s = aabbbabaa, entonces AB( s) = AB( aabbbabaa) = 2, ya que en s aparece 2 veces la cadena ab, en los i\u0301ndices 2 y 6, aabbbabaa. En un paso, tu puedes escoger cualquier i\u0301ndice i y reemplazar s_ i con la letra a o b. \u00bfCua\u0301l es el mi\u0301nimo nu\u0301mero de pasos que necesitas hacer para lograr que AB( s) = BA( s) ?",
    "input": "La primera li\u0301nea de la entrada contiene un solo entero c, que es el nu\u0301mero de casos de prueba. Para cada caso de prueba tendra\u0301s una cadena de caracteres s que contiene solo letras a o b.",
    "output": "Para cada caso de prueba imprime una cadena resultante s con AB( s) = BA( s) , que se consigue haciendo la menor cantidad de pasos. Si hay mu\u0301ltiples soluciones, imprime cualquiera de ellas.",
    "note": "",
    "topics": [
      "strings",
      "string suffix structures"
    ],
    "id": 14491
  },
  {
    "title": "Subcadena balanceada",
    "url": "https://omegaup.com/arena/problem/Subcadena-balanceada",
    "history": "Se te da una cadena de caracteres s que contiene n letras, en donde cada letra puede ser ' a' o ' b' . s[ l; r] es una subcadena continua de las letras del i\u0301ndice l hasta el r de la cadena, este rango es inclusivo. Diremos que una cadena de caracteres esta balanceada si el la cantidad de letras ' a' en la cadena es igual al nu\u0301mero de letras ' b' . Por ejemplo, las cadenas \" baba\" y \" aabbab\" son balanceadas, pero las cadenas \" aaab\" y \" b\" no lo son. Encuentra cualquier subcadena no vaci\u0301a balanceada s[ l, r] de la cadena s.",
    "input": "La primera li\u0301nea de la entrada contiene un solo entero c que es el nu\u0301mero de casos de prueba. Cada caso de prueba contiene dos li\u0301neas: La primera li\u0301nea contiene un entero n que denota la longitud de la cadena de caracteres. La segunda li\u0301nea de cada caso de prueba contiene la cadena s, que consiste de n letras, cada una siendo la letra ' a' o ' b' .",
    "output": "Para cada caso de prueba imprime dos enteros. Si existe alguna subcadena de caracteres balanceada s[ l; r] , entonces imprime l y r ( 1 \u2264 l \u2264 r \u2264 n) , que son los i\u0301ndices del inicio y el fin del rango, ambos nu\u0301meros indexados en 1. Si no existe dicha subcadena, imprime - 1 - 1.",
    "note": "",
    "topics": [
      "string suffix structures",
      "strings"
    ],
    "id": 14487
  },
  {
    "title": "A Code With Numbers",
    "url": "https://omegaup.com/arena/problem/A-Code-With-Numbers",
    "history": "# DescriptionAdrian and Maria are relatives that live in different towns. As they inhabit a rural area, it is very difficult for them to keep in touch. One way they found to overcome their communication problem was to establish a line through their parents, who usually visit each other. The point is that Adrian and Maria did not want that their parents to read their messages, so they decided to create a secret code for the messages. The code is not very sophisticated, but you should keep in mind Adrian and Maria are just children. In general, the meaning of a message is based on changing some letters by numbers. Each messageis composed by several lines using uppercase letters of the English alphabet, spaces and punctuationsymbols: dot and comma. The letters that are changed by numbers can be seen in the following example: this change is the same for all messages between Adrian and Maria. Message in \" Code Number\" : > H3LL0 MY L0V3, 1 M H499Y 83C4U53 500N 1 W1LL 83 70 Y0UR 51D3. 7H15> 71M3 W17H0U7 Y0U H45 833N 373RN4L. 1 1NV173 Y0U 70 7H3 200 0N3 70 533> 7H3 238R42 4ND 60R1L42. Decoded Message: > HELLO MY LOVE, I M HAPPY BECAUSE SOON I WILL BE TO YOUR SIDE. THIS> TIME WITHOUT YOU HAS BEEN ETERNAL. I INVITE YOU TO THE ZOO ONE TO SEE> THE ZEBRAS AND GORILAS. Your task is to write a program to help Adrian and Maria to decode the messages they receive inCode Number.",
    "input": "The first line of the input contains a single integer number T, representing the number of testcases. Each test case consists of a line with a string in \" Code Number\" , where the words in the line are separated by one white space. - 1 \u2264 T \u2264 50- No line in the input will exceed 80 characters.",
    "output": "For each test case in the input, print the decoded message. # Example| | input3H3LL0 MY L0V3, 1 M H499Y 83C4U53 500N 1 W1LL 83 70 Y0UR 51D3. 7H1571M3 W17H0U7 Y0U H45 833N 373RN4L. 1 1NV173 Y0U 70 7H3 200 0N3 70533 7H3 238R45 4ND 60R1L45. | | outputHELLO MY LOVE, I M HAPPY BECAUSE SOON I WILL BE TO YOUR SIDE. THISTIME WITHOUT YOU HAS BEEN ETERNAL. I INVITE YOU TO THE ZOO ONE TOSEE THE ZEBRAS AND GORILAS. | | end",
    "note": "",
    "topics": [
      "constructive algorithms",
      "implementation",
      "strings"
    ],
    "id": 14413
  },
  {
    "title": "Nombre elegante",
    "url": "https://omegaup.com/arena/problem/nombre-elegante",
    "history": "Cristian quiere saber cuantos de sus amigos tienen un nombre elegante, y escribira\u0301 unprograma para lograrlo. Cristian considera que un nombre es elegante si el nombreempieza y termina por una letra a. Por ejemplo: Alexandra y Ana son nombres elegantespero Cesar, Jose y Jesus no lo son.",
    "input": "La primera li\u0301nea de la entrada sera un nu\u0301mero n, el taman\u0303o del nombre a evaluar. Luego, en la segunda li\u0301nea, el nombre a evaluar. Este nombre solo puede estarcompuesto de letras minu\u0301sculas# Limites1 \u2264 n \u2264 50,",
    "output": "Debera\u0301s imprimir 1 en caso de que el nombre sea elegante, 0 en caso contrario. # Ejemplos| | input4sara| | output0| | input3ana| | output1| | input6andres| | output0| | input7adriana| | output1| | end",
    "note": "",
    "topics": [
      "strings"
    ],
    "id": 14358
  },
  {
    "title": "Hyperpar Capicua",
    "url": "https://omegaup.com/arena/problem/Hyperpar-Capicua",
    "history": "A el grupo de Yoselin le dejaron una tarea para que investigaran los numeros Hyperpares Capicuas, y encontraron que dichos numeros son aquellos que todos su digitos son pares y que se leen de la misma forma que de izquierda a derecha al igual que de derecha a izquierda, pero ella quiero optimizar ya que se le hace muy complicado programar, ella pide tu ayuda para encontrar una solucion necesaria.",
    "input": "Un solo numero entero para hacerle la prueba si es o no Capicua.",
    "output": "Un texto que dira \" Hyperpar Capicua\" en caso de que se cumplan los casos, en caso contrario \" Numero no Hyperpar Capicua\" sin comillas.",
    "note": "",
    "topics": [
      "strings",
      "implementation"
    ],
    "id": 14250
  },
  {
    "title": "ANIEI 2021 - E",
    "url": "https://omegaup.com/arena/problem/ANIEI-2021---E",
    "history": "Una cadena es una variable que almacena una secuencial de caracteres. Existen varias operaciones que se pueden realizar sobre cadenas y la que es importante para este problema es la rotacio\u0301n: sean S, U, V cadenas, si S = UV entonces VU es una rotacio\u0301n de S. Por ejemplo, si S = abc entonces bca es una rotacio\u0301n de S donde U = a y V = bc. Si una cadena S tiene N caracteres, entonces existen N rotaciones. Por ejemplo, si S = abc entonces sus tres rotaciones son abc, bca y cba. Tobi\u0301as es una persona muy curiosa y, despue\u0301s de darse cuenta de lo anterior, descubrio\u0301 que puede crear una matriz de N \u00d7 N que contenga todas las rotaciones de S. La \u201dmatriz Tobi\u0301as\u201d se crea como sigue: la K- e\u0301sima fila de la matriz comienza con la subcadena de S que comienza en su posicio\u0301n K y termina en su posicio\u0301n N, mientras que el resto de la fila contiene la subcadena de S con los caracteres faltanes de S a partir de su inicio. A continuacio\u0301n se muestra la matriz para S = abc. < center> | | | | | \u2014 | \u2014 | \u2014 | | a | b | c | | b | c | a | | c | a | b | < / center> Tobi\u0301as te ha desafiado a encontrar una forma ra\u0301pida de responder cua\u0301l es el caracter que esta\u0301 en la posicio\u0301n i, j de la matriz construi\u0301da a partir de la cadena S.",
    "input": "La entrada consiste de varios casos de prueba. La primera li\u0301nea de cada caso de prueba contiene una cadena S y un entero Q que denota la cantidad de coordenadas i, j que se preguntara\u0301n con respecto a la matriz de S. Cada una de las siguientes Q li\u0301neas del caso de prueba contiene una pareja de enteros i, j para la cual hay que responder. Los casos de prueba debera\u0301n procesarse hasta el final de la entrada.",
    "output": "Cada cada caso de prueba, debes responder exactamente Q li\u0301neas, cada una de ellas con un caracter que corresponde con la respuesta de la pregunta respectiva.",
    "note": "",
    "topics": [
      "strings"
    ],
    "id": 14237
  },
  {
    "title": "Claves de C\u00e9sar",
    "url": "https://omegaup.com/arena/problem/Claves-de-Cesar",
    "history": "Las claves de Ce\u0301sar son un antiguo me\u0301todo de encriptacio\u0301n que consiste en sustituir los caracteres de un mensaje siguiendo una rotacio\u0301n en order alfabe\u0301tico. Esta rotacio\u0301n esta\u0301 caracterizada por una * clave de rotacio\u0301n* n que indica cua\u0301ntos espacios se van a rotar los caracteres del mensaje. Por ejemplo, si n= 2, entonces sustituimos la letra \" a\" por su rotacio\u0301n \" c\" , la letra \" b\" por su rotacio\u0301n \" d\" , y asi\u0301 sucesivamente hasta la letra \" z\" , que es rotada a \" b\" . Tu objetivo sera\u0301 escribir un programa que implemente este sistema de encriptacio\u0301n.",
    "input": "- En la primera li\u0301nea, un nu\u0301mero entero positivo n que representa la clave de rotacio\u0301n. - En la segunda li\u0301nea, un nu\u0301mero entero positivo m que indica el nu\u0301mero de caracteres del mensaje. - En la tercera li\u0301nea, un mensaje ( secuencia de caracteres sin espacios) de longitud m que debe ser encriptado.",
    "output": "- El mensaje encriptado de acuerdo a la rotacio\u0301n dada.",
    "note": "- Los caracteres del mensaje pertenecen al alfabeto en ingle\u0301s en minu\u0301sculas. - El alfabeto en ingle\u0301s consiste del alfabeto en espan\u0303ol sin la letra \" n\u0303\" . Por lo tanto, el alfabeto en ingle\u0301s tiene 26 letras.",
    "topics": [
      "strings"
    ],
    "id": 14129
  },
  {
    "title": "Pancho el portero",
    "url": "https://omegaup.com/arena/problem/Pancho-el-portero",
    "history": "Pancho es portero de un equipo de fut, por lo que su deber es evitar la mayor cantidad de goles. Pancho esta\u0301 muy entusiasmado, pues sabe que si su desempen\u0303o es bueno podra\u0301 ser considerado para la seleccio\u0301n de su pai\u0301s. El desempen\u0303o se evalu\u0301a de la siguiente manera: Cada equipo que anote una cantidad x de goles afecta en el desempen\u0303o en una cantidad de x^ 2 puntos, es decir, si el equipo c anota 4 goles, entonces afectara\u0301 a Pancho en 4^ 2 = 16 puntos. Pancho sabe que puede parar k goles, por lo que le interesa saber a quienes debe de pararle esos k goles para poder obtener el mi\u0301nimo de puntos que afecte su desempen\u0303o, los k goles pueden ser distribuidos entre todos los equipos. # ProblemaAyuda a Pancho a obtener el mi\u0301nimo puntaje que afectara\u0301 a su desempen\u0303o teniendo en cuenta que puede parar k goles.",
    "input": "- Una cadena s, la cual tendra\u0301 letras minu\u0301sculas del abecedario, cada letra c_ i de la cadena s sera\u0301 un gol anotado por el equipo con esa letra. - Un entero k, que es la cantidad de goles que puede parar Pancho",
    "output": "Un entero m, que sera\u0301 el mi\u0301nimo puntaje que afectara\u0301 a Pancho en su desempen\u0303o",
    "note": "",
    "topics": [
      "strings"
    ],
    "id": 14095
  },
  {
    "title": "El Abominable Dr Joe",
    "url": "https://omegaup.com/arena/problem/dr-joe",
    "history": "El abominable Dr Joe se encuentra realizando su pasatiempo favorito: crear mounstruos. Quiere crear un nuevo mounstruo que sea lo ma\u0301s parecido posible a Frankenstein. Y te ha pedido a ti crear un programa que le permita determinar si dos mounstruos son equivalentes. Para determinar si 2 mounstruos son equivalentes el Dr Joe te dara\u0301 la secuencia de ADN de los 2 mounstruos y tu\u0301 debera\u0301s decir si son equivalentes. Dos secuencias de ADN son equivalentes si se puede convertir la primera secuencia en la segunda al invertir una subsecuencia de caracteres de la primera secuencia. Por ejemplo, ` ATAGAACGT` y ` ATACAAGGT` son equivalentes ya que al invertir la subsecuencia ` GAAC` en ` ATAGAACGT` , se convierte en ` ATACAAGGT`",
    "input": "La primera li\u0301nea contendra la secuencia del ADN del primer mounstruo. La segunda li\u0301nea contendra la secuencia del ADN del segundo mounstruo.",
    "output": "La cadena ` EQUIVALENTES` si son equivalentes los dos mounstruos, o ` DIFERENTES` si son diferentes.",
    "note": "",
    "topics": [
      "string suffix structures",
      "strings"
    ],
    "id": 13983
  },
  {
    "title": "Goteando un lienzo",
    "url": "https://omegaup.com/arena/problem/Goteando",
    "history": "Un lienzo sera\u0301 una matriz de N\u00d7 N sobre el cua\u0301l caera\u0301n G gotas de tinta negra, una por una. Cada que cae una gota en una posicio\u0301n dada, esta posicio\u0301n se * ennegrece* un poco ma\u0301s, hasta 3 niveles de intensidad. Debes mostrar co\u0301mo quedara\u0301 el lienzo al final del goteo. Una posicio\u0301n donde no ha cai\u0301do ninguna gota sera\u0301 representada por el si\u0301mbolo \" . \" ( punto) . Conforme caigan gotas en una misma posicio\u0301n, el si\u0301mbolo utilizado sera\u0301 \" - \" ( guio\u0301n) , luego \" + \" , y hasta llegar a \" # \" .",
    "input": "Las primeras dos li\u0301neas contienen los enteros N y G, respectivamente. Seguidas de G lineas, cada una con una pareja de enteros r, c separados por espacio, representando el renglo\u0301n y columna del lienzo donde cae una gota. La numeracio\u0301n de renglones y columnas empieza desde 0, y puedes suponer que 1\u2264 N \u2264 30 y que 1\u2264 G \u2264 N^ 2.",
    "output": "La matriz de N\u00d7 N, con sus si\u0301mbolos separados por espacio.",
    "note": "",
    "topics": [
      "strings",
      "matrices",
      "math"
    ],
    "id": 13976
  },
  {
    "title": "Asterisco de cabeza",
    "url": "https://omegaup.com/arena/problem/Asterisco-de-cabeza",
    "history": "Eduardo es un tipo muy extran\u0303o y siempre juega con las cosas y las invierte, esta vez se topo con un gran problema# ProblemaEduardo quiere invertir una pira\u0301mide de asteriscos pero no sabe mucho sobre condicionales necesita de tu ayuda ya que sabe que tu eres un PRO en programacio\u0301n, ayuda a Eduardo a que no se aburra.",
    "input": "Recibira\u0301s por teclado solo un numero N, el cual representa la altura de la pira\u0301mide.",
    "output": "Una pira\u0301mide inversa de taman\u0303o N.",
    "note": "",
    "topics": [
      "implementation",
      "strings"
    ],
    "id": 13973
  },
  {
    "title": "JERIGONZA",
    "url": "https://omegaup.com/arena/problem/JERIGONZA",
    "history": "# JERIGONZALa nin\u0303ez es la e\u0301poca del juego, la invencio\u0301n, la imaginacio\u0301n. \u00bfNunca jugaste a hablar en jerigonza? Es decir, crear un discurso incomprensible agrega\u0301ndole a cada si\u0301laba otra generada a partir de la p o de la ch? # # Por ejemplo: I\u0301pi- bapa- mospo- papa- rapa- lapa- espe- cuepe- lapa- cuanpa- dopo- copo- menpe- zo\u0301po- apa- llopo- verpe. I\u0301chi- bacha- moscho- pacha- racha- laesche- cueche- lacha- cuancha- docho- cocho- menche- zocho- acha- llocho- verche. La jerigonza, jeringonza o jeringozo es una variante creativa del habla en la que se intercalan si\u0301labas entre medio de una palabra en forma reiterada. Originalmente se denominaba jerigonza cualquier lenguaje de mal gusto, complicado y difi\u0301cil de entender, pero con el tiempo su significado vario\u0301 a la modalidad especi\u0301fica de intercalacio\u0301n. Adema\u0301s del entretenimiento, tambie\u0301n puede usarse como un modo de codificar el mensaje ( criptologi\u0301a) de forma que otras personas cercanas a los hablantes no acostumbrados a esta forma de hablar no consigan entender lo que los hablantes dicen. Estas variantes se dan como juego o entretenimiento en pai\u0301ses de habla castellana como Espan\u0303a e Hispanoame\u0301rica. Pablo y Juan siempre que tienen secretos entre ellos hablan en jerigonza delante de sus amigos, asi\u0301 no los entienden. Ahora han decidido aplicar una forma de cifrar sus mensajes escritos y crearon un programa para encriptar y desencriptarlos. Por un error borraron el programa que desencripta dichos mensajes. Tu trabajo es ayudarlos.",
    "input": "Consiste en una li\u0301nea del texto que se debe descifrar.",
    "output": "Consiste en una li\u0301nea de texto con el mensaje descifrado.",
    "note": "",
    "topics": [
      "strings"
    ],
    "id": 13942
  },
  {
    "title": "\u00bfDOTA 2 O LOL? ",
    "url": "https://omegaup.com/arena/problem/DOTA-2-O-LOL-",
    "history": "! [ enter image description here] [ 1] El ge\u0301nero MOBA esta\u0301 dominado por dos juegos: League of Legends y Dota 2. Ambos tienen un mapa muy parecido y el objetivo es el mismo, destruir la base del rival. Carlos, es un estudiante sanmarquino que quiere iniciar en el mundo de los videojuegos, sin embargo au\u0301n no decide con cua\u0301l juego iniciar, si Dota 2 o League of Legends asi\u0301 que decide realizar una encuesta del cua\u0301l es el juego ma\u0301s jugado.",
    "input": "La entrada comienza con una li\u0301nea que contiene un valor entero N que representa la cantidad de personas encuestadas. Luego, en una segunda li\u0301nea, se ingresan las N respuestas de cada uno de los encuestados, que solo puede ser DOTA o LOL",
    "output": "El programa debe mostrar el resultado de la encuesta con el siguiente formato \" DOTA: a\" y \" LOL: b\" donde a es la cantidad de encuestados que dijeron \" DOTA\" y b es la cantidad de personas que dijeron \" LOL\"",
    "note": "",
    "topics": [
      "implementation",
      "strings"
    ],
    "id": 13904
  },
  {
    "title": "La nueva telefonia",
    "url": "https://omegaup.com/arena/problem/La-nueva-telefonia",
    "history": "Juan tiene una compan\u0303ia de telefonia, pero tiene un problema ya que no tiene a la suficiente gente para echar a andar sus servicios, el pide de tu ayuda para resolver su problema. # ProblemaJuan quiere regalar una SIM a aquellos usuarios que tengan todos los nu\u0301meros pares, NOTA: recuerda que los primeros 3 nu\u0301meros son indiferentes ya que son los de la lada de la ciudad",
    "input": "Un numero de 10 di\u0301gitos en el cual corresponde al numero del tele\u0301fono del usuario.",
    "output": "Una u\u0301nico mensaje: - Si cumple con el caso imprime \" SIM gratis : ) \" ( sin las comillas) . - Si no cumple con la funcio\u0301n imprime \" F mi pana : ( \" ( sin las comillas) - Si el numero es incompleto imprime \" Numero incorrecto\" ( sin las comillas) .",
    "note": "",
    "topics": [
      "implementation",
      "strings"
    ],
    "id": 13896
  },
  {
    "title": "occ21sfinpn25",
    "url": "https://omegaup.com/arena/problem/occ21sfinpn25",
    "history": "# \u00bfCua\u0301ntas de cada una? Dada una cadena de a lo ma\u0301s 1000 minu\u0301sculas encontrar cua\u0301ntas veces aparece cada vocal. En la salida de\u0301 simplementecinco nu\u0301meros sin ningu\u0301n titulo.",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "strings"
    ],
    "id": 13861
  },
  {
    "title": "occ21sfinpn21",
    "url": "https://omegaup.com/arena/problem/occ21sfinpn21",
    "history": "# De di\u0301gito a nu\u0301meroHaga un programa que reciba un di\u0301gito, esto es un cara\u0301cter de 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 y que devuelvael nu\u0301mero en letras minu\u0301sculas que corresponde a ese di\u0301gito. # Ejemplos| | input2| | outputdos| | input9| | outputnueve| | end",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "strings"
    ],
    "id": 13856
  },
  {
    "title": "Cadenas poderosotas",
    "url": "https://omegaup.com/arena/problem/Cadenas-poderosotas",
    "history": "Una cadena poderosota es aquella que inicia con \" heavy\" y termina con \" metal\" . Tu tarea es dada una cadena s de a lo mas 10^ 6 caracteres de ente [ a - z] y [ A - Z] . Encontrar todas las cadenas poderosotas que se pueden formar. Ver el ejemplo para entenderlo mejor.",
    "input": "Una u\u0301nica cadena no vaci\u0301a que consta de letras mayu\u0301sculas y minu\u0301sculas del alfabeto ingles y su longitud no sobrepasa 10^ 6 caracteres.",
    "output": "El nu\u0301mero de cadenas poderosotas que se pueden formar.",
    "note": "",
    "topics": [
      "binary search",
      "strings",
      "string suffix structures"
    ],
    "id": 13843
  },
  {
    "title": "Cadenas binarias pal\u00edndromas",
    "url": "https://omegaup.com/arena/problem/Cadenas-binarias-palindromas",
    "history": "Una cadena binaria es una cadena formada u\u0301nicamente por di\u0301gitos ` 0` y ` 1` , mientras que una cadena pali\u0301ndroma es una cadena que se lee igual al derecho y al reve\u0301s. Escribe un programa que imprima todas las cadenas binarias pali\u0301ndromas de longitud N.",
    "input": "Un entero N. Puedes suponer que 0 \u2264 N \u2264 35.",
    "output": "Todas las cadenas binarias pali\u0301ndromas que existen, una por li\u0301nea. Las cadenas debera\u0301n imprimirse en orden lexicogra\u0301fico.",
    "note": "",
    "topics": [
      "strings",
      "divide and conquer"
    ],
    "id": 13811
  },
  {
    "title": "El juego de Jenga",
    "url": "https://omegaup.com/arena/problem/El-juego-de-Jenga",
    "history": "El popular juego de Jenga consiste en retirar una a una las piezas de una torre. Tu labor sera\u0301 escribir un programa que recree lo que sucederi\u0301a si se te proporciona una descripcio\u0301n de la torre y el orden en el que el jugador desea retirar las fichas. El estado de la torre esta\u0301 descrito por una matriz de 10 \u00d7 10 caracteres que puede contener letras mayu\u0301sculas ( denotando la seccio\u0301n de una pieza identificada por esa letra) o caracteres ` . ` ( denotando la ausencia de una pieza) . Todas las piezas son horizontales y pueden tener entre 1 y 10 secciones. El jugador intentara\u0301 retirar N piezas de la torre ( en cierto orden dado) y la torre colapsara\u0301 si cualquier pieza se queda sin al menos una seccio\u0301n de soporte contiguo debajo de ella ( ya sea de otras piezas o de suelo; la torre no podra\u0301 caer de pie) . Tu programa debera\u0301 simular la remocio\u0301n de las piezas que no provoquen un colapso y debera\u0301 detenerse si una pieza no puede ser removida sin colapsar la torre. Tu programa tambie\u0301n debera\u0301 imprimir el estado final de la torre ( sin incluir la remocio\u0301n que provoque el colapso) .",
    "input": "Una matriz de 10 \u00d7 10 caracteres seguida de un entero N y N letras mayu\u0301sculas que denoten el orden en el que las piezas sera\u0301n removidas. Puedes suponer que nunca se retira una pieza inexistente.",
    "output": "Para cada pieza que pudo removerse, imprimir el mensaje ` Pieza # removida` donde # es la letra que la identifica. Si una pieza no pudo removerse, imprimir el mensaje ` Pieza # no puede removerse` e ignorar las piezas restantes. Finalmente, una matriz de 10 \u00d7 10 caracteres que denoten el estado final de la torre.",
    "note": "",
    "topics": [
      "math",
      "strings",
      "matrices",
      "implementation"
    ],
    "id": 13810
  },
  {
    "title": "Nuevo reglamento para las camisetas",
    "url": "https://omegaup.com/arena/problem/edm2021n1-camisetas",
    "history": "La Asociacio\u0301n de Fu\u0301tbol Provincial ha establecido un nuevo reglamento para la numeracio\u0301n de las camisetas para los partidos oficiales de la liga: Desde el 1 en adelante, cada nu\u0301mero so\u0301lo podra\u0301 ser usado por un jugador de una posicio\u0301n especi\u0301fica, siguiente la siguiente secuencia: < code> < ol> < li> Arquero < / li> < li> Lateral derecho < / li> < li> Lateral izquierdo < / li> < li> Defensa central < / li> < li> Defensa central < / li> < li> Pivote < / li> < li> Extremo derecho < / li> < li> Mediocentro < / li> < li> Delantero central < / li> < li> Mediapunta < / li> < li> Extremo izquierdo < / li> < / ol> < / code> Y luego se repite, es decir, la camiseta con el nu\u0301mero ` 12` so\u0301lo puede ser usada por un ` Arquero` , la ` 13` por un ` Lateral derecho` y asi\u0301 sucesivamente. Para tu club, esta nueva regla es un problema, porque ya se han encargado N camisetas para jugar en la liga. Tu trabajo es determinar en que\u0301 posiciones debera\u0301n jugar los jugadores que usen las camisetas.",
    "input": "* Una li\u0301nea con la cantidad N de camisetas encargadas por el club. * N li\u0301neas, cada una con el nu\u0301mero de una camiseta.",
    "output": "* N li\u0301neas, cada una con la posicio\u0301n en la que debera\u0301 jugar el jugador que use una camiseta ( en el orden de la entrada) .",
    "note": "",
    "topics": [
      "strings"
    ],
    "id": 13771
  },
  {
    "title": "La cueva en la cornisa",
    "url": "https://omegaup.com/arena/problem/La-cueva-en-la-cornisa",
    "history": "En algu\u0301n lugar de la cornisa por la que John Carter intentaba escapar de los indios, John descubrio\u0301 una cueva en la que decidio\u0301 esconderse. La cueva resulto\u0301 ser muy estrecha, oscura y profunda, asi\u0301 que John Carter estaba seguro de que los indios no lo encontrari\u0301an. Poco despue\u0301s, los indios encontraron la misma cueva y decidieron entrar a explorarla. Los indios entraron uno por uno, pero a veces el jefe indio ( que permaneci\u0301a afuera de la cueva) pedi\u0301a que saliera cierto indio y diera su reporte. Por lo limitado de la movilidad dentro de la cueva, los indios que estaban ma\u0301s cerca de la entrada teni\u0301an que salir para permitir que el indio llamado tambie\u0301n pudiera salir. Ocasionalmente el jefe se equivocaba y llamaba a un indio que no estaba dentro de la cueva, pero los indios se percataban del error hasta que todos habi\u0301an salido y el indio llamado no estaba. Escribe un programa que determine en que\u0301 orden salieron los indios de la cueva cada vez que el jefe indio llamaba a alguien.",
    "input": "Un entero N seguido de N eventos. Cada evento contendra\u0301 una letra ` E` o ` B` seguida del nombre de un indio: si la letra es ` E` entonces el indio entro\u0301, mientras que si la letra es ` B` entonces el indio fue llamado por el jefe. Puedes suponer que 0 \u2264 N \u2264 10^ 5, que los nombres de los indios consisten de entre 3 y 10 letras, que el jefe no llamo\u0301 a nadie si no habi\u0301a indios dentro de la cueva y que no hay indios con nombres repetidos.",
    "output": "Por cada evento del tipo ` B` , un renglo\u0301n que contenga los nombres de los indios en el orden en el que salieron.",
    "note": "",
    "topics": [
      "data structures",
      "strings"
    ],
    "id": 13768
  },
  {
    "title": "Wenos palindromos",
    "url": "https://omegaup.com/arena/problem/Wenos-palindromos",
    "history": "Wendolin adora los pali\u0301ndromos, por lo que cuando ve una palabra trata de formar la mayor cantidad de pali\u0301ndromos usando las letras de la palabra. Sin embargo, ella piensa que los pali\u0301ndromos de una sola letra son aburridos, debido a que es demasiado simple, por lo que cada pali\u0301ndromo que hace tiene que tener ma\u0301s de una letra, no puede reordenar las letras en la palabra, tampoco ocupa usar todas las letras de la palabra. Teniendo una palabra de N letras ayuda a Wendolin a saber cuantos pali\u0301ndromos puede formar!",
    "input": "Un entero N indicando la cantidad de letras de la palabra, seguido de la palabra.",
    "output": "Un entero indicando la cantidad de pali\u0301ndromos que se puede formar.",
    "note": "",
    "topics": [
      "strings"
    ],
    "id": 13706
  },
  {
    "title": "Codigo Va Dinci",
    "url": "https://omegaup.com/arena/problem/Codigo-Va-Dinci",
    "history": "El profesor Danglon tiene en su posesio\u0301n un pequen\u0303o cilindro el cual contiene dentro un mapa a la legendaria ciudad de Los Mochis. Para abrir el cilindro es necesario rotar piezas las cuales contienen caracteres los cuales forman una contrasen\u0303a. E\u0301l ya conoce la contrasen\u0303a pero cierta sociedad secretaesta\u0301 a punto de capturarlo y robarle el artefacto. Por ello debe de apresurarse a ingresar la contrasen\u0303a y obtener el mapa. Como antes se menciono\u0301, cada cara\u0301cter es una pieza individual la cual es posible rotarla ya sea hacia arriba, consiguiendo asi\u0301 la siguiente letra en el abecedario, o hacia abajo, consiguiendo la previa letra. La pieza es ci\u0301clica, por lo que la siguiente letra de la z es la a, y la letra previa de a es la z. Determina cual es la mi\u0301nima cantidad de movimientos para convertir la palabra original en el cilindro en la contrasen\u0303a.",
    "input": "En la primer li\u0301nea un entero 1\u2264 n \u2264 1e5, la cantidad de caracteres en el cilindro. En la segunda li\u0301nea hay una cadena con n caracteres, la configuracio\u0301n inicial del artefacto. En la tercer linea hay una cadena con n caracteres, la contrasen\u0303a.",
    "output": "Imprime la cantidad mi\u0301nima de movimientos para obtener la contrasen\u0303a.",
    "note": "",
    "topics": [
      "strings"
    ],
    "id": 13700
  },
  {
    "title": "Coincidencia de cadenas",
    "url": "https://omegaup.com/arena/problem/Coincidencia-de-cadenas",
    "history": "En este problema no te vamos a aventar un choro mareador. Dada una cadena y un patro\u0301n. La tarea es encontrar el nu\u0301mero de veces que se repite el patro\u0301n en la cadena.",
    "input": "La entrada consta de dos lineas, la primera li\u0301nea contiene una cadena de longitud n y la segunda un patro\u0301n de longitud m. Ambas cadenas consisten de caracteres a - z.",
    "output": "Un entero, que es el nu\u0301mero de ocurrencias del patro\u0301n en la cadena.",
    "note": "",
    "topics": [
      "strings",
      "implementation"
    ],
    "id": 13675
  },
  {
    "title": "Puente de Metr\u00f3polis",
    "url": "https://omegaup.com/arena/problem/Puente-de-Metropolis",
    "history": "# HistoriaJorge estaba jugando la campan\u0303a de * Halo 2* , pero se encontro\u0301 un problema al llegar a la misio\u0301n * Metro\u0301polis* . Al principio de la misio\u0301n tiene que cruzar un puente construido por N bloques etiquetados con un caracter que puede ser una letra mayu\u0301scula de la ' A' a la ' Z' , minu\u0301scula de la ' a' a la ' z' o nu\u0301meros del ' 0' al ' 9' . A Jorge no le gusta cruzar cualquier puente, sino que e\u0301l solo cruza * * puentes bonitos* * . Los * * puentes bonitos* * tienen la caracteri\u0301stica que * sin importar el extremo en el que incies el orden en el que aparecen las etiquetas es el mismo* . Por ejemplo, si el puente tiene las etiquetas \" * * 1bZ3Zb1* * \" a Jorge le gustari\u0301a cruzarlo; porque no importa si lo cruza desde el inicio al final o desde el final al inicio, siempre vera\u0301 el orden de etiquetas \" * * 1bZ3Zb1* * \" . Para solucionar el problema, Jorge quiere convertir el puente en un * * puente bonito* * . Puedes lograr esto insertando bloques en el puente existente. Sin embargo, Jorge lo quiere hacer usando la menor cantidad de bloques posibles. # ProblemaDada una cadena de caracteres que representa el puente existente, determinar el mi\u0301nimo nu\u0301mero de bloques que se tienen que insertar para convertirlo en un * * puente bonito* * .",
    "input": "En la primera li\u0301nea un entero N, el taman\u0303o del puente. En la segunda li\u0301nea, una cadena de caracteres que representa el puente.",
    "output": "Imprimir la mi\u0301nima cantidad de bloques que tienen que ser insertados en el puente original para convertirlo en un * * puente bonito* * .",
    "note": "",
    "topics": [
      "strings",
      "dfs and similar",
      "dp"
    ],
    "id": 13633
  },
  {
    "title": "Palabras de aliento",
    "url": "https://omegaup.com/arena/problem/Palabras-de-aliento",
    "history": "Hoy Axyoan se sintio\u0301 bastante feliz, \u00a1tan feliz que queri\u0301a comunica\u0301rselo a su persona favorita con las mejores palabras de aliento! < br/ > Axyoan despue\u0301s de mucho debatir hizo un programa que las mejores palabras de aliento de todas, el cual es una palabra b de m de longitud. < br/ > Asi\u0301 que solo tiene que formarlo, por lo que ha decidido ir a una tienda donde venden letras, para e\u0301l poder formar su mensaje. La tienda tiene todas las letras que venden una seguida de otra, formando lo que se puede ver como una palabra a con n caracteres de longitud, pero al llegar a la tienda se dio cuenta, que el mejor cumplido para si\u0301 mismo era un problema de programacio\u0301n que se le acaba de ocurrir, si el solamente quiere elegir letras empezando en una posicio\u0301n L y terminando en una posicio\u0301n R, \u00bfes posible formar el mensaje que quiere? < br/ > \u00a1Ayu\u0301dalo a contestar!",
    "input": "Dos enteros N y M indicando la cantidad de letras en la tienda, y la cantidad de letras del cumplido. < br/ > En la siguiente li\u0301nea vienen las letras disponibles en la tienda. < br/ > En la siguiente li\u0301nea viene el mensaje que quiere lograr Axyoan. < br/ > En la siguiente li\u0301nea viene un entero Q indicando la cantidad de preguntas que hara Axyoan. En las siguientes Q li\u0301neas cada una esta\u0301 representada por dos enteros L y R ( 1 < = L < = R < = N) Todas las palabras y el mensaje estan formados por letras del abecedario en minusculas.",
    "output": "< br/ > Por cada una de las Q li\u0301neas imprimir un mensaje de \" SI\" o \" NO\" dependiendo de si es posible realizar el mensaje usando letras que este\u0301n en posiciones mayores o iguales que L o menores iguales a R.",
    "note": "",
    "topics": [
      "strings"
    ],
    "id": 13532
  },
  {
    "title": "Directorio Descompuesto",
    "url": "https://omegaup.com/arena/problem/Directorio-Descompuesto",
    "history": "Pedrito utiliza mucho su aplicacio\u0301n de contactos para realizar llamadas con sus amigos y familiares. Una funcionalidad importante de la aplicacio\u0301n es poder sugerir al usuario contactos cuyos nombres coincidan con las letras presionadas en el teclado nume\u0301rico de la aplicacio\u0301n. La siguiente imagen es del teclado nume\u0301rico de la aplicacio\u0301n de contactos: ! [ Teclado nume\u0301rico original] [ 1] Pedrito nos da el siguiente ejemplo utilizando su directorio de contactos: - LUIS- JUDITH- ULISESSi el Pedrito ingreso\u0301 con el teclado * * 58* * , la aplicacio\u0301n debe de sugerir 2 contactos LUIS y JUDITH. Debido a que las letras del * * 5* * son: * J, K, L* y del * * 8* * son: * T, U, V* unas de las posibles combinaciones son * JU* y * LU* que coincide con las dos primeras letras de los contactos * * LU* * IS y * * JU* * DITH. El contacto de ULISES no es sugerido debido a que el orden de la secuencia de nu\u0301meros importa y debe de ser respetada. La semana pasada Pedrito actualizo\u0301 el sistema operativo de su tele\u0301fono. Y recientemente se ha dado cuenta que su aplicacio\u0301n de contactos tiene un * bug* . Despue\u0301s de la actualizacio\u0301n, el teclado nume\u0301rico cambia de forma aleatoria. Estos son algunos ejemplos: ! [ Teclados nume\u0301ricos descompuestos] [ 2] Pedrito pidio\u0301 tu ayuda para saber si una combinacio\u0301n de di\u0301gitos pueden sugerirle un determinado nombre de contacto.",
    "input": "En la primer li\u0301nea un nu\u0301mero entero N que representa las asignaciones de di\u0301gitos y letras del teclado nume\u0301rico. Cada pareja N_ i se compone de un di\u0301gito del teclado D, y una cadena de letras mayu\u0301sculas S. Despue\u0301s la siguiente li\u0301nea, es un nu\u0301mero entero Q que representa el nu\u0301mero de parejas con las que ayudaras a Pedrito. Las siguientes Q_ i parejas son una secuencia de di\u0301gitos P, y el un nombre del contacto W.",
    "output": "Por cada pareja Q_ i debera\u0301s mostrar \" SI\" si\u0301 la combinacio\u0301n de di\u0301gitos P_ i puede sugerir el nombre W_ i. En caso contrario mostrar \" NO\" .",
    "note": "",
    "topics": [
      "implementation",
      "math",
      "strings",
      "matrices"
    ],
    "id": 13464
  },
  {
    "title": "El canto de la sirena",
    "url": "https://omegaup.com/arena/problem/El-canto-de-la-sirena-ASINUS",
    "history": "Emiliano esta\u0301 muy emocionado ya que a pesar de que parezca increi\u0301ble, al parecer desde que llego\u0301 a la playa, por la noche se escucha un canto misterioso y se habi\u0301a estado preguntando de donde proveni\u0301a, hasta que logro\u0301 identificar que pertenecen a una sirena que esta\u0301 cerca del hotel donde se hospeda su familia. Sin embargo, poniendo mucha atencio\u0301n, se ha dado cuenta que casi todos los cantos siguen un patro\u0301n, este es equivalente al tiempo de segundos que dure el canto. Cuando el canto dura un segundo es algo asi\u0301: * * * \u266b ah \u266b* * * . cuando dura dos segundos es algo asi\u0301: * * * \u266b ahaah \u266b* * * . Cuando dura tres segundos es algo asi\u0301: * * * \u266b ahaahaaah \u266b* * * . Si pones atencio\u0301n en el patro\u0301n, la cantidad de segundos que dura, es equivalente a las * * ah* * que tiene, pero incrementa una vocal * * a* * con cada segundo. A pesar de ser un poco extran\u0303os, a e\u0301l le han gustado, y como no tiene mucho que hacer por la noche en la playa, ha decidido saber co\u0301mo quedari\u0301a el canto con una cantidad aleatoria de segundos. # ProblemaAyuda a Emiliano para que a trave\u0301s de un programa, pueda adivinar como seri\u0301a el canto de la sirena de acuerdo a una cantidad de segundos aleatoria y de acuerdo al patro\u0301n que sigue.",
    "input": "* * * s* * * como el nu\u0301mero de segundos que dura el canto.",
    "output": "El canto con el patro\u0301n especificado y cumpliendo con las caracteri\u0301sticas de acuerdo con el nu\u0301mero de segundos que dura.",
    "note": "",
    "topics": [
      "strings",
      "implementation"
    ],
    "id": 13438
  },
  {
    "title": "RFC simple",
    "url": "https://omegaup.com/arena/problem/RFC-simple",
    "history": "La empresa donde acabas de entrar a hacer tu servicio social necesita capturar todos los datos de sus empleados. Para facilitarlo te pidieron crear un programa sencillo para capturar los nombres y fechas de nacimiento. Pero para ahorrarse capturar algo ma\u0301s debes generar el RFC de los empleados. El RFC se genera con las 2 primeras letras del apellido paterno, la primer letra del apellido materno y la primer letra del nombre, seguidos por los dos u\u0301ltimos di\u0301gitos del an\u0303o de nacimeinto, los 2 di\u0301gitos del mes y los dos di\u0301gitos del di\u0301a de nacimiento.",
    "input": "El nombre completo, comenzando por nombre, apellido paterno y materno, el di\u0301a de nacimiento con dos di\u0301gitos, el mes expresado nume\u0301ricamente, y el an\u0303o de nacimiento. Puedes asumir que todos los empleados tienen so\u0301lo un nombre y no se introducira\u0301n acentos.",
    "output": "Una sola li\u0301nea mostrando el RFC sin homoclave.",
    "note": "",
    "topics": [
      "strings",
      "implementation"
    ],
    "id": 13349
  },
  {
    "title": "La Tesis De Adolf",
    "url": "https://omegaup.com/arena/problem/La-Tesis-De-Adolf-cpp",
    "history": "# DescripcionAdolf el creeper de la gran serie Un Creeper en Casa, se encuentra algo preocupado porque necesita acabar su tesis para graduarse en la escuela de monstruos de minecraft, la tesis de adolf trata de circuitos de redstone u\u0301nicos con nuevos bloques de redstone que se parecen a letras minu\u0301sculas del alfabeto ingle\u0301s, e\u0301l trata de demostrar que dados dos circuitos de redstone, puede hacer que un circuito a sea igual al circuito b si y solo si puede intercambiar exactamente 2 bloques del circuito a. para demostrarlo de forma perfecta e\u0301l creo\u0301 una tabla con muchos circuitos distintos, y necesita saber para cada caso si es posible hacer que el circuito a sea igual al circuito b, Ayudalo con su tesis, es el honor ma\u0301s grande de todo mob minecraftiano. ! [ Un ejemplo de la tesis] ( adolf. png) En la imagen podemos observar que puede cambiar exactamente 2 bloques del circuito * * A* * los cuales serian el bloque b y c y al intercambiarlos obtenemos el circuito * * B* * por lo tanto, la respuesta para ese caso es * * Si* * Preguntas comunes que pueden surgir. Si un creeper es un monstruo sin brazos, \u00bfco\u0301mo es que esta\u0301 escribiendo una tesis? . * * Ans* * = Steve lo ayuda\u00bfPor que\u0301 el problema trata de minecraft? * * Ans* * = No lo se, creo que es cool.",
    "input": "La primera entrada consiste de un nu\u0301mero n ( 2 \u2264 n \u2264 10^ 5) que denota el taman\u0303o del circuito, seguido de una cadena de letras minu\u0301sculas del alfabeto ingle\u0301s, de taman\u0303o n esto denota el circuito aLa segunda entrada consiste de un nu\u0301mero t ( 2 \u2264 t \u2264 10^ 5) que denota el taman\u0303o del circuito, seguido de una cadena de letras minu\u0301sculas del alfabeto ingle\u0301s, de taman\u0303o n esto denota el circuito b",
    "output": "si adolf puede hacer que el circuito a sea igual al b imprime \" Si\" de lo contrario imprime \" No\" | | input4abcd4acbd| | outputSi| | input4abcd4abce| | outputNo| | end- * * SubTask 1* * Para 30 puntos se dice que: - 1 \u2264 n, t \u2264 10^ 3- * * SubTask 2* * Para el resto de puntos: - 1 \u2264 n, t \u2264 10^ 5",
    "note": "",
    "topics": [
      "strings"
    ],
    "id": 13245
  },
  {
    "title": "Subconjunto con suma par",
    "url": "https://omegaup.com/arena/problem/Subconjunto-con-suma-par",
    "history": "Dado un arreglo a de n enteros positivos encuentra un subconjunto de los elementos de a tal que su suma es par ( divisible entre 2) o determina que no existe algu\u0301n subconjunto con dicha caracteri\u0301stica.",
    "input": "En la primera li\u0301nea un entero n, el taman\u0303o del arreglo. En la segunda li\u0301nea, n enteros a_ 1, a_ 2, . . . , a_ n separados por un espacio.",
    "output": "Impirme 9 \u00b7 10^ 180 + 1 si no existe algu\u0301n subconjunto tal que su suma sea par. En otro caso, imprime un entero k, la cantidad de elementos del subconjunto. En otra li\u0301nea k enteros positivos distintos, los i\u0301ndices de los elementos elegidos. Si hay mu\u0301ltiples soluciones imprime cualquiera de ellas.",
    "note": "",
    "topics": [
      "math",
      "implementation",
      "strings"
    ],
    "id": 13086
  },
  {
    "title": "Otro problema de pal\u00edndromos",
    "url": "https://omegaup.com/arena/problem/Otro-problema-de-palindromos",
    "history": "Un pali\u0301ndromo es una palabra o cadena de caracteres que se lee igual de izquierda a derecha que de derecha a izquierda. En este problema recibira\u0301s una string s de taman\u0303o n y debes determinar si es posible convertir la string s en un pali\u0301ndromo eliminando a lo ma\u0301s un cara\u0301cter.",
    "input": "Primero recibira\u0301s un entero T, que corresponde al numero de casos. Cada una de las siguientes T li\u0301neas contienen un entero n y una string s. La string s solo esta\u0301 compuesta por las letras minu\u0301sculas ( excluyendo la n\u0303) , n es el taman\u0303o de s.",
    "output": "Para cada caso debes imprimir \" SI\" ( sin comillas) si es posible convertir la string s en un pali\u0301ndromo eliminando a lo ma\u0301s un cara\u0301cter o \" NO\" ( sin comillas) en caso contrario.",
    "note": "",
    "topics": [
      "strings"
    ],
    "id": 13024
  },
  {
    "title": "Extensi\u00f3n de Lalito",
    "url": "https://omegaup.com/arena/problem/extension",
    "history": "# Enunciado! [ meme] [ 1] A Lalito le molesta mucho la gente que, en redes sociales, escribe las palabras mezclando mayu\u0301sculas y minu\u0301sculas, tratando de burlarse de alguien. Decidido a que esto no le quite ma\u0301s de su energi\u0301a, se dispuso a programar una extensio\u0301n para su navegador favorito que va a cambiar cada palabra a solo mayu\u0301sculas o solo minu\u0301sculas, de manera que se cambie la menor cantidad de letras posible. Por ejemplo, la palabra ` PrIgrIMIR` se debe de cambiar por ` PRIGRIMIR` , y la palabra ` ibiRrIDi` por ` ibirridi` . Si una palabra contiene la misma cantidad de mayu\u0301sculas que de minu\u0301sculas, entonces se tiene que poner la palabra en puras minu\u0301sculas. Por ejemplo, la palabra ` iS` quedari\u0301a como ` is` . Ayuda a Lalito a programar esta parte de la extensio\u0301n.",
    "input": "La primera li\u0301nea contiene s, una cadena que consiste en letras mayu\u0301sculas y minu\u0301sculas. Ninguna letra tiene acentos, y no puede ser n\u0303. La longitud de s esta\u0301 entre 1 y 100 letras.",
    "output": "Imprime la palabra corregida, segu\u0301n lo establecido arriba.",
    "note": "",
    "topics": [
      "strings"
    ],
    "id": 13013
  },
  {
    "title": "Buscando el terreno ideal",
    "url": "https://omegaup.com/arena/problem/2da-ccp-terreno",
    "history": "Deseas construir un nuevo complejo turi\u0301stico y esta\u0301s buscando comprar un buen terreno. Acudiste a una agencia de bienes rai\u0301ces y e\u0301sta te proporciono\u0301 una lista de terrenos en venta. Cada terreno esta\u0301 descrito mediante una cadena formada por caracteres ` - ` ` / ` y ` q\u0300ue denotan una seccio\u0301n plana, una elevacio\u0301n y un hundimiento de terreno, respectivamente. La descripcio\u0301n del terreno toma como referencia el nivel del mar y el terreno se considera u\u0301til si tiene alguna zona construi\u0301ble. Una zona construi\u0301ble es una zona de al menos 10 secciones planas consecutivas que adema\u0301s no esta\u0301 por debajo del nivel de mar y tampoco esta\u0301 ma\u0301s de 5 unidades de altura por encima del nivel del mar. Dada la lista de terrenos que te ofrecen, determina cua\u0301les te podri\u0301an servir para construir tu complejo turi\u0301stico.",
    "input": "Un entero N seguido de N cadenas. Puedes suponer que 0 \u2264 N \u2264 1000 y que todas las cadenas tienen una longitud ma\u0301xima de 500 caracteres.",
    "output": "Para cada terrero dado, imprimir ` SI` si el terreno es u\u0301til y ` NO` en caso contrario.",
    "note": "",
    "topics": [
      "implementation",
      "strings"
    ],
    "id": 12980
  },
  {
    "title": "Compresiones Ineficientes",
    "url": "https://omegaup.com/arena/problem/Compresiones-Ineficientes",
    "history": "> # Descripcio\u0301n> > Un di\u0301a mientras estabas en la biblioteca, te encontraste con un libro> antiguo que habla sobre algoritmos que se utilizaban comu\u0301nmente en> sistemas muy viejos. Mientras lei\u0301as dicho libro te topaste con un> algoritmo peculiar que realizaba compresiones sobre archivos binarios. > > > Suponiendo que se tiene una secuencia binaria: > > > > - Al encontrar un bit encendido ( un ) , se cuantifica el total de dichos bits consecutivos. Una vez que se termine de contar se> > escribe el numero obtenido, al lado de una letra . > > > > - Al encontrar un bit apagado ( un ) , se cuantifica el total de dichos bits consecutivos. Una vez que se termine de contar se> > escribe el numero obtenido, al lado de una letra . > > Despue\u0301s de analizarlo un rato notaste que dicho algoritmo resulta> ineficiente en algunos casos. Asi\u0301 como pueden haber compresiones> magnificas ( * * eficientes* * ) , tambie\u0301n pueden existir ocasiones donde el> taman\u0303o de la secuencia aumente en lugar de disminuir ( a esto se le> denomina \" * * compresio\u0301n ineficiente* * \" ) . > * * Nota: * * Si al realizar una compresio\u0301n la secuencia resultante se queda del mismo taman\u0303o, esta se considera * * Ineficiente* * . > > Como estas interesado en este tipo de temas, decidiste implementar> dicho algoritmo para determinar si la compresio\u0301n de alguna secuencia> sera eficiente o no. > > # Problema> > A partir de una secuencia dada, determina si aplicar dicho algoritmo> resulta eficiente o no. > \u2014\u2014\u2014- > # Entrada> > En la primera linea, un entero n ( 1 \u2a7d n \u2a7d 10^ 5) - > la cantidad de di\u0301gitos en la secuencia. > > En la segunda linea, n nu\u0301meros consecutivos - los digitos que> conforman la secuencia binaria. Se garantiza que estos solo pueden> tener el valor de un o un > > # Salida> > En la primera linea, una secuencia de caracteres y di\u0301gitos - el> resultado de aplicar dicho sistema de compresio\u0301n a la secuencia> original. > > En la segunda linea, una secuencia de caracteres - el estado de la> compresio\u0301n. Dependiendo cual sea el caso, puede ser> < kbd> Eficiente< / kbd> o < kbd> Ineficiente< / kbd> . \u2014\u2014\u2014-",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "implementation",
      "strings"
    ],
    "id": 12959
  },
  {
    "title": "Sobreescribiendo cadenas de longitud variable",
    "url": "https://omegaup.com/arena/problem/Sobreescribiendo-cadenas-de-long",
    "history": "Tu empresa cuenta con una base de datos de cadenas de longitud variable, pero un programa que alguien hizo la corrompio\u0301. Originalmente, la base de datos teni\u0301a cadenas de letras minu\u0301sculas terminadas por barras verticales ` | ` ( por ejemplo ` hola| gatito| adios| ` ) y un programa era el responsable de sobreescribir las cadenas. Sin embargo, ese programa no valido\u0301 que la cadena a usar para sobreescribir una cadena existente fuera de longitud menor o igual la cadena que iba a ser modificada. Por ejemplo, despue\u0301s de sobreescribir la cadena ` gatito` con la cadena ` cachorros` , la base de datos quedo\u0301 ` hola| cachorrosios| ` y se perdio\u0301 informacio\u0301n valiosa. Afortunadamente, cuentas con un respaldo antiguo de la base de datos y con la lista de modificaciones que se le hicieron. Tu labor sera\u0301 implementar un programa que modifique la base de datos correctamente. La operacio\u0301n de sobreescribir una cadena existente con una ma\u0301s grande debe fallar y debe sustituir todos los caracteres de cadena existente con ` X` . La operacio\u0301n de sobreescribir una cadena existente con una cadena de taman\u0303o menor o igual debe tener e\u0301xito y adema\u0301s debe sustituir los caracteres sobrantes de la cadena existente con espacios.",
    "input": "La primera li\u0301nea contendra\u0301 la cadena que representa el respaldo antiguo de la base de datos. La siguiente li\u0301nea contendra\u0301 un entero N. Posteriormente se dan las N operaciones de modificacio\u0301n sobre la base de datos. Cada operacio\u0301n esta\u0301 representada con un entero I y una cadena alfabe\u0301tica S, donde I es el i\u0301ndice de la cadena de la base de datos que se debe sobreescribir con S. Las cadenas de la base de datos esta\u0301n numeradas impli\u0301citamente a partir de 0. Puedes suponer que la base de datos guarda un ma\u0301ximo de 25 cadenas, que 0 \u2264 N \u2264 20, que el valor de I es va\u0301lido y que la longitud ma\u0301xima de S y de cada cadena individual de la base de datos es de 10^ 6 caracteres.",
    "output": "Una cadena que sea la representacio\u0301n de la base de datos final.",
    "note": "",
    "topics": [
      "strings",
      "*special"
    ],
    "id": 12902
  },
  {
    "title": "El desfile de perritos (alternativo)",
    "url": "https://omegaup.com/arena/problem/El-desfile-de-perritos-alternati",
    "history": "Esta\u0301s por organizar el desfile anual de perritos y quieres que salga perfecto. Ya cuentas con los nombres de N perritos que desfilara\u0301n, pero desafortunadamente hay muchos perritos que se llaman igual y eso puede prestarse a confusiones, por lo que quieres evitar que dos perritos con el mismo nombre este\u0301n en el escenario al mismo tiempo. El escenario tiene espacio para E perritos y la idea es que los perritos desfilen de izquierda a derecha, de modo que cuando salga un perrito del escenario, vaya entrando el siguiente. Por ejemplo, si E= 3 entonces entrara\u0301n al escenario los perritos 1, 2, y 3; despue\u0301s saldra\u0301 el perrito 1 para que pueda entrar el 4, despue\u0301s saldra\u0301 el perrito 2 para que pueda entrar el 5, etce\u0301tera. Faltan pocas horas para el desfile y quisieras simularlo con la lista de nombres que ya tienes, para asi\u0301 saber si el orden actual cumplira\u0301 con tus expectativas o si ocurrira\u0301 en algu\u0301n momento lo que quieres evitar. Escribe un programa que te ayude a determinarlo. ! [ enter image description here] [ 1]",
    "input": "Dos enteros N y E seguidos de los nombres de los N perritos que desfilara\u0301n. Puedes suponer que E \u2264 N, que 1 \u2264 E \u2264 10^ 4 y que 1 \u2264 N \u2264 10^ 6.",
    "output": "Si dos perritos con el mismo nombre estara\u0301n en el escenario al mismo tiempo, tu programa debe imprimir el mensaje \" * * ` Habran dos perritos con el nombre ` * P* ` al mismo tiempo` * * \" , donde P es el nombre de los perritos involucrados. So\u0301lo debes imprimir ese mensaje la primera vez que ocurra esta situacio\u0301n. Si lo anterior no ocurrira\u0301, tu programa debe imprimir el mensaje \" * * ` El desfile de perritos estara bien hecho` * * \" .",
    "note": "",
    "topics": [
      "strings",
      "data structures"
    ],
    "id": 12856
  },
  {
    "title": "El desfile de perritos (original)",
    "url": "https://omegaup.com/arena/problem/El-desfile-de-perritos",
    "history": "Esta\u0301s por organizar el desfile anual de perritos y quieres que salga perfecto. Ya cuentas con los nombres de N perritos que desfilara\u0301n, pero desafortunadamente hay muchos perritos que se llaman igual y eso puede prestarse a confusiones, por lo que quieres evitar que dos perritos con el mismo nombre este\u0301n en el escenario al mismo tiempo. El escenario tiene espacio para E perritos y la idea es que los perritos desfilen de izquierda a derecha, de modo que cuando salga un perrito del escenario, vaya entrando el siguiente. Por ejemplo, si E= 3 entonces entrara\u0301n al escenario los perritos 1, 2, y 3; despue\u0301s saldra\u0301 el perrito 1 para que pueda entrar el 4, despue\u0301s saldra\u0301 el perrito 2 para que pueda entrar el 5, etce\u0301tera. Faltan pocas horas para el desfile y quisieras simularlo con la lista de nombres que ya tienes, para asi\u0301 saber si el orden actual cumplira\u0301 con tus expectativas o si ocurrira\u0301 en algu\u0301n momento lo que quieres evitar. Escribe un programa que te ayude a determinarlo. ! [ enter image description here] [ 1]",
    "input": "Dos enteros N y E seguidos de los nombres de los N perritos que desfilara\u0301n. Puedes suponer que 0 \u2264 E \u2264 N \u2264 10^ 4.",
    "output": "Si dos perritos con el mismo nombre estara\u0301n en el escenario al mismo tiempo, tu programa debe imprimir el mensaje \" * * ` Habran dos perritos con el nombre ` * P* ` al mismo tiempo` * * \" , donde P es el nombre de los perritos involucrados. So\u0301lo debes imprimir ese mensaje la primera vez que ocurra esta situacio\u0301n. Si lo anterior no ocurrira\u0301, tu programa debe imprimir el mensaje \" * * ` El desfile de perritos estara bien hecho` * * \" .",
    "note": "",
    "topics": [
      "sortings",
      "strings"
    ],
    "id": 12854
  },
  {
    "title": "Compresi\u00f3n de cadenas (f\u00e1cil)",
    "url": "https://omegaup.com/arena/problem/Compresion-de-cadenas-facil",
    "history": "Dada una cadena S, diremos que una subcadena de S es homoge\u0301nea si no es vaci\u0301a y todos sus caracteres son iguales. Cuando no es posible agrandar una subcadena homoge\u0301nea por ninguno de sus dos extremos, diremos que la subcadena es homoge\u0301nea maximal. Por ejemplo, la secuencia de subcadenas homoge\u0301neas maximales de aabccccbaaa es ( aa, b, cccc, b, aaa) . Cuando la cadena S consta u\u0301nicamente de caracteres alfabe\u0301ticos, es posible comprimirla usando el algoritmo que se describe a continuacio\u0301n. Sea x_ i la i- e\u0301sima subcadena homoge\u0301nea maximal de S: - Si la longitud de x_ i es N = 1, entonces la representacio\u0301n comprimida de x_ i es x_ i misma. - Si la longitud de x_ i es N \u2265 2, entonces la representacio\u0301n comprimida de x_ i consta de los di\u0301gitos en decimal y sin ceros a la izquierda del entero N, seguidos del caracter que se repite en x_ i. La representacio\u0301n comprimida de S es la secuencia de las representaciones comprimidas de sus subcadenas homoge\u0301neas maximales. Escribe un programa que sea capaz de comprimir y descomprimir cadenas segu\u0301n la especificacio\u0301n anterior.",
    "input": "La entrada inicia con el caracter P y un espacio. El resto de la entrada contiene una secuencia de caracteres ASCII, la cual debe procesarse hasta el fin de archivo. Si P = ' C' entonces la secuencia denota una cadena que se desea comprimir. Si P = ' D' entonces la secuencia denota una cadena comprimida la cual se desea descomprimir. Puedes suponer que las cadenas son va\u0301lidas segu\u0301n la especi\u0301ficacio\u0301n y que ninguna cadena ( tanto la de la entrada como la de la salida) supera los 10^ 4 caracteres.",
    "output": "Si P = ' C' entonces debera\u0301 imprimirse la representacio\u0301n comprimida de la cadena dada en la entrada. Si P = ' D' entonces debera\u0301 imprimirse la cadena descrita por la representacio\u0301n comprimida dada en la entrada.",
    "note": "",
    "topics": [
      "*special",
      "strings"
    ],
    "id": 12818
  },
  {
    "title": "Gobierno De Mexico 1",
    "url": "https://omegaup.com/arena/problem/Gobierno-De-Mexico-1",
    "history": "Has sido contratado para trabajar en el gobierno de MEXICO, y te asignaron a trabajar con un grupo de ingenieros que se encargan de administrar la base de datos. Se dividieron el trabajo y a ti te toco crear el software que valida las CURP de las personas. A continuacio\u0301n se muestra las caracteri\u0301sticas de la CURP. ! [ CURP] [ 2]",
    "input": "- Una cadena de texto de longitud variable que se quiere validar si una CURP. ( Maximo 50 chars) - Nombre de la Persona ( Maximo 50 chars) - Fecha de Nacimiento de la persona con el siguiente formato DD- MM- YY ( Dia- Mes- An\u0303o) . ( Siempre es el mismo formato y la misma longitud) - Clave de Entidad de Nacimiento ( Siempre son 2 letras)",
    "output": "se imprimira ' valido' si la curp tiene un formato correcto, en caso contrario se imprime ' invalido' # Ejemplos| | inputRARP970721HTSMYD06JOSE PEDRO RAMIREZ REYES21- 07- 1997TS| | outputvalido| | inputRARP970721HTSMYD06JOSE PEDRO RAMIREZ REYES21- 07- 1996SS| | outputinvalido| | endCreated By [ ITM Developers] [ 1] [ 1] : https: / / bayronvazquez. github. io/ BayronVazquez/",
    "note": "",
    "topics": [
      "dfs and similar",
      "implementation",
      "strings",
      "dp"
    ],
    "id": 12681
  },
  {
    "title": "saludar",
    "url": "https://omegaup.com/arena/problem/saludar",
    "history": "Pepe Python se siente muy solo en la terminal y le vendri\u0301a bien un saludo, por que\u0301 no le dices \" hola\" :",
    "input": "El programa debe recibir * * hola* * como entrada",
    "output": "El programa debe imprimir * * hola* * tambie\u0301n.",
    "note": "",
    "topics": [
      "strings"
    ],
    "id": 12628
  },
  {
    "title": "ASCII Codificado en Binario",
    "url": "https://omegaup.com/arena/problem/ASCII-Codificado-en-Binario",
    "history": "Has sido contratado para una compan\u0303ia de Seguridad Cibernetica, se te ha asignado la tarea de analizar un archivo binario ( . EXE) del cual se sospecha que es un virus, como buen hacker que eres le vas a realizar Ingenieria Inversa al archivo para extraer todas las cadenas de texto que se encuentran dentro del archivo, pero por alguna razon tienes instalado Windows en lugar de Linux ( No se por que encerio ya cambiate a Linux) , y como no tienes linux no puedes usar la Herramienta BinWalk, asi que tendras que hacer un programa que lea texto, este texto sera solo 0 y 1, y representa los datos binarios del ejecutable, tu tarea es convertir esos grupos de 0 y 1 a letras he imprimir la traduccion en la Salida ( stdout) . los bits estaran en grupos de 8 y cada 8 bits simboliza un carater en codificacion ASCII. Por ejemplo: > 01000101 01111000 01100001 01101101 01110000 01101100 01100101En el texto anterior compuesto de 0 y 1. agrupados en 8, y codificados en ASCII, Representa la palabra: > ExamplePuedes usar esta herramienta WEB para traducir de binario a ASCII. [ Binary To ASCII] [ 1] . Tambien se recomienda que investigues sobre el container bitset en c+ + . [ Bitset] [ 2]",
    "input": "Una cantidad variable de caracteres que representa a un texto en binario codificado en ASCII.",
    "output": "El texto traducido en Formato ASCII",
    "note": "",
    "topics": [
      "strings"
    ],
    "id": 12597
  },
  {
    "title": "Cadena de m\u00e1xima frecuencia",
    "url": "https://omegaup.com/arena/problem/Cadena-de-maxima-frecuencia",
    "history": "Recibira\u0301s una secuencia de N cadenas de la forma c_ 1c_ 2@ c_ 3c_ 4 donde los caracteres c_ i pueden ser letras minu\u0301sculas o di\u0301gitos. Escribe un programa que determine que\u0301 cadena aparece ma\u0301s veces. En caso de que varias cadenas aparezcan la misma cantidad de veces, cualquiera de ellas se considerara\u0301 una respuesta va\u0301lida.",
    "input": "Un entero N seguido de las N cadenas. Puedes suponer que 1 \u2264 N \u2264 10^ 7.",
    "output": "La cadena que aparece ma\u0301s veces, seguida de la cantidad de veces que aparece.",
    "note": "",
    "topics": [
      "strings",
      "hashing"
    ],
    "id": 12566
  },
  {
    "title": "Sopa de consonantes, vocales y numeros",
    "url": "https://omegaup.com/arena/problem/Sopa-consonantes-vocales-y-num",
    "history": "Alicia es una lectora de libros y dentro de sus aficiones esta el contar de algunos pa\u0301rrafos de su intere\u0301s las consonantes, vocales y nu\u0301meros ( 0. . 9) , ayu\u0301dale a escribir un programa que le facilite esta tarea que suele ser bastante aburrida.",
    "input": "La primer linea contiene un numero entero N positivo que representa la cantidad de lineas de texto que tiene el pa\u0301rrafo. las siguiente N linea son el texto que se pretende analizar. El texto puede contener mayu\u0301sculas, minu\u0301sculas y cualquier otro caracteres como si\u0301mbolos de puntuacio\u0301n.",
    "output": "En la salida se esperan 3 nu\u0301meros enteros que representan el numero de consonantes, vocales y nu\u0301meros.",
    "note": "",
    "topics": [
      "strings"
    ],
    "id": 12524
  },
  {
    "title": "La canci\u00f3n de la sopa de tortuga",
    "url": "https://omegaup.com/arena/problem/La-cancion-de-la-sopa-de-tortuga",
    "history": "El Grifo le pregunto\u0301 a Alicia si preferi\u0301a intentar bailar la cuadrilla de la langosta u oir cantar a la Falsa Tortuga. Emocionada, Alicia eligio\u0301 la cancio\u0301n. El Grifo le pidio\u0301 a la Falsa Tortuga que cantara \" Sopa de tortuga\" , a lo que la Falsa Tortuga accedio\u0301, no sin antes preguntar \u00bfcon cua\u0301ntas tortugas? Como ni Alicia ni el Grifo entendi\u0301an la pregunta, la Falsa Tortuga comenzo\u0301 a explicar que el coro de la cancio\u0301n \" Sopa de tortuga\" consiste so\u0301lo de dos frases, a saber, \" Hermosa sopa\" y \" Sopa nocturna\" ( que nosotros representaremos con las letras ` h` y ` n` respectivamente) . La primera tortuga puede elegir cantar cualquier sucesio\u0301n de estas frases. Cada una de las dema\u0301s tortugas tomara\u0301 lo que canto\u0301 la anterior y reemplazara\u0301 cada ` h` por ` nh` y cada ` n` por ` hh` . Si se sabe lo que canto\u0301 la primera tortuga y hay un total de T tortugas, \u00bfque\u0301 coro cantara\u0301 la u\u0301ltima?",
    "input": "En la primera li\u0301nea, el entero T. En la segunda li\u0301nea, el coro que canto\u0301 la primera tortuga, dado como una cadena que consta so\u0301lo de los caracteres ` h` y ` n` .",
    "output": "El coro que cantara\u0301 la u\u0301ltima tortuga. # RangosPuedes suponer que T \u2265 1 y que la respuesta se puede representar con un millo\u0301n de caracteres o menos.",
    "note": "",
    "topics": [
      "implementation",
      "strings"
    ],
    "id": 12487
  },
  {
    "title": "Subsecuencias TNT",
    "url": "https://omegaup.com/arena/problem/Subsecuencias-TNT",
    "history": "Unos cienti\u0301ficos malvados quieren explotar toda la ciudad con dinamita, por lo que han juntado varias herramientas, ingredientes y compuestos a lo largo de una mesa, todos en fila. Tu\u0301 quieres detenerlos, asi\u0301 que has entrado en su laboratorio y te detuviste frente a la mesa para esconder la TNT y que no puedan producir la dinamita, pero como buen matema\u0301tico que eres, te pusiste a calcular de cua\u0301ntas formas se puede formar TNT con lo que encontraste en la mesa. # ProblemaDada una cadena de caracteres ( los objetos e ingredientes en la mesa) , encuentra la cantidad de subsecuencias que son exactamente TNT. Una subsecuencia es una secuencia que puede obtenerse de otra eligiendo cero o ma\u0301s elementos no necesariamente consecutivos, pero respetando el orden de aparicio\u0301n. Por ejemplo, para la secuenciaHOTLANT, son subsecuencias: - HOTLANT- TNT- HOLA- LANY las siguientes no son subsecuencias de HOTLANT: - TNALTOH- ALTO- TAO- TLOH",
    "input": "Una cadena de caracteres de longitud N que representan los objetos en la mesa. La cadena solo contendra\u0301 caracteres del alfabeto ingle\u0301s en mayu\u0301sculas.",
    "output": "La cantidad de subsecuencias en la cadena que son exactamente TNT.",
    "note": "",
    "topics": [
      "implementation",
      "dp",
      "strings"
    ],
    "id": 12475
  },
  {
    "title": "Tiene 30",
    "url": "https://omegaup.com/arena/problem/Tiene-30",
    "history": "# DescripcionCarina es de esas personas que recuerda que nacio\u0301 un di\u0301a mie\u0301rcoles. . . , adema\u0301s tiene 32 an\u0303os, asi\u0301 que para algunos todavi\u0301a es \" joven\" y para otros ya es \" vieja\" ! ( no hay dudas que la edad es una cuestio\u0301n relativa, no? , o\u0301 casi. . . ) . Adema\u0301s ella sabe algunas \" reglas nemote\u0301cnicas\" y puede decirte sin equivocacio\u0301n cuantos di\u0301as tiene cada mes del an\u0303o. Marcos, que es amigo de Carina y estudia Ingenieri\u0301a, quiere codificar un programa para impresionarla ( Marcos esta\u0301 enamorado de Carina, asi\u0301 que no le preocupa su edad. . . , aunque Marcos tiene 18) y de paso, ver si Carina sabe tanto sobre los meses como aparenta. Marcos estudia ingenieri\u0301a electro\u0301nica, y como sabe que los estudiantes de ISI son buenos programando, te ha pedido que arme\u0301s \" el programita\" .",
    "input": "El programa debe procesar un u\u0301nico caso de entrada. Cada caso de entrada consiste de u\u0301nicamente una li\u0301nea con el nombre de un mes, en mayu\u0301sculas.",
    "output": "Como salida tu programa debe informar \" Tiene 30! \" en caso que el mes ingresado corresponda a un mes que tiene 30 di\u0301as, o \" No Tiene 30! \" en caso contrario. | | inputFEBRERO| | outputNo Tiene 30! | | inputSETIEMBRE| | outputTiene 30! | | end",
    "note": "",
    "topics": [
      "strings"
    ],
    "id": 12445
  },
  {
    "title": "Cadena Reflex and Duplex",
    "url": "https://omegaup.com/arena/problem/Cadena-Reflex-and-Duplex",
    "history": "# DescripcionA Mari\u0301a le encanta hacer figuras de papel siguiendo diferentes disen\u0303os que encontro\u0301 en un libro de Origami. . . , quiza\u0301s ahi\u0301 esta\u0301 el origen de este problema. Ella disen\u0303o\u0301 un programa que realiza N \" pliegues\" sobre una cadena O original ingresada por teclado, cada pliegue consiste en agregar al final de la cadena, la misma cadena pero invertida. Asi\u0301, si la cadena original es \" aab\" , despue\u0301s del primer pliegue se convierte en \" aabbaa\" . En cada caso de prueba, se ingresan tres datos de entrada: la cadena O original ( que no puede tener ma\u0301s de 10 caracteres) , un valor entero que indica la cantidad P ( 1< = P< = 5 ) de pliegues a realizar, y una cadena C contra la cual se debera\u0301 controlar la cadena generada a partir de O luego del proceso de pliegues, para ver si C coincide con la cadena generada. . . . . Mejor, veamos un ejemplo: Si los datos de entrada son: aab3aabbaaaabbaaaabbaaaabbaase debera\u0301 imprimir \" Eureka! \" como salida, ya que la cadena O ingresada, despue\u0301s de 3 pliegues se convierte en la cadena C de control.",
    "input": "El programa debe procesar un u\u0301nico caso de entrada. Cada caso de entrada consiste en tres li\u0301neas, la primera contiene la cadena O original, la segunda contiene un valor entero que indica la cantidad de pliegues a realizar, y la tercera contiene una cadena de caracteres C ( segu\u0301n la descripcio\u0301n) .",
    "output": "La salida consistira\u0301 de una li\u0301nea indicando \" Eureka! \" o\u0301 \" not Eureka! \" , segu\u0301n sean iguales o\u0301 no, la cadena generada y la cadena C. | | inputab2abbaabba| | outputEureka! | | inputXy4XyyXXyyXXyyXXyxX| | outputnot Eureka! | | end",
    "note": "",
    "topics": [
      "strings"
    ],
    "id": 12437
  },
  {
    "title": "El Diego siempre estar\u00e1",
    "url": "https://omegaup.com/arena/problem/El-Diego-siempre-estara",
    "history": "# DescripcionEl DIEGO siempre estara\u0301! ! ! , pero cua\u0301ntas veces ? Habra\u0301 en estos momentos algu\u0301n otro ser humano del que se hayan escrito tantas cosas como de DIEGO Armando ? ? ? , ma\u0301s alla\u0301 de su reconocimiento mundial, para los argentinos el DIEGO es una cuestio\u0301n de sentimiento y emocio\u0301n, para nosotros siempre estara\u0301! ! ! En este problema se leera\u0301n N li\u0301neas de entrada, cada una de las cuales puede tener hasta 10000 caracteres ( cada cara\u0301cter so\u0301lo puede ser una letra mayu\u0301scula, una minu\u0301scula, un di\u0301gito o\u0301 un espacio) , y tu algoritmo debe informar, para cada li\u0301nea, la cantidad de veces que \" DIEGO\" aparece en dicha li\u0301nea. Vamos a considerar una aparicio\u0301n de \" DIEGO\" , cuando esta cadena pueda ser armada porque todas sus letras aparecen en alguna posicio\u0301n de la li\u0301nea, de izquierda a derecha, todas en mayu\u0301sculas, y en el orden correcto para formar \" DIEGO\" . ( entre cada una de las letras de \" DIEGO\" pueden aparecer otras letras u espacios u di\u0301gitos) . Una vez que encontramos una aparicio\u0301n de \" DIEGO\" , las letras que armaron esa aparicio\u0301n no pueden contarse para ninguna otra aparicio\u0301n! ( no so\u0301lo el \" DIEGO\" es u\u0301nico, sus apariciones tambie\u0301n! ! ! ) .",
    "input": "La primer li\u0301nea de entrada contendra\u0301 el valor N. Luego vendra\u0301n N li\u0301neas cada una conteniendo una cadena de caracteres de no ma\u0301s de 10000 caracteres, segu\u0301n la descripcio\u0301n de arriba)",
    "output": "Para cada una de las N li\u0301neas de entrada, se debe imprimir la cantidad de veces que aparecio\u0301 \" DIEGO\" ( segu\u0301n lo descripto) , como un valor entero, en li\u0301neas separadas. | | input1Mexico 86 DIEGO| | output1| | input2DIE ARGENTINA GOLDIDIOLE OLE GOL GENIO| | output12| | end",
    "note": "",
    "topics": [
      "strings",
      "string suffix structures"
    ],
    "id": 12436
  },
  {
    "title": "Ordinal numereishons",
    "url": "https://omegaup.com/arena/problem/Ordinal-numereishons",
    "history": "Un di\u0301a aburrido en su casa, Eduardo decidio\u0301 que queri\u0301a aprender ingle\u0301s. El tema por el que quiso empezar es el de los nu\u0301meros ordinales, que son aquellos que usamos para indicar la posicio\u0301n de un objeto en una lista. Por ejemplo: primero, tercero, vige\u0301simo se\u0301ptimo, etc. Eduardo se dio cuenta de que, en ingle\u0301s, estos nu\u0301meros se pueden representar con abreviaturas, formado por el nu\u0301mero escrito en su representacio\u0301n decimal comu\u0301n y agregando un sufijo, el cual se elije de la siguiente forma: - Si el nu\u0301mero termina en 1, y sus dos u\u0301ltimos di\u0301gitos no son 11, el sufijo es \" st\" . Algunos ejemplos son 1st, 21st y 101st. - Si el nu\u0301mero termina en 2, y sus dos u\u0301ltimos di\u0301gitos no son 12, el sufijo es \" nd\" . Algunos ejemplos son 2nd, 22nd y 102nd. - Si el nu\u0301mero termina en 3, y sus dos u\u0301ltimos di\u0301gitos no son 13, el sufijo es \" rd\" . Algunos ejemplos son 3rd, 23rd y 103rd. - Para cualquier otro nu\u0301mero, el sufijo siempre es \" th\" , Algunos ejemplos son 5th, 11th, y 178th. A Eduardo se le ocurrio\u0301 que se podri\u0301a hacer un programa que le agregue los sufijos a esos nu\u0301meros. Sin embargo, su mente ya esta\u0301 cansada por el esfuerzo bilingu\u0308e, asi\u0301 que te ha pedido que lo hagas.",
    "input": "Una u\u0301nica li\u0301nea con un entero n, tal que 1 \u2264 n \u2264 1000",
    "output": "La abreviatura del nu\u0301mero ordinal en ingle\u0301s que corresponde a n",
    "note": "",
    "topics": [
      "strings"
    ],
    "id": 12374
  },
  {
    "title": "Encuestando a la gente de la cola",
    "url": "https://omegaup.com/arena/problem/Encuestando-a-la-gente-de-la-col",
    "history": "Acaba de estrenarse la consola de videjuegos de moda y hay mucha gente formada para comprarla en la venta nocturna. Los encargados de la tienda aprovechara\u0301n la gran afluencia para hacer una encuenta y saber cua\u0301ntas personas de la cola se llaman igual. Ayu\u0301dalos a escribir un programa que contesta a esta pregunta. Tu programa debera\u0301 procesar una secuencia de N eventos de los siguientes tipos: - ` E ` C: se formo\u0301 un cliente con nombre C en la cola. - ` P` C: se desea conocer cua\u0301ntas personas actualmente formadas en la cola tienen C por nombre. - ` S` : se atendio\u0301 al siguiente cliente de la cola.",
    "input": "Un entero N seguido de los N eventos a procesar. Puedes suponer que 0 \u2264 N \u2264 500000, que todos los nombres esta\u0301n formados exclusivamente por entre 4 y 8 letras mayu\u0301sculas y que so\u0301lo se atienden clientes cuando hay gente formada.",
    "output": "Para cada evento del tipo ` P` , la cantidad de personas formadas con el nombre dado.",
    "note": "",
    "topics": [
      "strings",
      "data structures",
      "hashing",
      "trees"
    ],
    "id": 12351
  },
  {
    "title": "Juan y las cajas Parte 2",
    "url": "https://omegaup.com/arena/problem/Juan-y-las-cajas-Parte-2",
    "history": "Juan ya ha podido juntar las cajas y las esta repartiendo. Pero para comprobar que la persona que recibe la caja es a quien iba dirigida, la empresa de Juan disen\u0303o un sistema muy simple, le dan una palabra en letras minusculas y una letra para luego preguntarle cuanto mide la palabra y cuantas veces aparece la letra. Pero juan no tiene las respuestas porque perdio la lista cuando se cayeron las cajas, por lo que te ha pedido tu ayuda para que les digas las respuestas de los codigos y el pueda preguntarselo a los duen\u0303os de las cajas.",
    "input": "En la primer linea una palabra de longitud x. En la segunda linea un caracter n.",
    "output": "Dos lineas una diciendo la longitud de la palabra y la segunda diciendo cuantas veces aparece el caracter que se pregunta",
    "note": "",
    "topics": [
      "strings"
    ],
    "id": 12330
  },
  {
    "title": "Operaciones con cadenas",
    "url": "https://omegaup.com/arena/problem/Operaciones-con-cadenas",
    "history": "En este problema debes hacer m numero de operaciones operaciones sobre una cadena de longitud n que contiene solo caracteres de la \u2018a\u2019 a la \u2018z\u2019 en minu\u0301sculas. Estas operaciones, segu\u0301n se piden pueden ser: \u2018B\u2019, buscar un cara\u0301cter en especifico e imprimir el numero total de veces que aparece en la cadena. \u2018O\u2019, imprimir todos los caracteres de la cadena en orden alfabe\u0301tico ( debes conservar la cadena original) . \u2018I\u2019, imprimir todos los caracteres de la cadena en orden alfabe\u0301tico invertido. \u2018C\u2019, concatenar la cadena original con una cadena de taman\u0303o l e imprimir la nueva cadena. \u2018T\u2019, terminar y salir.",
    "input": "Una cadena, seguida de las operaciones a realizar, separadas por renglones.",
    "output": "El resultado de cada operacio\u0301n segu\u0301n se pida.",
    "note": "",
    "topics": [
      "strings"
    ],
    "id": 12329
  },
  {
    "title": "Analizando y transformando una cadena",
    "url": "https://omegaup.com/arena/problem/Analizando-y-transformando-una-c",
    "history": "Escribe un programa que lea una li\u0301nea de texto y que: - Calcule la longitud de la li\u0301nea y la cantidad de espacios que hay en ella. - Cambie las letras mayu\u0301sculas por minu\u0301sculas, y viceversa. - Incremente en uno cada di\u0301gito de la li\u0301nea ( excepto los di\u0301gitos * 9* , que se quedan como esta\u0301n) .",
    "input": "Una li\u0301nea de texto de a lo mucho 50 caracteres de longitud. Puedes suponer que la li\u0301nea incluye letras, di\u0301gitos, espacios sencillos y si\u0301mbolos de puntuacio\u0301n. El salto de li\u0301nea no se considera parte de la entrada.",
    "output": "En la primera li\u0301nea, dos enteros que correspondan con el taman\u0303o de la li\u0301nea y la cantidad de espacios que hay en ella, respectivamente. En la segunda li\u0301nea, la li\u0301nea despue\u0301s de ser modificada.",
    "note": "",
    "topics": [
      "strings"
    ],
    "id": 12276
  },
  {
    "title": "Unicornio",
    "url": "https://omegaup.com/arena/problem/Unicornio",
    "history": "A Jimena le encanta la palabra \" unicornio\" y la escribe por todas partes. A veces le gusta escribirla con algunas letras en mayu\u0301scula y otras letras en minu\u0301scula. Y en ocasiones la escribe tan ra\u0301pido que tiene errores: escribe alguna letra equivocada o escribe letras de menos. Dada una de estas palabras escritas por Jimena, escribe un programa que determine en cua\u0301l de los siguientes casos nos encontramos: - Si la palabra es correcta ( salvo cambios de mayu\u0301sculas y minu\u0301sculas) , imprime 0. - Si la palabra tiene 9 letras pero alguna es incorrecta, imprime la primera letra que difirio\u0301 de \" unicornio\" . - Si la palabra tiene N letras menos que \" unicornio\" , imprime - N.",
    "input": "Un intento de Jimena de escribir la palabra \" unicornio\" . Tendra\u0301 a lo ma\u0301s 9 letras y puede que tenga algunas letras en mayu\u0301scula y otras en minu\u0301scula.",
    "output": "La correspondiente al caso de la palabra de entrada.",
    "note": "",
    "topics": [
      "strings"
    ],
    "id": 12263
  },
  {
    "title": "Jabberwocky",
    "url": "https://omegaup.com/arena/problem/Jabberwocky",
    "history": "Alicia noto\u0301 que, en el mundo * a trave\u0301s del espejo* , la gente temi\u0301a a ciertas criaturas, principalmente al Jabberwock, al Jubjub y a las Roburlezas. Sin embargo, la intensidad con que la gente teme a esas criaturas vari\u0301a de persona a persona. Alicia le pregunto\u0301 a una persona a cua\u0301l de las tres criaturas le temi\u0301a ma\u0301s, luego cua\u0301l le segui\u0301a y finalmente a cua\u0301l le temi\u0301a menos. Si representamos con la \" J\" al Jabberwock, con la \" U\" al Jubjub y con la \" R\" a las Roburlezas, anota el orden de las criaturas dado por la persona.",
    "input": "Las tres palabras \" Jabberwock\" , \" Jubjub\" y \" Roburlezas\" en un orden particular, separadas por espacios.",
    "output": "Las tres letras \" J\" , \" U\" y \" R\" en el orden correspondiente a la entrada, separadas por espacios.",
    "note": "",
    "topics": [
      "implementation",
      "strings"
    ],
    "id": 12262
  },
  {
    "title": "El maestro To\u00f1o (Palabras).",
    "url": "https://omegaup.com/arena/problem/El-maestro-Tono-Palabras",
    "history": "Al profesor Ton\u0303o se le ha asignado el grupo de 2\u00b0 A de programacio\u0301n, por lo que debe aplicarles un examen de diagnostico para ver sus conocimientos obtenidos el semestre pasado. Para ello les deja el siguiente problema: Alumnos quiero que me formen una cadena de mi\u0301nimo 5 palabras y ma\u0301ximo 20, dicha cadena la va a leer su programa y como resultado les debe mostrar \" P\" mas el numero de la palabra, seguido de la palabra correspondiente.",
    "input": "Se va ingresar una cadena la cual debe contener al menos 5 palabras o mas de 20",
    "output": "Como salida se debe mostrar una P mayu\u0301scula concatenada con el numero de la palabra, un espacio en blanco y la palabra correspondiente.",
    "note": "",
    "topics": [
      "strings"
    ],
    "id": 12249
  },
  {
    "title": "El maestro To\u00f1o (Mayor a menor).",
    "url": "https://omegaup.com/arena/problem/El-maestro-Tono",
    "history": "En la clase de programacio\u0301n el profesor Ton\u0303o esta apunto de dar el tema de \" Me\u0301todos de ordenamiento\" , sin embargo antes de iniciar quizo poner aprueba sus alumnos dando el siguiente problema: Profesor Ton\u0303o: Si yo tengo esta cadena de nu\u0301meros 134563 y la quiero ordenar de mayor a menor como\u00bfCo\u0301mo quedari\u0301a? . A lo que el alumno Ahmed respondio\u0301: 654331\u00a1Correcto! Sencillo \u00bfno? ahora quiero que me creen un pequen\u0303o programa que al recibir una cadena de longitud N con nu\u0301meros del 0 al 9, me devuelva dicha cadena pero ordenada de mayor a menor.",
    "input": "Se va a ingresar una cadena conformada por nu\u0301meros del 0 al 9 ( cadena junta, sin espacios, sin comas, ni decimales) se pueden colocar nu\u0301meros repetidos. La longitud de la cadena debe ser mayor a 0 y menor a 100.",
    "output": "Como salida se obtendra\u0301 la cadena ordenada de mayor a menor ( junta, sin espacios o comas) .",
    "note": "",
    "topics": [
      "strings",
      "implementation",
      "sortings"
    ],
    "id": 12241
  },
  {
    "title": "Pancho y las Palabras",
    "url": "https://omegaup.com/arena/problem/Pancho-y-las-Palabras",
    "history": "Lamentablemente corrieron a Pancho de su empleo ( Aun no comprendo como lo consiguio\u0301 en un principio) pero Pancho no es una sapo que se rinde, asi\u0301 que ingreso en al ki\u0301nder, asi\u0301 que te pidio\u0301 ayuda con su tarea. Su maestra le dio una palabra y le pidio\u0301 que hiciera una de estas 3 opciones. * 1 Escribe el numero de caracteres que tiene la palabra* 2 Escribe cuantas vocales tiene esa palabra ( a, e, i, o, u) * 3 Escribe la palabra al reve\u0301s",
    "input": "Una palabra s y un numero representando una de las opciones antes mencionadas.",
    "output": "Una u\u0301nica linea, lo que se le haya pedido hacer",
    "note": "",
    "topics": [
      "strings"
    ],
    "id": 12232
  },
  {
    "title": "Avance tecnol\u00f3gico ",
    "url": "https://omegaup.com/arena/problem/Avance-tecnologico",
    "history": "< br/ > # Descripcio\u0301n: < br/ > Michael es un amante del cafe\u0301, tanto asi\u0301, que todos los di\u0301as en las man\u0303anas va a su cafeteri\u0301a preferida, para asi\u0301 poder degustar el manjar del cafe\u0301 para empezar su di\u0301a de manera alegre y con energi\u0301a. Recientemente, con el avance de la tecnologi\u0301a, descubrio\u0301 una nueva ma\u0301quina en la cual puede hacer su pedido y este se lo prepara y lo entrega. Cuando la maquina entrega un cafe\u0301, suponiendo que se pidio\u0301 un Esspresso, en su pantalla aparece el mensaje: \" Aqui tiene su cafe Esspresso\" < br/ > # Entrada: < br/ > Una cadena indicando el nombre del cafe\u0301 que ordeno Michael.",
    "input": "",
    "output": "< br/ > Imprime \" Aqui tiene su cafe \" + el tipo de cafe\u0301 que ordeno\u0301.",
    "note": "",
    "topics": [
      "strings"
    ],
    "id": 12165
  },
  {
    "title": "Encuentra el n\u00famero capic\u00faa",
    "url": "https://omegaup.com/arena/problem/Encuentra-el-numero-capicua",
    "history": "Un nu\u0301mero N, con di\u0301gitos ( d_ 1d_ 2 . . . d_ n) , se considera capicu\u0301a ( o pali\u0301ndromo) si es igual a su reverso, denotado como ( d_ nd_ n- 1 . . . d_ 1) . Un procedimiento que puede generar un nu\u0301mero capicu\u0301a a partir de un nu\u0301mero N es el siguiente: 1. Si N ya es capicu\u0301a, entonces terminamos. 2. Si N no es capicu\u0301a, entonces a N le sumamos su reverso. 3. El proceso anterior se repite hasta que N se considere capicu\u0301a. Toma en cuenta que au\u0301n no se sabe si siempre es posible generar un nu\u0301mero capicu\u0301a, por lo cual, si N no es capicua pero ya es mayor a 10^ 9, entonces debes detenerte e imprimir - 1.",
    "input": "Un entero N. Puedes suponer N \u2265 0.",
    "output": "Un entero que sea un capicu\u0301a o - 1 en caso de que no sea posible obtenerlo.",
    "note": "",
    "topics": [
      "implementation",
      "strings"
    ],
    "id": 12118
  },
  {
    "title": "Curso de Introducci\u00f3n a Python - Operaciones con Strings",
    "url": "https://omegaup.com/arena/problem/python_5",
    "history": "En esta sesio\u0301n, veremos un breve repaso de los Strings, para despues revisar las operaciones con Strings y los siguientes me\u0301todos: - upper( ) - lower( ) - isupper( ) - islower( ) - startswith( ) - endswith( ) - replace( ) # # Material de sesio\u0301n: < iframe width= \" 560\" height= \" 315\" src= \" https: / / www. youtube. com/ embed/ _ C- WqmmGeCg\" frameborder= \" 0\" allow= \" accelerometer; autoplay; clipboard- write; encrypted- media; gyroscope; picture- in- picture\" allowfullscreen> < / iframe> La presentacio\u0301n la puedes ver [ haciendo click aqui\u0301] ( https: / / docs. google. com/ presentation/ d/ e/ 2PACX- 1vQC_ PUJe1xs84lcbaVQx8MR8psJTHkN8Jeh2ToeaHdkUh_ Z1frryExkDY9f5KhQs8hQd50DEI7hNXtE/ pub? start= true loop= false delayms= 3000) y el Notebook [ en este link] ( https: / / colab. research. google. com/ github/ futurelabmx/ omegaUp. py/ blob/ master/ Semana",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "strings"
    ],
    "id": 12064
  },
  {
    "title": "occ20sfns32",
    "url": "https://omegaup.com/arena/problem/occ20sfns32",
    "history": "# \u00bfCua\u0301ntas veces esta\u0301 abc? Se tiene una cadena de minu\u0301sculas de a lo ma\u0301s 1000 caracteres. Se quiere determinar cua\u0301ntas veces aparece la subcadena abc. No es necesario que a, b y c este\u0301n continu\u0301as. Por ejemplo en abecedario aparece una vez la subcadena abc.",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "strings"
    ],
    "id": 12035
  },
  {
    "title": "occ20sfns25",
    "url": "https://omegaup.com/arena/problem/occ20sfns25",
    "history": "# Cadena muy buenaUna cadena de caracteres es * muy buena* si ninguna de sus subcadenas contiene a su ma\u0301ximo ma\u0301s de una vez. Su programa recibira\u0301 como entrada una cadena de a lo ma\u0301s 1000 caracteres y debe reportar si la cadena es muy buena o no. Las respuestas posibles son Si o No. # Ejemplos| | inputabacaba| | outputSi| | inputaabc| | outputNo| | end",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "strings"
    ],
    "id": 12033
  },
  {
    "title": "occ20sfns21ns23",
    "url": "https://omegaup.com/arena/problem/occ20sfns21ns23",
    "history": "# \u00bfCua\u0301ntas palabras? Diego ha recibido un mensaje extran\u0303o en el cual en vez de espacios vienen asteriscos. E\u0301l quiere saber cua\u0301ntas palabras tiene dicho mensaje. El mensaje estara\u0301 en minu\u0301sculas y entre palabra y palabra hay al menos un asterisco. La longitud del mensaje sera\u0301 a lo ma\u0301s 1000 caracteres.",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "strings"
    ],
    "id": 12031
  },
  {
    "title": "occ20sfpn25",
    "url": "https://omegaup.com/arena/problem/occ20sfpn25",
    "history": "# CodificarA Iva\u0301n se le ha ocurrido un me\u0301todo para codificar una palabra en minu\u0301sculas que no contenga la n\u0303. Iva\u0301n tiene una tabla en donde esta\u0301n la letras de la a a la z. Debajo de esta tabla aparecen las letras de la z a la a ( orden decreciente) . a | b | c . . . x | y | zz | y | x . . . c | b | aCuando quiere codificar una palabra reemplaza cada letra por la que aparece debajo de ella. Haga un programa que reciba una palabra de a lo ma\u0301s 100 minu\u0301sculas sin n\u0303 y la codifique usando el me\u0301todo de Iva\u0301n.",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "strings"
    ],
    "id": 12025
  },
  {
    "title": "La cuadrilla de langostas",
    "url": "https://omegaup.com/arena/problem/La-cuadrilla-de-langostas",
    "history": "La Falsa Tortuga y el Grifo le intentaban explicar a Alicia co\u0301mo era la famosa cuadrilla de langostas. Esta danza comienza con una li\u0301nea de langostas, cada una mirando en alguna de cuatro direcciones diferentes. A cada paso de la danza, cada langosta en la li\u0301nea trae a otras tres langostas que no estaban en la li\u0301nea para formar su cuadrilla. En cada cuadrilla, las cuatro langostas comienzan mirando en la misma direccio\u0301n que la langosta que ya estaba en la li\u0301nea, pero de inmediato la langosta que quedo\u0301 a la izquierda gira hacia la izquierda y la langosta que quedo\u0301 a la derecha gira a la derecha. Como Alicia segui\u0301a confundida, la Falsa Tortuga y el Grifo le hicieron un dibujo de co\u0301mo se veri\u0301a despue\u0301s de un paso una cuadrilla de langostas que comenzo\u0301 con una li\u0301nea de tres langostas. ! [ asd] [ 1] Alicia, maravillada, ahora les pregunto\u0301 que co\u0301mo se veri\u0301a una cuadrilla de langostas despue\u0301s de N pasos. Ayuda a la Falsa Tortuga y al Grifo a explicarle esto a Alicia.",
    "input": "En la primera li\u0301nea un entero N. En la segunda li\u0301nea, una cadena que describe la li\u0301nea inicial de langostas. Esta cadena consiste exclusivamente de los caracteres * ^ * , * > * , * v* , * < * , que corresponden con las cuatro direcciones en el orden de giros a la derecha.",
    "output": "Una cadena que describa la li\u0301nea de langostas al final. # RangosPuedes suponer que 0 \u2264 N \u2264 10, que al inicio habra\u0301 al menos una langosta y que al final habra\u0301 a lo mucho dos millones de langostas.",
    "note": "",
    "topics": [
      "dp",
      "dfs and similar",
      "strings"
    ],
    "id": 11841
  },
  {
    "title": "La premiaci\u00f3n de la carrera loca",
    "url": "https://omegaup.com/arena/problem/La-premiacion-de-la-carrera-loca",
    "history": "Alicia no entendi\u0301a nada de lo que el Dodo le deci\u0301a. En particular, no entendi\u0301a que\u0301 queri\u0301a decir el Dodo con hacer una carrera loca. Tampoco es que Alicia quisiera saber, pero el Dodo dijo que la mejor forma de explicar que\u0301 era una carrera loca era justamente hacer una. Y entonces todos los animales corrieron sin ton ni son, hasta que en algu\u0301n momento el Dodo grito\u0301 \u00a1se acabo\u0301 la carrera! Y cuando preguntaron quie\u0301n habi\u0301a ganado, el Dodo lo penso\u0301 un rato y dijo \u00a1no importa mucho quie\u0301n gano\u0301, todos recibira\u0301n el mismo premio! y Alicia tuvo que darle un premio a cada animal que participo\u0301 en la carrera, los cuales fueron llamados por el Dodo del u\u0301ltimo al primer lugar. Sin embargo, el Dodo los nombro\u0301 tan ra\u0301pido que Alicia tuvo dificultades en seguirle el paso.",
    "input": "Una serie de renglones formados exclusivamente por letras. Cada renglo\u0301n contendra\u0301 uno o ma\u0301s nombres. Cada nombre comenzara\u0301 con una letra mayu\u0301scula y el resto de sus letras aparecera\u0301n en minu\u0301scula.",
    "output": "Los nombres de los animales que participaron en la carrera, uno por renglo\u0301n y del primer al u\u0301ltimo lugar. # RangosPuedes suponer que cada renglo\u0301n tendra\u0301 a lo mucho 50 caracteres y que habra\u0301n a lo mucho 1000 nombres.",
    "note": "",
    "topics": [
      "strings",
      "implementation"
    ],
    "id": 11810
  },
  {
    "title": "Numeraci\u00f3n Maya",
    "url": "https://omegaup.com/arena/problem/Numeracion-Maya",
    "history": "Despue\u0301s de la semana de descanso por las di\u0301ficles pruebas del Hombre Misterioso, los programadores mayas necesitan seguir aprendiendo cosas para derrotar al Malvado Robot OMI. Se aproxima un combate, entonces, el Hombre Misterioso les va ensen\u0303ar la * * Numeracio\u0301n Maya* * , ya que, el lenguaje de Maya+ + esta codificado con este * ( vigesimal, es decir, base 20) * . Esta numeracio\u0301n esta dado por los siguientes simbolos y sus valores de la numeracio\u0301n decimal: - ? = 0- * = 1. - - = 5. Recordemos que en la numeracio\u0301n maya si la cantidad de * modulo 5 es igual a 0 se sustituye los * por un - . A continuacio\u0301n mostramos algunas equivalencias con el sistema decimal, ! [ decmay. png] [ 1] El resto de numeros salen intuitivamente. Veamos un ejemplo para mayor comprensio\u0301n: ! [ mayas. png] [ 2] # ProblemaEscribe un programa que convierte un nu\u0301mero entero de sistema decimal a una cadena que representa su valor en la nu\u0301meracio\u0301n maya dado con las condiciones anteriores y viceversa.",
    "input": "En la primera li\u0301nea un entero T que indica el tipo de convercio\u0301n que vas hacer ( 1 = decimal a numeracio\u0301n maya, 2 = numeracio\u0301n maya a decimal) , en la segunda li\u0301nea un entero n o una cadena s dependiendo del tipo de conversio\u0301n.",
    "output": "La cadena s que representa a x si T = 1, o el entero x que representa a s si T = 2. | | input119| | output\u2014* * * * / | | input2\u2013* * / - / * / | | output512| | input11856| | output\u2014* / \u2013* * / * * * * / | | input2? / ? / * / | | output400| | end# Li\u0301mites* * Para el 50",
    "note": "",
    "topics": [
      "strings"
    ],
    "id": 11799
  },
  {
    "title": "Subsecuencias Maya++",
    "url": "https://omegaup.com/arena/problem/Subsecuencias-Maya",
    "history": "Los programadores mayas concluyeron los desafios del hombre misterioso, entonces, el hombre misterioso accedio\u0301 a entrenarlos para derrotar al Malvado Robot OMI. El primer entrenamiento consiste en los principios basicos del lenguaje * Maya+ + * , el codigo del lenguaje es una cadena binaria S que consta de n ceros y unos. El entrenamiento consiste en dividir la cadena en el mi\u0301nimo nu\u0301mero de subsecuencias de tal manera que cada cara\u0301cter pertenezca a una subsecuencia y cada subsecuencia se parezca a \" 101010. . . \" o \" 010101. . . \" ( es decir, la subsecuencia no debe tener ceros o unos adyacentes) . Recuerda que una subsecuencia es una secuencia que puede derivarse de la secuencia dada eliminando cero o ma\u0301s elementos sin cambiar el orden de los elementos. Por ejemplo, las subsecuencias de \" 1011101\" son \" 0\" , \" 1\" , \" 11111\" , \" 0111\" , \" 101\" , \" 1001\" , pero no \" 000\" , \" 101010\" y \" 11100\" . # ProblemaDado la cadena binaria S ayuda a los programadores mayas a saber cual es el nu\u0301mero mi\u0301nimo de subsecuencias con las condiciones antes mencionadas.",
    "input": "Un nu\u0301mero n, el taman\u0303o de la cadena binaria, seguido de la cadena S.",
    "output": "Un entero el cual es el nu\u0301mero mi\u0301nimo de subsecuencias que tiene la cadena S. | | input6 100101| | output2| | input5 11111| | output5| | input8 01010000| | output4| | end# Li\u0301mites- 1 \u2264 n \u2264 10^ 5* * Para 12. 5 puntos* * - Solo hay unos en S. * * Para 25 puntos* * - Las subsecuencias de la cadena S eliminan 0 elementos. * * Para 62. 5 puntos* * - No hay restricciones.",
    "note": "",
    "topics": [
      "strings",
      "implementation"
    ],
    "id": 11696
  },
  {
    "title": "Colecci\u00f3n de Ramitas",
    "url": "https://omegaup.com/arena/problem/Coleccion-de-Ramitas",
    "history": "Flipino esta\u0301 organizando su coleccio\u0301n infinita de ramas ahora que tiene tiempo de sobra. Actualmente e\u0301l las tiene organizadas de menor a mayor, comenzando por una ramita de 1 cm de largo, seguida por otra de 2cm, y asi\u0301 hasta el infinito. Para cada nu\u0301mero natural existe una rama con longitud correspondiente. Filipino decidio\u0301 reorganizar sus ramitas por su paridad. Como su coleccio\u0301n es infinita, solo quiere seleccionar un rango, Escogiendo dos enteros positivos y tomando todas las ramas cuya longitud se encuentren entre esos dos nu\u0301meros. Finalmente, para nombrar esta subcoleccio\u0301n, tomara\u0301 la longitud total de las ramas que la conforman. Filipino no tiene ganas de encontrar la longitud total, asi\u0301 que tu debera\u0301s ayudarlo.",
    "input": "En la primer li\u0301nea un entero 1 \u2264 t \u2264 100 el nu\u0301mero de casos de prueba. Por cada caso de prueba hay una li\u0301nea con 2 enteros 1 \u2264 A \u2264 B",
    "output": "Por cada caso de prueba, en li\u0301neas distintas, la longitud total de las ramas que cuya longitud sea impar y sea mayor o igual que A y menor o igual que B",
    "note": "",
    "topics": [
      "strings"
    ],
    "id": 11579
  },
  {
    "title": "Coincidencias de una cadena con su reverso",
    "url": "https://omegaup.com/arena/problem/Coincidencias-de-una-cadena-con-",
    "history": "Sea S una cadena y R su reverso, nos interesa contar cua\u0301ntas coincidencias hay entre S y R. Por ejemplo, si S = * \" atolito\" * entonces R = * \" otilota\" * y hay tres coincidencias ( la primera * t* , la * l* y la segunda * t* ) . Una coincidencia es va\u0301lida sin importar si un caracter aparece en mayu\u0301scula y el otro en minu\u0301scula. Por ejemplo, si S = * \" ATOlito\" * entonces R = * \" otilOTA\" * y siguen habiendo tres coincidencias.",
    "input": "Una cadena S. Puedes suponer que la longitud ma\u0301xima de S es de 1000 caracteres y que u\u0301nicamente aparecen letras.",
    "output": "Un entero que sea la cantidad de coincidencias entre S y R.",
    "note": "",
    "topics": [
      "implementation",
      "strings"
    ],
    "id": 11427
  },
  {
    "title": "Calculadora de operaciones matriciales",
    "url": "https://omegaup.com/arena/problem/Calculadora-de-operaciones-matri",
    "history": "Escriba un programa que lea dos matrices: una matriz A, de dimensiones ( Ax, Ay) y otra matriz B, de dimensiones ( Bx, By) . Despue\u0301s, calcular la suma, resta, traspuesta o multiplicacio\u0301n de esas matrices, segu\u0301n lo solicite el usuario, e imprimir la matriz resultante. En caso de la traspuesta, solo calcular e imprimir la traspuesta de la matriz A, e ignorar la matriz B. MUY IMPORTANTE: El programa debe estar estructurado en mo\u0301dulos, no todo en la funcio\u0301n principal.",
    "input": "Una linea con dos enteros separadas por un espacio correspondientes a las dimensiones Ax y Ay de la matriz A. Despue\u0301s, Ax lineas con Ay enteros separados por un espacio correspondientes a cada valor A( x, y) de la matriz A. Despue\u0301s, una linea con dos enteros separadas por un espacio correspondientes a las dimensiones Bx y By de la matriz B. Despue\u0301s, Bx lineas con By enteros separados por un espacio correspondientes a cada valor B( x, y) de la matriz B. Despue\u0301s se recibira\u0301n n cadenas correspondientes a la operacio\u0301n correspondiente, que pueden ser \" SUMA\" , \" RESTA\" , \" MULTIPLICACION\" , \" TRASPUESTA\" o \" SALIR\" .",
    "output": "En cada caso, la matriz resultante de efectuar la operacio\u0301n correspondiente. De no poder hacerse la operacio\u0301n solicitada, el programa debera\u0301 imprimir el caracter ' X' .",
    "note": "",
    "topics": [
      "implementation",
      "matrices",
      "strings",
      "math"
    ],
    "id": 11400
  },
  {
    "title": "Detector de letras",
    "url": "https://omegaup.com/arena/problem/Detector-de-letras-UAMA",
    "history": "Escriba un programa que lea un cara\u0301cter del usuario. En caso de leer una vocal mayu\u0301scula, el programa debe imprimir el cara\u0301cter ' V' . En caso de leer una consonante mayu\u0301scula, el programa debe imprimir una ' C' . En caso de leer una semivocal mayu\u0301scula ( ' Y' ) , el programa debe imprimir ' S' . En caso de que no sea ninguna letra mayu\u0301scula, el programa debe leer de nuevo el cara\u0301cter. El programa no se detendra\u0301 hasta leer 10 letras mayu\u0301sculas. MUY IMPORTANTE: El programa debe estar estructurado en modulos, no todo en la funcion principal.",
    "input": "Un numero x de caracteres separados por un espacio.",
    "output": "La letra correspondiente a cada caso.",
    "note": "",
    "topics": [
      "strings",
      "implementation"
    ],
    "id": 11396
  },
  {
    "title": "Simulando un Display",
    "url": "https://omegaup.com/arena/problem/Simulando-un-Display",
    "history": "Como proyecto de fin de semana te has propuesto simular un display de siete segmentos, solo que tu\u0301 eres especial y no te gustan las rayitas asi\u0301 que usaras algu\u0301n otro caracter. Ve el ejemplo para que te quede ma\u0301s claro, como se dibujaran los nu\u0301meros si el caracter dado fuera \" # \" : # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #",
    "input": "Un entero n de a lo ma\u0301s 9 di\u0301gitos, seguido de un caracter ascii. Los di\u0301gitos estaran en el rango de 0- 9.",
    "output": "El nu\u0301mero n dibujado u\u0301nicamente con el caracter dado, cada di\u0301gito tendra un espacio de separacio\u0301n.",
    "note": "",
    "topics": [
      "strings",
      "implementation"
    ],
    "id": 11392
  },
  {
    "title": "Problema_String_Curso_Programaci\u00f3n",
    "url": "https://omegaup.com/arena/problem/Problema_String_Curso_Programaci",
    "history": "",
    "input": "Python is an easy to learn, powerful programming language. It has efficient high- level data structures and a simple but effective approach to object- oriented programming. Python\u2019s elegant syntax and dynamic typing, together with its interpreted nature, make it an ideal language for scripting and rapid application development in many areas on most platforms.",
    "output": "Capada palabra intercalada entre minu\u0301sculas y mayu\u0301sculas. Iniciando en minu\u0301scula. Ejemplo: python IS an EASY to LEARN. . .",
    "note": "",
    "topics": [
      "implementation",
      "strings"
    ],
    "id": 11315
  },
  {
    "title": "Suma de N",
    "url": "https://omegaup.com/arena/problem/Suma-de-N",
    "history": "",
    "input": "Un entero N",
    "output": "La suma de los digitos de N.",
    "note": "",
    "topics": [
      "implementation",
      "strings",
      "math"
    ],
    "id": 11309
  },
  {
    "title": "Palabra palindroma",
    "url": "https://omegaup.com/arena/problem/Palabra-palindroma",
    "history": "Los * * pali\u0301ndromos* * son palabras o frases que al leerse de izquierda a derecha y viceversa expresan o tienen el mismo sentido. A este vocablo tambie\u0301n se le puede llamar pali\u0301ndromas. Debera\u0301 leer una palabra p e indicar si es o no una palabra pali\u0301ndroma.",
    "input": "Una palabra p",
    "output": "Si la palabra es pali\u0301ndroma debera\u0301 imprimir SI. Si la palabra * * no* * es pali\u0301ndroma debera\u0301 imprimir NO.",
    "note": "",
    "topics": [
      "strings"
    ],
    "id": 11234
  },
  {
    "title": "Frecuencia de una letra",
    "url": "https://omegaup.com/arena/problem/Frecuencia-de-una-letra",
    "history": "En este ejercicio debera\u0301s contar las veces que aparece una letra l en la palabra p",
    "input": "Una palabra p seguida de una letra l",
    "output": "La frecuencia de l en la palabra p",
    "note": "",
    "topics": [
      "strings"
    ],
    "id": 11232
  },
  {
    "title": "Recortando palabras",
    "url": "https://omegaup.com/arena/problem/Recortando-palabras",
    "history": "Jose\u0301 esta escribiendo una carta a mano y faltando 25",
    "input": "Una palabra p seguido de un nu\u0301mero p ( 0< p < 5) . La longitud de p siempre sera\u0301 mayor al doble de n",
    "output": "La palabra p recortada.",
    "note": "",
    "topics": [
      "strings"
    ],
    "id": 11231
  },
  {
    "title": "Nombres y apellidos sanos",
    "url": "https://omegaup.com/arena/problem/Nombres-y-apellidos-sanos",
    "history": "Susana Distancia quiere saber que\u0301 ciudadanos si\u0301 esta\u0301n guardando la sana distancia en esta contingencia. Para lograrlo, Susana planea llamarles por tele\u0301fono con el objetivo de hacerles una encuesta, pero los operadores del servicio le mandaron una lista de nombres completos que aparecen un orden que no le agrada a Susana Distancia: - Los nombres completos de dos palabras tienen primero un apellido y luego un nombre. - Los nombres completos de tres palabras tienen primero dos apellidos y luego un nombre. - Los nombres completos de cuatro palabras tienen primero dos apellidos y luego dos nombres. Tambie\u0301n hay nombres en la lista de una sola palabra o de ma\u0301s de cuatro palabras, pero estos se consideran inva\u0301lidos. Ayuda a Susana Distancia a reconstruir la lista de los nombres completos, donde aque\u0301llos que sean va\u0301lidos aparezcan en el orden de primero los nombres y luego los apellidos, mientras que cada nombre completo inva\u0301lido se reemplace por un asterisco.",
    "input": "Una lista de los nombres completos de las personas a las que llamara\u0301 Susana, uno por renglo\u0301n. Cada nombre completo es una secuencia de cadenas de letras ( sin acentos) separadas por espacios. Puedes suponer que cada renglo\u0301n comienza y termina con una letra y que no aparecen dos o ma\u0301s espacios consecutivos.",
    "output": "Una lista de los nombres completos, uno en cada renglo\u0301n, donde los nombres completos va\u0301lidos aparecen como se solicitaron en la descripcio\u0301n y los nombres completos inva\u0301lidos se reemplazan por un asterisco . # Li\u0301mitesNingu\u0301n renglo\u0301n medira\u0301 ma\u0301s de 40 caracteres. Puede haber una cantidad arbitraria de renglones.",
    "note": "",
    "topics": [
      "strings",
      "implementation"
    ],
    "id": 11187
  },
  {
    "title": "CALENDARIO Gregoriano",
    "url": "https://omegaup.com/arena/problem/CALENDARIO-Gregoriano",
    "history": "# HistoriaEs 1581 y durante los u\u0301ltimos an\u0303os la civilizacio\u0301n se ha regido por el * * calendario juliano* * , este ultimo se basaba en el movimiento del sol para medir el tiempo, aunque este no era lo suficientemente preciso. El Papa Gregorio XIII, ha decidido arreglar el calendario para que sea ma\u0301s preciso, ya que el actual tiene 10 di\u0301as de diferencia, el ha estado buscando ayuda de astro\u0301nomos para poder desarrollar un nuevo calendario mejorado. La solucio\u0301n que encontraron fue casi perfecta, esa solucio\u0301n eres tu, te han contactado y has aceptado ser el creador de el * * calendario gregoriano* * que sera tan perfecto que se establecera\u0301 como el nuevo calendario oficial del mundo. \u2014\u2014\u2014- ! [ enter image description here] [ 1] \u2014\u2014\u2014- # ProblemaMostrar el calendario gregoriano a partir de una fecha ingresada# Informacio\u0301n adicional necesariaLa informacio\u0301n de la fecha se ingresara en el orden: an\u0303o, mes, di\u0301a. En caso de que se ingrese un an\u0303o invalido se interrumpira\u0301 la ejecucio\u0301n y se mostrara: * * EL AN\u0303O ESTA\u0301 FUERA DE RANGO* * En caso de que se ingrese un mes invalido se mostrara: * * EL MES ESTA\u0301 FUERA DE RANGO* * En caso de que se ingrese un di\u0301a invalido se mostrara: * * EL DI\u0301A ESTA\u0301 FUERA DE RANGO* * # Descripcio\u0301n de la entradaEn la primera linea recibira\u0301s un entero A, el cual indica el an\u0303oEn la segunda linea recibira\u0301s un entero M, el cual indica el mes. En la tercer linea recibira\u0301s un entero D, el cual indica el numero de di\u0301a.",
    "input": "A un entero ( * An\u0303o* ) . M un entero ( * Mes* ) . D un entero ( * Numero de Di\u0301a* ) # Descripcio\u0301n de la salidaEn la * * primera linea* * se mostrar el mensaje: * * CALENDARIO AN\u0303O A* * Note que la longitud de el an\u0303o puede ser desde 1 hasta 10, donde * * A* * , representa el an\u0303oEn la * * segunda linea* * se realizara un salto de linea para dejar un espacio en blancoPosteriormente en la * * tercera linea* * se mostrara un encabezado indicando el mes: * * - - - - - - - - - MES - - - - - - - - - * * En el * * MES* * se mostraran las primeras tres letras en mayu\u0301scula ( en espan\u0303ol) de el mes en cuestio\u0301n a mostrarEn la * * cuarta linea* * se mostrara el encabezado de los di\u0301as de la semana, se mostraran las primeras tres letras en mayu\u0301scula ( en espan\u0303ol) de el di\u0301a en cuestio\u0301n a mostrar, un espacio, un guion medio y otro espacio, seguido a esto el siguiente di\u0301a a mostrar, cuando se llegue a el ultimo di\u0301a ya no se mostrara nada seguido de el mismo terminando asi\u0301 el encabezado de los di\u0301as de la semanaEl * * formato de salida de el calendario es variable* * de acuerdo a el mes y an\u0303o, ya que existira\u0301n meses que ocupen solamente 4 filas ( * * por ejemplo febrero 2015* * ) o meses que ocupen hasta 6 filas ( * * por ejemplo mayo 2020* * ) . Cuando una * * casilla* * de el calendario este * * nula o dicho de otra manera no tenga numero de di\u0301a* * , se mostraran dos guiones medios, posteriormente 4 espacios en blanco o 5 espacios en blanco, esto dependera\u0301 de los nu\u0301meros en cuestiona, esto mismo servira\u0301 para darle el formato a el calendarioEn la * * penu\u0301ltima linea* * se realizara un salto de linea para dejar un espacio en blancoEn la * * ultima linea* * se mostrara el mensaje* * EL D DE M DE A ES L* * donde D, representa el numero de di\u0301adonde M, representa el mes en letra completodonde A, representa el an\u0303odonde L, representa el di\u0301a en letra* * Aunque tambie\u0301n se puede presentar el caso de que la informacio\u0301n ingresada no sea valida* * La primera linea mostrari\u0301a el mensaje de la excepciones donde la fecha solicitada este fuera de el rango, el mensaje varia dependiendo de que se ha ingresado mal, esto se encuentra especificado en la seccio\u0301n Informacio\u0301n adicional necesaria. # 24 Ejemplos| | input18900125| | outputCALENDARIO AN\u0303O 1890- - - - - - - - - ENE - - - - - - - - - DOM - LUN - MAR - MIE - JUE - VIE - SAB- - - - - - 1 2 3 45 6 7 8 9 10 1112 13 14 15 16 17 1819 20 21 22 23 24 2526 27 28 29 30 31 - - EL 25 DE ENERO DE 1890 ES SABADO| | input1990214| | outputCALENDARIO AN\u0303O 1990- - - - - - - - - FEB - - - - - - - - - DOM - LUN - MAR - MIE - JUE - VIE - SAB- - - - - - - - 1 2 34 5 6 7 8 9 1011 12 13 14 15 16 1718 19 20 21 22 23 2425 26 27 28 - - - - - - EL 14 DE FEBRERO DE 1990 ES MIERCOLES| | input2025331| | outputCALENDARIO AN\u0303O 2025- - - - - - - - - MAR - - - - - - - - - DOM - LUN - MAR - MIE - JUE - VIE - SAB- - - - - - - - - - - - 12 3 4 5 6 7 89 10 11 12 13 14 1516 17 18 19 20 21 2223 24 25 26 27 28 2930 31 - - - - - - - - - - EL 31 DE MARZO DE 2025 ES LUNES| | input2144405| | outputCALENDARIO AN\u0303O 2144- - - - - - - - - ABR - - - - - - - - - DOM - LUN - MAR - MIE - JUE - VIE - SAB- - - - - - 1 2 3 45 6 7 8 9 10 1112 13 14 15 16 17 1819 20 21 22 23 24 2526 27 28 29 30 - - - - EL 5 DE ABRIL DE 2144 ES DOMINGO| | input2200505| | outputCALENDARIO AN\u0303O 2200- - - - - - - - - MAY - - - - - - - - - DOM - LUN - MAR - MIE - JUE - VIE - SAB- - - - - - - - 1 2 34 5 6 7 8 9 1011 12 13 14 15 16 1718 19 20 21 22 23 2425 26 27 28 29 30 31EL 5 DE MAYO DE 2200 ES LUNES| | input2399610| | outputEL 10 DE JUNIO DE EL AN\u0303O 2399 ES JUEVES- - - - - - - - - JUN - - - - - - - - - DOM - LUN - MAR - MIE - JUE - VIE - SAB- - - - 1 2 3 4 56 7 8 9 10 11 1213 14 15 16 17 18 1920 21 22 23 24 25 2627 28 29 30 - - - - - - | | input2400710| | outputCALENDARIO AN\u0303O 2400- - - - - - - - - JUL - - - - - - - - - DOM - LUN - MAR - MIE - JUE - VIE - SAB- - - - - - - - - - - - 12 3 4 5 6 7 89 10 11 12 13 14 1516 17 18 19 20 21 2223 24 25 26 27 28 2930 31 - - - - - - - - - - EL 10 DE JULIO DE 2400 ES LUNES| | input2577825| | outputCALENDARIO AN\u0303O 2577- - - - - - - - - AGO - - - - - - - - - DOM - LUN - MAR - MIE - JUE - VIE - SAB- - - - - - - - - - 1 23 4 5 6 7 8 910 11 12 13 14 15 1617 18 19 20 21 22 2324 25 26 27 28 29 3031 - - - - - - - - - - - - EL 25 DE AGOSTO DE 2577 ES LUNES| | input2684925| | outputCALENDARIO AN\u0303O 2684- - - - - - - - - SEP - - - - - - - - - DOM - LUN - MAR - MIE - JUE - VIE - SAB- - 1 2 3 4 5 67 8 9 10 11 12 1314 15 16 17 18 19 2021 22 23 24 25 26 2728 29 30 - - - - - - - - EL 25 DE SEPTIEMBRE DE 2684 ES JUEVES| | input27311021| | outputCALENDARIO AN\u0303O 2731- - - - - - - - - OCT - - - - - - - - - DOM - LUN - MAR - MIE - JUE - VIE - SAB- - - - - - - - 1 2 34 5 6 7 8 9 1011 12 13 14 15 16 1718 19 20 21 22 23 2425 26 27 28 29 30 31EL 21 DE OCTUBRE DE 2731 ES MIERCOLES| | input28281121| | outputCALENDARIO AN\u0303O 2828- - - - - - - - - NOV - - - - - - - - - DOM - LUN - MAR - MIE - JUE - VIE - SAB- - - - - - 1 2 3 45 6 7 8 9 10 1112 13 14 15 16 17 1819 20 21 22 23 24 2526 27 28 29 30 - - - - EL 21 DE NOVIEMBRE DE 2828 ES MARTES| | input29291230| | outputCALENDARIO AN\u0303O 2929- - - - - - - - - DIC - - - - - - - - - DOM - LUN - MAR - MIE - JUE - VIE - SAB- - - - - - - - 1 2 34 5 6 7 8 9 1011 12 13 14 15 16 1718 19 20 21 22 23 2425 26 27 28 29 30 31EL 30 DE DICIEMBRE DE 2929 ES VIERNES| | input404055| | outputCALENDARIO AN\u0303O 4040- - - - - - - - - MAY - - - - - - - - - DOM - LUN - MAR - MIE - JUE - VIE - SAB- - - - 1 2 3 4 56 7 8 9 10 11 1213 14 15 16 17 18 1920 21 22 23 24 25 2627 28 29 30 31 - - - - EL 5 DE MAYO DE 4040 ES SABADO| | input80801010| | outputCALENDARIO AN\u0303O 8080- - - - - - - - - OCT - - - - - - - - - DOM - LUN - MAR - MIE - JUE - VIE - SAB- - - - 1 2 3 4 56 7 8 9 10 11 1213 14 15 16 17 18 1920 21 22 23 24 25 2627 28 29 30 31 - - - - EL 10 DE OCTUBRE DE 8080 ES JUEVES| | input197599| | outputCALENDARIO AN\u0303O 1975- - - - - - - - - SEP - - - - - - - - - DOM - LUN - MAR - MIE - JUE - VIE - SAB- - 1 2 3 4 5 67 8 9 10 11 12 1314 15 16 17 18 19 2021 22 23 24 25 26 2728 29 30 - - - - - - - - EL 9 DE SEPTIEMBRE DE 1975 ES MARTES| | input203611| | outputCALENDARIO AN\u0303O 2036- - - - - - - - - ENE - - - - - - - - - DOM - LUN - MAR - MIE - JUE - VIE - SAB- - - - 1 2 3 4 56 7 8 9 10 11 1213 14 15 16 17 18 1920 21 22 23 24 25 2627 28 29 30 31 - - - - EL 1 DE ENERO DE 2036 ES MARTES| | input202611| | outputCALENDARIO AN\u0303O 2026- - - - - - - - - ENE - - - - - - - - - DOM - LUN - MAR - MIE - JUE - VIE - SAB- - - - - - - - 1 2 34 5 6 7 8 9 1011 12 13 14 15 16 1718 19 20 21 22 23 2425 26 27 28 29 30 31EL 1 DE ENERO DE 2026 ES JUEVES| | input202077| | outputCALENDARIO AN\u0303O 2020- - - - - - - - - JUL - - - - - - - - - DOM - LUN - MAR - MIE - JUE - VIE - SAB- - - - - - 1 2 3 45 6 7 8 9 10 1112 13 14 15 16 17 1819 20 21 22 23 24 2526 27 28 29 30 31 - - EL 7 DE JULIO DE 2020 ES MARTES| | input20260201| | outputCALENDARIO AN\u0303O 2026- - - - - - - - - FEB - - - - - - - - - DOM - LUN - MAR - MIE - JUE - VIE - SAB1 2 3 4 5 6 78 9 10 11 12 13 1415 16 17 18 19 20 2122 23 24 25 26 27 28EL 1 DE FEBRERO DE 2026 ES DOMINGO| | input0| | outputEL AN\u0303O ESTA\u0301 FUERA DE RANGO| | input10| | outputEL MES ESTA\u0301 FUERA DE RANGO| | input113| | outputEL MES ESTA\u0301 FUERA DE RANGO| | input1132| | outputEL DI\u0301A ESTA\u0301 FUERA DE RANGO| | input1131| | outputCALENDARIO AN\u0303O 1- - - - - - - - - ENE - - - - - - - - - DOM - LUN - MAR - MIE - JUE - VIE - SAB- - 1 2 3 4 5 67 8 9 10 11 12 1314 15 16 17 18 19 2021 22 23 24 25 26 2728 29 30 31 - - - - - - EL 31 DE ENERO DE 1 ES MIERCOLES| | end# Li\u0301mitesA, representa el an\u0303o1< = A< = 9\u00d710^ 9SM, representa el mes1< = M< = 12D, representa el numero de di\u0301a1< = L< = ( 31| | 30| | 29| | 28) \u2014\u2014\u2014- # Contacto para clarificacio\u0301nesaheyond@ gmail. com\u2014\u2014\u2014- # \u00bfHas visto algu\u0301n error? Por favor, ayu\u0301dame a corregirlo contactando conmigo, aheyond@ gmail. com* * La mas reciente actualizacio\u0301n de este problema fue realizado el sa\u0301bado, 13 de junio de 2020 a las 12: 47 Horas* * \u2014\u2014\u2014-",
    "output": "",
    "note": "",
    "topics": [
      "implementation",
      "strings"
    ],
    "id": 11103
  },
  {
    "title": "Recogiendo letras en la torre",
    "url": "https://omegaup.com/arena/problem/Recogiendo-letras-en-la-torre",
    "history": "Despue\u0301s de lo molesto que quedo Jorge al no encontrar alguien que tome bien las fotos y mucho menos alguien que las recorte de forma decente, el equipo entro en el castillo de Santy. En este lugar teni\u0301an la opcio\u0301n de reunir a un aliado con ellos. Para poder reunirse con un aliado, el equipo de Jorge debe encontrar las letras que hacen su nombre; es decir, si quieren a \" bob\" como aliado deben encontrar las letras b - o - b en el castillo. Actualmente, ellos se encuentran en una habitacio\u0301n del castillo y delante de ellos hay una cantidad de puertas, una vez el equipo pasa por una puerta ya no pueden irse atra\u0301s. Adema\u0301s, cada habitacio\u0301n tiene una letra ( excepto en la que ellos esta\u0301n actualmente) . Un aliado es ma\u0301s fuerte entre ma\u0301s largo es su nombre ( tiene sentido porque impone ma\u0301s \" Sir lord el destrona huesos\" a alguien llamado \" bob\" ) . Como es de esperarse el equipo quiere al aliado ma\u0301s fuerte, pero no saben muy bien como conseguirlo. Por suerte, el fiel compan\u0303ero de Jorge logro obtener el mapa en donde describe como estan las puertas del castillo y las letras que hay en cada habitacio\u0301n. El mapa esta cifrado de una forma muy especial, es un texto ( una cadena de caracteres) . Imaginemos que tenemos un mapa como el siguiente! [ Mapa] ( Mapa. png) Entonces, en el texto se veri\u0301a algo como una palabra: ` B. O. . B. ID. RE` . En donde el punto quiere decir despue\u0301s de cuantas puertas esta\u0301 esa palabra. Adema\u0301s, se encuentran en el orden tal forma que si una letra esta\u0301 despue\u0301s de n puntos, entonces la anterior letra que tenga n- 1 puntos sera\u0301 la letra que habi\u0301a en la puerta antes de esa. En el ejemplo, notamos que tenemos \" . I\" y la letra ma\u0301s atra\u0301s que no tienen ningu\u0301n punto es la \" B\" , entonces quiere decir que para pasar a esa \" I\" tienes que ir por la puerta \" B\" . Que es lo que esta\u0301 en el dibujo. Como Jorge no esta\u0301 de humor por sus fotos, el quiere saber cua\u0301l seri\u0301a el nombre del Aliado ma\u0301s fuerte antes de perder su tiempo en buscarlo. # ProblemaDada una cadena llena de caracteres que representa el mapa descrito anteriormente. Se debe decir el nombre del aliado ma\u0301s fuerte ( el nombre ma\u0301s largo que se puede formar) teniendo en cuenta que una vez que pasas por una puerta ya no puedes regresar. En caso de haber varios aliados con el mismo poder ( misma cantidad de caracteres) , decir el que tenga el menor nombre lexicograficamente.",
    "input": "Una unica cadena de caracteres descrita anteriormente ( El mapa) .",
    "output": "El nombre del aliado ma\u0301s fuerte y menor lexicograficamente.",
    "note": "",
    "topics": [
      "data structures",
      "strings"
    ],
    "id": 11102
  },
  {
    "title": "cuenta_letras_al_vector",
    "url": "https://omegaup.com/arena/problem/cuenta_letras_al_vector",
    "history": "Escribe un programa que lea una cadena ( solo minu\u0301sculas, sin acentos, sin espacios, sin la \" n\u0303\" ) de ma\u0301ximo * * 1000* * . Y el programa nos dira\u0301 cuantas veces aparece cada letra del alfabeto.",
    "input": "Una cadena de carcateres del alfabeto en minu\u0301sculas, si acentos, sin espacios, sin la \" n\u0303\" y entre * * 0* * y * * 1000* * caracteres.",
    "output": "La salida imprimira\u0301, en la primer li\u0301nea, una lista de nu\u0301meros que indi\u0301can el nu\u0301mero de veces que aparecen TODAS y cada una la letra del alfabeto ( por orden alfabe\u0301tico) . Despue\u0301s se imprimira\u0301 una li\u0301nea por cada una de las letras que si\u0301 aparecen en la cadena ( tambie\u0301n por orden alfabe\u0301tico) , de la siguiente forma: La letra * * * x* * * aparece * * * n* * * veces# NotaRecuerda que debes preveer que adema\u0301s de los caracteres de la cadena, tambie\u0301n hay que guardar el caracter de fin de cadena al final del arreglo de caracteres. | | inputprogramacion| | output2 0 1 0 0 0 1 0 1 0 0 0 1 1 2 1 0 2 0 0 0 0 0 0 0 0La letra a aparece 2 vecesLa letra c aparece 1 vecesLa letra g aparece 1 vecesLa letra i aparece 1 vecesLa letra m aparece 1 vecesLa letra n aparece 1 vecesLa letra o aparece 2 vecesLa letra p aparece 1 vecesLa letra r aparece 2 veces| | inputaaaaacccceeegghxxzzz| | output5 0 4 0 3 0 2 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 3La letra a aparece 5 vecesLa letra c aparece 4 vecesLa letra e aparece 3 vecesLa letra g aparece 2 vecesLa letra h aparece 1 vecesLa letra x aparece 2 vecesLa letra z aparece 3 veces| | end",
    "note": "",
    "topics": [
      "strings",
      "implementation"
    ],
    "id": 11037
  },
  {
    "title": "Mensaje ASCII",
    "url": "https://omegaup.com/arena/problem/Mensaje-ASCII",
    "history": "Mientras Iris buscaba informacio\u0301n en internet encontro\u0301 informacio\u0301n sobre el co\u0301digo ASCII al leer esa informacio\u0301n a ella le intereso\u0301 esto, y su intencio\u0301n de ella es aprenderlo por lo tanto le comento a su amigo Francisco para que la ayudara\u0301 a estudiar y practicar el co\u0301digo ASCII, asi\u0301 que Iris ahora le escribe a Francisco sus mensajes en co\u0301digo ASCII, pero desafortunadamente e\u0301l no le entiende a este co\u0301digo por lo tanto e\u0301l te contacto a ti como buen programador para que lo ayudes a construir un traductor de cadenas recibidas en ASCII para que e\u0301l le pueda entender.",
    "input": "* * * N* * * nu\u0301meros ASCII",
    "output": "El significado de la palabra",
    "note": "",
    "topics": [
      "implementation",
      "strings"
    ],
    "id": 10928
  },
  {
    "title": "Baker$",
    "url": "https://omegaup.com/arena/problem/Baker-ANEI",
    "history": "Baker e Iris son muy buenas amigas. El mes pasado, Iris se mudo\u0301 de la ciudad y ahora su u\u0301nica forma de comunicarse es usando cartas. Como tanto Baker como Iris son gatos, cada una de sus letras contiene una cadena de * * * N* * * caracteres. Para crear una forma ma\u0301s segura de comunicacio\u0301n, Iris decidio\u0301 que cifrara\u0301 los mensajes que envi\u0301a a Baker mediante el siguiente procedimiento: Primero agregue el cara\u0301cter * * * * al final de la cadena, luego creara\u0301 todas las rotaciones de la cadena en orden lexicogra\u0301fico. Considere que el cara\u0301cter * * * * es el ma\u0301s bajo lexicogra\u0301ficamente. La cadena encriptada se realiza tomando el u\u0301ltimo cara\u0301cter de cada rotacio\u0301n. ! [ enter image description here] [ 1] Su tarea es ayudar a Baker a descifrar la carta que Iris ha enviado.",
    "input": "La entrada consta de varios casos de prueba. Cada caso de prueba consiste en una li\u0301nea con una cadena * * * S* * * que contiene solo caracteres en minu\u0301scula y el si\u0301mbolo * * * * * * .",
    "output": "Para cada caso de prueba, imprima en una li\u0301nea el mensaje descifrado.",
    "note": "",
    "topics": [
      "strings",
      "implementation"
    ],
    "id": 10916
  },
  {
    "title": "un_anagrama_sencillo",
    "url": "https://omegaup.com/arena/problem/un_anagrama_sencillo",
    "history": "Un anagrama es una palabra o frase que resulta de la transposicio\u0301n de letras de otra palabra o frase. Dicho de otra forma, una palabra es anagrama de otra si las dos tienen las mismas letras, con el mismo nu\u0301mero de apariciones, pero en un orden diferente. Escribe un programa que lea dos palabras en minusculas, y determine si las palabras tienen la misma longitud, si no tuvieran la misma longitud, cancelar el programa, de lo contrario determinar si las palabras son anagrama una de otra.",
    "input": "La primer li\u0301nea de entrada contendra\u0301 la primer palabra ( so\u0301lo minusculas, del alfabeto ingle\u0301s( sin n\u0303) y a lo mucho contendra\u0301 1000 letras) . La segunda li\u0301nea contendra\u0301 la segunda palabra ( so\u0301lo minusculas, del alfabeto ingle\u0301s( sin n\u0303) y a lo mucho contendra\u0301 1000 letras) . | | inputimperdonablementeimponderablemente| | outputSI es un ANAGRAMA! | | inputbulliciosamenteescabullimiento| | outputSI es un ANAGRAMA! | | inputrocacoro| | outputNO es un Anagrama! | | inputenfriamientorefinamientos| | outputLas cadenas tienen longitud diferente. Operacion Cancelada! | | end",
    "output": "",
    "note": "",
    "topics": [
      "implementation",
      "strings"
    ],
    "id": 10863
  },
  {
    "title": "Tesla y las Constantes Enigm\u00e1ticas",
    "url": "https://omegaup.com/arena/problem/ConstantesEnigmaticas",
    "history": "> # Descripcio\u0301n> > Hace mucho tiempo Nikola Tesla se encontraba analizando las> propiedades de los numeros 3, 6 y 9. De entre todas ellas> encontro una que le permitia saber si un numero extremadamente> * * grande* * era divisible por 9 de manera relativamente rapida ( Puede que alguien mas ya hubiese descubierto dicha propiedad antes, pero ese> no es el punto de este problema) . Ahora tu como programador quieres> seguir los pasos de Tesla y disen\u0303ar un programa que te permita hacer> lo enunciado arriba. > \u2014\u2014\u2014- > # Problema> > Tienes la simple y sencilla labor de indicar si un numero n> es divisible por 9, de ser asi\u0301 debera\u0301s mostrar la frase> ` Divisibilidad\u00a1, en caso contrario debera\u0301s mostrar ` No es multiplo. ` > > Decimos que un numero A es divisible por B, si A mod B = 0. > > \u201cSi supieras la magnificencia de los nu\u0301meros> 3, 6, y 9 tendrias la llave del universo. \" > > - Nikola Tesla. ( ? \u2014\u2014\u2014- > # Entrada> > En la primera y u\u0301nica linea solo habra un entero n ( 1\u2264 n \u2264 10^ 38) - el nu\u0301mero cuyo valor se quiere evaluar. > > Hint: En C+ + los limites de n no * \" entran\" * siquiera < br> en un < kbd> unsigned long long< / kbd> . < br> > # Salida> > La frase correspondiente dependiendo de el valor que posea n. \u2014\u2014\u2014- # Ejemplos: | | input123381| | outputDivisibilidad! | | input277777788888899| | outputNo es multiplo. | | input1184| | outputNo es multiplo. | | end\u2014\u2014\u2014- > # Consideraciones : > - Cada caracter en la salida cuenta ( Eso incluye el ` . ` y el ` \u00a1) . > - El evaluador distingue entre mayu\u0301sculas y minu\u0301sculas. >",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "math",
      "strings",
      "number theory"
    ],
    "id": 10851
  },
  {
    "title": "Una importante decision",
    "url": "https://omegaup.com/arena/problem/Una-importante-decision",
    "history": "< br/ > Los tres hobbits Jose\u0301, Mari\u0301a y el buen Morelos teni\u0301an la importante tarea de destruir el collar para gobernarlos a todos. Despue\u0301s de una larga travesi\u0301a esta\u0301n muy cerca del final de su tarea, pero fue cuando se preguntaron. \" \u00bfPor que\u0301 no conservarlo? \" , y como son un grupo que apoya la democracia decidieron realizar una votacio\u0301n para decidir si conservarlo. < br/ > Como juez imparcial que eres te encargaras de contar los votos de este legendario grupo.",
    "input": "< br/ > 3 votos, cada uno puede ser Si o No.",
    "output": "< br/ > En caso de que la mayori\u0301a sea Si imprimir \" Que podria salir mal? \" . En caso contrario imprimir \" Por la comarca\" . < br/ >",
    "note": "",
    "topics": [
      "strings"
    ],
    "id": 10842
  },
  {
    "title": "SUMAS Capic\u00faa",
    "url": "https://omegaup.com/arena/problem/1-AHEYOND",
    "history": "\u2014\u2014\u2014- # HistoriaEn una clase de aritme\u0301tica, el profesor menciona que cualquiera de las operaciones que estamos acostumbrados a hacer necesitan dos elementos para poder ser calculados, ni tres, ni cuatro, ni uno, * * dos elementos* * , es decir, por ejemplo para hacer una suma se necesitan dos elementos y me da por resultado. . . el resultado que se le llama suma. \u2014\u2014\u2014- # ProblemaDespue\u0301s de unos momentos te pones a reflexionar sobre si esto es verdad y te das cuenta que es cierto, siempre se necesitan al menos dos elementos. Deseas crear una suma y esta suma tiene muchos elementos, es rara para muchos, pero comu\u0301n para pocos, asi\u0301 que te has visto obligado a usar algu\u0301n lenguaje de programacio\u0301n y programar la solucio\u0301n. \u2014\u2014\u2014- # Informacio\u0301n adicional necesariaLa suma se compone de nu\u0301meros crecientes y decrecientes, es decir, por ejemplo * * 1 2 3 4 5* * para los crecientes y * * 5 4 3 2 1* * para los decrecientes, en este caso el resultado seria * * 30* * Al ver estos nu\u0301meros has visto que se pueden acomodar al realizar el calculo de tal forma se logra apreciar una hermosa * * capicu\u0301a* * , de la siguiente manera, * * 5* * * 1* * * 4* * * 2* * * 3* * * 3* * * 2* * * 4* * * 1* * * 5* , En matema\u0301ticas, la palabra capicu\u0301a \u200b se refiere a cualquier nu\u0301mero que se lee igual de izquierda a derecha que de derecha a izquierda. \u2014\u2014\u2014- # Descripcio\u0301n de la entradaIntroducira\u0301s un u\u0301nico numero entero es decir no tiene decimales. \u2014\u2014\u2014-",
    "input": "- N numero entero\u2014\u2014\u2014- # Descripcio\u0301n de la salidaMostraras una sola linea con los nu\u0301meros que conforman la capicua, entre cada numero deberas de colocar el * * si\u0301mbolo de la suma* * * * + * * , cuando llegues al ultimo numero debera\u0301s colocar el * * si\u0301mbolo de igual* * * * = * * y los sumaras ese resultado de colocara despue\u0301s del igual, ( nada lleva espacios todo va junto) . \u2014\u2014\u2014- # Consideraciones importantes- Solo mostraras la capicua cuando la cantidad de nu\u0301meros a sumar sea menor o igual a de * * 30* * nu\u0301meros, cuando la cantidad de nu\u0301meros sobrepase los * * 30* * , es decir sea mayor a * * 30* * remplazaras la capicua por un mensaje que diga, \" * * SON MAS DE 30 NUMEROS* * \" ( sin las comillas) ( en mayu\u0301sculas) . \u2014\u2014\u2014- # Formato establecido para la salida* * En caso de que la cantidad de nu\u0301meros sea menor o igual a 30* * N_ x, representa un n numeroR, representa el resultado de la suma de los nu\u0301meros anterioresN_ 5+ N_ 1+ N_ 4+ N_ 2+ N_ 3+ N_ 3+ N_ 2+ N_ 4+ N_ 1+ N_ 5= R* * ( no contiene espacios en blanco todo va junto) * * . * * En caso de que la cantidad de nu\u0301meros sea mayor a 30* * SON MAS DE 30 NUMEROS = R* * ( no contiene espacios en blanco todo va junto, a excepcio\u0301n del el mensaje que conserva sus respectivos espacios en blanco, mire los ejemplos de salida para mejor comprensio\u0301n) * * . \u2014\u2014\u2014- # Diez ejemplos| | input5| | output5+ 1+ 4+ 2+ 3+ 3+ 2+ 4+ 1+ 5= 30| | input1| | output1+ 1= 2| | input13| | output13+ 1+ 12+ 2+ 11+ 3+ 10+ 4+ 9+ 5+ 8+ 6+ 7+ 7+ 6+ 8+ 5+ 9+ 4+ 10+ 3+ 11+ 2+ 12+ 1+ 13= 182| | input15| | output15+ 1+ 14+ 2+ 13+ 3+ 12+ 4+ 11+ 5+ 10+ 6+ 9+ 7+ 8+ 8+ 7+ 9+ 6+ 10+ 5+ 11+ 4+ 12+ 3+ 13+ 2+ 14+ 1+ 15= 240| | input16| | outputSON MAS DE 30 NUMEROS= 272| | input384| | outputSON MAS DE 30 NUMEROS= 147840| | input12345| | outputSON MAS DE 30 NUMEROS= 152411370| | input8941371| | outputSON MAS DE 30 NUMEROS= 79948124301012| | input9223372036854775807| | outputSON MAS DE 30 NUMEROS= 85070591730234615856620279821087277056| | input85070591730234615856620279821087277056| | outputSON MAS DE 30 NUMEROS= 7237005577332262212403911129196324050040567869261087880162974071057591304192| | end\u2014\u2014\u2014- # Li\u0301mites- * * Para el 16",
    "output": "",
    "note": "",
    "topics": [
      "implementation",
      "strings"
    ],
    "id": 10841
  },
  {
    "title": "Cara o escudo",
    "url": "https://omegaup.com/arena/problem/Cara-o-Escudo",
    "history": "Jaime acaba de aprender el juego de \u201ccara o escudo\u201d ( o \u201ccara o corona\u201d) . Este juego consiste en lanzar una moneda hacia el aire, permitie\u0301ndole girar y observar si la moneda aterriza con la \u201ccara\u201d o el \u201cescudo\u201d boca arriba. El profesor de matema\u0301ticas le explico\u0301 a Jaime que jugando el juego de cara o escudo varias veces, se puede obtener una secuencia de resultados. Por ejemplo, la lista completa de las secuencias posibles al jugar cara o escudo 3 veces, es la siguiente: CCC, CCE, CEE, CEC, EEE, ECE, EEC, ECC* Fig 1. Todas las secuencias de cara o escudo de longitud 3. C singifica cara, E escudo* El profesor le explico\u0301 que aunque los resultados de cada juego sean aleatorios, se pueden obtener todas las posibles permutaciones de una longitud n, si se juega cara o escudo suficientes veces. Jaime quiere comprobar si lo que le dijo su profesor es cierto, y para eso, escribe un programa que identifica si todas las combinaciones para una secuencia de longitud n existen en un string input. Por ejemplo, en la siguiente cadena de caracteres, se pueden obtener todas las posibles secuencias de resultados de longitud 2. ECECCEEECCE* Fig 2. Un string the longitud total k = 11, donde se encuentran todas las posibles secuencias de longitud n = 2. * E| CE| CC| EE| EC| CE* Fig 3. Divisiones necesarias para obtener todas las posibles secuencias de longitud n = 2, Empezando despue\u0301s del primer caracter, p = 1* \u00bfPuedes ayudarle a Jaime? Escribe un programa, que calcule, dado input string S, si es posible obtener todas las combinaciones de una secuencia de \u201ccara o escudo\u201d de taman\u0303o n. Se debe dar un n\u0301umero p, que indica en que\u0301 posicio\u0301n se empieza a dividir y contar las secuencias. Si hay varias soluciones para el problema, da cual sea tenga el valor de n ma\u0301s alto. Una secuencia no puede ser repetida en la sucesio\u0301n.",
    "input": "La entrada correspondera\u0301 al string que simboliza el resultado de muchos juegos de cara o escudo. La entrada puede tener hasta 11000 caracteres.",
    "output": "La salida consistira\u0301 de dos nu\u0301meros. Primero un nu\u0301mero * n* y * p* , en este orden, descritos en el problema. Si hay varios valores de * n* o * p* que satisfagan una solucio\u0301n, escoge la solucio\u0301n que primero tenga el mayor valor de * n* , y despue\u0301s el menor valor de * p* .",
    "note": "",
    "topics": [
      "implementation",
      "math",
      "sortings",
      "strings"
    ],
    "id": 10810
  },
  {
    "title": "Ordenamiento Alfabetico",
    "url": "https://omegaup.com/arena/problem/Ordenamiento-Alfabetico",
    "history": "# DescripcionJacobo andaba de curioso viendo la lista de los participantes de la OMI para ver si estaba su mayor enemigo, en eso se dio cuenta que la lista no tenia un orden especial, asi\u0301 que decido ordenarla alfabeticamente. Santy decidio hacer un problema acerca de esto. # ProblemaDada una lista de n nombres, ordenarlos de forma alfabetica ( no distingir entre mayusculas y minusculas) . * * Nota* * : Si hay dos palabras que son la misma si no distinguimos entre mayusculas y minusculas; entonces, desempatamos por la menor lexicograficamente tomando encuenta mayusculas y minusuclas.",
    "input": "Un nu\u0301mero n que representa la cantidad de participantes, luego n palabras que son los nombres de los participantes. Los nombres son una solo cadena sin espacios, con letras del alfabeto ingles en mayusculas o minusculas.",
    "output": "Los nombres ordenados alfabeticamente",
    "note": "",
    "topics": [
      "sortings",
      "implementation",
      "strings"
    ],
    "id": 10806
  },
  {
    "title": "N\u00fameros ocultos",
    "url": "https://omegaup.com/arena/problem/Numeros-ocultos",
    "history": "# HistoriaCarlos es jefe de grupo de la carrera de informa\u0301tica por lo tanto debe de tener una comunicacio\u0301n muy cercana con cada uno de sus profesores, casi todos sus profesores le han dado su nu\u0301mero telefo\u0301nico sin problemas, pero el maestro de matema\u0301ticas discretas le comenta que e\u0301l es muy desconfiado y que le escribira\u0301 en una hoja una serie de nu\u0301meros 2 X * * * N* * * los cuales no son su verdadero nu\u0301mero telefo\u0301nico, esto es con el fin de evitar de que caiga en otras manos. El profesor al terminar al terminar de escribir las lineas de 2 X * * * N* * * le comenta a Carlos que si quiere averiguar su nu\u0301mero debe de retar el primero por el segundo y sumar el segundo por el primero.",
    "input": "En la primera linea un nu\u0301mero * * * N* * * el cual sera la cantidad de nu\u0301meros a recibir, en las siguientes lineas recibira\u0301s dos nu\u0301meros con los cuales realizar el me\u0301todo que el profesor le ha comentado a Carlos.",
    "output": "Imprimir los resultados de cada nu\u0301mero de manera \" desencriptada\"",
    "note": "",
    "topics": [
      "implementation",
      "strings",
      "brute force"
    ],
    "id": 10805
  },
  {
    "title": "Islotes",
    "url": "https://omegaup.com/arena/problem/Islotes",
    "history": "Tu mejor amigo esta\u0301 obsesionado con las palabras, tengan o no sentido. Hoy se levanto\u0301 particularmente imaginativo con el concepto de un * islote* , comenta\u0301ndote lo siguiente: * \" Un islote es un caracter cuyos caracteres vecinos ( a su derecha e izquierda) son ide\u0301nticos entre si\u0301, pero distintos al caracter en cuestio\u0301n. El primer y u\u0301ltimo caracter de una palabra no pueden ser islotes, pues solamente tienen un caracter vecino. \" * Tu amigo insiste en que lo ayudes a contar el nu\u0301mero de islotes en las palabras que se le ocurran, algunas bastante largas. Ya que eres un poco perezoso, decidiste escribir un programa que efectu\u0301e la tarea en cuestio\u0301n.",
    "input": "Una cadena de hasta 200 caracteres.",
    "output": "Un entero representando el nu\u0301mero de islotes.",
    "note": "",
    "topics": [
      "strings",
      "implementation"
    ],
    "id": 10799
  },
  {
    "title": "Calificaciones de un grupo",
    "url": "https://omegaup.com/arena/problem/Calificaciones-de-un-grupo",
    "history": "El profesor Oswaldo es una persona avanzada de edad por lo tanto tarda muchos di\u0301as elaborando su informe de calificaciones de los grupos a los cuales imparte clase, tu\u0301 como buen estudiante de informa\u0301tica le comentaste que puede optimizar mucho tiempo si genera su reporte de calificaciones de manera automatizada y ofreciste tu ayuda para realizar un programa. El profesor te comento\u0301 que si hay dos alumnos con calificacio\u0301n ma\u0301s alta debes de considerar ordenarlos de manera alfabe\u0301tica, pero solo mostrando a un so\u0301lo alumno, esta misma regla se aplica la persona con menor calificacio\u0301n, de igual manera te recordo\u0301 que las calificaciones se ponen en escala del * * * 1 al 100* * * , en donde los alumnos que obtienen un promedio mayor o igual a 60 son los que aprueban al curso, en el caso de los alumnos que tienen una calificacio\u0301n menor que 60 son los que se consideran como reprobados. Debido a que es muy comu\u0301n tener errores al momento de tipear debera\u0301s validar que la calificacio\u0301n ingresada no sea mayor a * * * 100* * * o menor a * * * 0* * * ya que si no se considera esto el reporte de calificaciones puede salir incorrecto, en caso de que se ingrese una calificacio\u0301n debera\u0301s de advertir esta situacio\u0301n no valida mostrando el siguiente mensaje \" * * UPS, ERROR! , DIGITE DE NUEVO LA CALIFICACION* * \" y posteriormente debera\u0301s solicitar de nuevo la calificacio\u0301n.",
    "input": "En la primera linea un entero * * * N* * * la cual representa el nu\u0301mero de alumnos a capturar, en las siguientes lineas 2 x * * * N* * * los nombres junto con el primer apellido y el la calificacio\u0301n de los * * * N* * * alumnos.",
    "output": "- Promedio total del grupo, en caso de tener decimales solo se deben de mostrar dos en caso contrario no mostrar ninguno. - Cantidad de alumnos aprobados- Cantidad de alumnos reprobados- La calificacio\u0301n mayor y el alumno que la obtuvo- La calificacio\u0301n menor y el alumno que la obtuvo",
    "note": "",
    "topics": [
      "implementation",
      "sortings",
      "strings",
      "math",
      "matrices",
      "data structures"
    ],
    "id": 10794
  },
  {
    "title": "Bloques cayendo",
    "url": "https://omegaup.com/arena/problem/1er-ccp-bloques",
    "history": "Deseas iniciar tu carrera como desarrollador * indie* de videojuegos y uno de tus primeros intentos sera\u0301 programar una versio\u0301n del popular juego de * Tetris* . Comenzara\u0301s programando la cai\u0301da de bloques de 2 \u00d7 2 segmentos ( la famosa ficha cuadrada) en una zona de juego de 10 filas y 10 columnas. Como el di\u0301a de hoy no tienes mucho tiempo para dedicarte a programar tu juego, la eliminacio\u0301n de filas llenas la dejara\u0301s para otro di\u0301a y no la implementara\u0301s.",
    "input": "- Un entero N, indicando el nu\u0301mero de bloques. - La siguiente li\u0301nea contiene N enteros, indicando las columnas donde caera\u0301n los bloques, en ese orden. - La columna dada para cada bloque corresponde a la columna izquierda del mismo. - Las columnas esta\u0301n numeradas a partir de 0. - Esta\u0301 garantizado que los bloques apilados nunca se saldra\u0301n de la zona de juego. - Habra\u0301n a lo mucho diez bloques, es decir, 0 \u2264 N \u2264 10.",
    "output": "Una matriz de caracteres con 10 filas y 10 columnas, la cual denota la zona de juego despue\u0301s de que cayeron los bloques. Un caracter ` . ` denota una celda desocupada y un caracter ` # ` denota una celda ocupada por un segmento de bloque.",
    "note": "",
    "topics": [
      "math",
      "strings",
      "matrices",
      "implementation"
    ],
    "id": 10792
  },
  {
    "title": "Dibujando un coraz\u00f3n",
    "url": "https://omegaup.com/arena/problem/Dibujando-un-corazon",
    "history": "Debera\u0301s realizar un algoritmo que imprima un corazo\u0301n de altura 12, el taman\u0303o del lado izquierdo sera\u0301 de 6 y del lado derecho de 5",
    "input": "En la primera li\u0301nea recibira\u0301s una letra cualquiera.",
    "output": "Mostrar el corazo\u0301n con la letra que se tecleo\u0301.",
    "note": "",
    "topics": [
      "strings",
      "implementation"
    ],
    "id": 10771
  },
  {
    "title": "Dibujando una pir\u00e1mide",
    "url": "https://omegaup.com/arena/problem/Dibujando-una-piramide",
    "history": "Tu tarea es dibujar una pira\u0301mide de * * * N x N* * * .",
    "input": "En la primera linea recibira\u0301s un valor entero el cual sera\u0301 el taman\u0303o de la pira\u0301mide, en la segunda linea recibira\u0301s una letra cualquiera.",
    "output": "La pira\u0301mide impresa.",
    "note": "",
    "topics": [
      "implementation",
      "dp",
      "matrices",
      "dfs and similar",
      "strings",
      "math"
    ],
    "id": 10769
  },
  {
    "title": "El legado m\u00e1s grande",
    "url": "https://omegaup.com/arena/problem/1er-ccp-abues",
    "history": "Durante la u\u0301ltima fiesta familiar te llamo\u0301 mucho la atencio\u0301n ver que tus abues tambie\u0301n son abues de ma\u0301s nin\u0303as y nin\u0303os. Esto te dio tanta curiosidad que empezaste a ver que\u0301 tantos nietos tuvieron los abuelos de tus papa\u0301s y los abuelos de tus abuelos. Asi\u0301 se te ocurrio\u0301 una genial pregunta que\u0301 contestar: * \" \u00bfQuie\u0301n ha dejado el legado de nietos ma\u0301s grande en la historia de la familia? \" * Despue\u0301s de escuchar tantas historias que te contaron tus papa\u0301s, ti\u0301os, abuelos y viejos amigos de la familia por fin conseguiste la informacio\u0301n necesaria para resolver esta pregunta. So\u0301lo queda la parte ma\u0301s divertida: escribe un programa que procese toda la informacio\u0301n y determine quie\u0301n ha tenido ma\u0301s nietos en la historia de la familia.",
    "input": "- Un entero N, indicando el nu\u0301mero de li\u0301neas. - N li\u0301neas. Cada li\u0301nea tendra\u0301 dos palabras, A y B, que representan una relacio\u0301n entre dos miembros de la familia. - A es el nombre de la hija o hijo. - B es el nombre de la madre o padre. - No hay familiares con nombres repetidos. - En la familia ninguna pareja de padres tiene antepasados en comu\u0301n. Es decir, no existe ninguna pareja de padres que tuvieran el mismo familiar de abuelo, o tatarabuelo, o bisabuelo, etc. - So\u0301lo se consideran nietos los hijos de hijos. - 1 \u2264 N \u2264 1, 200",
    "output": "El nombre del familiar con ma\u0301s nietos en la familia. En dado caso de empate listar los familiares empatados en orden alfabe\u0301tico separados por un espacio. # Ejemplos| | input5YoMerengues MamaLindaMamaLinda AbuelaLinaMamaLinda AbueloTitoTiaTere AbueloTitoPrimaVera TiaTere| | outputAbueloTito| | descriptionEn tanto a nietos AbueloTito tiene 2 ( PrimaVera y YoMerengues) , AbuelaLina tiene 1 ( YoMerengues) , y todos los dema\u0301s tienen 0. Asi\u0301 AbueloTito es quie\u0301n ha tenido ma\u0301s nietos en la historia de la familia. | | input6YoMerengues MamaLindaMamaLinda AbuelaLinaMamaLinda AbueloTitoTiaTere AbueloTitoPrimaVera TiaTereAbueloTito BisabuelaTita| | outputAbueloTito BisabuelaTita| | descriptionLa diferencia con el ejemplo anterior es la incorporacio\u0301n de BisabuelaTita que tiene 2 nietas ( MamaLinda y TiaTere) . La respuesta es empate entre AbueloTito y BisabuelaTita. | | end",
    "note": "",
    "topics": [
      "strings",
      "implementation",
      "trees",
      "sortings",
      "graphs"
    ],
    "id": 10730
  },
  {
    "title": "Teclado defectuoso",
    "url": "https://omegaup.com/arena/problem/Teclado_defectuoso",
    "history": "Iva\u0301n es muy buen programador por lo que es capaz de escribir muy ra\u0301pido en el teclado de su computadora. Ultimamente ha tenido muchas responsabilidades; proyectos, tareas, escribir problemas, entrenar entre otras cosas. Anoche escribio\u0301 un ensayo de varias pa\u0301ginas, pero como estaba tan cansado no se dio cuenta de que su teclado estaba fallando de tal manera que cada vez que queri\u0301a escribir un espacio se escribi\u0301a un guio\u0301n bajo en su lugar ( ' _ ' ) . Iva\u0301n se acaba de dar cuenta de este desperfecto y no tiene tiempo para corregir su ensayo, pero tampoco lo puede dejar asi\u0301 porque Juan, su profesor, es muy estricto y no le validara\u0301 la calificacio\u0301n de este ensayo. Por esta razo\u0301n Iva\u0301n esta\u0301 en riesgo de reprobar la materia y como a nadie le gusta reprobar, ha decidio\u0301 pedirte ayuda para solucionar su problema. Ahora sabes que tienes que hacer un programa que le ayude a Iva\u0301n, este programa debe de leer una cadena hasta el fin del archivo y reemplazar todos los guiones bajos por espacios.",
    "input": "Son varias li\u0301neas de caracteres. Cada li\u0301nea contiene letras mayu\u0301sculas y minu\u0301sculas del alfabeto americano, signos de puntuacio\u0301n, di\u0301gitos y el cara\u0301cter del guio\u0301n bajo ' _ ' .",
    "output": "Imprimir cada li\u0301nea reemplazando los guiones bajos por espacios.",
    "note": "",
    "topics": [
      "strings",
      "implementation"
    ],
    "id": 10726
  },
  {
    "title": "Teclas del Nokia",
    "url": "https://omegaup.com/arena/problem/Serial_Nokia",
    "history": "# Descripcion* Bienvenido de nuevo a los 90' s* Escribe un programa para escribir un mensaje de texto en el nuevo modelo de tele\u0301fono Nokia que esta\u0301 por liberarse en el que se implemento la nueva funcion de enviar mensajes SMS, la idea es ahorrar espacio y combinar las letras con los di\u0301gitos de marcado, por lo tanto, un usuario debera\u0301 aprender a escribir presionando diferente nu\u0301mero de veces un di\u0301gito a fin de conseguir la letra que desea agregar a su mensaje. ! [ enter image description here] [ 1] * * La siguiente tabla muestra los di\u0301gitos y las letras obtenidas: * * | Digito | Caracter | | \u2014\u2014- : | : \u2014\u2014\u2014\u2014\u2014- | | 1 | 1, [ Punto] | | 2 | 2abc | | 3 | 3def | | 4 | 4ghi | | 5 | 5jkl | | 6 | 6mno | | 7 | 7pqrs | | 8 | 8tuv | | 9 | 9wxyz | | 0 | 0, [ Espacio] | | # | [ Up / Low Case] |",
    "input": "Una secuencia de numeros de taman\u0303o indefinido que seran las teclas presionadas en el telefono",
    "output": "El mensaje obtenido a partir de la secuencia de numeros",
    "note": "",
    "topics": [
      "implementation",
      "combinatorics",
      "constructive algorithms",
      "strings"
    ],
    "id": 10716
  },
  {
    "title": "Baker",
    "url": "https://omegaup.com/arena/problem/Baker",
    "history": "Baker e Iris son muy buenas amigas. El mes pasado, Iris se mudo\u0301 de la ciudad y ahora su u\u0301nica forma de comunicarse es usando cartas. Como tanto Baker como Iris son gatos, cada una de sus letras contiene una cadena de * * * N* * * caracteres. Para crear una forma ma\u0301s segura de comunicacio\u0301n, Iris decidio\u0301 que cifrara\u0301 los mensajes que envi\u0301a a Baker mediante el siguiente procedimiento: Primero agregue el cara\u0301cter * * * * al final de la cadena, luego creara\u0301 todas las rotaciones de la cadena en orden lexicogra\u0301fico. Considere que el cara\u0301cter * * * * es el ma\u0301s bajo lexicogra\u0301ficamente. La cadena encriptada se realiza tomando el u\u0301ltimo cara\u0301cter de cada rotacio\u0301n. ! [ enter image description here] [ 1] Su tarea es ayudar a Baker a descifrar la carta que Iris ha enviado.",
    "input": "La entrada consta de varios casos de prueba. Cada caso de prueba consiste en una li\u0301nea con una cadena * * * S* * * que contiene solo caracteres en minu\u0301scula y el si\u0301mbolo * * * * * * .",
    "output": "Para cada caso de prueba, imprima en una li\u0301nea el mensaje descifrado.",
    "note": "",
    "topics": [
      "dfs and similar",
      "math",
      "matrices",
      "data structures",
      "strings",
      "implementation",
      "dp"
    ],
    "id": 10710
  },
  {
    "title": "Ayuda a Pedro",
    "url": "https://omegaup.com/arena/problem/Ayuda-a-Pedro",
    "history": "A Pedro le gustan mucho las palabras y las peculiaridades en los enunciados, como cuando lees \u201catar a la rata\u201d de izquierda a derecha o de derecha a izquierda. Sin embargo, e\u0301l se dio cuenta en los u\u0301ltimos di\u0301as que le gustan ma\u0301s los nu\u0301meros y decidio\u0301 darle un valor a cada letra para entretenerse un rato. Lo que e\u0301l hizo fue asignar \u2018a\u2019= 1, \u2018b\u2019= 2, \u2018c\u2019= 3, . . . , \u2019z\u2019= 26 y noto que cada palabra teni\u0301a un valor entero si sumaba el valor de cada letra que la componi\u0301a, a este valor le llamo X. Por ejemplo el valor X de la palabra \u201carte\u201d equivale a 44 ya que \u2018a\u2019= 1, \u2018r\u2019= 18, \u2018t\u2019= 20, \u2018e\u2019= 5 y ( 1+ 18+ 20+ 5) = 44 y el valor X de la palabra \u201cjaja\u201d es igual a 22 porque \u2018a\u2019= 1, \u2018j\u2019= 10 y ( 10+ 1+ 10+ 1) = 22. Nota que en el abecedario no considero\u0301 la letra n\u0303 ni algun di\u0301grafo como ch o ll. Pedro necesita tu ayuda para resolver el siguiente problema: Dado un nu\u0301mero n encuentra una string lo ma\u0301s corta posible tal que su valor X sea igual a n. Si existen varias strings que cumplan esta condicio\u0301n imprime la ma\u0301s pequen\u0303a lexicogra\u0301ficamente. La string lexicogra\u0301ficamente ma\u0301s pequen\u0303a es aquella que apareceri\u0301a primero en el diccionario o formalmente hablando si se tienen dos strings A y B, A es lexicogra\u0301ficamente ma\u0301s pequen\u0303a que B si: - La string A es un prefijo de B y A es diferente de B. - En la primera posicio\u0301n donde A y B difieren, la string A tiene una letra que aparece primero en el alfabeto que la letra correspondiente en B.",
    "input": "Un entero n.",
    "output": "Una string lo ma\u0301s corta posible tal que su valor X sea igual a n. Si existen varias strings que cumplan esta condicio\u0301n imprime la ma\u0301s pequen\u0303a lexicogra\u0301ficamente.",
    "note": "",
    "topics": [
      "strings"
    ],
    "id": 10678
  },
  {
    "title": "B21 El logo de Veronica",
    "url": "https://omegaup.com/arena/problem/B21-El-logo-de-Veronica",
    "history": "Veronica es una persona muy inteligente para el mundo de las finanzas, por lo que decidio abrir su propio bufet de contadores, pero el ser buena en finanzas no significa que sea buena haciendo logos, como todos sabemos hacer logos tiene su magia y ciencia. Conciente de su falta de conocimiento decidio\u0301 consultar e investigar sobre como hacer un buen logo. Despue\u0301s de largo tiempo de investigacion decidio\u0301 que lo mejor era un logo con la forma de una V que es la inicial de su nombre. Veronica no sabe que palabra quedari\u0301a mejor para su logo, pues tiene varias palabras que podri\u0301an describir la profesionalidad de su bufet de contadores, pero ella sabe que mandar a hacer uno cada vez que se le ocurra una palabra no es muy rentable. Ayuda a Veronica a saber que como quedari\u0301a su logo con cada palabra que ella quiera.",
    "input": "Una sola cadena de taman\u0303o x, ( 2\u2264 x\u2264200) , la cadena puede contener espacios.",
    "output": "Imprimir la cadena que Veronica quiere en su logo, de la siguiente manera: | | inputVeronica| | outputV Ve er ro on ni ic caa| | inputConfiable| | outputC Co on nf fi ia ab bl lee| | end",
    "note": "",
    "topics": [
      "implementation",
      "strings"
    ],
    "id": 10641
  },
  {
    "title": "El flojo",
    "url": "https://omegaup.com/arena/problem/El-flojo",
    "history": "Carlitos es un aluno del ITSUR, el es muy flojo a si que cuando esta asciendo sus apuntes y escucha una palabra larga solo apunta la primera letra , el numero de letras entre la primera y la ultima letra, para el las palabras largas son las que tienen mas de 4 letras, ejemplo la palabra Milanesa la escribiri\u0301a asi\u0301 M6a, la palabra ingeniero seria asi i7o, la palabra hola se queda igual",
    "input": "Una cadena m",
    "output": "La palabra de forma acortada",
    "note": "",
    "topics": [
      "implementation",
      "math",
      "strings"
    ],
    "id": 10325
  },
  {
    "title": "Trituradores de Basura",
    "url": "https://omegaup.com/arena/problem/Trituradores-de-Basura",
    "history": "Luke Skywalker , Han Solo y la princesa Leia Organa estaban escapando de los soldados de asalto imperiales dentro de la temible estrella de la muerte. Durante el escape los 3 amigos lograron entrar a un ducto que los llevo a un cuarto feo y mal oliente lleno de basura que se encontraba cerca de las celdas de prisioneros. Para su mala suerte el cuarto a donde entraron era uno de los trituradores de basura de la estrella de la muerte. Afortunadamente su amigo C3PO( que es un androide de protocolo) , esta escondido en las ca\u0301maras de vigilancia de la estrella de la muerte, desde ahi\u0301 puede desactivar los trituradores de basura y salvar la vida de sus amigos. ! [ enter image description here] [ 1] # ProblemaC3PO se encuentra frente a una paleta de comandos en el cuarto de ca\u0301maras de vigilancia, para poder desactivar los trituradores C3PO tiene que ingresar el codigo correcto en la paleta de comandos( ver figura) . Que es dado un numero entero N ( que es el numero de triturador) escribir en la paleta de comando el numero entero mas cercan o igual al numero N. Esta paleta de comandos es un poco especial ya que si presionas una tecla, no puedes presionar ninguna otra tecla que este ala izquierda o arriba de la que acabas de presionar, es decir si presionas una tecla 5 ya no podras presionar las teclas 1, 2, 3, 4, 7 porque se encuntran ya sea arriba o a la izquierda de la tecla 5, sin embargo puedes presionar cualquiera de las siguentes teclas 5, 6, 8, 9, 0. ! [ enter image description here] [ 2] ! [ enter image description here] [ 3] Dado un numero N ayuda a C3PO a encontrar el numero entero mas cercano que se pueda escribir en esta paleta de comandos.",
    "input": "En la primera linea de entrada un numero entero Q que representa la cantidad de casos a evaluar. En las siguientes Q lineas , un numero entero N por linea.",
    "output": "Q lineas ( una por caso) , que representan la solucio\u0301n para cada uno de los casos. * Nota: en caso de haber dos o mas soluciones que cumplan con lo que el problema pide , imprimir la que el numero sea menor.",
    "note": "",
    "topics": [
      "dfs and similar",
      "graphs",
      "graph matchings",
      "strings",
      "implementation"
    ],
    "id": 10286
  },
  {
    "title": "Y^3 + X^5 = N^7",
    "url": "https://omegaup.com/arena/problem/Y3--X5--N7",
    "history": "# HistoriaUn dia, Sebas estaba leyendo un Tzaloa de la OMM, y se encontro un problema muy dificil: \" Dado un entero N, determina si se cumple la igualdad Y^ 3 + X^ 5 = N^ 7 para algun X, Y entero. \" , cuya solucion no encontro. Tu como buen programador que eres, escribe un codigo que resuelva dicho problema.",
    "input": "Un entero N.",
    "output": "Imprime 1 o - 1 si existen o no dichos enteros respectivamente.",
    "note": "",
    "topics": [
      "meet-in-the-middle",
      "math",
      "dp",
      "graph matchings",
      "graphs",
      "flows",
      "combinatorics",
      "number theory",
      "greedy",
      "geometry",
      "brute force",
      "trees",
      "data structures",
      "strings",
      "binary search",
      "matrices",
      "string suffix structures",
      "sortings",
      "dfs and similar",
      "shortest paths",
      "games",
      "implementation",
      "constructive algorithms"
    ],
    "id": 9724
  },
  {
    "title": "Sumita cuadrada",
    "url": "https://omegaup.com/arena/problem/Sumita-cuadrada",
    "history": "Sebas esta\u0301 en un entrenamiento de matematicas, y le presentaron un problema: \" Demuestra que para toda N existe una suma de N nu\u0301meros tal que su suma sea un cuadrado perfecto. \" , Sebas esta muy ocupado para resolver ese problema, y tu\u0301 como buen programador que eres, te ha pedido que demuestres el problema con \" casitos\" .",
    "input": "Un entero N",
    "output": "Los N nu\u0301meros distintos entre si\u0301 separados por un espacio y ordenados en orden creciente tal que su suma sea un cuadrado perfecto",
    "note": "",
    "topics": [
      "shortest paths",
      "number theory",
      "math",
      "matrices",
      "flows",
      "greedy",
      "brute force",
      "strings",
      "trees",
      "string suffix structures",
      "data structures",
      "implementation",
      "combinatorics",
      "dfs and similar",
      "dp",
      "geometry",
      "binary search",
      "sortings",
      "graphs",
      "graph matchings",
      "games",
      "constructive algorithms",
      "meet-in-the-middle"
    ],
    "id": 9723
  },
  {
    "title": "Top Secret",
    "url": "https://omegaup.com/arena/problem/Top-Secret",
    "history": "# DescripcionAaron es un alumno muy apasionado por resolver distintos problemas. En este caso el creo un pequen\u0303o algoritmo de encriptacion, no muy dificil por que se baso en el teclado de un nokia. Para ello Aaron te da un papelito donde tiene una serie de numeros y caracteres que son el mensaje encriptado, y como el quiere que aprendas y mejores tus habilidade en programacion, el te da el papelito con el mensaje encriptado y tu debes de devolverle el mensaje desencriptado. Aaron se basa encriptando las frases en el siguiente teclado. ! [ Texto alternativo] ( teclado1. png) # ProblemaTu desafio es revelar los mensajes encriptados. para demostrarle a Aaron que no es el unico que sabe programar. para esto tu programa debera de leer el mensaje encriptado y tu deberas de realizar un algoritmo capaz de revelar cualquier mensaje encriptado de Aaron. para esto debes de considerar lo siguiente: * 1 se usara solo para convertir la siguiente letra en mayuscula* 0 sera un espacio en blanco* ' - ' se usara cuando se quiera repetir una letra o usar otra letra que su identificador sea el mismo numero. Ejemplo: 555- 555 sera \" ll\" o 66- 666 sera \" no\"",
    "input": "Una unica entrada que sera la frase encriptada",
    "output": "Como salida debera ser la frase desencriptada.",
    "note": "",
    "topics": [
      "implementation",
      "strings"
    ],
    "id": 9618
  },
  {
    "title": "\u00bfWhat is love?",
    "url": "https://omegaup.com/arena/problem/What-is-love",
    "history": "Melanie es una chica enamoradiza, nunca pasa una temporada entera sin tener pareja. Esto significa que sus relaciones no duran mucho, por lo que Melanie a empezado a dudar de si existe el amor. . . ! [ enter image description here] [ 1] Por suerte la nueva pareja de Melanie, Adriana, estudio ciencias de la computacio\u0301n y como un gesto roma\u0301ntico decidio\u0301 enviarle mensajes roma\u0301nticos a Melanie. Ella los leyo\u0301 en su smartphone y decidio\u0301 imprimirlos, sin embargo su impresora esta malograda e imprimio\u0301 el mensaje sobre una cadena de nu\u0301meros. Sin embargo ella es super ecolo\u0301gica asi\u0301 que decide quedarse con las impresiones. Pero hay algunas que no tienen todo el mensaje entero asi\u0301 que te pide ayuda. \u00bfPuedes decirle a Melanie si el mensaje que le envio\u0301 Adriana esta en la impresio\u0301n? De ser asi\u0301 puedes decirle en que posicio\u0301n se encuentra cada letra, del mensaje en la impresio\u0301n. Imprime las posiciones en orden.",
    "input": "- La primer li\u0301nea de entrada contendra\u0301 un nu\u0301mero n, el taman\u0303o de laimpresio\u0301n. - La segunda li\u0301nea de entrada contendra\u0301 un string s, el mensaje queleyo\u0301 Melanie. - La tercera linea de entrada contendra\u0301 un string w de taman\u0303o n, lo quese imprimio\u0301.",
    "output": "Si el mensaje se encuentra en la impresio\u0301n escribir * * YES* * y acto seguido escribir varios lineas con los i\u0301ndices en los que se encuentra cada letra del mensaje en la impresio\u0301n. Caso contrario solo escribir * * NO* * | | input12lindal6i23n2d32a3| | outputYES025710| | end| | input8preciosapreciosa| | outputYES01234567| | end| | input27te quiero123t23e23q23u32i32e32r34o23| | outputNO| | end# Limites- 2< = n< = 500- 1< = s, w< = 500> NOTA: En el tercer ejemplo puedes ver que el mensaje original tiene un> espacio y la impresio\u0301n no lo tiene, por ello la impresio\u0301n es> incorrecta. Varios de los mensajes de Adriana son frases y otros> solo palabras pero Melanie te dara\u0301 algunos puntos si le ayudas solo con palabras: > > - 75 puntos por un mensaje que es solo una palabra> - 25 puntos por un mensaje que es una frase# AyudaSi quieres leer frases que contengan espacios en c+ + puedes ver el siguiente [ link. ] ( https: / / repl. it/ repls/ LovelySillyDebugger)",
    "note": "",
    "topics": [
      "implementation",
      "combinatorics",
      "strings",
      "greedy"
    ],
    "id": 9613
  },
  {
    "title": "Palabra corta",
    "url": "https://omegaup.com/arena/problem/Palabra-corta",
    "history": "Realiza un programa que solicite al usuario nn palabras. El programadebera\u0301 solicitar las nn palabras y debera\u0301 imprimir cua\u0301l de ellas tiene menoscaracteres, de cua\u0301ntos caracteres consta dicha palabra y si el nu\u0301mero decaracteres de dicha la palabra es impar o par.",
    "input": "Un nu\u0301mero entero n seguido de n palabras.",
    "output": "La palabra con menos caracteres, cantidad de caracteres de esa palabra y si el nu\u0301mero de caracteres de dicha la palabra es impar o par.",
    "note": "",
    "topics": [
      "implementation",
      "sortings",
      "strings"
    ],
    "id": 9593
  },
  {
    "title": "Contando vocales",
    "url": "https://omegaup.com/arena/problem/Contando-vocales",
    "history": "Codificar un programa que lea una cadena de caracteres e informa la cantidad de ocurrencias de cada vocal en la cadena.",
    "input": "Se ingresa una unica linea que contiene una cadena de hasta 500 caracteres. Los caracteres pueden ser digitos y letras, mayusculas y minusculas.",
    "output": "Mostrar en una unica linea 5 numeros enteros separados por un espacio. El primero es la cantidad de veces que aparece la vocal ' a' ( en mayusculas o minusculas) . El segundo representa la cantidad de veces de la vocal ' e' . Y los tres restantes, la ' i' , ' o' y ' u' ,",
    "note": "",
    "topics": [
      "binary search",
      "strings",
      "implementation"
    ],
    "id": 9512
  },
  {
    "title": "Cifrado Chido1",
    "url": "https://omegaup.com/arena/problem/Cifrado-Chido1",
    "history": "Trabajas en la CIA y se te dio el encargo de cifrar las palabras que te envian dependiendo de la primera letra del mensajesi es una vocal se muestran primero las vocales, luego las consonantes y si la primera letra es una consonante primero se muestranlas consonantes, luego las vocales .",
    "input": "Un string palabra de N caracteres",
    "output": "Si es vocal la primera letra primero se muestran las vocales y despues las consonantes siguiendo el orden de la palabra originalSi es consonante la primera letra primero se muestran las consonantes y despues las vocales siguiendo el orden de la palabra original",
    "note": "",
    "topics": [
      "strings",
      "implementation"
    ],
    "id": 9421
  },
  {
    "title": "K-cambios en el Alfabeto de Rob",
    "url": "https://omegaup.com/arena/problem/El-alfabeto-de-Rob",
    "history": "En el CUCEI existe un grupo de alumnos llamado el Club de los Programadores Muertos. Este club esta\u0301 abierto para cualquiera que este\u0301 interesado en estudiar programacio\u0301n competitiva. La costumbre del club es estudiar temas de programacio\u0301n competitiva para despue\u0301s, en conjunto, resolver algunos problemas interesantes. Pero no todo es estudiar para los Programadores Muertos, tambie\u0301n les gusta jugar juegos, tomar cafe\u0301 y filosofar sobre la vida. Un di\u0301a a Rob se le ocurrio\u0301 inventar un juego para desafiar a todos los miembros del club. El juego consiste en intercambiar la posicio\u0301n de las letras del alfabeto para posteriormente ordenar palabras lexicograficamente con base en este nuevo alfabeto propuesto. Un ejemplo seri\u0301a que Rob dice que cambia la posicio\u0301n de las letras ` ' a' ` y ` ' c' ` , y posteriormente propone la palabra ` ' casas' ` por lo que el resultado de la palabra ordenada seri\u0301a ` ' caass' ` y no ` ' aacss' ` .",
    "input": "La primera linea contiene un entero T indicando los casos de prueba. Por cada caso de prueba la primera linea es un entero K el cual indica cua\u0301ntos cambios de posicio\u0301n se realizara\u0301n. Las siguientes K lineas son dos caracteres c1 y c2 separados por un espacio. La u\u0301ltima linea contiene una cadena de caracteres. Esta\u0301 asegurado que la cadena so\u0301lo contiene letras minu\u0301sculas del alfabeto americano.",
    "output": "Por cada caso de prueba imprimir en una linea la cadena ordenada de acuerdo al nuevo alfabeto propuesto por Rob.",
    "note": "",
    "topics": [
      "strings",
      "sortings"
    ],
    "id": 9288
  },
  {
    "title": "Instrucciones para subir una escalera",
    "url": "https://omegaup.com/arena/problem/Subir-escalera",
    "history": "Nadie habra\u0301 dejado de observar que con frecuencia el suelo se pliega de manera tal que una parte sube en a\u0301ngulo recto con el plano del suelo, y luego la parte siguiente se coloca paralela a este plano, para dar paso a una nueva perpendicular, conducta que se repite en espiral o en li\u0301nea quebrada hasta alturas sumamente variables. Agacha\u0301ndose y poniendo la mano izquierda en una de las partes verticales, y la derecha en la horizontal correspondiente, se esta\u0301 en posesio\u0301n momenta\u0301nea de un peldan\u0303o o escalo\u0301n. Cada uno de estos peldan\u0303os, formados como se ve por dos elementos, se situ\u0301a un tanto ma\u0301s arriba y adelante que el anterior, principio que da sentido a la escalera, ya que cualquiera otra combinacio\u0301n producira\u0301 formas quiza\u0301 ma\u0301s bellas o pintorescas, pero incapaces de trasladar de una planta baja a un primer piso. Las escaleras se suben de frente, pues hacia atra\u0301s o de costado resultan particularmente inco\u0301modas. La actitud natural consiste en mantenerse de pie, los brazos colgando sin esfuerzo, la cabeza erguida aunque no tanto que los ojos dejen de ver los peldan\u0303os inmediatamente superiores al que se pisa, y respirando lenta y regularmente. Para subir una escalera se comienza por levantar esa parte del cuerpo situada a la derecha abajo, envuelta casi siempre en cuero o gamuza, y que salvo excepciones cabe exactamente en el escalo\u0301n. Puesta en el primer peldan\u0303o dicha parte, que para abreviar llamaremos pie, se recoge la parte equivalente de la izquierda ( tambie\u0301n llamada pie, pero que no ha de confundirse con el pie antes citado) , y lleva\u0301ndola a la altura del pie, se le hace seguir hasta colocarla en el segundo peldan\u0303o, con lo cual en e\u0301ste descansara\u0301 el pie, y en el primero descansara\u0301 el pie. ( Los primeros peldan\u0303os son siempre los ma\u0301s difi\u0301ciles, hasta adquirir la coordinacio\u0301n necesaria. La coincidencia de nombre entre el pie y el pie hace difi\u0301cil la explicacio\u0301n. Cui\u0301dese especialmente de no levantar al mismo tiempo el pie y el pie) . Llegado en esta forma al segundo peldan\u0303o, basta repetir alternadamente los movimientos hasta encontrarse con el final de la escalera. Se sale de ella fa\u0301cilmente, con un ligero golpe de talo\u0301n que la fija en su sitio, del que no se movera\u0301 hasta el momento del descenso. Escribe un programa que imprima en pantalla estos extran\u0303os feno\u0301menos conocidos como escaleras.",
    "input": "El nu\u0301mero de escaleras a imprimir.",
    "output": "La escalera con su i\u0301ndice.",
    "note": "",
    "topics": [
      "implementation",
      "strings"
    ],
    "id": 9257
  },
  {
    "title": "El Misterio del numero 6174",
    "url": "https://omegaup.com/arena/problem/El-Misterio-del-numero-6174",
    "history": "Hace ya mucho an\u0303os un matema\u0301tico descubrio\u0301 que si tienes un numero de mas de 1 cifra o de menos de 5 cifras y ordenas los di\u0301gitos de Mayor a Menor, luego de Menor a Mayory restas el numero MAYOR obtenido menos el MENOR y despue\u0301s al resultado obtenido le repites el mismo proceso va llegar un momento en que el resultado sera igual a 6174 sin excepcionesIMPORTANTE: Si el resultado de la resta tiene menos de 4 di\u0301gitos se le agregara un 0 al inicioTu tarea es encontrar cuantas veces se tiene que repetir el proceso para que la resta sea igual a 6174",
    "input": "Un numero de mas de 1 cifra pero menor de 5 cifras ejemplo 12, 021 o 1234",
    "output": "Mostrar la resta del Mayor - Menor y el resultado separado por un salto de lineaY al final mostrar cuantas veces se repitio\u0301 el proceso",
    "note": "",
    "topics": [
      "strings",
      "implementation"
    ],
    "id": 9208
  },
  {
    "title": "Dia unico",
    "url": "https://omegaup.com/arena/problem/Dia-unico",
    "history": "En un dia mientras estabas caminando, te diste cuenta que el di\u0301a en que esta viviendo, este di\u0301a es un di\u0301a unico, a comparacio\u0301n de todos los dema\u0301s por una u\u0301nica razon. # ProblemaDeterminar si \" Es un dia u\u0301nico\" o \" Es un di\u0301a ordinario\"",
    "input": "ingresa D que es el di\u0301a en que estas viviendo",
    "output": "Imprimir\" Es un dia unico\" o \" Es un di\u0301a ordinario\" dependiendo la fecha en que estas viviendo.",
    "note": "",
    "topics": [
      "strings"
    ],
    "id": 8991
  },
  {
    "title": "A Contar Letras",
    "url": "https://omegaup.com/arena/problem/A-Contar-Letras",
    "history": "Simple te pido que me cuentes el numero de letras que hay en una palabra * * ( sin contar espacios) . * *",
    "input": "Una * * cadena de caracteres. * *",
    "output": "Numero de letras que existen.",
    "note": "",
    "topics": [
      "strings"
    ],
    "id": 8987
  },
  {
    "title": "Instancias de clases",
    "url": "https://omegaup.com/arena/problem/Instancias-de-clases",
    "history": "* * ITSURITO* * esta\u0301 programado en java, e\u0301l es muy cuidadoso al programar, es tan cuidadoso que siempre declara una sola variable de referencia por li\u0301nea y en la misma li\u0301nea siempre crea la instancia de la clase y la asigna a su variable. Por ejemplo, para declarar sus variables y crear las instancias de clase lo hace de la siguiente manera: * * Integer miVariable = new Integer( \u201c5\u201d) ; * * * * ITSURITO* * te ha pedido que dado una lista de variables de referencia declaradas e inicializadas y una lista de asignaciones entre las diferentes variables de referencia, le indiques cua\u0301ntos objetos siguen siendo referenciados en el co\u0301digo.",
    "input": "Un nu\u0301mero D, que indica el nu\u0301mero de li\u0301neas que declaran variables de referencia y crean una instancia, seguido de un nu\u0301mero A que indica el nu\u0301mero de lineas que contienen asignaciones. En seguida D li\u0301neas donde cada D_ i contiene una cadena que representa una li\u0301nea de co\u0301digo que realiza una declaracio\u0301n e instancia de una clase, seguido de A li\u0301neas de co\u0301digo que realizan una asignacio\u0301n de variables. La li\u0301nea de co\u0301digo puede contener caracteres del alfabeto ingle\u0301s ( a- z y/ o A- Z) , digitos del 0 al 9 y los siguientes signos: * * \" ; \" * * * * \" . \" * * * * \" = \" * * y espacios en blanco.",
    "output": "Un nu\u0301mero N, que indica cuantas instancias esta\u0301n referenciadas al finalizar.",
    "note": "",
    "topics": [
      "constructive algorithms",
      "implementation",
      "strings"
    ],
    "id": 8937
  },
  {
    "title": "LA N (ETITC)",
    "url": "https://omegaup.com/arena/problem/LA-N-ETITC",
    "history": "Haga un programa que reciba como entrada un entero n y haga una N partiendo de esa descripcio\u0301n.",
    "input": "Como entrada recibira\u0301 un entero n.",
    "output": "La letra solicitada con las medidas dadas.",
    "note": "",
    "topics": [
      "implementation",
      "strings"
    ],
    "id": 8782
  },
  {
    "title": "ASCII for first four characters",
    "url": "https://omegaup.com/arena/problem/ASCII-equivalent",
    "history": "Escriba un programa que le pida al usuario que ingrese su nombre. Entonces deberi\u0301a imprimir elEquivalente ASCII de cada uno de los primeros cuatro caracteres de su nombre. Por ejemplo, Aqui\u0301 hay una muestra del programa a continuacio\u0301n.",
    "input": "\u201c` Kent\u201c`",
    "output": "\u201c` K ASCII value is 75e ASCII value is 101n ASCII value is 110t ASCII value is 116\u201c` # Ejemplos| | inputAna| | outputA ASCII value is 65n ASCII value is 110a ASCII value is 97| | inputJorge| | outputJ ASCII value is 74o ASCII value is 111r ASCII value is 114g ASCII value is 103| | inputAlberto| | outputA ASCII value is 65l ASCII value is 108b ASCII value is 98e ASCII value is 101| | end",
    "note": "",
    "topics": [
      "implementation",
      "strings"
    ],
    "id": 8700
  },
  {
    "title": "Capitalize first four characters",
    "url": "https://omegaup.com/arena/problem/first-four",
    "history": "Escriba un programa que capitalice los primeros cuatro caracteres de una cadena convirtiendo los caracteres a su equivalente ASCII, luego agregue la cantidad necesaria para capitalizarlos y convierta los enteros de nuevo en caracteres. Imprime la cadena en mayu\u0301scula. Aqui\u0301 hay una muestra de co\u0301mo ejecutar este programa.",
    "input": "\u201c` kent\u201c`",
    "output": "\u201c` KENT\u201c` # Ejemplos| | inputjuan| | outputJUAN| | inputjorge| | outputJORGe| | inputAlberto| | outputALBErto| | end",
    "note": "",
    "topics": [
      "implementation",
      "strings"
    ],
    "id": 8699
  },
  {
    "title": "Intercalaci\u00f3n de Strings",
    "url": "https://omegaup.com/arena/problem/Intercalacion-de-Strings",
    "history": "Completar el programa dado codificando la funcio\u0301n IntercalacionStrings, la cual debe ser una funcio\u0301n recursiva que reciba dos strings A y B, y que retorne la intercalacio\u0301n de ambos, como una cadena formada por caracteres intercalados de A y B, tomados de derecha a izquierda. Observacio\u0301n: Los profesores revisara\u0301n el co\u0301digo de la funcio\u0301n que ud. suba, porque la misma debe codificarse de manera recursiva ( las soluciones iterativas no obtendra\u0301n puntos) .",
    "input": "La entrada consiste de dos li\u0301neas: La primera contiene el string A ( el cual puede tener hasta 80 caracteres) , y la segunda contiene el string B ( el cual puede tener hasta 80 caracteres)",
    "output": "La Salida contiene una u\u0301nica cadena con el contenido de la intercalacio\u0301n de derecha a izquierda segu\u0301n se describio\u0301 ma\u0301s arriba. | | inputAMORROSA| | outputRAOSMOAR| | inputFanSNUe ta T| | outputUTN Santa Fe| | end",
    "note": "",
    "topics": [
      "dp",
      "dfs and similar",
      "strings"
    ],
    "id": 8676
  },
  {
    "title": "OIRCh LSD Radix Sort",
    "url": "https://omegaup.com/arena/problem/OIRCh-LSD-Radix-Sort",
    "history": "LSD Radix sort es un algoritmo de ordenamiento que consiste en ordenar desde el digito menos significativo hasta el ma\u0301s significativo, de manera que al terminar de ordenar todas las columnas de digitos individualmente logres obtener un arreglo ordenado. Debera\u0301s usar LSD Radix sort para ordenar un arreglo de m cadenas de bits; cada una de ellas de n bits de longitud.",
    "input": "Dos enteros n y m separados por un espacio, seguidos de m cadenas de bits sin separar.",
    "output": "Las m cadenas de bits ordenadas.",
    "note": "",
    "topics": [
      "strings",
      "sortings",
      "implementation"
    ],
    "id": 8656
  },
  {
    "title": "N\u00fameros Narcisistas",
    "url": "https://omegaup.com/arena/problem/Numeros-Narcisistas",
    "history": "Un nu\u0301mero es narcisista si es igual a la suma de las potencias de sus cifras elevadas a la cantidad de cifras delnu\u0301mero. Asi\u0301, el nu\u0301mero narcisista ma\u0301s pequen\u0303o es 153, que tiene 3 cifras y 1 elevado a 3 + 5 elevado a 3 + 3 elevado a 3 = 153. Leer un nu\u0301mero entero X ( mayor que 1 y menor que < 500000) e informar si el mismo es narcisista",
    "input": "La entrada consiste de una u\u0301nica li\u0301nea conteniendo un valor entero x.",
    "output": "La salida consiste de una li\u0301nea con el mensaje \" Es Narcisista\" o \" No es Narcisista\" segu\u0301n corresponda a X. | | input154| | outputNo es Narcisista| | input8208| | outputEs Narcisista| | end",
    "note": "",
    "topics": [
      "implementation",
      "strings"
    ],
    "id": 8644
  },
  {
    "title": "Tarjetas Inv\u00e1lidas",
    "url": "https://omegaup.com/arena/problem/Tarjetas-Invalidas",
    "history": "Trabajas para el banco Bancomega y muchos clientes tienden a confundirse e intentan hacer transacciones de dinero a cuentas de Bankarel debido a que ambos bancos tienen logos y sucursales parecidos. Tu jefe te ha pedido que creas un programa para determinar si una tarjeta es de Bancomega o de Bankarel y te ha dicho que todas las tarjetas de Bancomega han sido generadas con el algoritmo de Luhn mientras que las de Bankarel no. Al ponerte a investigar el algoritmo de Luhn, descubres que puedes comprobar si una tarjeta es va\u0301lida comparando el u\u0301ltimo di\u0301gito con el resto de los nu\u0301meros. Se debe de hacer el siguiente proceso: - Empezando desde la derecha a la izquierda multiplicar cada segundo di\u0301gito por dos- Si el resultado de la multiplicacio\u0301n es un nu\u0301mero con dos di\u0301gitos, se cambiara\u0301 por la suma de sus dos di\u0301gitos. Si tiene un solo di\u0301gito, se queda igual. - Sumar todos estos di\u0301gitos que se obtuvieron con los otros di\u0301gitos que no fueron usados. - Si esta suma es divisible entre 10, la tarjeta es va\u0301lida. Por ejemplo, si tienes el nu\u0301mero 79927398712 y quisieras saber si es va\u0301lido, debes sacar cada segundo di\u0301gito empezando desde la derecha hasta la izquierda y multiplicar estos por dos: 7* * 9* * 9* * 2* * 7* * 3* * 9* * 8* * 7* * 1* * 2Primero se selecciona 1, luego 8, 3, 2 y 9. ( * * 9* * * 2 = 18, * * 2* * * 2 = 4, * * 3* * * 2 = 6, * * 8* * * 2 = 16, * * 1* * * 2 = 2) ( 18, 4, 6, 16, 2) Luego debes sumar estos di\u0301gitos1 + 8 + 4 + 6 + 1 + 6 + 2 = 28Y debes de sumar estos nu\u0301meros a los di\u0301gitos que no se usaron previamente: * * 7* * 9* * 9* * 2* * 7* * 3* * 9* * 8* * 7* * 1* * 2* * 28 + * * 7* * + * * 9* * + * * 7* * + * * 9* * + * * 7* * + 2 = 69. 69 no es divisible entre 10 y esto significa que esta tarjeta es inva\u0301lida. # EntradasUn nu\u0301mero * * C* * , la cantidad de tarjetas que se desea inspeccionar y * * C* * li\u0301neas con el nu\u0301mero de cada tarjeta \u03c6. # SalidasPara cada tarjeta, se debe imprimir en una linea nueva * * Bancomega* * si \u03c6 cumple con el algoritmo de Luhn o * * Bankarel* * si no.",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "strings",
      "implementation",
      "combinatorics"
    ],
    "id": 8625
  },
  {
    "title": "Subsecuencia com\u00fan m\u00e1s larga",
    "url": "https://omegaup.com/arena/problem/Subsecuencia-comun-mas-larga",
    "history": "Dadas dos cadenas, escribe un programa que calcule su subsecuencia comu\u0301n ma\u0301s larga. Una subsecuencia comu\u0301n se define como una seleccio\u0301n de posiciones en ambas cadenas donde los caracteres de una y otra son iguales y adema\u0301s se respeta el orden de aparicio\u0301n de los mismos en las cadenas. Una posicio\u0301n de una cadena no se puede hacer coincidir con ma\u0301s de una posicio\u0301n de la otra cadena.",
    "input": "Dos cadenas S y T. Puedes suponer que las cadenas esta\u0301n formadas u\u0301nicamente por letras y que tienen una longitud ma\u0301xima de 45000 caracteres.",
    "output": "Un entero N que sea la longitud de la subsecuencia comu\u0301n ma\u0301s larga de S y T. Si ninguna cadena supera los 1000 caracteres de longitud, tambie\u0301n debera\u0301n imprimirse N parejas de enteros I_ S, J_ T que denotan las posiciones de las coincidencias que conforman la subsecuencia ( en orden) . Si hay ma\u0301s de una respuesta, puedes imprimir cualquiera de ellas.",
    "note": "",
    "topics": [
      "dp",
      "strings"
    ],
    "id": 8618
  },
  {
    "title": "Alumnos de Lions",
    "url": "https://omegaup.com/arena/problem/Alumnos-de-Lions",
    "history": "Te han asignado como presidente de la generacio\u0301n, y tus superiores quieren que hagas una encuesta y que determines que\u0301 tan saludables esta\u0301n todos los alumnos. Para hacer esta tarea, has monitoreado a los dema\u0301s alumnos y podra\u0301s hacer un modelo matema\u0301tico de la salud respecto a dos variables: comida y tiempo en el gimnasio. Tienes una lista de * * N* * alumnos y sabes que hay cuatro comidas en la cafeteri\u0301a en orden ascendente de salud: - Pizza ( la menos saludable) - Tacos- Torta- Ensalada ( la ma\u0301s saludable) Tambie\u0301n sabes que la comida tiene ma\u0301s impacto en la salud que el tiempo en el gimnasio, asi\u0301 que decides ordenar los alumnos primero por comida y luego por tiempo en el gimnasio.",
    "input": "Un entero * * N* * , el nu\u0301mero de alumnos en la generacio\u0301n, seguido por * * N* * li\u0301neas. En cada una de las siguientes li\u0301neas, estara\u0301 el nombre del alumno ( una sola cuerda) , el nombre de su comida preferida ( una sola cuerda) y finalmente un entero que representa el tiempo en el gimnasio en horas * * H* * .",
    "output": "* * N* * li\u0301neas, cada uno con el nombre de cada alumno. El ma\u0301s saludable debe ir primero y el menos saludable debe ir al final.",
    "note": "",
    "topics": [
      "strings",
      "greedy",
      "implementation"
    ],
    "id": 8616
  },
  {
    "title": "Traductor-Lions",
    "url": "https://omegaup.com/arena/problem/Traductor-Lions",
    "history": "# # TraductorCarlos trabaja en Google y ayer se corrompieron todos los archivos y las copias del servicio de traduccio\u0301n debido a que un intern se quedo\u0301 dormido encima de su teclado y se incendiaron los servidores. Como Carlos el es el u\u0301ltimo intern que queda ( los dema\u0301s fueron despedidos) , le han asignado la tarea de reconstruir el servicio de traduccio\u0301n desde cero para man\u0303ana. Para este problema recibira\u0301s un diccionario y tendra\u0301s que traducir una frase utilizando ese diccionario.",
    "input": "Un nu\u0301mero * * N* * con la cantidad de entradas en el diccionario. En cada una de las siguientes * * N* * lineas, habra\u0301 dos strings, una palabra en el idioma original y su traduccio\u0301n. Despue\u0301s, seguira\u0301 una sola li\u0301nea con varias palabras ( ma\u0301ximo 1000) que deben ser traducidas.",
    "output": "La traduccio\u0301n de la frase dada",
    "note": "",
    "topics": [
      "strings"
    ],
    "id": 8613
  },
  {
    "title": "Agust\u00edn y sus meditaciones",
    "url": "https://omegaup.com/arena/problem/Agustin-y-sus-meditaciones",
    "history": "El pequen\u0303o Agusti\u0301n no esta a gusti\u0301n : ( Ayer llego\u0301 al palacio real, muy cansado de haber jugado toda la man\u0303ana, solo para encontrarse con la mala noticia de que su amigo Osman habi\u0301a refundido una nota en la que e\u0301l, Agusti\u0301n, habi\u0301a trabajado durante casi an\u0303o y medio. La nota llevaba una sola palabra producto de las duras meditaciones que habi\u0301a llevado durante toda su vida ( cinco an\u0303os tiene Agusti\u0301n) . Asi\u0301 que apenas se entero\u0301 lo primero que hizo fue buscar por todo el palacio recolectando todas las notas que encontraba. Hoy por la man\u0303ana llego\u0301 Osman al palacio, a lo que Agusti\u0301n le pregunto\u0301 por la nota, e\u0301l le respondio\u0301 que habi\u0301a estado jugando un juego muy divertido con una nota que se habi\u0301a encontrado, sus palabras exactas fueron: > Supongamos que tenemos una palabra; digamos \u201dpalabra\u201d, luego llegamos y escogemos dos letras del abecedario; digamos ' a' y ' b' , entonces lo que hacemos es llegar y cambiar en la palabra las letras ' a' por letras ' b' y las letras ' b' por letras ' a' , entonces \" palabra\" quedari\u0301a \" pblbarb\" \u00bfNo es asombroso? > E incluso lo podemos hacer con letras que no esta\u0301n en la palabra, digamos ' z' y ' l' , quedari\u0301a \" pbzbarb\" > Y mira, si lo hacemos con dos letras que no esta\u0301n en la palabra, digamos ' x' y ' y' , quedari\u0301a \" pbzbarb\" \u00a1Las posibilidades son infinitas! Agusti\u0301n se fue muy enojado a su cuarto y no ha salido de alli\u0301 desde el medio di\u0301a, no quiere hablar con nadie ni ha recibido nada de comida. Si bien Agusti\u0301n se sabe la palabra que e\u0301l habi\u0301a escrito, e\u0301l au\u0301n quiere hallar la nota, y esta\u0301 intentando descifrar cua\u0301l de las notas que e\u0301l recolecto\u0301 es la nota donde e\u0301l originalmente escribio\u0301 su palabra. E\u0301l ya descarto\u0301 todas aquellas donde el taman\u0303o de la palabra de Agusti\u0301n ( llamemosla S) y la palabra escrita en la nota ( llamemosla Q) son diferentes. Entonces e\u0301l te va a dar las dos palabras y tu\u0301 tienes que ayudarlo dicie\u0301ndole si se puede llegar desde la palabra que e\u0301l escribio\u0301 a la palabra escrita en la nota haciendo el juego de Osman cuantas veces sean necesarias ( No tenemos seguridad de cuantas veces hizo Osman el juego) . Ayu\u0301dalo por favor, e\u0301l au\u0301n tiene cinco an\u0303os y se le hacen muy difi\u0301ciles estos trabajos : (",
    "input": "Un cadena de cara\u0301cteres S; la palabra que escribio\u0301 Agusti\u0301n, y una cadena de cara\u0301cteres Q que consisten de solamente letras minu\u0301sculas del alfabeto ingle\u0301s. | S| = | Q| ( | S| se refiere al taman\u0303o de la cadena de cara\u0301cteres S) .",
    "output": "Imprime \u201cSi\u201c si se puede llegar de la palabra S a la palabra Q haciendo el juego de Osman; imprime \u201cNo\u201c si no se puede.",
    "note": "",
    "topics": [
      "strings",
      "implementation",
      "greedy"
    ],
    "id": 8591
  },
  {
    "title": "Palindromos",
    "url": "https://omegaup.com/arena/problem/Palindromo-Lions",
    "history": "Pinal y Marvin estaban discutiendo acerca de si la palabra \u201cLions\u201d es un pali\u0301ndromo o no, despue\u0301s de una larga discusio\u0301n de dos horas y una votacio\u0301n democra\u0301tica que se resolvio\u0301 con un voto de diferencia, se concluyo\u0301 que no es un pali\u0301ndromo. Como siempre se pierde mucho tiempo en discutir si una frase es un pali\u0301ndromo o no, tu tarea es ayudarlos con un programa que automatice la tarea de averiguar si una frase tiene la caracteri\u0301stica de ser pali\u0301ndromo ( ignorando si las letras son mayu\u0301sculas o minu\u0301sculas) .",
    "input": "Un nu\u0301mero * * N* * que indica cuantas frases van a probar en tu sistema. Enseguida * * N* * frases de menos de 100 caracteres que pueden ser o no ser pali\u0301ndromos.",
    "output": "* * N* * li\u0301neas con la palabra * * Si* * o la palabra * * No* * dependiendo de si es pali\u0301ndromo o no",
    "note": "",
    "topics": [
      "implementation",
      "strings"
    ],
    "id": 8579
  },
  {
    "title": "Productos gigantes",
    "url": "https://omegaup.com/arena/problem/Productos-gigantes",
    "history": "Seguramente esta\u0301s harto de los problemas difi\u0301ciles, asi\u0301 que aqui\u0301 va uno fa\u0301cil. # ProblemaMultiplicar 2 nu\u0301meros enteros X, Y ( 0 < = X, Y < = 10^ 250)",
    "input": "Dos li\u0301neas, la primera contiene al nu\u0301mero X y la segunda al nu\u0301mero Y.",
    "output": "El resultado de multiplicar X * Y.",
    "note": "",
    "topics": [
      "implementation",
      "math",
      "strings"
    ],
    "id": 8159
  },
  {
    "title": "Rompecabezas extra\u00f1o",
    "url": "https://omegaup.com/arena/problem/Rompecabezas-extrano",
    "history": "Un di\u0301a, como cualquier otro, Fernanda estaba jugando Fornite con Jose\u0301, jugaban y jugaban y nada ma\u0301s no ganaban : ( A Fernanda le entro\u0301 una crisis nerviosa de la rabia, al ser asesinada de un headshoot a 1500 m, por lo que decidio\u0301 dejar de jugar al fornait y ponerse a resolver rompecabezas. Uno de los rompecabezas con los que se cruzo\u0301 le estaba rompiendo la cabeza, como la intensio\u0301n de resolver rompecabezas era para relajarse decidio\u0301 pedirte tu ayuda, para no estresarse tanto ni tampoco sentirse como una inu\u0301til al no poder resolver el rompecabezas. \u00bfy de que\u0301 constaba el problema que tanto mosqueaba a Fer? se preguntaran, pues muy fa\u0301cil. . . la intencio\u0301n era acomodar ciertas palabras, las palabras que tuvieran las mismas letras se debi\u0301an de acomodar en un mismo monto\u0301n, asi\u0301 bien podi\u0301as tener muchos montones con muchas palabras. Pero ella tampoco quiere que todo lo hagas tu\u0301, reitero, no se quiere sentir inu\u0301til, por lo que solo le tendra\u0301s que decir la cantidad de palabras que tiene el monto\u0301n ma\u0301s grande.",
    "input": "N que representa la cantidad de palabras del rompecabezas. N_ i o sea N palabras",
    "output": "La cantidad de palabras en el monto\u0301n ma\u0301s grande.",
    "note": "",
    "topics": [
      "strings",
      "implementation",
      "sortings"
    ],
    "id": 7916
  },
  {
    "title": "La Pizza de Juanito",
    "url": "https://omegaup.com/arena/problem/La-Pizza-de-Juanito",
    "history": "Kevin y Blanca son dos amigos de Juanito que se la pasan comiendo pizza en su tiempo libre cuando ya terminaron de trabajar en sus robots. Como ya no saben si pedir pizza de pepperoni o hawaiiana decidieron jugar un juego para tomar la dificil decisio\u0301n. En una bolsa tienen monedas de 1, 2, 5 y 10 pesos. Juanito va a tomar una de las monedas. Sea * * N* * valor de la moneda que salga, lo van a multiplicar por * * N+ 2* * , si el resultado de la operacio\u0301n es par, pedira\u0301n hawaiiana, y si es impar, pedira\u0301n de pepperoni. Como Juanito es muy listo y sabe que se va a quedar con la moneda que agarre, siempre va a buscar la moneda que se sienta mas grande. Ayudalos a saber de que pizza comera\u0301n hoy.",
    "input": "El primer valor sera\u0301 * * K* * , el numero de monedas que hay en la bolsa. Los siguientes * * K* * valores sera\u0301n las monedas que hay en la bolsa.",
    "output": "La palabra * * hawaiiana* * o * * pepperoni* * dependiendo de que pizza pedira\u0301n.",
    "note": "",
    "topics": [
      "implementation",
      "strings"
    ],
    "id": 7855
  },
  {
    "title": "Maid Caf\u00e9",
    "url": "https://omegaup.com/arena/problem/Maid-Cafe",
    "history": "Un poco de Historia: # El dictador ' perpetuus' Julio Ce\u0301sar utilizaba un co\u0301digo cuando queri\u0301a mantener en secreto un mensaje. El cifrado consisti\u0301a en sustituir la primera letra del alfabeto, A, por la cuarta, D, y asi sucesivamente con las dema\u0301s, es decir, la segunda, B, por la quinta, E. . . Bien esto sucede si la clave es igual a 3, es decir si tomamos la primera letra y le sumamos 3, obtenemos entonces la cuarta letra. Para descifrar se tendri\u0301a que hacer la operacio\u0301n contraria. # Contexto: # En la ciudad se ha abierto un maid cafe\u0301. Las maid' s al repartir publicidad se dieron cuenta de la popularidad del negocio, tristemente no podri\u0301an atender a todos los interesados. Es entonces que se les ocurre una idea, Adriana una de las maid es estudiante de Computer Science, y propone que entraran al maid cafe\u0301 aquellas personas que puedan resolver un acertijo. El acertijo consta de descifrar un mensaje encriptado bajo el me\u0301todo del cifrado ce\u0301sar. . . Tu quieres ser uno de los pocos que entren al maid cafe\u0301 asi que tendra\u0301s que resolver los acertijos. # Las maid' s proponen este abecedario que se usara\u0301 para cifrar los mensajes: > \" abcdefghijklmnopqrstuvwxyz 0123456789\" # Observaciones, entre la Z y el 0 se considera el cara\u0301cter de espacio. Si al sumarle la clave a la posicio\u0301n de la letra, la posicio\u0301n excede el taman\u0303o del abecedario, entonces se regresa al inicio y se continua desde ahi\u0301.",
    "input": "Dos lineas de co\u0301digo, la primera tendra\u0301 un string con el mensaje encriptado. La segunda tendra\u0301 la clave para descifrar el mensaje.",
    "output": "Una u\u0301nica linea que contenga el mensaje descifrado",
    "note": "",
    "topics": [
      "strings",
      "implementation"
    ],
    "id": 7800
  },
  {
    "title": "Hackers",
    "url": "https://omegaup.com/arena/problem/Hackers_cpp",
    "history": "# DescripcionHackerMan tiene un mensaje que ha codificado en forma de di\u0301gitos, lo que significa que el mensaje solo contiene nu\u0301meros y nada ma\u0301s. Tiene miedo de que el enemigo pueda tener en sus manos el mensaje secreto y pueda descifrarlo. HackerMan ya conoce el mensaje de memoria y simplemente puede destruirlo. Pero e\u0301l quiere mantenerlo en caso de que sea necesario en una situacio\u0301n peor. Quiere seguir codificando el mensaje en un formato que no sea completamente reversible. De esta manera, si los enemigos se apoderan del mensaje, no podra\u0301n decodificarlo por completo. Como el mensaje solo consta de un nu\u0301mero, decide cambiar los nu\u0301meros. El primer di\u0301gito se convierte en el u\u0301ltimo y viceversa. Por ejemplo, si hay 3769 en el co\u0301digo, ahora se convierte en 9673. Se omiten todos los ceros iniciales, por ejemplo. 15900 da 951. De esta manera, la codificacio\u0301n no se puede descifrar por completo y se pierde algo de informacio\u0301n. HackerMan esta\u0301 pensando en complicar el proceso y necesita su ayuda. Decide agregar los dos nu\u0301meros volteados e imprimir el resultado en la forma codificada ( volteada) . Sin embargo, hay un problema en este me\u0301todo. Por ejemplo, podri\u0301a ser 431, 4310 o 43100 antes de invertir. Por lo tanto, el me\u0301todo garantiza que no se perdieron ceros, es decir, se puede suponer que el nu\u0301mero original fue 431.",
    "input": "La entrada consiste en N casos de prueba. La primera li\u0301nea de la entrada solo contiene el entero positivo N. Luego, siga los casos. Cada caso consta de exactamente una li\u0301nea con dos enteros positivos A B separados por espacio. Estos son los nu\u0301meros invertidos que debes agregar.",
    "output": "Para cada caso, imprima exactamente una li\u0301nea que contenga solo un nu\u0301mero entero: la suma invertida de dos nu\u0301meros invertidos. | | input3353 575238746 39857890 231| | output82952732732| | input21 2200 300| | output35| | end# LimitesEl numero de casos N sera 0 < = N < = 5000. El numero de digitos de A B incluyendo 0 seran 1 < = A < = B < = 500000",
    "note": "",
    "topics": [
      "strings"
    ],
    "id": 7789
  },
  {
    "title": "Clave de usuario",
    "url": "https://omegaup.com/arena/problem/Clave-de-usuario",
    "history": "Como alumno de una universidad, la coordinacio\u0301n de co\u0301mputo te puede otorgar una cuenta de correo electro\u0301nico asociada a una clave de usuario. Una forma comu\u0301n de generar una clave de usario es a partir de tus iniciales. Por ejemplo, podri\u0301amos convenir que tu clave de usuario consistiera de las iniciales de todos tus nombres seguidas de las iniciales de todos tus apellidos. Entonces la clave de usuario de Francisco Javier Mina deberi\u0301a ser .",
    "input": "Consiste de una cadena de longitud entre 1 y 80, que puede contener letras minu\u0301sculas, letras mayu\u0301sculas y espacios. Por supuesto, los espacios separan nombres y la primera letra de cada nombre es la inicial.",
    "output": "Consiste de una cadena formada por las iniciales en minu\u0301sculas en el mismo orden en el que aparecen. # Ejemplos| | inputfrANCiscO JavieR mINa| | outputfjm| | end| | inputSiLViA flOR CLarA rEYES SolIS| | outputsfcrs| | end",
    "note": "",
    "topics": [
      "strings"
    ],
    "id": 7764
  },
  {
    "title": "0110 0101 0122 0104",
    "url": "https://omegaup.com/arena/problem/tonsOfBits2",
    "history": "0110 0101 0122 0104 0012 0012 0120 0162 0157 0142 0154 0145 0155 0141 0012 0012 0104 0141 0144 01570040 0165 0156 0040 0156 0165 0155 0145 0162 0157 0040 0162 0145 0160 0162 0145 0163 0145 0156 01640141 0144 0157 0040 0145 0156 0040 0142 0141 0163 0145 0040 0157 0143 0164 0141 0154 0054 0040 01510155 0160 0162 0151 0155 0145 0040 0145 0154 0040 0156 0165 0155 0145 0162 0157 0040 0145 0156 00400162 0145 0160 0162 0145 0163 0145 0156 0164 0141 0143 0151 0157 0156 0040 0144 0145 0143 0151 01550141 0154 0056 0012 0012 0105 0152 0145 0155 0160 0154 0157 0012 0012 0105 0156 0164 0162 0141 01440141 0072 0040 0061 0064 0063 0012 0012 0123 0141 0154 0151 0144 0141 0072 0040 0071 0071 0012 00120114 0151 0155 0151 0164 0145 0163 0012 0012 0114 0141 0040 0162 0145 0163 0160 0165 0145 0163 01640141 0040 0156 0157 0040 0156 0145 0143 0145 0163 0151 0164 0141 0162 0141 0040 0155 0141 0163 00400144 0145 0040 0066 0064 0040 0142 0151 0164 0163 0040 0160 0141 0162 0141 0040 0163 0145 0162 00400162 0145 0160 0162 0145 0163 0145 0156 0164 0141 0144 0141 0056 0012 0000",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "math",
      "implementation",
      "strings"
    ],
    "id": 7660
  },
  {
    "title": "Super UAMKid Run",
    "url": "https://omegaup.com/arena/problem/Super-UAMKid-Run",
    "history": "Te gustan mucho los juegos de celular donde tu personaje corre a trave\u0301s de un escenario con precipicios y tu\u0301 so\u0301lo debes indicar en que\u0301 momento saltar. Acabas de comprar la expansio\u0301n de tu juego favorito pero ya te castigaron por jugar tanto, asi\u0301 que quieres escribir un programa que juegue por ti. Cada nivel del juego esta\u0301 representado por una cadena de caracteres ` # ` y espacios, donde ` # ` denota tierra firme y un espacio denota un precipicio. Comienzas del lado izquierdo del nivel y el objetivo es llegar al extremo derecho. Si esta\u0301s en tierra firme y al lado hay tierra firme, entonces puedes avanzar caminando; en caso contrario, tendra\u0301s que saltar. Existen precipicios ma\u0301s largos que otros ( mu\u0301ltiples espacios consecutivos) , pero saltando puedes avanzar por el aire de 1 a 5 celdas antes de aterrizar ( tu\u0301 decides la longitud del salto) . Escribe un programa que reciba la descripcio\u0301n de un nivel y calcule la menor cantidad de saltos que necesitas para completarlo.",
    "input": "Una cadena formada por caracteres ` # ` y espacios. Puedes suponer que la cadena comienza y termina con ` # ` , que la longitud de la cadena es a lo mucho 100 y que siempre se puede completar el nivel.",
    "output": "Un entero que sea la cantidad mi\u0301nima de saltos que se necesitan para completar el nivel.",
    "note": "",
    "topics": [
      "implementation",
      "strings"
    ],
    "id": 7541
  },
  {
    "title": "occ11nssf32",
    "url": "https://omegaup.com/arena/problem/occ11nssf32",
    "history": "# AcarreosHaga un programa que reciba como entrada dos nu\u0301meros naturales de a lo ma\u0301s 10 di\u0301gitos y que determine cua\u0301ntos acarreos se producen al sumar \u201ca mano\u201d esos nu\u0301meros. # Ejemplos| | input123 784| | output1| | input1547826 5478965324| | output6| | end",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "math",
      "strings",
      "implementation"
    ],
    "id": 7536
  },
  {
    "title": "occ11pnfd14",
    "url": "https://omegaup.com/arena/problem/occ11pnfd14",
    "history": "# Removiendo una cadenaA Alfredo le gusta remover cadenas de ceros y unos. Cada vezque e\u0301l ve una gran cadena de ceros y unos, e\u0301l se inventa una cadena a remover yprocede a remover todas las apariciones de la cadena. Si en la cadena resultante todavi\u0301aaparece la cadena que esta\u0301 removiendo vuelve a removerla, repitiendo este proceso hastaque no aparezca ninguna vez.",
    "input": "La primera li\u0301nea de la entrada contiene una cadena de hasta 150 0 \u0301s y 1 \u0301s, la cadena que ve Alfredo. La segunda li\u0301neacontiene la cadena de 0 \u0301s y 1 \u0301s que se inventa Alfredo de hasta 10 caracteres.",
    "output": "La cadena que queda despue\u0301s de haber removido todas las veces posibles la cadena inventada por Alfredo",
    "note": "",
    "topics": [
      "dp",
      "dfs and similar",
      "strings"
    ],
    "id": 7524
  },
  {
    "title": "01000101 01000001 01010011 01011001",
    "url": "https://omegaup.com/arena/problem/tonsOfBits",
    "history
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "implementation",
      "math",
      "strings"
    ],
    "id": 7509
  },
  {
    "title": "Creo que ya funciona",
    "url": "https://omegaup.com/arena/problem/Creo-que-ya-funciona",
    "history": "En tu nuevo trabajo en la NASA, se te pidio\u0301 realizar un programa que codificara en binario ( solo 0s y 1s) los mensajes entre laestacio\u0301n terrestre y los astronautas en el espacio. A pesar de haberle dedicado casi toda la tarde a la importante tarea, tussuperiores te reportan que cuando ejecutaron el programa, e\u0301ste recibi\u0301a de vez en cuando mensajes no binarios. Recordando los mejores an\u0303os de tu vida en la universidad, se te ocurre \" parchar\" temporalmente el programa para que parezcafuncionar correctamente por unos di\u0301as ( cuando tu equipo de lectura de comprensio\u0301n competitiva por fin despegue, ya no tendra\u0301sque preocuparte por estas nimiedades) . Para resolver el problema ra\u0301pidamente, se te ha ocurrido el \" Brillante Filtro DobleEstrella\" , que dejara\u0301 pasar los mensajes binarios sin modificarlos, mientras que aquellos no binarios sera\u0301n reemplazados porla cadena ' 10101' .",
    "input": "1 linea con el mensaje al cual se le debe aplicar el \" brillante filtro doble estrella\" .",
    "output": "1 li\u0301nea con el resultado de aplicar el filtro.",
    "note": "",
    "topics": [
      "strings",
      "implementation"
    ],
    "id": 7469
  },
  {
    "title": "\u00bfBuscando a Tavo?",
    "url": "https://omegaup.com/arena/problem/Buscando-a-Tavo",
    "history": "El equipo de ba\u0301squetbol de Tavo acaba de ganar la final y han decidido ir a festejar. Los amigos de la escuela de Tavo ya saben que es peligroso que Tavo se ponga \" happy\" , entonces le pidieron que se reporte con un mensaje, asi\u0301 ellos mediante su mensaje podra\u0301n saber su estado. Cuando Tavo se empieza a poner mal escribe asteriscos, tu trabajo es hacer un programa que te imprima que\u0301 tan mal esta\u0301 Tavo de acuerdo a los siguientes criterios. Si en toda la cadena no hay asteriscos o so\u0301lo hay uno, debes imprimir \" BIEN\" . Si en toda la cadena hay dos asteriscos significa que esta\u0301 un poquito happy, es decir comenzo\u0301 a hablar mucho, entonces imprimira\u0301s \" HAPPY\" . Si en toda la cadena encuentras tres o ma\u0301s asteriscos quiere decir que Tavo ya esta\u0301 muy mal y hay que ir a buscarlo, por lo que hay que imprimir \" BUSCAR A TAVO\" .",
    "input": "Una li\u0301nea que contiene el mensaje de Tavo.",
    "output": "Una li\u0301nea con el estado de Tavo de acuerdo al mensaje.",
    "note": "",
    "topics": [
      "implementation",
      "strings",
      "math"
    ],
    "id": 7468
  },
  {
    "title": "String con Vocales",
    "url": "https://omegaup.com/arena/problem/String-con-Vocales",
    "history": "Codificar un programa que lea una cadena de caracteres e informa la cantidad de ocurrencias de cada vocal en la cadena.",
    "input": "Se ingresa una unica linea que contiene una cadena de hasta 500 caracteres. Los caracteres pueden ser digitos y letras, mayusculas y minusculas.",
    "output": "Mostrar en una unica linea 5 numeros enteros separados por un espacio. El primero es la cantidad de veces que aparece la vocal ' a' ( en mayusculas o minusculas) . El segundo representa la cantidad de veces de la vocal ' e' . Y los tres restantes, la ' i' , ' o' y ' u' , | | inputSanta Fe| | output2 1 0 0 0| | end",
    "note": "",
    "topics": [
      "implementation",
      "strings"
    ],
    "id": 7443
  },
  {
    "title": "Saltos de rana",
    "url": "https://omegaup.com/arena/problem/Saltos-de-rana",
    "history": "Iggy es una rana que vive alado de un rio. Iggy cruzaba al otro lado del rio por un camino de rocas de taman\u0303o N, saltando de roca en roca pero un dia varias rocas desaparecieron dejando el camino incompleto, . Iggy solo puede recorrer k distancia en cada salto ( al terminar un salto debera estar en una piedra) y se pregunta si puede cruzar al otro lado del rio y de ser asi, cual es el mi\u0301nimo nu\u0301mero de saltos que necesitara hacer .",
    "input": "En la primer linea N y M, que son el taman\u0303o del rio y la distancia que Iggy puede recorrer en cada salto. En la siguiente linea una cadena de taman\u0303o N donde 1 representa una piedra y 0 representa agua. Se garantiza que el primer y u\u0301ltimo cara\u0301cter es 1",
    "output": "Un entero, la mi\u0301nima cantidad de saltos que Iggy debe usar para llegar a la ultima piedra o - 1 si no es posible.",
    "note": "",
    "topics": [
      "strings"
    ],
    "id": 7414
  },
  {
    "title": "Concatenacion de dos n\u00fameros",
    "url": "https://omegaup.com/arena/problem/Concatenacion-de-dos-numeros",
    "history": "Realiza un programa que lea dos nu\u0301meros e imprima su concatenacio\u0301n.",
    "input": "Dos enteros a y b, cada uno en su propia li\u0301nea.",
    "output": "La concatenacio\u0301n de ambos nu\u0301meros.",
    "note": "",
    "topics": [
      "strings"
    ],
    "id": 7388
  },
  {
    "title": "Lexemas y tokens",
    "url": "https://omegaup.com/arena/problem/Lexemas-y-tokens",
    "history": "Durante la etapa de ana\u0301lisis le\u0301xico, un compilador debe agrupar el conjunto decaracteres que compone un programa fuente en componentes gramaticales conocidascomo lexemas. Por cada lexema encontrado, el compilador debe producir un Tokenque representa una de las categori\u0301as sinta\u0301cticas de un lenguaje de programacio\u0301n. Considere un lenguaje de programacio\u0301n con las siguientes categori\u0301as sintacticas: * Identificadores: posicion, miVariable, PI, _ campo, contador2. * Palabras reservadas: if, else, do, while, break. * Tipos: num, bool. * Constantes nume\u0301ricas: 2, - 5, 3. 14, 2. 54e- 24, 0. 03, 1. 16e27, 5e28. * Constantes booleanas: false, true. * Operadores relacionales: < , > , < = , > = , = = * Operadores aritme\u0301ticos: + , - , , / ,",
    "input": "Una secuencia de caracteres ASCII que representan un programa fuente.",
    "output": "Por cada linea del programa fuente un entero que representa el nu\u0301mero de linea, seguido de un token por cada lexema encontrado de acuerdo a lo siguiente: * Identificadores: ID* Palabras reservadas: IF, ELSE, DO, WHILE, BREAK* Tipos: NUM, BOOL* Constantes nume\u0301ricas: LNUM* Constantes booleanas: FALSE, TRUE* Operadores relacionales: RELOP* Operadores aritme\u0301ticos: ARITHOP* Operadores lo\u0301gicos: LOGOP* Operadores de asignacio\u0301n: ASSIGN* Si\u0301mbolos de agrupacio\u0301n: LPAR, RPAR, LBRACKET, RBRACKET, LCURLY, RCURLY* Caracteres de puntuacio\u0301n: SEMICOLON",
    "note": "",
    "topics": [
      "expression parsing",
      "strings"
    ],
    "id": 7358
  },
  {
    "title": "BB Champivaca",
    "url": "https://omegaup.com/arena/problem/BB-Champivaca",
    "history": "BB champivaca es una vaca muy especial ya que aparte de ser una vaca que da buena leche tambie\u0301n tiene algo especial que es que se puede comunicar con las personas a trave\u0301s de sen\u0303as especiales al igual que puede programar en cualquier lenguaje. Un di\u0301a se encontraba pastando feliz cuando el granjero Chan le pidio\u0301 que le ayudara a hacer un control de la poblacio\u0301n de vacas que tenia debido a que esta habi\u0301a estado creciendo u\u0301ltimamente. Lo que le pidio\u0301 fue un programa que dado * * N* * vacas detectara cuanto era el ma\u0301ximo de vacas bebes que se encontraban juntas. A veces a BB champivaca no le gusta programar por lo que te ha solicitado a ti que le ayudes a programar.",
    "input": "* * N* * numero de vacas. * * X* * edad maxima que considera el granjero Chan para que sea una vaca bebe. Las siguientes * * N* * lineas tienen las edades de las vacas.",
    "output": "Una sola li\u0301nea expresando la mayor cantidad de vacas bebes que se encuentran juntas.",
    "note": "",
    "topics": [
      "implementation",
      "strings"
    ],
    "id": 7320
  },
  {
    "title": "Palabras prohibidas",
    "url": "https://omegaup.com/arena/problem/Palabras-prohibidas",
    "history": "Dada una cadena s y una cadena t borre ( cambie por espacios en blanco) cadauna de las ocurrencias de la cadena t en la cadenas s. Es decir, el taman\u0303ode la cadena s no cambia.",
    "input": "Dos cadenas de caracteres s y t. Puede asumir que ambas cadenas esta\u0301n compuestas por letras mayu\u0301sculas, minu\u0301sculas, puntos ycomas. Adema\u0301s puede asumir que la longitud de ambas cadenas es de a lo ma\u0301s 100caracteres.",
    "output": "La cadenas s con cada ocurrencia de la cadena t reemplazada por espacios en blanco.",
    "note": "",
    "topics": [
      "implementation",
      "strings"
    ],
    "id": 7185
  },
  {
    "title": "Dibujando un tri\u00e1ngulo",
    "url": "https://omegaup.com/arena/problem/Dibujando-un-triangulo",
    "history": "Dado un entero N, escribe un programa que dibuje un tria\u0301ngulo de arrobas. La punta del tria\u0301ngulo ( a incluirse en la primera fila del dibujo) debe estar formada por una arroba y cada fila posterior debe contener dos arrobas adicionales ( una a la izquierda y otra a la derecha) . La base del tria\u0301ngulo ( a incluirse en la u\u0301ltima fila del dibujo) debe estar formada por N arrobas. El tria\u0301ngulo debe aparecer centrado.",
    "input": "Un entero N. Puedes suponer que N es impar y que 0 < N < 500.",
    "output": "El dibujo del tria\u0301ngulo descrito.",
    "note": "",
    "topics": [
      "strings",
      "implementation"
    ],
    "id": 7166
  },
  {
    "title": "Ordenando las letras de la l\u00ednea",
    "url": "https://omegaup.com/arena/problem/Ordenando-las-letras-de-la-linea",
    "history": "Escribe un programa que lea una li\u0301nea de texto y la imprima con sus letras ordenadas. Los caracteres no alfabe\u0301ticos deben permanecer en su posicio\u0301n original.",
    "input": "Una li\u0301nea de texto de a lo mucho 100 caracteres. Puedes suponer que la li\u0301nea consiste de letras minu\u0301sculas, comas, puntos y espacios en blanco.",
    "output": "La li\u0301nea de texto con sus letras ordenadas",
    "note": "",
    "topics": [
      "strings",
      "sortings"
    ],
    "id": 7152
  },
  {
    "title": "El Hacker Gamma",
    "url": "https://omegaup.com/arena/problem/El-Hacker-Gama",
    "history": "Fuiste contratado para ayudar a la Agencia Nacional de Seguridad Informa\u0301tica ( ANSI) para resolver un enigma. Hace unos meses un hacker de origen desconocido apodado * * * gamma* * * ( como el nu\u0301mero misterioso) logro\u0301 penetrar al sistema, pero increi\u0301blemente no robo\u0301 datos ni modifico\u0301 nada. Al parecer solo quiere dar un mensaje, enviando el mismo a distintos correos electro\u0301nicos. Una parte del contenido versaba lo siguiente: * \u201cPorque encuentras felicidad en pantallas y mensajes, cuando el hombre en sus inicios podi\u0301a serlo con el simple apreciar de la naturaleza. Tu\u0301 mismo puedes comprobar que la misma esta\u0301 envuelta de nu\u0301meros como en la cola de un camaleo\u0301n. . . \u201d* El texto continuaba y ma\u0301s adelante versaba que en pocos di\u0301as llegari\u0301a una nueva carta y en caso de no ser resuelta, lanzari\u0301a un ataque fulminante contra los servidores de la agencia. Haciendo vulnerable la red de nuestro pai\u0301s. Uno de nuestros ma\u0301s inteligentes agentes alias * * * Delciuxs* * * encontro\u0301 un mensaje oculto dentro del primer mensaje. Pero no nos quiso decir. Simplemente a la man\u0303ana siguiente se presento\u0301 con nosotros y pidio\u0301 su renuncia. Sin antes darnos unas pistas para la siguiente carta. * Le gustan los nu\u0301meros* La razo\u0301n que versa el primer mensaje fue de oro, la que viene sera\u0301 de plata. * El nu\u0301mero de palabras del mensaje es indispensable para encontrar el mensaje oculto. * El mensaje oculto se encuentra dentro de la misma carta. * Tienen 10 di\u0301as para encontrar el mensaje, suficiente como para encontrar una palabra por di\u0301a. * Es importante el orden de las palabras, el uno arroja la primera, el dos arroja la segunda, el tres la tercera. . . * El siguiente si\u0301mbolo es un grandi\u0301simo regalo de mi parte. . . ! [ enter image description here] [ 1]",
    "input": "Una linea de texto que contiene el nuevo mensaje del hacker * * gamma* * , este texto no contiene puntos ( * * . * * ) ni comas ( * * , * * ) ni saltos de linea, todas las palabras esta\u0301n en minu\u0301sculas. * * * El texto del mensaje que se te dara\u0301 como input es el que se presenta a continuacio\u0301n: * * * * sabes que si tenemos lo necesario para vivir realmente importara el que avance la tecnologi\u0301a por supuesto que si pero vale la pena gastar tu vida lo que hago y haces para a veces desarrollar entretenimiento mismo que solo convierte a nuestro semejante en un ente menos critico este mi trabajo no consiste en menospreciar dicho esfuerzo puesto que aun en estas actividades de desarrollo de software sigue existiendo esta forma de generar el arte de programar el co\u0301digo tecnolo\u0301gico es un legado correcto gama*",
    "output": "Una u\u0301nica linea que contiene el mensaje oculto, cada palabra en minu\u0301sculas y separadas con un espacio. [ 1] : simbolo. png",
    "note": "",
    "topics": [
      "implementation",
      "strings",
      "number theory"
    ],
    "id": 7132
  },
  {
    "title": "La moda y sus signos",
    "url": "https://omegaup.com/arena/problem/La-moda-y-sus-signos",
    "history": "Dada una secuencia de N di\u0301gitos del 1 al 9 donde cada di\u0301gito puede aparecer con signo + o - , escribe un programa que determine que\u0301 di\u0301gito aparecio\u0301 ma\u0301s veces ( independientemente de los signos) y cua\u0301ntas veces aparecio\u0301 en su forma positiva y negativa.",
    "input": "Un entero N seguido de N di\u0301gitos del 1 al 9 en versiones positivas o negativas. Puedes suponer que 1 \u2264 N \u2264 1000.",
    "output": "Un entero que sea el di\u0301gito que aparecio\u0301 ma\u0301s veces, seguido de dos enteros que sean la cantidad de veces que aparecio\u0301 dicho di\u0301gito en su forma positiva y negativa. En caso de empate en apariciones, debe da\u0301rsele preferencia al di\u0301gito nume\u0301ricamente menor ( en magnitud) .",
    "note": "",
    "topics": [
      "strings",
      "math",
      "implementation"
    ],
    "id": 7126
  },
  {
    "title": "So\u00f1ando con n\u00fameros escalera",
    "url": "https://omegaup.com/arena/problem/Sonando-con-numeros-escalera",
    "history": "Te encantan los nu\u0301meros y cada noche suen\u0303as con ellos hasta el amanecer. Algunas veces suen\u0303as con nu\u0301meros primos, otras veces con cuadrados perfectos, pero sin duda tus suen\u0303os favoritos son en los que aparecen los * nu\u0301meros escalera* . Su hermosura te deja sin palabras para describirlos, asi\u0301 que es ma\u0301s fa\u0301cil explicar co\u0301mo se ven: 1, 121, 12321, 1234321, 123454321 son ejemplos de estos bellos nu\u0301meros. Cuando tu suen\u0303o comienza con un nu\u0301mero escalera eres muy feliz, pero cuando no, intentara\u0301s \" arreglar\" el nu\u0301mero N que esta\u0301s son\u0303ando para conseguir un nu\u0301mero escalera. Dados dos nu\u0301meros auxiliares A y B, tu primer intento para arreglar N sera\u0301 restarle A y luego dividirlo entre B + 1. Si obtienes un nu\u0301mero escalera podra\u0301s seguir feliz con tu suen\u0303o, pero sino hara\u0301s un segundo intento al restarle A + B y luego sumarle 1 a lo que te quedo\u0301 despue\u0301s del primer intento. Si despue\u0301s del segundo intento no lograste obtener un nu\u0301mero escalera, te rendira\u0301s y continuara\u0301s con tu suen\u0303o. Escribe un programa que determine si podra\u0301s son\u0303ar con un nu\u0301mero escalera. Como no te gustan los nu\u0301meros reales, en tus suen\u0303os manipulas u\u0301nicamente nu\u0301meros enteros.",
    "input": "Tres enteros N, A, B. Puedes suponer que 0 \u2264 N \u2264 5\u00d710^ 8 y 0 \u2264 A, B \u2264 10^ 4.",
    "output": "Si el nu\u0301mero N es escalera, imprimir el mensaje \" * es escalera inicialmente* \" . En caso de que no lo sea pero se pueda arreglar despue\u0301s del primer intento, imprimir el mensaje \" * es escalera despues del primer intento* \" . En caso de que hasta el segundo intento se pueda obtener un nu\u0301mero escalera, imprimir el mensaje \" * es escalera despues del segundo intento* \" . En caso de que no sea posible obtener un nu\u0301mero escalera, imprimir el mensaje \" * nos rendimos* \" . # Observacio\u0301nPor el valor de N, los u\u0301nicos nu\u0301meros escalera en rango son 1, 121, 12321, 1234321 y 123454321.",
    "note": "",
    "topics": [
      "strings",
      "implementation"
    ],
    "id": 7064
  },
  {
    "title": "Selecci\u00f3n de estudiantes",
    "url": "https://omegaup.com/arena/problem/Seleccion-de-estudiantes",
    "history": "U\u0301ltimamente en la Escuela Superior de Co\u0301mputo el concurso anual de programacio\u0301n ha tomado mucha importancia. Esto se debe a que los mejores competidores se reunen para demostrar sus habilidades y llevar el honor a casa, es por eso que en esta edicio\u0301n los directivos propusieron un problema con la intencio\u0301n de ir detectando a los mejores talentos de la escuela que nos podri\u0301an representar en las siguientes finales mundiales. Este problema no fue fa\u0301cil de escoger, largas horas de discusio\u0301n tuvieron que pasar para llegar a un acuerdo, inclusive dentro de estas discusiones surgieron otros problemas al hablar de este problema, pero eso es otra historia. Sin embargo, los directivos plantearon el problema y tuvieron que continuar con los preparativos, lo u\u0301nico malo es que no esta\u0301n seguros si la solucio\u0301n del problema es polinomial, quiza\u0301 tu\u0301 puedas ayudarlos. Ellos dejaron dos nu\u0301meros anotados en el pizarro\u0301n, tu tarea consiste en multiplicarlos e imprimir el u\u0301ltimo di\u0301gito de dicha multiplicacio\u0301n.",
    "input": "Las primeras 2 li\u0301neas contendra\u0301n los nu\u0301meros A y B ( 1 \u2264 A, B \u2264 10^ 1000000) .",
    "output": "El u\u0301ltimo di\u0301gito de la multiplicacio\u0301n de los 2 nu\u0301meros.",
    "note": "",
    "topics": [
      "strings",
      "math"
    ],
    "id": 7040
  },
  {
    "title": "Contar Palindromos",
    "url": "https://omegaup.com/arena/problem/Contar-Palindromos",
    "history": "Una cadena s de longitud | s| es palindroma si se lee igual de derecha a izquierda que de izquierda a derecha. Formalmente, es palindroma si y solo si s_ 1 s_ 2. . . s_ | s| - 1s_ | s| = s_ | s| s_ | s| - 1. . . s_ 2s_ 1. Mario te ha regalado una cadena T de longitud | T| por ganar la OCC. Pero ahora quieres responder q preguntas de la forma: Dados l y r, \u00bfCuantas parejas de indices ( i, j) hay tales que l \u2264 i \u2264 j \u2264 r y T_ iT_ i+ 1. . . T_ j es palindromo?",
    "input": "Li\u0301nea 1: La cadena T, la cadena consta solo de letras en ingle\u0301s en minu\u0301scula. Li\u0301nea 2: El entero q. Li\u0301neas 3 . . . 2+ q: Cada una describe una pregunta con 2 enteros ( l y r) separados por un espacio.",
    "output": "Imprima q li\u0301neas con las respuestas a cada una de las q preguntas.",
    "note": "",
    "topics": [
      "strings",
      "data structures"
    ],
    "id": 7030
  },
  {
    "title": "Transformaciones de una String",
    "url": "https://omegaup.com/arena/problem/Transformaciones-de-una-String",
    "history": "En este problema se te dara\u0301 una string S de longitud N. Tu tarea es hacer Q transformaciones en S. Una transformacio\u0301n se hace en un intervalo [ l, r] de S y existen dos tipos: * Instruccio\u0301n tipo 1: Ordena la substring del rango [ l, r] de manera no- decreciente. * Instruccio\u0301n tipo 2: Ordena la substring del rango [ l, r] de manera no- creciente. Al terminar todas las transformaciones debes dar como salida como se ve la string S.",
    "input": "En la primera li\u0301nea dos enteros N y Q, la longitud de S y la cantidad de transformaciones que debes realizar. En la segunda li\u0301nea una string de longitud N conformada solamente por letras minu\u0301sculas del alfabeto ingles. En las siguientes Q li\u0301neas tres enteros t, l y r. El tipo de transformacio\u0301n y el rango donde se debe aplicar.",
    "output": "La string S despue\u0301s de hacerle las Q transformaciones.",
    "note": "",
    "topics": [
      "implementation",
      "strings",
      "data structures"
    ],
    "id": 7028
  },
  {
    "title": "alemova el olvidadizo",
    "url": "https://omegaup.com/arena/problem/el-olvidadizo",
    "history": "# descripcionComo ya era de esperarse el buen alemova no pudo pasar al nacional : ( y ya es hora de regresar a clases, sin embargo de tanto tiempo encerrado con su amigo velazquez12, pues alemova olvido como contar despues de tantos codigos, y desagraciadamen su prfesora de literatura lo puso contar cuantas letras contenia un texto. # problemaalemova olvido contar y tu como su gran amigo crearas un programa que le ayudara saber cuantas letras contiene un texto con el numero de palabras desconocidas, la unica ayuda que se proporciona es que el texto terminara en un punto \" . \" el cual estara separado de la ultima palabra y ademas los espacios tampoco cuentan.",
    "input": "un texto de taman\u0303o desconocido.",
    "output": "un solo entero que te dira cuantas letras hay en total en el texto. | | inputaprende a contar . | | output14| | end# limitesno hay limites rifate krnal.",
    "note": "",
    "topics": [
      "math",
      "strings",
      "implementation"
    ],
    "id": 6992
  },
  {
    "title": "Mensajes DRM",
    "url": "https://omegaup.com/arena/problem/Mensajes-DRM",
    "history": "La encriptacio\u0301n DRM es relativamente nueva . Dada una cadena encriptada ( la cual llamaremos mensaje DRM) , la desencriptacio\u0301n consiste en tres simples pasos : * * Dividir* * , * * Rotar* * y * * Unir* * . Estos pasos se describira\u0301n usando el siguiente mensaje DRM como ejemplo , \u201cEWPGAJRB\u201d : - * * Divide* * - Primero , divide el mensaje a la mitad , obteniendo \" EWPG\" y \" AJRB\" . - * * Rota* * - Para cada mitad , calcula su valor de rotacio\u0301n , el cual se obtiene sumando el valor de cada cara\u0301cter ( A = 0 , B = 1 , . . . , Z = 25) . El valor de rotacio\u0301n de \" EWPG\" es 4 + 22 + 15 + 6 = 47 . Rota cada elemento de \" EWPG\" 47 veces hacia adelante ( pasando de A a Z en caso de ser necesario) para obtener una nueva cadena , \" ZRKB\" . Haciendo lo mismo con la segunda mitad \" AJRB\" , se obtiene \" BKSC\" . - * * Une* * - El u\u0301ltimo paso es unir la dos mitades obtenidas en el paso anterior , esto se lograra rotando cada cara\u0301cter de la primera mitad el valor correspondiente del cara\u0301cter en la segunda mitad . Para la primera posicio\u0301n , rotar ' Z' un total de ' B' veces , significa avanzar una sola vez , es decir , se obtiene ' A' . Continuando con este proceso para cada posicio\u0301n , se obtiene \" ABCD\" , siendo este el mensaje ya descifrado .",
    "input": "La entrada consiste en una sola li\u0301nea , una cadena de longitud l , que es el mensaje DRM que se va a descifrar . Todos los caracteres de la cadena son letras mayu\u0301sculas .",
    "output": "Muestra el mensaje DRM ya descifrado .",
    "note": "",
    "topics": [
      "strings"
    ],
    "id": 6963
  },
  {
    "title": "Limitando Aplicaciones",
    "url": "https://omegaup.com/arena/problem/Limitando-Aplicaciones",
    "history": "Joyce es madre de varios nin\u0303os y tiene reglas muy estrictas sobre los aparatos tecnolo\u0301gicos que cada nin\u0303o utiliza . Una de sus reglas , es que cada nin\u0303o puede tener solamente una aplicacio\u0301n instalada en su tele\u0301fono . A los nin\u0303os no les da miedo esta regla , ya que saben que si se quejan , perdera\u0301n media hora de televisio\u0301n ese di\u0301a . Para poder maximizar el nu\u0301mero de aplicaciones que pueden compartir entre ellos , los nin\u0303os han decidido que cada uno instalara\u0301 una aplicacio\u0301n diferente en su tele\u0301fono . Cada uno de ellos prefiere diferentes aplicaciones , por lo que cada uno quiere usar la que ma\u0301s le gusta , o alguna que le guste . Esta es la manera en la que los nin\u0303os han decidido seleccionar las aplicaciones : cada uno escribira\u0301 una lista de aplicaciones que les gustan , siendo la primera la que ma\u0301s prefieren , y la u\u0301ltima la que menos prefieren ( dejando fuera aquellas aplicaciones que no les interesan) . Despue\u0301s , el nin\u0303o ma\u0301s grande instalara\u0301 en su tele\u0301fono la primera aplicacio\u0301n en su lista . Despue\u0301s , el segundo nin\u0303o ma\u0301s grande instalara\u0301 la primera aplicacio\u0301n en su lista , a menos que esta ya haya sido instalada por algu\u0301n hermano ( en este caso , por el nin\u0303o ma\u0301s grande , ya que solo ha pasado el) . Este proceso se repite para todos los nin\u0303os - cada uno instalara\u0301 la aplicacio\u0301n mejor rankeada en su lista a menos que algu\u0301n hermano ya la tenga instalada . Dada la lista de cada nin\u0303o , ayudalos a saber que aplicacio\u0301n debe instalar cada uno .",
    "input": "La primera li\u0301nea contiene un entero positivo n , siendo n el nu\u0301mero de nin\u0303os . Las siguientes n li\u0301neas empiezan con un entero positivo m , seguido de m cadenas . El valor de m denota el nu\u0301mero de aplicaciones en la lista del nin\u0303o , mientras que las m cadenas denotan el nombre de cada aplicacio\u0301n , el orden en que los nombres se dan es desde la que ese nin\u0303o ma\u0301s prefiere , hasta la que menos prefiere . La primera li\u0301nea es la lista de preferencia del nin\u0303o ma\u0301s grande , mientras que la u\u0301ltima li\u0301nea es la lista de preferencia del nin\u0303o ma\u0301s joven .",
    "output": "Muestra la aplicacio\u0301n seleccionada para cada nin\u0303o , empezando desde el mas viejo , terminando con el ma\u0301s joven , separando cada aplicacio\u0301n con un espacio en blanco . Nunca habra\u0301 un caso donde todas las aplicaciones en la lista de un nin\u0303o ya hayan sido seleccionadas .",
    "note": "",
    "topics": [
      "strings",
      "implementation"
    ],
    "id": 6962
  },
  {
    "title": "Convertidor",
    "url": "https://omegaup.com/arena/problem/OMI2018-Convertidor",
    "history": "La numeracio\u0301n biyectiva es un sistema en que todos los enteros positivos pueden ser representados de exactamente una forma. La numeracio\u0301n biyectiva base 26 usa el alfabeto para representar 26 di\u0301gitos del 1 al 26( A= 1, B= 2, C= 3, . . . , Z= 26, AA= 27, AB= 28, . . . ) . En la numeracio\u0301n biyectiva 26 no se usala letra N\u0303. Esta numeracio\u0301n se usa en las hojas de ca\u0301lculo. # ProblemaEscribe un programa que convierta un entero de sistema decimal a una cadena que representa su valor biyectivo 26 y viceversa.",
    "input": "En la primera li\u0301nea un entero T que indica el tipo de conversio\u0301n que vas a hacer ( 0 = de decimal a cadena, 1 = de cadena a decimal) En la segunda li\u0301nea un entero X o una cadena S dependiendo del tipo de conversio\u0301n.",
    "output": "La cadena S que representa a X si la conversio\u0301n es de tipo 0, o el entero X que representa a la cadena S si la conversio\u0301n es de tipo 1.",
    "note": "",
    "topics": [
      "math",
      "strings",
      "implementation"
    ],
    "id": 6918
  },
  {
    "title": "Directorio Chihuahuense",
    "url": "https://omegaup.com/arena/problem/Directorio-Chihuahuense",
    "history": "Un amigo tuyo va a ir de vacaciones a * * Chihuahua* * y quiere saber cua\u0301les son los * * lugares* * a los que pertenece cierta clave lada l. ! [ enter image description here] [ 1]",
    "input": "Un nu\u0301mero entero l que representa la * * clave lada* * .",
    "output": "El * * lugar* * de donde es la clave lada.",
    "note": "",
    "topics": [
      "implementation",
      "strings"
    ],
    "id": 6913
  },
  {
    "title": "Premiacion desordenada",
    "url": "https://omegaup.com/arena/problem/itp18-premiacion",
    "history": "\u00a1Acaba de terminar el * * 1er Concurso de Programacio\u0301n del Instituto Tecnolo\u0301gico de Pachuca* * y los resultados ya esta\u0301n listos! Sin embargo por ser la primer vez que se hace el concurso los resultados salieron en desorden. En vez de salir los nombres del primer lugar al u\u0301ltimo lugar, los resultados salieron revueltos. \u00a1Afortunadamente tu\u0301 nos puedes ayudar! Lee la entrada, reconstruye la tabla de posiciones e impri\u0301mela en orden.",
    "input": "- Un entero, N, indicando el nu\u0301mero de concursantes- N renglones. Cada renglo\u0301n seguira\u0301 el formato ` C P` donde: - C representa el nombre del concursante ( una sola palabra) - P el nombre de quien quedo\u0301 * * un lugar arriba* * en la tabla de posiciones, o ` null` si el concursante quedo\u0301 en primer lugar",
    "output": "Los nombres de los N concursantes del primer lugar al u\u0301ltimo separados por espacios. # Ejemplos| | input3Luis PacoHugo nullPaco Hugo| | outputHugo Paco Luis| | descriptionHugo quedo\u0301 en primer lugar por el renglo\u0301n ` Hugo null` . Paco va despue\u0301s por el renglo\u0301n ` Paco Hugo` . Luis va al final por el renglo\u0301n ` Luis Paco` | | input3Burbuja nullBombon BellotaBellota Burbuja| | outputBurbuja Bellota Bombon| | descriptionBurbuja quedo\u0301 en primer lugar por el renglo\u0301n ` Burbuja null` . Bellota va despue\u0301s por el renglo\u0301n ` Bellota Burbuja` . Bombon va al final por el renglo\u0301n ` Bombon Bellota` | | end",
    "note": "- 1 \u2264 N \u2264 100- No hay concursantes con nombres repetidos- La entrada siempre generara\u0301 una lista va\u0301lida, no hay necesidad de validar la entrada",
    "topics": [
      "sortings",
      "data structures",
      "implementation",
      "strings",
      "constructive algorithms"
    ],
    "id": 6851
  },
  {
    "title": "Los Ultimos Seran Los Primeros",
    "url": "https://omegaup.com/arena/problem/Los-Ultimos-Seran-Los-Primeros",
    "history": "# Los U\u0301ltimos Sera\u0301n los PrimerosEn una carrera en el pueblo de Yahualica todos los participantes creen que el que llegue primero sera\u0301 el ganador, pero no, las reglas son diferentes en Yahualica, el ganador es el que llega al u\u0301ltimo. Escribe un programa que dados los nombres de los concursantes como van cruzando la meta, imprima dichos nombres en orden de acuerdo al lugar que consiguieron en la competencia ( El que llego al u\u0301ltimo obtiene el primer lugar, el penu\u0301ltimo el segundo lugar, y asi\u0301 sucesivamente) .",
    "input": "Varios nombres de concursantes como van cruzando la meta. La entrada termina con el string \" # \" .",
    "output": "Los nombres en orden al lugar que ocuparon en la competencia. | | inputPABLOVANESSAMARIANADANIELAIVAN# | | outputIVANDANIELAMARIANAVANESSAPABLO| | end",
    "note": "",
    "topics": [
      "strings",
      "data structures"
    ],
    "id": 6818
  },
  {
    "title": "\u00bfCu\u00e1ntas veces?",
    "url": "https://omegaup.com/arena/problem/Cuantas-veces",
    "history": "Dado el un nu\u0301mero N debes de contar la cantidad de veces que esta\u0301 contenido el nu\u0301mero M. < br> M debe de estar formado por cifras consecutivas de N.",
    "input": "Primera li\u0301nea un nu\u0301mero N < br> Segunda li\u0301nea un entero T, la cantidad de nu\u0301meros a los cuales debes de encontrar la cantidad de veces que aparece en sus cifras. < br> Las siguientes T li\u0301nea tendra\u0301n un entero M, el entero que debes encontrar en las cifras de N.",
    "output": "T li\u0301neas con las respuesta para cada caso.",
    "note": "",
    "topics": [
      "strings",
      "dp"
    ],
    "id": 6798
  },
  {
    "title": "De los extremos al centro",
    "url": "https://omegaup.com/arena/problem/De-los-extremos-al-centro-v2",
    "history": "Dada una secuencia de N enteros a_ 1, a_ 2, . . . , a_ n- 1, a_ n, escribe un programa que imprima la secuencia en el orden a_ 1, a_ n, a_ 2, a_ n - 1, . . . .",
    "input": "El entero N en formato de texto seguido de un espacio en blanco. Posteriormente la secuencia de N enteros, los cuales debera\u0301n leerse con rutinas de lectura sin formato ( por ejemplo, * fread* ) . Cada entero de la secuencia estara\u0301 representado con sizeof( int32 _ t) = 4 bytes. Puedes suponer que 0 \u2264 N \u2264 5 \u00d7 2^ 22 y que todos los bytes que conforman la secuencia son caracteres ASCII gra\u0301ficos. Ya que omegaUp a veces agrega saltos de li\u0301nea al final de la entrada, evita leer o posicionarte ma\u0301s alla\u0301 del contenido garantizado.",
    "output": "La secuencia de N enteros en el orden solicitado, la cual debera\u0301 imprimirse con rutinas de escritura sin formato ( por ejemplo, * fwrite* ) . Cada entero debera\u0301 representarse con sizeof( int32 _ t) = 4 bytes. # NotaYa que OmegaUp vincula la entrada esta\u0301ndar a un archivo, un programa podra\u0301 leer la entrada ma\u0301s de una vez utilizando rutinas de posicionamiento en archivos ( por ejemplo, * fseek* o * rewind* ) sobre * stdin* o equivalente.",
    "note": "",
    "topics": [
      "expression parsing",
      "*special",
      "strings"
    ],
    "id": 6788
  },
  {
    "title": "calcula su swag moderado",
    "url": "https://omegaup.com/arena/problem/calcula-su-swag-moderado",
    "history": "snoop dogg al ver que le hiciste tan buen programa, te ha pedido que lo vuelvas a hacer, con la diferencia de que esta vez le digas su nivel de swag vocal y su verdadero nivel de swag ademas quiere que le asignes un sobrenombre ( aparte del que ya tiene ) asi que esa es tu tarea ayuda al pequen\u0303o millonario a lograrlo, te pagara bien xd : ) ! [ enter image description here] [ 1]",
    "input": "leeras el nombre solicitado",
    "output": "imprime su nivel de swag vocal, el swag verdadero, con un salto de linea imprimiras su nombre, seguido de un salto de linea seguido de su sobrenombre ( el prefiere que cada sobre nombre sea su sobrenombre actual a la inversa si tiene dos nombres solo se toma el ultimo )",
    "note": "",
    "topics": [
      "implementation",
      "trees",
      "strings",
      "graphs"
    ],
    "id": 6689
  },
  {
    "title": "A Mezclar Palabras",
    "url": "https://omegaup.com/arena/problem/A-Mezclar-Palabras",
    "history": "A Marco se le ha dado una misio\u0301n muy especial, que consiste en mezclar 3 cadenas que tienen los caracteres ordenados de menor a mayor, y encontrar el cara\u0301cter que quedara\u0301 en medio de la nueva cadena. * * Nota* * : Mezclar cadenas con caracteres ordenados de menor a mayor, es un proceso que consiste en crear una nueva cadena que contendra\u0301 todos los caracteres de las cadenas mezcladas, estando tambie\u0301n ordenados de menor a mayor. Por ejemplo, al mezclar las cadenas \u201dabd\u201d, \u201d bcd\u201d y \u201d e\u201d, quedara\u0301 la cadena \u201dabbcdde\u201d# ProblemaAyuda a Marco a saber que\u0301 cara\u0301cter quedara\u0301 en medio en la cadena que se produce al mezclar las tres cadenas que le dieron.",
    "input": "Tres li\u0301neas diferentes, cada una con una cadena de caracteres de letras minu\u0301scula diferentes. El taman\u0303o de cada cadena sera\u0301 de a lo ma\u0301s 1000001. Se asegura que la suma de las longitudes de las cadenas sera\u0301 impar.",
    "output": "El cara\u0301cter que estara\u0301 en medio en la nueva cadena.",
    "note": "",
    "topics": [
      "sortings",
      "strings"
    ],
    "id": 6648
  },
  {
    "title": "Inserci\u00f3n y borrado de registros",
    "url": "https://omegaup.com/arena/problem/Insercion-y-borrado-de-registro",
    "history": "Eres un fana\u0301tico de las cadenas de longitud L y finalmente has decidido comenzar tu coleccio\u0301n, pero para que e\u0301sta se preserve para la posteridad, deseas almacenarla en un archivo. Para poder identificar tus cadenas ma\u0301s fa\u0301cilmente, cada nueva cadena de tu coleccio\u0301n recibira\u0301 un identificador nume\u0301rico u\u0301nico e incremental ( de modo que la primera cadena de tu coleccio\u0301n sera\u0301 la cadena 0, la siguiente sera\u0301 la cadena 1 y asi\u0301 sucesivamente) . Sin embargo, sabes que eres muy impulsivo y en ocasiones agregara\u0301s cadenas a tu coleccio\u0301n que despue\u0301s ya no te gustara\u0301n, por lo que tambie\u0301n deseas poder borrarlas. Para esto, cada cadena S de tu coleccio\u0301n aparecera\u0301 en el archivo con el formato + IS_ 1S_ 2 . . . S_ L donde I es el identificador nume\u0301rico de tu cadena a cuatro di\u0301gitos ( por ejemplo, el identificador 0 aparecera\u0301 como 0000 mientras que el identificador 123 aparecera\u0301 como 0123. Has decidido tambie\u0301n que la operacio\u0301n para borrar una cadena debe ser sumamente eficiente, por lo que la u\u0301nica modificacio\u0301n que realizara\u0301s en el archivo es cambiar el si\u0301mbolo inicial del registro de + a - ( es decir, el registro de una cadena existente + IS_ 1S_ 2 . . . S_ L pasara\u0301 a verse como - IS_ 1S_ 2 . . . S_ L al borrar la cadena) . Por otra parte y para que evitar que el archivo crezca demasiado, reutilizara\u0301s el espacio de las cadenas que ya borraste al insertar nuevas cadenas. En caso de que haya varias cadenas borradas, preferira\u0301s reutilizar el espacio de la que borraste primero. Si no hay espacio por reutilizar entonces tu nueva cadena se agregara\u0301 al final del archivo. Finalmente, has decidido que los identificadores nume\u0301ricos no los reciclara\u0301s: la I- e\u0301sima cadena insertada tendra\u0301 identificador nume\u0301rico I au\u0301n si varias cadenas previas fueron borradas. Escribe un programa que mantenga y actualice tu coleccio\u0301n de cadenas.",
    "input": "Dos enteros N y L seguidos de una secuencia de N eventos, uno por li\u0301nea. Un evento del tipo ` A` S corresponde con la insercio\u0301n de la cadena S ( el identificador nume\u0301rico de la cadena debe calcularse automa\u0301ticamente) . Un evento del tipo ` B` I corresponde con el borrado de la cadena con identificador I. Puedes suponer que 0 \u2264 N \u2264 1, 000, que 1 \u2264 L \u2264 10, 000, que la cadena I en un evento de borrado esta\u0301 en ese momento en la coleccio\u0301n y que todas las cadenas esta\u0301n formadas por caracteres ASCII gra\u0301ficos.",
    "output": "El contenido del archivo despue\u0301s de los N eventos. # NotaYa que OmegaUp vincula la salida esta\u0301ndar a un archivo, un programa podra\u0301 modificar su salida utilizando rutinas de posicionamiento en archivos ( por ejemplo, * fseek* o * rewind* ) sobre * stdout* o equivalente.",
    "note": "",
    "topics": [
      "implementation",
      "strings",
      "*special"
    ],
    "id": 6641
  },
  {
    "title": "Encontrando Anagramas",
    "url": "https://omegaup.com/arena/problem/Encontrando-Anagramas",
    "history": "Recientemente lei\u0301ste la definicio\u0301n de la palabra anagrama en uno de los tantos libros que lees. Un anagrama consiste en crear una nueva palabra recombinando las letras de la palabra original. Por ejemplo, la palabra RAMO tiene como posibles anagramas las palabras OMAR y MORA, entre otras posibilidades. Leera\u0301s dos palabras, * S1* y * S2* . Tu trabajo sera\u0301 imprimir \" ANAGRAMA! \" , en caso de poder formar una a partir de la otra, si no se puede, debera\u0301s imprimir \" NO : ( \" . NOTA: las palabras que leas solo tendra\u0301n minu\u0301sculas.",
    "input": "En la primera li\u0301nea una cadena de texto que representa la palabra * S1* En la segunda li\u0301nea otra cadena que representa la palabra * S2*",
    "output": "Debes imprimir \" ANAGRAMA! \" si ambas palabras son anagramas, y \" No : ( \" en caso contrario.",
    "note": "",
    "topics": [
      "implementation",
      "strings"
    ],
    "id": 6626
  },
  {
    "title": "Pal\u00edndromos",
    "url": "https://omegaup.com/arena/problem/Palindromos-uva",
    "history": "Un pali\u0301ndromo es una cadena cuya inversio\u0301n es igual a la original ( por ejemplo, * RADAR* es un pali\u0301ndromo porque se lee igual al derecho y al reve\u0301s) . Dada una cadena S que no es un pali\u0301ndromo, podemos obtener un pali\u0301ndromo si excluimos algunos de sus caracteres ( por ejemplo, de * BANANA* es posible obtener el pali\u0301ndromo * ANNA* si excluimos los caracteres en las posiciones 1 y 4) . Dado un conjunto de posiciones especiales de S, queremos encontrar un pali\u0301ndromo de S que incluya la mayor cantidad posible de sus posiciones especiales. En caso de que varios pali\u0301ndromos incluyan la misma cantidad de posiciones especiales, nos interesa so\u0301lo el pali\u0301ndromo ma\u0301s grande. Escribe un programa que calcule la longitud de dicho pali\u0301ndromo.",
    "input": "La entrada consiste de varios casos de prueba, los cuales deben procesarse hasta el fin de archivo. Cada caso de prueba consiste de una cadena no vaci\u0301a S, un entero N y posteriormente una secuencia de N enteros que denotan las posiciones especiales de S. Puedes suponer que 0 \u2264 N \u2264 | S| \u2264 2000, que S esta\u0301 formada u\u0301nicamente por letras mayu\u0301sculas y que las posiciones especiales esta\u0301n en el rango de 1 a | S| .",
    "output": "Para cada caso de prueba, un entero que sea la longitud del pali\u0301ndromo ma\u0301s grande que incluya la mayor cantidad posible de posiciones especiales.",
    "note": "",
    "topics": [
      "strings",
      "dp"
    ],
    "id": 6600
  },
  {
    "title": "Cuadros rom\u00e1nticos",
    "url": "https://omegaup.com/arena/problem/Cuadros-romanticos",
    "history": "He\u0301ctor, el programador ti\u0301mido, se ha armado de valor y por fin ha decidido declararle su amor a Erick, pero Andrea, la novia de Erick, no puede enterarse de este amor prohibido. Sabiendo esto He\u0301ctor disen\u0303o\u0301 una manera de codificar su mensaje. Consiste en darle una clave seguido de un mensaje, para resolver este mensaje Erick debe de ordenar alfabe\u0301ticamente la clave y mover cada columna correspondiente de cada letra de la clave a su nueva posicio\u0301n. Erick ha decidido que le ayudara\u0301s creando un programa que resuelva los acertijos de He\u0301ctor, ya que sabe que este mensaje de amor no sera\u0301 el u\u0301ltimo.",
    "input": "La primera li\u0301nea contendra\u0301 n, el nu\u0301mero de filas y de caracteres que contendra\u0301 cada fila. < br/ > La siguiente li\u0301nea contendra\u0301 n caracteres, que forman la clave del acertijo. < br/ > Las siguientes n li\u0301neas contendra\u0301n n caracteres. El mensaje a descifrar.",
    "output": "n li\u0301neas con n caracteres resolviendo el acertijo.",
    "note": "",
    "topics": [
      "implementation",
      "sortings",
      "strings"
    ],
    "id": 6534
  },
  {
    "title": "Recurrencias Randyales",
    "url": "https://omegaup.com/arena/problem/Recurrencias-salvajes",
    "history": "Juanito tiene ganas de una rica y suculenta Pepsi con juguito de limo\u0301n. De modo que Juanito le pidio\u0301 a sus buenos amigos Charls y Briaares que robaran un banco para obtener dinero para comprar su Pepsi ( Esto ya que Juanito teme que al robar directamente la Pepsi, esta pierda el amor y deliciosidad con la que fue hecha) . El plan de Charls y Briaares iba a la perfeccio\u0301n, hasta que se toparon con la bo\u0301veda, la cual solo puede ser abierta mediante una clave. El u\u0301nico ser que conoce la clave, es Blak Dragon ( Descendiente de Randy el celestial) . Pero a Blak Dragon le fascinan los juegos, por lo que se las ingenio\u0301 para hacer que Charls y Briaares jugaran con e\u0301l a cambio de la clave. El juego de Blak Dragon consiste en lo siguiente. El les dara\u0301 a Charls y Briaares exactamente T cadenas de cara\u0301cteres ( Que solo contienen a los cara\u0301cteres a, b, c) . Y les definio\u0301 una operacio\u0301n como: * Tomar cualesquiera dos cara\u0301cteres adyacentes en la cadena, y remplazarlos por el tercer cara\u0301cter. Por ejemplo, si a y b son adyacentes, Charls y Briaares lo pueden remplazar por c. La tarea que Blak Dragon les asigno\u0301 por cada una de las T cadenas, es encontrar la menor longitud que se puede obtener despue\u0301s de aplicar esta operacio\u0301n repetidas veces. En caso de que Charls y Briaares no lo consigan, Blak Dragon los metera\u0301 a prisio\u0301n. Ayudales a ganar el juego, y satisfacer las necesidades de Juanito. # ProblemaDadas T cadenas ( Formadas u\u0301nicamente por los cara\u0301cteres a, b, c) , por cada una de ellas, imprimir la menor longitud posible de la cadena resultante tras aplicar la operacio\u0301n definida en la descripcio\u0301n una cantidad arbitraria de veces.",
    "input": "La primera li\u0301nea contiene un entero T que representa la cantidad de cadenas. Las siguientes T li\u0301neas contienen cada una, una cadena de cara\u0301cteres ( Formadas u\u0301nicamente por los cara\u0301cteres a, b, c) .",
    "output": "Por cada una de las T cadenas, imprime un solo entero representando la menor longitud posible de la cadena resultante tras aplicar la operacio\u0301n definida en la descripcio\u0301n una cantidad arbitraria de veces a la cadena inicial.",
    "note": "",
    "topics": [
      "strings",
      "implementation"
    ],
    "id": 6529
  },
  {
    "title": "Transiciones en cadenas binarias",
    "url": "https://omegaup.com/arena/problem/Transiciones-en-cadenas-binarias",
    "history": "El nu\u0301mero de transiciones de una cadena binaria b_ 1, b_ 2, . . . , b_ N es el nu\u0301mero de parejas b_ i, b_ i + 1 tales que b_ i = \u0338 b_ i + 1. Por ejemplo, en la cadena 001011 existen tres transiciones: la cadena comienza con 0 y luego cambia a 1, luego cambia otra vez a 0 y luego cambia otra vez a 1. Escribe un programa que sume el nu\u0301mero de transiciones que ocurren en las 2^ N cadenas binarias de longitud N e imprima el valor de dicha suma.",
    "input": "Un entero N. Puedes suponer que 0 \u2264 N \u2264 50.",
    "output": "Un entero que es la suma del nu\u0301mero de transiciones que ocurren en las 2^ N cadenas binarias de longitud N.",
    "note": "",
    "topics": [
      "implementation",
      "strings",
      "divide and conquer",
      "dfs and similar",
      "math"
    ],
    "id": 6487
  },
  {
    "title": "Memorizando cadenas con poca memoria",
    "url": "https://omegaup.com/arena/problem/Buscando-cadenas-con-poca-memori",
    "history": "Dado un conjunto de N cadenas, escribe un programa que realice M bu\u0301squedas sobre dicho conjunto.",
    "input": "Un entero N seguido de las N cadenas del conjunto. Posteriormente, un entero M seguido de las M cadenas a buscar. Puedes suponer que 0 \u2264 N, M \u2264 1, 000, 000 y que todas las cadenas consisten de entre 8 y 16 caracteres ASCII gra\u0301ficos.",
    "output": "Para cada una de las M bu\u0301squedas, el entero 1 si la cadena buscada aparece en el conjunto de N cadenas y el entero 0 en otro caso. # NotaTu programa sera\u0301 aceptado por el juez en li\u0301nea con un puntaje de 100",
    "note": "",
    "topics": [
      "strings",
      "hashing",
      "implementation"
    ],
    "id": 6438
  },
  {
    "title": "Partiendo cadenas",
    "url": "https://omegaup.com/arena/problem/Partiendo-cadenas",
    "history": "Tienes una cadena que has ido construyendo a lo largo de los an\u0303os y ya es muy larga. Desafortunadamente, en tu ciudad acaban de promulgar una ley que obliga a todos los duen\u0303os de cadenas largas a reducir su taman\u0303o. La poli\u0301tica es que el duen\u0303o de la cadena se vera\u0301 obligado a borrar todas las apariciones de un caracter de su eleccio\u0301n ( el caracter debe aparecer en la cadena, sino es trampa) , lo cual tiene el efecto de partir la cadena en pedazos. Por ejemplo, si se borran todas las apariciones de \" t\" de la cadena \" gatitos\" entonces se forman las cadenas \" ga\" , \" i\" , \" os\" mientras que si se borran todas las apariciones de \" a\" se forman las cadenas \" g\" y \" titos\" . Tu deseo es que, despue\u0301s de aplicar la operacio\u0301n, tengas una cadena del mayor taman\u0303o posible. Escribe un programa que te ayude a conseguir tu objetivo.",
    "input": "Una cadena de caracteres ASCII gra\u0301ficos seguida de un salto de li\u0301nea. Puedes suponer que la cadena tiene a lo mucho 10^ 7 caracteres.",
    "output": "Un entero que es el taman\u0303o de la cadena ma\u0301s larga que puedes conservar despue\u0301s de aplicar la operacio\u0301n.",
    "note": "",
    "topics": [
      "strings",
      "implementation"
    ],
    "id": 6385
  },
  {
    "title": "Bu\u0301squeda de Patrones en Cadenas",
    "url": "https://omegaup.com/arena/problem/Busqueda-de-Patrones-en-Cadenas",
    "history": "El problema de reconocimiento de cadenas es encontrar todas las ocurrencias de un patro\u0301n dado P = p_ 1p_ 2. . . p_ m en un texto amplio T = t_ 1t_ 2. . . t_ n, donde ambos, T y P son secuencias de caracteres a partir de un conjunto finito de caracteres. Dado las cadenas x, y y z, se dice que x es un prefijo de xy, un sufijo de yx y un factor de yxz. Hay tres enfoques de bu\u0301squeda de patrones, para este problema se describe u\u0301nicamente el me\u0301todo de bu\u0301squeda llamado * \u201cBu\u0301squeda de Sufijos\u201d* . La bu\u0301squeda de sufijos, la cua\u0301l tiene una ventana de bu\u0301squeda del taman\u0303o del patro\u0301n, es hecha hacia atra\u0301s a lo largo de la ventana de bu\u0301squeda considerando el sufijo ma\u0301s largo de la ventana que es tambie\u0301n el sufijo del patro\u0301n. El algoritmo ma\u0301s famoso usando este me\u0301todo es el algoritmo Horspool, el cual se describe a continuacio\u0301n: Para cada posicio\u0301n de la ventana de bu\u0301squeda, se tiene que comparar su u\u0301ltimo cara\u0301cter ( \u03b2 en la figura) con el u\u0301ltimo cara\u0301cter del patro\u0301n. Si ellos son iguales, se verifica la ventana de bu\u0301squeda hacia atra\u0301s contra el patro\u0301n hasta que se encuentre el patro\u0301n completo o falle la igualacio\u0301n en un cara\u0301cter ( \u03c3 en la figura) . Entonces, si hubo una coincidencia o no, se corre la ventana de acuerdo a la siguiente ocurrencia de la letra \u03b2 en el patro\u0301n. ! [ Algoritmo Horspool] ( imagen. jpg)",
    "input": "La primera li\u0301nea contiene el texto T, donde 1 \u2264 T \u2264 100 palabras. La segunda li\u0301nea contiene el patro\u0301n P, donde 1 \u2264 P \u2264 25 caracteres.",
    "output": "Imprimir la( s) posicio\u0301n( es) donde inicia( n) el/ los patro\u0301n( es) en el texto.",
    "note": "",
    "topics": [
      "implementation",
      "strings"
    ],
    "id": 6384
  },
  {
    "title": "Desmostrando tu habilidad",
    "url": "https://omegaup.com/arena/problem/Desmostrando-tu-habilidad",
    "history": "* A causa de que nuestro equipo aventurero no logro hackear la maquina de tele- transportacio\u0301n, estos salieron disparados hacia una dimensio\u0301n completamente distinta en una galaxia muy muy lejana. . . * Nuestros queridos aventureros cayeron en el suelo donde un pasto suave y verde como el aguacate les amortiguo la cai\u0301da, era hermoso; sin embargo, lo dema\u0301s de la ciudad no era igual de colorido, el cielo era rojo, se vei\u0301an naves volando por todas partes y en vez de un sol habi\u0301a una nave gigante de color negro orbitando por el planeta. Al llegar nuestros aventureros solo podi\u0301an ver un cartel con muchas luces de colores fosforescentes que deci\u0301a: Santylandia: Lugar donde los Santys son felices Pocos segundos despue\u0301s de que llegaran, una enorme nave descendio\u0301 del cielo; pareci\u0301a que era la patrulla de la ciudad. En el momento que la nave aterriza una gran escalera se desplaza hacia el suelo y solo se alcanza a ver la figura de una persona con un traje negro, capa negra y un casco negro. La figura misteriosa empieza hablar y dice con una extran\u0303a voz: * \u00a1Ustedes no son de aqui\u0301! \u00bfDe donde vienen? \u00bfQuienes son? \u00bfQue\u0301 quieren? \" * De forma casi inmediata el chino que trajimos respondio\u0301_ * \" Somos de la galaxia 666 y mi nombre es # @ \" ! \u00bf\" * En eso todos empezaron a decir sus nombres y por ultimo el joven Santy dice: * * * \" Soy Santiago y solo queremos volver a casa, tengo un examen de programacio\u0301n que hacer\" * * * . En eso la figura misteriosa dice: * Oh! un Santiago, hace tiempo que no se oye ese nombre por este planeta, no despue\u0301s de la tragedia. Con gusto les ayudaremos a volver, me pueden llamar * * Vaderdart* * ; bienvenidos a la galaxia 22. Pero antes de ayudarlos debo ver si son dignos de mi ayuda resolviendo un pequen\u0303o problema* # ProblemaMuy bien lo siguiente es muy sencillo, por accidente se han unido dos palindromos en una solo cadena de caracteres ( Sin espacios) quiero saber cuales son esos dos palindromos que uni\u0301.",
    "input": "Una cadena de caracteres que son 2 palindromos unidos * ( Un palindromo es una palabra que se lee igual de izquierda a derecha que de derecha a izquierda) *",
    "output": "En la primera linea el ultimo palindromo que se unio\u0301 y en la segunda linea el primero. ( Solo habra\u0301 una respuesta valida)",
    "note": "",
    "topics": [
      "implementation",
      "strings"
    ],
    "id": 6336
  },
  {
    "title": "Football (aka soccer)",
    "url": "https://omegaup.com/arena/problem/Football-aka-soccer",
    "history": "Football the most popular sport in the world ( americans insist to call it * Soccer* , but we will callit * Football* ) . As everyone knows, Brasil is the country that have most World Cup titles ( four ofthem: 1958, 1962, 1970 and 1994) . As our national tournament have many teams ( and even regionaltournaments have many teams also) it\u2019s a very hard task to keep track of standings with so many teamsand games played! So, * * your task is* * quite simple: write a program that receives the tournament name, team names andgames played and outputs the tournament standings so far. A team wins a game if it scores more goals than its oponent. Obviously, a team loses a game if itscores less goals. When both teams score the same number of goals, we call it a tie. A team earns 3points for each win, 1 point for each tie and 0 point for each loss. Teams are ranked according to these rules ( in this order) : 1. Most points earned. 2. Most wins. 3. Most goal difference ( i. e. goals scored - goals against) 4. Most goals scored. 5. Less games played. 6. Lexicographic order.",
    "input": "The first line of input will be the tournament name, on a single line. Tournamentnames can have any letter, digits, spaces etc. Tournament names will have length of at most 100. Then, in the next line, there will be a number T ( 1 < T \u2264 30) , which stands for the number of teamsparticipating on this tournament. Then will follow T lines, each one containing one team name. Teamnames may have any character that have ASCII code greater than or equal to 32 ( space) , except for* * # * * and * * @ * * characters, which will never appear in team names. No team name will have more than 30characters. Following to team names, there will be a non- negative integer G on a single line which stands forthe number of games already played on this tournament. G will be no greater than 1000. Then, G lineswill follow with the results of games played. They will follow this format: \u201c` team_ name_ 1# goals1@ goals2# team_ name_ 2\u201c` For instance, the following line: \u201c` Team A# 3@ 1# Team B\u201c` Means that in a game between * Team A* and * Team B* , * Team A* scored 3 goals and * Team B* scored 1. All goals will be non- negative integers less than 20. * * You may assume that there will not be inexistentteam names* * ( i. e. all team names that appear on game results will have apperead on the team namessection) and that no team will play against itself.",
    "output": "For each tournament, you must output the tournament name in a single line. In the next T lines youmust output the standings, according to the rules above. Notice that should the tie- breaker be thelexographic order, it must be done case insenstive. The output format for each line is shown bellow: [ a] ) Team_ name [ b] p, [ c] g ( [ d] - [ e] - [ f] ) , [ g] gd ( [ h] - [ i] ) Where: * [ a] = team rank* [ b] = total points earned* [ c] = games played* [ d] = wins* [ e] = ties* [ f] = losses* [ g] = goal difference* [ h] = goals scored* [ i] = goals againstThere must be a single blank space between fields and a single blank line between output sets. See the sample output for examples.",
    "note": "",
    "topics": [
      "sortings",
      "strings"
    ],
    "id": 6304
  },
  {
    "title": "Convertir de Romanos a Ar\u00e1bigos",
    "url": "https://omegaup.com/arena/problem/Convertir-de-Romanos-a-Arabigos",
    "history": "Dado un nu\u0301mero romano, debera\u0301s obtener el equivalente en ara\u0301bigo.",
    "input": "Recibira\u0301s un nu\u0301mero romano, el equivalente en ara\u0301bigo de este nu\u0301mero estara\u0301 en el rango de 1 a 3999. Los nu\u0301meros romanos no contienen espacios y esta\u0301n escritos exclusivamente con letras mayu\u0301sculas.",
    "output": "Mostrar el nu\u0301mero ara\u0301bigo equivalente.",
    "note": "",
    "topics": [
      "strings",
      "implementation"
    ],
    "id": 6251
  },
  {
    "title": "M\u00e1quina descompuesta 2",
    "url": "https://omegaup.com/arena/problem/Maquina-descompuesta2",
    "history": "En este caso, tenemos una ma\u0301quina de escribir que cambia entre mayu\u0301sculas y minu\u0301sculas de manera arbitraria. Pero ahora la utilizaremos para escribir ti\u0301tulos y subti\u0301tulos de peli\u0301culas. Por ejemplo: > duRO De mAtaR 3: La VENgaNzAdeberi\u0301a convertirse en: > Duro De Matar 3: \" La Venganza\" La reglas sera\u0301n: - La primera letra de cada palabra debe ser mayu\u0301scula y todas las dema\u0301s letras deben ser minu\u0301sculas. - Si aparece el signo de dos puntos ( * * : * * ) lo siguiente es un subti\u0301tulo y debe aparecer entre comillas.",
    "input": "Consiste de una cadena S de longitud entre 1 y 80. Los caracteres de esa cadena podra\u0301n ser letras ( sin acentos) , di\u0301gitos, dos puntos y espacios.",
    "output": "Consiste de una cadena T en la cual se han arreglado las mayu\u0301sculas y las minu\u0301sculas, y cuando sea necesario agregar comillas al subti\u0301tulo.",
    "note": "",
    "topics": [
      "strings"
    ],
    "id": 6245
  },
  {
    "title": "Gran Triangulo de Pascal ",
    "url": "https://omegaup.com/arena/problem/Triangulo-de-Pascal-bignum",
    "history": "Este problema consiste en calcular los primeros N renglones del tria\u0301ngulo de pascal e imprimir la u\u0301ltima li\u0301nea. Por ejemplo, las primeras 7 li\u0301neas del tria\u0301ngulo de Pascal son: < pre> 1 11 2 11 3 3 11 4 6 4 11 5 10 10 5 11 6 15 20 15 6 11 7 21 35 35 21 7 1< / pre> Tranquil@ , so\u0301lo debera\u0301s imprimir la u\u0301ltima li\u0301nea B- )",
    "input": "Recibira\u0301s un valor entero N ( 1 \u2264 N \u2264 1000)",
    "output": "Imprimir la N- e\u0301sima li\u0301nea del tria\u0301ngulo de Pascal. Los nu\u0301meros en la li\u0301nea debera\u0301n estar separados por espacios.",
    "note": "",
    "topics": [
      "math",
      "implementation",
      "strings"
    ],
    "id": 6233
  },
  {
    "title": "Fibonacci's grandes",
    "url": "https://omegaup.com/arena/problem/Fibonaccis-grandes",
    "history": "Este problema consiste en calcular los nu\u0301meros de la serie de Fibonacci, considerando: f( 0) = 0f( 1) = 1f( n) = f( n- 1) + f( n- 2)",
    "input": "Recibira\u0301s mu\u0301ltiples valores enteros positivos N ( 0 \u2264 N \u2264 3000) .",
    "output": "Para cada valor de N, mostrar f( N) . Cada valor generado debe aparecer en una li\u0301nea.",
    "note": "",
    "topics": [
      "strings",
      "math"
    ],
    "id": 6231
  },
  {
    "title": "Sumas con n\u00fameros grandes",
    "url": "https://omegaup.com/arena/problem/sumas-con-numeros-grandes",
    "history": "Dados dos enteros A, B ( 0 \u2264 A, B \u2264 10^ 1000) , imprima la suma de ambos nu\u0301meros.",
    "input": "Recibira\u0301s dos valores enteros positivos con hasta 1001 di\u0301gitos. Los nu\u0301meros no estara\u0301n necesariamente en la misma li\u0301nea.",
    "output": "Mostrar la suma de A + B",
    "note": "",
    "topics": [
      "implementation",
      "math",
      "strings"
    ],
    "id": 6227
  },
  {
    "title": "M\u00e1quina descompuesta",
    "url": "https://omegaup.com/arena/problem/Maquina-descompuesta",
    "history": "En algu\u0301n rinco\u0301n de tu casa debe haber una ma\u0301quina de escribir. Si la llegaras a usar, tal vez notari\u0301as que esta\u0301 descompuesta. En este caso, tenemos una ma\u0301quina de escribir que cambia entre mayu\u0301sculas y minu\u0301sculas de manera arbitraria. Por ejemplo, podri\u0301as obtener el siguiente resultado: > hOLa. eStoY DesComPUEsta. cuando en realidad deseabas teclear: > Hola. Estoy descompuesta. Por supuesto, un lector que domine la grama\u0301tica podri\u0301a saber cua\u0301les letras deben ser mayu\u0301sculas y cua\u0301les minu\u0301sculas. Para este ejercicio consideraremos una regla simplificada de los casos de mayu\u0301scula inicial: la primera letra de cada enunciado ( que terminaremos con punto) debe ser mayu\u0301scula, todas las dema\u0301s letras deben ser minu\u0301sculas.",
    "input": "Consiste de una cadena S de longitud entre 1 y 80. Los caracteres de esa cadena podra\u0301n ser letras ( sin acentos) , di\u0301gitos, puntos y espacios.",
    "output": "Consiste de una cadena T en la cual se han arreglado las mayu\u0301sculas y las minu\u0301sculas de acuerdo a la regla simplificada.",
    "note": "",
    "topics": [
      "strings"
    ],
    "id": 6223
  },
  {
    "title": "Jo Jo Jo! Feliz No-hay-vidad!",
    "url": "https://omegaup.com/arena/problem/CEP2017_Feliz_No_hay_vidad",
    "history": "\u00a1Jack Skellington ha secuestrado a Santa Claus! Pero no hay de que preocuparse, Santa Claus estaba preparado y la navidad no corre ningu\u0301n peligro ( Hace un tiempo un loco peludo, grun\u0303o\u0301n y verde tambie\u0301n intento\u0301 arruinar la navidad) . ! [ Jack Skellington] ( jack. png) El duende de confianza de Santa Claus que labora en el CEP ( Centro Especializado en Presentes) posee una lista de emergencia con los nombres de todos los nin\u0303os del mundo, asi\u0301 como sus respectivas acciones buenas y malas durante el an\u0303o. El duende sabe que las acciones malas son difi\u0301ciles de reparar, asi\u0301 que desde hace unas navidades, se declaro\u0301 que 2 acciones buenas borran 1 accio\u0301n mala, sin importar el orden de las acciones. Y que solo los nin\u0303os que se hayan comportado bien durante el an\u0303o, recibira\u0301n su regalo ( No hacer nada no significa portarse bien) . El duende sabe que la navidad ya esta\u0301 por venir, asi\u0301 que necesita tu ayuda para poder saber los nombres de los nin\u0303os a los cuales se les premiara\u0301 por haberse comportado bien, asi\u0301 como a quie\u0301nes se les enviara\u0301 carbo\u0301n por ser malos. . . . Mientras e\u0301l llama a la polici\u0301a para que ayuden a liberar a Santa Claus.",
    "input": "La primera li\u0301nea contiene un entero N, el nu\u0301mero de nin\u0303os en la lista. Los siguientes N pares de li\u0301neas contienen: - 1ra li\u0301nea : Un string X, el nombre del nin\u0303o, y un entero Y, la cantidad de acciones que realizo\u0301 durante el an\u0303o. - 2da li\u0301nea : Y cantidad de acciones, donde B es una buena accio\u0301n y M es una mala accio\u0301n.",
    "output": "Imprime X, el nombre de cada nin\u0303o. Si se porto\u0301 bien, imprime a su lado REGALO, caso contrario CARBON.",
    "note": "",
    "topics": [
      "implementation",
      "strings"
    ],
    "id": 6206
  },
  {
    "title": "ABCdario",
    "url": "https://omegaup.com/arena/problem/ABCdario",
    "history": "Esta\u0301s en preescolar, pero sabes programacio\u0301n, por lo que te gustari\u0301a ayudar a tus amigos a aprenderse el abecedario, ellos te dira\u0301n letra por letra y al final debes decir si lo dijo completo o debe estudiar ma\u0301s. Como adema\u0301s de buen programador, eres buen amigo, no te importa en que\u0301 orden te dira\u0301n las letras, lo u\u0301nico importante es que te lo digan completo.",
    "input": "Un entero N donde 1 \u2264 N \u2264 100 que indica el numero de amigos que te dira\u0301n sus abecedarios. A continuacio\u0301n, N li\u0301neas donde cada una tiene una cadena de texto que representa las letras que te ha dicho ese compan\u0303ero.",
    "output": "Para cada abecedario que escuchas, debera\u0301s decir si lo ha hecho bien o no. Debera\u0301s imprimir ` PERFECT` si tu amigo dijo el abecedario completo o ` NO WAY` si le falto\u0301 al menos una letra por mencionar.",
    "note": "",
    "topics": [
      "strings"
    ],
    "id": 6205
  },
  {
    "title": "MrK07. La \u00faltima, larga vida a Krista",
    "url": "https://omegaup.com/arena/problem/Larga-vida-a-Krista",
    "history": "# DescripcionMrKrista se ha convertido en un astronauta del Imperio del Jefe Supremo C+ + . Este mandatario lo ha mandado junto a un grupo l de compan\u0303eros a unaimportante misio\u0301n al planeta Marte, vaya sorpresa se encontro\u0301 nuestro protagonista, pues encontro\u0301 vida extraterrestre! Al avisar al jefe C+ + , este dijo: \" El objetivo es sencillo a partir de ahora: Identifique, la naturaleza de estos seres, sin embargo, solo tiene p di\u0301as para hacer su investigacio\u0301n, pues el cohete esta\u0301 programado para su regreso sin posibilidad de interrumpirlo\" . # ProblemaDado tres nu\u0301meros iniciales n, m y k; donde n y m son las dimensiones de el territorio que Krista revisara\u0301, se encontrara\u0301n k posiciones, todas y cadauna de ellas con dos datos x y y, que remarcan las posiciones de los alieni\u0301genas, determina su movimiento tomando en cuenta la siguiente nota enviada porel Mariscal Serpiente: * El estado de los aliens evoluciona a lo largo de unidades de tiempo discretas ( se podri\u0301a decir que por turnos) . La posicio\u0301n de todos los miembros se tiene en cuenta para calcular el estado de los mismos al turno siguiente. Todas las ce\u0301lulas se actualizan simulta\u0301neamente en cada turno, siguiendo estas reglas: * Un alien nace ( como las papas) con exactamente 3 aliens vecinos presentes ( es decir, al turno siguiente habra\u0301 un alien) . * Una alien vivo con 2 o\u0301 3 vecinos vivos sigue vivo, en otro caso muere o permanece muerto ( por \" soledad\" o \" superpoblacio\u0301n\" ) . * * NOTA: Un alien en la casilla x, y puede tener hasta 8 vecinos, en todos los puntos cardinales. Tenga cuidado.",
    "input": "Se dara\u0301n el la primera li\u0301nea tres nu\u0301meros n, m y k, luego k pares de nu\u0301meros, uno por li\u0301nea, donde se presenta x y y. Luego de los k pares, finitos nu\u0301meros 0' s y 1' s, donde un 1 significa que Krista puede pasar al siguiente di\u0301a, en caso de un 0, Krista debe regresar a casa, y mostrar la u\u0301ltimafoto de como estaban acomodados los aliens.",
    "output": "Un arreglo bidimensinal de n * m, donde se represente con una 0 en caso de no haber aliens o que estos este\u0301n muertos, y un 1 en caso de que este\u0301n vivos, todo esto, tras pasar los di\u0301as representados por los unos. | | input10 10 35 55 65 711111110| | output0000000000000000000000000000000000010000000001000000000100000000000000000000000000000000000000000000| | end# Li\u0301mites3< = n, m< = 1, 000, 0000< = k< = 35000001< = x, y< = 10, 000( 1 \u0301s ) < = 999, 999\" E\u0301xito, puedes hacerlo! : D\" . \" Auf Wiedersehen. . . \"",
    "note": "",
    "topics": [
      "games",
      "dp",
      "graphs",
      "strings",
      "constructive algorithms",
      "graph matchings",
      "number theory",
      "dfs and similar",
      "implementation"
    ],
    "id": 6198
  },
  {
    "title": "Inversiones e intercalaciones",
    "url": "https://omegaup.com/arena/problem/Inversiones-e-intercalaciones",
    "history": "Existen una gran cantidad de operaciones con cadenas. El propo\u0301sito de este ejercicio es que implementes dos de ellas. La primera operacio\u0301n se llama * inversio\u0301n* y consiste en intercambiar el primer cara\u0301cter de una cadena con el u\u0301ltimo, el segundo con el penu\u0301ltimo, y asi\u0301 sucesivamente, hasta que la cadena original quede invertida. Por ejemplo, la inversio\u0301n de la cadena * * trimestre* * es la cadena * * ertsemirt* * . La segunda operacio\u0301n se llama intercalacio\u0301n y consiste en tomar dos cadenas e intercalar sus caracteres. Es ma\u0301s fa\u0301cil explicar esta operacio\u0301n con algunos ejemplos: - La intercalacio\u0301n de * * adios* * y * * hola* * es la cadena * * ahdoiloas* * . - La intercalacio\u0301n de * * hola* * y * * adios* * es la cadena * * haodliaos* * . Observa que la cadena intercalada comienza con un cara\u0301cter de la primera cadena, continu\u0301a con un cara\u0301cter de la segunda, y asi\u0301 sucesivamente, hasta que una de las dos cadenas se acaba y simplemente se pegan al final los caracteres restantes de la otra. Sugerencia: escribe una funcio\u0301n inversion( s, t) que ponga la inversio\u0301n de s en t, y una funcio\u0301n intercalacion( r, s, t) que ponga la intercalacio\u0301n de r y s en t.",
    "input": "Consiste de dos cadenas A, B, que pueden contener espacios, una en cada renglo\u0301n y con un ma\u0301ximo de 100 caracteres cada una.",
    "output": "Consiste de la inversio\u0301n de A, la inversio\u0301n de B, la intercalacio\u0301n de A y B, la intercalacio\u0301n de B y A, la intercalacio\u0301n de A con la inversio\u0301n de A, y la intercalacio\u0301n de B con la inversio\u0301n de B, cada una en un renglo\u0301n.",
    "note": "",
    "topics": [
      "strings",
      "implementation"
    ],
    "id": 6185
  },
  {
    "title": "Consonantes y vocales",
    "url": "https://omegaup.com/arena/problem/Consonantes-y-vocales",
    "history": "Escribe un programa que lea una palabra S formada exclusivamente por letras mayu\u0301sculas ( sin acentos, ni N\u0303) y que escriba el nu\u0301mero C de consonantes y el nu\u0301mero V de vocales que contiene. Por ejemplo, la palabra CONSONANTES contiene 7 consonantes y 4 vocales.",
    "input": "Consiste de una cadena S formada por un ma\u0301ximo de 80 letras mayu\u0301sculas.",
    "output": "Consiste de dos nu\u0301meros enteros, C, V, separados por un espacio.",
    "note": "",
    "topics": [
      "strings",
      "math",
      "implementation"
    ],
    "id": 6171
  },
  {
    "title": "Pal\u00edndromo",
    "url": "https://omegaup.com/arena/problem/PalindromoUASLP",
    "history": "Entrar una serie de caracteres en un arreglo, y verificar si esta es un pali\u0301ndromo o no lo es. Un pali\u0301ndromo son aquellas palabras que se leen igual de izquierda aderecha que de derecha a izquierda, por ejemplo ALLA.",
    "input": "Un entero N que indica la cantidad de letras de la palabra. < br> Las siguientes N lineas una letra mayu\u0301scula que indica una letra de la palabra.",
    "output": "Si es pali\u0301ndromo mostrar \" SI\" , en caso contrario mostrar \" NO\"",
    "note": "",
    "topics": [
      "implementation",
      "strings",
      "string suffix structures"
    ],
    "id": 6168
  },
  {
    "title": "Lozinke",
    "url": "https://omegaup.com/arena/problem/Lozinke_COCI_2017",
    "history": "Recently, there has been a breach of user information from the mega- popular social networkSecret Network. Among the confidential information are the passwords of all users. Mihael, a young student who has been exploring computer security lately, found the whole thing really interesting. While experimenting with the social network, he found another security breach! When you input any string of characters that contains a substring equal to the actual password, the login will be successful. For example, if the user whose password is abc inputs one of the strings abc , abcd or imaabcnema, the system will successfully log him in, whereas the login will fail for axbc. Mihael wants to know how many ordered pairs of different users exist such that the first user, using their own password, can login as the second user. * * INPUT* * The first line of input contains the positive integer N ( 1 \u2264 N \u2264 20 000) , the number of users. Each of the following N lines contains the user passwords. The passwords consist of at least one and at most 10 lowercase letters of the English alphabet. * * OUTPUT* * The first and only line of output must contains the number of ordered pairs from the task. * * SCORING* * In test cases worth 40 points total, it will hold 1 \u2264 N \u2264 2000. * * SAMPLE TESTS* *",
    "input": "3xxxy",
    "output": "4Clarification of the second test case: The first user can login as the second user, the second user can login as the first, and the third user can login as both the first and the second user.",
    "note": "",
    "topics": [
      "hashing",
      "strings",
      "trees"
    ],
    "id": 6158
  },
  {
    "title": "Pal\u00edndromos",
    "url": "https://omegaup.com/arena/problem/COMI-Palindromos",
    "history": "En una escuela preparatoria, la maestra de espan\u0303ol organizo\u0301 un concurso de escribir pali\u0301ndromos. Un pali\u0301ndromo es una palabra, nu\u0301mero o frase que se lee igual de izquierda a derecha y de derecha a izquierda. En este concurso se jugara\u0301 con palabras solamente. # ProblemaEscribe un programa que lea una palabra y decida si es pali\u0301ndromo o no.",
    "input": "Una li\u0301nea con una palabra.",
    "output": "Una li\u0301nea con la respuesta: ` Si` o ` No` .",
    "note": "",
    "topics": [
      "string suffix structures",
      "implementation",
      "strings"
    ],
    "id": 6125
  },
  {
    "title": "Palindromos",
    "url": "https://omegaup.com/arena/problem/Palindromos-ORAC",
    "history": "En una escuela preparatoria, la maestra de espan\u0303ol organizo\u0301 un concurso de escribir pali\u0301ndromos. Un pali\u0301ndromos es una palabra, nu\u0301mero o frase que se lee igual del principio al final, o del final hacia el principio. En este concurso se jugara\u0301 con palabras solamente. Te pidieron que escribas un programa que lea una palabra y decida si es pali\u0301ndromo o no.",
    "input": "Una linea con una palabra.",
    "output": "Una linea con la respuesta: Si o No.",
    "note": "",
    "topics": [
      "strings",
      "string suffix structures",
      "implementation"
    ],
    "id": 6112
  },
  {
    "title": "Contando palabras",
    "url": "https://omegaup.com/arena/problem/Contando-palabras",
    "history": "Everybody sit down in a circle. Ok. Listen to me carefully. < blockquote> \" Woooooo, you scwewy wabbit! \" < / blockquote> Now, could someone tell me how many words I just said?",
    "input": "Input to your program will consist of a series of lines, each line containing multiple words ( at least one) . A * * word* * is defined as a consecutive sequence of letters ( upper and/ or lower case) .",
    "output": "Your program should output a word count for each line of input. Each word count should be printedon a separate line.",
    "note": "",
    "topics": [
      "implementation",
      "strings"
    ],
    "id": 6022
  },
  {
    "title": "Sopa de letras 02",
    "url": "https://omegaup.com/arena/problem/Sopa-de-letras-02",
    "history": "Dada una cuadri\u0301cula de * * m* * por * * n* * de letras, ( 1 \u2264 m, n \u2264 150) , y una lista de palabras, encuentre la ubicacio\u0301n en la cuadri\u0301cula en que la palabra se puede encontrar. Cada palabra coincide con una li\u0301nea de letras en li\u0301nea recta de manera ininterrumpida en la cuadri\u0301cula. La palabra puede estar formada por letras, nu\u0301meros o si\u0301mbolos de puntuacio\u0301n imprimibles. Una palabra puede coincidir con las letras en la cuadri\u0301cula independientemente de de si son mayu\u0301sculas o minu\u0301sculas ( es decir, las letras mayu\u0301sculas y minu\u0301sculas deben tratarse del mismo modo) . La coincidencia se puede hacer en cualquiera de las ocho direcciones, ya sea horizontal, vertical o diagonalmente. sobre la cuadri\u0301cula.",
    "input": "La entrada comienza con un par de enteros, * * m* * seguido de * * n* * , 1 \u2264 m, n \u2264 150 en una li\u0301nea. Las siguientes * * m* * li\u0301neas contienen * * n* * letras cada una; esta es la cuadri\u0301cula de letras en la que debera\u0301s buscar las palabras de la lista. Las letras en la cuadri\u0301cula pueden estar en mayu\u0301sculas o minu\u0301sculas. Despue\u0301s de las * * m* * li\u0301neas que forman la cuadri\u0301cula, habra\u0301 otro entero * * k* * en una li\u0301nea ( 1 \u2264 k \u2264 20) . Las siguientes li\u0301neas de entrada contienen la lista de palabras que deben ser buscadas, una palabra por li\u0301nea. Estas palabras pueden contener letras mayu\u0301sculas y minu\u0301sculas, nu\u0301meros y otros caracteres imprimibles.",
    "output": "Para cada palabra en la lista de palabras, un par de nu\u0301meros enteros que representan la ubicacio\u0301n de la palabra correspondiente en la cuadri\u0301cula. Los enteros deben estar separados por un solo espacio. El primer entero es la li\u0301nea en la cuadri\u0301cula donde se puede encontrar la primera letra de la palabra dada ( 1 representa la primer li\u0301nea. El segundo entero es la columna en la cuadri\u0301cula donde se puede encontrar la primera letra de la palabra dada ( 1 representa la columna ma\u0301s a la izquierda en la cuadri\u0301cula) . Si se puede encontrar una palabra ma\u0301s de una vez en la cuadri\u0301cula, entonces la ubicacio\u0301n que se emite debe corresponder a la ocurrencia del menor valor para la li\u0301nea ( es decir, la coincidencia de la primera letra de la palabra ma\u0301s cercana a la parte superior de la cuadri\u0301cula) . Si dos o ma\u0301s palabras empatan en la li\u0301nea, la salida debe corresponder a la parte ma\u0301s a la izquierda de estas ocurrencias ( menor valor de la columna) . Se asegura que todas las palabras pueden ser encontrado al menos una vez en la cuadri\u0301cula.",
    "note": "",
    "topics": [
      "implementation",
      "matrices",
      "strings",
      "math"
    ],
    "id": 6017
  },
  {
    "title": "Periodico",
    "url": "https://omegaup.com/arena/problem/newspaper",
    "history": "Una agencia de noticias paga dinero por arti\u0301culos segu\u0301n ciertas reglas. Cada caracter tiene un valor ( los caracteres no listados tienen un valor igual a cero) . El autor obtiene su pago como la suma de todos los caracteres del arti\u0301culo. El problema consiste en determinar la cantidad de dinero que la agencia de noticias debe pagar por un arti\u0301culo.",
    "input": "Tu programa procesara\u0301 una prueba, que inicia con un nu\u0301mero entero * * K* * ( 0 < K \u2264 100) , la cantidad de caracteres que tienen un valor. En las siguientes li\u0301neas K hay una tabla de caracteres y su respectivo valor ( los valores de los caracteres esta\u0301n en centavos) . Si el cara\u0301cter no se puede encontrar en la tabla, entonces su valor es igual a cero. Enseguida, hay un nu\u0301mero entero * * M* * ( 0 < M \u2264 150000) . Las siguientes * * M* * li\u0301neas contienen un arti\u0301culo en si\u0301 mismo. Cada li\u0301nea puede tener hasta 100000 caracteres de longitud.",
    "output": "Para cada prueba, imprima cua\u0301nto dinero debe pagar el editor por un arti\u0301culo en formato * * x. aa * * . Donde * * x* * es una cantidad de do\u0301lares sin ceros a la izquierda y * * yy* * con centavos con un cero inicial si es necesario. Ejemplos: * * 3. 32* * , * * 13. 07 * * , * * 71. 30* * , * * 0. 09 * * .",
    "note": "",
    "topics": [
      "implementation",
      "strings"
    ],
    "id": 6016
  },
  {
    "title": "Super Puercos",
    "url": "https://omegaup.com/arena/problem/Super-Puercos",
    "history": "# Super Puercos! [ ] ( okja. jpg) Para tratar de satisfacer la demanda de alimento en todo el mundo se han cultivado unos deliciosos animales llamados \" Super Puercos\" . Existen n Super Puercos, y cada uno tiene nombre. Por cada letra del abecedario ( el gringo) , se elige so\u0301lo a un Super Puerco cuyo nombre comience con la letra correspondiente. Es decir, so\u0301lo se puede elegir a un Super Puerco cuyo nombre inicie con la letra \" a\" , otro cuyo nombre inicie con la letra \" b\" , y asi\u0301 sucesivamente. Los Super Puercos elegidos pasara\u0301n a graduarse a la Universidad Porcina. Escribe un programa que indique la cantidad de Super Puercos que se graduara\u0301n.",
    "input": "La primera li\u0301nea contiene un nu\u0301mero n ( 15 \u2264 n \u2264 30) , indicando la cantidad de Super Puercos que existen. Le siguen n li\u0301neas, cada una con el nombre de cada Super Puerco. Todos los nombre solo consistira\u0301n de letras minu\u0301sculas.",
    "output": "El total de Super Puercos que se graduara\u0301n de la \" universidad porcina\" .",
    "note": "",
    "topics": [
      "implementation",
      "strings"
    ],
    "id": 6009
  },
  {
    "title": "Sugerencias",
    "url": "https://omegaup.com/arena/problem/Sugerencias",
    "history": "# Sugerencias! [ ] ( sugerencias. jpg) Quiza\u0301 hayas notado que al escribir una palabra o frase en alguno de los llamados \" search engines\" , como google, bing, etc. E\u0301ste te va dando sugerencias de acuerdo a lo que has escrito. Por ejemplo si has escrito la palabra \" per\" , te pueden aparecer las siguientes sugerencias: \" perro\" , \" pera\" , \" pero\" , etc. Dado un diccionario de n palabras, todas en minu\u0301sculas y sin espacios, y una palabra str. Escribe un programa que imprima todas las palabras del diccionario que comiencen con str. Ver ejemplos.",
    "input": "La primera li\u0301nea contiene un nu\u0301mero n ( 1 \u2264 n \u2264 1000) , indicando la cantidad de palabras en el diccionario. Le siguen n palabras que conforman el diccionario. Por u\u0301ltimo viene una palabra str.",
    "output": "Todas las palabras en el diccionarop que comiencen con str. Imprimelas en el orden en el que vienen en el diccionario.",
    "note": "",
    "topics": [
      "implementation",
      "strings"
    ],
    "id": 6008
  },
  {
    "title": "Invertir palabras",
    "url": "https://omegaup.com/arena/problem/word-scramble",
    "history": "Escribe un programa que invierta las letras y/ o si\u0301mbolos que forman cada palabra, sin perder el orden de las palabras. Debes conservar la cantidad de espacios entre las palabras.",
    "input": "Habra\u0301n mu\u0301ltiples li\u0301neas con palabras y otros caracteres imprimibles. Las palabras esta\u0301n delimitadas por espacios en blanco.",
    "output": "Mostrar cada una de las li\u0301neas de palabras invertidas de la entrada. Recuerda invertir cada palabra.",
    "note": "",
    "topics": [
      "implementation",
      "strings"
    ],
    "id": 6001
  },
  {
    "title": "Encuentra el tel\u00e9fono",
    "url": "https://omegaup.com/arena/problem/find-the-telephone",
    "history": "En algunos lugares, es comu\u0301n recordar un nu\u0301mero de tele\u0301fono asociando sus di\u0301gitos a letras. De esta forma, la expresio\u0301n * * MY LOVE* * significa 69 5683. Por supuesto que hay algunos problemas, porque algunos nu\u0301meros de tele\u0301fono no pueden formar una palabra o una frase y los di\u0301gitos 1 y 0 no esta\u0301n asociados a ninguna letra. Tu tarea es leer una expresio\u0301n y encontrar el nu\u0301mero de tele\u0301fono correspondiente segu\u0301n la tabla a continuacio\u0301n. < table> < tr> < th style= \" text- align: center; border: 1px solid black; width: 20",
    "input": "Una u\u0301nica li\u0301nea con una expresio\u0301n con un ma\u0301ximo de 30 caracteres.",
    "output": "Mostrar el nu\u0301mero correspondiente.",
    "note": "",
    "topics": [
      "strings",
      "implementation"
    ],
    "id": 5991
  },
  {
    "title": "Sacando al selectivo",
    "url": "https://omegaup.com/arena/problem/Sacando-al-selectivo",
    "history": "A el entrenador Santy ( no maestro) le encanta ver como sus nin\u0303os van creciendo en el a\u0301mbito de la programacio\u0301n. Y como esta de buenas decidio\u0301 crear un problemas tan fa\u0301cil para que nadie se decepcione y quede en 0 ( a Santy no le gusta ver sufrir a sus entrenados. . . Por lo menos no en el primer problema) . Al hacer el examen santy se dio cuenta que tiene que sacar a los 6 mejores que son la seleccio\u0301n hasta ahora, pero como lo teni\u0301a guardado en una hoja de excel pues ya estaban ordenados. Asi\u0301 que solo le pidio\u0301 a Eduardo que le haga un programa que le diga el nombre de los que pasaron ( Teniendo en cuenta que solo presentaron 10 personas) . # ProblemaDada la lista de los 10 alumnos con su calificacio\u0301n ( ordenados de menor a mayor) decir quienes fueron los primeros 6.",
    "input": "La lista de los 10 concursantes ordenados de menor a mayor junto con su calificacio\u0301n en enteros positivos despue\u0301s de su nombre.",
    "output": "Nombres de los seleccionados ordenados de menor a mayor de acuerdo con su calificacio\u0301n.",
    "note": "",
    "topics": [
      "implementation",
      "strings"
    ],
    "id": 5981
  },
  {
    "title": "occ10pnsf33",
    "url": "https://omegaup.com/arena/problem/occ10pnsf33",
    "history": "# LlaveUna llave sencilla puede ser descrita por una cadena de caracteres donde ` # ' representa un diente y ` . ' representa un espacio vaci\u0301o, una cerradura puede representarse de la misma forma. Dadas las representaciones de una llave y una cerradura escriba un programa que determinesi la llave abre la cerradura, es decir, que todo vaci\u0301o en la cerradura es llenado con un diente de la llave, y que ningu\u0301n diente de la llavequede sobre un espacio no vaci\u0301o de la cerradura. Las representanciones de una llave y una cerradura tendra\u0301n la misma longitud mayoro igual que 3 y menor o igual que 10.",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "implementation",
      "strings"
    ],
    "id": 5886
  },
  {
    "title": "occ10pnsf22",
    "url": "https://omegaup.com/arena/problem/occ10pnsf22",
    "history": "# Tria\u0301ngulo alfabe\u0301ticoHaga un programa que reciba como entrada un entero impar n ( 3\u2264 n \u2264 25) y de\u0301 como salida un tria\u0301ngulo como el mostrado en el ejemplo.",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "implementation",
      "strings"
    ],
    "id": 5880
  },
  {
    "title": "occ10pnsf21",
    "url": "https://omegaup.com/arena/problem/occ10pnsf21",
    "history": "# Letras y Nu\u0301merosHaga un programa que reciba como entrada una cadena formada por letras y di\u0301gitos y de\u0301 como salida cua\u0301ntas letras y cua\u0301ntos di\u0301gitos tiene.",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "strings",
      "implementation"
    ],
    "id": 5879
  },
  {
    "title": "occ10nssf24",
    "url": "https://omegaup.com/arena/problem/occ10nssf24",
    "history": "# Pira\u0301mide Alfabe\u0301ticaHaga un programa que reciba como entrada un entero impar n ( 3\u2264 n \u2264 25) e imprima una pira\u0301mide como la mostrada en el ejemplo.",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "strings",
      "implementation"
    ],
    "id": 5866
  },
  {
    "title": "pb-calcula su swag",
    "url": "https://omegaup.com/arena/problem/calcula-su-swag",
    "history": "snoop dogg te acaba de pedir que hagas un programa que calcule su nivel de swag con tan soloescribir su nombre , pero ademas quiere comprartelo para usarlo en su fiesta con el dios edgar ( el que se cayo al rio ) , el quiere que su programa consista en leer su nombre , posteriormente darle su nivel de swag . ! [ enter image description here] [ 1]",
    "input": "introduciras el nombre solicitado",
    "output": "imprime su nivel de swag",
    "note": "",
    "topics": [
      "math",
      "strings"
    ],
    "id": 5853
  },
  {
    "title": "Diario de tu hermano",
    "url": "https://omegaup.com/arena/problem/Diario-de-tu-hermano",
    "history": "Has encontrado el diario de tu hermano y quieres revelar sus oscuros secretos a sus amigos pero tienes un problema: \u00a1todo el diario esta\u0301 al reve\u0301s! Para poder leerlo ( y mostra\u0301rselo a sus amigos) necesitas voltear todos los caracteres que se encuentran en el diario.",
    "input": "Un string S que representa el diario de tu hermano.",
    "output": "Un string Z que representa el diario volteado de tu hermano.",
    "note": "",
    "topics": [
      "strings"
    ],
    "id": 5837
  },
  {
    "title": "El traductor de la torre de Babel",
    "url": "https://omegaup.com/arena/problem/El-traductor-de-la-torre-de-Babe",
    "history": "* * Descripcio\u0301n* * Acabas de mudarte de Waterloo a una gran ciudad. Aqui\u0301 la gente habla un dialecto incomprensiblede un idioma extranjero Afortunadamente, tienes un diccionario para ayudarte a entenderlos. * * Entrada* * La entrada consta de hasta 100, 000 entradas de diccionario, seguidas de una li\u0301nea en blanco, seguida de un mensaje de hasta a 100, 000 palabras. Cada entrada de diccionario es una li\u0301nea que contiene una palabra en ingle\u0301s, seguida de un espacio y una palabra de idioma extranjero. Ninguna palabra extranjera aparece ma\u0301s de una vez en el diccionario. El mensaje es una secuencia de palabras en el idioma extranjero, una palabra en cada li\u0301nea. Cada palabra en la entrada es una secuencia de como ma\u0301ximo 10 letras minu\u0301sculas. * * Salida* * La salida es el mensaje traducido al ingle\u0301s, una palabra por li\u0301nea. Las palabras extranjeras que no esta\u0301n en el diccionario deben traducirse como ' eh' .",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "hashing",
      "trees",
      "implementation",
      "strings"
    ],
    "id": 5828
  },
  {
    "title": "B\u00fasqueda de patrones con dispersi\u00f3n",
    "url": "https://omegaup.com/arena/problem/Busqueda-patrones-dispersion",
    "history": "Sea S = s_ 1 s_ 2 . . . s_ n una cadena, una funcio\u0301n de dispersio\u0301n que se usa frecuentemente en el algoritmo Rabin- Karp es H( S) = s_ 1 x^ n - 1 + s_ 2 x^ n - 2 + . . . + s_ n x^ 0 donde x es un entero. Sea C = c_ 1 c_ 2 . . . c_ m una cadena, sea C_ [ i . . . j] la subcadena de C con extremos en las posiciones i, j y sea p un entero primo, escribe un programa que calcule el nu\u0301mero de colisiones de S en C y el nu\u0301mero de ocurrencias exactas de S en C respectivamente, es decir, para cua\u0301ntos 1 \u2264 i \u2264 m- n+ 1 distintos se cumple que H( S) \u2261 H( C_ [ i . . . i+ n- 1] ) p y para cua\u0301ntos se cumple que S = C_ [ i . . . i+ n- 1] .",
    "input": "Los valores de m, C, n, S, x y p en ese orden. Puedes suponer que 1 \u2264 M \u2264 N \u2264 100, 000, 1 \u2264 x, p \u2264 2^ 15 con p primo y que todos los caracteres de S y C son caracteres ASCII.",
    "output": "Dos enteros que correspondan con la cantidad de colisiones de S en C seguido del nu\u0301mero de ocurrencias exactas de S en C.",
    "note": "",
    "topics": [
      "hashing",
      "two pointers",
      "strings"
    ],
    "id": 5825
  },
  {
    "title": "Invirtiendo palabras",
    "url": "https://omegaup.com/arena/problem/Invirtiendo-palabras",
    "history": "Dada una li\u0301nea con palabras separadas por comas, escribe la misma li\u0301nea pero con las palabras invertidas.",
    "input": "Una li\u0301nea con a lo mucho 1000 caracteres. Todos los caracteres de la li\u0301nea son letras minu\u0301sculas o comas y puedes suponer que cada coma separa dos palabras consecutivas no vaci\u0301as.",
    "output": "Una li\u0301nea ide\u0301ntica a la de la entrada excepto que cada palabra aparece invertida.",
    "note": "",
    "topics": [
      "strings",
      "implementation",
      "sortings"
    ],
    "id": 5787
  },
  {
    "title": "Extravagant Versioning",
    "url": "https://omegaup.com/arena/problem/Extravagant-Versioning",
    "history": "# Descripcion del problemaHace algunos an\u0303os, a un ingeniero exce\u0301ntrico se le ocurrio\u0301 que seri\u0301a una excelente idea expresar las versiones del firmware en el hardware con nu\u0301meros romanos. Por ejemplo, la primera versio\u0301n fue denominada RioFirmware I y la quinta RioFirmware V. Debido a cambios en la arquitectura del driver, ahora es necesario que la versio\u0301n del firmware se almacene en la memoria del producto, sin embargo, esto no fue previsto por los ingenieros que disen\u0303aron el producto inicialmente y el espacio en memoria que dejaron disponible no es suficiente para almacenar el valor en ASCII de la versio\u0301n. Es por esto que tu trabajo consiste en transformar la versio\u0301n actual del firmware de cada producto de nu\u0301meros romanos a su representacio\u0301n en hexadecimal para que pueda ser almacenada en la memoria del producto. # EntradasLa primer linea de la entrada contiene un enter D, la cantidad de versiones que tiene que traducirse. Las siguientes D lineas contienen Strings S cada una con K caracteres, con la version a traducir. # SalidasD lineas cada una con la version en representacion decimal# Limites1 \u2264 D \u2264 6, 0001 \u2264 K \u2264 15# Muestra de Entradas< pre> 3DIVMMMDCCCLXXXVIII< / pre> # Muestra de Salidas< pre> 50043888< / pre>",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "strings",
      "math",
      "implementation"
    ],
    "id": 5751
  },
  {
    "title": "IOI 2006 - Glifos",
    "url": "https://omegaup.com/arena/problem/Glifos",
    "history": "# HistoriaDescifrar la escritura maya ha demostrado ser una tarea increi\u0301blemente difi\u0301cil. Despue\u0301s de casi doscientos an\u0303os, u\u0301nicamente una pequen\u0303a parte de la escritura ha sido realmente entendida. So\u0301lo en las u\u0301ltimas tres de\u0301cadas se han hecho avances significativos. La escritura maya se basa en pequen\u0303os dibujos conocidos como glifos, los cuales representan sonidos. Las palabras mayas se escriben normalmente como glifos juntos en varias posiciones. Uno de los problemas en el desciframiento de la escritura maya esta\u0301 en el orden de la lectura. Al colocar varios glifos en orden para formar una palabra, los escritores mayas a veces deciden la posicio\u0301n de los glifos basa\u0301ndose en sus propias visiones este\u0301ticas ma\u0301s que en cualquier regla particular. Esto lleva al hecho de que, a pesar de que el sonido de muchos glifos es conocido, a veces los arqueo\u0301logos no esta\u0301n seguros de co\u0301mo pronunciar una palabra escrita. Los arqueo\u0301logos esta\u0301n buscando descifrar una palabra especial w. Ellos saben cua\u0301les son los glifos que tiene la palabra, pero no conocen cua\u0301les son las posibles formas de ordenarlos. Como los arqueo\u0301logos sabi\u0301an fuiste a la IOI 2006, te han pedido tu ayuda. Ellos te proporcionara\u0301n los g glifos de la palabra w y una secuencia s de todos los glifos ( en el orden en que aparecen) de los tallados que esta\u0301n estudiando. Ayuda a los arqueo\u0301logos contando el nu\u0301mero de posibles apariciones de la palabra w. # ProblemaEscribe un programa que, dados los glifos para w y la secuencia s de glifos de los tallados, cuente el nu\u0301mero de apariciones posibles de la palabra w en la secuencia s. Es decir, cada secuencia de g glifos consecutivos en s que es una permutacio\u0301n de los glifos de w.",
    "input": "En la primera li\u0301nea habra\u0301 dos enteros separados por un espacio g y n. En la segunda li\u0301nea habra\u0301 g caracteres consecutivos que representan los glifos de w. En la tercera li\u0301nea habra\u0301 n caracteres consecutivos que representan los glifos de la secuencia s. ( Los caracteres va\u0301lidos son \u2018a\u2019- \u2018z\u2019 y \u2018A\u2019- \u2018Z\u2019, las letras mayu\u0301sculas y minu\u0301sculas son consideradas diferentes) .",
    "output": "En la primera li\u0301nea debera\u0301s imprimir un entero que representa el nu\u0301mero de las posibles apariciones de w en s.",
    "note": "",
    "topics": [
      "two pointers",
      "implementation",
      "strings"
    ],
    "id": 5674
  },
  {
    "title": "Wasted como el Adonais",
    "url": "https://omegaup.com/arena/problem/Wasted-como-el-Adonais",
    "history": "Es muy importante que este problema no ocupes el copiar y pegar, ya que le quitara la dificultad al problema. Tu u\u0301nica tarea es imprimir el siguiente texto sin comillas. ! [ enter image description here] [ 1] Te lo advertimos, no se puede ocupar copiar y pegar, no somos tan malos y te daremos algunos consejos para resolver el problema, tienes que imprimir el siguiente texto y debes considerar que son 350 caracteres, tienes que imprimir 50 caracteres cada li\u0301nea y adema\u0301s tiene que ver con \" a\" y \" ab\" . Tienes 3 opciones para resolver el problema: 1. Copiar el texto. 2. Idear una solucio\u0301n con las pistas dadas. 3. La solucio\u0301n misteriosamente fa\u0301cil. [ 1] : imagen. jpg",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "implementation",
      "strings"
    ],
    "id": 5585
  },
  {
    "title": "Cardinalidad de un conjunto",
    "url": "https://omegaup.com/arena/problem/Cardinalidad-de-un-conjunto",
    "history": "Tienes un conjunto de enteros inicialmente vaci\u0301o y realizara\u0301s una serie de inserciones y extracciones sobre e\u0301l. Tambie\u0301n te interesa conocer la cardinalidad que tiene el conjunto en ciertos momentos. Escribe un programa que calcule dicha informacio\u0301n.",
    "input": "Dos enteros N y M seguidos de la descripcio\u0301n de M eventos, uno por li\u0301nea. Un evento de insercio\u0301n se describe con la letra I seguido del valor del entero a insertar en el conjunto; un evento de extraccio\u0301n se describe con la letra E seguido del valor del entero a extraer del conjunto; un evento de cuenta de cardinalidad se describe con la letra C. Puedes suponer que los enteros a insertar o extraer del conjunto esta\u0301n en el rango de 0 a N con 0 \u2264 N \u2264 10, 000, 000 y que 0 \u2264 M \u2264 100, 000.",
    "output": "Para cada evento de cuenta de cardinalidad, un entero que sea el nu\u0301mero de elementos que hay en el conjunto en ese momento.",
    "note": "",
    "topics": [
      "trees",
      "graphs",
      "implementation",
      "strings"
    ],
    "id": 5559
  },
  {
    "title": "Esperanza",
    "url": "https://omegaup.com/arena/problem/OMI-2017-Esperanza",
    "history": "# HistoriaRoque el filo\u0301sofo, el malvado archienemigo de los matema\u0301gicos, esta\u0301 preparando un misil para destruir el cuartel de la logia. Para evitarlo han colocado un rastreador en Roque para encontrar la ubicacio\u0301n secreta del misil. Los matema\u0301gicos acaban de recibir la sen\u0303al del rastreador con la ruta que Roque utilizo\u0301 para llegar hasta e\u0301l. La ruta esta\u0301 representada por una cadena de caracteres, cada caracter representa un paso a una casilla de la ruta y estos caracteres pueden ser: * ' L' indicando que Roque se movio\u0301 una casilla a la izquierda* ' R' indicando que Roque se movio\u0301 una casilla a la derecha* ' U' indicando que Roque se movio\u0301 una casilla hacia arriba* ' D' indicando que Roque se movio\u0301 una casilla hacia abajoLos matema\u0301gicos podra\u0301n detener a tiempo el lanzamiento del misil si la ruta que Roque les dio es la ma\u0301s corta hasta e\u0301l. En caso de que, utilizando solo casillas por las que Roque paso\u0301, exista otra ruta al misil que llegue en menos pasos, no lo podra\u0301n detener. Por ejemplo, en este caso, Roque utilizo\u0301 la ruta ma\u0301s corta posible y lograra\u0301n detener el misil: ! [ S] ( si. png) Pero en este otro caso existe una ruta al misil que utiliza solo casillas por las que Roque paso\u0301 pero llega en menos pasos, por lo tanto, los matema\u0301gicos no lograra\u0301n detenerlo: ! [ N] ( no. png) # ProblemaTu trabajo es escribir un programa que dada la cadena \u007fde pasos que realizo\u0301 Roque, escriba la letra * S* si la ruta era la ruta ma\u0301s corta posible o * N* si existi\u0301a una ruta ma\u0301s corta.",
    "input": "En la primer li\u0301nea se encuentra un entero N que es el nu\u0301mero de pasos que Roque utilizo\u0301. En la segunda li\u0301nea se encuentra una cadena de N caracteres que describe los pasos de la ruta.",
    "output": "Debera\u0301s escribir la letra mayu\u0301scula * S* si Roque utilizo\u0301 la ruta ma\u0301s corta posible o la letra mayu\u0301scula * N* si existi\u0301a una ruta ma\u0301s corta distinta a la que Roque tomo\u0301.",
    "note": "",
    "topics": [
      "hashing",
      "strings",
      "graphs"
    ],
    "id": 5519
  },
  {
    "title": "A+B",
    "url": "https://omegaup.com/arena/problem/ASUMAB",
    "history": "El primer problema de hoy es tan simple como a+ b. < BR> Recibira\u0301s una cadena de caracteres con di\u0301gitos. < BR> Tendra\u0301s que reacomodar esos di\u0301gitos para construir dos enteros no negativos, a y b, tal que la suma de a+ b sea la ma\u0301s grande posible. < BR> Cada nu\u0301mero debe tener al menos un di\u0301gito. < BR> No se permitira\u0301n ceros a la izquierda, sin embargo el nu\u0301mero cero hecho con un solo 0 es permitido. < BR> Tendra\u0301s que usar cada digito exactamente la misma cantidad de veces que aparezca en la cadena de caracteres inicial.",
    "input": "La primera li\u0301nea contendra\u0301 un entero t especificando el nu\u0301mero de casos. Cada caso consistira\u0301 en una li\u0301nea con una cadena de caracteres con di\u0301gitos de taman\u0303o n. Si hay ma\u0301s de dos di\u0301gitos, no todos sera\u0301n ceros.",
    "output": "Por cada caso, imprime una li\u0301nea con la suma ma\u0301s grande que puede ser conseguida.",
    "note": "",
    "topics": [
      "math",
      "sortings",
      "implementation",
      "number theory",
      "strings"
    ],
    "id": 5416
  },
  {
    "title": "Se\u00f1al",
    "url": "https://omegaup.com/arena/problem/senial",
    "history": "\u00a1Un evento que pasara\u0301 a la historia ha ocurrido! El SETI ha confirmado que ha detectado una sen\u0303al de vida inteligente, la cua\u0301l se estuvo repitiendo por poco tiempo, y al ser tu\u0301 el encargado de los sistemas de deteccio\u0301n de sen\u0303ales del SETI, tienes como trabajo descifrar e\u0301sta sen\u0303al. Te has dado cuenta que cada repeticio\u0301n contiene una serie de nu\u0301meros que misteriosamente concuerdan con la representacio\u0301n decimal el un cara\u0301cter ASCII; sin embargo, ciertos elementos se han corrompido por lo que utilizando todas las repeticiones disponibles de la sen\u0303al debes tratar de descifrarla completamente.",
    "input": "La primera li\u0301nea contara\u0301 con dos nu\u0301meros R y N, donde R es la cantidad de repeticio\u0301n de la sen\u0303al y N es el nu\u0301mero de elementosque contiene la sen\u0303al. Las siguientes R li\u0301neas contendra\u0301n una N nu\u0301meros enteros i, donde cada i elemento corrompido sera\u0301 representado por - 1.",
    "output": "Una sola li\u0301nea conteniendo una cadena de caracteres, la cua\u0301l es la sen\u0303al descifrada. Si no es posible descifrar completamente la sen\u0303al, debes imprimir solamente el nu\u0301mero - 1. # Ejemplos| | input3 13104 - 1 - 1 97 32 104 117 - 1 97 - 1 111 115 - 1- 1 111 108 - 1 32 - 1 117 109 - 1 110 111 - 1 33104 111 - 1 97 32 104 - 1 109 97 110 - 1 115 33| | outputhola humanos! | | input3 5104 - 1 - 1 97 - 1- 1 111 - 1 - 1 - 1- 1 111 - 1 97 33| | output- 1| | end# Li\u0301mites- 1 \u2264 R \u2264 100- 1 \u2264 N \u2264 100, 000- - 1 \u2264 i \u2264 255",
    "note": "",
    "topics": [
      "strings",
      "implementation"
    ],
    "id": 5374
  },
  {
    "title": "()[]{}<>",
    "url": "https://omegaup.com/arena/problem/ParentesisExtravagantes",
    "history": "Considera una cadena S de caracteres, que esta conformada solo por 8 posibles caracteres, ' < ' , ' > ' , ' ( ' , ' ) ' , ' ' , ' ' , ' [ ' , ' ] ' . Como sabra\u0301s, estos caracteres regularmente se utilizan para agrupar distintas cosas, ya sean operaciones, oraciones, etc, sin embargo, cuando son usadas debe cuidarse que la agrupacio\u0301n tenga sentido, por ejemplo \" ) ( [ ] \" \" no tiene sentido\" porque los primeros dos caracteres no agrupan nada. Un ejemplo de cadena que \" tiene sentido\" es [ ( ) ] , ya que cada pareja de caracteres puede emparejarse con otra para darle sentido a la agrupacio\u0301n. Formalmente, la cadena de caracteres ' S' \" tiene sentido\" si se cumple cuando menos 1 de las siguientes condiciones: a) S= \" \" , es decir , es una cadena vaci\u0301a. b) S es una concatenacio\u0301n de cadenas mas pequen\u0303as que \" tienen sentido\" . c) S = \" ' < ' Q' > ' \" o S= \" Q\" o S= \" [ Q] \" o S= \" ( Q) \" , donde Q es una cadena que \" tiene sentido\" mas pequen\u0303a que \" S\" . Tu tarea es la siguiente, dada una cadena de caracteres S , que estara\u0301 conformada solo por algunos de los siguientes caracteres ' < ' , ' > ' , ' ( ' , ' ) ' , ' ' , ' ' , ' [ ' , ' ] ' , debes encontrar el mi\u0301nimo numero de \" reemplazos\" que conviertan a S en una cadena que \" tiene sentido\" . Donde caracteres de apertura ( ' < ' , ' ( ' , ' ' , ' [ ' ) solo pueden cambiarse por otros caracteres de apertura, y caracteres de cerradura ( ' > ' , ' ) ' , ' ' , ' ] ' ) , solo pueden cambiarse por caracteres de cerradura.",
    "input": "Una cadena de caracteres S, sin espacios entre ellos.",
    "output": "Un solo entero, la mi\u0301nima cantidad de \" reemplazos\" que se pueden hacer a S para que \" tenga sentido\" . Si es imposible lograr que S \" tenga sentido\" con ninguna cantidad de reemplazos, debes imprimir \" imposible\" .",
    "note": "",
    "topics": [
      "data structures",
      "implementation",
      "dp",
      "strings"
    ],
    "id": 5308
  },
  {
    "title": "Bailando con Cesar",
    "url": "https://omegaup.com/arena/problem/Bailando-con-Cesar",
    "history": "Estas en una fiesta con tus amigos y ves que tu amigo Ce\u0301sar esta\u0301 solo en la esquina. Te acercas a preguntarle porque\u0301 no esta\u0301 bailando como todos y te dice que quiere bailar con una chica pero le da mucha pena preguntarle ( : ' ( ) . Tomas esto como un reto y vas a preguntarle a todas las chicas de la fiesta si bailari\u0301an con e\u0301l. Despue\u0301s de esto, Ce\u0301sar te preguntara\u0301 si una cierta chica quiere bailar con e\u0301l.",
    "input": "Recibira\u0301s * * N* * un entero que te dice cua\u0301ntas chicas hay en la fiesta seguido de * * N* * pares de: un String * * S* * con el nombre de la chica y otro String * \" Si\" * o * \" No\" * siendo la respuesta de la chica a la pregunta. Cada uno de estos strings estara\u0301 en una li\u0301nea distinta. Al final de recibir la informacio\u0301n, recibira\u0301s otro String con el nombre de la chica que le interesa a Ce\u0301sar.",
    "output": "Un String con la respuesta de la chica que Ce\u0301sar esta\u0301 interesado.",
    "note": "",
    "topics": [
      "strings",
      "implementation"
    ],
    "id": 5297
  },
  {
    "title": "El regreso de MrKrista",
    "url": "https://omegaup.com/arena/problem/El-Regreso-De-MrKrista",
    "history": "# DescripcionMrKrista es un joven proveniente de la lejana Alemania, en sus dias de gloria era un matema\u0301tico muy famoso, podi\u0301a encontrar los patrones de las cosas muyfacilmente, sin embargo, con la llegada del Reich C+ + 11, los analisis, metodos de ordenamiento y algoritmos han quedado en el pasado, y MrKrista quierevengarse de una manera muy propia. # ProblemaComo MrKrista es un funcionario del nuevo gobierno, recibe nombres todos los dias, a los cuales les depositara una cierta cantidad de dinero, asi funciona el nuevo gobierno ( MrKrista trabaja en el banco) , pero si MrKrista llegara a cambiar los nombres, nadie recibira el dinero que merece, por lo tanto: * Dado un nombre ( con o sin apellidos) y seguido de ello una letra ( A, B o C) * Haga lo siguiente: - Si el nombre es ' MrKristarlx07' , solo imprima ' Bubblesort para todos' ( sin las comillas) . - De lo contrario, imprima el nombre completo en minusculas seguido de un salto de linea, entonces: * * * Si la letra es ' A' , imprima el nombre en minusculas de izquierda a derecha* * * Si la letra es ' B' , imprima el nombre en minusculas de derecha a izquierda* * * Si la letra es ' C' : * Cambie las ' a' por ' e' . * Cambie las ' e' por ' i' . * Cambie las ' i' por ' o' . * Cambien las ' o' por ' u' . * Cambien las ' u' por ' a' .",
    "input": "Un nombre sin taman\u0303o especificado, seguido de una letra ( A, B o C) .",
    "output": "La respuesta segun las indicaciones anteriores. | | inputTamarindo C| | outputtamarindotemerondu| | end",
    "note": "",
    "topics": [
      "strings",
      "implementation"
    ],
    "id": 5270
  },
  {
    "title": "Cuenta Cadenas",
    "url": "https://omegaup.com/arena/problem/Cuenta-Cadenas",
    "history": "Bobby apenas aprendio\u0301 a escribir y leer. Ahora quiere saber cuantos caracteres diferentes hay en una cadena ( ' 0' - ' 9' , ' a' - ' z' , ' A' - ' Z' ) .",
    "input": "En la primera li\u0301nea, un nu\u0301mero entero 1 \u2264 T \u2264 10^ 3, el nu\u0301mero de casos. A continuacio\u0301n, sigue T li\u0301neas, cada una contiene una cadena de a lo ma\u0301ximo 10^ 4 caracteres.",
    "output": "Para cada caso, debe imprimir en una li\u0301nea, el nu\u0301mero de caracteres diferentes en la cadena dada. | | input5ddugbd475456DGNBDGRUGfshffhGYFGB123456789| | output44679| | end",
    "note": "",
    "topics": [
      "implementation",
      "strings"
    ],
    "id": 5232
  },
  {
    "title": "Compartiendo la Computadora",
    "url": "https://omegaup.com/arena/problem/Compartiendo-la-Computadora",
    "history": "Gilberto, Tavo y Pablo por azares del destino han quedado juntos en unequipo del laboratorio de mecatro\u0301nica. Sin embargo, Pablo sabe que Gilcodifica con los \u811a ( pies en chino) y no quiere que use la computadorasiempre; mientras que a Gil no le gusta que Tavo tome la computadora yTavo. . . le va al Cruz Azul. Adema\u0301s de todo, han tenido problemas para dividirse el trabajo ya quesolo hay una computadora para los tres. Afortunadamente, a Gil se le ocurrio\u0301una manera de evitar las discusiones: ha decidido que para cada semana, los lugares en los que se sientan deben ser completamentedistintos a los de la semana anterior. En matema\u0301ticas, esto se conoce comoun * desorden* . Como Tavo no ha cursado A\u0301lgebra Superior y nosabe reconocer un desorden te ha pedido que escribas un programa que, dados los acomodos de los asientos de todos los alumnos dela semana pasada y esta semana, determine si Gilberto, Tavo y Pablo sesentaron en un desorden.",
    "input": "En la primera li\u0301nea, un string, correspondiendo al acomodo de losasientos de todo el salo\u0301n la semana pasada. Este string representa a los alumnos sentados mediante la primer letrade su nombre. En la segunda li\u0301nea, otro string con el mismo formato, correspondiendoal acomodo de esta semana. Se te asegura que no hay nadie en el salo\u0301n que comparta la primer letrade su nombre con Gilberto, Tavo o Pablo. Ambas cadenas no tienen ma\u0301s de 100 caracteres, y esta\u0301n compuestasu\u0301nicamente de letras mayu\u0301sculas del alfabeto lati\u0301n en ingle\u0301s.",
    "output": "` SI` si se sentaron en desorden, y ` NO` de lo contrario.",
    "note": "",
    "topics": [
      "strings",
      "implementation"
    ],
    "id": 5213
  },
  {
    "title": "Buscando Lecturas",
    "url": "https://omegaup.com/arena/problem/Buscando-Lecturas",
    "history": "Alfonso recie\u0301n se ha comprado el nuevo juego de Zelda y esta\u0301 muy enganchado juga\u0301ndolo. Todos los di\u0301as, cuando regresa a su casa, no hace nada mas que jugar y no dedica tiempo a sus tareas. Hay un problema: Alfonso debe entregar un reporte de laboratorio hoy mismo. Dicho reporte consiste en contar cua\u0301ntas lecturas exitosas hay en el experimento realizado. Como Alfonso no tiene nada de tiempo para andar contando, necesita elaborar un programa que lo haga por e\u0301l.",
    "input": "Una cadena de texto, que contiene u\u0301nicamente letras minu\u0301sculas, que representa todas las lecturas que el sensor registro\u0301 durante un experimento. Puede incluir cualquier letra del alfabeto, pero * las lecturas exitosas esta\u0301n repreesntadas por la letra* ` e` .",
    "output": "El nu\u0301mero de lecturas exitosas ( letras ` e` ) que el sensor registro\u0301.",
    "note": "",
    "topics": [
      "strings"
    ],
    "id": 5210
  },
  {
    "title": "Compresi\u00f3n de cadenas",
    "url": "https://omegaup.com/arena/problem/Compresion-de-cadenas",
    "history": "Dada una cadena S, diremos que una subcadena de S es homoge\u0301nea si no es vaci\u0301a y todos sus caracteres son iguales. Cuando no es posible agrandar una subcadena homoge\u0301nea por ninguno de sus dos extremos, diremos que la subcadena es homoge\u0301nea maximal. Por ejemplo, la secuencia de subcadenas homoge\u0301neas maximales de aabccccbaaa es ( aa, b, cccc, b, aaa) . Cuando la cadena S consta u\u0301nicamente de caracteres ASCII, es posible comprimirla usando el algoritmo que se describe a continuacio\u0301n. Sea x_ i la i- e\u0301sima subcadena homoge\u0301nea maximal de S: - Si la longitud de x_ i es N = 1, entonces la representacio\u0301n comprimida de x_ i es x_ i misma. - Si la longitud de x_ i es N \u2265 2, entonces la representacio\u0301n comprimida de x_ i consta de un preludio seguido del caracter que se repite en x_ i. El preludio se construye como sigue: - Sea M = N- 2 y sea b_ w b_ w- 1. . . b_ 3 b_ 2 b_ 1 la representacio\u0301n binaria de M. Sea K la menor posicio\u0301n en la representacio\u0301n binaria de M tal que todos los bits en posiciones mayores valen 0. - El preludio consta de exactamente T = \u2308k/ 7\u2309 octetos ( bytes) . La representacio\u0301n binaria del preludio es 1 b_ 7 b_ 6 b_ 5 b_ 4 b_ 3 b_ 2 b_ 1 1 b_ 14 b_ 13 b_ 12 b_ 11 b_ 10 b_ 9 b_ 8 . . . 1 b_ 7T b_ 7T- 1 b_ 7T- 2 b_ 7T- 3 b_ 7T- 4 b_ 7T- 5 b_ 7T- 5 b_ 7T- 6 y se construye a partir de los bits correspondientes de la representacio\u0301n binaria de M. La representacio\u0301n comprimida de S es la secuencia de las representaciones comprimidas de sus subcadenas homoge\u0301neas maximales. Escribe un programa que sea capaz de comprimir y descomprimir cadenas segu\u0301n la especificacio\u0301n anterior.",
    "input": "La entrada inicia con el caracter P y un espacio. El resto de la entrada contiene una secuencia de caracteres no nulos, la cual debe procesarse hasta el fin de archivo. Si P = ' C' entonces la secuencia denota una cadena que se desea comprimir. Si P = ' D' entonces la secuencia denota una cadena comprimida la cual se desea descomprimir. Puedes suponer que las secuencias cumplen la especificacio\u0301n y que tendra\u0301n entre 1 y 1, 000, 000 caracteres.",
    "output": "Si P = ' C' entonces debera\u0301 imprimirse la representacio\u0301n comprimida de la cadena dada en la entrada. Si P = ' D' entonces debera\u0301 imprimirse la cadena descrita por la representacio\u0301n comprimida dada en la entrada.",
    "note": "",
    "topics": [
      "math",
      "*special",
      "bitmasks",
      "strings"
    ],
    "id": 5157
  },
  {
    "title": "Lanzamiento de moneda",
    "url": "https://omegaup.com/arena/problem/Lanzamiento-de-moneda",
    "history": "Fernando se encontraba lanzando una moneda durante un lapso de aburrimiento, como su hermano tambie\u0301n se aburri\u0301a decidio\u0301 desafiarlo a un juego de lanzamiento de las monedas con unas reglas raras. En el juego se lanzara\u0301 N veces la moneda y dependiendo de como termine Fer o su hermano deben hablar al reve\u0301s. Pero eso no le importa ahora a Fer, primero quiere saber cuales son los posibles resultados de lanzar la moneda N veces.",
    "input": "Un entero N que represente la cantidad de lanzamientos.",
    "output": "Todos los posibles resultados representados en una palabra cada uno ordenados lexicograficamente. * * NOTA* * los lados son representados con la letra A y X.",
    "note": "",
    "topics": [
      "implementation",
      "math",
      "brute force",
      "strings"
    ],
    "id": 5097
  },
  {
    "title": "Leyendo archivos fragmentados",
    "url": "https://omegaup.com/arena/problem/archivos-fragmentados",
    "history": "Cierto disco esta\u0301 dividido en Q bloques de B bytes cada uno. Cuentas con el contenido del disco y tambie\u0301n con la relacio\u0301n de que\u0301 bloques ocupa cada uno de los N archivos del disco. Escribe un programa que calcule cua\u0301l es el K- e\u0301simo caracter del I- e\u0301simo archivo.",
    "input": "Dos enteros Q, B seguido de una cadena de Q \u00d7 B caracteres alfanume\u0301ricos que denota el contenido del disco. Posteriormente un entero N seguido de N li\u0301neas; cada li\u0301nea contiene una pareja de enteros I, C seguida de C enteros que denotan los bloques que ocupa el archivo I. Posteriormente un entero M seguido de M li\u0301neas; cada li\u0301nea contiene una pareja de enteros I, K que denotan el acceso al K- e\u0301simo caracter del I- e\u0301simo archivo. Los bloques, archivos y caracteres se numeran a partir de 0. Puedes suponer que 1 \u2264 Q, B \u2264 1024, 1 \u2264 N \u2264 Q, 1 \u2264 M \u2264 10000, 0 \u2264 I N y que el K- e\u0301simo caracter siempre existe. Adema\u0301s, el contenido de cada archivo se lista so\u0301lo una vez y ningu\u0301n bloque se usa por ma\u0301s de un archivo.",
    "output": "Para cada uno de los M accesos, una li\u0301nea que contiene el K- e\u0301simo caracter del I- e\u0301simo archivo.",
    "note": "",
    "topics": [
      "matrices",
      "strings",
      "math",
      "implementation"
    ],
    "id": 5056
  },
  {
    "title": "Conversi\u00f3n a decimal",
    "url": "https://omegaup.com/arena/problem/Conversion-a-decimal",
    "history": "Dado un entero E escrito en base B, escribe un programa que imprima la representacio\u0301n de E en base decimal.",
    "input": "El entero B seguido de una cadena que es la representacio\u0301n de E en base B. Puedes suponer que 2 \u2264 B \u2264 16 y que la cadena tiene a lo mucho 16 di\u0301gitos. La cadena puede contener letras mayu\u0301sculas o minu\u0301sculas indistintamente.",
    "output": "Un entero que sea la representacio\u0301n de E en base decimal. Puedes suponer que el valor de E cabe en un entero de 64 bits sin signo.",
    "note": "",
    "topics": [
      "implementation",
      "math",
      "strings"
    ],
    "id": 5007
  },
  {
    "title": "Fernando reparador de palindromos",
    "url": "https://omegaup.com/arena/problem/Fernando-reparador-palindromos",
    "history": "Fernando esta jugando un videojuego de acertijos, como tambie\u0301n quiere practicar sus habilidades de programacio\u0301n se ha auto impuesto el reto de programar un solucionador a cada puzzle. El puzzle que programara\u0301 ahora es que tenia una palabra que era palindromo, pero sus letras fueron desacomodadas. Ademas el palindromo era el lexicograficamente menor de todos los posibles.",
    "input": "Una cadena S que representa el palindromo desacomodado.",
    "output": "S reacomodado en el menor posible palindromo.",
    "note": "",
    "topics": [
      "strings"
    ],
    "id": 5003
  },
  {
    "title": "PythonCadenasPalindromas",
    "url": "https://omegaup.com/arena/problem/PythonCadenasPalindromas",
    "history": "Una palabra es pali\u0301ndroma si se lee igual de adelante para atra\u0301s que de atra\u0301s para adelante. Decide si una cierta palabra es pali\u0301ndroma",
    "input": "Una palabra que puede o no iniciar con mayu\u0301scula",
    "output": "La palabra \" SI\" si la entrada es pali\u0301ndroma. La palabra \" NO\" si no lo es.",
    "note": "",
    "topics": [
      "strings",
      "string suffix structures"
    ],
    "id": 4999
  },
  {
    "title": "PalabraMasLarga",
    "url": "https://omegaup.com/arena/problem/PalabraMasLarga",
    "history": "Dada una frase, encontrar cua\u0301l es el taman\u0303o de la palabra ma\u0301s larga.",
    "input": "Una frase en espan\u0303ol.",
    "output": "Un nu\u0301mero entero que equivale al largo de la palabra ma\u0301s larga de la frase.",
    "note": "",
    "topics": [
      "strings",
      "implementation"
    ],
    "id": 4987
  },
  {
    "title": "PalabraLoca",
    "url": "https://omegaup.com/arena/problem/PalabraLoca",
    "history": "Dado cierto nu\u0301mero, convertirlo utilizando la palabra loca segu\u0301n las siguientes reglas: Leyendo las letras de la palabra de izquierda a derecha: - Si es una vocal, sumar 100- Si es una consonante de la \" b\" a la \" m\" , dividir entre dos y sacar su parte entera- Si es una consonante de la \" n\" a la \" z\" excepto \" x\" , restar 10- Si es una \" x\" ignorar el resto de la frase",
    "input": "La primer li\u0301nea contiene un nu\u0301mero entero inicial. La segunda li\u0301nea contiene la palabra loca, que consiste en puras letras minu\u0301sculas del co\u0301digo ASCII",
    "output": "El nu\u0301mero resultante de aplicar la palabra loca al nu\u0301mero inicial",
    "note": "",
    "topics": [
      "implementation",
      "strings",
      "math"
    ],
    "id": 4986
  },
  {
    "title": "Aparici\u00f3n de caracteres en subcadenas",
    "url": "https://omegaup.com/arena/problem/caracteres_subcadenas",
    "history": "Dada una cadena S de caracteres, escribe un programa que responda correctamente si el caracter C aparece en la subcadena de S que empieza en la posicio\u0301n I y tiene longitud T.",
    "input": "La cadena S formada de caracteres alfanume\u0301ricos y de longitud a lo ma\u0301s 1, 000, 000. Posteriormente un entero N seguido de N tripletas C, I, T. Puedes suponer que 1 \u2264 N \u2264 10, 000, que 0 \u2264 I < | S| y 1 \u2264 T \u2264 | S| - I.",
    "output": "Para cada pregunta, una li\u0301nea con un 1 si el caracter aparece en la subcadena indicada y 0 en otro caso.",
    "note": "",
    "topics": [
      "implementation",
      "strings",
      "binary search"
    ],
    "id": 4911
  },
  {
    "title": "Autores",
    "url": "https://omegaup.com/arena/problem/Autores",
    "history": "Los grandes descubrimientos cienti\u0301ficos a menudo son nombrados por los apellidos de los cienti\u0301ficos que los hicieron. Por ejemplo, el sistema de criptografi\u0301a asime\u0301trica ma\u0301s popular, RSA fue descubierto por Rivest, Shamir y Adleman. Otro ejemplo notable es el algoritmo de Knuth- Morris- Pratt, nombrado por Knuth, Morris y Pratt. La referencia de documentos cienti\u0301ficos anteriores funciona mucho y es frecuente que un documento utilice dos convenciones de nomenclatura diferentes: la variacio\u0301n corta ( por ejemplo, KMP) utilizando so\u0301lo las primeras letras de los autores y la larga variacio\u0301n ( por ejemplo, Knuth- Morris- Pratt) Apellidos completos separados por guiones. Encontramos que la mezcla de dos convenciones en un papel es este\u0301ticamente desagradable y quisiera que usted escribiera un programa que transformara variaciones largas en cortas",
    "input": "La primera y u\u0301nica li\u0301nea de entrada contendra\u0301 como ma\u0301ximo 100 caracteres, letras mayu\u0301sculas y minu\u0301sculas del alfabeto ingle\u0301s y guio\u0301n ( ' - ' ASCII 45) . El primer cara\u0301cter siempre sera\u0301 una letra mayu\u0301scula. Los guiones siempre sera\u0301n seguidos por una letra mayu\u0301scula. Todos los dema\u0301s caracteres sera\u0301n letras minu\u0301sculas.",
    "output": "La primera y u\u0301nica li\u0301nea de salida debe contener la variacio\u0301n corta apropiada.",
    "note": "",
    "topics": [
      "implementation",
      "strings"
    ],
    "id": 4886
  },
  {
    "title": "S.E.G.U.E.T.A.V.",
    "url": "https://omegaup.com/arena/problem/SEGUETAV",
    "history": "El Sistema Especializado General y U\u0301nicamente En Tonteri\u0301as Avanzadas y Veloces * * * ( S. E. G. U. E. T. A. V. ) * * * tiene una nueva tarea por realizar, dada una cadena de texto S. E. G. U. E. T. A. V. nos debera decir cuantas veces se encuentran numeros en ella y darnos la suma total de estos numeros.",
    "input": "Una cadena en la cual se aseguro que de haber un numero no superara los 2 di\u0301gitos.",
    "output": "La cantidad de nu\u0301meros en la cadena, seguido por la suma de esos nu\u0301meros.",
    "note": "",
    "topics": [
      "implementation",
      "strings"
    ],
    "id": 4849
  },
  {
    "title": "0.0 Ayudando a Mr. Trance",
    "url": "https://omegaup.com/arena/problem/Ayudando-a-Mr-Trance-Reloaded",
    "history": "Mr. Trance ha venido a ti pidiendo ayuda! [ enter image description here] [ 1] Mr. Trance, esta evitando tener problemas, por lo que sigue una rutina, sin embargo, sabe que esta repitiendo algunas acciones de mas, por lo que te ha pedido tu ayuda para evitar esto",
    "input": "Se te dara\u0301 una palabra la cual sera la accio\u0301n que Mr. Trance siente esta haciendo mucho. Abajo. una frase contando algo hecho por Mr. Trance.",
    "output": "\u00bfCuantas Veces Mr. Trance repitio\u0301 dicha accio\u0301n.",
    "note": "",
    "topics": [
      "strings",
      "implementation"
    ],
    "id": 4781
  },
  {
    "title": "DFD-Reloj",
    "url": "https://omegaup.com/arena/problem/DFD-Reloj",
    "history": "Escribe un programa que lea la hora actual en formato hora, minutos, segundos e imprima la hora que sera\u0301 despue\u0301s de pasado un segundo.",
    "input": "Tres enteros correspondientes a la hora, minuto y segundo actual.",
    "output": "0: 0: 0| | description| | end",
    "note": "",
    "topics": [
      "strings",
      "math"
    ],
    "id": 4707
  },
  {
    "title": "String de Fibonacci",
    "url": "https://omegaup.com/arena/problem/Fibonacci-String",
    "history": "Ultimamente, Ferrer y Alfonso han estado practicando arduamente para entrevistas de trabajo de forma que puedan conseguir un internship en el extrajero. Ferrer, que es un poco intenso, ha retado a Alfonso a resolver una variacio\u0301n del problema de Fibonacci: * Strings de Fibonacci* . Los Strings de Fibonacci consisten en ir generando Strings a partir de la concatenacio\u0301n ( unio\u0301n) de los dos anteriores, donde claramente los primeros dos Strings son dados. En otras palabras F_ 1 y F_ 2 son dados, y calcularemos F_ n= F_ n- 2F_ n- 1 donde n> 2 . Por ejemplo, supongamos que F_ 1= A y F_ 2= B, entonces: F_ 3= F_ 1F_ 2= AB F_ 4= F_ 2F_ 3= BAB Ayuda a Alfonso a calcular el n- esimo String de Fibonacci dado que el conoce los primeros dos Strings de Fibonacci.",
    "input": "Primera Linea: F_ 1, el primer String de FibonacciSegunda Linea: F_ 2, el segundo String de FibonacciTercera Linea: 1< = n< = 15, un entero positivo",
    "output": "El n- esimo String de Fibonacci ( F_ n)",
    "note": "",
    "topics": [
      "implementation",
      "strings"
    ],
    "id": 4680
  },
  {
    "title": "Reverse String",
    "url": "https://omegaup.com/arena/problem/Reverse-String",
    "history": "Uno de los voluntarios del CodingRush, Gildardo, le gusta ir a fiestas locas, sin embargo sus papa\u0301s lo han regan\u0303ado ya que constantemente termina muy mal. A pesar de lo que dijeron sus padres, Gildardo ha ido a una fiesta el u\u0301ltimo fin de semana y sus amigos, para ver que tan mal estaba le han dicho que dijera una palabra al reve\u0301s. Ayuda a Gildardo a voltear la palabra que le digan sus amigos.",
    "input": "Primera y U\u0301nica Linea: S, La cadena de texto que Gildardo tiene que invertir",
    "output": "El String invertido",
    "note": "",
    "topics": [
      "implementation",
      "strings"
    ],
    "id": 4674
  },
  {
    "title": "Freddy y el CR",
    "url": "https://omegaup.com/arena/problem/Freddy-y-el-CR",
    "history": "En las sesiones anteriores del * Coding Rush* , cada concursante obtuvo cierto puntaje. Los concursantes han estado spameando a Freddy dicie\u0301ndole que necesitan saber sus puntos acumulados, ya que les da mucha flojera sumar los Scores en Omegaup y necesitan presumirlo a sus mama\u0301s lo antes posible. Freddy tiene muchas cosas que hacer, y es por ello que necesita un programa que le ayude. Freddy te dara\u0301 M Nombres y M puntajes. Tu debera\u0301s decirle los puntos de la persona que e\u0301l te diga.",
    "input": "Primera Linea: M, el nu\u0301mero de concursantesSiguientes M Lineas: N_ i, el nombre del concursante * i- esimo* seguido por P_ i, los puntos del concursante * i- esimo* Siguiente Linea: El nombre del concursante a buscar.",
    "output": "El Puntaje de la persona que te ha dicho Freddy.",
    "note": "",
    "topics": [
      "trees",
      "implementation",
      "strings",
      "hashing"
    ],
    "id": 4673
  },
  {
    "title": "ExamCad2",
    "url": "https://omegaup.com/arena/problem/ExamCad2",
    "history": "Escriba un programa que pida una cadena que incluya solo minu\u0301sculas. De ma\u0301ximo 80 caracteres. Luego analizara\u0301 la cadena y sustituira\u0301 las letras en lugares pares del arreglo por sus respectivas mayu\u0301sculasNota: las letras mayu\u0301sculas van del 65 al 90 en el co\u0301digo ascii, y las letras minu\u0301sculas van del 97 al 122. Por lo que si a una letra mayu\u0301scula se le suma 32 se vuelve en su correspondiente letra minu\u0301scula. ( 65 = = \u0091A\u0092, 65+ 32= = 97 , 97= = \u0092a\u0092) . Es decirchar var= \u0091A\u0092; var+ = 32; cout < < var; / / imprimira\u0301 una a minu\u0301scula",
    "input": "una cadena de caracteres con solo letras minu\u0301sculas",
    "output": "una cadena de caracteres con letras minu\u0301sculas y mayu\u0301sculas",
    "note": "",
    "topics": [
      "strings",
      "implementation"
    ],
    "id": 4620
  },
  {
    "title": "Haches",
    "url": "https://omegaup.com/arena/problem/Haches",
    "history": "Cuenta cua\u0301ntas palabras inicial con la letra hache, ya sea mayu\u0301scula o minu\u0301scula, en determinada frase.",
    "input": "Una frase compuesta por a lo ma\u0301s 100 caracteres.",
    "output": "La frase \" N haches\" donde N es la cantidad de palabras que inician con ' H' o ' h' dentro de la frase.",
    "note": "",
    "topics": [
      "strings",
      "implementation"
    ],
    "id": 4604
  },
  {
    "title": "nombres1",
    "url": "https://omegaup.com/arena/problem/nombres1",
    "history": "Menganito tiene muy mala memoria, siempre que le presentan a una persona olvida facilmente los nombres, por lo que necesita crear un programa que sea capaz de recordar los nombres y los apellidos de cada persona que le presentan. A menganito quiere aprenderse primero los nombres y luego los apellidos de las personas, por lo que necesita una lista de nombres primero y luego una de apellidos.",
    "input": "Un entero n que representa cuantas personas le van apresentar a Menganito, seguido de n li\u0301neas con los nombres de las personas. Cada persona solo tiene un nombre y un apellido y estos aparecen separados por un espacio. No se aceptan letras acentuadas ni caracteres especiales.",
    "output": "la lista de los nombres en n li\u0301neas, seguida por la lista de los apellidos tambie\u0301n en n li\u0301neas",
    "note": "",
    "topics": [
      "data structures",
      "implementation",
      "strings"
    ],
    "id": 4587
  },
  {
    "title": "UP_CURP",
    "url": "https://omegaup.com/arena/problem/UP_CURP",
    "history": "# CURPLa Clave U\u0301nica de Registro de Poblacio\u0301n es un co\u0301digo alfanume\u0301rico de identidad de 18 caracteres, utilizado para identificar a los mexicanos. Los primeros 10 caracteres de la CURP se determinan mediante los siguientes datos: * La primera letra y la primera vocal ( que no sea la primera letra) del primer apellido* Primera letra del segundo apellido* Primera letra del nombre de pila* Fecha de nacimiento con el formato aammdd. Escribe un programa que dado el nombre de una persona y su fecha de nacimiento genere los primeros 10 caracteres de la CURP.",
    "input": "La primera li\u0301nea contendra\u0301 tres palabras, indicando el nombre, apellido paterno y el apellido materno. Todas las letras son mayu\u0301sculas, y ninguna de las palabras excede los 50 caracteres. La segunda li\u0301nea contendra\u0301 3 nu\u0301meros separados por un espacio en el formato dd mm aaaa, indicando el di\u0301a, el mes y el an\u0303o de nacimiento.",
    "output": "Los primeros 10 caracteres de la CURP# # Ejemplos| | inputJUAN PEREZ GONZALEZ23 04 1998| | outputPEGJ980423| | inputMARIO ESPARZA RUIZ14 10 2001| | outputEARM011014| | end",
    "note": "",
    "topics": [
      "implementation",
      "strings"
    ],
    "id": 4578
  },
  {
    "title": "La pir\u00e1mide Inversa",
    "url": "https://omegaup.com/arena/problem/La-piramide-Inversa",
    "history": "Se desea forma una piramide comenzando con las letras de la derecha de una cadena de caracteres.",
    "input": "Cada caso de prueba contiene u\u0301nicamente una li\u0301nea con uno cadena de caracteres.",
    "output": "Por cada caso de prueba mostrar el nu\u0301mero de caso y una pira\u0301mide formada con los caracteres del correspondiente case de pruebo alineada a la derecha.",
    "note": "",
    "topics": [
      "strings",
      "matrices",
      "implementation",
      "math"
    ],
    "id": 4459
  },
  {
    "title": "Abreviando palabras",
    "url": "https://omegaup.com/arena/problem/Abreviando-palabras",
    "history": "Muchas veces varias palabras co\u0301mo \" AnitaLavaLaTina\" o \" internacionalizar\" son demasiadas largas como para escribirlo muchas veces en un solo texto y es algo cansado. Vamos a considerar una palabra muy larga, si\u0301 su * * taman\u0303o es estrictamente mayor a 10 caracteres* * . Todas las palabras muy largas sera\u0301n remplazadas con una abreviacio\u0301n especial. Una palabra se abrevia de tal forma: Escribimos la primera y la u\u0301ltima letra de la palabra y entre ellas escribimos la cantidad de letras entre el primer y u\u0301ltima letra. Tal nu\u0301mero debera\u0301 estar en el sistema decimal y no debe iniciar con 0' s. Entonces, la palabra \" AnitaLavaLaTina\" se debe de abreviar como \" A13a\" , y \" internacionalizar\" como \" i15r\" . Tu tarea es; Dada una palabra abreviarla si es necesario.",
    "input": "En la primera li\u0301nea un entero n ( 1\u2264 n\u2264100 ) , el taman\u0303o de la palabra a procesar. En la segunda li\u0301nea n caracteres, representando la palabra a procesar.",
    "output": "",
    "note": "",
    "topics": [
      "strings",
      "implementation"
    ],
    "id": 4402
  },
  {
    "title": "Bit de paridad",
    "url": "https://omegaup.com/arena/problem/BIT_DE_PARIDAD",
    "history": "Un * * bit de paridad* * es un di\u0301gito binario que indica si el nu\u0301mero de bits con un valor de 1 en un conjunto de bits es par o impar. Los bits de paridad conforman el me\u0301todo de deteccio\u0301n de errores ma\u0301s simple. Existen dos variantes de este me\u0301todo: - Bit de paridad par- Bit de paridad impar. En el caso de la * * paridad par* * , se cuentan el nu\u0301mero de unos. Si el total es impar, el bit de paridad se establece en uno y por tanto la suma del total anterior con este bit de paridad, dari\u0301a par. Si el conteo de bits uno es par, entonces el bit de paridad se deja en 0, pues ya es par. Escribe un programa que sirva para an\u0303adir un bit de paridad par a una secuencia de bits.",
    "input": "La entrada consiste de una sola li\u0301nea con una secuencia de siete bits \u201c0\u201c o \u201c1\u201c.",
    "output": "La salida es la misma secuencia de siete bits de la entrada ma\u0301s el bit de paridad par. Dicho bit de paridad se agrega al lado derecho.",
    "note": "",
    "topics": [
      "strings",
      "implementation"
    ],
    "id": 4352
  },
  {
    "title": "Tabla de factoriales",
    "url": "https://omegaup.com/arena/problem/Tabla-de-factoriales",
    "history": "El factorial de un nu\u0301mero entero positivo n se denota n! y consiste en la multiplicacio\u0301n de todos los enteros sucesivos desde 1 hasta n. Matema\u0301ticamente se define asi\u0301: n! = \u220f_ i= 1^ ni= 1\u00d7 2\u00d7 3 \u00d7\u22ef\u00d7 n Como caso especial, el factorial de cero es uno, es decir, 0! = 1. Se requiere que escribas un programa que calcule e imprima todos los factoriales desde cero hasta cien.",
    "input": "Tu programa no recibe entrada alguna.",
    "output": "Para cada valor de i del 0 al 100, se debe imprimir en la salida esta\u0301ndar una li\u0301nea de texto que tenga: - El valor de i- Un signo de admiracio\u0301n ( ! ) - Un espacio en blanco- Un signo de igual ( = ) - Un espacio en blanco- El valor del factorial de i",
    "note": "",
    "topics": [
      "math",
      "strings",
      "implementation",
      "number theory"
    ],
    "id": 4347
  },
  {
    "title": "Aiudaaaaaa",
    "url": "https://omegaup.com/arena/problem/Autistas",
    "history": "# Historia* * ARTO DE NO PODER RESOLVER EL REY CAPRICHOSO. . ? NECESITA USTED URGENTEMENTE 100 PUNTOS Y NO SABE QUE HACER? . . . SU MAESTRO LO PRESIONA Y USTED YA ESTA FRUSTRADO? . . ESTA LEYENDO ESTO COMO VENDEDOR DE COMERCIALES. . . ? NO SE PREOCUPE, LE TENEMOS LA SOLUCIO\u0301N ESTE NUEVO PROBLEMA LO AYUDARA A SACAR 100 PUNTOS SI O SI, PERO RECUERDE LEERLO TODO O AL MENOS EL PROBLEMA, SI NO NO FUNCIONARA* * Practicar para la OMI es muy estresante, asi\u0301 que te pones a jugar un juego de video para relajarte. En dicho juego tienes un equipo de 4 personajes. Cada personaje cuenta con un nu\u0301mero entero de puntos de energi\u0301a que pueden usar para hacer ataques. En este juego realizar cualquier ataque cuesta KK puntos de energi\u0301a. Como en los mejores juegos de este tipo, cada personaje puede atacar so\u0301lo con cierto tipo de ataques. En este juego existen 7 tipos: Normal, Fuego, Hielo, Aire, Electricidad, Luz y Oscuridad. Cada personaje puede realizar ataques de un subconjunto de estos tipos. Por ejemplo, un personaje de tu equipo podri\u0301a solamente realizar ataques de tipo Normal y de Fuego, mientras otro personaje podri\u0301a realizar ataques de tipo Aire y Electricidad, y asi\u0301 para los dema\u0301s personajes. El siguiente nivel que jugara\u0301s tiene NN enemigos, numerados del 11 al NN, cada enemigo es vulnerable a so\u0301lo un tipo de ataque, si recibe un ataque de este tipo sera\u0300 derrotado inmediatamente, ademas un ataque de este tipo es la u\u0300nica forma de vencerlo. Para terminar el nivel debes vencer a todos y cada uno de los enemigos. Lleno de determinacio\u0301n, has decidido terminar este juego de una vez por todas. # ProblemaEscribe un programa que, dada la descripcio\u0301n de los tipos de ataque que pueden realizar los personajes de tu equipo, los puntos de energi\u0301a que tiene cada uno, la cantidad de enemigos en el siguiente nivel y las vulnerabilidades de cada uno, determine la estrategia para finalizar el nivel. Se asegura que siempre habra\u0301 una forma de finalizar el nivel.",
    "input": "un simple string. Siempre sera un ayuda pero con diverso final",
    "output": "cuantas a hay al final de cada string.",
    "note": "",
    "topics": [
      "math",
      "implementation",
      "strings"
    ],
    "id": 4308
  },
  {
    "title": "Problema B",
    "url": "https://omegaup.com/arena/problem/Problema-B",
    "history": "Alice y Bob son valientes soldados en la guerra mundial 3. Se ha detectado una tropa enemiga que esta\u0301 planeando hacer explotar algunas bombas. Ellos envi\u0301an un mensaje al centro de comando que contiene caracteres W y B, donde W representa un muro y B representa una bomba. Se le pide hacer un programa para contar el nu\u0301mero de paredes que sera\u0301n destruidas si todas las bombas explotan a la vez. Una bomba puede destruir 2 paredes en cada lado.",
    "input": "La primera li\u0301nea del caso de prueba es un nu\u0301mero T que representa la cantidad de casos de prueba. Cada caso de prueba es una li\u0301nea con una cadena S que contiene letras W y B. Se garantiza que no existira\u0301n otros caracteres en la entrada.",
    "output": "Se debe imprimir el nu\u0301mero de paredes que explotan.",
    "note": "",
    "topics": [
      "divide and conquer",
      "strings",
      "implementation"
    ],
    "id": 4255
  },
  {
    "title": "K Subconjuntos",
    "url": "https://omegaup.com/arena/problem/ksubconjuntos",
    "history": "Dada una cadena de caracteres de longitud n, genera todos los posibles subconjuntos de longitud k, imprime los resultados en orden alfabe\u0301tico, una por li\u0301nea. Como referencia, para una cadena de longitud n, el numero de subconjuntos de longitud k se puede calcular con la fo\u0301rmula: n k = n! / k! ( n - k) !",
    "input": "En la primer li\u0301nea 2 enteros, n y k. En la segunda li\u0301nea una cadena de caracteres de longitud n.",
    "output": "Todos los subconjuntos de longitud k, en orden alfabe\u0301tico.",
    "note": "",
    "topics": [
      "brute force",
      "strings",
      "sortings",
      "dfs and similar",
      "combinatorics",
      "dp"
    ],
    "id": 4217
  },
  {
    "title": "Encuesta Reloaded",
    "url": "https://omegaup.com/arena/problem/Encuesta-Reloaded",
    "history": "# DescriptionEn una encuesta sobre salud, se recogieron los datos de 1< = N< = 100 personas, se requiere capturar id, nombre, peso y estatura para cada una de las N personas, calcular su imc y generar somo salida una lista de ids, nombres e imc.",
    "input": "En la primera li\u0301nea el entero N. en las siguientes cuatro li\u0301neas, los datos id, nombre, peso y estatura de la primera persona, los datos de la segunda persona esta\u0301n en las 4 li\u0301neas siguientes y asi\u0301 sucesivamente para las N personas. Recuerda que el IMC de una persona se calcula dividiendo su peso entre el cuadrado de su estatura.",
    "output": "Una lista con N li\u0301neas, cada li\u0301nea contiene el Id, Nombre e IMC ( con 1 decimal) ordenados decrecientemente por IMC.",
    "note": "",
    "topics": [
      "implementation",
      "sortings",
      "strings"
    ],
    "id": 4154
  },
  {
    "title": "Analizar palabra",
    "url": "https://omegaup.com/arena/problem/Analizar-palabra",
    "history": "Crear un programa para analizar palabras. Este programa recibira\u0301 una palabra solamente y a continuacio\u0301n revisara\u0301 cuantas letras tiene, cuantas vocales y adema\u0301s imprimira\u0301 la cadena invertida.",
    "input": "Leer una cadena. Esta cadena sera\u0301 siempre una sola palabra, sin espacios.",
    "output": "Debe imprimimir tres li\u0301neas: a) En la primera, la cantidad de letras que tiene la palabra. b) En la segunda, la cantidad de vocales que tiene la palabra. Si se repiten tambie\u0301n debe contarlas. c) La palabra invertida. # Ejemplos| | inputhola| | output42aloh| | end| | inputUriangato| | output95otagnairU| | end",
    "note": "",
    "topics": [
      "implementation",
      "strings"
    ],
    "id": 4103
  },
  {
    "title": "Par\u00e9ntesis Balanceados",
    "url": "https://omegaup.com/arena/problem/Parentesis-Balanceados",
    "history": "Dada una secuencia consistente de pare\u0301ntesis, determina si la expresio\u0301n esta\u0301 balanceada. Una secuencia de pare\u0301ntesis esta\u0301 balanceada si cada pare\u0301ntesis abierto puede ser emparejado u\u0301nicamente con un pare\u0301ntesis de cierre. Tambie\u0301n el intervalo de elementos dentro de e\u0301l debe estar balanceado. Tu tendra\u0301s tres tipos de pare\u0301ntesis: ` ( ` , ` ` y ` [ ` . * ` [ ( ) ] ` - Este SI es un conjunto balanceado. * ` [ ( ] ) ` - Este NO es un conjunto balanceado.",
    "input": "La primera linea de la entrada contiene un nu\u0301mero T, que sera\u0301 el nu\u0301mero de casos. Las siguientes T li\u0301neas contienen una cadena S de pare\u0301ntesis.",
    "output": "Para cada caso, imprime en una nueva li\u0301nea \" SI\" si el conjunto de pare\u0301ntesis esta\u0301 balanceado, en caso contrario imprime \" NO\" .",
    "note": "",
    "topics": [
      "strings",
      "data structures"
    ],
    "id": 4100
  },
  {
    "title": "Bonitos N\u00fameros",
    "url": "https://omegaup.com/arena/problem/Bonitos-Numeros",
    "history": "A Freddy le encantan los nu\u0301meros, y en sus clases de matema\u0301ticas se dedica a contar los di\u0301gitos de un nu\u0301mero, pero cuando un nu\u0301mero N tiene una cantidad par de di\u0301gitos, Freddy lo llama \u201cnu\u0301mero bonito\u201d. Como a Miguel le gusta molestarlo, ha decidido ponerle un reto para lograr que deje de buscar nu\u0301meros con estas caracteri\u0301sticas. Miguel le da una lista de K nu\u0301meros con * * * muchos* * * di\u0301gitos a Freddy, y para cada uno de estos nu\u0301meros Freddy debe contestar si es un \u201cnu\u0301mero bonito\u201d o no.",
    "input": "En la primera li\u0301nea K, la cantidad de nu\u0301meros que encontraste. Despue\u0301s leera\u0301s K li\u0301neas, cada una contiene un nu\u0301mero N ( sin ceros a la izquierda) .",
    "output": "Para cada nu\u0301mero N debes imprimir \u201cSI\u201d si es un nu\u0301mero bonito, \u201cNO\u201d en caso contrario. # Li\u0301mitesPara cada nu\u0301mero N se cumple que 1 \u2264 N \u2264 10^ 1000. * * * Te conviene leerlos como strings. * * *",
    "note": "",
    "topics": [
      "implementation",
      "strings"
    ],
    "id": 4013
  },
  {
    "title": "Durante la comida",
    "url": "https://omegaup.com/arena/problem/Durante-la-comida",
    "history": "Los estudiantes del ITAM suelen comer en fondas ubicadas en las calles aledan\u0303as al ITAM. A Miguel le gusta pedir sopa de letras para entretenerse buscando su nombre entre las letras; saca las letras de la sopa tantas veces como sea posible para formar su nombre, y si no logra encontrar letras suficientes para formar su nombre aunque sea una vez, Miguel se enoja y golpea furiosamente la mesa. Los amigos de Miguel quieren asegurarse de que e\u0301ste no golpee la mesa cuando vayan a comer, asi\u0301 que les gustari\u0301a saber cua\u0301ntas veces puede Miguel formar su nombre con una sopa de letras. Todas las letras son minu\u0301sculas.",
    "input": "Un string S que contiene todas letras que hay en la sopa.",
    "output": "El nu\u0301mero de veces que Miguel pudo formar su nombre con las letras de la sopa.",
    "note": "",
    "topics": [
      "implementation",
      "strings",
      "math"
    ],
    "id": 3996
  },
  {
    "title": "Buscando la inicial",
    "url": "https://omegaup.com/arena/problem/Buscando-la-inicial",
    "history": "A Freddy le encanta jugar con palabras, y los voluntarios del Coding Rush han decidido quitarle ese gusto. Como saben que Freddy tiene una letra preferida diferente cada di\u0301a, han decidido darle una lista de N palabraspara que Freddy determine lo ma\u0301s ra\u0301pido posible la palabra que comienza con la letra que ha escogido comofavorita para ese di\u0301a. Como Freddy no quiere perder su tiempo en eventualidades te ha pedido que le ayudes a superar el desafi\u0301ode los voluntarios del Coding Rush.",
    "input": "Primero leera\u0301s la letra favorita de Freddy. A continuacio\u0301n leera\u0301s un nu\u0301mero N, la cantidad de palabras que contiene la lista de palabrasque Freddy debe revisar. Despue\u0301s leera\u0301s la lista de N palabras, una palabra por li\u0301nea.",
    "output": "La palabra que comienza con la letra favorita de Freddy.",
    "note": "",
    "topics": [
      "strings"
    ],
    "id": 3992
  },
  {
    "title": "Adquisici\u00f3n de Letras",
    "url": "https://omegaup.com/arena/problem/Adquisicion-de-Letras",
    "history": "En el ITAM, a los alumnos que estudian ingenieri\u0301a les gusta comer letras. A Miguel le encanta la letra \" d\" y quiere saber cua\u0301ntas se va a poder comerde un paquete que la escuela proporciona a todos sus alumnos. El paquete que la escuela entrega es una palabra con letras minu\u0301sculas del alfabeto.",
    "input": "Un solo string de letras minu\u0301sculas.",
    "output": "La cantidad de veces que aparece la letra favorita de Miguel.",
    "note": "",
    "topics": [
      "strings"
    ],
    "id": 3991
  },
  {
    "title": "0 Imprimir N",
    "url": "https://omegaup.com/arena/problem/Imprimir-N",
    "history": "Solo debera\u0301s imprimir una variable N",
    "input": "N.",
    "output": "N.",
    "note": "",
    "topics": [
      "strings",
      "implementation"
    ],
    "id": 3984
  },
  {
    "title": "Jugando al gato",
    "url": "https://omegaup.com/arena/problem/Gatito",
    "history": "En clase de Matema\u0301ticas estas aburrido y te has puesto a jugar gato ( 3 en Raya) . como bien sabemos en este juego solo ganas si logras formar una linea ya sea vertical o diagonal o horizontal. ! [ Gato] [ 1] Muy bien pues como no son muy atentos tu y tu amigo y no quieren que el maestro se entere que esta\u0301n jugando debera\u0301s hacer un programa que dado como finalizo el juego determine quien gano o si hubo empate.",
    "input": "Recibira\u0301s un mapa de como termino el juego representado por x y o.",
    "output": "Deberas imprimir * * Roots! : D* * en caso de que x haya ganado, * * Velafloow 8) * * en caso de que o gane y * * Bailo Verta : S* * en caso de que haya empate.",
    "note": "",
    "topics": [
      "math",
      "implementation",
      "matrices",
      "strings"
    ],
    "id": 3975
  },
  {
    "title": "Reordenamiento Lexicografico",
    "url": "https://omegaup.com/arena/problem/Reordenamiento-Lexicografico",
    "history": "Considera una secuencia de N letras ( puede haber letras repetidas) , a partir de la cual queremos formar una palabra siguiendo estas 2 operaciones: - Tomar la primera letra de la secuencia original, borrarla, y colocarla al final de la palabra que estamos formando. - Tomar la ultima letra de la secuencia original, borrarla, y colocarla al final de la palabra que estamos formando. # ProblemaEscribe un programa que dada la secuencia de letras, determine la menor palabra lexicograficamente que se puede obtener con esas 2 operaciones.",
    "input": "En la primera li\u0301nea un entero N. Cada una de las siguientes N li\u0301neas contendra\u0301 un solo caracter indicando la i- e\u0301sima letra de la secuencia.",
    "output": "La menor palabra que se puede generar, adema\u0301s, * * debes imprimir un salto de li\u0301nea cada 80 caracteres. * *",
    "note": "",
    "topics": [
      "strings",
      "implementation",
      "data structures",
      "sortings"
    ],
    "id": 3892
  },
  {
    "title": "Clave Lada",
    "url": "https://omegaup.com/arena/problem/Clave-Lada",
    "history": "Se requiere un programa para identificar una ciudad de acuerdo a una clave lada. En la tabla aparecera\u0301n las ciudades ma\u0301s importantes del Me\u0301xico. Lea un nu\u0301mero entero que representa la clave lada de una ciudad. En base a este nu\u0301mero imprima la ciudad correspondiente de acuerdo a la siguiente tabla. ! [ enter image description here] [ 1] Si el nu\u0301mero de entrada no se encuentra en la tabla, la salida debe ser \" NO ENCONTRADO\" ( sin comillas y en mayu\u0301sculas) .",
    "input": "Un nu\u0301mero entero correspondiente a una clave lada.",
    "output": "Imprima el nombre de ciudad en mayu\u0301sculas y sin acentos de acuerdo a la tabla. Si el nu\u0301mero no corresponde a ninguna ciudad debe imprimir NO ENCONTRADO. # Ejemplos| | input473| | outputGUANAJUATO| | end| | input445| | outputYURIRIA| | end| | input722| | outputTOLUCA| | end[ 1] : 0622e49c8e43265afab2a50e0adbce5574074485. png",
    "note": "",
    "topics": [
      "strings",
      "implementation"
    ],
    "id": 3870
  },
  {
    "title": "Parejas de letras",
    "url": "https://omegaup.com/arena/problem/Parejas-de-letras",
    "history": "# HistoriaLa Omijal desea ofrecer un servicio de correo electr oacute; nico de alta seguridad a partir del pr oacute; ximo a ntilde; o. El algoritmo que utilizan para ocultar sus mensajes es secreto y no se ha revelado nada, a excepci oacute; n de una cosa: La cantidad de operaciones que realiza la ma\u0301quina que ejecuta el programa de criptografi\u0301a depende mucho de la cantidad de parejas de letras en la cadena que esta\u0301n en desorden. Por ejemplo, la palabra \" hola\" tiene 4 parejas en desorden: ( h, a) , ( o, l) , ( o, a) y ( l, a) , pues se cumple que las letras aparecen en orden contrario al alfab eacute; tico dentro de la palabra. La palabra \" hilo\" al ser ordenada no tiene ninguna pareja en desorden, por lo que su complejidad es de cero. # ProblemaEscribe un programa que ayude a calcular la cantidad de parejas en desorden que tiene una palabra.",
    "input": "En la primer l iacute; nea un n uacute; mero con la cantidad de letras que tiene la palabra, en la siguiente la palabra. La palabra solo contendr aacute; letras min uacute; sculas de la \" a\" a la \" z\" , a excepci oacute; n de la \" ntilde; \" .",
    "output": "Una sola l iacute; nea con el resultado. # L iacute; mites* Para un 50",
    "note": "",
    "topics": [
      "implementation",
      "math",
      "strings"
    ],
    "id": 3765
  },
  {
    "title": "La loca hora del t\u00e9",
    "url": "https://omegaup.com/arena/problem/La-loca-hora-del-te",
    "history": "La hora del te\u0301 en la casa de la Liebre es un poco extran\u0303a. La mesa tiene muchos asientos ( numerados de 1 a M) y al principio los N animales se sientan en los primeros N asientos. De repente, cuando alguno de ellos quiere una taza nueva, simplemente todos los animales se mueven al asiento que tiene el siguiente nu\u0301mero al que esta\u0301n sentados, excepto que si algu\u0301n animal estaba en el asiento M entonces e\u0301ste se mueve al asiento 1. Antes de acercarse a tomar el te\u0301, Alicia estuvo observando este proceso y se dio cuenta de que podi\u0301a adivinar do\u0301nde estaba cada animal despue\u0301s de cualquier cantidad de movimientos.",
    "input": "El taman\u0303o M de la mesa y la cantidad N de animales. Posteriormente los nombres de los N animales en el orden en el que estaban sentados al principio ( cada uno en un renglo\u0301n, con nombres de 1 a 10 letras minu\u0301sculas) . Despue\u0301s la cantidad C de operaciones que ocurrieron. Cada operacio\u0301n es de uno de dos tipos: la letra ' T' significa que todos los animales se mueven de la forma explicada antes, mientras que la letra ' P' seguida del nombre de un animal es una pregunta sobre en que\u0301 asiento esta\u0301 el animal en ese momento. Puedes suponer que 1 le; N le; M le; 1000 y que 1 le; C le; 1000.",
    "output": "Para cada pregunta, el nu\u0301mero del asiento que corresponda a la respuesta.",
    "note": "",
    "topics": [
      "strings",
      "implementation",
      "math"
    ],
    "id": 3608
  },
  {
    "title": "Dibujo_simetrico",
    "url": "https://omegaup.com/arena/problem/Dibujo_simetrico",
    "history": "# HistoriaA Roco le encantan los dibujos que son altamente sime\u0301tricos. En este momento tiene lo que seri\u0301a el primer cuadrante ( superior izquierdo) del dibujo. Quiere obtener todo el dibujo de tal forma que al doblarlo a partir de un eje vertical que pase exactamente por en medio del dibujo, la parte del lado izquierda coincida con la parte derecha, y que al doblarlo de un eje horizontal que pase exactamente por en medio del dibujo, la parte superior coincida con la parte inferior. # ProblemaHacer el dibujo de Roco.",
    "input": "La primera li\u0301nea tendra\u0301 dos enteros < b> r< / b> y < b> c< / b> , ( 1 = < b> r< / b> = 1000 y 1 = < b> c< / b> = 1000) . La cantidad de renglones y columnas del dibujo respectivamente. Las siguientes < b> r< / b> renglones tendra\u0301n < b> c< / b> caracteres, representando el dibujo de Roco.",
    "output": "El dibujo de Roco.",
    "note": "",
    "topics": [
      "math",
      "implementation",
      "matrices",
      "graphs",
      "binary search",
      "strings",
      "trees"
    ],
    "id": 3604
  },
  {
    "title": "No es lo mismo",
    "url": "https://omegaup.com/arena/problem/Alicia-y-las-frases-volteadas",
    "history": "Alicia sosteni\u0301a una alocada conversacio\u0301n con el Sombrerero, la Liebre y el Liro\u0301n. De pronto, el Sombrerero pregunto\u0301 \" \u00bfEn que\u0301 se parece un cuervo a un escritorio? \" a lo que Alicia respondio\u0301 \" Creo que puedo adivinar la respuesta\" . La Liebre, confundida, dijo \" \u00bfQuieres decir que piensas que puedes encontrar la respuesta? \" a lo que Alicia respondio\u0301 \" \u00a1Exactamente! \" . La Liebre, indignada, dijo \" Entonces debes decir lo que quieres decir\" a lo que Alicia respondio\u0301 \" Al menos quiero decir lo que dije, lo cual es lo mismo\" . \" \u00a1No es lo mismo! \" dijo el Sombrerero, \" Es como si dijeras que ' veo lo que como' es lo mismo que ' como lo que veo' \" . \" O como si dijeras ' me gusta lo que me dan' es lo mismo que ' me dan lo que me gusta' \" dijo la Liebre. \" O como si dijeras ' respiro lo que suen\u0303o' es lo mismo que ' suen\u0303o lo que respiro' \" dijo el Liro\u0301n mientras dormi\u0301a. Dada una frase, ayuda a Alicia a construir la frase ana\u0301loga a la que se refieren el Sombrerero, la Liebre y el Liro\u0301n.",
    "input": "Una cadena que comienza con una o ma\u0301s palabras P, sigue con las palabras \" lo que\" , y termina con una o ma\u0301s palabras F. Cada palabra esta\u0301 formada so\u0301lo con letras minu\u0301sculas y cada dos palabras esta\u0301n separadas por exactamente un espacio. La frase completa tiene a lo mucho 1000 caracteres incluyendo espacios.",
    "output": "Una cadena que comienza con F, sigue con las palabras \" lo que\" , y termina con P.",
    "note": "",
    "topics": [
      "strings"
    ],
    "id": 3583
  },
  {
    "title": "La llave dorada",
    "url": "https://omegaup.com/arena/problem/Alicia-y-la-llave-dorada",
    "history": "Despue\u0301s de que la gran cai\u0301da por el agujero termino\u0301, Alicia se encontraba ilesa y frente a un largo pasillo con muchas puertas de cerraduras diversas. Un poco ma\u0301s adelante se encontraba una mesa de cristal con una llave dorada. Alicia queri\u0301a salir de ahi\u0301 tan pronto como fuera posible y penso\u0301 que seguramente alguna puerta correspondi\u0301a con la llave, asi\u0301 tuviera que girar la llave para poder insertarla en la cerradura. Ayuda a Alicia a encontrar la puerta correcta.",
    "input": "Un entero N seguido de una matriz de N * N caracteres . y # que representa la forma de la llave. Posteriormente un entero M seguido de M matrices de caracteres que representan las cerraduras de las M puertas, numeradas de 1 a M. Puedes suponer que 1 le; N, M le; 100. La entrada puede contener saltos de li\u0301nea adicionales para separar los datos de la misma y deben ser ignorados.",
    "output": "Un entero que es el nu\u0301mero de la puerta que abre con la llave dada o - 1 si ninguna puerta abre. La llave puede girarse 90, 180 o 270 grados.",
    "note": "",
    "topics": [
      "math",
      "implementation",
      "strings",
      "matrices"
    ],
    "id": 3581
  },
  {
    "title": "Coci 2010/2011 Enero AVION",
    "url": "https://omegaup.com/arena/problem/Coci-20102011-Enero-AVION",
    "history": "Mirko y Slavko son agentes de la USKOK siguiendo los movimientos de oficial corrupto desconocido. Se han enterado por fuentes a\u0301nonimas que e\u0301l va a intentar escaparse. Ellos saben que e\u0301lplanea usar sus relaciones diploma\u0301ticas para escaparse en un vuelo como si fuera miembro CIA desde el aeropuertoSevrin na Kupi. Es de conocimiento casi que pu\u0301blico que todos los miembros de la CIA tienen la cadena * * \" FBI\" * * en susco\u0301digos de registro de vuelo. Ellos obtuvieron una lista de los co\u0301digos de registro de vuelo ese di\u0301a. Hay * * exactamente* * cinco registrosen la lista. Escriba un programa que apunte todos los registros de la CIA.",
    "input": "Hay exactaemnte 5 li\u0301neas en la entrada, cada una con un co\u0301digo de registro. Cada uno de esos co\u0301digos es una secuancia de* * a lo ma\u0301s* * 10 letras en mayu\u0301scula del alfabeto ingle\u0301s, di\u0301gitos de \u03010 \u0301 a \u03019 \u0301, o guines \u0301- \u0301.",
    "output": "La primera y u\u0301nica li\u0301nea de salida debe contener una lista separada por espacios de enteros, ordenados ascendentemente, indicando las filas con co\u0301digos de registros de la CIA. Si no hay co\u0301digos de registros del CIA, de\u0301 como salida \" HE GOT AWAY! \" .",
    "note": "",
    "topics": [
      "strings"
    ],
    "id": 3539
  },
  {
    "title": "Fili and Strings",
    "url": "https://omegaup.com/arena/problem/Fili-and-Strings",
    "history": "Fili is a string lover and now he' s interested in a new problem. He wants to know if a string T is a substring of a given string S. His teacher noticed Fili' s ability to solve this problem and now he is going to ask him q queries. For each query his teacher will give him a string and Fili has to answer if it is a substring of a given string S. Fili is too busy because the final projects of school and he needs your help for this problem. Help him! !",
    "input": "The input contains several test cases. The first line contains the string S. The second line contains a number q. Next q lines have the string T that teacher told Fili.",
    "output": "Print \" y\" without quotes if the string T is a substring of S. Otherwise print \" n\" .",
    "note": "",
    "topics": [
      "strings",
      "hashing",
      "string suffix structures",
      "binary search"
    ],
    "id": 3500
  },
  {
    "title": "Decodificando textos",
    "url": "https://omegaup.com/arena/problem/Decodificando-textos",
    "history": "Tu amigo te manda mensajes codificados, deseas decodificarlos. Como son muchos quieres hacer un programa que lo haga por ti. # Codificacio\u0301nLas letras esta\u0301n hechas por un numero. Este numero nace de su valor nume\u0301rico ASCII multiplicado por el numero de letra en el texto. Contando de izquierda a derecha e iniciando en 1 el conteo de las letras. Cada letra esta separada por un punto' . ' y las palabras por un guio\u0301n' - ' .",
    "input": "En una linea recibes un texto codificado en el formato de arriba.",
    "output": "El texto descodificados, es decir, convertidos a palabras",
    "note": "",
    "topics": [
      "strings",
      "implementation"
    ],
    "id": 3420
  },
  {
    "title": "Romanos UP",
    "url": "https://omegaup.com/arena/problem/Romanos-UP",
    "history": "# RomanosEscribe un programa que dado un nu\u0301mero n, imprima su equivalente en nu\u0301meros romanos.",
    "input": "Un numero n ( 1 \u2264 n \u2264 10)",
    "output": "La representacio\u0301n de n en nu\u0301meros romanos# # Ejemplos| | input3| | outputIII| | input5| | outputV| | end",
    "note": "",
    "topics": [
      "implementation",
      "strings"
    ],
    "id": 3241
  },
  {
    "title": "japones",
    "url": "https://omegaup.com/arena/problem/japones",
    "history": "# Contando en Japone\u0301sEscribe un programa que dado un nu\u0301mero n, imprima su equivalente en japone\u0301s. | Nu\u0301mero | Japone\u0301s | | \u2014\u2014\u2014\u2013 | \u2014\u2014\u2014\u2013 | | 1 | ichi | | 2| ni | | 3 | zan | | 4 | yong | | 5 | go | | 6 | loku | | 7 | nana | | 8 | hatchi | | 9 | qiu | | 10 | yu |",
    "input": "Un numero n ( 1 \u2264 n \u2264 10)",
    "output": "La representacio\u0301n de n en japone\u0301s# # Ejemplos| | input3| | outputzan| | input5| | outputgo| | end",
    "note": "",
    "topics": [
      "implementation",
      "strings"
    ],
    "id": 3223
  },
  {
    "title": "Super Agentes",
    "url": "https://omegaup.com/arena/problem/Super-Agentes",
    "history": "# Nu\u0301meros Super AgentesUn nu\u0301mero Super Agente es aquel que entre sus di\u0301gitos contiene tres sietes consecutivos. Por ejemplo el nu\u0301mero 347771 es un nu\u0301mero Super Agente, mientras que el nu\u0301mero 26771 no lo es.",
    "input": "Un nu\u0301mero n ( 0 \u2264 n \u2264 10^ 100)",
    "output": "El mensaje \" n es Super Agente\" si n es un nu\u0301mero Super Agente, en caso contrario imprimir \" n NO es Super Agente\" . # # Ejemplos| | input347771| | output347771 es Super Agente| | input26771| | output26771 NO es Super Agente| | end",
    "note": "",
    "topics": [
      "strings",
      "implementation"
    ],
    "id": 3188
  },
  {
    "title": "occ04nssf21",
    "url": "https://omegaup.com/arena/problem/Anagramas-OCC",
    "history": "# AnagramasUn anagrama consiste en un conjunto de palabras formadas por las mismas letras, pero en diferente orden. Escriba un programaque dadas dos palabras diferentes diga si e\u0301stas pertenecen a un mismo anagrama o no.",
    "input": "Dos palabras.",
    "output": "SI o NO segu\u0301n las dos palabras formen parte o no de un anagrama.",
    "note": "",
    "topics": [
      "strings"
    ],
    "id": 3118
  },
  {
    "title": "Cuantas Mayusculas",
    "url": "https://omegaup.com/arena/problem/Cuantas-Mayusculas",
    "history": "# Cuantas Mayu\u0301sculas! ! Dada una palabra conformada por so\u0301lo letras ( minu\u0301sculas y mayu\u0301sculas) . Escribe un programa que cuente el nu\u0301mero de minu\u0301sculas y el nu\u0301mero de mayu\u0301sculas presentes en la palabra.",
    "input": "Un palabra, con una longitud no mayor a 200 caracteres, la cual contiene so\u0301lo letras minu\u0301sculas y letras mayu\u0301sculas.",
    "output": "Dos nu\u0301meros, indicando la cantidad de letras minu\u0301sculas y la cantidad de letras mayu\u0301sculas.",
    "note": "",
    "topics": [
      "strings",
      "implementation"
    ],
    "id": 3112
  },
  {
    "title": "Diferentes nombres",
    "url": "https://omegaup.com/arena/problem/Diferentes-nombres",
    "history": "Lalo ordeno\u0301 por internet una pulsera con varias letras minu\u0301sculas del alfabeto. E\u0301l ordeno\u0301 que viniera con el nombre de su novia. La pulsera llego\u0301 hoy a la casa de su ti\u0301a y para checar si el nombre es correcto, la ti\u0301a le mando\u0301 un mensaje a Lalo con las letras en orden que ella vio en la pulsera. Tu tarea es ayudar a Lalo a identificar si la pulsera no tiene errores. La pulsera se puede girar y se puede leer las letras dependiendo de las rotaciones. Es decir, si la ti\u0301a le dijo a Lalo que ella vio la palabra \" riama\" , girando la pulsera se pueden leer tambie\u0301n las palabras \" ariam\" , \" maria\" , \" amari\" y \" iamar\" . Si el nombre de la novia es \" maria\" entonces la pulsera NO tiene errores.",
    "input": "El nombre de la novia de Lalo y la palabra que vio la ti\u0301a, separados por un espacio.",
    "output": "Escribir \" Si\" o \" No\" , sin las comillas, dependiendo de si la pulsera tiene errores o no.",
    "note": "",
    "topics": [
      "strings"
    ],
    "id": 3082
  },
  {
    "title": "Buscando el Ki",
    "url": "https://omegaup.com/arena/problem/Buscando-el-Ki",
    "history": "Miguel ha visto mucho anime u\u0301ltimamente y ha empezado a hacer comparaciones entre las habilidades de los personajes y el mundo real. Al hacer su tarea se dio cuenta de una propiedad en los nu\u0301meros que tiene que manejar: un nu\u0301mero X tiene un ki igual a la cantidad de di\u0301gitos que e\u0301ste posee. Miguel tambie\u0301n noto\u0301 que cuando un par de nu\u0301meros A y B hacen la fusio\u0301n se concatenan. Por ejemplo el nu\u0301mero 12 tiene un ki de 2 y el nu\u0301mero 2 tiene un ki de 1, al hacer la fusio\u0301n el nu\u0301mero resultante es 122 con un ki de 3. Miguel te dara\u0301 dos nu\u0301meros A y B y tu tarea es ayudarlo a determinar el ki del nu\u0301mero resultante de la fusio\u0301n de e\u0301stos. * * Pista: Los nu\u0301meros que esta\u0301 manejando son GIGANTES, entonces puedes leerlos como texto. * *",
    "input": "La primera li\u0301nea contiene el nu\u0301mero A. La segunda li\u0301nea contiene el nu\u0301mero B.",
    "output": "Debes decir a Miguel el ki del nu\u0301mero resultante al fusionar A y B.",
    "note": "",
    "topics": [
      "strings",
      "implementation"
    ],
    "id": 3080
  },
  {
    "title": "Amigos Misteriosos",
    "url": "https://omegaup.com/arena/problem/Amigos-Misteriosos",
    "history": "Rodrigo es una persona muy misteriosa, por lo que no quiere que nadie sepa sobre de que\u0301 esta\u0301 hablando con su amigo Pablo. Juntos idearon una forma de encriptar sus mensajes. Para encriptar sus mensajes y asegurarse que nadie los pueda leer, debera\u0301n cambiar todas las \u2018a\u2019 por \u2018x\u2019, las \u2019e\u2019 por \u2018w\u2019, las \u2019i\u2019 por \u2018y\u2019, las \u2019o\u2019 por \u2018k\u2019 y las \u2019u\u2019 por \u2018z\u2019. * * Nota: No debes cambiar las letras mayu\u0301sculas. * *",
    "input": "El texto que Rodrigo quiere encriptar.",
    "output": "El texto de Rodrigo encriptado, listo para enviarlo a Pablo.",
    "note": "",
    "topics": [
      "implementation",
      "strings"
    ],
    "id": 3079
  },
  {
    "title": "occ04pnsf23",
    "url": "https://omegaup.com/arena/problem/Invertir-Palabra",
    "history": "# Invertir una palabraInvertir una palabra",
    "input": "Una palabra a invertir",
    "output": "La palabra invertida",
    "note": "",
    "topics": [
      "implementation",
      "strings"
    ],
    "id": 3076
  },
  {
    "title": "Planas",
    "url": "https://omegaup.com/arena/problem/Planas",
    "history": "# PlanasTrompito es un estudiante descatacado en su universidad, tanto que se ha planteado a dedicarse a la programacio\u0301n de por vida. Pero un di\u0301a enojado porque su equipo de basketball preferido perdio\u0301 las finales, se le salio\u0301 una mala palabra. Su maestra, impactada por la groseri\u0301a de Trompito, decidio\u0301 castigarlo. El castigo consistio\u0301 en hacer planas de la mala palabra, para que nunca jama\u0301s volviera a decirla. Lo que la maestra ignora es que Trompito ha tomado clases de programacio\u0301n y es capaz de escribir un programa que haga las planas por e\u0301l.",
    "input": "La entrada consiste de una palabra S que consta de so\u0301lo letras minu\u0301sculas y su longitud no sobrepasa los 30 caracteres. Y un nu\u0301mero n ( 1 \u2264 n \u2264 1000) que indica el nu\u0301mero de veces que debe imprimir la palabra S.",
    "output": "n li\u0301neas, cada una con la palabra S. # # Ejemplos| | inputxxxxxx 4| | outputxxxxxxxxxxxxxxxxxxxxxxxx| | end",
    "note": "",
    "topics": [
      "implementation",
      "strings"
    ],
    "id": 3064
  },
  {
    "title": "Manipula Cadenas 1",
    "url": "https://omegaup.com/arena/problem/Manipula-Cadenas-1",
    "history": "# Manipula Cadenas 1La UP ( Unidad de Programadores) esta analizando un texto que les acaba de llegar, al parecer tiene un mensaje oculto, pero tu no debes preocuparte por eso, tu trabajo es escribir un programa que ejecute un cierto nu\u0301mero de operaciones, cada una de ellas puede ser de este tipo: 0: Voltea el texto al reve\u0301s. 1: Cambia mayu\u0301sculas por minu\u0301sculas",
    "input": "La primera li\u0301nea contendra\u0301 un nu\u0301mero n ( 1 \u2264 n \u2264 100) , indicando el nu\u0301mero de operaciones a realizar. La segunda sera\u0301 el texto a manipular, la longitud del texto no sobrepasara\u0301 los 50 caracteres, y so\u0301lo contendra letras. Le siguen n nu\u0301meros indicando el tipo de operacio\u0301n a ejecutar.",
    "output": "El texto resultante. Ejemplo de Entrada 1 | Ejemplo de Salida 1\u2014\u2014\u2014\u2014- | \u2014\u2014\u2014\u2014\u2014- 2 < br> OneFlewOverTheCuccosNest < br> 0 1 | TSEnSOCCUcEHtREVoWELfENoEjemplo de Entrada 2 | Ejemplo de Salida 2\u2014\u2014\u2014\u2014- | \u2014\u2014\u2014\u2014\u2014- 3 < br> OneFlewOverTheCuccosNest < br> 0 1 0 | oNEfLEWoVERtHEcUCCOSnEST",
    "note": "",
    "topics": [
      "strings",
      "implementation"
    ],
    "id": 3009
  },
  {
    "title": "Carretes",
    "url": "https://omegaup.com/arena/problem/Carretes",
    "history": "En un tipo de caja registradora antigua, para mostrar los precios, se utilizaba un carrete con los di\u0301gitos del 0 al 9 escritos alrededor, para representar cada una de las cifras. este carrete podi\u0301a girar, hacia delante o hacia atra\u0301s, avanzando de uno en uno los di\u0301gitos hasta legar al numero deseado y girando cada uno hacia el sentido que requiera menor numero de pasos Tu deseas conocer cuantos de estos pasos realiza la maquina para cambiar de un precio a otro. # ProblemaDebes realizar un programa que, conociendo la cantidad de carretes que tiene la maquina, el precio inicial y el precio final, calcule el numero de pasos que realizara el mecanismo para llegar de uno a otro.",
    "input": "Tu programa debera\u0301 leer del teclado los siguientes datos: en la primera li\u0301nea el nu\u0301mero de carretes N, que puede ser desde 2 hasta 200. En la segunda li\u0301nea, el precio inicial como una cadena de N caracteres y en la tercera li\u0301nea el precio final. Como otra cadena de caracteres.",
    "output": "Tu programa debe escribir en pantala el nu\u0301mero total de pasos que realizara\u0301 la ma\u0301quina para llegar del precio inicial al precio final# Ejemplos| | input457321598| | output14| | end# ConsideracionesTu programa se evaluara\u0301 con varios casos de prueba. # TIPSRecuerda que un digito char es diferente de un digito int ya que los char representan codigos ASCII Por tal motivo si quieres convertir un digito char a int debes restarle el valor ascii ( char) ' 0' El co\u0301digo ASCII lo puedes ver en http: / / ascii. cl/ es/ y el co\u0301digo ascci es el mismo que usas cuando oprimes ALT+ nu\u0301mero ( del teclado nu\u0301merico) de tu computadora. por ejemplo alt- 64 es arroba y alt 92 es la diagonal invertida y alt- 48 es el cero y alt- 49 es e nu\u0301mero 1 y alt- 50 es el nu\u0301mero 2Cuando hacemos: char valor= ' a' ; / / lo podemos leer como \" valor\" es igual al codigo ascii de la letra a ( ' a' ) A continuacio\u0301n vamos a convertir 3 varables char con valores ASCII en sus valores enterosint dig1= 0, dig2= 0, dig3= 0; char car1= ' 2' ; / / e' ' 2' equivale al 50 en co\u0301digo ASCIIchar car2= ' 1' ; / / el ' 1' equivale al 49 en codigo ASCIIchar car3= ' 3' ; / / el ' 3' equivale al 49 en codigo ASCII/ / El ascii de cero ( ' 0' ) es igual a 48' / / asi que si al ascii ' 1' ( 49) le restamos ascii ' 0' ( 48) tendemos 1 binario o int/ / si al ascii ' 0' ( 48) le restamos ascii ' 0' ( 48) tendremos 0 binario o int/ / si al ascii ' 3' ( 51) le restamos ascii ' 0' ( 48) tendremos 3 binario o int/ / De tal manera que: dig1= car1- ' 0' ; / / / dig1 almacenara el valor entero ( int o binario) 2dig2= car2- ' 0' ; / / / dig3 almacenara el valor entero ( int o binario) 1dig3= car3- ' 3' ; / / / dig3 almacenara el valor entero ( int o binario) 3/ / para convertir los caracteres car1, car2 y car3 a un numero de 3 digitos/ / debes multiplicar por 10 para desplazar una potencia y sumar el digito como enteroint numero= 0; numero= numero* 10 + car1- ' 0' / / numero = 2numero= numero* 10 + car2- ' 0' / / numero = 21numero= numero* 10 + car3- ' 0' / / numero = 213",
    "note": "",
    "topics": [
      "strings",
      "implementation"
    ],
    "id": 2985
  },
  {
    "title": "Laberinto salvajemente peligroso",
    "url": "https://omegaup.com/arena/problem/lsp",
    "history": "Seguramente ya sabes co\u0301mo encontrar el camino ma\u0301s corto para escapar de un laberinto, pero lamentablemente esta vez tu misio\u0301n es mucho ma\u0301s peligrosa pues ciertos lugares de e\u0301ste esta\u0301nocupados por lobos que intentara\u0301n comerte. Como esta\u0301s en forma, crees poder enfrentarte con L lobos pero probablemente el lobo L + 1 ya sea demasiado para ti. Tu labor sera\u0301 encontrar la ruta ma\u0301s corta para escapar del laberinto evitando enfrentarte con ma\u0301s de L lobos durante tu recorrido.",
    "input": "El valor del entero L seguido de un entero N y de un tablero de N \u00d7 N caracteres. Una E y una S representan la entrada y la salida del laberinto respectivamente mientras que un # representa un muro, un * representa un lobo y un . la ausencia de obsta\u0301culos. Puedes suponer que L ge; 0, 2 le; N le; 100 y que existira\u0301n exactamente una entrada y una salida.",
    "output": "Un entero P que sea el menor nu\u0301mero de pasos usados para salir del laberinto sin enfrentar ma\u0301s de L lobos o - 1 si no existe solucio\u0301n.",
    "note": "",
    "topics": [
      "shortest paths",
      "strings"
    ],
    "id": 2816
  },
  {
    "title": "Sak!",
    "url": "https://omegaup.com/arena/problem/Sak",
    "history": "Tardo\u0301 en darse cuenta, pero John Carter era prisionero de los marcianos verdes. Lentamente lo llevaron a una enorme ciudad que pareci\u0301a abandonada en cuyo centro habi\u0301a una plaza. Cuando los marcianos verdes llegaron a la plaza fueron rodeados por centenas de otros marcianos verdes. Tars Tarkas, el jefe de sus captores, intercambio\u0301 algunas palabras con el li\u0301der de los marcianos. Por supuesto, John Carter no entendi\u0301a la lengua marciana, asi\u0301 que cuando se dirigieron a e\u0301l les contesto\u0301 en una lengua terrestre, que los marcianos verdes no entendieron. En cualquier caso, las intenciones de Tars Tarkas se volvieron claras: repitio\u0301 varias veces la palabra \" sak\" ( o algo parecido) mientras daba pequen\u0303os saltos. Finalmente John Carter entendio\u0301: los marcianos verdes lo queri\u0301an ver dando uno de sus prodigiosos saltos. Ayuda a John Carter a descifrar cua\u0301ntos saltos debi\u0301a dar.",
    "input": "Un texto formado por caracteres alfabe\u0301ticos y blancos. Cada palabra del texto esta\u0301 formada exclusivamente por caracteres alfabe\u0301ticos y mide entre 1 y 10 caracteres de longitud.",
    "output": "La cantidad de veces que aparece la palabra \" sak\" o algo parecido: cualquier cadena de mayu\u0301sculas o minu\u0301sculas que empiece con una o ma\u0301s \" s\" , siga con una o ma\u0301s \" a\" y termine con una o ma\u0301s \" k\" .",
    "note": "",
    "topics": [
      "strings"
    ],
    "id": 2764
  },
  {
    "title": "B\u00fasqueda de Entrop\u00eda",
    "url": "https://omegaup.com/arena/problem/Busqueda-de-Entropia",
    "history": "Freddy es el primer espi\u0301a mexicano en una misio\u0301n de rango Alfa42 en la comunidad de Turing y ha obtenido algunos textos del enemigo, su misio\u0301n es transmitirlos a la base del ITAM. Antes de enviarlos necesita saber si los textos contienen informacio\u0301n valiosa, para decidir si sera\u0301n enviados o no. Para esto, Freddy ha ideado una forma de saber cua\u0301nta informacio\u0301n contiene cada uno de los textos. Para medir la informacio\u0301n de un texto Freddy ha descubierto que cada letra * * entre* * ' F' y ' K' ( exclusivo) aporta 15 unidades de informacio\u0301n, y cualquier otro si\u0301mbolo aporta 11 unidades. Tu misio\u0301n es ayudar a Freddy a encontrar la cantidad de informacio\u0301n del texto que e\u0301l te envi\u0301e. _ _ Nota: Todos los textos obtenidos por Freddy estara\u0301n en letras mayu\u0301sculas. _ _",
    "input": "El texto obtenido por Freddy, en una li\u0301nea.",
    "output": "La cantidad de informacio\u0301n que contiene el texto recibido.",
    "note": "",
    "topics": [
      "math",
      "strings",
      "implementation"
    ],
    "id": 2713
  },
  {
    "title": "Autocorrector de Pulitzer",
    "url": "https://omegaup.com/arena/problem/Autocorrector-de-Pulitzer",
    "history": "Gatica siempre ha sido un buen escritor, pero por no comer vegetales adquirio\u0301 la enfermedad de Pulitzer* y perdio\u0301 su habilidad de buen escritor; esta enfermedad lo hace confundir las letras y ha afectado su rendimiento escolar, pues cuando estudiaba para su examen de Ideas II se dio cuenta que los resu\u0301menes que hizo de las lecturas teni\u0301an intercambiadas las letras * * ' b' * * y * * ' d' * * . Gatica te ha pedido que le ayudes a reparar sus resu\u0301menes para que pueda estudiar para su examen final. Nota: como Gatica odia los hashtags, sus resu\u0301menes no tienen ningu\u0301n \" # \" .",
    "input": "Una li\u0301nea con un fragmento del resumen de Gatica.",
    "output": "El resumen corregido.",
    "note": "",
    "topics": [
      "strings"
    ],
    "id": 2712
  },
  {
    "title": "Apilando D\u00edgitos",
    "url": "https://omegaup.com/arena/problem/Apilando-Digitos",
    "history": "En el mundo ma\u0301gico de la computacio\u0301n, los arquitectos saben construir \" pira\u0301mides horizontales\" . Como estudiante, debes aprender esto antes de graduarte, por lo cual escribira\u0301s un programa que las dibuje por ti. Las pira\u0301mides horizontales tienen N niveles: primero tienen los nu\u0301meros del 1 al N, cada uno en una fila y repetidos i veces en la ie\u0301sima fila. Despue\u0301s tienen los nu\u0301meros del N- 1 al 1 de igual manera como se ve en el ejemplo.",
    "input": "Leera\u0301s un entero positivo N, que representa el nivel de la pira\u0301mide triangular.",
    "output": "La pira\u0301mide triangular de nivel N.",
    "note": "",
    "topics": [
      "strings",
      "implementation"
    ],
    "id": 2669
  },
  {
    "title": "En mi computadora si funciona!",
    "url": "https://omegaup.com/arena/problem/En-mi-computadora-si-funciona",
    "history": "* * Descripcio\u0301n* * El COOI suele divertirse mucho con los comentarios que hacen los oli\u0301mpicos con cada problema y uno de los cla\u0301sicos es: En mi computadora si funciona! Usualmente son errores sinta\u0301cticos, pero los oli\u0301mpicos son muy necios. Por eso te encargamos que nos ayudes a hacer un programa que ayude a los oli\u0301mpicos a corroborar que no tenga errores sinta\u0301cticos de los siguientes caracteres: ( ) [ ] Ya que usualmente olvidan cerrar sus sentencias. * * Entrada* * Un co\u0301digo de cualquier lenguaje de programacio\u0301n. * * Salida* * Una palabra: \u201ccorrecto\u201d si el co\u0301digo esta sinta\u0301cticamente bien e \u201cincorrecto\u201d si no lo esta\u0301 ( sin comillas) . * * Ejemplo: * * * * Entrada* * < pre> < code> int main( ) printf( \u201cHola Mundo\u201d) ; < / pre> < / code> * * Salida* * correcto* * Entrada* * < pre> < code> public class Test( ) public static void main( String . . . args) System. out. println( \u201cHola Mundo\u201d) ) ; < / pre> < / code> * * Salida* * incorrecto* * Limites* * Un co\u0301digo sorpresa",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "strings",
      "data structures"
    ],
    "id": 2604
  },
  {
    "title": "N\u00fameros Gigantes",
    "url": "https://omegaup.com/arena/problem/Numeros_Gigantes",
    "history": "Un cienti\u0301fico ha encontrado un me\u0301todo para generar plasma pero en el proceso tiene que hacer multiplicaciones de nu\u0301meros grandes los cuales no pueden ser almacenados en un int , double etc. Asi\u0301 que tu labor es ayudar al cienti\u0301fico con un programa que logre hacer esas multiplicaciones.",
    "input": "Dos nu\u0301meros A y B, uno en cada li\u0301nea",
    "output": "El resultado de la operacio\u0301n A * B",
    "note": "",
    "topics": [
      "implementation",
      "strings",
      "math"
    ],
    "id": 2603
  },
  {
    "title": "Invierte n\u00famero de 3 d\u00edgitos",
    "url": "https://omegaup.com/arena/problem/Invierte-Numero-EnteroXYZ",
    "history": "Este es un primer ejercicio para ir practicando con el entorno e ir comenzando a generar ideas. En diversos programas se requiere invertir por diversas razones, el orden en el que aparece la informacio\u0301n. Hay formas y herramientas que lo permiten hacer muy fa\u0301cilmente, en este caso sin embargo, queremos que lo intentes empleando operaciones aritme\u0301ticas. # ProblemaLee un nu\u0301mero entero positivo de 3 di\u0301gitos e invie\u0301rtelo, de modo que se imprima su equivalente al reve\u0301s.",
    "input": "Un entero N positivo de tres cifras, ( si N es de menos de tres di\u0301gitos, se asume que tiene ceros a la izquierda) .",
    "output": "Un entero M que representa al nu\u0301mero N escrito de derecha a izquierda.",
    "note": "",
    "topics": [
      "implementation",
      "strings"
    ],
    "id": 2577
  },
  {
    "title": "E-S Mensaje Sumas",
    "url": "https://omegaup.com/arena/problem/E-S-Mensaje-Sumas",
    "history": "Es un problema muy simple, para acostumbrarse a los jueces automa\u0301ticos, lo que tienes que hacer es recibir dos nu\u0301meros y con estos dos nu\u0301meros los sume y muestre la salida indicando el mensaje de la suma como se muestra en el ejemplo. En este problema debes tener cuidado en co\u0301mo muestras el resultado, a continuacio\u0301n se muestra un ejemplo de concatenacio\u0301n, en el que se ve que se sigue la estructura de poner entre comillas el texto tal cual co\u0301mo quieres que aparezca, seguido del operador de suma, seguido de una variable seguido del signo ma\u0301s y otra cadena de caracteres entre comillas y asi sucesivamente hasta obtener el valor deseado. System. out. println( \" La suma de \" + a+ \" + \" + b + \" es \" + ( a+ b) ) ; En este tipo de problemas debes tener especial cuidado en respetar las letras mayu\u0301sculas y minu\u0301sculas, ya que no es lo mismo \" Hola\" , que \" hola\" ,",
    "input": "Un nu\u0301mero entero a y un nu\u0301mero entero b.",
    "output": "Debe mostrar el siguiente mensaje donde a y b debe sustituirse por los valores que recibe como entrada el programa y la palabra resultado por la suma de ambos nu\u0301meros, asegu\u0301rate de respetar mayu\u0301sculas y minu\u0301sculas y los espacios en blanco intermedios. La suma de a + b es resultado",
    "note": "",
    "topics": [
      "strings",
      "math"
    ],
    "id": 2564
  },
  {
    "title": "\"Divisores\" de una cadena",
    "url": "https://omegaup.com/arena/problem/Divisores-de-una-cadena",
    "history": "\u00a1El COOI se ha vuelto loco! # ProblemaDada una cadena de caracteres, calcula cuantos \" divisores\" ( si\u0301, hablamos de divisores de matema\u0301ticas) tiene dicha cadena. Bien, el COOI ( au\u0301n dentro de su cordura) ha decidido explicarte como se hace este procedimiento raro. Considera los siguientes puntos: - Primero, necesitamos convertir la cadena en un numero x, donde x = suma de la representacio\u0301n nume\u0301rica de los caracteres. - La representacio\u0301n nume\u0301rica de los caracteres esta\u0301 basada en el co\u0301digo ASCII ( [ http: / / es. wikipedia. org/ wiki/ ASCII# Caracteres_ imprimibles_ ASCII] [ 1] ) , de tal modo que: A = 65, B = 66, C = 67 . . . Z = 90. - Una vez encontrado el valor de x, simplemente debes imprimir cuantos divisores enteros tiene. Recuerda que un nu\u0301mero a es divisor de x, si y solo si x",
    "input": "Una u\u0301nica linea con la cadena de caracteres, con solo letras mayu\u0301sculas y minu\u0301sculas. ( a- z, A- Z)",
    "output": "Un entero indicando cuantos \" divisores\" tiene la cadena, siguiendo las especificaciones arriba mencionadas. | | inputHOLa| | output6| | descriptionLa suma de la palabra es 292, pues: H = 72O = 79L = 76a = 65292, tiene 6 divisores: 1, 2, 4, 73, 146 y 292. | | inputCOoI| | output4| | end# Li\u0301mitesLa longitud de la cadena no excedera\u0301 100 caracteres- Tip: Si k es una variable de tipo char con un valor = ' A' , y n de tipo entero, entonces, el resultado de: n = 2 * k; dara\u0301 como resultado que n sea igual a 130; [ 1] : http: / / es. wikipedia. org/ wiki/ ASCII# Caracteres_ imprimibles_ ASCII",
    "note": "",
    "topics": [
      "strings",
      "math",
      "implementation"
    ],
    "id": 2532
  },
  {
    "title": "Pal\u00edndromo",
    "url": "https://omegaup.com/arena/problem/Palindromo",
    "history": "# ProblemaTe gusta jugar un juego con tu hermano( a) menor que consiste endeterminar si una cadena de caracteres ( puede ser una palabra) se leeigual de al derecho que al reve\u0301s, es decir, es un pali\u0301ndromo. Como esta\u0301sdeterminada( o) a ganarle, escribes un programa que prueba si una cadenade caracteres es pali\u0301ndromo o no. # Entrada: La cadena de caracteres. # Salida: Cierto o Falso dependiendo si la cadena de caracteres es pali\u0301ndromo o no. # Ejemplo: | | inputx| | outputCierto| | inputabcdefghgfedcba| | outputCierto| | inputxyzzy| | outputFalso| | end",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "strings",
      "string suffix structures",
      "implementation"
    ],
    "id": 2515
  },
  {
    "title": "Letras",
    "url": "https://omegaup.com/arena/problem/Letras",
    "history": "Aunque eres un fana\u0301tico de resolver las sopas de letras, hay ocasiones en las que quisieras un poco de ayuda computacional para encontrar las palabras escondidas. Vamos a suponer que tienes una sola palabra P que quieres encontrar en otra cadena S. Como sabes, la palabra P puede aparecer escrita en S tanto al derecho como al reve\u0301s. Por ejemplo, si buscas la palabra AVE en la cadena AAVEEEVAVEVAEVEVAVEVVVEAVE la podra\u0301s encontrar al derecho ( aAVEeevAVEvaevevAVEvvveAVE) y al reve\u0301s ( aaveeEVAvEVAevEVAvevvveave) . Tu tarea consiste en escribir un programa que, dadas la palabra P y la cadena S, determine si P aparece al derecho y al reve\u0301s en S.",
    "input": "La entrada consiste de dos cadenas P y S, cada una en un renglo\u0301n y formadas por entre 1 y 100 letras mayu\u0301sculas ( ' A' a ' Z' sin incluir los acentos ni la ' N\u0303' ) .",
    "output": "La salida consiste de dos nu\u0301meros enteros D y R, separados por un espacio, donde D = 1 si P aparece al derecho en S y D = 0 en caso contrario, y R = 1 si P aparece al reve\u0301s en S y R = 0 en caso contrario.",
    "note": "",
    "topics": [
      "implementation",
      "strings"
    ],
    "id": 2485
  },
  {
    "title": "Semanario",
    "url": "https://omegaup.com/arena/problem/Semanario",
    "history": "Dado un nu\u0301mero entero N, determina a que\u0301 di\u0301a de la semana pertenece. - 1 LUNES- 2 MARTES- 3 MIERCOLES- 4 JUEVES- 5 VIERNES- 6 SABADO- 7 DOMINGOpara cualquier otra entrada imprimir ERROR",
    "input": "Una li\u0301nea con el entero N",
    "output": "ERROR| | description| | end",
    "note": "",
    "topics": [
      "implementation",
      "strings"
    ],
    "id": 2476
  },
  {
    "title": "Tablero de Ajedrez",
    "url": "https://omegaup.com/arena/problem/Tablero-de-Ajedrez",
    "history": "Dadas las coordenadas de una casilla en un tablero de ajedrez de 8x8, determinar el color de dicha casilla. ! [ entrada] ( tablero. png)",
    "input": "Una li\u0301nea con la letra y di\u0301gito separados por espacios correspondientes a la coordenada de la casilla.",
    "output": "Imprime < strong> BLANCO< / strong> , < strong> NEGRO< / strong> segu\u0301n sea el caso. # Ejemplos# | | inputa 1| | outputNEGRO| | description| | end| | inputc 2| | outputBLANCO| | description| | end",
    "note": "",
    "topics": [
      "implementation",
      "strings"
    ],
    "id": 2404
  },
  {
    "title": "Romanos",
    "url": "https://omegaup.com/arena/problem/Romanos",
    "history": "Escribe un programa que lea un entero entre 1 y 100 e imprima su equivalencia en nu\u0301meros romanos.",
    "input": "Una li\u0301nea con el entero a convertir.",
    "output": "LXXXIX| | description| | end",
    "note": "",
    "topics": [
      "math",
      "strings",
      "implementation"
    ],
    "id": 2392
  },
  {
    "title": "Reloj",
    "url": "https://omegaup.com/arena/problem/Reloj",
    "history": "Escribe un programa que lea la hora actual en formato hora: minutos: segundos e imprima la hora que sera\u0301 despue\u0301s de pasado un segundo.",
    "input": "Una li\u0301nea con tres enteros separados por < strong> : < / strong> correspondientes a la hora, minuto y segundo.",
    "output": "00: 00: 00| | description| | end",
    "note": "",
    "topics": [
      "math",
      "strings"
    ],
    "id": 2389
  },
  {
    "title": "El caballo de John Carter",
    "url": "https://omegaup.com/arena/problem/El-caballo-de-John-Carter",
    "history": "John Carter, temiendo que su amigo Powell fuera capturado por los indios hostiles en su bu\u0301squeda de equipo minero, decidio\u0301 seguir sus huellas a trave\u0301s de un sendero montan\u0303oso. Aunque el caballo de John iba a todo galope, lo irregular del terreno haci\u0301an que el caballo variara su velocidad. En terreno plano, el caballo de John era capaz de recorrer una unidad de distancia en P segundos, mientras que le tomaba S segundos recorrerla si el terreno estaba inclinado ( de subida) y B segundos si estaba declinado ( de bajada) . Calcula el tiempo total en segundos que le tomo\u0301 al caballo de John Carter recorrer todo el terreno.",
    "input": "Tres enteros P, S, B y una cadena de no ma\u0301s de 1000 caracteres, donde el caracter - representa una unidad de terreno plano, / una unidad de terreno inclinado y \u2216 una unidad de terreno declinado. Puedes suponer que 1 \u2264 B \u2264 P \u2264 S \u2264 1000.",
    "output": "Un entero T que sea el tiempo total en segundos que le tomo\u0301 al caballo recorrer el terreno.",
    "note": "",
    "topics": [
      "strings",
      "math",
      "implementation"
    ],
    "id": 2288
  },
  {
    "title": "IOI 2000 - Pal\u00edndromo",
    "url": "https://omegaup.com/arena/problem/IOI-2000---Palindromo",
    "history": "< center> ! [ Logo IOI 2000] ( logo00. jpg) < / center> \u2014\u2014\u2014\u2014\u2014\u2014- # Pali\u0301ndromoUn pali\u0301ndromo es una cadena de caracteres sime\u0301trica, esto es, una cadena de caracteres que se lee de igual manera de izquierda a derecha y de derecha a izquierda. Escribe un programa que, dada una cadena de caracteres, determine el mi\u0301nimo nu\u0301mero de caracteres que se deben insertar dentro de la cadena para obtener un pali\u0301ndromo. Por ejemplo, insertando 2 caracteres, la cadena \" Ab3bd\" se puede convertir en un pali\u0301ndromo ( \" dAb3bAd\" o \" Adb3bdA\" ) . Sin embargo, insertar menos de 2 caracteres dentro de dicha cadena no produce un pali\u0301ndromo.",
    "input": "La primera linea contiene un u\u0301nico entero: la longitud de la cadena de caracteres N, 3 \u2264 N \u2264 5000. La segunda linea contiene una cadena de caracteres de longitud N. La cadena estara\u0301 formada por letras mayu\u0301sculas ( de ' A' a ' Z' ) , letras minu\u0301sculas ( de ' a' a ' z' ) y di\u0301gitos ( de ' 0' a ' 9' ) . Letras mayu\u0301sculas y minu\u0301sculas se consideran distintas.",
    "output": "La primera y u\u0301nica linea contiene un entero, el mi\u0301nimo nu\u0301mero de caracteres que tienen que ser insertados dentro de la cadena original para obtener un pali\u0301ndromo.",
    "note": "",
    "topics": [
      "strings",
      "dp"
    ],
    "id": 2271
  },
  {
    "title": "Slash",
    "url": "https://omegaup.com/arena/problem/Slash",
    "history": "The American English slash ` / ` is a punctuation mark. In the early modern period, in the Fraktur script, which was widespread through Europe in the Middle Ages, one slash ` / ` represented a comma, while two slashes ` / / ` represented a dash. With the wide use of computers, slash appeared far more than at any previous time in history. On Unix- like systems and in URLs, the slash is to separate directory and file components of a path: / home/ whuacm/ chaeyeon/ Sherlockpp. jpghttp: / / acm. whu. edu. cn/ But in Windows systems, it uses ` t\u0300o separate directory and file components of a path: C: - yungaoreally confuses me. Could you help me to judge if the string I wrote is right. Please notice that I would only make a mistake by changing ` t\u0300o ` / ` or ` / ` to ` . \u0300 All the strings were constituted by a- z, A- Z, 0- 9, ` . ` , ` a\u0300nd ` / ` , no other characters would appear in the strings. A string of URL always begins with \u201c[ a- zA- Z] + : / / \u201d ( Notice ` / ` maybe changed to ` ) \u0300, in which \u201c[ a- zA- Z] + \u201d represents any non- empty string of letters. Windows path begins with \u201c[ a- zA- Z] : ( Notice ` m\u0300aybe changed to ` / ` ) , in which \u201c[ a- zA- Z] \u201d means an English letter. ( e. g. \u201cC: \u201d is a URL not a Windows path) The path of Unix- like system begins with ` / ` or ` . \u0300I\u2019ll give you some strings, can you tell me which type those strings belong to and those correct forms. Sample Input/ Output\u2014\u2014\u2014\u2014\u2014\u2014- | | input4http: / / acm. whu. edu. cn/ feliojhttp: / acm. whu. edu. cn/ 11111011001/ / home/ whuacm/ Slash/ yamaZ: / chaeyeon| | outputIt\" s a URL! http: / / acm. whu. edu. cn/ feliojIt\" s a URL! http: / / acm. whu. edu. cn/ 11111011001/ It\" s a path in Unix- like systems! / home/ whuacm/ Slash/ yamaIt\" s a path in Windows system! Z: | | end",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "strings",
      "implementation"
    ],
    "id": 2230
  },
  {
    "title": "GCC",
    "url": "https://omegaup.com/arena/problem/GCC",
    "history": "The GNU Compiler Collection ( usually shortened to GCC) is a compiler system produced by the GNU Project supporting various programming languages. But it doesn\u2019t contain the math operator ` \u00a1. In mathematics, this symbol represents the factorial operation. The expression ` n\u00a1 means \" the product of the integers from 1 to n\" . For example, ` 4\u00a1 ( read four factorial) is 4 \u00d7 3 \u00d7 2 \u00d7 1 = 24. ( 0! is defined as 1, which is a neutral element in multiplication, not multiplied by anything. ) We want you to help us with this formation: ` ( 0! + 1! + 2! + 3! + 4! + . . . + n! )",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "strings",
      "math",
      "implementation"
    ],
    "id": 2229
  },
  {
    "title": "Anagramas",
    "url": "https://omegaup.com/arena/problem/Anagramas",
    "history": "Una palabra A y una palabra B son anagramas si A y B tienen las mismas letras, por ejemplo \" paso\" y \" sopa\" . Todas las palabras seran minusculas. Determinar si dos cadenas son anagramas.",
    "input": "Un entero N que indica el numero de casos de prueba, seguido por N lineas que contienen 2 cadenas de caracteres separadas por un espacio en blanco.",
    "output": "N li\u0301neas de salida con \" si\" o \" no\" segun corresponda, \" si\" si son anagramas y \" no\" en caso contrario. | | input2roma amorqwe wer| | outputsino| | end",
    "note": "",
    "topics": [
      "implementation",
      "strings"
    ],
    "id": 2223
  },
  {
    "title": "Reemplazando letras",
    "url": "https://omegaup.com/arena/problem/ReemplazandoLetras",
    "history": "Remueve los caracteres duplicados de una cadena. Las cadenas contendran caracteres alfanumericos de no mas de 80 caracteres por linea. No hay espacios en las lineas. | | input5abcdeabcdeaabcdebasdfghjklaqwertyy| | outputabcdebcdeacdesdfghjklqwert| | end",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "strings",
      "implementation"
    ],
    "id": 2222
  },
  {
    "title": "Interview Question",
    "url": "https://omegaup.com/arena/problem/InterviewQuestion",
    "history": "A friend of mine was asked the following question today at interview for the position of software developer: Given two string ` s1` and ` s2` how will you check if ` s1` is a * * rotated* * version of ` s2` ? * * Example: * * If ` s1 = \" stackoverflow\" ` then the following are some of its rotated versions: \" tackoverflows\" \" ackoverflowst\" \" overflowstack\" where as ` \" stackoverflwo\" ` is * * not* * a rotated version. The answer he gave was: > Take ` s2` and find the longest prefix that is a sub string of ` s1` , that will give you the point of rotation. Once you find that point, break ` s2` at that point to get ` s2a` and ` s2b` , then just check if ` concatenate( s2a, s2b) = = s1` It looks like a good solution to me and my friend. But the interviewer thought otherwise. He asked for a simpler solution. Please help me by telling how would you do this ? Thanks in advance.",
    "input": "\u2014\u2013A line with an integer N, which is the number of following test cases. Then 2N lines follow. Each test case conains a pair of strings, s1 and s2, each one on its own line. s1 and s2 can have lower, upper case letters and numberes. No spaces. The matches must be case sensitive.",
    "output": "\u2014\u2014For each test case, print a line containg ' Yes' if s1 is a rotated version of s2, print ' No' otherwise. When you are done with the test cases print the line \" Do I get the job? \" Example input and output\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014| | input2stackoverflowtackoverflowsstackoverflowstackoverflwo| | outputYesNoDo I get the job? | | endAsked Mar 31 at 13: 58 on StackOverflow by Webdev",
    "note": "",
    "topics": [
      "brute force",
      "strings",
      "implementation"
    ],
    "id": 2208
  },
  {
    "title": "Contando Ovejas",
    "url": "https://omegaup.com/arena/problem/ContandoOvejas",
    "history": "< p> Pedro tiene insomnio y uacute; ltimamente para poder dormir a tenido que contar ovejas. Durante los uacute; ltimos di\u0301as Pedro a dejado de imaginar solo ovejas, ahora tambi eacute; n imagina vacas, perros, gatos, linces, y otros animales de diversos nombres. < / p> < p> A Pedro solo le interesa saber cua\u0301ntas ovejas a imaginado, sin contar los dem aacute; s animales. < / p> < h3>",
    "input": "< / h3> < p> La primer l iacute; nea consta de un entero < i> P< / i> que indica el nu\u0301mero de casos de prueba, las siguientes < i> P< / i> casos contendra\u0301n un entero < i> N< / i> que indica el n uacute; mero de animales que Pedro ha imaginado, enseguida encontraras los < i> N< / i> nombres de animales, cada uno en una l iacute; nea. Todas los nombres contienen solo letras min uacute; sculas y tienen una longitud < i> l< / i> donde 0 lt; < i> l< / i> le; 100. < / p> < h3>",
    "output": "< / h3> < p> Para cada caso de prueba debes escribir cuantas ovejas pedro imagin oacute; . < / p> < p> < h3> Ejemplo< / h3> < / p> < b> Entrada < / b> < pre> 14ovejavacaperrooveja< / pre> < b> Salida < / b> < pre> 2< / pre>",
    "note": "",
    "topics": [
      "strings"
    ],
    "id": 2203
  },
  {
    "title": "Soundex",
    "url": "https://omegaup.com/arena/problem/Soundex",
    "history": "La codificacio\u0301n Soundex agrupa palabras que aparentemente tienen un sonido similar basado en su escritura. Por ejemplo, \" can\" y \" khawn\" , \" con\" y \" gone\" serian equivalentes dentro de la codificacio\u0301n Soundex. Soundex involucra traducir cada palabra en una serie de di\u0301gitos en los cuales cada di\u0301gito representa una letra: * * 1* * representa * * B* * , * * F* * , * * P* * , o * * V* * * * 2* * representa * * C* * , * * G* * , * * J* * , * * K* * , * * Q* * , * * S* * , * * X* * , o * * Z* * * * 3* * representa * * D* * o * * T* * * * 4* * representa * * L* * * * 5* * representa * * M* * o * * N* * * * 6* * representa * * R* * Las letras * * A* * , * * E* * , * * I* * , * * O* * , * * U* * , * * H* * , * * W* * , y * * Y* * no esta\u0301n representadas en la codificacio\u0301n Soundex, y las letras repetidas con el mismo co\u0301digo esta\u0301n representadas con una sola instancia de ese digito. Palabras con la misma codificacio\u0301n Soundex son equivalentes. Cada linea de entrada contiene una sola palabra en mayu\u0301sculas, de menos de 20 letras. para cada entrada produzca una linea con el co\u0301digo Soundex de esa palabra. | | inputKHAWNPFISTERBOBBY| | output25123611| | endFuente: Waterloo Local Contest Sep. 25, 1999",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "implementation",
      "strings"
    ],
    "id": 2200
  },
  {
    "title": "Bold",
    "url": "https://omegaup.com/arena/problem/Bold",
    "history": "# # # # * Semifinal 1( facil) . * * ANPA 2010* * * # # # HistoriaEstas trabajando para una famosa compan\u0303i\u0301a que se especializa en desarrollo de Hojas de Ca\u0301lculo para actividades administrativas. Tu\u0301 estas a cargo de una de las principales funciones del sistema, la cua\u0301l es analizar si un conjunto de celdas tienen sus datos con estilo de letras Negritas o no. # # # ProblemaSi una celda tiene su contenido en letras negritas, sera\u0301 representada por una letra # 145; B # 146; , de lo contrario, sera\u0301 representada por una letra # 145; N # 146; . Si todas las celdas del caso de prueba esta\u0301n en negritas, debera\u0301s imprimir la palabra # 147; Bold # 148; . Si ninguna celda esta\u0301 en negritas, debera\u0301s escribir # 145; Non bold # 146; . Si algunas celdas esta\u0301n en negritas y otras no lo esta\u0301n, debera\u0301s escribir # 145; Some bold # 146; .",
    "input": "La primer linea es un entero C que indica el numero de casos. La primera li\u0301nea de cada caso contendra\u0301 un nu\u0301mero 0 < n \u2264 1000 el cual indica la cantidad de celdas a analizar. En la siguiente li\u0301nea se mostrara\u0301 una cadena de caracteres de longitud n con letras # 145; B # 146; o # 145; N # 146; , las cuales indican el estado de la celda correspondiente.",
    "output": "Las palabra # 147; Bold # 148; , # 147; Non bold # 148; o # 147; Some bold # 148; , sin comillas, segu\u0301n corresponda.",
    "note": "",
    "topics": [
      "strings",
      "implementation"
    ],
    "id": 2198
  },
  {
    "title": "Open Source",
    "url": "https://omegaup.com/arena/problem/OpenSource",
    "history": "\" El software libre y de co\u0301digo abierto ( tambie\u0301n conocido como FOSS o FLOSS, por free/ libre and open source software, en ingle\u0301s) es el software que esta\u0301 licenciado de tal manera que los usuarios pueden estudiar, modificar y mejorar su disen\u0303o mediante la disponibilidad de su co\u0301digo fuente. \" Pedro a creado un Sotfware de codigo abierto ( SCA) pero ultimamente a recibido varias quejas de algunos usuarios diciendole que su SCA no funciona. Pedro baja una version de su SCA y lo comienza a revisar y descubre que alguien a modificado de manera malisiosa e inteligente el codigo fuente. La manera \" inteligente\" se refiere a que cada error en el codigo consiste en que se han modificado el caracter \" ; \" por \" , \" , pero no todas las comas en el codigo implican error, solo aquellas que se encuentran entre una letra ' a' y ' b' , ejemplo: \" a; b\" no es error pero \" a, b\" si es un error. Tu mision consiste en determinar la cantidad de errores en el SCA. Para cada intervalo cerrado [ \" a\" , \" b\" ] que no contiene ninguna \" a\" ni \" b\" pero si una o mas \" , \" contara como error, por cada \" , \" contara como un error mas.",
    "input": "Un entero N que indica el numero de casos a analizar. Cada caso termina con la linea \" * \" , solo existen letras minusculas( a- z) .",
    "output": "Para cada caso N que sea correcto escribe el numero de errores encontrados en cada SCA| | input4a, b* a, , b* a, ba, ba, b* aaaaaab, , , , , aaaa, b, b, b, b* | | output1231| | end* Ruben Rodriguez Rodriguez* .",
    "note": "",
    "topics": [
      "implementation",
      "strings"
    ],
    "id": 2196
  },
  {
    "title": "Shift cipher",
    "url": "https://omegaup.com/arena/problem/ShiftCipher",
    "history": "Debes haber oido de una antigua manera de encriptacion llama Caesar cipher o ' shift cipher' . Esto es, dado el texto y un numero D, tu podrias remplazar cada caracter c en el texto con otro caracter el cual esta D lugares despues de c en el alfabeto. ( El alfabeto tomado en cuenta incluye las letras contenidas en un teclado norteamericano) . Por ejemplo, si D = 2, tu podrias remplazar ' a' con ' c' , remplazar ' b' con ' d' , . . . remplazar ' y' con ' a' , y remplazar ' z' con ' b' . Dado el texto y un entero D, tu podras generar el cipher( texto encriptado) .",
    "input": "\u2014\u2014- La primera linea es un entero T, El numero de casos de prueba. Cada caso contiene solo una linea, consiste del texto y de un numero D, separados por un espacio. Asume que hay solo letras minusculas, y el taman\u0303o del texto no es mayor a 100. 0 eq; D < 26.",
    "output": "\u2014\u2014Genera un linea para cada caso, indicando el cipher( texto encriptado) . Ejemplo entrada y salida\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014| | input2tjucs 1abcd 0| | outputukvdtabcd| | end# # # Fuente: TJU Exam 2008",
    "note": "",
    "topics": [
      "strings"
    ],
    "id": 2194
  },
  {
    "title": "Letras Faltantes",
    "url": "https://omegaup.com/arena/problem/LetrasFaltantes",
    "history": "# # # HISTORIALos fana\u0301ticos del chat quieren escribir cada vez ma\u0301s ra\u0301pido, con el fin de escribir la mayor cantidad de palabras en el menor tiempo posible. Pero escribir ra\u0301pido no es para cualquiera, por lo que siempre sucede que hay letras faltantes en las palabras que intentamos escribir. Por ejemplo, si queremos escribir la palabra \u0093fiesta\u0094 puede ser que la escribamos como \u0093fsta\u0094 entones las letras faltantes sera\u0301n \u0093ie\u0094, o tambie\u0301n puede pasar que escribamos \u0093iest\u0094, entonces las letras faltantes sera\u0301n \u0093fa\u0094. Las letras faltantes son aquellas que no fueron escritas mientras tratabas de escribir la palabra completa. Tu amig@ te escribe una palabra S y has identificado como posible palabra ( la que crees que quiso escribir) a P. Le quieres decir a tu amig@ , segu\u0301n tu palabra P, cuales son las letras que se le olvidaron escribir. Sin embargo no siempre es acertada su palabra P, asi\u0301 que en este caso, decimos que no es posible identificar las letras. # # # PROBLEMADada la palabra S que te escribieron y tu posible palabra P determina, si es posible, cuales son las letras faltantes.",
    "input": "En la primera li\u0301nea dos nu\u0301meros enteros positivos 0 lt; n, m lt; 50, que indican la cantidad de letras en la palabra S y P respectivamente. En las siguientes dos li\u0301neas, la palabra S y la palabra P. Los caracteres que pueden tener S y P son: letras minu\u0301sculas, nu\u0301meros comas y puntos.",
    "output": "Una li\u0301nea que contenga las letras faltantes, recordar que las letras faltantes son aquellas que fueron omitidas mientras se escribi\u0301an. Si la palabra P no puede ser generada agregando letras a S, entonces debes escribir \u0093no entiendo\u0094 ( sin comillas) . | | input4 7cptrcaptura1 4babcd5 7ptircaptura| | outputauaacdno entiendo| | endFuente: PreANPA 2010, http: / / www. cimat. mx/ oieg",
    "note": "",
    "topics": [
      "strings"
    ],
    "id": 2193
  },
  {
    "title": "Palindromos Duales",
    "url": "https://omegaup.com/arena/problem/PalindromosDuales",
    "history": "Un nu\u0301mero que se lee lo misma de derecha a izquierda que cuando se lee de derecha a izquierda. El nu\u0301mero 123321 es pali\u0301ndromo, el nu\u0301mero 777778 no lo es. Por supuesto, los pali\u0301ndromos no tienen ceros iniciales ni finales, por lo tanto 0220 no es un pali\u0301ndromo. . El nu\u0301mero 21 ( base 10) no es un pali\u0301ndromo en base 10, pero el nu\u0301mero 21 ( base 10) es, de hecho, un pali\u0301ndromo en base 2 ( 10101) . Escriba un programa que lea dos nu\u0301meros ( expresados en base 10) : - N ( 1 \u2264 N \u2264 15) - S ( 0 < S < 10000) y encuentre e imprima ( en base 10) los primeros N nu\u0301meros estrictamente mayores que S que son pali\u0301ndromos cuando se escriben en dos o ma\u0301s bases nume\u0301ricas ( 2 \u2264 base \u2264 10) . Las soluciones a este problema no requieren manipular enteros mayores que los esta\u0301ndares de 32 bits. FORMATO DE ENTRADA\u2014\u2014\u2014\u2014\u2014\u2014Un entero K que indica el numero de casos siguientes. Cada caso K contienen una sola li\u0301nea con los enteros N y S separados por un espacio. FORMATO DE SALIDA\u2014\u2014\u2014\u2014\u2014\u2013Por cada caso de prueba, K, imprima las N li\u0301neas, cada una con un nu\u0301mero en base 10 que es pali\u0301ndromo cuando se expresa en al menos dos bases 2. . 10. Los nu\u0301meros deben estar impresos del menor al mayor. ENTRADA Y SALIDA DE EJEMPLO\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014- | | input13 25| | output262728| | end# # # # Mario Cruz ( Colombia) y Hugo Rickeboer ( Argentina)",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "math",
      "string suffix structures",
      "implementation",
      "strings"
    ],
    "id": 2192
  },
  {
    "title": "Collar Roto",
    "url": "https://omegaup.com/arena/problem/CollarRoto",
    "history": "Usted tiene un collar de N cuentas ( 3 < = N < = 350) , algunas rojas, otras azules y otras blancas organizadas aleatoriamente. Aqui\u0301 hay dos ejemplos para n= 29: 1 2 1 2r b b r b r r br b b br r b rr r w rb r w wb b r rb b b bb b r br r b rb r r rb r r rr r r br b r r r wFigura A Figura Br cuenta rojab cuenta azulw cuenta blancaLas cuentas consideradas primera y segunda en el texto que sigue ha sido marcadas en la figura. La configuracio\u0301n en la Figura A puede ser representada como una cadena de b' s y r' s, donde b representa una cuenta azul y r representa una roja, de la siguiente manera brbrrrbbbrrrrrbrrbbrbbbbrrrrb . Suponga que usted tiene que romper el collar en algu\u0301n punto, ponerlo derecho y luego recolectar las cuentas del mismo color de un extremo hasta que usted llegue a una cuenta de un color diferente, y hacer lo mismo desd el otro extremo ( el cual podri\u0301a o no ser del mismo color que las cuentas recogidas previamente) . Determine el punto donde el collar deberi\u0301a ser roto de tal manera que se recolecte el ma\u0301ximo nu\u0301mero de cuentas.",
    "input": "Una linea con un entero C. Le siguen C pares de lineas que contienen : N, el nu\u0301mero de cuentas y una cadena de N cara\u0301cteres, cada uno de los cuales es r, b, o w",
    "output": "Una sola li\u0301nea conteniendo el ma\u0301ximo nu\u0301mero de cuentas que pueden ser recolectadas del collar suministrado. | | input129wwwbbrwrbrbrrbrbrwrwwrbwrwrrb| | output11| | end# # # EXPLICACION DE LA SALIDAConsidere dos copias de las cuentas ( como si se dieran la vuelta en los extremos) . La cadena de 11 cuentas esta\u0301 marcada. wwwbbrwrbrbrrbrbrwrwwrbwrwrrb wwwbbrwrbrbrrbrbrwrwwrbwrwrrb* * * * * * * * * * * FUENTE: USACO TRAINING",
    "note": "",
    "topics": [
      "brute force",
      "strings",
      "implementation"
    ],
    "id": 2170
  },
  {
    "title": "Tu viaje esta aqui.",
    "url": "https://omegaup.com/arena/problem/TuViajeEstaAqui",
    "history": "Es un hecho bien conocido que detra\u0301s de cada buen cometa hay un OVNI. Estos OVNIs vienen frecuentemente a reclutar apoyos de aqui\u0301 en la tierra. Desdichadamente, ellos solamente tienen espacio para recoger a un grupo de seguidores en cada viaje. Ellos, sin embargo, permiten que los grupos sepan de antemano cua\u0301les sera\u0301n recogidos por cada cometa usando un me\u0301todo inteligente: ellos eligen un nombre para el cometa, el cual, junto con el nombre del grupo, puede ser usado para determinar si es el turno para un grupo particular para irse ( \u00bfQuie\u0301n piensas que pone los nombres de los cometas? ) . Los detalles del me\u0301todo de determinacio\u0301n son dados a continuacio\u0301n; tu trabajo es escribir un programa el cual tome el nombre de un grupo y el nombre de un cometa y luego determine si el grupo deberi\u0301a irse con el OVNI detra\u0301s de ese cometa o no. Tanto el nombre del grupo y el nombre del cometa son convertidos en un nu\u0301mero de la siguiente manera: el nu\u0301mero final es simplemente el producto de todas las letras en el nombre, donde \" A\" es 1 y \" Z\" es 26. Por ejemplo, el grupo \" USACO\" seri\u0301a 21 * 19 * 1 * 3 * 15 = 17955. Si el nu\u0301mero del grupo mo\u0301dulo 47 es el mismo que el nu\u0301mero del cometa mo\u0301dulo 47, entonces tu\u0301 necesitas decirle al grupo \u00a1Ali\u0301stense\u00a1 ( Recuerda que \" a mod b\" es el residuo despue\u0301s de dividir a por b; 34 mod 10 es 4. ) Escribe un programa el cual lea el nombre de un cometa y el nombre de un grupo y encuentre si de acuerdo al me\u0301todo antes descrito el grupo debe ir en el OVNI detra\u0301s de ese cometa y en ese caso imprima \" GO\" , y si no \" STAY\" . Los nombres de los grupos y de los cometas sera\u0301n cadenas de letras mayu\u0301sculas sin espacios ni caracteres de puntuacio\u0301n, hasta de 6 caracteres de longitud. Ejemplos: | | inputCOMETQHVNGATABSTARUSACO| | outputGOSTAY| | end",
    "input": "La primer linea contendra un entero ` n` menor a 20. Le siguen ` n` casos de prueba, los cuales estar formados por dos lineas cada uno. La primer linea es una cadena de caracteres en mayu\u0301scula de longitud 1. . 6 que es el nombre del cometa. Y la segunda es una cadena de caracteres en mayu\u0301scula de longitud 1. . 6 que es el nombre del grupo.",
    "output": "La salida contendra ` n` lineas conteniendo la palabra \" GO\" o la palabra \" STAY\" . | | inputCOMETQHVNGATABSTARUSACO| | outputGOSTAY| | endFUENTE: USACO TRAINING",
    "note": "",
    "topics": [
      "strings",
      "implementation",
      "math"
    ],
    "id": 2168
  },
  {
    "title": "NO GRITAR",
    "url": "https://omegaup.com/arena/problem/NOGRITAR",
    "history": "Estas enojado con tu presidente. MUY ENOJADO. Estas tan enojado que vas a escribirle una carta a el prsidente de tu pais. Y todos saben que si quires gritar en un medio escrito, puedes usar mayusculas para denotarlo. Evidentemente debes dejar de fuera las palabras obcenas o el servicio presidencial no dejara que el prsediente lea tu carta. Las palabras obsenas, segun el servicio presidencial, son todas aquellas que comiencen con ' P' y terminen con ' R' . O bien que comienzen con ' H' y exista una ' O' en cualquier otra parte de la palabra. Entonces, ' PIFAR' , ' HARAMO' , ' HOME' serian palabras obsenas. Debes dejarlas fuera. Como quieres concentrarte en el contenido de la carta decides automatizar la capitalizacion de las letras y la censura de tu lenguaje, si es que fuera necesario claro esta. La entrada consistira en un numero n, que indica que las siguientes n lineas contendran la carta. Las lineas no excederan 80 caracteres y no habra lineas vacias. Todos los simbolos seran letras minusculas, mayusculas o espacios. No habra mas de 100 lineas. El archivo de salida debe contener n lineas con todas las letras en mayusculas y las obsenidades seran ocultas con el simbolo numeral ' # ' y debera haber tantos signos como letras en la palabra obsena. | | input4Estimado presidenteDebemos platicar sobre esta situacion su pueblo esta muy hinchadoy no pensamos plantar mas bombasqueremos paz DE UNA VEZ LE DIGO Que haga lo que haga no seremos sus esclavoz| | outputESTIMADO PRESIDENTEDEBEMOS # # # # # # # # SOBRE ESTA SITUACION SU PUEBLO ESTA MUY # # # # # # # # Y NO PENSAMOS # # # # # # # MAS BOMBASQUEREMOS PAZ DE UNA VEZ LE DIGO QUE HAGA LO QUE HAGA NO SEREMOS SUS ESCLAVOZ| | end",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "strings",
      "implementation"
    ],
    "id": 2167
  },
  {
    "title": "IOI 2012 - Cangrejo Escribano",
    "url": "https://omegaup.com/arena/problem/Cangrejo-Escribano",
    "history": "< center> ! [ Logo IOI 2012] ( logo12. jpg) < / center> \u2014\u2014\u2014\u2014\u2014\u2013# Cangrejo EscribanoAlgunas personas dicen que Leonardo da Vinci fue un gran admirador de Johannes Gutenberg, el herrero alema\u0301n que invento\u0301 la impresio\u0301n de tipos mo\u0301viles, y que le rindio\u0301 homenaje disen\u0303ando una maquina llamada \" el cangrejo escribano\" \u0097 * il gambero scrivano* \u0097 el cual era un dispositivo de escritura bastante simple. Dicho dispositivo era muy similar a una maquina de escribir moderna y aceptaba dos comandos: uno para escribir el siguiente caracter y otro para deshacer los comandos ma\u0301s recientes. La caracteri\u0301stica ma\u0301s notable del cangrejo escribano es que su comando para deshacer es extremadamente poderoso, dado que al ser e\u0301l mismo considerado como un comando, puede ser deshecho. Tu tarea consiste en implementar una versio\u0301n en software del cangrejo escribano: debe iniciar con un texto vaci\u0301o, aceptar una secuencia de comandos ingresados por el usuario y responder preguntas para conocer posiciones especificas sobre la versio\u0301n actual del texto, como se muestra a continuacio\u0301n. * ` EscribirLetra( L) ` . Agrega al final del texto la letra L ( ` ' a' ` \u2264 L \u2264 ` ' z' ` ) . * ` DeshacerComandos( U) ` . Deshace los u\u0301ltimos U comandos realizados, para un entero positivo U. * ` ObtenerLetra( P) ` . Imprime la letra en la posicio\u0301n P del texto, para un i\u0301ndice no negativo P ( indexado desde 0) . Esta pregunta * * no* * es un comando, por lo tanto es ignorada por el comando deshacer. Dichas funciones sera\u0301n llamadas n veces en cualquier orden. Se garantiza que el valor de U no excedera\u0301 la cantidad de comandos previamente recibidos y el i\u0301ndice P sera\u0301 menor que la longitud del texto actual. ` DeshacerComandos( U) ` deshace los U previos comandos en * reversa* ; esto es, si el comando a ser deshecho es ` EscribirLetra( L) ` , entonces quita L del final del texto actual. En cambio, si el comando a ser deshecho es ` DeshacerComandos( V) ` , entonces rehace los V comandos previos en su orden * original* . Considera la siguiente secuencia de comandos como ejemplo: < center> ! [ Ejemplo] ( ejemplo. png) < / center>",
    "input": "La primer li\u0301nea contiene el nu\u0301mero total de comandos n. Las siguientes n li\u0301neas pueden ser: * Una letra ` ' T' ` seguida de un caracter L. Representando un comando ` EscribirLetra( L) ` . * Una letra ` ' U' ` seguida de un entero U. Representando un comando ` DeshacerComandos( U) ` . * Una letra ` ' P' ` seguida de un i\u0301ndice P. Representando un comando ` ObtenerLetra( P) ` .",
    "output": "Por cada comando ` ObtenerLetra( P) ` en la entrada, debera\u0301s imprimir una li\u0301nea con el caracter que estaba en la posicio\u0301n P del texto en el momento en que se realizo\u0301 la pregunta. | | input14T aT bP 1T dU 2U 1P 2T eU 1U 5T cP 2U 2P 2| | outputbdcd| | end# Li\u0301mites# Subtarea 1 [ 5 puntos] * 1 \u2264 n \u2264 100* No habra\u0301 comandos ` DeshacerComandos` . # Subtarea 2 [ 7 puntos] * 1 \u2264 n \u2264 100* No se deshara\u0301n comandos ` DeshacerComandos` . # Subtarea 3 [ 22 puntos] * 1 \u2264 n \u2264 5, 000* No hay restricciones en los comandos. # Subtarea 4 [ 26 puntos] * 1 \u2264 n \u2264 1, 000, 000* Todas los comandos ` ObtenerLetra` ira\u0301n al final. # Subtarea 5 [ 40 puntos] * 1 \u2264 n \u2264 1, 000, 000* No hay restricciones en los comandos.",
    "note": "",
    "topics": [
      "data structures",
      "strings",
      "trees",
      "graphs",
      "matrices",
      "math",
      "string suffix structures"
    ],
    "id": 2130
  },
  {
    "title": "IOI 2008 - Impresora de Tipos",
    "url": "https://omegaup.com/arena/problem/Impresora-Tipos",
    "history": "< center> ! [ Logo IOI 2008] ( logo08. jpg) < / center> \u2014\u2014\u2014\u2014\u2014\u2013# Impresora de TiposNecesitas imprimir N palabras en una impresora de tipos mo\u0301viles. Las impresoras de tipos mo\u0301viles son esas viejas impresoras en las que se necesita colocar pequen\u0303as piezas de metal ( cada una con una sola letra) de manera que se formen palabras. Una pieza de papel es entonces presionada contra las piezas para imprimir la palabra. La impresora con la que cuentas permite realizar cualquiera de las siguientes operaciones: * Agregar una letra al final de la palabra colocada en la impresora. * Quitar la u\u0301ltima letra del final de la palabra que esta\u0301 actualmente en la impresora. Solo es posible realizar esta operacio\u0301n si existe al menos una pieza meta\u0301lica colocada en la impresora. * Imprimir la palabra que se encuentre actualmente en la impresora. Inicialmente la impresora esta\u0301 vacia; no contiene ninguna pieza de metal. Al final de la impresio\u0301n, es posible dejar algunas letras en la impresora. Adema\u0301s, puedes imprimir las palabras en el orden que tu quieras. Como cada operacio\u0301n cuesta tiempo, quieres minimizar el nu\u0301mero total de operaciones que realizas. Dadas las N palabras que deseas imprimir, encuentra el mi\u0301nimo nu\u0301mero de operaciones necesarias para imprimir todas las palabras en cualquier orden e imprime cualquier secuencia mi\u0301nima para lograrlo.",
    "input": "Tu programa debe leer de entrada esta\u0301ndar la siguiente informacio\u0301n: * La primer li\u0301nea contiene un entero N, el nu\u0301mero de palabras que quieres imprimir. * Cada una de las siguientes N li\u0301neas contiene una palabra. Cada palabra consiste en u\u0301nicamente letras minu\u0301sculas de la a a la z y tiene una longitud entre 1 y 20 caracteres. Todas las palabras sera\u0301n distintas.",
    "output": "Tu programa debe escribir en salida esta\u0301ndar la siguiente informacio\u0301n: * La primer li\u0301nea debe contener un entero M, el mi\u0301nimo nu\u0301mero de operaciones requeridas. * Cada una de las siguientes M debe contener un caracter. Los caracteres describen la secuencia de operaciones realizadas. Cada operacio\u0301n se describe a continuacio\u0301n: * Agregar una letra esta\u0301 representado por el caracter de la misma letra agregada. * Imprimir la palabra actual esta\u0301 representado por el caracter ` ' P' ` ( mayu\u0301scula) . * Quitar la u\u0301ltima letra esta\u0301 representado por el caracter ` ' - ' ` ( menos) . | | input3printthepoem| | output20theP\u2014poemP\u2014rintP| | end# Li\u0301mites# Subtarea 1 [ 40 puntos] 1 \u2264 N \u2264 18# Subtarea 2 [ 60 puntos] 1 \u2264 N \u2264 25, 000",
    "note": "",
    "topics": [
      "strings",
      "string suffix structures",
      "greedy",
      "data structures"
    ],
    "id": 2121
  },
  {
    "title": "Carrera de Larga Distancia",
    "url": "https://omegaup.com/arena/problem/Carrera-de-Larga-Distancia",
    "history": "Bessie esta\u0301 entrenando para su pro\u0301xima carrera corriendo en un camino que incluye colinas de tal manera que ella estara\u0301 preparada para cualquier terreno. Ella ha planeado un camino recto y quiere correr tan lejos como ella puede, pero ella debe estar de regreso en la granja dentro de < b> M< / b> segundos. Todo el camino que ella ha elegido tiene T unidades de longitud y consiste de porciones de la misma longitud de subida, plano o bajada. En los datos de entrada describe un segmento de camino i con un solo cara\u0301cter S_ i que es U, F, o D, indicando respectivamente subida, plano o bajada. Bessie gasta U segundos para correr una unidad de camino en subida, F segundos para correr una unidad de camino plano, y D segundos para una unidad de camino en bajada. Note que, cuando regresa a casa, los caminos en subida se vuelven en bajada y los caminos en bajada se vuelven en subida. Encuentre la distancia ma\u0301s lejana a la cual Bessie puede llegar desde la granja y todavi\u0301a regresar a tiempo.",
    "input": "* Li\u0301nea 1: Cinco enteros separados por espacios: M, T, U, F, y D* Li\u0301neas 2. . T+ 1: La li\u0301nea i+ 1 describe un segmento de camino con una sola letra por renglo\u0301n.",
    "output": "* Li\u0301nea 1: Un solo entero que es la distancia ma\u0301s lejana ( nu\u0301mero de unidades) que Bessie puede hacer desde la granja y regresar a tiempo.",
    "note": "",
    "topics": [
      "strings",
      "implementation",
      "math"
    ],
    "id": 2085
  },
  {
    "title": "Sopa de letras",
    "url": "https://omegaup.com/arena/problem/sopaletras",
    "history": "\u00bfAlguna vez has jugado sopa de letras? Esta pra\u0301ctica es tu oportunidad para que un programa te ayude en dicha labor. Dada una sopa de letras como una matriz A de taman\u0303o n \u00d7 m, escriba un programa que determine si un conjunto de palabras se encuentran en dicha sopa de forma horizontal ( ya sea de izquierda a derecha o viceversa) o vertical ( ya sea de arriba a abajo o viceversa) .",
    "input": "Dos enteros n, m seguidos de n li\u0301neas con m caracteres cada una. Puede suponer que 1 \u2264 n, m \u2264 100 y que los caracteres so\u0301lo sera\u0301n letras minu\u0301sculas del alfabeto ingle\u0301s. Seguido de un entero q, con 1 \u2264 q \u2264 1, 000 que denota el nu\u0301mero de palabras s_ i que debera\u0301 buscar en la sopa de letras. Puede suponer que 1 \u2264 | s_ i| \u2264 100 y que consistira\u0301 de so\u0301lo letras minu\u0301sculas.",
    "output": "La salida sera\u0301n q li\u0301neas con la palabra \" si\" o \" no\" ( con minu\u0301sculas) dependiendo si la palabra se encuentra o no en la sopa de letras.",
    "note": "",
    "topics": [
      "strings",
      "math",
      "matrices"
    ],
    "id": 2069
  },
  {
    "title": "Counting Substhreengs",
    "url": "https://omegaup.com/arena/problem/Counting-Substhreengs",
    "history": "Substrings are strings formed by choosing a subset of contiguous charactersfrom a string. This is well known. A little more obscure is the definition ofsubsthreengs. A substhreeng is a substring which complies to the followingadditional requirements: 1. It is non- empty, and composed entirely of base 10 digits. 2. Interpreted in base 10 ( allowing extra leading zeros) , the resulting integer is a multiple of 3. For instance, the string ` 130a303` contains 9 substhreengs: the substhreeng ` 3` three times, the substhreengs ` 30` and ` 0` twice each, and the substhreengs` 303` and ` 03` once each. The substring ` 30a3` is not a substhreeng because itis not composed entirely of base 10 digits, while the substring ` 13` is not asubsthreeng because 13 is not a multiple of 3. Notice that two substhreengs are considered different if they are different inlength or start at a different position, even if the selected characters arethe same. Given a string, you are asked to count the number of substhreengs it contains.",
    "input": "The input consists of a single line that contains a non- empty string S of atmost 10^ 6 Each character of S is either a digit or a lowercase letter.",
    "output": "Output a line with an integer representing the number of substhreengs containedin S. # Examples| | input130a303| | output9| | input0000000000| | output55| | inputicpc2014regional| | output2| | end",
    "note": "",
    "topics": [
      "math",
      "number theory",
      "dp",
      "strings"
    ],
    "id": 2060
  },
  {
    "title": "IOI 1996 - Prefijo m\u00e1s Largo",
    "url": "https://omegaup.com/arena/problem/Prefijo-Largo",
    "history": "< center> ! [ Logo IOI 1996] ( logo96. jpg) < / center> \u2014\u2014\u2014\u2014\u2014\u2013# Prefijo ma\u0301s LargoLa estructura de algunos objetos biolo\u0301gicos esta\u0301 representada por una sequencia de mole\u0301culas constituyentes. Estas mole\u0301culas constituyentes esta\u0301n denotadas por letras mayu\u0301sculas de la A a la Z. Los bio\u0301logos esta\u0301n interesados en descomponer una larga secuencia en otras ma\u0301s pequen\u0303as. Estas pequen\u0303as secuencias son conocidas como mole\u0301culas primitivas. Decimos que una secuencia S puede ser compuesta desde un determinado conjunto de mole\u0301culas primitivas P si existen n primitivas p_ 1, p_ 2, . . . p_ n en P tales que su concatenacio\u0301n ( en el o\u0301rden denotado) es igual a S. Una misma primitiva puede ocurrir ma\u0301s de una vez en la concatenacio\u0301n y no es necesario que todas las primitivas aparezcan en la secuencia. Por ejemplo, el objeto biolo\u0301gico con secuencia ABABACABAAB puede ser compuesto a partir del conjunto de mole\u0301culas primitivas P = A, AB, BA, CA, BBC. Despue\u0301s de muchos an\u0303os, los bio\u0301logos no han logrado descomponer la secuencia Q y quieren saber \u00bfcua\u0301l es la longitud del prefijo ma\u0301s grande de Q tal que es posible componerlo con primitivas del conjunto P?",
    "input": "La primer li\u0301nea de entrada contiene un entero n ( 1 \u2264 n \u2264 10, 000) , la cantidad de primitivas en P. Cada una de las siguientes n li\u0301neas contendra\u0301 una cadena p_ i, representando la i- e\u0301sima primitiva del conjunto P. La longitud de cada primitiva sera\u0301 de al menos un caracter y de ma\u0301ximo 50 caracteres. Finalmente habra\u0301 una sola li\u0301nea con la cadena Q, la secuencia que los bio\u0301logos esta\u0301n analizando. La longitud de la secuencia sera\u0301 mayor a 1 y de a lo ma\u0301s 500, 000 caracteres.",
    "output": "Un entero representando la longitud del prefijo ma\u0301s largo de Q compuesto u\u0301nicamente por primitivas de P. | | input5AABBBCCABAABABACABAABCB| | output11| | end",
    "note": "",
    "topics": [
      "data structures",
      "binary search",
      "implementation",
      "dp",
      "strings",
      "string suffix structures"
    ],
    "id": 2044
  },
  {
    "title": "Las ciudades vecinas a Uruk",
    "url": "https://omegaup.com/arena/problem/uruk",
    "history": "En uno de sus mu\u0301ltiples suen\u0303os, Gilgamesh vio concebida a Uruk como una ciudad pro\u0301spera. Para ello Uruk debe poder realizar comercio con las N- 1 ciudades de los alrededores. Gilgamesh ha decidido realizar la construccio\u0301n de varios caminos que comuniquen a todas las ciudades entre si\u0301. La construccio\u0301n de un camino entre cada pareja de ciudades es muy costoso por lo que Gilgamesh decide que basta con que exista una forma u\u0301nica de llegar de una ciudad a otra pero que siempre sea posible llegar desde una ciudad a cualquier otra. Los matema\u0301ticos de Uruk han disen\u0303ado un mapa con M posibles caminos entre algunas parejas de las N ciudades. La construccio\u0301n de cada camino tiene un costo m_ i. Ayude a Gilgamesh a determinar la suma de costos de los N- 1 caminos elegidos de manera que dicha suma sea mi\u0301nima.",
    "input": "Dos enteros N, M que representan el nu\u0301mero de ciudades que deben quedar comunicadas y los M caminos que comunican algunas de las ciudades. Seguido de M li\u0301neas con una pareja de nombres de ciudades s, t y el costo m_ i entre ellas. Puede suponer que 2 \u2264 N \u2264 100, N- 1 \u2264 M \u2264 ( N* ( N- 1) / 2) y 1 \u2264 m_ i \u2264 1, 000. El nombre de cada ciudad no sera\u0301 ma\u0301s largo que 10 letras minu\u0301sculas del alfabeto ingle\u0301s. Puede suponer que cada pareja de ciudades sera\u0301 dado de forma u\u0301nica.",
    "output": "La salida sera\u0301 la suma de costos de los N- 1 caminos que unen a las N ciudades. Puede suponer que siempre existe al menos una forma de conectar a las N ciudades.",
    "note": "",
    "topics": [
      "strings",
      "graphs",
      "trees"
    ],
    "id": 1976
  },
  {
    "title": "Glass Beads",
    "url": "https://omegaup.com/arena/problem/Glass-Beads",
    "history": "# DescriptionOnce upon a time there was a famous actress. As you may expect, she played mostly Antique Comedies most of all. All the people loved her. But she was not interested in the crowds. Her big hobby were beads of any kind. Many bead makers were working for her and they manufactured new necklaces and bracelets every day. One day she called her main Inspector of Bead Makers ( IBM) and told him she wanted a very long and special necklace. The necklace should be made of glass beads of different sizes connected to each other but without any thread running through the beads, so that means the beads can be disconnected at any point. The actress chose the succession of beads she wants to have and the IBM promised to make the necklace. But then he realized a problem. The joint between two neighbouring beads is not very robust so it is possible that the necklace will get torn by its own weight. The situation becomes even worse when the necklace is disjoined. Moreover, the point of disconnection is very important. If there are small beads at the beginning, the possibility of tearing is much higher than if there were large beads. IBM wants to test the robustness of a necklace so he needs a program that will be able to determine the worst possible point of disjoining the beads. The description of the necklace is a string A = a_ 1a_ 2 . . . a_ m specifying sizes of the particular beads, where the last character am is considered to precede character a1 in circular fashion. The disjoint point i is said to be worse than the disjoint point j if and only if the string a_ ia_ i+ 1. . . a_ na_ 1 . . . a_ i- 1 is lexicografically smaller than the string a_ ja_ j+ 1. . . a_ na_ 1 . . . a_ j- 1. String a_ 1a_ 2 . . . a_ n is lexicografically smaller than the string b_ 1b_ 2 . . . b_ n if and only if there exists an integer i, i \u2264 n, so that aj= bj, for each j, 1 \u2264 j < i and ai < bi.",
    "input": "The input consists of N cases. The first line of the input contains only positive integer N. Then follow the cases. Each case consists of exactly one line containing necklace description. Maximal length of each description is 10000 characters. Each bead is represented by a lower- case character of the english alphabet ( a- z) , where a < b . . . < z.",
    "output": "For each case, print exactly one line containing only one integer - number of the bead which is the first at the worst possible disjoining, i. e. such i, that the string A[ i] is lexicographically smallest among all the n possible disjoinings of a necklace. If there are more than one solution, print the one with the lowest i.",
    "note": "",
    "topics": [
      "strings",
      "hashing"
    ],
    "id": 1969
  },
  {
    "title": "pb Password",
    "url": "https://omegaup.com/arena/problem/pb-Password",
    "history": "Para que un password sea seguro debe seguir las siguientes reglas: * Tener al menos una vocal. * No tener dos o ma\u0301s caracteres consecutivos iguales. * Tener una longitud de al menos 12 caracteres. * Tener al menos un cara\u0301cter nume\u0301rico. # ProblemaEscribe un que nos ayude a determinar si un password es seguro o no.",
    "input": "En la primera li\u0301nea un nu\u0301mero n indicando la cantidad de caracteres queconforman el password, donde 1 \u2264 n \u2264 100, en la siguiente li\u0301nea ncaracteres que pueden ser letras de la ` A` a la ` Z` , nu\u0301meros del 1 al 9. lasletras minu\u0301sculas y mayu\u0301sculas se consideran diferentes.",
    "output": "Si el password es seguro de acuerdo a las reglas establecidas debes escribir lapalabra ` SEGURO` en caso contrario debes escribir la frase ` INSEGURO` . # ConsideracionesTu programa se evaluara\u0301 con varios casos de prueba. # Ejemplos| | input5abcdd| | outputINSEGURO| | input12aft156YTU512| | outputSEGURO| | end",
    "note": "",
    "topics": [
      "implementation",
      "strings"
    ],
    "id": 1965
  },
  {
    "title": "Cadenas indecisas",
    "url": "https://omegaup.com/arena/problem/Cadenas-Indecisas",
    "history": "Actualmente, el teclado es el dispositivo ma\u0301s usado para la entrada de datos hacia la computadora. Para el manejo del teclado, el sistema almacena las teclas que esta\u0301n siendo presionadas y, una por una, las va imprimiendo. El sistema maneja automa\u0301ticamente este proceso. Tu tarea sera\u0301 simular el funcionamiento del teclado. Recibira\u0301s una secuencia combinada de letras del alfabeto ingle\u0301s y ' * ' , en la cual \u2018* \u2019 significa que el usuario ha presionado \" Bloq Mayu\u0301s\" . Inicialmente, \" Bloq Mayu\u0301s\" esta\u0301 desactivado.",
    "input": "Una sola li\u0301nea con las teclas presionadas. So\u0301lo consistira\u0301 de letras minu\u0301sculas del alfabeto ingle\u0301s y asteriscos.",
    "output": "El texto ya procesado.",
    "note": "",
    "topics": [
      "strings"
    ],
    "id": 1916
  },
  {
    "title": "Abundancia de palabras",
    "url": "https://omegaup.com/arena/problem/Abundancia-de-Palabras",
    "history": "Recibira\u0301s un string que contiene varias veces \u201cCodingRush2014\u201d y varios espacios. Debes decir cua\u0301ntas veces aparece \u201cCodingRush2014\u201d.",
    "input": "Un string en una li\u0301nea.",
    "output": "Cua\u0301ntas veces aparece \" CodingRush2014\" en el string. # Ejemplos| | inputCodingRush2014 CodingRush2014 CodingRush2014 CodingRush2014| | output4| | end# Li\u0301mitesEl string no tiene ma\u0301s de 10, 000 caracteres.",
    "note": "",
    "topics": [
      "implementation",
      "strings",
      "math"
    ],
    "id": 1914
  },
  {
    "title": "La destrucci\u00f3n de los gigantes de piedra",
    "url": "https://omegaup.com/arena/problem/gigantes",
    "history": "Durante su bu\u0301squeda del secreto de la vida eterna, Gilgamesh se encuentra con Siduri, la ninfa que vive en medio del mar. Gilgamesh le pregunta co\u0301mo llegar con Utanapi\u0301shtim y ella le responde que la u\u0301nica manera es ir con el barquero Urshanabi\u0301 y sus gigantes de piedra. Sin oi\u0301r ma\u0301s, Gilgamesh se dirige a donde esta\u0301 Urshanabi\u0301 y, al encontrarse con los gigantes de piedra, piensa que sera\u0301n un obsta\u0301culo en su camino y decide destruirlos. Para enfrentarlo, los gigantes se forman en una fila frente a e\u0301l. Como algunos gigantes son ma\u0301s altos que otros, Gilgamesh decide acabarlos uno por uno, comenzando por el ma\u0301s alto que pueda ver desde su posicio\u0301n. Gilgamesh es muy ha\u0301bil y, para destruir un gigante, simplemente tendra\u0301 que lanzar una flecha sin moverse de su posicio\u0301n. Cada gigante destruido se derrumba, permitiendo ver a aquellos otros gigantes que estaban detra\u0301s de e\u0301l. Dadas las alturas de los gigantes y sus nombres, escribe un programa que determine el orden en que los gigantes sera\u0301n destruidos.",
    "input": "Un entero N, que determina el nu\u0301mero de gigantes que Gilgamesh debe destruir, seguido de N li\u0301neas. Cada li\u0301nea estara\u0301 formada de una pareja h_ i, g_ i, donde h_ i representa la altura del gigante i- e\u0301simo y g_ i es el nombre de dicho gigante. Puede suponer que 1 \u2264 N \u2264 1, 000, 1 \u2264 h_ i, \u2264 100 y que el nombre de cada gigante no es ma\u0301s largo que 10 letras mayu\u0301sculas del alfabeto ingle\u0301s.",
    "output": "Debera\u0301 imprimir N li\u0301neas con los nombres de los gigantes en el orden en que fueron destruidos.",
    "note": "",
    "topics": [
      "strings",
      "sortings"
    ],
    "id": 1876
  },
  {
    "title": "Las monta\u00f1as destruidas por Gilgamesh",
    "url": "https://omegaup.com/arena/problem/montanas",
    "history": "Despue\u0301s de la muerte de Endiku, Gilgamesh va a buscar la vida eterna y en su camino se encuentra varias montan\u0303as, entre ellas los picos de Mashu\u0301. E\u0301l sigue dolido de la muerte de Enkidu y se imagina a si\u0301 mismo destruyendo todas las montan\u0303as. E\u0301l las ve de frente, de manera que las ma\u0301s altas tapan a las de atra\u0301s que son ma\u0301s bajas. Gilgamesh piensa destruir primero a la montan\u0303a ma\u0301s alta que vea, lo que posiblemente vuelva visibles a algunas montan\u0303as de atra\u0301s, y asi\u0301 sucesivamente hasta destruir todo. Dadas las alturas y los nombres de las montan\u0303as, determine el orden en que sera\u0301n destrui\u0301das.",
    "input": "Un entero N, que determina el nu\u0301mero de montan\u0303as que Gilgamesh debe destruir, seguido de N li\u0301neas. Cada li\u0301nea estara\u0301 formada de una pareja h_ i, s_ i, donde h_ i representa la altura de la montan\u0303a i- e\u0301sima y s_ i el nombre de dicha montan\u0303a. La primera li\u0301nea representa a la montan\u0303a que se encuentra ma\u0301s al frente y la u\u0301ltima li\u0301nea a la que se encuentra al final. Puede suponer que 1 \u2264 N \u2264 1, 000, que 1 \u2264 h_ i, \u2264 100 y que el nombre de cada montan\u0303a no es ma\u0301s largo que 10 letras mayu\u0301sculas del alfabeto ingle\u0301s.",
    "output": "Debera\u0301 imprimir N li\u0301neas con los nombres de las montan\u0303as en el orden en que fueron destrui\u0301das.",
    "note": "",
    "topics": [
      "sortings",
      "strings"
    ],
    "id": 1870
  },
  {
    "title": "Los grupos reclutados por Gilgamesh",
    "url": "https://omegaup.com/arena/problem/grupos",
    "history": "En un intento por derrotar al toro celeste de la diosa Ishtar, Gilgamesh comenzo\u0301 a formar grupos de soldados para enviarlos a combatir contra el toro. Mientras los hombres de Uruk son reclutados uno por uno, Gilgamesh decide en que\u0301 momento mandar a un grupo de S soldados a pelear contra el toro. Cada grupo de soldados estara\u0301 conformado por los hombres que tengan ma\u0301s tiempo de haber sido reclutados y que au\u0301n no han sido enviados a pelear. Ayude a Gilgamesh a conformar a los grupos de soldados que ira\u0301n peleando contra el poderoso toro.",
    "input": "La entrada estara\u0301 conformada por un nu\u0301mero arbitrario de li\u0301neas. Cada li\u0301nea correspondera\u0301 a una de dos acciones: reclutar un hombre, que sera\u0301 denotado con la letra ' R' y el nombre del soldado, o mandar a un grupo de S soldados a pelear, que sera\u0301 denotado con la letra ' P' y un entero S. Puede suponer que 1 \u2264 S \u2264 10, 000 y que cada nombre estara\u0301 conformado por a lo mucho 10 letras mayu\u0301sculas.",
    "output": "Por cada accio\u0301n ' P' capturada en la entrada, debera\u0301 escribir una li\u0301nea con el nombre de los S soldados que deben ir a pelear contra el toro en el orden en que fueron reclutados y separados por un espacio, o bien la palabra \" IMPOSIBLE\" en caso de que no queden suficientes soldados.",
    "note": "",
    "topics": [
      "strings",
      "data structures"
    ],
    "id": 1838
  },
  {
    "title": "Rompiendo Cadenas",
    "url": "https://omegaup.com/arena/problem/Rompiendo-Cadenas",
    "history": "Consideremos un juego palabras en el cual debes de transformar una palabra en otra a trave\u0301s de operaciones especiales. Diagmos que tienes la palabra w, partimos esta palabra en dos partes no vaci\u0301as x y y, tal que w = xy. Una operacio\u0301n * partir* consiste en transformar la palabra w = xy en la palabra u = yx. Por ejemplo un operacio\u0301n * partir* puede transformar la palabra \" olimpiada\" en la palabra \" limpiadaol\" . Dadas dos palabras * inicio* y * fin* . Cuenta de cua\u0301ntas formas distintas podemos transformar la palabra * inicio* en la palabra * fin* , si aplicamos exactamente k veces la operacio\u0301n * partir* consecutivamente a la palabra * inicio* . Dos formas son consideradas diferentes si la secuencia de operaciones aplicadas difieren. Dos operaciones de secuencias son diferentes si existe un nu\u0301mero i ( i \u2264 i \u2264 k) tal que en la i- e\u0301sima operacio\u0301n de la primera secuencia la palabra se parte en dos palabras x y y en la segunda secuencia la palabra se parte en a y b y adema\u0301s x = \u0338 a.",
    "input": "La primera li\u0301nea contiene la palabra * inicio* , la segunda li\u0301nea contiene la palabra * fin* . Las palabras consisten de letras latinas minu\u0301sculas. El nu\u0301mero de letras en * inicio* es igual al nu\u0301mero de letras en * fin* y tiene a lo menos 2 y a lo ma\u0301s 1000 letras. La tercera li\u0301nea contiene el entero k ( 0 \u2264 k \u2264 10^ 5) \u2014 el nu\u0301mero requerido de operaciones.",
    "output": "Un so\u0301lo nu\u0301mero \u2014 la respuesta al problema. Como este nu\u0301mero puede ser muy grande imprimelo mo\u0301dulo 1000000007 ( 10^ 9 + 7) .",
    "note": "",
    "topics": [
      "strings",
      "dp"
    ],
    "id": 1815
  },
  {
    "title": "Buscador",
    "url": "https://omegaup.com/arena/problem/Buscador",
    "history": "# Buscador\u00bfAlguna vez te has preguntado co\u0301mo es que Google sabe que\u0301 es lo que realmente esta\u0301s buscando cuando te comes una letra en tu bu\u0301squeda? Una forma muy primitiva de resolver este problema es tener un diccionario con todas las posibles palabras va\u0301lidas que puedas escribir, de modo que cuando escribes una palabra para iniciar una bu\u0301squeda, un programa inicia una comparacio\u0301n entre la cadena que ingresaste y todas las palabras en el diccionario, para al final regresar aquella palabra que se le asemeja ma\u0301s. Una palabra se le asemeja a otra mientras ma\u0301s letras tengan en comu\u0301n en el mismo orden, sin necesidad de que las letras este\u0301n juntas unas a las otras. Por ejemplo, las palabras \" [ compa] dre\" y \" [ compa] \" se asemejan la una a la otra en un factor de 4. Las palabras \" [ e] spo[ so] \" y \" [ eso] \" se asemejan en un factor de 3. Y las palabras \" calc[ eti] ne[ s] \" y \" m[ e] n[ ti] ro[ s] o\" tienen un factor comu\u0301n de 4. Si hay dos o ma\u0301s palabras con el mismo factor comu\u0301n que la palabra ingresada, la palabra con la menor cantidad de letras entre las empatadas es la ganadora. # ProblemaDado un diccionario con una cantidad * * P* * de palabras, determine cua\u0301l es la palabra del diccionario que ma\u0301s se asemjea a la palabra ingresada como criterio de bu\u0301squeda",
    "input": "En la primera li\u0301nea una so\u0301la palabra sin espacios y en minu\u0301suclas, representando el criterio de bu\u0301squeda. En la segunda li\u0301nea, el nu\u0301mero * * P* * representando la cantidad de palabras en el diccionario. Las siguientes * * P* * li\u0301neas contienen una palabra del diccionario cada una, todas en minu\u0301sculas y sin espacios.",
    "output": "Una sola palabra, representando la palabra del diccionario a la cual se le parece ma\u0301s la palabra ingresada como criterio de bu\u0301squeda. # Limites3 < = P < = 100Todas las palabras tienen a lo ma\u0301s 100 letras.",
    "note": "",
    "topics": [
      "dp",
      "strings",
      "divide and conquer"
    ],
    "id": 1803
  },
  {
    "title": "Supermercado Dif\u00edcil",
    "url": "https://omegaup.com/arena/problem/SupermercadoDificil",
    "history": "Juan Pe\u0301rez ha ido al supermercado varias veces en el an\u0303o y ha anotado en unalista los precios de los productos que ha comprado durante cada di\u0301a. Sin embargo, mientras anotaba los precios de los productos tambie\u0301n haci\u0301a anotacionesarbitrarias en su lista, como nombres de personas, canciones, o bien poni\u0301acualquier cosa que se le ocurriera. Ayude a Juan Pe\u0301rez a determinar el gasto quetuvo durante cada visita al supermercado ignorando las cosas que no son precios.",
    "input": "La entrada consiste de un nu\u0301mero arbitrario de li\u0301neas de entrada. Cada li\u0301nea contienelos precios de los productos que Juan Perez compro\u0301 durante una visita al supermercado, separados por letras, espacios, tabulaciones y los signos de puntuacio\u0301n' , ' , ' . ' , ' ; ' , ' : ' , ' - ' , ' @ ' , ' ) ' , ' ( ' .",
    "output": "La suma de los precios de cada li\u0301nea de la entrada. Puede suponer que la suma de la listade los precios cabe en un entero de 32 bits con signo.",
    "note": "",
    "topics": [
      "implementation",
      "strings"
    ],
    "id": 1795
  },
  {
    "title": "La muralla interminable de Humbaba",
    "url": "https://omegaup.com/arena/problem/muralla_humbaba",
    "history": "Gilgamesh y Enkidu han decidido ir en busca de una nueva aventura por lo que se proponen enfrentar a Humbaba, cuidador del bosque de los cedros. Sin embargo, para poder llegar a donde se esconde Humbaba deben encontrar la entrada a la muralla que rodea dicho bosque. Antes de encontrar la entrada a la muralla, Gilgamesh y Enkidu deben determinar la cantidad de muros que la forman. Para ello, se han dado cuenta de que cada muro de la muralla se encuentra pintado de color blanco o negro. Con esta informacio\u0301n, nuestros he\u0301roes rodearon la muralla. Despue\u0301s de un rato, saben que han dado al menos una vuelta completa y que tienen el registro de los colores de cada muro que se vieron en su recorrido, pero no saben si terminaron en el mismo lugar donde iniciaron. Escribe un programa que determine la cantidad mi\u0301nima de muros que puede tener la muralla.",
    "input": "Una cadena M. El caracter M_ i es N si el color del muro visto es negro o B si es blanco. Puedes suponer que M tiene entre 1 y 100000 caracteres.",
    "output": "Un entero que es la cantidad mi\u0301nima de muros que puede tener la muralla",
    "note": "",
    "topics": [
      "strings"
    ],
    "id": 1749
  },
  {
    "title": "Descifrando Jerogl\u00edficos",
    "url": "https://omegaup.com/arena/problem/jeroglificos",
    "history": "La situacio\u0301n econo\u0301mica mundial se encuentra en crisis, lo que te ha llevado abuscar nuevas formas de obtener ingresos econo\u0301micos. En vista del e\u0301xitoobtenido por personajes como Alan Quartermain, Indiana Jones, Lara Croft yalgunos otros, has decidido que la mejor forma de asegurar tu futuro es labu\u0301squeda de tesoros de culturas antiguas. Investigando sobre las viejascivilizaciones encontraste informacio\u0301n sobre los OMIncas, esta cultura aparecemencionada en algunos co\u0301dices como un pueblo de grandes riquezas y sin embargosu civilizacio\u0301n pra\u0301cticamente no ha sido explorada, lo que la hace el objetivoperfecto de tus planes. El primer paso para buscar un tesoro es conocer la ubicacio\u0301n geogra\u0301fica endonde se encuentra, durante tus pesquizas encontraste un mapa que indica lalocalizacio\u0301n de la tumba de su ma\u0301s grande patriarca, desgraciadamente lasinstrucciones se encuentran escritas en jerogli\u0301ficos, por lo que primerotendra\u0301s que descifrarlas. El mapa indica un punto de partida y a partir de este da instrucciones sobrecomo llegar a la entrada de la tumba. Despue\u0301s de estudiar ampliamente el mapahas descubierto que hay 14 jerogli\u0301ficos diferentes, 10 de ellos simbolizan losdiez di\u0301gitos de la numeracio\u0301n decimal ( 0, 1, 2, 3, 4, 5, 6, 7, 8, 9) , otro mas significagirar a la derecha 90 grados, hay otro que indica girar a la izquierda 90grados, uno mas simboliza avanzar y el u\u0301ltimo significa fin del mensaje. Lasinstrucciones del mapa son del estilo de \" avanza 20 pasos, gira a la derecha, avanza 10 pasos . . . \" , una caracteri\u0301stica importante es que despue\u0301s de unsi\u0301mbolo de avanzar siempre siguen dos jerogli\u0301ficos de nu\u0301mero que indican unacantidad de dos cifras que equivale al nu\u0301mero de pasos que hay que avanzar ( porejemplo, si hay que avanzar 5 pasos seguiri\u0301an las cifras \" 05\" , si hubiera queavanzar 15 seguiri\u0301an las cifras \" 15\" ) . Los jerogli\u0301ficos de nu\u0301mero ira\u0301nu\u0301nicamente despue\u0301s del si\u0301mbolo de avanza. Para encontrar las coordenadas deentrada a la tumba debes posicionarte en el punto de partida y seguir lasinstrucciones. El jerogli\u0301fico \" fin del mensaje\" solamente aparece una vez en el mapa al finalde las instrucciones, siempre para indicar que se ha llegado al final de ellas. # ProblemaDebes escribir un programa que conociendo los si\u0301mbolos de los 14 jerogli\u0301ficosdiferentes, y el mensaje del mapa, siga las instrucciones y determine el puntoexacto de la entrada de la tumba. Los jerogli\u0301ficos esta\u0301n representados siempre en una cuadri\u0301cula de 5 x 5caracteres. Por ejemplo, los siguientes seri\u0301an jerogli\u0301ficos va\u0301lidos. . . . . \u0307. . . . . 000. . 11. . . ffff. \u2014> . / | 0\u0307. . . 0 1. 1. . . f. . . . | . / . . . | . . 0. . . 0 . . 1. . . fff. . | . . . . . | . . 0. . . 0 . . 1. . . f. . . . | . . . . . | . . . 000. 11111 . f. . . El mapa contiene un mensaje con instrucciones para llegar a la entrada de la tumba, este mensaje puede contener desde 2 hasta 40 si\u0301mbolos, seguidos uno del otro, todos en una sola li\u0301nea de si\u0301mbolos o 5 li\u0301neas de texto. Por ejemplo, suponiendo que las instrucciones fueran: \" avanza 10 pasos, gira a la derecha, avanza 1 paso, fin del mensaje\" , utilizando los si\u0301mbolos de arriba, el mensaje del mapa se veri\u0301a asi\u0301. . . . . . . 11. . . 000. . . . . \u0307. . . . . 000. . 11. . . ffff. / | 1\u0307. 1. . 0. . . 0. \u2014> . / | 0\u0307. . . 01. 1. . . f. . . . . | . . . . 1. . 0. . . 0. | . / . . . | . . 0. . . 0. . 1. . . fff. . . | . . . . 1. . 0. . . 0. | . . . . . | . . 0. . . 0. . 1. . . f. . . . . | . . 11111. 000. . | . . . . . | . . . 000. 11111. f. . . Para este problema se considerara\u0301 que la posicio\u0301n inicial siempre es lacoordenada ( 0, 0) y la direccio\u0301n inicial siempre es el norte, considerando lafigura",
    "input": "Tu programa debera\u0301 leer los siguientes datos: los 14 jerogli\u0301ficos, cada uno en5 li\u0301neas de texto, con 5 caracteres cada una, en el siguiente orden ( 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, Avanza, Gira derecha, Gira Izquierda, Fin del mensaje) , los caracteres de cada li\u0301nea no tienen ningu\u0301n espacio entre ellos. Despue\u0301s delos 14 jerogli\u0301ficos vendra\u0301n 5 li\u0301neas que pueden tener desde 10 hasta 200caracteres cada una conteniendo las instrucciones del mapa.",
    "output": "Tu programa debera\u0301 escribir dos nu\u0301meros, escritos en una sola li\u0301nea y separadospor un espacio, los cuales indiquen la coordenada ( horizontal, vertical) en laque se encuentra la entrada de la tumba. | | input. 000. 0. . . 00. . . 00. . . 0. 000. . 11. . 1. 1. . . . 1. . . . 1. . 11111. 222. 2. . . 2. . 22. 22. . . 22222. 333. 3. . . 3. . 33. 3. . . 3. 333. 4. . 4. 4. . 4. 44444. . . 4. . . . 4. 555555. . . . 5555. . . . . 55555. . 666. 6. . . . 6666. 6. . . 6. 666. 77777. . . . 7. . . 7. . . 7. . . . 7. . . 888. 8. . . 8. 888. 8. . . 8. 888. . 999. 9. . . 9. 9999. . . . 9. 999. . . . . . . / | . \u0307. | . . . . | . . . . | . . . . . . \u0307\u2014> . | . / . . | . . . . | . . . . / . . . < \u2014. . | \u0307. . . . | . . . . | . . FFFF. F. . . . FFF. . F. . . . F. . . . . . . . . 11. . . 000. . . . . \u0307. . . . . 000. . 11. . . FFFF. / | 1\u0307. 1. . 0. . . 0. \u2014> . / | 0\u0307. . . 01. 1. . . F. . . . . | . . . . 1. . 0. . . 0. | . / . . . | . . 0. . . 0. . 1. . . FFF. . . | . . . . 1. . 0. . . 0. | . . . . . | . . 0. . . 0. . 1. . . F. . . . . | . . 11111. 000. . | . . . . . | . . . 000. 11111. F. . . | | output1 10| | end# ConsideracionesNOTA: Los jerogli\u0301ficos de este ejemplo y los cara\u0301cteres que los representan sonso\u0301lo para e\u0301ste caso, los jerogli\u0301ficos de los casos de evaluacio\u0301n utilizara\u0301ncara\u0301cteres ASCII y representaciones diferentes. Por ejemplo: AsfuiDesfeIkkelU93' 30* o92es un jerogli\u0301fico va\u0301lido y puede representar cualquiera de los 14 si\u0301mbolos.",
    "note": "",
    "topics": [
      "implementation",
      "strings"
    ],
    "id": 1732
  },
  {
    "title": "Tu Viaje Est\u00e1 Aqu\u00ed",
    "url": "https://omegaup.com/arena/problem/ride",
    "history": "Es un hecho bien conocido que detra\u0301s de cada buen cometa hay un OVNI. Estos OVNIs vienen frecuentemente a reclutar apoyos de aqui\u0301 en la tierra. Desdichadamente, ellos solamente tienen espacio para recoger a un grupo de seguidores en cada viaje. Ellos, sin embargo, permiten que los grupos sepan de antemano cua\u0301les sera\u0301n recogidos por cada cometa usando un me\u0301todo inteligente: ellos eligen un nombre para el cometa el cual, junto con el nombre del grupo, puede ser usado para determinar si es el turno para un grupo particular para irse ( Quie\u0301n piensas que pone los nombres de los cometas? ) . Los detalles del me\u0301todo de determinacio\u0301n son dados a continuaco\u0301in; tu trabajo es escribir un programa el cual tome el nombre de un grupo y el nombre de un cometa y luego determine si el grupo debera irse con el OVNI detra\u0301s de ese cometa o no. Tanto el nombre del grupo y el nombre del cometa son convertidos en un nu\u0301mero de la siguiente manera: el nmero final es simplemente el producto de todas las letras en el nombre, donde \" A\" es 1 y \" Z\" es 26. Por ejemplo, el grupo \" USACO\" sera 21 * 19 * 1 * 3 * 15 = 17955. Si el nu\u0301mero del grupo mo\u0301dulo 47 es el mismo que el nmero del cometa mo\u0301dulo 47, entonces tu\u0301 necesitas decirle al grupo Alstense ( Recuerda que \" a mod b\" es el residuo despue\u0301s de dividir a entre b; 34 mod 10 es 4. ) # ProblemaEscribe un programa el cual lea el nombre de un cometa y el nombre de un grupo y encuentre si de acuerdo al mtodo antes descrito si el grupo debe ir en el OVNI detrs de ese cometa y ese caso , imprima \" GO\" , y si no \" STAY\" . Los nombres de los grupos y de los cometas sera\u0301n cadenas de letras maysculas sin espacios o caracteres de puntuacio\u0301n, hasta de 72 caracteres de longitud.",
    "input": "En la linea 1 una cadena de caracteres en mayu\u0301scula de longitud 1. . 72 que es el nombre del cometaEn la linea 2 una cadena de caracteres en mayu\u0301scula de longitud 1. . 72 que es el nombre del grupo.",
    "output": "Una sola li\u0301nea conteniendo o la palabra \" GO\" o la palabra \" STAY\" .",
    "note": "",
    "topics": [
      "math",
      "strings",
      "implementation"
    ],
    "id": 1583
  },
  {
    "title": "Potencias de Dos",
    "url": "https://omegaup.com/arena/problem/ptwo",
    "history": "Dado un entero N ( 0 \u2264 N \u2264 265) , imprima exactamente el valor de 2 a la N- e\u0301sima potencia ( sin ceros a la izquierda o espacios, por supuesto) .",
    "input": "En la primera li\u0301nea el entero N",
    "output": "Una sola li\u0301nea que contiene 2 a la N- e\u0301sima potencia. . .",
    "note": "",
    "topics": [
      "math",
      "strings",
      "implementation"
    ],
    "id": 1568
  },
  {
    "title": "N\u00famero de D\u00edgitos",
    "url": "https://omegaup.com/arena/problem/numdig",
    "history": "Se puede obtener una secuencia de digitos escribiendo la representacion decimal de todos los numeros desde 1 hasta N consecutivamente como se muestra a continuacion: 1234567891011121314. . . . N# ProblemaEscribe un programa que compute el numero de digitos de esa secuencia.",
    "input": "Tu programa debera leer del teclado el numero N.",
    "output": "Tu programa debera escribir el numero de digitos de la secuencia. # Ejemplos| | input5| | output5| | end| | input15| | output21| | end| | input120| | output252| | end# ConsideracionesN tendra valores entre 1 y 100, 000, 000.",
    "note": "",
    "topics": [
      "implementation",
      "math",
      "strings"
    ],
    "id": 1541
  },
  {
    "title": "D\u00edgitos",
    "url": "https://omegaup.com/arena/problem/digitos",
    "history": "Se puede obtener una secuencia de digitos escribiendo la representacion decimal de todos los numeros desde 1 hasta N consecutivamente como se muestra a continuacion: 1234567891011121314. . . . N# ProblemaEscribe un programa que dada la construccion de la secuencia anterior, diga cual es la primer posicion en la que aparece la representacion decimal del numero N.",
    "input": "Tu programa debera leer del teclado el numero N.",
    "output": "Tu programa debera escribir a la pantalla la posicion en donde aparece el numero N por primera vez en la secuencia anterior. # Ejemplos| | input15| | output20| | end| | input34| | output3| | end| | input142| | output73| | end# ConsideracionesN tendra valores entre 1 y 100, 000.",
    "note": "",
    "topics": [
      "implementation",
      "constructive algorithms",
      "strings"
    ],
    "id": 1470
  },
  {
    "title": "Abba",
    "url": "https://omegaup.com/arena/problem/abba",
    "history": "Dada una cadena de caracteres * S* , la operacio\u0301n * * reemplaza( * a, b* ) * * cambia cada una de las ocurrencias del caracter * a* por el caracter * b* . Por ejemplo, si * S* = \" abracadabra\" entonces * * * reemplaza( b, c) * * * produce la cadena \" acracadacra\" . Un pali\u0301ndrome es una cadena de caracteres que se lee de la misma forma de izquierda a derecha que de derecha a izquierda. Por ejemplo, \" abba\" y \" dad\" son pali\u0301ndromes. Un pali\u0301ndrome es una cadena de caracteres que se lee de la misma forma de izquierda a derecha que de derecha a izquierda. Por ejemplo, \" abba\" y \" dad\" son pali\u0301ndromes. # ProblemaEscribe un programa que lea una cadena de caracteres * S* y que encuentre el nu\u0301mero mi\u0301nimo * r* de aplicaciones de la operacio\u0301n * * reemplaza* * que transforman a * S* en un pali\u0301ndrome.",
    "input": "Una cadena * S* formada exclusivamente por letras minu\u0301sculas del alfabeto ingle\u0301s.",
    "output": "El valor de * r*",
    "note": "",
    "topics": [
      "string suffix structures",
      "dsu",
      "strings"
    ],
    "id": 1373
  },
  {
    "title": "Los canales del lago",
    "url": "https://omegaup.com/arena/problem/los_canales_del_lago",
    "history": "Como es bien sabido por todos, el lago de Xochimilco es un hermoso lago que an\u0303o con an\u0303o, y desde hace muchi\u0301simo tiempo, atrae una gran cantidad de turistas, con el propo\u0301sito de poder dar un viaje, en el lago, en una de las trajineras. Durante el recorrido, uno puede comprar comida, contratar a los mariachis y disfrutar del paisaje; todo eso sobre las barcazas. El viaje en trajinera consiste en recorrer los canales que han sido construidos sobre del lago, empezando en un lugar y terminando en otro. # ProblemaEl di\u0301a de hoy Karel va a visitar el lago, y tu\u0301, como duen\u0303o de la trajinera \" Morpheus\" , tienes que llevarlo por el recorrido. # Condiciones< ul> < li> Karel inicia al principio del recorrido orientado hacia donde e\u0301ste se dirige< / li> < li> Karel no tiene beepers en la mochila< / li> < li> Los canales del lago son muy angostos, y se representan con un camino de ancho de 1< / li> < li> Puedes saber que llegaste al final del recorrido, porque encontrara\u0301s un beeper< / li> < li> El camino so\u0301lo se cierra al final del recorrido, junto al beeper< / li> < li> Karel debe de terminar en el final del recorrido< / li> < / ul> # Entrada ejemplo! [ Ejemplo de entrada] ( los_ canales_ del_ lago_ entrada. jpg) # Salida ejemplo! [ Ejemplo de salida] ( los_ canales_ del_ lago_ salida. jpg)",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "strings",
      "binary search",
      "implementation"
    ],
    "id": 1175
  },
  {
    "title": "UltraPrimo",
    "url": "https://omegaup.com/arena/problem/UltraPrimo",
    "history": "# UltraPrimoLuis y Alma han decidido crear un divertido juego en el cual Alma elige un nu\u0301mero y Luis debe decir si es un nu\u0301mero UltraPrimo o no. Alma es algo tramposa por lo que Luis te ha encargado escribir un programa que verifique su respuesta y asi\u0301 Alma no pueda mentirle. Se dice que un nu\u0301mero es UltraPrimo si la suma de sus di\u0301gitos es un nu\u0301mero primo.",
    "input": "Un nu\u0301mero entero M que representa la cantidad de nu\u0301meros que Alma le presentara\u0301 a Luis, las siguientes M_ i li\u0301neas contendra\u0301n un nu\u0301mero entero que representa el nu\u0301mero que Alma eligio\u0301 en cada turno.",
    "output": "Para cada caso debera\u0301s imprimir si el nu\u0301mero que eligio\u0301 Alma es UltraPrimo o no. Si el nu\u0301mero es UltraPrimo debera\u0301s imprimir * * \" UltraPrimo\" * * , de lo contrario se imprimira\u0301 * * \" No UltraPrimo\" * * .",
    "note": "",
    "topics": [
      "strings",
      "number theory"
    ],
    "id": 1165
  },
  {
    "title": "Mensaje de Amor",
    "url": "https://omegaup.com/arena/problem/Mensaje-de-Amor",
    "history": "# Mensaje de AmorWallace esta\u0301 perdidamente enamorado de su novia, a la que sus amigos ya apodan \" La Sen\u0303ora Wallace\" . E\u0301l escribe roma\u0301nticos mensajes de amor para su amada, al finalizar cada mensaje agrega un conjunto de corazones para hacer ma\u0301s lindo cada envi\u0301o. Wallace es demasiado flojo, asi\u0301 que decide escribir un programa que lo ayude a colocar una serie de corazones al finalizar cada mensaje, sin embargo e\u0301l no quiere perder tiempo al realizar este trabajo por lo cual ha pedido tu ayuda para completar esta roma\u0301ntica tarea.",
    "input": "565856",
    "output": "< 3< 3< 3< 3< 3< 3< 3< 3< 3< 3< 3< 3< 3< 3< 3< 3< 3< 3< 3< 3< 3< 3< 3< 3< 3< 3< 3< 3< 3< 3# Li\u0301mites* 1< = M< = 100* 1< = N< = 100",
    "note": "",
    "topics": [
      "implementation",
      "strings"
    ],
    "id": 1145
  },
  {
    "title": "Cifrado de Vigen\u00e8re",
    "url": "https://omegaup.com/arena/problem/vigenere",
    "history": "Para cifrar una palabra con el me\u0301todo Cifrado de Vigene\u0300re, se hace una tabla como la que se muestra y se escoge una palabra clave. ! [ Image] ( imagen. jpeg) Con un ejemplo explicaremos la forma de cifrar. Supongamos que el mensaje que queremos cifrar es la palabra AGUASCALIENTES y la palabra clave es OMIAGS. Paso 1: Se hacen corresponder las letras de la palabra que se tiene que cifrar con la letras de la palabra clave, ( en caso de que la palabra clave sea ma\u0301s corta que el mensaje, se repite tantas veces como sea necesario) : AGUASCALIENTESOMIAGSOMIAGSOMPaso 2: Sustituimos cada letra del mensaje con la letra de la tabla que se encuentra en el renglo\u0301n de la letra de la palabra y la columna de la letra del mensaje. Por ejemplo, para sustituir la primera A, buscamos en el renglo\u0301n de la O y la columna de la A, encontrando la O. La G se sustituira\u0301 por la letra que se encuentra en el renglo\u0301n de la M y la columna de G, es decir, la S. La U se sustituira\u0301 por la letra que se encuentra en el renglo\u0301n de la I y la columna de U, la C. Y asi\u0301 sucesivamente, la palabra AGUASCALIENTES se convertiri\u0301a en OSCAYUOXQETLSE. # ProblemaCifrar o descifrar un mensaje dado usando el Cifrado Vigene\u0300re.",
    "input": "La primera li\u0301nea tendra\u0301 un 1 o un 2. La segunda li\u0301nea tendra\u0301 la palabra que tendra\u0301s que cifrar o descifrar. La tercera li\u0301nea tendra\u0301 la palabra clave. La palabras sera\u0301n de longitud a lo ma\u0301s 100 y estara\u0301n formadas solamente por mayu\u0301sculas.",
    "output": "Si en la entrada la primera li\u0301nea era un 1, debes imprimir la palabra cifrada. Si en la entrada la primera li\u0301nea era un 2, debes imprimir la descifrada.",
    "note": "",
    "topics": [
      "strings",
      "math",
      "implementation"
    ],
    "id": 1099
  },
  {
    "title": "5 y 6",
    "url": "https://omegaup.com/arena/problem/5_y_6",
    "history": "Despue\u0301s de que la maestra se dio cuenta que Mary se estaba aburriendo de nuevo, ella le dio otro problema. Escribio\u0301 dos enteros, A y B, en el pizarro\u0301n y le pregunto\u0301 que los sumara. Mary nunca comete errores en sus operaciones, pero algunas veces no copia correctamente los nu\u0301meros. El u\u0301nico error que hace al copiar, es poner un ' 5' por un ' 6' , y viceversa. Se te dara\u0301n dos nu\u0301meros, A y B, calcula la suma mi\u0301nima y ma\u0301xima que Mary podri\u0301a obtener.",
    "input": "La primer y u\u0301nica li\u0301nea de entrada contiene dos enteros positivos A y B ( 1 \u2264 A, B \u2264 1 000 000) .",
    "output": "En una so\u0301la li\u0301nea de la salida, imprimir dos enteros separados por un espacio, la suma mi\u0301nima y ma\u0301xima que Mary podri\u0301a obtener. # Ejemplos| | input11 25| | output36 37| | input1430 4862| | output6282 6292| | input16796 58786| | output74580 85582| | end",
    "note": "",
    "topics": [
      "math",
      "strings"
    ],
    "id": 1059
  },
  {
    "title": "Juego de letras",
    "url": "https://omegaup.com/arena/problem/jdl",
    "history": "En cierto juego de computadora cada letra del alfabeto recibe un valor nume\u0301rico relativo a su posicio\u0301n en el teclado: las letras Q, A y Z reciben el valor 1, las letras W, S y X reciben el valor 2 y asi\u0301 sucesivamente hasta que las letras O y L reciben el valor 9 y la letra P recibe el valor 0. Una palabra formada por estas letras recibe como valor la suma de los valores de las letras que la forman. Por ejemplo, la palabra UAM recibe como valor 7 + 1 + 7 = 15. Escribe un programa que determine el valor v de una palabra p.",
    "input": "Una cadena p formada exclusivamente por letras mayu\u0301sculas de la A a la Z. La cadena p no contendra\u0301 en\u0303es, acentos ni ningu\u0301n otro si\u0301mbolo. La cadena p medira\u0301 entre 1 y 1, 000 letras.",
    "output": "Un nu\u0301mero entero v.",
    "note": "",
    "topics": [
      "divide and conquer",
      "implementation",
      "strings"
    ],
    "id": 1037
  },
  {
    "title": "N\u00fameros en binario al rev\u00e9s",
    "url": "https://omegaup.com/arena/problem/Numeros-en-binario-al-reves",
    "history": "Considere un entero positivo n que se escribe b_ m b_ m- 1. . . b_ 1 b_ 0 en binario, donde m \u2265 0 y b_ m = 1. El complemento de n es el entero que se escribe a_ m a_ m- 1. . . a_ 1 a_ 0 en binario, donde a_ i= 1- b_ i para toda 0 \u2264 i \u2264 m. El reverso de n es el entero que se escribe b_ 0 b_ 1 . . . b_ m- 1 b_ m en binario. Escribe un programa que calcule el complemento p y el reverso q de un entero n. Por ejemplo, si n = 2006 ( 11111010110 en binario) entonces su complemento es p = 41 ( 00000101001 en binario) y su reverso es q = 863 ( 01101011111 en binario) .",
    "input": "Un nu\u0301mero entero n tal que 1 \u2264 n \u2264 4, 000, 000, 000.",
    "output": "Dos nu\u0301meros enteros p, q separados por un espacio.",
    "note": "",
    "topics": [
      "strings",
      "math"
    ],
    "id": 1033
  },
  {
    "title": "Dos bases num\u00e9ricas",
    "url": "https://omegaup.com/arena/problem/dbn",
    "history": "Si un entero n se escribe en base b como a_ m a_ m- 1. . . a_ 1 a_ 0 esto quiere decir que n = a_ m b^ m + a_ m- 1 b^ m- 1 + \u22ef + a_ 1 b^ 1 + a_ 0 b^ 0 y que 0 \u2264 a_ i < b para cada 0 \u2264 i \u2264 m. Por supuesto, al escribir el mismo nu\u0301mero n en bases distintas se obtienen expresiones distintas, por ejemplo, el nu\u0301mero decimal n = 31 se escribe 11111 en base 2 y 1011 en base 3. Escribe un programa al cual se le dan dos expresiones A y B en bases desconocidas p y q que representan al mismo nu\u0301mero n y que encuentre ese valor. Si hay varios nu\u0301meros que se puedan escribir de esas dos formas, debe encontrar al ma\u0301s pequen\u0303o de ellos. Por ejemplo, si se dan las expresiones 11111 y 1011 entonces n = 31, ya que 11111 en base 2 es igual a 1011 en base 3 que es igual a 31 en decimal.",
    "input": "Dos expresiones A y B, cada una con un ma\u0301ximo de 64 di\u0301gitos, separadas por un espacio. La primera expresio\u0301n estara\u0301 en base p y la segunda en base q. Puedes suponer que 2 \u2264 p, q \u2264 10 y que 1 \u2264 n \u2264 4, 000, 000, 000.",
    "output": "Tres nu\u0301meros enteros n, p y q ( en decimal) separados por espacios.",
    "note": "",
    "topics": [
      "strings",
      "implementation"
    ],
    "id": 1028
  },
  {
    "title": "N\u00fameros menores que dos mil",
    "url": "https://omegaup.com/arena/problem/nmd",
    "history": "Imagina que tienes una lista de nu\u0301meros enteros ( sin ceros y todos ellos menores que dos mil) a la cual se le han suprimido las separaciones. Por ejemplo, si se comienza con la lista 12, 34, 5, 678 entonces se obtiene la cadena s = 12345678. Ahora tu\u0301 quieres recuperar una lista de nu\u0301meros enteros ( todos ellos menores que dos mil) agrupando los di\u0301gitos tanto como sea posible desde el principio de la cadena. En nuestro caso, obtendra\u0301s la lista 1234, 567, 8 con p = 3 elementos. Por diversio\u0301n, despue\u0301s realizas la misma operacio\u0301n pero comenzando desde el final de la lista. En nuestro caso, obtendra\u0301s la lista 12, 345, 678 con f = 3 elementos. Escribe un programa que dada la cadena de di\u0301gitos encuentre cua\u0301ntos elementos p y f contienen cada una de las listas.",
    "input": "Una cadena s que contiene entre 1 y 1000 di\u0301gitos. Puedes suponer que no hay di\u0301gitos 0.",
    "output": "Dos nu\u0301meros enteros p y f separados por un espacio.",
    "note": "",
    "topics": [
      "strings",
      "implementation"
    ],
    "id": 1025
  },
  {
    "title": "Escribiendo con un dedo",
    "url": "https://omegaup.com/arena/problem/ecd",
    "history": "Muchos de nosotros escribimos en un teclado de computadora utilizando so\u0301lo un dedo. Imagina que quieres escribir una palabra p en un teclado QWERTY y que te interesa saber la cantidad de columnas que tu dedo se mueve para escribir la palabra ( la primera columna esta\u0301 formada por Q, A, Z, etc. ) . Para ello supondra\u0301s que tu dedo comienza en la primera letra de la palabra. Por ejemplo, si la palabra es CONCURSO entonces tu dedo se movio\u0301 6 columnas a la derecha, luego 3 a la izquierda, luego otras 3 a la izquierda, luego 4 a la derecha, luego 3 a la izquierda, luego otras 2 a la izquierda y finalmente 7 a la derecha. Escribe un programa que calcule las cantidades z y d de columnas que se movio\u0301 tu dedo para la izquierda y para la derecha, respectivamente.",
    "input": "Una cadena p formada exclusivamente por letras mayu\u0301sculas de la A a la Z ( sin en\u0303es ni acentos) . La cadena p contendra\u0301 entre 1 y 1, 000 letras.",
    "output": "Dos nu\u0301meros enteros z y d separados por un espacio.",
    "note": "",
    "topics": [
      "strings",
      "implementation"
    ],
    "id": 1018
  },
  {
    "title": "Recuperaci\u00f3n de amino\u00e1cidos ",
    "url": "https://omegaup.com/arena/problem/rda",
    "history": "En bioinforma\u0301tica, los aminoa\u0301cidos son formados a partir de tripletas de nucleo\u0301tidos a los cuales se les llama codones. Cada tripleta que forma un aminoa\u0301cido para todas las combinaciones posibles, recibe un nombre y a esto es lo que se le conoce como co\u0301digo gene\u0301tico. Dicho co\u0301digo, al ser codificado como cadena puede contener solamente las letras A, C, G y T. En el laboratorio se han mezclado por accidente secuencias de co\u0301digos gene\u0301ticos con otros tipos de co\u0301digos que por el momento no nos interesan. Dichos co\u0301digos esta\u0301n formados por todas las letras del alfabeto menos la A, C, G y T. A pesar de la mezcla, en ocasiones es posible recuperar la secuencia de co\u0301digo gene\u0301tico siempre que se mantenga la propiedad de que sea posible formar tripletas y so\u0301lo este\u0301n involucradas las letras A, C, G y T. Las dema\u0301s letras pueden ser eliminadas. Escribe un programa que, dada una secuencia alterada, encuentre la cantidad t de tripletas formadas correctamente y la cantidad f de letras que falten para formar un correcto co\u0301digo gene\u0301tico.",
    "input": "Una cadena de n letras mayu\u0301sculas, con 1 \u2264 n \u2264 1, 000, 000.",
    "output": "Un nu\u0301mero entero t y un nu\u0301mero entero f.",
    "note": "",
    "topics": [
      "math",
      "strings"
    ],
    "id": 1010
  },
  {
    "title": "Menor base para pal\u00edndromo",
    "url": "https://omegaup.com/arena/problem/mbp",
    "history": "Algunos enteros se pueden leer de la misma forma sin importar si se escriben de izquierda a derecha o de derecha a izquierda ( obviamente sin cambiar de valor) como por ejemplo 33 en base 10 es pali\u0301ndromo, pero tambie\u0301n en base 2, ya que 33 en decimal es igual a 100001 en binario. Dado un nu\u0301mero n en base 10, escribe un programa que proporcione la menor base b tal que 2 \u2264 b \u2264 10, en la que este se puede representar como pali\u0301ndromo, asi\u0301 como su representacio\u0301n r, en caso de no existir dicha base, la salida debe de ser b = - 1 y r = 0.",
    "input": "Un nu\u0301mero entero n en decimal tal que 0 < n < 2, 147, 483, 647.",
    "output": "Un nu\u0301mero entero b y un numero r representado en base b.",
    "note": "",
    "topics": [
      "string suffix structures",
      "strings",
      "implementation"
    ],
    "id": 1009
  },
  {
    "title": "Documentos de marcado equilibrados",
    "url": "https://omegaup.com/arena/problem/dme",
    "history": "Como sabes, muy pocas pa\u0301ginas de internet se ven igual usando exploradores diferentes. Una herramienta muy importante paraprevenir incompatibilidades es la validacio\u0301n de co\u0301digo escrito en lenguajes de marcado y aunque para pa\u0301ginas web esto se puedecomplicar bastante, tu labor sera\u0301 ma\u0301s sencilla. Para nuestros fines, una etiqueta de apertura es un identificador compuesto por caracteres alfanume\u0301ricos y guiones bajos ( aunque porregla el primer cara\u0301cter del identificador no puede ser un nu\u0301mero) y su etiqueta de cierre sera\u0301 el mismo identificador precedido poruna / . Puede haber un nu\u0301mero arbitrario de espacios en blanco entre etiquetas. Las etiquetas tienen una posicio\u0301n numerada de formaconsecutiva a partir del 1. El documento tiene una profundidad inicial de 0, cada vez que se encuentra una etiqueta de apertura la profundidad aumenta en 1 ycada vez que se encuentra una de cierre la profundidad disminuye en 1. Un documento de marcado esta\u0301 mal formado si: 1. Tiene etiquetas inva\u0301lidas ( 123_ gato es inva\u0301lida pues inicia en nu\u0301mero) . 2. Alguna etiqueta de apertura no tiene su cierre o viceversa. 3. El cierre de una etiqueta externa ocurre antes del cierre de una etiqueta interna ( por ejemplo aa bb / bb / aa es correcto pero aabb / aa / bb no lo es) .",
    "input": "Una li\u0301nea de texto de no ma\u0301s de 10, 000 caracteres. Puedes suponer que la longitud de las etiquetas contenidasdentro del texto no superara\u0301 los 100 caracteres cada una.",
    "output": "Una letra mayu\u0301scula seguida de un nu\u0301mero entero. En el caso de que el documento este\u0301 bien formado entonces laletra debe ser V y el nu\u0301mero entero debe ser la profundidad ma\u0301xima. En el caso de que el documento este\u0301 mal formadoentonces la letra debe ser I y el nu\u0301mero entero debera\u0301 ser la posicio\u0301n de la primera etiqueta que provoque un error.",
    "note": "",
    "topics": [
      "strings",
      "data structures"
    ],
    "id": 1003
  },
  {
    "title": "Detectando empalme de materias",
    "url": "https://omegaup.com/arena/problem/dem",
    "history": "Por accidente o por mala costumbre, muchos alumnos inscriben materias en horarios que se empalman. Aunque la escuela no puede evitarlo, a los administrativos del proceso de inscripcio\u0301n si\u0301 les gustari\u0301a detectar estos casos para por lo menos alertar al alumno de este hecho. Ya que los administrativos no son expertos en programacio\u0301n, te han pedido que los ayudes a resolver el problema. Escribe un programa que lea la informacio\u0301n de los grupos a los que se inscribira\u0301 el alumno y detecte que\u0301 grupos tienen horarios que se empalman.",
    "input": "Un entero G seguido de la informacio\u0301n de los G grupos del alumno. La informacio\u0301n de cada grupo consiste en el nombre del mismo seguido de una cadena de cinco caracteres que representa que\u0301 di\u0301as hay clases en ese grupo seguido de las horas de inicio y fin de clase en el formato HH: MM. Puedes suponer 0 \u2264 G \u2264 10000, que el nombre de cada grupo sera\u0301 u\u0301nico de 5 letras mayu\u0301sculas y que las horas de inicio y fin sera\u0301n va\u0301lidas y sin clases de 0 minutos. .",
    "output": "Un entero E que denote el nu\u0301mero de grupos que tienen empalmes seguido de los E nombres de estos grupos en orden alfabe\u0301tico y separados por saltos de li\u0301nea.",
    "note": "",
    "topics": [
      "strings",
      "implementation"
    ],
    "id": 991
  },
  {
    "title": "Prueba del nueve",
    "url": "https://omegaup.com/arena/problem/pdn",
    "history": "El romano Hipo\u0301lito usaba este me\u0301todo para verificar el resultado de la multiplicacio\u0301n A \u00d7 B = C: Si A, B o C tienen ma\u0301s de un di\u0301gito, entonces reemplaza A, B y C por la suma de los di\u0301gitos de A, B y C, respectivamente. Repite este proceso hasta que A, B y C tengan so\u0301lo un di\u0301gito. Ahora se calcula D = A \u00d7 B y repite el proceso con D. Si al final C y D son iguales, se considera que la multiplicacio\u0301n esta\u0301 \u0093bien\u0094. Por ejemplo, si A = 314, B = 159 y C = 46623, entonces A toma el valor 8 en el proceso, B toma los valores 15 y 6, y C toma los valores 21 y 3. Finalmente D = 8 \u00d7 6 = 48 que luego toma los valores 12 y 3. Ya que C = D entonces se consideraba que la multiplicacio\u0301n estaba \u0093bien\u0094 ( aunque en realidad 314 \u00d7 159 = 49926) .",
    "input": "Tres enteros A, B y C. Puedes suponer que cada uno tiene entre 1 y 1000 di\u0301gitos.",
    "output": "Tres enteros: el valor final de C, el valor final de D y el resultado R de la verificacio\u0301n ( 0 = \u0093mal\u0094, 1 = \u0093bien\u0094) .",
    "note": "",
    "topics": [
      "implementation",
      "strings"
    ],
    "id": 990
  },
  {
    "title": "Contando Letras",
    "url": "https://omegaup.com/arena/problem/Contando-Letras",
    "history": "En una imprenta han decidido implementar un nuevo me\u0301todo de cobranza. El duen\u0303o se ha dado cuenta que gastan ma\u0301s en tinta con ciertas letras y ha decidido empezar a cobrar por letra. Como los textos que imprimen son muy largos - libros incluso- te han pedido que les ayudes a crear un programa que cuente letras. Adema\u0301s, dado que los ti\u0301tulos y subti\u0301tulos se cobrara\u0301n distinto, ellos te dira\u0301n en que cara\u0301cter iniciar y en cual terminar de contar.",
    "input": "Dos nu\u0301meros enteros, I ( inicio) y F ( final) y un texto.",
    "output": "Para cada letra en el abecedario, el nu\u0301mero de caracteres que contiene esa porcio\u0301n de texto.",
    "note": "",
    "topics": [
      "implementation",
      "math",
      "strings"
    ],
    "id": 972
  },
  {
    "title": "Buscando rotaciones",
    "url": "https://omegaup.com/arena/problem/Buscando-rotaciones",
    "history": "Un problema cla\u0301sico e interesante en cualquier lenguaje que permita manejo de cadenas de texto es el de encontrar si una palabra es rotacio\u0301n de otra. Una palabra A se considera rotacio\u0301n de una palabra B si la palabra A contiene todos los caracteres de la palabra B - sin ningu\u0301n otro caracter intermedio- pero esta se encuentra girada. Por ejemplo, atog, toga y ogat son rotaciones de la palabra gato, pero oagt, tago o troga no lo son.",
    "input": "Leera\u0301s dos li\u0301neas con una palabra cada una. La primera li\u0301nea contendra\u0301 la palabra A y la segunda la palabra B.",
    "output": "Debera\u0301s imprimir \u201cRotacion\u201d si la palabra A es rotacio\u0301n de la palabra B o \u201cNo rotacion\u201d en caso contrario.",
    "note": "",
    "topics": [
      "strings",
      "implementation"
    ],
    "id": 971
  },
  {
    "title": "Al rev\u00e9s 2.0",
    "url": "https://omegaup.com/arena/problem/Al-reves-20",
    "history": "Hay algunos ejercicios que ayudan a ejercitar la mente. Por ejemplo, contar de dos en dos, contar del 100 al 0 o leer textos al reve\u0301s. se\u0301ver la odneyel oneub yum sere ay u\u0301T( Tu\u0301 ya eres muy bueno leyendo al reve\u0301s) Asi\u0301 que has decidido complicar el ejercicio mental y leer un texto con palabras al derecho y al reve\u0301s. Para ello, despue\u0301s de tu curso en el Coding Rush, has decidido crear un programa que dado un texto te regrese el mismo texto, pero con una parte - delimitada por un inicio y un final - al reve\u0301s.",
    "input": "Dos nu\u0301meros enteros, I ( inicio) y F ( final) y un texto.",
    "output": "El texto, con los elementos delimitados por I y F al reve\u0301s.",
    "note": "",
    "topics": [
      "strings",
      "implementation"
    ],
    "id": 970
  },
  {
    "title": "Al rev\u00e9s",
    "url": "https://omegaup.com/arena/problem/Al-reves",
    "history": "En clase de Principios de Mecatro\u0301nica esta\u0301s haciendo una computadora en equipos, sin embargo, no te pusiste de acuerdo con tus compan\u0303eros y la li\u0301nea que regresa tu co\u0301digo \u2013que es una serie de \u20181\u2019 y \u20180\u2019- \u00a1esta al reve\u0301s! Como no quieres programar todo de nuevo has decidido que es ma\u0301s fa\u0301cil escribir un co\u0301digo que cambie tus \u20181\u2019 por \u20180\u2019 y tus \u20180\u2019 por \u20181\u2019.",
    "input": "Una li\u0301nea que contiene ' 0' s y ' 1' s u\u0301nicamente, separados por un espacio.",
    "output": "La entrada con los \u20180\u2019 y \u20181\u2019 invertidos, separados por un espacio.",
    "note": "",
    "topics": [
      "implementation",
      "strings",
      "math"
    ],
    "id": 932
  },
  {
    "title": "Ola Ivan",
    "url": "https://omegaup.com/arena/problem/Ola-ivan",
    "history": "Ves a Ivan conectado en el Facebook y quieres saludarlo pero para poder ademas presumirle que tu ya sabes C/ C+ + realizas un programa que lo salude cada ves que lo veas conectado.",
    "input": "Una unica y simple entrada en la que dira ' conectado' o ' desconectado' .",
    "output": "Imprimir ` Ola Ivan` si esta conectado e imprimir ` Ol. . ` si no.",
    "note": "",
    "topics": [
      "implementation",
      "strings"
    ],
    "id": 914
  },
  {
    "title": "Ej2.- Orden inverso",
    "url": "https://omegaup.com/arena/problem/Ej2--Orden-inverso",
    "history": "Elabora un programa que lea una secuencia de N palabras y las imprima en orden inverso.",
    "input": "N . - Numero de palabrasN palabras en N lineas diferentes",
    "output": "N lineas con las palabras en el orden inverso al que se leyeron",
    "note": "",
    "topics": [
      "implementation",
      "strings"
    ],
    "id": 814
  },
  {
    "title": "1 Escribir al reves",
    "url": "https://omegaup.com/arena/problem/1-Escribir-al-reves",
    "history": "Pediras una cadena de caracteres, y la desplegaras al reve\u0301s",
    "input": "cadena",
    "output": "cadena desplegada al reve\u0301s",
    "note": "",
    "topics": [
      "strings"
    ],
    "id": 776
  },
  {
    "title": "Animales",
    "url": "https://omegaup.com/arena/problem/animales",
    "history": "En este problema, tu tarea es leer tres palabras en portugue\u0301s. Estas palabras definira\u0301n un animal de acuerdo a la tabla de abajo, de izquierda a derecha. Despue\u0301s, imprimira\u0301s el animal escogido que corresponda a estas tres palabras. ! [ Imagen] ( animales. png)",
    "input": "3 palabras, una en cada li\u0301nea, que sera\u0301n usadas para identificar al animal, de acuerdo a la tabla de arriba. Todas las letra minu\u0301sculas.",
    "output": "El nombre del animal de acuerdo a la entrada dada.",
    "note": "",
    "topics": [
      "strings",
      "implementation"
    ],
    "id": 736
  },
  {
    "title": "\u00c1rbol de navidad",
    "url": "https://omegaup.com/arena/problem/arbol_de_navidad",
    "history": "Dibuja, con asteriscos * y si\u0301mbolos de gato # un a\u0301rbol de Navidad como el de los ejemplos. Noescribas ma\u0301s espacios de los estrictamente necesarios.",
    "input": "Un nu\u0301mero N entre 3 y 25, indicando la altura del a\u0301rbol.",
    "output": "Escribe N+ 2 li\u0301neas con el a\u0301rbol resultante. # Ejemplo 1| | input3| | end! [ 3] ( arbol_ 3. jpg) # Ejemplo 2| | input5| | end! [ 5] ( arbol_ 5. jpg) # Ejemplo 3| | input6| | end! [ 6] ( arbol_ 6. jpg)",
    "note": "",
    "topics": [
      "implementation",
      "strings"
    ],
    "id": 657
  },
  {
    "title": "ABC",
    "url": "https://omegaup.com/arena/problem/abc",
    "history": "Se te dan tres enteros A, B y C. Los nu\u0301meros no se te dan necesariamente en ese orden, perosi\u0301 sabemos que A es menor que B y B es menor que C. Simplemente, te pedimos que escribas los tres nu\u0301meros en el orden que se te indique.",
    "input": "La primera li\u0301nea contiene tres enteros menores que 100 ( los valores de A, B y C, en un ordencualesquiera) . La segunda li\u0301nea contiene tres letras mayu\u0301sculas ( \u0092A\u0092, \u0092B\u0092 y \u0092C\u0092) representandoel orden deseado.",
    "output": "Escribe una li\u0301nea con los tres nu\u0301meros, en el orden indicado, separados por espacios. # Ejemplos| | input1 5 3ABC| | output1 3 5| | input6 4 2CAB| | output6 2 4| | end",
    "note": "",
    "topics": [
      "sortings",
      "implementation",
      "strings"
    ],
    "id": 642
  },
  {
    "title": "Cifrado Af\u00edn",
    "url": "https://omegaup.com/arena/problem/Cifrado-Afin",
    "history": "El cifrado afi\u0301n es un tipo de cifrado por sustitucio\u0301n en el que a cada si\u0301mbolo del alfabeto se le da un valor, este valor se sustituye en una expresio\u0301n del tipo < strong> < i> ( ax+ b) mod m< / i> < / strong> , y a lo que resulte se le asigna el si\u0301mbolo correspondiente. Para garantizar que a letras distintas le correspondan una letra distinta en el cifrado, se pide que < strong> < i> a< / i> < / strong> sea primo relativo a < strong> < i> m< / i> < / strong> . Para este problema usaremos < strong> < i> m< / i> < / strong> = 26 y los valores para cada letra sera\u0301n los que se muestran en la siguiente tabla: < TABLE CLASS= \" data\" > < tbody> < TR > < td> < STRONG> A< / STRONG> < / TD> < td> < STRONG> B< / TD> < td> < STRONG> C< STRONG> < / TD> < td> < STRONG> D< STRONG> < / TD> < td> < STRONG> E< STRONG> < / TD> < td> < STRONG> F< STRONG> < / TD> < td> < STRONG> G< STRONG> < / TD> < td> < STRONG> H< STRONG> < / TD> < td> < STRONG> I< STRONG> < / TD> < td> < STRONG> J< STRONG> < / TD> < td> < STRONG> K< / TD> < td> < STRONG> L< / TD> < td> < STRONG> M< / TD> < td> < STRONG> N< / TD> < td> < STRONG> O< / TD> < td> < STRONG> P< / TD> < td> < STRONG> Q< / TD> < td> < STRONG> R< / TD> < td> < STRONG> S< / TD> < td> < STRONG> T< / TD> < td> < STRONG> U< / TD> < td> < STRONG> V< / TD> < td> < STRONG> W< / TD> < td> < STRONG> X< / TD> < td> < STRONG> Y< / TD> < td> < STRONG> Z< / STRONG> < / TD> < / STRONG> < / TR> < TR> < td> 0< / TD> < td> 1< / TD> < td> 2< / TD> < td> 3< / TD> < td> 4< / TD> < td> 5< / TD> < td> 6< / TD> < td> 7< / TD> < td> 8< / TD> < td> 9< / TD> < td> 10< / TD> < td> 11< / TD> < td> 12< / TD> < td> 13< / TD> < td> 14< / TD> < td> 15< / TD> < td> 16< / TD> < td> 17< / TD> < td> 18< / TD> < td> 19< / TD> < td> 20< / TD> < td> 21< / TD> < td> 22< / TD> < td> 23< / TD> < td> 24< / TD> < td> 25< / TD> < / TR> < / tbody> < / TABLE> < br> Veamos un ejemplo. Supongamos que queremos cifrar la palabra \u0093CUPA\u0094, y que < strong> < i> a< / i> < / strong> = 3 y < strong> < i> b< / i> < / strong> = 12, entonces: < br> < TABLE CLASS= \" data\" > < tbody> < TR > < TD ALIGN= CENTER> < STRONG> Letra original< / STRONG> < / TD> < TD ALIGN= CENTER> < STRONG> Valor< / TD> < TD ALIGN= CENTER> < STRONG> Valor cifrado< STRONG> < / TD> < TD ALIGN= CENTER> < STRONG> Letra cifrada< STRONG> < / TD> < / TR> < TR > < TD ALIGN= CENTER> C< / TD> < TD ALIGN= CENTER> 2< / TD> < TD ALIGN= CENTER> ( 3\u00d72+ 12) mod 26 = 18 mod 26 = 18< / TD> < TD ALIGN= CENTER> S< / TD> < / TR> < TR > < TD ALIGN= CENTER> U< / TD> < TD ALIGN= CENTER> 20< / TD> < TD ALIGN= CENTER> ( 3\u00d720+ 12) mod 26 = 72 mod 26 = 20< / TD> < TD ALIGN= CENTER> U< / TD> < / TR> < TR > < TD ALIGN= CENTER> P< / TD> < TD ALIGN= CENTER> 15< / TD> < TD ALIGN= CENTER> ( 3\u00d715+ 12) mod 26 = 57 mod 26 = 5< / TD> < TD ALIGN= CENTER> F< / TD> < / TR> < TR > < TD ALIGN= CENTER> A< / TD> < TD ALIGN= CENTER> 0< / TD> < TD ALIGN= CENTER> ( 3\u00d70+ 12) mod 26 = 12 mod 26 = 12< / TD> < TD ALIGN= CENTER> M< / TD> < / TR> < / tbody> < / table> Entonces, el cifrado de CUPA es SUFM. # ProblemaCifra un mensaje sabiendo los valores de < strong> < i> a< / i> < / strong> y < strong> < i> b< / i> < / strong> .",
    "input": "La primera li\u0301nea tendra\u0301 dos enteros < strong> < i> a< / i> < / strong> y < strong> < i> b< / i> < / strong> , 0 < < strong> < i> a< / i> < / strong> < 2< sup> 31< / sup> , 0 le; < strong> < i> b< / i> < / strong> < 2< sup> 31< / sup> , a sera\u0301 primo relativo con 26. < br> La segunda li\u0301nea tendra\u0301 un mensaje con solamente letras mayu\u0301sculas del alfabeto ingle\u0301s. El mensaje no tendra\u0301 ma\u0301s de 255 caracteres.",
    "output": "Una sola li\u0301nea con el mensaje cifrado.",
    "note": "",
    "topics": [
      "math",
      "strings"
    ],
    "id": 471
  },
  {
    "title": "CR Cadenas Suaves",
    "url": "https://omegaup.com/arena/problem/Cadenas-Suaves",
    "history": "# HistoriaDecimos que una cadena es * suave* si todos sus caracteres son iguales. Como te gustan las cadenas * suaves* , quieres calcular cua\u0301nto tiempo te tomari\u0301a transformar cualquier cadena a una cadena * suave* . La u\u0301nica operacio\u0301n que puedes hacer sobre la cadena es escoger una letra X y una letra Y y cambiar todas las letras de la cadena que sean X a Y. Cada letra que cambies te toma un segundo. Por ejemplo, la cadena \u201ccadena\u201d, si X= \u2019a\u2019 y Y= \u2019c\u2019, despue\u0301s de dos segundos quedari\u0301a como \u201cccdenc\u201d.",
    "input": "Varias cadenas, una por li\u0301nea.",
    "output": "Para cada cadena, imprime la menor cantidad de segundos que tomari\u0301a volver la cadena en * suave* .",
    "note": "",
    "topics": [
      "math",
      "sortings",
      "strings",
      "implementation"
    ],
    "id": 457
  },
  {
    "title": "CR Angry Birds",
    "url": "https://omegaup.com/arena/problem/CR-Angry-Birds",
    "history": "# HistoriaJuan Memo esta\u0301 jugando Angry Birds. En cada nivel puede ganar de 0 a 3 estrellas. Como juega mucho se harto\u0301 de contar cua\u0301ntas estrellas ha ganado, asi\u0301 que te pidio\u0301 que contaras por e\u0301l. El nu\u0301mero de estrellas que Juan Memo gano\u0301 en cada nivel esta\u0301 representado como una cadena. \" \u2014\" si consiguio\u0301 0, \" o\u2013\" si consiguio\u0301 1, \" oo- \" si consiguio\u0301 2, y \" ooo\" si consiguio\u0301 3.",
    "input": "Varias li\u0301neas, representando cuantas estrellas gano\u0301 Juan Memo en cada nivel.",
    "output": "El total de estrellas que gano\u0301 Juan Memo a lo largo de la partida.",
    "note": "",
    "topics": [
      "strings",
      "implementation"
    ],
    "id": 455
  },
  {
    "title": "Pal\u00edndromos Coding Rush",
    "url": "https://omegaup.com/arena/problem/Palindromos",
    "history": "Este problema es muy conocido. Se trata de decir si una cadena es un pali\u0301ndromo. Recordemos que un pali\u0301ndromo es una palabra que se lee igual de derecha a izquierda como de izquierda a derecha. Por ejemplo, \u0093salas\u0094, es un pali\u0301ndromo; \u0093ana\u0094 tambie\u0301n. En cambio, \" gatos\" no es un pali\u0301ndromo. Tu tarea en este problema consiste en escribir un programa que lea varias palabras y determine si cada palabra es pali\u0301ndromo a no.",
    "input": "Leera\u0301s un entero * * N* * . Posteriormente leera\u0301s * * N* * palabras. Cada palabra estara\u0301 en una li\u0301nea distinta, todas las palabras sera\u0301n de letras minu\u0301sculas y sin acentos ( co\u0301digo ASCII) .",
    "output": "Por cada palabra lei\u0301da, debes imprimir en una li\u0301nea distinta la letra \u0093P\u0094 si la palabra correspondiente es pali\u0301ndromo o las letras \u0093NP\u0094 si la palabra correspondiente no lo es.",
    "note": "",
    "topics": [
      "implementation",
      "string suffix structures",
      "strings"
    ],
    "id": 448
  },
  {
    "title": "CR Ensayos",
    "url": "https://omegaup.com/arena/problem/CR-Ensayos",
    "history": "Tu hermano menor esta\u0301 haciendo un ensayo en la computadora. Mientras revisabas su trabajo has notado que no usa las mayu\u0301sculas y minu\u0301sculas cuando corresponde. Como quieres mucho a tu hermano y ya es muy noche, le ayudara\u0301s a corregir su ensayo. Recuerda que usas: * Mayu\u0301sculas: * * Despue\u0301s de un punto* * Despue\u0301s de un signo de exclamacio\u0301n ( ! ) o interrogacio\u0301n ( ? ) . * * En el inicio de una oracio\u0301n. * Minu\u0301sculas: * * En otro caso.",
    "input": "| | outputMi hermano MAYOR va a ENTRAR a la universidad \u00bftodos tenemos que ir a la universidad? no quiero que el vaya. | | input",
    "output": "| | outputMi hermano mayor va a entrar a la universidad \u00bftodos tenemos que ir a la universidad? No quiero que el vaya. | | end# RestriccionesNo habra\u0301 nombres propios como Me\u0301xico o Mari\u0301a, asi\u0301 que no debes preocuparte por el uso de mayu\u0301sculas en ellos. No habra\u0301 un punto antes de un signo de exclamacio\u0301n o interrogacio\u0301n ni acentos.",
    "note": "",
    "topics": [
      "implementation",
      "strings"
    ],
    "id": 431
  },
  {
    "title": "CR Diciendo Hola",
    "url": "https://omegaup.com/arena/problem/CR-Diciendo-Hola",
    "history": "En tu nuevo trabajo, que conseguiste aprendiendo a programar en el Coding Rush, tu jefe te ha pedido una tarea muy tediosa: mandar el mismo correo a muchas personas, cambiando u\u0301nicamente el encabezado, de manera que diga \u0093hola Fulanito\u0094, \u0093Hola Juanito\u0094, \u0093Hola Bob\u0094, etc. Como eres muy buen programador has decidido hacer un programa que escriba el nombre respectivo en cada carta, en lugar de escribir cada nombre uno por uno.",
    "input": "| | output",
    "output": "| | inputmiguelJuan fernandaJorge! L5uisPedro123| | outputHola miguelHola Juan Hola fernandaHola Jorge! Hola l5uisHola Pedro123| | inputArmando| | outputHola Armando| | end",
    "note": "",
    "topics": [
      "strings",
      "implementation"
    ],
    "id": 430
  },
  {
    "title": "CR Cambiando diplomas",
    "url": "https://omegaup.com/arena/problem/CR-Cambiando-diplomas",
    "history": "Fer esta\u0301 imprimiendo los diplomas para la u\u0301ltima sesio\u0301n del Coding Rush, pero hubo un problema. Como tu\u0301 sabes, esta es la cuarta vez que realizan el CodingRush y Fer hizo los diplomas con los asistentes a la tercera sesio\u0301n. Ella ha pedido tu ayuda para modificar, en todos los textos que tiene, los nombres equivocados por los correctos.",
    "input": "| | output",
    "output": "| | input3Ana RosaMari\u0301a LuisaLaura AlejandraAna, Mari\u0301a y Laura fueron al Coding Rush, Ana gano\u0301 el primer lugar. | | outputRosa, Luisa y Alejandra fueron al Coding Rush, Rosa gano\u0301 el primer lugar. | | input1Jose\u0301 Ramo\u0301nEste diploma es para Jose\u0301 por ganar el primer lugar. | | outputEste diploma es para Ramo\u0301n por ganar el primer lugar. | | end",
    "note": "",
    "topics": [
      "implementation",
      "strings"
    ],
    "id": 429
  },
  {
    "title": "CR Buscando repeticiones",
    "url": "https://omegaup.com/arena/problem/CR-Buscando-repeticiones",
    "history": "Como tu\u0301 sabes, todo buen escritor evita escribir un mismo nombre o palabra en un pa\u0301rrafo varias ocasiones. Esta\u0301s escribiendo un cuento y se te ocurrio\u0301 hacer un co\u0301digo para revisar si no repites mucho las palabras.",
    "input": "| | output",
    "output": "| | inputFresaA mi\u0301 me gustan mucho las fresas porque con ellas hago fresas con crema, y licuado de fresa| | outputFresa se repite 1 vez. | | inputDulcesComes muchos dulces, los dulces te hacen mucho dan\u0303o, deberi\u0301as de tener cuidado cuando comes dulces| | outputDulces se repite 3 veces. | | inputComidaLos gatos son las mejores mascotas del mundo, porque no necesitas cuidarlos mucho| | outputComida se repite 0 veces. | | end",
    "note": "",
    "topics": [
      "strings"
    ],
    "id": 428
  },
  {
    "title": "CR A contar 2.0",
    "url": "https://omegaup.com/arena/problem/CR-A-contar-20",
    "history": "Un gran problema con las computadoras es que, como ya viste, hay diferentes tipos de datos ( int, double, String ) y en ocasiones esto complica las cosas. Hoy tu papa\u0301 recibio\u0301 una carta del banco con su saldo y se te ocurrio\u0301 que, para hacer todo ma\u0301s fa\u0301cil, podri\u0301as hacer un co\u0301digo que sume todos los nu\u0301meros que existen en la carta, pero la carta es un texto y por ello, un String. Asi\u0301 que primero practicara\u0301s haciendo un co\u0301digo que sume los di\u0301gitos ( 0, 1, 2, 3, 4, 5, 6, 7, 8, 9) que encuentres en un texto.",
    "input": "| | output",
    "output": "| | inputEsto es la prueba 5, he hecho 4 pruebas antes. | | output9| | inputRevisar es importante para que no me penalicen con 10 minutos extras, ayer mi tiempo fue de 35 minutos. | | output9| | end",
    "note": "",
    "topics": [
      "strings",
      "implementation",
      "math"
    ],
    "id": 427
  },
  {
    "title": "Encontrando D\u00edgitos",
    "url": "https://omegaup.com/arena/problem/Iterando-con-los-digitos",
    "history": "Necesitas contar el nu\u0301mero de veces que aparece cada uno de los di\u0301gitos del 0 al 9 en un texto, pero te da mucha flojera utilizar muchas sentencias if - else. Debe existir una manera ma\u0301s fa\u0301cil e interesante de hacerlo. En efecto, con este problema aprendera\u0301s a utilizar un arreglo para contar el nu\u0301mero de veces que aparece cada di\u0301gito. En la posicio\u0301n 0 contara\u0301s el nu\u0301mero de veces que aparece el di\u0301gito cero, en la posicio\u0301n 1 contara\u0301s el nu\u0301mero de veces que aparece el di\u0301gito uno y asi\u0301 sucesivamente hasta la posicio\u0301n 9 que contara\u0301 el nu\u0301mero de veces que aparece el di\u0301gito nueve.",
    "input": "| | output",
    "output": "| | input3Hay 10 tipos de personas, las que saben binario y las que noTengo 1 gato en mis 2 botas16 people like this! | | outputEl 0 aparece 1 veces. El 1 aparece 3 veces. El 2 aparece 1 veces. El 3 aparece 0 veces. El 4 aparece 0 veces. El 5 aparece 0 veces. El 6 aparece 1 veces. El 7 aparece 0 veces. El 8 aparece 0 veces. El 9 aparece 0 veces. | | end",
    "note": "",
    "topics": [
      "math",
      "implementation",
      "strings"
    ],
    "id": 426
  },
  {
    "title": "Getting the numbers!",
    "url": "https://omegaup.com/arena/problem/Getting-the-numbers",
    "history": "Meta: Se aplica el substring y el Integer. parseInt( ) . Se debe jugar con un i\u0301ndice de inicio y fin para ir detectando cada palabra. Tambie\u0301n se aprende a utilizar la funcio\u0301n replaceAll( ) . Vas a procesar una li\u0301nea que puede tener varias palabras del conjunto: \u0093cero\u0094, \u0094uno\u0094, \u0094dos\u0094, \u0094tres\u0094 o tambie\u0301n nu\u0301meros. Los elementos esta\u0301n separados entre si\u0301 por un solo espacio.",
    "input": "| | output",
    "output": "| | inputuno dos tres 14! 10 9 8 7 6 5 4 tres dos uno cerotres dos uno 0cero cero 72012 dos cero uno dos| | output1 2 3 14! 10 9 8 7 6 5 4 3 2 1 03 2 1 00 0 72012 2 0 1 2| | end# RestriccionesCada palabra estara\u0301 separada por exactamente un espacio. No habra\u0301 espacios extras en los extremos. Siempre sera\u0301n palabras del conjunto.",
    "note": "",
    "topics": [
      "strings"
    ],
    "id": 424
  },
  {
    "title": "Dos Veces",
    "url": "https://omegaup.com/arena/problem/Formateando-las-letras",
    "history": "Meta: Leer una li\u0301nea con caracteres tanto de minu\u0301sculas como de mayu\u0301sculas e imprimirlos dos veces, una con todo cambiado a mayu\u0301sculas y otro con todo convertido a minu\u0301sculas. En ocasiones es deseable poder transformar un texto a mayu\u0301sculas o tambie\u0301n a minu\u0301sculas. En este ejercicio haremos eso.",
    "input": "| | output",
    "output": "| | inputCoding RusheXtreMe ProgrammingEstudia en el ITAM! ; ) | | outputCODING RUSHcoding rushEXTREME PROGRAMMINGextreme programmingESTUDIA EN EL ITAM! ; ) estudia en el itam! ; ) | | end",
    "note": "",
    "topics": [
      "strings",
      "implementation"
    ],
    "id": 423
  },
  {
    "title": "E amelborP",
    "url": "https://omegaup.com/arena/problem/E-amelborP",
    "history": "Aprendera\u0301s a leer una cadena e imprimirla al reve\u0301s. ( charAt y print [ sin salto de li\u0301nea] . Hoy en di\u0301a muchas personas estudian chino porque segu\u0301n algunos guru\u0301s este sera\u0301 el idioma ma\u0301s extendido en el futuro. Ahora bien, \u00bfque\u0301 pasari\u0301a si el di\u0301a de man\u0303ana el ser humano descubre la forma de expandirse por el espacio? Quiza\u0301 los idiomas terri\u0301colas empezari\u0301an a parecer bastante menos atractivos \u00bfverdad? Por eso hay que comenzar a ejercitar nuestro cerebro con, por lo menos, nuestro propio idioma pero al reve\u0301s.",
    "input": "| | output",
    "output": "| | inputAnita lava la tinano fue tan dificileno odihc| | outputanit al aval atinAlicifid nat euf onchido one| | end",
    "note": "",
    "topics": [
      "implementation",
      "strings"
    ],
    "id": 422
  },
  {
    "title": "D\u00edas de la actualidad",
    "url": "https://omegaup.com/arena/problem/Dias-de-la-actualidad",
    "history": "El acceso a Internet ha aumentado mucho en los u\u0301ltimos an\u0303os. Si eres observador, te has dado cuenta que las direcciones de Internet no tienen espacios. Esto se debe a motivos de seguridad y a las convenciones sobre las que se ha desarrollado la web. Imagina que te encuentras haciendo una pa\u0301ginas de Internet y te acabas de enterar de este detalle. Quieres cambiar todos los espacios que encuentres por guiones bajos.",
    "input": "| | output",
    "output": "| | inputwww. coding rush en el . itam. mx/ www. me gusta google. comhttp: / / eventos. itam. mx/ es/ eventos y noticias/ desarrollo ejecutivo| | outputwww. coding_ rush_ en_ el_ . itam. mx/ www. me_ gusta_ google. comhttp: / / eventos. itam. mx/ es/ eventos_ y_ noticias/ desarrollo_ ejecutivo| | end",
    "note": "",
    "topics": [
      "strings"
    ],
    "id": 421
  },
  {
    "title": "Contando espacios",
    "url": "https://omegaup.com/arena/problem/Contando-espacios",
    "history": "Hace unos an\u0303os los telegramas se utilizaban en lugar de los SMS. Los telegramas se soli\u0301an cobrar por letras usadas o tambie\u0301n por palabras usadas. Una forma de ahorrar dinero era juntando palabras, es decir, borrando espacios. Imagina que esta\u0301s en esos tiempos y que necesitas procesar un texto para decir cua\u0301ntos espacios hay, lo cual te ayudara\u0301 a tomar una decisio\u0301n entre ocupar y pagar los espacio o no hacerlo.",
    "input": "| | output",
    "output": "| | input2Esto es un telegramabrinca la tablita| | output35| | end",
    "note": "",
    "topics": [
      "strings",
      "implementation"
    ],
    "id": 420
  },
  {
    "title": "Bajando los caracteres",
    "url": "https://omegaup.com/arena/problem/Bajando-los-caracteres",
    "history": "Con este ejercicio aprendera\u0301s a obtener de forma individual los caracteres de una cadena.",
    "input": "| | output",
    "output": "| | inputITAM| | outputITAM| | inputMexico| | outputMexico| | end",
    "note": "",
    "topics": [
      "strings",
      "implementation"
    ],
    "id": 419
  },
  {
    "title": "Aprendiendo a leer cadenas",
    "url": "https://omegaup.com/arena/problem/Aprendiendo-a-leer-cadenas",
    "history": "El siguiente problema te ayudara\u0301 a aprender a leer e imprimir cadenas de texto.",
    "input": "| | output",
    "output": "| | input2Hola mundoEsto es Coding Rush! | | output\" Hola mundo\" tiene 10 caracteres\" Esto es Coding Rush! \" tiene 20 caracteres| | input2Hasta la vista. . . baby! | | output\" Hasta la vista. . . \" tiene 17 caracteres\" baby! \" tiene 5 caracteres| | end",
    "note": "",
    "topics": [
      "implementation",
      "math",
      "strings"
    ],
    "id": 418
  },
  {
    "title": "Caja Negra...",
    "url": "https://omegaup.com/arena/problem/Caja-Negra",
    "history": "# Descipcio\u0301nComo ya es sabido Karel_ 1 fallecio\u0301 en un desafortunado accidente hace poco , pero su hermano Karel_ 2 siente la necesidad de saber a ciencia cierta que\u0301 fue lo que paso\u0301 y para ello planea utilizar la caja negra que llevaba consigo en el camio\u0301n Karel_ 1. # ProblemaAyuda a Karel_ 2 a saber cua\u0301l es la contrasen\u0303a para abrir la caja negra y tener acceso a las grabaciones. La caja tiene una contrasen\u0303a que consiste en la letra que ma\u0301s se repite de una cadena de caracteres( palabra) que esta\u0301 inscrita en ella, tu tarea consiste en decirnos cua\u0301l es la letra que ma\u0301s se repite( ver ejemplo) .",
    "input": "Una li\u0301nea con N_ 1, la longitud de la palabra de la caja, despue\u0301s una li\u0301nea con una palabra que es la que contiene la contrasen\u0303a.",
    "output": "Una li\u0301nea con una letra la cual indica la letra que ma\u0301s se repite en la palabra. # Co\u0301digos ASCII! [ Codigos] ( codigo- ascii. gif)",
    "note": "",
    "topics": [
      "math",
      "implementation",
      "strings"
    ],
    "id": 415
  },
  {
    "title": "La clave escondida",
    "url": "https://omegaup.com/arena/problem/ClaveSecreta",
    "history": "# La clave escondida. A un alumno, en sus tiempos de ocio en laescuela, se le ocurrio\u0301 una forma sencilli\u0301sima de esconder lasrespuestas para sus exa\u0301menes. Estas respuestas tienen la forma P- O, donde P es un enteropositivo, que representa el nu\u0301mero de la pregunta, y O es unaletra mayu\u0301scula del alfabeto ingle\u0301s, que representa la respuesta ala pregunta P. Su manera de codificar ambos datos es muy sencilla. Primero escribeun nu\u0301mero, n_ 1, y una cadena, L_ 1. La longitud de L_ 1 es unmu\u0301ltiplo de n_ 1. Ahora, separa la cadena en subcadenas de longitudn_ 1 y las coloca una por una verticalmente como muestra la figura. Despue\u0301s, le asigna un nu\u0301mero a cada letra, correspondiendo a laletra A el nu\u0301mero 1, a B el nu\u0301mero 2 y asi\u0301 sucesivamente, y, paracada columna, suma los valores de cada una de las letras y lo escribemo\u0301dulo 10 debajo de la misma. Las letras mayu\u0301sculas y minu\u0301sculas tienenel mismo valor. < img src= \" https: / / scontent. felp1- 1. fna. fbcdn. net/ hphotos- frc3/ v/ t1. 0- 9/ 1010723_ 524196367629240_ 80653176_ n. jpg? oh= 6ab989c67d47244cd6cda2697a266105 oe= 562D2FAA\" > Una vez obtenida la suma, a cada di\u0301gito le suma 1 y multiplica todoslos di\u0301gitos entre si\u0301. En el ejemplo anterior, el valor que seobtendri\u0301a seri\u0301a ( 7+ 1) \u00d7 ( 0+ 1) \u00d7 ( 8+ 1) \u00d7 ( 0+ 1) = 72, y, finalmente, toma u\u0301nicamente el u\u0301ltimo di\u0301gito de ese nu\u0301mero, le suma 1, y obtiene a P. Para obtener a O, escribe un entero n_ 2 y una cadena L_ 2, ysigue los mismos pasos descritos anteriormente, pero, en vez deobtener un entero este se convierte en letra, toma ese u\u0301ltimodi\u0301gito de la siguiente manera, siendo 1 la letra A, 2 la letra B, y asi\u0301 sucesivamente.",
    "input": "En la primera li\u0301nea, el entero n_ 1, precedido por un \" ! \" . En la segunda li\u0301nea, la cadena L_ 1. En la tercera li\u0301nea, el entero n_ 2, precedido por un \" ! \" . En la u\u0301ltima li\u0301nea, la cadena L_ 2.",
    "output": "La cadena P- O.",
    "note": "",
    "topics": [
      "math",
      "implementation",
      "strings"
    ],
    "id": 238
  },
  {
    "title": "Las cartas de Dr. Lira",
    "url": "https://omegaup.com/arena/problem/CartasDrLira",
    "history": "Dr. Lira has N cards in a row on a table, numbered from left to right from 0 to N- 1. Every card is black on one side and white on the other. The cards on the table may have either side facing up. To activate his weapons arsenal, Dr. Lira needs the cards to have alternating colors, that is, every pair of consecutive cards needs to have different colors face up. Since he' s lazy, Dr. Lira has hired you to find what' s the minimum number of cards he needs to flip so they have alternating colors.",
    "input": "In the first line an integer, N ( 3 \u2264 N \u2264 50) , indicating the number of cards Dr. Lira owns. In the second line, a string representing the configuration of the cards. If the i- th character is B, the i- th card has the black side facing up. Similarly, if the i- th character is W, the i- th card has the white side facing up.",
    "output": "The minimum amount of cards that need to be flipped so the cards on the table have alternating colors. # Sample| | input4BBBW| | output1| | descriptionFlipping the second card: ` BWBW` | | input5WBWBW| | output0| | descriptionThere' s no need to flip anything. | | input9WWWWWWWWW| | output4| | descriptionFlipping 4 cards: ` WBWBWBWBW` | | end",
    "note": "",
    "topics": [
      "strings",
      "greedy",
      "graphs",
      "implementation",
      "trees"
    ],
    "id": 237
  },
  {
    "title": "aMAYUSCULAS",
    "url": "https://omegaup.com/arena/problem/aMAYUSCULAS",
    "history": "En varios procesadores de texto tiene la funcio\u0301n \u0093Cambiar minu\u0301sculas y mayu\u0301sculas\" . Tu tarea es programar parte de esa funcio\u0301n, pasar a mayu\u0301sculas.",
    "input": "Una sola li\u0301nea de a lo ma\u0301s 255 caracteres. Los caracteres solamente sera\u0301n letras del alfabeto ingle\u0301s, nu\u0301meros y espacios.",
    "output": "Una sola li\u0301nea, con la cadena dada en la entrada, trasformada a mayu\u0301sculas.",
    "note": "",
    "topics": [
      "implementation",
      "strings"
    ],
    "id": 113
  },
  {
    "title": "Traductor",
    "url": "https://omegaup.com/arena/problem/traductor",
    "history": "Observa los siguientes co\u0301digos: < center> < table width= \" 60",
    "input": "Una cadena de caracteres sin espacios de la forma str? str2: str3, donde str1, str2 y str3 son cadenas de caracteres con una longitud no mayor a 50 y cuyos caracteres pueden ser letras, nu\u0301meros, pare\u0301ntesis y los si\u0301mbolos < , > , = , ! , | , , nunca tendra\u0301n el cara\u0301cter \u0091? \u0092 ni \u0091: \u0092.",
    "output": "4 li\u0301neas de la forma< pre> if( str1) str2; elsestr3; < / pre> Nota: str2 y str3 deben estar precedidas por 5 espacios en blanco.",
    "note": "",
    "topics": [
      "implementation",
      "strings"
    ],
    "id": 110
  },
  {
    "title": "Amigos",
    "url": "https://omegaup.com/arena/problem/amigos",
    "history": "Despues de la u\u0301ltima olimpiada el COMI decidio\u0301 hacer una encuesta a los oli\u0301mpicos para ver las amistades que se habi\u0301an forjado durante el evento. De la encuesta se contruyo\u0301 una tabla T de N x N do\u0301nde Tij puede tener los valores 0 o\u0301 1 do\u0301nde 1 indica que el participante i considera al participante j como amigo. Tu tarea es dada esta tabla poder contestar a las preguntas \u00bfes el oli\u0301mpico x amigo del oli\u0301mpico y?",
    "input": "La primera linea contiene el nu\u0301mero N de concursantes. Las siguientes N li\u0301neas contienen los nombres de todos los concursantes ordenados alfabeticamente. Las siguientes N li\u0301neas contienen una N di\u0301gitos separados por espacios. La siguiente linea contiene un entero P que indica el numero de pregunta. Por cada pregunta habra\u0301 dos li\u0301neas con un nombre en cada una.",
    "output": "Tienes que escribir P lineas respondiendo 1 si el primer participante considera al segundo su amigo y 0 si no.",
    "note": "",
    "topics": [
      "implementation",
      "math",
      "matrices",
      "strings"
    ],
    "id": 97
  },
  {
    "title": "\ud83c\udfa8 Pal\u00edndromo M\u00e1s Grande",
    "url": "https://omegaup.com/arena/problem/Palindromo-Mas-Grande",
    "history": "* * anitalavalatina* * , * * bubub* * , * * reconocer* * , estos son ejemplos de palabras especiales llamadas * pali\u0301ndromas* , son interesantes porque se leen igual de izquierda a derecha que de derecha a izquierda, aunque probablemente ya las conoci\u0301as \ud83d\ude09. En fi\u0301n, este problema se trata de que uses todo tu \ud83e\udde0 para encontrar palabras pali\u0301ndromas en strings donde pareciera que no hay \ud83e\udd2f. Por ejemplo, la frase * * ana quiere manzana* * no es un pali\u0301ndromo, pero si\u0301 contiene uno, la palabra * * ana* * que esta\u0301 adentro es un pali\u0301ndromo.",
    "input": "Una li\u0301nea con una cadena de texto.",
    "output": "El pali\u0301ndromo ma\u0301s grande que exista dentro de esta cadena de texto.",
    "note": "",
    "topics": [
      "string suffix structures",
      "strings"
    ],
    "id": 16247
  },
  {
    "title": "Creando capic\u00faas",
    "url": "https://omegaup.com/arena/problem/Creando-capicuas",
    "history": "Un nu\u0301mero capicu\u0301a se refiere a cualquier nu\u0301mero que se lee igual de izquierda a derecha que de derecha a izquierda. Por ejemplo, 101, 11011, entre otros. Hay formas de crear capicu\u0301as binarios a partir de cadenas especi\u0301ficas. Dada una cadena binaria S de longitud N, se desea obtener un pali\u0301ndromo a partir de S aplicando la siguiente operacio\u0301n como ma\u0301ximo\u230aN/ 2\u230bveces: * Elige un i\u0301ndice i, ( 1 \u2264 i \u2264| S | ) , elimina el cara\u0301cter S_ i de S y concatena los partes restantes de la cadena. Aqui\u0301 | S | denota la longitud actual de la cadena S. Por ejemplo, si S= 10010, al aplicar la operacio\u0301n en el i\u0301ndice i= 2 se obtiene S= 1010. Es importante resaltar que despue\u0301s de cada operacio\u0301n, la longitud de la cadena S se reduce en uno. Encuentra * * pali\u0301ndromo ma\u0301s grande* * que puedas obtener despue\u0301s de las operaciones. Se puede probar que * * siempre* * es posible obtener un pali\u0301ndromo de S bajo las restricciones dadas. Aqui\u0301, \u230aN/ 2\u230b denota el piso de la divisio\u0301n entera de N por 2.",
    "input": "El formato de la entrada es el siguiente. Para cada caso de prueba la primera li\u0301nea denota N, la longitud de la cadena S. La segunda li\u0301nea contiene la cadena S.",
    "output": "Para cada caso de prueba, imprime en una linea * * la secuencia palindro\u0301mica ma\u0301s grande* * que puedes obtener de S al aplicar la operacio\u0301n a lo ma\u0301s \u230aN/ 2\u230bveces:",
    "note": "",
    "topics": [
      "string suffix structures",
      "strings"
    ],
    "id": 15729
  },
  {
    "title": "Engraved Stones",
    "url": "https://omegaup.com/arena/problem/Engraved-Stones",
    "history": "# DescriptionHundreds of years ago, nlogonians carved messages of size N in stones as a methodto communicate and preserve their knowledge to future generations. By that time, nlogoniansused the numbers from 1 to 100 as their communication method; to minimize the amount ofknowledge that is lost while time passes, nlogonians carved each of the messages in twostones, one at the side of the other. Stones with numbers carved are one of the tourists attractions at the side of Nlogonia river, people passes time walking and comparing the stones, observing that they contain exactly thesame message written. Recently, two stones with numbers carved were found at the sides of the river, however thesestones do not have the same numbers which would mean their corresponding stones are missing, however, historians of Nlogonia are aware of stones with hidden messages as they contain coreknowledge of Nlogonia and apparently nlogonians wanted these messages to be deciphered only bythe smartest people. Research about stones of this kind reveal that the message in these stoneswas carved on each stone, then random messages were added to the start and end of the messageof each stone to make them of the same size ( N numbers) , a random message can be of size 0. Althoughthe content of the stones differ, the message intended to be communicated is the same, your task isto find the longest message that could have been originally carved in the stones that were found.",
    "input": "The first line of the input contains an integer N ( 1 \u2264 N \u2264 10^ 5) , representing the amount of numbers in the carving of each stone. Each of the next two lines contain N numbers between 1 and 100 separated by a space representing the carvings for each of the two stones found.",
    "output": "Output a single line with an integer indicating the length of the message intended to be communicated by nlogonians. # Example| | input510 1 15 1 315 1 10 3 9| | output2| | input510 1 15 1 315 1 10 1 15| | output3| | end",
    "note": "",
    "topics": [
      "strings",
      "string suffix structures"
    ],
    "id": 14798
  },
  {
    "title": "Cifrado Brayan",
    "url": "https://omegaup.com/arena/problem/Cifrado-Brayan",
    "history": "Brayan es amante del cifrado de cadenaa, por lo que decidio\u0301 hacer el su propio cifrado que consiste en buscar el patro\u0301n ` cadenas` y cambiar todas las coincidencias por ` Borisss` . Los caracteres que no hayan sido afectados por ningu\u0301n reemplazo sera\u0301n modificados de forma ci\u0301clica avanzando k + T posiciones sobre el abecedario, donde T es el taman\u0303o de la cadena. Este cifrado trabaja u\u0301nicamente sobre letras minu\u0301sculas, aunque el resultado puede contener la ` B` mayu\u0301scula de ` Borisss` .",
    "input": "La cadena s a cifrar con el cifrado de Brayan y el entero k.",
    "output": "La cadena cifrada.",
    "note": "",
    "topics": [
      "strings",
      "string suffix structures"
    ],
    "id": 14734
  },
  {
    "title": "occ21sfinpn32",
    "url": "https://omegaup.com/arena/problem/occ21sfinpn32",
    "history": "# Subcadenas. Haga un programa que reciba dos cadenas en minu\u0301sculas de a lo ma\u0301s 500 cara\u0301cteres y que encuentre cua\u0301ntas vecesaparece la primera cadena como una subcadena de la segunda.",
    "input": "",
    "output": "",
    "note": "",
    "topics": [
      "strings",
      "string suffix structures"
    ],
    "id": 13863
  },
  {
    "title": "Mensaje secreto",
    "url": "https://omegaup.com/arena/problem/Mensaje-secreto",
    "history": "Hace 5 an\u0303os recibiste una visio\u0301n en un suen\u0303o, una secuencia de nu\u0301meros. En ese momento no supiste que significaba, pero hace poco te visito\u0301 un sujeto misterioso en medio de la noche. Te entrego\u0301 una hoja con una secuencia muy larga de nu\u0301meros sin decir nada. Has decidido ver si tu visio\u0301n esta\u0301 relacionada con este nuevo suceso. Para ello intentara\u0301s encontrar esa vieja secuencia dentro de la nueva para ver si existe.",
    "input": "En la primer li\u0301nea un entero 1\u2264 n \u2264 1e6, la cantidad de nu\u0301meros en la primer secuencia. En la segunda li\u0301nea n enteros donde - 1e6 \u2264 a_ i \u2264 1e5En la tercer li\u0301nea un entero n\u2264 m \u2264 1e5, la cantidad de nu\u0301meros en la segunda secuencia. En la segunda li\u0301nea m enteros donde - 1e5 \u2264 b_ i \u2264 1e5.",
    "output": "Si la primer secuencia se encuentra dentro de la segunda imprime \" Si\" , caso contrario imprime \" No\" .",
    "note": "",
    "topics": [
      "strings",
      "string suffix structures"
    ],
    "id": 13702
  },
  {
    "title": "Pattern Matching con KMP",
    "url": "https://omegaup.com/arena/problem/Pattern-Matching-con-KMP",
    "history": "Dado un patro\u0301n * P* y un string * T* , debes buscar todas las apariciones del patro\u0301n * P* dentro del string * T* . Debes resolver este problema utilizando * * KMP* * .",
    "input": "La entrada constara de una li\u0301nea con el string * T* , seguido de otra li\u0301nea con el string * P* . La longitud de cada uno de los strings no sera\u0301 mayor a * 10^ 8* . Y ninguno sera\u0301 un string vaci\u0301o. Los strings constaran de letras minu\u0301sculas y mayu\u0301sculas ( a- z, A- Z) y nu\u0301meros( 1- 9) .",
    "output": "La salida seran dos li\u0301neas. La primer li\u0301nea sera un entero con la cantidad de apariciones del pa\u0301tron * P* en el string * T* . Y en caso de ser positivo este nu\u0301mero de apariciones. En la siguiente linea, estara\u0301n los indices de estas apariciones, cada uno separado por un espacio. Y ordenados de mayor a menor.",
    "note": "",
    "topics": [
      "strings",
      "string suffix structures"
    ],
    "id": 13450
  },
  {
    "title": "Autocompletado",
    "url": "https://omegaup.com/arena/problem/Autocompletado",
    "history": "Lalo acaba de comprar un celular nuevo, pero el display venia defectuoso, se dio cuenta de eso debido a que cuando chatea con sus amigos por las redes sociales e\u0301l presiona una letra y se pone en la pantalla una que no quiere, por lo que sus mensajes no se entienden del todo y sus amigos piensan que tiene dislexia. Pero como Lalo es muy buen programador decidio\u0301 hacer un programa que con tan solo teclear el prefijo de una palabra el programa le recomiende la mas usada.",
    "input": "Un entero W que indica el numero de palabras que tiene el diccionario, por cada palabra W_ i un entero F que representa la frecuencia con la que la suele usar Lalo, tal que ( 1 \u2264 N \u2264 1000, 1 \u2264 F \u2264 1000000) , seguido de un entero P que representa la cantidad de prefijos 1 \u2264 P \u2264 M. Puedes asumir que cada palabra W_ i no excede los 15 caracteres y que el alfabeto solo esta compuesto por letras minu\u0301sculas en el rango de a - z y que la frecuencia de ninguna palabra se repite.",
    "output": "Por cada prefijo P_ i, imprimir la palabra mas usada o en caso de que ninguna palabra en el diccionario tenga como prefijo P_ i, imprimir - 1.",
    "note": "",
    "topics": [
      "data structures",
      "strings",
      "string suffix structures"
    ],
    "id": 14725
  },
  {
    "title": "UP Diccionario",
    "url": "https://omegaup.com/arena/problem/UP-Diccionario",
    "history": "# UP- Diccionario! [ ] ( homerWord. jpg) Dado un diccionario de n palabaras, escribe un programa que reciba varias palabras e identifique si estan en en el diccionario o no.",
    "input": "Dos numeros n ( 1 \u2264 n \u2264 1000) , y m ( 1 \u2264 m \u2264 10000) indicando la cantidad de palabras en el diccionario, y la cantidad de preguntas a contestar. Le siguen n li\u0301neas, cada una con una palabra, que conforman el diccionario. Ninguna palabra tendra\u0301 ma\u0301s de 30 caracteres. Le siguen m li\u0301neas, cada una con una palabra para buscar en el diccionario.",
    "output": "m li\u0301neas, por cada palabra imprime \" YES\" , si la palabra correspondiente esta\u0301 en el diccionario, en caso contrario imprime \" NO\" .",
    "note": "",
    "topics": [
      "data structures",
      "strings",
      "string suffix structures"
    ],
    "id": 12936
  },
  {
    "title": "Las invitaciones al juego de croquet",
    "url": "https://omegaup.com/arena/problem/Las-invitaciones-al-juego-de-cro",
    "history": "Alicia caminaba por el bosque, cuando de pronto vio pasar al Pez Criado de la Reina. El Pez Criado estaba muy apurado, pues cargaba M invitaciones al juego de croquet de la Reina, las cuales debi\u0301a entregar en algunas de las N casas dispersas en el bosque. Alicia le pregunto\u0301 al Pez Criado si podi\u0301a ayudarle, pero e\u0301ste no le hizo ningu\u0301n caso y siguio\u0301 entregando las invitaciones. Sin embargo, Alicia se dio cuenta de que algo raro estaba pasando: el Pez Criado vei\u0301a la direccio\u0301n de la casa con un ojo y la direccio\u0301n de la invitacio\u0301n con el otro y simplemente dejaba la invitacio\u0301n alli\u0301 cuando la direccio\u0301n de la casa era un prefijo de la direccio\u0301n de la invitacio\u0301n. \u00bfEn cua\u0301ntas casas distintas pudo haber dejado el Pez Criado cada invitacio\u0301n?",
    "input": "Un entero N seguido de las N direcciones C_ 1, C_ 2, . . . , C_ N de las casas. Posteriormente, un entero M seguido de las M direcciones V_ 1, V_ 2, . . . , V_ M de las invitaciones.",
    "output": "Una secuencia de M enteros K_ 1, K_ 2, . . . , K_ M tales que el Pez Criado pudo haber dejado la invitacio\u0301n V_ I en K_ I casas distintas. # RangosPuedes suponer que 1 \u2264 N, M \u2264 10^ 5 y que todas las direcciones son enteros positivos menores que 10^ 9.",
    "note": "",
    "topics": [
      "string suffix structures",
      "strings",
      "data structures",
      "binary search"
    ],
    "id": 12609
  },
  {
    "title": "El hechicero",
    "url": "https://omegaup.com/arena/problem/El-hechicero",
    "history": "< br/ > El hechicero con sus poderes, sus grandes poderes. < br/ > < br/ > Bajo el conjuro de este nigromante ha decidido convocar la mayor cantidad de hechizos de su grimorio con un solo ca\u0301ntico. Cuando conjura un hechizo, si hay algu\u0301n otro hechizo que sea prefijo de este, tambie\u0301n se invocara\u0301. < br/ > < br/ > Un ejemplo seri\u0301a si el hechicero dice \" ExoriIco\" y tiene el hechizo de \" Exori\" se casteara\u0301n ambos a la vez, sin embargo si dice \" AbraKadabra\" y tiene el hechizo de \" Kadabra\" solo se casteara\u0301 \" AbraKadabra\" . < br/ > < br/ > Dado N hechizos en su grimorio imprime el hechizo que hara\u0301 que salgan la mayor cantidad de magias, junto con la cantidad de magias. En caso de que haya un empate escribir el ma\u0301s pequen\u0303o lexicogra\u0301ficamente. < br/ > < br/ > < i> ( La suma de todos los caracteres en los hechizos no excedera\u0301 1e6) < / i>",
    "input": "Un entero N que indica la cantidad de hechizos en el libro. < br/ > < br/ > En las siguientes N lineas habra\u0301 un hechizo, que consta de una palabra sin espacios de solo letras minu\u0301sculas.",
    "output": "< br/ > El hechizo con el que castea la mayor cantidad de magias seguido de las magias que castea.",
    "note": "",
    "topics": [
      "data structures",
      "strings",
      "string suffix structures"
    ],
    "id": 11444
  },
  {
    "title": "cignuz(); y las palabras chidas",
    "url": "https://omegaup.com/arena/problem/cignuz-y-las-palabras-chidas",
    "history": "cignuz( ) ; es una empresa de software, tu\u0301 como buen estudiante a punto de graduarte quieres impresionarlos para que te contraten, ellos consideran a ciertas palabras muy chidas, y a las personas que las utilizan al hablar como muy chidos, por lo que si las usas en presencia de ellos los convencera\u0301s ma\u0301s de que te contraten. Sin embargo, como en todo, hay un problema, tu no sueles usar esas palabras al hablar ( No eres chido) . El dinero mueve al mundo y contigo no es la excepcio\u0301n por lo que has decidido hacer que tu vocabulario sea como el de ellos ( usar las palabras chidas) , asi\u0301 que quieres aprender lo ma\u0301s ra\u0301pido posible, es decir, no quieres aprender desde 0 las palabras. Mientras te preparas para graduarte de la universidad has investigado cuales son las palabras ma\u0301s chidas que ellos dicen, y ya hiciste una lista con la misma cantidad de palabras de tu vocabulario cotidiano, cada una de estas quieres convertirla en una palabra chida y asi\u0301 ser lo suficientemente chido para trabajar en cignuz( ) ; Ejemplo: \" chilaquiles\" es una palabra chida, mientras que \" chicharo\" es una palabra de cotidiana; para aprender desde \" chicharo\" la palabra \" chilaquiles\" solo debes de cambiar \" charo\" por \" laquiles\" de tu vocabulario, esto ya que conoces \" chi\" y ambas palabras la contienen. Para cada palabra de tu lista debes de decir que\u0301 palabra chida es la que vas a aprender, en caso de que puedas aprender varias debes escoger la que haya aparecido antes en la entrada en la lista de las palabras chidas. ! [ enter image description here] [ 1] Como Marin siempre dice: \" Creo que eso te da la idea para poderlo sacarlo\" .",
    "input": "La primera linea contendra\u0301 una cantidad ` N` de palabras chidas. Las siguientes ` N` palabras pertenecen a las palabras chidas que dicen en cignuz( ) ; Las siguientes ` N` palabras pertenecen a la lista que tu\u0301 has hecho.",
    "output": "` N` lineas, cada una indicando una palabra de tu lista en el orden que fueron dadas y la palabra chida que aprendiste. | | input1chilaquileschicharo| | output1 1| | end| | input2juanjosemaringraciasportodo| | output1 12 2| | end| | input6clubalgoritmiaalgocuceicualescualesalgodoncucocuandocuatrocuidadosoalga| | output1 22 43 54 65 16 3| | end# Li\u0301mites- 1 < = N < = 100, 000- 1 < = | chida[ i] | < = 600- 1 < = | lista[ i] | < = 600- 1 < = \u2211_ i = 1 ^ N | chida[ i] | + \u2211_ i = 1 ^ N | lista[ i] | < = 1, 000, 000",
    "note": "",
    "topics": [
      "dp",
      "string suffix structures",
      "dfs and similar",
      "data structures",
      "strings"
    ],
    "id": 9122
  },
  {
    "title": "Fallas de Whatsapp",
    "url": "https://omegaup.com/arena/problem/Fallas-de-Whatsapp",
    "history": "Whatsapp empezo\u0301 a fallar hace unas horas junto con otras pa\u0301ginas web y te han pedido tu ayuda para reparar los dan\u0303os devastadores antes de que todas las plataformas se consumen. Todos los chats de grupo se han borrado y lo unico que queda son listas de dos amigos que fueron parte de esos grupos. Puedes reconstruir los grupos uniendo todos los amigos que son mutuos. Por ejemplo, si Edgar y Marvin son amigos y Edgar y Miguel ta\u0301mbien son amigos, se puede formar un grupo con estas tres personas.",
    "input": "Un nu\u0301mero * * N* * de amistades, cada amistad tendra dos strings con los nombres de cada persona. Se puede asegurar que un par de personas nunca se repite.",
    "output": "* * M* * li\u0301neas con cada grupo de personas. Se debe ordenar cada miembro de un grupo alfabeticamente por nombre y los grupos deben estar ordenados alfabeticamente entre ellos mismos. # Ejemplos| | input5Pablo JamesEfrain JamesPablo JoseMarvin EdgarEdgar Miguel| | outputEdgar Marvin MiguelEfrain James Jose Pablo| | endAqui\u0301, se imprimio\u0301 el grupo de Edgar, Marvin y Miguel primero porque Edgar viene antes que Efrai\u0301n alfabeticamente. Una gra\u0301fica de los grupos puede ser visto aqui: \u2014\u2014\u2014- ! [ Grupos] [ 1] \u2014\u2014\u2014- # Li\u0301mites1 \u2264 M \u2264 N \u2264 10000",
    "note": "",
    "topics": [
      "strings",
      "graphs",
      "sortings",
      "string suffix structures",
      "data structures"
    ],
    "id": 8636
  },
  {
    "title": "Max XOR par",
    "url": "https://omegaup.com/arena/problem/Max-XOR-par",
    "history": "Dados N nu\u0301meros, encuentra el par cuyo XOR es el ma\u0301ximo de entre todas los pares posibles. Imprime el XOR entre esos dos nu\u0301meros.",
    "input": "La primera li\u0301nea tiene a N ( 2 < = N < = 10^ 5) . En la siguiente li\u0301nea tendremos N nu\u0301meros ( 0 < = N_ i < 2 ^ 14 )",
    "output": "El resultado de hacer XOR con el mejor par de nu\u0301meros.",
    "note": "",
    "topics": [
      "string suffix structures",
      "data structures",
      "strings",
      "math"
    ],
    "id": 5558
  },
  {
    "title": "A Lot of Games",
    "url": "https://omegaup.com/arena/problem/A-Lot-of-Games",
    "history": "Andrew, Fedor and Alex are inventive guys. Now they invent the game with strings for two players. Given a group of n non- empty strings. During the game two players build the word together, initially the word is empty. The players move in turns. On his step player must add a single letter in the end of the word, the resulting word must be prefix of at least one string from the group. A player loses if he cannot move. Andrew and Alex decided to play this game k times. The player who is the loser of the i- th game makes the first move in the ( i + 1) - th game. Guys decided that the winner of all games is the player who wins the last ( k- th) game. Andrew and Alex already started the game. Fedor wants to know who wins the game if both players will play optimally. Help him.",
    "input": "The first line contains two integers, n and k ( 1 \u2264 n \u2264 10 ^ 5; 1 \u2264 k \u2264 10 ^ 9 ) Each of the next n lines contains a single non- empty string from the given group. The total length of all strings from the group doesn' t exceed 10^ 5. Each string of the group consists only of lowercase English letters.",
    "output": "If the player who moves first wins, print \" First\" , otherwise print \" Second\" ( without the quotes) .",
    "note": "",
    "topics": [
      "dp",
      "string suffix structures",
      "dfs and similar",
      "strings",
      "data structures"
    ],
    "id": 5557
  },
  {
    "title": "Cuenta de prefijos",
    "url": "https://omegaup.com/arena/problem/Cuenta-de-prefijos",
    "history": "Escribe un programa que lea N cadenas y luego M prefijos. Tu programa debe imprimir cua\u0301ntas de las N cadenas empiezan con cada prefijo dado.",
    "input": "El entero N seguido de N cadenas no vaci\u0301as. Posteriormente el entero M seguido de M prefijos no vaci\u0301os. Puedes suponer que 1 \u2264 N, M \u2264 100000, que tanto las cadenas como los prefijos so\u0301lo contienen letras minu\u0301sculas y que tienen una longitud de a lo mucho 10 caracteres. No habra\u0301 cadenas repetidas ( aunque puede haber prefijos repetidos) .",
    "output": "Para cada prefijo dado, un entero que sea el nu\u0301mero de cadenas que inician con ese prefijo.",
    "note": "",
    "topics": [
      "strings",
      "trees",
      "string suffix structures",
      "graphs",
      "data structures"
    ],
    "id": 2874
  },
  {
    "title": "Cojuntos de Hyper-prefijos",
    "url": "https://omegaup.com/arena/problem/hprefix",
    "history": "Llamemos prefixicidad a que tan bueno es un conjunto en terminos de prefijos. La prefixidad la mediremos como la longitud del prefijo comun mas largo * numero de cadenas en el conjunto. Por ejemplo la prefixidad del conjunto 000, 001, 0011 es 6. # ProblemaDado un conjunto de cadenas binarias. Encuentra la mayor prefixidad entre todos los subconjuntos de estas cadenas binarias",
    "input": "N el numero de elementos en el conjunto. Seguido de N lineas conteniendo cadenas binarias* * Ejemplo: * * 40000000110101010",
    "output": "El valor de prefixidad mas grande entre todas los posibles subconjuntos binarios. * * Ejemplo: * * 6# Li\u0301mitesN \u2264 50000Cada cadena binaria tendra\u0301 entre 1 y 200 caracteres",
    "note": "",
    "topics": [
      "strings",
      "string suffix structures",
      "data structures"
    ],
    "id": 1496
  },
  {
    "title": "Cool Editor",
    "url": "https://omegaup.com/arena/problem/Cool-Editor",
    "history": "# Cool EditorYou have just discovered a new text editor even better than Vim! This new editor is called Cool EDITor ( or simply shortened * cedit* ) and the thing that makes it so cool is the * base word* feature. The * base word* is a user defined word such that every time the user starts a new token in the text, * cedit* automatically writes the base word! This is pretty useful when you write long codes. For example, if you set the * base word* as * \u201cin\u201d* you can type the words * \u201cint\u201d* , * \u201cinclude\u201d* and * \u201cinline\u201d* faster only adding some other letters at the end of the token. Your typing skills are pretty bad and you only know how to use the backspace key ( to delete a letter) and all the English letters keys ( uppercase included) . So in the previous example, if you want to type the word * \u201cusing\u201d* you should delete all letters and start over again. Let\u2019s say that if you have two words W and V, the * edition distance* between them is the number of types you must do in order to transform word W into word V ( or viceversa) . For example, the * edition distance* between * \u201cusing\u201d* and * \u201cin\u201d* is 7, since you have to delete all the word and start over, but the distance between words * \u201cquery\u201d* and * \u201cqueue\u201d* is just 4 as follows: * \u201cquery\u201d* > * \u201cquer\u201d* > * \u201cque\u201d* > * \u201cqueu\u201d* > * \u201cqueue\u201d* . Since you want to type faster, you want to determine the best * base word* such that the * maximum edition distance* from the * base word* to any word you use to code is as small as possible. Note that the * base word* may not be in the given list of words you know.",
    "input": "The first line of input contains an integer n ( 1 \u2264 n \u2264 1, 000) , the number of words you use to code. Each of the following n lines contains a string with at most 1, 000 characters, representing a word you use to code. Each character is a lowercase or uppercase letter from the English alphabet.",
    "output": "Print an integer representing the * maximum edition distance* you got choosing the best * base word* possible. # Sample| | input3setqueryqueue| | output4| | end< br> In the sample input the best * base word* is * \u201cq\u201d* and the * edition distance* to each of the words is exactly 4.",
    "note": "",
    "topics": [
      "data structures",
      "shortest paths",
      "strings",
      "string suffix structures",
      "dp"
    ],
    "id": 1267
  },
  {
    "title": "Prefijos de palabras de diccionarios",
    "url": "https://omegaup.com/arena/problem/ppd",
    "history": "Desde pequen\u0303o te han gustado mucho los diccionarios y con frecuencia te preguntas cua\u0301ntas palabras existen queempiecen con determinadas letras. Ya que finalmente aprendiste programacio\u0301n crees poder contestar estas preguntasra\u0301pida y fa\u0301cilmente.",
    "input": "Un entero N seguido de un diccionario de N palabras y despue\u0301s un entero M seguido de M prefijos. Puedessuponer que 0 \u2264 N \u2264 10, 000 y 0 \u2264 M \u2264 10, 000. Tanto las palabras del diccionario como los prefijos so\u0301lo contendra\u0301n letrasminu\u0301sculas y no superara\u0301n los 15 caracteres de longitud.",
    "output": "Para cada uno de los M prefijos, un entero que sea el nu\u0301mero de palabras del diccionario que comienzan con dichoprefijo.",
    "note": "",
    "topics": [
      "string suffix structures",
      "graphs",
      "data structures",
      "strings",
      "trees",
      "implementation"
    ],
    "id": 1002
  },
  {
    "title": "Secuencias sim\u00e9tricas",
    "url": "https://omegaup.com/arena/problem/Secuencias-simetricas",
    "history": "Una secuencia de cuatro di\u0301gitos es sime\u0301trica si el primer di\u0301gito es igual al u\u0301ltimo y el segundo di\u0301gito es igual al tercero. Por ejemplo, la secuencia 1 2 2 1 es sime\u0301trica mientras que la secuencia 1 2 2 3 no lo es. Escribe un programa que lea una secuencia de cuatro di\u0301gitos y calcule si es o no sime\u0301trica.",
    "input": "Cuatro enteros de un di\u0301gito separados por espacios.",
    "output": "El valor 1 si la secuencia dada es sime\u0301trica o el valor 0 en caso contrario.",
    "note": "",
    "topics": [
      "string suffix structures",
      "implementation",
      "strings"
    ],
    "id": 7911
  }
]